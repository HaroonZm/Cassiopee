================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Importation de la classe Counter depuis le module collections.
# Counter sert à compter le nombre d'occurrences de chaque élément dans une séquence.
from collections import Counter

# Définition d'une constante MOD dont la valeur est 998244353.
# Cette constante est utilisée pour effectuer des calculs de modulo afin d'éviter les dépassements d'entiers.
MOD = 998244353

# Lecture d'une valeur entière depuis l'entrée standard, correspondant au nombre d'éléments du tableau D.
# La fonction input() lit une ligne de texte, int() la convertit en entier.
N = int(input())

# Lecture d'une ligne contenant N entiers séparés par des espaces.
# input() lit la ligne, split() la découpe en une liste de chaînes, map(int, ...) convertit chaque chaîne en entier.
# list(...) crée une liste à partir du résultat.
D = list(map(int, input().split()))

# Création d'un objet Counter "C" à partir de la liste D.
# Cela va associer à chaque valeur de D le nombre de fois où elle apparaît.
C = Counter(D)

# Vérification que la première valeur de la liste D est 0.
# Cela s'écrit D[0] != 0, ce qui teste si le premier élément de D n'est pas 0.
# Vérification que le nombre d'occurrences de 0 dans la liste D est strictement égal à 1.
# Cela s'écrit C[0] != 1.
if D[0] != 0 or C[0] != 1:
    # Si au moins une des conditions précédentes n'est pas respectée,
    # alors la sortie doit être 0 selon l'énoncé du problème.
    print(0)
    # exit() arrête immédiatement l'exécution du script.
    exit()

# Initialisation de la variable ans à 1. Cette variable contiendra la réponse finale.
ans = 1

# La boucle for va parcourir tous les entiers i allant de 1 jusqu'à la valeur maximale de D incluse.
# range(1, max(D)+1) génère cette séquence.
for i in range(1, max(D)+1):
    # Si la valeur "i" n'est pas présente dans la liste D (c'est-à-dire si son compte est 0 dans Counter),
    # alors cela signifie que la structure demandée n'est pas correcte.
    if C[i] == 0:
        # On affecte 0 à la réponse finale pour indiquer un cas impossible.
        ans = 0
        # On sort prématurément de la boucle car le calcul ne sert plus à rien.
        break
    else:
        # Si la valeur "i" est bien présente, on effectue le calcul suivant :
        # On multiplie la réponse courante "ans" par C[i-1] élevé à la puissance C[i], modulo MOD.
        # pow(a, b, c) calcule (a**b) % c de façon efficace, même pour de grandes valeurs.
        ans *= pow(C[i-1], C[i], MOD)
        # On applique le modulo à la variable ans après chaque multiplication pour éviter toute surcharge mémoire.
        ans %= MOD

# Une fois la boucle terminée, on affiche la réponse finale.
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Import' (ID: 19998)
  → Token d'amorce (pas de prédiction)

Token 2: 'ation' (ID: 387)
  → Token d'amorce (pas de prédiction)

Token 3: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6628449559211731
    2. '```' → logprob: -1.0378448963165283
    3. 'import' → logprob: -2.1628448963165283
    4. '`' → logprob: -5.162845134735107
    5. '_' → logprob: -5.912845134735107
    6. '#' → logprob: -6.287845134735107
    7. ' import' → logprob: -6.787845134735107
    8. '[' → logprob: -7.287845134735107
    9. '``' → logprob: -7.412845134735107
    10. '.' → logprob: -7.662845134735107

Token 4: ' la' (ID: 557)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -0.018955610692501068
    2. ' numpy' → logprob: -4.518955707550049
    3. ' os' → logprob: -5.268955707550049
    4. ' la' → logprob: -6.268955707550049
    5. 'p' → logprob: -8.39395523071289
    6. ' ' → logprob: -9.14395523071289
    7. ' ' → logprob: -9.14395523071289
    8. 'numpy' → logprob: -9.39395523071289
    9. 'os' → logprob: -9.51895523071289
    10. ' flask' → logprob: -9.89395523071289

Token 5: ' classe' (ID: 29329)
  Prédit: 'bibli'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bibli' → logprob: -0.7366958856582642
    2. 'os' → logprob: -1.3616958856582642
    3. 'p' → logprob: -2.1116957664489746
    4. 'import' → logprob: -3.1116957664489746
    5. ' pandas' → logprob: -3.3616957664489746
    6. 'lib' → logprob: -3.6116957664489746
    7. 'numpy' → logprob: -4.611695766448975
    8. ' bibliothèque' → logprob: -5.361695766448975
    9. ' os' → logprob: -5.611695766448975
    10. 'module' → logprob: -5.986695766448975

Token 6: ' Counter' (ID: 32251)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10535499453544617
    2. '_' → logprob: -2.8553550243377686
    3. ' from' → logprob: -4.9803547859191895
    4. 's' → logprob: -5.2303547859191895
    5. ' space' → logprob: -5.3553547859191895
    6. ''' → logprob: -5.8553547859191895
    7. '`' → logprob: -5.9803547859191895
    8. '.' → logprob: -6.1053547859191895
    9. '```' → logprob: -6.1053547859191895
    10. ' ' → logprob: -6.2303547859191895

Token 7: ' depuis' (ID: 16277)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.13503430783748627
    2. '```' → logprob: -2.2600343227386475
    3. ' from' → logprob: -4.510034084320068
    4. '`' → logprob: -5.760034084320068
    5. ',' → logprob: -5.885034084320068
    6. ':' → logprob: -6.760034084320068
    7. '.' → logprob: -6.885034084320068
    8. 'f' → logprob: -7.260034084320068
    9. 'a' → logprob: -7.385034084320068
    10. '(' → logprob: -8.385034561157227

Token 8: ' le' (ID: 505)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.012615947052836418
    2. ' collections' → logprob: -4.387616157531738
    3. '```' → logprob: -10.012616157531738
    4. 'collection' → logprob: -10.887616157531738
    5. 'from' → logprob: -11.012616157531738
    6. '`' → logprob: -11.887616157531738
    7. 'col' → logprob: -12.012616157531738
    8. ' ' → logprob: -12.137616157531738
    9. ' from' → logprob: -13.512616157531738
    10. '.collections' → logprob: -13.637616157531738

Token 9: ' module' (ID: 8827)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0028915368020534515
    2. ' collections' → logprob: -5.877891540527344
    3. 'collection' → logprob: -9.627891540527344
    4. '```' → logprob: -11.377891540527344
    5. 'col' → logprob: -13.127891540527344
    6. 'collect' → logprob: -13.252891540527344
    7. 'from' → logprob: -13.502891540527344
    8. ' collection' → logprob: -14.002891540527344
    9. 'Collections' → logprob: -14.627891540527344
    10. '.collections' → logprob: -14.752891540527344

Token 10: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.024586578831076622
    2. ' collections' → logprob: -3.7745866775512695
    3. '```' → logprob: -7.1495866775512695
    4. '`' → logprob: -8.77458667755127
    5. 'collection' → logprob: -8.89958667755127
    6. 'from' → logprob: -9.27458667755127
    7. 'col' → logprob: -10.02458667755127
    8. ' from' → logprob: -10.14958667755127
    9. ' ' → logprob: -10.89958667755127
    10. 'collect' → logprob: -11.14958667755127

Token 11: '.
' (ID: 558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.013336466625332832
    2. '```' → logprob: -4.638336658477783
    3. ' from' → logprob: -5.763336658477783
    4. '.' → logprob: -9.263336181640625
    5. '`' → logprob: -9.388336181640625
    6. '\' → logprob: -9.638336181640625
    7. ',' → logprob: -10.013336181640625
    8. 'f' → logprob: -10.388336181640625
    9. 'import' → logprob: -10.638336181640625
    10. '.from' → logprob: -11.013336181640625

Token 12: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.22266383469104767
    2. '```' → logprob: -1.7226638793945312
    3. ' from' → logprob: -4.097663879394531
    4. '`' → logprob: -6.722663879394531
    5. '\' → logprob: -7.222663879394531
    6. ',' → logprob: -7.472663879394531
    7. '.' → logprob: -7.597663879394531
    8. 'import' → logprob: -7.972663879394531
    9. '#' → logprob: -8.722663879394531
    10. 'a' → logprob: -8.722663879394531

Token 13: ' Counter' (ID: 32251)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.011744722723960876
    2. ' from' → logprob: -4.511744499206543
    3. 'f' → logprob: -8.511744499206543
    4. '```' → logprob: -9.011744499206543
    5. 'fr' → logprob: -9.136744499206543
    6. ' ' → logprob: -9.136744499206543
    7. '#' → logprob: -9.261744499206543
    8. ' #' → logprob: -11.886744499206543
    9. 'import' → logprob: -12.011744499206543
    10. ' ```' → logprob: -12.261744499206543

Token 14: ' sert' (ID: 52405)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0030499622225761414
    2. '.' → logprob: -6.128049850463867
    3. ' (' → logprob: -7.878049850463867
    4. '('' → logprob: -9.003049850463867
    5. 'import' → logprob: -9.628049850463867
    6. 's' → logprob: -9.878049850463867
    7. ''' → logprob: -10.128049850463867
    8. '(
' → logprob: -10.378049850463867
    9. '```' → logprob: -10.503049850463867
    10. '.from' → logprob: -10.503049850463867

Token 15: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.026372525840997696
    2. ' ' → logprob: -3.9013724327087402
    3. 'à' → logprob: -5.27637243270874
    4. ' a' → logprob: -8.776372909545898
    5. '  ' → logprob: -9.526372909545898
    6. ' principalement' → logprob: -9.526372909545898
    7. 's' → logprob: -9.776372909545898
    8. ' uniquement' → logprob: -9.776372909545898
    9. ' essentiellement' → logprob: -9.776372909545898
    10. ''à' → logprob: -9.901372909545898

Token 16: ' compter' (ID: 81694)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.20856092870235443
    2. ' compter' → logprob: -1.7085609436035156
    3. 'com' → logprob: -5.208560943603516
    4. '```' → logprob: -7.958560943603516
    5. ' compt' → logprob: -8.083560943603516
    6. 'count' → logprob: -9.083560943603516
    7. ' comp' → logprob: -9.208560943603516
    8. '#' → logprob: -9.458560943603516
    9. 'con' → logprob: -9.583560943603516
    10. '   ' → logprob: -9.708560943603516

Token 17: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 18: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.29328787326812744
    2. ' nombre' → logprob: -1.4182878732681274
    3. 's' → logprob: -4.543287754058838
    4. 'élé' → logprob: -7.168287754058838
    5. ' nombres' → logprob: -8.168288230895996
    6. 'Nombre' → logprob: -9.668288230895996
    7. 'nb' → logprob: -10.043288230895996
    8. 'n' → logprob: -10.168288230895996
    9. '_nombre' → logprob: -10.543288230895996
    10. ' s' → logprob: -10.543288230895996

Token 19: ' d' (ID: 272)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2603299617767334
    2. ' ' → logprob: -2.2603299617767334
    3. ' de' → logprob: -2.7603299617767334
    4. 'd' → logprob: -4.0103302001953125
    5. ' d' → logprob: -4.0103302001953125
    6. '#' → logprob: -4.8853302001953125
    7. 'de' → logprob: -5.2603302001953125
    8. 'es' → logprob: -6.1353302001953125
    9. '<|end|>' → logprob: -6.3853302001953125
    10. '  ' → logprob: -6.6353302001953125

Token 20: ''occ' (ID: 158932)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8518361449241638
    2. 'e' → logprob: -1.1018362045288086
    3. ' occurrences' → logprob: -2.7268362045288086
    4. ''' → logprob: -2.9768362045288086
    5. ''occ' → logprob: -3.6018362045288086
    6. ' '' → logprob: -3.8518362045288086
    7. 'a' → logprob: -4.101836204528809
    8. 'es' → logprob: -4.851836204528809
    9. ' espaces' → logprob: -4.976836204528809
    10. '  ' → logprob: -5.351836204528809

Token 21: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.032101359218358994
    2. 'u' → logprob: -3.9071013927459717
    3. 'urrence' → logprob: -5.157101154327393
    4. 'ur' → logprob: -6.157101154327393
    5. 'urrencies' → logprob: -6.282101154327393
    6. 'urr' → logprob: -6.782101154327393
    7. 'URRENC' → logprob: -9.28210163116455
    8. '```' → logprob: -9.28210163116455
    9. 'urre' → logprob: -9.65710163116455
    10. 'urrent' → logprob: -9.90710163116455

Token 22: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.054302096366882324
    2. ' d' → logprob: -3.679302215576172
    3. ' de' → logprob: -3.929302215576172
    4. 's' → logprob: -6.304302215576172
    5. ' des' → logprob: -6.554302215576172
    6. '.' → logprob: -6.554302215576172
    7. '  ' → logprob: -6.929302215576172
    8. 'from' → logprob: -7.179302215576172
    9. ' ,' → logprob: -8.054302215576172
    10. 'd' → logprob: -8.679302215576172

Token 23: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.011421612463891506
    2. 'cha' → logprob: -5.7614216804504395
    3. ' ' → logprob: -6.0114216804504395
    4. ' mots' → logprob: -6.3864216804504395
    5. ' each' → logprob: -6.6364216804504395
    6. ' cha' → logprob: -7.2614216804504395
    7. ' tokens' → logprob: -7.8864216804504395
    8. ' chacune' → logprob: -7.8864216804504395
    9. ' chacun' → logprob: -8.386421203613281
    10. 'élé' → logprob: -8.761421203613281

Token 24: ' élément' (ID: 99627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11034297943115234
    2. 'élé' → logprob: -2.8603429794311523
    3. ' élément' → logprob: -3.1103429794311523
    4. ' mot' → logprob: -7.235342979431152
    5. ' caractère' → logprob: -7.860342979431152
    6. 'mot' → logprob: -7.860342979431152
    7. ' token' → logprob: -8.485342979431152
    8. 'element' → logprob: -8.735342979431152
    9. ' element' → logprob: -8.735342979431152
    10. '  ' → logprob: -9.235342979431152

Token 25: ' dans' (ID: 2671)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8423653841018677
    2. ' ' → logprob: -1.0923653841018677
    3. 'from' → logprob: -1.9673653841018677
    4. ',' → logprob: -3.592365264892578
    5. '```' → logprob: -3.842365264892578
    6. ' from' → logprob: -4.592365264892578
    7. 's' → logprob: -4.842365264892578
    8. 'import' → logprob: -5.342365264892578
    9. '
' → logprob: -5.467365264892578
    10. '\' → logprob: -5.592365264892578

Token 26: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.38290631771087646
    2. ' ' → logprob: -1.2579063177108765
    3. ' un' → logprob: -3.882906436920166
    4. ' la' → logprob: -4.882906436920166
    5. 'une' → logprob: -5.632906436920166
    6. ' l' → logprob: -7.132906436920166
    7. ' ' → logprob: -7.507906436920166
    8. 'la' → logprob: -9.007905960083008
    9. ' a' → logprob: -9.007905960083008
    10. '  ' → logprob: -9.132905960083008

Token 27: ' sé' (ID: 7462)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.10847491025924683
    2. ' sequence' → logprob: -2.9834749698638916
    3. ' collection' → logprob: -3.7334749698638916
    4. 'liste' → logprob: -4.1084747314453125
    5. ' ' → logprob: -5.3584747314453125
    6. 'sequence' → logprob: -5.8584747314453125
    7. 'collection' → logprob: -6.8584747314453125
    8. ' sé' → logprob: -6.8584747314453125
    9. ' list' → logprob: -7.4834747314453125
    10. ' iterable' → logprob: -7.4834747314453125

Token 28: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0025534271262586117
    2. 'q' → logprob: -6.127553462982178
    3. 'qu' → logprob: -8.62755298614502
    4. 'quent' → logprob: -10.00255298614502
    5. 'que' → logprob: -10.25255298614502
    6. '#' → logprob: -10.50255298614502
    7. 'r' → logprob: -10.62755298614502
    8. 'quences' → logprob: -10.87755298614502
    9. 'QUENCE' → logprob: -11.25255298614502
    10. 'rie' → logprob: -12.00255298614502

Token 29: '.
' (ID: 558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.03089427389204502
    2. '```' → logprob: -4.2808942794799805
    3. ' from' → logprob: -4.9058942794799805
    4. '.' → logprob: -5.0308942794799805
    5. ',' → logprob: -7.4058942794799805
    6. '\' → logprob: -7.9058942794799805
    7. '\n' → logprob: -8.15589427947998
    8. '
' → logprob: -8.15589427947998
    9. ' ' → logprob: -8.78089427947998
    10. 'import' → logprob: -8.90589427947998

Token 30: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.005125596188008785
    2. '```' → logprob: -6.130125522613525
    3. 'f' → logprob: -6.755125522613525
    4. 'fr' → logprob: -7.005125522613525
    5. ' from' → logprob: -8.005125999450684
    6. '#' → logprob: -9.255125999450684
    7. 'import' → logprob: -9.255125999450684
    8. '\' → logprob: -9.630125999450684
    9. 'fro' → logprob: -9.880125999450684
    10. 'a' → logprob: -10.255125999450684

Token 31: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.12711676955223083
    2. ' ' → logprob: -2.1271166801452637
    3. 'collections' → logprob: -8.877117156982422
    4. ' collection' → logprob: -10.752117156982422
    5. '  ' → logprob: -10.877117156982422
    6. ' ' → logprob: -12.377117156982422
    7. '.collections' → logprob: -13.377117156982422
    8. ' space' → logprob: -13.752117156982422
    9. ' ﻿' → logprob: -14.877117156982422
    10. ' colle' → logprob: -15.252117156982422

Token 32: ' import' (ID: 1588)
  Prédit: 'ctions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctions' → logprob: -0.532669186592102
    2. 's' → logprob: -2.1576690673828125
    3. 'import' → logprob: -2.4076690673828125
    4. 'cts' → logprob: -2.4076690673828125
    5. ' import' → logprob: -3.0326690673828125
    6. 'collections' → logprob: -3.9076690673828125
    7. 'ts' → logprob: -4.1576690673828125
    8. 't' → logprob: -4.7826690673828125
    9. '.collections' → logprob: -4.9076690673828125
    10. '.' → logprob: -5.2826690673828125

Token 33: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.048603158444166183
    2. 'Counter' → logprob: -3.048603057861328
    3. ' counter' → logprob: -11.673603057861328
    4. '.Counter' → logprob: -13.048603057861328
    5. ' ' → logprob: -13.173603057861328
    6. ' collections' → logprob: -13.298603057861328
    7. '_counter' → logprob: -14.423603057861328
    8. ' Coun' → logprob: -15.173603057861328
    9. 'counter' → logprob: -15.548603057861328
    10. ' ' → logprob: -15.798603057861328

Token 34: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32068464159965515
    2. '

' → logprob: -1.6956846714019775
    3. '' → logprob: -3.5706846714019775
    4. '\n' → logprob: -3.8206846714019775
    5. '<|end|>' → logprob: -4.320684432983398
    6. '\' → logprob: -5.195684432983398
    7. ' ' → logprob: -5.320684432983398
    8. ' 

' → logprob: -5.945684432983398
    9. '#' → logprob: -6.445684432983398
    10. '(' → logprob: -6.695684432983398

Token 35: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1189414262771606
    2. '(' → logprob: -1.6189414262771606
    3. '#' → logprob: -1.8689414262771606
    4. '
' → logprob: -2.118941307067871
    5. '\n' → logprob: -2.993941307067871
    6. 'd' → logprob: -3.368941307067871
    7. 'c' → logprob: -3.743941307067871
    8. '\' → logprob: -4.618941307067871
    9. '(
' → logprob: -4.743941307067871
    10. 'n' → logprob: -4.743941307067871

Token 36: ' Dé' (ID: 27247)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.9783425331115723
    2. ' fruits' → logprob: -1.9783425331115723
    3. ' words' → logprob: -2.1033425331115723
    4. ' word' → logprob: -2.6033425331115723
    5. ' text' → logprob: -3.1033425331115723
    6. 'data' → logprob: -3.2283425331115723
    7. 'text' → logprob: -3.3533425331115723
    8. '#' → logprob: -3.4783425331115723
    9. 'texte' → logprob: -3.7283425331115723
    10. ' #' → logprob: -4.228342533111572

Token 37: 'fin' (ID: 6994)
  Prédit: 'fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.028724748641252518
    2. 'f' → logprob: -3.7787246704101562
    3. 'claration' → logprob: -5.278724670410156
    4. '#' → logprob: -8.528724670410156
    5. 'fi' → logprob: -9.653724670410156
    6. 'tection' → logprob: -11.028724670410156
    7. ' finition' → logprob: -11.153724670410156
    8. 'clar' → logprob: -11.528724670410156
    9. 'inition' → logprob: -11.653724670410156
    10. '
' → logprob: -12.028724670410156

Token 38: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.03223087266087532
    2. 'ir' → logprob: -3.657230854034424
    3. 'inition' → logprob: -5.907230854034424
    4. 'i' → logprob: -6.157230854034424
    5. 'ission' → logprob: -7.782230854034424
    6. 'tion' → logprob: -8.282231330871582
    7. '#' → logprob: -8.907231330871582
    8. 'import' → logprob: -10.157231330871582
    9. 'issage' → logprob: -10.532231330871582
    10. 'e' → logprob: -10.782231330871582

Token 39: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002705250633880496
    2. ' de' → logprob: -6.877705097198486
    3. '  ' → logprob: -8.252705574035645
    4. ' d' → logprob: -8.377705574035645
    5. ' ' → logprob: -8.377705574035645
    6. '<|end|>' → logprob: -8.877705574035645
    7. '_' → logprob: -9.127705574035645
    8. 'def' → logprob: -9.502705574035645
    9. ' a' → logprob: -9.627705574035645
    10. 'd' → logprob: -9.627705574035645

Token 40: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2995338439941406
    2. 'a' → logprob: -2.6745338439941406
    3. ' ' → logprob: -2.9245338439941406
    4. 'u' → logprob: -3.1745338439941406
    5. ''' → logprob: -3.1745338439941406
    6. ''une' → logprob: -3.9245338439941406
    7. ' e' → logprob: -4.299533843994141
    8. ' a' → logprob: -4.424533843994141
    9. ' une' → logprob: -6.424533843994141
    10. ' ' → logprob: -6.799533843994141

Token 41: ' constante' (ID: 49652)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.5281801223754883
    2. ' fonction' → logprob: -2.1531801223754883
    3. ' phrase' → logprob: -2.5281801223754883
    4. ' ' → logprob: -2.6531801223754883
    5. ' function' → logprob: -3.1531801223754883
    6. ' ' → logprob: -3.1531801223754883
    7. 'fonction' → logprob: -3.7781801223754883
    8. ' chaîne' → logprob: -4.403180122375488
    9. ' f' → logprob: -4.903180122375488
    10. 'liste' → logprob: -5.528180122375488

Token 42: ' MOD' (ID: 32868)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33291003108024597
    2. 'SPACE' → logprob: -1.7079100608825684
    3. 'S' → logprob: -3.2079100608825684
    4. 'ES' → logprob: -3.8329100608825684
    5. ' SPACE' → logprob: -4.957910060882568
    6. 'E' → logprob: -4.957910060882568
    7. '_SPACE' → logprob: -5.207910060882568
    8. '_' → logprob: -5.332910060882568
    9. '  ' → logprob: -5.582910060882568
    10. 'PI' → logprob: -6.207910060882568

Token 43: ' dont' (ID: 11562)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009371043182909489
    2. ' ' → logprob: -5.759371280670166
    3. '=' → logprob: -6.134371280670166
    4. '_' → logprob: -6.384371280670166
    5. '_SPACE' → logprob: -6.634371280670166
    6. ' =
' → logprob: -8.384370803833008
    7. ',' → logprob: -9.134370803833008
    8. ':' → logprob: -9.634370803833008
    9. 'ULO' → logprob: -9.759370803833008
    10. 'UL' → logprob: -10.009370803833008

Token 44: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4214493930339813
    2. ' =' → logprob: -1.9214494228363037
    3. '<|end|>' → logprob: -2.7964494228363037
    4. ' la' → logprob: -3.0464494228363037
    5. 'value' → logprob: -3.6714494228363037
    6. '=' → logprob: -4.171449184417725
    7. '<|end|>' → logprob: -5.171449184417725
    8. '  ' → logprob: -5.421449184417725
    9. 'a' → logprob: -5.546449184417725
    10. 'space' → logprob: -5.671449184417725

Token 45: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07838906347751617
    2. ' valeur' → logprob: -3.0783891677856445
    3. ' =' → logprob: -4.3283891677856445
    4. ' value' → logprob: -5.0783891677856445
    5. 'val' → logprob: -5.8283891677856445
    6. 'value' → logprob: -5.9533891677856445
    7. '=' → logprob: -6.2033891677856445
    8. '  ' → logprob: -7.2033891677856445
    9. ' val' → logprob: -7.9533891677856445
    10. 'space' → logprob: -8.203389167785645

Token 46: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16501785814762115
    2. ' ' → logprob: -1.91501784324646
    3. '=' → logprob: -5.415018081665039
    4. '  ' → logprob: -8.290018081665039
    5. ' is' → logprob: -10.790018081665039
    6. 'space' → logprob: -11.540018081665039
    7. '<|end|>' → logprob: -11.540018081665039
    8. ' ='' → logprob: -11.915018081665039
    9. ' ,' → logprob: -12.415018081665039
    10. ' est' → logprob: -12.415018081665039

Token 47: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00920746847987175
    2. '10' → logprob: -4.759207248687744
    3. '100' → logprob: -7.509207248687744
    4. '1' → logprob: -10.759207725524902
    5. ' =' → logprob: -11.759207725524902
    6. '  ' → logprob: -12.634207725524902
    7. '0' → logprob: -13.259207725524902
    8. ' ' → logprob: -13.259207725524902
    9. '2' → logprob: -13.884207725524902
    10. ' (' → logprob: -14.259207725524902

Token 48: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.034869298338890076
    2. '100' → logprob: -3.6598691940307617
    3. ' ' → logprob: -4.784869194030762
    4. '1' → logprob: -8.784869194030762
    5. '998' → logprob: -11.534869194030762
    6. 'int' → logprob: -12.159869194030762
    7. '(' → logprob: -13.034869194030762
    8. '```' → logprob: -13.659869194030762
    9. '0' → logprob: -14.034869194030762
    10. '2' → logprob: -14.409869194030762

Token 49: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -7.226628895296017e-06
    2. '247' → logprob: -13.000007629394531
    3. '_' → logprob: -13.250007629394531
    4. '444' → logprob: -14.125007629394531
    5. '```' → logprob: -14.500007629394531
    6. '744' → logprob: -14.750007629394531
    7. '447' → logprob: -15.250007629394531
    8. '+' → logprob: -15.375007629394531
    9. ',' → logprob: -15.875007629394531
    10. '257' → logprob: -16.00000762939453

Token 50: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -4.0126840758603066e-05
    2. '853' → logprob: -10.125040054321289
    3. '3' → logprob: -17.75004005432129
    4. '153' → logprob: -19.25004005432129
    5. '53' → logprob: -19.25004005432129
    6. '35' → logprob: -19.37504005432129
    7. '```' → logprob: -19.37504005432129
    8. '253' → logprob: -19.50004005432129
    9. '753' → logprob: -19.50004005432129
    10. '357' → logprob: -19.75004005432129

Token 51: '.
' (ID: 558)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5229118466377258
    2. ' =' → logprob: -1.397911787033081
    3. '=' → logprob: -2.522911787033081
    4. ' MOD' → logprob: -2.772911787033081
    5. '_MOD' → logprob: -4.89791202545166
    6. ' ' → logprob: -5.52291202545166
    7. '_' → logprob: -6.02291202545166
    8. ' 
' → logprob: -7.14791202545166
    9. ' 

' → logprob: -7.27291202545166
    10. '
' → logprob: -7.39791202545166

Token 52: '#' (ID: 2)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.35752159357070923
    2. ' MOD' → logprob: -1.2325215339660645
    3. ' ' → logprob: -5.3575215339660645
    4. '_MOD' → logprob: -6.4825215339660645
    5. ' =' → logprob: -6.9825215339660645
    6. ' 
' → logprob: -7.4825215339660645
    7. ' 

' → logprob: -7.8575215339660645
    8. '
' → logprob: -8.107522010803223
    9. 'mod' → logprob: -9.107522010803223
    10. '=' → logprob: -9.482522010803223

Token 53: ' Cette' (ID: 27383)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00781351700425148
    2. ' MOD' → logprob: -4.882813453674316
    3. '
' → logprob: -8.632813453674316
    4. '_MOD' → logprob: -11.132813453674316
    5. ' 
' → logprob: -11.507813453674316
    6. '  
' → logprob: -13.882813453674316
    7. '.MOD' → logprob: -14.507813453674316
    8. '```' → logprob: -14.507813453674316
    9. '

' → logprob: -14.882813453674316
    10. ' 

' → logprob: -15.132813453674316

Token 54: ' constante' (ID: 49652)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23192308843135834
    2. ' MOD' → logprob: -1.8569231033325195
    3. '_' → logprob: -4.1069231033325195
    4. 'MOD' → logprob: -4.4819231033325195
    5. ' constant' → logprob: -5.2319231033325195
    6. ' _' → logprob: -5.7319231033325195
    7. ' value' → logprob: -5.8569231033325195
    8. '_MOD' → logprob: -6.2319231033325195
    9. ' constante' → logprob: -6.2319231033325195
    10. ' is' → logprob: -6.4819231033325195

Token 55: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00029613598599098623
    2. ' =' → logprob: -9.250296592712402
    3. ' est' → logprob: -10.000296592712402
    4. '_' → logprob: -10.500296592712402
    5. '  ' → logprob: -10.625296592712402
    6. ' ,' → logprob: -10.750296592712402
    7. '<|end|>' → logprob: -11.250296592712402
    8. ' )' → logprob: -11.375296592712402
    9. ' a' → logprob: -11.375296592712402
    10. '=' → logprob: -12.250296592712402

Token 56: ' utilisée' (ID: 106548)
  Prédit: ' utilisée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisée' → logprob: -0.6206731796264648
    2. ' ' → logprob: -0.8706731796264648
    3. ' souvent' → logprob: -3.620673179626465
    4. ' une' → logprob: -5.620673179626465
    5. ' utilisé' → logprob: -5.870673179626465
    6. ' =' → logprob: -5.870673179626465
    7. ' défin' → logprob: -6.120673179626465
    8. '  ' → logprob: -7.245673179626465
    9. 'MOD' → logprob: -7.370673179626465
    10. ' un' → logprob: -7.370673179626465

Token 57: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09410974383354187
    2. ' dans' → logprob: -2.8441097736358643
    3. ' pour' → logprob: -3.8441097736358643
    4. ' à' → logprob: -5.844109535217285
    5. 'dans' → logprob: -5.844109535217285
    6. ' en' → logprob: -7.344109535217285
    7. 'pour' → logprob: -7.594109535217285
    8. ',' → logprob: -7.969109535217285
    9. ' comme' → logprob: -7.969109535217285
    10. '.' → logprob: -8.094109535217285

Token 58: ' effectuer' (ID: 98625)
  Prédit: ' effectuer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effectuer' → logprob: -0.6198760867118835
    2. ' le' → logprob: -1.7448761463165283
    3. ' mod' → logprob: -1.9948761463165283
    4. ' la' → logprob: -3.1198761463165283
    5. ' l' → logprob: -3.8698761463165283
    6. ' les' → logprob: -4.119875907897949
    7. ' modulo' → logprob: -4.244875907897949
    8. 'mod' → logprob: -4.619875907897949
    9. ' réaliser' → logprob: -4.869875907897949
    10. ' modulus' → logprob: -5.494875907897949

Token 59: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.009903295896947384
    2. ' les' → logprob: -5.384903430938721
    3. ' ' → logprob: -5.759903430938721
    4. 'des' → logprob: -6.384903430938721
    5. ' l' → logprob: -8.384902954101562
    6. '_' → logprob: -10.009902954101562
    7. 'les' → logprob: -10.634902954101562
    8. ' le' → logprob: -10.759902954101562
    9. 's' → logprob: -11.009902954101562
    10. ' une' → logprob: -11.259902954101562

Token 60: ' calcul' (ID: 7559)
  Prédit: ' opérations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opérations' → logprob: -0.037503913044929504
    2. ' calcul' → logprob: -4.537503719329834
    3. 'l' → logprob: -4.662503719329834
    4. ' l' → logprob: -5.037503719329834
    5. 'op' → logprob: -6.787503719329834
    6. 'd' → logprob: -6.787503719329834
    7. ' ' → logprob: -6.787503719329834
    8. 'mod' → logprob: -7.037503719329834
    9. 'calcul' → logprob: -7.037503719329834
    10. '%' → logprob: -7.162503719329834

Token 61: 's' (ID: 82)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.3053954541683197
    2. 's' → logprob: -1.430395483970642
    3. 'us' → logprob: -4.180395603179932
    4. '_mod' → logprob: -5.555395603179932
    5. '_' → logprob: -6.180395603179932
    6. 'mod' → logprob: -6.930395603179932
    7. 'os' → logprob: -8.055395126342773
    8. 'atrice' → logprob: -8.555395126342773
    9. '#' → logprob: -8.930395126342773
    10. 'ation' → logprob: -9.055395126342773

Token 62: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5129700899124146
    2. ' modulo' → logprob: -1.2629700899124146
    3. ' mod' → logprob: -2.637969970703125
    4. 'mod' → logprob: -4.137969970703125
    5. ' de' → logprob: -5.012969970703125
    6. '<|end|>' → logprob: -5.137969970703125
    7. '_mod' → logprob: -5.387969970703125
    8. '_' → logprob: -5.637969970703125
    9. 's' → logprob: -6.262969970703125
    10. ' MOD' → logprob: -6.512969970703125

Token 63: ' modulo' (ID: 112372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6673011779785156
    2. ' modulo' → logprob: -1.5423011779785156
    3. ' modular' → logprob: -2.0423011779785156
    4. ' modulus' → logprob: -3.1673011779785156
    5. ' l' → logprob: -3.2923011779785156
    6. ' mod' → logprob: -3.7923011779785156
    7. '```' → logprob: -4.542301177978516
    8. 'mod' → logprob: -4.667301177978516
    9. 'm' → logprob: -5.292301177978516
    10. ' module' → logprob: -5.667301177978516

Token 64: ' afin' (ID: 22217)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1541159451007843
    2. '.' → logprob: -2.279115915298462
    3. ',' → logprob: -4.154116153717041
    4. ' ,' → logprob: -4.654116153717041
    5. ' (' → logprob: -6.029116153717041
    6. 's' → logprob: -6.029116153717041
    7. ' MOD' → logprob: -6.029116153717041
    8. ' .' → logprob: -6.154116153717041
    9. 'MOD' → logprob: -6.404116153717041
    10. '```' → logprob: -7.654116153717041

Token 65: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4902406930923462
    2. ' d' → logprob: -0.9902406930923462
    3. '<|end|>' → logprob: -4.490240573883057
    4. 'de' → logprob: -6.615240573883057
    5. ' ' → logprob: -6.615240573883057
    6. 'd' → logprob: -6.865240573883057
    7. '#' → logprob: -7.990240573883057
    8. '<|end|>' → logprob: -8.240241050720215
    9. ' of' → logprob: -9.240241050720215
    10. '  ' → logprob: -10.052741050720215

Token 66: ''év' (ID: 114425)
  Prédit: ''effect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''effect' → logprob: -0.8039391040802002
    2. ''assurer' → logprob: -1.9289391040802002
    3. 'e' → logprob: -2.0539391040802
    4. ' effectuer' → logprob: -2.4289391040802
    5. ''év' → logprob: -3.0539391040802
    6. ' assurer' → logprob: -3.4289391040802
    7. ' garantir' → logprob: -3.5539391040802
    8. ''' → logprob: -4.178938865661621
    9. ' éviter' → logprob: -4.303938865661621
    10. '’éviter' → logprob: -4.303938865661621

Token 67: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.025961998850107193
    2. 'er' → logprob: -5.025961875915527
    3. 'érer' → logprob: -5.775961875915527
    4. ' iter' → logprob: -5.900961875915527
    5. 'ite' → logprob: -5.900961875915527
    6. 'al' → logprob: -6.150961875915527
    7. '```' → logprob: -6.525961875915527
    8. 'alu' → logprob: -6.775961875915527
    9. 'aler' → logprob: -7.025961875915527
    10. '#' → logprob: -7.025961875915527

Token 68: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.34623050689697266
    2. ' ' → logprob: -2.0962305068969727
    3. ' les' → logprob: -2.7212305068969727
    4. ' l' → logprob: -2.9712305068969727
    5. ' overflow' → logprob: -3.0962305068969727
    6. 's' → logprob: -6.221230506896973
    7. ' d' → logprob: -6.721230506896973
    8. ' le' → logprob: -6.721230506896973
    9. ' ' → logprob: -7.846230506896973
    10. 'l' → logprob: -7.846230506896973

Token 69: ' dépasse' (ID: 165701)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.050007279962301254
    2. 'overflow' → logprob: -3.9250073432922363
    3. ' dépasse' → logprob: -4.175007343292236
    4. ' over' → logprob: -5.050007343292236
    5. ' déb' → logprob: -5.800007343292236
    6. 's' → logprob: -6.175007343292236
    7. ' integer' → logprob: -7.300007343292236
    8. 'd' → logprob: -7.425007343292236
    9. ' Overflow' → logprob: -8.425006866455078
    10. ' erreurs' → logprob: -8.550006866455078

Token 70: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.21577569842338562
    2. 'm' → logprob: -2.215775728225708
    3. 'ment' → logprob: -2.465775728225708
    4. 'd' → logprob: -11.215775489807129
    5. 'pas' → logprob: -11.715775489807129
    6. 'nements' → logprob: -11.840775489807129
    7. 'ements' → logprob: -11.965775489807129
    8. '```' → logprob: -11.965775489807129
    9. 'mente' → logprob: -12.465775489807129
    10. '#' → logprob: -12.715775489807129

Token 71: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0024745857808738947
    2. ' d' → logprob: -6.627474784851074
    3. 'de' → logprob: -7.502474784851074
    4. ' ' → logprob: -8.002474784851074
    5. ' des' → logprob: -9.252474784851074
    6. '_' → logprob: -10.127474784851074
    7. ' _' → logprob: -10.502474784851074
    8. 's' → logprob: -11.002474784851074
    9. '_de' → logprob: -11.002474784851074
    10. ' du' → logprob: -11.127474784851074

Token 72: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.43163004517555237
    2. 'e' → logprob: -1.80663001537323
    3. ''ent' → logprob: -1.80663001537323
    4. 'i' → logprob: -4.3066301345825195
    5. ''' → logprob: -6.6816301345825195
    6. '’ent' → logprob: -6.8066301345825195
    7. '```' → logprob: -7.0566301345825195
    8. 'int' → logprob: -7.3066301345825195
    9. 'u' → logprob: -7.3066301345825195
    10. ' ent' → logprob: -7.8066301345825195

Token 73: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.5916250348091125
    2. 'ier' → logprob: -1.7166249752044678
    3. 'i' → logprob: -2.3416249752044678
    4. 't' → logprob: -3.2166249752044678
    5. 'ières' → logprob: -3.7166249752044678
    6. 'ête' → logprob: -3.8416249752044678
    7. 'êtes' → logprob: -4.341625213623047
    8. 'er' → logprob: -4.466625213623047
    9. 'r' → logprob: -4.591625213623047
    10. 're' → logprob: -4.716625213623047

Token 74: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12039728462696075
    2. ',' → logprob: -2.4953973293304443
    3. 's' → logprob: -4.370397090911865
    4. ' lors' → logprob: -5.495397090911865
    5. ' ,' → logprob: -5.495397090911865
    6. ' .' → logprob: -5.870397090911865
    7. ' ' → logprob: -5.870397090911865
    8. ' (' → logprob: -6.995397090911865
    9. ' dans' → logprob: -7.120397090911865
    10. '_' → logprob: -8.245397567749023

Token 75: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.3037036061286926
    2. '

' → logprob: -1.8037035465240479
    3. '
' → logprob: -2.428703546524048
    4. ' MOD' → logprob: -5.928703784942627
    5. ' 

' → logprob: -6.178703784942627
    6. '
' → logprob: -6.928703784942627
    7. '' → logprob: -7.553703784942627
    8. '\' → logprob: -7.928703784942627
    9. ' 
' → logprob: -7.928703784942627
    10. '  
' → logprob: -8.178703308105469

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001305118203163147
    2. '=' → logprob: -7.126305103302002
    3. ' ' → logprob: -7.626305103302002
    4. ' =
' → logprob: -11.25130558013916
    5. ' ' → logprob: -17.626304626464844
    6. ' =
' → logprob: -17.751304626464844
    7. ' =)' → logprob: -17.876304626464844
    8. ' ='' → logprob: -18.251304626464844
    9. ' ="' → logprob: -18.251304626464844
    10. '  ' → logprob: -18.751304626464844

Token 77: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014165864326059818
    2. '998' → logprob: -4.264165878295898
    3. ' ' → logprob: -13.264165878295898
    4. '999' → logprob: -14.389165878295898
    5. '`' → logprob: -18.3891658782959
    6. '988' → logprob: -18.7641658782959
    7. '_' → logprob: -18.8891658782959
    8. '9' → logprob: -19.0141658782959
    9. '```' → logprob: -19.6391658782959
    10. '978' → logprob: -19.8891658782959

Token 78: '998' (ID: 34589)
  Prédit: '998'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '998' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '999' → logprob: -16.250019073486328
    4. '988' → logprob: -19.375019073486328
    5. '9' → logprob: -19.875019073486328
    6. '`' → logprob: -21.500019073486328
    7. '997' → logprob: -21.875019073486328
    8. '978' → logprob: -21.875019073486328
    9. '  ' → logprob: -22.375019073486328
    10. '898' → logprob: -22.500019073486328

Token 79: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -1.664371848164592e-05
    2. '2' → logprob: -11.750016212463379
    3. ' ' → logprob: -11.875016212463379
    4. '24' → logprob: -14.125016212463379
    5. '```' → logprob: -14.875016212463379
    6. '   ' → logprob: -15.375016212463379
    7. '234' → logprob: -16.500017166137695
    8. '  ' → logprob: -16.812517166137695
    9. '`' → logprob: -16.937517166137695
    10. '344' → logprob: -17.500017166137695

Token 80: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.00011439072113716975
    2. '34' → logprob: -9.500114440917969
    3. '3' → logprob: -10.375114440917969
    4. '343' → logprob: -12.250114440917969
    5. '354' → logprob: -13.875114440917969
    6. '344' → logprob: -14.125114440917969
    7. '35' → logprob: -14.375114440917969
    8. ' ' → logprob: -14.625114440917969
    9. '345' → logprob: -14.875114440917969
    10. '33' → logprob: -15.375114440917969

Token 81: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7029107809066772
    2. '

' → logprob: -0.7029107809066772
    3. '' → logprob: -5.452910900115967
    4. ' 

' → logprob: -5.827910900115967
    5. ' 
' → logprob: -7.702910900115967
    6. '
' → logprob: -7.827910900115967
    7. '


' → logprob: -7.952910900115967
    8. '<|end|>' → logprob: -7.952910900115967
    9. '\n' → logprob: -8.077910423278809
    10. '

' → logprob: -8.577910423278809

Token 82: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7076967358589172
    2. '

' → logprob: -0.7076967358589172
    3. '' → logprob: -5.207696914672852
    4. 'def' → logprob: -5.707696914672852
    5. '#' → logprob: -6.707696914672852
    6. ' 

' → logprob: -7.082696914672852
    7. '\n' → logprob: -7.332696914672852
    8. 'n' → logprob: -7.582696914672852
    9. '


' → logprob: -7.582696914672852
    10. ' ' → logprob: -7.707696914672852

Token 83: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6194185614585876
    2. ' ' → logprob: -1.2444186210632324
    3. ' def' → logprob: -2.4944186210632324
    4. 'n' → logprob: -2.8694186210632324
    5. ' n' → logprob: -4.869418621063232
    6. 'a' → logprob: -4.994418621063232
    7. '#' → logprob: -4.994418621063232
    8. 's' → logprob: -5.119418621063232
    9. ' #' → logprob: -6.619418621063232
    10. ' a' → logprob: -6.994418621063232

Token 84: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006593036465346813
    2. '(' → logprob: -5.131593227386475
    3. ' (' → logprob: -7.631593227386475
    4. '_' → logprob: -9.881592750549316
    5. 's' → logprob: -10.631592750549316
    6. ' )' → logprob: -10.631592750549316
    7. '()' → logprob: -11.131592750549316
    8. '[' → logprob: -11.506592750549316
    9. '  ' → logprob: -11.881592750549316
    10. 'a' → logprob: -12.256592750549316

Token 85: ''une' (ID: 13337)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0610625185072422
    2. 'e' → logprob: -2.9360625743865967
    3. ' la' → logprob: -6.186062335968018
    4. 'a' → logprob: -7.561062335968018
    5. '_' → logprob: -7.561062335968018
    6. ' e' → logprob: -7.561062335968018
    7. ' l' → logprob: -7.561062335968018
    8. ''' → logprob: -7.561062335968018
    9. '()' → logprob: -7.811062335968018
    10. 'l' → logprob: -8.186062812805176

Token 86: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005478487350046635
    2. ' ligne' → logprob: -5.630478382110596
    3. ' liste' → logprob: -7.005478382110596
    4. ' chaîne' → logprob: -7.755478382110596
    5. ' )' → logprob: -9.005478858947754
    6. ' line' → logprob: -9.630478858947754
    7. ' =' → logprob: -9.880478858947754
    8. '  ' → logprob: -10.255478858947754
    9. ' list' → logprob: -10.505478858947754
    10. ' n' → logprob: -10.505478858947754

Token 87: ' entière' (ID: 61583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21724127233028412
    2. '(' → logprob: -2.2172412872314453
    3. '(
' → logprob: -3.0922412872314453
    4. ' ' → logprob: -3.4672412872314453
    5. 'n' → logprob: -5.592241287231445
    6. ' =' → logprob: -6.967241287231445
    7. '_' → logprob: -7.092241287231445
    8. '()
' → logprob: -7.717241287231445
    9. ' (' → logprob: -7.717241287231445
    10. ' n' → logprob: -7.967241287231445

Token 88: ' depuis' (ID: 16277)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22489440441131592
    2. '(
' → logprob: -2.2248945236206055
    3. 'n' → logprob: -2.5998945236206055
    4. '(n' → logprob: -4.9748945236206055
    5. '()' → logprob: -5.0998945236206055
    6. ' ' → logprob: -6.0998945236206055
    7. ' n' → logprob: -6.2248945236206055
    8. ' (
' → logprob: -7.2248945236206055
    9. ' (' → logprob: -7.3498945236206055
    10. '(

' → logprob: -9.474894523620605

Token 89: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.01927255280315876
    2. ' ' → logprob: -4.019272327423096
    3. 'input' → logprob: -6.894272327423096
    4. ' l' → logprob: -9.769272804260254
    5. ' ' → logprob: -11.144272804260254
    6. '(input' → logprob: -11.269272804260254
    7. '_' → logprob: -12.019272804260254
    8. '=input' → logprob: -12.144272804260254
    9. '	input' → logprob: -13.144272804260254
    10. ' in' → logprob: -13.394272804260254

Token 90: ''entrée' (ID: 115820)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5353497266769409
    2. 'input' → logprob: -1.535349726676941
    3. 'a' → logprob: -2.6603498458862305
    4. ''' → logprob: -3.1603498458862305
    5. 'e' → logprob: -3.6603498458862305
    6. ' ' → logprob: -3.7853498458862305
    7. ''entrée' → logprob: -3.7853498458862305
    8. 'u' → logprob: -5.0353498458862305
    9. 'i' → logprob: -5.4103498458862305
    10. '=input' → logprob: -6.6603498458862305

Token 91: ' standard' (ID: 7024)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013916072435677052
    2. '(' → logprob: -4.888916015625
    3. 'n' → logprob: -6.388916015625
    4. ',' → logprob: -7.138916015625
    5. ' =' → logprob: -7.263916015625
    6. 's' → logprob: -7.513916015625
    7. ' (' → logprob: -7.638916015625
    8. '()' → logprob: -7.763916015625
    9. '=' → logprob: -8.388916015625
    10. ')' → logprob: -8.638916015625

Token 92: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.042770907282829285
    2. 'n' → logprob: -4.167770862579346
    3. '(
' → logprob: -4.667770862579346
    4. ' ' → logprob: -5.292770862579346
    5. '(n' → logprob: -5.417770862579346
    6. '()' → logprob: -5.667770862579346
    7. ',' → logprob: -6.042770862579346
    8. 's' → logprob: -7.667770862579346
    9. ')' → logprob: -8.167771339416504
    10. 'a' → logprob: -8.917771339416504

Token 93: ' correspondant' (ID: 146058)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1624445915222168
    2. ' n' → logprob: -2.287444591522217
    3. 'n' → logprob: -3.037444591522217
    4. ' ' → logprob: -8.912445068359375
    5. 'a' → logprob: -10.287445068359375
    6. ' a' → logprob: -10.412445068359375
    7. 's' → logprob: -10.662445068359375
    8. ' i' → logprob: -10.662445068359375
    9. ' input' → logprob: -10.662445068359375
    10. ' 
' → logprob: -10.912445068359375

Token 94: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5201628804206848
    2. ' ' → logprob: -1.02016282081604
    3. ' to' → logprob: -4.395163059234619
    4. ' au' → logprob: -4.520163059234619
    5. ' a' → logprob: -5.145163059234619
    6. 'a' → logprob: -5.645163059234619
    7. 'à' → logprob: -5.895163059234619
    8. '  ' → logprob: -6.145163059234619
    9. 's' → logprob: -6.895163059234619
    10. ' =' → logprob: -7.020163059234619

Token 95: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0025198960211127996
    2. 'n' → logprob: -6.8775200843811035
    3. ' n' → logprob: -7.3775200843811035
    4. ' nombre' → logprob: -7.3775200843811035
    5. '  ' → logprob: -9.127519607543945
    6. '  
' → logprob: -10.877519607543945
    7. 'nombre' → logprob: -11.002519607543945
    8. ' '' → logprob: -11.377519607543945
    9. ' "' → logprob: -11.502519607543945
    10. '_' → logprob: -11.627519607543945

Token 96: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004005384631454945
    2. '<|end|>' → logprob: -6.004005432128906
    3. 's' → logprob: -7.754005432128906
    4. '  ' → logprob: -8.129005432128906
    5. ' d' → logprob: -8.379005432128906
    6. ' )' → logprob: -8.754005432128906
    7. ' n' → logprob: -9.504005432128906
    8. '_' → logprob: -9.879005432128906
    9. ' de' → logprob: -10.004005432128906
    10. '<|end|>' → logprob: -10.129005432128906

Token 97: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09153883904218674
    2. '_' → logprob: -2.466538906097412
    3. 'e' → logprob: -6.966538906097412
    4. 's' → logprob: -8.091538429260254
    5. ')' → logprob: -8.591538429260254
    6. '  ' → logprob: -8.966538429260254
    7. '<|end|>' → logprob: -8.966538429260254
    8. ' '' → logprob: -9.216538429260254
    9. '-' → logprob: -9.466538429260254
    10. 'u' → logprob: -9.716538429260254

Token 98: 'élé' (ID: 15228)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17180411517620087
    2. 'élé' → logprob: -2.046804189682007
    3. 'é' → logprob: -5.171803951263428
    4. '_' → logprob: -5.421803951263428
    5. ' éléments' → logprob: -5.421803951263428
    6. 'e' → logprob: -5.421803951263428
    7. ' él' → logprob: -6.296803951263428
    8. ' 
' → logprob: -7.046803951263428
    9. 'a' → logprob: -7.171803951263428
    10. ' é' → logprob: -7.171803951263428

Token 99: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.1292046159505844
    2. 'm' → logprob: -2.254204511642456
    3. 'ment' → logprob: -4.129204750061035
    4. 'me' → logprob: -9.754204750061035
    5. 'м' → logprob: -10.879204750061035
    6. 'v' → logprob: -10.879204750061035
    7. 'men' → logprob: -11.379204750061035
    8. 'ements' → logprob: -11.879204750061035
    9. 'mente' → logprob: -12.004204750061035
    10. ' ' → logprob: -12.504204750061035

Token 100: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09469029307365417
    2. 'n' → logprob: -2.7196903228759766
    3. ' n' → logprob: -3.8446903228759766
    4. '_' → logprob: -6.969690322875977
    5. ' =' → logprob: -7.719690322875977
    6. 's' → logprob: -8.219690322875977
    7. ' )' → logprob: -8.469690322875977
    8. ',' → logprob: -8.844690322875977
    9. ')' → logprob: -8.844690322875977
    10. '_n' → logprob: -8.969690322875977

Token 101: ' tableau' (ID: 67053)
  Prédit: ' tableau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.31741639971733093
    2. ' ' → logprob: -1.3174164295196533
    3. '  ' → logprob: -6.692416191101074
    4. ' tableaux' → logprob: -6.942416191101074
    5. ' array' → logprob: -7.817416191101074
    6. ' t' → logprob: -7.942416191101074
    7. ' liste' → logprob: -8.692416191101074
    8. ' '' → logprob: -8.692416191101074
    9. ' input' → logprob: -8.817416191101074
    10. ' n' → logprob: -9.317416191101074

Token 102: ' D' (ID: 415)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005087109748274088
    2. 'N' → logprob: -8.375508308410645
    3. ' n' → logprob: -8.750508308410645
    4. '
' → logprob: -10.500508308410645
    5. 's' → logprob: -10.750508308410645
    6. '\n' → logprob: -10.875508308410645
    7. 'a' → logprob: -11.250508308410645
    8. 'x' → logprob: -11.625508308410645
    9. ' N' → logprob: -12.125508308410645
    10. '(n' → logprob: -12.500508308410645

Token 103: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18744200468063354
    2. '
' → logprob: -2.4374420642852783
    3. 'N' → logprob: -3.1874420642852783
    4. 'D' → logprob: -3.1874420642852783
    5. 'd' → logprob: -7.562441825866699
    6. ' 
' → logprob: -9.1874418258667
    7. ' n' → logprob: -9.4374418258667
    8. '

' → logprob: -9.8124418258667
    9. '\n' → logprob: -9.9374418258667
    10. ' =' → logprob: -10.1874418258667

Token 104: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0062625776045024395
    2. 'N' → logprob: -5.13126277923584
    3. '
' → logprob: -8.50626277923584
    4. 'D' → logprob: -9.25626277923584
    5. ' 
' → logprob: -11.13126277923584
    6. ' n' → logprob: -11.50626277923584
    7. 'd' → logprob: -11.88126277923584
    8. '' → logprob: -13.50626277923584
    9. 'x' → logprob: -14.63126277923584
    10. ' N' → logprob: -14.75626277923584

Token 105: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005146469455212355
    2. 'N' → logprob: -5.755146503448486
    3. ' n' → logprob: -6.255146503448486
    4. 'D' → logprob: -10.380146026611328
    5. 'd' → logprob: -12.005146026611328
    6. ' N' → logprob: -12.130146026611328
    7. ' 
' → logprob: -13.255146026611328
    8. '
' → logprob: -13.880146026611328
    9. 'x' → logprob: -15.755146026611328
    10. 't' → logprob: -15.880146026611328

Token 106: ' fonction' (ID: 17610)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10461840778589249
    2. ' n' → logprob: -2.8546183109283447
    3. ' ' → logprob: -3.3546183109283447
    4. 'N' → logprob: -5.979618549346924
    5. '_' → logprob: -6.729618549346924
    6. 'i' → logprob: -6.979618549346924
    7. 'D' → logprob: -7.229618549346924
    8. ' 
' → logprob: -8.104618072509766
    9. ' N' → logprob: -8.479618072509766
    10. ' i' → logprob: -8.604618072509766

Token 107: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07592371851205826
    2. 'input' → logprob: -3.4509236812591553
    3. ' int' → logprob: -3.9509236812591553
    4. ' n' → logprob: -4.200923919677734
    5. 'int' → logprob: -5.325923919677734
    6. 'n' → logprob: -6.075923919677734
    7. ' ' → logprob: -12.575923919677734
    8. '=int' → logprob: -12.825923919677734
    9. ' i' → logprob: -13.325923919677734
    10. ' N' → logprob: -13.325923919677734

Token 108: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006731711328029633
    2. '(' → logprob: -5.0067315101623535
    3. ')' → logprob: -12.381731986999512
    4. '().' → logprob: -12.506731986999512
    5. '()
' → logprob: -13.256731986999512
    6. '(
' → logprob: -13.631731986999512
    7. '()

' → logprob: -13.881731986999512
    8. ' ()' → logprob: -14.131731986999512
    9. '(),' → logprob: -14.256731986999512
    10. '())' → logprob: -14.381731986999512

Token 109: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011494802311062813
    2. '(' → logprob: -4.6364946365356445
    3. ')' → logprob: -6.7614946365356445
    4. '.' → logprob: -9.011494636535645
    5. '().' → logprob: -9.136494636535645
    6. ',' → logprob: -9.386494636535645
    7. ' ()' → logprob: -9.636494636535645
    8. ' ' → logprob: -10.011494636535645
    9. '()
' → logprob: -10.136494636535645
    10. '(
' → logprob: -10.261494636535645

Token 110: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003471897915005684
    2. ' ()' → logprob: -6.128471851348877
    3. '(' → logprob: -6.753471851348877
    4. ' une' → logprob: -10.628472328186035
    5. ' (' → logprob: -11.003472328186035
    6. '("' → logprob: -11.128472328186035
    7. '().' → logprob: -11.378472328186035
    8. '('' → logprob: -11.378472328186035
    9. '("")' → logprob: -12.253472328186035
    10. ' un' → logprob: -12.253472328186035

Token 111: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5444040298461914
    2. '()' → logprob: -1.1694040298461914
    3. ' ligne' → logprob: -3.5444040298461914
    4. 'n' → logprob: -4.294404029846191
    5. 'entrée' → logprob: -4.419404029846191
    6. 'int' → logprob: -4.919404029846191
    7. ' chaîne' → logprob: -4.919404029846191
    8. ' )' → logprob: -4.919404029846191
    9. ')' → logprob: -5.169404029846191
    10. 'ligne' → logprob: -5.669404029846191

Token 112: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.022480199113488197
    2. '(' → logprob: -4.022480010986328
    3. ')' → logprob: -6.147480010986328
    4. ',' → logprob: -7.397480010986328
    5. ' ()' → logprob: -7.647480010986328
    6. '.' → logprob: -8.272480010986328
    7. '(
' → logprob: -8.522480010986328
    8. ' (' → logprob: -9.147480010986328
    9. '=' → logprob: -9.272480010986328
    10. ' ' → logprob: -9.397480010986328

Token 113: ' texte' (ID: 53492)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.7975738644599915
    2. ' code' → logprob: -0.7975738644599915
    3. 'l' → logprob: -3.4225738048553467
    4. 'entrée' → logprob: -3.9225738048553467
    5. ' l' → logprob: -4.047574043273926
    6. ' input' → logprob: -4.422574043273926
    7. 'texte' → logprob: -5.547574043273926
    8. 's' → logprob: -5.672574043273926
    9. 'input' → logprob: -5.672574043273926
    10. ' texte' → logprob: -6.547574043273926

Token 114: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.30578935146331787
    2. ')' → logprob: -2.0557894706726074
    3. ',' → logprob: -3.4307894706726074
    4. '(' → logprob: -3.4307894706726074
    5. ' ' → logprob: -3.4307894706726074
    6. '(
' → logprob: -4.680789470672607
    7. '.' → logprob: -5.305789470672607
    8. ' (' → logprob: -5.680789470672607
    9. ' )' → logprob: -5.680789470672607
    10. '\n' → logprob: -6.180789470672607

Token 115: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7986963391304016
    2. ' n' → logprob: -0.9236963391304016
    3. 'n' → logprob: -1.9236962795257568
    4. ' 
' → logprob: -6.548696517944336
    5. ' puis' → logprob: -6.923696517944336
    6. ' D' → logprob: -7.673696517944336
    7. 'strip' → logprob: -7.673696517944336
    8. ' l' → logprob: -8.298696517944336
    9. ' )' → logprob: -8.423696517944336
    10. '()' → logprob: -8.423696517944336

Token 116: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005573098547756672
    2. '()' → logprob: -5.255573272705078
    3. ' (' → logprob: -8.880573272705078
    4. '(input' → logprob: -9.880573272705078
    5. '(
' → logprob: -10.380573272705078
    6. ' ' → logprob: -10.505573272705078
    7. '('' → logprob: -10.880573272705078
    8. ' ()' → logprob: -11.505573272705078
    9. ',' → logprob: -11.880573272705078
    10. '(
' → logprob: -12.005573272705078

Token 117: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00035536551149562
    2. '(
' → logprob: -8.37535572052002
    3. '()' → logprob: -10.12535572052002
    4. ')' → logprob: -10.37535572052002
    5. ',' → logprob: -10.75035572052002
    6. ' (' → logprob: -11.25035572052002
    7. '('' → logprob: -12.00035572052002
    8. '(

' → logprob: -12.87535572052002
    9. '(input' → logprob: -13.25035572052002
    10. '(
' → logprob: -13.50035572052002

Token 118: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1755146086215973
    2. ' transforme' → logprob: -2.5505146980285645
    3. 'convert' → logprob: -3.1755146980285645
    4. ' convert' → logprob: -4.1755146980285645
    5. '(int' → logprob: -4.5505146980285645
    6. '(
' → logprob: -5.4255146980285645
    7. ')' → logprob: -5.6755146980285645
    8. '()' → logprob: -5.6755146980285645
    9. ' (' → logprob: -7.1755146980285645
    10. ' convertir' → logprob: -7.5505146980285645

Token 119: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0015235526952892542
    2. 'i' → logprob: -6.876523494720459
    3. ' it' → logprob: -8.376523971557617
    4. '(' → logprob: -9.251523971557617
    5. 'ir' → logprob: -9.876523971557617
    6. ' ' → logprob: -10.626523971557617
    7. 'er' → logprob: -10.626523971557617
    8. 'et' → logprob: -11.876523971557617
    9. ')' → logprob: -12.001523971557617
    10. '(it' → logprob: -12.001523971557617

Token 120: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003049723571166396
    2. ' (' → logprob: -6.753049850463867
    3. '()' → logprob: -7.128049850463867
    4. ',' → logprob: -7.753049850463867
    5. '('' → logprob: -8.378049850463867
    6. ' ' → logprob: -9.003049850463867
    7. '(
' → logprob: -9.378049850463867
    8. ')' → logprob: -9.878049850463867
    9. ' en' → logprob: -9.878049850463867
    10. '("' → logprob: -10.378049850463867

Token 121: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4361523687839508
    2. ' int' → logprob: -1.6861523389816284
    3. 'ent' → logprob: -2.436152458190918
    4. ' entier' → logprob: -3.186152458190918
    5. ' un' → logprob: -3.936152458190918
    6. ' integer' → logprob: -4.561152458190918
    7. 'nombre' → logprob: -6.061152458190918
    8. ' nombre' → logprob: -6.436152458190918
    9. 'n' → logprob: -6.561152458190918
    10. 'l' → logprob: -7.186152458190918

Token 122: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6922470331192017
    2. '(
' → logprob: -1.5672470331192017
    3. '
' → logprob: -2.317246913909912
    4. ')' → logprob: -2.692246913909912
    5. '\n' → logprob: -3.567246913909912
    6. 'D' → logprob: -3.942246913909912
    7. '()' → logprob: -4.192246913909912
    8. '(n' → logprob: -4.317246913909912
    9. '(D' → logprob: -4.692246913909912
    10. '' → logprob: -4.942246913909912

Token 123: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2609548270702362
    2. 'N' → logprob: -1.5109548568725586
    3. 'D' → logprob: -4.760954856872559
    4. 'd' → logprob: -8.385954856872559
    5. '
' → logprob: -9.260954856872559
    6. ' n' → logprob: -9.635954856872559
    7. ' 
' → logprob: -11.385954856872559
    8. ' N' → logprob: -11.885954856872559
    9. '' → logprob: -12.635954856872559
    10. '

' → logprob: -12.760954856872559

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007614439819008112
    2. '=' → logprob: -4.882614612579346
    3. ',' → logprob: -12.257614135742188
    4. ' =
' → logprob: -13.507614135742188
    5. ' ' → logprob: -14.257614135742188
    6. ' ' → logprob: -14.507614135742188
    7. '.' → logprob: -14.882614135742188
    8. '=input' → logprob: -15.382614135742188
    9. '=int' → logprob: -15.632614135742188
    10. ')' → logprob: -15.757614135742188

Token 125: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0008239185553975403
    2. 'int' → logprob: -7.125823974609375
    3. ' ' → logprob: -11.125823974609375
    4. ' ' → logprob: -12.875823974609375
    5. ' input' → logprob: -13.250823974609375
    6. '=int' → logprob: -15.500823974609375
    7. ' 
' → logprob: -16.000823974609375
    8. ' in' → logprob: -16.500823974609375
    9. 'input' → logprob: -17.375823974609375
    10. '	int' → logprob: -17.625823974609375

Token 126: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12719623744487762
    2. '(input' → logprob: -2.1271963119506836
    3. '()' → logprob: -8.252196311950684
    4. '(
' → logprob: -12.252196311950684
    5. 'input' → logprob: -13.627196311950684
    6. ' (' → logprob: -14.252196311950684
    7. '(

' → logprob: -14.627196311950684
    8. '((' → logprob: -16.627195358276367
    9. '(int' → logprob: -16.877195358276367
    10. '(INPUT' → logprob: -17.002195358276367

Token 127: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001177608733996749
    2. '()' → logprob: -6.751177787780762
    3. '(' → logprob: -13.251177787780762
    4. '().' → logprob: -13.376177787780762
    5. ' ())' → logprob: -13.501177787780762
    6. '()))' → logprob: -13.751177787780762
    7. '())
' → logprob: -14.126177787780762
    8. ')' → logprob: -14.876177787780762
    9. '();)' → logprob: -15.501177787780762
    10. '());' → logprob: -16.376176834106445

Token 128: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.475996732711792
    2. 'D' → logprob: -1.100996732711792
    3. ' 
' → logprob: -3.475996732711792
    4. '#' → logprob: -4.600996971130371
    5. ' D' → logprob: -6.725996971130371
    6. '
' → logprob: -6.725996971130371
    7. ' ' → logprob: -7.850996971130371
    8. '  
' → logprob: -7.850996971130371
    9. '' → logprob: -7.975996971130371
    10. '\' → logprob: -7.975996971130371

Token 129: ' Lecture' (ID: 106534)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0013826170470565557
    2. ' D' → logprob: -6.626382827758789
    3. '#' → logprob: -10.376382827758789
    4. 'd' → logprob: -11.126382827758789
    5. 'data' → logprob: -13.251382827758789
    6. 'A' → logprob: -13.251382827758789
    7. '```' → logprob: -13.876382827758789
    8. ' ' → logprob: -14.313882827758789
    9. '_' → logprob: -14.501382827758789
    10. 's' → logprob: -14.626382827758789

Token 130: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008945800364017487
    2. '(' → logprob: -4.758945941925049
    3. '(
' → logprob: -9.25894546508789
    4. ' ()' → logprob: -9.75894546508789
    5. '()
' → logprob: -9.75894546508789
    6. 's' → logprob: -10.63394546508789
    7. '_' → logprob: -11.00894546508789
    8. '[' → logprob: -11.00894546508789
    9. '[]' → logprob: -11.00894546508789
    10. 'D' → logprob: -11.50894546508789

Token 131: ''une' (ID: 13337)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3874558210372925
    2. '()' → logprob: -1.5124558210372925
    3. 'a' → logprob: -3.137455940246582
    4. '('' → logprob: -4.137455940246582
    5. 'une' → logprob: -4.387455940246582
    6. ' la' → logprob: -4.887455940246582
    7. '(
' → logprob: -5.012455940246582
    8. 'e' → logprob: -5.137455940246582
    9. ' une' → logprob: -6.137455940246582
    10. ' (' → logprob: -6.512455940246582

Token 132: ' ligne' (ID: 19583)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.25954508781433105
    2. ' ' → logprob: -2.009545087814331
    3. 'liste' → logprob: -2.634545087814331
    4. ' ligne' → logprob: -4.63454532623291
    5. '_' → logprob: -5.25954532623291
    6. ' list' → logprob: -6.63454532623291
    7. ' 
' → logprob: -6.75954532623291
    8. 'ligne' → logprob: -6.88454532623291
    9. 's' → logprob: -7.13454532623291
    10. ' ' → logprob: -7.63454532623291

Token 133: ' contenant' (ID: 131049)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003766919835470617
    2. '(' → logprob: -8.12537670135498
    3. '().' → logprob: -10.75037670135498
    4. '()
' → logprob: -11.25037670135498
    5. ' ()' → logprob: -11.87537670135498
    6. 'D' → logprob: -11.87537670135498
    7. 's' → logprob: -11.87537670135498
    8. '[]' → logprob: -12.37537670135498
    9. '#' → logprob: -13.00037670135498
    10. '[' → logprob: -13.00037670135498

Token 134: ' N' (ID: 478)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8288787603378296
    2. '()' → logprob: -1.7038787603378296
    3. ' list' → logprob: -1.9538787603378296
    4. ' ' → logprob: -2.078878879547119
    5. 's' → logprob: -3.578878879547119
    6. ' une' → logprob: -4.078878879547119
    7. ' les' → logprob: -4.203878879547119
    8. 'list' → logprob: -4.828878879547119
    9. ' N' → logprob: -5.078878879547119
    10. '(' → logprob: -5.203878879547119

Token 135: ' ent' (ID: 1121)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9442218542098999
    2. 's' → logprob: -1.4442218542099
    3. '(' → logprob: -2.3192219734191895
    4. ' ' → logprob: -2.4442219734191895
    5. ' d' → logprob: -2.5692219734191895
    6. ' des' → logprob: -3.4442219734191895
    7. ' integers' → logprob: -3.4442219734191895
    8. ' (' → logprob: -4.1942219734191895
    9. ' les' → logprob: -5.5692219734191895
    10. '(s' → logprob: -5.5692219734191895

Token 136: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.007856219075620174
    2. 'tre' → logprob: -6.382856369018555
    3. 'tries' → logprob: -6.507856369018555
    4. 'ti' → logprob: -6.632856369018555
    5. '()' → logprob: -8.132856369018555
    6. 'try' → logprob: -8.132856369018555
    7. 'ombres' → logprob: -8.382856369018555
    8. 'puts' → logprob: -8.507856369018555
    9. 'tokens' → logprob: -8.632856369018555
    10. 'ités' → logprob: -8.757856369018555

Token 137: ' sépar' (ID: 97160)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005333012901246548
    2. '(' → logprob: -5.505332946777344
    3. 'D' → logprob: -8.130332946777344
    4. ' D' → logprob: -8.505332946777344
    5. 's' → logprob: -8.630332946777344
    6. ' ()' → logprob: -8.630332946777344
    7. '(D' → logprob: -9.130332946777344
    8. ',' → logprob: -9.380332946777344
    9. '().' → logprob: -9.755332946777344
    10. ' =' → logprob: -10.630332946777344

Token 138: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.10962702333927155
    2. 'é' → logprob: -2.3596270084381104
    3. ' par' → logprob: -5.3596272468566895
    4. 'e' → logprob: -6.6096272468566895
    5. 's' → logprob: -6.6096272468566895
    6. 'ée' → logprob: -7.4846272468566895
    7. 'es' → logprob: -7.8596272468566895
    8. ' espaces' → logprob: -8.609626770019531
    9. 'ées' → logprob: -8.859626770019531
    10. 'er' → logprob: -8.984626770019531

Token 139: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.010898550041019917
    2. 'par' → logprob: -5.510898590087891
    3. ' espaces' → logprob: -6.260898590087891
    4. 'es' → logprob: -6.885898590087891
    5. 's' → logprob: -7.010898590087891
    6. ''' → logprob: -7.635898590087891
    7. ''espace' → logprob: -7.635898590087891
    8. 'e' → logprob: -7.885898590087891
    9. '('' → logprob: -8.13589859008789
    10. 'space' → logprob: -8.38589859008789

Token 140: ' des' (ID: 731)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.5905554890632629
    2. ' des' → logprob: -1.7155554294586182
    3. ' ' → logprob: -2.590555429458618
    4. ' espace' → logprob: -3.090555429458618
    5. ''espace' → logprob: -3.090555429458618
    6. ''' → logprob: -3.840555429458618
    7. 'des' → logprob: -3.965555429458618
    8. 'spaces' → logprob: -4.465555667877197
    9. 'space' → logprob: -4.590555667877197
    10. ' espacios' → logprob: -4.965555667877197

Token 141: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.1834038645029068
    2. 'esp' → logprob: -1.8084038496017456
    3. 'spaces' → logprob: -6.683403968811035
    4. ''esp' → logprob: -6.933403968811035
    5. 'es' → logprob: -7.683403968811035
    6. ' espace' → logprob: -8.433403968811035
    7. ''espace' → logprob: -8.558403968811035
    8. 'space' → logprob: -8.933403968811035
    9. ' espacios' → logprob: -9.558403968811035
    10. 'paces' → logprob: -9.558403968811035

Token 142: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5478165149688721
    2. ' ' → logprob: -1.547816514968872
    3. ' D' → logprob: -3.172816514968872
    4. ')' → logprob: -3.172816514968872
    5. ' ,' → logprob: -3.297816514968872
    6. 'D' → logprob: -3.422816514968872
    7. 's' → logprob: -3.672816514968872
    8. 'a' → logprob: -4.672816276550293
    9. ' )' → logprob: -5.297816276550293
    10. '[' → logprob: -5.922816276550293

Token 143: '#' (ID: 2)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.18091042339801788
    2. ' D' → logprob: -1.8059104681015015
    3. ' 
' → logprob: -7.930910587310791
    4. 'd' → logprob: -7.930910587310791
    5. ' ' → logprob: -8.055910110473633
    6. 's' → logprob: -10.180910110473633
    7. ' ' → logprob: -10.680910110473633
    8. ' d' → logprob: -11.243410110473633
    9. 'data' → logprob: -11.743410110473633
    10. '
' → logprob: -11.993410110473633

Token 144: ' input' (ID: 3422)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.12699897587299347
    2. ' D' → logprob: -2.1269989013671875
    3. 'd' → logprob: -9.751998901367188
    4. 's' → logprob: -12.751998901367188
    5. ' 
' → logprob: -12.751998901367188
    6. ' d' → logprob: -13.626998901367188
    7. 'data' → logprob: -13.626998901367188
    8. ' ' → logprob: -13.751998901367188
    9. '
' → logprob: -14.251998901367188
    10. ' data' → logprob: -14.251998901367188

Token 145: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2014244645833969
    2. '()' → logprob: -1.701424479484558
    3. '(' → logprob: -12.326424598693848
    4. '()
' → logprob: -13.076424598693848
    5. '()

' → logprob: -13.701424598693848
    6. '())' → logprob: -14.326424598693848
    7. 's' → logprob: -14.576424598693848
    8. ')' → logprob: -14.576424598693848
    9. '()).' → logprob: -14.951424598693848
    10. ' ()' → logprob: -15.076424598693848

Token 146: ' lit' (ID: 11980)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.30814769864082336
    2. '()' → logprob: -1.558147668838501
    3. '.split' → logprob: -4.43314790725708
    4. ')' → logprob: -4.55814790725708
    5. ' .' → logprob: -4.93314790725708
    6. 'split' → logprob: -5.18314790725708
    7. 's' → logprob: -5.18314790725708
    8. '.' → logprob: -5.30814790725708
    9. ',' → logprob: -6.43314790725708
    10. 'D' → logprob: -6.80814790725708

Token 147: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006872017867863178
    2. '().' → logprob: -5.006872177124023
    3. ' ()' → logprob: -9.381872177124023
    4. '(' → logprob: -10.381872177124023
    5. ' la' → logprob: -11.381872177124023
    6. '('' → logprob: -11.756872177124023
    7. ' une' → logprob: -11.756872177124023
    8. 's' → logprob: -13.131872177124023
    9. 'le' → logprob: -13.756872177124023
    10. '("' → logprob: -13.881872177124023

Token 148: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.2683088481426239
    2. 'ligne' → logprob: -2.1433088779449463
    3. 's' → logprob: -2.7683088779449463
    4. ' line' → logprob: -3.7683088779449463
    5. 'a' → logprob: -5.143308639526367
    6. 'l' → logprob: -5.268308639526367
    7. ' chaîne' → logprob: -6.143308639526367
    8. ' liste' → logprob: -6.143308639526367
    9. '()' → logprob: -6.518308639526367
    10. 'chaine' → logprob: -6.893308639526367

Token 149: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3407982885837555
    2. '()' → logprob: -1.965798258781433
    3. ',' → logprob: -2.8407983779907227
    4. 's' → logprob: -3.4657983779907227
    5. '.' → logprob: -4.590798377990723
    6. '()
' → logprob: -4.590798377990723
    7. 'D' → logprob: -4.590798377990723
    8. ' =' → logprob: -4.715798377990723
    9. '(),' → logprob: -5.715798377990723
    10. ' ,' → logprob: -5.840798377990723

Token 150: ' split' (ID: 12648)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.4782237112522125
    2. ' D' → logprob: -0.9782236814498901
    3. 'd' → logprob: -5.97822380065918
    4. ' data' → logprob: -7.60322380065918
    5. ' d' → logprob: -7.85322380065918
    6. 'data' → logprob: -8.35322380065918
    7. 'arr' → logprob: -8.97822380065918
    8. 'a' → logprob: -10.10322380065918
    9. 'numbers' → logprob: -10.22822380065918
    10. 'A' → logprob: -10.35322380065918

Token 151: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.3199920178740285e-05
    2. '('' → logprob: -11.750022888183594
    3. '().' → logprob: -12.125022888183594
    4. '(' → logprob: -12.375022888183594
    5. ' ()' → logprob: -12.500022888183594
    6. '（）' → logprob: -14.500022888183594
    7. '()]' → logprob: -14.625022888183594
    8. '())' → logprob: -15.625022888183594
    9. '()[' → logprob: -15.625022888183594
    10. '("' → logprob: -15.625022888183594

Token 152: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -8.077528764260933e-05
    2. '().' → logprob: -9.750081062316895
    3. '(' → logprob: -11.000081062316895
    4. ' ()' → logprob: -12.625081062316895
    5. '()

' → logprob: -14.500081062316895
    6. '(),' → logprob: -14.875081062316895
    7. '()
' → logprob: -15.375081062316895
    8. ')' → logprob: -15.500081062316895
    9. '.' → logprob: -15.625081062316895
    10. '())' → logprob: -15.750081062316895

Token 153: ' décou' (ID: 68302)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2554241120815277
    2. '.split' → logprob: -2.1304240226745605
    3. ' split' → logprob: -2.7554240226745605
    4. 's' → logprob: -4.3804240226745605
    5. 'spl' → logprob: -4.5054240226745605
    6. 'plit' → logprob: -5.2554240226745605
    7. ' .' → logprob: -5.7554240226745605
    8. 'div' → logprob: -5.8804240226745605
    9. ' sé' → logprob: -6.5054240226745605
    10. '.strip' → logprob: -7.0054240226745605

Token 154: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0001495484757469967
    2. 'per' → logprob: -9.625149726867676
    3. 'page' → logprob: -9.875149726867676
    4. 'p' → logprob: -11.750149726867676
    5. 'пе' → logprob: -11.875149726867676
    6. '```' → logprob: -12.750149726867676
    7. 'ppe' → logprob: -13.250149726867676
    8. 'de' → logprob: -13.375149726867676
    9. 'pa' → logprob: -13.500149726867676
    10. 'pte' → logprob: -13.500149726867676

Token 155: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010723850573413074
    2. '(' → logprob: -10.000106811523438
    3. ')' → logprob: -10.250106811523438
    4. ' ()' → logprob: -11.750106811523438
    5. '('' → logprob: -12.125106811523438
    6. '[]' → logprob: -12.625106811523438
    7. '()
' → logprob: -12.750106811523438
    8. '())' → logprob: -13.500106811523438
    9. '[' → logprob: -14.250106811523438
    10. '()[' → logprob: -14.375106811523438

Token 156: ' une' (ID: 2463)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.47848275303840637
    2. ' une' → logprob: -1.103482723236084
    3. 'des' → logprob: -3.978482723236084
    4. 'une' → logprob: -4.603482723236084
    5. ' chaînes' → logprob: -5.353482723236084
    6. 'str' → logprob: -5.603482723236084
    7. 'tokens' → logprob: -6.103482723236084
    8. ' espaces' → logprob: -6.603482723236084
    9. ' liste' → logprob: -6.728482723236084
    10. ' tokens' → logprob: -6.728482723236084

Token 157: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.041996899992227554
    2. 'liste' → logprob: -4.041996955871582
    3. ' list' → logprob: -4.291996955871582
    4. 'list' → logprob: -5.291996955871582
    5. 's' → logprob: -5.791996955871582
    6. ' listes' → logprob: -6.416996955871582
    7. ' lista' → logprob: -9.416996955871582
    8. 'Liste' → logprob: -10.041996955871582
    9. ' Liste' → logprob: -11.291996955871582
    10. 'lst' → logprob: -11.666996955871582

Token 158: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006856743711978197
    2. '(' → logprob: -5.131856918334961
    3. ' ()' → logprob: -7.756856918334961
    4. '('' → logprob: -8.006856918334961
    5. '[' → logprob: -10.131856918334961
    6. ' (' → logprob: -10.631856918334961
    7. '()[' → logprob: -10.881856918334961
    8. '().' → logprob: -11.381856918334961
    9. '("' → logprob: -11.506856918334961
    10. '()['' → logprob: -11.631856918334961

Token 159: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.12416364252567291
    2. 'str' → logprob: -2.4991636276245117
    3. 'strings' → logprob: -4.624163627624512
    4. 'chain' → logprob: -4.749163627624512
    5. ' chain' → logprob: -4.874163627624512
    6. 'cha' → logprob: -5.374163627624512
    7. ' strings' → logprob: -6.374163627624512
    8. 'chaine' → logprob: -6.749163627624512
    9. ' chaîne' → logprob: -7.624163627624512
    10. 'string' → logprob: -8.374163627624512

Token 160: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01166000496596098
    2. ' ()' → logprob: -4.761660099029541
    3. '('' → logprob: -7.511660099029541
    4. 's' → logprob: -7.636660099029541
    5. '(' → logprob: -8.136659622192383
    6. 'au' → logprob: -8.386659622192383
    7. '[' → logprob: -8.511659622192383
    8. ' (' → logprob: -8.886659622192383
    9. '[]' → logprob: -8.886659622192383
    10. 'de' → logprob: -9.011659622192383

Token 161: ' map' (ID: 4014)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.3726111352443695
    2. 'D' → logprob: -1.497611165046692
    3. ' map' → logprob: -2.6226110458374023
    4. 'map' → logprob: -4.622611045837402
    5. 'd' → logprob: -6.372611045837402
    6. ' d' → logprob: -7.372611045837402
    7. ' data' → logprob: -7.997611045837402
    8. ' ' → logprob: -8.372611045837402
    9. 's' → logprob: -8.372611045837402
    10. '()' → logprob: -8.497611045837402

Token 162: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00033117449493147433
    2. '(' → logprob: -8.125330924987793
    3. 'int' → logprob: -10.625330924987793
    4. '(in' → logprob: -12.625330924987793
    5. '<int' → logprob: -12.875330924987793
    6. '(str' → logprob: -13.000330924987793
    7. '[int' → logprob: -13.875330924987793
    8. '=int' → logprob: -14.125330924987793
    9. '(lambda' → logprob: -15.125330924987793
    10. '(
' → logprob: -15.500330924987793

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07217006385326385
    2. ')' → logprob: -2.6971700191497803
    3. ',input' → logprob: -6.572170257568359
    4. ',int' → logprob: -8.32217025756836
    5. ',)' → logprob: -8.82217025756836
    6. ' ,' → logprob: -8.94717025756836
    7. ',map' → logprob: -8.94717025756836
    8. '),' → logprob: -9.07217025756836
    9. '))' → logprob: -11.19717025756836
    10. '   ' → logprob: -11.94717025756836

Token 164: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7520325779914856
    2. ' input' → logprob: -1.0020325183868408
    3. ')' → logprob: -1.8770325183868408
    4. ' )' → logprob: -4.87703275680542
    5. ' ' → logprob: -8.002032279968262
    6. 'split' → logprob: -9.627032279968262
    7. '<input' → logprob: -9.752032279968262
    8. '(input' → logprob: -10.127032279968262
    9. '[input' → logprob: -10.127032279968262
    10. 'list' → logprob: -10.502032279968262

Token 165: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02776460163295269
    2. 'D' → logprob: -4.027764797210693
    3. ' D' → logprob: -5.277764797210693
    4. ' )' → logprob: -6.652764797210693
    5. 'd' → logprob: -6.902764797210693
    6. '(D' → logprob: -7.402764797210693
    7. '),' → logprob: -8.027764320373535
    8. ',' → logprob: -8.652764320373535
    9. '()' → logprob: -8.652764320373535
    10. ' permet' → logprob: -8.777764320373535

Token 166: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.07853873819112778
    2. 't' → logprob: -3.328538656234741
    3. 'e' → logprob: -3.703538656234741
    4. 'i' → logprob: -5.07853889465332
    5. '(int' → logprob: -6.20353889465332
    6. 'int' → logprob: -6.70353889465332
    7. 'ent' → logprob: -7.07853889465332
    8. '(it' → logprob: -7.32853889465332
    9. '(' → logprob: -7.45353889465332
    10. ')' → logprob: -7.57853889465332

Token 167: ' chaque' (ID: 21194)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.9243895411491394
    2. '(' → logprob: -1.6743896007537842
    3. ')' → logprob: -1.9243896007537842
    4. '(str' → logprob: -2.174389600753784
    5. ' ' → logprob: -3.924389600753784
    6. '(list' → logprob: -4.174389362335205
    7. 'les' → logprob: -4.174389362335205
    8. ' les' → logprob: -4.299389362335205
    9. ' celles' → logprob: -4.424389362335205
    10. 'ces' → logprob: -4.674389362335205

Token 168: ' chaîne' (ID: 89288)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.07507268339395523
    2. 'chaine' → logprob: -3.200072765350342
    3. ' chaîne' → logprob: -3.700072765350342
    4. ' élément' → logprob: -6.075072765350342
    5. ' chaine' → logprob: -6.325072765350342
    6. ')' → logprob: -7.325072765350342
    7. 'element' → logprob: -8.450072288513184
    8. 'chain' → logprob: -8.575072288513184
    9. 'é' → logprob: -8.575072288513184
    10. 'int' → logprob: -8.575072288513184

Token 169: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02813034877181053
    2. ',' → logprob: -4.278130531311035
    3. ' en' → logprob: -4.903130531311035
    4. '(int' → logprob: -6.153130531311035
    5. '(' → logprob: -6.778130531311035
    6. ' )' → logprob: -6.903130531311035
    7. '),' → logprob: -7.528130531311035
    8. ',int' → logprob: -7.903130531311035
    9. 'int' → logprob: -9.278130531311035
    10. ' into' → logprob: -9.403130531311035

Token 170: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.23828615248203278
    2. 'int' → logprob: -2.238286256790161
    3. ' ent' → logprob: -2.863286256790161
    4. 'ent' → logprob: -3.988286256790161
    5. ' des' → logprob: -4.238286018371582
    6. ' integers' → logprob: -4.488286018371582
    7. ' entier' → logprob: -5.738286018371582
    8. 'inte' → logprob: -7.988286018371582
    9. '<int' → logprob: -8.863286018371582
    10. ' un' → logprob: -9.738286018371582

Token 171: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05144908279180527
    2. 'D' → logprob: -3.3014490604400635
    3. '(D' → logprob: -5.301449298858643
    4. ',' → logprob: -5.426449298858643
    5. ' D' → logprob: -6.676449298858643
    6. '(' → logprob: -7.426449298858643
    7. ' )' → logprob: -7.426449298858643
    8. '),' → logprob: -8.301448822021484
    9. 's' → logprob: -8.676448822021484
    10. 'd' → logprob: -8.801448822021484

Token 172: '#' (ID: 2)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.001334763248451054
    2. ' D' → logprob: -6.6263346672058105
    3. 'd' → logprob: -12.126335144042969
    4. 'A' → logprob: -14.126335144042969
    5. 'data' → logprob: -14.626335144042969
    6. 'arr' → logprob: -15.251335144042969
    7. ' ' → logprob: -15.626335144042969
    8. 'a' → logprob: -15.688835144042969
    9. ' ' → logprob: -15.688835144042969
    10. '#' → logprob: -15.751335144042969

Token 173: ' list' (ID: 1562)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.04859600216150284
    2. ' D' → logprob: -3.048595905303955
    3. 'd' → logprob: -13.048596382141113
    4. 'A' → logprob: -13.048596382141113
    5. 'data' → logprob: -14.298596382141113
    6. 'arr' → logprob: -14.298596382141113
    7. ' ' → logprob: -14.423596382141113
    8. ' ' → logprob: -14.798596382141113
    9. ' data' → logprob: -14.798596382141113
    10. 'values' → logprob: -14.923596382141113

Token 174: '(...)' (ID: 96375)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.1619621217250824
    2. '(' → logprob: -1.9119621515274048
    3. '()' → logprob: -6.911962032318115
    4. '(convert' → logprob: -8.536962509155273
    5. '(com' → logprob: -8.536962509155273
    6. '(
' → logprob: -8.911962509155273
    7. '(int' → logprob: -9.536962509155273
    8. '(s' → logprob: -10.536962509155273
    9. ' comprehension' → logprob: -10.786962509155273
    10. '(...)' → logprob: -11.286962509155273

Token 175: ' crée' (ID: 102256)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5191471576690674
    2. 'D' → logprob: -1.6441471576690674
    3. '=' → logprob: -1.8941471576690674
    4. 'd' → logprob: -4.269146919250488
    5. ' D' → logprob: -4.769146919250488
    6. '(D' → logprob: -5.019146919250488
    7. 's' → logprob: -5.144146919250488
    8. '()' → logprob: -5.394146919250488
    9. '(
' → logprob: -5.769146919250488
    10. '<|end|>' → logprob: -5.769146919250488

Token 176: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4864947199821472
    2. ' une' → logprob: -0.9864947199821472
    3. ' un' → logprob: -5.361494541168213
    4. ' a' → logprob: -5.736494541168213
    5. 'une' → logprob: -6.736494541168213
    6. '[' → logprob: -6.986494541168213
    7. ' ' → logprob: -7.111494541168213
    8. 'a' → logprob: -7.611494541168213
    9. '[]' → logprob: -8.361495018005371
    10. '(' → logprob: -9.611495018005371

Token 177: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.4750462770462036
    2. 'liste' → logprob: -0.9750462770462036
    3. 'list' → logprob: -7.100046157836914
    4. ' list' → logprob: -9.100046157836914
    5. 'Liste' → logprob: -11.600046157836914
    6. 's' → logprob: -12.350046157836914
    7. 'l' → logprob: -12.475046157836914
    8. ' listes' → logprob: -12.850046157836914
    9. 'lista' → logprob: -12.975046157836914
    10. ' Liste' → logprob: -13.225046157836914

Token 178: ' à' (ID: 1221)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.05845828726887703
    2. '(' → logprob: -3.6834583282470703
    3. '(D' → logprob: -4.18345832824707
    4. 'D' → logprob: -4.55845832824707
    5. '(int' → logprob: -6.43345832824707
    6. 'map' → logprob: -7.30845832824707
    7. 'd' → logprob: -7.55845832824707
    8. 's' → logprob: -7.55845832824707
    9. '(
' → logprob: -7.80845832824707
    10. ' D' → logprob: -8.05845832824707

Token 179: ' partir' (ID: 12100)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.02107231318950653
    2. ' partir' → logprob: -3.8960723876953125
    3. ' part' → logprob: -8.896072387695312
    4. 'par' → logprob: -9.146072387695312
    5. 'p' → logprob: -9.646072387695312
    6. 'liste' → logprob: -9.771072387695312
    7. 'list' → logprob: -10.021072387695312
    8. 'pa' → logprob: -11.271072387695312
    9. '[' → logprob: -11.271072387695312
    10. 'l' → logprob: -11.396072387695312

Token 180: ' du' (ID: 1462)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.17449240386486053
    2. ' des' → logprob: -2.299492359161377
    3. ' de' → logprob: -3.424492359161377
    4. '(' → logprob: -3.924492359161377
    5. ' map' → logprob: -5.424492359161377
    6. 'map' → logprob: -6.924492359161377
    7. 'de' → logprob: -8.174492835998535
    8. 'des' → logprob: -8.174492835998535
    9. ' (' → logprob: -9.049492835998535
    10. ' of' → logprob: -9.049492835998535

Token 181: ' résultat' (ID: 62556)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3135083019733429
    2. ' map' → logprob: -1.3135082721710205
    3. 'm' → logprob: -8.813508033752441
    4. '(map' → logprob: -10.313508033752441
    5. 'iterator' → logprob: -11.688508033752441
    6. '	map' → logprob: -12.188508033752441
    7. 'iter' → logprob: -12.313508033752441
    8. ' ' → logprob: -12.313508033752441
    9. 'result' → logprob: -12.313508033752441
    10. ' iterator' → logprob: -12.438508033752441

Token 182: '.
' (ID: 558)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.07936064153909683
    2. 'map' → logprob: -2.8293607234954834
    3. ' map' → logprob: -4.204360485076904
    4. '(' → logprob: -6.829360485076904
    5. ' of' → logprob: -7.954360485076904
    6. ')' → logprob: -8.204360961914062
    7. ' de' → logprob: -8.704360961914062
    8. '=' → logprob: -9.329360961914062
    9. ',map' → logprob: -9.579360961914062
    10. ' des' → logprob: -9.829360961914062

Token 183: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.001933397026732564
    2. ' D' → logprob: -6.251933574676514
    3. 'd' → logprob: -13.001933097839355
    4. 'A' → logprob: -14.626933097839355
    5. '
' → logprob: -15.001933097839355
    6. ' ' → logprob: -15.251933097839355
    7. 'data' → logprob: -15.439433097839355
    8. ' 
' → logprob: -15.751933097839355
    9. 's' → logprob: -15.814433097839355
    10. '

' → logprob: -15.939433097839355

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0052373106591403484
    2. '=' → logprob: -5.255237102508545
    3. 's' → logprob: -13.880237579345703
    4. ' =[' → logprob: -14.005237579345703
    5. ' ' → logprob: -14.630237579345703
    6. '_list' → logprob: -15.130237579345703
    7. '[' → logprob: -15.505237579345703
    8. '[]' → logprob: -15.505237579345703
    9. '_' → logprob: -15.505237579345703
    10. ' ' → logprob: -15.630237579345703

Token 185: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.029750484973192215
    2. 'list' → logprob: -3.5297505855560303
    3. 'List' → logprob: -18.77975082397461
    4. '=list' → logprob: -19.15475082397461
    5. '(list' → logprob: -19.52975082397461
    6. '	list' → logprob: -19.65475082397461
    7. ' ' → logprob: -19.65475082397461
    8. ' ' → logprob: -19.65475082397461
    9. ' lis' → logprob: -20.27975082397461
    10. ' li' → logprob: -20.40475082397461

Token 186: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.03894424065947533
    2. '(' → logprob: -3.2889442443847656
    3. '(int' → logprob: -7.538944244384766
    4. '(input' → logprob: -7.913944244384766
    5. ' (' → logprob: -13.663944244384766
    6. '(list' → logprob: -13.663944244384766
    7. '(s' → logprob: -13.788944244384766
    8. '(
' → logprob: -14.663944244384766
    9. '(m' → logprob: -14.913944244384766
    10. '()' → logprob: -16.163944244384766

Token 187: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011057606898248196
    2. '(' → logprob: -4.511057376861572
    3. '<int' → logprob: -12.88605785369873
    4. '[int' → logprob: -13.26105785369873
    5. ' (' → logprob: -13.63605785369873
    6. '(in' → logprob: -13.63605785369873
    7. 'int' → logprob: -14.01105785369873
    8. '(
' → logprob: -14.13605785369873
    9. '=int' → logprob: -14.51105785369873
    10. '(input' → logprob: -14.76105785369873

Token 188: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.46572965383529663
    2. '(input' → logprob: -1.4657297134399414
    3. ',' → logprob: -1.9657297134399414
    4. '(' → logprob: -6.715729713439941
    5. 'input' → logprob: -9.465729713439941
    6. ' ,' → logprob: -9.965729713439941
    7. ' (' → logprob: -10.965729713439941
    8. ' input' → logprob: -13.090729713439941
    9. ',int' → logprob: -13.840729713439941
    10. ',(' → logprob: -14.340729713439941

Token 189: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06197004392743111
    2. ' input' → logprob: -2.8119699954986572
    3. '(input' → logprob: -13.686969757080078
    4. ' ' → logprob: -14.061969757080078
    5. ',input' → logprob: -15.311969757080078
    6. '	input' → logprob: -16.436969757080078
    7. '<input' → logprob: -16.811969757080078
    8. '=input' → logprob: -16.936969757080078
    9. ')' → logprob: -17.061969757080078
    10. '[input' → logprob: -17.561969757080078

Token 190: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007104054093360901
    2. '()' → logprob: -7.250710487365723
    3. ' ().' → logprob: -15.500710487365723
    4. '(' → logprob: -16.000709533691406
    5. '())' → logprob: -17.250709533691406
    6. '()))' → logprob: -17.500709533691406
    7. '()
' → logprob: -18.500709533691406
    8. '()).' → logprob: -19.250709533691406
    9. '())))' → logprob: -19.375709533691406
    10. '()));' → logprob: -19.500709533691406

Token 191: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009131324477493763
    2. 'strip' → logprob: -7.000913143157959
    3. ' split' → logprob: -13.6259126663208
    4. 'rstrip' → logprob: -14.8759126663208
    5. '(split' → logprob: -16.000913619995117
    6. 'spl' → logprob: -16.875913619995117
    7. 'plit' → logprob: -18.875913619995117
    8. '.split' → logprob: -19.000913619995117
    9. 's' → logprob: -19.125913619995117
    10. ')' → logprob: -19.375913619995117

Token 192: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5184580683708191
    2. '()' → logprob: -1.0184581279754639
    3. '())' → logprob: -3.393458127975464
    4. '))' → logprob: -5.018457889556885
    5. '(' → logprob: -6.268457889556885
    6. ')' → logprob: -6.768457889556885
    7. '())))' → logprob: -9.768458366394043
    8. '()));' → logprob: -10.268458366394043
    9. '()))
' → logprob: -10.518458366394043
    10. '('' → logprob: -11.643458366394043

Token 193: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019451560452580452
    2. '
' → logprob: -4.39445161819458
    3. '

' → logprob: -5.76945161819458
    4. '' → logprob: -6.76945161819458
    5. 'counter' → logprob: -7.01945161819458
    6. '#' → logprob: -7.39445161819458
    7. 'c' → logprob: -7.89445161819458
    8. '

' → logprob: -8.644451141357422
    9. 'd' → logprob: -9.144451141357422
    10. '

' → logprob: -9.394451141357422

Token 194: ' Cré' (ID: 109203)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6331863403320312
    2. 'counter' → logprob: -1.1331863403320312
    3. 'freq' → logprob: -3.2581863403320312
    4. 'cnt' → logprob: -3.5081863403320312
    5. 'counts' → logprob: -3.6331863403320312
    6. 'c' → logprob: -4.008186340332031
    7. 'if' → logprob: -4.133186340332031
    8. 'D' → logprob: -4.758186340332031
    9. '#' → logprob: -5.633186340332031
    10. 'd' → logprob: -5.883186340332031

Token 195: 'ation' (ID: 387)
  Prédit: 'ounter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounter' → logprob: -0.9025435447692871
    2. 'counter' → logprob: -1.527543544769287
    3. 'Counter' → logprob: -1.777543544769287
    4. 'ation' → logprob: -2.902543544769287
    5. ' Counter' → logprob: -3.652543544769287
    6. 'ount' → logprob: -3.777543544769287
    7. 'ter' → logprob: -3.902543544769287
    8. '#' → logprob: -4.027543544769287
    9. '_counter' → logprob: -4.027543544769287
    10. 'er' → logprob: -4.777543544769287

Token 196: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05427149683237076
    2. '(' → logprob: -3.0542714595794678
    3. ' d' → logprob: -6.679271697998047
    4. '_' → logprob: -6.679271697998047
    5. ' Counter' → logprob: -7.429271697998047
    6. 'd' → logprob: -7.554271697998047
    7. ' counter' → logprob: -7.929271697998047
    8. ' de' → logprob: -8.429271697998047
    9. '=' → logprob: -8.429271697998047
    10. ' (' → logprob: -8.679271697998047

Token 197: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1753606796264648
    2. 'a' → logprob: -1.4253606796264648
    3. ''un' → logprob: -1.4253606796264648
    4. 'u' → logprob: -2.300360679626465
    5. 'un' → logprob: -3.800360679626465
    6. 'es' → logprob: -3.925360679626465
    7. '(' → logprob: -4.050360679626465
    8. ''une' → logprob: -4.300360679626465
    9. ''' → logprob: -4.550360679626465
    10. '=' → logprob: -4.925360679626465

Token 198: ' objet' (ID: 13839)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.3418598175048828
    2. ' Counter' → logprob: -1.8418598175048828
    3. ' ' → logprob: -2.841859817504883
    4. ' counter' → logprob: -2.841859817504883
    5. 'counter' → logprob: -4.341859817504883
    6. '_counter' → logprob: -7.841859817504883
    7. ' compteur' → logprob: -7.841859817504883
    8. '.Counter' → logprob: -8.466859817504883
    9. ' variable' → logprob: -9.966859817504883
    10. ' 
' → logprob: -9.966859817504883

Token 199: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.18063105642795563
    2. ' Counter' → logprob: -1.8056310415267944
    3. ' counter' → logprob: -7.305631160736084
    4. 'counter' → logprob: -9.180630683898926
    5. 'C' → logprob: -10.305630683898926
    6. '.Counter' → logprob: -10.305630683898926
    7. '_counter' → logprob: -10.680630683898926
    8. ' ' → logprob: -11.680630683898926
    9. 'Counters' → logprob: -13.180630683898926
    10. ' =' → logprob: -13.305630683898926

Token 200: ' "' (ID: 392)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009961245581507683
    2. '(D' → logprob: -5.009961128234863
    3. 'D' → logprob: -6.384961128234863
    4. '(C' → logprob: -7.134961128234863
    5. '(
' → logprob: -8.509961128234863
    6. 's' → logprob: -8.634961128234863
    7. ')' → logprob: -9.759961128234863
    8. 'd' → logprob: -9.759961128234863
    9. 'C' → logprob: -9.884961128234863
    10. 'Counter' → logprob: -10.384961128234863

Token 201: 'C' (ID: 34)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.8952085971832275
    2. '(D' → logprob: -1.6452085971832275
    3. 'counter' → logprob: -2.3952085971832275
    4. '"' → logprob: -2.6452085971832275
    5. 'Counter' → logprob: -2.6452085971832275
    6. 'd' → logprob: -3.1452085971832275
    7. 'count' → logprob: -3.5202085971832275
    8. '_counter' → logprob: -3.8952085971832275
    9. 'c' → logprob: -4.395208358764648
    10. ')' → logprob: -4.520208358764648

Token 202: '"' (ID: 1)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.8912482857704163
    2. 'ounter' → logprob: -1.6412482261657715
    3. ')' → logprob: -2.1412482261657715
    4. '(D' → logprob: -2.2662482261657715
    5. '"' → logprob: -3.3912482261657715
    6. 'er' → logprob: -3.6412482261657715
    7. ')"' → logprob: -3.6412482261657715
    8. '(' → logprob: -3.7662482261657715
    9. ' =' → logprob: -4.1412482261657715
    10. 'e' → logprob: -5.0162482261657715

Token 203: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03986967355012894
    2. '=' → logprob: -4.039869785308838
    3. ' =' → logprob: -4.289869785308838
    4. '(C' → logprob: -4.914869785308838
    5. '(D' → logprob: -8.03986930847168
    6. '(
' → logprob: -10.16486930847168
    7. 'C' → logprob: -10.91486930847168
    8. ')' → logprob: -11.03986930847168
    9. 'D' → logprob: -11.28986930847168
    10. '(

' → logprob: -11.66486930847168

Token 204: ' partir' (ID: 12100)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.0028540899511426687
    2. ' Counter' → logprob: -6.002853870391846
    3. '.Counter' → logprob: -9.252854347229004
    4. 'ounter' → logprob: -9.502854347229004
    5. ' counter' → logprob: -9.502854347229004
    6. '_counter' → logprob: -9.877854347229004
    7. 'counter' → logprob: -9.877854347229004
    8. 'Count' → logprob: -12.002854347229004
    9. 'C' → logprob: -12.127854347229004
    10. ' compter' → logprob: -12.252854347229004

Token 205: ' de' (ID: 334)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.012562860734760761
    2. '(' → logprob: -4.3875627517700195
    3. '(
' → logprob: -10.51256275177002
    4. 'D' → logprob: -10.88756275177002
    5. ')' → logprob: -13.26256275177002
    6. ' (' → logprob: -13.76256275177002
    7. ' D' → logprob: -14.51256275177002
    8. 's' → logprob: -14.51256275177002
    9. '(de' → logprob: -14.76256275177002
    10. '(

' → logprob: -14.76256275177002

Token 206: ' la' (ID: 557)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0012373719364404678
    2. '(D' → logprob: -6.876237392425537
    3. ' D' → logprob: -8.501236915588379
    4. '[D' → logprob: -14.751236915588379
    5. '
' → logprob: -15.126236915588379
    6. '(' → logprob: -15.751236915588379
    7. ')' → logprob: -15.876236915588379
    8. 'd' → logprob: -16.251237869262695
    9. '	D' → logprob: -16.751237869262695
    10. 'la' → logprob: -17.126237869262695

Token 207: ' liste' (ID: 31719)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0003382038848940283
    2. ' D' → logprob: -8.000338554382324
    3. 'liste' → logprob: -13.625338554382324
    4. '(D' → logprob: -14.375338554382324
    5. 'C' → logprob: -15.250338554382324
    6. 'd' → logprob: -15.500338554382324
    7. '
' → logprob: -16.125337600708008
    8. 'list' → logprob: -16.500337600708008
    9. '[D' → logprob: -16.625337600708008
    10. ' liste' → logprob: -17.250337600708008

Token 208: ' D' (ID: 415)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.006821220740675926
    2. '(' → logprob: -5.256821155548096
    3. 'D' → logprob: -6.506821155548096
    4. '(
' → logprob: -9.631821632385254
    5. '(C' → logprob: -10.881821632385254
    6. ' (' → logprob: -12.631821632385254
    7. 'C' → logprob: -13.131821632385254
    8. ' D' → logprob: -14.506821632385254
    9. ')' → logprob: -14.631821632385254
    10. '(

' → logprob: -14.881821632385254

Token 209: '.
' (ID: 558)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.1083606705069542
    2. '(' → logprob: -2.733360767364502
    3. '(C' → logprob: -3.483360767364502
    4. '(
' → logprob: -4.983360767364502
    5. ')' → logprob: -9.483360290527344
    6. ',' → logprob: -10.733360290527344
    7. '=' → logprob: -11.233360290527344
    8. 'D' → logprob: -11.483360290527344
    9. 'Counter' → logprob: -12.358360290527344
    10. '(

' → logprob: -12.608360290527344

Token 210: '#' (ID: 2)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00010902655776590109
    2. ' C' → logprob: -9.12510871887207
    3. '
' → logprob: -17.12510871887207
    4. 'Counter' → logprob: -17.37510871887207
    5. '	C' → logprob: -18.37510871887207
    6. '(C' → logprob: -19.00010871887207
    7. '_C' → logprob: -19.12510871887207
    8. ')' → logprob: -19.25010871887207
    9. ' 
' → logprob: -19.62510871887207
    10. '=' → logprob: -19.62510871887207

Token 211: ' Cela' (ID: 44403)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.018151935189962387
    2. ' C' → logprob: -4.018151760101318
    3. '
' → logprob: -13.643152236938477
    4. ' 
' → logprob: -15.518152236938477
    5. 'Counter' → logprob: -15.518152236938477
    6. ' ' → logprob: -16.268152236938477
    7. ' ' → logprob: -16.393152236938477
    8. '#' → logprob: -16.893152236938477
    9. '

' → logprob: -17.768152236938477
    10. ' counter' → logprob: -18.143152236938477

Token 212: ' va' (ID: 3423)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7956529259681702
    2. ' =' → logprob: -1.1706528663635254
    3. '=' → logprob: -2.1706528663635254
    4. ' permet' → logprob: -2.1706528663635254
    5. ' C' → logprob: -6.170652866363525
    6. 'comp' → logprob: -6.420652866363525
    7. 's' → logprob: -7.045652866363525
    8. ' permettra' → logprob: -7.045652866363525
    9. ' compte' → logprob: -7.170652866363525
    10. ')' → logprob: -7.420652866363525

Token 213: ' assoc' (ID: 107464)
  Prédit: ' compter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.4018303453922272
    2. 'comp' → logprob: -1.1518303155899048
    3. ' permettre' → logprob: -5.276830196380615
    4. 'per' → logprob: -5.901830196380615
    5. 'count' → logprob: -6.151830196380615
    6. 'com' → logprob: -6.401830196380615
    7. ' compt' → logprob: -6.901830196380615
    8. ' comp' → logprob: -8.276830673217773
    9. 'C' → logprob: -8.526830673217773
    10. 'counter' → logprob: -8.526830673217773

Token 214: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.010958448983728886
    2. 'ié' → logprob: -5.635958671569824
    3. 'ie' → logprob: -5.885958671569824
    4. 'Counter' → logprob: -6.510958671569824
    5. 'i' → logprob: -6.635958671569824
    6. ' Counter' → logprob: -7.135958671569824
    7. 'er' → logprob: -7.635958671569824
    8. '_counter' → logprob: -9.135958671569824
    9. 'D' → logprob: -9.635958671569824
    10. '   ' → logprob: -10.260958671569824

Token 215: ' à' (ID: 1221)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -1.0498483180999756
    2. 'each' → logprob: -1.2998483180999756
    3. ' chaque' → logprob: -1.2998483180999756
    4. '<|end|>' → logprob: -2.5498483180999756
    5. ' ' → logprob: -4.299848556518555
    6. ' D' → logprob: -6.049848556518555
    7. 'C' → logprob: -6.549848556518555
    8. ' des' → logprob: -6.549848556518555
    9. ' chacune' → logprob: -6.674848556518555
    10. 'Chaque' → logprob: -6.924848556518555

Token 216: ' chaque' (ID: 21194)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.24583016335964203
    2. ' D' → logprob: -1.8708301782608032
    3. 'C' → logprob: -3.1208300590515137
    4. ' chaque' → logprob: -4.495830059051514
    5. ' C' → logprob: -5.245830059051514
    6. 'each' → logprob: -6.745830059051514
    7. ' each' → logprob: -7.120830059051514
    8. 'Counter' → logprob: -7.495830059051514
    9. ' ' → logprob: -8.120830535888672
    10. 'Chaque' → logprob: -9.120830535888672

Token 217: ' valeur' (ID: 41664)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.007419321686029434
    2. ' élément' → logprob: -5.257419109344482
    3. 'element' → logprob: -6.507419109344482
    4. 'val' → logprob: -7.882419109344482
    5. 'D' → logprob: -9.13241958618164
    6. 'nombre' → logprob: -9.25741958618164
    7. 'elem' → logprob: -10.38241958618164
    8. 'd' → logprob: -10.88241958618164
    9. 'é' → logprob: -11.63241958618164
    10. ' element' → logprob: -11.88241958618164

Token 218: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9241387844085693
    2. '(D' → logprob: -0.9241387844085693
    3. ' ' → logprob: -2.2991387844085693
    4. ' de' → logprob: -3.1741387844085693
    5. ' (' → logprob: -3.9241387844085693
    6. '_' → logprob: -4.549139022827148
    7. 'D' → logprob: -5.299139022827148
    8. 'de' → logprob: -5.299139022827148
    9. '(C' → logprob: -5.424139022827148
    10. ' D' → logprob: -5.424139022827148

Token 219: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.06996266543865204
    2. ' D' → logprob: -2.694962739944458
    3. 'C' → logprob: -11.069962501525879
    4. ' ' → logprob: -12.194962501525879
    5. ' la' → logprob: -13.569962501525879
    6. ' C' → logprob: -14.194962501525879
    7. 'd' → logprob: -14.194962501525879
    8. '(D' → logprob: -14.694962501525879
    9. 'l' → logprob: -15.069962501525879
    10. '
' → logprob: -15.069962501525879

Token 220: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3188641667366028
    2. ' sa' → logprob: -2.693864107131958
    3. ' un' → logprob: -3.068864107131958
    4. ' une' → logprob: -3.443864107131958
    5. ' la' → logprob: -3.568864107131958
    6. ',' → logprob: -3.568864107131958
    7. 'D' → logprob: -4.318864345550537
    8. ')' → logprob: -4.568864345550537
    9. ' son' → logprob: -4.693864345550537
    10. ' D' → logprob: -4.818864345550537

Token 221: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.12980836629867554
    2. 'nombre' → logprob: -2.1298084259033203
    3. 'ur' → logprob: -6.25480842590332
    4. ' compteur' → logprob: -7.12980842590332
    5. 'n' → logprob: -10.00480842590332
    6. ' nombres' → logprob: -10.12980842590332
    7. ' compte' → logprob: -11.25480842590332
    8. 'nb' → logprob: -11.75480842590332
    9. '_nombre' → logprob: -12.12980842590332
    10. ' nb' → logprob: -12.12980842590332

Token 222: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.19147205352783203
    2. '<|end|>' → logprob: -2.191472053527832
    3. ' des' → logprob: -3.941472053527832
    4. ' ' → logprob: -3.941472053527832
    5. 'd' → logprob: -4.316472053527832
    6. '_' → logprob: -5.441472053527832
    7. ' de' → logprob: -5.816472053527832
    8. 'space' → logprob: -7.941472053527832
    9. '  ' → logprob: -8.066472053527832
    10. '<|end|>' → logprob: -8.191472053527832

Token 223: ' fois' (ID: 14697)
  Prédit: ' occurrences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' occurrences' → logprob: -1.2759900093078613
    2. ' sa' → logprob: -1.5259900093078613
    3. ' ' → logprob: -2.0259900093078613
    4. ' son' → logprob: -2.1509900093078613
    5. ' espaces' → logprob: -3.1509900093078613
    6. 'occ' → logprob: -3.5259900093078613
    7. '_' → logprob: -3.6509900093078613
    8. ' its' → logprob: -3.7759900093078613
    9. 's' → logprob: -4.025990009307861
    10. 'occur' → logprob: -4.025990009307861

Token 224: ' où' (ID: 15113)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16472429037094116
    2. ' qu' → logprob: -2.164724349975586
    3. ' où' → logprob: -4.039724349975586
    4. ' ' → logprob: -4.789724349975586
    5. ' espace' → logprob: -6.289724349975586
    6. '<|end|>' → logprob: -6.414724349975586
    7. 'space' → logprob: -6.539724349975586
    8. ' space' → logprob: -6.914724349975586
    9. 'où' → logprob: -7.414724349975586
    10. ' where' → logprob: -7.789724349975586

Token 225: ' elle' (ID: 11451)
  Prédit: ' elle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elle' → logprob: -0.046201132237911224
    2. ' celle' → logprob: -3.921201229095459
    3. 'celle' → logprob: -4.671201229095459
    4. 'elle' → logprob: -4.921201229095459
    5. 'c' → logprob: -5.421201229095459
    6. ''elle' → logprob: -6.421201229095459
    7. ' cette' → logprob: -6.546201229095459
    8. 'C' → logprob: -7.796201229095459
    9. ' il' → logprob: -9.0462007522583
    10. ' ' → logprob: -9.1712007522583

Token 226: ' apparaît' (ID: 147656)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.13087336719036102
    2. ' apparaît' → logprob: -2.505873441696167
    3. 'appar' → logprob: -4.255873203277588
    4. 'a' → logprob: -4.630873203277588
    5. ' ' → logprob: -4.880873203277588
    6. '_' → logprob: -5.630873203277588
    7. 'app' → logprob: -6.630873203277588
    8. ' a' → logprob: -7.005873203277588
    9. ' ' → logprob: -7.255873203277588
    10. ' appara' → logprob: -7.255873203277588

Token 227: '.
' (ID: 558)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7178957462310791
    2. '(' → logprob: -0.9678957462310791
    3. '(C' → logprob: -2.717895746231079
    4. ')' → logprob: -3.842895746231079
    5. ',' → logprob: -3.967895746231079
    6. '(
' → logprob: -4.5928955078125
    7. 'D' → logprob: -4.9678955078125
    8. '.' → logprob: -5.5928955078125
    9. '(D' → logprob: -5.8428955078125
    10. ' C' → logprob: -7.4678955078125

Token 228: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -9.85366350505501e-05
    2. ' C' → logprob: -9.25009822845459
    3. '
' → logprob: -13.00009822845459
    4. 'Counter' → logprob: -17.750099182128906
    5. '
' → logprob: -18.375099182128906
    6. '

' → logprob: -18.500099182128906
    7. ' 
' → logprob: -18.500099182128906
    8. '#' → logprob: -19.250099182128906
    9. '```' → logprob: -19.250099182128906
    10. '	C' → logprob: -19.250099182128906

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132627606391907
    2. '=' → logprob: -1.313262701034546
    3. '=C' → logprob: -14.188262939453125
    4. ' =
' → logprob: -16.313262939453125
    5. '=D' → logprob: -16.438262939453125
    6. '(' → logprob: -16.438262939453125
    7. '＝' → logprob: -17.313262939453125
    8. ')' → logprob: -17.438262939453125
    9. ' ' → logprob: -17.938262939453125
    10. ',' → logprob: -17.938262939453125

Token 230: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.00029637437546625733
    2. ' Counter' → logprob: -8.125296592712402
    3. '.Counter' → logprob: -15.500296592712402
    4. 'C' → logprob: -17.125295639038086
    5. 'counter' → logprob: -17.500295639038086
    6. '_counter' → logprob: -18.000295639038086
    7. 'Counters' → logprob: -18.375295639038086
    8. ' counter' → logprob: -18.375295639038086
    9. 'Coun' → logprob: -18.625295639038086
    10. 'Count' → logprob: -19.375295639038086

Token 231: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.00033784625702537596
    2. '(' → logprob: -8.000337600708008
    3. ' (' → logprob: -13.125337600708008
    4. '(
' → logprob: -15.625337600708008
    5. '(C' → logprob: -15.875337600708008
    6. '(N' → logprob: -17.375337600708008
    7. 'D' → logprob: -17.875337600708008
    8. '(d' → logprob: -18.250337600708008
    9. '((' → logprob: -18.375337600708008
    10. '(S' → logprob: -18.625337600708008

Token 232: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -13.750001907348633
    3. '))' → logprob: -14.750001907348633
    4. ')
' → logprob: -16.125001907348633
    5. ')#' → logprob: -17.000001907348633
    6. ')`' → logprob: -17.375001907348633
    7. ').' → logprob: -18.500001907348633
    8. '())' → logprob: -18.875001907348633
    9. '),' → logprob: -18.875001907348633
    10. '}' → logprob: -19.125001907348633

Token 233: '#' (ID: 2)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keys' → logprob: -1.1239794492721558
    2. '#' → logprob: -1.3739794492721558
    3. 'if' → logprob: -2.1239795684814453
    4. 'D' → logprob: -2.3739795684814453
    5. 'max' → logprob: -3.2489795684814453
    6. 'values' → logprob: -3.3739795684814453
    7. 'vals' → logprob: -3.6239795684814453
    8. 'd' → logprob: -3.9989795684814453
    9. 'v' → logprob: -4.248979568481445
    10. 'ans' → logprob: -4.873979568481445

Token 234: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.589101791381836
    2. 'max' → logprob: -1.839101791381836
    3. 'keys' → logprob: -2.089101791381836
    4. 'sorted' → logprob: -2.589101791381836
    5. 'fact' → logprob: -2.589101791381836
    6. 'values' → logprob: -3.089101791381836
    7. 'dp' → logprob: -3.214101791381836
    8. 'ans' → logprob: -3.214101791381836
    9. 'D' → logprob: -3.339101791381836
    10. '#' → logprob: -3.714101791381836

Token 235: 'ification' (ID: 3166)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.546256959438324
    2. 'ification' → logprob: -0.921256959438324
    3. 'ifier' → logprob: -3.9212570190429688
    4. '#' → logprob: -6.296257019042969
    5. 'ifie' → logprob: -7.421257019042969
    6. 'ifiez' → logprob: -8.296257019042969
    7. 'ifications' → logprob: -9.046257019042969
    8. 'ifi' → logprob: -9.171257019042969
    9. '```' → logprob: -10.671257019042969
    10. 'ify' → logprob: -10.671257019042969

Token 236: ' que' (ID: 661)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0822439193725586
    2. ' if' → logprob: -3.2072439193725586
    3. 'if' → logprob: -3.8322439193725586
    4. ' ' → logprob: -4.832243919372559
    5. 's' → logprob: -5.832243919372559
    6. ' (' → logprob: -6.707243919372559
    7. '(
' → logprob: -6.832243919372559
    8. '_' → logprob: -7.707243919372559
    9. '#' → logprob: -7.707243919372559
    10. '(C' → logprob: -7.707243919372559

Token 237: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6407883763313293
    2. '0' → logprob: -1.8907883167266846
    3. 'D' → logprob: -2.1407883167266846
    4. 'N' → logprob: -2.6407883167266846
    5. 'len' → logprob: -2.7657883167266846
    6. 'sorted' → logprob: -3.5157883167266846
    7. 'C' → logprob: -3.7657883167266846
    8. ' ' → logprob: -4.765788555145264
    9. ' D' → logprob: -6.015788555145264
    10. ' N' → logprob: -6.390788555145264

Token 238: ' première' (ID: 23423)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2773822844028473
    2. 'D' → logprob: -2.4023823738098145
    3. '1' → logprob: -2.9023823738098145
    4. 'len' → logprob: -3.2773823738098145
    5. 'N' → logprob: -3.5273823738098145
    6. 'C' → logprob: -4.0273823738098145
    7. 'sorted' → logprob: -5.2773823738098145
    8. 'max' → logprob: -6.1523823738098145
    9. ' ' → logprob: -6.9023823738098145
    10. 'set' → logprob: -7.2773823738098145

Token 239: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.501971960067749
    2. '_' → logprob: -2.001971960067749
    3. '()' → logprob: -3.251971960067749
    4. ' valeur' → logprob: -3.251971960067749
    5. '_val' → logprob: -3.751971960067749
    6. '(' → logprob: -4.001972198486328
    7. 'max' → logprob: -4.001972198486328
    8. ')' → logprob: -4.751972198486328
    9. 'min' → logprob: -4.751972198486328
    10. 'D' → logprob: -4.751972198486328

Token 240: ' de' (ID: 334)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.2278454303741455
    2. '(D' → logprob: -1.8528454303741455
    3. 'D' → logprob: -2.4778454303741455
    4. '(sorted' → logprob: -2.6028454303741455
    5. '_' → logprob: -2.8528454303741455
    6. ' de' → logprob: -3.2278454303741455
    7. 'max' → logprob: -3.3528454303741455
    8. ' sorted' → logprob: -3.3528454303741455
    9. 'min' → logprob: -3.7278454303741455
    10. '_sorted' → logprob: -3.8528454303741455

Token 241: ' la' (ID: 557)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0019681276753544807
    2. ' D' → logprob: -6.876967906951904
    3. 'sorted' → logprob: -7.501967906951904
    4. 'N' → logprob: -8.751968383789062
    5. 'C' → logprob: -8.876968383789062
    6. 'd' → logprob: -10.251968383789062
    7. ' sorted' → logprob: -10.751968383789062
    8. '0' → logprob: -12.126968383789062
    9. 'sort' → logprob: -12.751968383789062
    10. 'min' → logprob: -12.751968383789062

Token 242: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.612057089805603
    2. 'D' → logprob: -0.862057089805603
    3. 'sorted' → logprob: -3.6120572090148926
    4. 'list' → logprob: -5.737057209014893
    5. ' liste' → logprob: -6.237057209014893
    6. 'C' → logprob: -7.112057209014893
    7. 'd' → logprob: -7.612057209014893
    8. 's' → logprob: -7.737057209014893
    9. ' D' → logprob: -7.987057209014893
    10. 'sequence' → logprob: -8.487056732177734

Token 243: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0553152859210968
    2. ' D' → logprob: -2.9303152561187744
    3. '(D' → logprob: -8.680315017700195
    4. ' sorted' → logprob: -10.055315017700195
    5. 'sorted' → logprob: -10.180315017700195
    6. ' is' → logprob: -10.555315017700195
    7. ' est' → logprob: -10.555315017700195
    8. 'd' → logprob: -11.305315017700195
    9. '()' → logprob: -11.305315017700195
    10. '(sorted' → logprob: -11.430315017700195

Token 244: ' est' (ID: 893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16512225568294525
    2. ' est' → logprob: -2.4151222705841064
    3. 'est' → logprob: -4.040122032165527
    4. '==' → logprob: -4.290122032165527
    5. '0' → logprob: -4.540122032165527
    6. ' ==' → logprob: -4.790122032165527
    7. ' is' → logprob: -4.790122032165527
    8. 'is' → logprob: -6.290122032165527
    9. ' ' → logprob: -7.665122032165527
    10. '1' → logprob: -7.915122032165527

Token 245: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18113821744918823
    2. '1' → logprob: -1.806138277053833
    3. ' ' → logprob: -7.181138038635254
    4. 'D' → logprob: -7.681138038635254
    5. 'C' → logprob: -9.681138038635254
    6. ' D' → logprob: -10.181138038635254
    7. 'equal' → logprob: -10.306138038635254
    8. 'N' → logprob: -11.931138038635254
    9. ' C' → logprob: -12.306138038635254
    10. '=' → logprob: -12.431138038635254

Token 246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00121916679199785
    2. '1' → logprob: -6.751219272613525
    3. 'D' → logprob: -11.376218795776367
    4. ' ' → logprob: -11.501218795776367
    5. 'N' → logprob: -11.876218795776367
    6. 'C' → logprob: -12.126218795776367
    7. 'equal' → logprob: -12.376218795776367
    8. '=' → logprob: -12.751218795776367
    9. 'zero' → logprob: -13.751218795776367
    10. '```' → logprob: -14.376218795776367

Token 247: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15017543733119965
    2. ' if' → logprob: -2.0251753330230713
    3. ' and' → logprob: -5.02517557144165
    4. 'and' → logprob: -8.275175094604492
    5. ',' → logprob: -8.400175094604492
    6. '.' → logprob: -9.525175094604492
    7. '[' → logprob: -9.525175094604492
    8. ' ' → logprob: -9.900175094604492
    9. ' ==' → logprob: -10.150175094604492
    10. 'assert' → logprob: -10.150175094604492

Token 248: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002086854539811611
    2. ' if' → logprob: -6.752086639404297
    3. 'assert' → logprob: -7.002086639404297
    4. 'i' → logprob: -12.377086639404297
    5. ' assert' → logprob: -13.127086639404297
    6. '#' → logprob: -16.627086639404297
    7. ' i' → logprob: -16.752086639404297
    8. '0' → logprob: -18.002086639404297
    9. 'If' → logprob: -19.127086639404297
    10. 'a' → logprob: -19.502086639404297

Token 249: ' Cela' (ID: 44403)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01825237087905407
    2. 'assert' → logprob: -4.018252372741699
    3. ' if' → logprob: -9.3932523727417
    4. ' assert' → logprob: -11.5182523727417
    5. 'i' → logprob: -11.6432523727417
    6. '#' → logprob: -14.8932523727417
    7. 'a' → logprob: -16.643251419067383
    8. '
' → logprob: -18.143251419067383
    9. ' i' → logprob: -18.518251419067383
    10. '```' → logprob: -19.393251419067383

Token 250: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6450220346450806
    2. 'if' → logprob: -1.0200220346450806
    3. ':' → logprob: -2.770021915435791
    4. ' n' → logprob: -4.145021915435791
    5. ' ' → logprob: -5.020021915435791
    6. ' a' → logprob: -5.270021915435791
    7. ')' → logprob: -5.520021915435791
    8. '#' → logprob: -5.520021915435791
    9. '.' → logprob: -5.895021915435791
    10. 'n' → logprob: -6.395021915435791

Token 251: ''é' (ID: 12728)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.49974653124809265
    2. 'ert' → logprob: -1.749746561050415
    3. 'ur' → logprob: -2.374746561050415
    4. 'er' → logprob: -2.749746561050415
    5. 'et' → logprob: -4.749746322631836
    6. 'u' → logprob: -4.874746322631836
    7. 'if' → logprob: -4.999746322631836
    8. 'em' → logprob: -5.249746322631836
    9. 'sert' → logprob: -5.249746322631836
    10. 't' → logprob: -5.624746322631836

Token 252: 'crit' (ID: 15345)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.3550492525100708
    2. 'ass' → logprob: -1.6050492525100708
    3. 'c' → logprob: -2.3550491333007812
    4. 'ure' → logprob: -2.4800491333007812
    5. 'e' → logprob: -3.4800491333007812
    6. 'et' → logprob: -3.4800491333007812
    7. 'ert' → logprob: -3.7300491333007812
    8. '#' → logprob: -3.8550491333007812
    9. 'crit' → logprob: -3.8550491333007812
    10. 'v' → logprob: -4.105049133300781

Token 253: ' D' (ID: 415)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03881581872701645
    2. ' if' → logprob: -3.78881573677063
    3. 'assert' → logprob: -4.663815975189209
    4. 'D' → logprob: -5.288815975189209
    5. ' D' → logprob: -7.288815975189209
    6. ' assert' → logprob: -8.91381549835205
    7. 'C' → logprob: -9.41381549835205
    8. ':' → logprob: -10.28881549835205
    9. ' C' → logprob: -10.41381549835205
    10. 'print' → logprob: -12.53881549835205

Token 254: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '\[' → logprob: -14.500000953674316
    3. ' [' → logprob: -15.375000953674316
    4. '0' → logprob: -15.750000953674316
    5. '```' → logprob: -16.125001907348633
    6. '.' → logprob: -17.000001907348633
    7. '[
' → logprob: -17.000001907348633
    8. '[-' → logprob: -18.875001907348633
    9. '
' → logprob: -19.250001907348633
    10. '#' → logprob: -19.250001907348633

Token 255: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6166903151315637e-05
    2. ' ' → logprob: -11.125016212463379
    3. '[' → logprob: -13.625016212463379
    4. ']' → logprob: -15.625016212463379
    5. '```' → logprob: -17.250015258789062
    6. '   ' → logprob: -17.875015258789062
    7. '
' → logprob: -18.500015258789062
    8. ')' → logprob: -19.625015258789062
    9. '][' → logprob: -20.000015258789062
    10. ' [' → logprob: -20.125015258789062

Token 256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004876858089119196
    2. ']==' → logprob: -5.379877090454102
    3. '])' → logprob: -9.004877090454102
    4. ' ]' → logprob: -9.004877090454102
    5. ']!=' → logprob: -12.504877090454102
    6. '==' → logprob: -13.629877090454102
    7. '()]' → logprob: -13.754877090454102
    8. '[' → logprob: -14.379877090454102
    9. '0' → logprob: -14.379877090454102
    10. ')' → logprob: -14.379877090454102

Token 257: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4742620289325714
    2. ' ==' → logprob: -0.974261999130249
    3. '=' → logprob: -9.099262237548828
    4. ')' → logprob: -9.849262237548828
    5. ')==' → logprob: -11.974262237548828
    6. '!=' → logprob: -12.474262237548828
    7. ']==' → logprob: -12.849262237548828
    8. ' !=' → logprob: -13.224262237548828
    9. '==
' → logprob: -13.224262237548828
    10. '()==' → logprob: -13.724262237548828

Token 258: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. ' ' → logprob: -21.25247573852539
    4. '  ' → logprob: -22.75247573852539
    5. '۰' → logprob: -23.25247573852539
    6. '=' → logprob: -23.62747573852539
    7. '   ' → logprob: -23.62747573852539
    8. '1' → logprob: -23.75247573852539
    9. '０' → logprob: -23.75247573852539
    10. '00' → logprob: -24.12747573852539

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '۰' → logprob: -21.750009536743164
    4. '０' → logprob: -22.000009536743164
    5. '`' → logprob: -22.375009536743164
    6. '```' → logprob: -22.812509536743164
    7. '00' → logprob: -23.000009536743164
    8. '=' → logprob: -23.125009536743164
    9. ' ' → logprob: -23.250009536743164
    10. ' ' → logprob: -23.437509536743164

Token 260: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02225952222943306
    2. ':' → logprob: -4.147259712219238
    3. ' if' → logprob: -5.272259712219238
    4. ':
' → logprob: -7.397259712219238
    5. ')' → logprob: -8.397259712219238
    6. '.' → logprob: -8.897259712219238
    7. 'i' → logprob: -10.772259712219238
    8. ',' → logprob: -11.022259712219238
    9. '#' → logprob: -11.397259712219238
    10. 'assert' → logprob: -11.772259712219238

Token 261: ' ce' (ID: 2357)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9049234390258789
    2. ' if' → logprob: -1.529923439025879
    3. 'print' → logprob: -2.154923439025879
    4. ' print' → logprob: -2.529923439025879
    5. ':' → logprob: -2.779923439025879
    6. ' ' → logprob: -3.279923439025879
    7. '   ' → logprob: -3.404923439025879
    8. ' exit' → logprob: -5.154923439025879
    9. '
' → logprob: -5.279923439025879
    10. 'exit' → logprob: -5.404923439025879

Token 262: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.6839735507965088
    2. ' or' → logprob: -1.0589735507965088
    3. ' that' → logprob: -3.308973550796509
    4. ' if' → logprob: -3.558973550796509
    5. 'if' → logprob: -3.683973550796509
    6. ':' → logprob: -4.05897331237793
    7. 'qui' → logprob: -4.80897331237793
    8. ' and' → logprob: -5.18397331237793
    9. 'and' → logprob: -5.18397331237793
    10. 'or' → logprob: -5.30897331237793

Token 263: ' teste' (ID: 62670)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009649383719079196
    2. ':
' → logprob: -7.500965118408203
    3. 'if' → logprob: -8.875965118408203
    4. ' :' → logprob: -9.125965118408203
    5. ')' → logprob: -10.625965118408203
    6. ':return' → logprob: -10.750965118408203
    7. ' if' → logprob: -10.875965118408203
    8. ' or' → logprob: -11.000965118408203
    9. ':#' → logprob: -11.000965118408203
    10. '#' → logprob: -11.000965118408203

Token 264: ' si' (ID: 1784)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28617751598358154
    2. ' if' → logprob: -2.286177635192871
    3. ' ' → logprob: -2.536177635192871
    4. ' :' → logprob: -3.036177635192871
    5. 'if' → logprob: -5.411177635192871
    6. ')' → logprob: -5.411177635192871
    7. ' si' → logprob: -5.911177635192871
    8. ' une' → logprob: -6.536177635192871
    9. ' ' → logprob: -6.661177635192871
    10. ' for' → logprob: -7.286177635192871

Token 265: ' le' (ID: 505)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.007205486297607422
    2. 'D' → logprob: -5.132205486297607
    3. ' ' → logprob: -7.507205486297607
    4. ' la' → logprob: -8.007205963134766
    5. ' ' → logprob: -8.507205963134766
    6. ' True' → logprob: -9.507205963134766
    7. 'True' → logprob: -10.382205963134766
    8. ' not' → logprob: -10.882205963134766
    9. ' l' → logprob: -11.007205963134766
    10. ' une' → logprob: -11.632205963134766

Token 266: ' premier' (ID: 15506)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.7438021898269653
    2. ' premier' → logprob: -0.9938021898269653
    3. ' D' → logprob: -2.618802070617676
    4. 'prem' → logprob: -2.743802070617676
    5. '0' → logprob: -4.993802070617676
    6. ' first' → logprob: -5.493802070617676
    7. 'len' → logprob: -6.868802070617676
    8. ' première' → logprob: -7.118802070617676
    9. 'first' → logprob: -7.118802070617676
    10. 's' → logprob: -7.743802070617676

Token 267: ' élément' (ID: 99627)
  Prédit: ' élément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.7541501522064209
    2. ']' → logprob: -1.129150152206421
    3. 'élé' → logprob: -2.004150152206421
    4. 'element' → logprob: -3.254150152206421
    5. ' ]' → logprob: -4.504150390625
    6. ' element' → logprob: -4.629150390625
    7. ')' → logprob: -6.004150390625
    8. ' ' → logprob: -6.379150390625
    9. ' token' → logprob: -6.379150390625
    10. 'token' → logprob: -6.629150390625

Token 268: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002039510291069746
    2. ' :' → logprob: -6.627039432525635
    3. ':
' → logprob: -8.002039909362793
    4. '):' → logprob: -8.877039909362793
    5. ')' → logprob: -9.002039909362793
    6. ' or' → logprob: -9.502039909362793
    7. ' ' → logprob: -10.752039909362793
    8. ' ):' → logprob: -12.377039909362793
    9. 'or' → logprob: -12.877039909362793
    10. ':return' → logprob: -13.002039909362793

Token 269: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.02344893291592598
    2. ' D' → logprob: -3.773448944091797
    3. ' la' → logprob: -8.773448944091797
    4. 'la' → logprob: -10.148448944091797
    5. 'l' → logprob: -12.023448944091797
    6. ' ' → logprob: -13.773448944091797
    7. 'C' → logprob: -14.273448944091797
    8. 'd' → logprob: -14.398448944091797
    9. ' l' → logprob: -15.898448944091797
    10. ')' → logprob: -16.023448944091797

Token 270: ' n' (ID: 297)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0716610923409462
    2. ':' → logprob: -3.5716609954833984
    3. ')' → logprob: -3.9466609954833984
    4. '!=' → logprob: -4.071660995483398
    5. ' est' → logprob: -6.696660995483398
    6. ']' → logprob: -6.696660995483398
    7. ' n' → logprob: -7.446660995483398
    8. ' :' → logprob: -7.821660995483398
    9. ' )' → logprob: -8.071660995483398
    10. '):' → logprob: -8.196660995483398

Token 271: ''est' (ID: 6616)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6461325883865356
    2. '!=' → logprob: -1.0211325883865356
    3. '=' → logprob: -2.521132469177246
    4. '_' → logprob: -4.396132469177246
    5. '==' → logprob: -5.146132469177246
    6. ' ==' → logprob: -5.271132469177246
    7. ' ' → logprob: -5.271132469177246
    8. ')' → logprob: -6.521132469177246
    9. ''' → logprob: -6.521132469177246
    10. '[' → logprob: -6.646132469177246

Token 272: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.021560337394475937
    2. '0' → logprob: -4.896560192108154
    3. ' ' → logprob: -5.146560192108154
    4. ' différent' → logprob: -5.896560192108154
    5. '=' → logprob: -6.271560192108154
    6. 'pas' → logprob: -6.396560192108154
    7. ' different' → logprob: -7.271560192108154
    8. '!=' → logprob: -8.271560668945312
    9. '_pas' → logprob: -8.396560668945312
    10. ' not' → logprob: -8.771560668945312

Token 273: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35023486614227295
    2. '0' → logprob: -1.225234866142273
    3. ' égal' → logprob: -6.6002349853515625
    4. ' equal' → logprob: -9.225234985351562
    5. ' différent' → logprob: -9.600234985351562
    6. ' pas' → logprob: -9.725234985351562
    7. ' zéro' → logprob: -9.850234985351562
    8. '=' → logprob: -10.225234985351562
    9. ' zero' → logprob: -10.350234985351562
    10. ' une' → logprob: -10.475234985351562

Token 274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '=' → logprob: -15.875179290771484
    4. '1' → logprob: -18.625179290771484
    5. '==' → logprob: -18.750179290771484
    6. '  ' → logprob: -19.625179290771484
    7. ' ' → logprob: -19.750179290771484
    8. 'zero' → logprob: -19.875179290771484
    9. '```' → logprob: -20.000179290771484
    10. '

' → logprob: -20.125179290771484

Token 275: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4959542155265808
    2. 'if' → logprob: -0.9959542155265808
    3. ' if' → logprob: -4.2459540367126465
    4. ':
' → logprob: -5.1209540367126465
    5. ')' → logprob: -7.6209540367126465
    6. '.' → logprob: -7.8709540367126465
    7. ' :' → logprob: -8.245954513549805
    8. ',' → logprob: -9.620954513549805
    9. '):' → logprob: -10.495954513549805
    10. ' or' → logprob: -10.620954513549805

Token 276: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.840432565193623e-05
    2. ' if' → logprob: -9.500088691711426
    3. 'i' → logprob: -11.375088691711426
    4. ':' → logprob: -13.500088691711426
    5. '
' → logprob: -15.375088691711426
    6. ':
' → logprob: -16.12508773803711
    7. '```' → logprob: -16.25008773803711
    8. ')' → logprob: -16.50008773803711
    9. '#' → logprob: -16.87508773803711
    10. ',' → logprob: -17.00008773803711

Token 277: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005656610010191798
    2. ' if' → logprob: -7.500565528869629
    3. 'i' → logprob: -11.500565528869629
    4. '
' → logprob: -13.625565528869629
    5. '#' → logprob: -15.250565528869629
    6. 'for' → logprob: -15.250565528869629
    7. ' ' → logprob: -15.250565528869629
    8. '

' → logprob: -15.625565528869629
    9. ':' → logprob: -16.125566482543945
    10. ')' → logprob: -16.250566482543945

Token 278: 'ification' (ID: 3166)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.045851290225982666
    2. 'ifie' → logprob: -3.920851230621338
    3. 'ifier' → logprob: -4.920851230621338
    4. 'ifiez' → logprob: -4.920851230621338
    5. 'ify' → logprob: -5.170851230621338
    6. 'ification' → logprob: -5.920851230621338
    7. 'ifi' → logprob: -6.670851230621338
    8. '#' → logprob: -8.420851707458496
    9. ' if' → logprob: -9.045851707458496
    10. 'rif' → logprob: -9.545851707458496

Token 279: ' que' (ID: 661)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2021937221288681
    2. 'if' → logprob: -1.7021937370300293
    3. ':' → logprob: -7.452193737030029
    4. ' ' → logprob: -9.077193260192871
    5. ' :' → logprob: -10.327193260192871
    6. ' =' → logprob: -11.077193260192871
    7. '   ' → logprob: -11.452193260192871
    8. ' ' → logprob: -12.327193260192871
    9. ' (' → logprob: -12.577193260192871
    10. ' D' → logprob: -12.702193260192871

Token 280: ' le' (ID: 505)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.33099275827407837
    2. ' D' → logprob: -1.8309926986694336
    3. 'len' → logprob: -2.5809926986694336
    4. ' len' → logprob: -3.7059926986694336
    5. 'N' → logprob: -4.830992698669434
    6. 'C' → logprob: -4.830992698669434
    7. ' C' → logprob: -5.955992698669434
    8. ' N' → logprob: -6.080992698669434
    9. ' ' → logprob: -8.955992698669434
    10. ' not' → logprob: -9.580992698669434

Token 281: ' nombre' (ID: 9733)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.4451407790184021
    2. 'len' → logprob: -1.6951408386230469
    3. ' D' → logprob: -2.320140838623047
    4. 'N' → logprob: -3.570140838623047
    5. ' len' → logprob: -3.820140838623047
    6. 'C' → logprob: -4.445140838623047
    7. ' N' → logprob: -5.320140838623047
    8. ' ' → logprob: -5.320140838623047
    9. '0' → logprob: -5.945140838623047
    10. ' C' → logprob: -6.195140838623047

Token 282: ' d' (ID: 272)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.5476329326629639
    2. 'if' → logprob: -1.4226329326629639
    3. 'C' → logprob: -2.672632932662964
    4. 'len' → logprob: -2.797632932662964
    5. '(D' → logprob: -3.672632932662964
    6. '(C' → logprob: -4.922633171081543
    7. 'de' → logprob: -5.672633171081543
    8. 'd' → logprob: -5.672633171081543
    9. ' if' → logprob: -6.547633171081543
    10. ' de' → logprob: -6.672633171081543

Token 283: ''occ' (ID: 158932)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.7672000527381897
    2. 'D' → logprob: -1.017199993133545
    3. '(' → logprob: -2.892199993133545
    4. '_' → logprob: -3.142199993133545
    5. ' D' → logprob: -3.642199993133545
    6. '(C' → logprob: -3.767199993133545
    7. 'C' → logprob: -5.017199993133545
    8. '0' → logprob: -5.517199993133545
    9. ')' → logprob: -5.517199993133545
    10. 'len' → logprob: -5.767199993133545

Token 284: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.00023858259373810142
    2. 'ur' → logprob: -9.375238418579102
    3. 'urr' → logprob: -9.500238418579102
    4. 'urrencies' → logprob: -10.250238418579102
    5. 'curr' → logprob: -11.500238418579102
    6. '#' → logprob: -11.750238418579102
    7. 'orr' → logprob: -12.500238418579102
    8. 'urrence' → logprob: -12.625238418579102
    9. 'eurs' → logprob: -12.750238418579102
    10. '```' → logprob: -13.000238418579102

Token 285: ' de' (ID: 334)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.16157343983650208
    2. '(C' → logprob: -2.5365734100341797
    3. '0' → logprob: -3.7865734100341797
    4. '(' → logprob: -3.7865734100341797
    5. ' of' → logprob: -4.91157341003418
    6. 'of' → logprob: -5.16157341003418
    7. 'de' → logprob: -5.91157341003418
    8. ' C' → logprob: -5.91157341003418
    9. ' de' → logprob: -6.16157341003418
    10. ' ' → logprob: -6.41157341003418

Token 286: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011760921915993094
    2. 'D' → logprob: -9.250117301940918
    3. ' ' → logprob: -11.375117301940918
    4. 'C' → logprob: -11.625117301940918
    5. ' D' → logprob: -14.375117301940918
    6. '
' → logprob: -16.625118255615234
    7. '   ' → logprob: -16.875118255615234
    8. 'd' → logprob: -17.125118255615234
    9. '1' → logprob: -17.250118255615234
    10. 'c' → logprob: -17.437618255615234

Token 287: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.500011444091797
    3. 'C' → logprob: -14.125011444091797
    4. 'D' → logprob: -14.750011444091797
    5. '
' → logprob: -17.250011444091797
    6. ' D' → logprob: -18.375011444091797
    7. ' C' → logprob: -18.500011444091797
    8. '   ' → logprob: -18.875011444091797
    9. '1' → logprob: -19.875011444091797
    10. '`' → logprob: -19.937511444091797

Token 288: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4801613688468933
    2. ' not' → logprob: -1.980161428451538
    3. ' !=' → logprob: -2.480161428451538
    4. 'C' → logprob: -3.105161428451538
    5. 'in' → logprob: -3.105161428451538
    6. '!=' → logprob: -3.855161428451538
    7. ' C' → logprob: -3.980161428451538
    8. '0' → logprob: -4.605161190032959
    9. 'not' → logprob: -5.105161190032959
    10. ']' → logprob: -5.730161190032959

Token 289: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.011101586744189262
    2. 'D' → logprob: -4.511101722717285
    3. ' C' → logprob: -9.886101722717285
    4. '
' → logprob: -13.261101722717285
    5. ' D' → logprob: -14.136101722717285
    6. 'd' → logprob: -16.01110076904297
    7. 'c' → logprob: -16.76110076904297
    8. '[C' → logprob: -16.76110076904297
    9. '

' → logprob: -16.88610076904297
    10. ')' → logprob: -17.13610076904297

Token 290: ' liste' (ID: 31719)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.03813581541180611
    2. 'D' → logprob: -3.2881357669830322
    3. 'Counter' → logprob: -9.538135528564453
    4. ' C' → logprob: -11.538135528564453
    5. 'counter' → logprob: -12.413135528564453
    6. '#' → logprob: -12.788135528564453
    7. 'd' → logprob: -13.288135528564453
    8. 'c' → logprob: -13.663135528564453
    9. ' D' → logprob: -14.663135528564453
    10. ')' → logprob: -14.788135528564453

Token 291: ' D' (ID: 415)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7977066040039062
    2. 'D' → logprob: -1.1727066040039062
    3. ']' → logprob: -1.9227066040039062
    4. '[D' → logprob: -3.1727066040039062
    5. '[C' → logprob: -3.7977066040039062
    6. '0' → logprob: -4.797706604003906
    7. '[' → logprob: -4.797706604003906
    8. ')' → logprob: -5.922706604003906
    9. 'in' → logprob: -6.672706604003906
    10. ' D' → logprob: -6.922706604003906

Token 292: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6702969074249268
    2. ' !=' → logprob: -1.6702969074249268
    3. '==' → logprob: -2.1702969074249268
    4. '[' → logprob: -2.4202969074249268
    5. ']' → logprob: -2.7952969074249268
    6. ')' → logprob: -4.045296669006348
    7. '!=' → logprob: -4.295296669006348
    8. '[C' → logprob: -6.170296669006348
    9. ' ' → logprob: -7.795296669006348
    10. '>' → logprob: -7.920296669006348

Token 293: ' strict' (ID: 12035)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5579386353492737
    2. '1' → logprob: -1.307938575744629
    3. '!=' → logprob: -2.057938575744629
    4. ' ' → logprob: -4.182938575744629
    5. ' !=' → logprob: -4.682938575744629
    6. 'not' → logprob: -6.182938575744629
    7. ' not' → logprob: -6.932938575744629
    8. 'C' → logprob: -7.057938575744629
    9. 'D' → logprob: -8.182938575744629
    10. ' C' → logprob: -8.432938575744629

Token 294: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0038214565720409155
    2. 'e' → logprob: -6.00382137298584
    3. '<' → logprob: -7.25382137298584
    4. 'ly' → logprob: -7.87882137298584
    5. '=' → logprob: -9.62882137298584
    6. 'lement' → logprob: -10.25382137298584
    7. 'em' → logprob: -10.50382137298584
    8. 'ment' → logprob: -11.00382137298584
    9. '>' → logprob: -11.37882137298584
    10. 'emen' → logprob: -11.37882137298584

Token 295: ' égal' (ID: 15059)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025063399225473404
    2. '0' → logprob: -6.252506256103516
    3. ' ' → logprob: -8.502506256103516
    4. '2' → logprob: -8.627506256103516
    5. '!=' → logprob: -9.377506256103516
    6. '==' → logprob: -10.127506256103516
    7. 'une' → logprob: -10.877506256103516
    8. '=' → logprob: -11.002506256103516
    9. '!' → logprob: -12.002506256103516
    10. 'equal' → logprob: -12.127506256103516

Token 296: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.22003762423992157
    2. 'à' → logprob: -2.8450376987457275
    3. ' ' → logprob: -3.3450376987457275
    4. '0' → logprob: -3.5950376987457275
    5. '(C' → logprob: -3.9700376987457275
    6. '1' → logprob: -4.220037460327148
    7. ' a' → logprob: -4.345037460327148
    8. 'C' → logprob: -4.470037460327148
    9. 'a' → logprob: -4.845037460327148
    10. '(' → logprob: -4.845037460327148

Token 297: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002484573284164071
    2. ' ' → logprob: -6.0024847984313965
    3. '0' → logprob: -12.502484321594238
    4. 'C' → logprob: -12.877484321594238
    5. 'D' → logprob: -13.377484321594238
    6. '2' → logprob: -15.752484321594238
    7. '=' → logprob: -16.002485275268555
    8. ' C' → logprob: -16.064985275268555
    9. '(' → logprob: -16.127485275268555
    10. '   ' → logprob: -16.252485275268555

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '  ' → logprob: -17.625059127807617
    4. '   ' → logprob: -17.875059127807617
    5. ' ' → logprob: -18.000059127807617
    6. '0' → logprob: -18.312559127807617
    7. '2' → logprob: -18.562559127807617
    8. '(' → logprob: -18.812559127807617
    9. '１' → logprob: -19.062559127807617
    10. '=' → logprob: -19.062559127807617

Token 299: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0017269416712224483
    2. ' if' → logprob: -6.376727104187012
    3. ':
' → logprob: -11.251727104187012
    4. ':' → logprob: -12.126727104187012
    5. '
' → logprob: -13.251727104187012
    6. 'or' → logprob: -14.376727104187012
    7. ' or' → logprob: -14.501727104187012
    8. ' and' → logprob: -14.626727104187012
    9. 'and' → logprob: -14.751727104187012
    10. 'If' → logprob: -15.376727104187012

Token 300: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000158842682139948
    2. ' if' → logprob: -8.75015926361084
    3. '```' → logprob: -15.75015926361084
    4. 'If' → logprob: -16.250158309936523
    5. '
' → logprob: -16.625158309936523
    6. 'i' → logprob: -17.375158309936523
    7. '#' → logprob: -18.250158309936523
    8. 'ifs' → logprob: -18.250158309936523
    9. 'elif' → logprob: -18.375158309936523
    10. 'for' → logprob: -19.125158309936523

Token 301: ' Cela' (ID: 44403)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00026169343618676066
    2. ' if' → logprob: -8.250261306762695
    3. '#' → logprob: -15.875261306762695
    4. '
' → logprob: -16.375261306762695
    5. 'If' → logprob: -16.500261306762695
    6. 'elif' → logprob: -16.500261306762695
    7. '```' → logprob: -17.125261306762695
    8. 'for' → logprob: -18.125261306762695
    9. 'i' → logprob: -18.500261306762695
    10. '0' → logprob: -18.625261306762695

Token 302: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007596099283546209
    2. 'or' → logprob: -5.882596015930176
    3. ' if' → logprob: -5.882596015930176
    4. ' or' → logprob: -6.632596015930176
    5. ':' → logprob: -7.382596015930176
    6. ')' → logprob: -10.382596015930176
    7. '):' → logprob: -12.507596015930176
    8. 'elif' → logprob: -12.507596015930176
    9. ':
' → logprob: -13.382596015930176
    10. '   ' → logprob: -13.382596015930176

Token 303: ''é' (ID: 12728)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0021317063365131617
    2. ' if' → logprob: -6.877131938934326
    3. ''il' → logprob: -7.627131938934326
    4. '=' → logprob: -8.877131462097168
    5. 'si' → logprob: -9.377131462097168
    6. 'elif' → logprob: -9.502131462097168
    7. 'ont' → logprob: -9.752131462097168
    8. '#' → logprob: -10.377131462097168
    9. '```' → logprob: -10.627131462097168
    10. 'e' → logprob: -10.752131462097168

Token 304: 'crit' (ID: 15345)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.1052578687667847
    2. 'crit' → logprob: -1.6052578687667847
    3. 'if' → logprob: -1.7302578687667847
    4. 'D' → logprob: -1.8552578687667847
    5. '(C' → logprob: -3.355257987976074
    6. 'ont' → logprob: -3.980257987976074
    7. 'c' → logprob: -4.230257987976074
    8. '(D' → logprob: -4.855257987976074
    9. 'x' → logprob: -5.230257987976074
    10. 't' → logprob: -5.230257987976074

Token 305: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.012231077067553997
    2. ' C' → logprob: -4.51223087310791
    3. 'if' → logprob: -7.01223087310791
    4. ' if' → logprob: -8.51223087310791
    5. '(C' → logprob: -9.76223087310791
    6. '
' → logprob: -11.88723087310791
    7. ' (' → logprob: -12.63723087310791
    8. 'len' → logprob: -12.88723087310791
    9. '   ' → logprob: -13.01223087310791
    10. ' ' → logprob: -13.13723087310791

Token 306: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.0
    3. ' [' → logprob: -17.0
    4. '.get' → logprob: -17.75
    5. '[C' → logprob: -18.625
    6. '[
' → logprob: -19.125
    7. '[D' → logprob: -19.625
    8. '```' → logprob: -19.625
    9. '

' → logprob: -20.125
    10. '
' → logprob: -20.375

Token 307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.875000953674316
    3. '(' → logprob: -15.375000953674316
    4. ']' → logprob: -19.0
    5. '[' → logprob: -19.25
    6. '
' → logprob: -20.125
    7. '```' → logprob: -20.625
    8. ')' → logprob: -20.75
    9. '   ' → logprob: -22.125
    10. '۰' → logprob: -22.625

Token 308: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.375538163818419e-05
    2. ']!=' → logprob: -9.750083923339844
    3. ']==' → logprob: -10.875083923339844
    4. ' ]' → logprob: -12.125083923339844
    5. '']' → logprob: -15.125083923339844
    6. '"]' → logprob: -15.125083923339844
    7. '[' → logprob: -15.125083923339844
    8. '!=' → logprob: -17.000083923339844
    9. '1' → logprob: -17.250083923339844
    10. '()]' → logprob: -17.625083923339844

Token 309: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.03514520823955536
    2. ' !=' → logprob: -3.4101452827453613
    3. '==' → logprob: -6.535145282745361
    4. ' ==' → logprob: -10.535144805908203
    5. '=' → logprob: -11.910144805908203
    6. ')!=' → logprob: -12.160144805908203
    7. ')' → logprob: -12.285144805908203
    8. ']!=' → logprob: -13.785144805908203
    9. '()!=' → logprob: -13.910144805908203
    10. '!==' → logprob: -14.660144805908203

Token 310: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '
' → logprob: -17.875295639038086
    4. '0' → logprob: -17.937795639038086
    5. '```' → logprob: -18.187795639038086
    6. '  ' → logprob: -18.500295639038086
    7. '' → logprob: -19.375295639038086
    8. '   ' → logprob: -19.375295639038086
    9. '۱' → logprob: -19.375295639038086
    10. ' ' → logprob: -19.500295639038086

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '  ' → logprob: -18.812559127807617
    4. '```' → logprob: -19.000059127807617
    5. '۱' → logprob: -19.187559127807617
    6. '１' → logprob: -19.375059127807617
    7. '
' → logprob: -19.562559127807617
    8. '   ' → logprob: -19.750059127807617
    9. ' ' → logprob: -19.812559127807617
    10. '=' → logprob: -19.937559127807617

Token 312: '.
' (ID: 558)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.10760273039340973
    2. 'or' → logprob: -3.107602834701538
    3. 'if' → logprob: -3.482602834701538
    4. ':' → logprob: -3.732602834701538
    5. ')' → logprob: -6.857602596282959
    6. ' if' → logprob: -6.982602596282959
    7. ':
' → logprob: -7.857602596282959
    8. ' and' → logprob: -8.607603073120117
    9. 'and' → logprob: -10.357603073120117
    10. '):' → logprob: -10.857603073120117

Token 313: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003290288441348821
    2. ' if' → logprob: -8.12532901763916
    3. 'i' → logprob: -11.12532901763916
    4. '
' → logprob: -11.12532901763916
    5. '#' → logprob: -14.25032901763916
    6. ':' → logprob: -14.37532901763916
    7. 'If' → logprob: -14.62532901763916
    8. '```' → logprob: -15.25032901763916
    9. 'ifs' → logprob: -15.37532901763916
    10. ':
' → logprob: -15.37532901763916

Token 314: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.38692253828048706
    2. ' D' → logprob: -1.1369225978851318
    3. ' (' → logprob: -10.886922836303711
    4. ' ' → logprob: -10.886922836303711
    5. '(D' → logprob: -11.886922836303711
    6. '   ' → logprob: -12.511922836303711
    7. '	D' → logprob: -13.886922836303711
    8. '  ' → logprob: -14.511922836303711
    9. ' ' → logprob: -14.636922836303711
    10. '(' → logprob: -14.761922836303711

Token 315: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '0' → logprob: -14.625000953674316
    3. ' [' → logprob: -15.500000953674316
    4. '[
' → logprob: -16.125001907348633
    5. '```' → logprob: -16.250001907348633
    6. '   ' → logprob: -17.500001907348633
    7. ' ' → logprob: -18.125001907348633
    8. '][' → logprob: -18.375001907348633
    9. '==' → logprob: -18.875001907348633
    10. ']' → logprob: -19.500001907348633

Token 316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. ']' → logprob: -17.000003814697266
    4. '[' → logprob: -17.875003814697266
    5. '   ' → logprob: -18.625003814697266
    6. '```' → logprob: -19.125003814697266
    7. '
' → logprob: -20.250003814697266
    8. ')' → logprob: -20.375003814697266
    9. '  ' → logprob: -20.625003814697266
    10. '۰' → logprob: -21.000003814697266

Token 317: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017373013542965055
    2. ']!=' → logprob: -6.751737117767334
    3. ' ]' → logprob: -7.501737117767334
    4. '!=' → logprob: -11.626737594604492
    5. ' !=' → logprob: -12.626737594604492
    6. '"]' → logprob: -14.251737594604492
    7. '']' → logprob: -14.376737594604492
    8. '0' → logprob: -15.001737594604492
    9. '[' → logprob: -15.001737594604492
    10. ']==' → logprob: -15.126737594604492

Token 318: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.023250136524438858
    2. ' !=' → logprob: -3.773250102996826
    3. ')!=' → logprob: -12.898250579833984
    4. '!' → logprob: -14.148250579833984
    5. '()!=' → logprob: -14.648250579833984
    6. ']!=' → logprob: -15.148250579833984
    7. '!==' → logprob: -15.523250579833984
    8. ')' → logprob: -15.523250579833984
    9. '!="' → logprob: -16.398250579833984
    10. '!='' → logprob: -16.398250579833984

Token 319: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. ' ' → logprob: -22.001502990722656
    4. ' 
' → logprob: -22.001502990722656
    5. ' ' → logprob: -23.626502990722656
    6. '۰' → logprob: -24.001502990722656
    7. '  ' → logprob: -24.626502990722656
    8. '
' → logprob: -24.626502990722656
    9. '```' → logprob: -24.626502990722656
    10. '`' → logprob: -24.751502990722656

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۰' → logprob: -21.000001907348633
    4. '０' → logprob: -23.250001907348633
    5. ' ' → logprob: -23.625001907348633
    6. '০' → logprob: -23.875001907348633
    7. '```' → logprob: -24.125001907348633
    8. '٠' → logprob: -24.750001907348633
    9. '०' → logprob: -24.875001907348633
    10. ' 
' → logprob: -25.500001907348633

Token 321: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.12693335115909576
    2. 'or' → logprob: -2.1269333362579346
    3. ' ' → logprob: -12.501933097839355
    4. ' o' → logprob: -14.376933097839355
    5. ':' → logprob: -15.001933097839355
    6. '	or' → logprob: -15.001933097839355
    7. 'o' → logprob: -15.376933097839355
    8. ' ' → logprob: -17.126934051513672
    9. '  ' → logprob: -18.751934051513672
    10. '0' → logprob: -19.376934051513672

Token 322: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.01815052703022957
    2. ' C' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.393150329589844
    4. '   ' → logprob: -15.518150329589844
    5. '	C' → logprob: -16.268150329589844
    6. '  ' → logprob: -18.268150329589844
    7. ' ' → logprob: -18.393150329589844
    8. '>C' → logprob: -19.018150329589844
    9. '    ' → logprob: -19.143150329589844
    10. 'c' → logprob: -19.393150329589844

Token 323: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0325924449716695e-05
    2. '0' → logprob: -11.50001049041748
    3. ' [' → logprob: -15.75001049041748
    4. '[
' → logprob: -17.625009536743164
    5. '```' → logprob: -18.125009536743164
    6. ' ' → logprob: -19.500009536743164
    7. '\[' → logprob: -20.750009536743164
    8. '
' → logprob: -21.250009536743164
    9. '1' → logprob: -21.500009536743164
    10. '   ' → logprob: -21.875009536743164

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006716079078614712
    2. '[' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.381715774536133
    4. '```' → logprob: -17.006715774536133
    5. '(' → logprob: -17.256715774536133
    6. '   ' → logprob: -17.506715774536133
    7. '[
' → logprob: -17.506715774536133
    8. '][' → logprob: -18.631715774536133
    9. ']' → logprob: -18.881715774536133
    10. ' [' → logprob: -19.131715774536133

Token 325: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000341541541274637
    2. ']!=' → logprob: -8.000341415405273
    3. '!=' → logprob: -12.875341415405273
    4. ' ]' → logprob: -12.875341415405273
    5. ' !=' → logprob: -15.000341415405273
    6. '[' → logprob: -15.000341415405273
    7. '"]' → logprob: -16.125341415405273
    8. '']' → logprob: -17.000341415405273
    9. ']!' → logprob: -17.375341415405273
    10. '1' → logprob: -17.625341415405273

Token 326: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.20142221450805664
    2. ' !=' → logprob: -1.7014222145080566
    3. ')!=' → logprob: -12.451421737670898
    4. '()!=' → logprob: -12.826421737670898
    5. ']!=' → logprob: -13.951421737670898
    6. ')' → logprob: -14.826421737670898
    7. '1' → logprob: -14.826421737670898
    8. '!' → logprob: -15.701421737670898
    9. '!==' → logprob: -16.0764217376709
    10. ' ' → logprob: -16.3264217376709

Token 327: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '
' → logprob: -20.000059127807617
    4. '' → logprob: -22.250059127807617
    5. '   ' → logprob: -22.875059127807617
    6. ' ' → logprob: -23.500059127807617
    7. '0' → logprob: -23.750059127807617
    8. '１' → logprob: -23.875059127807617
    9. '  ' → logprob: -24.625059127807617
    10. '```' → logprob: -24.625059127807617

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '
' → logprob: -21.875001907348633
    4. '```' → logprob: -21.875001907348633
    5. '' → logprob: -22.125001907348633
    6. '１' → logprob: -22.250001907348633
    7. '۱' → logprob: -22.750001907348633
    8. '   ' → logprob: -23.000001907348633
    9. '  ' → logprob: -23.250001907348633
    10. '

' → logprob: -23.375001907348633

Token 329: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024781543761491776
    2. ':
' → logprob: -6.002478122711182
    3. ' :' → logprob: -13.75247859954834
    4. '):' → logprob: -14.37747859954834
    5. ':
' → logprob: -14.87747859954834
    6. ':return' → logprob: -15.62747859954834
    7. ')' → logprob: -16.127477645874023
    8. ' or' → logprob: -17.127477645874023
    9. '   ' → logprob: -17.377477645874023
    10. ':#' → logprob: -17.752477645874023

Token 330: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2020782083272934
    2. '   ' → logprob: -1.7020782232284546
    3. ' print' → logprob: -7.577078342437744
    4. ':
' → logprob: -9.827077865600586
    5. '
' → logprob: -10.202077865600586
    6. '```' → logprob: -10.327077865600586
    7. '	print' → logprob: -11.327077865600586
    8. 'import' → logprob: -12.327077865600586
    9. ':' → logprob: -12.827077865600586
    10. '    
' → logprob: -13.077077865600586

Token 331: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.1008713702030946e-06
    2. '   ' → logprob: -13.625001907348633
    3. '
' → logprob: -14.750001907348633
    4. '```' → logprob: -15.125001907348633
    5. ' print' → logprob: -16.125001907348633
    6. '    
' → logprob: -16.750001907348633
    7. '0' → logprob: -17.250001907348633
    8. 'pr' → logprob: -18.750001907348633
    9. 'exit' → logprob: -18.750001907348633
    10. '``' → logprob: -19.000001907348633

Token 332: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -16.125
    3. '
' → logprob: -16.5
    4. ' print' → logprob: -16.625
    5. '```' → logprob: -17.125
    6. 'exit' → logprob: -17.5
    7. '

' → logprob: -17.625
    8. '#' → logprob: -18.625
    9. 'prin' → logprob: -18.875
    10. '    
' → logprob: -19.0

Token 333: ' au' (ID: 2791)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.060591183602809906
    2. '   ' → logprob: -3.185591220855713
    3. ' print' → logprob: -4.060591220855713
    4. '    ' → logprob: -9.685590744018555
    5. '
' → logprob: -9.810590744018555
    6. '```' → logprob: -9.935590744018555
    7. '	print' → logprob: -11.685590744018555
    8. '    
' → logprob: -11.935590744018555
    9. '0' → logprob: -12.435590744018555
    10. ' ' → logprob: -12.560590744018555

Token 334: ' moins' (ID: 15924)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2731379568576813
    2. 'r' → logprob: -2.3981380462646484
    3. '   ' → logprob: -3.2731380462646484
    4. 'g' → logprob: -4.523138046264648
    5. 'rg' → logprob: -4.523138046264648
    6. 'pass' → logprob: -4.898138046264648
    7. '       ' → logprob: -4.898138046264648
    8. 'return' → logprob: -5.148138046264648
    9. '    ' → logprob: -5.273138046264648
    10. 'ra' → logprob: -5.273138046264648

Token 335: ' une' (ID: 2463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26236310601234436
    2. '    ' → logprob: -2.0123631954193115
    3. ' True' → logprob: -3.0123631954193115
    4. 'True' → logprob: -3.2623631954193115
    5. 'not' → logprob: -5.637362957000732
    6. '       ' → logprob: -6.512362957000732
    7. ' not' → logprob: -7.012362957000732
    8. '  ' → logprob: -7.137362957000732
    9. '#' → logprob: -7.387362957000732
    10. ' ' → logprob: -7.762362957000732

Token 336: ' des' (ID: 731)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.37931156158447266
    2. 'return' → logprob: -1.5043115615844727
    3. '   ' → logprob: -3.6293115615844727
    4. ' print' → logprob: -4.379311561584473
    5. 'r' → logprob: -4.504311561584473
    6. ' return' → logprob: -4.879311561584473
    7. 'pass' → logprob: -5.379311561584473
    8. ')' → logprob: -5.629311561584473
    9. '
' → logprob: -6.004311561584473
    10. 's' → logprob: -6.004311561584473

Token 337: ' conditions' (ID: 6409)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.08292718231678009
    2. ' True' → logprob: -2.5829272270202637
    3. 'conditions' → logprob: -6.457927227020264
    4. ' conditions' → logprob: -7.082927227020264
    5. ' ' → logprob: -7.207927227020264
    6. '1' → logprob: -8.332926750183105
    7. 'False' → logprob: -8.957926750183105
    8. '   ' → logprob: -9.457926750183105
    9. 'V' → logprob: -9.832926750183105
    10. 'true' → logprob: -10.207926750183105

Token 338: ' précéd' (ID: 55435)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4411875307559967
    2. '   ' → logprob: -1.0661875009536743
    3. ':
' → logprob: -4.441187381744385
    4. 'print' → logprob: -8.566187858581543
    5. ' :' → logprob: -8.941187858581543
    6. ':return' → logprob: -9.441187858581543
    7. ' ' → logprob: -9.691187858581543
    8. '    ' → logprob: -10.191187858581543
    9. ' print' → logprob: -10.566187858581543
    10. '       ' → logprob: -11.191187858581543

Token 339: 'entes' (ID: 5651)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.41491588950157166
    2. '   ' → logprob: -2.1649158000946045
    3. ' est' → logprob: -2.6649158000946045
    4. 'vient' → logprob: -2.9149158000946045
    5. 'ure' → logprob: -3.2899158000946045
    6. 'urée' → logprob: -4.289916038513184
    7. 'ur' → logprob: -4.789916038513184
    8. 'if' → logprob: -5.914916038513184
    9. 'int' → logprob: -6.164916038513184
    10. 'ures' → logprob: -6.289916038513184

Token 340: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09096649289131165
    2. ':
' → logprob: -2.4659664630889893
    3. '   ' → logprob: -6.465966701507568
    4. ' :' → logprob: -8.34096622467041
    5. ':return' → logprob: -9.21596622467041
    6. ' :
' → logprob: -10.21596622467041
    7. 'print' → logprob: -10.59096622467041
    8. ' print' → logprob: -11.21596622467041
    9. ':\' → logprob: -11.59096622467041
    10. ',' → logprob: -11.59096622467041

Token 341: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.03215896710753441
    2. '   ' → logprob: -4.407158851623535
    3. '’est' → logprob: -5.907158851623535
    4. 'e' → logprob: -5.907158851623535
    5. ''' → logprob: -6.032158851623535
    6. 'on' → logprob: -6.157158851623535
    7. 'est' → logprob: -6.282158851623535
    8. '       ' → logprob: -7.032158851623535
    9. 'pas' → logprob: -7.157158851623535
    10. '#' → logprob: -7.282158851623535

Token 342: ' pas' (ID: 2173)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.20936889946460724
    2. 'v' → logprob: -2.084368944168091
    3. ' True' → logprob: -3.334368944168091
    4. 'pas' → logprob: -3.584368944168091
    5. 'true' → logprob: -8.209368705749512
    6. 'V' → logprob: -8.584368705749512
    7. 's' → logprob: -8.834368705749512
    8. ' pas' → logprob: -8.959368705749512
    9. ' rempl' → logprob: -9.584368705749512
    10. 'met' → logprob: -10.084368705749512

Token 343: ' respect' (ID: 5618)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.517173171043396
    2. 'respect' → logprob: -1.517173171043396
    3. 'rem' → logprob: -1.767173171043396
    4. ' rempl' → logprob: -5.6421732902526855
    5. 's' → logprob: -5.8921732902526855
    6. 'True' → logprob: -6.0171732902526855
    7. ' True' → logprob: -6.5171732902526855
    8. 'true' → logprob: -7.0171732902526855
    9. ' respect' → logprob: -7.3921732902526855
    10. 'faite' → logprob: -7.7671732902526855

Token 344: 'ée' (ID: 2894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18206721544265747
    2. 'er' → logprob: -1.9320671558380127
    3. 'e' → logprob: -5.057067394256592
    4. '       ' → logprob: -5.307067394256592
    5. 'ent' → logprob: -6.057067394256592
    6. 'ir' → logprob: -6.182067394256592
    7. 'print' → logprob: -6.432067394256592
    8. 'raise' → logprob: -7.432067394256592
    9. 'ie' → logprob: -7.432067394256592
    10. 'issez' → logprob: -7.682067394256592

Token 345: ',
' (ID: 412)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2520231306552887
    2. ':' → logprob: -1.7520231008529663
    3. 'print' → logprob: -3.252023220062256
    4. '   ' → logprob: -4.627023220062256
    5. ' print' → logprob: -7.877023220062256
    6. '
' → logprob: -8.627022743225098
    7. '):
' → logprob: -9.377022743225098
    8. ',' → logprob: -10.377022743225098
    9. '):' → logprob: -10.377022743225098
    10. 'exit' → logprob: -10.752022743225098

Token 346: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016241880075540394
    2. '   ' → logprob: -8.750162124633789
    3. ' print' → logprob: -12.750162124633789
    4. '```' → logprob: -14.500162124633789
    5. '
' → logprob: -14.750162124633789
    6. 'exit' → logprob: -17.25016212463379
    7. '    
' → logprob: -17.87516212463379
    8. '	print' → logprob: -18.25016212463379
    9. 'import' → logprob: -18.37516212463379
    10. '``' → logprob: -19.00016212463379

Token 347: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7432603272027336e-06
    2. ' print' → logprob: -14.000001907348633
    3. '   ' → logprob: -14.125001907348633
    4. '
' → logprob: -16.375001907348633
    5. '```' → logprob: -17.500001907348633
    6. '    
' → logprob: -18.375001907348633
    7. 'exit' → logprob: -19.250001907348633
    8. 'pr' → logprob: -20.000001907348633
    9. 'prin' → logprob: -20.125001907348633
    10. '

' → logprob: -20.375001907348633

Token 348: ' alors' (ID: 17971)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. '   ' → logprob: -14.625000953674316
    3. ' print' → logprob: -15.125000953674316
    4. '
' → logprob: -15.875000953674316
    5. '```' → logprob: -17.75
    6. 'exit' → logprob: -18.375
    7. 'pr' → logprob: -18.75
    8. '    
' → logprob: -18.875
    9. 'prin' → logprob: -19.25
    10. 'import' → logprob: -20.25

Token 349: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012213163427077234
    2. ' print' → logprob: -9.6251220703125
    3. '   ' → logprob: -9.8751220703125
    4. '
' → logprob: -12.5001220703125
    5. '```' → logprob: -14.5001220703125
    6. '    
' → logprob: -16.3751220703125
    7. 'import' → logprob: -17.1251220703125
    8. '0' → logprob: -17.2501220703125
    9. 'pr' → logprob: -17.5001220703125
    10. '	print' → logprob: -17.6251220703125

Token 350: ' sortie' (ID: 52761)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.522638169466518e-05
    2. ' print' → logprob: -11.875024795532227
    3. '
' → logprob: -12.125024795532227
    4. 'prin' → logprob: -12.375024795532227
    5. 'pr' → logprob: -12.625024795532227
    6. 'pri' → logprob: -12.875024795532227
    7. '   ' → logprob: -13.500024795532227
    8. '```' → logprob: -15.000024795532227
    9. 'return' → logprob: -15.250024795532227
    10. 'r' → logprob: -16.250024795532227

Token 351: ' doit' (ID: 21822)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015172344632446766
    2. '0' → logprob: -5.265172481536865
    3. ' print' → logprob: -6.015172481536865
    4. '   ' → logprob: -6.390172481536865
    5. '(' → logprob: -6.515172481536865
    6. ' =' → logprob: -6.765172481536865
    7. '("' → logprob: -6.890172481536865
    8. '=' → logprob: -7.140172481536865
    9. ' ' → logprob: -8.140172004699707
    10. ':' → logprob: -8.390172004699707

Token 352: ' être' (ID: 9104)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24650682508945465
    2. ' être' → logprob: -2.496506929397583
    3. 'être' → logprob: -2.746506929397583
    4. ' print' → logprob: -3.121506929397583
    5. ' be' → logprob: -5.496506690979004
    6. 'be' → logprob: -5.621506690979004
    7. 'êt' → logprob: -5.871506690979004
    8. 'etre' → logprob: -5.871506690979004
    9. 're' → logprob: -6.121506690979004
    10. 'tre' → logprob: -6.371506690979004

Token 353: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5760002136230469
    2. 'print' → logprob: -0.8260002136230469
    3. ' print' → logprob: -9.951000213623047
    4. ' ' → logprob: -12.326000213623047
    5. '```' → logprob: -12.326000213623047
    6. '   ' → logprob: -13.201000213623047
    7. '000' → logprob: -14.201000213623047
    8. '``' → logprob: -14.701000213623047
    9. '
' → logprob: -15.326000213623047
    10. '00' → logprob: -15.451000213623047

Token 354: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47409194707870483
    2. 'print' → logprob: -0.9740919470787048
    3. ' print' → logprob: -11.349091529846191
    4. '```' → logprob: -13.349091529846191
    5. ' ' → logprob: -14.599091529846191
    6. '``' → logprob: -15.474091529846191
    7. '-' → logprob: -15.599091529846191
    8. '   ' → logprob: -15.974091529846191
    9. '000' → logprob: -16.224092483520508
    10. '`' → logprob: -16.349092483520508

Token 355: ' selon' (ID: 27571)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010881450027227402
    2. '
' → logprob: -4.635881423950195
    3. ' print' → logprob: -7.385881423950195
    4. '   ' → logprob: -7.760881423950195
    5. ')
' → logprob: -10.385881423950195
    6. '0' → logprob: -10.635881423950195
    7. '
' → logprob: -12.385881423950195
    8. '    
' → logprob: -12.385881423950195
    9. '```' → logprob: -12.635881423950195
    10. '.print' → logprob: -13.010881423950195

Token 356: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.792751032160595e-05
    2. ' print' → logprob: -10.50008773803711
    3. '
' → logprob: -10.62508773803711
    4. '   ' → logprob: -11.00008773803711
    5. '```' → logprob: -12.00008773803711
    6. '0' → logprob: -12.12508773803711
    7. '    
' → logprob: -13.87508773803711
    8. '``' → logprob: -14.00008773803711
    9. 'return' → logprob: -14.12508773803711
    10. '    ' → logprob: -14.25008773803711

Token 357: ''' (ID: 6)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00021784115233458579
    2. '```' → logprob: -9.75021743774414
    3. 'r' → logprob: -10.25021743774414
    4. 'e' → logprob: -10.50021743774414
    5. ' print' → logprob: -10.62521743774414
    6. '   ' → logprob: -10.87521743774414
    7. 'a' → logprob: -11.75021743774414
    8. 'int' → logprob: -12.25021743774414
    9. 'im' → logprob: -12.62521743774414
    10. '
' → logprob: -12.62521743774414

Token 358: 'én' (ID: 3289)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.281485836254433e-05
    2. 'python' → logprob: -9.875092506408691
    3. ' print' → logprob: -11.250092506408691
    4. '
' → logprob: -11.250092506408691
    5. '```' → logprob: -11.750092506408691
    6. 'else' → logprob: -13.500092506408691
    7. 'py' → logprob: -14.000092506408691
    8. '``' → logprob: -14.125092506408691
    9. 'int' → logprob: -14.375092506408691
    10. 'printf' → logprob: -14.500092506408691

Token 359: 'oncé' (ID: 59071)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03488334268331528
    2. 'int' → logprob: -4.284883499145508
    3. 'pr' → logprob: -4.659883499145508
    4. 'ult' → logprob: -6.534883499145508
    5. 'pri' → logprob: -6.659883499145508
    6. 'it' → logprob: -7.409883499145508
    7. 'r' → logprob: -7.409883499145508
    8. 't' → logprob: -7.534883499145508
    9. 'Print' → logprob: -7.659883499145508
    10. 'put' → logprob: -8.034883499145508

Token 360: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003024529665708542
    2. ':
' → logprob: -6.378024578094482
    3. '   ' → logprob: -7.253024578094482
    4. ' print' → logprob: -8.378024101257324
    5. '
' → logprob: -8.503024101257324
    6. ':' → logprob: -9.003024101257324
    7. '0' → logprob: -10.253024101257324
    8. '```' → logprob: -11.753024101257324
    9. '):
' → logprob: -12.503024101257324
    10. ')' → logprob: -13.128024101257324

Token 361: ' problème' (ID: 35630)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12311870604753494
    2. 'problem' → logprob: -2.9981186389923096
    3. 'code' → logprob: -3.3731186389923096
    4. 'programme' → logprob: -4.748118877410889
    5. 'program' → logprob: -5.123118877410889
    6. 'proble' → logprob: -5.373118877410889
    7. 'pro' → logprob: -5.498118877410889
    8. ' problème' → logprob: -6.498118877410889
    9. 'result' → logprob: -6.498118877410889
    10. 'jeu' → logprob: -6.623118877410889

Token 362: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000721487682312727
    2. '   ' → logprob: -7.750721454620361
    3. ':
' → logprob: -9.00072193145752
    4. ' print' → logprob: -9.62572193145752
    5. '
' → logprob: -10.37572193145752
    6. '0' → logprob: -10.62572193145752
    7. ':' → logprob: -10.75072193145752
    8. '```' → logprob: -11.75072193145752
    9. ')' → logprob: -12.00072193145752
    10. '):
' → logprob: -12.25072193145752

Token 363: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.76628842484206e-05
    2. '   ' → logprob: -9.750067710876465
    3. '```' → logprob: -11.875067710876465
    4. ' print' → logprob: -13.125067710876465
    5. '``' → logprob: -16.25006675720215
    6. '
' → logprob: -16.62506675720215
    7. '	print' → logprob: -17.00006675720215
    8. '0' → logprob: -17.50006675720215
    9. '    
' → logprob: -18.25006675720215
    10. 'pr' → logprob: -19.12506675720215

Token 364: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.465036105713807e-06
    2. '   ' → logprob: -12.000007629394531
    3. ' print' → logprob: -13.750007629394531
    4. '
' → logprob: -16.25000762939453
    5. '```' → logprob: -16.37500762939453
    6. '0' → logprob: -17.87500762939453
    7. 'return' → logprob: -19.00000762939453
    8. '	print' → logprob: -19.25000762939453
    9. 'pr' → logprob: -19.50000762939453
    10. '    
' → logprob: -19.75000762939453

Token 365: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038043901324272156
    2. '0' → logprob: -3.288043975830078
    3. '(
' → logprob: -13.413043975830078
    4. ' (' → logprob: -14.163043975830078
    5. ' ' → logprob: -15.163043975830078
    6. '("' → logprob: -17.538043975830078
    7. '('' → logprob: -17.913043975830078
    8. '
' → logprob: -19.413043975830078
    9. '00' → logprob: -19.413043975830078
    10. '`' → logprob: -19.663043975830078

Token 366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. ')' → logprob: -22.625
    4. '   ' → logprob: -22.75
    5. '０' → logprob: -23.5
    6. '۰' → logprob: -23.875
    7. '"' → logprob: -24.5
    8. '`' → logprob: -25.0
    9. '00' → logprob: -25.375
    10. '000' → logprob: -25.75

Token 367: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4741310179233551
    2. ')' → logprob: -0.9741309881210327
    3. ')
' → logprob: -9.974130630493164
    4. ')return' → logprob: -12.724130630493164
    5. ' )
' → logprob: -13.099130630493164
    6. ' )' → logprob: -13.599130630493164
    7. '   ' → logprob: -14.724130630493164
    8. ')`
' → logprob: -15.099130630493164
    9. ')

' → logprob: -15.724130630493164
    10. '
' → logprob: -16.224130630493164

Token 368: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04879208654165268
    2. '   ' → logprob: -3.0487921237945557
    3. ')' → logprob: -8.798791885375977
    4. 'exit' → logprob: -10.423791885375977
    5. 'elif' → logprob: -11.173791885375977
    6. '    
' → logprob: -12.048791885375977
    7. ' else' → logprob: -13.298791885375977
    8. '```' → logprob: -14.048791885375977
    9. 'import' → logprob: -14.673791885375977
    10. '  ' → logprob: -15.173791885375977

Token 369: ' #' (ID: 1069)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.04749153554439545
    2. 'else' → logprob: -3.2974915504455566
    3. '   ' → logprob: -5.047491550445557
    4. 'import' → logprob: -6.547491550445557
    5. ' exit' → logprob: -6.547491550445557
    6. '	exit' → logprob: -9.672491073608398
    7. '
' → logprob: -11.422491073608398
    8. '_exit' → logprob: -11.547491073608398
    9. '    
' → logprob: -11.672491073608398
    10. 'quit' → logprob: -11.922491073608398

Token 370: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -8.363617962459102e-05
    2. 'import' → logprob: -10.000083923339844
    3. ' exit' → logprob: -10.500083923339844
    4. '   ' → logprob: -12.125083923339844
    5. 'quit' → logprob: -12.750083923339844
    6. 'else' → logprob: -13.125083923339844
    7. '	exit' → logprob: -15.500083923339844
    8. '_exit' → logprob: -17.375083923339844
    9. '```' → logprob: -18.000083923339844
    10. 'return' → logprob: -18.125083923339844

Token 371: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.125000953674316
    3. '()
' → logprob: -15.125000953674316
    4. ' ()' → logprob: -17.875
    5. '()

' → logprob: -18.0
    6. '()\' → logprob: -18.625
    7. '()
' → logprob: -19.125
    8. '()`' → logprob: -19.25
    9. '())' → logprob: -19.375
    10. '();' → logprob: -20.0

Token 372: ' arr' (ID: 1724)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.7835754988482222e-05
    2. '()
' → logprob: -11.125018119812012
    3. '(' → logprob: -12.875018119812012
    4. '()

' → logprob: -15.500018119812012
    5. '())' → logprob: -16.125017166137695
    6. ' ()' → logprob: -16.875017166137695
    7. '()\' → logprob: -16.875017166137695
    8. '<|end|>' → logprob: -17.250017166137695
    9. '();' → logprob: -17.500017166137695
    10. '()<' → logprob: -17.625017166137695

Token 373: 'ête' (ID: 16808)
  Prédit: 'aise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aise' → logprob: -0.8050013780593872
    2. 'ort' → logprob: -1.4300013780593872
    3. 'ête' → logprob: -1.6800013780593872
    4. 'êt' → logprob: -2.8050012588500977
    5. '()' → logprob: -4.305001258850098
    6. 'orte' → logprob: -4.930001258850098
    7. 'ange' → logprob: -5.055001258850098
    8. 'ert' → logprob: -5.055001258850098
    9. 'ete' → logprob: -5.805001258850098
    10. '   ' → logprob: -5.805001258850098

Token 374: ' immédiatement' (ID: 100743)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3856492842023727e-06
    2. '()
' → logprob: -14.125000953674316
    3. '(' → logprob: -14.625000953674316
    4. '()

' → logprob: -17.250001907348633
    5. '()<' → logprob: -17.500001907348633
    6. ' ()' → logprob: -17.625001907348633
    7. '()%' → logprob: -17.625001907348633
    8. '();' → logprob: -17.875001907348633
    9. '()\' → logprob: -18.125001907348633
    10. '())' → logprob: -18.875001907348633

Token 375: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5048530030981055e-06
    2. '()
' → logprob: -13.875001907348633
    3. '(' → logprob: -14.750001907348633
    4. '();' → logprob: -16.625001907348633
    5. '()

' → logprob: -17.125001907348633
    6. '()\' → logprob: -18.125001907348633
    7. '()`' → logprob: -18.750001907348633
    8. ' ()' → logprob: -18.750001907348633
    9. '())' → logprob: -19.375001907348633
    10. '()*' → logprob: -19.500001907348633

Token 376: ''ex' (ID: 23472)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.505091667175293
    2. 'a' → logprob: -1.630091667175293
    3. ''ex' → logprob: -2.505091667175293
    4. 'programme' → logprob: -4.005091667175293
    5. '```' → logprob: -4.005091667175293
    6. '()' → logprob: -4.255091667175293
    7. '()
' → logprob: -4.505091667175293
    8. 'execution' → logprob: -4.630091667175293
    9. 'exit' → logprob: -4.880091667175293
    10. '_program' → logprob: -4.880091667175293

Token 377: 'écution' (ID: 122423)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -2.339278580620885e-06
    2. '()
' → logprob: -14.250001907348633
    3. ' it' → logprob: -14.625001907348633
    4. '```' → logprob: -15.125001907348633
    5. '   ' → logprob: -15.375001907348633
    6. '
' → logprob: -16.000001907348633
    7. '(it' → logprob: -16.250001907348633
    8. '()' → logprob: -16.375001907348633
    9. 'xit' → logprob: -16.375001907348633
    10. '[it' → logprob: -16.875001907348633

Token 378: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -5.9153885558771435e-06
    2. '(' → logprob: -12.500005722045898
    3. '()
' → logprob: -13.375005722045898
    4. '()

' → logprob: -15.500005722045898
    5. '();' → logprob: -16.0000057220459
    6. ' ()' → logprob: -16.2500057220459
    7. '()\' → logprob: -17.0000057220459
    8. '()`' → logprob: -17.2500057220459
    9. '())' → logprob: -17.7500057220459
    10. '()<' → logprob: -18.5000057220459

Token 379: ' script' (ID: 11713)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.030193686485290527
    2. 'program' → logprob: -3.53019380569458
    3. ' programme' → logprob: -7.78019380569458
    4. 'programma' → logprob: -11.655193328857422
    5. 'script' → logprob: -12.030193328857422
    6. 'prog' → logprob: -12.155193328857422
    7. 'Programme' → logprob: -12.905193328857422
    8. 'programm' → logprob: -13.780193328857422
    9. 'pro' → logprob: -14.030193328857422
    10. 'code' → logprob: -15.405193328857422

Token 380: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -5.431207682704553e-05
    2. '()
' → logprob: -10.500054359436035
    3. '())' → logprob: -11.000054359436035
    4. '   ' → logprob: -12.125054359436035
    5. ')' → logprob: -12.750054359436035
    6. '(' → logprob: -14.875054359436035
    7. '()\' → logprob: -15.000054359436035
    8. '();' → logprob: -15.250054359436035
    9. 'exit' → logprob: -15.625054359436035
    10. '(exit' → logprob: -16.00005340576172

Token 381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013776171021163464
    2. 'exit' → logprob: -4.3887763023376465
    3. '
' → logprob: -7.2637763023376465
    4. ' exit' → logprob: -8.388775825500488
    5. '	exit' → logprob: -9.013775825500488
    6. '    
' → logprob: -9.263775825500488
    7. ')' → logprob: -9.763775825500488
    8. '(exit' → logprob: -10.763775825500488
    9. '<|end|>' → logprob: -11.263775825500488
    10. '.exit' → logprob: -11.763775825500488

Token 382: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.0011976092355325818
    2. ' exit' → logprob: -6.751197814941406
    3. 'import' → logprob: -11.126197814941406
    4. '	exit' → logprob: -12.001197814941406
    5. '   ' → logprob: -12.751197814941406
    6. '(exit' → logprob: -13.251197814941406
    7. '_exit' → logprob: -14.001197814941406
    8. '.exit' → logprob: -14.876197814941406
    9. 'return' → logprob: -15.501197814941406
    10. 'quit' → logprob: -16.251197814941406

Token 383: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2113979209971149e-05
    2. '()
' → logprob: -11.375012397766113
    3. '()

' → logprob: -15.875012397766113
    4. '(' → logprob: -16.125011444091797
    5. '()`' → logprob: -16.375011444091797
    6. ' ()' → logprob: -16.500011444091797
    7. '()\' → logprob: -17.000011444091797
    8. '()"' → logprob: -18.500011444091797
    9. '()]' → logprob: -18.500011444091797
    10. '()<' → logprob: -19.000011444091797

Token 384: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8454704284667969
    2. 'result' → logprob: -1.0954704284667969
    3. 'answer' → logprob: -1.8454704284667969
    4. 'res' → logprob: -2.595470428466797
    5. 'ways' → logprob: -6.470470428466797
    6. 'count' → logprob: -7.220470428466797
    7. 'dp' → logprob: -7.220470428466797
    8. 'fact' → logprob: -8.095470428466797
    9. 'pow' → logprob: -9.595470428466797
    10. '#' → logprob: -9.595470428466797

Token 385: ' Initial' (ID: 9209)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3723532259464264
    2. 'answer' → logprob: -1.372353196144104
    3. 'result' → logprob: -3.1223533153533936
    4. 'res' → logprob: -4.4973530769348145
    5. 'dp' → logprob: -7.2473530769348145
    6. 'ways' → logprob: -7.6223530769348145
    7. 'prev' → logprob: -8.122353553771973
    8. '#' → logprob: -8.622353553771973
    9. 'fact' → logprob: -8.997353553771973
    10. 'count' → logprob: -9.122353553771973

Token 386: 'isation' (ID: 6993)
  Prédit: 'ization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.8519646525382996
    2. 'e' → logprob: -1.1019647121429443
    3. 'ize' → logprob: -2.2269647121429443
    4. '#' → logprob: -2.7269647121429443
    5. 'isation' → logprob: -3.1019647121429443
    6. 'izer' → logprob: -5.226964473724365
    7. '=' → logprob: -5.351964473724365
    8. 'izing' → logprob: -5.851964473724365
    9. 'al' → logprob: -6.601964473724365
    10. 'ized' → logprob: -6.976964473724365

Token 387: ' de' (ID: 334)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20677831768989563
    2. 'answer' → logprob: -2.2067782878875732
    3. 'result' → logprob: -2.9567782878875732
    4. 'res' → logprob: -3.7067782878875732
    5. ' ans' → logprob: -9.206778526306152
    6. '(ans' → logprob: -9.831778526306152
    7. 'pow' → logprob: -11.331778526306152
    8. 'ret' → logprob: -12.456778526306152
    9. ' answer' → logprob: -12.456778526306152
    10. 'fact' → logprob: -12.831778526306152

Token 388: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03742353618144989
    2. 'res' → logprob: -4.037423610687256
    3. 'answer' → logprob: -4.537423610687256
    4. 'result' → logprob: -4.787423610687256
    5. 'ret' → logprob: -10.287423133850098
    6. 'a' → logprob: -12.412423133850098
    7. 'la' → logprob: -13.412423133850098
    8. '```' → logprob: -13.412423133850098
    9. 'Ans' → logprob: -13.537423133850098
    10. 'count' → logprob: -13.537423133850098

Token 389: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7497536540031433
    2. 'ans' → logprob: -1.249753713607788
    3. 'res' → logprob: -1.999753713607788
    4. 'answer' → logprob: -2.249753713607788
    5. 'count' → logprob: -10.124753952026367
    6. 'rés' → logprob: -10.999753952026367
    7. 'r' → logprob: -11.124753952026367
    8. 'pow' → logprob: -11.499753952026367
    9. 'ret' → logprob: -11.499753952026367
    10. 'from' → logprob: -11.749753952026367

Token 390: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.22240906953811646
    2. 'answer' → logprob: -2.0974090099334717
    3. 'res' → logprob: -3.0974090099334717
    4. 'result' → logprob: -3.4724090099334717
    5. ' ans' → logprob: -8.97240924835205
    6. 'ways' → logprob: -9.97240924835205
    7. 'total' → logprob: -10.22240924835205
    8. 'ret' → logprob: -10.72240924835205
    9. ' answer' → logprob: -10.84740924835205
    10. 'pow' → logprob: -10.84740924835205

Token 391: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407710552215576
    2. ' =' → logprob: -0.9740771055221558
    3. ' ' → logprob: -16.599077224731445
    4. ',' → logprob: -17.849077224731445
    5. ' =
' → logprob: -17.849077224731445
    6. '1' → logprob: -17.974077224731445
    7. ' ' → logprob: -17.974077224731445
    8. '=
' → logprob: -18.849077224731445
    9. '=int' → logprob: -19.224077224731445
    10. '＝' → logprob: -19.349077224731445

Token 392: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. 'ans' → logprob: -17.375
    4. '```' → logprob: -18.25
    5. '
' → logprob: -19.125
    6. '１' → logprob: -19.625
    7. '(' → logprob: -20.0
    8. 'int' → logprob: -20.125
    9. 'pow' → logprob: -20.125
    10. '

' → logprob: -20.375

Token 393: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. 'ans' → logprob: -19.625
    4. 'pow' → logprob: -20.125
    5. '```' → logprob: -20.5
    6. '１' → logprob: -20.875
    7. 'int' → logprob: -21.5
    8. '[' → logprob: -21.625
    9. '   ' → logprob: -21.875
    10. '
' → logprob: -22.0

Token 394: '.' (ID: 13)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.16452781856060028
    2. ' ans' → logprob: -2.4145278930664062
    3. '=' → logprob: -2.9145278930664062
    4. ' =' → logprob: -5.164527893066406
    5. '(ans' → logprob: -6.789527893066406
    6. '_ans' → logprob: -7.164527893066406
    7. '
' → logprob: -8.289527893066406
    8. '	ans' → logprob: -8.914527893066406
    9. '*' → logprob: -10.664527893066406
    10. 'a' → logprob: -11.914527893066406

Token 395: ' Cette' (ID: 27383)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.5048530030981055e-06
    2. ' ans' → logprob: -13.500001907348633
    3. '(ans' → logprob: -16.625001907348633
    4. '
' → logprob: -17.750001907348633
    5. '	ans' → logprob: -17.875001907348633
    6. '_ans' → logprob: -18.625001907348633
    7. '1' → logprob: -18.750001907348633
    8. 'a' → logprob: -19.250001907348633
    9. 'answer' → logprob: -19.375001907348633
    10. '0' → logprob: -21.000001907348633

Token 396: ' variable' (ID: 11076)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03688977286219597
    2. ' =' → logprob: -3.4118897914886475
    3. '*' → logprob: -5.911889553070068
    4. '_' → logprob: -8.411890029907227
    5. ' ' → logprob: -9.161890029907227
    6. ' ans' → logprob: -9.286890029907227
    7. 'ans' → logprob: -10.161890029907227
    8. ' *' → logprob: -10.911890029907227
    9. '*=' → logprob: -11.536890029907227
    10. '_ans' → logprob: -11.536890029907227

Token 397: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16047810018062592
    2. ' =' → logprob: -1.910478115081787
    3. ' *=' → logprob: -9.035477638244629
    4. ' ' → logprob: -10.410477638244629
    5. ' represents' → logprob: -10.660477638244629
    6. ' will' → logprob: -11.285477638244629
    7. '*=' → logprob: -11.285477638244629
    8. 'ans' → logprob: -11.285477638244629
    9. ',' → logprob: -11.410477638244629
    10. ' ans' → logprob: -11.535477638244629

Token 398: 'i' (ID: 72)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19967181980609894
    2. 'inue' → logprob: -1.9496718645095825
    3. 'ans' → logprob: -4.824671745300293
    4. 'i' → logprob: -4.824671745300293
    5. 'in' → logprob: -5.074671745300293
    6. ' =' → logprob: -5.449671745300293
    7. 'e' → logprob: -5.574671745300293
    8. 'ains' → logprob: -6.449671745300293
    9. '+=' → logprob: -6.949671745300293
    10. '#' → logprob: -7.199671745300293

Token 399: 'endra' (ID: 32364)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.8413432836532593
    2. 'nt' → logprob: -0.8413432836532593
    3. 'n' → logprob: -2.716343402862549
    4. 't' → logprob: -3.091343402862549
    5. 'nent' → logprob: -4.716343402862549
    6. 'e' → logprob: -5.591343402862549
    7. 'ue' → logprob: -5.841343402862549
    8. 'nts' → logprob: -5.966343402862549
    9. 'nte' → logprob: -6.341343402862549
    10. '#' → logprob: -6.591343402862549

Token 400: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014430736191570759
    2. 'ans' → logprob: -4.264430522918701
    3. ' ' → logprob: -8.63943099975586
    4. ' ans' → logprob: -9.63943099975586
    5. '(ans' → logprob: -11.63943099975586
    6. '```' → logprob: -12.13943099975586
    7. '*' → logprob: -12.76443099975586
    8. '=' → logprob: -13.01443099975586
    9. '_ans' → logprob: -13.51443099975586
    10. ' the' → logprob: -14.26443099975586

Token 401: ' réponse' (ID: 50332)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11554911732673645
    2. 'ans' → logprob: -2.240549087524414
    3. ' ans' → logprob: -6.865549087524414
    4. '*' → logprob: -7.740549087524414
    5. '(ans' → logprob: -7.990549087524414
    6. 'int' → logprob: -8.490549087524414
    7. ' ' → logprob: -8.865549087524414
    8. '_ans' → logprob: -9.365549087524414
    9. '
' → logprob: -9.490549087524414
    10. '0' → logprob: -9.615549087524414

Token 402: ' finale' (ID: 37759)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20931436121463776
    2. ' =' → logprob: -1.7093143463134766
    3. 'ans' → logprob: -5.584314346313477
    4. ' ans' → logprob: -6.209314346313477
    5. '(ans' → logprob: -7.209314346313477
    6. '_ans' → logprob: -7.584314346313477
    7. '*' → logprob: -8.459314346313477
    8. ' ' → logprob: -9.084314346313477
    9. '1' → logprob: -9.084314346313477
    10. '
' → logprob: -9.459314346313477

Token 403: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0031663142144680023
    2. ' ans' → logprob: -6.128166198730469
    3. '(ans' → logprob: -7.378166198730469
    4. '=' → logprob: -8.753166198730469
    5. '_ans' → logprob: -9.003166198730469
    6. '	ans' → logprob: -10.378166198730469
    7. '
' → logprob: -10.753166198730469
    8. ' =' → logprob: -11.128166198730469
    9. ')' → logprob: -13.003166198730469
    10. '1' → logprob: -13.253166198730469

Token 404: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.320199877838604e-07
    2. ' ans' → logprob: -15.0
    3. '(ans' → logprob: -17.5
    4. '	ans' → logprob: -17.875
    5. '_ans' → logprob: -18.125
    6. 'answer' → logprob: -18.875
    7. 'a' → logprob: -19.125
    8. '1' → logprob: -20.375
    9. '```' → logprob: -20.375
    10. 'ANS' → logprob: -21.625

Token 405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132634460926056
    2. '=' → logprob: -1.3132634162902832
    3. ' ' → logprob: -14.563263893127441
    4. ' =
' → logprob: -14.688263893127441
    5. ' *=' → logprob: -15.438263893127441
    6. ' ' → logprob: -15.563263893127441
    7. ')' → logprob: -15.563263893127441
    8. ',' → logprob: -15.563263893127441
    9. '=

' → logprob: -17.313262939453125
    10. '=int' → logprob: -17.438262939453125

Token 406: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -20.50000762939453
    4. '１' → logprob: -21.00000762939453
    5. '```' → logprob: -21.50000762939453
    6. 'pow' → logprob: -21.75000762939453
    7. '' → logprob: -22.37500762939453
    8. '۱' → logprob: -22.37500762939453
    9. '
' → logprob: -22.87500762939453
    10. ' ' → logprob: -23.00000762939453

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '
' → logprob: -20.25
    4. '' → logprob: -20.875
    5. '```' → logprob: -21.75
    6. 'pow' → logprob: -22.5
    7. '１' → logprob: -22.75
    8. '

' → logprob: -23.0625
    9. '۱' → logprob: -23.0625
    10. '১' → logprob: -23.125

Token 408: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18359418213367462
    2. 'prev' → logprob: -1.8085942268371582
    3. 'from' → logprob: -6.308594226837158
    4. 'last' → logprob: -7.183594226837158
    5. '#' → logprob: -7.683594226837158
    6. 'previous' → logprob: -8.18359375
    7. 'current' → logprob: -9.05859375
    8. 'count' → logprob: -9.18359375
    9. 'max' → logprob: -9.55859375
    10. 'i' → logprob: -9.80859375

Token 409: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0023691088426858187
    2. 'i' → logprob: -6.877368927001953
    3. ' for' → logprob: -7.127368927001953
    4. '#' → logprob: -8.502368927001953
    5. ')' → logprob: -9.752368927001953
    6. 'd' → logprob: -10.002368927001953
    7. 'prev' → logprob: -10.002368927001953
    8. '' → logprob: -10.127368927001953
    9. 'from' → logprob: -10.377368927001953
    10. 'x' → logprob: -10.377368927001953

Token 410: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1040322333574295
    2. 'prev' → logprob: -2.354032278060913
    3. 'from' → logprob: -6.604032039642334
    4. 'last' → logprob: -6.979032039642334
    5. 'previous' → logprob: -7.229032039642334
    6. 'current' → logprob: -8.604032516479492
    7. 'max' → logprob: -8.979032516479492
    8. '#' → logprob: -9.229032516479492
    9. 'count' → logprob: -9.229032516479492
    10. 'depth' → logprob: -9.479032516479492

Token 411: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10790028423070908
    2. 'prev' → logprob: -2.357900381088257
    3. 'from' → logprob: -5.857900142669678
    4. 'previous' → logprob: -6.357900142669678
    5. 'last' → logprob: -6.607900142669678
    6. 'd' → logprob: -7.732900142669678
    7. 'i' → logprob: -8.107900619506836
    8. '#' → logprob: -8.357900619506836
    9. 'current' → logprob: -8.857900619506836
    10. 'max' → logprob: -9.107900619506836

Token 412: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31349217891693115
    2. ' for' → logprob: -1.3134921789169312
    3. 'i' → logprob: -9.188491821289062
    4. ' i' → logprob: -9.438491821289062
    5. '_' → logprob: -11.063491821289062
    6. ' ' → logprob: -11.188491821289062
    7. ' ' → logprob: -12.813491821289062
    8. 's' → logprob: -13.188491821289062
    9. '#' → logprob: -13.188491821289062
    10. ' 
' → logprob: -13.813491821289062

Token 413: ' va' (ID: 3423)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.24178415536880493
    2. 'i' → logprob: -1.6167840957641602
    3. '_' → logprob: -4.99178409576416
    4. ' for' → logprob: -5.36678409576416
    5. ' _' → logprob: -6.11678409576416
    6. 'for' → logprob: -6.61678409576416
    7. ' d' → logprob: -7.99178409576416
    8. ' ' → logprob: -8.24178409576416
    9. ' in' → logprob: -8.36678409576416
    10. 'd' → logprob: -8.49178409576416

Token 414: ' parcour' (ID: 130642)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21589145064353943
    2. 'd' → logprob: -1.9658914804458618
    3. ' i' → logprob: -3.3408913612365723
    4. ' d' → logprob: -4.340891361236572
    5. '_' → logprob: -6.465891361236572
    6. 'x' → logprob: -6.840891361236572
    7. 'distance' → logprob: -7.090891361236572
    8. 'v' → logprob: -7.715891361236572
    9. 'dist' → logprob: -7.965891361236572
    10. 'val' → logprob: -8.46589183807373

Token 415: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.10044723004102707
    2. 'er' → logprob: -2.350447177886963
    3. 'ancer' → logprob: -10.225447654724121
    4. 'ur' → logprob: -10.975447654724121
    5. 'age' → logprob: -10.975447654724121
    6. 'ager' → logprob: -10.975447654724121
    7. 'irer' → logprob: -11.225447654724121
    8. 'anger' → logprob: -11.475447654724121
    9. 're' → logprob: -11.600447654724121
    10. 'u' → logprob: -11.600447654724121

Token 416: ' tous' (ID: 10688)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05822619050741196
    2. 'i' → logprob: -2.9332261085510254
    3. 'd' → logprob: -5.933226108551025
    4. 'D' → logprob: -8.183226585388184
    5. ' range' → logprob: -8.308226585388184
    6. 'distance' → logprob: -9.683226585388184
    7. 'x' → logprob: -10.058226585388184
    8. 'dist' → logprob: -11.433226585388184
    9. 'value' → logprob: -11.433226585388184
    10. 'val' → logprob: -11.558226585388184

Token 417: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0073680877685546875
    2. ' i' → logprob: -5.257368087768555
    3. 'range' → logprob: -6.632368087768555
    4. 'd' → logprob: -8.007368087768555
    5. 'distance' → logprob: -8.632368087768555
    6. ' range' → logprob: -8.757368087768555
    7. 'x' → logprob: -9.382368087768555
    8. 'val' → logprob: -10.882368087768555
    9. 'dist' → logprob: -11.382368087768555
    10. ' distance' → logprob: -11.882368087768555

Token 418: ' ent' (ID: 1121)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020374055951833725
    2. 'range' → logprob: -4.770373821258545
    3. 'd' → logprob: -5.395373821258545
    4. 'x' → logprob: -5.895373821258545
    5. 'val' → logprob: -6.270373821258545
    6. 'distance' → logprob: -6.770373821258545
    7. 'D' → logprob: -7.395373821258545
    8. 'dist' → logprob: -8.520374298095703
    9. ' i' → logprob: -8.520374298095703
    10. 'value' → logprob: -8.895374298095703

Token 419: 'iers' (ID: 11012)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04447035491466522
    2. ' range' → logprob: -3.4194703102111816
    3. 'age' → logprob: -5.419470310211182
    4. 'ge' → logprob: -6.169470310211182
    5. 'ange' → logprob: -6.544470310211182
    6. ' in' → logprob: -7.544470310211182
    7. 'D' → logprob: -7.919470310211182
    8. '   ' → logprob: -8.04447078704834
    9. '(range' → logprob: -8.29447078704834
    10. 'e' → logprob: -8.54447078704834

Token 420: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.45637017488479614
    2. 'range' → logprob: -1.3313701152801514
    3. 'd' → logprob: -2.8313701152801514
    4. ' range' → logprob: -4.2063703536987305
    5. 'from' → logprob: -4.5813703536987305
    6. ' i' → logprob: -4.7063703536987305
    7. 'x' → logprob: -5.8313703536987305
    8. 'for' → logprob: -6.9563703536987305
    9. '(i' → logprob: -6.9563703536987305
    10. '(' → logprob: -7.0813703536987305

Token 421: ' allant' (ID: 122150)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.43569836020469666
    2. 'in' → logprob: -1.060698390007019
    3. ',' → logprob: -5.435698509216309
    4. 'range' → logprob: -6.685698509216309
    5. 'from' → logprob: -7.560698509216309
    6. '1' → logprob: -8.185698509216309
    7. ' ' → logprob: -8.935698509216309
    8. ' range' → logprob: -9.435698509216309
    9. 'i' → logprob: -9.685698509216309
    10. '   ' → logprob: -10.060698509216309

Token 422: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9173282384872437
    2. 'from' → logprob: -0.9173282384872437
    3. ' from' → logprob: -1.7923282384872437
    4. 'de' → logprob: -3.542328357696533
    5. ' range' → logprob: -5.667328357696533
    6. 'range' → logprob: -6.417328357696533
    7. ' ' → logprob: -9.542327880859375
    8. ' in' → logprob: -10.042327880859375
    9. ' i' → logprob: -10.167327880859375
    10. '1' → logprob: -10.792327880859375

Token 423: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009115827269852161
    2. '0' → logprob: -7.000911712646484
    3. ' ' → logprob: -15.625911712646484
    4. 'D' → logprob: -20.750911712646484
    5. '(' → logprob: -21.125911712646484
    6. 'range' → logprob: -21.125911712646484
    7. '
' → logprob: -21.500911712646484
    8. '   ' → logprob: -22.125911712646484
    9. '１' → logprob: -22.250911712646484
    10. 'from' → logprob: -22.250911712646484

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017994173686020076
    2. '0' → logprob: -8.6251802444458
    3. ' ' → logprob: -15.2501802444458
    4. '
' → logprob: -17.500179290771484
    5. 'range' → logprob: -19.000179290771484
    6. '(' → logprob: -19.125179290771484
    7. '01' → logprob: -19.250179290771484
    8. '2' → logprob: -20.000179290771484
    9. '１' → logprob: -20.625179290771484
    10. '```' → logprob: -20.625179290771484

Token 425: ' jusqu' (ID: 21961)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.34428930282592773
    2. 'to' → logprob: -1.4692893028259277
    3. ',' → logprob: -2.8442893028259277
    4. ' à' → logprob: -6.969289302825928
    5. ' in' → logprob: -7.344289302825928
    6. '1' → logprob: -8.094289779663086
    7. ' ' → logprob: -8.344289779663086
    8. 'range' → logprob: -8.594289779663086
    9. ' ,' → logprob: -9.344289779663086
    10. ' up' → logprob: -9.344289779663086

Token 426: ''à' (ID: 33688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020183870568871498
    2. '1' → logprob: -4.77018404006958
    3. 'à' → logprob: -4.77018404006958
    4. 'to' → logprob: -6.52018404006958
    5. ' à' → logprob: -6.89518404006958
    6. ''à' → logprob: -8.645183563232422
    7. 'a' → logprob: -9.145183563232422
    8. ' to' → logprob: -9.645183563232422
    9. '0' → logprob: -10.395183563232422
    10. 'i' → logprob: -10.645183563232422

Token 427: ' la' (ID: 557)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011052182875573635
    2. 'max' → logprob: -4.511052131652832
    3. ' N' → logprob: -13.011052131652832
    4. ' max' → logprob: -13.636052131652832
    5. 'len' → logprob: -15.386052131652832
    6. '
' → logprob: -15.511052131652832
    7. '(max' → logprob: -15.761052131652832
    8. '   ' → logprob: -16.13605308532715
    9. 'n' → logprob: -16.51105308532715
    10. ' ' → logprob: -17.26105308532715

Token 428: ' valeur' (ID: 41664)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3881911039352417
    2. 'N' → logprob: -1.1381911039352417
    3. ' max' → logprob: -6.763191223144531
    4. ' N' → logprob: -9.263191223144531
    5. '
' → logprob: -10.513191223144531
    6. 'len' → logprob: -10.513191223144531
    7. '(max' → logprob: -11.638191223144531
    8. 'n' → logprob: -13.638191223144531
    9. ' ' → logprob: -13.763191223144531
    10. 'D' → logprob: -14.763191223144531

Token 429: ' maximale' (ID: 76380)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4354023039340973
    2. '1' → logprob: -1.185402274131775
    3. 'max' → logprob: -3.3104023933410645
    4. '(max' → logprob: -4.6854023933410645
    5. '(
' → logprob: -7.3104023933410645
    6. ' max' → logprob: -7.9354023933410645
    7. ' ' → logprob: -8.435401916503906
    8. 'N' → logprob: -8.935401916503906
    9. 'range' → logprob: -9.685401916503906
    10. ' (' → logprob: -10.060401916503906

Token 430: ' de' (ID: 334)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.7651419043540955
    2. 'max' → logprob: -1.3901419639587402
    3. '(' → logprob: -2.0151419639587402
    4. ' in' → logprob: -3.1401419639587402
    5. 'in' → logprob: -3.1401419639587402
    6. '(
' → logprob: -3.3901419639587402
    7. '(D' → logprob: -3.6401419639587402
    8. ' max' → logprob: -6.76514196395874
    9. 'range' → logprob: -7.14014196395874
    10. '(range' → logprob: -7.39014196395874

Token 431: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.667492151260376
    2. 'max' → logprob: -0.917492151260376
    3. 'C' → logprob: -2.542492151260376
    4. ' max' → logprob: -5.292491912841797
    5. '(max' → logprob: -6.042491912841797
    6. ' D' → logprob: -6.917491912841797
    7. '(D' → logprob: -8.792491912841797
    8. ' C' → logprob: -9.042491912841797
    9. '(C' → logprob: -9.417491912841797
    10. 'range' → logprob: -10.417491912841797

Token 432: ' incl' (ID: 11368)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.0815321207046509
    2. 'for' → logprob: -1.7065321207046509
    3. 'range' → logprob: -1.7065321207046509
    4. ' in' → logprob: -2.7065320014953613
    5. '(' → logprob: -3.0815320014953613
    6. ':' → logprob: -3.3315320014953613
    7. '(max' → logprob: -3.3315320014953613
    8. ',' → logprob: -3.3315320014953613
    9. '(range' → logprob: -3.4565320014953613
    10. ' for' → logprob: -4.331532001495361

Token 433: 'use' (ID: 1821)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.4542741775512695
    2. 'ue' → logprob: -1.4542741775512695
    3. '(max' → logprob: -1.7042741775512695
    4. 'ude' → logprob: -2.0792741775512695
    5. 'max' → logprob: -2.5792741775512695
    6. 'range' → logprob: -3.3292741775512695
    7. '(range' → logprob: -3.4542741775512695
    8. ' range' → logprob: -3.7042741775512695
    9. 'e' → logprob: -4.9542741775512695
    10. 'ued' → logprob: -5.0792741775512695

Token 434: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5265239477157593
    2. 'in' → logprob: -1.5265239477157593
    3. 'range' → logprob: -2.276524066925049
    4. ',' → logprob: -3.526524066925049
    5. ' in' → logprob: -3.651524066925049
    6. ' for' → logprob: -4.026524066925049
    7. '(max' → logprob: -5.401524066925049
    8. '(range' → logprob: -5.526524066925049
    9. 'max' → logprob: -6.026524066925049
    10. '(' → logprob: -6.401524066925049

Token 435: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0017150469357147813
    2. ' for' → logprob: -6.376715183258057
    3. 'range' → logprob: -12.251714706420898
    4. 'i' → logprob: -13.126714706420898
    5. 'in' → logprob: -13.126714706420898
    6. ' in' → logprob: -13.376714706420898
    7. '```' → logprob: -13.376714706420898
    8. ',' → logprob: -15.501714706420898
    9. 'f' → logprob: -15.751714706420898
    10. '1' → logprob: -15.876714706420898

Token 436: ' range' (ID: 3352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0025124046951532364
    2. ' for' → logprob: -6.002512454986572
    3. 'range' → logprob: -10.627511978149414
    4. 'max' → logprob: -12.127511978149414
    5. 'i' → logprob: -12.627511978149414
    6. '```' → logprob: -13.502511978149414
    7. '
' → logprob: -14.127511978149414
    8. 'from' → logprob: -15.002511978149414
    9. 'f' → logprob: -15.127511978149414
    10. '1' → logprob: -15.502511978149414

Token 437: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.231182826217264e-05
    2. '(max' → logprob: -9.625072479248047
    3. '(len' → logprob: -12.250072479248047
    4. ' (' → logprob: -13.750072479248047
    5. '1' → logprob: -15.750072479248047
    6. '(
' → logprob: -16.125072479248047
    7. '(MAX' → logprob: -16.875072479248047
    8. '((' → logprob: -17.250072479248047
    9. '（' → logprob: -17.875072479248047
    10. '(min' → logprob: -18.000072479248047

Token 438: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01057245023548603
    2. '(' → logprob: -4.63557243347168
    3. 'max' → logprob: -7.26057243347168
    4. '(max' → logprob: -9.13557243347168
    5. ')' → logprob: -13.13557243347168
    6. ' ' → logprob: -13.76057243347168
    7. '0' → logprob: -13.88557243347168
    8. 'len' → logprob: -14.13557243347168
    9. '(C' → logprob: -15.63557243347168
    10. '(len' → logprob: -15.76057243347168

Token 439: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010345828719437122
    2. '(max' → logprob: -5.385345935821533
    3. '(' → logprob: -5.885345935821533
    4. ',max' → logprob: -6.010345935821533
    5. ' ,' → logprob: -8.510345458984375
    6. '(len' → logprob: -9.385345458984375
    7. ',len' → logprob: -9.885345458984375
    8. '(MAX' → logprob: -10.385345458984375
    9. '(M' → logprob: -10.635345458984375
    10. ',(' → logprob: -10.885345458984375

Token 440: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.006717386189848185
    2. ' max' → logprob: -5.006717205047607
    3. '(max' → logprob: -13.256717681884766
    4. 'len' → logprob: -16.631717681884766
    5. '   ' → logprob: -16.881717681884766
    6. '	max' → logprob: -17.256717681884766
    7. '
' → logprob: -17.506717681884766
    8. ')' → logprob: -18.381717681884766
    9. ':max' → logprob: -18.506717681884766
    10. ',max' → logprob: -18.881717681884766

Token 441: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0014704647473990917
    2. '(' → logprob: -6.626470565795898
    3. '(max' → logprob: -9.251470565795898
    4. '+' → logprob: -10.876470565795898
    5. ')' → logprob: -11.501470565795898
    6. ')+' → logprob: -12.001470565795898
    7. 'D' → logprob: -12.751470565795898
    8. ' (' → logprob: -12.751470565795898
    9. '+D' → logprob: -13.126470565795898
    10. '(
' → logprob: -13.751470565795898

Token 442: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2527933418750763
    2. ')+' → logprob: -1.502793312072754
    3. '()' → logprob: -7.877793312072754
    4. ' )' → logprob: -8.377793312072754
    5. '+' → logprob: -9.127793312072754
    6. '())' → logprob: -9.877793312072754
    7. '()+' → logprob: -9.877793312072754
    8. '(' → logprob: -11.627793312072754
    9. 'max' → logprob: -11.877793312072754
    10. ' ' → logprob: -12.252793312072754

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006851296406239271
    2. '(' → logprob: -5.0068511962890625
    3. ')' → logprob: -9.631851196289062
    4. '+' → logprob: -10.506851196289062
    5. ' ' → logprob: -10.881851196289062
    6. ' (' → logprob: -11.256851196289062
    7. '()+' → logprob: -12.631851196289062
    8. ')+' → logprob: -12.756851196289062
    9. '()' → logprob: -14.006851196289062
    10. '),' → logprob: -14.131851196289062

Token 444: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014443661086261272
    2. ')' → logprob: -4.264443874359131
    3. '):
' → logprob: -8.389443397521973
    4. ' ):' → logprob: -10.014443397521973
    5. ':' → logprob: -12.389443397521973
    6. ',' → logprob: -12.764443397521973
    7. ' )' → logprob: -15.014443397521973
    8. '):
' → logprob: -16.01444435119629
    9. ')):' → logprob: -16.26444435119629
    10. ')：' → logprob: -16.63944435119629

Token 445: ' gén' (ID: 15330)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008811923675239086
    2. 'for' → logprob: -4.883811950683594
    3. ':
' → logprob: -6.883811950683594
    4. '):' → logprob: -9.383811950683594
    5. ' for' → logprob: -9.883811950683594
    6. ')' → logprob: -10.508811950683594
    7. ' :' → logprob: -11.508811950683594
    8. 'in' → logprob: -12.633811950683594
    9. '(' → logprob: -14.133811950683594
    10. ',' → logprob: -14.383811950683594

Token 446: 'ère' (ID: 4346)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3735272288322449
    2. 'enerate' → logprob: -1.8735272884368896
    3. ')' → logprob: -2.9985272884368896
    4. ' range' → logprob: -3.1235272884368896
    5. '=' → logprob: -3.6235272884368896
    6. 'ère' → logprob: -4.3735270500183105
    7. '(range' → logprob: -4.7485270500183105
    8. ' =' → logprob: -5.6235270500183105
    9. 'érer' → logprob: -5.9985270500183105
    10. 'ives' → logprob: -6.1235270500183105

Token 447: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.044578664004802704
    2. ' (' → logprob: -4.294578552246094
    3. 'range' → logprob: -4.669578552246094
    4. ')' → logprob: -4.794578552246094
    5. ' range' → logprob: -5.544578552246094
    6. '(range' → logprob: -5.794578552246094
    7. '1' → logprob: -6.169578552246094
    8. ',' → logprob: -6.669578552246094
    9. '(
' → logprob: -6.794578552246094
    10. ' ' → logprob: -7.419578552246094

Token 448: ' sé' (ID: 7462)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6958461999893188
    2. ')' → logprob: -1.5708461999893188
    3. ' range' → logprob: -2.0708460807800293
    4. ',' → logprob: -2.1958460807800293
    5. '(range' → logprob: -3.1958460807800293
    6. '(' → logprob: -4.820846080780029
    7. ' (' → logprob: -6.195846080780029
    8. '_range' → logprob: -6.195846080780029
    9. ' )' → logprob: -7.195846080780029
    10. ' ' → logprob: -7.570846080780029

Token 449: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00011713240382960066
    2. 'q' → logprob: -9.125117301940918
    3. 'quences' → logprob: -13.250117301940918
    4. 'que' → logprob: -13.625117301940918
    5. 'rie' → logprob: -13.750117301940918
    6. '(' → logprob: -14.000117301940918
    7. 'QUENCE' → logprob: -14.125117301940918
    8. 'range' → logprob: -14.625117301940918
    9. '#' → logprob: -14.875117301940918
    10. 'ries' → logprob: -15.250117301940918

Token 450: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0059498948976397514
    2. '(i' → logprob: -6.130949974060059
    3. ':' → logprob: -6.755949974060059
    4. 'for' → logprob: -7.255949974060059
    5. ')' → logprob: -7.380949974060059
    6. ',' → logprob: -8.130949974060059
    7. '(range' → logprob: -8.380949974060059
    8. ' (' → logprob: -8.755949974060059
    9. '(
' → logprob: -8.755949974060059
    10. '):' → logprob: -8.880949974060059

Token 451: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000566137779969722
    2. ' for' → logprob: -7.500566005706787
    3. ':' → logprob: -12.000566482543945
    4. 'i' → logprob: -12.625566482543945
    5. ':
' → logprob: -14.000566482543945
    6. '
' → logprob: -14.125566482543945
    7. ')' → logprob: -14.250566482543945
    8. '```' → logprob: -14.875566482543945
    9. 'range' → logprob: -15.000566482543945
    10. 'in' → logprob: -15.375566482543945

Token 452: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06196869537234306
    2. 'i' → logprob: -2.8119688034057617
    3. ' ' → logprob: -14.561968803405762
    4. '	i' → logprob: -14.686968803405762
    5. ' ' → logprob: -16.061967849731445
    6. '_i' → logprob: -18.561967849731445
    7. '```' → logprob: -18.686967849731445
    8. '  ' → logprob: -18.811967849731445
    9. ' in' → logprob: -19.186967849731445
    10. '_' → logprob: -19.186967849731445

Token 453: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03369642049074173
    2. 'in' → logprob: -3.408696413040161
    3. ' ' → logprob: -10.158696174621582
    4. ',' → logprob: -12.658696174621582
    5. '  ' → logprob: -13.408696174621582
    6. '	in' → logprob: -13.533696174621582
    7. '1' → logprob: -13.783696174621582
    8. ')' → logprob: -14.158696174621582
    9. ' i' → logprob: -14.158696174621582
    10. 'import' → logprob: -14.158696174621582

Token 454: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2577987015247345
    2. 'range' → logprob: -1.507798671722412
    3. '1' → logprob: -5.257798671722412
    4. ' ' → logprob: -7.507798671722412
    5. ' in' → logprob: -9.63279914855957
    6. '(' → logprob: -10.75779914855957
    7. '(range' → logprob: -12.25779914855957
    8. 'in' → logprob: -13.00779914855957
    9. ' (' → logprob: -13.50779914855957
    10. '   ' → logprob: -14.75779914855957

Token 455: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.723352049040841e-06
    2. ' (' → logprob: -12.500004768371582
    3. '(
' → logprob: -14.125004768371582
    4. '1' → logprob: -15.500004768371582
    5. '(

' → logprob: -21.250003814697266
    6. ' ' → logprob: -22.500003814697266
    7. ',' → logprob: -22.625003814697266
    8. '   ' → logprob: -22.750003814697266
    9. '(
' → logprob: -22.875003814697266
    10. ' (
' → logprob: -23.125003814697266

Token 456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.125001907348633
    4. '(' → logprob: -18.750001907348633
    5. '
' → logprob: -20.500001907348633
    6. ',' → logprob: -21.125001907348633
    7. '１' → logprob: -21.375001907348633
    8. '```' → logprob: -21.500001907348633
    9. '  ' → logprob: -21.562501907348633
    10. '2' → logprob: -21.562501907348633

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.9186317482963204e-05
    2. ',max' → logprob: -10.125049591064453
    3. ' ,' → logprob: -11.625049591064453
    4. ',len' → logprob: -16.375049591064453
    5. 'max' → logprob: -17.125049591064453
    6. ',
' → logprob: -17.125049591064453
    7. ',(' → logprob: -17.875049591064453
    8. '(max' → logprob: -18.500049591064453
    9. ',m' → logprob: -19.000049591064453
    10. ',

' → logprob: -19.875049591064453

Token 458: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008614808320999146
    2. ' max' → logprob: -4.758615016937256
    3. 'len' → logprob: -15.758614540100098
    4. '(max' → logprob: -16.133615493774414
    5. '   ' → logprob: -17.133615493774414
    6. '
' → logprob: -18.258615493774414
    7. '	max' → logprob: -19.383615493774414
    8. '[max' → logprob: -19.633615493774414
    9. ' ' → logprob: -20.383615493774414
    10. ':max' → logprob: -20.883615493774414

Token 459: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -7.465036105713807e-06
    2. '(' → logprob: -11.875007629394531
    3. '(
' → logprob: -15.250007629394531
    4. ' (' → logprob: -16.50000762939453
    5. 'D' → logprob: -16.75000762939453
    6. '(C' → logprob: -18.12500762939453
    7. ')' → logprob: -18.75000762939453
    8. '(d' → logprob: -20.12500762939453
    9. '(DE' → logprob: -20.12500762939453
    10. '((' → logprob: -20.25000762939453

Token 460: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.018556663766503334
    2. ')' → logprob: -4.018556594848633
    3. '()+' → logprob: -8.393556594848633
    4. '()' → logprob: -9.518556594848633
    5. '())' → logprob: -9.768556594848633
    6. ']+' → logprob: -11.018556594848633
    7. ' )' → logprob: -11.268556594848633
    8. '+' → logprob: -11.893556594848633
    9. '}+' → logprob: -12.518556594848633
    10. '))+' → logprob: -12.893556594848633

Token 461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009926761267706752
    2. '+' → logprob: -7.125992774963379
    3. ' ' → logprob: -9.125992774963379
    4. 'max' → logprob: -9.625992774963379
    5. ')' → logprob: -12.375992774963379
    6. ')+' → logprob: -12.500992774963379
    7. ' +' → logprob: -13.750992774963379
    8. '2' → logprob: -13.750992774963379
    9. '   ' → logprob: -14.375992774963379
    10. '0' → logprob: -14.750992774963379

Token 462: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00022916549642104656
    2. ':' → logprob: -9.125228881835938
    3. ')' → logprob: -9.375228881835938
    4. '):
' → logprob: -10.375228881835938
    5. ' ):' → logprob: -12.500228881835938
    6. '}:' → logprob: -16.375228881835938
    7. '():' → logprob: -16.500228881835938
    8. ']:' → logprob: -16.500228881835938
    9. '):
' → logprob: -16.625228881835938
    10. '   ' → logprob: -17.750228881835938

Token 463: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000253591249929741
    2. 'if' → logprob: -8.625253677368164
    3. ':' → logprob: -9.750253677368164
    4. ' if' → logprob: -11.375253677368164
    5. ':
' → logprob: -13.750253677368164
    6. '<|end|>' → logprob: -14.000253677368164
    7. '    
' → logprob: -14.125253677368164
    8. '#' → logprob: -14.750253677368164
    9. '```' → logprob: -15.375253677368164
    10. '	if' → logprob: -15.625253677368164

Token 464: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3881795406341553
    2. '   ' → logprob: -1.1381795406341553
    3. 'ans' → logprob: -7.138179779052734
    4. ' if' → logprob: -7.888179779052734
    5. '#' (adapté à ' #') → logprob: -9.138179779052734
    6. '```' → logprob: -11.763179779052734
    7. '    
' → logprob: -12.013179779052734
    8. ':' → logprob: -12.138179779052734
    9. '	if' → logprob: -12.888179779052734
    10. 'and' → logprob: -13.138179779052734

Token 465: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00872849952429533
    2. 'ans' → logprob: -4.758728504180908
    3. '#' → logprob: -10.00872802734375
    4. 'count' → logprob: -10.63372802734375
    5. '   ' → logprob: -10.88372802734375
    6. ' if' → logprob: -12.13372802734375
    7. 'a' → logprob: -12.50872802734375
    8. 'cnt' → logprob: -12.75872802734375
    9. '
' → logprob: -13.13372802734375
    10. '```' → logprob: -13.50872802734375

Token 466: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4824950098991394
    2. 'C' → logprob: -0.9824950098991394
    3. ' i' → logprob: -5.107494831085205
    4. ' C' → logprob: -6.107494831085205
    5. '   ' → logprob: -10.232495307922363
    6. 'D' → logprob: -10.857495307922363
    7. '(i' → logprob: -10.982495307922363
    8. ' ' → logprob: -11.732495307922363
    9. 'not' → logprob: -12.294995307922363
    10. '(C' → logprob: -12.357495307922363

Token 467: ' valeur' (ID: 41664)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.138780415058136
    2. 'C' → logprob: -2.138780355453491
    3. ' i' → logprob: -4.63878059387207
    4. ' C' → logprob: -6.63878059387207
    5. 'D' → logprob: -7.88878059387207
    6. 'f' → logprob: -9.57628059387207
    7. '[i' → logprob: -9.88878059387207
    8. '
' → logprob: -9.95128059387207
    9. '

' → logprob: -10.57628059387207
    10. '(i' → logprob: -10.63878059387207

Token 468: ' "' (ID: 392)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11517246812582016
    2. 'C' → logprob: -2.4901723861694336
    3. ' i' → logprob: -3.9901723861694336
    4. ' C' → logprob: -5.365172386169434
    5. ' not' → logprob: -6.240172386169434
    6. '   ' → logprob: -7.990172386169434
    7. 'not' → logprob: -8.365172386169434
    8. 'D' → logprob: -10.865172386169434
    9. '[i' → logprob: -10.865172386169434
    10. ' in' → logprob: -10.927672386169434

Token 469: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005302538629621267
    2. 'C' → logprob: -5.255302429199219
    3. ' i' → logprob: -9.755302429199219
    4. '(i' → logprob: -13.255302429199219
    5. ' C' → logprob: -13.255302429199219
    6. 'D' → logprob: -13.380302429199219
    7. '`' → logprob: -14.005302429199219
    8. '   ' → logprob: -14.130302429199219
    9. '
' → logprob: -14.380302429199219
    10. '```' → logprob: -14.505302429199219

Token 470: '"' (ID: 1)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4454635679721832
    2. 'not' → logprob: -1.0704635381698608
    3. ')' → logprob: -4.69546365737915
    4. ']' → logprob: -5.32046365737915
    5. '-' → logprob: -6.44546365737915
    6. 'in' → logprob: -7.44546365737915
    7. ' in' → logprob: -9.320463180541992
    8. 'n' → logprob: -9.570463180541992
    9. '"' → logprob: -9.945463180541992
    10. '}' → logprob: -10.070463180541992

Token 471: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1799255907535553
    2. 'not' → logprob: -1.804925560951233
    3. 'in' → logprob: -9.929925918579102
    4. ' in' → logprob: -10.054925918579102
    5. ' no' → logprob: -10.429925918579102
    6. ')' → logprob: -10.679925918579102
    7. 'n' → logprob: -11.179925918579102
    8. 'no' → logprob: -11.804925918579102
    9. '-' → logprob: -11.804925918579102
    10. ' n' → logprob: -13.929925918579102

Token 472: ''est' (ID: 6616)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0077136969193816185
    2. 'not' → logprob: -5.757713794708252
    3. ' not' → logprob: -5.757713794708252
    4. 'in' → logprob: -7.507713794708252
    5. ' in' → logprob: -7.882713794708252
    6. 'o' → logprob: -9.007713317871094
    7. 'ots' → logprob: -9.632713317871094
    8. 'on' → logprob: -10.132713317871094
    9. ']' → logprob: -10.257713317871094
    10. 'pas' → logprob: -10.632713317871094

Token 473: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.050626907497644424
    2. ' pas' → logprob: -3.0506269931793213
    3. '_pas' → logprob: -6.925626754760742
    4. 'in' → logprob: -7.175626754760742
    5. 'not' → logprob: -9.425626754760742
    6. ' in' → logprob: -9.550626754760742
    7. 'dans' → logprob: -9.800626754760742
    8. 'Pas' → logprob: -10.425626754760742
    9. ')' → logprob: -11.675626754760742
    10. 'present' → logprob: -11.675626754760742

Token 474: ' présente' (ID: 44828)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.19641739130020142
    2. ' in' → logprob: -1.9464173316955566
    3. 'dans' → logprob: -3.8214173316955566
    4. ' dans' → logprob: -4.571417331695557
    5. 'i' → logprob: -6.821417331695557
    6. 'C' → logprob: -6.821417331695557
    7. ' i' → logprob: -8.321417808532715
    8. ' présente' → logprob: -8.321417808532715
    9. '0' → logprob: -8.821417808532715
    10. 'Dans' → logprob: -9.071417808532715

Token 475: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.639708399772644
    2. ' in' → logprob: -0.764708399772644
    3. ' not' → logprob: -5.389708518981934
    4. 'not' → logprob: -6.514708518981934
    5. ' dans' → logprob: -7.639708518981934
    6. 'dans' → logprob: -8.639708518981934
    7. 'if' → logprob: -8.889708518981934
    8. '   ' → logprob: -9.889708518981934
    9. ' if' → logprob: -10.139708518981934
    10. 'pas' → logprob: -10.764708518981934

Token 476: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -3.5597102396423e-05
    2. ' C' → logprob: -10.250035285949707
    3. 'c' → logprob: -16.375036239624023
    4. '
' → logprob: -17.375036239624023
    5. ' ' → logprob: -18.375036239624023
    6. '   ' → logprob: -19.000036239624023
    7. ')' → logprob: -19.375036239624023
    8. 'D' → logprob: -19.500036239624023
    9. '	C' → logprob: -20.000036239624023
    10. '[C' → logprob: -20.250036239624023

Token 477: ' liste' (ID: 31719)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -4.167648876318708e-05
    2. ' C' → logprob: -10.125041961669922
    3. 'c' → logprob: -13.625041961669922
    4. '
' → logprob: -16.375041961669922
    5. 'D' → logprob: -16.500041961669922
    6. 'counter' → logprob: -17.250041961669922
    7. '`' → logprob: -17.500041961669922
    8. ' ' → logprob: -17.750041961669922
    9. '   ' → logprob: -17.875041961669922
    10. '[C' → logprob: -18.125041961669922

Token 478: ' D' (ID: 415)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.013121403753757477
    2. ' or' → logprob: -4.888121604919434
    3. ' C' → logprob: -5.513121604919434
    4. 'if' → logprob: -7.638121604919434
    5. ' if' → logprob: -8.263121604919434
    6. 'or' → logprob: -8.638121604919434
    7. 'D' → logprob: -8.763121604919434
    8. '   ' → logprob: -9.263121604919434
    9. ' and' → logprob: -9.888121604919434
    10. ' in' → logprob: -10.013121604919434

Token 479: ' (' (ID: 350)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.15991716086864471
    2. '   ' → logprob: -3.409917116165161
    3. ' in' → logprob: -3.409917116165161
    4. 'not' → logprob: -3.534917116165161
    5. ' or' → logprob: -4.15991735458374
    6. ' if' → logprob: -4.53491735458374
    7. 'if' → logprob: -4.65991735458374
    8. 'in' → logprob: -4.78491735458374
    9. ':' → logprob: -4.90991735458374
    10. 'or' → logprob: -8.159916877746582

Token 480: 'c' (ID: 66)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4685150384902954
    2. 'if' → logprob: -1.5935150384902954
    3. ' i' → logprob: -2.593514919281006
    4. ' not' → logprob: -3.218514919281006
    5. 'not' → logprob: -3.843514919281006
    6. ' if' → logprob: -4.218514919281006
    7. ' or' → logprob: -4.593514919281006
    8. ')' → logprob: -5.718514919281006
    9. '   ' → logprob: -6.218514919281006
    10. 'C' → logprob: -6.593514919281006

Token 481: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.011926844716072083
    2. 'i' → logprob: -5.386926651000977
    3. 'ounter' → logprob: -6.011926651000977
    4. 'ount' → logprob: -6.011926651000977
    5. 'not' → logprob: -6.636926651000977
    6. 'if' → logprob: -7.636926651000977
    7. 'in' → logprob: -9.136926651000977
    8. 'on' → logprob: -9.386926651000977
    9. 'onten' → logprob: -10.511926651000977
    10. 'f' → logprob: -10.636926651000977

Token 482: '-à' (ID: 56297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6330848336219788
    2. 'C' → logprob: -1.758084774017334
    3. ' i' → logprob: -2.633084774017334
    4. ' not' → logprob: -2.633084774017334
    5. 'not' → logprob: -3.008084774017334
    6. ' pas' → logprob: -3.508084774017334
    7. ' C' → logprob: -3.883084774017334
    8. 'pas' → logprob: -4.258084774017334
    9. '   ' → logprob: -4.508084774017334
    10. ')' → logprob: -4.633084774017334

Token 483: '-dire' (ID: 76064)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.020287850871682167
    2. 'True' → logprob: -4.020287990570068
    3. '0' → logprob: -7.895287990570068
    4. 'not' → logprob: -8.14528751373291
    5. 'pas' → logprob: -8.14528751373291
    6. 'C' → logprob: -8.27028751373291
    7. ' False' → logprob: -8.27028751373291
    8. 'if' → logprob: -8.77028751373291
    9. 'i' → logprob: -8.89528751373291
    10. 'in' → logprob: -9.89528751373291

Token 484: ' si' (ID: 1784)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4179273247718811
    2. 'C' → logprob: -1.1679272651672363
    3. ' i' → logprob: -3.7929272651672363
    4. ' C' → logprob: -4.917927265167236
    5. '   ' → logprob: -7.917927265167236
    6. 'if' → logprob: -8.917927742004395
    7. 'not' → logprob: -9.542927742004395
    8. ' not' → logprob: -9.667927742004395
    9. ' ' → logprob: -10.917927742004395
    10. ' if' → logprob: -11.042927742004395

Token 485: ' son' (ID: 2391)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3157942593097687
    2. 'i' → logprob: -1.3157942295074463
    3. ' C' → logprob: -6.690794467926025
    4. ' i' → logprob: -6.690794467926025
    5. '   ' → logprob: -10.940793991088867
    6. 'not' → logprob: -11.690793991088867
    7. ' ' → logprob: -12.565793991088867
    8. '
' → logprob: -12.815793991088867
    9. 'c' → logprob: -13.128293991088867
    10. '  ' → logprob: -13.753293991088867

Token 486: ' compte' (ID: 19657)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.03886455297470093
    2. 'i' → logprob: -3.2888646125793457
    3. ' C' → logprob: -7.788864612579346
    4. ' i' → logprob: -8.163864135742188
    5. ')' → logprob: -10.163864135742188
    6. 'n' → logprob: -10.288864135742188
    7. ']' → logprob: -12.163864135742188
    8. ' not' → logprob: -12.351364135742188
    9. ' ' → logprob: -12.663864135742188
    10. 'not' → logprob: -12.726364135742188

Token 487: ' est' (ID: 893)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07891832292079926
    2. 'not' → logprob: -3.953918218612671
    3. '[i' → logprob: -4.07891845703125
    4. 'C' → logprob: -4.57891845703125
    5. 'if' → logprob: -5.07891845703125
    6. ')' → logprob: -5.70391845703125
    7. ' ==' → logprob: -5.70391845703125
    8. 'i' → logprob: -5.82891845703125
    9. ' i' → logprob: -5.95391845703125
    10. ' if' → logprob: -6.07891845703125

Token 488: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.625009536743164
    4. '=' → logprob: -16.750009536743164
    5. ')' → logprob: -18.250009536743164
    6. '  ' → logprob: -18.625009536743164
    7. '==' → logprob: -19.125009536743164
    8. ' zero' → logprob: -19.875009536743164
    9. ' =' → logprob: -20.375009536743164
    10. '```' → logprob: -20.500009536743164

Token 489: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.750001907348633
    4. '  ' → logprob: -19.250001907348633
    5. '=' → logprob: -19.750001907348633
    6. ')' → logprob: -19.750001907348633
    7. ' absent' → logprob: -20.375001907348633
    8. '    ' → logprob: -20.500001907348633
    9. '```' → logprob: -20.625001907348633
    10. ' zero' → logprob: -20.750001907348633

Token 490: ' dans' (ID: 2671)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.20214472711086273
    2. '   ' → logprob: -2.4521446228027344
    3. '):' → logprob: -3.3271446228027344
    4. ')' → logprob: -3.4521446228027344
    5. 'or' → logprob: -4.327144622802734
    6. ':' → logprob: -4.327144622802734
    7. 'if' → logprob: -6.327144622802734
    8. ' if' → logprob: -8.202144622802734
    9. ',' → logprob: -8.202144622802734
    10. ' ' → logprob: -8.952144622802734

Token 491: ' Counter' (ID: 32251)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -4.56102097814437e-05
    2. ' C' → logprob: -10.000045776367188
    3. ')' → logprob: -16.875045776367188
    4. 'c' → logprob: -17.250045776367188
    5. '
' → logprob: -17.500045776367188
    6. ' ' → logprob: -17.750045776367188
    7. '   ' → logprob: -17.750045776367188
    8. '	C' → logprob: -19.250045776367188
    9. '`' → logprob: -19.750045776367188
    10. ',' → logprob: -20.000045776367188

Token 492: '),
' (ID: 2313)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.9318066239356995
    2. ' or' → logprob: -1.4318065643310547
    3. ')' → logprob: -2.3068065643310547
    4. '):' → logprob: -2.6818065643310547
    5. '[C' → logprob: -2.9318065643310547
    6. '   ' → logprob: -2.9318065643310547
    7. '):
' → logprob: -3.5568065643310547
    8. ' C' → logprob: -3.8068065643310547
    9. '(C' → logprob: -3.9318065643310547
    10. 'or' → logprob: -5.056806564331055

Token 493: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9385402993066236e-05
    2. 'if' → logprob: -11.375019073486328
    3. ' if' → logprob: -12.375019073486328
    4. '       ' → logprob: -13.000019073486328
    5. '  ' → logprob: -14.375019073486328
    6. '    ' → logprob: -14.500019073486328
    7. ' ' → logprob: -15.375019073486328
    8. ':' → logprob: -16.625019073486328
    9. '```' → logprob: -17.250019073486328
    10. 's' → logprob: -17.500019073486328

Token 494: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.252417653799057
    2. 'if' → logprob: -1.7524176836013794
    3. ' if' → logprob: -3.00241756439209
    4. ':' → logprob: -10.25241756439209
    5. ' or' → logprob: -11.87741756439209
    6. ' not' → logprob: -12.37741756439209
    7. '       ' → logprob: -13.62741756439209
    8. 'or' → logprob: -13.75241756439209
    9. '  ' → logprob: -13.75241756439209
    10. 'not' → logprob: -13.75241756439209

Token 495: ' alors' (ID: 17971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005593849346041679
    2. 'if' → logprob: -5.630593776702881
    3. 'print' → logprob: -6.630593776702881
    4. ' if' → logprob: -7.630593776702881
    5. ' print' → logprob: -8.880594253540039
    6. '       ' → logprob: -10.505594253540039
    7. '  ' → logprob: -11.755594253540039
    8. '    ' → logprob: -12.505594253540039
    9. ':' → logprob: -12.755594253540039
    10. ' ' → logprob: -13.130594253540039

Token 496: ' cela' (ID: 17542)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0076631708070635796
    2. '   ' → logprob: -4.882663249969482
    3. ' print' → logprob: -9.882662773132324
    4. 'ans' → logprob: -12.632662773132324
    5. ' ' → logprob: -13.757662773132324
    6. '  ' → logprob: -14.757662773132324
    7. 'if' → logprob: -15.132662773132324
    8. '```' → logprob: -15.257662773132324
    9. 'prin' → logprob: -15.632662773132324
    10. '    
' → logprob: -15.632662773132324

Token 497: ' signifie' (ID: 81149)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12400653213262558
    2. '   ' → logprob: -2.749006509780884
    3. '):' → logprob: -3.624006509780884
    4. 'print' → logprob: -3.999006509780884
    5. '==' → logprob: -6.249006748199463
    6. ' :' → logprob: -6.874006748199463
    7. '{' → logprob: -7.249006748199463
    8. ')' → logprob: -7.249006748199463
    9. '=' → logprob: -7.624006748199463
    10. ' ==' → logprob: -7.749006748199463

Token 498: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1613783836364746
    2. 'print' → logprob: -1.9113783836364746
    3. 'ans' → logprob: -7.536378383636475
    4. '0' → logprob: -8.036378860473633
    5. ' print' → logprob: -9.411378860473633
    6. '    
' → logprob: -9.411378860473633
    7. '  ' → logprob: -9.536378860473633
    8. ' ' → logprob: -10.661378860473633
    9. '    ' → logprob: -11.411378860473633
    10. '1' → logprob: -12.036378860473633

Token 499: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014793867012485862
    2. 'C' → logprob: -7.376479148864746
    3. 'ans' → logprob: -7.376479148864746
    4. '   ' → logprob: -8.751479148864746
    5. '0' → logprob: -9.876479148864746
    6. ' print' → logprob: -11.626479148864746
    7. '1' → logprob: -12.876479148864746
    8. ' C' → logprob: -14.251479148864746
    9. 'i' → logprob: -14.501479148864746
    10. 'D' → logprob: -14.501479148864746

Token 500: ' structure' (ID: 8866)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.256334695033729e-05
    2. 'ans' → logprob: -9.875082969665527
    3. '   ' → logprob: -10.500082969665527
    4. ' print' → logprob: -13.250082969665527
    5. 'prin' → logprob: -14.125082969665527
    6. '```' → logprob: -15.500082969665527
    7. ' ' → logprob: -15.625082969665527
    8. 'prit' → logprob: -16.12508201599121
    9. 'pr' → logprob: -16.25008201599121
    10. '    
' → logprob: -16.37508201599121

Token 501: ' demand' (ID: 8492)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3080779016017914
    2. 'print' → logprob: -1.6830779314041138
    3. 'if' → logprob: -2.933077812194824
    4. ' if' → logprob: -4.808077812194824
    5. ' print' → logprob: -5.183077812194824
    6. 'ans' → logprob: -5.433077812194824
    7. 'C' → logprob: -6.558077812194824
    8. ' not' → logprob: -6.683077812194824
    9. ' ' → logprob: -6.933077812194824
    10. '0' → logprob: -7.183077812194824

Token 502: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07567761838436127
    2. 'ée' → logprob: -3.0756776332855225
    3. 'ee' → logprob: -4.575677394866943
    4. 'er' → logprob: -5.450677394866943
    5. '   ' → logprob: -5.450677394866943
    6. 'ent' → logprob: -5.825677394866943
    7. '#' → logprob: -6.325677394866943
    8. 'es' → logprob: -6.825677394866943
    9. 'é' → logprob: -7.700677394866943
    10. 'est' → logprob: -8.200677871704102

Token 503: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5130128264427185
    2. '   ' → logprob: -1.1380128860473633
    3. 'print' → logprob: -3.1380128860473633
    4. 'not' → logprob: -3.6380128860473633
    5. ':' → logprob: -5.888012886047363
    6. ' ' → logprob: -6.388012886047363
    7. ' print' → logprob: -6.388012886047363
    8. 'in' → logprob: -7.138012886047363
    9. '  ' → logprob: -7.388012886047363
    10. '[' → logprob: -7.388012886047363

Token 504: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.4692893922328949
    2. 'ot' → logprob: -1.2192894220352173
    3. 'print' → logprob: -3.4692893028259277
    4. '#' → logprob: -3.8442893028259277
    5. '   ' → logprob: -4.969289302825928
    6. 'e' → logprob: -5.469289302825928
    7. ''' → logprob: -6.219289302825928
    8. 'n' → logprob: -6.594289302825928
    9. '#print' → logprob: -6.719289302825928
    10. ''ex' → logprob: -6.844289302825928

Token 505: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0014751063426956534
    2. ' pas' → logprob: -6.6264753341674805
    3. '   ' → logprob: -9.25147533416748
    4. '```' → logprob: -10.75147533416748
    5. 'plus' → logprob: -11.50147533416748
    6. 'possible' → logprob: -12.12647533416748
    7. '_pas' → logprob: -12.62647533416748
    8. '
' → logprob: -13.25147533416748
    9. '#' → logprob: -13.37647533416748
    10. 'p' → logprob: -13.37647533416748

Token 506: ' correcte' (ID: 173783)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.7813075184822083
    2. 'respect' → logprob: -1.5313074588775635
    3. 'possible' → logprob: -1.9063074588775635
    4. 'val' → logprob: -2.4063074588775635
    5. 'correct' → logprob: -2.5313074588775635
    6. 'complete' → logprob: -6.781307697296143
    7. 'bonne' → logprob: -7.031307697296143
    8. 'prés' → logprob: -7.281307697296143
    9. ' valide' → logprob: -7.281307697296143
    10. 'compatible' → logprob: -7.406307697296143

Token 507: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019085325300693512
    2. ':' → logprob: -4.64408540725708
    3. ' or' → logprob: -5.01908540725708
    4. '       ' → logprob: -6.39408540725708
    5. ':
' → logprob: -8.269084930419922
    6. 'and' → logprob: -8.519084930419922
    7. 'or' → logprob: -8.769084930419922
    8. ' and' → logprob: -9.019084930419922
    9. ',' → logprob: -9.269084930419922
    10. 'if' → logprob: -10.144084930419922

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012094692647224292
    2. ' if' → logprob: -9.875121116638184
    3. '       ' → logprob: -10.375121116638184
    4. 'if' → logprob: -10.500121116638184
    5. ':' → logprob: -12.875121116638184
    6. '    ' → logprob: -13.125121116638184
    7. '  ' → logprob: -13.625121116638184
    8. '```' → logprob: -13.625121116638184
    9. '<|end|>' → logprob: -14.000121116638184
    10. ' ' → logprob: -14.250121116638184

Token 509: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04332263767719269
    2. 'if' (adapté à ' if') → logprob: -3.1683225631713867
    3. ' if' → logprob: -8.043322563171387
    4. '```' → logprob: -14.418322563171387
    5. '	if' → logprob: -14.918322563171387
    6. ' ' → logprob: -15.293322563171387
    7. '  ' → logprob: -15.418322563171387
    8. 'If' → logprob: -15.668322563171387
    9. '    
' → logprob: -15.668322563171387
    10. '       ' → logprob: -15.918322563171387

Token 510: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0005705483490601182
    2. ' C' → logprob: -7.500570774078369
    3. 'i' → logprob: -11.000570297241211
    4. '   ' → logprob: -14.750570297241211
    5. ' i' → logprob: -15.500570297241211
    6. ' ' → logprob: -15.875570297241211
    7. '	C' → logprob: -16.12557029724121
    8. '
' → logprob: -17.25057029724121
    9. 'not' → logprob: -17.87557029724121
    10. '  ' → logprob: -18.37557029724121

Token 511: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.500001907348633
    3. 'i' → logprob: -16.250001907348633
    4. '[C' → logprob: -16.625001907348633
    5. '[
' → logprob: -17.125001907348633
    6. '[I' → logprob: -17.250001907348633
    7. '.get' → logprob: -18.250001907348633
    8. ' [' → logprob: -18.500001907348633
    9. '```' → logprob: -18.750001907348633
    10. '[int' → logprob: -19.625001907348633

Token 512: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10146772116422653
    2. ']==' → logprob: -2.3514676094055176
    3. '==' → logprob: -6.726467609405518
    4. ' ==' → logprob: -9.851468086242676
    5. ' ]' → logprob: -12.976468086242676
    6. ')==' → logprob: -13.101468086242676
    7. ')' → logprob: -13.101468086242676
    8. ']=' → logprob: -14.226468086242676
    9. '=' → logprob: -14.601468086242676
    10. ']!=' → logprob: -14.726468086242676

Token 513: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38688185811042786
    2. ' ==' → logprob: -1.1368818283081055
    3. '=' → logprob: -12.136881828308105
    4. '==
' → logprob: -12.886881828308105
    5. ')==' → logprob: -13.761881828308105
    6. ']==' → logprob: -14.636881828308105
    7. '0' → logprob: -14.761881828308105
    8. '===' → logprob: -15.261881828308105
    9. ' =' → logprob: -15.261881828308105
    10. '<=' → logprob: -15.636881828308105

Token 514: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.50007438659668
    4. '  ' → logprob: -18.75007438659668
    5. '    ' → logprob: -19.37507438659668
    6. '۰' → logprob: -19.37507438659668
    7. ' ' → logprob: -20.37507438659668
    8. '```' → logprob: -20.50007438659668
    9. '	' → logprob: -21.37507438659668
    10. '０' → logprob: -21.43757438659668

Token 515: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.6250057220459
    4. '۰' → logprob: -19.2500057220459
    5. '  ' → logprob: -20.2500057220459
    6. '00' → logprob: -20.6250057220459
    7. '=' → logprob: -20.8750057220459
    8. '    ' → logprob: -21.0000057220459
    9. '０' → logprob: -21.8750057220459
    10. '```' → logprob: -22.0000057220459

Token 516: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02081560343503952
    2. ':
' → logprob: -3.89581561088562
    3. '):' → logprob: -8.8958158493042
    4. '   ' → logprob: -9.2708158493042
    5. ')' → logprob: -10.7708158493042
    6. '):
' → logprob: -11.7708158493042
    7. 'print' → logprob: -12.0208158493042
    8. '       ' → logprob: -13.2708158493042
    9. '=' → logprob: -13.2708158493042
    10. '*' → logprob: -13.5208158493042

Token 517: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1843956857919693
    2. '   ' → logprob: -1.809395670890808
    3. 'print' → logprob: -5.434395790100098
    4. ' print' → logprob: -9.059395790100098
    5. '```' → logprob: -9.684395790100098
    6. '    
' → logprob: -10.684395790100098
    7. '        
' → logprob: -11.309395790100098
    8. '           ' → logprob: -11.684395790100098
    9. ':
' → logprob: -11.684395790100098
    10. '
' → logprob: -12.059395790100098

Token 518: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011810619616881013
    2. '   ' → logprob: -6.751181125640869
    3. ' print' → logprob: -11.876180648803711
    4. '
' → logprob: -12.876180648803711
    5. '```' → logprob: -14.001180648803711
    6. '       ' → logprob: -15.626180648803711
    7. '    
' → logprob: -15.626180648803711
    8. '	print' → logprob: -16.50118064880371
    9. '``' → logprob: -17.00118064880371
    10. ' ' → logprob: -18.12618064880371

Token 519: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.176947600673884e-05
    2. '   ' → logprob: -10.750021934509277
    3. ' print' → logprob: -15.375021934509277
    4. '```' → logprob: -18.25002098083496
    5. 'prin' → logprob: -18.62502098083496
    6. '
' → logprob: -19.12502098083496
    7. 'prit' → logprob: -20.12502098083496
    8. '	print' → logprob: -20.25002098083496
    9. '       ' → logprob: -21.25002098083496
    10. 'pr' → logprob: -21.37502098083496

Token 520: ' affect' (ID: 7902)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0038898612838238478
    2. '   ' → logprob: -5.878890037536621
    3. ' print' → logprob: -6.878890037536621
    4. '
' → logprob: -10.378890037536621
    5. '	print' → logprob: -12.253890037536621
    6. '.print' → logprob: -12.253890037536621
    7. ':
' → logprob: -12.253890037536621
    8. '```' → logprob: -13.253890037536621
    9. '       ' → logprob: -13.503890037536621
    10. '  ' → logprob: -13.628890037536621

Token 521: 'e' (ID: 68)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.19846917688846588
    2. 'e' → logprob: -1.9484691619873047
    3. '   ' → logprob: -3.5734691619873047
    4. 'print' → logprob: -4.698469161987305
    5. 'era' → logprob: -9.323469161987305
    6. '       ' → logprob: -9.448469161987305
    7. '0' → logprob: -9.573469161987305
    8. 'ons' → logprob: -10.448469161987305
    9. 'é' → logprob: -10.573469161987305
    10. 'ent' → logprob: -11.823469161987305

Token 522: ' ' (ID: 220)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5765181183815002
    2. '0' → logprob: -0.8265181183815002
    3. 'print' → logprob: -7.8265180587768555
    4. '(ans' → logprob: -9.826518058776855
    5. '   ' → logprob: -10.076518058776855
    6. ' ans' → logprob: -10.326518058776855
    7. '```' → logprob: -10.326518058776855
    8. 'answer' → logprob: -12.826518058776855
    9. '	ans' → logprob: -12.826518058776855
    10. '    
' → logprob: -12.826518058776855

Token 523: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007165835704654455
    2. 'ans' → logprob: -5.257165908813477
    3. 'print' → logprob: -6.257165908813477
    4. '```' → logprob: -12.007165908813477
    5. '   ' → logprob: -12.757165908813477
    6. '
' → logprob: -13.882165908813477
    7. ' ' → logprob: -13.882165908813477
    8. '(ans' → logprob: -14.257165908813477
    9. ' ans' → logprob: -14.632165908813477
    10. '    
' → logprob: -14.882165908813477

Token 524: ' à' (ID: 1221)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.22504375874996185
    2. '       ' → logprob: -2.350043773651123
    3. '   ' → logprob: -3.350043773651123
    4. '
' → logprob: -3.850043773651123
    5. '=' → logprob: -4.350043773651123
    6. ' =' → logprob: -4.850043773651123
    7. '           ' → logprob: -5.100043773651123
    8. '(ans' → logprob: -5.225043773651123
    9. ' ans' → logprob: -5.475043773651123
    10. 'to' → logprob: -5.600043773651123

Token 525: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.5451681974809617e-05
    2. 'print' → logprob: -11.250015258789062
    3. ' ans' → logprob: -13.250015258789062
    4. '(ans' → logprob: -14.875015258789062
    5. '	ans' → logprob: -16.125015258789062
    6. '_ans' → logprob: -17.375015258789062
    7. 'answer' → logprob: -17.375015258789062
    8. '
' → logprob: -17.500015258789062
    9. 'a' → logprob: -17.625015258789062
    10. '0' → logprob: -18.000015258789062

Token 526: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -9.877503907773644e-05
    2. 'print' → logprob: -9.250099182128906
    3. ' ans' → logprob: -13.375099182128906
    4. 'answer' → logprob: -14.125099182128906
    5. '
' → logprob: -16.125099182128906
    6. '```' → logprob: -16.750099182128906
    7. '(ans' → logprob: -16.750099182128906
    8. '	ans' → logprob: -17.125099182128906
    9. '_ans' → logprob: -17.750099182128906
    10. 'a' → logprob: -18.125099182128906

Token 527: ' finale' (ID: 37759)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.135430932044983
    2. '   ' → logprob: -1.385430932044983
    3. '
' → logprob: -1.510430932044983
    4. 'ans' → logprob: -1.760430932044983
    5. '           ' → logprob: -4.260430812835693
    6. '=' → logprob: -4.510430812835693
    7. ' =' → logprob: -5.635430812835693
    8. '    
' → logprob: -6.135430812835693
    9. '        
' → logprob: -7.010430812835693
    10. ',' → logprob: -7.260430812835693

Token 528: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11348690837621689
    2. '
' → logprob: -2.9884870052337646
    3. '       ' → logprob: -3.6134870052337646
    4. 'ans' → logprob: -3.7384870052337646
    5. '=' → logprob: -6.3634867668151855
    6. ',' → logprob: -6.4884867668151855
    7. '    
' → logprob: -6.8634867668151855
    8. ')' → logprob: -8.113487243652344
    9. '           ' → logprob: -8.113487243652344
    10. '	ans' → logprob: -8.113487243652344

Token 529: ' ind' (ID: 1383)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11651664972305298
    2. 'ans' → logprob: -2.241516590118408
    3. 'break' → logprob: -6.366516590118408
    4. '
' → logprob: -6.491516590118408
    5. '   ' → logprob: -8.616517066955566
    6. ' print' → logprob: -9.366517066955566
    7. ' ans' → logprob: -9.741517066955566
    8. '    
' → logprob: -10.741517066955566
    9. 'answer' → logprob: -10.991517066955566
    10. '0' → logprob: -11.366517066955566

Token 530: 'iquer' (ID: 63028)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5997558236122131
    2. 'print' → logprob: -0.9747558236122131
    3. 'ans' → logprob: -2.9747557640075684
    4. 'break' → logprob: -4.224755764007568
    5. '
' → logprob: -5.724755764007568
    6. 'ent' → logprob: -6.599755764007568
    7. '   ' → logprob: -6.849755764007568
    8. '```' → logprob: -8.349756240844727
    9. '(ans' → logprob: -8.349756240844727
    10. 'ex' → logprob: -8.474756240844727

Token 531: ' un' (ID: 537)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00040457461727783084
    2. 'print' → logprob: -8.625404357910156
    3. '0' → logprob: -8.875404357910156
    4. ' ans' → logprob: -10.500404357910156
    5. '(ans' → logprob: -10.625404357910156
    6. '   ' → logprob: -11.125404357910156
    7. 'answer' → logprob: -11.875404357910156
    8. '```' → logprob: -12.000404357910156
    9. '	ans' → logprob: -13.250404357910156
    10. '
' → logprob: -13.625404357910156

Token 532: ' cas' (ID: 2108)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1443280428647995
    2. 'break' → logprob: -2.0193281173706055
    3. ' break' → logprob: -7.5193281173706055
    4. '
' → logprob: -7.8943281173706055
    5. 'ans' → logprob: -8.394328117370605
    6. '0' → logprob: -8.394328117370605
    7. '```' → logprob: -9.144328117370605
    8. ' print' → logprob: -9.894328117370605
    9. 'answer' → logprob: -11.019328117370605
    10. 'continue' → logprob: -11.769328117370605

Token 533: ' impossible' (ID: 19786)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037780605256557465
    2. '       ' → logprob: -3.412780523300171
    3. 'ans' → logprob: -6.78778076171875
    4. '           ' → logprob: -6.78778076171875
    5. '```' → logprob: -7.91278076171875
    6. '=' → logprob: -8.03778076171875
    7. 'print' → logprob: -8.28778076171875
    8. ' =' → logprob: -8.78778076171875
    9. '    
' → logprob: -8.78778076171875
    10. '        
' → logprob: -9.16278076171875

Token 534: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22820456326007843
    2. '   ' → logprob: -1.603204607963562
    3. '
' → logprob: -6.353204727172852
    4. '           ' → logprob: -8.103204727172852
    5. ',' → logprob: -8.228204727172852
    6. ')' → logprob: -8.603204727172852
    7. '    
' → logprob: -9.478204727172852
    8. '        
' → logprob: -9.728204727172852
    9. '
' → logprob: -10.728204727172852
    10. 'ans' → logprob: -10.728204727172852

Token 535: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4032767713069916
    2. '   ' → logprob: -1.153276801109314
    3. 'ans' → logprob: -4.1532769203186035
    4. '```' → logprob: -7.9032769203186035
    5. '           ' → logprob: -9.778276443481445
    6. ' ans' → logprob: -10.028276443481445
    7. '	ans' → logprob: -11.153276443481445
    8. '    
' → logprob: -11.153276443481445
    9. '        
' → logprob: -11.653276443481445
    10. '``' → logprob: -11.778276443481445

Token 536: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -6.704273118884885e-07
    2. 'print' → logprob: -14.500000953674316
    3. ' ans' → logprob: -16.25
    4. '   ' → logprob: -18.375
    5. 'answer' → logprob: -19.125
    6. '	ans' → logprob: -19.125
    7. '```' → logprob: -20.125
    8. '(ans' → logprob: -20.375
    9. '
' → logprob: -20.5
    10. '    
' → logprob: -21.125

Token 537: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03824276104569435
    2. ' =' → logprob: -3.288242816925049
    3. '*=' → logprob: -8.53824234008789
    4. ' *=' → logprob: -12.16324234008789
    5. '*' → logprob: -16.16324234008789
    6. '=
' → logprob: -17.66324234008789
    7. '	' → logprob: -17.78824234008789
    8. '=

' → logprob: -18.28824234008789
    9. '0' → logprob: -18.66324234008789
    10. '＝' → logprob: -18.66324234008789

Token 538: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۰' → logprob: -22.000001907348633
    4. '   ' → logprob: -22.250001907348633
    5. '000' → logprob: -22.875001907348633
    6. ' ' → logprob: -23.875001907348633
    7. '00' → logprob: -24.000001907348633
    8. '  ' → logprob: -24.250001907348633
    9. '```' → logprob: -24.500001907348633
    10. '٠' → logprob: -24.875001907348633

Token 539: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '۰' → logprob: -20.25
    4. '000' → logprob: -21.25
    5. '```' → logprob: -21.5
    6. '00' → logprob: -21.75
    7. '   ' → logprob: -22.125
    8. '=' → logprob: -22.375
    9. '٠' → logprob: -22.375
    10. '０' → logprob: -22.375

Token 540: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.423219696851447e-05
    2. '   ' → logprob: -10.125083923339844
    3. '<|end|>' → logprob: -10.625083923339844
    4. '	' → logprob: -11.750083923339844
    5. '      ' → logprob: -12.625083923339844
    6. ',' → logprob: -13.375083923339844
    7. '        
' → logprob: -13.375083923339844
    8. '           ' → logprob: -13.875083923339844
    9. '    
' → logprob: -14.000083923339844
    10. '	break' → logprob: -14.125083923339844

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.117345684382599e-05
    2. '   ' → logprob: -11.750020980834961
    3. '	' → logprob: -12.000020980834961
    4. ',' → logprob: -12.875020980834961
    5. '<|end|>' → logprob: -13.125020980834961
    6. '      ' → logprob: -14.250020980834961
    7. '        
' → logprob: -14.625020980834961
    8. '           ' → logprob: -15.125020980834961
    9. ')' → logprob: -15.375020980834961
    10. '    
' → logprob: -16.25002098083496

Token 542: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6166903151315637e-05
    2. '	' → logprob: -11.875016212463379
    3. '   ' → logprob: -12.125016212463379
    4. 'break' → logprob: -14.125016212463379
    5. '	break' → logprob: -14.375016212463379
    6. '      ' → logprob: -14.625016212463379
    7. '<|end|>' → logprob: -14.625016212463379
    8. '        
' → logprob: -14.750016212463379
    9. '           ' → logprob: -15.250016212463379
    10. '
' → logprob: -16.000015258789062

Token 543: ' On' (ID: 2160)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0007275633979588747
    2. '       ' → logprob: -7.375727653503418
    3. ' break' → logprob: -9.625727653503418
    4. '   ' → logprob: -10.500727653503418
    5. '	break' → logprob: -11.875727653503418
    6. 'print' → logprob: -15.625727653503418
    7. '           ' → logprob: -16.5007266998291
    8. 'BREAK' → logprob: -16.5007266998291
    9. '```' → logprob: -16.7507266998291
    10. 'b' → logprob: -17.1257266998291

Token 544: ' sort' (ID: 4506)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.4079888164997101
    2. '       ' → logprob: -1.5329887866973877
    3. ' break' → logprob: -2.7829887866973877
    4. '   ' → logprob: -2.9079887866973877
    5. '	break' → logprob: -6.157989025115967
    6. '    ' → logprob: -8.657988548278809
    7. '
' → logprob: -9.157988548278809
    8. '     ' → logprob: -9.532988548278809
    9. '           ' → logprob: -9.782988548278809
    10. '      ' → logprob: -10.282988548278809

Token 545: ' prém' (ID: 146844)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04397663101553917
    2. '   ' → logprob: -3.5439765453338623
    3. 'from' → logprob: -5.418976783752441
    4. '           ' → logprob: -6.043976783752441
    5. ' de' → logprob: -6.168976783752441
    6. 'break' → logprob: -6.293976783752441
    7. '    ' → logprob: -7.293976783752441
    8. '()' → logprob: -7.543976783752441
    9. ')' → logprob: -8.168976783752441
    10. ' from' → logprob: -8.293976783752441

Token 546: 'atur' (ID: 2228)
  Prédit: 'atur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atur' → logprob: -0.07889506965875626
    2. 'ature' → logprob: -2.578895092010498
    3. 'at' → logprob: -12.82889461517334
    4. 'tur' → logprob: -14.32889461517334
    5. 'aturation' → logprob: -14.82889461517334
    6. '   ' → logprob: -14.95389461517334
    7. 'atu' → logprob: -15.57889461517334
    8. 'ATURE' → logprob: -15.70389461517334
    9. 'aturity' → logprob: -15.82889461517334
    10. 'atura' → logprob: -15.82889461517334

Token 547: 'ément' (ID: 17645)
  Prédit: 'atur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atur' → logprob: -0.03805951029062271
    2. 'ature' → logprob: -3.2880594730377197
    3. 'tur' → logprob: -11.28805923461914
    4. 'at' → logprob: -13.53805923461914
    5. 'atu' → logprob: -13.78805923461914
    6. 'atura' → logprob: -14.41305923461914
    7. 'aturation' → logprob: -14.41305923461914
    8. 'eture' → logprob: -14.41305923461914
    9. 'atiquement' → logprob: -14.91305923461914
    10. 't' → logprob: -15.78805923461914

Token 548: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45992496609687805
    2. '   ' → logprob: -1.5849249362945557
    3. 'break' → logprob: -2.2099249362945557
    4. 'from' → logprob: -4.209925174713135
    5. '()' → logprob: -4.584925174713135
    6. '           ' → logprob: -5.084925174713135
    7. ' break' → logprob: -5.209925174713135
    8. '
' → logprob: -5.334925174713135
    9. '	break' → logprob: -5.709925174713135
    10. ')' → logprob: -6.459925174713135

Token 549: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5765892863273621
    2. 'la' → logprob: -0.8265892863273621
    3. 'le' → logprob: -7.701589107513428
    4. ' the' → logprob: -9.701589584350586
    5. 'for' → logprob: -9.701589584350586
    6. 'the' → logprob: -10.576589584350586
    7. 'l' → logprob: -10.826589584350586
    8. ' le' → logprob: -11.826589584350586
    9. ' ' → logprob: -12.326589584350586
    10. '   ' → logprob: -12.576589584350586

Token 550: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.2334618717432022
    2. 'for' → logprob: -1.858461856842041
    3. 'break' → logprob: -3.858461856842041
    4. ' boucle' → logprob: -3.983461856842041
    5. 'loop' → logprob: -4.608461856842041
    6. 'b' → logprob: -6.608461856842041
    7. '
' → logprob: -8.1084623336792
    8. ' for' → logprob: -8.2334623336792
    9. '```' → logprob: -8.3584623336792
    10. ' bou' → logprob: -8.7334623336792

Token 551: ' car' (ID: 1669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.070975071750581e-05
    2. '   ' → logprob: -11.500030517578125
    3. '	' → logprob: -12.000030517578125
    4. '	break' → logprob: -12.500030517578125
    5. 'break' → logprob: -12.625030517578125
    6. '      ' → logprob: -13.250030517578125
    7. '           ' → logprob: -13.375030517578125
    8. '	   ' → logprob: -14.125030517578125
    9. ' break' → logprob: -14.125030517578125
    10. '.' → logprob: -14.250030517578125

Token 552: ' le' (ID: 505)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.3992007076740265
    2. ' break' → logprob: -1.649200677871704
    3. '   ' → logprob: -2.024200677871704
    4. '       ' → logprob: -5.649200916290283
    5. '    ' → logprob: -7.149200916290283
    6. ' ans' → logprob: -8.899200439453125
    7. ' ' → logprob: -9.024200439453125
    8. 'ans' → logprob: -9.899200439453125
    9. '	break' → logprob: -10.024200439453125
    10. '           ' → logprob: -10.024200439453125

Token 553: ' calcul' (ID: 7559)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -3.292907877039397e-06
    2. ' break' → logprob: -12.75000286102295
    3. '   ' → logprob: -15.87500286102295
    4. '```' → logprob: -17.375003814697266
    5. '
' → logprob: -17.625003814697266
    6. 'b' → logprob: -17.625003814697266
    7. 'breaker' → logprob: -17.875003814697266
    8. 'br' → logprob: -18.500003814697266
    9. '       ' → logprob: -18.500003814697266
    10. '	break' → logprob: -18.625003814697266

Token 554: ' ne' (ID: 453)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047071068547666073
    2. ' break' → logprob: -9.000471115112305
    3. 'break' → logprob: -9.000471115112305
    4. '   ' → logprob: -9.750471115112305
    5. '	break' → logprob: -10.125471115112305
    6. '	' → logprob: -10.500471115112305
    7. ' ' → logprob: -10.500471115112305
    8. '           ' → logprob: -11.125471115112305
    9. 'n' → logprob: -11.125471115112305
    10. ' ' → logprob: -12.250471115112305

Token 555: ' sert' (ID: 52405)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23049384355545044
    2. ' a' → logprob: -3.2304937839508057
    3. 'f' → logprob: -3.6054937839508057
    4. 'sert' → logprob: -3.8554937839508057
    5. 'fait' → logprob: -3.9804937839508057
    6. 'sera' → logprob: -4.230494022369385
    7. 's' → logprob: -4.605494022369385
    8. ' sera' → logprob: -4.855494022369385
    9. 'pas' → logprob: -5.105494022369385
    10. 'n' → logprob: -5.105494022369385

Token 556: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.06947313249111176
    2. 'pas' → logprob: -2.9444730281829834
    3. 'à' → logprob: -5.0694732666015625
    4. '   ' → logprob: -5.1944732666015625
    5. 'de' → logprob: -7.1944732666015625
    6. ' plus' → logprob: -7.9444732666015625
    7. 'to' → logprob: -7.9444732666015625
    8. ' à' → logprob: -8.069473266601562
    9. 'auc' → logprob: -8.319473266601562
    10. 'a' → logprob: -8.819473266601562

Token 557: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5183033347129822
    2. '   ' → logprob: -1.268303394317627
    3. 'de' → logprob: -2.393303394317627
    4. ' de' → logprob: -4.518303394317627
    5. 'à' → logprob: -4.893303394317627
    6. 'd' → logprob: -5.393303394317627
    7. ' à' → logprob: -5.518303394317627
    8. 'break' → logprob: -5.893303394317627
    9. 'import' → logprob: -7.143303394317627
    10. '           ' → logprob: -8.268302917480469

Token 558: ' rien' (ID: 23082)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.4121114822482923e-06
    2. ' rien' → logprob: -13.000003814697266
    3. 'rés' → logprob: -15.375003814697266
    4. '```' → logprob: -15.750003814697266
    5. 'ras' → logprob: -15.875003814697266
    6. 'rie' → logprob: -15.875003814697266
    7. 'plus' → logprob: -16.000003814697266
    8. 'ri' → logprob: -16.000003814697266
    9. '
' → logprob: -17.250003814697266
    10. 'quoi' → logprob: -17.500003814697266

Token 559: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8624639324116288e-06
    2. '   ' → logprob: -14.500001907348633
    3. '	' → logprob: -15.125001907348633
    4. '      ' → logprob: -15.500001907348633
    5. '           ' → logprob: -16.125001907348633
    6. ',' → logprob: -16.250001907348633
    7. '<|end|>' → logprob: -16.500001907348633
    8. ' break' → logprob: -16.625001907348633
    9. '.' → logprob: -16.875001907348633
    10. 'break' → logprob: -17.000001907348633

Token 560: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.2994620242971e-06
    2. '   ' → logprob: -12.625008583068848
    3. ' break' → logprob: -13.125008583068848
    4. 'break' → logprob: -13.125008583068848
    5. '	' → logprob: -14.500008583068848
    6. '      ' → logprob: -15.625008583068848
    7. '	break' → logprob: -15.750008583068848
    8. '           ' → logprob: -17.37500762939453
    9. '    ' → logprob: -17.75000762939453
    10. '```' → logprob: -17.87500762939453

Token 561: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -1.2664456789934775e-06
    2. ' break' → logprob: -13.750000953674316
    3. '	break' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.000001907348633
    5. '```' → logprob: -18.625001907348633
    6. 'Break' → logprob: -20.500001907348633
    7. 'BREAK' → logprob: -20.500001907348633
    8. '
' → logprob: -20.625001907348633
    9. 'breaking' → logprob: -20.875001907348633
    10. 'b' → logprob: -21.125001907348633

Token 562: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013304815627634525
    2. 'ans' → logprob: -4.388304710388184
    3. '    
' → logprob: -7.638304710388184
    4. ' ans' → logprob: -9.263304710388184
    5. '	ans' → logprob: -9.388304710388184
    6. '(ans' → logprob: -10.263304710388184
    7. '   ' → logprob: -10.263304710388184
    8. '
' → logprob: -10.513304710388184
    9. ')' → logprob: -12.263304710388184
    10. '    
' → logprob: -12.388304710388184

Token 563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12862847745418549
    2. 'ans' → logprob: -2.1286284923553467
    3. ' ans' → logprob: -7.378628253936768
    4. '	ans' → logprob: -7.503628253936768
    5. '    
' → logprob: -8.253628730773926
    6. '(ans' → logprob: -8.628628730773926
    7. '   ' → logprob: -10.628628730773926
    8. '```' → logprob: -11.003628730773926
    9. '
' → logprob: -11.753628730773926
    10. '_ans' → logprob: -11.753628730773926

Token 564: ' else' (ID: 1203)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04906351491808891
    2. '   ' → logprob: -3.0490634441375732
    3. ' ans' → logprob: -8.424063682556152
    4. '	ans' → logprob: -9.174063682556152
    5. '    
' → logprob: -9.674063682556152
    6. 'else' (adapté à ' else') → logprob: -10.049063682556152
    7. '(ans' → logprob: -10.424063682556152
    8. '#' → logprob: -12.424063682556152
    9. '
' → logprob: -12.674063682556152
    10. '```' → logprob: -12.924063682556152

Token 565: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.168119415640831
    2. ':
' → logprob: -1.9181194305419922
    3. '   ' → logprob: -4.918119430541992
    4. ' ans' → logprob: -8.543119430541992
    5. 'ans' → logprob: -8.668119430541992
    6. ' :' → logprob: -9.793119430541992
    7. '       ' → logprob: -10.043119430541992
    8. ' :
' → logprob: -10.668119430541992
    9. '	ans' → logprob: -10.918119430541992
    10. '(ans' → logprob: -11.293119430541992

Token 566: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3328459560871124
    2. '   ' → logprob: -1.33284592628479
    3. ' ans' → logprob: -3.95784592628479
    4. '	ans' → logprob: -8.582845687866211
    5. '(ans' → logprob: -9.707845687866211
    6. '```' → logprob: -10.582845687866211
    7. '    
' → logprob: -11.957845687866211
    8. '       ' → logprob: -12.207845687866211
    9. '    ' → logprob: -13.832845687866211
    10. '``' → logprob: -14.082845687866211

Token 567: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.000516217143740505
    2. ' ans' → logprob: -7.625516414642334
    3. '(ans' → logprob: -10.625515937805176
    4. '	ans' → logprob: -13.250515937805176
    5. '   ' → logprob: -13.750515937805176
    6. '_ans' → logprob: -15.500515937805176
    7. '
' → logprob: -15.500515937805176
    8. '```' → logprob: -15.625515937805176
    9. 'answer' → logprob: -15.750515937805176
    10. '    
' → logprob: -15.875515937805176

Token 568: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0002004410926019773
    2. ' ans' → logprob: -8.625200271606445
    3. '#' → logprob: -11.250200271606445
    4. '   ' → logprob: -12.625200271606445
    5. '	ans' → logprob: -13.500200271606445
    6. '(ans' → logprob: -13.625200271606445
    7. '       ' → logprob: -13.625200271606445
    8. '
' → logprob: -15.625200271606445
    9. 'answer' → logprob: -16.125200271606445
    10. 'ann' → logprob: -16.375200271606445

Token 569: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03389855846762657
    2. ' ans' → logprob: -3.4088985919952393
    3. '(ans' → logprob: -8.53389835357666
    4. '   ' → logprob: -10.40889835357666
    5. 'C' → logprob: -11.28389835357666
    6. '	ans' → logprob: -12.40889835357666
    7. ' C' → logprob: -13.03389835357666
    8. 'pow' → logprob: -13.03389835357666
    9. '_ans' → logprob: -14.03389835357666
    10. '#' → logprob: -14.15889835357666

Token 570: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04875018820166588
    2. ' ans' → logprob: -3.048750162124634
    3. '(ans' → logprob: -9.673749923706055
    4. 'C' → logprob: -9.923749923706055
    5. '	ans' → logprob: -11.298749923706055
    6. 'print' → logprob: -12.048749923706055
    7. ' C' → logprob: -12.173749923706055
    8. '#' → logprob: -12.298749923706055
    9. '_ans' → logprob: -12.298749923706055
    10. 'answer' → logprob: -12.298749923706055

Token 571: ' "' (ID: 392)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.11826355010271072
    2. ' ans' → logprob: -2.2432634830474854
    3. '(ans' → logprob: -5.8682637214660645
    4. 'C' → logprob: -6.4932637214660645
    5. '   ' → logprob: -7.8682637214660645
    6. '_ans' → logprob: -8.868263244628906
    7. '(C' → logprob: -9.243263244628906
    8. '	ans' → logprob: -9.243263244628906
    9. '#' → logprob: -9.618263244628906
    10. ' C' → logprob: -9.743263244628906

Token 572: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6594686508178711
    2. 'C' → logprob: -0.7844686508178711
    3. 'ans' → logprob: -3.909468650817871
    4. 'D' → logprob: -6.159468650817871
    5. ' i' → logprob: -6.409468650817871
    6. '   ' → logprob: -7.534468650817871
    7. ' C' → logprob: -7.784468650817871
    8. ' ans' → logprob: -7.909468650817871
    9. ')' → logprob: -8.659468650817871
    10. '1' → logprob: -8.784468650817871

Token 573: '"' (ID: 1)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.44320380687713623
    2. '-' → logprob: -1.5682038068771362
    3. ' !=' → logprob: -3.818203926086426
    4. '==' → logprob: -3.943203926086426
    5. ' ==' → logprob: -4.068203926086426
    6. '!=' → logprob: -4.193203926086426
    7. ' -' → logprob: -4.443203926086426
    8. ' in' → logprob: -4.443203926086426
    9. ')' → logprob: -4.568203926086426
    10. '   ' → logprob: -4.568203926086426

Token 574: ' est' (ID: 893)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9965854287147522
    2. ' <=' → logprob: -1.6215853691101074
    3. '!=' → logprob: -2.2465853691101074
    4. 'ans' → logprob: -2.3715853691101074
    5. '>' → logprob: -2.7465853691101074
    6. '==' → logprob: -3.2465853691101074
    7. ' !=' → logprob: -3.7465853691101074
    8. '=' → logprob: -4.371585369110107
    9. ' >' → logprob: -4.371585369110107
    10. '   ' → logprob: -4.496585369110107

Token 575: ' bien' (ID: 5340)
  Prédit: ' présente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' présente' → logprob: -0.149583637714386
    2. 'prés' → logprob: -2.899583578109741
    3. ' in' → logprob: -3.649583578109741
    4. 'present' → logprob: -4.14958381652832
    5. ' dans' → logprob: -4.77458381652832
    6. ' present' → logprob: -5.27458381652832
    7. 'in' → logprob: -5.39958381652832
    8. '1' → logprob: -5.77458381652832
    9. ' not' → logprob: -5.77458381652832
    10. ' presente' → logprob: -6.02458381652832

Token 576: ' présente' (ID: 44828)
  Prédit: 'prés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prés' → logprob: -0.02032008208334446
    2. ' présente' → logprob: -4.520319938659668
    3. 'C' → logprob: -6.020319938659668
    4. '   ' → logprob: -6.395319938659668
    5. '0' → logprob: -6.520319938659668
    6. '1' → logprob: -6.895319938659668
    7. 'present' → logprob: -7.145319938659668
    8. ' C' → logprob: -7.270319938659668
    9. 'dans' → logprob: -7.895319938659668
    10. ' ' → logprob: -9.020319938659668

Token 577: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4679017961025238
    2. ':
' → logprob: -1.3429018259048462
    3. '   ' → logprob: -2.7179017066955566
    4. '       ' → logprob: -3.9679017066955566
    5. ',' → logprob: -4.092901706695557
    6. 'ans' → logprob: -5.467901706695557
    7. ' ans' → logprob: -6.342901706695557
    8. '):
' → logprob: -6.842901706695557
    9. '):' → logprob: -6.842901706695557
    10. '           ' → logprob: -7.717901706695557

Token 578: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011511539109051228
    2. '   ' → logprob: -5.011511325836182
    3. ' ans' → logprob: -5.386511325836182
    4. '	ans' → logprob: -8.88651180267334
    5. '       ' → logprob: -10.26151180267334
    6. '(ans' → logprob: -10.76151180267334
    7. '    
' → logprob: -12.51151180267334
    8. '        
' → logprob: -13.01151180267334
    9. '
' → logprob: -13.13651180267334
    10. '```' → logprob: -13.13651180267334

Token 579: ' effect' (ID: 3159)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.027121366932988167
    2. '*=' → logprob: -4.277121543884277
    3. ' ans' → logprob: -4.527121543884277
    4. '=' → logprob: -6.527121543884277
    5. ' *=' → logprob: -8.777121543884277
    6. 's' → logprob: -9.027121543884277
    7. '	ans' → logprob: -9.277121543884277
    8. '_ans' → logprob: -9.652121543884277
    9. '   ' → logprob: -10.027121543884277
    10. '(ans' → logprob: -10.527121543884277

Token 580: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0013473768485710025
    2. 'uer' → logprob: -6.751347541809082
    3. 'u' → logprob: -9.501347541809082
    4. 'uez' → logprob: -9.626347541809082
    5. 'ure' → logprob: -11.626347541809082
    6. 'ues' → logprob: -11.751347541809082
    7. 'uera' → logprob: -12.001347541809082
    8. '   ' → logprob: -12.251347541809082
    9. 'ute' → logprob: -13.126347541809082
    10. '       ' → logprob: -13.126347541809082

Token 581: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08707123249769211
    2. ' ans' → logprob: -2.587071180343628
    3. '(ans' → logprob: -4.837071418762207
    4. 'pow' → logprob: -9.337071418762207
    5. '(' → logprob: -9.962071418762207
    6. ' (' → logprob: -10.212071418762207
    7. '   ' → logprob: -10.337071418762207
    8. '	ans' → logprob: -11.962071418762207
    9. '_ans' → logprob: -13.087071418762207
    10. '
' → logprob: -13.712071418762207

Token 582: ' calcul' (ID: 7559)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011177030391991138
    2. ' ans' → logprob: -4.511177062988281
    3. '(ans' → logprob: -9.011177062988281
    4. '_ans' → logprob: -13.261177062988281
    5. '	ans' → logprob: -13.261177062988281
    6. '   ' → logprob: -13.386177062988281
    7. 'multip' → logprob: -14.761177062988281
    8. '```' → logprob: -14.886177062988281
    9. 'pow' → logprob: -15.136177062988281
    10. 'mul' → logprob: -15.386177062988281

Token 583: ' suivant' (ID: 68705)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.8083205819129944
    2. ' *=' → logprob: -1.3083205223083496
    3. ' =' → logprob: -2.1833205223083496
    4. '=' → logprob: -2.8083205223083496
    5. 'ans' → logprob: -2.9333205223083496
    6. ' ans' → logprob: -3.3083205223083496
    7. '       ' → logprob: -4.43332052230835
    8. '   ' → logprob: -5.30832052230835
    9. '*' → logprob: -5.93332052230835
    10. '(ans' → logprob: -7.05832052230835

Token 584: ' :
' (ID: 10039)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7827925682067871
    2. '=' → logprob: -1.657792568206787
    3. ' =' → logprob: -2.157792568206787
    4. '       ' → logprob: -2.782792568206787
    5. ' ans' → logprob: -3.032792568206787
    6. '   ' → logprob: -3.032792568206787
    7. '*=' → logprob: -3.157792568206787
    8. ':' → logprob: -4.282792568206787
    9. ' *=' → logprob: -4.532792568206787
    10. '```' → logprob: -5.907792568206787

Token 585: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0040823169983923435
    2. ' ans' → logprob: -5.504082202911377
    3. '(ans' → logprob: -13.254082679748535
    4. '	ans' → logprob: -13.754082679748535
    5. '```' → logprob: -14.504082679748535
    6. '   ' → logprob: -14.629082679748535
    7. '_ans' → logprob: -16.62908172607422
    8. 'answer' → logprob: -17.75408172607422
    9. '
' → logprob: -17.87908172607422
    10. '        
' → logprob: -17.87908172607422

Token 586: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005980466026812792
    2. ' ans' → logprob: -5.130980491638184
    3. '(ans' → logprob: -10.005980491638184
    4. '   ' → logprob: -12.630980491638184
    5. 'pow' → logprob: -13.505980491638184
    6. '	ans' → logprob: -14.130980491638184
    7. '
' → logprob: -14.880980491638184
    8. '```' → logprob: -15.130980491638184
    9. 'answer' → logprob: -16.005979537963867
    10. '_ans' → logprob: -16.255979537963867

Token 587: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.349075556499884e-05
    2. ' ans' → logprob: -9.7500638961792
    3. '(ans' → logprob: -12.8750638961792
    4. '       ' → logprob: -13.3750638961792
    5. '   ' → logprob: -14.5000638961792
    6. '	ans' → logprob: -15.1250638961792
    7. 'pow' → logprob: -16.500062942504883
    8. '        
' → logprob: -17.500062942504883
    9. '```' → logprob: -17.625062942504883
    10. 'answer' → logprob: -18.000062942504883

Token 588: ' multipl' (ID: 44269)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.3533346354961395
    2. 'ans' → logprob: -1.228334665298462
    3. '=' → logprob: -5.478334426879883
    4. ' ans' → logprob: -8.228334426879883
    5. ' *=' → logprob: -8.228334426879883
    6. '*' → logprob: -10.603334426879883
    7. '```' → logprob: -10.603334426879883
    8. '%=' → logprob: -10.978334426879883
    9. '#' → logprob: -10.978334426879883
    10. 'pow' → logprob: -11.228334426879883

Token 589: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0011828463757410645
    2. ' ans' → logprob: -7.626183032989502
    3. 'ip' → logprob: -8.251182556152344
    4. 'ique' → logprob: -9.001182556152344
    5. 'ipl' → logprob: -9.126182556152344
    6. 'e' → logprob: -9.251182556152344
    7. 'ans' → logprob: -10.126182556152344
    8. 'y' → logprob: -11.376182556152344
    9. 'ipe' → logprob: -11.501182556152344
    10. 'i' → logprob: -12.001182556152344

Token 590: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014593338593840599
    2. ' ans' → logprob: -4.264593124389648
    3. '(ans' → logprob: -7.764593124389648
    4. '	ans' → logprob: -12.389593124389648
    5. '   ' → logprob: -14.639593124389648
    6. '_ans' → logprob: -15.139593124389648
    7. '       ' → logprob: -15.139593124389648
    8. 'answer' → logprob: -16.63959312438965
    9. 'anst' → logprob: -18.13959312438965
    10. '
' → logprob: -18.38959312438965

Token 591: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04860416799783707
    2. ' ans' → logprob: -3.0486042499542236
    3. '(ans' → logprob: -11.548604011535645
    4. '*' → logprob: -13.298604011535645
    5. '	ans' → logprob: -13.673604011535645
    6. ' ' → logprob: -14.173604011535645
    7. '   ' → logprob: -14.423604011535645
    8. 'answer' → logprob: -14.423604011535645
    9. '_ans' → logprob: -14.423604011535645
    10. '```' → logprob: -15.048604011535645

Token 592: ' cour' (ID: 2871)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.45666825771331787
    2. '*=' → logprob: -1.0816682577133179
    3. ' ans' → logprob: -3.9566683769226074
    4. '=' → logprob: -6.081668376922607
    5. 'ans' → logprob: -6.081668376922607
    6. ' =' → logprob: -6.706668376922607
    7. '   ' → logprob: -7.081668376922607
    8. '	ans' → logprob: -7.956668376922607
    9. '*' → logprob: -8.08166790008545
    10. '```' → logprob: -8.83166790008545

Token 593: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.018120329827070236
    2. 'ans' → logprob: -4.268120288848877
    3. '   ' → logprob: -6.143120288848877
    4. 'ant' → logprob: -6.893120288848877
    5. '`' → logprob: -8.518120765686035
    6. 'r' → logprob: -8.893120765686035
    7. ' ans' → logprob: -9.268120765686035
    8. 'ent' → logprob: -9.768120765686035
    9. 'rent' → logprob: -9.893120765686035
    10. '*' → logprob: -10.393120765686035

Token 594: ' "' (ID: 392)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.12117092311382294
    2. ' *=' → logprob: -2.371170997619629
    3. 'ans' → logprob: -4.871170997619629
    4. '=' → logprob: -5.121170997619629
    5. ' ans' → logprob: -5.621170997619629
    6. '   ' → logprob: -6.621170997619629
    7. '*' → logprob: -6.746170997619629
    8. ' =' → logprob: -7.996170997619629
    9. '```' → logprob: -8.121170997619629
    10. ' ' → logprob: -9.871170997619629

Token 595: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00014299227041192353
    2. ' ans' → logprob: -9.000143051147461
    3. '=' → logprob: -11.500143051147461
    4. '*=' → logprob: -11.750143051147461
    5. '(ans' → logprob: -14.250143051147461
    6. '   ' → logprob: -15.125143051147461
    7. '*' → logprob: -15.625143051147461
    8. '```' → logprob: -15.750143051147461
    9. '	ans' → logprob: -15.875143051147461
    10. '_ans' → logprob: -16.87514305114746

Token 596: '"' (ID: 1)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.7900694608688354
    2. ' *=' → logprob: -1.0400694608688354
    3. '*' → logprob: -1.6650694608688354
    4. ' *' → logprob: -6.540069580078125
    5. ' by' → logprob: -7.040069580078125
    6. '=' → logprob: -8.290069580078125
    7. '   ' → logprob: -8.540069580078125
    8. ')' → logprob: -8.665069580078125
    9. ',' → logprob: -8.790069580078125
    10. '```' → logprob: -8.915069580078125

Token 597: ' par' (ID: 686)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.3553033173084259
    2. ' *=' → logprob: -1.2303032875061035
    3. '*' → logprob: -5.3553032875061035
    4. '=' → logprob: -7.4803032875061035
    5. '   ' → logprob: -7.6053032875061035
    6. ' ans' → logprob: -8.105303764343262
    7. ' =' → logprob: -8.480303764343262
    8. ' by' → logprob: -8.605303764343262
    9. '```' → logprob: -8.980303764343262
    10. ',' → logprob: -9.730303764343262

Token 598: ' C' (ID: 363)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0002702760975807905
    2. 'ans' → logprob: -8.875269889831543
    3. 'C' → logprob: -9.375269889831543
    4. '(pow' → logprob: -10.375269889831543
    5. ' pow' → logprob: -11.750269889831543
    6. '(' → logprob: -12.750269889831543
    7. '(C' → logprob: -13.375269889831543
    8. '(ans' → logprob: -14.750269889831543
    9. '   ' → logprob: -14.875269889831543
    10. 'Pow' → logprob: -15.375269889831543

Token 599: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006547740194946527
    2. '[C' → logprob: -7.375654697418213
    3. '[' → logprob: -11.125655174255371
    4. 'i' → logprob: -11.875655174255371
    5. 'C' → logprob: -12.625655174255371
    6. '[
' → logprob: -13.500655174255371
    7. '[D' → logprob: -15.125655174255371
    8. '[int' → logprob: -15.375655174255371
    9. '[(' → logprob: -15.625655174255371
    10. '[c' → logprob: -15.750655174255371

Token 600: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8409014940261841
    2. '[i' → logprob: -1.840901494026184
    3. 'C' → logprob: -2.3409013748168945
    4. '-' → logprob: -2.4659013748168945
    5. '[C' → logprob: -2.5909013748168945
    6. 'ans' → logprob: -2.7159013748168945
    7. '**' → logprob: -2.8409013748168945
    8. 'i' → logprob: -4.7159013748168945
    9. 'pow' → logprob: -5.4659013748168945
    10. '```' → logprob: -5.9659013748168945

Token 601: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07206625491380692
    2. 'i' → logprob: -2.697066307067871
    3. ']*' → logprob: -6.947066307067871
    4. '[i' → logprob: -7.572066307067871
    5. 'C' → logprob: -8.447066307067871
    6. '']' → logprob: -8.822066307067871
    7. '"]' → logprob: -10.072066307067871
    8. '1' → logprob: -10.072066307067871
    9. ']^' → logprob: -10.572066307067871
    10. ' ]' → logprob: -10.947066307067871

Token 602: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022359013091772795
    2. '**' → logprob: -6.1272358894348145
    3. ']
' → logprob: -11.752236366271973
    4. '"]' → logprob: -11.752236366271973
    5. '[' → logprob: -12.252236366271973
    6. 'raised' → logprob: -12.377236366271973
    7. '[i' → logprob: -12.502236366271973
    8. 'raise' → logprob: -12.752236366271973
    9. ' **' → logprob: -12.877236366271973
    10. 'pow' → logprob: -13.127236366271973

Token 603: ' élevé' (ID: 95488)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0794825330376625
    2. ' **' → logprob: -2.5794825553894043
    3. ')' → logprob: -8.329482078552246
    4. '*' → logprob: -8.579482078552246
    5. 'pow' → logprob: -9.829482078552246
    6. ']' → logprob: -10.454482078552246
    7. ' *' → logprob: -10.579482078552246
    8. '**)' → logprob: -11.204482078552246
    9. ')**' → logprob: -11.829482078552246
    10. '**
' → logprob: -12.079482078552246

Token 604: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7961627840995789
    2. 'à' → logprob: -0.9211627840995789
    3. '*' → logprob: -2.6711628437042236
    4. '```' → logprob: -3.7961628437042236
    5. 'to' → logprob: -4.4211626052856445
    6. '`' → logprob: -4.9211626052856445
    7. ' ' → logprob: -5.0461626052856445
    8. '**' → logprob: -5.0461626052856445
    9. ' au' → logprob: -5.1711626052856445
    10. ' to' → logprob: -5.1711626052856445

Token 605: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.004661403596401215
    2. 'la' → logprob: -5.379661560058594
    3. ' la' → logprob: -10.754661560058594
    4. ' C' → logprob: -12.004661560058594
    5. 'the' → logprob: -12.129661560058594
    6. 'l' → logprob: -12.879661560058594
    7. '(C' → logprob: -13.129661560058594
    8. '```' → logprob: -13.629661560058594
    9. 'le' → logprob: -14.254661560058594
    10. 'pow' → logprob: -14.504661560058594

Token 606: ' puissance' (ID: 63494)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -8.65707261255011e-06
    2. 'pow' → logprob: -12.750008583068848
    3. '(C' → logprob: -13.250008583068848
    4. ' C' → logprob: -13.375008583068848
    5. 'power' → logprob: -13.625008583068848
    6. 'pu' → logprob: -14.500008583068848
    7. '```' → logprob: -14.875008583068848
    8. '`' → logprob: -15.750008583068848
    9. '[C' → logprob: -17.625009536743164
    10. '<C' → logprob: -17.625009536743164

Token 607: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -2.5941604690160602e-05
    2. ' C' → logprob: -10.625025749206543
    3. '```' → logprob: -14.250025749206543
    4. '`' → logprob: -15.000025749206543
    5. '(C' → logprob: -15.750025749206543
    6. '	C' → logprob: -15.875025749206543
    7. '   ' → logprob: -16.50002670288086
    8. '*C' → logprob: -16.87502670288086
    9. '_C' → logprob: -17.62502670288086
    10. '>C' → logprob: -17.62502670288086

Token 608: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.180258191714529e-06
    2. 'C' → logprob: -12.750008583068848
    3. '[' → logprob: -13.375008583068848
    4. '```' → logprob: -13.625008583068848
    5. '[C' → logprob: -13.875008583068848
    6. 'i' → logprob: -14.000008583068848
    7. '[
' → logprob: -14.625008583068848
    8. ' [' → logprob: -17.12500762939453
    9. '\[' → logprob: -17.37500762939453
    10. 'c' → logprob: -17.62500762939453

Token 609: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0024651905987411737
    2. ']' → logprob: -6.12746524810791
    3. '[C' → logprob: -8.75246524810791
    4. 'C' → logprob: -9.87746524810791
    5. '[' → logprob: -10.00246524810791
    6. 'i' → logprob: -11.87746524810791
    7. '}' → logprob: -12.87746524810791
    8. '[
' → logprob: -13.00246524810791
    9. ']}' → logprob: -13.37746524810791
    10. '```' → logprob: -13.50246524810791

Token 610: ' modulo' (ID: 112372)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.22599923610687256
    2. 'pow' → logprob: -1.9759992361068726
    3. ' ans' → logprob: -2.850999355316162
    4. 'C' → logprob: -6.225999355316162
    5. '(ans' → logprob: -6.850999355316162
    6. '*' → logprob: -7.100999355316162
    7. '       ' → logprob: -7.725999355316162
    8. 'end' → logprob: -7.725999355316162
    9. ' pow' → logprob: -8.600998878479004
    10. '`' → logprob: -8.600998878479004

Token 611: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.001293808571062982
    2. ' MOD' → logprob: -6.751293659210205
    3. '(M' → logprob: -9.001294136047363
    4. '_MOD' → logprob: -15.126294136047363
    5. '.MOD' → logprob: -16.626293182373047
    6. '(Mod' → logprob: -18.251293182373047
    7. ' (' → logprob: -18.876293182373047
    8. '(' → logprob: -19.251293182373047
    9. '(
' → logprob: -20.251293182373047
    10. 'MO' → logprob: -20.376293182373047

Token 612: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.25768205523490906
    2. ' ans' → logprob: -2.3826820850372314
    3. '       ' → logprob: -3.3826820850372314
    4. '**' → logprob: -3.5076820850372314
    5. '(ans' → logprob: -3.7576820850372314
    6. '
' → logprob: -4.007681846618652
    7. '   ' → logprob: -4.632681846618652
    8. ')' → logprob: -5.257681846618652
    9. ',' → logprob: -5.507681846618652
    10. '           ' → logprob: -6.007681846618652

Token 613: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07821523398160934
    2. '   ' → logprob: -3.0782151222229004
    3. ' ans' → logprob: -3.8282151222229004
    4. '(ans' → logprob: -5.5782151222229
    5. '       ' → logprob: -5.7032151222229
    6. '	ans' → logprob: -9.078215599060059
    7. '
' → logprob: -9.453215599060059
    8. '```' → logprob: -10.203215599060059
    9. '           ' → logprob: -10.703215599060059
    10. 'pow' → logprob: -11.203215599060059

Token 614: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00864175520837307
    2. ' ans' → logprob: -5.133641719818115
    3. '(ans' → logprob: -6.508641719818115
    4. 'pow' → logprob: -6.758641719818115
    5. '   ' → logprob: -10.883642196655273
    6. '**' → logprob: -11.508642196655273
    7. '       ' → logprob: -11.633642196655273
    8. '
' → logprob: -12.133642196655273
    9. '	ans' → logprob: -12.258642196655273
    10. '```' → logprob: -13.383642196655273

Token 615: ' pow' (ID: 9779)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011200252920389175
    2. ' ans' → logprob: -4.511200428009033
    3. '(ans' → logprob: -9.386199951171875
    4. '       ' → logprob: -10.011199951171875
    5. '   ' → logprob: -11.261199951171875
    6. '	ans' → logprob: -12.011199951171875
    7. '
' → logprob: -13.386199951171875
    8. '```' → logprob: -14.136199951171875
    9. '           ' → logprob: -14.386199951171875
    10. 'pow' → logprob: -14.761199951171875

Token 616: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12751781940460205
    2. '(C' → logprob: -2.1275177001953125
    3. '(
' → logprob: -7.5025177001953125
    4. '(

' → logprob: -10.627517700195312
    5. '(
' → logprob: -12.002517700195312
    6. '((' → logprob: -12.752517700195312
    7. '(ans' → logprob: -13.377517700195312
    8. ' (' → logprob: -13.627517700195312
    9. '(`' → logprob: -14.627517700195312
    10. '(pow' → logprob: -15.252517700195312

Token 617: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35422080755233765
    2. '(C' → logprob: -1.2292208671569824
    3. '(
' → logprob: -5.229220867156982
    4. ')' → logprob: -8.729220390319824
    5. ',' → logprob: -8.729220390319824
    6. '(

' → logprob: -9.729220390319824
    7. ' (' → logprob: -12.104220390319824
    8. '       ' → logprob: -13.104220390319824
    9. ',C' → logprob: -13.354220390319824
    10. '(
' → logprob: -13.854220390319824

Token 618: ' b' (ID: 287)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00023083435371518135
    2. ' C' → logprob: -8.62523078918457
    3. '(C' → logprob: -10.37523078918457
    4. ')' → logprob: -10.87523078918457
    5. '       ' → logprob: -14.87523078918457
    6. '	C' → logprob: -15.87523078918457
    7. '   ' → logprob: -16.12523078918457
    8. '           ' → logprob: -16.62523078918457
    9. ' ' → logprob: -16.62523078918457
    10. '(' → logprob: -16.75023078918457

Token 619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05400815233588219
    2. '(' → logprob: -3.1790082454681396
    3. '(C' → logprob: -4.5540080070495605
    4. ')' → logprob: -9.179008483886719
    5. ',C' → logprob: -9.179008483886719
    6. '(
' → logprob: -9.554008483886719
    7. ' ,' → logprob: -10.054008483886719
    8. '       ' → logprob: -10.429008483886719
    9. ',
' → logprob: -11.054008483886719
    10. '=' → logprob: -11.304008483886719

Token 620: ' c' (ID: 274)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.08001362532377243
    2. 'C' → logprob: -3.2050135135650635
    3. ' MOD' → logprob: -3.5800135135650635
    4. ')' → logprob: -5.080013751983643
    5. ' C' → logprob: -6.205013751983643
    6. ' )' → logprob: -9.205013275146484
    7. 'pow' → logprob: -10.455013275146484
    8. ' ' → logprob: -10.955013275146484
    9. 'mod' → logprob: -11.455013275146484
    10. '
' → logprob: -11.580013275146484

Token 621: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06383877247571945
    2. ',' → logprob: -2.9388387203216553
    3. '(' → logprob: -5.438838958740234
    4. '(C' → logprob: -5.563838958740234
    5. '(ans' → logprob: -8.313838958740234
    6. '(
' → logprob: -9.188838958740234
    7. '(pow' → logprob: -9.438838958740234
    8. ')(' → logprob: -9.938838958740234
    9. '=' → logprob: -9.938838958740234
    10. '),' → logprob: -10.063838958740234

Token 622: ' calc' (ID: 25691)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2662794589996338
    2. '(ans' → logprob: -1.5162794589996338
    3. '(
' → logprob: -4.641279220581055
    4. '(C' → logprob: -5.641279220581055
    5. '(pow' → logprob: -7.266279220581055
    6. ')' → logprob: -8.766279220581055
    7. '(

' → logprob: -9.391279220581055
    8. 'ans' → logprob: -10.641279220581055
    9. '(`' → logprob: -11.016279220581055
    10. ' (' → logprob: -11.516279220581055

Token 623: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.2577235996723175
    2. '=' → logprob: -1.8827235698699951
    3. 'ulte' → logprob: -4.382723808288574
    4. 'ulé' → logprob: -4.632723808288574
    5. '=C' → logprob: -4.882723808288574
    6. '(pow' → logprob: -5.257723808288574
    7. 'ulate' → logprob: -5.382723808288574
    8. ')' → logprob: -5.382723808288574
    9. 'pow' → logprob: -5.632723808288574
    10. '_mod' → logprob: -6.257723808288574

Token 624: ' (' (ID: 350)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.023514728993177414
    2. 'pow' → logprob: -4.148514747619629
    3. 'C' → logprob: -5.148514747619629
    4. '(pow' → logprob: -7.023514747619629
    5. '(' → logprob: -7.273514747619629
    6. '(
' → logprob: -10.148514747619629
    7. ' pow' → logprob: -11.648514747619629
    8. ')' → logprob: -12.023514747619629
    9. 'Pow' → logprob: -13.523514747619629
    10. ' C' → logprob: -13.648514747619629

Token 625: 'a' (ID: 64)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0004305500478949398
    2. 'a' → logprob: -8.1254301071167
    3. ' C' → logprob: -10.0004301071167
    4. ')' → logprob: -10.1254301071167
    5. 'pow' → logprob: -10.2504301071167
    6. '(C' → logprob: -11.3754301071167
    7. '	C' → logprob: -14.6254301071167
    8. 'ans' → logprob: -14.6254301071167
    9. ' )' → logprob: -15.0004301071167
    10. '(pow' → logprob: -15.3754301071167

Token 626: '**' (ID: 410)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038582703564316034
    2. ',C' → logprob: -6.6288580894470215
    3. '**' → logprob: -6.8788580894470215
    4. '[C' → logprob: -7.0038580894470215
    5. ' ,' → logprob: -8.50385856628418
    6. ',
' → logprob: -8.75385856628418
    7. 'C' → logprob: -9.00385856628418
    8. '**,' → logprob: -10.62885856628418
    9. ')' → logprob: -11.12885856628418
    10. '[' → logprob: -11.25385856628418

Token 627: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.318681188422488e-05
    2. ' b' → logprob: -11.25001335144043
    3. 'c' → logprob: -16.50001335144043
    4. 'C' → logprob: -18.75001335144043
    5. '```' → logprob: -18.75001335144043
    6. ')b' → logprob: -19.50001335144043
    7. '	b' → logprob: -19.75001335144043
    8. '(b' → logprob: -20.12501335144043
    9. '   ' → logprob: -20.62501335144043
    10. '
' → logprob: -20.62501335144043

Token 628: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019118765369057655
    2. ')' → logprob: -4.144118785858154
    3. '%' → logprob: -5.894118785858154
    4. ')%' → logprob: -9.144118309020996
    5. ' %' → logprob: -9.769118309020996
    6. ',
' → logprob: -10.394118309020996
    7. ' ,' → logprob: -10.519118309020996
    8. '%,' → logprob: -10.644118309020996
    9. '%c' → logprob: -11.019118309020996
    10. '%C' → logprob: -11.144118309020996

Token 629: ' %' (ID: 1851)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004272123333066702
    2. ')' → logprob: -8.62542724609375
    3. '%' → logprob: -9.00042724609375
    4. ' ,' → logprob: -9.87542724609375
    5. ',
' → logprob: -10.37542724609375
    6. ',C' → logprob: -11.62542724609375
    7. ' %' → logprob: -12.00042724609375
    8. '```' → logprob: -12.00042724609375
    9. '%,' → logprob: -12.12542724609375
    10. '**' → logprob: -12.62542724609375

Token 630: ' c' (ID: 274)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.9623810658231378e-05
    2. ' MOD' → logprob: -11.000020027160645
    3. 'c' → logprob: -13.250020027160645
    4. '_MOD' → logprob: -14.375020027160645
    5. '(M' → logprob: -15.625020027160645
    6. 'MO' → logprob: -15.625020027160645
    7. '.MOD' → logprob: -15.875020027160645
    8. '(' → logprob: -17.500019073486328
    9. '(Mod' → logprob: -17.500019073486328
    10. ')' → logprob: -18.375019073486328

Token 631: ' de' (ID: 334)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.1944580376148224
    2. ')' → logprob: -2.1944580078125
    3. ',' → logprob: -2.9444580078125
    4. '(' → logprob: -5.9444580078125
    5. '       ' → logprob: -6.1944580078125
    6. 'ans' → logprob: -6.1944580078125
    7. '(
' → logprob: -6.4444580078125
    8. '   ' → logprob: -6.5694580078125
    9. ')
' → logprob: -6.8194580078125
    10. '),' → logprob: -7.5694580078125

Token 632: ' façon' (ID: 33381)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.003305335296317935
    2. ' MOD' → logprob: -6.128305435180664
    3. '(M' → logprob: -7.628305435180664
    4. ')' → logprob: -8.003305435180664
    5. '(Mod' → logprob: -8.878305435180664
    6. '_MOD' → logprob: -9.753305435180664
    7. 'pow' → logprob: -10.628305435180664
    8. '(' → logprob: -10.753305435180664
    9. '```' → logprob: -11.628305435180664
    10. 'MO' → logprob: -11.628305435180664

Token 633: ' efficace' (ID: 54338)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.2487921416759491
    2. 'efficient' → logprob: -1.6237921714782715
    3. 'mod' → logprob: -4.3737921714782715
    4. ' efficiently' → logprob: -5.3737921714782715
    5. 'MOD' → logprob: -5.8737921714782715
    6. 'fast' → logprob: -6.9987921714782715
    7. '(pow' → logprob: -7.2487921714782715
    8. ' pow' → logprob: -7.4987921714782715
    9. ' efficient' → logprob: -8.873791694641113
    10. ' efficace' → logprob: -9.373791694641113

Token 634: ',' (ID: 11)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.1800936609506607
    2. '(
' → logprob: -2.305093765258789
    3. '(' → logprob: -3.430093765258789
    4. ')' → logprob: -4.305093765258789
    5. ',' → logprob: -4.805093765258789
    6. '(pow' → logprob: -5.430093765258789
    7. '       ' → logprob: -5.680093765258789
    8. 'ans' → logprob: -6.930093765258789
    9. '   ' → logprob: -7.305093765258789
    10. '(C' → logprob: -7.555093765258789

Token 635: ' même' (ID: 9679)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7581247687339783
    2. ' ans' → logprob: -1.383124828338623
    3. 'pow' → logprob: -1.633124828338623
    4. '       ' → logprob: -3.258124828338623
    5. ')' → logprob: -3.508124828338623
    6. '(ans' → logprob: -4.633124828338623
    7. ' pow' → logprob: -5.383124828338623
    8. ')
' → logprob: -7.258124828338623
    9. '   ' → logprob: -7.883124828338623
    10. '(pow' → logprob: -8.633124351501465

Token 636: ' pour' (ID: 1930)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.11006568372249603
    2. 'pour' → logprob: -3.7350656986236572
    3. 'large' → logprob: -3.7350656986236572
    4. 'import' → logprob: -4.485065460205078
    5. 'avec' → logprob: -4.610065460205078
    6. ' modulo' → logprob: -4.985065460205078
    7. 'pu' → logprob: -5.360065460205078
    8. 'à' → logprob: -5.485065460205078
    9. 'ans' → logprob: -6.110065460205078
    10. '```' → logprob: -6.360065460205078

Token 637: ' de' (ID: 334)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.2690059542655945
    2. 'large' → logprob: -2.2690060138702393
    3. ' MOD' → logprob: -3.0190060138702393
    4. 'b' → logprob: -3.5190060138702393
    5. ' large' → logprob: -3.8940060138702393
    6. 'c' → logprob: -3.8940060138702393
    7. 'pow' → logprob: -5.14400577545166
    8. ' grandes' → logprob: -5.64400577545166
    9. ' b' → logprob: -7.26900577545166
    10. ' c' → logprob: -7.39400577545166

Token 638: ' grandes' (ID: 16325)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -1.0464742183685303
    2. 'large' → logprob: -1.6714742183685303
    3. 'long' → logprob: -1.9214742183685303
    4. ' grandes' → logprob: -2.1714742183685303
    5. 'grand' → logprob: -2.1714742183685303
    6. 'MOD' → logprob: -3.1714742183685303
    7. ' grands' → logprob: -4.046474456787109
    8. ' longues' → logprob: -4.421474456787109
    9. '```' → logprob: -5.921474456787109
    10. 'tr' → logprob: -6.546474456787109

Token 639: ' valeurs' (ID: 73668)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.0063488483428955
    2. 'numbers' → logprob: -1.7563488483428955
    3. 'inte' → logprob: -2.2563488483428955
    4. ' integers' → logprob: -2.2563488483428955
    5. ' puiss' → logprob: -2.7563488483428955
    6. ' numbers' → logprob: -2.7563488483428955
    7. 'ex' → logprob: -3.5063488483428955
    8. ')' → logprob: -4.131348609924316
    9. '
' → logprob: -4.631348609924316
    10. 'mod' → logprob: -4.881348609924316

Token 640: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14656488597393036
    2. '(C' → logprob: -2.5215649604797363
    3. '(
' → logprob: -3.0215649604797363
    4. ')' → logprob: -5.521564960479736
    5. '       ' → logprob: -6.146564960479736
    6. ',' → logprob: -7.396564960479736
    7. '(

' → logprob: -8.771564483642578
    8. '(
' → logprob: -9.396564483642578
    9. '   ' → logprob: -10.146564483642578
    10. '(ans' → logprob: -10.271564483642578

Token 641: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004039456602185965
    2. '(ans' → logprob: -6.254039287567139
    3. ' ans' → logprob: -6.504039287567139
    4. '       ' → logprob: -7.629039287567139
    5. '	ans' → logprob: -9.629039764404297
    6. '   ' → logprob: -10.129039764404297
    7. '=' → logprob: -12.004039764404297
    8. 'pow' → logprob: -12.629039764404297
    9. '_ans' → logprob: -12.629039764404297
    10. '```' → logprob: -13.129039764404297

Token 642: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00041625293670222163
    2. 'pow' → logprob: -8.750415802001953
    3. ' ans' → logprob: -8.750415802001953
    4. '(ans' → logprob: -9.750415802001953
    5. '       ' → logprob: -10.375415802001953
    6. '   ' → logprob: -12.125415802001953
    7. '	ans' → logprob: -12.875415802001953
    8. '=' → logprob: -14.500415802001953
    9. ')' → logprob: -14.875415802001953
    10. '_ans' → logprob: -15.250415802001953

Token 643: ' *=' (ID: 25253)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6320854425430298
    2. ' =' → logprob: -0.8820854425430298
    3. ' *=' → logprob: -3.3820853233337402
    4. '*=' → logprob: -3.8820853233337402
    5. '*' → logprob: -11.257085800170898
    6. ' ' → logprob: -14.507085800170898
    7. ' ' → logprob: -14.882085800170898
    8. '	' → logprob: -14.882085800170898
    9. ' *' → logprob: -15.632085800170898
    10. '＝' → logprob: -16.1320858001709

Token 644: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0001238004770129919
    2. ' pow' → logprob: -9.000123977661133
    3. '(pow' → logprob: -15.000123977661133
    4. '   ' → logprob: -17.375123977661133
    5. 'Pow' → logprob: -20.250123977661133
    6. '_pow' → logprob: -20.500123977661133
    7. '.pow' → logprob: -20.625123977661133
    8. 'po' → logprob: -20.750123977661133
    9. 'C' → logprob: -20.750123977661133
    10. ' ' → logprob: -20.875123977661133

Token 645: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0003416607796680182
    2. '(' → logprob: -8.000341415405273
    3. '(
' → logprob: -12.625341415405273
    4. 'C' → logprob: -12.750341415405273
    5. ' (' → logprob: -18.375341415405273
    6. '(

' → logprob: -18.625341415405273
    7. '(
' → logprob: -19.000341415405273
    8. '((' → logprob: -20.000341415405273
    9. '(c' → logprob: -20.875341415405273
    10. '[C' → logprob: -21.000341415405273

Token 646: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01644182577729225
    2. '[C' → logprob: -4.141441822052002
    3. '[D' → logprob: -8.26644229888916
    4. '[' → logprob: -9.14144229888916
    5. 'C' → logprob: -11.01644229888916
    6. ' [' → logprob: -11.26644229888916
    7. '[I' → logprob: -12.39144229888916
    8. '[
' → logprob: -12.89144229888916
    9. 'i' → logprob: -13.14144229888916
    10. '[c' → logprob: -13.26644229888916

Token 647: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004308934323489666
    2. '-' → logprob: -5.629308700561523
    3. '[' → logprob: -7.879308700561523
    4. 'i' → logprob: -9.379308700561523
    5. '[-' → logprob: -9.504308700561523
    6. ' [' → logprob: -9.754308700561523
    7. '[C' → logprob: -9.879308700561523
    8. '[
' → logprob: -10.504308700561523
    9. ' -' → logprob: -11.254308700561523
    10. 'C' → logprob: -11.754308700561523

Token 648: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.625003814697266
    4. '```' → logprob: -19.125003814697266
    5. '
' → logprob: -19.375003814697266
    6. '１' → logprob: -19.687503814697266
    7. '0' → logprob: -19.875003814697266
    8. '-' → logprob: -20.000003814697266
    9. '

' → logprob: -20.875003814697266
    10. '  ' → logprob: -21.000003814697266

Token 649: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002419298980385065
    2. '],' → logprob: -6.377419471740723
    3. ' ,' → logprob: -7.627419471740723
    4. ',C' → logprob: -8.502419471740723
    5. '[C' → logprob: -11.877419471740723
    6. '),' → logprob: -12.002419471740723
    7. ']' → logprob: -12.502419471740723
    8. 'C' → logprob: -12.502419471740723
    9. '[' → logprob: -12.877419471740723
    10. '][' → logprob: -13.002419471740723

Token 650: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.5048530030981055e-06
    2. ' C' → logprob: -13.500001907348633
    3. '	C' → logprob: -22.500001907348633
    4. '   ' → logprob: -23.500001907348633
    5. ' ' → logprob: -25.500001907348633
    6. '*C' → logprob: -26.250001907348633
    7. '(C' → logprob: -26.500001907348633
    8. '>C' → logprob: -26.625001907348633
    9. 'Ｃ' → logprob: -26.875001907348633
    10. 'c' → logprob: -26.875001907348633

Token 651: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. 'i' → logprob: -13.750001907348633
    3. '[
' → logprob: -15.125001907348633
    4. '[' → logprob: -16.250001907348633
    5. 'C' → logprob: -17.375001907348633
    6. '```' → logprob: -17.625001907348633
    7. '[D' → logprob: -18.000001907348633
    8. '
' → logprob: -18.000001907348633
    9. '[C' → logprob: -18.500001907348633
    10. 'D' → logprob: -18.875001907348633

Token 652: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.007640940137207508
    2. ',' → logprob: -5.632640838623047
    3. '),' → logprob: -6.007640838623047
    4. ']' → logprob: -6.882640838623047
    5. '[' → logprob: -8.507640838623047
    6. '[i' → logprob: -8.507640838623047
    7. ')' → logprob: -9.382640838623047
    8. '},' → logprob: -10.257640838623047
    9. '])' → logprob: -11.757640838623047
    10. ']%' → logprob: -12.757640838623047

Token 653: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.339278580620885e-06
    2. ' MOD' → logprob: -13.000001907348633
    3. '   ' → logprob: -21.375001907348633
    4. '_MOD' → logprob: -22.250001907348633
    5. 'MO' → logprob: -22.375001907348633
    6. 'MODE' → logprob: -23.750001907348633
    7. '.MOD' → logprob: -23.875001907348633
    8. ' ' → logprob: -24.625001907348633
    9. '998' → logprob: -25.750001907348633
    10. 'MODULE' → logprob: -26.000001907348633

Token 654: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006221305229701102
    2. ',' → logprob: -8.000621795654297
    3. ')
' → logprob: -8.750621795654297
    4. ')%' → logprob: -9.000621795654297
    5. '%' → logprob: -13.375621795654297
    6. ')
' → logprob: -13.500621795654297
    7. ' )' → logprob: -14.375621795654297
    8. '),' → logprob: -14.625621795654297
    9. ')`' → logprob: -15.500621795654297
    10. '   ' → logprob: -15.625621795654297

Token 655: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.21294213831424713
    2. ' ans' → logprob: -2.587942123413086
    3. ' %' → logprob: -2.962942123413086
    4. 'ans' → logprob: -2.962942123413086
    5. '(ans' → logprob: -4.962942123413086
    6. ' %=' → logprob: -5.837942123413086
    7. '%
' → logprob: -7.462942123413086
    8. '   ' → logprob: -7.587942123413086
    9. '_ans' → logprob: -7.712942123413086
    10. '%=' → logprob: -7.712942123413086

Token 656: ' #' (ID: 1069)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2520022988319397
    2. 'ans' → logprob: -1.502002239227295
    3. '(ans' → logprob: -10.002002716064453
    4. '	ans' → logprob: -11.002002716064453
    5. '_ans' → logprob: -11.627002716064453
    6. '       ' → logprob: -14.377002716064453
    7. '
' → logprob: -14.377002716064453
    8. '   ' → logprob: -15.127002716064453
    9. '%' → logprob: -15.127002716064453
    10. ' Ans' → logprob: -15.502002716064453

Token 657: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.306760805164231e-05
    2. ' ans' → logprob: -11.25001335144043
    3. '	ans' → logprob: -18.00001335144043
    4. '(ans' → logprob: -18.87501335144043
    5. '       ' → logprob: -20.75001335144043
    6. '_ans' → logprob: -20.87501335144043
    7. 'answer' → logprob: -21.25001335144043
    8. '   ' → logprob: -21.62501335144043
    9. 'Ans' → logprob: -23.37501335144043
    10. '
' → logprob: -23.50001335144043

Token 658: ' applique' (ID: 180579)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9036051630973816
    2. '%=' → logprob: -0.9036051630973816
    3. ' %=' → logprob: -2.0286052227020264
    4. ' ans' → logprob: -2.9036052227020264
    5. '%' → logprob: -6.028604984283447
    6. '=' → logprob: -7.153604984283447
    7. '	ans' → logprob: -9.028605461120605
    8. '_ans' → logprob: -9.528605461120605
    9. ' %' → logprob: -10.528605461120605
    10. '(ans' → logprob: -11.278605461120605

Token 659: ' le' (ID: 505)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.14317931234836578
    2. 'ans' → logprob: -2.018179416656494
    3. '(ans' → logprob: -8.018178939819336
    4. '	ans' → logprob: -9.893178939819336
    5. '%' → logprob: -10.143178939819336
    6. ' MOD' → logprob: -10.393178939819336
    7. ' %=' → logprob: -10.393178939819336
    8. ' %' → logprob: -11.893178939819336
    9. '_ans' → logprob: -12.143178939819336
    10. 'mod' → logprob: -12.518178939819336

Token 660: ' modulo' (ID: 112372)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.10891932249069214
    2. '%' → logprob: -2.983919382095337
    3. 'ans' → logprob: -3.358919382095337
    4. ' %' → logprob: -4.358919143676758
    5. ' MOD' → logprob: -5.608919143676758
    6. 'MOD' → logprob: -7.233919143676758
    7. ' %=' → logprob: -7.858919143676758
    8. ' modulo' → logprob: -9.108919143676758
    9. 'mod' → logprob: -9.858919143676758
    10. '(ans' → logprob: -10.108919143676758

Token 661: ' à' (ID: 1221)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.8241506814956665
    2. '(ans' → logprob: -1.0741506814956665
    3. 'ans' → logprob: -2.199150562286377
    4. ' %=' → logprob: -2.449150562286377
    5. '%' → logprob: -4.074150562286377
    6. ' %' → logprob: -5.949150562286377
    7. '%=' → logprob: -7.199150562286377
    8. ')' → logprob: -7.574150562286377
    9. ' MOD' → logprob: -7.699150562286377
    10. 'MOD' → logprob: -7.949150562286377

Token 662: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2015618532896042
    2. 'MOD' → logprob: -1.7015618085861206
    3. ' MOD' → logprob: -9.20156192779541
    4. ' ans' → logprob: -10.20156192779541
    5. 'ANS' → logprob: -11.95156192779541
    6. '(ans' → logprob: -13.20156192779541
    7. 'mod' → logprob: -13.45156192779541
    8. '	ans' → logprob: -15.45156192779541
    9. '```' → logprob: -15.57656192779541
    10. '   ' → logprob: -16.451560974121094

Token 663: ' variable' (ID: 11076)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0015134313143789768
    2. 'MOD' → logprob: -6.501513481140137
    3. ' ans' → logprob: -11.876513481140137
    4. ' MOD' → logprob: -12.751513481140137
    5. 'ANS' → logprob: -14.126513481140137
    6. 'mod' → logprob: -15.251513481140137
    7. 'answer' → logprob: -16.62651252746582
    8. '(ans' → logprob: -16.75151252746582
    9. '	ans' → logprob: -17.37651252746582
    10. '
' → logprob: -17.75151252746582

Token 664: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4318990409374237
    2. 'MOD' → logprob: -1.181899070739746
    3. ' MOD' → logprob: -3.681899070739746
    4. ' ans' → logprob: -4.681899070739746
    5. '(ans' → logprob: -4.681899070739746
    6. 'ANS' → logprob: -9.056899070739746
    7. '=' → logprob: -9.056899070739746
    8. '(' → logprob: -10.681899070739746
    9. '(Mod' → logprob: -11.056899070739746
    10. '(M' → logprob: -11.306899070739746

Token 665: ' après' (ID: 16460)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.28390586376190186
    2. ' %=' → logprob: -2.0339059829711914
    3. '%=' → logprob: -2.1589059829711914
    4. ' %' → logprob: -7.533905982971191
    5. 'ans' → logprob: -8.533905982971191
    6. ')%' → logprob: -9.783905982971191
    7. '%
' → logprob: -9.908905982971191
    8. ' ans' → logprob: -10.783905982971191
    9. '(ans' → logprob: -11.533905982971191
    10. ')' → logprob: -12.658905982971191

Token 666: ' chaque' (ID: 21194)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00017624642350710928
    2. ' ans' → logprob: -9.125176429748535
    3. '(ans' → logprob: -9.875176429748535
    4. ')' → logprob: -12.250176429748535
    5. '	ans' → logprob: -12.250176429748535
    6. '```' → logprob: -13.000176429748535
    7. '%' → logprob: -13.250176429748535
    8. '   ' → logprob: -14.250176429748535
    9. '_ans' → logprob: -14.500176429748535
    10. 'Ans' → logprob: -14.750176429748535

Token 667: ' multiplication' (ID: 86340)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.21967318654060364
    2. ' *=' → logprob: -2.0946731567382812
    3. '*' → logprob: -3.2196731567382812
    4. '=' → logprob: -4.094673156738281
    5. ' multiplication' → logprob: -5.094673156738281
    6. 'ans' → logprob: -5.344673156738281
    7. 'multip' → logprob: -5.344673156738281
    8. '%=' → logprob: -7.594673156738281
    9. 'multiply' → logprob: -8.469673156738281
    10. 'mul' → logprob: -8.719673156738281

Token 668: ' pour' (ID: 1930)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2176164984703064
    2. '%=' → logprob: -2.467616558074951
    3. ' %=' → logprob: -2.592616558074951
    4. 'ans' → logprob: -3.467616558074951
    5. ' ans' → logprob: -6.342616558074951
    6. '(ans' → logprob: -6.592616558074951
    7. '%
' → logprob: -7.217616558074951
    8. ' %' → logprob: -8.092616081237793
    9. ')%' → logprob: -8.092616081237793
    10. '_ans' → logprob: -9.592616081237793

Token 669: ' éviter' (ID: 64013)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.014269989915192127
    2. 'ans' → logprob: -4.264269828796387
    3. '(ans' → logprob: -9.514269828796387
    4. '	ans' → logprob: -10.889269828796387
    5. '_ans' → logprob: -12.139269828796387
    6. ')' → logprob: -12.514269828796387
    7. ' ' → logprob: -13.389269828796387
    8. ' )' → logprob: -14.139269828796387
    9. '```' → logprob: -14.514269828796387
    10. ' %=' → logprob: -15.264269828796387

Token 670: ' toute' (ID: 16825)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4775885045528412
    2. ' ans' → logprob: -0.9775885343551636
    3. '(ans' → logprob: -5.727588653564453
    4. '%' → logprob: -9.352588653564453
    5. '	ans' → logprob: -9.977588653564453
    6. ' MOD' → logprob: -10.102588653564453
    7. ' %=' → logprob: -10.352588653564453
    8. 'MOD' → logprob: -10.977588653564453
    9. 'mod' → logprob: -12.227588653564453
    10. ')' → logprob: -12.227588653564453

Token 671: ' surcharge' (ID: 140651)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.774763822555542
    2. ' %' → logprob: -1.024763822555542
    3. '%' → logprob: -1.774763822555542
    4. ' %=' → logprob: -4.649764060974121
    5. ' MOD' → logprob: -7.649764060974121
    6. 'ans' → logprob: -8.399764060974121
    7. '(ans' → logprob: -8.524764060974121
    8. '%=' → logprob: -8.899764060974121
    9. ' ' → logprob: -9.899764060974121
    10. ' modulo' → logprob: -10.149764060974121

Token 672: ' mémoire' (ID: 79071)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.2898642122745514
    2. '%' → logprob: -1.914864182472229
    3. ' ans' → logprob: -3.2898643016815186
    4. 'ans' → logprob: -3.9148643016815186
    5. ' MOD' → logprob: -4.1648640632629395
    6. 'MOD' → logprob: -4.2898640632629395
    7. '(' → logprob: -5.0398640632629395
    8. ' %=' → logprob: -5.5398640632629395
    9. ' %' → logprob: -5.6648640632629395
    10. 'ANS' → logprob: -7.1648640632629395

Token 673: '.
' (ID: 558)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.09851609915494919
    2. ' %=' → logprob: -2.7235159873962402
    3. '%=' → logprob: -4.97351598739624
    4. ' %' → logprob: -4.97351598739624
    5. 'ans' → logprob: -5.22351598739624
    6. ' ans' → logprob: -5.22351598739624
    7. '(ans' → logprob: -6.34851598739624
    8. '%
' → logprob: -7.22351598739624
    9. ')%' → logprob: -8.223516464233398
    10. ')' → logprob: -8.473516464233398

Token 674: '       ' (ID: 309)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3160368502140045
    2. 'ans' → logprob: -1.3160368204116821
    3. '(ans' → logprob: -6.066036701202393
    4. '	ans' → logprob: -7.941036701202393
    5. '_ans' → logprob: -9.81603717803955
    6. ' %=' → logprob: -11.44103717803955
    7. '%' → logprob: -11.81603717803955
    8. '   ' → logprob: -12.19103717803955
    9. '
' → logprob: -12.81603717803955
    10. ' Ans' → logprob: -12.94103717803955

Token 675: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.029796771705150604
    2. ' ans' → logprob: -3.529796838760376
    3. '(ans' → logprob: -10.154796600341797
    4. '	ans' → logprob: -11.904796600341797
    5. '_ans' → logprob: -14.904796600341797
    6. '   ' → logprob: -15.279796600341797
    7. 'answer' → logprob: -17.404796600341797
    8. 'Ans' → logprob: -17.904796600341797
    9. 'ANS' → logprob: -18.029796600341797
    10. '```' → logprob: -18.404796600341797

Token 676: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.5875900983810425
    2. '%=' → logprob: -0.8375900983810425
    3. '%' → logprob: -4.462590217590332
    4. '=' → logprob: -10.712590217590332
    5. ' %' → logprob: -11.087590217590332
    6. ' ' → logprob: -11.337590217590332
    7. '	' → logprob: -15.212590217590332
    8. ' =' → logprob: -15.587590217590332
    9. '%s' → logprob: -15.587590217590332
    10. ')%' → logprob: -15.587590217590332

Token 677: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.339278580620885e-06
    2. ' MOD' → logprob: -13.000001907348633
    3. '998' → logprob: -17.250001907348633
    4. '_MOD' → logprob: -21.250001907348633
    5. '999' → logprob: -23.125001907348633
    6. '.MOD' → logprob: -23.625001907348633
    7. 'MO' → logprob: -23.750001907348633
    8. 'MODE' → logprob: -23.875001907348633
    9. ' ' → logprob: -24.250001907348633
    10. '   ' → logprob: -25.250001907348633

Token 678: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001249925117008388
    2. '
' → logprob: -9.00012493133545
    3. '```' → logprob: -14.25012493133545
    4. '#' → logprob: -15.25012493133545
    5. ' print' → logprob: -15.62512493133545
    6. '    
' → logprob: -15.87512493133545
    7. '

' → logprob: -16.000125885009766
    8. '        
' → logprob: -16.250125885009766
    9. '  
' → logprob: -16.500125885009766
    10. '#print' → logprob: -17.000125885009766

Token 679: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.5776860184123507e-06
    2. ' print' → logprob: -13.62500286102295
    3. '
' → logprob: -13.75000286102295
    4. '```' → logprob: -15.87500286102295
    5. '(print' → logprob: -16.625001907348633
    6. '#print' → logprob: -18.000001907348633
    7. '<|end|>' → logprob: -18.375001907348633
    8. ')' → logprob: -18.875001907348633
    9. '    
' → logprob: -19.250001907348633
    10. '  
' → logprob: -19.250001907348633

Token 680: ' Une' (ID: 19758)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '#' → logprob: -20.0
    3. ' print' → logprob: -20.25
    4. '#print' → logprob: -23.125
    5. '```' → logprob: -24.75
    6. 'Print' → logprob: -25.5
    7. '
' → logprob: -27.0
    8. 'printf' → logprob: -27.125
    9. '	print' → logprob: -28.25
    10. 'prints' → logprob: -28.625

Token 681: ' fois' (ID: 14697)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01637357659637928
    2. '#' → logprob: -4.516373634338379
    3. 'ns' → logprob: -5.516373634338379
    4. '
' → logprob: -7.641373634338379
    5. 'n' → logprob: -8.391373634338379
    6. ' print' → logprob: -9.266373634338379
    7. 's' → logprob: -9.266373634338379
    8. '#print' → logprob: -9.391373634338379
    9. 'rray' → logprob: -9.641373634338379
    10. '.print' → logprob: -9.891373634338379

Token 682: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016033077612519264
    2. 'la' → logprob: -4.266033172607422
    3. '(ans' → logprob: -7.641033172607422
    4. 'ans' → logprob: -8.016033172607422
    5. '(print' → logprob: -8.141033172607422
    6. 'le' → logprob: -8.141033172607422
    7. '(' → logprob: -8.516033172607422
    8. 'l' → logprob: -9.266033172607422
    9. ' la' → logprob: -9.516033172607422
    10. ' print' → logprob: -10.266033172607422

Token 683: ' boucle' (ID: 174211)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002153378736693412
    2. 'ans' → logprob: -9.250215530395508
    3. ' print' → logprob: -9.500215530395508
    4. 'result' → logprob: -10.500215530395508
    5. '#' → logprob: -12.000215530395508
    6. 'final' → logprob: -12.250215530395508
    7. 'answer' → logprob: -12.875215530395508
    8. '#print' → logprob: -13.875215530395508
    9. '(ans' → logprob: -14.875215530395508
    10. 'for' → logprob: -15.125215530395508

Token 684: ' termin' (ID: 18412)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007977922447025776
    2. 'termin' → logprob: -5.5079779624938965
    3. ' terminé' → logprob: -7.0079779624938965
    4. ' print' → logprob: -7.5079779624938965
    5. 'terminated' → logprob: -7.5079779624938965
    6. 'finished' → logprob: -7.6329779624938965
    7. ' termin' → logprob: -7.8829779624938965
    8. '#' → logprob: -8.132977485656738
    9. 'fin' → logprob: -8.507977485656738
    10. 'for' → logprob: -9.257977485656738

Token 685: 'ée' (ID: 2894)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25499942898750305
    2. '   ' → logprob: -2.0049993991851807
    3. ':' → logprob: -3.0049993991851807
    4. '#' → logprob: -4.75499963760376
    5. ':
' → logprob: -4.87999963760376
    6. 'ans' → logprob: -5.25499963760376
    7. 'e' → logprob: -5.50499963760376
    8. 'é' → logprob: -5.62999963760376
    9. 'ée' → logprob: -6.12999963760376
    10. '=' → logprob: -6.75499963760376

Token 686: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001519325451226905
    2. '
' → logprob: -9.000151634216309
    3. ' print' → logprob: -10.500151634216309
    4. ',' → logprob: -15.125151634216309
    5. '#' → logprob: -15.625151634216309
    6. '#print' → logprob: -15.875151634216309
    7. '(print' → logprob: -16.000152587890625
    8. '  
' → logprob: -16.250152587890625
    9. '    
' → logprob: -17.000152587890625
    10. '.print' → logprob: -17.125152587890625

Token 687: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.75
    3. '```' → logprob: -24.375
    4. '
' → logprob: -25.375
    5. 'pr' → logprob: -25.625
    6. '#print' → logprob: -26.375
    7. 'prin' → logprob: -26.375
    8. 'printf' → logprob: -27.75
    9. '#' → logprob: -28.125
    10. '(print' → logprob: -28.875

Token 688: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.500000953674316
    3. 'pr' → logprob: -17.25
    4. '#print' → logprob: -18.5
    5. 'prin' → logprob: -18.75
    6. '#' → logprob: -19.375
    7. 'prit' → logprob: -21.375
    8. '(print' → logprob: -21.5
    9. 'printf' → logprob: -21.75
    10. '```' → logprob: -21.75

Token 689: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.004078401252627373
    2. 'ans' → logprob: -5.504078388214111
    3. ' ans' → logprob: -19.879077911376953
    4. '	ans' → logprob: -20.129077911376953
    5. '(' → logprob: -20.504077911376953
    6. '(an' → logprob: -20.754077911376953
    7. 'ANS' → logprob: -21.254077911376953
    8. '_ans' → logprob: -22.254077911376953
    9. '(
' → logprob: -22.629077911376953
    10. '(answer' → logprob: -23.129077911376953

Token 690: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004079708829522133
    2. '(ans' → logprob: -5.504079818725586
    3. 'result' → logprob: -14.129079818725586
    4. ' ans' → logprob: -14.879079818725586
    5. 'print' → logprob: -15.754079818725586
    6. 'answer' → logprob: -17.004079818725586
    7. '(' → logprob: -17.629079818725586
    8. 'final' → logprob: -17.879079818725586
    9. '	ans' → logprob: -18.379079818725586
    10. 'ANS' → logprob: -20.129079818725586

Token 691: ' finale' (ID: 37759)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.008917913772165775
    2. 'print' → logprob: -4.758917808532715
    3. '(print' → logprob: -8.508917808532715
    4. 'ans' → logprob: -9.508917808532715
    5. '(' → logprob: -10.508917808532715
    6. '(answer' → logprob: -16.13391876220703
    7. '()' → logprob: -16.88391876220703
    8. ' print' → logprob: -17.38391876220703
    9. '```' → logprob: -17.63391876220703
    10. '(pr' → logprob: -17.63391876220703

Token 692: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7432603272027336e-06
    2. '(print' → logprob: -13.750001907348633
    3. ' print' → logprob: -14.375001907348633
    4. '```' → logprob: -18.000001907348633
    5. '(' → logprob: -18.125001907348633
    6. '
' → logprob: -20.000001907348633
    7. '.print' → logprob: -20.750001907348633
    8. ')
' → logprob: -21.000001907348633
    9. '(ans' → logprob: -21.625001907348633
    10. '#print' → logprob: -21.875001907348633

Token 693: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -19.25
    3. ' print' → logprob: -20.25
    4. '``' → logprob: -25.875
    5. '(print' → logprob: -26.875
    6. '#print' → logprob: -27.0
    7. '	print' → logprob: -27.375
    8. '
' → logprob: -27.875
    9. 'printf' → logprob: -28.5
    10. 'Print' → logprob: -28.625

Token 694: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.125001907348633
    3. 'ans' → logprob: -16.750001907348633
    4. '(
' → logprob: -17.000001907348633
    5. ' (' → logprob: -18.875001907348633
    6. '(an' → logprob: -19.125001907348633
    7. '(answer' → logprob: -19.750001907348633
    8. '((' → logprob: -21.125001907348633
    9. '(a' → logprob: -21.250001907348633
    10. '(ast' → logprob: -21.500001907348633

Token 695: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9385402993066236e-05
    2. '())' → logprob: -11.375019073486328
    3. ' )' → logprob: -12.375019073486328
    4. '()' → logprob: -12.625019073486328
    5. '(' → logprob: -16.375019073486328
    6. ')`' → logprob: -16.375019073486328
    7. '))' → logprob: -16.500019073486328
    8. ')#' → logprob: -17.625019073486328
    9. '```' → logprob: -17.875019073486328
    10. '`)' → logprob: -18.125019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 693
Tokens correctement prédits (1ère position, stricte): 156
Tokens correctement prédits (1ère position, avec adaptation): 162
Tokens correctement prédits (top 10): 372
Précision stricte (1ère position): 22.51%
Précision adaptée (1ère position): 23.38%
Précision (top 10): 53.68%
================================================================================
