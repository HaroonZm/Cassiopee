================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import count, takewhile, chain

a = int(input())

labels = ("ABC", "ARC", "AGC")
bounds = (1200, 2800, float('inf'))

def branching(x, thresholds, actions):
    idx = next(reduce(lambda acc, val: acc if acc[0] else (x < val[1], val[0]), enumerate(thresholds), (True, 0)))[1]
    return actions[idx]

print(branching(a, bounds, labels))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123510599136353
    2. 'wrap' → logprob: -0.8623510599136353
    3. 'reduce' → logprob: -3.4873509407043457
    4. 'l' → logprob: -6.112350940704346
    5. ' wraps' → logprob: -6.362350940704346
    6. 'cached' → logprob: -7.612350940704346
    7. 'cache' → logprob: -7.987350940704346
    8. 'cmp' → logprob: -9.112351417541504
    9. '```' → logprob: -9.237351417541504
    10. ' partial' → logprob: -9.487351417541504

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004464420024305582
    2. '(lambda' → logprob: -6.129464626312256
    3. '\' → logprob: -7.254464626312256
    4. '(
' → logprob: -7.629464626312256
    5. 'def' → logprob: -7.629464626312256
    6. '```' → logprob: -8.754464149475098
    7. '\(' → logprob: -9.379464149475098
    8. ' (' → logprob: -9.504464149475098
    9. 'a' → logprob: -10.004464149475098
    10. ' ' → logprob: -10.504464149475098

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9289020299911499
    2. ' operator' → logprob: -1.42890202999115
    3. ' itertools' → logprob: -1.55390202999115
    4. ' collections' → logprob: -1.92890202999115
    5. ' os' → logprob: -4.9289021492004395
    6. 'operator' → logprob: -7.4289021492004395
    7. ' sys' → logprob: -8.553901672363281
    8. ' typing' → logprob: -8.553901672363281
    9. 'collections' → logprob: -8.928901672363281
    10. 'math' → logprob: -9.053901672363281

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6086577773094177
    2. 'import' → logprob: -0.8586577773094177
    3. '.' → logprob: -3.4836578369140625
    4. '.import' → logprob: -6.7336578369140625
    5. ' .' → logprob: -9.358657836914062
    6. '	import' → logprob: -9.733657836914062
    7. '.im' → logprob: -10.108657836914062
    8. '_import' → logprob: -10.483657836914062
    9. ' ' → logprob: -10.483657836914062
    10. '<|end|>' → logprob: -11.358657836914062

Token 8: ' count' (ID: 3605)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.0864453315734863
    2. 'count' → logprob: -1.0864453315734863
    3. 'acc' → logprob: -2.3364453315734863
    4. 'cycle' → logprob: -2.7114453315734863
    5. ' group' → logprob: -2.8364453315734863
    6. 'chain' → logprob: -2.9614453315734863
    7. 'com' → logprob: -4.211445331573486
    8. ' cycle' → logprob: -4.836445331573486
    9. 'product' → logprob: -4.961445331573486
    10. ' chain' → logprob: -5.211445331573486

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016301799565553665
    2. '\n' → logprob: -5.01630163192749
    3. '\' → logprob: -5.51630163192749
    4. '(
' → logprob: -5.76630163192749
    5. ',' → logprob: -7.39130163192749
    6. 'for' → logprob: -7.89130163192749
    7. 'def' → logprob: -8.391302108764648
    8. '.' → logprob: -8.641302108764648
    9. '```' → logprob: -9.016302108764648
    10. ':' → logprob: -9.141302108764648

Token 10: ' take' (ID: 2304)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.7102140188217163
    2. ' cycle' → logprob: -1.5852140188217163
    3. 'take' → logprob: -1.8352140188217163
    4. 'acc' → logprob: -3.335214138031006
    5. 'chain' → logprob: -3.710214138031006
    6. ' take' → logprob: -3.710214138031006
    7. 'is' → logprob: -4.210214138031006
    8. ' is' → logprob: -4.335214138031006
    9. 'drop' → logprob: -5.085214138031006
    10. ' chain' → logprob: -5.085214138031006

Token 11: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0007435183506458998
    2. '_' → logprob: -7.625743389129639
    3. 'While' → logprob: -9.500743865966797
    4. 'n' → logprob: -10.000743865966797
    5. 'w' → logprob: -10.500743865966797
    6. 'wh' → logprob: -11.000743865966797
    7. 'import' → logprob: -11.000743865966797
    8. 'hile' → logprob: -11.125743865966797
    9. 'exact' → logprob: -11.250743865966797
    10. '```' → logprob: -11.500743865966797

Token 12: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004454093519598246
    2. '(
' → logprob: -5.754454135894775
    3. ',' → logprob: -7.504454135894775
    4. '\' → logprob: -8.004453659057617
    5. '.' → logprob: -9.004453659057617
    6. 'def' → logprob: -9.754453659057617
    7. '\(' → logprob: -9.879453659057617
    8. '\n' → logprob: -10.504453659057617
    9. '(lambda' → logprob: -10.629453659057617
    10. '#' → logprob: -11.004453659057617

Token 13: ' chain' (ID: 13464)
  Prédit: 'drop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'drop' → logprob: -1.135783314704895
    2. 'filter' → logprob: -1.385783314704895
    3. ' is' → logprob: -2.2607831954956055
    4. ' drop' → logprob: -2.5107831954956055
    5. 'cycle' → logprob: -2.7607831954956055
    6. 'is' → logprob: -3.1357831954956055
    7. 'acc' → logprob: -3.2607831954956055
    8. ' filter' → logprob: -3.3857831954956055
    9. 'chain' → logprob: -3.8857831954956055
    10. ' cycle' → logprob: -4.1357831954956055

Token 14: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1083323210477829
    2. '(
' → logprob: -2.483332395553589
    3. 'def' → logprob: -4.85833215713501
    4. '\' → logprob: -5.48333215713501
    5. ',' → logprob: -5.85833215713501
    6. '\n' → logprob: -7.35833215713501
    7. '#' → logprob: -7.73333215713501
    8. '(

' → logprob: -7.85833215713501
    9. '```' → logprob: -7.98333215713501
    10. 'd' → logprob: -8.108332633972168

Token 15: 'a' (ID: 64)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28781282901763916
    2. 'd' → logprob: -2.4128127098083496
    3. 'def' → logprob: -2.6628127098083496
    4. '(
' → logprob: -4.03781270980835
    5. '.' → logprob: -4.16281270980835
    6. '=' → logprob: -4.28781270980835
    7. 's' → logprob: -4.78781270980835
    8. 'f' → logprob: -4.91281270980835
    9. 'n' → logprob: -5.41281270980835
    10. '#' → logprob: -5.91281270980835

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.611627459526062
    2. ' =' → logprob: -1.111627459526062
    3. 's' → logprob: -3.1116275787353516
    4. '.' → logprob: -3.9866275787353516
    5. '_' → logprob: -4.111627578735352
    6. 'r' → logprob: -4.861627578735352
    7. ',' → logprob: -4.986627578735352
    8. 'pp' → logprob: -5.361627578735352
    9. 'p' → logprob: -5.361627578735352
    10. '(' → logprob: -5.986627578735352

Token 17: ' int' (ID: 677)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.07707668840885162
    2. 'count' → logprob: -2.8270766735076904
    3. ' chain' → logprob: -5.3270769119262695
    4. ' ' → logprob: -5.9520769119262695
    5. ' iter' → logprob: -6.3270769119262695
    6. ' range' → logprob: -6.3270769119262695
    7. 'chain' → logprob: -6.7020769119262695
    8. ' (' → logprob: -7.4520769119262695
    9. ' [' → logprob: -7.8270769119262695
    10. 'range' → logprob: -8.20207691192627

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008432185277342796
    2. '('' → logprob: -7.625843048095703
    3. '40' → logprob: -9.750843048095703
    4. '(
' → logprob: -9.875843048095703
    5. '(a' → logprob: -10.125843048095703
    6. '32' → logprob: -10.125843048095703
    7. ''' → logprob: -10.750843048095703
    8. '("("' → logprob: -10.750843048095703
    9. '```' → logprob: -11.125843048095703
    10. '("")' → logprob: -11.250843048095703

Token 19: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17155492305755615
    2. '()' → logprob: -2.5465550422668457
    3. ')' → logprob: -2.6715550422668457
    4. '())' → logprob: -4.796555042266846
    5. '('' → logprob: -7.171555042266846
    6. '(()' → logprob: -7.671555042266846
    7. '(
' → logprob: -8.796554565429688
    8. '))' → logprob: -9.421554565429688
    9. '("("' → logprob: -9.546554565429688
    10. '(

' → logprob: -9.671554565429688

Token 20: 'labels' (ID: 37054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6064912676811218
    2. 'result' → logprob: -1.2314913272857666
    3. 's' → logprob: -3.1064913272857666
    4. ')' → logprob: -3.3564913272857666
    5. 'for' → logprob: -3.4814913272857666
    6. '(
' → logprob: -3.8564913272857666
    7. 'def' → logprob: -5.3564910888671875
    8. 'n' → logprob: -5.4814910888671875
    9. '(n' → logprob: -5.7314910888671875
    10. 'x' → logprob: -6.2314910888671875

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5829377174377441
    2. '=' → logprob: -0.9579377174377441
    3. '[' → logprob: -3.457937717437744
    4. '_' → logprob: -4.457937717437744
    5. '.' → logprob: -5.207937717437744
    6. '[:]' → logprob: -5.957937717437744
    7. ')' → logprob: -6.332937717437744
    8. '(' → logprob: -6.332937717437744
    9. ',' → logprob: -6.707937717437744
    10. ':' → logprob: -7.457937717437744

Token 22: ' ("' (ID: 7109)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -1.0417497158050537
    2. 'chain' → logprob: -1.0417497158050537
    3. ' ['' → logprob: -2.7917497158050537
    4. 'list' → logprob: -2.9167497158050537
    5. ' chain' → logprob: -3.0417497158050537
    6. '[' → logprob: -3.5417497158050537
    7. ' list' → logprob: -3.5417497158050537
    8. '(chain' → logprob: -4.041749954223633
    9. '('' → logprob: -4.416749954223633
    10. 'range' → logprob: -4.541749954223633

Token 23: 'ABC' (ID: 44197)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.1182150840759277
    2. 'B' → logprob: -2.1182150840759277
    3. '0' → logprob: -2.5557150840759277
    4. '"' → logprob: -2.8057150840759277
    5. ''' → logprob: -2.9307150840759277
    6. 'Fizz' → logprob: -3.0557150840759277
    7. 'O' → logprob: -3.4307150840759277
    8. 'a' → logprob: -3.4932150840759277
    9. '1' → logprob: -3.6182150840759277
    10. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -3.9932150840759277

Token 24: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.19819201529026031
    2. 'D' → logprob: -2.5731921195983887
    3. '")' → logprob: -3.0731921195983887
    4. 'DE' → logprob: -4.198192119598389
    5. ')' → logprob: -4.698192119598389
    6. 'DEF' → logprob: -4.948192119598389
    7. 'def' → logprob: -5.323192119598389
    8. ')",' → logprob: -5.323192119598389
    9. '"' → logprob: -5.448192119598389
    10. '","' → logprob: -5.948192119598389

Token 25: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14512360095977783
    2. ' "' → logprob: -2.0201234817504883
    3. ''' → logprob: -7.020123481750488
    4. '"D' → logprob: -7.270123481750488
    5. ')' → logprob: -8.395123481750488
    6. ' ' → logprob: -9.270123481750488
    7. ' '' → logprob: -9.520123481750488
    8. ''D' → logprob: -9.895123481750488
    9. '   ' → logprob: -9.895123481750488
    10. '"B' → logprob: -10.270123481750488

Token 26: 'ARC' (ID: 64758)
  Prédit: 'DEF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEF' → logprob: -0.3711470365524292
    2. 'XYZ' → logprob: -2.1211471557617188
    3. 'ABD' → logprob: -3.1211471557617188
    4. 'BCD' → logprob: -3.3711471557617188
    5. 'AB' → logprob: -3.4961471557617188
    6. 'D' → logprob: -3.8711471557617188
    7. 'AC' → logprob: -4.371147155761719
    8. 'B' → logprob: -4.996147155761719
    9. 'DE' → logprob: -4.996147155761719
    10. 'ABC' → logprob: -5.371147155761719

Token 27: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.038644254207611084
    2. '")' → logprob: -3.413644313812256
    3. '"))' → logprob: -6.413644313812256
    4. '","' → logprob: -6.788644313812256
    5. ')",' → logprob: -7.538644313812256
    6. ')' → logprob: -7.663644313812256
    7. 'ABC' → logprob: -8.413643836975098
    8. 'D' → logprob: -8.788643836975098
    9. '"),' → logprob: -9.038643836975098
    10. ',"' → logprob: -9.163643836975098

Token 28: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2820947468280792
    2. ' "' → logprob: -1.4070947170257568
    3. '"D' → logprob: -8.032094955444336
    4. '"AT' → logprob: -8.657094955444336
    5. '"A' → logprob: -9.157094955444336
    6. ',' → logprob: -9.657094955444336
    7. ',"' → logprob: -9.657094955444336
    8. '"B' → logprob: -9.907094955444336
    9. '"S' → logprob: -10.657094955444336
    10. ' ' → logprob: -11.157094955444336

Token 29: 'AG' (ID: 2971)
  Prédit: 'AG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AG' → logprob: -0.006116136442869902
    2. 'AH' → logprob: -5.256115913391113
    3. 'ABC' → logprob: -8.631115913391113
    4. ' AG' → logprob: -8.756115913391113
    5. 'A' → logprob: -9.006115913391113
    6. '"' → logprob: -9.506115913391113
    7. 'AGN' → logprob: -9.631115913391113
    8. 'ag' → logprob: -9.881115913391113
    9. 'ARC' → logprob: -10.631115913391113
    10. '"A' → logprob: -11.006115913391113

Token 30: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -4.274932143744081e-05
    2. ' C' → logprob: -12.125042915344238
    3. '")' → logprob: -12.625042915344238
    4. 'Ｃ' → logprob: -12.750042915344238
    5. '"C' → logprob: -12.812542915344238
    6. 'CODE' → logprob: -12.875042915344238
    7. 'CO' → logprob: -13.062542915344238
    8. 'CT' → logprob: -13.125042915344238
    9. 'I' → logprob: -13.375042915344238
    10. '"' → logprob: -13.750042915344238

Token 31: '")
' (ID: 1896)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '",' → logprob: -0.00449325842782855
    2. '")' → logprob: -5.629493236541748
    3. '"' → logprob: -7.629493236541748
    4. 'I' → logprob: -9.129493713378906
    5. ',' → logprob: -9.629493713378906
    6. 'C' → logprob: -10.004493713378906
    7. 'K' → logprob: -10.754493713378906
    8. ')' → logprob: -10.879493713378906
    9. 'D' → logprob: -11.004493713378906
    10. 'F' → logprob: -11.004493713378906

Token 32: 'bounds' (ID: 77625)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7558310031890869
    2. 'for' → logprob: -1.005831003189087
    3. ',' → logprob: -2.505831003189087
    4. 'if' → logprob: -4.005830764770508
    5. 'labels' → logprob: -4.130830764770508
    6. 's' → logprob: -4.755830764770508
    7. '[' → logprob: -4.880830764770508
    8. '.' → logprob: -5.005830764770508
    9. ' for' → logprob: -5.130830764770508
    10. '_labels' → logprob: -5.505830764770508

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0705535039305687
    2. '=' → logprob: -2.6955535411834717
    3. ',' → logprob: -8.57055377960205
    4. '_' → logprob: -8.69555377960205
    5. ')' → logprob: -9.07055377960205
    6. '[' → logprob: -9.94555377960205
    7. 's' → logprob: -10.32055377960205
    8. ':' → logprob: -11.94555377960205
    9. ' ' → logprob: -11.94555377960205
    10. ' =)' → logprob: -12.38305377960205

Token 34: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6816979646682739
    2. '(' → logprob: -1.931697964668274
    3. ' [' → logprob: -1.931697964668274
    4. '(chain' → logprob: -2.9316978454589844
    5. '(range' → logprob: -3.4316978454589844
    6. ' range' → logprob: -3.4316978454589844
    7. '[' → logprob: -3.5566978454589844
    8. 'range' → logprob: -3.9316978454589844
    9. ' chain' → logprob: -4.556697845458984
    10. ' [(' → logprob: -4.806697845458984

Token 35: '120' (ID: 6106)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0314610004425049
    2. '100' → logprob: -1.2814610004425049
    3. '1' → logprob: -1.7814610004425049
    4. 'a' → logprob: -2.531461000442505
    5. '10' → logprob: -3.531461000442505
    6. ' ' → logprob: -3.656461000442505
    7. '(' → logprob: -4.531460762023926
    8. ')' → logprob: -4.906460762023926
    9. '(a' → logprob: -5.406460762023926
    10. '999' → logprob: -5.531460762023926

Token 36: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06526759266853333
    2. '0' → logprob: -3.315267562866211
    3. ' ,' → logprob: -4.315267562866211
    4. ',)' → logprob: -5.690267562866211
    5. '000' → logprob: -6.190267562866211
    6. '00' → logprob: -6.315267562866211
    7. ' +' → logprob: -6.690267562866211
    8. '+' → logprob: -6.940267562866211
    9. '1' → logprob: -7.940267562866211
    10. ' -' → logprob: -8.065267562866211

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001322742085903883
    2. ' ,' → logprob: -6.7513227462768555
    3. '+' → logprob: -10.501322746276855
    4. ')' → logprob: -10.626322746276855
    5. '0' → logprob: -10.751322746276855
    6. ',)' → logprob: -10.751322746276855
    7. ' ' → logprob: -11.001322746276855
    8. ' +' → logprob: -11.876322746276855
    9. '...' → logprob: -12.251322746276855
    10. ',
' → logprob: -12.501322746276855

Token 38: ' ' (ID: 220)
  Prédit: '160'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '160' → logprob: -1.1983486413955688
    2. '180' → logprob: -1.4483486413955688
    3. ' ' → logprob: -1.6983486413955688
    4. '140' → logprob: -1.9483486413955688
    5. '200' → logprob: -2.8233485221862793
    6. '280' → logprob: -3.3233485221862793
    7. '240' → logprob: -4.323348522186279
    8. '170' → logprob: -4.823348522186279
    9. '190' → logprob: -5.073348522186279
    10. '150' → logprob: -5.198348522186279

Token 39: '280' (ID: 17713)
  Prédit: '280'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '280' → logprob: -0.045047126710414886
    2. '140' → logprob: -4.045047283172607
    3. '279' → logprob: -4.420047283172607
    4. '160' → logprob: -4.920047283172607
    5. '200' → logprob: -5.920047283172607
    6. '180' → logprob: -6.670047283172607
    7. '139' → logprob: -7.295047283172607
    8. ' ' → logprob: -7.420047283172607
    9. '190' → logprob: -7.920047283172607
    10. '170' → logprob: -8.42004680633545

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014716332778334618
    2. ')' → logprob: -4.514716148376465
    3. ',' → logprob: -5.639716148376465
    4. '),' → logprob: -9.889716148376465
    5. ',)' → logprob: -10.264716148376465
    6. '1' → logprob: -12.264716148376465
    7. ' ' → logprob: -12.764716148376465
    8. ' )' → logprob: -12.889716148376465
    9. '+' → logprob: -13.014716148376465
    10. '-' → logprob: -13.639716148376465

Token 41: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014300551265478134
    2. ',' → logprob: -4.264300346374512
    3. ',)' → logprob: -9.139300346374512
    4. '),' → logprob: -11.514300346374512
    5. ' )' → logprob: -11.764300346374512
    6. ')
' → logprob: -13.014300346374512
    7. '))' → logprob: -13.014300346374512
    8. '```' → logprob: -13.389300346374512
    9. ',
' → logprob: -13.764300346374512
    10. '...' → logprob: -13.889300346374512

Token 42: ' float' (ID: 4428)
  Prédit: '400'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '400' → logprob: -1.2455921173095703
    2. '360' → logprob: -1.9955921173095703
    3. '420' → logprob: -2.6205921173095703
    4. ')' → logprob: -2.8705921173095703
    5. '340' → logprob: -2.8705921173095703
    6. '320' → logprob: -2.9955921173095703
    7. 'float' → logprob: -3.1205921173095703
    8. '410' → logprob: -3.1205921173095703
    9. '350' → logprob: -3.3705921173095703
    10. ' ' → logprob: -3.3705921173095703

Token 43: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.002752926666289568
    2. '("' → logprob: -6.502752780914307
    3. ''' → logprob: -7.502752780914307
    4. ''in' → logprob: -7.752752780914307
    5. '(' → logprob: -9.127753257751465
    6. ')' → logprob: -9.752753257751465
    7. '('+' → logprob: -10.002753257751465
    8. '('-' → logprob: -10.627753257751465
    9. '"' → logprob: -11.752753257751465
    10. '')' → logprob: -12.377753257751465

Token 44: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.3841952979564667
    2. ''in' → logprob: -1.384195327758789
    3. ''' → logprob: -2.759195327758789
    4. '"' → logprob: -6.009195327758789
    5. '('' → logprob: -7.134195327758789
    6. '-inf' → logprob: -8.134195327758789
    7. 'in' → logprob: -8.759195327758789
    8. ''ins' → logprob: -8.884195327758789
    9. ''i' → logprob: -9.384195327758789
    10. '')' → logprob: -9.384195327758789

Token 45: ''))

' (ID: 58153)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25311315059661865
    2. '))' → logprob: -1.5031131505966187
    3. ''))' → logprob: -6.878113269805908
    4. '')' → logprob: -9.25311279296875
    5. '),' → logprob: -10.50311279296875
    6. ')))' → logprob: -10.87811279296875
    7. ' ))' → logprob: -13.12811279296875
    8. ' )' → logprob: -13.25311279296875
    9. ')
' → logprob: -13.25311279296875
    10. '`)' → logprob: -14.12811279296875

Token 46: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4346058666706085
    2. ')' → logprob: -2.184605836868286
    3. 'result' → logprob: -2.184605836868286
    4. 'res' → logprob: -3.684605836868286
    5. ' for' → logprob: -4.059606075286865
    6. 's' → logprob: -4.309606075286865
    7. 'labels' → logprob: -4.434606075286865
    8. 'n' → logprob: -4.809606075286865
    9. 'def' → logprob: -5.059606075286865
    10. 'print' → logprob: -5.809606075286865

Token 47: ' branching' (ID: 173776)
  Prédit: ' classify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' classify' → logprob: -0.7765762805938721
    2. ' get' → logprob: -1.526576280593872
    3. ' is' → logprob: -2.401576280593872
    4. ' rating' → logprob: -3.401576280593872
    5. ' judge' → logprob: -3.401576280593872
    6. ' find' → logprob: -3.651576280593872
    7. ' solve' → logprob: -3.776576280593872
    8. ' categorize' → logprob: -3.901576280593872
    9. ' score' → logprob: -4.151576042175293
    10. ' calculate' → logprob: -4.401576042175293

Token 48: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28739961981773376
    2. '(a' → logprob: -2.0373995304107666
    3. '(branch' → logprob: -4.287399768829346
    4. '(n' → logprob: -4.537399768829346
    5. '(x' → logprob: -4.537399768829346
    6. '():' → logprob: -4.662399768829346
    7. '(s' → logprob: -5.037399768829346
    8. '_' → logprob: -5.162399768829346
    9. ' (' → logprob: -5.412399768829346
    10. '(l' → logprob: -5.787399768829346

Token 49: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028666856233030558
    2. ',' → logprob: -6.502866744995117
    3. ':' → logprob: -7.002866744995117
    4. '):
' → logprob: -8.252866744995117
    5. ')' → logprob: -9.002866744995117
    6. ' ):' → logprob: -10.127866744995117
    7. '=' → logprob: -11.877866744995117
    8. '   ' → logprob: -12.502866744995117
    9. '):
' → logprob: -12.502866744995117
    10. 's' → logprob: -13.002866744995117

Token 50: ' thresholds' (ID: 118773)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.9670512676239014
    2. 'labels' → logprob: -2.2170512676239014
    3. 'i' → logprob: -2.4670512676239014
    4. ')' → logprob: -2.9670512676239014
    5. '):' → logprob: -3.0920512676239014
    6. 'n' → logprob: -3.0920512676239014
    7. 'label' → logprob: -3.3420512676239014
    8. 'l' → logprob: -3.4670512676239014
    9. 'a' → logprob: -3.7170512676239014
    10. 'x' → logprob: -3.8420512676239014

Token 51: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008076059748418629
    2. '=' → logprob: -8.125807762145996
    3. '):
' → logprob: -8.875807762145996
    4. ')' → logprob: -9.125807762145996
    5. ' ):' → logprob: -9.250807762145996
    6. ':' → logprob: -9.375807762145996
    7. ',' → logprob: -9.625807762145996
    8. '):
' → logprob: -12.375807762145996
    9. '=[]' → logprob: -12.875807762145996
    10. '[]):' → logprob: -13.500807762145996

Token 52: ' actions' (ID: 10370)
  Prédit: ' labels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' labels' → logprob: -0.37239691615104675
    2. 'labels' → logprob: -1.3723969459533691
    3. ' idx' → logprob: -4.247396945953369
    4. ' func' → logprob: -5.247396945953369
    5. ' funcs' → logprob: -5.622396945953369
    6. 'idx' → logprob: -5.997396945953369
    7. 'func' → logprob: -5.997396945953369
    8. ' index' → logprob: -6.309896945953369
    9. ' ' → logprob: -6.434896945953369
    10. ' label' → logprob: -6.559896945953369

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.421908958349377e-05
    2. ')' → logprob: -9.87507438659668
    3. '):
' → logprob: -11.50007438659668
    4. ':' → logprob: -11.75007438659668
    5. '=' → logprob: -13.37507438659668
    6. ' ):' → logprob: -13.37507438659668
    7. ',' → logprob: -14.00007438659668
    8. '):
' → logprob: -15.75007438659668
    9. '():' → logprob: -16.37507438659668
    10. ''):' → logprob: -16.62507438659668

Token 54: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.047760117799043655
    2. '   ' → logprob: -3.172760009765625
    3. '):' → logprob: -5.797760009765625
    4. ':
' → logprob: -7.172760009765625
    5. ' :' → logprob: -7.547760009765625
    6. ',' → logprob: -9.547760009765625
    7. ':return' → logprob: -9.547760009765625
    8. '  ' → logprob: -9.797760009765625
    9. '):
' → logprob: -9.922760009765625
    10. ' ' → logprob: -10.672760009765625

Token 55: ' idx' (ID: 14016)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18627943098545074
    2. '   ' → logprob: -2.186279535293579
    3. ' for' → logprob: -3.561279535293579
    4. ':
' → logprob: -5.061279296875
    5. 'for' → logprob: -5.311279296875
    6. ' ' → logprob: -5.436279296875
    7. ':return' → logprob: -5.686279296875
    8. ' :' → logprob: -5.811279296875
    9. ' return' → logprob: -6.061279296875
    10. '  ' → logprob: -7.186279296875

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03367900848388672
    2. '=' → logprob: -3.4086790084838867
    3. ' ' → logprob: -11.033679008483887
    4. ',' → logprob: -11.783679008483887
    5. ')' → logprob: -12.908679008483887
    6. ' =
' → logprob: -13.033679008483887
    7. '  ' → logprob: -13.533679008483887
    8. '   ' → logprob: -13.658679008483887
    9. ':' → logprob: -15.283679008483887
    10. 's' → logprob: -15.283679008483887

Token 57: ' next' (ID: 2613)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2683762311935425
    2. ' next' → logprob: -2.143376350402832
    3. ' ' → logprob: -2.518376350402832
    4. 'next' → logprob: -3.518376350402832
    5. ' bis' → logprob: -5.768376350402832
    6. ' len' → logprob: -7.018376350402832
    7. 'bis' → logprob: -7.018376350402832
    8. 'len' → logprob: -7.393376350402832
    9. 'reduce' → logprob: -7.393376350402832
    10. 'sum' → logprob: -7.518376350402832

Token 58: '(re' (ID: 8178)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07395905256271362
    2. '((' → logprob: -2.9489591121673584
    3. '(t' → logprob: -4.698958873748779
    4. '(x' → logprob: -5.198958873748779
    5. '(' → logprob: -5.823958873748779
    6. '(idx' → logprob: -7.573958873748779
    7. '(filter' → logprob: -7.948958873748779
    8. '(token' → logprob: -9.323959350585938
    9. '(count' → logprob: -9.448959350585938
    10. '(lambda' → logprob: -9.573959350585938

Token 59: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.33939486742019653
    2. 'g' → logprob: -2.5893948078155518
    3. '(i' → logprob: -3.3393948078155518
    4. '(filter' → logprob: -3.8393948078155518
    5. '(x' → logprob: -3.9643948078155518
    6. 'quire' → logprob: -3.9643948078155518
    7. 'duced' → logprob: -4.214395046234131
    8. 'place' → logprob: -4.589395046234131
    9. 'peat' → logprob: -4.839395046234131
    10. '((' → logprob: -4.839395046234131

Token 60: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.018949296325445175
    2. '(' → logprob: -4.018949508666992
    3. '(
' → logprob: -7.268949508666992
    4. ')' → logprob: -10.393949508666992
    5. 'lambda' → logprob: -10.643949508666992
    6. '((' → logprob: -11.643949508666992
    7. '(operator' → logprob: -11.893949508666992
    8. ' (' → logprob: -12.018949508666992
    9. '(filter' → logprob: -12.143949508666992
    10. '   ' → logprob: -12.518949508666992

Token 61: ' acc' (ID: 1259)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.2122701108455658
    2. '(' → logprob: -2.4622700214385986
    3. 'lambda' → logprob: -2.5872700214385986
    4. '(
' → logprob: -4.462270259857178
    5. ' (' → logprob: -5.337270259857178
    6. ',' → logprob: -5.337270259857178
    7. '   ' → logprob: -5.462270259857178
    8. ' lambda' → logprob: -6.337270259857178
    9. 'filter' → logprob: -7.087270259857178
    10. ' ' → logprob: -7.462270259857178

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20265161991119385
    2. '(lambda' → logprob: -2.0776515007019043
    3. 'lambda' → logprob: -3.0776515007019043
    4. '=lambda' → logprob: -4.827651500701904
    5. ':' → logprob: -7.202651500701904
    6. ',x' → logprob: -7.952651500701904
    7. '(' → logprob: -7.952651500701904
    8. ' lambda' → logprob: -7.952651500701904
    9. 'x' → logprob: -8.202651977539062
    10. '0' → logprob: -8.202651977539062

Token 63: ' val' (ID: 1459)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.017488956451416
    2. ' lambda' → logprob: -1.267488956451416
    3. '(lambda' → logprob: -1.267488956451416
    4. ' (' → logprob: -2.767488956451416
    5. '(' → logprob: -5.392488956451416
    6. ' ' → logprob: -6.767488956451416
    7. 'x' → logprob: -6.892488956451416
    8. '<|end|>' → logprob: -7.142488956451416
    9. '   ' → logprob: -7.267488956451416
    10. ' x' → logprob: -7.517488956451416

Token 64: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33868175745010376
    2. ',' → logprob: -2.338681697845459
    3. '(lambda' → logprob: -2.838681697845459
    4. '=lambda' → logprob: -2.838681697845459
    5. 'ambda' → logprob: -3.088681697845459
    6. 'lambda' → logprob: -3.713681697845459
    7. ' lambda' → logprob: -6.213681697845459
    8. ' :' → logprob: -6.838681697845459
    9. '_lambda' → logprob: -8.963682174682617
    10. 's' → logprob: -9.338682174682617

Token 65: ' acc' (ID: 1259)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8060929775238037
    2. '(lambda' → logprob: -1.9310929775238037
    3. '(acc' → logprob: -2.0560929775238037
    4. '(' → logprob: -2.3060929775238037
    5. ' acc' → logprob: -2.4310929775238037
    6. 'lambda' → logprob: -3.5560929775238037
    7. 'acc' → logprob: -3.6810929775238037
    8. ' lambda' → logprob: -4.181093215942383
    9. '0' → logprob: -5.556093215942383
    10. '(None' → logprob: -5.681093215942383

Token 66: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2241896688938141
    2. ' +' → logprob: -2.0991897583007812
    3. '+' → logprob: -3.2241897583007812
    4. 'if' → logprob: -3.9741897583007812
    5. ',' → logprob: -4.849189758300781
    6. '[' → logprob: -5.599189758300781
    7. ' (' → logprob: -5.849189758300781
    8. ' ' → logprob: -6.349189758300781
    9. '(' → logprob: -7.724189758300781
    10. '(lambda' → logprob: -7.724189758300781

Token 67: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.5947922468185425
    2. ' acc' → logprob: -0.9697922468185425
    3. 'val' → logprob: -3.094792366027832
    4. ' val' → logprob: -4.469792366027832
    5. 'x' → logprob: -5.469792366027832
    6. '(acc' → logprob: -5.469792366027832
    7. ' (' → logprob: -6.719792366027832
    8. ' x' → logprob: -6.969792366027832
    9. '0' → logprob: -8.094792366027832
    10. 'idx' → logprob: -8.344792366027832

Token 68: '[' (ID: 58)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.154202938079834
    2. ' if' → logprob: -1.404202938079834
    3. 'if' → logprob: -2.029202938079834
    4. 'else' → logprob: -2.654202938079834
    5. ' else' → logprob: -2.654202938079834
    6. '!=' → logprob: -3.529202938079834
    7. '0' → logprob: -3.654202938079834
    8. ' !=' → logprob: -3.779202938079834
    9. 'is' → logprob: -3.904202938079834
    10. ' ' → logprob: -4.154202938079834

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012688816525042057
    2. '1' → logprob: -4.387688636779785
    3. ' ' → logprob: -9.387688636779785
    4. 'val' → logprob: -9.887688636779785
    5. '

' → logprob: -12.262688636779785
    6. 'x' → logprob: -12.512688636779785
    7. '
' → logprob: -12.700188636779785
    8. '   ' → logprob: -12.762688636779785
    9. '-' → logprob: -13.012688636779785
    10. 'idx' → logprob: -13.325188636779785

Token 70: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6634799242019653
    2. '][' → logprob: -1.2884799242019653
    3. '>' → logprob: -3.163479804992676
    4. '0' → logprob: -3.163479804992676
    5. ']' → logprob: -3.288479804992676
    6. '>=' → logprob: -4.038479804992676
    7. ']>=' → logprob: -4.163479804992676
    8. '<' → logprob: -4.663479804992676
    9. ' >=' → logprob: -4.913479804992676
    10. ' <' → logprob: -4.913479804992676

Token 71: ' else' (ID: 1203)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15618060529232025
    2. '0' → logprob: -2.9061806201934814
    3. '1' → logprob: -3.7811806201934814
    4. '>' → logprob: -3.9061806201934814
    5. ' <' → logprob: -4.781180381774902
    6. ' >' → logprob: -4.906180381774902
    7. '>=' → logprob: -4.906180381774902
    8. ' ' → logprob: -5.031180381774902
    9. '<=' → logprob: -5.531180381774902
    10. ' >=' → logprob: -5.781180381774902

Token 72: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9023571014404297
    2. '(val' → logprob: -1.0273571014404297
    3. ' (' → logprob: -2.7773571014404297
    4. '(acc' → logprob: -2.7773571014404297
    5. '(lambda' → logprob: -3.7773571014404297
    6. '(x' → logprob: -3.7773571014404297
    7. '(True' → logprob: -3.9023571014404297
    8. 'val' → logprob: -4.65235710144043
    9. '(False' → logprob: -4.90235710144043
    10. '(not' → logprob: -5.15235710144043

Token 73: 'x' (ID: 87)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.25992119312286377
    2. '(' → logprob: -2.384921073913574
    3. '0' → logprob: -3.509921073913574
    4. '(val' → logprob: -3.509921073913574
    5. 'acc' → logprob: -4.259921073913574
    6. '(True' → logprob: -4.634921073913574
    7. '(acc' → logprob: -4.884921073913574
    8. '1' → logprob: -5.009921073913574
    9. '(x' → logprob: -5.134921073913574
    10. 'x' → logprob: -5.259921073913574

Token 74: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5794619917869568
    2. '<' → logprob: -1.0794620513916016
    3. ' >=' → logprob: -2.8294620513916016
    4. '>=' → logprob: -4.079462051391602
    5. ' <=' → logprob: -5.079462051391602
    6. '[' → logprob: -5.704462051391602
    7. '<=' → logprob: -5.954462051391602
    8. '<|end|>' → logprob: -5.954462051391602
    9. ',' → logprob: -6.329462051391602
    10. ' >' → logprob: -6.454462051391602

Token 75: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.31335461139678955
    2. 'val' → logprob: -1.3133546113967896
    3. '	val' → logprob: -10.3133544921875
    4. '=' → logprob: -11.8133544921875
    5. '[val' → logprob: -11.8133544921875
    6. '<|end|>' → logprob: -11.8133544921875
    7. ' ' → logprob: -12.0633544921875
    8. ' thresholds' → logprob: -12.1883544921875
    9. ' ' → logprob: -12.5633544921875
    10. ',val' → logprob: -12.6883544921875

Token 76: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06250378489494324
    2. '),' → logprob: -3.5625038146972656
    3. ' and' → logprob: -4.062503814697266
    4. '[' → logprob: -5.437503814697266
    5. ' ,' → logprob: -5.562503814697266
    6. 'and' → logprob: -5.812503814697266
    7. ',),' → logprob: -6.937503814697266
    8. ')' → logprob: -7.062503814697266
    9. ' ),' → logprob: -7.187503814697266
    10. ' ' → logprob: -8.687503814697266

Token 77: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8123085498809814
    2. '),' → logprob: -1.1873085498809814
    3. ',' → logprob: -1.6873085498809814
    4. '1' → logprob: -3.6873085498809814
    5. '[' → logprob: -4.187308311462402
    6. ' ,' → logprob: -5.062308311462402
    7. ' ' → logprob: -5.187308311462402
    8. ')' → logprob: -5.187308311462402
    9. '   ' → logprob: -6.062308311462402
    10. '],' → logprob: -6.187308311462402

Token 78: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06294502317905426
    2. '),' → logprob: -3.6879451274871826
    3. ' ,' → logprob: -3.8129451274871826
    4. '[' → logprob: -5.4379448890686035
    5. ' and' → logprob: -5.4379448890686035
    6. ' ),' → logprob: -6.3129448890686035
    7. ',),' → logprob: -6.6879448890686035
    8. '   ' → logprob: -7.4379448890686035
    9. 'and' → logprob: -8.187945365905762
    10. ')' → logprob: -8.312945365905762

Token 79: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.7485764026641846
    2. 'val' → logprob: -1.1235764026641846
    3. ' (' → logprob: -2.2485764026641846
    4. '(' → logprob: -3.2485764026641846
    5. 'acc' → logprob: -4.3735761642456055
    6. '(val' → logprob: -4.7485761642456055
    7. '0' → logprob: -4.9985761642456055
    8. ' acc' → logprob: -5.3735761642456055
    9. '(acc' → logprob: -5.6235761642456055
    10. ' idx' → logprob: -5.6235761642456055

Token 80: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6497931480407715
    2. '),' → logprob: -0.8997931480407715
    3. ')),' → logprob: -3.8997931480407715
    4. ')' → logprob: -4.1497931480407715
    5. ')))' → logprob: -4.3997931480407715
    6. '))' → logprob: -4.7747931480407715
    7. ' ),' → logprob: -5.0247931480407715
    8. ')[' → logprob: -6.2747931480407715
    9. ',' → logprob: -6.3997931480407715
    10. ' ' → logprob: -7.0247931480407715

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013701734133064747
    2. '1' → logprob: -4.513701915740967
    3. '2' → logprob: -6.013701915740967
    4. ' ' → logprob: -8.888701438903809
    5. '[' → logprob: -11.201201438903809
    6. '-' → logprob: -11.826201438903809
    7. ']' → logprob: -11.951201438903809
    8. '])' → logprob: -12.138701438903809
    9. '   ' → logprob: -12.451201438903809
    10. '][' → logprob: -12.763701438903809

Token 82: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3083668351173401
    2. ')' → logprob: -1.8083667755126953
    3. ']),' → logprob: -3.0583667755126953
    4. ')),' → logprob: -3.9333667755126953
    5. ' ),' → logprob: -4.433366775512695
    6. ' ' → logprob: -5.808366775512695
    7. ',' → logprob: -5.808366775512695
    8. '))' → logprob: -6.058366775512695
    9. ' )' → logprob: -6.058366775512695
    10. '])' → logprob: -6.183366775512695

Token 83: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.12840045988559723
    2. ' enumerate' → logprob: -2.1284005641937256
    3. '(en' → logprob: -7.6284003257751465
    4. 'list' → logprob: -8.128400802612305
    5. 'zip' → logprob: -8.878400802612305
    6. ')' → logprob: -8.878400802612305
    7. ' list' → logprob: -9.378400802612305
    8. ' (' → logprob: -10.003400802612305
    9. '(' → logprob: -10.253400802612305
    10. '[(' → logprob: -10.253400802612305

Token 84: '(th' (ID: 53988)
  Prédit: '(th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(th' → logprob: -0.21945753693580627
    2. '(actions' → logprob: -1.8444575071334839
    3. '(bounds' → logprob: -3.8444576263427734
    4. '(' → logprob: -5.344457626342773
    5. '(labels' → logprob: -5.344457626342773
    6. 'threshold' → logprob: -5.344457626342773
    7. '(action' → logprob: -6.844457626342773
    8. '(bound' → logprob: -7.594457626342773
    9. ')' → logprob: -7.719457626342773
    10. 'actions' → logprob: -8.719457626342773

Token 85: 'reshold' (ID: 12341)
  Prédit: 'reshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reshold' → logprob: -0.08648430556058884
    2. 'olds' → logprob: -2.58648419380188
    3. 'resh' → logprob: -5.461484432220459
    4. 'holds' → logprob: -6.961484432220459
    5. 'sh' → logprob: -7.586484432220459
    6. 'res' → logprob: -7.836484432220459
    7. 's' → logprob: -7.961484432220459
    8. 'r' → logprob: -7.961484432220459
    9. 'es' → logprob: -8.7114839553833
    10. 'labels' → logprob: -8.9614839553833

Token 86: 's' (ID: 82)
  Prédit: 'olds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olds' → logprob: -0.18241004645824432
    2. 's' → logprob: -1.8074100017547607
    3. 'old' → logprob: -6.43241024017334
    4. 'ds' → logprob: -7.43241024017334
    5. 'ods' → logprob: -8.80741024017334
    6. 'holds' → logprob: -9.55741024017334
    7. 'ols' → logprob: -10.18241024017334
    8. 'sh' → logprob: -10.43241024017334
    9. ')' → logprob: -10.93241024017334
    10. 'eds' → logprob: -11.30741024017334

Token 87: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03314532712101936
    2. ',' → logprob: -3.6581454277038574
    3. ')' → logprob: -5.783145427703857
    4. ')),' → logprob: -6.158145427703857
    5. ' ),' → logprob: -7.783145427703857
    6. ')))' → logprob: -8.0331449508667
    7. ')[' → logprob: -8.9081449508667
    8. '[' → logprob: -9.0331449508667
    9. ' ,' → logprob: -9.1581449508667
    10. '))' → logprob: -9.4081449508667

Token 88: ' (' (ID: 350)
  Prédit: '(False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(False' → logprob: -0.8408312797546387
    2. '(' → logprob: -0.9658312797546387
    3. '(True' → logprob: -2.8408312797546387
    4. ' (' → logprob: -2.9658312797546387
    5. '(None' → logprob: -3.2158312797546387
    6. '(-' → logprob: -3.8408312797546387
    7. '(lambda' → logprob: -4.465831279754639
    8. '(len' → logprob: -5.715831279754639
    9. '(not' → logprob: -8.090831756591797
    10. '[' → logprob: -8.340831756591797

Token 89: 'True' (ID: 4710)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.14392396807670593
    2. '0' → logprob: -2.8939239978790283
    3. 'True' → logprob: -3.3939239978790283
    4. '(False' → logprob: -3.5189239978790283
    5. '(' → logprob: -5.268923759460449
    6. ' False' → logprob: -5.643923759460449
    7. '(True' → logprob: -5.643923759460449
    8. 'None' → logprob: -6.643923759460449
    9. '[' → logprob: -7.268923759460449
    10. ' True' → logprob: -8.14392375946045

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001850581611506641
    2. ',None' → logprob: -6.751850605010986
    3. ' ,' → logprob: -8.751850128173828
    4. '[' → logprob: -9.126850128173828
    5. '0' → logprob: -9.501850128173828
    6. ')' → logprob: -9.626850128173828
    7. 'None' → logprob: -9.876850128173828
    8. '-' → logprob: -10.001850128173828
    9. ' ' → logprob: -10.751850128173828
    10. ',(' → logprob: -10.876850128173828

Token 91: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4702012836933136
    2. 'None' → logprob: -2.095201253890991
    3. '-' → logprob: -2.345201253890991
    4. ' None' → logprob: -2.845201253890991
    5. ' ' → logprob: -3.220201253890991
    6. ' -' → logprob: -4.22020149230957
    7. '(' → logprob: -4.47020149230957
    8. '(-' → logprob: -4.72020149230957
    9. ' (' → logprob: -4.72020149230957
    10. '(None' → logprob: -4.84520149230957

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2860008180141449
    2. 'None' → logprob: -2.1610007286071777
    3. '-' → logprob: -2.2860007286071777
    4. '(' → logprob: -4.661000728607178
    5. '(-' → logprob: -5.161000728607178
    6. '(None' → logprob: -5.286000728607178
    7. 'len' → logprob: -5.661000728607178
    8. ' ' → logprob: -6.411000728607178
    9. ' None' → logprob: -6.786000728607178
    10. ')' → logprob: -7.536000728607178

Token 93: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.0504108667373657
    2. ')[' → logprob: -1.3004108667373657
    3. '))[' → logprob: -1.3004108667373657
    4. ')))' → logprob: -2.675410747528076
    5. ')' → logprob: -3.425410747528076
    6. '[' → logprob: -6.550410747528076
    7. '),' → logprob: -7.675410747528076
    8. ' ))' → logprob: -7.800410747528076
    9. '0' → logprob: -8.175411224365234
    10. ' ' → logprob: -8.300411224365234

Token 94: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.4312179386615753
    2. '[' → logprob: -1.431217908859253
    3. ')' → logprob: -2.306217908859253
    4. ',' → logprob: -4.556218147277832
    5. ' )[' → logprob: -7.931218147277832
    6. ',[' → logprob: -9.056218147277832
    7. '),' → logprob: -9.056218147277832
    8. ')
' → logprob: -9.681218147277832
    9. '```' → logprob: -9.681218147277832
    10. '
' → logprob: -10.056218147277832

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.031086580827832222
    2. '0' → logprob: -3.5310866832733154
    3. ' ' → logprob: -6.656086444854736
    4. '-' → logprob: -10.843586921691895
    5. ']' → logprob: -12.156086921691895
    6. '   ' → logprob: -12.218586921691895
    7. '  ' → logprob: -12.968586921691895
    8. '```' → logprob: -13.093586921691895
    9. ':' → logprob: -13.468586921691895
    10. '
' → logprob: -13.531086921691895

Token 96: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003996477462351322
    2. ' )' → logprob: -5.7539963722229
    3. ',' → logprob: -8.503996849060059
    4. ')
' → logprob: -8.628996849060059
    5. '+' → logprob: -9.003996849060059
    6. '),' → logprob: -10.003996849060059
    7. ':' → logprob: -10.003996849060059
    8. ')+' → logprob: -10.628996849060059
    9. '))' → logprob: -10.753996849060059
    10. ',)' → logprob: -10.878996849060059

Token 97: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17238834500312805
    2. ':' → logprob: -2.9223883152008057
    3. ' ' → logprob: -2.9223883152008057
    4. '<|end|>' → logprob: -3.4223883152008057
    5. ' )' → logprob: -5.422388553619385
    6. '[' → logprob: -5.797388553619385
    7. ' :' → logprob: -5.922388553619385
    8. '):' → logprob: -6.422388553619385
    9. ',' → logprob: -6.547388553619385
    10. '(' → logprob: -7.547388553619385

Token 98: ' return' (ID: 622)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3172172009944916
    2. ':' → logprob: -2.0672171115875244
    3. ' ' → logprob: -2.1922171115875244
    4. '<|end|>' → logprob: -4.3172173500061035
    5. '[' → logprob: -4.9422173500061035
    6. '(' → logprob: -6.0672173500061035
    7. ' :' → logprob: -6.3172173500061035
    8. '):' → logprob: -6.5672173500061035
    9. '   ' → logprob: -6.6922173500061035
    10. ' )' → logprob: -7.0672173500061035

Token 99: ' actions' (ID: 10370)
  Prédit: 'actions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actions' → logprob: -0.43199899792671204
    2. ' actions' → logprob: -1.0569989681243896
    3. 'labels' → logprob: -6.556999206542969
    4. ' labels' → logprob: -7.056999206542969
    5. '(actions' → logprob: -7.556999206542969
    6. 'x' → logprob: -9.431999206542969
    7. ' x' → logprob: -9.806999206542969
    8. 'threshold' → logprob: -10.181999206542969
    9. ' [' → logprob: -10.306999206542969
    10. 'action' → logprob: -10.556999206542969

Token 100: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.13494744896888733
    2. '[' → logprob: -2.2599475383758545
    3. '(idx' → logprob: -4.634947299957275
    4. '[
' → logprob: -6.009947299957275
    5. '(' → logprob: -6.509947299957275
    6. '```' → logprob: -6.509947299957275
    7. '[(' → logprob: -6.634947299957275
    8. '<|end|>' → logprob: -6.884947299957275
    9. 'idx' → logprob: -7.009947299957275
    10. '   ' → logprob: -7.634947299957275

Token 101: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022880789765622467
    2. ' )' → logprob: -9.125228881835938
    3. ']' → logprob: -9.875228881835938
    4. '])' → logprob: -10.875228881835938
    5. '[' → logprob: -11.500228881835938
    6. ')
' → logprob: -11.500228881835938
    7. ')]' → logprob: -12.250228881835938
    8. ')])' → logprob: -12.250228881835938
    9. ')return' → logprob: -12.750228881835938
    10. ')`' → logprob: -12.750228881835938

Token 102: 'print' (ID: 1598)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43101775646209717
    2. ':' → logprob: -2.0560178756713867
    3. '[' → logprob: -2.1810178756713867
    4. ')' → logprob: -2.4310178756713867
    5. '(
' → logprob: -4.431017875671387
    6. ' ' → logprob: -6.056017875671387
    7. ',' → logprob: -6.681017875671387
    8. '   ' → logprob: -6.681017875671387
    9. 'def' → logprob: -7.056017875671387
    10. ' (' → logprob: -7.181017875671387

Token 103: '(branch' (ID: 153053)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010548417922109365
    2. '("("' → logprob: -7.501054763793945
    3. '('' → logprob: -8.126054763793945
    4. '(a' → logprob: -9.876054763793945
    5. '(print' → logprob: -10.251054763793945
    6. '(labels' → logprob: -10.626054763793945
    7. '(
' → logprob: -10.876054763793945
    8. '("' → logprob: -11.126054763793945
    9. '(`' → logprob: -11.376054763793945
    10. ' (' → logprob: -11.501054763793945

Token 104: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -9.305326966568828e-05
    2. 'ging' → logprob: -10.250093460083008
    3. '(' → logprob: -11.625093460083008
    4. ' branching' → logprob: -11.750093460083008
    5. '_ing' → logprob: -11.750093460083008
    6. ' ing' → logprob: -12.000093460083008
    7. 'inging' → logprob: -12.375093460083008
    8. 'ching' → logprob: -12.375093460083008
    9. 'branch' → logprob: -12.500093460083008
    10. 'hing' → logprob: -12.750093460083008

Token 105: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.018747732043266296
    2. '(' → logprob: -4.018747806549072
    3. '(x' → logprob: -7.893747806549072
    4. ')' → logprob: -9.143747329711914
    5. ' (' → logprob: -9.768747329711914
    6. '(
' → logprob: -11.018747329711914
    7. ')(' → logprob: -11.268747329711914
    8. '((' → logprob: -11.893747329711914
    9. 'a' → logprob: -12.893747329711914
    10. '(abs' → logprob: -13.018747329711914

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008528703474439681
    2. ' ,' → logprob: -7.250853061676025
    3. ',a' → logprob: -9.250852584838867
    4. ')' → logprob: -10.375852584838867
    5. 'a' → logprob: -12.375852584838867
    6. ' ' → logprob: -12.500852584838867
    7. '),' → logprob: -13.500852584838867
    8. '```' → logprob: -13.875852584838867
    9. ',b' → logprob: -14.500852584838867
    10. '(' → logprob: -14.625852584838867

Token 107: ' bounds' (ID: 30227)
  Prédit: 'bounds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounds' → logprob: -0.04930977150797844
    2. ' bounds' → logprob: -3.049309730529785
    3. '(bounds' → logprob: -7.674309730529785
    4. 'labels' → logprob: -9.174309730529785
    5. '   ' → logprob: -10.549309730529785
    6. ' ' → logprob: -10.549309730529785
    7. 'b' → logprob: -10.799309730529785
    8. '[' → logprob: -11.299309730529785
    9. ')' → logprob: -11.299309730529785
    10. 'bound' → logprob: -11.549309730529785

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001737431448418647
    2. ' ,' → logprob: -8.875173568725586
    3. 'labels' → logprob: -11.375173568725586
    4. ')' → logprob: -11.625173568725586
    5. '),' → logprob: -12.000173568725586
    6. ' labels' → logprob: -13.750173568725586
    7. ',
' → logprob: -13.750173568725586
    8. '```' → logprob: -14.250173568725586
    9. '   ' → logprob: -14.500173568725586
    10. '_labels' → logprob: -14.875173568725586

Token 109: ' labels' (ID: 17125)
  Prédit: 'labels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'labels' → logprob: -0.029828930273652077
    2. ' labels' → logprob: -3.5298290252685547
    3. '(labels' → logprob: -9.904829025268555
    4. 'lambda' → logprob: -12.654829025268555
    5. '   ' → logprob: -12.842329025268555
    6. '[' → logprob: -12.904829025268555
    7. ' ' → logprob: -13.092329025268555
    8. 'list' → logprob: -13.154829025268555
    9. '['' → logprob: -13.217329025268555
    10. '.labels' → logprob: -13.467329025268555

Token 110: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009583894861862063
    2. ')' → logprob: -7.000958442687988
    3. '))
' → logprob: -10.250958442687988
    4. ')))' → logprob: -11.750958442687988
    5. ' ))' → logprob: -13.500958442687988
    6. '))

' → logprob: -14.750958442687988
    7. '),' → logprob: -15.000958442687988
    8. '()))' → logprob: -15.250958442687988
    9. ')
' → logprob: -15.375958442687988
    10. ' ' → logprob: -15.500958442687988


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 108
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 73
Précision stricte (1ère position): 37.04%
Précision adaptée (1ère position): 37.04%
Précision (top 10): 67.59%
================================================================================
