================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
def main():
 A=[*map(int,input().split())];n,x=A[0],A[1];B=sorted(list(map(int,input().split())))
 i=0
 while i<n:
  total = 0
  for j in range(i+1):
   total+=B[j]
  if total>x:
   print(i)
   return
  if total==x:
   print(i+1)
   return
  i+=1
 else:
  def f(u):return u
  print(f(i))
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3122055232524872
    2. 'partial' → logprob: -2.0622055530548096
    3. 'reduce' → logprob: -2.0622055530548096
    4. 'l' → logprob: -4.8122053146362305
    5. ' wraps' → logprob: -5.3122053146362305
    6. 'cache' → logprob: -8.56220531463623
    7. 'cached' → logprob: -8.56220531463623
    8. 'cmp' → logprob: -8.93720531463623
    9. ' partial' → logprob: -9.56220531463623
    10. 'wr' → logprob: -9.93720531463623

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' main' (ID: 2758)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.33812204003334045
    2. ' factorial' → logprob: -1.588122010231018
    3. ' ' → logprob: -3.7131221294403076
    4. ' calculate' → logprob: -4.2131218910217285
    5. ' map' → logprob: -4.2131218910217285
    6. ' sum' → logprob: -4.8381218910217285
    7. ' reducer' → logprob: -5.3381218910217285
    8. ' add' → logprob: -5.9631218910217285
    9. ' my' → logprob: -6.0881218910217285
    10. ' process' → logprob: -6.3381218910217285

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000549218209926039
    2. '(:' → logprob: -9.00054931640625
    3. '```' → logprob: -9.12554931640625
    4. '():' → logprob: -9.25054931640625
    5. ':' → logprob: -9.75054931640625
    6. '(
' → logprob: -10.00054931640625
    7. ' (' → logprob: -10.12554931640625
    8. '_' → logprob: -11.25054931640625
    9. '(`' → logprob: -11.50054931640625
    10. '("("' → logprob: -12.00054931640625

Token 8: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03502677008509636
    2. '    ' → logprob: -4.410026550292969
    3. ' ' → logprob: -4.660026550292969
    4. '(' → logprob: -5.160026550292969
    5. 'r' → logprob: -6.660026550292969
    6. 'a' → logprob: -6.910026550292969
    7. '[' → logprob: -7.160026550292969
    8. '```' → logprob: -7.535026550292969
    9. '    
' → logprob: -7.535026550292969
    10. ''' → logprob: -7.910026550292969

Token 9: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2083834409713745
    2. ' =' → logprob: -2.708383560180664
    3. 'p' → logprob: -2.833383560180664
    4. 'pp' → logprob: -3.333383560180664
    5. '.' → logprob: -4.958383560180664
    6. '   ' → logprob: -5.083383560180664
    7. ' p' → logprob: -5.958383560180664
    8. ' ' → logprob: -6.083383560180664
    9. 'PP' → logprob: -6.458383560180664
    10. 'P' → logprob: -6.583383560180664

Token 10: '*' (ID: 9)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001402848749421537
    2. '0' → logprob: -7.251402854919434
    3. ' ' → logprob: -7.501402854919434
    4. ']' → logprob: -9.376402854919434
    5. '10' → logprob: -11.126402854919434
    6. '5' → logprob: -11.751402854919434
    7. ' ]' → logprob: -11.751402854919434
    8. '   ' → logprob: -12.126402854919434
    9. '2' → logprob: -12.251402854919434
    10. ')' → logprob: -12.626402854919434

Token 11: 'map' (ID: 3726)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004642422776669264
    2. ' range' → logprob: -5.379642486572266
    3. '(range' → logprob: -11.754642486572266
    4. 'map' → logprob: -12.004642486572266
    5. '1' → logprob: -12.504642486572266
    6. 'iter' → logprob: -13.754642486572266
    7. 'input' → logprob: -13.879642486572266
    8. '"' → logprob: -14.254642486572266
    9. ' ' → logprob: -15.004642486572266
    10. 'filter' → logprob: -15.129642486572266

Token 12: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08639159053564072
    2. '(str' → logprob: -3.0863916873931885
    3. '(lambda' → logprob: -3.4613916873931885
    4. '(int' → logprob: -5.711391448974609
    5. ' (' → logprob: -6.461391448974609
    6. '(ord' → logprob: -7.461391448974609
    7. ' str' → logprob: -10.33639144897461
    8. 'str' → logprob: -10.33639144897461
    9. ' ' → logprob: -10.58639144897461
    10. '(range' → logprob: -10.71139144897461

Token 13: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.19320455193519592
    2. '(' → logprob: -1.8182045221328735
    3. ',' → logprob: -5.943204402923584
    4. ')]' → logprob: -6.068204402923584
    5. '(user' → logprob: -6.568204402923584
    6. '(A' → logprob: -6.818204402923584
    7. ')' → logprob: -6.943204402923584
    8. 'input' → logprob: -7.193204402923584
    9. ',input' → logprob: -7.193204402923584
    10. '('' → logprob: -7.318204402923584

Token 14: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.25121477246284485
    2. '(' → logprob: -2.1262147426605225
    3. '()' → logprob: -3.0012147426605225
    4. '()]' → logprob: -3.6262147426605225
    5. ')' → logprob: -5.126214981079102
    6. '(()' → logprob: -5.376214981079102
    7. ')]' → logprob: -6.001214981079102
    8. '('' → logprob: -6.126214981079102
    9. ')])' → logprob: -6.126214981079102
    10. '()))' → logprob: -6.376214981079102

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009321830002591014
    2. 'strip' → logprob: -7.000932216644287
    3. ' split' → logprob: -11.125931739807129
    4. 'rstrip' → logprob: -12.125931739807129
    5. 'read' → logprob: -14.875931739807129
    6. '(split' → logprob: -16.375932693481445
    7. ' strip' → logprob: -16.625932693481445
    8. 'spl' → logprob: -16.875932693481445
    9. ')' → logprob: -17.625932693481445
    10. 's' → logprob: -18.500932693481445

Token 16: '())' (ID: 3516)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.9945551753044128
    2. '))' → logprob: -1.2445552349090576
    3. '())' → logprob: -1.2445552349090576
    4. ')]' → logprob: -3.4945552349090576
    5. ')' → logprob: -3.9945552349090576
    6. ')])' → logprob: -5.6195549964904785
    7. '()' → logprob: -6.9945549964904785
    8. '()]' → logprob: -8.369555473327637
    9. '(' → logprob: -8.494555473327637
    10. ')))' → logprob: -10.244555473327637

Token 17: '];' (ID: 11464)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.029780225828289986
    2. ')])' → logprob: -4.279780387878418
    3. ')' → logprob: -4.904780387878418
    4. ' )' → logprob: -5.654780387878418
    5. ']' → logprob: -5.779780387878418
    6. ')]
' → logprob: -7.279780387878418
    7. '])' → logprob: -8.029780387878418
    8. '])]' → logprob: -8.529780387878418
    9. ' ]' → logprob: -9.529780387878418
    10. '')]' → logprob: -10.404780387878418

Token 18: 'n' (ID: 77)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.4623459577560425
    2. ' s' → logprob: -1.9623459577560425
    3. ' res' → logprob: -2.212346076965332
    4. ' sum' → logprob: -2.462346076965332
    5. ' n' → logprob: -2.587346076965332
    6. ' r' → logprob: -2.712346076965332
    7. ' for' → logprob: -2.837346076965332
    8. 's' → logprob: -3.212346076965332
    9. ' total' → logprob: -3.587346076965332
    10. 'r' → logprob: -3.712346076965332

Token 19: ',x' (ID: 29748)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4295928180217743
    2. ' =' → logprob: -1.0545928478240967
    3. '=int' → logprob: -7.429592609405518
    4. '=len' → logprob: -9.179593086242676
    5. ',' → logprob: -9.804593086242676
    6. ' ' → logprob: -10.054593086242676
    7. ' =[' → logprob: -11.054593086242676
    8. '=n' → logprob: -11.929593086242676
    9. ' ,' → logprob: -12.304593086242676
    10. '=input' → logprob: -12.429593086242676

Token 20: '=A' (ID: 112591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012767791748046875
    2. ' =' → logprob: -4.637767791748047
    3. ',' → logprob: -5.887767791748047
    4. '=int' → logprob: -8.762767791748047
    5. '=input' → logprob: -10.762767791748047
    6. '=

' → logprob: -11.512767791748047
    7. '=[]' → logprob: -12.262767791748047
    8. ' ' → logprob: -12.387767791748047
    9. '=len' → logprob: -12.387767791748047
    10. '=[' → logprob: -12.887767791748047

Token 21: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24526800215244293
    2. '1' → logprob: -1.6202679872512817
    3. ' ' → logprob: -3.9952681064605713
    4. '2' → logprob: -6.995267868041992
    5. ']' → logprob: -8.995267868041992
    6. '-' → logprob: -8.995267868041992
    7. '])' → logprob: -10.870267868041992
    8. ' ]' → logprob: -11.370267868041992
    9. ':' → logprob: -11.495267868041992
    10. 'n' → logprob: -11.745267868041992

Token 23: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6442731618881226
    2. '],' → logprob: -0.7692731618881226
    3. ' ],' → logprob: -5.144273281097412
    4. ' ]' → logprob: -5.644273281097412
    5. ',' → logprob: -7.019273281097412
    6. '],
' → logprob: -7.894273281097412
    7. '];' → logprob: -8.394272804260254
    8. ':' → logprob: -9.144272804260254
    9. '])' → logprob: -9.269272804260254
    10. ':]' → logprob: -9.394272804260254

Token 24: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.061981577426195145
    2. ' A' → logprob: -2.811981678009033
    3. ' ' → logprob: -11.561981201171875
    4. '*A' → logprob: -13.436981201171875
    5. 'x' → logprob: -13.686981201171875
    6. '	A' → logprob: -14.811981201171875
    7. 'n' → logprob: -15.311981201171875
    8. ''A' → logprob: -15.436981201171875
    9. '<|end|>' → logprob: -15.436981201171875
    10. '*' → logprob: -15.936981201171875

Token 25: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017413432942703366
    2. '1' → logprob: -6.376741409301758
    3. '```' → logprob: -10.876741409301758
    4. ' [' → logprob: -11.501741409301758
    5. '\[' → logprob: -13.001741409301758
    6. '[n' → logprob: -13.251741409301758
    7. ' ' → logprob: -14.251741409301758
    8. '2' → logprob: -14.501741409301758
    9. '[
' → logprob: -14.626741409301758
    10. '...' → logprob: -15.001741409301758

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023739055905025452
    2. ' ' → logprob: -8.375237464904785
    3. '2' → logprob: -12.125237464904785
    4. '```' → logprob: -15.125237464904785
    5. '  ' → logprob: -15.437737464904785
    6. '0' → logprob: -15.625237464904785
    7. ']' → logprob: -16.12523651123047
    8. '   ' → logprob: -16.12523651123047
    9. '' → logprob: -16.31273651123047
    10. '...' → logprob: -16.68773651123047

Token 27: '];' (ID: 11464)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.045222941786050797
    2. '],' → logprob: -3.5452229976654053
    3. ',' → logprob: -4.295222759246826
    4. '])' → logprob: -7.420222759246826
    5. ' ]' → logprob: -7.795222759246826
    6. ')' → logprob: -8.795223236083984
    7. ')]' → logprob: -9.545223236083984
    8. '<|end|>' → logprob: -9.545223236083984
    9. ']}' → logprob: -9.795223236083984
    10. '],[' → logprob: -9.795223236083984

Token 28: 'B' (ID: 33)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.652020275592804
    2. 'A' → logprob: -0.902020275592804
    3. 'a' → logprob: -3.652020215988159
    4. 's' → logprob: -4.777020454406738
    5. ' a' → logprob: -4.777020454406738
    6. ' s' → logprob: -5.527020454406738
    7. 'S' → logprob: -6.152020454406738
    8. ' S' → logprob: -6.152020454406738
    9. ' B' → logprob: -6.527020454406738
    10. ' l' → logprob: -6.527020454406738

Token 29: '=' (ID: 28)
  Prédit: '=A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=A' → logprob: -0.8005468845367432
    2. '=' → logprob: -1.3005468845367432
    3. '=[' → logprob: -1.3005468845367432
    4. ' =' → logprob: -5.550546646118164
    5. ' =[' → logprob: -6.675546646118164
    6. '=[]' → logprob: -7.175546646118164
    7. '=B' → logprob: -8.675546646118164
    8. '=int' → logprob: -11.800546646118164
    9. '=list' → logprob: -11.925546646118164
    10. '=a' → logprob: -11.925546646118164

Token 30: 'sorted' (ID: 64288)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18229195475578308
    2. ' A' → logprob: -2.0572919845581055
    3. '[*' → logprob: -3.4322919845581055
    4. ' [' → logprob: -5.8072919845581055
    5. '[A' → logprob: -6.4322919845581055
    6. '[' → logprob: -6.4322919845581055
    7. 'list' → logprob: -8.432291984558105
    8. ' list' → logprob: -10.807291984558105
    9. '[]' → logprob: -11.307291984558105
    10. ' ' → logprob: -11.557291984558105

Token 31: '(list' (ID: 13116)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.043693907558918
    2. '([' → logprob: -3.543694019317627
    3. '(' → logprob: -5.043694019317627
    4. '(map' → logprob: -5.793694019317627
    5. '(list' → logprob: -6.168694019317627
    6. '(input' → logprob: -7.418694019317627
    7. '(lambda' → logprob: -7.793694019317627
    8. '((' → logprob: -8.293693542480469
    9. '(int' → logprob: -8.293693542480469
    10. '((*' → logprob: -8.918693542480469

Token 32: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2585495412349701
    2. '(A' → logprob: -1.5085495710372925
    3. '(' → logprob: -5.383549690246582
    4. '(input' → logprob: -6.633549690246582
    5. '(range' → logprob: -7.758549690246582
    6. '(int' → logprob: -8.883549690246582
    7. 'A' → logprob: -10.633549690246582
    8. ' (' → logprob: -11.133549690246582
    9. '((' → logprob: -11.508549690246582
    10. '(
' → logprob: -11.758549690246582

Token 33: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0011308094253763556
    2. '(' → logprob: -6.8761305809021
    3. ',int' → logprob: -9.876131057739258
    4. '<|end|>' → logprob: -11.501131057739258
    5. '<int' → logprob: -11.751131057739258
    6. ')' → logprob: -11.751131057739258
    7. ']int' → logprob: -12.626131057739258
    8. '<|end|>' → logprob: -12.751131057739258
    9. 'int' → logprob: -12.876131057739258
    10. '(lambda' → logprob: -12.876131057739258

Token 34: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.06166589632630348
    2. '(input' → logprob: -2.9366660118103027
    3. ',' → logprob: -5.061666011810303
    4. '(' → logprob: -8.061665534973145
    5. 'input' → logprob: -10.186665534973145
    6. '(),' → logprob: -10.936665534973145
    7. ' ,' → logprob: -11.186665534973145
    8. ')' → logprob: -11.686665534973145
    9. '),' → logprob: -12.311665534973145
    10. ',user' → logprob: -12.811665534973145

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.2020991056924686e-05
    2. '.' → logprob: -11.125032424926758
    3. '()' → logprob: -11.125032424926758
    4. ' ().' → logprob: -13.625032424926758
    5. ' .' → logprob: -14.875032424926758
    6. ').' → logprob: -15.125032424926758
    7. '.split' → logprob: -15.625032424926758
    8. ')' → logprob: -15.750032424926758
    9. '>().' → logprob: -16.250032424926758
    10. '(' → logprob: -16.375032424926758

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6166903151315637e-05
    2. ' split' → logprob: -11.375016212463379
    3. 'read' → logprob: -13.000016212463379
    4. '```' → logprob: -13.875016212463379
    5. 'strip' → logprob: -14.625016212463379
    6. 'spl' → logprob: -14.875016212463379
    7. '(split' → logprob: -15.125016212463379
    8. '.split' → logprob: -15.250016212463379
    9. 'rstrip' → logprob: -16.375015258789062
    10. ')' → logprob: -17.000015258789062

Token 37: '())))
' (ID: 129187)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.23243571817874908
    2. '()' → logprob: -2.107435703277588
    3. '()))' → logprob: -2.607435703277588
    4. '())' → logprob: -4.482435703277588
    5. ')))' → logprob: -8.232436180114746
    6. '()));' → logprob: -8.357436180114746
    7. '())))
' → logprob: -8.732436180114746
    8. '()),' → logprob: -9.982436180114746
    9. '(' → logprob: -10.607436180114746
    10. '()>' → logprob: -11.107436180114746

Token 38: ' i' (ID: 575)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2593733072280884
    2. ' =' → logprob: -1.7593733072280884
    3. 'n' → logprob: -3.134373188018799
    4. 'f' → logprob: -5.134373188018799
    5. ' n' → logprob: -6.009373188018799
    6. '=n' → logprob: -6.134373188018799
    7. 'nt' → logprob: -7.759373188018799
    8. ' ' → logprob: -7.759373188018799
    9. ',' → logprob: -7.759373188018799
    10. ',n' → logprob: -8.009373664855957

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0993664413690567
    2. ' ' → logprob: -2.5993664264678955
    3. '1' → logprob: -4.349366664886475
    4. 'x' → logprob: -6.099366664886475
    5. 'n' → logprob: -6.224366664886475
    6. ' n' → logprob: -6.349366664886475
    7. ' x' → logprob: -7.099366664886475
    8. '2' → logprob: -8.099366188049316
    9. '-' → logprob: -10.099366188049316
    10. ' -' → logprob: -10.349366188049316

Token 41: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22658675909042358
    2. '<|end|>' → logprob: -2.6015868186950684
    3. ' while' → logprob: -2.8515868186950684
    4. ' 
' → logprob: -3.6015868186950684
    5. ' ,' → logprob: -4.226586818695068
    6. ' i' → logprob: -4.851586818695068
    7. ',' → logprob: -5.476586818695068
    8. 'while' → logprob: -5.726586818695068
    9. ' ;' → logprob: -5.726586818695068
    10. '
' → logprob: -6.101586818695068

Token 42: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3966670036315918
    2. '<|end|>' → logprob: -1.7716670036315918
    3. ' 
' → logprob: -2.396667003631592
    4. ' while' → logprob: -3.396667003631592
    5. ' i' → logprob: -4.771667003631592
    6. 'while' → logprob: -5.146667003631592
    7. '
' → logprob: -5.521667003631592
    8. ' ,' → logprob: -5.646667003631592
    9. '<|end|>' → logprob: -5.896667003631592
    10. ',' → logprob: -6.521667003631592

Token 43: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0019966813270002604
    2. 'i' → logprob: -6.2519965171813965
    3. ' n' → logprob: -10.251996994018555
    4. ' x' → logprob: -11.126996994018555
    5. ' ' → logprob: -11.876996994018555
    6. ' B' → logprob: -11.876996994018555
    7. ' A' → logprob: -13.876996994018555
    8. '(i' → logprob: -14.251996994018555
    9. 'n' → logprob: -14.751996994018555
    10. 'B' → logprob: -14.751996994018555

Token 44: '<n' (ID: 33872)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.38908836245536804
    2. '<' → logprob: -1.1390883922576904
    3. '<len' → logprob: -6.639088153839111
    4. ' ' → logprob: -7.764088153839111
    5. '<n' → logprob: -8.13908863067627
    6. ' <=' → logprob: -9.13908863067627
    7. '<=' → logprob: -9.76408863067627
    8. '<size' → logprob: -12.38908863067627
    9. ' <
' → logprob: -12.38908863067627
    10. ' less' → logprob: -12.51408863067627

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02532932348549366
    2. ' and' → logprob: -4.275329113006592
    3. ' :' → logprob: -4.900329113006592
    4. ':
' → logprob: -6.025329113006592
    5. 'and' → logprob: -7.775329113006592
    6. ' :
' → logprob: -8.40032958984375
    7. '+' → logprob: -8.40032958984375
    8. ' ' → logprob: -9.15032958984375
    9. '+:' → logprob: -9.40032958984375
    10. '-' → logprob: -10.52532958984375

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.044368188828229904
    2. ' i' → logprob: -4.169368267059326
    3. '    ' → logprob: -4.544368267059326
    4. '<|end|>' → logprob: -5.294368267059326
    5. ' if' → logprob: -6.294368267059326
    6. '   ' → logprob: -6.419368267059326
    7. ' 
' → logprob: -6.419368267059326
    8. ' x' → logprob: -6.794368267059326
    9. '       ' → logprob: -7.044368267059326
    10. ':' → logprob: -7.294368267059326

Token 47: ' total' (ID: 3609)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10480660200119019
    2. ' ' → logprob: -3.104806661605835
    3. 'if' → logprob: -3.479806661605835
    4. ' i' → logprob: -4.354806423187256
    5. ' x' → logprob: -5.979806423187256
    6. '   ' → logprob: -6.604806423187256
    7. ' j' → logprob: -6.729806423187256
    8. 'i' → logprob: -7.104806423187256
    9. 'x' → logprob: -7.104806423187256
    10. 'j' → logprob: -7.604806423187256

Token 48: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31094449758529663
    2. '+' → logprob: -2.4359445571899414
    3. ' +' → logprob: -2.4359445571899414
    4. '+=' → logprob: -2.9359445571899414
    5. ' <=' → logprob: -3.9359445571899414
    6. ' ' → logprob: -4.685944557189941
    7. ' =' → logprob: -5.560944557189941
    8. '=' → logprob: -5.560944557189941
    9. '<=' → logprob: -6.810944557189941
    10. '<|end|>' → logprob: -7.435944557189941

Token 49: ' ' (ID: 220)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.6613827347755432
    2. ' x' → logprob: -1.1613826751708984
    3. 'B' → logprob: -2.5363826751708984
    4. '0' → logprob: -3.1613826751708984
    5. 'x' → logprob: -3.2863826751708984
    6. ' ' → logprob: -4.536382675170898
    7. '+' → logprob: -7.536382675170898
    8. ' +' → logprob: -8.661382675170898
    9. '+B' → logprob: -9.161382675170898
    10. '+x' → logprob: -9.661382675170898

Token 50: '0' (ID: 15)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7755693793296814
    2. ' B' → logprob: -1.5255694389343262
    3. 'x' → logprob: -1.9005694389343262
    4. '0' → logprob: -2.150569438934326
    5. ' x' → logprob: -3.150569438934326
    6. ' ' → logprob: -4.400569438934326
    7. '+' → logprob: -7.900569438934326
    8. 'sum' → logprob: -9.150568962097168
    9. '+B' → logprob: -9.275568962097168
    10. '+x' → logprob: -9.650568962097168

Token 51: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3811599016189575
    2. '+' → logprob: -2.506159782409668
    3. '<|end|>' → logprob: -2.506159782409668
    4. ' 
' → logprob: -2.631159782409668
    5. ' +' → logprob: -3.256159782409668
    6. ' while' → logprob: -3.506159782409668
    7. ' if' → logprob: -5.756159782409668
    8. '  ' → logprob: -6.006159782409668
    9. '  
' → logprob: -6.131159782409668
    10. 'while' → logprob: -7.381159782409668

Token 53: ' for' (ID: 395)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.13261763751506805
    2. 'while' → logprob: -3.132617712020874
    3. ' if' → logprob: -3.382617712020874
    4. ' ' → logprob: -3.882617712020874
    5. ' i' → logprob: -4.132617473602295
    6. 'if' → logprob: -6.132617473602295
    7. 'j' → logprob: -6.382617473602295
    8. ' j' → logprob: -6.507617473602295
    9. ' for' → logprob: -6.632617473602295
    10. 'i' → logprob: -7.132617473602295

Token 54: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.05721248686313629
    2. 'j' → logprob: -3.8072125911712646
    3. ' range' → logprob: -3.8072125911712646
    4. ' B' → logprob: -5.4322123527526855
    5. 'range' → logprob: -5.8072123527526855
    6. ' ' → logprob: -6.0572123527526855
    7. 'B' → logprob: -7.0572123527526855
    8. ' in' → logprob: -8.807212829589844
    9. ' xrange' → logprob: -9.307212829589844
    10. ' _' → logprob: -9.557212829589844

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005624308250844479
    2. 'in' → logprob: -5.255624294281006
    3. ' ' → logprob: -8.380624771118164
    4. 'range' → logprob: -9.880624771118164
    5. ' range' → logprob: -9.880624771118164
    6. ' i' → logprob: -10.130624771118164
    7. '	in' → logprob: -11.755624771118164
    8. '  ' → logprob: -13.568124771118164
    9. ' j' → logprob: -13.818124771118164
    10. '0' → logprob: -13.943124771118164

Token 56: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14275731146335602
    2. 'range' → logprob: -2.0177574157714844
    3. ' B' → logprob: -10.392757415771484
    4. '(range' → logprob: -11.017757415771484
    5. 'B' → logprob: -11.517757415771484
    6. ' ' → logprob: -11.767757415771484
    7. ' A' → logprob: -12.142757415771484
    8. '	range' → logprob: -12.392757415771484
    9. 'A' → logprob: -13.142757415771484
    10. '   ' → logprob: -13.517757415771484

Token 57: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.146811842918396
    2. ' i' → logprob: -2.3968119621276855
    3. 'i' → logprob: -3.5218119621276855
    4. ' ' → logprob: -4.8968119621276855
    5. '(' → logprob: -5.2718119621276855
    6. '(n' → logprob: -6.2718119621276855
    7. ' (' → logprob: -7.1468119621276855
    8. 'n' → logprob: -8.896811485290527
    9. 'j' → logprob: -9.146811485290527
    10. ' n' → logprob: -9.146811485290527

Token 58: '+' (ID: 10)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.39142391085624695
    2. ',' → logprob: -1.7664239406585693
    3. ' ,' → logprob: -1.8914239406585693
    4. ' ' → logprob: -6.76642370223999
    5. ',i' → logprob: -7.39142370223999
    6. '+' → logprob: -9.141424179077148
    7. ',j' → logprob: -9.391424179077148
    8. ' n' → logprob: -10.391424179077148
    9. ',len' → logprob: -10.391424179077148
    10. ' +' → logprob: -10.516424179077148

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0048623960465192795
    2. ' ' → logprob: -5.504862308502197
    3. 'n' → logprob: -7.754862308502197
    4. ' n' → logprob: -8.004862785339355
    5. '2' → logprob: -11.504862785339355
    6. '0' → logprob: -12.504862785339355
    7. 'j' → logprob: -13.692362785339355
    8. 'x' → logprob: -13.879862785339355
    9. ' B' → logprob: -14.192362785339355
    10. ' j' → logprob: -14.629862785339355

Token 60: '):
' (ID: 1883)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.08497383445501328
    2. ',' → logprob: -2.7099738121032715
    3. ' ,' → logprob: -4.2099738121032715
    4. ' ' → logprob: -10.33497428894043
    5. '):' → logprob: -10.70997428894043
    6. ')' → logprob: -12.08497428894043
    7. ',len' → logprob: -12.20997428894043
    8. ' n' → logprob: -12.83497428894043
    9. '):
' → logprob: -13.58497428894043
    10. ' )' → logprob: -13.58497428894043

Token 61: '  ' (ID: 256)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2977134883403778
    2. '  ' → logprob: -2.2977135181427
    3. ' total' → logprob: -2.2977135181427
    4. '+' → logprob: -3.9227135181427
    5. '   ' → logprob: -4.047713279724121
    6. '<|end|>' → logprob: -5.547713279724121
    7. '(total' → logprob: -5.797713279724121
    8. '    ' → logprob: -5.797713279724121
    9. 'total' → logprob: -5.797713279724121
    10. ' +' → logprob: -5.922713279724121

Token 62: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.39236629009246826
    2. 'total' (adapté à ' total') → logprob: -1.2673662900924683
    3. ' ' → logprob: -3.517366409301758
    4. '+' → logprob: -4.767366409301758
    5. ' if' → logprob: -6.267366409301758
    6. ' +' → logprob: -7.017366409301758
    7. '   ' → logprob: -7.392366409301758
    8. '  ' → logprob: -7.517366409301758
    9. 'if' → logprob: -8.767366409301758
    10. '(total' → logprob: -9.142366409301758

Token 63: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20232810080051422
    2. ' +=' → logprob: -1.702328085899353
    3. '+' → logprob: -7.827328205108643
    4. '+=(' → logprob: -8.202327728271484
    5. ']+=' → logprob: -9.577327728271484
    6. ' ' → logprob: -9.702327728271484
    7. ' +' → logprob: -9.827327728271484
    8. '+='' → logprob: -10.952327728271484
    9. '+="' → logprob: -11.702327728271484
    10. '  ' → logprob: -11.952327728271484

Token 64: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.043116915971040726
    2. ' B' → logprob: -3.168116807937622
    3. ' ' → logprob: -10.168116569519043
    4. 'x' → logprob: -10.168116569519043
    5. '   ' → logprob: -11.793116569519043
    6. 'j' → logprob: -12.293116569519043
    7. ' x' → logprob: -12.418116569519043
    8. 'A' → logprob: -12.543116569519043
    9. '  ' → logprob: -12.918116569519043
    10. '(B' → logprob: -13.043116569519043

Token 65: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.000241085872403346
    2. '[' → logprob: -9.50024127960205
    3. '[i' → logprob: -9.75024127960205
    4. '[n' → logprob: -10.00024127960205
    5. 'j' → logprob: -10.12524127960205
    6. '[-' → logprob: -11.87524127960205
    7. ' [' → logprob: -12.75024127960205
    8. ' j' → logprob: -12.87524127960205
    9. '```' → logprob: -13.00024127960205
    10. ' ' → logprob: -13.62524127960205

Token 66: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14664220809936523
    2. ']*' → logprob: -3.0216422080993652
    3. ' ]' → logprob: -3.2716422080993652
    4. ')' → logprob: -4.521642208099365
    5. ']>' → logprob: -4.771642208099365
    6. '])' → logprob: -4.896642208099365
    7. '*' → logprob: -5.146642208099365
    8. ']<=' → logprob: -5.521642208099365
    9. ' )' → logprob: -5.896642208099365
    10. ']>=' → logprob: -6.021642208099365

Token 67: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.500117301940918
    2. ' 
' → logprob: -1.500117301940918
    3. '  
' → logprob: -2.625117301940918
    4. ' if' → logprob: -2.750117301940918
    5. '+' → logprob: -4.500117301940918
    6. '<|end|>' → logprob: -5.000117301940918
    7. '
' → logprob: -6.000117301940918
    8. ' +' → logprob: -6.000117301940918
    9. '  ' → logprob: -6.125117301940918
    10. '   
' → logprob: -6.375117301940918

Token 68: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7885392308235168
    2. ' 
' → logprob: -1.163539171218872
    3. ' if' → logprob: -1.538539171218872
    4. '+' → logprob: -5.413539409637451
    5. ' +' → logprob: -6.038539409637451
    6. ' 
 
' → logprob: -6.413539409637451
    7. '<|end|>' → logprob: -6.663539409637451
    8. 'if' → logprob: -6.663539409637451
    9. '  
' → logprob: -6.913539409637451
    10. ' i' → logprob: -6.913539409637451

Token 69: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.008617881685495377
    2. 'total' → logprob: -4.883617877960205
    3. ' x' → logprob: -7.008617877960205
    4. 'x' → logprob: -9.258618354797363
    5. '(total' → logprob: -11.883618354797363
    6. ' ' → logprob: -14.008618354797363
    7. ' ' → logprob: -14.258618354797363
    8. 'Total' → logprob: -14.508618354797363
    9. ' totals' → logprob: -14.883618354797363
    10. ' n' → logprob: -15.008618354797363

Token 70: '>x' (ID: 173405)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7810522317886353
    2. ' <=' → logprob: -1.1560522317886353
    3. '>' → logprob: -2.0310521125793457
    4. '<=' → logprob: -2.6560521125793457
    5. ' <' → logprob: -4.906052112579346
    6. ' ' → logprob: -5.406052112579346
    7. ' >=' → logprob: -5.656052112579346
    8. '>x' → logprob: -5.781052112579346
    9. '<' → logprob: -6.281052112579346
    10. '>=' → logprob: -6.531052112579346

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009885353036224842
    2. ' :' → logprob: -5.009885311126709
    3. ':
' → logprob: -6.009885311126709
    4. ' ' → logprob: -8.134885787963867
    5. ' :
' → logprob: -8.884885787963867
    6. ':return' → logprob: -8.884885787963867
    7. ' break' → logprob: -9.384885787963867
    8. ' or' → logprob: -10.634885787963867
    9. '  ' → logprob: -11.134885787963867
    10. ':
' → logprob: -12.759885787963867

Token 72: '  ' (ID: 256)
  Prédit: '  '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.13998843729496002
    2. ' ' → logprob: -2.639988422393799
    3. ' break' → logprob: -2.889988422393799
    4. 'break' → logprob: -6.139988422393799
    5. '   ' → logprob: -6.764988422393799
    6. '```' → logprob: -9.139988899230957
    7. '	break' → logprob: -9.264988899230957
    8. '       ' → logprob: -10.264988899230957
    9. '     ' → logprob: -10.264988899230957
    10. ' ' → logprob: -10.639988899230957

Token 73: ' print' (ID: 2123)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.23809714615345
    2. '  ' → logprob: -1.9880971908569336
    3. 'break' → logprob: -2.9880971908569336
    4. ' ' → logprob: -3.9880971908569336
    5. '   ' → logprob: -6.238097190856934
    6. 'print' (adapté à ' print') → logprob: -6.613097190856934
    7. ' print' → logprob: -6.738097190856934
    8. ' i' → logprob: -7.363097190856934
    9. '```' → logprob: -8.363097190856934
    10. '	break' → logprob: -8.613097190856934

Token 74: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10910692065954208
    2. ' i' → logprob: -2.48410701751709
    3. 'j' → logprob: -4.23410701751709
    4. 'B' → logprob: -6.23410701751709
    5. '(i' → logprob: -6.48410701751709
    6. ' j' → logprob: -6.60910701751709
    7. ' B' → logprob: -8.35910701751709
    8. ' ' → logprob: -8.35910701751709
    9. ' (' → logprob: -10.60910701751709
    10. '(B' → logprob: -10.60910701751709

Token 75: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5319057106971741
    2. ')' → logprob: -1.0319056510925293
    3. ' )
' → logprob: -3.0319056510925293
    4. ' )' → logprob: -5.031905651092529
    5. '-' → logprob: -7.031905651092529
    6. ')return' → logprob: -8.031906127929688
    7. ')
' → logprob: -9.281906127929688
    8. ' ' → logprob: -9.656906127929688
    9. ' -' → logprob: -11.281906127929688
    10. ');' → logprob: -11.406906127929688

Token 76: '  ' (ID: 256)
  Prédit: '  '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.22078152000904083
    2. '   ' → logprob: -2.3457815647125244
    3. ' ' → logprob: -2.7207815647125244
    4. '   
' → logprob: -4.095781326293945
    5. '  
' → logprob: -4.970781326293945
    6. ' return' → logprob: -5.220781326293945
    7. ' break' → logprob: -6.595781326293945
    8. '\n' → logprob: -6.845781326293945
    9. ' 
' → logprob: -7.095781326293945
    10. '       ' → logprob: -7.220781326293945

Token 77: ' return' (ID: 622)
  Prédit: '  '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  ' → logprob: -1.411361813545227
    2. ' return' → logprob: -1.411361813545227
    3. 'return' (adapté à ' return') → logprob: -2.1613616943359375
    4. ' ' → logprob: -2.1613616943359375
    5. '   ' → logprob: -2.2863616943359375
    6. ' break' → logprob: -2.2863616943359375
    7. '   
' → logprob: -3.7863616943359375
    8. 'break' → logprob: -3.7863616943359375
    9. '
' → logprob: -4.6613616943359375
    10. '  
' → logprob: -4.9113616943359375

Token 78: '
' (ID: 198)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1587919443845749
    2. ' ' → logprob: -2.033792018890381
    3. 'i' → logprob: -4.283792018890381
    4. ' 
' → logprob: -6.783792018890381
    5. '
' → logprob: -8.158791542053223
    6. '  
' → logprob: -8.283791542053223
    7. '```' → logprob: -8.408791542053223
    8. '  ' → logprob: -9.658791542053223
    9. '	i' → logprob: -10.283791542053223
    10. '   ' → logprob: -10.283791542053223

Token 79: ' ' (ID: 220)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.024915000423789024
    2. ' ' → logprob: -4.0249152183532715
    3. 'i' → logprob: -5.0249152183532715
    4. '<|end|>' → logprob: -10.524914741516113
    5. ' 
' → logprob: -10.649914741516113
    6. '```' → logprob: -11.149914741516113
    7. '	i' → logprob: -11.274914741516113
    8. ',i' → logprob: -11.274914741516113
    9. ' else' → logprob: -11.399914741516113
    10. '  ' → logprob: -11.649914741516113

Token 80: ' if' (ID: 538)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07096577435731888
    2. 'i' → logprob: -2.6959657669067383
    3. ' ' → logprob: -7.320965766906738
    4. '```' → logprob: -9.070965766906738
    5. ' 
' → logprob: -9.695965766906738
    6. '	i' → logprob: -9.820965766906738
    7. '  ' → logprob: -10.945965766906738
    8. ',i' → logprob: -11.195965766906738
    9. '`' → logprob: -11.195965766906738
    10. '``' → logprob: -11.820965766906738

Token 81: ' total' (ID: 3609)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4532800018787384
    2. ' total' → logprob: -1.703279972076416
    3. 'total' → logprob: -2.828279972076416
    4. 'i' → logprob: -2.828279972076416
    5. ' B' → logprob: -3.453279972076416
    6. ' x' → logprob: -4.578279972076416
    7. ' n' → logprob: -5.078279972076416
    8. 'B' → logprob: -5.078279972076416
    9. 'x' → logprob: -5.703279972076416
    10. ' ' → logprob: -6.328279972076416

Token 82: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.054818298667669296
    2. ' ==' → logprob: -3.5548183917999268
    3. '<=' → logprob: -3.8048183917999268
    4. ' <=' → logprob: -7.179818153381348
    5. '>=' → logprob: -7.929818153381348
    6. '>' → logprob: -7.929818153381348
    7. '+' → logprob: -8.679818153381348
    8. '=' → logprob: -8.804818153381348
    9. '<x' → logprob: -8.804818153381348
    10. '>x' → logprob: -9.429818153381348

Token 83: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6327359676361084
    2. ' x' → logprob: -0.7577359676361084
    3. '0' → logprob: -9.632736206054688
    4. ' ' → logprob: -9.757736206054688
    5. '>x' → logprob: -12.882736206054688
    6. 'i' → logprob: -13.257736206054688
    7. ' i' → logprob: -13.632736206054688
    8. '	x' → logprob: -13.632736206054688
    9. '<|end|>' → logprob: -13.882736206054688
    10. ')x' → logprob: -13.882736206054688

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030945710837841034
    2. ':
' → logprob: -3.5309457778930664
    3. ' and' → logprob: -7.405945777893066
    4. ' or' → logprob: -7.905945777893066
    5. ' :' → logprob: -9.780945777893066
    6. ' :
' → logprob: -10.530945777893066
    7. '  ' → logprob: -10.530945777893066
    8. '<|end|>' → logprob: -10.655945777893066
    9. ',' → logprob: -10.780945777893066
    10. ':return' → logprob: -11.030945777893066

Token 85: '  ' (ID: 256)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8302933573722839
    2. ' print' → logprob: -1.0802934169769287
    3. ' 
' → logprob: -2.5802934169769287
    4. '  ' → logprob: -3.2052934169769287
    5. ' ' → logprob: -3.3302934169769287
    6. '  
' → logprob: -3.4552934169769287
    7. '
' → logprob: -4.20529317855835
    8. '<|end|>' → logprob: -4.58029317855835
    9. '   
' → logprob: -5.08029317855835
    10. '   ' → logprob: -5.33029317855835

Token 86: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.48853161931037903
    2. 'print' (adapté à ' print') → logprob: -0.9885315895080566
    3. '
' → logprob: -4.738531589508057
    4. ' 
' → logprob: -5.613531589508057
    5. ' i' → logprob: -7.363531589508057
    6. ' ' → logprob: -7.613531589508057
    7. '   ' → logprob: -8.738532066345215
    8. '  
' → logprob: -8.738532066345215
    9. '\n' → logprob: -9.113532066345215
    10. '	print' → logprob: -9.238532066345215

Token 87: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5468480587005615
    2. '(i' → logprob: -1.2968480587005615
    3. ' i' → logprob: -1.9218480587005615
    4. '(' → logprob: -6.546848297119141
    5. ' ' → logprob: -10.54684829711914
    6. 'j' → logprob: -11.29684829711914
    7. ' (' → logprob: -11.79684829711914
    8. '{i' → logprob: -12.67184829711914
    9. '	i' → logprob: -12.79684829711914
    10. '0' → logprob: -12.79684829711914

Token 88: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013391701504588127
    2. ' +' → logprob: -6.751338958740234
    3. '+
' → logprob: -8.751338958740234
    4. ')' → logprob: -12.751338958740234
    5. ')
' → logprob: -13.001338958740234
    6. '+)' → logprob: -13.126338958740234
    7. ')+' → logprob: -13.376338958740234
    8. ' +
' → logprob: -14.126338958740234
    9. '+i' → logprob: -14.751338958740234
    10. '+

' → logprob: -15.751338958740234

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2020991056924686e-05
    2. ' ' → logprob: -10.375032424926758
    3. '2' → logprob: -14.250032424926758
    4. '<|end|>' → logprob: -17.375032424926758
    5. '１' → logprob: -17.500032424926758
    6. ')' → logprob: -17.750032424926758
    7. '```' → logprob: -17.750032424926758
    8. '`' → logprob: -17.875032424926758
    9. '
' → logprob: -18.000032424926758
    10. '۱' → logprob: -18.375032424926758

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03396229073405266
    2. ')
' → logprob: -3.4089622497558594
    3. ' )' → logprob: -9.03396224975586
    4. ' ' → logprob: -9.28396224975586
    5. ' )
' → logprob: -10.15896224975586
    6. ')i' → logprob: -10.90896224975586
    7. ')
' → logprob: -11.15896224975586
    8. ')return' → logprob: -11.78396224975586
    9. '```' → logprob: -12.15896224975586
    10. '')' → logprob: -12.40896224975586

Token 91: '  ' (ID: 256)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7790006399154663
    2. '
' → logprob: -1.2790006399154663
    3. '  
' → logprob: -2.154000759124756
    4. ' i' → logprob: -2.904000759124756
    5. '\n' → logprob: -3.279000759124756
    6. '  ' → logprob: -4.029000759124756
    7. 'i' → logprob: -4.404000759124756
    8. '<|end|>' → logprob: -4.654000759124756
    9. ',i' → logprob: -5.404000759124756
    10. '   ' → logprob: -6.154000759124756

Token 92: ' return' (ID: 622)
  Prédit: '   
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   
' → logprob: -0.6580007076263428
    2. '  ' → logprob: -1.6580007076263428
    3. '  
' → logprob: -2.0330007076263428
    4. '
' → logprob: -3.0330007076263428
    5. ' i' → logprob: -3.7830007076263428
    6. '\n' → logprob: -3.9080007076263428
    7. '   ' → logprob: -4.033000946044922
    8. ' ' → logprob: -4.158000946044922
    9. ' return' → logprob: -4.533000946044922
    10. '```' → logprob: -4.658000946044922

Token 93: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22335116565227509
    2. ' i' → logprob: -1.7233511209487915
    3. '  
' → logprob: -4.598351001739502
    4. '
' → logprob: -5.348351001739502
    5. 'i' → logprob: -5.848351001739502
    6. ' 
' → logprob: -5.973351001739502
    7. '<|end|>' → logprob: -7.848351001739502
    8. '  ' → logprob: -7.973351001739502
    9. '```' → logprob: -8.72335147857666
    10. ',i' → logprob: -8.84835147857666

Token 94: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7003189325332642
    2. ' i' → logprob: -0.7003189325332642
    3. ' 
' → logprob: -5.700318813323975
    4. 'i' → logprob: -6.200318813323975
    5. '  
' → logprob: -6.950318813323975
    6. '<|end|>' → logprob: -8.200319290161133
    7. '```' → logprob: -8.950319290161133
    8. '
' → logprob: -9.075319290161133
    9. '  ' → logprob: -9.700319290161133
    10. '   ' → logprob: -9.700319290161133

Token 95: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018076660111546516
    2. 'i' → logprob: -4.1430768966674805
    3. ' ' → logprob: -6.2680768966674805
    4. ' 
' → logprob: -9.51807689666748
    5. '```' → logprob: -10.01807689666748
    6. '``' → logprob: -12.14307689666748
    7. '  
' → logprob: -12.39307689666748
    8. '	i' → logprob: -12.39307689666748
    9. '  ' → logprob: -12.89307689666748
    10. ',i' → logprob: -13.26807689666748

Token 96: '+=' (ID: 18287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31541943550109863
    2. '+=' → logprob: -1.3154194355010986
    3. ' +=' → logprob: -6.1904191970825195
    4. '<|end|>' → logprob: -10.56541919708252
    5. '+="' → logprob: -10.81541919708252
    6. '=' → logprob: -11.06541919708252
    7. '+='' → logprob: -11.19041919708252
    8. '+
' → logprob: -11.31541919708252
    9. ' +' → logprob: -11.44041919708252
    10. '++' → logprob: -12.69041919708252

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '  ' → logprob: -18.375431060791016
    4. '```' → logprob: -18.500431060791016
    5. '   ' → logprob: -18.750431060791016
    6. '１' → logprob: -19.437931060791016
    7. ' ' → logprob: -19.750431060791016
    8. '+' → logprob: -20.375431060791016
    9. '۱' → logprob: -20.562931060791016
    10. '`' → logprob: -21.312931060791016

Token 98: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.046603646129369736
    2. '<|end|>' → logprob: -4.046603679656982
    3. ' 
' → logprob: -4.296603679656982
    4. '  
' → logprob: -5.296603679656982
    5. '\n' → logprob: -5.921603679656982
    6. 'print' → logprob: -6.296603679656982
    7. ' ' → logprob: -6.546603679656982
    8. '' → logprob: -7.296603679656982
    9. '#' → logprob: -7.421603679656982
    10. '```' → logprob: -7.421603679656982

Token 99: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38497573137283325
    2. '
' → logprob: -2.0099756717681885
    3. 'p' → logprob: -3.5099756717681885
    4. ' 
' → logprob: -3.5099756717681885
    5. '\n' → logprob: -3.6349756717681885
    6. '<|end|>' → logprob: -3.8849756717681885
    7. ' ' → logprob: -4.134975910186768
    8. 'n' → logprob: -4.134975910186768
    9. '#' → logprob: -4.384975910186768
    10. '  
' → logprob: -4.634975910186768

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04892207309603691
    2. ':
' → logprob: -3.048922061920166
    3. ' :' → logprob: -8.673922538757324
    4. ' :
' → logprob: -8.923922538757324
    5. '{' → logprob: -12.048922538757324
    6. ' print' → logprob: -12.298922538757324
    7. ' ' → logprob: -12.298922538757324
    8. ':

' → logprob: -12.423922538757324
    9. '  ' → logprob: -12.923922538757324
    10. ':
' → logprob: -13.423922538757324

Token 101: ' ' (ID: 220)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.0211027804762125
    2. 'print' → logprob: -3.8961026668548584
    3. ' ' → logprob: -8.271102905273438
    4. ' n' → logprob: -8.396102905273438
    5. 'n' → logprob: -10.521102905273438
    6. ' 
' → logprob: -11.021102905273438
    7. '```' → logprob: -11.521102905273438
    8. '	print' → logprob: -11.646102905273438
    9. '   ' → logprob: -12.771102905273438
    10. '<|end|>' → logprob: -12.896102905273438

Token 102: ' def' (ID: 1056)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0788986012339592
    2. ' print' → logprob: -2.5788986682891846
    3. ' ' → logprob: -12.453898429870605
    4. 'n' → logprob: -13.203898429870605
    5. ' n' → logprob: -13.703898429870605
    6. '```' → logprob: -13.828898429870605
    7. '	print' → logprob: -14.953898429870605
    8. 'printf' → logprob: -16.078899383544922
    9. '.print' → logprob: -16.328899383544922
    10. '  ' → logprob: -16.328899383544922

Token 103: ' f' (ID: 285)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10003571957349777
    2. ' print' → logprob: -2.9750356674194336
    3. ' ' → logprob: -3.3500356674194336
    4. '  ' → logprob: -6.475035667419434
    5. 'main' → logprob: -6.850035667419434
    6. 'print' → logprob: -6.975035667419434
    7. '<|end|>' → logprob: -7.100035667419434
    8. '(' → logprob: -7.100035667419434
    9. ' i' → logprob: -7.475035667419434
    10. '   ' → logprob: -7.475035667419434

Token 104: '(u' (ID: 17057)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.9080498814582825
    2. '=lambda' → logprob: -1.0330498218536377
    3. ' lambda' → logprob: -2.5330498218536377
    4. 'ilter' → logprob: -3.2830498218536377
    5. 'lambda' → logprob: -3.6580498218536377
    6. 'unct' → logprob: -4.033050060272217
    7. ' (' → logprob: -4.033050060272217
    8. 'a' → logprob: -4.783050060272217
    9. 'or' → logprob: -4.783050060272217
    10. '(x' → logprob: -4.783050060272217

Token 105: '):' (ID: 3127)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.0665549710392952
    2. ',' → logprob: -2.8165550231933594
    3. ' ,' → logprob: -5.691555023193359
    4. ',n' → logprob: -7.941555023193359
    5. ',u' → logprob: -8.06655502319336
    6. ',x' → logprob: -8.69155502319336
    7. ',a' → logprob: -8.81655502319336
    8. ',b' → logprob: -9.94155502319336
    9. ',w' → logprob: -10.44155502319336
    10. ',k' → logprob: -10.56655502319336

Token 106: 'return' (ID: 1034)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.09998557716608047
    2. ' ' → logprob: -2.8499855995178223
    3. ' u' → logprob: -4.474985599517822
    4. '   ' → logprob: -5.349985599517822
    5. 'return' → logprob: -5.349985599517822
    6. ' for' → logprob: -5.974985599517822
    7. ' 
' → logprob: -5.974985599517822
    8. '<|end|>' → logprob: -5.974985599517822
    9. ' x' → logprob: -6.599985599517822
    10. ' if' → logprob: -6.724985599517822

Token 107: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4335210621356964
    2. ' u' → logprob: -1.558521032333374
    3. 'lambda' → logprob: -3.308521032333374
    4. 'x' → logprob: -4.058521270751953
    5. ' lambda' → logprob: -4.183521270751953
    6. '0' → logprob: -4.433521270751953
    7. ' x' → logprob: -4.683521270751953
    8. ' ' → logprob: -4.683521270751953
    9. 'n' → logprob: -4.808521270751953
    10. ' n' → logprob: -5.058521270751953

Token 108: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: '(f' (ID: 1526)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014095455408096313
    2. '(len' → logprob: -4.764095306396484
    3. '(' → logprob: -5.639095306396484
    4. ' (' → logprob: -6.639095306396484
    5. '(i' → logprob: -8.014095306396484
    6. 'n' → logprob: -9.139095306396484
    7. ' n' → logprob: -10.389095306396484
    8. '()' → logprob: -10.764095306396484
    9. '(sum' → logprob: -10.764095306396484
    10. '((' → logprob: -10.889095306396484

Token 112: '(i' (ID: 3649)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002282053232192993
    2. '(len' → logprob: -6.25228214263916
    3. '(' → logprob: -9.00228214263916
    4. ' (' → logprob: -9.37728214263916
    5. '(i' → logprob: -9.37728214263916
    6. ')' → logprob: -10.12728214263916
    7. ')(' → logprob: -12.25228214263916
    8. 'len' → logprob: -12.50228214263916
    9. '((' → logprob: -12.62728214263916
    10. ' n' → logprob: -13.25228214263916

Token 113: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.032093510031700134
    2. ')' → logprob: -3.5320935249328613
    3. '+' → logprob: -6.407093524932861
    4. ' ))' → logprob: -8.407093048095703
    5. ')+' → logprob: -8.907093048095703
    6. '-' → logprob: -8.907093048095703
    7. ')))' → logprob: -9.282093048095703
    8. ' )' → logprob: -9.907093048095703
    9. '))
' → logprob: -10.532093048095703
    10. ' ' → logprob: -12.032093048095703

Token 114: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.407366916188039e-05
    2. '(' → logprob: -10.125054359436035
    3. ' ()' → logprob: -12.750054359436035
    4. '()`' → logprob: -13.000054359436035
    5. '()<' → logprob: -13.125054359436035
    6. '();' → logprob: -13.375054359436035
    7. '()]' → logprob: -13.750054359436035
    8. '()">' → logprob: -14.500054359436035
    9. '()\' → logprob: -14.875054359436035
    10. '())' → logprob: -15.000054359436035


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 113
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 82
Précision stricte (1ère position): 34.51%
Précision adaptée (1ère position): 34.51%
Précision (top 10): 72.57%
================================================================================
