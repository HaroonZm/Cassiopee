================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def calculate_maximum_cells(h, w):
    """
    Calcule le nombre maximal de cellules pouvant être choisies dans une grille h x w,
    de telle sorte qu'aucune paire choisie ne soit adjacente verticalement ou horizontalement.
    
    Si l'une des deux dimensions est 1, le résultat est toujours 1.
    Sinon, la méthode utilise la division euclidienne pour compter les cases non adjacentes.
    
    Paramètres:
        h (int): nombre de lignes de la grille.
        w (int): nombre de colonnes de la grille.
        
    Retourne:
        int: le nombre maximal de cases pouvant être choisies.
    """
    # Cas particulier : si la grille n'a qu'une ligne ou qu'une colonne, il n'y a qu'un seul choix possible
    if h == 1 or w == 1:
        return 1

    # Si la grille a plus d'une ligne et colonne,
    # on place le maximum de cases de manière qu'aucun deux ne soient adjacentes
    # Une stratégie efficace est de considérer une alternance de cases (damier)
    ans = (h // 2) * w  # On choisit une ligne sur deux (complètement)
    
    # Si le nombre de lignes est impair, il reste une ligne à traiter
    if h % 2 != 0:
        # Pour la dernière ligne :
        if w % 2 != 0:
            # Si le nombre de colonnes est impair, on peut choisir un peu plus de la moitié des colonnes
            ans += (w // 2) + 1
        else:
            # Si le nombre de colonnes est pair, on choisit la moitié des colonnes de la dernière ligne
            ans += w // 2

    return int(ans)

def main():
    """
    Fonction principale qui lit l'entrée, appelle la fonction de calcul et affiche le résultat.
    """
    # Lecture des dimensions de la grille en entrée standard
    h, w = map(int, input().split())
    
    # Calcul du nombre maximal de cases sélectionnables
    result = calculate_maximum_cells(h, w)
    
    # Affichage du résultat
    print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06772785633802414
    2. '\n' → logprob: -3.44272780418396
    3. 'import' → logprob: -3.81772780418396
    4. '<|end|>' → logprob: -5.817728042602539
    5. '\' → logprob: -6.317728042602539
    6. 'newline' → logprob: -6.692728042602539
    7. ',' → logprob: -6.942728042602539
    8. '' → logprob: -7.442728042602539
    9. '
' → logprob: -7.692728042602539
    10. '<|end|>' → logprob: -7.692728042602539

Token 4: ' calculate' (ID: 17950)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023265164345502853
    2. ' main' → logprob: -5.148265361785889
    3. ' process' → logprob: -5.898265361785889
    4. ' space' → logprob: -6.023265361785889
    5. ' sys' → logprob: -6.273265361785889
    6. ' ' → logprob: -6.273265361785889
    7. '  ' → logprob: -7.023265361785889
    8. ' a' → logprob: -7.398265361785889
    9. ' function' → logprob: -7.398265361785889
    10. ' def' → logprob: -7.523265361785889

Token 5: '_max' (ID: 13731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07186036556959152
    2. '(' → logprob: -3.1968603134155273
    3. '_total' → logprob: -4.571860313415527
    4. '_factor' → logprob: -5.571860313415527
    5. '_cal' → logprob: -6.321860313415527
    6. ' ' → logprob: -6.571860313415527
    7. '_price' → logprob: -6.696860313415527
    8. '_space' → logprob: -6.821860313415527
    9. '_sum' → logprob: -6.821860313415527
    10. ' (' → logprob: -6.946860313415527

Token 6: 'imum' (ID: 4556)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0008986006141640246
    2. '(' → logprob: -7.875898838043213
    3. ' _' → logprob: -8.875898361206055
    4. '_value' → logprob: -9.375898361206055
    5. '_space' → logprob: -10.000898361206055
    6. '_parent' → logprob: -10.000898361206055
    7. 'imum' → logprob: -10.875898361206055
    8. '_max' → logprob: -10.875898361206055
    9. '_area' → logprob: -11.250898361206055
    10. '_length' → logprob: -11.500898361206055

Token 7: '_cells' (ID: 93468)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00038169484469108284
    2. '(' → logprob: -8.500381469726562
    3. '_space' → logprob: -9.750381469726562
    4. ' _' → logprob: -10.875381469726562
    5. '_value' → logprob: -11.000381469726562
    6. '_parent' → logprob: -11.250381469726562
    7. '_max' → logprob: -12.250381469726562
    8. '_capacity' → logprob: -12.750381469726562
    9. '_depth' → logprob: -12.750381469726562
    10. '_volume' → logprob: -12.875381469726562

Token 8: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17351652681827545
    2. '_' → logprob: -2.4235165119171143
    3. '```' → logprob: -4.173516750335693
    4. '():' → logprob: -4.548516750335693
    5. '):' → logprob: -4.798516750335693
    6. '_per' → logprob: -5.423516750335693
    7. '_for' → logprob: -6.298516750335693
    8. ' (' → logprob: -6.298516750335693
    9. '_max' → logprob: -6.798516750335693
    10. '_cells' → logprob: -6.798516750335693

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.525822639465332
    2. 'e' → logprob: -1.525822639465332
    3. '):' → logprob: -2.150822639465332
    4. 'eight' → logprob: -2.775822639465332
    5. 'ight' → logprob: -4.775822639465332
    6. ',e' → logprob: -7.400822639465332
    7. ')' → logprob: -7.400822639465332
    8. 't' → logprob: -7.775822639465332
    9. '_e' → logprob: -7.775822639465332
    10. 'igh' → logprob: -7.775822639465332

Token 10: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.3135019540786743
    2. 'w' → logprob: -1.3135019540786743
    3. ' ' → logprob: -9.688502311706543
    4. ' l' → logprob: -10.188502311706543
    5. 'l' → logprob: -10.313502311706543
    6. ' t' → logprob: -11.313502311706543
    7. 't' → logprob: -11.438502311706543
    8. 's' → logprob: -11.688502311706543
    9. 'd' → logprob: -11.813502311706543
    10. 'b' → logprob: -11.938502311706543

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22781716287136078
    2. ',' → logprob: -1.602817177772522
    3. ')' → logprob: -6.102817058563232
    4. ':' → logprob: -10.10281753540039
    5. '):
' → logprob: -10.10281753540039
    6. ' ,' → logprob: -10.97781753540039
    7. '*' → logprob: -10.97781753540039
    8. ''):' → logprob: -11.85281753540039
    9. ' ):' → logprob: -11.97781753540039
    10. ',
' → logprob: -12.35281753540039

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3971165418624878
    2. ':' → logprob: -1.1471165418624878
    3. ':
' → logprob: -5.772116661071777
    4. '```' → logprob: -6.147116661071777
    5. '    ' → logprob: -6.772116661071777
    6. '    
' → logprob: -7.397116661071777
    7. 'max' → logprob: -7.772116661071777
    8. '):' → logprob: -7.897116661071777
    9. ' cells' → logprob: -8.397116661071777
    10. ':return' → logprob: -8.522116661071777

Token 13: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24353362619876862
    2. '\' → logprob: -2.4935336112976074
    3. '\n' → logprob: -3.3685336112976074
    4. '    
' → logprob: -3.7435336112976074
    5. '```' → logprob: -3.8685336112976074
    6. '    ' → logprob: -4.368533611297607
    7. ' 
' → logprob: -4.493533611297607
    8. 'return' → logprob: -5.368533611297607
    9. '       ' → logprob: -5.493533611297607
    10. '     
' → logprob: -5.493533611297607

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11067439615726471
    2. '#' → logprob: -3.6106743812561035
    3. '"""' → logprob: -3.9856743812561035
    4. '    ' → logprob: -4.3606743812561035
    5. ' """' → logprob: -4.6106743812561035
    6. ' ' → logprob: -5.3606743812561035
    7. ' """
' → logprob: -5.7356743812561035
    8. 'Calculate' → logprob: -5.7356743812561035
    9. 'max' → logprob: -5.9856743812561035
    10. ' max' → logprob: -6.2356743812561035

Token 15: ' Cal' (ID: 4453)
  Prédit: ' """'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' """' → logprob: -1.4746791124343872
    2. ' Calculate' → logprob: -2.0996789932250977
    3. ' """
' → logprob: -2.2246789932250977
    4. '"""' → logprob: -2.3496789932250977
    5. '   ' → logprob: -2.4746789932250977
    6. 'Calculate' → logprob: -2.5996789932250977
    7. '#' → logprob: -2.5996789932250977
    8. ' max' → logprob: -3.3496789932250977
    9. ' The' → logprob: -3.4746789932250977
    10. 'max' → logprob: -4.099678993225098

Token 16: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.261075884103775
    2. 'cul' → logprob: -1.5110758543014526
    3. '   ' → logprob: -5.386075973510742
    4. 'cula' → logprob: -6.761075973510742
    5. 'culated' → logprob: -7.261075973510742
    6. 'c' → logprob: -7.511075973510742
    7. 'cu' → logprob: -7.511075973510742
    8. 'cule' → logprob: -7.636075973510742
    9. 'cular' → logprob: -8.011075973510742
    10. 'culation' → logprob: -8.886075973510742

Token 17: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019057857571169734
    2. 'te' → logprob: -7.001905918121338
    3. 'rate' → logprob: -7.501905918121338
    4. 'ra' → logprob: -9.50190544128418
    5. 'late' → logprob: -9.50190544128418
    6. 'ate' → logprob: -9.87690544128418
    7. 'rated' → logprob: -10.12690544128418
    8. 's' → logprob: -10.25190544128418
    9. 'd' → logprob: -10.62690544128418
    10. '```' → logprob: -10.87690544128418

Token 18: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.01608363911509514
    2. 'nombre' → logprob: -4.891083717346191
    3. ' maximum' → logprob: -5.016083717346191
    4. '   ' → logprob: -7.391083717346191
    5. ' ' → logprob: -7.641083717346191
    6. 's' → logprob: -8.891083717346191
    7. 'maximum' → logprob: -9.016083717346191
    8. ' nombres' → logprob: -9.266083717346191
    9. '_nombre' → logprob: -9.516083717346191
    10. '  ' → logprob: -9.516083717346191

Token 19: ' maximal' (ID: 65414)
  Prédit: ' maximal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximal' → logprob: -0.49299854040145874
    2. ' de' → logprob: -2.2429986000061035
    3. ' maximum' → logprob: -2.3679986000061035
    4. '_' → logprob: -2.6179986000061035
    5. ' ' → logprob: -3.2429986000061035
    6. ' d' → logprob: -3.6179986000061035
    7. ' maximale' → logprob: -4.3679986000061035
    8. '   ' → logprob: -4.7429986000061035
    9. '  ' → logprob: -5.1179986000061035
    10. 'maximum' → logprob: -5.1179986000061035

Token 20: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.32248613238334656
    2. ' d' → logprob: -1.947486162185669
    3. 'de' → logprob: -2.572486162185669
    4. 'd' → logprob: -3.322486162185669
    5. ' ' → logprob: -4.07248592376709
    6. '_' → logprob: -6.32248592376709
    7. '_de' → logprob: -7.57248592376709
    8. '  ' → logprob: -7.82248592376709
    9. '   ' → logprob: -8.44748592376709
    10. '```' → logprob: -8.69748592376709

Token 21: ' cellules' (ID: 134342)
  Prédit: ' cellules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cellules' → logprob: -0.0980047881603241
    2. ' cells' → logprob: -3.4730048179626465
    3. 'cases' → logprob: -4.2230048179626465
    4. ' cases' → logprob: -4.3480048179626465
    5. 'cells' → logprob: -4.4730048179626465
    6. 'cell' → logprob: -5.0980048179626465
    7. ' ' → logprob: -5.2230048179626465
    8. ' cell' → logprob: -5.9730048179626465
    9. ' cellule' → logprob: -6.4730048179626465
    10. 'c' → logprob: -6.5980048179626465

Token 22: ' pouvant' (ID: 104840)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06456801295280457
    2. '_' → logprob: -3.564568042755127
    3. '```' → logprob: -4.939568042755127
    4. ' utilis' → logprob: -5.439568042755127
    5. '   ' → logprob: -5.564568042755127
    6. ' that' → logprob: -5.814568042755127
    7. ' que' → logprob: -6.064568042755127
    8. ' à' → logprob: -6.064568042755127
    9. ' pouvant' → logprob: -6.314568042755127
    10. ',' → logprob: -6.689568042755127

Token 23: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.16589803993701935
    2. 'être' → logprob: -2.165898084640503
    3. ' be' → logprob: -4.540897846221924
    4. ' ' → logprob: -4.540897846221924
    5. ' accueillir' → logprob: -5.665897846221924
    6. ' etre' → logprob: -6.040897846221924
    7. ' remplir' → logprob: -6.290897846221924
    8. 'êtres' → logprob: -6.665897846221924
    9. '```' → logprob: -6.915897846221924
    10. ' ' → logprob: -7.165897846221924

Token 24: ' chois' (ID: 33475)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.8624265789985657
    2. 'occup' → logprob: -1.487426519393921
    3. 'vis' → logprob: -2.612426519393921
    4. ' occup' → logprob: -2.987426519393921
    5. 'plac' → logprob: -3.362426519393921
    6. ' color' → logprob: -3.487426519393921
    7. ' plac' → logprob: -3.487426519393921
    8. 'color' → logprob: -3.612426519393921
    9. ' rem' → logprob: -3.862426519393921
    10. '```' → logprob: -4.4874267578125

Token 25: 'ies' (ID: 566)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.052713554352521896
    2. 'ies' → logprob: -3.177713632583618
    3. 's' → logprob: -4.677713394165039
    4. 'e' → logprob: -9.177713394165039
    5. ' ' → logprob: -9.802713394165039
    6. '"' → logprob: -10.302713394165039
    7. 'i' → logprob: -10.302713394165039
    8. '```' → logprob: -10.302713394165039
    9. '"""' → logprob: -11.552713394165039
    10. '   ' → logprob: -11.552713394165039

Token 26: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9326378107070923
    2. ' en' → logprob: -1.5576378107070923
    3. ',' → logprob: -1.8076378107070923
    4. ' dans' → logprob: -2.3076376914978027
    5. ' tout' → logprob: -3.1826376914978027
    6. '.' → logprob: -3.9326376914978027
    7. ' sans' → logprob: -4.307637691497803
    8. '```' → logprob: -4.557637691497803
    9. ' d' → logprob: -5.182637691497803
    10. '   ' → logprob: -5.307637691497803

Token 27: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.397493451833725
    2. ' un' → logprob: -1.2724934816360474
    3. ' la' → logprob: -3.897493362426758
    4. '   ' → logprob: -4.772493362426758
    5. 'une' → logprob: -5.272493362426758
    6. ' le' → logprob: -5.522493362426758
    7. ' ' → logprob: -5.897493362426758
    8. ' ' → logprob: -6.022493362426758
    9. 'un' → logprob: -6.647493362426758
    10. 'l' → logprob: -7.272493362426758

Token 28: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.10473199188709259
    2. 'gr' → logprob: -2.979732036590576
    3. 'ligne' → logprob: -4.729732036590576
    4. '   ' → logprob: -4.979732036590576
    5. ' zone' → logprob: -4.979732036590576
    6. ' cellule' → logprob: -5.104732036590576
    7. ' case' → logprob: -5.729732036590576
    8. 'case' → logprob: -5.979732036590576
    9. 'zone' → logprob: -6.104732036590576
    10. ' ligne' → logprob: -6.604732036590576

Token 29: ' h' (ID: 312)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6966438889503479
    2. ' en' → logprob: -2.321643829345703
    3. ' sans' → logprob: -2.446643829345703
    4. '```' → logprob: -2.696643829345703
    5. '   ' → logprob: -2.821643829345703
    6. ',' → logprob: -2.821643829345703
    7. ' ' → logprob: -3.571643829345703
    8. ' telle' → logprob: -3.821643829345703
    9. ' afin' → logprob: -4.071643829345703
    10. ' avec' → logprob: -4.321643829345703

Token 30: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7540628910064697
    2. ' x' → logprob: -1.0040628910064697
    3. '   ' → logprob: -2.7540628910064697
    4. ' *' → logprob: -2.8790628910064697
    5. '*' → logprob: -4.004062652587891
    6. 'x' → logprob: -4.254062652587891
    7. ' ' → logprob: -6.129062652587891
    8. ' et' → logprob: -6.379062652587891
    9. ' ×' → logprob: -6.504062652587891
    10. ' ,' → logprob: -6.754062652587891

Token 31: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.577244758605957
    2. 'w' → logprob: -0.827244758605957
    3. ' ' → logprob: -6.702244758605957
    4. ' ' → logprob: -9.952244758605957
    5. '   ' → logprob: -11.577244758605957
    6. '  ' → logprob: -12.452244758605957
    7. '```' → logprob: -12.577244758605957
    8. '	w' → logprob: -13.139744758605957
    9. ' ' → logprob: -13.577244758605957
    10. '2' → logprob: -14.202244758605957

Token 32: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0572562217712402
    2. '   ' → logprob: -1.3072562217712402
    3. '```' → logprob: -1.9322562217712402
    4. ' en' → logprob: -2.0572562217712402
    5. ')' → logprob: -3.3072562217712402
    6. ' ,' → logprob: -3.9322562217712402
    7. ' ' → logprob: -4.68225622177124
    8. '.' → logprob: -4.68225622177124
    9. ' )' → logprob: -5.05725622177124
    10. ' avec' → logprob: -5.43225622177124

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7351647615432739
    2. ' en' → logprob: -1.110164761543274
    3. ' tout' → logprob: -2.4851646423339844
    4. ' sans' → logprob: -2.7351646423339844
    5. ' ' → logprob: -4.235164642333984
    6. ' ' → logprob: -4.985164642333984
    7. '```' → logprob: -5.610164642333984
    8. '    ' → logprob: -5.985164642333984
    9. ' afin' → logprob: -6.610164642333984
    10. ' avec' → logprob: -6.735164642333984

Token 34: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8271767497062683
    2. ' en' → logprob: -0.8271767497062683
    3. ' tout' → logprob: -2.827176809310913
    4. ' sans' → logprob: -3.202176809310913
    5. ' ' → logprob: -4.452176570892334
    6. '   ' → logprob: -6.202176570892334
    7. 'sans' → logprob: -6.702176570892334
    8. ' avec' → logprob: -6.827176570892334
    9. 'tout' → logprob: -6.952176570892334
    10. ' et' → logprob: -7.077176570892334

Token 35: ' telle' (ID: 70904)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.14993791282176971
    2. 'fa' → logprob: -2.899937868118286
    3. ' manière' → logprob: -3.399937868118286
    4. ' façon' → logprob: -4.399938106536865
    5. ' man' → logprob: -4.524938106536865
    6. ' telle' → logprob: -4.524938106536865
    7. 'ma' → logprob: -6.149938106536865
    8. 'f' → logprob: -6.399938106536865
    9. 't' → logprob: -6.524938106536865
    10. 'm' → logprob: -6.524938106536865

Token 36: ' sorte' (ID: 37800)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0020384788513184
    2. 'man' → logprob: -1.3770384788513184
    3. ' sorte' → logprob: -1.6270384788513184
    4. 's' → logprob: -2.8770384788513184
    5. ' manière' → logprob: -3.0020384788513184
    6. '  ' → logprob: -3.8770384788513184
    7. ' façon' → logprob: -4.002038478851318
    8. ' man' → logprob: -4.877038478851318
    9. '   ' → logprob: -4.877038478851318
    10. ' ' → logprob: -5.127038478851318

Token 37: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.011032849550247192
    2. 'que' → logprob: -5.386033058166504
    3. ' qu' → logprob: -5.761033058166504
    4. 'qu' → logprob: -5.886033058166504
    5. ' ' → logprob: -8.011033058166504
    6. ' that' → logprob: -10.011033058166504
    7. '   ' → logprob: -10.261033058166504
    8. '  ' → logprob: -11.386033058166504
    9. ' ' → logprob: -11.386033058166504
    10. ' à' → logprob: -11.511033058166504

Token 38: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2515585422515869
    2. 'auc' → logprob: -2.001558542251587
    3. ''il' → logprob: -3.376558542251587
    4. 'qu' → logprob: -3.501558542251587
    5. ' aucune' → logprob: -4.626558303833008
    6. 'e' → logprob: -6.376558303833008
    7. ''elles' → logprob: -6.376558303833008
    8. ' aucun' → logprob: -6.626558303833008
    9. 'il' → logprob: -6.751558303833008
    10. ' qu' → logprob: -7.001558303833008

Token 39: 'auc' (ID: 11816)
  Prédit: 'auc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auc' → logprob: -0.4710083603858948
    2. ' aucune' → logprob: -2.09600830078125
    3. 'qu' → logprob: -3.09600830078125
    4. '   ' → logprob: -3.09600830078125
    5. ''il' → logprob: -3.22100830078125
    6. ''' → logprob: -3.97100830078125
    7. 'il' → logprob: -3.97100830078125
    8. 'que' → logprob: -3.97100830078125
    9. '```' → logprob: -3.97100830078125
    10. ' aucun' → logprob: -5.22100830078125

Token 40: 'une' (ID: 2561)
  Prédit: 'une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.006200503092259169
    2. 'un' → logprob: -5.256200313568115
    3. 'auc' → logprob: -7.506200313568115
    4. 'qu' → logprob: -8.631200790405273
    5. 'que' → logprob: -9.006200790405273
    6. 'unes' → logprob: -10.756200790405273
    7. '```' → logprob: -11.006200790405273
    8. 'e' → logprob: -11.131200790405273
    9. 'n' → logprob: -11.631200790405273
    10. '
' → logprob: -11.631200790405273

Token 41: ' paire' (ID: 148856)
  Prédit: ' cellule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cellule' → logprob: -0.7334128022193909
    2. ' ' → logprob: -0.9834128022193909
    3. ' deux' → logprob: -2.608412742614746
    4. ' two' → logprob: -2.858412742614746
    5. ' cell' → logprob: -5.358412742614746
    6. ' case' → logprob: -5.608412742614746
    7. 'de' → logprob: -6.108412742614746
    8. ' ligne' → logprob: -6.233412742614746
    9. ' cellules' → logprob: -7.358412742614746
    10. ' cells' → logprob: -8.108412742614746

Token 42: ' chois' (ID: 33475)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.02045978419482708
    2. 'ies' → logprob: -4.7704596519470215
    3. 'i' → logprob: -5.3954596519470215
    4. '   ' → logprob: -6.5204596519470215
    5. 'e' → logprob: -6.8954596519470215
    6. '#' → logprob: -7.1454596519470215
    7. 'ise' → logprob: -7.7704596519470215
    8. '```' → logprob: -7.7704596519470215
    9. '**' → logprob: -8.52046012878418
    10. '       ' → logprob: -8.64546012878418

Token 44: ' ne' (ID: 453)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.04484255984425545
    2. 'de' → logprob: -4.044842720031738
    3. ' ' → logprob: -4.919842720031738
    4. ' n' → logprob: -4.919842720031738
    5. ' ne' → logprob: -4.919842720031738
    6. '<|end|>' → logprob: -6.419842720031738
    7. 'n' → logprob: -7.419842720031738
    8. ' d' → logprob: -7.669842720031738
    9. 'd' → logprob: -8.294842720031738
    10. ' cells' → logprob: -8.544842720031738

Token 45: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.17012016475200653
    2. ' partage' → logprob: -2.4201202392578125
    3. ' soient' → logprob: -3.7951202392578125
    4. ' part' → logprob: -3.9201202392578125
    5. 'so' → logprob: -4.9201202392578125
    6. 's' → logprob: -5.0451202392578125
    7. 'part' → logprob: -5.7951202392578125
    8. ' se' → logprob: -6.1701202392578125
    9. ' so' → logprob: -6.2951202392578125
    10. 'adj' → logprob: -6.6701202392578125

Token 46: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.014850820414721966
    2. ' adj' → logprob: -4.889850616455078
    3. ' adjacent' → logprob: -6.389850616455078
    4. 'ad' → logprob: -6.764850616455078
    5. ' ' → logprob: -7.514850616455078
    6. 'cont' → logprob: -7.639850616455078
    7. 'vo' → logprob: -7.764850616455078
    8. 'à' → logprob: -7.764850616455078
    9. 'dans' → logprob: -8.014850616455078
    10. '```' → logprob: -8.014850616455078

Token 47: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0676904246211052
    2. 'a' → logprob: -3.067690372467041
    3. 'acent' → logprob: -4.192690372467041
    4. 'acency' → logprob: -6.067690372467041
    5. 'cente' → logprob: -7.942690372467041
    6. '	ac' → logprob: -8.8176908493042
    7. ' a' → logprob: -8.9426908493042
    8. 'ace' → logprob: -9.1926908493042
    9. ' ac' → logprob: -9.4426908493042
    10. 'acen' → logprob: -9.4426908493042

Token 48: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.5191927552223206
    2. 'e' → logprob: -1.0191926956176758
    3. 'ent' → logprob: -3.144192695617676
    4. 'nte' → logprob: -7.894192695617676
    5. 'entes' → logprob: -8.269192695617676
    6. 'ante' → logprob: -9.644192695617676
    7. ' e' → logprob: -9.894192695617676
    8. 't' → logprob: -10.019192695617676
    9. 'ents' → logprob: -10.019192695617676
    10. '#' → logprob: -10.644192695617676

Token 49: ' vertical' (ID: 17679)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9887369275093079
    2. 'e' → logprob: -1.113736867904663
    3. ',' → logprob: -2.488736867904663
    4. '.
' → logprob: -2.488736867904663
    5. ' ' → logprob: -2.738736867904663
    6. '"""
' → logprob: -4.363737106323242
    7. ' (' → logprob: -4.613737106323242
    8. '   ' → logprob: -5.363737106323242
    9. '```' → logprob: -5.488737106323242
    10. ',
' → logprob: -5.488737106323242

Token 50: 'ement' (ID: 962)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.18879027664661407
    2. 'ement' → logprob: -1.8137903213500977
    3. 'es' → logprob: -4.813790321350098
    4. ' e' → logprob: -7.813790321350098
    5. '   ' → logprob: -9.063790321350098
    6. ' ' → logprob: -9.563790321350098
    7. '```' → logprob: -9.563790321350098
    8. '_' → logprob: -10.313790321350098
    9. 'EMENT' → logprob: -10.688790321350098
    10. ',e' → logprob: -11.188790321350098

Token 51: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.8962144255638123
    2. '   ' → logprob: -1.521214485168457
    3. ' ' → logprob: -1.646214485168457
    4. ',' → logprob: -2.271214485168457
    5. 'ou' → logprob: -4.021214485168457
    6. ' or' → logprob: -4.146214485168457
    7. '  ' → logprob: -4.396214485168457
    8. ')' → logprob: -4.896214485168457
    9. '    ' → logprob: -5.271214485168457
    10. 'e' → logprob: -5.771214485168457

Token 52: ' horizontal' (ID: 25511)
  Prédit: ' horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.03913559392094612
    2. 'horizontal' → logprob: -3.539135694503784
    3. ' horizont' → logprob: -5.164135456085205
    4. '_horizontal' → logprob: -6.164135456085205
    5. ' горизонт' → logprob: -8.164135932922363
    6. 'orizontal' → logprob: -8.289135932922363
    7. ' horiz' → logprob: -8.289135932922363
    8. ' horizontally' → logprob: -8.539135932922363
    9. ' ' → logprob: -8.539135932922363
    10. '_' → logprob: -9.664135932922363

Token 53: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0001239196863025427
    2. 'e' → logprob: -9.375123977661133
    3. '```' → logprob: -11.250123977661133
    4. 'EMENT' → logprob: -12.125123977661133
    5. 'ment' → logprob: -12.625123977661133
    6. '   ' → logprob: -12.750123977661133
    7. ' ' → logprob: -12.875123977661133
    8. 'lement' → logprob: -13.125123977661133
    9. 'rement' → logprob: -13.375123977661133
    10. ' e' → logprob: -13.875123977661133

Token 54: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3878740072250366
    2. '   ' → logprob: -1.7628740072250366
    3. '.' → logprob: -2.262874126434326
    4. ',' → logprob: -3.637874126434326
    5. '):' → logprob: -4.512874126434326
    6. ' :' → logprob: -5.137874126434326
    7. ':
' → logprob: -7.262874126434326
    8. ' ' → logprob: -7.262874126434326
    9. ')' → logprob: -7.887874126434326
    10. '```' → logprob: -8.637873649597168

Token 55: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005264613428153098
    2. '```' → logprob: -8.625526428222656
    3. '    
' → logprob: -8.750526428222656
    4. '
' → logprob: -10.125526428222656
    5. '\n' → logprob: -10.125526428222656
    6. ')' → logprob: -10.750526428222656
    7. '"""' → logprob: -11.000526428222656
    8. '   
' → logprob: -11.250526428222656
    9. '"""
' → logprob: -11.375526428222656
    10. 'n' → logprob: -11.750526428222656

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004641544655896723
    2. '"""' → logprob: -8.25046443939209
    3. '```' → logprob: -10.00046443939209
    4. ' """' → logprob: -10.00046443939209
    5. ')' → logprob: -10.37546443939209
    6. '    ' → logprob: -10.62546443939209
    7. '    
' → logprob: -11.50046443939209
    8. '
' → logprob: -11.62546443939209
    9. ' """
' → logprob: -11.75046443939209
    10. '#' → logprob: -12.00046443939209

Token 57: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002580178203061223
    2. '```' → logprob: -7.377580165863037
    3. ' if' → logprob: -7.752580165863037
    4. 'max' → logprob: -8.127580642700195
    5. ' max' → logprob: -8.252580642700195
    6. '#' → logprob: -8.377580642700195
    7. '    ' → logprob: -8.752580642700195
    8. 'n' → logprob: -9.002580642700195
    9. ' #' → logprob: -10.252580642700195
    10. '    
' → logprob: -10.252580642700195

Token 58: ' l' (ID: 305)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.056672412902116776
    2. 'h' → logprob: -2.9316723346710205
    3. ' l' → logprob: -7.4316725730896
    4. ' (' → logprob: -7.9316725730896
    5. ' le' → logprob: -8.806672096252441
    6. ' ' → logprob: -8.931672096252441
    7. ' __' → logprob: -9.306672096252441
    8. '(h' → logprob: -9.431672096252441
    9. ' la' → logprob: -9.556672096252441
    10. 'l' → logprob: -9.681672096252441

Token 59: ''une' (ID: 13337)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.5399172902107239
    2. ' h' → logprob: -2.039917230606079
    3. 'h' → logprob: -3.039917230606079
    4. 'e' → logprob: -3.039917230606079
    5. ''h' → logprob: -3.539917230606079
    6. '   ' → logprob: -3.914917230606079
    7. ''' → logprob: -3.914917230606079
    8. 'es' → logprob: -4.539917469024658
    9. ' sys' → logprob: -4.914917469024658
    10. ' '' → logprob: -5.164917469024658

Token 60: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.01293349638581276
    2. 'des' → logprob: -4.512933731079102
    3. ' de' → logprob: -6.887933731079102
    4. 'au' → logprob: -8.512933731079102
    5. 'de' → logprob: -9.012933731079102
    6. ' ' → logprob: -9.387933731079102
    7. '   ' → logprob: -9.512933731079102
    8. 'def' → logprob: -9.637933731079102
    9. ' ou' → logprob: -9.887933731079102
    10. ' au' → logprob: -9.887933731079102

Token 61: ' deux' (ID: 10301)
  Prédit: 'dimensions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dimensions' → logprob: -0.06187524273991585
    2. ' dimensions' → logprob: -3.311875343322754
    3. '   ' → logprob: -4.561875343322754
    4. 'de' → logprob: -5.061875343322754
    5. 'dim' → logprob: -5.811875343322754
    6. ' deux' → logprob: -6.436875343322754
    7. ' ' → logprob: -6.561875343322754
    8. 'dimension' → logprob: -8.311875343322754
    9. '2' → logprob: -9.186875343322754
    10. 'd' → logprob: -9.436875343322754

Token 62: ' dimensions' (ID: 23995)
  Prédit: ' dimensions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dimensions' → logprob: -0.28692811727523804
    2. 'dimensions' → logprob: -1.5369281768798828
    3. ' dimension' → logprob: -4.411928176879883
    4. 'dimension' → logprob: -5.036928176879883
    5. 'dim' → logprob: -5.161928176879883
    6. '   ' → logprob: -5.786928176879883
    7. ' dim' → logprob: -6.661928176879883
    8. ' dimens' → logprob: -6.911928176879883
    9. 'd' → logprob: -6.911928176879883
    10. ' is' → logprob: -7.036928176879883

Token 63: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.1358541250228882
    2. ' <=' → logprob: -1.2608541250228882
    3. ' est' → logprob: -1.2608541250228882
    4. ' <' → logprob: -3.2608542442321777
    5. ' ' → logprob: -3.5108542442321777
    6. '   ' → logprob: -4.135854244232178
    7. '==' → logprob: -4.510854244232178
    8. 'est' → logprob: -5.135854244232178
    9. '<=' → logprob: -6.135854244232178
    10. ' de' → logprob: -6.260854244232178

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6574291586875916
    2. ' inf' → logprob: -1.2824292182922363
    3. ' ' → logprob: -2.5324292182922363
    4. ' ég' → logprob: -3.0324292182922363
    5. 'inf' → logprob: -3.1574292182922363
    6. '0' → logprob: -3.7824292182922363
    7. ' n' → logprob: -5.907429218292236
    8. '   ' → logprob: -6.282429218292236
    9. ' imp' → logprob: -7.032429218292236
    10. 'ég' → logprob: -7.282429218292236

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33346086740493774
    2. '0' → logprob: -1.583460807800293
    3. 'inf' → logprob: -3.083460807800293
    4. 'ég' → logprob: -3.583460807800293
    5. ' ég' → logprob: -6.583460807800293
    6. ' ' → logprob: -6.708460807800293
    7. 'égal' → logprob: -7.333460807800293
    8. 'n' → logprob: -7.958460807800293
    9. '```' → logprob: -8.458460807800293
    10. 'eg' → logprob: -9.208460807800293

Token 66: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18730896711349487
    2. ',' → logprob: -1.9373090267181396
    3. ':
' → logprob: -4.0623087882995605
    4. ' :' → logprob: -4.8123087882995605
    5. '   ' → logprob: -7.4373087882995605
    6. ' :
' → logprob: -7.9373087882995605
    7. ' ,' → logprob: -8.687309265136719
    8. ':return' → logprob: -9.437309265136719
    9. ',
' → logprob: -10.187309265136719
    10. ' et' → logprob: -10.687309265136719

Token 67: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013722550123929977
    2. ' return' → logprob: -4.8887224197387695
    3. '    ' → logprob: -5.5137224197387695
    4. 'return' → logprob: -7.3887224197387695
    5. ' ' → logprob: -8.13872241973877
    6. '    
' → logprob: -8.13872241973877
    7. '  ' → logprob: -8.88872241973877
    8. '   ' → logprob: -9.01372241973877
    9. '  ' → logprob: -9.13872241973877
    10. '   ' → logprob: -9.51372241973877

Token 68: ' résultat' (ID: 62556)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1835185289382935
    2. ' nombre' → logprob: -1.5585185289382935
    3. ' return' → logprob: -1.6835185289382935
    4. 'return' → logprob: -1.6835185289382935
    5. 'nombre' → logprob: -3.558518409729004
    6. ' maximum' → logprob: -3.683518409729004
    7. ' résultat' → logprob: -4.058518409729004
    8. 'max' → logprob: -4.808518409729004
    9. 'r' → logprob: -5.433518409729004
    10. ' max' → logprob: -5.558518409729004

Token 69: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.8694363236427307
    2. ' =' → logprob: -0.9944363236427307
    3. ' ' → logprob: -2.494436264038086
    4. '=' → logprob: -2.619436264038086
    5. 's' → logprob: -4.369436264038086
    6. ' vaut' → logprob: -4.869436264038086
    7. ' sera' → logprob: -4.994436264038086
    8. ' ' → logprob: -5.494436264038086
    9. ':' → logprob: -5.619436264038086
    10. ' is' → logprob: -5.744436264038086

Token 70: ' toujours' (ID: 16867)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.09209412336349487
    2. ' max' → logprob: -2.8420941829681396
    3. 'h' → logprob: -4.2170939445495605
    4. ' (' → logprob: -4.7170939445495605
    5. ' ' → logprob: -6.0920939445495605
    6. 'max' → logprob: -6.0920939445495605
    7. '(h' → logprob: -7.9670939445495605
    8. '   ' → logprob: -8.592094421386719
    9. ' l' → logprob: -8.717094421386719
    10. ' min' → logprob: -8.717094421386719

Token 71: ' ' (ID: 220)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.10098692029714584
    2. 'h' → logprob: -2.350986957550049
    3. ' max' → logprob: -8.22598648071289
    4. ' ' → logprob: -8.35098648071289
    5. 'max' → logprob: -9.47598648071289
    6. ' (' → logprob: -10.10098648071289
    7. '   ' → logprob: -10.22598648071289
    8. '1' → logprob: -10.47598648071289
    9. ' l' → logprob: -10.85098648071289
    10. '    ' → logprob: -11.47598648071289

Token 72: '1' (ID: 16)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.014678741805255413
    2. ' h' → logprob: -4.764678955078125
    3. 'max' → logprob: -5.264678955078125
    4. ' max' → logprob: -7.889678955078125
    5. '(h' → logprob: -8.639678955078125
    6. '1' → logprob: -8.639678955078125
    7. ' (' → logprob: -9.514678955078125
    8. ' ' → logprob: -10.639678955078125
    9. 'w' → logprob: -11.264678955078125
    10. '(max' → logprob: -11.389678955078125

Token 73: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.78629070520401
    2. '   ' → logprob: -0.91129070520401
    3. '
' → logprob: -3.0362906455993652
    4. ',' → logprob: -3.5362906455993652
    5. '    
' → logprob: -4.411290645599365
    6. '.' → logprob: -4.536290645599365
    7. ':
' → logprob: -4.661290645599365
    8. ' 
' → logprob: -4.786290645599365
    9. '\n' → logprob: -5.661290645599365
    10. '   
' → logprob: -5.911290645599365

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03035259060561657
    2. '    
' → logprob: -4.030352592468262
    3. '
' → logprob: -5.405352592468262
    4. '\n' → logprob: -6.405352592468262
    5. ':' → logprob: -6.655352592468262
    6. '   
' → logprob: -6.780352592468262
    7. '  
' → logprob: -7.530352592468262
    8. ' 
' → logprob: -7.530352592468262
    9. '\' → logprob: -7.655352592468262
    10. ',' → logprob: -7.780352592468262

Token 75: ' Sinon' (ID: 154924)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05918043851852417
    2. '
' → logprob: -3.559180498123169
    3. '    
' → logprob: -3.934180498123169
    4. '   
' → logprob: -5.93418025970459
    5. '\n' → logprob: -6.05918025970459
    6. ' 
' → logprob: -6.43418025970459
    7. '  
' → logprob: -6.68418025970459
    8. '\' → logprob: -7.68418025970459
    9. '     
' → logprob: -8.43418025970459
    10. '```' → logprob: -8.93418025970459

Token 76: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05887376889586449
    2. ':' → logprob: -2.9338736534118652
    3. ',' → logprob: -5.808873653411865
    4. '    
' → logprob: -8.683874130249023
    5. ' :' → logprob: -8.808874130249023
    6. ':
' → logprob: -9.058874130249023
    7. 'n' → logprob: -9.808874130249023
    8. '  ' → logprob: -9.808874130249023
    9. '    ' → logprob: -9.933874130249023
    10. '
' → logprob: -10.058874130249023

Token 77: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03877098858356476
    2. ' return' → logprob: -3.413770914077759
    3. 'return' → logprob: -6.163771152496338
    4. '   ' → logprob: -7.538771152496338
    5. '    ' → logprob: -7.788771152496338
    6. ' ' → logprob: -7.913771152496338
    7. '   ' → logprob: -8.03877067565918
    8. ' max' → logprob: -8.28877067565918
    9. '    
' → logprob: -9.03877067565918
    10. '  ' → logprob: -9.03877067565918

Token 78: ' méthode' (ID: 71490)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.1535828113555908
    2. '   ' → logprob: -1.4035828113555908
    3. 'r' → logprob: -2.278582811355591
    4. 'return' → logprob: -2.403582811355591
    5. ' result' → logprob: -2.903582811355591
    6. 's' → logprob: -3.278582811355591
    7. ' résultat' → logprob: -3.903582811355591
    8. 'result' → logprob: -4.028582572937012
    9. ' resultat' → logprob: -4.278582572937012
    10. 'ret' → logprob: -4.278582572937012

Token 79: ' utilise' (ID: 70283)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2862488627433777
    2. ':' → logprob: -2.2862489223480225
    3. '   ' → logprob: -2.7862489223480225
    4. '_' → logprob: -4.286248683929443
    5. 's' → logprob: -4.286248683929443
    6. 'n' → logprob: -4.411248683929443
    7. ' return' → logprob: -4.536248683929443
    8. ',' → logprob: -5.536248683929443
    9. ' 
' → logprob: -5.536248683929443
    10. '.' → logprob: -6.161248683929443

Token 80: ' la' (ID: 557)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.21829041838645935
    2. ' la' → logprob: -2.468290328979492
    3. ' le' → logprob: -3.718290328979492
    4. ' ' → logprob: -3.843290328979492
    5. '(' → logprob: -4.468290328979492
    6. ' un' → logprob: -4.718290328979492
    7. ' l' → logprob: -4.843290328979492
    8. '    ' → logprob: -5.218290328979492
    9. '   ' → logprob: -5.218290328979492
    10. ' une' → logprob: -5.593290328979492

Token 81: ' division' (ID: 21629)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9366127848625183
    2. '```' → logprob: -2.561612844467163
    3. '(' → logprob: -2.811612844467163
    4. '   ' → logprob: -3.061612844467163
    5. 's' → logprob: -3.186612844467163
    6. 'b' → logprob: -3.436612844467163
    7. 'form' → logprob: -3.436612844467163
    8. 'm' → logprob: -3.436612844467163
    9. ' formule' → logprob: -3.561612844467163
    10. ' ' → logprob: -3.811612844467163

Token 82: ' eu' (ID: 5658)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1938614398241043
    2. '   ' → logprob: -2.318861484527588
    3. ' ' → logprob: -3.943861484527588
    4. ',' → logprob: -4.193861484527588
    5. '    ' → logprob: -4.693861484527588
    6. ')' → logprob: -5.318861484527588
    7. '_ent' → logprob: -5.318861484527588
    8. '_par' → logprob: -5.943861484527588
    9. '_floor' → logprob: -6.318861484527588
    10. ' _' → logprob: -6.568861484527588

Token 83: 'clid' (ID: 156121)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.38572654128074646
    2. 'clid' → logprob: -1.6357265710830688
    3. 'cl' → logprob: -2.2607264518737793
    4. 'clidean' → logprob: -4.135726451873779
    5. 'q' → logprob: -6.385726451873779
    6. '```' → logprob: -6.760726451873779
    7. 'cli' → logprob: -7.635726451873779
    8. 'clé' → logprob: -7.760726451873779
    9. 'culaire' → logprob: -8.635726928710938
    10. '   ' → logprob: -9.135726928710938

Token 84: 'ienne' (ID: 18387)
  Prédit: 'ienne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ienne' → logprob: -0.9118694067001343
    2. 'e' → logprob: -1.2868694067001343
    3. 'enne' → logprob: -1.2868694067001343
    4. 'é' → logprob: -3.536869525909424
    5. '```' → logprob: -6.036869525909424
    6. 'een' → logprob: -6.411869525909424
    7. 'n' → logprob: -6.536869525909424
    8. 'en' → logprob: -6.536869525909424
    9. 'ene' → logprob: -7.036869525909424
    10. '1' → logprob: -7.036869525909424

Token 85: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5475420951843262
    2. '.' → logprob: -2.172542095184326
    3. ',' → logprob: -2.297542095184326
    4. ' ' → logprob: -2.422542095184326
    5. '_' → logprob: -3.172542095184326
    6. ':' → logprob: -3.422542095184326
    7. '\' → logprob: -5.172542095184326
    8. '    
' → logprob: -5.547542095184326
    9. '\n' → logprob: -5.797542095184326
    10. ')' → logprob: -5.922542095184326

Token 86: ' compter' (ID: 81694)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.42704278230667114
    2. ' return' → logprob: -1.9270427227020264
    3. ' déterminer' → logprob: -3.0520427227020264
    4. ' continuer' → logprob: -3.4270427227020264
    5. ' répart' → logprob: -3.9270427227020264
    6. ' retourner' → logprob: -4.0520429611206055
    7. ' ' → logprob: -5.1770429611206055
    8. ' choisir' → logprob: -5.5520429611206055
    9. ' garantir' → logprob: -5.5520429611206055
    10. ' div' → logprob: -5.5520429611206055

Token 87: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21037673950195312
    2. ' l' → logprob: -2.835376739501953
    3. ' le' → logprob: -3.335376739501953
    4. 's' → logprob: -3.960376739501953
    5. ' les' → logprob: -4.210376739501953
    6. 'e' → logprob: -4.710376739501953
    7. 'u' → logprob: -5.085376739501953
    8. '_' → logprob: -5.335376739501953
    9. 'l' → logprob: -5.710376739501953
    10. ',' → logprob: -5.710376739501953

Token 88: ' cases' (ID: 7911)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4782278537750244
    2. ' cellules' → logprob: -1.9782278537750244
    3. ' cases' → logprob: -2.7282278537750244
    4. 'cases' → logprob: -2.7282278537750244
    5. '(' → logprob: -3.6032278537750244
    6. ' ' → logprob: -4.353227615356445
    7. 'cells' → logprob: -4.603227615356445
    8. ' cells' → logprob: -4.728227615356445
    9. 'c' → logprob: -4.728227615356445
    10. 'cell' → logprob: -4.978227615356445

Token 89: ' non' (ID: 2893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.055172812193632126
    2. ' ' → logprob: -3.555172920227051
    3. ',' → logprob: -5.555172920227051
    4. ' _' → logprob: -5.680172920227051
    5. 's' → logprob: -5.930172920227051
    6. ' ,' → logprob: -6.555172920227051
    7. '.' → logprob: -6.680172920227051
    8. ' chois' → logprob: -6.805172920227051
    9. ' ' → logprob: -6.992672920227051
    10. '\' → logprob: -7.680172920227051

Token 90: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5376864075660706
    2. ' adj' → logprob: -1.0376863479614258
    3. ' adjacent' → logprob: -3.162686347961426
    4. ' ad' → logprob: -5.287686347961426
    5. ' cont' → logprob: -5.412686347961426
    6. ' vois' → logprob: -6.037686347961426
    7. 'ad' → logprob: -6.912686347961426
    8. '-ad' → logprob: -6.912686347961426
    9. '_adj' → logprob: -7.037686347961426
    10. ' chois' → logprob: -7.037686347961426

Token 91: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.06811011582612991
    2. 'a' → logprob: -2.818110227584839
    3. 'acent' → logprob: -6.69310998916626
    4. 'acency' → logprob: -7.19310998916626
    5. '```' → logprob: -7.31810998916626
    6. 'c' → logprob: -7.50560998916626
    7. 'centes' → logprob: -8.318110466003418
    8. 'acen' → logprob: -8.943110466003418
    9. '=' → logprob: -9.068110466003418
    10. '%' → logprob: -9.443110466003418

Token 92: 'entes' (ID: 5651)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9141709804534912
    2. 'd' → logprob: -1.0391709804534912
    3. 'entes' → logprob: -2.039170980453491
    4. 'es' → logprob: -2.414170980453491
    5. 'tes' → logprob: -4.78917121887207
    6. 'ent' → logprob: -4.78917121887207
    7. 'e' → logprob: -5.91417121887207
    8. 'ente' → logprob: -6.91417121887207
    9. 'centes' → logprob: -7.03917121887207
    10. 'o' → logprob: -7.16417121887207

Token 93: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16137118637561798
    2. ',' → logprob: -3.0363712310791016
    3. ':' → logprob: -3.4113712310791016
    4. ' ' → logprob: -3.9113712310791016
    5. ' ,' → logprob: -4.536371231079102
    6. 's' → logprob: -4.786371231079102
    7. '   ' → logprob: -4.786371231079102
    8. ' :' → logprob: -5.161371231079102
    9. ' .' → logprob: -5.911371231079102
    10. '.
' → logprob: -6.411371231079102

Token 94: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01641884073615074
    2. '    
' → logprob: -4.641418933868408
    3. '
' → logprob: -5.891418933868408
    4. ')' → logprob: -6.766418933868408
    5. '   
' → logprob: -7.391418933868408
    6. '```' → logprob: -7.516418933868408
    7. ' 
' → logprob: -8.26641845703125
    8. 'n' → logprob: -8.39141845703125
    9. '    ' → logprob: -8.51641845703125
    10. '     
' → logprob: -9.01641845703125

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006650181603617966
    2. '"""' → logprob: -8.375664710998535
    3. ' """' → logprob: -8.625664710998535
    4. ')' → logprob: -9.500664710998535
    5. '    ' → logprob: -9.875664710998535
    6. ' """
' → logprob: -10.750664710998535
    7. 'n' → logprob: -11.000664710998535
    8. '    
' → logprob: -11.125664710998535
    9. '```' → logprob: -11.125664710998535
    10. '
' → logprob: -11.500664710998535

Token 96: ' Param' (ID: 14796)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02346954308450222
    2. 'if' → logprob: -4.2734694480896
    3. 'max' → logprob: -6.1484694480896
    4. ' if' → logprob: -6.3984694480896
    5. '    
' → logprob: -6.3984694480896
    6. '
' → logprob: -7.2734694480896
    7. 'n' → logprob: -7.5234694480896
    8. '#' → logprob: -7.6484694480896
    9. '```' → logprob: -7.8984694480896
    10. 'result' → logprob: -8.023469924926758

Token 97: 'ètres' (ID: 40427)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5904581546783447
    2. '_' → logprob: -1.7154581546783447
    3. '=' → logprob: -2.0904581546783447
    4. 'et' → logprob: -3.2154581546783447
    5. 'eters' → logprob: -4.090457916259766
    6. 'ètre' → logprob: -4.215457916259766
    7. ' =' → logprob: -4.340457916259766
    8. 's' → logprob: -4.465457916259766
    9. ':' → logprob: -4.840457916259766
    10. 'eter' → logprob: -4.965457916259766

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1784331500530243
    2. ' :' → logprob: -2.1784331798553467
    3. ',' → logprob: -3.8034331798553467
    4. '<|end|>' → logprob: -4.428432941436768
    5. '):' → logprob: -5.053432941436768
    6. ' ' → logprob: -6.303432941436768
    7. ')' → logprob: -6.553432941436768
    8. 's' → logprob: -6.803432941436768
    9. ':
' → logprob: -6.803432941436768
    10. ' (' → logprob: -6.928432941436768

Token 99: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5825814008712769
    2. ' 
' → logprob: -1.7075814008712769
    3. ' ' → logprob: -1.8325814008712769
    4. ' h' → logprob: -2.4575815200805664
    5. '    
' → logprob: -5.457581520080566
    6. '    ' → logprob: -6.457581520080566
    7. ')' → logprob: -6.832581520080566
    8. '  ' → logprob: -6.832581520080566
    9. '   
' → logprob: -6.957581520080566
    10. ' )' → logprob: -6.957581520080566

Token 100: ' h' (ID: 312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29122593998908997
    2. ' h' → logprob: -1.5412259101867676
    3. 'h' (adapté à ' h') → logprob: -3.6662259101867676
    4. '    
' → logprob: -5.541225910186768
    5. ' 
' → logprob: -6.041225910186768
    6. '
' → logprob: -6.291225910186768
    7. '```' → logprob: -6.541225910186768
    8. ' return' → logprob: -7.541225910186768
    9. '    ' → logprob: -7.666225910186768
    10. ' ' → logprob: -7.791225910186768

Token 101: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001216186792589724
    2. ' ,' → logprob: -6.751216411590576
    3. ':' → logprob: -11.251215934753418
    4. '   ' → logprob: -11.626215934753418
    5. ',
' → logprob: -11.626215934753418
    6. ')' → logprob: -12.751215934753418
    7. '):' → logprob: -12.876215934753418
    8. ',int' → logprob: -13.376215934753418
    9. ' ' → logprob: -13.501215934753418
    10. ' :' → logprob: -13.626215934753418

Token 102: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0028185509145259857
    2. ' int' → logprob: -5.877818584442139
    3. '):' → logprob: -12.50281810760498
    4. ')' → logprob: -12.87781810760498
    5. ':int' → logprob: -13.25281810760498
    6. ',' → logprob: -13.25281810760498
    7. '   ' → logprob: -13.62781810760498
    8. ',int' → logprob: -14.25281810760498
    9. '(int' → logprob: -14.37781810760498
    10. '[int' → logprob: -14.37781810760498

Token 103: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1892872303724289
    2. '):' → logprob: -1.8142871856689453
    3. ')' → logprob: -4.689287185668945
    4. '   ' → logprob: -9.189287185668945
    5. '),' → logprob: -9.564287185668945
    6. '):
' → logprob: -9.939287185668945
    7. ' ,' → logprob: -10.314287185668945
    8. ' ):' → logprob: -10.564287185668945
    9. ':' → logprob: -12.314287185668945
    10. ',
' → logprob: -12.564287185668945

Token 104: ' nombre' (ID: 9733)
  Prédit: ' Ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ha' → logprob: -0.7485256791114807
    2. 'Ha' → logprob: -1.498525619506836
    3. ' hauteur' → logprob: -2.123525619506836
    4. ' La' → logprob: -3.248525619506836
    5. ' int' → logprob: -3.498525619506836
    6. ' Le' → logprob: -3.498525619506836
    7. ' ha' → logprob: -4.248525619506836
    8. ' la' → logprob: -4.373525619506836
    9. ' nombre' → logprob: -4.623525619506836
    10. 'La' → logprob: -4.623525619506836

Token 105: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1399173736572266
    2. ',' → logprob: -1.6399173736572266
    3. ' de' → logprob: -1.6399173736572266
    4. '_' → logprob: -2.1399173736572266
    5. ')' → logprob: -2.7649173736572266
    6. ' )' → logprob: -3.8899173736572266
    7. '  ' → logprob: -4.139917373657227
    8. ' d' → logprob: -4.264917373657227
    9. ' ,' → logprob: -4.264917373657227
    10. '<|end|>' → logprob: -4.389917373657227

Token 106: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.09205543249845505
    2. 'l' → logprob: -2.467055320739746
    3. ' cellules' → logprob: -6.967055320739746
    4. ' ' → logprob: -7.092055320739746
    5. 'ligne' → logprob: -8.342055320739746
    6. ' ligne' → logprob: -8.717055320739746
    7. ' rang' → logprob: -8.717055320739746
    8. 'colon' → logprob: -8.842055320739746
    9. ' colon' → logprob: -8.967055320739746
    10. 'cell' → logprob: -9.467055320739746

Token 107: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48413053154945374
    2. ',' → logprob: -1.1091305017471313
    3. '<|end|>' → logprob: -3.484130620956421
    4. ')' → logprob: -3.859130620956421
    5. ',
' → logprob: -7.484130382537842
    6. '<|end|>' → logprob: -7.984130382537842
    7. '    
' → logprob: -8.234130859375
    8. ' ,' → logprob: -8.609130859375
    9. '  ' → logprob: -9.109130859375
    10. ' ' → logprob: -9.109130859375

Token 108: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.11406002938747406
    2. 'la' → logprob: -2.2390599250793457
    3. 'l' → logprob: -7.114059925079346
    4. 'gr' → logprob: -8.364060401916504
    5. ' grille' → logprob: -9.864060401916504
    6. ' l' → logprob: -9.989060401916504
    7. 'a' → logprob: -10.739060401916504
    8. ' ' → logprob: -11.114060401916504
    9. ' ' → logprob: -11.364060401916504
    10. '   ' → logprob: -11.739060401916504

Token 109: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.20167645812034607
    2. 'gr' → logprob: -1.7016764879226685
    3. ' gr' → logprob: -9.951676368713379
    4. '   ' → logprob: -10.076676368713379
    5. ' ' → logprob: -10.201676368713379
    6. ' ' → logprob: -10.451676368713379
    7. 'grid' → logprob: -10.826676368713379
    8. '```' → logprob: -11.201676368713379
    9. ' grid' → logprob: -11.451676368713379
    10. 'g' → logprob: -11.701676368713379

Token 110: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06558069586753845
    2. ')' → logprob: -3.1905806064605713
    3. '<|end|>' → logprob: -4.44058084487915
    4. ',' → logprob: -5.56558084487915
    5. '    
' → logprob: -6.56558084487915
    6. ' )' → logprob: -6.94058084487915
    7. ' ' → logprob: -7.06558084487915
    8. '
' → logprob: -7.06558084487915
    9. ' 
' → logprob: -7.56558084487915
    10. '<|end|>' → logprob: -7.69058084487915

Token 111: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4509420394897461
    2. 'w' → logprob: -1.200942039489746
    3. '    ' → logprob: -3.200942039489746
    4. ' ' → logprob: -5.450942039489746
    5. ' w' → logprob: -5.450942039489746
    6. '       ' → logprob: -5.825942039489746
    7. ',' → logprob: -5.825942039489746
    8. ' ,' → logprob: -6.575942039489746
    9. '```' → logprob: -6.575942039489746
    10. ' 
' → logprob: -7.075942039489746

Token 112: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.25204628705978394
    2. 'w' (adapté à ' w') → logprob: -1.5020463466644287
    3. '   ' → logprob: -9.252046585083008
    4. ' ' → logprob: -11.752046585083008
    5. ' ' → logprob: -11.752046585083008
    6. '    ' → logprob: -13.377046585083008
    7. '	w' → logprob: -14.127046585083008
    8. '  ' → logprob: -14.627046585083008
    9. '```' → logprob: -14.627046585083008
    10. 's' → logprob: -15.002046585083008

Token 113: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.21953114867210388
    2. '):' → logprob: -2.3445310592651367
    3. '(int' → logprob: -2.9695310592651367
    4. ':' → logprob: -3.3445310592651367
    5. ':int' → logprob: -5.094531059265137
    6. '   ' → logprob: -5.469531059265137
    7. ')' → logprob: -6.344531059265137
    8. ' :' → logprob: -6.969531059265137
    9. ',' → logprob: -7.719531059265137
    10. '(' → logprob: -7.969531059265137

Token 114: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007106438861228526
    2. ' int' → logprob: -7.250710487365723
    3. ')' → logprob: -14.625710487365723
    4. '=int' → logprob: -16.25071144104004
    5. '[int' → logprob: -16.62571144104004
    6. ':int' → logprob: -16.75071144104004
    7. ',int' → logprob: -17.87571144104004
    8. '(int' → logprob: -18.00071144104004
    9. ']int' → logprob: -18.50071144104004
    10. ' )' → logprob: -19.12571144104004

Token 115: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001260471879504621
    2. ')' → logprob: -6.751260280609131
    3. ' ):' → logprob: -10.126260757446289
    4. ':' → logprob: -11.001260757446289
    5. '   ' → logprob: -11.126260757446289
    6. '):
' → logprob: -11.751260757446289
    7. 'int' → logprob: -12.376260757446289
    8. ',' → logprob: -13.501260757446289
    9. ' ' → logprob: -13.876260757446289
    10. ':int' → logprob: -14.001260757446289

Token 116: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.23153087496757507
    2. ' int' → logprob: -2.3565309047698975
    3. 'nombre' → logprob: -2.7315309047698975
    4. ' nombre' → logprob: -3.1065309047698975
    5. '   ' → logprob: -6.606530666351318
    6. ' ' → logprob: -8.231531143188477
    7. ' nombres' → logprob: -9.106531143188477
    8. '1' → logprob: -9.731531143188477
    9. ' ' → logprob: -10.356531143188477
    10. ' entier' → logprob: -10.356531143188477

Token 117: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.14747212827205658
    2. 'de' → logprob: -2.8974721431732178
    3. ' ' → logprob: -3.1474721431732178
    4. ' d' → logprob: -3.5224721431732178
    5. '_de' → logprob: -6.272471904754639
    6. '   ' → logprob: -6.397471904754639
    7. ' des' → logprob: -6.897471904754639
    8. 'd' → logprob: -7.147471904754639
    9. ' ' → logprob: -7.272471904754639
    10. '  ' → logprob: -7.272471904754639

Token 118: ' colon' (ID: 20947)
  Prédit: 'colon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colon' → logprob: -0.8895679712295532
    2. 'cases' → logprob: -1.2645679712295532
    3. ' colon' → logprob: -1.8895679712295532
    4. 'l' → logprob: -2.7645678520202637
    5. ' cases' → logprob: -3.6395678520202637
    6. ' cellules' → logprob: -3.8895678520202637
    7. 'cell' → logprob: -4.514567852020264
    8. 'cells' → logprob: -4.639567852020264
    9. 'c' → logprob: -4.764567852020264
    10. 'col' → logprob: -5.514567852020264

Token 119: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.5763116478919983
    2. 'es' → logprob: -0.8263116478919983
    3. 'n' → logprob: -8.451312065124512
    4. 's' → logprob: -9.451312065124512
    5. 'ies' → logprob: -9.951312065124512
    6. 'ne' → logprob: -11.451312065124512
    7. 'tes' → logprob: -12.576312065124512
    8. 'les' → logprob: -12.701312065124512
    9. '```' → logprob: -12.701312065124512
    10. ' es' → logprob: -13.076312065124512

Token 120: ' de' (ID: 334)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19231729209423065
    2. '   ' → logprob: -2.692317247390747
    3. '):
' → logprob: -2.692317247390747
    4. ')' → logprob: -3.692317247390747
    5. ' ):' → logprob: -4.817317485809326
    6. '):
' → logprob: -5.692317485809326
    7. ' ):
' → logprob: -6.692317485809326
    8. ' )' → logprob: -7.067317485809326
    9. ' ' → logprob: -8.817317008972168
    10. '```' → logprob: -8.817317008972168

Token 121: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1662745475769043
    2. 'la' → logprob: -1.9162745475769043
    3. 'l' → logprob: -5.666274547576904
    4. ' ' → logprob: -6.791274547576904
    5. 'a' → logprob: -7.666274547576904
    6. ' l' → logprob: -8.416275024414062
    7. ' grille' → logprob: -8.666275024414062
    8. '   ' → logprob: -8.791275024414062
    9. ' ' → logprob: -9.041275024414062
    10. '_la' → logprob: -10.353775024414062

Token 122: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.3133264482021332
    2. ' grille' → logprob: -1.3133264780044556
    3. 'grid' → logprob: -10.438326835632324
    4. '_gr' → logprob: -11.188326835632324
    5. ' gr' → logprob: -11.688326835632324
    6. ' ' → logprob: -12.938326835632324
    7. ' ' → logprob: -12.938326835632324
    8. 'g' → logprob: -13.063326835632324
    9. ' grid' → logprob: -13.438326835632324
    10. 'Gr' → logprob: -13.563326835632324

Token 123: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15799710154533386
    2. ')' → logprob: -2.1579971313476562
    3. '):
' → logprob: -3.6579971313476562
    4. '   ' → logprob: -5.407997131347656
    5. '):
' → logprob: -8.657997131347656
    6. ',' → logprob: -9.657997131347656
    7. ' ' → logprob: -10.532997131347656
    8. ' ):' → logprob: -11.157997131347656
    9. ':' → logprob: -11.282997131347656
    10. ')
' → logprob: -11.782997131347656

Token 124: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007634900975972414
    2. ')' → logprob: -6.132635116577148
    3. '    
' → logprob: -6.132635116577148
    4. '"""' → logprob: -7.257635116577148
    5. '
' → logprob: -7.507635116577148
    6. ' 
' → logprob: -7.882635116577148
    7. '"""
' → logprob: -8.382635116577148
    8. '\n' → logprob: -8.507635116577148
    9. ' """
' → logprob: -8.757635116577148
    10. '    ' → logprob: -8.882635116577148

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007899748161435127
    2. '    
' → logprob: -7.375790119171143
    3. 'if' → logprob: -10.125789642333984
    4. '
' → logprob: -10.750789642333984
    5. 'result' → logprob: -11.000789642333984
    6. '  ' → logprob: -11.250789642333984
    7. ' if' → logprob: -11.375789642333984
    8. '   
' → logprob: -11.750789642333984
    9. '```' → logprob: -11.875789642333984
    10. '    ' → logprob: -12.000789642333984

Token 126: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4936215579509735
    2. 'if' → logprob: -1.243621587753296
    3. ' if' → logprob: -2.868621587753296
    4. 'return' → logprob: -4.368621349334717
    5. 'Returns' → logprob: -5.118621349334717
    6. '#' → logprob: -5.243621349334717
    7. 'result' → logprob: -5.368621349334717
    8. '    
' → logprob: -5.493621349334717
    9. '"""
' → logprob: -5.993621349334717
    10. '
' → logprob: -6.368621349334717

Token 127: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.22645938396453857
    2. ':' → logprob: -1.7264593839645386
    3. '   ' → logprob: -4.101459503173828
    4. 'n' → logprob: -5.851459503173828
    5. 'e' → logprob: -5.976459503173828
    6. ' :' → logprob: -6.226459503173828
    7. ' ' → logprob: -8.601459503173828
    8. '  ' → logprob: -8.726459503173828
    9. '    ' → logprob: -9.601459503173828
    10. 'neur' → logprob: -9.601459503173828

Token 128: ':
' (ID: 734)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.007623780518770218
    2. '(h' → logprob: -5.507623672485352
    3. ' ' → logprob: -6.257623672485352
    4. ' h' → logprob: -6.882623672485352
    5. '(int' → logprob: -8.507623672485352
    6. ' ((' → logprob: -9.507623672485352
    7. '(max' → logprob: -9.507623672485352
    8. '(' → logprob: -9.757623672485352
    9. ' ' → logprob: -9.882623672485352
    10. ' max' → logprob: -10.007623672485352

Token 129: '       ' (ID: 309)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.22721409797668457
    2. '   ' → logprob: -1.9772140979766846
    3. ' max' → logprob: -3.4772140979766846
    4. ' h' → logprob: -4.1022138595581055
    5. '(h' → logprob: -4.7272138595581055
    6. ' int' → logprob: -5.6022138595581055
    7. '(max' → logprob: -6.6022138595581055
    8. ' le' → logprob: -7.2272138595581055
    9. '(int' → logprob: -7.4772138595581055
    10. 'max' → logprob: -7.8522138595581055

Token 130: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.28169718384742737
    2. 'int' (adapté à ' int') → logprob: -1.406697154045105
    3. ' max' → logprob: -8.406697273254395
    4. '(int' → logprob: -9.156697273254395
    5. '   ' → logprob: -9.281697273254395
    6. ' (' → logprob: -9.406697273254395
    7. 'max' → logprob: -10.281697273254395
    8. ' ' → logprob: -13.781697273254395
    9. ' maximum' → logprob: -13.906697273254395
    10. ' le' → logprob: -14.281697273254395

Token 131: ':' (ID: 25)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08982573449611664
    2. ' h' → logprob: -3.3398256301879883
    3. ' max' → logprob: -4.464825630187988
    4. ' ' → logprob: -4.464825630187988
    5. ' ((' → logprob: -4.589825630187988
    6. '   ' → logprob: -4.964825630187988
    7. '(h' → logprob: -5.214825630187988
    8. '((' → logprob: -6.964825630187988
    9. 'max' → logprob: -7.089825630187988
    10. '    ' → logprob: -7.339825630187988

Token 132: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06603541970252991
    2. ' max' → logprob: -3.566035509109497
    3. '(h' → logprob: -4.191035270690918
    4. ' h' → logprob: -4.566035270690918
    5. 'max' → logprob: -5.566035270690918
    6. ' le' → logprob: -6.316035270690918
    7. ' maximum' → logprob: -6.316035270690918
    8. '(max' → logprob: -6.816035270690918
    9. '   ' → logprob: -7.316035270690918
    10. ' ' → logprob: -8.441035270690918

Token 133: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.1336197853088379
    2. ' maximum' → logprob: -2.633619785308838
    3. 'nombre' → logprob: -3.258619785308838
    4. 'maximum' → logprob: -4.758619785308838
    5. 'max' → logprob: -6.133619785308838
    6. ' max' → logprob: -6.383619785308838
    7. ' (' → logprob: -6.633619785308838
    8. ' plus' → logprob: -8.38361930847168
    9. ' maximal' → logprob: -9.00861930847168
    10. ' maximale' → logprob: -9.25861930847168

Token 134: ' maximal' (ID: 65414)
  Prédit: ' maximal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximal' → logprob: -0.008709357120096684
    2. ' maximum' → logprob: -4.75870943069458
    3. ' maximale' → logprob: -10.758708953857422
    4. ' de' → logprob: -10.758708953857422
    5. ' max' → logprob: -10.883708953857422
    6. '_' → logprob: -11.883708953857422
    7. ' ' → logprob: -12.008708953857422
    8. ' minimal' → logprob: -12.133708953857422
    9. ' maksimal' → logprob: -12.508708953857422
    10. '_max' → logprob: -12.883708953857422

Token 135: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.046705931425094604
    2. ' ' → logprob: -3.671705961227417
    3. '_' → logprob: -4.296705722808838
    4. '_de' → logprob: -6.046705722808838
    5. ' d' → logprob: -7.046705722808838
    6. 'de' → logprob: -7.421705722808838
    7. ' des' → logprob: -7.421705722808838
    8. ' _' → logprob: -8.296706199645996
    9. '   ' → logprob: -8.421706199645996
    10. '  ' → logprob: -8.671706199645996

Token 136: ' cases' (ID: 7911)
  Prédit: ' cellules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cellules' → logprob: -0.08399225026369095
    2. 'cases' → logprob: -3.5839922428131104
    3. 'cell' → logprob: -3.7089922428131104
    4. ' cases' → logprob: -3.8339922428131104
    5. ' cells' → logprob: -5.8339924812316895
    6. 'cells' → logprob: -6.0839924812316895
    7. ' cell' → logprob: -6.7089924812316895
    8. 'cel' → logprob: -9.583992004394531
    9. 'case' → logprob: -9.958992004394531
    10. '_cell' → logprob: -10.583992004394531

Token 137: ' pouvant' (ID: 104840)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33896949887275696
    2. ' chois' → logprob: -2.0889694690704346
    3. ' ' → logprob: -2.2139694690704346
    4. ' _' → logprob: -4.338969707489014
    5. ' ' → logprob: -4.838969707489014
    6. ' à' → logprob: -5.713969707489014
    7. '\' → logprob: -5.838969707489014
    8. ' pouvant' → logprob: -5.838969707489014
    9. ' que' → logprob: -5.963969707489014
    10. ' choisi' → logprob: -6.213969707489014

Token 138: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.08299224078655243
    2. 'être' → logprob: -2.5829923152923584
    3. ' etre' → logprob: -6.707992076873779
    4. ''être' → logprob: -6.957992076873779
    5. ' be' → logprob: -7.457992076873779
    6. ' ' → logprob: -8.207992553710938
    7. 'e' → logprob: -8.332992553710938
    8. '’être' → logprob: -8.332992553710938
    9. 'êtres' → logprob: -9.082992553710938
    10. 'etre' → logprob: -9.582992553710938

Token 139: ' chois' (ID: 33475)
  Prédit: ' chois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chois' → logprob: -0.16236574947834015
    2. 'cho' → logprob: -2.037365674972534
    3. ' sélection' → logprob: -5.287365913391113
    4. ' choisi' → logprob: -5.537365913391113
    5. 's' → logprob: -6.037365913391113
    6. ' plac' → logprob: -6.537365913391113
    7. ' cho' → logprob: -6.662365913391113
    8. ' ' → logprob: -6.787365913391113
    9. 'plac' → logprob: -7.037365913391113
    10. 'sé' → logprob: -7.412365913391113

Token 140: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.0013170238817110658
    2. 'es' → logprob: -7.251317024230957
    3. 'i' → logprob: -7.501317024230957
    4. 's' → logprob: -10.751317024230957
    5. 'is' → logprob: -11.126317024230957
    6. 'ie' → logprob: -12.126317024230957
    7. 'ues' → logprob: -12.876317024230957
    8. 'n' → logprob: -13.376317024230957
    9. 'ises' → logprob: -13.751317024230957
    10. '
' → logprob: -14.126317024230957

Token 141: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8369919657707214
    2. '   ' → logprob: -1.0869920253753662
    3. ',' → logprob: -2.711992025375366
    4. ')' → logprob: -2.961992025375366
    5. ':' → logprob: -3.086992025375366
    6. ' ' → logprob: -4.211991786956787
    7. '    
' → logprob: -4.586991786956787
    8. ' 
' → logprob: -5.211991786956787
    9. ' )' → logprob: -5.461991786956787
    10. ' :' → logprob: -5.836991786956787

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034490874968469143
    2. '"""' → logprob: -5.753448963165283
    3. '```' → logprob: -9.128449440002441
    4. '    
' → logprob: -9.753449440002441
    5. '
' → logprob: -10.378449440002441
    6. ' """' → logprob: -10.753449440002441
    7. 'def' → logprob: -10.878449440002441
    8. '"""
' → logprob: -11.003449440002441
    9. '   
' → logprob: -12.753449440002441
    10. ')' → logprob: -12.753449440002441

Token 143: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017495574429631233
    2. '    
' → logprob: -5.017495632171631
    3. '
' → logprob: -5.142495632171631
    4. '\n' → logprob: -6.267495632171631
    5. ' 
' → logprob: -7.517495632171631
    6. '    ' → logprob: -7.642495632171631
    7. '   
' → logprob: -7.767495632171631
    8. 'n' → logprob: -7.892495632171631
    9. '     
' → logprob: -8.142495155334473
    10. '```' → logprob: -8.142495155334473

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009078874718397856
    2. 'if' → logprob: -7.500907897949219
    3. ' if' → logprob: -8.125907897949219
    4. '    
' → logprob: -10.875907897949219
    5. '
' → logprob: -11.500907897949219
    6. '    ' → logprob: -11.750907897949219
    7. 'n' → logprob: -12.000907897949219
    8. '```' → logprob: -12.375907897949219
    9. 'max' → logprob: -12.500907897949219
    10. '   ' → logprob: -13.000907897949219

Token 145: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019344458356499672
    2. ' if' → logprob: -4.144344329833984
    3. '   ' → logprob: -6.644344329833984
    4. 'return' → logprob: -6.769344329833984
    5. 'max' → logprob: -7.894344329833984
    6. 'cells' → logprob: -8.894344329833984
    7. '#' (adapté à ' #') → logprob: -9.019344329833984
    8. 'total' → logprob: -9.394344329833984
    9. ' ' → logprob: -10.644344329833984
    10. 'If' → logprob: -10.894344329833984

Token 146: ' Cas' (ID: 8066)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.047145433723926544
    2. ' if' → logprob: -3.297145366668701
    3. 'return' → logprob: -4.922145366668701
    4. 'max' → logprob: -7.047145366668701
    5. ' return' → logprob: -8.42214584350586
    6. 'cells' → logprob: -8.67214584350586
    7. 'result' → logprob: -9.17214584350586
    8. '   ' → logprob: -9.54714584350586
    9. 'cell' → logprob: -10.04714584350586
    10. '1' → logprob: -10.04714584350586

Token 147: ' particulier' (ID: 47842)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37301740050315857
    2. '1' → logprob: -1.998017430305481
    3. '   ' → logprob: -2.3730173110961914
    4. ' h' → logprob: -2.8730173110961914
    5. ' where' → logprob: -4.248017311096191
    6. ' if' → logprob: -4.998017311096191
    7. '  ' → logprob: -6.248017311096191
    8. 'h' → logprob: -6.748017311096191
    9. ' de' → logprob: -7.623017311096191
    10. ' où' → logprob: -7.748017311096191

Token 148: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046370942145586014
    2. ' if' → logprob: -3.4213709831237793
    3. ' ' → logprob: -5.046370983123779
    4. 'if' → logprob: -5.421370983123779
    5. ':' → logprob: -6.921370983123779
    6. '  ' → logprob: -8.046370506286621
    7. '    ' → logprob: -9.296370506286621
    8. '    
' → logprob: -9.546370506286621
    9. ' =' → logprob: -9.921370506286621
    10. ' :' → logprob: -9.921370506286621

Token 149: ' si' (ID: 1784)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.9966912269592285
    2. 'if' → logprob: -1.1216912269592285
    3. ' if' → logprob: -1.6216912269592285
    4. 'h' → logprob: -2.4966912269592285
    5. '1' → logprob: -4.3716912269592285
    6. ' ' → logprob: -5.1216912269592285
    7. ' min' → logprob: -6.2466912269592285
    8. '   ' → logprob: -6.3716912269592285
    9. ' (' → logprob: -6.3716912269592285
    10. ' max' → logprob: -7.6216912269592285

Token 150: ' la' (ID: 557)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.10036151856184006
    2. 'h' → logprob: -2.3503615856170654
    3. ' min' → logprob: -9.225361824035645
    4. 'min' → logprob: -10.100361824035645
    5. ' ' → logprob: -11.975361824035645
    6. '1' → logprob: -12.225361824035645
    7. ' ' → logprob: -13.850361824035645
    8. '	h' → logprob: -14.100361824035645
    9. '(h' → logprob: -14.350361824035645
    10. ' (' → logprob: -14.475361824035645

Token 151: ' grille' (ID: 99153)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.018484225496649742
    2. ' h' → logprob: -4.018484115600586
    3. '1' → logprob: -8.268484115600586
    4. 'min' → logprob: -9.768484115600586
    5. ' ' → logprob: -11.518484115600586
    6. ' min' → logprob: -11.768484115600586
    7. 'ha' → logprob: -13.893484115600586
    8. '	h' → logprob: -14.768484115600586
    9. '0' → logprob: -15.018484115600586
    10. '(h' → logprob: -15.580984115600586

Token 152: ' n' (ID: 297)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5630256533622742
    2. 'a' → logprob: -1.188025712966919
    3. 'est' → logprob: -3.188025712966919
    4. ' est' → logprob: -3.813025712966919
    5. '1' → logprob: -4.43802547454834
    6. ' has' → logprob: -4.81302547454834
    7. 'ha' → logprob: -4.81302547454834
    8. ' ==' → logprob: -4.93802547454834
    9. 'has' → logprob: -5.18802547454834
    10. '==' → logprob: -5.18802547454834

Token 153: ''a' (ID: 10443)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9538341164588928
    2. '==' → logprob: -1.203834056854248
    3. ' a' → logprob: -1.578834056854248
    4. 'a' → logprob: -3.203834056854248
    5. 'est' → logprob: -3.203834056854248
    6. ' est' → logprob: -4.578834056854248
    7. ''est' → logprob: -4.953834056854248
    8. '_' → logprob: -6.828834056854248
    9. '=' → logprob: -6.828834056854248
    10. ''a' → logprob: -6.953834056854248

Token 154: ' qu' (ID: 474)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5976524353027344
    2. '1' → logprob: -1.4726524353027344
    3. ' une' → logprob: -2.3476524353027344
    4. 'une' → logprob: -2.7226524353027344
    5. 'h' → logprob: -3.3476524353027344
    6. ' h' → logprob: -4.847652435302734
    7. '0' → logprob: -5.472652435302734
    8. '==' → logprob: -5.972652435302734
    9. '   ' → logprob: -6.347652435302734
    10. 't' → logprob: -6.597652435302734

Token 155: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.02608324959874153
    2. 'une' → logprob: -4.151083469390869
    3. 'e' → logprob: -5.401083469390869
    4. ''un' → logprob: -6.026083469390869
    5. '’une' → logprob: -6.776083469390869
    6. ''' → logprob: -6.776083469390869
    7. ''à' → logprob: -8.526082992553711
    8. ' une' → logprob: -8.526082992553711
    9. '1' → logprob: -8.776082992553711
    10. 'a' → logprob: -9.776082992553711

Token 156: ' ligne' (ID: 19583)
  Prédit: 'dimension'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dimension' → logprob: -0.9256918430328369
    2. ' dimension' → logprob: -1.175691843032837
    3. 'ligne' → logprob: -1.800691843032837
    4. '1' → logprob: -3.300691843032837
    5. ' ligne' → logprob: -3.300691843032837
    6. 'dim' → logprob: -3.425691843032837
    7. ' seule' → logprob: -4.175691604614258
    8. ' ' → logprob: -6.050691604614258
    9. 'c' → logprob: -6.800691604614258
    10. 'se' → logprob: -6.925691604614258

Token 157: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016834689304232597
    2. ' or' → logprob: -4.391834735870361
    3. ' ou' → logprob: -6.266834735870361
    4. ',' → logprob: -7.391834735870361
    5. ':' → logprob: -7.766834735870361
    6. '    ' → logprob: -8.141834259033203
    7. ' ' → logprob: -8.391834259033203
    8. '  ' → logprob: -8.516834259033203
    9. 'or' → logprob: -8.641834259033203
    10. '       ' → logprob: -8.891834259033203

Token 158: ' qu' (ID: 474)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.4886699914932251
    2. ' une' → logprob: -1.113669991493225
    3. 'col' → logprob: -3.2386698722839355
    4. ' colonne' → logprob: -4.3636698722839355
    5. '1' → logprob: -6.6136698722839355
    6. ''une' → logprob: -6.7386698722839355
    7. ' ' → logprob: -6.8636698722839355
    8. 'qu' → logprob: -7.1136698722839355
    9. '   ' → logprob: -7.3636698722839355
    10. 'colon' → logprob: -8.363670349121094

Token 159: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.04008844122290611
    2. 'une' → logprob: -3.290088415145874
    3. '’une' → logprob: -6.665088653564453
    4. 'e' → logprob: -8.040088653564453
    5. ''un' → logprob: -8.540088653564453
    6. ''' → logprob: -9.540088653564453
    7. ' une' → logprob: -9.540088653564453
    8. 'u' → logprob: -10.665088653564453
    9. 'ne' → logprob: -10.915088653564453
    10. '_' → logprob: -11.665088653564453

Token 160: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.357092946767807
    2. ' colonne' → logprob: -1.2320929765701294
    3. ' ' → logprob: -5.73209285736084
    4. '   ' → logprob: -6.35709285736084
    5. '```' → logprob: -6.35709285736084
    6. 'colon' → logprob: -7.35709285736084
    7. 'column' → logprob: -8.10709285736084
    8. ' col' → logprob: -8.98209285736084
    9. 'ligne' → logprob: -8.98209285736084
    10. '1' → logprob: -9.35709285736084

Token 161: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055172812193632126
    2. ',' → logprob: -3.055172920227051
    3. ':' → logprob: -5.555172920227051
    4. '    ' → logprob: -7.305172920227051
    5. '    
' → logprob: -7.305172920227051
    6. ' ,' → logprob: -8.05517292022705
    7. '       ' → logprob: -8.18017292022705
    8. ' if' → logprob: -8.68017292022705
    9. ' :' → logprob: -9.30517292022705
    10. '  ' → logprob: -9.68017292022705

Token 162: ' il' (ID: 1793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0173388309776783
    2. ' return' → logprob: -4.642338752746582
    3. '       ' → logprob: -5.517338752746582
    4. 'return' → logprob: -6.017338752746582
    5. '    ' → logprob: -7.017338752746582
    6. '  ' → logprob: -9.767338752746582
    7. '    
' → logprob: -10.142338752746582
    8. '	return' → logprob: -10.767338752746582
    9. '   ' → logprob: -10.892338752746582
    10. ' ' → logprob: -11.267338752746582

Token 163: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03678912669420242
    2. ' return' → logprob: -3.9117891788482666
    3. 'return' → logprob: -4.7867889404296875
    4. ' n' → logprob: -5.7867889404296875
    5. 'f' → logprob: -6.2867889404296875
    6. ' ' → logprob: -7.0367889404296875
    7. ' faut' → logprob: -7.2867889404296875
    8. 'n' → logprob: -7.6617889404296875
    9. ' ' → logprob: -8.536788940429688
    10. ' vaut' → logprob: -9.786788940429688

Token 164: ''y' (ID: 27913)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019187772646546364
    2. 'y' → logprob: -4.894187927246094
    3. 'return' → logprob: -6.019187927246094
    4. ' return' → logprob: -6.144187927246094
    5. 'est' → logprob: -6.269187927246094
    6. ' y' → logprob: -6.394187927246094
    7. 'f' → logprob: -7.144187927246094
    8. ' faut' → logprob: -8.019187927246094
    9. '    ' → logprob: -8.144187927246094
    10. ' ' → logprob: -8.269187927246094

Token 165: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.017177030444145203
    2. ' a' → logprob: -4.142177104949951
    3. 'pe' → logprob: -7.517177104949951
    4. 'y' → logprob: -8.392176628112793
    5. 'en' → logprob: -9.267176628112793
    6. ' peut' → logprob: -9.517176628112793
    7. ''a' → logprob: -9.767176628112793
    8. 'est' → logprob: -9.767176628112793
    9. 'avait' → logprob: -11.017176628112793
    10. '   ' → logprob: -11.517176628112793

Token 166: ' qu' (ID: 474)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45094817876815796
    2. ' toujours' → logprob: -2.2009482383728027
    3. '1' → logprob: -2.3259482383728027
    4. 'au' → logprob: -3.3259482383728027
    5. ' h' → logprob: -3.8259482383728027
    6. ' pas' → logprob: -4.325948238372803
    7. ' que' → logprob: -4.325948238372803
    8. 'h' → logprob: -4.700948238372803
    9. ' au' → logprob: -4.700948238372803
    10. 'pas' → logprob: -4.950948238372803

Token 167: ''un' (ID: 9788)
  Prédit: ''une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.5119760632514954
    2. 'une' → logprob: -1.0119760036468506
    3. ''un' → logprob: -4.01197624206543
    4. 'e' → logprob: -5.26197624206543
    5. '1' → logprob: -5.38697624206543
    6. 'u' → logprob: -5.76197624206543
    7. ''à' → logprob: -6.13697624206543
    8. 'un' → logprob: -6.88697624206543
    9. ''au' → logprob: -7.38697624206543
    10. ''' → logprob: -7.51197624206543

Token 168: ' seul' (ID: 33041)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.9460663199424744
    2. ' cell' → logprob: -1.1960663795471191
    3. ' seul' → logprob: -2.446066379547119
    4. ' choix' → logprob: -2.696066379547119
    5. 'se' → logprob: -3.071066379547119
    6. 'case' → logprob: -3.946066379547119
    7. 'e' → logprob: -3.946066379547119
    8. 'élé' → logprob: -4.446066379547119
    9. ' cellule' → logprob: -4.446066379547119
    10. ' case' → logprob: -4.821066379547119

Token 169: ' choix' (ID: 28642)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.14371293783187866
    2. 'cho' → logprob: -3.0187129974365234
    3. ' cell' → logprob: -3.3937129974365234
    4. 'c' → logprob: -4.518712997436523
    5. ' choix' → logprob: -4.518712997436523
    6. 'élé' → logprob: -4.518712997436523
    7. 'e' → logprob: -5.143712997436523
    8. 'cel' → logprob: -6.393712997436523
    9. 'case' → logprob: -6.518712997436523
    10. 'car' → logprob: -7.018712997436523

Token 170: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0613681823015213
    2. '    
' → logprob: -3.061368227005005
    3. ',' → logprob: -4.936367988586426
    4. '   
' → logprob: -6.436367988586426
    5. '  
' → logprob: -6.936367988586426
    6. '
' → logprob: -7.436367988586426
    7. ' 
' → logprob: -7.436367988586426
    8. '    ' → logprob: -7.936367988586426
    9. ' return' → logprob: -8.186367988586426
    10. ':' → logprob: -8.686367988586426

Token 171: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019760753959417343
    2. '    
' → logprob: -4.519760608673096
    3. '       ' → logprob: -5.519760608673096
    4. ',' → logprob: -6.394760608673096
    5. '
' → logprob: -7.144760608673096
    6. ':' → logprob: -7.269760608673096
    7. '   
' → logprob: -7.394760608673096
    8. ' 
' → logprob: -8.394761085510254
    9. '    ' → logprob: -8.644761085510254
    10. '  
' → logprob: -9.269761085510254

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004403651691973209
    2. '
' → logprob: -6.129403591156006
    3. '    
' → logprob: -6.254403591156006
    4. 'if' → logprob: -9.004404067993164
    5. ' 
' → logprob: -10.129404067993164
    6. ' if' → logprob: -10.254404067993164
    7. '       ' → logprob: -11.004404067993164
    8. '    ' → logprob: -11.129404067993164
    9. '\n' → logprob: -11.129404067993164
    10. '   
' → logprob: -11.254404067993164

Token 173: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7884185910224915
    2. 'if' (adapté à ' if') → logprob: -0.7884185910224915
    3. ' if' → logprob: -2.4134185314178467
    4. 'return' → logprob: -6.788418769836426
    5. ' return' → logprob: -8.538418769836426
    6. '    ' → logprob: -11.163418769836426
    7. '  ' → logprob: -11.788418769836426
    8. '    
' → logprob: -12.538418769836426
    9. '   ' → logprob: -12.538418769836426
    10. ' ' → logprob: -12.663418769836426

Token 174: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.009859737940132618
    2. 'h' → logprob: -4.634859561920166
    3. ' min' → logprob: -9.259860038757324
    4. 'min' → logprob: -12.509860038757324
    5. ' ' → logprob: -12.884860038757324
    6. ' ' → logprob: -14.509860038757324
    7. ' max' → logprob: -14.509860038757324
    8. ' (' → logprob: -14.509860038757324
    9. '1' → logprob: -15.259860038757324
    10. '	h' → logprob: -15.259860038757324

Token 175: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07192803919315338
    2. '==' → logprob: -2.696928024291992
    3. ' ' → logprob: -6.696928024291992
    4. ' <=' → logprob: -7.696928024291992
    5. ' or' → logprob: -9.321928024291992
    6. '1' → logprob: -9.321928024291992
    7. '<=' → logprob: -10.571928024291992
    8. '=' → logprob: -10.821928024291992
    9. ' *' → logprob: -10.946928024291992
    10. ' <' → logprob: -10.946928024291992

Token 176: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2520090639591217
    2. ' ' → logprob: -1.5020090341567993
    3. '0' → logprob: -9.502009391784668
    4. '   ' → logprob: -13.127009391784668
    5. '  ' → logprob: -13.252009391784668
    6. ' ' → logprob: -14.377009391784668
    7. ' or' → logprob: -15.627009391784668
    8. '```' → logprob: -15.814509391784668
    9. '	' → logprob: -15.877009391784668
    10. '=' → logprob: -16.43950843811035

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.057743949990254e-05
    2. ' ' → logprob: -11.000020980834961
    3. '0' → logprob: -12.500020980834961
    4. '   ' → logprob: -17.31252098083496
    5. '```' → logprob: -17.68752098083496
    6. '  ' → logprob: -17.81252098083496
    7. '' → logprob: -19.25002098083496
    8. '
' → logprob: -19.31252098083496
    9. '１' → logprob: -19.37502098083496
    10. '=' → logprob: -19.43752098083496

Token 178: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.003765285713598132
    2. 'or' → logprob: -5.628765106201172
    3. ' ' → logprob: -9.628765106201172
    4. ':' → logprob: -9.753765106201172
    5. '   ' → logprob: -10.503765106201172
    6. '    ' → logprob: -12.503765106201172
    7. '	or' → logprob: -12.503765106201172
    8. '  ' → logprob: -13.378765106201172
    9. ' and' → logprob: -13.753765106201172
    10. ' ou' → logprob: -14.378765106201172

Token 179: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.31327512860298157
    2. 'w' → logprob: -1.3132750988006592
    3. '   ' → logprob: -11.563275337219238
    4. '	w' → logprob: -13.313275337219238
    5. ' ' → logprob: -14.313275337219238
    6. '1' → logprob: -14.688275337219238
    7. ' ' → logprob: -15.188275337219238
    8. '    ' → logprob: -15.313275337219238
    9. '```' → logprob: -15.563275337219238
    10. '  ' → logprob: -16.313274383544922

Token 180: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03806604817509651
    2. '==' → logprob: -3.2880661487579346
    3. ' ' → logprob: -11.163065910339355
    4. ' <=' → logprob: -12.288065910339355
    5. '<|end|>' → logprob: -13.413065910339355
    6. '1' → logprob: -13.663065910339355
    7. '=' → logprob: -14.163065910339355
    8. ' ' → logprob: -14.788065910339355
    9. '   ' → logprob: -15.038065910339355
    10. ')==' → logprob: -15.038065910339355

Token 181: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013266648165881634
    2. ' ' → logprob: -6.626326560974121
    3. '   ' → logprob: -15.001326560974121
    4. '0' → logprob: -15.126326560974121
    5. '<|end|>' → logprob: -16.313827514648438
    6. '```' → logprob: -16.688827514648438
    7. '  ' → logprob: -16.938827514648438
    8. '=' → logprob: -18.313827514648438
    9. 'import' → logprob: -18.438827514648438
    10. '１' → logprob: -19.063827514648438

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '0' → logprob: -15.875015258789062
    4. '   ' → logprob: -16.875015258789062
    5. '```' → logprob: -17.125015258789062
    6. '  ' → logprob: -18.125015258789062
    7. '<|end|>' → logprob: -19.187515258789062
    8. '    ' → logprob: -19.625015258789062
    9. 'import' → logprob: -19.687515258789062
    10. '۱' → logprob: -19.750015258789062

Token 183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008067441172897816
    2. ':
' → logprob: -4.883067607879639
    3. ':return' → logprob: -7.883067607879639
    4. '   ' → logprob: -9.50806713104248
    5. ':
' → logprob: -12.25806713104248
    6. '       ' → logprob: -12.75806713104248
    7. ' :' → logprob: -13.88306713104248
    8. ':

' → logprob: -15.00806713104248
    9. ',' → logprob: -15.38306713104248
    10. 'return' → logprob: -15.50806713104248

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6326007843017578
    2. '   ' → logprob: -1.0076007843017578
    3. ':' → logprob: -2.507600784301758
    4. '1' → logprob: -5.007600784301758
    5. ' return' → logprob: -5.507600784301758
    6. 'return' → logprob: -5.632600784301758
    7. ':return' → logprob: -5.882600784301758
    8. ':
' → logprob: -6.632600784301758
    9. '
' → logprob: -6.757600784301758
    10. '4' → logprob: -7.382600784301758

Token 185: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015977714210748672
    2. '   ' → logprob: -4.89097785949707
    3. '1' → logprob: -5.01597785949707
    4. ' return' → logprob: -6.39097785949707
    5. '2' → logprob: -12.26597785949707
    6. '0' → logprob: -12.51597785949707
    7. 'ret' → logprob: -12.89097785949707
    8. ':return' → logprob: -12.89097785949707
    9. '       ' → logprob: -13.01597785949707
    10. '```' → logprob: -13.39097785949707

Token 186: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036602874752134085
    2. ' ' → logprob: -5.628660202026367
    3. 'max' → logprob: -10.128660202026367
    4. ' max' → logprob: -11.378660202026367
    5. '   ' → logprob: -12.753660202026367
    6. 'h' → logprob: -13.003660202026367
    7. ' h' → logprob: -14.128660202026367
    8. '(' → logprob: -14.191160202026367
    9. 'min' → logprob: -14.378660202026367
    10. ' ' → logprob: -14.878660202026367

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010103036183863878
    2. 'max' → logprob: -7.126010417938232
    3. 'h' → logprob: -9.001009941101074
    4. '(' → logprob: -10.751009941101074
    5. '(max' → logprob: -10.751009941101074
    6. '(h' → logprob: -10.876009941101074
    7. 'min' → logprob: -11.126009941101074
    8. ' ' → logprob: -12.876009941101074
    9. '(min' → logprob: -14.126009941101074
    10. '((' → logprob: -14.251009941101074

Token 188: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8227463364601135
    2. '    
' → logprob: -1.0727462768554688
    3. '
' → logprob: -1.6977462768554688
    4. '  
' → logprob: -3.9477462768554688
    5. '   
' → logprob: -5.197746276855469
    6. '\n' → logprob: -5.322746276855469
    7. ' 
' → logprob: -6.072746276855469
    8. '  ' → logprob: -7.822746276855469
    9. '    ' → logprob: -7.822746276855469
    10. '
    
' → logprob: -7.947746276855469

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00891838688403368
    2. '    
' → logprob: -5.008918285369873
    3. '
' → logprob: -7.383918285369873
    4. 'return' → logprob: -7.633918285369873
    5. '  
' → logprob: -8.633918762207031
    6. '   
' → logprob: -8.883918762207031
    7. 'cells' → logprob: -9.133918762207031
    8. 'max' → logprob: -9.508918762207031
    9. '  ' → logprob: -9.508918762207031
    10. ' return' → logprob: -9.633918762207031

Token 190: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18692685663700104
    2. 'max' → logprob: -2.18692684173584
    3. 'total' → logprob: -3.56192684173584
    4. '#' (adapté à ' #') → logprob: -4.68692684173584
    5. 'result' → logprob: -5.06192684173584
    6. 'cells' → logprob: -5.43692684173584
    7. 'rows' → logprob: -6.56192684173584
    8. 'else' → logprob: -6.56192684173584
    9. 'half' → logprob: -6.56192684173584
    10. 'if' → logprob: -6.68692684173584

Token 191: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.626620888710022
    2. 'max' → logprob: -1.251620888710022
    3. 'result' → logprob: -3.2516207695007324
    4. ' return' → logprob: -3.3766207695007324
    5. 'total' → logprob: -3.6266207695007324
    6. 'cells' → logprob: -3.7516207695007324
    7. '#' → logprob: -3.8766207695007324
    8. ' max' → logprob: -4.626620769500732
    9. 'res' → logprob: -6.001620769500732
    10. 'else' → logprob: -6.126620769500732

Token 192: ' la' (ID: 557)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.7660602927207947
    2. ' (' → logprob: -0.7660602927207947
    3. '(h' → logprob: -3.2660603523254395
    4. 'h' → logprob: -3.5160603523254395
    5. '(' → logprob: -6.3910603523254395
    6. ' ' → logprob: -8.016059875488281
    7. '((' → logprob: -9.641059875488281
    8. ' w' → logprob: -10.078559875488281
    9. ' ((' → logprob: -10.203559875488281
    10. '   ' → logprob: -10.203559875488281

Token 193: ' grille' (ID: 99153)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1723192036151886
    2. '(h' → logprob: -2.297319173812866
    3. ' (' → logprob: -3.297319173812866
    4. ' h' → logprob: -4.047319412231445
    5. 'w' → logprob: -7.422319412231445
    6. '   ' → logprob: -7.797319412231445
    7. '(' → logprob: -8.172319412231445
    8. ' ' → logprob: -8.172319412231445
    9. 'max' → logprob: -8.297319412231445
    10. 'else' → logprob: -8.922319412231445

Token 194: ' a' (ID: 261)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1735832691192627
    2. ' %' → logprob: -2.7985832691192627
    3. '   ' → logprob: -3.2985832691192627
    4. '==' → logprob: -4.423583030700684
    5. ' est' → logprob: -4.548583030700684
    6. ' is' → logprob: -5.048583030700684
    7. ' has' → logprob: -5.173583030700684
    8. ' a' → logprob: -5.423583030700684
    9. ' ==' → logprob: -5.548583030700684
    10. '*' → logprob: -6.048583030700684

Token 195: ' plus' (ID: 2932)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0029572248458862
    2. ' h' → logprob: -1.3779572248458862
    3. '2' → logprob: -2.252957344055176
    4. ' ' → logprob: -2.502957344055176
    5. ' une' → logprob: -2.502957344055176
    6. ' au' → logprob: -3.502957344055176
    7. ' deux' → logprob: -3.752957344055176
    8. ' un' → logprob: -3.877957344055176
    9. 'une' → logprob: -5.502957344055176
    10. 'au' → logprob: -5.502957344055176

Token 196: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6935065388679504
    2. ' de' → logprob: -0.9435065388679504
    3. 'ieurs' → logprob: -3.1935064792633057
    4. '   ' → logprob: -3.3185064792633057
    5. '=' → logprob: -3.9435064792633057
    6. '  ' → logprob: -5.193506717681885
    7. 'd' → logprob: -6.568506717681885
    8. ' =' → logprob: -6.943506717681885
    9. ' d' → logprob: -7.318506717681885
    10. '    ' → logprob: -7.318506717681885

Token 197: ''une' (ID: 13337)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3686935305595398
    2. '1' → logprob: -1.7436935901641846
    3. 'de' → logprob: -3.1186935901641846
    4. ' ' → logprob: -3.4936935901641846
    5. 'une' → logprob: -4.1186933517456055
    6. '2' → logprob: -4.3686933517456055
    7. '   ' → logprob: -5.1186933517456055
    8. ' de' → logprob: -5.4936933517456055
    9. 'au' → logprob: -5.6186933517456055
    10. 'd' → logprob: -5.7436933517456055

Token 198: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.5164490938186646
    2. ' ligne' → logprob: -1.0164490938186646
    3. ' ' → logprob: -3.391448974609375
    4. ' case' → logprob: -5.891448974609375
    5. '1' → logprob: -6.391448974609375
    6. '2' → logprob: -7.141448974609375
    7. ' cellule' → logprob: -7.516448974609375
    8. 'l' → logprob: -7.766448974609375
    9. 'case' → logprob: -7.766448974609375
    10. 'dimension' → logprob: -8.391448974609375

Token 199: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.30259180068969727
    2. ' et' → logprob: -2.3025918006896973
    3. ' or' → logprob: -2.4275918006896973
    4. '   ' → logprob: -3.6775918006896973
    5. 'and' → logprob: -3.8025918006896973
    6. ' ou' → logprob: -4.052591800689697
    7. 'et' → logprob: -5.427591800689697
    8. ',' → logprob: -6.302591800689697
    9. 'or' → logprob: -7.552591800689697
    10. ' ' → logprob: -7.802591800689697

Token 200: ' colonne' (ID: 148275)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.4945395290851593
    2. ' plus' → logprob: -0.9945394992828369
    3. 'col' → logprob: -5.494539737701416
    4. ' colonne' → logprob: -5.619539737701416
    5. ' d' → logprob: -5.869539737701416
    6. ' de' → logprob: -6.244539737701416
    7. 'd' → logprob: -6.369539737701416
    8. 'de' → logprob: -6.619539737701416
    9. ' more' → logprob: -6.994539737701416
    10. ' une' → logprob: -7.119539737701416

Token 201: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2449817806482315
    2. ':' → logprob: -1.7449817657470703
    3. '   ' → logprob: -3.2449817657470703
    4. ':
' → logprob: -5.74498176574707
    5. ',
' → logprob: -8.86998176574707
    6. ':return' → logprob: -9.24498176574707
    7. '
' → logprob: -9.99498176574707
    8. ' ,' → logprob: -10.11998176574707
    9. ' :' → logprob: -10.86998176574707
    10. '.' → logprob: -10.86998176574707

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053792405873537064
    2. ' return' → logprob: -3.3037924766540527
    3. 'return' → logprob: -4.303792476654053
    4. ' max' → logprob: -6.928792476654053
    5. 'max' → logprob: -7.428792476654053
    6. ' half' → logprob: -9.053791999816895
    7. ' result' → logprob: -9.428791999816895
    8. 'result' → logprob: -9.678791999816895
    9. ' cells' → logprob: -10.053791999816895
    10. '    
' → logprob: -10.178791999816895

Token 203: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6610348224639893
    2. '   ' → logprob: -1.0360348224639893
    3. 'return' → logprob: -2.1610348224639893
    4. ' max' → logprob: -5.03603458404541
    5. 'max' → logprob: -5.53603458404541
    6. ' result' → logprob: -7.03603458404541
    7. ' cells' → logprob: -7.66103458404541
    8. 'result' → logprob: -7.78603458404541
    9. ' #' → logprob: -8.66103458404541
    10. ' total' → logprob: -8.78603458404541

Token 204: ' on' (ID: 402)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3106948137283325
    2. '   ' → logprob: -1.9356948137283325
    3. 'return' → logprob: -2.685694694519043
    4. ' max' → logprob: -3.560694694519043
    5. ' result' → logprob: -4.810694694519043
    6. 'max' → logprob: -5.185694694519043
    7. ' cells' → logprob: -5.560694694519043
    8. 'result' → logprob: -6.560694694519043
    9. ' total' → logprob: -6.810694694519043
    10. ' #' → logprob: -7.435694694519043

Token 205: ' place' (ID: 2475)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09963299334049225
    2. ' return' → logprob: -3.224632978439331
    3. 'return' → logprob: -4.34963321685791
    4. ' calc' → logprob: -4.34963321685791
    5. '    ' → logprob: -4.47463321685791
    6. ' retourne' → logprob: -5.22463321685791
    7. ' utilise' → logprob: -5.97463321685791
    8. ' continue' → logprob: -7.09963321685791
    9. ' calcul' → logprob: -7.22463321685791
    10. ' ' → logprob: -7.53713321685791

Token 206: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4139629602432251
    2. ' des' → logprob: -2.0389628410339355
    3. 'les' → logprob: -2.1639628410339355
    4. 'des' → logprob: -3.4139628410339355
    5. ' ' → logprob: -4.2889628410339355
    6. ' la' → logprob: -4.9139628410339355
    7. ' une' → logprob: -5.2889628410339355
    8. ' un' → logprob: -5.9139628410339355
    9. 'sur' → logprob: -5.9139628410339355
    10. ' le' → logprob: -6.0389628410339355

Token 207: ' maximum' (ID: 10562)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5570914149284363
    2. ' maximum' → logprob: -2.682091474533081
    3. ' cells' → logprob: -2.932091474533081
    4. ' nombre' → logprob: -2.932091474533081
    5. ' code' → logprob: -3.432091474533081
    6. 'nombre' → logprob: -3.432091474533081
    7. 'max' → logprob: -3.807091474533081
    8. 'es' → logprob: -3.807091474533081
    9. 'maximum' → logprob: -3.932091474533081
    10. 'cells' → logprob: -4.182091236114502

Token 208: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.21566241979599
    2. 'de' → logprob: -2.8406624794006348
    3. ' //' → logprob: -2.8406624794006348
    4. ' possible' → logprob: -3.9656624794006348
    5. '//' → logprob: -4.340662479400635
    6. ' d' → logprob: -4.590662479400635
    7. '_possible' → logprob: -4.840662479400635
    8. '   ' → logprob: -5.340662479400635
    9. ' ' → logprob: -5.340662479400635
    10. 'possible' → logprob: -5.465662479400635

Token 209: ' cases' (ID: 7911)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9119807481765747
    2. ' cellules' → logprob: -1.9119807481765747
    3. '(h' → logprob: -2.036980628967285
    4. '(' → logprob: -2.661980628967285
    5. '((' → logprob: -2.786980628967285
    6. ' ' → logprob: -2.786980628967285
    7. ' cells' → logprob: -3.286980628967285
    8. 'cells' → logprob: -3.411980628967285
    9. ' ((' → logprob: -4.161980628967285
    10. 'cases' → logprob: -4.286980628967285

Token 210: ' de' (ID: 334)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -1.0228439569473267
    2. ' chois' → logprob: -1.6478439569473267
    3. ' sur' → logprob: -2.772843837738037
    4. ' possible' → logprob: -2.772843837738037
    5. '_no' → logprob: -3.147843837738037
    6. 'sur' → logprob: -3.272843837738037
    7. ' possibles' → logprob: -3.772843837738037
    8. 'no' → logprob: -3.897843837738037
    9. ' bl' → logprob: -3.897843837738037
    10. 'possible' → logprob: -4.022843837738037

Token 211: ' manière' (ID: 35013)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4930055141448975
    2. ' la' → logprob: -2.2430055141448975
    3. '2' → logprob: -2.3680055141448975
    4. '1' → logprob: -2.6180055141448975
    5. 'cases' → logprob: -2.8680055141448975
    6. ' couleur' → logprob: -2.8680055141448975
    7. 'la' → logprob: -2.9930055141448975
    8. ' (' → logprob: -3.2430055141448975
    9. 'cou' → logprob: -3.2430055141448975
    10. 'l' → logprob: -3.3680055141448975

Token 212: ' qu' (ID: 474)
  Prédit: 'altern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'altern' → logprob: -1.606649398803711
    2. ' espac' → logprob: -1.731649398803711
    3. ' non' → logprob: -1.856649398803711
    4. ' altern' → logprob: -1.981649398803711
    5. ' à' → logprob: -2.356649398803711
    6. ' chess' → logprob: -2.606649398803711
    7. ' ' → logprob: -3.731649398803711
    8. '1' → logprob: -4.231649398803711
    9. 'non' → logprob: -4.481649398803711
    10. 'esp' → logprob: -4.481649398803711

Token 213: ''' (ID: 6)
  Prédit: ''elles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''elles' → logprob: -0.25992247462272644
    2. ''' → logprob: -2.259922504425049
    3. ' elles' → logprob: -3.509922504425049
    4. 'auc' → logprob: -3.884922504425049
    5. ' aucune' → logprob: -4.009922504425049
    6. 'elles' → logprob: -4.134922504425049
    7. ''il' → logprob: -5.259922504425049
    8. '   ' → logprob: -5.259922504425049
    9. 'e' → logprob: -5.259922504425049
    10. ' aucun' → logprob: -5.259922504425049

Token 214: 'auc' (ID: 11816)
  Prédit: 'auc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auc' → logprob: -0.17637811601161957
    2. 'elles' → logprob: -2.551378011703491
    3. ' aucune' → logprob: -3.551378011703491
    4. ''' → logprob: -3.926378011703491
    5. ''elles' → logprob: -3.926378011703491
    6. ' elles' → logprob: -5.67637825012207
    7. ''il' → logprob: -6.05137825012207
    8. ' aucun' → logprob: -6.17637825012207
    9. 'une' → logprob: -6.42637825012207
    10. 'il' → logprob: -6.80137825012207

Token 215: 'un' (ID: 373)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.038548145443201065
    2. 'auc' → logprob: -3.288548231124878
    3. '   ' → logprob: -8.913548469543457
    4. ' aucune' → logprob: -9.663548469543457
    5. 'ucune' → logprob: -9.913548469543457
    6. 'e' → logprob: -10.288548469543457
    7. 'un' → logprob: -10.413548469543457
    8. ''' → logprob: -10.538548469543457
    9. '
' → logprob: -10.538548469543457
    10. '#' → logprob: -10.913548469543457

Token 216: ' deux' (ID: 10301)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4109649956226349
    2. 'es' → logprob: -2.2859649658203125
    3. ' deux' → logprob: -2.7859649658203125
    4. ' ' → logprob: -3.1609649658203125
    5. 'adj' → logprob: -3.6609649658203125
    6. 'de' → logprob: -3.9109649658203125
    7. 's' → logprob: -4.9109649658203125
    8. 'a' → logprob: -4.9109649658203125
    9. ' choix' → logprob: -5.2859649658203125
    10. ' adj' → logprob: -5.4109649658203125

Token 217: ' ne' (ID: 453)
  Prédit: ' cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cases' → logprob: -0.6498876214027405
    2. 'cases' → logprob: -1.7748875617980957
    3. ' cellules' → logprob: -2.0248875617980957
    4. ' ' → logprob: -3.1498875617980957
    5. ' cells' → logprob: -3.6498875617980957
    6. 'adj' → logprob: -3.8998875617980957
    7. '   ' → logprob: -4.524887561798096
    8. 'cells' → logprob: -5.149887561798096
    9. 's' → logprob: -5.149887561798096
    10. 'e' → logprob: -5.274887561798096

Token 218: ' soient' (ID: 59497)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.07313116639852524
    2. ' soient' → logprob: -3.0731310844421387
    3. 's' → logprob: -3.8231310844421387
    4. ' soit' → logprob: -6.698131084442139
    5. ' so' → logprob: -7.573131084442139
    6. 'adj' → logprob: -8.323131561279297
    7. 'soy' → logprob: -9.198131561279297
    8. ' sois' → logprob: -9.323131561279297
    9. 'aient' → logprob: -10.198131561279297
    10. ' ' → logprob: -10.573131561279297

Token 219: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.13425537943840027
    2. ' adj' → logprob: -2.1342554092407227
    3. ' adjacent' → logprob: -5.259255409240723
    4. ' ' → logprob: -8.009255409240723
    5. ' côte' → logprob: -8.134255409240723
    6. 'ad' → logprob: -8.259255409240723
    7. 'cho' → logprob: -8.509255409240723
    8. 's' → logprob: -9.259255409240723
    9. ' vertical' → logprob: -9.384255409240723
    10. '   ' → logprob: -9.384255409240723

Token 220: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.23741529881954193
    2. 'acent' → logprob: -1.6124153137207031
    3. 'a' → logprob: -5.612415313720703
    4. 'acency' → logprob: -6.362415313720703
    5. '```' → logprob: -7.237415313720703
    6. 'oints' → logprob: -7.299915313720703
    7. 'acement' → logprob: -7.362415313720703
    8. '   ' → logprob: -7.799915313720703
    9. 'acen' → logprob: -8.237415313720703
    10. '
' → logprob: -8.237415313720703

Token 221: 'entes' (ID: 5651)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.21252180635929108
    2. 'ent' → logprob: -1.8375217914581299
    3. 'entes' → logprob: -3.58752179145813
    4. 'ente' → logprob: -5.712522029876709
    5. 'e' → logprob: -7.962522029876709
    6. 'es' → logprob: -8.46252155303955
    7. ' ent' → logprob: -9.58752155303955
    8. '
' → logprob: -10.02502155303955
    9. 'nt' → logprob: -10.21252155303955
    10. '   ' → logprob: -10.40002155303955

Token 222: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.207817941904068
    2. ',' → logprob: -2.332818031311035
    3. ' (' → logprob: -3.957818031311035
    4. '.' → logprob: -3.957818031311035
    5. ' sur' → logprob: -4.082818031311035
    6. ' en' → logprob: -5.082818031311035
    7. ' ' → logprob: -5.332818031311035
    8. ' dans' → logprob: -5.457818031311035
    9. 's' → logprob: -6.332818031311035
    10. ' par' → logprob: -6.707818031311035

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00031067515374161303
    2. '    
' → logprob: -8.250310897827148
    3. '
' → logprob: -11.250310897827148
    4. ',' → logprob: -11.625310897827148
    5. ':' → logprob: -12.000310897827148
    6. '    ' → logprob: -12.125310897827148
    7. '   
' → logprob: -12.875310897827148
    8. '  
' → logprob: -13.000310897827148
    9. 'return' → logprob: -13.125310897827148
    10. '   ' → logprob: -13.250310897827148

Token 224: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08012531697750092
    2. ' return' → logprob: -3.205125331878662
    3. 'return' → logprob: -3.580125331878662
    4. 'max' → logprob: -5.705125331878662
    5. ' max' → logprob: -5.955125331878662
    6. '    
' → logprob: -7.330125331878662
    7. ' cells' → logprob: -7.455125331878662
    8. 'cells' → logprob: -7.705125331878662
    9. 'result' → logprob: -8.330124855041504
    10. ' result' → logprob: -8.580124855041504

Token 225: ' Une' (ID: 19758)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8137028217315674
    2. 'return' → logprob: -0.8137028217315674
    3. 'max' → logprob: -3.0637028217315674
    4. '   ' → logprob: -3.5637028217315674
    5. ' max' → logprob: -3.6887028217315674
    6. 'cells' → logprob: -5.688702583312988
    7. ' cells' → logprob: -6.188702583312988
    8. 'result' → logprob: -6.313702583312988
    9. ' result' → logprob: -6.438702583312988
    10. ' total' → logprob: -6.563702583312988

Token 226: ' stratégie' (ID: 79899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3341137766838074
    2. ' return' → logprob: -2.334113836288452
    3. 'max' → logprob: -3.084113836288452
    4. 'return' → logprob: -3.709113836288452
    5. ' max' → logprob: -3.834113836288452
    6. ' maximum' → logprob: -4.834113597869873
    7. ' ' → logprob: -4.959113597869873
    8. '  ' → logprob: -5.209113597869873
    9. ' total' → logprob: -5.334113597869873
    10. ' nb' → logprob: -5.709113597869873

Token 227: ' efficace' (ID: 54338)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2256169319152832
    2. '   ' → logprob: -1.4756169319152832
    3. ' possible' → logprob: -2.100616931915283
    4. ':' → logprob: -2.225616931915283
    5. ' consiste' → logprob: -2.350616931915283
    6. ' simple' → logprob: -3.225616931915283
    7. ' optimale' → logprob: -3.600616931915283
    8. ' =' → logprob: -3.975616931915283
    9. ' classique' → logprob: -4.600616931915283
    10. ' :' → logprob: -4.850616931915283

Token 228: ' est' (ID: 893)
  Prédit: ' consiste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' consiste' → logprob: -0.44690650701522827
    2. ' est' → logprob: -1.696906566619873
    3. '   ' → logprob: -2.196906566619873
    4. ':' → logprob: -3.696906566619873
    5. ' is' → logprob: -4.821906566619873
    6. ' =' → logprob: -5.071906566619873
    7. ' :' → logprob: -5.446906566619873
    8. 'cons' → logprob: -5.571906566619873
    9. ' serait' → logprob: -5.571906566619873
    10. 'est' → logprob: -6.071906566619873

Token 229: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4966023564338684
    2. ' d' → logprob: -1.3716022968292236
    3. '    ' → logprob: -2.1216022968292236
    4. '   ' → logprob: -4.746602535247803
    5. 'de' → logprob: -5.121602535247803
    6. 'd' → logprob: -6.121602535247803
    7. ' ' → logprob: -7.996602535247803
    8. ' (' → logprob: -8.496602058410645
    9. ' la' → logprob: -8.996602058410645
    10. '  ' → logprob: -9.996602058410645

Token 230: ' considérer' (ID: 172894)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3503957986831665
    2. ' ((' → logprob: -1.7253957986831665
    3. '(h' → logprob: -2.725395679473877
    4. ' (' → logprob: -3.225395679473877
    5. '(' → logprob: -5.600395679473877
    6. 'return' → logprob: -6.850395679473877
    7. ' calcul' → logprob: -6.975395679473877
    8. 'div' → logprob: -6.975395679473877
    9. ' utiliser' → logprob: -6.975395679473877
    10. '(((' → logprob: -7.475395679473877

Token 231: ' une' (ID: 2463)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.09676844626665115
    2. '(h' → logprob: -2.721768379211426
    3. ' ' → logprob: -4.971768379211426
    4. ' ((' → logprob: -5.096768379211426
    5. '(' → logprob: -5.346768379211426
    6. '((' → logprob: -5.846768379211426
    7. '   ' → logprob: -6.846768379211426
    8. ' la' → logprob: -6.846768379211426
    9. ' h' → logprob: -7.221768379211426
    10. ' les' → logprob: -7.346768379211426

Token 232: ' altern' (ID: 7310)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3536776006221771
    2. '(h' → logprob: -1.7286776304244995
    3. '((' → logprob: -2.60367751121521
    4. ' ((' → logprob: -4.478677749633789
    5. ' chess' → logprob: -5.228677749633789
    6. '(' → logprob: -5.353677749633789
    7. ' checker' → logprob: -5.853677749633789
    8. 'case' → logprob: -5.978677749633789
    9. ' ' → logprob: -6.353677749633789
    10. '(
' → logprob: -6.478677749633789

Token 233: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.07501506060361862
    2. 'ate' → logprob: -3.700015068054199
    3. 'ée' → logprob: -4.325015068054199
    4. 'e' → logprob: -4.575015068054199
    5. 'ative' → logprob: -5.325015068054199
    6. 'é' → logprob: -5.575015068054199
    7. 'a' → logprob: -6.075015068054199
    8. 'ating' → logprob: -6.200015068054199
    9. 'ante' → logprob: -6.325015068054199
    10. 'at' → logprob: -6.450015068054199

Token 234: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.09441177546977997
    2. 'de' → logprob: -2.844411849975586
    3. ' entre' → logprob: -4.344411849975586
    4. ' des' → logprob: -4.844411849975586
    5. '   ' → logprob: -4.969411849975586
    6. 'e' → logprob: -6.969411849975586
    7. ' blanche' → logprob: -7.094411849975586
    8. ' ' → logprob: -7.719411849975586
    9. ' noire' → logprob: -8.719411849975586
    10. ' between' → logprob: -8.719411849975586

Token 235: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.3883560299873352
    2. ' cases' → logprob: -2.2633559703826904
    3. ' couleurs' → logprob: -2.3883559703826904
    4. ' ' → logprob: -3.2633559703826904
    5. '1' → logprob: -3.6383559703826904
    6. 'cou' → logprob: -4.0133562088012695
    7. 'case' → logprob: -4.6383562088012695
    8. '2' → logprob: -4.6383562088012695
    9. ' cellules' → logprob: -4.6383562088012695
    10. '0' → logprob: -6.0133562088012695

Token 236: ' (' (ID: 350)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -1.285217523574829
    2. 'no' → logprob: -1.410217523574829
    3. 'de' → logprob: -2.035217523574829
    4. ' de' → logprob: -2.535217523574829
    5. '_no' → logprob: -2.910217523574829
    6. 'sur' → logprob: -3.535217523574829
    7. ' chois' → logprob: -3.910217523574829
    8. ' (' → logprob: -4.03521728515625
    9. 'bl' → logprob: -4.16021728515625
    10. 's' → logprob: -4.28521728515625

Token 237: 'dam' (ID: 14202)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.596098005771637
    2. ' (' → logprob: -0.846098005771637
    3. ')' → logprob: -4.721097946166992
    4. '   ' → logprob: -5.221097946166992
    5. '(' → logprob: -7.221097946166992
    6. ' ' → logprob: -7.346097946166992
    7. '1' → logprob: -7.471097946166992
    8. 'de' → logprob: -7.596097946166992
    9. '((' → logprob: -7.846097946166992
    10. 'h' → logprob: -7.971097946166992

Token 238: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.011229134164750576
    2. 'iers' → logprob: -5.261229038238525
    3. 'e' → logprob: -6.136229038238525
    4. 'i' → logprob: -6.636229038238525
    5. 'ié' → logprob: -7.136229038238525
    6. 'es' → logprob: -7.261229038238525
    7. 'er' → logprob: -7.511229038238525
    8. 'ie' → logprob: -9.511229515075684
    9. '_' → logprob: -9.636229515075684
    10. '-' → logprob: -10.511229515075684

Token 239: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02302521839737892
    2. ' )' → logprob: -4.773025035858154
    3. ').' → logprob: -4.773025035858154
    4. ')
' → logprob: -5.898025035858154
    5. '),' → logprob: -6.398025035858154
    6. '")' → logprob: -8.398025512695312
    7. ',' → logprob: -8.648025512695312
    8. '   ' → logprob: -8.773025512695312
    9. 'e' → logprob: -9.273025512695312
    10. ' blanc' → logprob: -9.398025512695312

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002651503309607506
    2. '    
' → logprob: -8.625265121459961
    3. '
' → logprob: -11.125265121459961
    4. ' return' → logprob: -11.250265121459961
    5. 'return' → logprob: -11.250265121459961
    6. ',' → logprob: -11.500265121459961
    7. '    ' → logprob: -12.000265121459961
    8. ':' → logprob: -12.625265121459961
    9. '   ' → logprob: -12.625265121459961
    10. '  
' → logprob: -12.875265121459961

Token 241: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12596595287322998
    2. ' return' → logprob: -2.5009660720825195
    3. 'return' → logprob: -3.6259660720825195
    4. ' max' → logprob: -5.2509660720825195
    5. 'max' → logprob: -5.7509660720825195
    6. ' cells' → logprob: -8.25096607208252
    7. '    
' → logprob: -8.50096607208252
    8. 'cells' → logprob: -9.00096607208252
    9. ' result' → logprob: -9.12596607208252
    10. 'result' → logprob: -9.37596607208252

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029759511351585388
    2. '=' → logprob: -3.529759407043457
    3. '_' → logprob: -12.654759407043457
    4. ' ' → logprob: -13.029759407043457
    5. ' ' → logprob: -13.529759407043457
    6. '   ' → logprob: -14.154759407043457
    7. ' +=' → logprob: -14.779759407043457
    8. ' =(' → logprob: -15.529759407043457
    9. ' =
' → logprob: -15.654759407043457
    10. ' =
' → logprob: -15.904759407043457

Token 243: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20530353486537933
    2. '(h' → logprob: -1.7053035497665405
    3. '((' → logprob: -6.08030366897583
    4. ' ((' → logprob: -7.45530366897583
    5. '(' → logprob: -7.58030366897583
    6. '   ' → logprob: -7.83030366897583
    7. ' ' → logprob: -9.455303192138672
    8. '  ' → logprob: -11.580303192138672
    9. '(H' → logprob: -12.705303192138672
    10. 'h' → logprob: -12.830303192138672

Token 244: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.020564546808600426
    2. '(h' → logprob: -3.895564556121826
    3. ' (' → logprob: -11.770564079284668
    4. ' h' → logprob: -12.020564079284668
    5. '   ' → logprob: -12.645564079284668
    6. '(' → logprob: -13.145564079284668
    7. '((' → logprob: -13.270564079284668
    8. '(w' → logprob: -14.895564079284668
    9. '	h' → logprob: -15.645564079284668
    10. '"h' → logprob: -15.770564079284668

Token 245: ' //' (ID: 602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10168203711509705
    2. '*' → logprob: -2.35168194770813
    3. '*w' → logprob: -6.601682186126709
    4. ' ' → logprob: -9.47668170928955
    5. 'w' → logprob: -11.47668170928955
    6. '   ' → logprob: -11.47668170928955
    7. ' //' → logprob: -12.72668170928955
    8. '+' → logprob: -12.85168170928955
    9. ' ' → logprob: -12.85168170928955
    10. '  ' → logprob: -13.22668170928955

Token 246: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001173321157693863
    2. ' ' → logprob: -6.751173496246338
    3. '1' → logprob: -13.87617301940918
    4. ')' → logprob: -14.37617301940918
    5. '
' → logprob: -14.37617301940918
    6. '   ' → logprob: -14.87617301940918
    7. '

' → logprob: -15.50117301940918
    8. '3' → logprob: -15.68867301940918
    9. '  ' → logprob: -16.12617301940918
    10. '(' → logprob: -17.18867301940918

Token 247: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.750027656555176
    3. '1' → logprob: -12.125027656555176
    4. '
' → logprob: -15.125027656555176
    5. ')' → logprob: -15.625027656555176
    6. '   ' → logprob: -15.875027656555176
    7. '3' → logprob: -16.062528610229492
    8. '

' → logprob: -16.187528610229492
    9. '(' → logprob: -16.562528610229492
    10. '  ' → logprob: -16.937528610229492

Token 248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06643272191286087
    2. ' *' → logprob: -2.8164327144622803
    3. ' )' → logprob: -5.691432952880859
    4. '*' → logprob: -7.066432952880859
    5. '   ' → logprob: -8.69143295288086
    6. ')*' → logprob: -10.56643295288086
    7. ' ' → logprob: -10.69143295288086
    8. '*)' → logprob: -12.69143295288086
    9. '    ' → logprob: -13.19143295288086
    10. ' +' → logprob: -13.56643295288086

Token 249: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.029764845967292786
    2. '*' → logprob: -3.5297648906707764
    3. '   ' → logprob: -12.154765129089355
    4. ' ' → logprob: -12.404765129089355
    5. '*w' → logprob: -12.654765129089355
    6. ' ' → logprob: -13.779765129089355
    7. ')' → logprob: -15.029765129089355
    8. '    ' → logprob: -15.404765129089355
    9. ' *
' → logprob: -15.904765129089355
    10. 'w' → logprob: -16.52976417541504

Token 250: ' w' (ID: 286)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.05001771077513695
    2. 'w' → logprob: -3.6750175952911377
    3. ' (' → logprob: -4.050017833709717
    4. '((' → logprob: -5.550017833709717
    5. '(' → logprob: -6.300017833709717
    6. ' w' → logprob: -8.675017356872559
    7. ' ((' → logprob: -9.800017356872559
    8. ' ' → logprob: -11.175017356872559
    9. '   ' → logprob: -11.175017356872559
    10. '(
' → logprob: -11.550017356872559

Token 251: ' ' (ID: 220)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.043104469776153564
    2. '+' → logprob: -3.168104410171509
    3. ' +
' → logprob: -9.66810417175293
    4. ' ' → logprob: -10.54310417175293
    5. ' +(' → logprob: -11.91810417175293
    6. '
' → logprob: -12.79310417175293
    7. '    ' → logprob: -13.54310417175293
    8. '   ' → logprob: -13.54310417175293
    9. '+(' → logprob: -13.79310417175293
    10. '+
' → logprob: -13.91810417175293

Token 252: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5760174989700317
    2. ' +' → logprob: -0.8260174989700317
    3. ' +
' → logprob: -10.201017379760742
    4. ' ' → logprob: -11.326017379760742
    5. '+
' → logprob: -11.326017379760742
    6. '   ' → logprob: -12.326017379760742
    7. '
' → logprob: -12.576017379760742
    8. '+(' → logprob: -12.701017379760742
    9. '<|end|>' → logprob: -13.326017379760742
    10. '+h' → logprob: -14.076017379760742

Token 253: ' On' (ID: 2160)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.7966814637184143
    2. ' (' → logprob: -0.9216814637184143
    3. '((' → logprob: -2.7966814041137695
    4. '(w' → logprob: -3.2966814041137695
    5. ' ((' → logprob: -3.6716814041137695
    6. '2' → logprob: -4.2966814041137695
    7. ' ' → logprob: -4.6716814041137695
    8. 'w' → logprob: -6.5466814041137695
    9. '(' → logprob: -7.0466814041137695
    10. '(ans' → logprob: -8.04668140411377

Token 254: ' chois' (ID: 33475)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8615879416465759
    2. 'continue' → logprob: -1.9865880012512207
    3. ' chois' → logprob: -2.6115880012512207
    4. ' (' → logprob: -2.8615880012512207
    5. 'div' → logprob: -3.1115880012512207
    6. ' ajoute' → logprob: -3.7365880012512207
    7. 'contin' → logprob: -4.111588001251221
    8. ' place' → logprob: -4.236588001251221
    9. ' complète' → logprob: -4.236588001251221
    10. '+' → logprob: -4.611588001251221

Token 255: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.11361322551965714
    2. 't' → logprob: -2.2386131286621094
    3. 'et' → logprob: -8.86361312866211
    4. 'e' → logprob: -8.86361312866211
    5. 'i' → logprob: -9.73861312866211
    6. 'is' → logprob: -9.98861312866211
    7. 'le' → logprob: -10.73861312866211
    8. 'sit' → logprob: -10.73861312866211
    9. 'es' → logprob: -10.80111312866211
    10. 'at' → logprob: -10.98861312866211

Token 256: ' une' (ID: 2463)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.44929590821266174
    2. '<|end|>' → logprob: -1.6992958784103394
    3. '(h' → logprob: -3.324295997619629
    4. 'les' → logprob: -3.574295997619629
    5. ' h' → logprob: -3.824295997619629
    6. ' (' → logprob: -3.824295997619629
    7. ' la' → logprob: -4.074295997619629
    8. ' des' → logprob: -4.074295997619629
    9. ' ' → logprob: -4.449295997619629
    10. 'h' → logprob: -5.074295997619629

Token 257: ' ligne' (ID: 19583)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.5206015110015869
    2. 'ligne' → logprob: -1.145601511001587
    3. 'mo' → logprob: -2.895601511001587
    4. ' ligne' → logprob: -4.895601272583008
    5. 'dem' → logprob: -5.270601272583008
    6. ' moitié' → logprob: -5.395601272583008
    7. ' case' → logprob: -5.645601272583008
    8. 'rang' → logprob: -6.020601272583008
    9. ' mo' → logprob: -6.270601272583008
    10. 'col' → logprob: -6.395601272583008

Token 258: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.5075207948684692
    2. ' sur' → logprob: -1.5075207948684692
    3. 'de' → logprob: -2.6325206756591797
    4. ' de' → logprob: -3.3825206756591797
    5. '<|end|>' → logprob: -3.7575206756591797
    6. ' complète' → logprob: -3.8825206756591797
    7. ' +' → logprob: -4.88252067565918
    8. '+' → logprob: -5.63252067565918
    9. 's' → logprob: -5.88252067565918
    10. 'space' → logprob: -6.13252067565918

Token 259: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6507710218429565
    2. 'de' → logprob: -0.7757710218429565
    3. ' ' → logprob: -4.650771141052246
    4. ' deux' → logprob: -4.775771141052246
    5. ' two' → logprob: -12.400771141052246
    6. '  ' → logprob: -12.775771141052246
    7. 'two' → logprob: -13.025771141052246
    8. '	de' → logprob: -13.150771141052246
    9. '   ' → logprob: -13.275771141052246
    10. 'd' → logprob: -13.650771141052246

Token 260: ' (' (ID: 350)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.35192370414733887
    2. '+' → logprob: -1.4769237041473389
    3. '   ' → logprob: -3.351923704147339
    4. '<|end|>' → logprob: -3.851923704147339
    5. ' ' → logprob: -5.226923942565918
    6. ' +
' → logprob: -5.601923942565918
    7. ')' → logprob: -6.851923942565918
    8. '
' → logprob: -7.601923942565918
    9. '<|end|>' → logprob: -8.226923942565918
    10. '+
' → logprob: -8.476923942565918

Token 261: 'compl' (ID: 14845)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5301516652107239
    2. ')' → logprob: -0.9051516652107239
    3. ' ' → logprob: -5.780151844024658
    4. '2' → logprob: -5.905151844024658
    5. ' )
' → logprob: -7.655151844024658
    6. 'w' → logprob: -9.0301513671875
    7. '0' → logprob: -9.2801513671875
    8. ' ' → logprob: -9.2801513671875
    9. ')
' → logprob: -10.0301513671875
    10. ' w' → logprob: -10.1551513671875

Token 262: 'ètement' (ID: 66251)
  Prédit: 'ète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ète' → logprob: -0.055400554090738297
    2. 'ete' → logprob: -3.3054006099700928
    3. 'ément' → logprob: -5.305400371551514
    4. 'ètement' → logprob: -5.305400371551514
    5. 'et' → logprob: -6.305400371551514
    6. 'ement' → logprob: -6.680400371551514
    7. 'è' → logprob: -6.805400371551514
    8. 'te' → logprob: -7.055400371551514
    9. 'e' → logprob: -7.805400371551514
    10. 'èt' → logprob: -8.180400848388672

Token 263: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16344641149044037
    2. ' rempl' → logprob: -2.2884464263916016
    3. 'occup' → logprob: -4.163446426391602
    4. 'rem' → logprob: -4.413446426391602
    5. '),' → logprob: -5.413446426391602
    6. 'cho' → logprob: -5.538446426391602
    7. 'prise' → logprob: -6.413446426391602
    8. ' rempli' → logprob: -6.538446426391602
    9. 'pl' → logprob: -6.663446426391602
    10. 'filled' → logprob: -6.913446426391602

Token 264: '    
' (ID: 1944)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20321127772331238
    2. '   ' → logprob: -2.2032113075256348
    3. '+' → logprob: -2.7032113075256348
    4. ' +
' → logprob: -6.078211307525635
    5. ' ' → logprob: -6.328211307525635
    6. ' ans' → logprob: -6.328211307525635
    7. '    ' → logprob: -8.828210830688477
    8. '
' → logprob: -9.328210830688477
    9. '+
' → logprob: -9.453210830688477
    10. '    
' → logprob: -9.703210830688477

Token 265: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09236001968383789
    2. ' ans' → logprob: -2.717360019683838
    3. '+' → logprob: -4.342360019683838
    4. ' +' → logprob: -5.217360019683838
    5. '   ' → logprob: -6.092360019683838
    6. 'if' → logprob: -7.092360019683838
    7. '(ans' → logprob: -8.09235954284668
    8. '	ans' → logprob: -9.59235954284668
    9. ' if' → logprob: -9.71735954284668
    10. '+(' → logprob: -10.21735954284668

Token 266: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.007044863421469927
    2. 'if' → logprob: -5.007044792175293
    3. ' ans' → logprob: -8.382044792175293
    4. '(ans' → logprob: -10.257044792175293
    5. '   ' → logprob: -11.007044792175293
    6. '+' → logprob: -11.132044792175293
    7. ' if' → logprob: -11.257044792175293
    8. '+(' → logprob: -13.007044792175293
    9. '((' → logprob: -13.007044792175293
    10. 'answer' → logprob: -13.257044792175293

Token 267: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04365180432796478
    2. 'if' → logprob: -3.168651819229126
    3. ' ans' → logprob: -7.793651580810547
    4. ' if' → logprob: -9.668651580810547
    5. 'If' → logprob: -10.168651580810547
    6. '#' → logprob: -10.668651580810547
    7. '(ans' → logprob: -11.168651580810547
    8. '   ' → logprob: -11.418651580810547
    9. 'rest' → logprob: -11.668651580810547
    10. 'answer' → logprob: -11.918651580810547

Token 268: ' le' (ID: 505)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.31327930092811584
    2. ' h' → logprob: -1.3132792711257935
    3. '(h' → logprob: -12.063279151916504
    4. ' ' → logprob: -12.563279151916504
    5. '	h' → logprob: -12.813279151916504
    6. '   ' → logprob: -13.563279151916504
    7. ' (' → logprob: -13.688279151916504
    8. 'w' → logprob: -14.313279151916504
    9. ' ' → logprob: -14.313279151916504
    10. '_h' → logprob: -15.063279151916504

Token 269: ' nombre' (ID: 9733)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00018220659694634378
    2. ' h' → logprob: -8.625182151794434
    3. 'w' → logprob: -13.000182151794434
    4. 'ha' → logprob: -15.375182151794434
    5. 'H' → logprob: -16.75018310546875
    6. '	h' → logprob: -17.12518310546875
    7. '_h' → logprob: -17.25018310546875
    8. 'b' → logprob: -17.37518310546875
    9. '```' → logprob: -17.75018310546875
    10. '   ' → logprob: -17.87518310546875

Token 270: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2764259576797485
    2. 'h' → logprob: -1.4014259576797485
    3. '_h' → logprob: -1.6514259576797485
    4. ' de' → logprob: -2.151425838470459
    5. 'de' → logprob: -2.651425838470459
    6. ' d' → logprob: -3.151425838470459
    7. ' h' → logprob: -3.901425838470459
    8. '_' → logprob: -5.026425838470459
    9. '_de' → logprob: -5.026425838470459
    10. '   ' → logprob: -6.026425838470459

Token 271: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001674587489105761
    2. ' lignes' → logprob: -6.751674652099609
    3. 'h' → logprob: -7.626674652099609
    4. 'ligne' → logprob: -11.87667465209961
    5. 'colon' → logprob: -12.37667465209961
    6. ' l' → logprob: -13.50167465209961
    7. 'lines' → logprob: -13.50167465209961
    8. 'lig' → logprob: -15.00167465209961
    9. 'rows' → logprob: -15.12667465209961
    10. '   ' → logprob: -15.12667465209961

Token 272: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1136765331029892
    2. ' est' → logprob: -2.3636765480041504
    3. ' %' → logprob: -5.23867654800415
    4. ' is' → logprob: -5.36367654800415
    5. 'est' → logprob: -5.86367654800415
    6. ' ' → logprob: -8.988676071166992
    7. 'h' → logprob: -8.988676071166992
    8. ' h' → logprob: -9.613676071166992
    9. ' mod' → logprob: -9.613676071166992
    10. 'mod' → logprob: -9.988676071166992

Token 273: ' impair' (ID: 64113)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -1.016350269317627
    2. ' impair' → logprob: -1.016350269317627
    3. 'im' → logprob: -1.391350269317627
    4. 'odd' → logprob: -4.016350269317627
    5. ' imp' → logprob: -5.266350269317627
    6. ' odd' → logprob: -6.266350269317627
    7. 'h' → logprob: -6.641350269317627
    8. ' impar' → logprob: -7.391350269317627
    9. '   ' → logprob: -9.016349792480469
    10. 'Im' → logprob: -10.141349792480469

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1419261246919632
    2. '   ' → logprob: -2.3919260501861572
    3. ':' → logprob: -3.3919260501861572
    4. ' ,' → logprob: -5.266926288604736
    5. ':
' → logprob: -7.141926288604736
    6. ' and' → logprob: -7.141926288604736
    7. ' ans' → logprob: -9.266925811767578
    8. ',
' → logprob: -9.516925811767578
    9. '    ' → logprob: -9.516925811767578
    10. '  ' → logprob: -9.641925811767578

Token 275: ' il' (ID: 1793)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.14301255345344543
    2. 'ans' → logprob: -2.018012523651123
    3. '	ans' → logprob: -8.393013000488281
    4. '(ans' → logprob: -10.268013000488281
    5. 'aj' → logprob: -11.018013000488281
    6. '+' → logprob: -11.143013000488281
    7. '   ' → logprob: -11.518013000488281
    8. ' on' → logprob: -11.518013000488281
    9. '_ans' → logprob: -11.768013000488281
    10. ' ' → logprob: -12.768013000488281

Token 276: ' reste' (ID: 26769)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7351548075675964
    2. ' +=' → logprob: -1.2351548671722412
    3. ' ans' → logprob: -2.110154867172241
    4. '   ' → logprob: -3.485154867172241
    5. ' faut' → logprob: -3.610154867172241
    6. 'ans' → logprob: -3.985154867172241
    7. '    ' → logprob: -4.985154628753662
    8. '=' → logprob: -4.985154628753662
    9. ' y' → logprob: -5.110154628753662
    10. 's' → logprob: -5.985154628753662

Token 277: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.0381417274475098
    2. ' (' → logprob: -1.4131417274475098
    3. 'w' → logprob: -1.6631417274475098
    4. ' w' → logprob: -2.1631417274475098
    5. '(w' → logprob: -2.9131417274475098
    6. ' un' → logprob: -3.6631417274475098
    7. ' ' → logprob: -4.78814172744751
    8. 'une' → logprob: -5.78814172744751
    9. ' à' → logprob: -6.53814172744751
    10. 'un' → logprob: -6.66314172744751

Token 278: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.6337980628013611
    2. 'ligne' → logprob: -0.7587980628013611
    3. 'w' → logprob: -8.133797645568848
    4. ' w' → logprob: -9.008797645568848
    5. 'line' → logprob: -9.008797645568848
    6. 'l' → logprob: -9.008797645568848
    7. ' ' → logprob: -9.133797645568848
    8. ' moitié' → logprob: -9.383797645568848
    9. ' line' → logprob: -9.758797645568848
    10. 'dem' → logprob: -9.883797645568848

Token 279: ' à' (ID: 1221)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.87382972240448
    2. '   ' → logprob: -1.24882972240448
    3. ' supplémentaire' → logprob: -2.4988298416137695
    4. ' de' → logprob: -2.6238298416137695
    5. ' à' → logprob: -3.1238298416137695
    6. 'w' → logprob: -3.2488298416137695
    7. 'supp' → logprob: -4.6238298416137695
    8. 'à' → logprob: -4.6238298416137695
    9. ' ' → logprob: -4.7488298416137695
    10. 'extra' → logprob: -5.1238298416137695

Token 280: ' traiter' (ID: 105852)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.4675951600074768
    2. 'part' → logprob: -2.217595100402832
    3. 'trait' → logprob: -2.217595100402832
    4. 'cho' → logprob: -2.342595100402832
    5. 'placer' → logprob: -3.467595100402832
    6. 'prendre' → logprob: -4.967595100402832
    7. ' traiter' → logprob: -5.592595100402832
    8. ' ajouter' → logprob: -6.092595100402832
    9. 'mi' → logprob: -6.467595100402832
    10. ' placer' → logprob: -6.592595100402832

Token 281: '
' (ID: 198)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.9265249371528625
    2. ' +' → logprob: -1.1765248775482178
    3. '   ' → logprob: -1.3015248775482178
    4. ',' → logprob: -5.301525115966797
    5. '+' → logprob: -5.426525115966797
    6. '    ' → logprob: -5.801525115966797
    7. ' plus' → logprob: -6.051525115966797
    8. ' ' → logprob: -6.051525115966797
    9. ' ,' → logprob: -6.926525115966797
    10. 'w' → logprob: -6.926525115966797

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3704940974712372
    2. ' +' → logprob: -1.4954941272735596
    3. '+' → logprob: -2.8704941272735596
    4. ' ans' → logprob: -3.7454941272735596
    5. ' ' → logprob: -6.4954938888549805
    6. 'ans' → logprob: -6.9954938888549805
    7. ',' → logprob: -6.9954938888549805
    8. ' plus' → logprob: -7.6204938888549805
    9. ' +=' → logprob: -7.8704938888549805
    10. 'plus' → logprob: -8.37049388885498

Token 283: ' if' (ID: 538)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.03786094859242439
    2. 'ans' → logprob: -3.662860870361328
    3. '   ' → logprob: -5.037860870361328
    4. ' +' → logprob: -5.912860870361328
    5. '+' → logprob: -6.537860870361328
    6. ' if' → logprob: -7.662860870361328
    7. 'if' (adapté à ' if') → logprob: -9.287860870361328
    8. ' plus' → logprob: -10.037860870361328
    9. '	ans' → logprob: -10.037860870361328
    10. '
' → logprob: -10.162860870361328

Token 284: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.0233105830848217
    2. 'h' → logprob: -3.773310661315918
    3. '(h' → logprob: -10.273310661315918
    4. ' (' → logprob: -10.648310661315918
    5. '(' → logprob: -13.023310661315918
    6. '   ' → logprob: -13.273310661315918
    7. ' ' → logprob: -13.398310661315918
    8. '	h' → logprob: -13.898310661315918
    9. ' ' → logprob: -16.1483097076416
    10. '  ' → logprob: -16.2733097076416

Token 285: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.026362420991063118
    2. '%' → logprob: -3.651362419128418
    3. ' ' → logprob: -9.901362419128418
    4. ' ' → logprob: -12.151362419128418
    5. ' %
' → logprob: -12.276362419128418
    6. '   ' → logprob: -13.776362419128418
    7. '```' → logprob: -15.651362419128418
    8. ' >' → logprob: -16.026363372802734
    9. '>' → logprob: -16.151363372802734
    10. ' %}
' → logprob: -16.588863372802734

Token 286: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026314113289117813
    2. ' ' → logprob: -3.6513140201568604
    3. '   ' → logprob: -11.526313781738281
    4. '```' → logprob: -13.401313781738281
    5. '  ' → logprob: -14.151313781738281
    6. '
' → logprob: -15.151313781738281
    7. '>' → logprob: -15.588813781738281
    8. '    ' → logprob: -15.713813781738281
    9. ')' → logprob: -16.08881378173828
    10. '1' → logprob: -16.27631378173828

Token 287: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001818489981815219
    2. ' ' → logprob: -8.625182151794434
    3. '   ' → logprob: -13.500182151794434
    4. '```' → logprob: -15.125182151794434
    5. '  ' → logprob: -15.937682151794434
    6. '
' → logprob: -17.187681198120117
    7. '>' → logprob: -17.375181198120117
    8. '1' → logprob: -17.375181198120117
    9. '۲' → logprob: -17.562681198120117
    10. '{' → logprob: -18.000181198120117

Token 288: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7453164458274841
    2. '==' → logprob: -1.370316505432129
    3. ' !=' → logprob: -1.745316505432129
    4. '!=' → logprob: -2.495316505432129
    5. '1' → logprob: -4.495316505432129
    6. ':' → logprob: -6.370316505432129
    7. ' ' → logprob: -7.120316505432129
    8. '=' → logprob: -7.620316505432129
    9. ':
' → logprob: -10.370316505432129
    10. '==
' → logprob: -10.620316505432129

Token 289: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06206896901130676
    2. ' ' → logprob: -2.8120689392089844
    3. '1' → logprob: -9.437068939208984
    4. '2' → logprob: -11.187068939208984
    5. '   ' → logprob: -12.687068939208984
    6. '=' → logprob: -13.124568939208984
    7. '  ' → logprob: -13.874568939208984
    8. '```' → logprob: -14.937068939208984
    9. '    ' → logprob: -16.062068939208984
    10. '
' → logprob: -16.312068939208984

Token 290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031871015671640635
    2. ' ' → logprob: -5.75318717956543
    3. '2' → logprob: -12.25318717956543
    4. '1' → logprob: -12.50318717956543
    5. '   ' → logprob: -14.94068717956543
    6. '=' → logprob: -15.81568717956543
    7. '```' → logprob: -16.06568717956543
    8. '  ' → logprob: -16.25318717956543
    9. '
' → logprob: -16.37818717956543
    10. '00' → logprob: -17.50318717956543

Token 291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10042448341846466
    2. ':
' → logprob: -2.3504245281219482
    3. ' :
' → logprob: -9.225424766540527
    4. ' :' → logprob: -9.350424766540527
    5. '   ' → logprob: -10.725424766540527
    6. '):
' → logprob: -12.475424766540527
    7. ' and' → logprob: -12.850424766540527
    8. ':

' → logprob: -13.725424766540527
    9. ':
' → logprob: -13.725424766540527
    10. '       ' → logprob: -14.725424766540527

Token 292: '       ' (ID: 309)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.0034616757184267044
    2. '   ' → logprob: -6.128461837768555
    3. 'ans' → logprob: -7.003461837768555
    4. '    ' → logprob: -9.003461837768555
    5. '	ans' → logprob: -9.378461837768555
    6. ' return' → logprob: -9.753461837768555
    7. ' +' → logprob: -10.253461837768555
    8. '(ans' → logprob: -10.378461837768555
    9. ' (' → logprob: -11.753461837768555
    10. ' ' → logprob: -12.003461837768555

Token 293: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.16142556071281433
    2. ' ans' → logprob: -1.9114255905151367
    3. '   ' → logprob: -7.286425590515137
    4. '(ans' → logprob: -8.911425590515137
    5. ' (' → logprob: -9.536425590515137
    6. '       ' → logprob: -9.536425590515137
    7. '           ' → logprob: -10.036425590515137
    8. 'return' → logprob: -10.286425590515137
    9. ' return' → logprob: -10.411425590515137
    10. '	ans' → logprob: -10.536425590515137

Token 294: ' Pour' (ID: 13931)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.31339678168296814
    2. ' ans' → logprob: -1.3133968114852905
    3. '#' → logprob: -10.188396453857422
    4. '   ' → logprob: -10.438396453857422
    5. 'return' → logprob: -11.313396453857422
    6. ' return' → logprob: -11.438396453857422
    7. '(ans' → logprob: -11.438396453857422
    8. '	ans' → logprob: -11.438396453857422
    9. 'answer' → logprob: -13.125896453857422
    10. '       ' → logprob: -13.250896453857422

Token 295: ' la' (ID: 557)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.665241539478302
    2. ' ans' → logprob: -1.0402414798736572
    3. 'ans' → logprob: -2.5402414798736572
    4. ' w' → logprob: -3.0402414798736572
    5. ' (' → logprob: -5.665241718292236
    6. '(ans' → logprob: -6.790241718292236
    7. ' cette' → logprob: -7.790241718292236
    8. '(w' → logprob: -8.165241241455078
    9. '#' → logprob: -8.665241241455078
    10. '   ' → logprob: -10.290241241455078

Token 296: ' dernière' (ID: 39497)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2693314850330353
    2. 'ligne' → logprob: -1.769331455230713
    3. 'last' → logprob: -3.769331455230713
    4. 'der' → logprob: -4.394331455230713
    5. ' dernière' → logprob: -4.769331455230713
    6. 'remaining' → logprob: -5.019331455230713
    7. 'dern' → logprob: -5.144331455230713
    8. ' w' → logprob: -6.144331455230713
    9. 'l' → logprob: -7.019331455230713
    10. '#' → logprob: -7.394331455230713

Token 297: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.525963544845581
    2. 'ligne' → logprob: -0.900963544845581
    3. 'line' → logprob: -6.77596378326416
    4. ' line' → logprob: -7.52596378326416
    5. ' w' → logprob: -7.65096378326416
    6. ' ' → logprob: -8.40096378326416
    7. 'w' → logprob: -8.77596378326416
    8. 'row' → logprob: -9.15096378326416
    9. 'l' → logprob: -9.65096378326416
    10. ' row' → logprob: -10.65096378326416

Token 298: ' :
' (ID: 10039)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3719640076160431
    2. 'ans' → logprob: -1.2469639778137207
    3. '       ' → logprob: -5.246963977813721
    4. ',' → logprob: -5.621963977813721
    5. '   ' → logprob: -5.871963977813721
    6. '(ans' → logprob: -5.871963977813721
    7. '           ' → logprob: -5.996963977813721
    8. '	ans' → logprob: -6.371963977813721
    9. ' +=' → logprob: -6.621963977813721
    10. '
' → logprob: -6.621963977813721

Token 299: '       ' (ID: 309)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3159615993499756
    2. 'ans' → logprob: -1.3159615993499756
    3. '           ' → logprob: -6.815961837768555
    4. '       ' → logprob: -6.940961837768555
    5. '   ' → logprob: -8.565961837768555
    6. ' (' → logprob: -8.940961837768555
    7. '(ans' → logprob: -9.315961837768555
    8. '	ans' → logprob: -9.565961837768555
    9. '        ' → logprob: -10.190961837768555
    10. '    ' → logprob: -10.565961837768555

Token 300: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014188306406140327
    2. ' ans' → logprob: -4.264188289642334
    3. '(ans' → logprob: -11.514188766479492
    4. '   ' → logprob: -12.014188766479492
    5. '	ans' → logprob: -12.514188766479492
    6. 'return' → logprob: -13.264188766479492
    7. 'answer' → logprob: -13.889188766479492
    8. ' (' → logprob: -14.389188766479492
    9. '_ans' → logprob: -15.139188766479492
    10. ' return' → logprob: -15.264188766479492

Token 301: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4744136929512024
    2. ' w' → logprob: -0.9744136929512024
    3. '(w' → logprob: -8.724413871765137
    4. ' (' → logprob: -9.474413871765137
    5. '(' → logprob: -10.099413871765137
    6. '   ' → logprob: -10.474413871765137
    7. ' ' → logprob: -11.224413871765137
    8. 'h' → logprob: -12.974413871765137
    9. '	w' → logprob: -12.974413871765137
    10. ' ans' → logprob: -13.099413871765137

Token 302: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3889652490615845
    2. '%' → logprob: -1.1389652490615845
    3. '==' → logprob: -7.263965129852295
    4. ' ' → logprob: -7.638965129852295
    5. ' ==' → logprob: -7.763965129852295
    6. ' //' → logprob: -8.888965606689453
    7. '>=' → logprob: -9.763965606689453
    8. ' >=' → logprob: -10.013965606689453
    9. '//' → logprob: -10.138965606689453
    10. '   ' → logprob: -10.263965606689453

Token 303: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011052302084863186
    2. ' ' → logprob: -4.511052131652832
    3. '3' → logprob: -13.261052131652832
    4. '4' → logprob: -13.761052131652832
    5. '```' → logprob: -14.886052131652832
    6. '>' → logprob: -15.011052131652832
    7. '6' → logprob: -15.136052131652832
    8. '=' → logprob: -15.886052131652832
    9. 'to' → logprob: -16.51105308532715
    10. '   ' → logprob: -16.57355308532715

Token 304: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001664717128733173
    2. ' ' → logprob: -8.750166893005371
    3. '3' → logprob: -12.125166893005371
    4. '```' → logprob: -14.500166893005371
    5. '   ' → logprob: -14.687666893005371
    6. '4' → logprob: -14.750166893005371
    7. '
' → logprob: -15.500166893005371
    8. '  ' → logprob: -15.625166893005371
    9. '=' → logprob: -15.750166893005371
    10. '1' → logprob: -15.875166893005371

Token 305: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38819271326065063
    2. ' ==' → logprob: -1.6381926536560059
    3. '=' → logprob: -2.888192653656006
    4. '!=' → logprob: -3.013192653656006
    5. ' !=' → logprob: -3.888192653656006
    6. '0' → logprob: -6.388192653656006
    7. ' ' → logprob: -8.888193130493164
    8. '==
' → logprob: -9.763193130493164
    9. ':' → logprob: -10.013193130493164
    10. ' =' → logprob: -10.388193130493164

Token 306: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17992298305034637
    2. ' ' → logprob: -1.8049229383468628
    3. '=' → logprob: -8.804923057556152
    4. '   ' → logprob: -11.304923057556152
    5. '2' → logprob: -12.242423057556152
    6. '1' → logprob: -13.304923057556152
    7. '       ' → logprob: -13.367423057556152
    8. '```' → logprob: -13.742423057556152
    9. '  ' → logprob: -13.992423057556152
    10. '     ' → logprob: -14.492423057556152

Token 307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -10.125065803527832
    3. '2' → logprob: -10.875065803527832
    4. '=' → logprob: -12.500065803527832
    5. '1' → logprob: -12.875065803527832
    6. 'w' → logprob: -16.25006675720215
    7. '```' → logprob: -16.37506675720215
    8. '۰' → logprob: -16.93756675720215
    9. '00' → logprob: -16.93756675720215
    10. 'o' → logprob: -17.18756675720215

Token 308: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5771009922027588
    2. ':' → logprob: -0.8271009922027588
    3. '           ' → logprob: -7.57710075378418
    4. '       ' → logprob: -7.82710075378418
    5. '   ' → logprob: -9.20210075378418
    6. ' :
' → logprob: -9.82710075378418
    7. '):
' → logprob: -10.07710075378418
    8. ':
' → logprob: -10.82710075378418
    9. ' :' → logprob: -10.95210075378418
    10. ',' → logprob: -12.45210075378418

Token 309: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006583464564755559
    2. '       ' → logprob: -7.8756585121154785
    3. ' ans' → logprob: -8.75065803527832
    4. 'ans' → logprob: -10.25065803527832
    5. '
' → logprob: -10.50065803527832
    6. 'return' → logprob: -10.87565803527832
    7. '   ' → logprob: -11.12565803527832
    8. ' return' → logprob: -11.87565803527832
    9. '	       ' → logprob: -13.12565803527832
    10. '               ' → logprob: -13.12565803527832

Token 310: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6087910532951355
    2. '           ' → logprob: -1.4837911128997803
    3. ' ans' → logprob: -1.7337911128997803
    4. 'return' → logprob: -3.2337911128997803
    5. ' return' → logprob: -4.608790874481201
    6. '(ans' → logprob: -6.233790874481201
    7. '   ' → logprob: -7.858790874481201
    8. '       ' → logprob: -8.35879135131836
    9. '	ans' → logprob: -8.48379135131836
    10. 'answer' → logprob: -8.85879135131836

Token 311: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.36260080337524414
    2. ' ans' → logprob: -1.2376008033752441
    3. 'return' → logprob: -5.237600803375244
    4. '(ans' → logprob: -5.362600803375244
    5. ' return' → logprob: -5.862600803375244
    6. '   ' → logprob: -7.487600803375244
    7. 'answer' → logprob: -8.362600326538086
    8. '	ans' → logprob: -9.362600326538086
    9. '#' → logprob: -9.612600326538086
    10. '           ' → logprob: -9.987600326538086

Token 312: ' le' (ID: 505)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.7134488821029663
    2. 'w' → logprob: -1.0884488821029663
    3. ' (' → logprob: -2.588449001312256
    4. ' on' → logprob: -2.713449001312256
    5. ' ans' → logprob: -4.463449001312256
    6. 'ans' → logprob: -5.213449001312256
    7. 'on' → logprob: -5.463449001312256
    8. '(w' → logprob: -5.713449001312256
    9. ' ' → logprob: -6.713449001312256
    10. '(ans' → logprob: -6.838449001312256

Token 313: ' nombre' (ID: 9733)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4478156566619873
    2. 'nombre' → logprob: -1.6978156566619873
    3. ' nombre' → logprob: -2.6978156566619873
    4. 'dern' → logprob: -3.4478156566619873
    5. ' dernier' → logprob: -3.4478156566619873
    6. 'last' → logprob: -4.322815895080566
    7. ' w' → logprob: -4.447815895080566
    8. ' last' → logprob: -4.822815895080566
    9. 'der' → logprob: -5.947815895080566
    10. 'width' → logprob: -6.322815895080566

Token 314: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.33582890033721924
    2. ' de' → logprob: -1.4608289003372192
    3. '_de' → logprob: -3.2108287811279297
    4. 'd' → logprob: -5.96082878112793
    5. 'w' → logprob: -6.21082878112793
    6. ' d' → logprob: -6.83582878112793
    7. '_' → logprob: -6.83582878112793
    8. ' ' → logprob: -6.96082878112793
    9. 'des' → logprob: -7.08582878112793
    10. ' des' → logprob: -7.46082878112793

Token 315: ' colon' (ID: 20947)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0917272567749023
    2. 'cases' → logprob: -1.0917272567749023
    3. 'colon' → logprob: -1.5917272567749023
    4. ' w' → logprob: -3.4667272567749023
    5. 'cells' → logprob: -3.7167272567749023
    6. ' cases' → logprob: -4.091727256774902
    7. ' colon' → logprob: -4.091727256774902
    8. 'cols' → logprob: -4.841727256774902
    9. 'cell' → logprob: -5.091727256774902
    10. ' cellules' → logprob: -5.341727256774902

Token 316: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.016247613355517387
    2. 'es' → logprob: -4.266247749328613
    3. 'onnes' → logprob: -7.266247749328613
    4. '   ' → logprob: -8.266247749328613
    5. 'les' → logprob: -8.641247749328613
    6. 'ies' → logprob: -8.891247749328613
    7. 'n' → logprob: -9.016247749328613
    8. 'ines' → logprob: -9.016247749328613
    9. 'ne' → logprob: -9.141247749328613
    10. 'mes' → logprob: -9.391247749328613

Token 317: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.30403393507003784
    2. 'est' → logprob: -2.9290339946746826
    3. ' ==' → logprob: -3.1790339946746826
    4. ' >=' → logprob: -3.1790339946746826
    5. ' >' → logprob: -3.6790339946746826
    6. '>' → logprob: -3.8040339946746826
    7. '==' → logprob: -4.0540337562561035
    8. ' %' → logprob: -4.3040337562561035
    9. '>=' → logprob: -4.4290337562561035
    10. '   ' → logprob: -4.5540337562561035

Token 318: ' impair' (ID: 64113)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.28041404485702515
    2. ' impair' → logprob: -1.65541410446167
    3. 'pair' → logprob: -3.78041410446167
    4. 'im' → logprob: -4.40541410446167
    5. 'égal' → logprob: -4.53041410446167
    6. ' aussi' → logprob: -6.28041410446167
    7. ' imp' → logprob: -6.40541410446167
    8. ' pair' → logprob: -6.78041410446167
    9. 'odd' → logprob: -7.03041410446167
    10. ' ' → logprob: -7.78041410446167

Token 319: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8544690608978271
    2. ',' → logprob: -1.3544690608978271
    3. ':' → logprob: -2.229469060897827
    4. ':
' → logprob: -2.229469060897827
    5. '               ' → logprob: -2.354469060897827
    6. ',
' → logprob: -6.479469299316406
    7. '
' → logprob: -6.979469299316406
    8. ' :' → logprob: -7.104469299316406
    9. ' :
' → logprob: -7.354469299316406
    10. '):
' → logprob: -8.104469299316406

Token 320: ' on' (ID: 402)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1658630073070526
    2. 'ans' → logprob: -2.165863037109375
    3. '           ' → logprob: -3.290863037109375
    4. '(ans' → logprob: -7.790863037109375
    5. '               ' → logprob: -8.665863037109375
    6. ' return' → logprob: -8.915863037109375
    7. '	ans' → logprob: -8.915863037109375
    8. '            ' → logprob: -10.790863037109375
    9. '   ' → logprob: -11.165863037109375
    10. ' (' → logprob: -11.290863037109375

Token 321: ' peut' (ID: 9216)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -1.2597663402557373
    2. ' ajoute' → logprob: -1.6347663402557373
    3. ' prends' → logprob: -1.7597663402557373
    4. ' peux' → logprob: -2.0097663402557373
    5. ' prend' → logprob: -2.2597663402557373
    6. ' (' → logprob: -3.3847663402557373
    7. 'pe' → logprob: -3.5097663402557373
    8. 'pr' → logprob: -4.759766578674316
    9. ' return' → logprob: -4.884766578674316
    10. 'return' → logprob: -5.634766578674316

Token 322: ' choisir' (ID: 47004)
  Prédit: ' choisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.5536267757415771
    2. ' prendre' → logprob: -1.3036267757415771
    3. 'prendre' → logprob: -2.553626775741577
    4. 'cho' → logprob: -3.053626775741577
    5. 'aj' → logprob: -4.553627014160156
    6. ' ajouter' → logprob: -4.678627014160156
    7. 'placer' → logprob: -5.928627014160156
    8. ' (' → logprob: -6.553627014160156
    9. ' sélectionner' → logprob: -7.053627014160156
    10. ' placer' → logprob: -7.178627014160156

Token 323: ' un' (ID: 537)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.38793709874153137
    2. ' (' → logprob: -1.137937068939209
    3. 'w' → logprob: -7.512937068939209
    4. '(' → logprob: -8.762937545776367
    5. '((' → logprob: -8.887937545776367
    6. ' w' → logprob: -9.137937545776367
    7. '   ' → logprob: -10.012937545776367
    8. ' ' → logprob: -11.387937545776367
    9. ' ((' → logprob: -11.512937545776367
    10. '(h' → logprob: -11.762937545776367

Token 324: ' peu' (ID: 9235)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6842782497406006
    2. '(w' → logprob: -1.6842782497406006
    3. '+' → logprob: -2.4342782497406006
    4. ' (' → logprob: -2.6842782497406006
    5. '((' → logprob: -3.3092782497406006
    6. 'e' → logprob: -3.5592782497406006
    7. ' w' → logprob: -4.18427848815918
    8. 'plus' → logprob: -4.30927848815918
    9. '(' → logprob: -4.68427848815918
    10. ' +' → logprob: -5.30927848815918

Token 325: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.007104513701051474
    2. ' plus' → logprob: -5.132104396820068
    3. '           ' → logprob: -7.507104396820068
    4. '+' → logprob: -7.632104396820068
    5. 'moins' → logprob: -9.257104873657227
    6. ' +' → logprob: -11.132104873657227
    7. '_plus' → logprob: -11.632104873657227
    8. '   ' → logprob: -12.882104873657227
    9. 'more' → logprob: -12.882104873657227
    10. '            ' → logprob: -13.007104873657227

Token 326: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.322172611951828
    2. ' (' → logprob: -1.5721726417541504
    3. '(w' → logprob: -3.8221726417541504
    4. '((' → logprob: -4.07217264175415
    5. ' ((' → logprob: -4.82217264175415
    6. 'w' → logprob: -5.07217264175415
    7. '(' → logprob: -5.82217264175415
    8. 'ans' → logprob: -5.94717264175415
    9. ' w' → logprob: -6.32217264175415
    10. '               ' → logprob: -6.94717264175415

Token 327: ' la' (ID: 557)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.3200773000717163
    2. 'w' → logprob: -1.4450773000717163
    3. ' w' → logprob: -1.4450773000717163
    4. '(w' → logprob: -1.4450773000717163
    5. ' ' → logprob: -4.945077419281006
    6. '1' → logprob: -5.195077419281006
    7. 'cases' → logprob: -5.445077419281006
    8. ' cells' → logprob: -6.195077419281006
    9. ' cases' → logprob: -6.320077419281006
    10. '((' → logprob: -6.570077419281006

Token 328: ' moitié' (ID: 93216)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.3342054486274719
    2. ' moitié' → logprob: -1.4592053890228271
    3. ' mo' → logprob: -3.084205389022827
    4. 'mi' → logprob: -5.334205627441406
    5. 'w' → logprob: -7.709205627441406
    6. 'half' → logprob: -9.209205627441406
    7. 'dem' → logprob: -9.459205627441406
    8. 'case' → logprob: -9.834205627441406
    9. ' mitad' → logprob: -9.834205627441406
    10. 'int' → logprob: -10.459205627441406

Token 329: ' des' (ID: 731)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7356380224227905
    2. '(w' → logprob: -1.1106380224227905
    3. ' +' → logprob: -2.11063814163208
    4. '+' → logprob: -3.86063814163208
    5. 'w' → logprob: -4.11063814163208
    6. '((' → logprob: -4.61063814163208
    7. '           ' → logprob: -4.61063814163208
    8. ' ((' → logprob: -5.48563814163208
    9. ')' → logprob: -5.98563814163208
    10. ' w' → logprob: -5.98563814163208

Token 330: ' colon' (ID: 20947)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.09274014830589294
    2. ' w' → logprob: -3.092740058898926
    3. 'colon' → logprob: -3.842740058898926
    4. 'col' → logprob: -4.842740058898926
    5. '(w' → logprob: -5.467740058898926
    6. 'cols' → logprob: -5.842740058898926
    7. ' (' → logprob: -5.967740058898926
    8. 'cases' → logprob: -6.842740058898926
    9. ' colon' → logprob: -7.217740058898926
    10. 'la' → logprob: -7.342740058898926

Token 331: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.2869761884212494
    2. 'es' → logprob: -1.4119762182235718
    3. 's' → logprob: -5.786976337432861
    4. 'mes' → logprob: -7.411976337432861
    5. 'onnes' → logprob: -7.786976337432861
    6. 'ses' → logprob: -8.661975860595703
    7. '```' → logprob: -8.661975860595703
    8. 'les' → logprob: -8.786975860595703
    9. 'w' → logprob: -8.911975860595703
    10. 'columns' → logprob: -9.411975860595703

Token 332: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13461491465568542
    2. '               ' → logprob: -2.759614944458008
    3. ' +' → logprob: -3.259614944458008
    4. '+' → logprob: -5.134614944458008
    5. ' =' → logprob: -5.134614944458008
    6. ',' → logprob: -6.009614944458008
    7. ' (' → logprob: -6.384614944458008
    8. ':' → logprob: -6.759614944458008
    9. 'w' → logprob: -6.759614944458008
    10. ' return' → logprob: -7.134614944458008

Token 333: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02061324752867222
    2. '               ' → logprob: -4.770613193511963
    3. ' ans' → logprob: -5.520613193511963
    4. ' return' → logprob: -6.020613193511963
    5. 'ans' → logprob: -6.020613193511963
    6. 'return' → logprob: -6.145613193511963
    7. ' (' → logprob: -8.145613670349121
    8. '       ' → logprob: -8.520613670349121
    9. '(ans' → logprob: -8.895613670349121
    10. ':' → logprob: -9.895613670349121

Token 334: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4141382873058319
    2. 'ans' (adapté à ' ans') → logprob: -1.2891383171081543
    3. '           ' → logprob: -2.9141383171081543
    4. '(ans' → logprob: -5.539138317108154
    5. ' return' → logprob: -6.039138317108154
    6. 'return' → logprob: -6.789138317108154
    7. ' (' → logprob: -7.289138317108154
    8. '               ' → logprob: -7.414138317108154
    9. '   ' → logprob: -8.289137840270996
    10. '	ans' → logprob: -9.289137840270996

Token 335: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06201260909438133
    2. '+=' → logprob: -2.8120126724243164
    3. ' =' → logprob: -10.687012672424316
    4. '=' → logprob: -11.312012672424316
    5. '   ' → logprob: -11.937012672424316
    6. '+=(' → logprob: -13.812012672424316
    7. ' +' → logprob: -14.062012672424316
    8. '+' → logprob: -14.437012672424316
    9. ' ' → logprob: -14.812012672424316
    10. '    ' → logprob: -16.06201171875

Token 336: ' (' (ID: 350)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.1191432774066925
    2. ' (' → logprob: -2.24414324760437
    3. 'w' → logprob: -5.244143486022949
    4. ' w' → logprob: -7.619143486022949
    5. '(' → logprob: -8.11914348602295
    6. '((' → logprob: -8.49414348602295
    7. '(h' → logprob: -11.86914348602295
    8. ' ' → logprob: -12.11914348602295
    9. '   ' → logprob: -12.86914348602295
    10. ' ((' → logprob: -12.99414348602295

Token 337: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0038145682774484158
    2. '(w' → logprob: -5.753814697265625
    3. ' w' → logprob: -7.378814697265625
    4. ' (' → logprob: -11.628814697265625
    5. '   ' → logprob: -13.753814697265625
    6. '(' → logprob: -13.753814697265625
    7. '	w' → logprob: -14.878814697265625
    8. '1' → logprob: -16.128814697265625
    9. '[w' → logprob: -16.253814697265625
    10. ' ' → logprob: -16.253814697265625

Token 338: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.031188150867819786
    2. '//' → logprob: -3.7811882495880127
    3. ' +' → logprob: -5.031188011169434
    4. '+' → logprob: -6.906188011169434
    5. ' ' → logprob: -7.906188011169434
    6. '   ' → logprob: -13.281188011169434
    7. '```' → logprob: -13.406188011169434
    8. ')' → logprob: -13.781188011169434
    9. '`' → logprob: -13.906188011169434
    10. '  ' → logprob: -13.906188011169434

Token 339: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017064863350242376
    2. ' ' → logprob: -6.376706600189209
    3. '   ' → logprob: -13.50170612335205
    4. '1' → logprob: -14.12670612335205
    5. '3' → logprob: -14.25170612335205
    6. ')' → logprob: -14.37670612335205
    7. '  ' → logprob: -15.00170612335205
    8. '+' → logprob: -16.001707077026367
    9. '```' → logprob: -16.501707077026367
    10. '    ' → logprob: -16.564207077026367

Token 340: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7133641196996905e-05
    2. ' ' → logprob: -10.62502670288086
    3. '1' → logprob: -13.62502670288086
    4. '   ' → logprob: -15.00002670288086
    5. '3' → logprob: -15.18752670288086
    6. ')' → logprob: -15.25002670288086
    7. '
' → logprob: -15.50002670288086
    8. '  ' → logprob: -16.68752670288086
    9. '```' → logprob: -16.68752670288086
    10. '

' → logprob: -16.81252670288086

Token 341: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.096251480281353
    2. ' +' → logprob: -2.8462514877319336
    3. '+' → logprob: -3.4712514877319336
    4. ' )' → logprob: -6.346251487731934
    5. ')+' → logprob: -7.096251487731934
    6. ' ' → logprob: -10.346251487731934
    7. '+)' → logprob: -12.096251487731934
    8. '   ' → logprob: -12.346251487731934
    9. '  ' → logprob: -14.346251487731934
    10. ' plus' → logprob: -15.971251487731934

Token 342: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740775227546692
    2. '+' → logprob: -0.9740775227546692
    3. ' plus' → logprob: -15.099077224731445
    4. ')' → logprob: -16.849077224731445
    5. ' ' → logprob: -16.849077224731445
    6. ')+' → logprob: -16.974077224731445
    7. ' +
' → logprob: -17.474077224731445
    8. '+
' → logprob: -18.224077224731445
    9. '＋' → logprob: -18.349077224731445
    10. '   ' → logprob: -18.474077224731445

Token 343: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002805110299959779
    2. ' ' → logprob: -5.877805233001709
    3. '   ' → logprob: -16.252805709838867
    4. '  ' → logprob: -16.627805709838867
    5. '```' → logprob: -17.127805709838867
    6. '2' → logprob: -18.065305709838867
    7. '+' → logprob: -18.315305709838867
    8. '(' → logprob: -18.877805709838867
    9. '
' → logprob: -19.002805709838867
    10. '۱' → logprob: -19.440305709838867

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -19.000019073486328
    4. '   ' → logprob: -19.625019073486328
    5. '  ' → logprob: -20.187519073486328
    6. '
' → logprob: -20.375019073486328
    7. '１' → logprob: -20.437519073486328
    8. '۱' → logprob: -20.562519073486328
    9. '{' → logprob: -20.750019073486328
    10. '`' → logprob: -21.062519073486328

Token 345: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8621595501899719
    2. '
' → logprob: -1.3621594905853271
    3. '   ' → logprob: -2.112159490585327
    4. 'else' → logprob: -2.362159490585327
    5. '<|end|>' → logprob: -2.612159490585327
    6. ' else' → logprob: -3.862159490585327
    7. '\n' → logprob: -5.987159729003906
    8. '    
' → logprob: -6.112159729003906
    9. 'return' → logprob: -6.487159729003906
    10. ' 
' → logprob: -6.737159729003906

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023770807310938835
    2. 'else' → logprob: -6.252377033233643
    3. ' else' → logprob: -7.877377033233643
    4. '<|end|>' → logprob: -10.2523775100708
    5. '   ' → logprob: -10.7523775100708
    6. 'return' → logprob: -12.5023775100708
    7. ' return' → logprob: -13.5023775100708
    8. '	else' → logprob: -13.6273775100708
    9. '      ' → logprob: -13.8773775100708
    10. '
' → logprob: -14.3773775100708

Token 347: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.31371214985847473
    2. ' else' → logprob: -1.3137121200561523
    3. '   ' → logprob: -8.063712120056152
    4. '       ' → logprob: -8.938712120056152
    5. '	else' → logprob: -12.938712120056152
    6. '    ' → logprob: -13.813712120056152
    7. '        ' → logprob: -15.813712120056152
    8. ')' → logprob: -16.06371307373047
    9. '  ' → logprob: -16.18871307373047
    10. ' ' → logprob: -16.31371307373047

Token 348: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6338818073272705
    2. ':
' → logprob: -0.8838818073272705
    3. '           ' → logprob: -2.8838818073272705
    4. '       ' → logprob: -8.508881568908691
    5. ':
' → logprob: -9.758881568908691
    6. '   ' → logprob: -10.258881568908691
    7. ' :
' → logprob: -11.008881568908691
    8. '          ' → logprob: -11.133881568908691
    9. ' :' → logprob: -11.508881568908691
    10. ' ans' → logprob: -12.008881568908691

Token 349: '           ' (ID: 352)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.25596559047698975
    2. '           ' → logprob: -2.1309657096862793
    3. 'ans' → logprob: -2.2559657096862793
    4. '       ' → logprob: -6.505965709686279
    5. '   ' → logprob: -7.880965709686279
    6. '	ans' → logprob: -8.130965232849121
    7. '(ans' → logprob: -9.880965232849121
    8. '          ' → logprob: -10.380965232849121
    9. '         ' → logprob: -10.755965232849121
    10. ' ' → logprob: -10.755965232849121

Token 350: ' #' (ID: 1069)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3135494291782379
    2. 'ans' → logprob: -1.3135493993759155
    3. '           ' → logprob: -8.438549041748047
    4. '	ans' → logprob: -9.938549041748047
    5. '       ' → logprob: -11.563549041748047
    6. '(ans' → logprob: -12.063549041748047
    7. '   ' → logprob: -12.188549041748047
    8. '_ans' → logprob: -13.938549041748047
    9. ' ' → logprob: -14.438549041748047
    10. '
' → logprob: -15.688549041748047

Token 351: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05537201464176178
    2. ' ans' → logprob: -2.9303719997406006
    3. '           ' → logprob: -7.80537223815918
    4. '#' → logprob: -10.55537223815918
    5. '   ' → logprob: -11.05537223815918
    6. '	ans' → logprob: -11.30537223815918
    7. '       ' → logprob: -11.68037223815918
    8. ' ' → logprob: -12.55537223815918
    9. '
' → logprob: -12.68037223815918
    10. '(ans' → logprob: -12.80537223815918

Token 352: ' le' (ID: 505)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.04332263767719269
    2. 'w' → logprob: -3.1683225631713867
    3. ' not' → logprob: -8.918322563171387
    4. ' (' → logprob: -9.918322563171387
    5. ' ans' → logprob: -10.043322563171387
    6. ' ' → logprob: -10.043322563171387
    7. ' ' → logprob: -10.543322563171387
    8. '(w' → logprob: -11.668322563171387
    9. 'not' → logprob: -12.293322563171387
    10. ' le' → logprob: -12.293322563171387

Token 353: ' nombre' (ID: 9733)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.25197893381118774
    2. ' w' → logprob: -1.501978874206543
    3. 'nombre' → logprob: -11.251978874206543
    4. ' ' → logprob: -11.376978874206543
    5. ' nombre' → logprob: -11.751978874206543
    6. 'ans' → logprob: -11.751978874206543
    7. ' ans' → logprob: -12.251978874206543
    8. ' ' → logprob: -13.126978874206543
    9. '	w' → logprob: -13.251978874206543
    10. '   ' → logprob: -15.501978874206543

Token 354: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07885144650936127
    2. 'de' → logprob: -2.9538514614105225
    3. '%' → logprob: -4.078851222991943
    4. ' ' → logprob: -6.328851222991943
    5. ' d' → logprob: -6.578851222991943
    6. ' %' → logprob: -6.578851222991943
    7. 'd' → logprob: -7.078851222991943
    8. '<|end|>' → logprob: -7.328851222991943
    9. ' of' → logprob: -8.828851699829102
    10. '_de' → logprob: -8.953851699829102

Token 355: ' colon' (ID: 20947)
  Prédit: 'colon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colon' → logprob: -0.03125181421637535
    2. '2' → logprob: -4.031251907348633
    3. 'col' → logprob: -4.531251907348633
    4. ' colon' → logprob: -6.531251907348633
    5. 'cols' → logprob: -7.281251907348633
    6. ' ' → logprob: -10.156251907348633
    7. 'columns' → logprob: -10.406251907348633
    8. 'l' → logprob: -11.531251907348633
    9. 'Colon' → logprob: -11.906251907348633
    10. 'de' → logprob: -12.031251907348633

Token 356: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.03545384854078293
    2. 'es' → logprob: -3.6604537963867188
    3. 's' → logprob: -4.785453796386719
    4. 'onnes' → logprob: -8.785453796386719
    5. 'n' → logprob: -8.910453796386719
    6. '```' → logprob: -9.285453796386719
    7. 'ns' → logprob: -9.410453796386719
    8. '   ' → logprob: -9.660453796386719
    9. 'mes' → logprob: -9.910453796386719
    10. 'ne' → logprob: -10.910453796386719

Token 357: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8373035192489624
    2. ' //' → logprob: -1.3373035192489624
    3. ' %' → logprob: -1.4623035192489624
    4. '//' → logprob: -2.712303638458252
    5. ' est' → logprob: -5.587303638458252
    6. '   ' → logprob: -6.587303638458252
    7. ' ' → logprob: -6.962303638458252
    8. ' ' → logprob: -9.712303161621094
    9. '://' → logprob: -9.837303161621094
    10. '==' → logprob: -10.212303161621094

Token 358: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.0018545080674812198
    2. 'pa' → logprob: -7.001854419708252
    3. ' pair' → logprob: -7.376854419708252
    4. 'pairs' → logprob: -9.00185489654541
    5. 'even' → logprob: -9.62685489654541
    6. 'imp' → logprob: -10.37685489654541
    7. 'pari' → logprob: -10.37685489654541
    8. ' paire' → logprob: -10.75185489654541
    9. 'par' → logprob: -11.00185489654541
    10. 'p' → logprob: -11.37685489654541

Token 359: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011399820446968079
    2. 'ans' → logprob: -5.011399745941162
    3. ' ans' → logprob: -5.636399745941162
    4. '       ' → logprob: -8.01140022277832
    5. '               ' → logprob: -8.63640022277832
    6. ':' → logprob: -8.63640022277832
    7. '(ans' → logprob: -8.88640022277832
    8. ',' → logprob: -9.51140022277832
    9. ':
' → logprob: -9.76140022277832
    10. '	ans' → logprob: -10.01140022277832

Token 360: ' on' (ID: 402)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4757285416126251
    2. 'ans' → logprob: -0.9757285118103027
    3. '           ' → logprob: -6.475728511810303
    4. '	ans' → logprob: -9.475728988647461
    5. '       ' → logprob: -11.100728988647461
    6. '   ' → logprob: -11.225728988647461
    7. '(ans' → logprob: -13.975728988647461
    8. '          ' → logprob: -14.350728988647461
    9. '    ' → logprob: -14.475728988647461
    10. '         ' → logprob: -14.600728988647461

Token 361: ' chois' (ID: 33475)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7300609350204468
    2. '+=' → logprob: -0.8550609350204468
    3. '+' → logprob: -2.6050610542297363
    4. '   ' → logprob: -4.855061054229736
    5. ' +' → logprob: -5.980061054229736
    6. ' ans' → logprob: -6.230061054229736
    7. ' ' → logprob: -6.855061054229736
    8. ' ajoute' → logprob: -7.230061054229736
    9. 'ans' → logprob: -7.480061054229736
    10. ' ' → logprob: -7.605061054229736

Token 362: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0830964744091034
    2. 't' → logprob: -3.333096504211426
    3. '+=' → logprob: -3.708096504211426
    4. 'ir' → logprob: -5.083096504211426
    5. '+' → logprob: -5.083096504211426
    6. 's' → logprob: -6.583096504211426
    7. ' +=' → logprob: -6.583096504211426
    8. 'es' → logprob: -6.833096504211426
    9. 'pas' → logprob: -6.958096504211426
    10. 'e' → logprob: -7.458096504211426

Token 363: ' la' (ID: 557)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.20152297616004944
    2. 'w' → logprob: -1.701522946357727
    3. '(w' → logprob: -10.201522827148438
    4. '	w' → logprob: -10.576522827148438
    5. '   ' → logprob: -10.701522827148438
    6. ' ' → logprob: -11.201522827148438
    7. ' (' → logprob: -12.826522827148438
    8. '           ' → logprob: -13.576522827148438
    9. 'exact' → logprob: -13.701522827148438
    10. '       ' → logprob: -13.951522827148438

Token 364: ' moitié' (ID: 93216)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.014334024861454964
    2. ' w' → logprob: -4.764334201812744
    3. ' mo' → logprob: -6.139334201812744
    4. ' moitié' → logprob: -6.139334201812744
    5. 'mo' → logprob: -6.639334201812744
    6. '/' → logprob: -10.889333724975586
    7. ' /' → logprob: -11.514333724975586
    8. '(' → logprob: -11.639333724975586
    9. ' ' → logprob: -11.764333724975586
    10. '   ' → logprob: -11.764333724975586

Token 365: ' des' (ID: 731)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.48635333776474
    2. 'w' → logprob: -1.2363533973693848
    3. ' (' → logprob: -3.3613533973693848
    4. '           ' → logprob: -3.3613533973693848
    5. ' w' → logprob: -4.361353397369385
    6. '+' → logprob: -5.611353397369385
    7. '   ' → logprob: -5.861353397369385
    8. ' +' → logprob: -6.486353397369385
    9. '       ' → logprob: -6.736353397369385
    10. '(' → logprob: -7.486353397369385

Token 366: ' colon' (ID: 20947)
  Prédit: 'colon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colon' → logprob: -0.7779862880706787
    2. ' colon' → logprob: -1.2779862880706787
    3. 'w' → logprob: -1.5279862880706787
    4. 'col' → logprob: -3.4029862880706787
    5. ' w' → logprob: -4.652986526489258
    6. 'columns' → logprob: -7.152986526489258
    7. 'cols' → logprob: -7.527986526489258
    8. ' col' → logprob: -7.902986526489258
    9. ' columns' → logprob: -8.902986526489258
    10. ' ' → logprob: -8.902986526489258

Token 367: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.32845020294189453
    2. 'es' → logprob: -1.3284502029418945
    3. 's' → logprob: -4.3284502029418945
    4. 'onnes' → logprob: -7.4534502029418945
    5. 'n' → logprob: -7.5784502029418945
    6. ' columns' → logprob: -9.578450202941895
    7. 'ns' → logprob: -9.578450202941895
    8. '   ' → logprob: -9.703450202941895
    9. 'columns' → logprob: -9.703450202941895
    10. ' es' → logprob: -9.703450202941895

Token 368: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001963009126484394
    2. ' ans' → logprob: -6.501963138580322
    3. 'ans' → logprob: -8.751962661743164
    4. '(ans' → logprob: -9.001962661743164
    5. '       ' → logprob: -9.376962661743164
    6. ' +=' → logprob: -10.001962661743164
    7. ' +' → logprob: -11.501962661743164
    8. '          ' → logprob: -11.751962661743164
    9. '               ' → logprob: -12.126962661743164
    10. '+' → logprob: -12.376962661743164

Token 369: ' la' (ID: 557)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07157588005065918
    2. 'la' → logprob: -3.071575880050659
    3. ' la' → logprob: -4.446576118469238
    4. ' w' → logprob: -4.946576118469238
    5. 'l' → logprob: -5.696576118469238
    6. 'h' → logprob: -8.321576118469238
    7. 'plus' → logprob: -9.446576118469238
    8. ' ' → logprob: -9.946576118469238
    9. ' chaque' → logprob: -10.071576118469238
    10. 'ligne' → logprob: -10.696576118469238

Token 370: ' dernière' (ID: 39497)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.7898034453392029
    2. 'dern' → logprob: -1.4148035049438477
    3. 'ligne' → logprob: -1.4148035049438477
    4. 'last' → logprob: -3.0398035049438477
    5. ' dernière' → logprob: -5.414803504943848
    6. 'h' → logprob: -5.414803504943848
    7. 'w' → logprob: -7.039803504943848
    8. 'l' → logprob: -7.414803504943848
    9. 'Dern' → logprob: -7.414803504943848
    10. '#' → logprob: -8.539803504943848

Token 371: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.02346116304397583
    2. ' ligne' → logprob: -3.773461103439331
    3. 'line' → logprob: -9.27346134185791
    4. ' ' → logprob: -9.52346134185791
    5. 'l' → logprob: -11.02346134185791
    6. 'lig' → logprob: -11.14846134185791
    7. '   ' → logprob: -11.77346134185791
    8. 'lin' → logprob: -13.14846134185791
    9. ' line' → logprob: -13.52346134185791
    10. ' ' → logprob: -13.77346134185791

Token 372: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025283375289291143
    2. ' ans' → logprob: -6.502528190612793
    3. 'ans' → logprob: -7.252528190612793
    4. '       ' → logprob: -8.377528190612793
    5. '(ans' → logprob: -10.127528190612793
    6. '               ' → logprob: -11.752528190612793
    7. '   ' → logprob: -11.877528190612793
    8. ' +=' → logprob: -12.002528190612793
    9. '          ' → logprob: -12.377528190612793
    10. '	ans' → logprob: -12.377528190612793

Token 373: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10143141448497772
    2. ' ans' → logprob: -2.476431369781494
    3. 'ans' → logprob: -4.601431369781494
    4. '       ' → logprob: -6.601431369781494
    5. ' +' → logprob: -7.726431369781494
    6. ' +=' → logprob: -8.476431846618652
    7. '+' → logprob: -9.351431846618652
    8. '(ans' → logprob: -9.351431846618652
    9. '   ' → logprob: -9.476431846618652
    10. '	ans' → logprob: -9.976431846618652

Token 374: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.023299982771277428
    2. ' ans' → logprob: -3.7732999324798584
    3. '           ' → logprob: -9.898300170898438
    4. '	ans' → logprob: -12.898300170898438
    5. '(ans' → logprob: -14.273300170898438
    6. '   ' → logprob: -15.273300170898438
    7. '       ' → logprob: -15.398300170898438
    8. 'answer' → logprob: -15.398300170898438
    9. 'w' → logprob: -15.773300170898438
    10. 'Ans' → logprob: -15.898300170898438

Token 375: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25194066762924194
    2. '+=' → logprob: -1.5019407272338867
    3. '+=(' → logprob: -12.001940727233887
    4. '   ' → logprob: -12.876940727233887
    5. '+' → logprob: -13.876940727233887
    6. ' +' → logprob: -14.126940727233887
    7. '+="' → logprob: -15.126940727233887
    8. ']+=' → logprob: -15.251940727233887
    9. '=' → logprob: -15.626940727233887
    10. '+='' → logprob: -16.00193977355957

Token 376: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.34884554147720337
    2. 'w' → logprob: -1.2238454818725586
    3. '(w' → logprob: -8.348845481872559
    4. ' (' → logprob: -8.848845481872559
    5. ' ' → logprob: -11.348845481872559
    6. '(' → logprob: -12.473845481872559
    7. '   ' → logprob: -12.723845481872559
    8. '	w' → logprob: -13.848845481872559
    9. ' ' → logprob: -14.348845481872559
    10. '  ' → logprob: -15.723845481872559

Token 377: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.25285667181015015
    2. '//' → logprob: -1.502856731414795
    3. ' ' → logprob: -7.627856731414795
    4. '```' → logprob: -9.252856254577637
    5. '#' → logprob: -9.502856254577637
    6. '`' → logprob: -9.627856254577637
    7. ' ' → logprob: -9.627856254577637
    8. '"' → logprob: -9.877856254577637
    9. '   ' → logprob: -10.627856254577637
    10. ''' → logprob: -11.252856254577637

Token 378: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.750015258789062
    4. '۲' → logprob: -17.750015258789062
    5. '```' → logprob: -17.750015258789062
    6. '<|end|>' → logprob: -18.750015258789062
    7. '２' → logprob: -19.375015258789062
    8. '২' → logprob: -20.062515258789062
    9. '  ' → logprob: -20.062515258789062
    10. '२' → logprob: -20.250015258789062

Token 379: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '۲' → logprob: -16.625001907348633
    4. '２' → logprob: -18.187501907348633
    5. '   ' → logprob: -18.250001907348633
    6. '٢' → logprob: -18.437501907348633
    7. '```' → logprob: -18.562501907348633
    8. '२' → logprob: -18.562501907348633
    9. '20' → logprob: -18.937501907348633
    10. '1' → logprob: -19.000001907348633

Token 380: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016140293329954147
    2. 'return' → logprob: -4.141140460968018
    3. ' return' → logprob: -9.39113998413086
    4. '    
' → logprob: -11.89113998413086
    5. '
' → logprob: -12.26613998413086
    6. '       ' → logprob: -13.01613998413086
    7. '<|end|>' → logprob: -13.01613998413086
    8. '```' → logprob: -13.14113998413086
    9. ':return' → logprob: -13.14113998413086
    10. '	return' → logprob: -14.51613998413086

Token 381: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25199830532073975
    2. '   ' → logprob: -1.5019983053207397
    3. ' return' → logprob: -9.751997947692871
    4. '```' → logprob: -12.126997947692871
    5. '	return' → logprob: -13.126997947692871
    6. ':return' → logprob: -13.876997947692871
    7. '    
' → logprob: -14.126997947692871
    8. '<|end|>' → logprob: -14.626997947692871
    9. '{return' → logprob: -14.876997947692871
    10. '       ' → logprob: -15.126997947692871

Token 382: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38694825768470764
    2. '   ' → logprob: -1.1369482278823853
    3. ' return' → logprob: -9.511948585510254
    4. '	return' → logprob: -13.386948585510254
    5. '```' → logprob: -14.011948585510254
    6. ':return' → logprob: -14.886948585510254
    7. '    
' → logprob: -15.011948585510254
    8. '       ' → logprob: -15.886948585510254
    9. '{return' → logprob: -16.511947631835938
    10. '  ' → logprob: -17.636947631835938

Token 383: ' int' (ID: 677)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00317783304490149
    2. ' ans' → logprob: -5.753177642822266
    3. '(ans' → logprob: -17.253177642822266
    4. '	ans' → logprob: -17.753177642822266
    5. '_ans' → logprob: -19.628177642822266
    6. 'Ans' → logprob: -21.378177642822266
    7. '   ' → logprob: -21.378177642822266
    8. 'answer' → logprob: -22.128177642822266
    9. ' ' → logprob: -22.753177642822266
    10. ' ' → logprob: -22.878177642822266

Token 384: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.002704185200855136
    2. '(' → logprob: -6.37770414352417
    3. 'ans' → logprob: -7.62770414352417
    4. ' (' → logprob: -7.75270414352417
    5. ' ans' → logprob: -10.752704620361328
    6. '_' → logprob: -11.002704620361328
    7. '_ans' → logprob: -11.127704620361328
    8. '	ans' → logprob: -11.252704620361328
    9. '(
' → logprob: -12.877704620361328
    10. ' ' → logprob: -12.877704620361328

Token 385: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.375000953674316
    3. ')
' → logprob: -15.750000953674316
    4. '())' → logprob: -18.125
    5. ')`' → logprob: -18.125
    6. '   ' → logprob: -18.25
    7. '()' → logprob: -18.75
    8. '))' → logprob: -19.0
    9. ')return' → logprob: -19.0
    10. '}' → logprob: -19.375

Token 386: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2202349603176117
    2. ' max' → logprob: -2.0952348709106445
    3. ' maximum' → logprob: -4.3452348709106445
    4. ' is' → logprob: -4.7202348709106445
    5. ' calculate' → logprob: -4.8452348709106445
    6. ' count' → logprob: -4.8452348709106445
    7. ' find' → logprob: -4.8452348709106445
    8. 'max' → logprob: -5.2202348709106445
    9. ' chess' → logprob: -5.2202348709106445
    10. ' solve' → logprob: -5.9702348709106445

Token 388: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00048310417332686484
    2. '(' → logprob: -7.87548303604126
    3. '_' → logprob: -9.500483512878418
    4. '()' → logprob: -10.875483512878418
    5. ' ():' → logprob: -12.375483512878418
    6. '():
' → logprob: -13.000483512878418
    7. '()>' → logprob: -14.000483512878418
    8. ':' → logprob: -14.250483512878418
    9. '_:' → logprob: -15.375483512878418
    10. '():
' → logprob: -15.875483512878418

Token 389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017748098820447922
    2. 'n' → logprob: -5.26774787902832
    3. '(' → logprob: -6.39274787902832
    4. ' input' → logprob: -6.39274787902832
    5. ' import' → logprob: -7.01774787902832
    6. ' n' → logprob: -7.01774787902832
    7. ' indentation' → logprob: -7.01774787902832
    8. '    
' → logprob: -7.39274787902832
    9. '_' → logprob: -7.51774787902832
    10. ' if' → logprob: -7.51774787902832

Token 390: ' """
' (ID: 7037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7469316124916077
    2. 'import' → logprob: -1.621931552886963
    3. ' n' → logprob: -1.996931552886963
    4. '   ' → logprob: -2.121931552886963
    5. ' import' → logprob: -2.996931552886963
    6. 't' → logprob: -4.121931552886963
    7. ' t' → logprob: -5.871931552886963
    8. ' input' → logprob: -6.496931552886963
    9. 'input' → logprob: -6.621931552886963
    10. 'h' → logprob: -8.121932029724121

Token 391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00975833274424076
    2. ' import' → logprob: -5.259758472442627
    3. 'import' → logprob: -6.759758472442627
    4. ' n' → logprob: -6.759758472442627
    5. 'n' → logprob: -7.009758472442627
    6. ' #' → logprob: -7.759758472442627
    7. ' try' → logprob: -8.259757995605469
    8. ' for' → logprob: -9.509757995605469
    9. '```' → logprob: -9.634757995605469
    10. ' line' → logprob: -9.759757995605469

Token 392: ' Fonction' (ID: 189149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8421681523323059
    2. ' lines' → logprob: -1.3421680927276611
    3. ' user' → logprob: -2.092168092727661
    4. ' n' → logprob: -2.592168092727661
    5. ' import' → logprob: -3.967168092727661
    6. 'user' → logprob: -3.967168092727661
    7. 'n' → logprob: -4.34216833114624
    8. ' for' → logprob: -4.46716833114624
    9. 'import' → logprob: -4.84216833114624
    10. ' #' → logprob: -5.21716833114624

Token 393: ' principale' (ID: 68926)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3405277729034424
    2. ' de' → logprob: -1.4655277729034424
    3. ' principale' → logprob: -1.4655277729034424
    4. 'def' → logprob: -1.7155277729034424
    5. 'de' → logprob: -2.9655277729034424
    6. ' main' → logprob: -3.5905277729034424
    7. ' def' → logprob: -5.340527534484863
    8. ' principal' → logprob: -5.340527534484863
    9. ' ' → logprob: -6.465527534484863
    10. ' d' → logprob: -6.465527534484863

Token 394: ' qui' (ID: 2780)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.021643521264195442
    2. '():
' → logprob: -4.39664363861084
    3. ':' → logprob: -4.89664363861084
    4. '()' → logprob: -6.89664363861084
    5. 'def' → logprob: -7.89664363861084
    6. '   ' → logprob: -8.52164363861084
    7. ':
' → logprob: -10.77164363861084
    8. ' ():' → logprob: -12.64664363861084
    9. '):' → logprob: -13.14664363861084
    10. '(' → logprob: -13.27164363861084

Token 395: ' lit' (ID: 11980)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7596166729927063
    2. '   ' → logprob: -0.8846166729927063
    3. ':' → logprob: -2.8846166133880615
    4. ' import' → logprob: -3.8846166133880615
    5. 'if' → logprob: -5.009616851806641
    6. ' récup' → logprob: -5.009616851806641
    7. ' prend' → logprob: -5.259616851806641
    8. ' permet' → logprob: -5.759616851806641
    9. ' importe' → logprob: -6.259616851806641
    10. 'def' → logprob: -6.259616851806641

Token 396: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7557870149612427
    2. '()' → logprob: -0.7557870149612427
    3. ' les' → logprob: -3.880786895751953
    4. '():' → logprob: -4.380786895751953
    5. ' la' → logprob: -4.505786895751953
    6. 'import' → logprob: -5.005786895751953
    7. ' des' → logprob: -5.255786895751953
    8. ' l' → logprob: -6.380786895751953
    9. ' le' → logprob: -6.755786895751953
    10. ' ()' → logprob: -8.005786895751953

Token 397: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.996792197227478
    2. 'e' → logprob: -1.246792197227478
    3. 'es' → logprob: -2.1217923164367676
    4. ''entrée' → logprob: -2.2467923164367676
    5. 'input' → logprob: -2.8717923164367676
    6. '   ' → logprob: -2.9967923164367676
    7. ' input' → logprob: -5.621792316436768
    8. ''' → logprob: -6.496792316436768
    9. 'import' → logprob: -6.871792316436768
    10. ''import' → logprob: -6.996792316436768

Token 398: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3667859137058258
    2. '()' → logprob: -1.6167858839035034
    3. 'import' → logprob: -3.241786003112793
    4. ',' → logprob: -3.366786003112793
    5. ' standard' → logprob: -3.866786003112793
    6. ' et' → logprob: -6.241786003112793
    7. ' import' → logprob: -6.741786003112793
    8. '():' → logprob: -6.741786003112793
    9. ' de' → logprob: -6.866786003112793
    10. ' ' → logprob: -6.991786003112793

Token 399: ' appelle' (ID: 111796)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017298882827162743
    2. 'import' → logprob: -6.142298698425293
    3. ' n' → logprob: -6.267298698425293
    4. 'def' → logprob: -6.267298698425293
    5. ' h' → logprob: -6.392298698425293
    6. ' calculates' → logprob: -6.642298698425293
    7. '    ' → logprob: -6.892298698425293
    8. ' continue' → logprob: -7.142298698425293
    9. '    
' → logprob: -7.767298698425293
    10. ' calc' → logprob: -7.892298698425293

Token 400: ' la' (ID: 557)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.4856262803077698
    2. ' calculate' → logprob: -0.9856262803077698
    3. ' la' → logprob: -4.485626220703125
    4. ' ' → logprob: -9.985626220703125
    5. 'alculate' → logprob: -10.110626220703125
    6. '()' → logprob: -10.235626220703125
    7. 'la' → logprob: -10.735626220703125
    8. '   ' → logprob: -10.985626220703125
    9. ' the' → logprob: -11.485626220703125
    10. 'Calculate' → logprob: -11.860626220703125

Token 401: ' fonction' (ID: 17610)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.0004534334584604949
    2. 'calcul' → logprob: -7.875453472137451
    3. 'print' → logprob: -9.875452995300293
    4. 'max' → logprob: -11.875452995300293
    5. ' calculate' → logprob: -12.125452995300293
    6. 'def' → logprob: -13.000452995300293
    7. 'compute' → logprob: -13.125452995300293
    8. 'maximum' → logprob: -13.750452995300293
    9. 'fonction' → logprob: -13.875452995300293
    10. 'cal' → logprob: -14.375452995300293

Token 402: ' de' (ID: 334)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.47411227226257324
    2. 'calculate' → logprob: -0.9741122722625732
    3. ' `' → logprob: -11.724112510681152
    4. ' de' → logprob: -12.224112510681152
    5. ' ' → logprob: -12.599112510681152
    6. ' compute' → logprob: -12.724112510681152
    7. ' ' → logprob: -12.724112510681152
    8. '   ' → logprob: -12.974112510681152
    9. ' calcul' → logprob: -12.974112510681152
    10. 'calcul' → logprob: -12.974112510681152

Token 403: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.0011705794604495168
    2. 'cal' → logprob: -7.251170635223389
    3. 'calculate' → logprob: -7.751170635223389
    4. ' calcul' → logprob: -10.62617015838623
    5. 'calc' → logprob: -12.75117015838623
    6. 'main' → logprob: -13.87617015838623
    7. 'print' → logprob: -14.62617015838623
    8. 'compute' → logprob: -15.00117015838623
    9. 'lecture' → logprob: -15.25117015838623
    10. 'Calcul' → logprob: -15.37617015838623

Token 404: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1087469682097435
    2. ',' → logprob: -2.4837470054626465
    3. ' et' → logprob: -4.1087470054626465
    4. 'de' → logprob: -7.1087470054626465
    5. 'et' → logprob: -7.2337470054626465
    6. '()' → logprob: -7.8587470054626465
    7. ' de' → logprob: -7.8587470054626465
    8. ' and' → logprob: -8.858746528625488
    9. ' ' → logprob: -8.983746528625488
    10. '_' → logprob: -9.483746528625488

Token 405: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5753301382064819
    2. 'aff' → logprob: -1.200330138206482
    3. ' affiche' → logprob: -2.8253302574157715
    4. 'print' → logprob: -2.8253302574157715
    5. ' imprime' → logprob: -4.3253302574157715
    6. ' print' → logprob: -6.2003302574157715
    7. 'é' → logprob: -6.7003302574157715
    8. 'im' → logprob: -7.2003302574157715
    9. ' écrit' → logprob: -8.200329780578613
    10. '    ' → logprob: -10.450329780578613

Token 406: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09658847749233246
    2. ' la' → logprob: -3.596588373184204
    3. ' le' → logprob: -3.596588373184204
    4. '(' → logprob: -4.096588611602783
    5. '   ' → logprob: -4.971588611602783
    6. 'le' → logprob: -5.971588611602783
    7. 'la' → logprob: -6.096588611602783
    8. '(len' → logprob: -6.346588611602783
    9. ' les' → logprob: -6.471588611602783
    10. '(l' → logprob: -6.471588611602783

Token 407: ' résultat' (ID: 62556)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.2653568387031555
    2. ' résultat' → logprob: -1.5153567790985107
    3. 'result' → logprob: -4.51535701751709
    4. '_r' → logprob: -7.26535701751709
    5. 'r' → logprob: -7.76535701751709
    6. 'nombre' → logprob: -7.89035701751709
    7. '_' → logprob: -8.51535701751709
    8. '   ' → logprob: -8.64035701751709
    9. 'Rés' → logprob: -9.14035701751709
    10. 'ré' → logprob: -9.26535701751709

Token 408: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0987003743648529
    2. '():' → logprob: -2.4737002849578857
    3. ':' → logprob: -5.098700523376465
    4. '):' → logprob: -5.973700523376465
    5. '()' → logprob: -7.598700523376465
    6. '():
' → logprob: -8.098700523376465
    7. ')' → logprob: -9.098700523376465
    8. '.' → logprob: -9.973700523376465
    9. '```' → logprob: -10.598700523376465
    10. '
' → logprob: -10.973700523376465

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001231657573953271
    2. '
' → logprob: -7.126231670379639
    3. '    
' → logprob: -7.876231670379639
    4. '```' → logprob: -10.12623119354248
    5. 'newline' → logprob: -13.87623119354248
    6. 'import' → logprob: -13.87623119354248
    7. '    ' → logprob: -14.00123119354248
    8. '\n' → logprob: -14.25123119354248
    9. '       ' → logprob: -14.50123119354248
    10. '   
' → logprob: -14.62623119354248

Token 410: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002273774443892762
    2. '```' → logprob: -8.750226974487305
    3. '    
' → logprob: -10.500226974487305
    4. '
' → logprob: -10.625226974487305
    5. '"""' → logprob: -12.125226974487305
    6. '    ' → logprob: -13.000226974487305
    7. 'input' → logprob: -13.500226974487305
    8. 'import' → logprob: -13.625226974487305
    9. ' ' → logprob: -13.750226974487305
    10. '\n' → logprob: -13.875226974487305

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004550099838525057
    2. ' line' → logprob: -6.504549980163574
    3. ' lines' → logprob: -6.629549980163574
    4. 'n' → logprob: -7.379549980163574
    5. ' n' → logprob: -8.004549980163574
    6. ' input' → logprob: -8.629549980163574
    7. 'input' → logprob: -9.004549980163574
    8. 'import' → logprob: -9.129549980163574
    9. '```' → logprob: -9.254549980163574
    10. ' import' → logprob: -9.629549980163574

Token 412: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15792575478553772
    2. ' n' → logprob: -2.782925844192505
    3. 'h' → logprob: -3.282925844192505
    4. 'import' → logprob: -3.782925844192505
    5. '   ' → logprob: -3.907925844192505
    6. ' h' → logprob: -6.532925605773926
    7. ' import' → logprob: -6.782925605773926
    8. 'input' → logprob: -7.532925605773926
    9. 't' → logprob: -8.407925605773926
    10. 'for' → logprob: -9.157925605773926

Token 413: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.236013412475586
    2. 'h' → logprob: -1.361013412475586
    3. 'import' → logprob: -1.486013412475586
    4. 'input' → logprob: -1.736013412475586
    5. ' n' → logprob: -4.861013412475586
    6. ' h' → logprob: -4.861013412475586
    7. 't' → logprob: -4.861013412475586
    8. ' input' → logprob: -4.986013412475586
    9. 'for' → logprob: -5.236013412475586
    10. '   ' → logprob: -5.486013412475586

Token 414: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17873698472976685
    2. 'n' → logprob: -2.053736925125122
    3. ' n' → logprob: -4.428737163543701
    4. ' line' → logprob: -4.803737163543701
    5. 'line' → logprob: -5.053737163543701
    6. '()' → logprob: -6.178737163543701
    7. 'import' → logprob: -6.428737163543701
    8. ' lines' → logprob: -7.053737163543701
    9. '_line' → logprob: -7.053737163543701
    10. 'input' → logprob: -7.303737163543701

Token 415: ' dimensions' (ID: 23995)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8898861408233643
    2. 'n' → logprob: -1.5148861408233643
    3. 'l' → logprob: -1.7648861408233643
    4. 'input' → logprob: -2.8898861408233643
    5. 'import' → logprob: -3.6398861408233643
    6. 'dimensions' → logprob: -4.014885902404785
    7. 'inputs' → logprob: -4.139885902404785
    8. ' h' → logprob: -4.264885902404785
    9. ' n' → logprob: -4.389885902404785
    10. ' lignes' → logprob: -4.389885902404785

Token 416: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031205834820866585
    2. ' line' → logprob: -3.656205892562866
    3. 'n' → logprob: -6.531205654144287
    4. 'line' → logprob: -7.156205654144287
    5. ' h' → logprob: -7.531205654144287
    6. '    
' → logprob: -7.906205654144287
    7. ',' → logprob: -8.031206130981445
    8. ' ligne' → logprob: -8.031206130981445
    9. 's' → logprob: -8.781206130981445
    10. '
' → logprob: -8.781206130981445

Token 417: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.04315950348973274
    2. ' la' → logprob: -3.2931594848632812
    3. 'l' → logprob: -5.918159484863281
    4. 'sys' → logprob: -6.168159484863281
    5. ' sys' → logprob: -9.293159484863281
    6. 'input' → logprob: -9.418159484863281
    7. 'gr' → logprob: -10.293159484863281
    8. '   ' → logprob: -10.543159484863281
    9. 'stdin' → logprob: -11.293159484863281
    10. 'une' → logprob: -11.543159484863281

Token 418: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.014406878501176834
    2. ' grille' → logprob: -4.264406681060791
    3. 'grid' → logprob: -8.51440715789795
    4. 'ligne' → logprob: -10.88940715789795
    5. 'import' → logprob: -12.01440715789795
    6. 'input' → logprob: -12.38940715789795
    7. ' gr' → logprob: -12.76440715789795
    8. 'table' → logprob: -13.38940715789795
    9. 'range' → logprob: -13.63940715789795
    10. 'sys' → logprob: -13.76440715789795

Token 419: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09541711956262589
    2. ' line' → logprob: -3.095417022705078
    3. ' h' → logprob: -3.720417022705078
    4. '
' → logprob: -5.345417022705078
    5. '    
' → logprob: -5.470417022705078
    6. ',' → logprob: -5.595417022705078
    7. 'n' → logprob: -5.970417022705078
    8. 'h' → logprob: -6.470417022705078
    9. 'line' → logprob: -6.595417022705078
    10. ' ligne' → logprob: -6.970417022705078

Token 420: ' entrée' (ID: 95590)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.35974010825157166
    2. ' input' → logprob: -2.4847400188446045
    3. 'entrée' → logprob: -2.4847400188446045
    4. 'ligne' → logprob: -2.7347400188446045
    5. 'stdin' → logprob: -3.6097400188446045
    6. 'sys' → logprob: -3.8597400188446045
    7. 'l' → logprob: -5.109740257263184
    8. 'ent' → logprob: -5.734740257263184
    9. ' stdin' → logprob: -5.984740257263184
    10. ' sys' → logprob: -6.109740257263184

Token 421: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018770545721054077
    2. ' line' → logprob: -4.768770694732666
    3. '    
' → logprob: -5.393770694732666
    4. '
' → logprob: -6.143770694732666
    5. ' ligne' → logprob: -7.143770694732666
    6. ' h' → logprob: -7.768770694732666
    7. ',' → logprob: -7.893770694732666
    8. 'input' → logprob: -8.143770217895508
    9. 'n' → logprob: -8.393770217895508
    10. 'line' → logprob: -8.643770217895508

Token 422: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06209395080804825
    2. ' line' → logprob: -3.06209397315979
    3. 'line' → logprob: -5.062093734741211
    4. ' ligne' → logprob: -6.062093734741211
    5. 'ligne' → logprob: -6.187093734741211
    6. '    
' → logprob: -7.312093734741211
    7. ' lignes' → logprob: -8.062093734741211
    8. ',' → logprob: -8.312093734741211
    9. 'input' → logprob: -8.437093734741211
    10. ' lines' → logprob: -8.562093734741211

Token 423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6563151478767395
    2. ' line' → logprob: -0.7813151478767395
    3. ' h' → logprob: -4.781315326690674
    4. 'line' → logprob: -5.531315326690674
    5. ' n' → logprob: -5.906315326690674
    6. ' lines' → logprob: -6.031315326690674
    7. ' input' → logprob: -6.031315326690674
    8. 'n' → logprob: -6.906315326690674
    9. ' ligne' → logprob: -7.156315326690674
    10. 'input' → logprob: -7.906315326690674

Token 424: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.5441416501998901
    2. ' h' → logprob: -1.1691416501998901
    3. '   ' → logprob: -2.6691417694091797
    4. ' line' → logprob: -3.5441417694091797
    5. 'line' → logprob: -4.91914176940918
    6. 'for' → logprob: -7.66914176940918
    7. 'hw' → logprob: -7.79414176940918
    8. 'input' → logprob: -8.04414176940918
    9. ' ligne' → logprob: -8.16914176940918
    10. ' for' → logprob: -8.16914176940918

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002484573284164071
    2. ',w' → logprob: -6.0024847984313965
    3. ' ,' → logprob: -11.877484321594238
    4. 'w' → logprob: -13.877484321594238
    5. ',width' → logprob: -15.502484321594238
    6. ',s' → logprob: -16.002485275268555
    7. 's' → logprob: -16.252485275268555
    8. ',W' → logprob: -16.377485275268555
    9. '=' → logprob: -16.877485275268555
    10. ',user' → logprob: -17.002485275268555

Token 426: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.3868717551231384
    2. 'w' → logprob: -1.1368718147277832
    3. ' ' → logprob: -14.511871337890625
    4. '	w' → logprob: -15.886871337890625
    5. ' ' → logprob: -16.886871337890625
    6. '=w' → logprob: -17.386871337890625
    7. '_w' → logprob: -18.011871337890625
    8. 'space' → logprob: -18.261871337890625
    9. '  ' → logprob: -18.511871337890625
    10. '    ' → logprob: -18.636871337890625

Token 427: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868723213672638
    2. ' =' → logprob: -1.1368722915649414
    3. ',' → logprob: -14.136872291564941
    4. ')' → logprob: -15.261872291564941
    5. '=input' → logprob: -15.886872291564941
    6. ' ' → logprob: -16.386873245239258
    7. '=sys' → logprob: -16.761873245239258
    8. '   ' → logprob: -17.386873245239258
    9. '	' → logprob: -17.761873245239258
    10. ')=' → logprob: -17.761873245239258

Token 428: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.02975141443312168
    2. ' map' → logprob: -3.5297513008117676
    3. '[' → logprob: -14.529751777648926
    4. '(map' → logprob: -15.279751777648926
    5. '	map' → logprob: -15.279751777648926
    6. 'sys' → logprob: -17.27975082397461
    7. 'list' → logprob: -18.40475082397461
    8. '.map' → logprob: -18.52975082397461
    9. ' ' → logprob: -18.90475082397461
    10. ' ' → logprob: -18.90475082397461

Token 429: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04345699027180672
    2. '(' → logprob: -3.16845703125
    3. '(str' → logprob: -7.91845703125
    4. 'int' → logprob: -10.29345703125
    5. '(input' → logprob: -10.54345703125
    6. '(
' → logprob: -11.04345703125
    7. '<int' → logprob: -11.91845703125
    8. '(lambda' → logprob: -12.91845703125
    9. '=int' → logprob: -13.29345703125
    10. '()' → logprob: -13.41845703125

Token 430: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5096819400787354
    2. '(sys' → logprob: -1.1346819400787354
    3. '(' → logprob: -3.1346819400787354
    4. ')' → logprob: -4.134681701660156
    5. 'input' → logprob: -4.259681701660156
    6. ',input' → logprob: -6.509681701660156
    7. 'sys' → logprob: -6.759681701660156
    8. ' (' → logprob: -7.384681701660156
    9. ',' → logprob: -7.759681701660156
    10. ' input' → logprob: -8.634681701660156

Token 431: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.031641338020563126
    2. ' sys' → logprob: -3.5316412448883057
    3. 'input' → logprob: -6.281641483306885
    4. ' input' → logprob: -10.906641006469727
    5. '(sys' → logprob: -15.406641006469727
    6. '=sys' → logprob: -16.031641006469727
    7. '	sys' → logprob: -17.781641006469727
    8. ')' → logprob: -18.656641006469727
    9. 'stdin' → logprob: -19.406641006469727
    10. '_sys' → logprob: -19.531641006469727

Token 432: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00015979631280060858
    2. '()' → logprob: -8.750160217285156
    3. '())' → logprob: -14.000160217285156
    4. '(' → logprob: -15.125160217285156
    5. ' ().' → logprob: -15.625160217285156
    6. '()
' → logprob: -16.625160217285156
    7. '().
' → logprob: -19.125160217285156
    8. '("").' → logprob: -19.500160217285156
    9. '()

' → logprob: -19.750160217285156
    10. '("' → logprob: -19.750160217285156

Token 433: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0067167943343520164
    2. 'strip' → logprob: -5.006716728210449
    3. '().' → logprob: -14.38171672821045
    4. 'rstrip' → logprob: -14.38171672821045
    5. '(split' → logprob: -15.75671672821045
    6. ' split' → logprob: -16.256717681884766
    7. '_split' → logprob: -18.006717681884766
    8. 'spl' → logprob: -18.006717681884766
    9. 'read' → logprob: -18.131717681884766
    10. ' strip' → logprob: -18.756717681884766

Token 434: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02581062912940979
    2. ')' → logprob: -3.775810718536377
    3. '()' → logprob: -6.150810718536377
    4. '()))' → logprob: -8.275810241699219
    5. '))' → logprob: -8.900810241699219
    6. '(' → logprob: -10.275810241699219
    7. '('' → logprob: -12.650810241699219
    8. ' ())' → logprob: -14.525810241699219
    9. '())
' → logprob: -14.775810241699219
    10. ' )' → logprob: -16.40081024169922

Token 435: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02275978960096836
    2. '   ' → logprob: -4.522759914398193
    3. '    
' → logprob: -5.897759914398193
    4. '<|end|>' → logprob: -5.897759914398193
    5. '  
' → logprob: -6.272759914398193
    6. ' 
' → logprob: -6.647759914398193
    7. '\n' → logprob: -7.022759914398193
    8. '```' → logprob: -7.522759914398193
    9. 'newline' → logprob: -8.022759437561035
    10. 'print' → logprob: -8.772759437561035

Token 436: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3307349383831024
    2. 'result' → logprob: -1.3307349681854248
    3. '   ' → logprob: -4.080734729766846
    4. ' result' → logprob: -8.580735206604004
    5. ' print' → logprob: -8.705735206604004
    6. 'max' → logprob: -10.580735206604004
    7. 'res' → logprob: -10.830735206604004
    8. 'answer' → logprob: -11.205735206604004
    9. '```' → logprob: -11.955735206604004
    10. 'results' → logprob: -12.705735206604004

Token 437: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16742601990699768
    2. 'result' → logprob: -1.9174259901046753
    3. 'max' → logprob: -5.167426109313965
    4. 'ans' → logprob: -7.042426109313965
    5. 'res' → logprob: -7.792426109313965
    6. 'answer' → logprob: -8.792426109313965
    7. 'maximum' → logprob: -10.542426109313965
    8. 'rés' → logprob: -12.917426109313965
    9. '#' (adapté à ' #') → logprob: -12.917426109313965
    10. 'results' → logprob: -13.417426109313965

Token 438: ' Calcul' (ID: 57243)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05761656537652016
    2. 'print' → logprob: -3.6826164722442627
    3. 'res' → logprob: -3.8076164722442627
    4. 'ans' → logprob: -5.057616710662842
    5. 'answer' → logprob: -7.057616710662842
    6. 'max' → logprob: -7.307616710662842
    7. 'rés' → logprob: -7.307616710662842
    8. ' result' → logprob: -10.807616233825684
    9. 'r' → logprob: -11.432616233825684
    10. '#' → logprob: -11.932616233825684

Token 439: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4215314388275146
    2. '_result' → logprob: -1.5465314388275146
    3. '_max' → logprob: -1.9215314388275146
    4. '=' → logprob: -2.0465314388275146
    5. '   ' → logprob: -2.2965314388275146
    6. '_' → logprob: -2.4215314388275146
    7. 'result' → logprob: -2.6715314388275146
    8. 'max' → logprob: -5.421531677246094
    9. 'er' → logprob: -5.796531677246094
    10. ' result' → logprob: -6.921531677246094

Token 440: ' nombre' (ID: 9733)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.06327025592327118
    2. 'maximum' → logprob: -2.813270330429077
    3. 'result' → logprob: -7.313270092010498
    4. 'max' → logprob: -7.938270092010498
    5. ' calculate' → logprob: -8.438270568847656
    6. ' maximum' → logprob: -9.938270568847656
    7. 'answer' → logprob: -11.813270568847656
    8. 'maximize' → logprob: -12.813270568847656
    9. 'ans' → logprob: -13.688270568847656
    10. 'res' → logprob: -14.938270568847656

Token 441: ' maximal' (ID: 65414)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.04804385453462601
    2. ' maximale' → logprob: -4.048043727874756
    3. ' maximal' → logprob: -4.423043727874756
    4. '_' → logprob: -4.548043727874756
    5. 'max' → logprob: -5.923043727874756
    6. ' maximum' → logprob: -5.923043727874756
    7. 'maximum' → logprob: -7.173043727874756
    8. '_MAX' → logprob: -8.673044204711914
    9. '   ' → logprob: -9.423044204711914
    10. ' максим' → logprob: -9.923044204711914

Token 442: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2524229288101196
    2. ' de' → logprob: -1.2524229288101196
    3. '_de' → logprob: -1.5024229288101196
    4. 'de' → logprob: -2.12742280960083
    5. '_d' → logprob: -3.50242280960083
    6. '_des' → logprob: -3.87742280960083
    7. '<|end|>' → logprob: -4.75242280960083
    8. '_possible' → logprob: -5.37742280960083
    9. 'des' → logprob: -5.50242280960083
    10. 'd' → logprob: -5.75242280960083

Token 443: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.12489230185747147
    2. 'cells' → logprob: -2.374892234802246
    3. ' cellules' → logprob: -3.874892234802246
    4. 'cell' → logprob: -6.124892234802246
    5. ' cases' → logprob: -6.999892234802246
    6. ' cells' → logprob: -7.874892234802246
    7. 'case' → logprob: -10.124892234802246
    8. 'c' → logprob: -10.124892234802246
    9. 'cho' → logprob: -10.999892234802246
    10. 'cel' → logprob: -10.999892234802246

Token 444: ' sélection' (ID: 43472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4614541530609131
    2. ' =' → logprob: -1.086454153060913
    3. ',' → logprob: -5.336454391479492
    4. '_' → logprob: -5.461454391479492
    5. '_max' → logprob: -5.461454391479492
    6. ' chois' → logprob: -5.461454391479492
    7. 'max' → logprob: -6.086454391479492
    8. '=' → logprob: -6.586454391479492
    9. ' ' → logprob: -6.586454391479492
    10. ' à' → logprob: -6.711454391479492

Token 445: 'n' (ID: 77)
  Prédit: 'nées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nées' → logprob: -0.003800430800765753
    2. 'n' → logprob: -5.628800392150879
    3. 'ées' → logprob: -9.128800392150879
    4. 'nees' → logprob: -9.503800392150879
    5. 'ion' → logprob: -12.753800392150879
    6. 'i' → logprob: -12.753800392150879
    7. 'onnées' → logprob: -13.003800392150879
    8. 'née' → logprob: -13.253800392150879
    9. '   ' → logprob: -13.378800392150879
    10. 'ees' → logprob: -14.253800392150879

Token 446: 'ables' (ID: 3232)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.003299151314422488
    2. 'ees' → logprob: -5.753299236297607
    3. 'es' → logprob: -9.87829875946045
    4. 'e' → logprob: -10.37829875946045
    5. 'é' → logprob: -10.75329875946045
    6. 'nées' → logprob: -11.50329875946045
    7. '__' → logprob: -13.37829875946045
    8. '   ' → logprob: -13.37829875946045
    9. 'ée' → logprob: -13.87829875946045
    10. 'és' → logprob: -14.25329875946045

Token 447: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09467575699090958
    2. ',' → logprob: -3.5946757793426514
    3. '<|end|>' → logprob: -3.5946757793426514
    4. '<|end|>' → logprob: -3.9696757793426514
    5. ' ans' → logprob: -5.719675540924072
    6. '    
' → logprob: -6.469675540924072
    7. ' =' → logprob: -6.594675540924072
    8. 'ans' → logprob: -6.719675540924072
    9. ' ' → logprob: -6.844675540924072
    10. ')' → logprob: -6.969675540924072

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5077702403068542
    2. ' ans' → logprob: -1.257770299911499
    3. ' result' → logprob: -3.132770299911499
    4. 'result' → logprob: -3.632770299911499
    5. ' max' → logprob: -4.13277006149292
    6. 'max' → logprob: -4.50777006149292
    7. 'ans' → logprob: -5.00777006149292
    8. ',' → logprob: -5.25777006149292
    9. '	ans' → logprob: -7.13277006149292
    10. ' =' → logprob: -7.63277006149292

Token 449: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.7077842950820923
    2. 'ans' → logprob: -0.9577842950820923
    3. 'max' → logprob: -2.2077841758728027
    4. 'answer' → logprob: -4.832784175872803
    5. 'res' → logprob: -6.582784175872803
    6. '   ' → logprob: -6.707784175872803
    7. 'print' → logprob: -6.957784175872803
    8. 'maximum' → logprob: -6.957784175872803
    9. ' result' → logprob: -7.582784175872803
    10. ' ans' → logprob: -7.707784175872803

Token 450: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014305740594864
    2. '=' → logprob: -1.7014305591583252
    3. '_' → logprob: -11.826430320739746
    4. ')' → logprob: -12.201430320739746
    5. ' ' → logprob: -13.951430320739746
    6. ' =
' → logprob: -14.326430320739746
    7. '  ' → logprob: -14.326430320739746
    8. ',' → logprob: -14.451430320739746
    9. ' =
' → logprob: -15.076430320739746
    10. '   ' → logprob: -15.076430320739746

Token 451: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -5.836499985889532e-05
    2. ' calculate' → logprob: -9.7500581741333
    3. '.calculate' → logprob: -22.000059127807617
    4. 'calcul' → logprob: -22.250059127807617
    5. 'calc' → logprob: -22.875059127807617
    6. 'compute' → logprob: -22.875059127807617
    7. 'Calculate' → logprob: -23.500059127807617
    8. 'cal' → logprob: -23.500059127807617
    9. '   ' → logprob: -23.750059127807617
    10. 'alculate' → logprob: -24.375059127807617

Token 452: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -6.704273118884885e-07
    2. 'maximum' → logprob: -14.875000953674316
    3. ' maximum' → logprob: -16.625
    4. '_' → logprob: -17.25
    5. 'max' → logprob: -17.5
    6. '_MAX' → logprob: -18.25
    7. 'Maximum' → logprob: -18.25
    8. '.maximum' → logprob: -18.875
    9. '_min' → logprob: -19.875
    10. ' maximale' → logprob: -20.0

Token 453: 'imum' (ID: 4556)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.5920982956886292
    2. 'imum' → logprob: -0.8420982956886292
    3. 'ium' → logprob: -4.342098236083984
    4. 'maximum' → logprob: -6.717098236083984
    5. 'mum' → logprob: -7.467098236083984
    6. 'umber' → logprob: -7.842098236083984
    7. '_' → logprob: -7.842098236083984
    8. 'able' → logprob: -9.467098236083984
    9. '__' → logprob: -9.842098236083984
    10. '   ' → logprob: -10.217098236083984

Token 454: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -7.338466093642637e-05
    2. '_' → logprob: -9.625073432922363
    3. '_max' → logprob: -12.125073432922363
    4. ' _' → logprob: -14.625073432922363
    5. '_cases' → logprob: -15.000073432922363
    6. '```' → logprob: -15.125073432922363
    7. 'cells' → logprob: -15.875073432922363
    8. '_cell' → logprob: -16.250072479248047
    9. '_tokens' → logprob: -16.750072479248047
    10. '_nodes' → logprob: -16.875072479248047

Token 455: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.375000953674316
    3. ' (' → logprob: -17.0
    4. '(H' → logprob: -17.375
    5. '(
' → logprob: -19.0
    6. '(ht' → logprob: -20.75
    7. '(s' → logprob: -21.25
    8. '((' → logprob: -21.75
    9. '(hr' → logprob: -22.375
    10. '   ' → logprob: -22.75

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010450744302943349
    2. ',w' → logprob: -6.876045227050781
    3. ' ,' → logprob: -11.626045227050781
    4. ',
' → logprob: -12.876045227050781
    5. ',W' → logprob: -14.876045227050781
    6. '   ' → logprob: -15.876045227050781
    7. 'w' → logprob: -16.25104522705078
    8. '‌,' → logprob: -16.62604522705078
    9. ',

' → logprob: -17.12604522705078
    10. ',h' → logprob: -17.37604522705078

Token 457: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.06196768581867218
    2. ' w' → logprob: -2.811967611312866
    3. ')' → logprob: -17.936967849731445
    4. ' ' → logprob: -18.061967849731445
    5. ' ' → logprob: -18.561967849731445
    6. 'W' → logprob: -18.561967849731445
    7. '	w' → logprob: -20.061967849731445
    8. '   ' → logprob: -20.186967849731445
    9. '    ' → logprob: -20.561967849731445
    10. ''w' → logprob: -21.436967849731445

Token 458: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.822646693966817e-06
    2. ')
' → logprob: -11.875007629394531
    3. '   ' → logprob: -14.500007629394531
    4. ' )' → logprob: -15.250007629394531
    5. '))' → logprob: -17.37500762939453
    6. ')
' → logprob: -17.62500762939453
    7. ')`' → logprob: -17.62500762939453
    8. '()' → logprob: -18.62500762939453
    9. '[' → logprob: -19.12500762939453
    10. '),' → logprob: -19.25000762939453

Token 459: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28327634930610657
    2. 'print' → logprob: -1.5332763195037842
    3. '
' → logprob: -3.533276319503784
    4. ' print' → logprob: -7.283276557922363
    5. '    
' → logprob: -7.283276557922363
    6. '```' → logprob: -8.533276557922363
    7. '  
' → logprob: -10.533276557922363
    8. '\n' → logprob: -10.908276557922363
    9. '
' → logprob: -11.533276557922363
    10. '	print' → logprob: -11.908276557922363

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3138039708137512
    2. 'print' → logprob: -1.5638039112091064
    3. ' print' → logprob: -2.8138039112091064
    4. '```' → logprob: -11.563803672790527
    5. '
' → logprob: -12.063803672790527
    6. '	print' → logprob: -12.313803672790527
    7. '    
' → logprob: -12.813803672790527
    8. '  ' → logprob: -15.938803672790527
    9. ' ' → logprob: -16.438804626464844
    10. '    ' → logprob: -16.563804626464844

Token 461: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '   ' → logprob: -17.25
    3. ' print' → logprob: -17.75
    4. '```' → logprob: -22.0
    5. 'pr' → logprob: -25.25
    6. 'prin' → logprob: -25.625
    7. '	print' → logprob: -25.75
    8. 'printf' → logprob: -26.0
    9. '#print' → logprob: -26.5
    10. 'println' → logprob: -27.375

Token 462: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.5
    3. '   ' → logprob: -24.0
    4. 'pr' → logprob: -24.5
    5. 'prin' → logprob: -26.75
    6. '```' → logprob: -27.0
    7. 'printf' → logprob: -27.875
    8. 'println' → logprob: -28.125
    9. '#print' → logprob: -28.25
    10. 'Print' → logprob: -28.5

Token 463: 'ichage' (ID: 118475)
  Prédit: 'iche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.3184696435928345
    2. 'icher' → logprob: -1.3184696435928345
    3. 'ichage' → logprob: -6.068469524383545
    4. 'ich' → logprob: -6.693469524383545
    5. 'ic' → logprob: -6.818469524383545
    6. '#' → logprob: -8.068470001220703
    7. '   ' → logprob: -8.693470001220703
    8. '```' → logprob: -10.943470001220703
    9. 'fic' → logprob: -11.568470001220703
    10. 'iché' → logprob: -12.068470001220703

Token 464: ' du' (ID: 1462)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.474132239818573
    2. '(' → logprob: -0.974132239818573
    3. '(
' → logprob: -10.349132537841797
    4. '   ' → logprob: -11.724132537841797
    5. '()' → logprob: -12.599132537841797
    6. '(print' → logprob: -12.724132537841797
    7. '(res' → logprob: -13.349132537841797
    8. 'result' → logprob: -13.474132537841797
    9. '(output' → logprob: -13.474132537841797
    10. '(

' → logprob: -13.849132537841797

Token 465: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.688212614681106e-05
    2. ' result' → logprob: -11.000017166137695
    3. '(result' → logprob: -16.125017166137695
    4. 'res' → logprob: -18.250017166137695
    5. 'r' → logprob: -20.250017166137695
    6. 'resultado' → logprob: -20.750017166137695
    7. 'print' → logprob: -21.375017166137695
    8. 'results' → logprob: -21.875017166137695
    9. '	result' → logprob: -21.875017166137695
    10. ' resultat' → logprob: -22.000017166137695

Token 466: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5160903930664062
    2. '(' → logprob: -1.1410903930664062
    3. '(result' → logprob: -2.8910903930664062
    4. 'print' → logprob: -4.516090393066406
    5. '(print' → logprob: -4.641090393066406
    6. '()' → logprob: -5.016090393066406
    7. ' print' → logprob: -7.766090393066406
    8. '()
' → logprob: -8.891090393066406
    9. '(
' → logprob: -9.266090393066406
    10. '```' → logprob: -9.391090393066406

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48867130279541016
    2. 'print' → logprob: -0.9886713027954102
    3. ' print' → logprob: -4.23867130279541
    4. '```' → logprob: -9.73867130279541
    5. '(print' → logprob: -13.86367130279541
    6. '	print' → logprob: -14.23867130279541
    7. '    
' → logprob: -15.23867130279541
    8. '
' → logprob: -15.36367130279541
    9. '.print' → logprob: -15.48867130279541
    10. '`' → logprob: -16.363670349121094

Token 468: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.25
    3. '   ' → logprob: -19.75
    4. 'pr' → logprob: -22.0
    5. '```' → logprob: -22.375
    6. 'prin' → logprob: -24.375
    7. 'printf' → logprob: -25.375
    8. '	print' → logprob: -26.625
    9. 'pri' → logprob: -27.0
    10. 'println' → logprob: -27.125

Token 469: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.2519400119781494
    2. '(' → logprob: -1.5019400119781494
    3. '()' → logprob: -12.25193977355957
    4. '('' → logprob: -13.12693977355957
    5. '(res' → logprob: -13.87693977355957
    6. '(f' → logprob: -14.25193977355957
    7. '(results' → logprob: -14.50193977355957
    8. '(resultado' → logprob: -14.62693977355957
    9. '(
' → logprob: -15.00193977355957
    10. ' (' → logprob: -15.12693977355957

Token 470: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.75
    3. ')`' → logprob: -17.25
    4. '')' → logprob: -17.75
    5. '))' → logprob: -18.0
    6. ')
' → logprob: -18.375
    7. '`)' → logprob: -19.0
    8. '()' → logprob: -19.125
    9. '")' → logprob: -20.25
    10. '())' → logprob: -20.875

Token 471: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3544423381972592e-05
    2. 'main' → logprob: -11.87501335144043
    3. ' if' → logprob: -12.12501335144043
    4. '\n' → logprob: -14.62501335144043
    5. '
' → logprob: -15.00001335144043
    6. '```' → logprob: -15.62501335144043
    7. '\' → logprob: -16.25001335144043
    8. '#' → logprob: -16.50001335144043
    9. '  
' → logprob: -18.25001335144043
    10. '    
' → logprob: -18.87501335144043

Token 472: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004988374188542366
    2. '__' → logprob: -5.379988193511963
    3. '_' → logprob: -8.379988670349121
    4. ' ' → logprob: -9.129988670349121
    5. ' _' → logprob: -11.254988670349121
    6. ' ' → logprob: -12.129988670349121
    7. '_name' → logprob: -12.129988670349121
    8. ' ' → logprob: -13.129988670349121
    9. ' ​' → logprob: -13.754988670349121
    10. 'name' → logprob: -14.379988670349121

Token 473: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.36554014682769775
    2. ' ==' → logprob: -1.2405401468276978
    3. '==' → logprob: -4.490540027618408
    4. ' __' → logprob: -5.490540027618408
    5. '[' → logprob: -7.490540027618408
    6. '_' → logprob: -8.240540504455566
    7. 'name' → logprob: -8.865540504455566
    8. '__[' → logprob: -8.865540504455566
    9. '.__' → logprob: -9.115540504455566
    10. '__.__' → logprob: -9.740540504455566

Token 474: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.2664456789934775e-06
    2. '__.__' → logprob: -13.875000953674316
    3. '==' → logprob: -15.500000953674316
    4. ' ==' → logprob: -17.000001907348633
    5. '___' → logprob: -17.250001907348633
    6. '__.' → logprob: -17.750001907348633
    7. '_' → logprob: -17.875001907348633
    8. '__["' → logprob: -18.250001907348633
    9. '____' → logprob: -18.375001907348633
    10. ' __' → logprob: -18.875001907348633

Token 475: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.036733392626047134
    2. '==' → logprob: -3.661733388900757
    3. ' ==' → logprob: -4.661733627319336
    4. '=="' → logprob: -7.036733627319336
    5. '=='' → logprob: -10.286733627319336
    6. '__.__' → logprob: -12.161733627319336
    7. '_' → logprob: -12.411733627319336
    8. '___' → logprob: -13.161733627319336
    9. '__["' → logprob: -14.161733627319336
    10. '===' → logprob: -14.286733627319336

Token 476: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005269922781735659
    2. ''' → logprob: -5.255270004272461
    3. ' "__' → logprob: -10.630270004272461
    4. '__' → logprob: -11.505270004272461
    5. '"name' → logprob: -13.880270004272461
    6. '"user' → logprob: -14.630270004272461
    7. ' '__' → logprob: -15.880270004272461
    8. '"class' → logprob: -16.63027000427246
    9. '("__' → logprob: -16.88027000427246
    10. '"type' → logprob: -17.50527000427246

Token 477: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0007201764383353293
    2. '__' → logprob: -7.250720024108887
    3. 'name' → logprob: -12.250720024108887
    4. '"' → logprob: -12.375720024108887
    5. ' main' → logprob: -14.375720024108887
    6. '_main' → logprob: -14.875720024108887
    7. ''' → logprob: -16.250720977783203
    8. 'built' → logprob: -17.250720977783203
    9. ' "__' → logprob: -17.750720977783203
    10. '-main' → logprob: -18.375720977783203

Token 478: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03806823492050171
    2. '__' → logprob: -3.2880682945251465
    3. '__':
' → logprob: -10.538067817687988
    4. '__["' → logprob: -15.788067817687988
    5. '__:' → logprob: -16.538068771362305
    6. '__.' → logprob: -17.413068771362305
    7. '__("' → logprob: -18.038068771362305
    8. '__",' → logprob: -18.038068771362305
    9. '__.__' → logprob: -18.163068771362305
    10. '_' → logprob: -18.663068771362305

Token 479: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12887509167194366
    2. 'main' → logprob: -2.1288750171661377
    3. '	main' → logprob: -6.753875255584717
    4. '   ' → logprob: -7.378875255584717
    5. '_main' → logprob: -8.878874778747559
    6. ' __' → logprob: -12.503874778747559
    7. '__' → logprob: -12.503874778747559
    8. ' ' → logprob: -13.253874778747559
    9. 'if' → logprob: -13.503874778747559
    10. '_MAIN' → logprob: -14.003874778747559

Token 480: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.001203923486173153
    2. ' main' → logprob: -6.751204013824463
    3. '   ' → logprob: -10.501203536987305
    4. '	main' → logprob: -12.001203536987305
    5. '_main' → logprob: -17.751203536987305
    6. ' ' → logprob: -19.876203536987305
    7. '.main' → logprob: -20.376203536987305
    8. '(main' → logprob: -20.626203536987305
    9. '  ' → logprob: -21.626203536987305
    10. 'Main' → logprob: -22.251203536987305

Token 481: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 479
Tokens correctement prédits (1ère position, stricte): 147
Tokens correctement prédits (1ère position, avec adaptation): 155
Tokens correctement prédits (top 10): 327
Précision stricte (1ère position): 30.69%
Précision adaptée (1ère position): 32.36%
Précision (top 10): 68.27%
================================================================================
