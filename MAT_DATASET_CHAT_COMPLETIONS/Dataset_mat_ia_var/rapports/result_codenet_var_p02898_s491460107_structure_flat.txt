================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N_K = input().split()
N = int(N_K[0])
K = int(N_K[1])
h = input().split()
for i in range(len(h)):
    h[i] = int(h[i])
cnt = 0
i = 0
while i < N:
    if h[i] >= K:
        cnt = cnt + 1
    i = i + 1
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '_K' (ID: 20555)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3837502598762512
    2. '32' → logprob: -1.2587502002716064
    3. '10' → logprob: -3.6337502002716064
    4. '16' → logprob: -5.5087504386901855
    5. '64' → logprob: -6.7587504386901855
    6. '4' → logprob: -6.8837504386901855
    7. '100' → logprob: -8.008749961853027
    8. '"' → logprob: -8.258749961853027
    9. '256' → logprob: -8.258749961853027
    10. '1' → logprob: -8.508749961853027

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12184973806142807
    2. ''' → logprob: -2.621849775314331
    3. '[' → logprob: -4.246849536895752
    4. '"' → logprob: -4.496849536895752
    5. '.' → logprob: -4.996849536895752
    6. '_' → logprob: -5.371849536895752
    7. '`' → logprob: -7.121849536895752
    8. '```' → logprob: -7.121849536895752
    9. '('' → logprob: -7.371849536895752
    10. '(
' → logprob: -7.371849536895752

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1051231250166893
    2. '()' → logprob: -3.7301230430603027
    3. '.strip' → logprob: -3.7301230430603027
    4. '+' → logprob: -3.8551230430603027
    5. '(' → logprob: -5.230123043060303
    6. '().' → logprob: -5.480123043060303
    7. '```' → logprob: -5.480123043060303
    8. '\n' → logprob: -5.980123043060303
    9. ')' → logprob: -5.980123043060303
    10. ' ' → logprob: -6.230123043060303

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003236536169424653
    2. '()' → logprob: -5.753236770629883
    3. '('' → logprob: -10.753236770629883
    4. '(
' → logprob: -11.253236770629883
    5. '("("' → logprob: -12.253236770629883
    6. '(

' → logprob: -12.503236770629883
    7. ' (' → logprob: -13.003236770629883
    8. '```' → logprob: -13.128236770629883
    9. '`' → logprob: -13.253236770629883
    10. '(`' → logprob: -13.253236770629883

Token 7: 'N' (ID: 45)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004051209893077612
    2. '=' → logprob: -7.004051208496094
    3. '[N' → logprob: -7.254051208496094
    4. '\[' → logprob: -7.629051208496094
    5. '```' → logprob: -7.629051208496094
    6. '[int' → logprob: -7.754051208496094
    7. '.' → logprob: -8.254051208496094
    8. '[n' → logprob: -8.879051208496094
    9. '#' → logprob: -9.004051208496094
    10. 'N' → logprob: -9.504051208496094

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6028807759284973
    2. '_K' → logprob: -0.8528807759284973
    3. '[' → logprob: -3.8528807163238525
    4. '[_' → logprob: -5.477880954742432
    5. '_N' → logprob: -8.102880477905273
    6. '_[' → logprob: -8.977880477905273
    7. '[]' → logprob: -9.102880477905273
    8. '[K' → logprob: -9.102880477905273
    9. '_k' → logprob: -9.227880477905273
    10. 'K' → logprob: -9.602880477905273

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03806593269109726
    2. ' int' → logprob: -3.2880659103393555
    3. 'N' → logprob: -11.288065910339355
    4. ' N' → logprob: -11.663065910339355
    5. '[int' → logprob: -13.288065910339355
    6. 'len' → logprob: -14.788065910339355
    7. '(int' → logprob: -15.038065910339355
    8. ' ' → logprob: -15.538065910339355
    9. 'input' → logprob: -15.538065910339355
    10. 'float' → logprob: -16.288066864013672

Token 10: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10152717679738998
    2. '(N' → logprob: -2.351527214050293
    3. '('' → logprob: -6.726527214050293
    4. '("("' → logprob: -10.351527214050293
    5. '(K' → logprob: -10.851527214050293
    6. '(
' → logprob: -10.976527214050293
    7. '(`' → logprob: -11.476527214050293
    8. 'N' → logprob: -11.726527214050293
    9. '(

' → logprob: -11.851527214050293
    10. '("' → logprob: -11.851527214050293

Token 11: '_K' (ID: 20555)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2527475953102112
    2. '_K' → logprob: -1.5027475357055664
    3. ')' → logprob: -7.627747535705566
    4. '[_' → logprob: -8.877747535705566
    5. ' ' → logprob: -10.502747535705566
    6. '```' → logprob: -10.627747535705566
    7. '[K' → logprob: -10.877747535705566
    8. '   ' → logprob: -10.877747535705566
    9. '_N' → logprob: -11.002747535705566
    10. ')[' → logprob: -11.002747535705566

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. ')' → logprob: -13.750001907348633
    3. ' [' → logprob: -15.375001907348633
    4. '[
' → logprob: -15.875001907348633
    5. '[N' → logprob: -16.125001907348633
    6. '\[' → logprob: -16.625001907348633
    7. '   ' → logprob: -17.375001907348633
    8. '```' → logprob: -17.500001907348633
    9. ' ' → logprob: -17.875001907348633
    10. ')[' → logprob: -18.500001907348633

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2007883671903983e-05
    2. '1' → logprob: -10.750021934509277
    3. ' ' → logprob: -14.625021934509277
    4. ')' → logprob: -19.125022888183594
    5. '```' → logprob: -19.500022888183594
    6. '۰' → logprob: -19.625022888183594
    7. '`' → logprob: -20.625022888183594
    8. '０' → logprob: -20.750022888183594
    9. ''' → logprob: -21.062522888183594
    10. '   ' → logprob: -21.437522888183594

Token 14: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023788906633853912
    2. '])' → logprob: -3.7737889289855957
    3. ']' → logprob: -7.898788928985596
    4. ')]' → logprob: -9.523788452148438
    5. ')])' → logprob: -10.398788452148438
    6. ''])' → logprob: -10.773788452148438
    7. ' )' → logprob: -11.398788452148438
    8. ')
' → logprob: -12.148788452148438
    9. '')' → logprob: -12.148788452148438
    10. '))' → logprob: -12.398788452148438

Token 15: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0003971839905716479
    2. 'M' → logprob: -7.875397205352783
    3. ' K' → logprob: -11.375396728515625
    4. 'k' → logprob: -12.625396728515625
    5. '```' → logprob: -13.750396728515625
    6. 'N' → logprob: -15.125396728515625
    7. '`' → logprob: -15.625396728515625
    8. '_K' → logprob: -15.875396728515625
    9. '_' → logprob: -16.250396728515625
    10. ')' → logprob: -16.375396728515625

Token 16: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.227615237236023
    2. '_' → logprob: -1.727615237236023
    3. '<|end|>' → logprob: -1.727615237236023
    4. ' ' → logprob: -2.1026153564453125
    5. '=' → logprob: -2.2276153564453125
    6. ' =' → logprob: -2.6026153564453125
    7. '[' → logprob: -3.7276153564453125
    8. '_space' → logprob: -5.6026153564453125
    9. ''' → logprob: -5.7276153564453125
    10. '<|end|>' → logprob: -5.9776153564453125

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804194927215576
    2. ' int' → logprob: -3.2880420684814453
    3. '(int' → logprob: -16.163042068481445
    4. ' ' → logprob: -16.288042068481445
    5. '=int' → logprob: -16.538042068481445
    6. 'N' → logprob: -16.663042068481445
    7. '<int' → logprob: -17.038042068481445
    8. ' N' → logprob: -17.163042068481445
    9. '	int' → logprob: -17.663042068481445
    10. '0' → logprob: -17.663042068481445

Token 18: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4842080771923065
    2. '(' → logprob: -0.9842081069946289
    3. '(K' → logprob: -4.609208106994629
    4. '('' → logprob: -10.609208106994629
    5. ' (' → logprob: -10.734208106994629
    6. '("("' → logprob: -10.984208106994629
    7. '((' → logprob: -11.484208106994629
    8. '()' → logprob: -11.609208106994629
    9. '(`' → logprob: -11.859208106994629
    10. '(n' → logprob: -12.609208106994629

Token 19: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.00047845521476119757
    2. ')' → logprob: -8.500478744506836
    3. '[' → logprob: -8.625478744506836
    4. '-' → logprob: -10.500478744506836
    5. '_' → logprob: -10.875478744506836
    6. '[K' → logprob: -11.000478744506836
    7. '])' → logprob: -12.125478744506836
    8. '[_' → logprob: -12.125478744506836
    9. '```' → logprob: -12.375478744506836
    10. '+' → logprob: -12.500478744506836

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.36574100604048e-06
    2. ')' → logprob: -12.875004768371582
    3. ' [' → logprob: -14.250004768371582
    4. '```' → logprob: -14.875004768371582
    5. '[
' → logprob: -15.250004768371582
    6. ')[' → logprob: -16.000003814697266
    7. '1' → logprob: -16.375003814697266
    8. '   ' → logprob: -16.500003814697266
    9. ']' → logprob: -17.500003814697266
    10. ' ' → logprob: -17.500003814697266

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. '])' → logprob: -11.875011444091797
    3. '0' → logprob: -12.625011444091797
    4. ' ' → logprob: -15.000011444091797
    5. '```' → logprob: -15.750011444091797
    6. '   ' → logprob: -17.125011444091797
    7. '])
' → logprob: -17.250011444091797
    8. ']' → logprob: -17.625011444091797
    9. '' → logprob: -17.937511444091797
    10. '-' → logprob: -18.125011444091797

Token 22: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. '))' → logprob: -13.500003814697266
    3. '）' → logprob: -14.250003814697266
    4. '`)' → logprob: -14.375003814697266
    5. '')' → logprob: -14.500003814697266
    6. '])' → logprob: -14.625003814697266
    7. ']' → logprob: -16.250003814697266
    8. '()' → logprob: -16.625003814697266
    9. ' )' → logprob: -16.750003814697266
    10. ')])' → logprob: -17.000003814697266

Token 23: 'h' (ID: 71)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.6763877868652344
    2. 'for' → logprob: -1.6763877868652344
    3. 'a' → logprob: -1.9263877868652344
    4. 'i' → logprob: -2.3013877868652344
    5. 's' → logprob: -2.5513877868652344
    6. 'result' → logprob: -2.8013877868652344
    7. 'd' → logprob: -3.4263877868652344
    8. 'x' → logprob: -3.8013877868652344
    9. 'dp' → logprob: -3.9263877868652344
    10. 'r' → logprob: -4.051387786865234

Token 24: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11304612457752228
    2. 'eight' → logprob: -3.113046169281006
    3. '=' → logprob: -4.363046169281006
    4. 'ei' → logprob: -4.613046169281006
    5. 't' → logprob: -4.738046169281006
    6. ' =' → logprob: -4.863046169281006
    7. 'ights' → logprob: -5.363046169281006
    8. '_e' → logprob: -5.363046169281006
    9. '[' → logprob: -5.488046169281006
    10. '[i' → logprob: -6.363046169281006

Token 25: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7877729535102844
    2. ' list' → logprob: -0.9127729535102844
    3. '[int' → logprob: -2.5377728939056396
    4. 'int' → logprob: -3.4127728939056396
    5. '[' → logprob: -4.412773132324219
    6. ' [' → logprob: -4.537773132324219
    7. ' int' → logprob: -5.162773132324219
    8. 'input' → logprob: -6.662773132324219
    9. '[]' → logprob: -7.287773132324219
    10. '[input' → logprob: -8.037773132324219

Token 26: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03533417731523514
    2. '().' → logprob: -3.4103341102600098
    3. '(' → logprob: -6.66033411026001
    4. '.' → logprob: -8.660334587097168
    5. ' ()' → logprob: -9.785334587097168
    6. '())' → logprob: -10.035334587097168
    7. ')' → logprob: -10.660334587097168
    8. '('' → logprob: -10.785334587097168
    9. '()

' → logprob: -10.785334587097168
    10. '()
' → logprob: -11.285334587097168

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00029279827140271664
    2. 'strip' → logprob: -8.250292778015137
    3. 'rstrip' → logprob: -10.625292778015137
    4. ' split' → logprob: -12.000292778015137
    5. 'replace' → logprob: -14.625292778015137
    6. 'spl' → logprob: -14.875292778015137
    7. '(split' → logprob: -15.750292778015137
    8. 'plit' → logprob: -17.000293731689453
    9. '.split' → logprob: -18.000293731689453
    10. 'rs' → logprob: -18.000293731689453

Token 28: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.043042805045843124
    2. '(' → logprob: -3.1680428981781006
    3. '("("' → logprob: -11.29304313659668
    4. '('' → logprob: -12.04304313659668
    5. '()(' → logprob: -12.41804313659668
    6. '().' → logprob: -12.79304313659668
    7. '()`' → logprob: -13.04304313659668
    8. '()

' → logprob: -13.29304313659668
    9. '()]' → logprob: -13.29304313659668
    10. '(

' → logprob: -13.54304313659668

Token 29: 'for' (ID: 1938)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04442519694566727
    2. 'a' → logprob: -4.419425010681152
    3. 'hs' → logprob: -5.294425010681152
    4. 'he' → logprob: -5.544425010681152
    5. 'dp' → logprob: -5.544425010681152
    6. 'c' → logprob: -5.794425010681152
    7. 'for' → logprob: -5.794425010681152
    8. 'ans' → logprob: -6.169425010681152
    9. 'arr' → logprob: -6.544425010681152
    10. 'cost' → logprob: -6.794425010681152

Token 30: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08904460072517395
    2. '_' → logprob: -3.2140445709228516
    3. ' ' → logprob: -3.5890445709228516
    4. ' _' → logprob: -4.214044570922852
    5. 'i' → logprob: -6.089044570922852
    6. ' h' → logprob: -8.714044570922852
    7. '_i' → logprob: -9.714044570922852
    8. '  ' → logprob: -10.464044570922852
    9. ' ‌' → logprob: -10.714044570922852
    10. ' ' → logprob: -11.339044570922852

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07699668407440186
    2. 'in' → logprob: -2.7019968032836914
    3. ' ' → logprob: -5.576996803283691
    4. '<|end|>' → logprob: -7.076996803283691
    5. '  ' → logprob: -7.201996803283691
    6. ' range' → logprob: -7.826996803283691
    7. ')' → logprob: -8.076996803283691
    8. ' i' → logprob: -8.701996803283691
    9. ' )' → logprob: -8.951996803283691
    10. ' (' → logprob: -9.326996803283691

Token 32: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5760170817375183
    2. ' range' → logprob: -0.8260170817375183
    3. ' h' → logprob: -9.701017379760742
    4. 'h' → logprob: -11.951017379760742
    5. ' ' → logprob: -12.326017379760742
    6. '	range' → logprob: -13.076017379760742
    7. ' xrange' → logprob: -13.451017379760742
    8. '(range' → logprob: -14.451017379760742
    9. 'r' → logprob: -14.951017379760742
    10. 'rang' → logprob: -15.326017379760742

Token 33: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012094934470951557
    2. '(N' → logprob: -4.512094974517822
    3. '(len' → logprob: -7.137094974517822
    4. '(K' → logprob: -8.762094497680664
    5. ' (' → logprob: -9.887094497680664
    6. '()' → logprob: -11.137094497680664
    7. '(n' → logprob: -11.137094497680664
    8. '(i' → logprob: -11.762094497680664
    9. '(s' → logprob: -13.762094497680664
    10. '(
' → logprob: -13.887094497680664

Token 34: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.029858551919460297
    2. '(' → logprob: -3.5298585891723633
    3. '(s' → logprob: -9.904858589172363
    4. 'h' → logprob: -10.904858589172363
    5. '(K' → logprob: -11.404858589172363
    6. '(N' → logprob: -11.779858589172363
    7. '(n' → logprob: -12.029858589172363
    8. ' (' → logprob: -12.154858589172363
    9. '(k' → logprob: -13.279858589172363
    10. ')' → logprob: -13.279858589172363

Token 35: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002682541264221072
    2. ')' → logprob: -6.252682685852051
    3. ')):' → logprob: -7.502682685852051
    4. '[i' → logprob: -10.12768268585205
    5. '))' → logprob: -10.12768268585205
    6. '):
' → logprob: -10.25268268585205
    7. ' ):' → logprob: -10.25268268585205
    8. '[' → logprob: -10.50268268585205
    9. ':' → logprob: -11.37768268585205
    10. ']):' → logprob: -12.25268268585205

Token 36: '   ' (ID: 271)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.16581149399280548
    2. 'h' → logprob: -2.290811538696289
    3. ' ' → logprob: -3.165811538696289
    4. '    ' → logprob: -5.540811538696289
    5. '   ' → logprob: -5.665811538696289
    6. ' =' → logprob: -7.165811538696289
    7. '	h' → logprob: -7.665811538696289
    8. '=' → logprob: -8.415811538696289
    9. '  ' → logprob: -9.290811538696289
    10. '<|end|>' → logprob: -9.790811538696289

Token 37: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.011699121445417404
    2. ' h' → logprob: -4.511699199676514
    3. '   ' → logprob: -7.386699199676514
    4. '	h' → logprob: -11.136698722839355
    5. '    ' → logprob: -12.261698722839355
    6. ' ' → logprob: -12.511698722839355
    7. '       ' → logprob: -12.761698722839355
    8. 'if' → logprob: -13.761698722839355
    9. '  ' → logprob: -13.886698722839355
    10. '<h' → logprob: -14.636698722839355

Token 38: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.19164007902145386
    2. '[' → logprob: -1.8166401386260986
    3. '[int' → logprob: -4.9416399002075195
    4. '[h' → logprob: -5.4416399002075195
    5. '=' → logprob: -9.31663990020752
    6. '\[' → logprob: -9.69163990020752
    7. '[I' → logprob: -9.81663990020752
    8. '=[' → logprob: -11.31663990020752
    9. 'h' → logprob: -11.31663990020752
    10. '[N' → logprob: -11.69163990020752

Token 39: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00382810621522367
    2. ')=' → logprob: -6.253828048706055
    3. '=' → logprob: -6.378828048706055
    4. ' =' → logprob: -9.503828048706055
    5. '=int' → logprob: -10.003828048706055
    6. ']' → logprob: -10.128828048706055
    7. ' )' → logprob: -10.503828048706055
    8. '])' → logprob: -12.628828048706055
    9. ']=' → logprob: -13.003828048706055
    10. 'int' → logprob: -13.503828048706055

Token 40: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00019936825265176594
    2. ' =' → logprob: -8.875199317932129
    3. '=int' → logprob: -9.750199317932129
    4. '=
' → logprob: -14.125199317932129
    5. '=

' → logprob: -15.500199317932129
    6. '<|end|>' → logprob: -16.625200271606445
    7. ')=' → logprob: -17.750200271606445
    8. ')' → logprob: -17.750200271606445
    9. '=float' → logprob: -18.000200271606445
    10. 'int' → logprob: -18.000200271606445

Token 41: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023246755823493004
    2. ' int' → logprob: -3.7732467651367188
    3. 'float' → logprob: -14.898246765136719
    4. '(int' → logprob: -15.398246765136719
    5. '	int' → logprob: -15.648246765136719
    6. '[int' → logprob: -15.648246765136719
    7. '   ' → logprob: -15.898246765136719
    8. ' ' → logprob: -15.898246765136719
    9. '0' → logprob: -16.89824676513672
    10. '<int' → logprob: -17.02324676513672

Token 42: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0019288709154352546
    2. '(' → logprob: -6.251928806304932
    3. '(
' → logprob: -17.001928329467773
    4. ' (' → logprob: -17.376928329467773
    5. '(i' → logprob: -17.376928329467773
    6. '(H' → logprob: -17.626928329467773
    7. '((' → logprob: -18.001928329467773
    8. '(s' → logprob: -18.251928329467773
    9. '(x' → logprob: -18.501928329467773
    10. '(

' → logprob: -18.626928329467773

Token 43: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -12.375005722045898
    3. ')' → logprob: -13.625005722045898
    4. '[I' → logprob: -16.6250057220459
    5. ' [' → logprob: -16.8750057220459
    6. ')i' → logprob: -17.0000057220459
    7. '[h' → logprob: -18.0000057220459
    8. '])' → logprob: -18.1250057220459
    9. ']' → logprob: -18.5000057220459
    10. ')[' → logprob: -18.8750057220459

Token 44: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.007698895409703255
    2. ')' → logprob: -4.882699012756348
    3. ']' → logprob: -10.257699012756348
    4. ')])' → logprob: -10.507699012756348
    5. '))' → logprob: -11.507699012756348
    6. ')]' → logprob: -11.632699012756348
    7. '])
' → logprob: -12.882699012756348
    8. ''])' → logprob: -13.132699012756348
    9. ']))' → logprob: -13.382699012756348
    10. '])]' → logprob: -13.507699012756348

Token 45: 'cnt' (ID: 33160)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.08048175275325775
    2. 'dp' → logprob: -3.205481767654419
    3. 'for' → logprob: -4.83048152923584
    4. 'result' → logprob: -5.20548152923584
    5. 'ans' → logprob: -5.70548152923584
    6. 'cost' → logprob: -5.83048152923584
    7. 'sorted' → logprob: -6.08048152923584
    8. 'answer' → logprob: -6.20548152923584
    9. 'if' → logprob: -6.20548152923584
    10. 'd' → logprob: -6.70548152923584

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6048928499221802
    2. '=' → logprob: -0.8548928499221802
    3. '(' → logprob: -4.229892730712891
    4. '_' → logprob: -4.354892730712891
    5. ',' → logprob: -8.35489273071289
    6. ')' → logprob: -8.72989273071289
    7. 's' → logprob: -8.97989273071289
    8. '[' → logprob: -9.22989273071289
    9. ' ' → logprob: -9.60489273071289
    10. '<|end|>' → logprob: -10.47989273071289

Token 47: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017459811642765999
    2. ' ' → logprob: -6.37674617767334
    3. 'sum' → logprob: -11.12674617767334
    4. 'K' → logprob: -11.87674617767334
    5. '1' → logprob: -12.00174617767334
    6. 'h' → logprob: -12.00174617767334
    7. ' K' → logprob: -13.37674617767334
    8. '(' → logprob: -13.75174617767334
    9. 'len' → logprob: -13.75174617767334
    10. ' sum' → logprob: -13.87674617767334

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018280261429026723
    2. 'sum' → logprob: -8.87518310546875
    3. '1' → logprob: -11.12518310546875
    4. ' ' → logprob: -11.37518310546875
    5. 'len' → logprob: -12.25018310546875
    6. 'K' → logprob: -12.62518310546875
    7. 'h' → logprob: -12.75018310546875
    8. 'max' → logprob: -13.50018310546875
    9. '(' → logprob: -13.50018310546875
    10. '3' → logprob: -15.12518310546875

Token 49: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.822184681892395
    2. 'for' → logprob: -1.197184681892395
    3. '\n' → logprob: -1.447184681892395
    4. ' for' → logprob: -3.9471845626831055
    5. '\' → logprob: -6.0721845626831055
    6. '' → logprob: -7.8221845626831055
    7. ' 
' → logprob: -7.9471845626831055
    8. '<|end|>' → logprob: -8.072184562683105
    9. '
' → logprob: -8.447184562683105
    10. '```' → logprob: -9.322184562683105

Token 50: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0030371323227882385
    2. '\n' → logprob: -6.253036975860596
    3. '
' → logprob: -7.378036975860596
    4. ' for' → logprob: -7.878036975860596
    5. '\' → logprob: -10.003037452697754
    6. '' → logprob: -11.628037452697754
    7. '```' → logprob: -11.628037452697754
    8. 'while' → logprob: -12.003037452697754
    9. 'if' → logprob: -12.503037452697754
    10. ':' → logprob: -12.753037452697754

Token 51: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8261975049972534
    2. '+' → logprob: -1.0761975049972534
    3. ' =' → logprob: -2.576197624206543
    4. '=' → logprob: -2.826197624206543
    5. ' ' → logprob: -3.076197624206543
    6. ' +' → logprob: -3.576197624206543
    7. '+=' → logprob: -4.951197624206543
    8. ' <' → logprob: -5.951197624206543
    9. '<|end|>' → logprob: -6.826197624206543
    10. ' >' → logprob: -8.576197624206543

Token 52: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11301268637180328
    2. ' ' → logprob: -2.2380127906799316
    3. '1' → logprob: -8.863012313842773
    4. ' K' → logprob: -10.988012313842773
    5. ' N' → logprob: -11.363012313842773
    6. 'K' → logprob: -11.988012313842773
    7. 'N' → logprob: -12.238012313842773
    8. ' i' → logprob: -12.613012313842773
    9. 'i' → logprob: -13.488012313842773
    10. '2' → logprob: -13.613012313842773

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019061435014009476
    2. 'N' → logprob: -7.126905918121338
    3. ' ' → logprob: -7.376905918121338
    4. '1' → logprob: -8.001906394958496
    5. 'K' → logprob: -9.251906394958496
    6. 'len' → logprob: -10.626906394958496
    7. '2' → logprob: -11.876906394958496
    8. ' N' → logprob: -12.251906394958496
    9. '-' → logprob: -12.751906394958496
    10. 'i' → logprob: -13.751906394958496

Token 54: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1431596279144287
    2. ' while' → logprob: -1.3931596279144287
    3. ':' → logprob: -2.2681596279144287
    4. ' ' → logprob: -2.3931596279144287
    5. '<|end|>' → logprob: -2.7681596279144287
    6. '\' → logprob: -2.8931596279144287
    7. ' 
' → logprob: -3.1431596279144287
    8. '
' → logprob: -3.7681596279144287
    9. '\n' → logprob: -4.143159866333008
    10. ':
' → logprob: -5.268159866333008

Token 55: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4119635820388794
    2. 'while' → logprob: -1.5369635820388794
    3. '\n' → logprob: -1.9119635820388794
    4. ' ' → logprob: -1.9119635820388794
    5. ' while' → logprob: -1.9119635820388794
    6. ' 
' → logprob: -3.28696346282959
    7. '\' → logprob: -3.66196346282959
    8. '<|end|>' → logprob: -4.03696346282959
    9. ':' → logprob: -5.28696346282959
    10. '```' → logprob: -5.78696346282959

Token 56: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11346359550952911
    2. 'i' → logprob: -2.2384636402130127
    3. 'cnt' → logprob: -8.488463401794434
    4. ' ' → logprob: -9.113463401794434
    5. ' cnt' → logprob: -9.113463401794434
    6. ' <' → logprob: -9.238463401794434
    7. '<' → logprob: -10.613463401794434
    8. ' K' → logprob: -10.988463401794434
    9. '(i' → logprob: -11.113463401794434
    10. ' True' → logprob: -11.238463401794434

Token 57: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16095994412899017
    2. '<' → logprob: -1.9109599590301514
    3. ' <=' → logprob: -7.785959720611572
    4. '<=' → logprob: -9.28596019744873
    5. ' ' → logprob: -9.66096019744873
    6. '+' → logprob: -10.03596019744873
    7. '<len' → logprob: -10.16096019744873
    8. '<N' → logprob: -10.28596019744873
    9. '<K' → logprob: -10.41096019744873
    10. ' +' → logprob: -11.78596019744873

Token 58: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.11510000377893448
    2. ' N' → logprob: -2.2400999069213867
    3. 'len' → logprob: -6.615099906921387
    4. ' len' → logprob: -7.365099906921387
    5. 'n' → logprob: -9.365099906921387
    6. 'K' → logprob: -9.365099906921387
    7. ' ' → logprob: -9.365099906921387
    8. ' K' → logprob: -10.990099906921387
    9. ' n' → logprob: -11.490099906921387
    10. '  ' → logprob: -12.115099906921387

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009412388317286968
    2. ' and' → logprob: -7.250941276550293
    3. ':
' → logprob: -9.125941276550293
    4. ' :' → logprob: -9.250941276550293
    5. 'and' → logprob: -10.875941276550293
    6. ' ' → logprob: -13.375941276550293
    7. '   ' → logprob: -13.375941276550293
    8. '+' → logprob: -14.125941276550293
    9. ':**' → logprob: -14.125941276550293
    10. '+:' → logprob: -14.375941276550293

Token 60: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31464824080467224
    2. ' if' → logprob: -1.8146482706069946
    3. '   ' → logprob: -2.314648151397705
    4. 'cnt' → logprob: -6.439648151397705
    5. ' and' → logprob: -6.689648151397705
    6. '+' → logprob: -6.814648151397705
    7. 'i' → logprob: -6.814648151397705
    8. 'h' → logprob: -7.064648151397705
    9. ' ' → logprob: -7.814648151397705
    10. '0' → logprob: -8.189648628234863

Token 61: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5815971493721008
    2. '1' → logprob: -1.081597089767456
    3. ' if' → logprob: -3.331597089767456
    4. 'h' → logprob: -3.581597089767456
    5. 'i' → logprob: -4.081597328186035
    6. ' ' → logprob: -4.831597328186035
    7. '   ' → logprob: -5.331597328186035
    8. '0' → logprob: -6.206597328186035
    9. 'cnt' → logprob: -6.331597328186035
    10. 'K' → logprob: -6.706597328186035

Token 62: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5794475078582764
    2. 'h' → logprob: -0.8294475078582764
    3. ' K' → logprob: -6.8294477462768555
    4. ' i' → logprob: -7.0794477462768555
    5. 'K' → logprob: -7.4544477462768555
    6. 'i' → logprob: -7.5794477462768555
    7. ' ' → logprob: -8.454447746276855
    8. '   ' → logprob: -9.329447746276855
    9. ' abs' → logprob: -10.079447746276855
    10. 'abs' → logprob: -10.204447746276855

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.547789674485102e-05
    2. '[' → logprob: -10.375035285949707
    3. '[h' → logprob: -13.500035285949707
    4. ' [' → logprob: -13.750035285949707
    5. 'i' → logprob: -14.375035285949707
    6. '[j' → logprob: -15.000035285949707
    7. '```' → logprob: -15.000035285949707
    8. '[I' → logprob: -15.875035285949707
    9. ' ' → logprob: -16.750036239624023
    10. '[
' → logprob: -16.875036239624023

Token 64: ']' (ID: 60)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.408621072769165
    2. '>=' → logprob: -1.533621072769165
    3. '>' → logprob: -1.908621072769165
    4. ']' → logprob: -1.908621072769165
    5. ' <' → logprob: -2.533621072769165
    6. ' <=' → logprob: -3.283621072769165
    7. ' >' → logprob: -3.533621072769165
    8. '%' → logprob: -3.658621072769165
    9. '<' → logprob: -3.908621072769165
    10. '<=' → logprob: -4.033620834350586

Token 65: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5126644372940063
    2. '<' → logprob: -2.137664318084717
    3. ' >=' → logprob: -2.137664318084717
    4. ' <' → logprob: -2.637664318084717
    5. '<=' → logprob: -3.637664318084717
    6. '>' → logprob: -3.762664318084717
    7. '<K' → logprob: -4.137664318084717
    8. ' <=' → logprob: -4.637664318084717
    9. '%' → logprob: -4.637664318084717
    10. ' >' → logprob: -5.887664318084717

Token 66: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00018029935017693788
    2. ' K' → logprob: -9.1251802444458
    3. '1' → logprob: -11.1251802444458
    4. '2' → logprob: -11.2501802444458
    5. 'h' → logprob: -11.8751802444458
    6. ' ' → logprob: -12.0001802444458
    7. '100' → logprob: -12.3751802444458
    8. '4' → logprob: -12.5001802444458
    9. '   ' → logprob: -12.6251802444458
    10. '50' → logprob: -13.0001802444458

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03808039426803589
    2. ':
' → logprob: -3.2880804538726807
    3. ' :' → logprob: -11.288080215454102
    4. '   ' → logprob: -11.538080215454102
    5. ' :
' → logprob: -12.538080215454102
    6. ':i' → logprob: -12.538080215454102
    7. ':
' → logprob: -12.663080215454102
    8. '.' → logprob: -13.913080215454102
    9. ' and' → logprob: -14.038080215454102
    10. '):' → logprob: -14.288080215454102

Token 68: '       ' (ID: 309)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.758811354637146
    2. '   ' → logprob: -1.633811354637146
    3. '       ' → logprob: -1.758811354637146
    4. ':
' → logprob: -2.2588114738464355
    5. '
' → logprob: -3.8838114738464355
    6. ' cnt' → logprob: -4.3838114738464355
    7. 'i' → logprob: -4.6338114738464355
    8. ':' → logprob: -4.6338114738464355
    9. '	cnt' → logprob: -5.7588114738464355
    10. ' i' → logprob: -6.5088114738464355

Token 69: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.04157673567533493
    2. 'i' → logprob: -3.916576623916626
    3. '   ' → logprob: -4.166576862335205
    4. ' cnt' → logprob: -5.791576862335205
    5. 'break' → logprob: -6.666576862335205
    6. '       ' → logprob: -8.041576385498047
    7. '
' → logprob: -8.666576385498047
    8. '	cnt' → logprob: -8.791576385498047
    9. 'count' → logprob: -9.041576385498047
    10. ' i' → logprob: -9.791576385498047

Token 70: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0012079726438969374
    2. ' +=' → logprob: -7.0012078285217285
    3. '=' → logprob: -8.126208305358887
    4. '+' → logprob: -14.751208305358887
    5. ']+=' → logprob: -15.876208305358887
    6. '-=' → logprob: -16.50120735168457
    7. ' =' → logprob: -16.62620735168457
    8. '+=(' → logprob: -16.75120735168457
    9. '=i' → logprob: -18.62620735168457
    10. '   ' → logprob: -18.75120735168457

Token 71: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.11279056966304779
    2. ' cnt' → logprob: -2.362790584564209
    3. '1' → logprob: -4.862790584564209
    4. '0' → logprob: -6.112790584564209
    5. ' ' → logprob: -6.737790584564209
    6. '+' → logprob: -7.487790584564209
    7. '(cnt' → logprob: -7.862790584564209
    8. 'i' → logprob: -8.98779010772705
    9. ' i' → logprob: -9.73779010772705
    10. '	cnt' → logprob: -9.86279010772705

Token 72: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007219645194709301
    2. ' +' → logprob: -7.2507219314575195
    3. '+
' → logprob: -11.62572193145752
    4. '1' → logprob: -13.25072193145752
    5. '+=' → logprob: -14.50072193145752
    6. '+i' → logprob: -15.12572193145752
    7. '＋' → logprob: -15.75072193145752
    8. '-' → logprob: -16.625722885131836
    9. ' ' → logprob: -16.625722885131836
    10. '2' → logprob: -16.750722885131836

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014258820563554764
    2. ' ' → logprob: -4.264258861541748
    3. 'h' → logprob: -9.76425838470459
    4. '2' → logprob: -10.76425838470459
    5. ' h' → logprob: -12.01425838470459
    6. 'i' → logprob: -12.63925838470459
    7. '100' → logprob: -13.13925838470459
    8. '3' → logprob: -13.38925838470459
    9. '10' → logprob: -13.76425838470459
    10. ' i' → logprob: -14.63925838470459

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044771170360036194
    2. 'h' → logprob: -8.000447273254395
    3. ' ' → logprob: -9.875447273254395
    4. '2' → logprob: -10.500447273254395
    5. 'i' → logprob: -11.000447273254395
    6. '(h' → logprob: -12.375447273254395
    7. '100' → logprob: -13.125447273254395
    8. '3' → logprob: -13.250447273254395
    9. 'N' → logprob: -13.625447273254395
    10. '(' → logprob: -13.750447273254395

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6605245471000671
    2. '
' → logprob: -0.9105245471000671
    3. '       ' → logprob: -3.910524606704712
    4. ' i' → logprob: -3.910524606704712
    5. '    
' → logprob: -4.160524368286133
    6. 'i' → logprob: -4.160524368286133
    7. ' 
' → logprob: -5.410524368286133
    8. '
' → logprob: -6.660524368286133
    9. '  
' → logprob: -6.785524368286133
    10. '        
' → logprob: -6.910524368286133

Token 76: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7009482383728027
    2. '   ' → logprob: -0.7009482383728027
    3. ' i' → logprob: -5.450948238372803
    4. '       ' → logprob: -5.825948238372803
    5. 'while' → logprob: -8.825948715209961
    6. '    
' → logprob: -8.950948715209961
    7. '
' → logprob: -9.325948715209961
    8. '    ' → logprob: -10.325948715209961
    9. '  ' → logprob: -10.950948715209961
    10. ' ' → logprob: -10.950948715209961

Token 77: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.012337754480540752
    2. '   ' → logprob: -4.762337684631348
    3. ' i' → logprob: -5.637337684631348
    4. 'else' → logprob: -9.762337684631348
    5. 'while' → logprob: -10.262337684631348
    6. '    
' → logprob: -10.887337684631348
    7. '
' → logprob: -11.137337684631348
    8. ' ' → logprob: -12.262337684631348
    9. ' while' → logprob: -12.512337684631348
    10. '    ' → logprob: -12.637337684631348

Token 78: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004389763809740543
    2. '+=' → logprob: -5.504389762878418
    3. ' +=' → logprob: -8.879389762878418
    4. '++' → logprob: -9.379389762878418
    5. ' +' → logprob: -10.004389762878418
    6. '=' → logprob: -10.254389762878418
    7. '+++' → logprob: -12.379389762878418
    8. '1' → logprob: -13.504389762878418
    9. '+i' → logprob: -13.879389762878418
    10. ' ' → logprob: -16.129390716552734

Token 79: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1605694591999054
    2. ' i' → logprob: -1.910569429397583
    3. '1' → logprob: -8.035569190979004
    4. ' ' → logprob: -11.160569190979004
    5. '+' → logprob: -12.160569190979004
    6. '0' → logprob: -14.160569190979004
    7. '	i' → logprob: -14.535569190979004
    8. '   ' → logprob: -15.535569190979004
    9. '  ' → logprob: -15.660569190979004
    10. '_i' → logprob: -16.16057014465332

Token 80: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00014764121442567557
    2. ' +' → logprob: -8.875147819519043
    3. '1' → logprob: -12.000147819519043
    4. ' ' → logprob: -14.250147819519043
    5. '+i' → logprob: -14.250147819519043
    6. '+
' → logprob: -15.625147819519043
    7. ' plus' → logprob: -16.500146865844727
    8. 'i' → logprob: -17.250146865844727
    9. '++' → logprob: -17.375146865844727
    10. 'x' → logprob: -18.875146865844727

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '2' → logprob: -16.12520408630371
    4. '   ' → logprob: -16.37520408630371
    5. '3' → logprob: -17.75020408630371
    6. '  ' → logprob: -18.06270408630371
    7. '100' → logprob: -18.68770408630371
    8. '4' → logprob: -18.75020408630371
    9. '１' → logprob: -18.75020408630371
    10. '7' → logprob: -18.93770408630371

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -11.875007629394531
    3. '2' → logprob: -15.625007629394531
    4. '100' → logprob: -15.875007629394531
    5. '3' → logprob: -16.50000762939453
    6. '```' → logprob: -17.18750762939453
    7. '7' → logprob: -17.56250762939453
    8. '   ' → logprob: -17.68750762939453
    9. '11' → logprob: -17.87500762939453
    10. '10' → logprob: -17.87500762939453

Token 83: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012320445966906846
    2. '
' → logprob: -9.750123023986816
    3. ' print' → logprob: -9.750123023986816
    4. ')' → logprob: -13.875123023986816
    5. '```' → logprob: -13.875123023986816
    6. '\n' → logprob: -14.125123023986816
    7. '#' → logprob: -14.500123023986816
    8. '#print' → logprob: -14.625123023986816
    9. ' 
' → logprob: -14.750123023986816
    10. 'p' → logprob: -15.000123023986816

Token 84: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.6789137084269896e-05
    2. ' print' → logprob: -10.37503719329834
    3. 'p' → logprob: -13.37503719329834
    4. '
' → logprob: -13.87503719329834
    5. 'pr' → logprob: -14.50003719329834
    6. ')' → logprob: -14.62503719329834
    7. '#' → logprob: -14.87503719329834
    8. '#print' → logprob: -15.25003719329834
    9. 'prin' → logprob: -15.25003719329834
    10. 'if' → logprob: -15.62503719329834

Token 85: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008590542711317539
    2. '(cnt' → logprob: -7.125859260559082
    3. '('' → logprob: -10.375859260559082
    4. '("("' → logprob: -11.250859260559082
    5. '()' → logprob: -12.750859260559082
    6. '(c' → logprob: -13.125859260559082
    7. '((' → logprob: -13.500859260559082
    8. '(
' → logprob: -13.875859260559082
    9. '(`' → logprob: -14.000859260559082
    10. ' (' → logprob: -14.125859260559082

Token 86: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.25
    3. ')`' → logprob: -17.75
    4. '))' → logprob: -17.875
    5. ')
' → logprob: -18.25
    6. '')' → logprob: -19.125
    7. '）' → logprob: -19.5
    8. '`)' → logprob: -20.0
    9. '(' → logprob: -20.25
    10. ')#' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 84
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 30.95%
Précision adaptée (1ère position): 35.71%
Précision (top 10): 83.33%
================================================================================
