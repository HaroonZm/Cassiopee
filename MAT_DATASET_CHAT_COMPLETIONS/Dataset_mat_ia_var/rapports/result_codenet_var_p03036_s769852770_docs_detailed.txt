================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def recurrence_sequence(r, d, x):
    """
    Calcule et affiche les dix premiers termes d'une suite définie par la récurrence :
    y = r * x - d

    Paramètres :
    r (int) : multiplicateur de la récurrence
    d (int) : valeur à soustraire à chaque itération
    x (int) : valeur initiale de la suite

    Cette fonction affiche chacun des dix termes successifs de la suite.
    """
    for i in range(10):
        # Calcul du nouveau terme selon la formule de récurrence
        y = r * x - d
        # Affichage du terme courant
        print(y)
        # La valeur de x pour l'itération suivante devient la valeur de y courante
        x = y

def main():
    """
    Fonction principale qui lit les entrées de l'utilisateur, puis appelle la fonction
    de calcul de la suite récurrente.

    L'utilisateur doit fournir trois entiers séparés par des espaces : r, d et x.
    """
    # Lecture et conversion des entrées utilisateur (r, d, x)
    r, d, x = map(int, input().split())
    # Appel de la fonction pour afficher la suite
    recurrence_sequence(r, d, x)

# Point d'entrée du programme
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' recurrence' (ID: 127370)
  → Token d'amorce (pas de prédiction)

Token 2: '_sequence' (ID: 55606)
  → Token d'amorce (pas de prédiction)

Token 3: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0035846298560500145
    2. '_' → logprob: -5.753584861755371
    3. '(:' → logprob: -8.753584861755371
    4. '```' → logprob: -8.753584861755371
    5. ':' → logprob: -10.753584861755371
    6. ' (' → logprob: -11.503584861755371
    7. '(_:' → logprob: -11.503584861755371
    8. '_:' → logprob: -11.878584861755371
    9. '(
' → logprob: -12.378584861755371
    10. '():' → logprob: -12.378584861755371

Token 4: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9838969111442566
    2. 'u' → logprob: -0.9838969111442566
    3. ')' → logprob: -1.4838969707489014
    4. '(' → logprob: -4.733896732330322
    5. 'a' → logprob: -4.983896732330322
    6. '_' → logprob: -5.483896732330322
    7. ',' → logprob: -6.358896732330322
    8. '):' → logprob: -6.358896732330322
    9. ')e' → logprob: -7.858896732330322
    10. ',u' → logprob: -8.10889720916748

Token 5: ' d' (ID: 272)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5669056177139282
    2. 'n' → logprob: -1.0669056177139282
    3. 'x' → logprob: -3.1919054985046387
    4. ' x' → logprob: -3.1919054985046387
    5. ' ' → logprob: -6.691905498504639
    6. 'i' → logprob: -7.566905498504639
    7. 'a' → logprob: -7.566905498504639
    8. ' t' → logprob: -7.691905498504639
    9. 's' → logprob: -7.691905498504639
    10. ')' → logprob: -7.941905498504639

Token 6: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3293530344963074
    2. ',' → logprob: -1.3293530941009521
    3. ')' → logprob: -4.204352855682373
    4. '=' → logprob: -8.704353332519531
    5. 's' → logprob: -9.079353332519531
    6. '_' → logprob: -9.329353332519531
    7. ':' → logprob: -9.704353332519531
    8. 'e' → logprob: -9.829353332519531
    9. 'u' → logprob: -9.829353332519531
    10. '[' → logprob: -10.329353332519531

Token 7: ' x' (ID: 1215)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.43612566590309143
    2. 'n' → logprob: -1.061125636100769
    3. ' ' → logprob: -6.311125755310059
    4. ' x' → logprob: -7.061125755310059
    5. ' a' → logprob: -7.561125755310059
    6. ' i' → logprob: -7.561125755310059
    7. 'x' → logprob: -7.686125755310059
    8. 'a' → logprob: -7.811125755310059
    9. 'i' → logprob: -7.811125755310059
    10. ' def' → logprob: -8.311125755310059

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00355124706402421
    2. ',' → logprob: -6.003551483154297
    3. ')' → logprob: -7.253551483154297
    4. 's' → logprob: -9.003551483154297
    5. '_' → logprob: -9.628551483154297
    6. ''):' → logprob: -10.128551483154297
    7. '[' → logprob: -10.628551483154297
    8. '):
' → logprob: -10.753551483154297
    9. '0' → logprob: -10.878551483154297
    10. '=' → logprob: -11.378551483154297

Token 9: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10064860433340073
    2. '   ' → logprob: -2.6006486415863037
    3. '```' → logprob: -4.100648403167725
    4. ':
' → logprob: -6.225648403167725
    5. '\n' → logprob: -7.225648403167725
    6. '\' → logprob: -7.725648403167725
    7. '    
' → logprob: -7.975648403167725
    8. '``' → logprob: -8.225648880004883
    9. ':\' → logprob: -8.475648880004883
    10. ''' → logprob: -8.975648880004883

Token 10: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15767979621887207
    2. ' ' → logprob: -3.282679796218872
    3. '_' → logprob: -3.532679796218872
    4. 'i' → logprob: -3.532679796218872
    5. '```' → logprob: -4.282679557800293
    6. ' if' → logprob: -5.032679557800293
    7. 'n' → logprob: -5.407679557800293
    8. 'if' → logprob: -5.532679557800293
    9. '`' → logprob: -5.532679557800293
    10. ''' → logprob: -5.657679557800293

Token 11: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.2000784873962402
    2. '"""
' → logprob: -1.5750784873962402
    3. '\n' → logprob: -1.9500784873962402
    4. 'r' → logprob: -2.4500784873962402
    5. '   ' → logprob: -2.8250784873962402
    6. 'n' → logprob: -2.9500784873962402
    7. 'i' → logprob: -3.2000784873962402
    8. ''''
' → logprob: -3.8250784873962402
    9. '"' → logprob: -4.07507848739624
    10. ''''' → logprob: -4.70007848739624

Token 12: ' Cal' (ID: 4453)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -1.2004026174545288
    2. 'Y' → logprob: -1.4504026174545288
    3. 'Generate' → logprob: -2.2004027366638184
    4. 'Calcul' → logprob: -2.4504027366638184
    5. 'Compute' → logprob: -2.5754027366638184
    6. 'Gener' → logprob: -2.9504027366638184
    7. 'Returns' → logprob: -3.3254027366638184
    8. 'Return' → logprob: -3.7004027366638184
    9. 'Comput' → logprob: -3.7004027366638184
    10. '"""' → logprob: -4.200402736663818

Token 13: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07107403129339218
    2. 'culate' → logprob: -2.6960740089416504
    3. 'l' → logprob: -7.94607400894165
    4. 'cul' → logprob: -8.196074485778809
    5. 'cula' → logprob: -8.571074485778809
    6. '   ' → logprob: -9.321074485778809
    7. 'cu' → logprob: -9.446074485778809
    8. 'culated' → logprob: -10.821074485778809
    9. '```' → logprob: -10.821074485778809
    10. 'culator' → logprob: -11.071074485778809

Token 14: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14076478779315948
    2. 'r' → logprob: -2.3907647132873535
    3. 'te' → logprob: -3.8907647132873535
    4. 't' → logprob: -4.3907647132873535
    5. 'm' → logprob: -6.7657647132873535
    6. '_' → logprob: -6.7657647132873535
    7. '   ' → logprob: -7.0157647132873535
    8. 'u' → logprob: -7.0157647132873535
    9. 'tes' → logprob: -7.1407647132873535
    10. 'd' → logprob: -8.390765190124512

Token 15: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4186374843120575
    2. ' retourne' → logprob: -2.54363751411438
    3. ' calc' → logprob: -2.91863751411438
    4. ' la' → logprob: -3.04363751411438
    5. ' ' → logprob: -3.41863751411438
    6. ' return' → logprob: -3.66863751411438
    7. 'r' → logprob: -4.543637275695801
    8. '    ' → logprob: -4.668637275695801
    9. 's' → logprob: -4.793637275695801
    10. ' ren' → logprob: -5.293637275695801

Token 16: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.661676824092865
    2. ' l' → logprob: -1.4116768836975098
    3. 's' → logprob: -1.7866768836975098
    4. ' le' → logprob: -3.5366768836975098
    5. 'r' → logprob: -4.28667688369751
    6. ' ' → logprob: -4.41167688369751
    7. ' les' → logprob: -5.16167688369751
    8. 'l' → logprob: -5.41167688369751
    9. 'e' → logprob: -6.66167688369751
    10. ' s' → logprob: -7.16167688369751

Token 17: ' dix' (ID: 60121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6020435094833374
    2. ' n' → logprob: -1.2270435094833374
    3. ' termes' → logprob: -2.602043628692627
    4. 'n' → logprob: -3.602043628692627
    5. ' ' → logprob: -4.477043628692627
    6. ' premier' → logprob: -4.477043628692627
    7. ' terme' → logprob: -4.977043628692627
    8. '  ' → logprob: -5.102043628692627
    9. ' valeurs' → logprob: -5.477043628692627
    10. ' premiers' → logprob: -5.602043628692627

Token 18: ' premiers' (ID: 59140)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.049652740359306335
    2. ' premiers' → logprob: -3.1746528148651123
    3. ' premières' → logprob: -5.924652576446533
    4. '   ' → logprob: -6.924652576446533
    5. ' premier' → logprob: -6.924652576446533
    6. '  ' → logprob: -7.424652576446533
    7. ' prochains' → logprob: -7.924652576446533
    8. 'prem' → logprob: -8.924653053283691
    9. ' espaces' → logprob: -9.049653053283691
    10. ' ' → logprob: -9.174653053283691

Token 19: ' termes' (ID: 72480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11143939942121506
    2. ' espaces' → logprob: -2.8614394664764404
    3. '  ' → logprob: -4.236439228057861
    4. 'es' → logprob: -4.736439228057861
    5. '   ' → logprob: -5.361439228057861
    6. ' termes' → logprob: -5.736439228057861
    7. ' espace' → logprob: -6.111439228057861
    8. 'e' → logprob: -6.236439228057861
    9. '_' → logprob: -6.611439228057861
    10. ' tokens' → logprob: -6.611439228057861

Token 20: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4120504856109619
    2. ' ' → logprob: -1.787050485610962
    3. 's' → logprob: -3.412050485610962
    4. ')' → logprob: -3.787050485610962
    5. '   ' → logprob: -3.787050485610962
    6. '\n' → logprob: -3.787050485610962
    7. '\' → logprob: -4.287050247192383
    8. '```' → logprob: -4.662050247192383
    9. ' d' → logprob: -5.037050247192383
    10. 'de' → logprob: -5.537050247192383

Token 21: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.11388973146677017
    2. 'une' → logprob: -3.238889694213867
    3. 'e' → logprob: -3.863889694213867
    4. ' une' → logprob: -3.988889694213867
    5. ' la' → logprob: -4.738889694213867
    6. 'a' → logprob: -4.988889694213867
    7. ''' → logprob: -5.488889694213867
    8. '’une' → logprob: -5.613889694213867
    9. 'u' → logprob: -5.988889694213867
    10. ''un' → logprob: -6.488889694213867

Token 22: ' suite' (ID: 13800)
  Prédit: ' suite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suite' → logprob: -0.7740327715873718
    2. 'suite' → logprob: -1.2740328311920166
    3. ' ' → logprob: -1.7740328311920166
    4. ' sé' → logprob: -3.0240328311920166
    5. '   ' → logprob: -3.7740328311920166
    6. 'sé' → logprob: -5.6490325927734375
    7. ' sequence' → logprob: -6.0240325927734375
    8. ' série' → logprob: -6.1490325927734375
    9. ' recurrence' → logprob: -6.5240325927734375
    10. 's' → logprob: -6.6490325927734375

Token 23: ' défin' (ID: 57890)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10110048949718475
    2. '\' → logprob: -3.101100444793701
    3. ',' → logprob: -4.726100444793701
    4. ' ' → logprob: -5.101100444793701
    5. '\n' → logprob: -5.351100444793701
    6. '  ' → logprob: -5.726100444793701
    7. ')' → logprob: -5.726100444793701
    8. 'e' → logprob: -5.851100444793701
    9. ' de' → logprob: -6.226100444793701
    10. 'n' → logprob: -6.226100444793701

Token 24: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.002828411990776658
    2. 'e' → logprob: -6.002828598022461
    3. '   ' → logprob: -9.002828598022461
    4. '#' → logprob: -10.127828598022461
    5. 'inie' → logprob: -10.252828598022461
    6. '```' → logprob: -10.252828598022461
    7. 'nie' → logprob: -10.752828598022461
    8. 'i' → logprob: -10.752828598022461
    9. 'ies' → logprob: -11.377828598022461
    10. 'ue' → logprob: -12.127828598022461

Token 25: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.7259137630462646
    2. 'e' → logprob: -1.6009137630462646
    3. ' ' → logprob: -1.6009137630462646
    4. ',' → logprob: -3.4759137630462646
    5. '   ' → logprob: -3.8509137630462646
    6. '\n' → logprob: -4.850914001464844
    7. '\' → logprob: -4.975914001464844
    8. '```' → logprob: -5.100914001464844
    9. '  ' → logprob: -5.350914001464844
    10. ' \' → logprob: -5.350914001464844

Token 26: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.3346649408340454
    2. ' recurrence' → logprob: -1.4596649408340454
    3. ' ' → logprob: -1.5846649408340454
    4. 'r' → logprob: -1.9596649408340454
    5. '    ' → logprob: -3.709664821624756
    6. ' une' → logprob: -3.834664821624756
    7. ' r' → logprob: -3.834664821624756
    8. ' l' → logprob: -4.709664821624756
    9. ' \' → logprob: -4.834664821624756
    10. '   ' → logprob: -4.834664821624756

Token 27: ' ré' (ID: 3146)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6222823858261108
    2. ' recurrence' → logprob: -2.1222825050354004
    3. ' réc' → logprob: -2.9972825050354004
    4. ' ré' → logprob: -2.9972825050354004
    5. '_' → logprob: -3.1222825050354004
    6. 'r' → logprob: -3.3722825050354004
    7. '   ' → logprob: -3.4972825050354004
    8. ' r' → logprob: -3.6222825050354004
    9. ' 
' → logprob: -3.7472825050354004
    10. ' n' → logprob: -4.9972825050354

Token 28: 'curr' (ID: 28376)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2553724944591522
    2. 'curr' → logprob: -1.5053725242614746
    3. '\' → logprob: -7.380372524261475
    4. 'current' → logprob: -7.505372524261475
    5. '\x' → logprob: -7.880372524261475
    6. 'cur' → logprob: -8.255372047424316
    7. 'cu' → logprob: -8.505372047424316
    8. '{' → logprob: -8.630372047424316
    9. '_c' → logprob: -8.630372047424316
    10. 'cc' → logprob: -9.005372047424316

Token 29: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.21104653179645538
    2. 'e' → logprob: -1.711046576499939
    3. 'é' → logprob: -5.0860466957092285
    4. 'a' → logprob: -6.5860466957092285
    5. 'en' → logprob: -6.5860466957092285
    6. '#' → logprob: -8.83604621887207
    7. 'u' → logprob: -9.58604621887207
    8. '_' → logprob: -9.71104621887207
    9. 'n' → logprob: -9.96104621887207
    10. 'rence' → logprob: -9.96104621887207

Token 30: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.7293754816055298
    2. ':' → logprob: -1.7293754816055298
    3. ' ' → logprob: -1.8543754816055298
    4. ',' → logprob: -2.3543753623962402
    5. '\n' → logprob: -3.7293753623962402
    6. '_' → logprob: -4.35437536239624
    7. 'n' → logprob: -4.35437536239624
    8. ' ,' → logprob: -4.60437536239624
    9. '   ' → logprob: -5.10437536239624
    10. '.' → logprob: -5.47937536239624

Token 31: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20692749321460724
    2. 'r' → logprob: -2.706927537918091
    3. 'n' → logprob: -3.331927537918091
    4. ' 
' → logprob: -3.456927537918091
    5. '   ' → logprob: -4.081927299499512
    6. ')' → logprob: -5.081927299499512
    7. '    
' → logprob: -5.206927299499512
    8. '\' → logprob: -5.706927299499512
    9. ',' → logprob: -5.831927299499512
    10. '  
' → logprob: -6.081927299499512

Token 32: ' y' (ID: 342)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7207280397415161
    2. '\n' → logprob: -0.9707280397415161
    3. 'n' → logprob: -2.4707279205322266
    4. '  
' → logprob: -4.595727920532227
    5. 'r' → logprob: -4.845727920532227
    6. '   ' → logprob: -5.345727920532227
    7. '"""
' → logprob: -5.345727920532227
    8. '    
' → logprob: -5.720727920532227
    9. '\' → logprob: -5.845727920532227
    10. ' """
' → logprob: -6.095727920532227

Token 33: ' =' (ID: 314)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.4556068181991577
    2. '_n' → logprob: -1.5806068181991577
    3. '_' → logprob: -1.9556068181991577
    4. '0' → logprob: -2.0806069374084473
    5. '(n' → logprob: -2.2056069374084473
    6. ' =' → logprob: -2.7056069374084473
    7. 'n' → logprob: -2.8306069374084473
    8. '[i' → logprob: -3.9556069374084473
    9. '[' → logprob: -4.080606937408447
    10. '\xe2\x82' → logprob: -5.330606937408447

Token 34: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.49220091104507446
    2. 'r' → logprob: -0.9922009110450745
    3. ' x' → logprob: -5.49220085144043
    4. ' ' → logprob: -5.61720085144043
    5. ' d' → logprob: -5.74220085144043
    6. 'd' → logprob: -5.86720085144043
    7. 'x' → logprob: -6.36720085144043
    8. ' (' → logprob: -7.61720085144043
    9. ' y' → logprob: -7.61720085144043
    10. ' f' → logprob: -8.61720085144043

Token 35: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10238514840602875
    2. '*' → logprob: -2.3523850440979004
    3. '*y' → logprob: -6.3523850440979
    4. '*x' → logprob: -7.9773850440979
    5. 'y' → logprob: -10.352385520935059
    6. ' ' → logprob: -11.727385520935059
    7. 'x' → logprob: -11.852385520935059
    8. ' +' → logprob: -11.977385520935059
    9. ' y' → logprob: -12.102385520935059
    10. ' ' → logprob: -12.102385520935059

Token 36: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3368500769138336
    2. ' x' → logprob: -1.3368500471115112
    3. ' y' → logprob: -4.211850166320801
    4. 'y' → logprob: -5.086850166320801
    5. ' d' → logprob: -7.086850166320801
    6. 'd' → logprob: -7.211850166320801
    7. ' ' → logprob: -8.2118501663208
    8. '(' → logprob: -8.5868501663208
    9. ' (' → logprob: -9.0868501663208
    10. '(x' → logprob: -9.7118501663208

Token 37: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.123701311647892
    2. '+' → logprob: -2.873701333999634
    3. ' ' → logprob: -3.998701333999634
    4. ' *' → logprob: -4.373701095581055
    5. ' -' → logprob: -4.873701095581055
    6. '-' → logprob: -4.873701095581055
    7. '*' → logprob: -4.998701095581055
    8. 'y' → logprob: -6.873701095581055
    9. '_' → logprob: -6.998701095581055
    10. '0' → logprob: -7.373701095581055

Token 38: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6944003701210022
    2. ' d' → logprob: -0.6944003701210022
    3. ' ' → logprob: -7.319400310516357
    4. 'x' → logprob: -8.569400787353516
    5. ' x' → logprob: -9.569400787353516
    6. '1' → logprob: -9.694400787353516
    7. '(d' → logprob: -9.694400787353516
    8. '(' → logprob: -10.319400787353516
    9. '   ' → logprob: -10.319400787353516
    10. ' (' → logprob: -10.819400787353516

Token 39: '

' (ID: 279)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.43020471930503845
    2. '*' → logprob: -2.0552046298980713
    3. ')' → logprob: -2.4302046298980713
    4. ' +' → logprob: -3.5552046298980713
    5. 'y' → logprob: -3.9302046298980713
    6. '**' → logprob: -4.18020486831665
    7. '   ' → logprob: -4.55520486831665
    8. '*y' → logprob: -4.80520486831665
    9. '"' → logprob: -5.18020486831665
    10. ' ' → logprob: -5.30520486831665

Token 40: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.341606467962265
    2. '\n' → logprob: -2.591606378555298
    3. '   ' → logprob: -2.591606378555298
    4. ')
' → logprob: -2.841606378555298
    5. '.' → logprob: -4.341606616973877
    6. '"""
' → logprob: -4.466606616973877
    7. '```' → logprob: -4.716606616973877
    8. ' ' → logprob: -5.091606616973877
    9. '*' → logprob: -5.466606616973877
    10. '\' → logprob: -5.591606616973877

Token 41: ' Param' (ID: 14796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.945785403251648
    2. '\n' → logprob: -1.570785403251648
    3. '"""
' → logprob: -1.945785403251648
    4. '   ' → logprob: -2.4457855224609375
    5. ')
' → logprob: -2.8207855224609375
    6. '"""' → logprob: -4.0707855224609375
    7. '"' → logprob: -4.3207855224609375
    8. '
' → logprob: -4.5707855224609375
    9. '):' → logprob: -4.6957855224609375
    10. '\' → logprob: -4.6957855224609375

Token 42: 'ètres' (ID: 40427)
  Prédit: 'ètres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètres' → logprob: -0.9155579805374146
    2. 'e' → logprob: -1.4155579805374146
    3. 'ètre' → logprob: -1.4155579805374146
    4. 'et' → logprob: -3.040557861328125
    5. 'è' → logprob: -3.415557861328125
    6. 's' → logprob: -4.290557861328125
    7. 'eters' → logprob: -4.540557861328125
    8. 't' → logprob: -6.540557861328125
    9. 'etre' → logprob: -6.540557861328125
    10. ' ' → logprob: -7.415557861328125

Token 43: ' :
' (ID: 10039)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.028175773099064827
    2. ' :' → logprob: -4.2781758308410645
    3. '(s' → logprob: -5.7781758308410645
    4. ' s' → logprob: -5.9031758308410645
    5. ':' → logprob: -6.1531758308410645
    6. ')' → logprob: -6.4031758308410645
    7. ',' → logprob: -6.5281758308410645
    8. '   ' → logprob: -6.9031758308410645
    9. '):' → logprob: -8.028175354003906
    10. '```' → logprob: -8.528175354003906

Token 44: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9740502238273621
    2. '   ' → logprob: -1.2240502834320068
    3. ' r' → logprob: -1.7240502834320068
    4. ')' → logprob: -2.349050283432007
    5. ' ' → logprob: -3.474050283432007
    6. 'n' → logprob: -4.974050045013428
    7. ' )' → logprob: -5.099050045013428
    8. ',' → logprob: -5.849050045013428
    9. '```' → logprob: -6.849050045013428
    10. '):' → logprob: -7.099050045013428

Token 45: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.5192707777023315
    2. ' r' → logprob: -1.6442707777023315
    3. '   ' → logprob: -2.144270896911621
    4. '```' → logprob: -3.269270896911621
    5. ' ' → logprob: -4.519270896911621
    6. ')' → logprob: -4.644270896911621
    7. 'n' → logprob: -4.894270896911621
    8. ' y' → logprob: -5.394270896911621
    9. ' )' → logprob: -5.769270896911621
    10. ' """
' → logprob: -6.019270896911621

Token 46: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02240699529647827
    2. ')' → logprob: -4.397407054901123
    3. ' ,' → logprob: -5.022407054901123
    4. ' ' → logprob: -6.647407054901123
    5. '.' → logprob: -7.272407054901123
    6. '<|end|>' → logprob: -8.272406578063965
    7. '):' → logprob: -8.772406578063965
    8. '_' → logprob: -9.022406578063965
    9. 's' → logprob: -9.022406578063965
    10. ':' → logprob: -9.397406578063965

Token 47: 'int' (ID: 491)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4241611659526825
    2. ')' → logprob: -1.6741611957550049
    3. 'int' → logprob: -2.299161195755005
    4. ' int' → logprob: -3.924161195755005
    5. ' ,' → logprob: -4.049160957336426
    6. ' )' → logprob: -4.924160957336426
    7. ',int' → logprob: -5.424160957336426
    8. 'r' → logprob: -6.299160957336426
    9. 'float' → logprob: -6.299160957336426
    10. ' ' → logprob: -6.924160957336426

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010947011411190033
    2. ',' → logprob: -5.135947227478027
    3. '):' → logprob: -5.385947227478027
    4. '),' → logprob: -8.135947227478027
    5. ' )' → logprob: -9.385947227478027
    6. '<|end|>' → logprob: -10.760947227478027
    7. ' ' → logprob: -11.385947227478027
    8. '   ' → logprob: -12.385947227478027
    9. ' ):' → logprob: -12.760947227478027
    10. ' ,' → logprob: -13.760947227478027

Token 49: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10447946935892105
    2. ')' → logprob: -2.6044795513153076
    3. '):' → logprob: -3.8544795513153076
    4. ' ,' → logprob: -6.3544793128967285
    5. ',
' → logprob: -6.9794793128967285
    6. '),' → logprob: -7.7294793128967285
    7. '   ' → logprob: -7.8544793128967285
    8. ':' → logprob: -8.354479789733887
    9. ',int' → logprob: -8.979479789733887
    10. '*' → logprob: -10.479479789733887

Token 50: ' multiplic' (ID: 67929)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3710188865661621
    2. ' int' → logprob: -2.371018886566162
    3. ' nombre' → logprob: -3.371018886566162
    4. 'int' → logprob: -3.621018886566162
    5. ' coef' → logprob: -3.871018886566162
    6. ' r' → logprob: -4.121018886566162
    7. ' coefficient' → logprob: -4.246018886566162
    8. ' la' → logprob: -4.246018886566162
    9. ' multiplic' → logprob: -4.496018886566162
    10. ' multip' → logprob: -4.746018886566162

Token 51: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.051404472440481186
    2. 'a' → logprob: -3.4264044761657715
    3. 'ate' → logprob: -4.3014044761657715
    4. 'e' → logprob: -6.5514044761657715
    5. ' a' → logprob: -6.8014044761657715
    6. 'at' → logprob: -7.6764044761657715
    7. ' ate' → logprob: -8.301403999328613
    8. ' at' → logprob: -8.676403999328613
    9. 'eur' → logprob: -8.676403999328613
    10. 'ation' → logprob: -9.301403999328613

Token 52: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6649368405342102
    2. ')' → logprob: -0.7899368405342102
    3. '   ' → logprob: -3.9149367809295654
    4. ',
' → logprob: -5.6649370193481445
    5. '):' → logprob: -6.1649370193481445
    6. ' ,' → logprob: -6.5399370193481445
    7. ')
' → logprob: -6.6649370193481445
    8. '*' → logprob: -7.0399370193481445
    9. '),' → logprob: -7.6649370193481445
    10. '):
' → logprob: -8.039937019348145

Token 53: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.44319719076156616
    2. ' la' → logprob: -1.443197250366211
    3. ' y' → logprob: -3.193197250366211
    4. ' r' → logprob: -3.693197250366211
    5. 'l' → logprob: -4.068197250366211
    6. ' x' → logprob: -4.318197250366211
    7. ' ' → logprob: -4.943197250366211
    8. 'r' → logprob: -4.943197250366211
    9. 'x' → logprob: -5.318197250366211
    10. ' chaque' → logprob: -6.443197250366211

Token 54: ' ré' (ID: 3146)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.7140237092971802
    2. ' variable' → logprob: -1.8390237092971802
    3. 'pr' → logprob: -2.9640235900878906
    4. ' terme' → logprob: -3.3390235900878906
    5. 's' → logprob: -3.4640235900878906
    6. ' prém' → logprob: -3.5890235900878906
    7. 'suite' → logprob: -3.5890235900878906
    8. 'r' → logprob: -3.9640235900878906
    9. ' valeur' → logprob: -4.089023590087891
    10. 'ter' → logprob: -4.089023590087891

Token 55: 'curr' (ID: 28376)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01627165637910366
    2. 'curr' → logprob: -4.266271591186523
    3. 'current' → logprob: -7.266271591186523
    4. 'cur' → logprob: -7.766271591186523
    5. 'éc' → logprob: -8.141271591186523
    6. 'cu' → logprob: -8.641271591186523
    7. 'é' → logprob: -9.516271591186523
    8. '_' → logprob: -10.266271591186523
    9. 'cup' → logprob: -10.266271591186523
    10. 'u' → logprob: -10.391271591186523

Token 56: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.0009842199506238103
    2. 'e' → logprob: -7.000984191894531
    3. 'en' → logprob: -10.500984191894531
    4. 'é' → logprob: -10.750984191894531
    5. 'rence' → logprob: -12.000984191894531
    6. 'ente' → logprob: -12.250984191894531
    7. 'érence' → logprob: -13.375984191894531
    8. 'ent' → logprob: -13.500984191894531
    9. ')' → logprob: -14.000984191894531
    10. '_' → logprob: -14.000984191894531

Token 57: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3658701479434967
    2. ',' → logprob: -1.3658701181411743
    3. '):' → logprob: -3.865870237350464
    4. '   ' → logprob: -4.490869998931885
    5. 's' → logprob: -4.740869998931885
    6. ',
' → logprob: -6.365869998931885
    7. '```' → logprob: -6.490869998931885
    8. '\n' → logprob: -6.865869998931885
    9. 'r' → logprob: -6.990869998931885
    10. 'n' → logprob: -6.990869998931885

Token 58: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4558688998222351
    2. ')' → logprob: -1.3308689594268799
    3. '   ' → logprob: -2.45586895942688
    4. '):' → logprob: -4.955868721008301
    5. '```' → logprob: -6.330868721008301
    6. ' ,' → logprob: -6.455868721008301
    7. '"""' → logprob: -6.455868721008301
    8. 's' → logprob: -7.080868721008301
    9. ',
' → logprob: -7.580868721008301
    10. '),' → logprob: -7.705868721008301

Token 59: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8451940417289734
    2. ')' → logprob: -1.0951941013336182
    3. 'n' → logprob: -2.345194101333618
    4. ',' → logprob: -3.345194101333618
    5. 'r' → logprob: -3.595194101333618
    6. 'd' (adapté à ' d') → logprob: -3.845194101333618
    7. ' ' → logprob: -4.095193862915039
    8. 'x' → logprob: -4.595193862915039
    9. '```' → logprob: -4.845193862915039
    10. '"""' → logprob: -5.470193862915039

Token 60: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12750795483589172
    2. '(int' → logprob: -2.1275079250335693
    3. '(' → logprob: -8.627508163452148
    4. ':' → logprob: -8.877508163452148
    5. ')' → logprob: -9.377508163452148
    6. ' ' → logprob: -10.127508163452148
    7. ' :' → logprob: -10.252508163452148
    8. ':int' → logprob: -10.252508163452148
    9. '  ' → logprob: -10.877508163452148
    10. '   ' → logprob: -11.752508163452148

Token 61: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10078560560941696
    2. ' int' → logprob: -2.350785493850708
    3. ')' → logprob: -7.600785732269287
    4. ' )' → logprob: -10.100785255432129
    5. '   ' → logprob: -10.850785255432129
    6. ' ' → logprob: -12.475785255432129
    7. ',int' → logprob: -12.975785255432129
    8. 'ent' → logprob: -13.225785255432129
    9. ']int' → logprob: -13.225785255432129
    10. '  ' → logprob: -13.475785255432129

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009512408869341016
    2. ' )' → logprob: -7.000951290130615
    3. '):' → logprob: -10.250950813293457
    4. '   ' → logprob: -13.750950813293457
    5. ',' → logprob: -14.000950813293457
    6. ' :' → logprob: -14.125950813293457
    7. ' ):' → logprob: -14.625950813293457
    8. ' ' → logprob: -14.750950813293457
    9. '')' → logprob: -15.375950813293457
    10. ':' → logprob: -15.375950813293457

Token 63: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.7445886135101318
    2. ')' → logprob: -0.9945886135101318
    3. ':' → logprob: -2.244588613510132
    4. '):' → logprob: -3.369588613510132
    5. '   ' → logprob: -5.244588851928711
    6. ' (' → logprob: -5.369588851928711
    7. ',' → logprob: -6.369588851928711
    8. ' ' → logprob: -6.369588851928711
    9. ' )' → logprob: -7.619588851928711
    10. '  ' → logprob: -8.744588851928711

Token 64: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4845426082611084
    2. ' dé' → logprob: -1.8595426082611084
    3. ' l' → logprob: -1.9845426082611084
    4. ' constante' → logprob: -2.1095426082611084
    5. ' decrement' → logprob: -2.9845426082611084
    6. ' d' → logprob: -3.2345426082611084
    7. 'd' → logprob: -3.3595426082611084
    8. ' facteur' → logprob: -3.4845426082611084
    9. ' déplacement' → logprob: -3.6095426082611084
    10. ' espace' → logprob: -3.8595426082611084

Token 65: ' à' (ID: 1221)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.2194240540266037
    2. ' de' → logprob: -2.96942400932312
    3. ' ' → logprob: -3.21942400932312
    4. '   ' → logprob: -3.46942400932312
    5. 'initial' → logprob: -3.59442400932312
    6. ' à' → logprob: -4.094424247741699
    7. '_initial' → logprob: -4.219424247741699
    8. ' d' → logprob: -5.594424247741699
    9. ' init' → logprob: -6.219424247741699
    10. '  ' → logprob: -6.219424247741699

Token 66: ' sou' (ID: 4069)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.614690363407135
    2. ' sou' → logprob: -1.6146903038024902
    3. ' retr' → logprob: -1.7396903038024902
    4. '   ' → logprob: -2.9896903038024902
    5. ' dé' → logprob: -4.36469030380249
    6. 'dé' → logprob: -4.98969030380249
    7. 's' → logprob: -5.36469030380249
    8. 'sub' → logprob: -5.36469030380249
    9. 'd' → logprob: -6.86469030380249
    10. ' retirer' → logprob: -7.36469030380249

Token 67: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.0012453512754291296
    2. 'str' → logprob: -7.876245498657227
    3. 'st' → logprob: -8.126245498657227
    4. 'stract' → logprob: -8.501245498657227
    5. 'straction' → logprob: -8.626245498657227
    6. 'b' → logprob: -9.876245498657227
    7. 'r' → logprob: -10.126245498657227
    8. 'mettre' → logprob: -10.376245498657227
    9. 'm' → logprob: -10.501245498657227
    10. 's' → logprob: -11.876245498657227

Token 68: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.039388325065374374
    2. 'i' → logprob: -4.289388179779053
    3. '   ' → logprob: -5.039388179779053
    4. 't' → logprob: -5.039388179779053
    5. 'it' → logprob: -6.039388179779053
    6. 'itre' → logprob: -6.414388179779053
    7. 'ct' → logprob: -7.539388179779053
    8. 'ir' → logprob: -7.539388179779053
    9. '\' → logprob: -7.664388179779053
    10. 'ite' → logprob: -7.914388179779053

Token 69: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27436721324920654
    2. ')' → logprob: -1.6493672132492065
    3. ')
' → logprob: -3.774367332458496
    4. '
' → logprob: -4.774367332458496
    5. ' de' → logprob: -5.399367332458496
    6. ' )' → logprob: -6.149367332458496
    7. '):
' → logprob: -6.274367332458496
    8. ' ' → logprob: -6.649367332458496
    9. '"""
' → logprob: -6.649367332458496
    10. '```' → logprob: -7.399367332458496

Token 70: ' chaque' (ID: 21194)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.8727198839187622
    2. ' chaque' → logprob: -0.9977198839187622
    3. ' y' → logprob: -2.4977197647094727
    4. 'r' → logprob: -2.7477197647094727
    5. ' ' → logprob: -3.6227197647094727
    6. ' l' → logprob: -4.247719764709473
    7. ' x' → logprob: -4.997719764709473
    8. ' la' → logprob: -5.372719764709473
    9. ' each' → logprob: -5.497719764709473
    10. 'l' → logprob: -5.747719764709473

Token 71: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.3103828430175781
    2. ' étape' → logprob: -1.6853828430175781
    3. ' terme' → logprob: -3.060382843017578
    4. ' ' → logprob: -4.560382843017578
    5. ' iteration' → logprob: -5.685382843017578
    6. ' y' → logprob: -5.935382843017578
    7. 'it' → logprob: -6.310382843017578
    8. ' x' → logprob: -6.435382843017578
    9. ' step' → logprob: -6.560382843017578
    10. ' ligne' → logprob: -6.810382843017578

Token 72: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.21251177787780762
    2. 'é' → logprob: -1.9625117778778076
    3. 'ér' → logprob: -3.2125117778778076
    4. 'er' → logprob: -5.337512016296387
    5. 'éra' → logprob: -6.712512016296387
    6. 'érations' → logprob: -7.212512016296387
    7. 'e' → logprob: -7.462512016296387
    8. '   ' → logprob: -7.587512016296387
    9. ')' → logprob: -7.587512016296387
    10. '_' → logprob: -8.712512016296387

Token 73: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47193294763565063
    2. '   ' → logprob: -1.0969328880310059
    3. ')
' → logprob: -4.471932888031006
    4. '
' → logprob: -4.596932888031006
    5. ',' → logprob: -5.471932888031006
    6. '\n' → logprob: -5.846932888031006
    7. '):' → logprob: -5.971932888031006
    8. 'n' → logprob: -6.221932888031006
    9. '```' → logprob: -6.221932888031006
    10. '"""' → logprob: -6.596932888031006

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03371117264032364
    2. ')' → logprob: -4.658710956573486
    3. '"""
' → logprob: -4.658710956573486
    4. '"""' → logprob: -5.408710956573486
    5. '
' → logprob: -5.783710956573486
    6. '\n' → logprob: -6.408710956573486
    7. '```' → logprob: -6.658710956573486
    8. ')
' → logprob: -7.158710956573486
    9. '    
' → logprob: -7.783710956573486
    10. '""' → logprob: -7.908710956573486

Token 75: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07601585984230042
    2. '"""' → logprob: -3.3260159492492676
    3. '"""
' → logprob: -3.8260159492492676
    4. '\n' → logprob: -5.201015949249268
    5. '```' → logprob: -5.701015949249268
    6. ')' → logprob: -6.201015949249268
    7. '
' → logprob: -7.201015949249268
    8. '"' → logprob: -7.576015949249268
    9. ' """
' → logprob: -7.826015949249268
    10. 'n' → logprob: -7.826015949249268

Token 76: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1053658723831177
    2. '):' → logprob: -1.1053658723831177
    3. '_' → logprob: -1.7303658723831177
    4. '0' → logprob: -3.230365753173828
    5. ':' → logprob: -3.355365753173828
    6. ' (' → logprob: -3.480365753173828
    7. ' :' → logprob: -4.355365753173828
    8. ',' → logprob: -4.855365753173828
    9. '_initial' → logprob: -4.855365753173828
    10. ' ' → logprob: -5.105365753173828

Token 77: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012682695873081684
    2. '):' → logprob: -5.262682914733887
    3. 'int' → logprob: -5.637682914733887
    4. ':' → logprob: -5.887682914733887
    5. '=' → logprob: -8.137682914733887
    6. ':int' → logprob: -8.512682914733887
    7. ',' → logprob: -8.762682914733887
    8. ' )' → logprob: -9.137682914733887
    9. '[int' → logprob: -9.637682914733887
    10. 'x' → logprob: -9.887682914733887

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011155696120113134
    2. '):' → logprob: -6.876115798950195
    3. ' )' → logprob: -9.501115798950195
    4. ',' → logprob: -12.251115798950195
    5. ' ):' → logprob: -13.626115798950195
    6. ':' → logprob: -14.501115798950195
    7. '   ' → logprob: -15.126115798950195
    8. '')' → logprob: -15.626115798950195
    9. '```' → logprob: -16.001115798950195
    10. '`)' → logprob: -16.001115798950195

Token 79: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015551524236798286
    2. '):' → logprob: -4.515551567077637
    3. ':' → logprob: -6.765551567077637
    4. '):
' → logprob: -6.890551567077637
    5. '   ' → logprob: -7.140551567077637
    6. ' )' → logprob: -7.140551567077637
    7. ',' → logprob: -7.640551567077637
    8. ' ' → logprob: -9.390551567077637
    9. ' ):' → logprob: -10.265551567077637
    10. ' :' → logprob: -10.390551567077637

Token 80: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0012855908134952188
    2. ' )' → logprob: -8.126285552978516
    3. ')' → logprob: -8.251285552978516
    4. 'l' → logprob: -8.501285552978516
    5. '  ' → logprob: -8.501285552978516
    6. ' l' → logprob: -9.251285552978516
    7. '   ' → logprob: -9.376285552978516
    8. ''' → logprob: -10.376285552978516
    9. ' x' → logprob: -10.751285552978516
    10. '  ' → logprob: -11.501285552978516

Token 81: ' initial' (ID: 4871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21559303998947144
    2. '_' → logprob: -1.7155930995941162
    3. ' initial' → logprob: -4.840592861175537
    4. '   ' → logprob: -6.465592861175537
    5. ' _' → logprob: -6.715592861175537
    6. '_initial' → logprob: -6.965592861175537
    7. ' de' → logprob: -7.090592861175537
    8. ' d' → logprob: -7.965592861175537
    9. ' i' → logprob: -8.340593338012695
    10. 'i' → logprob: -8.590593338012695

Token 82: 'e' (ID: 68)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5955384373664856
    2. ' ' → logprob: -1.0955383777618408
    3. 'e' → logprob: -2.345538377761841
    4. ')' → logprob: -5.09553861618042
    5. ' de' → logprob: -5.47053861618042
    6. ' 
' → logprob: -5.97053861618042
    7. ' 

' → logprob: -6.09553861618042
    8. '   ' → logprob: -7.09553861618042
    9. '  
' → logprob: -8.095538139343262
    10. ' )' → logprob: -8.345538139343262

Token 83: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007986081764101982
    2. '
' → logprob: -6.007986068725586
    3. '):' → logprob: -6.382986068725586
    4. '):
' → logprob: -6.632986068725586
    5. ')
' → logprob: -7.132986068725586
    6. '"""' → logprob: -7.757986068725586
    7. ',' → logprob: -8.382986068725586
    8. '   ' → logprob: -8.382986068725586
    9. ' )' → logprob: -8.757986068725586
    10. ' ' → logprob: -9.132986068725586

Token 84: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.7429925203323364
    2. ' la' → logprob: -1.7429925203323364
    3. ' ' → logprob: -1.8679925203323364
    4. ' l' → logprob: -1.9929925203323364
    5. ' départ' → logprob: -1.9929925203323364
    6. ' x' → logprob: -2.117992401123047
    7. 'l' → logprob: -2.492992401123047
    8. ' y' → logprob: -5.742992401123047
    9. ' ' → logprob: -5.992992401123047
    10. '  ' → logprob: -5.992992401123047

Token 85: ' suite' (ID: 13800)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6209219098091125
    2. ' ' → logprob: -1.1209218502044678
    3. 'x' → logprob: -2.6209218502044678
    4. 'v' → logprob: -3.1209218502044678
    5. 'suite' → logprob: -5.370922088623047
    6. 'su' → logprob: -5.495922088623047
    7. 'variable' → logprob: -5.870922088623047
    8. 'val' → logprob: -6.370922088623047
    9. 'r' → logprob: -7.245922088623047
    10. 'n' → logprob: -7.495922088623047

Token 86: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006328079383820295
    2. '"""' → logprob: -5.631328105926514
    3. '):' → logprob: -7.006328105926514
    4. '"' → logprob: -7.381328105926514
    5. '*' → logprob: -8.256327629089355
    6. '""' → logprob: -8.506327629089355
    7. '   ' → logprob: -8.756327629089355
    8. ')
' → logprob: -9.381327629089355
    9. '' → logprob: -9.631327629089355
    10. '
' → logprob: -9.756327629089355

Token 87: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8341124057769775
    2. '   ' → logprob: -0.8341124057769775
    3. '"""
' → logprob: -3.0841124057769775
    4. '"""' → logprob: -3.5841124057769775
    5. '"' → logprob: -3.7091124057769775
    6. '
' → logprob: -5.084112167358398
    7. ' ' → logprob: -5.084112167358398
    8. '```' → logprob: -5.209112167358398
    9. '\n' → logprob: -5.834112167358398
    10. '):
' → logprob: -5.959112167358398

Token 88: ' Cette' (ID: 27383)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1083581447601318
    2. '"""' → logprob: -1.3583581447601318
    3. '"' → logprob: -1.9833581447601318
    4. ')' → logprob: -2.483358144760132
    5. '"""
' → logprob: -2.608358144760132
    6. '
' → logprob: -3.233358144760132
    7. ' ' → logprob: -3.233358144760132
    8. '\n' → logprob: -5.108358383178711
    9. '""' → logprob: -5.233358383178711
    10. '  
' → logprob: -5.233358383178711

Token 89: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005243598949164152
    2. '_' → logprob: -5.88024377822876
    3. ' """' → logprob: -7.25524377822876
    4. ' 
' → logprob: -8.130243301391602
    5. ' """
' → logprob: -8.505243301391602
    6. ' ​' → logprob: -8.630243301391602
    7. ' ‌' → logprob: -8.755243301391602
    8. 'n' → logprob: -8.880243301391602
    9. ' )' → logprob: -9.255243301391602
    10. ' ' → logprob: -9.380243301391602

Token 90: ' affiche' (ID: 127479)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45819714665412903
    2. ':' → logprob: -1.0831971168518066
    3. ' :' → logprob: -3.5831971168518066
    4. ' :
' → logprob: -7.708197116851807
    5. ':
' → logprob: -8.333197593688965
    6. '_' → logprob: -8.958197593688965
    7. '   ' → logprob: -9.333197593688965
    8. 'n' → logprob: -9.583197593688965
    9. ' """' → logprob: -10.208197593688965
    10. ',' → logprob: -10.458197593688965

Token 91: ' chacun' (ID: 52136)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005582825746387243
    2. ' :' → logprob: -5.880582809448242
    3. '  ' → logprob: -7.005582809448242
    4. ' l' → logprob: -8.005582809448242
    5. ''' → logprob: -8.130582809448242
    6. ' les' → logprob: -8.255582809448242
    7. 'l' → logprob: -8.630582809448242
    8. ':' → logprob: -9.130582809448242
    9. 's' → logprob: -9.130582809448242
    10. '   ' → logprob: -9.380582809448242

Token 92: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09864280372858047
    2. ' des' → logprob: -2.7236428260803223
    3. 'e' → logprob: -4.223642826080322
    4. ' les' → logprob: -5.223642826080322
    5. 's' → logprob: -5.973642826080322
    6. '_' → logprob: -6.223642826080322
    7. '  ' → logprob: -7.348642826080322
    8. ' ' → logprob: -7.598642826080322
    9. ' e' → logprob: -7.723642826080322
    10. ' le' → logprob: -8.348642349243164

Token 93: ' dix' (ID: 60121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7571819424629211
    2. ' termes' → logprob: -0.8821819424629211
    3. ' dix' → logprob: -2.8821818828582764
    4. ' term' → logprob: -4.0071821212768555
    5. ' y' → logprob: -4.0071821212768555
    6. ' terms' → logprob: -4.8821821212768555
    7. ' t' → logprob: -5.6321821212768555
    8. ' terme' → logprob: -5.8821821212768555
    9. 'd' → logprob: -6.1321821212768555
    10. ' x' → logprob: -6.3821821212768555

Token 94: ' termes' (ID: 72480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06313328444957733
    2. ' premiers' → logprob: -3.3131332397460938
    3. '_' → logprob: -4.688133239746094
    4. 'prem' → logprob: -5.313133239746094
    5. ' espaces' → logprob: -6.188133239746094
    6. ' space' → logprob: -6.688133239746094
    7. ' ‌' → logprob: -6.938133239746094
    8. ' t' → logprob: -7.063133239746094
    9. ' premier' → logprob: -7.188133239746094
    10. ' premières' → logprob: -7.313133239746094

Token 95: ' success' (ID: 3505)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7136383056640625
    2. ' ' → logprob: -1.5886383056640625
    3. '\' → logprob: -2.4636383056640625
    4. '   ' → logprob: -2.4636383056640625
    5. 's' → logprob: -3.3386383056640625
    6. ' 
' → logprob: -3.8386383056640625
    7. ',' → logprob: -3.9636383056640625
    8. '  
' → logprob: -4.5886383056640625
    9. ' \' → logprob: -4.8386383056640625
    10. '  ' → logprob: -5.2136383056640625

Token 96: 'ifs' (ID: 14119)
  Prédit: 'ivement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.3061051070690155
    2. 'ifs' → logprob: -2.056105136871338
    3. 'i' → logprob: -2.931105136871338
    4. 's' → logprob: -4.056105136871338
    5. 'f' → logprob: -4.306105136871338
    6. 'ive' → logprob: -4.931105136871338
    7. 'if' → logprob: -4.993605136871338
    8. 'vement' → logprob: -5.118605136871338
    9. 'iv' → logprob: -5.493605136871338
    10. '```' → logprob: -5.993605136871338

Token 97: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0250318050384521
    2. '.' → logprob: -1.9000318050384521
    3. ':' → logprob: -2.400031805038452
    4. '\' → logprob: -2.650031805038452
    5. ',' → logprob: -2.650031805038452
    6. '   ' → logprob: -2.775031805038452
    7. ' :' → logprob: -3.025031805038452
    8. '\n' → logprob: -3.400031805038452
    9. ' 
' → logprob: -3.525031805038452
    10. '  
' → logprob: -4.275032043457031

Token 98: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0021422896534204483
    2. ' a' → logprob: -7.002142429351807
    3. 'a' → logprob: -7.752142429351807
    4. ' l' → logprob: -8.127141952514648
    5. 'la' → logprob: -8.377141952514648
    6. ' the' → logprob: -8.877141952514648
    7. ' x' → logprob: -10.377141952514648
    8. 'l' → logprob: -10.377141952514648
    9. 'x' → logprob: -11.002141952514648
    10. ' ' → logprob: -11.627141952514648

Token 99: ' suite' (ID: 13800)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.6822315454483032
    2. ' suite' → logprob: -0.9322315454483032
    3. 's' → logprob: -2.8072314262390137
    4. ' sequence' → logprob: -4.057231426239014
    5. 'su' → logprob: -4.557231426239014
    6. ' ' → logprob: -4.932231426239014
    7. ' su' → logprob: -6.682231426239014
    8. 'sequence' → logprob: -6.682231426239014
    9. '_suite' → logprob: -7.682231426239014
    10. '   ' → logprob: -8.057231903076172

Token 100: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11489248275756836
    2. '
' → logprob: -3.2398924827575684
    3. ':' → logprob: -3.6148924827575684
    4. ':
' → logprob: -3.9898924827575684
    5. '\n' → logprob: -4.239892482757568
    6. '    
' → logprob: -5.114892482757568
    7. ',' → logprob: -7.364892482757568
    8. '  
' → logprob: -7.489892482757568
    9. '\' → logprob: -7.864892482757568
    10. '```' → logprob: -8.239892959594727

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34710660576820374
    2. '"""' → logprob: -2.097106695175171
    3. '"""
' → logprob: -2.597106695175171
    4. '"' → logprob: -2.847106695175171
    5. ')' → logprob: -4.222106456756592
    6. '
' → logprob: -4.347106456756592
    7. '  
' → logprob: -5.972106456756592
    8. '    
' → logprob: -6.472106456756592
    9. '""' → logprob: -6.597106456756592
    10. '\n' → logprob: -6.722106456756592

Token 102: ' """
' (ID: 7037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7006327509880066
    2. '   ' → logprob: -0.9506327509880066
    3. '\n' → logprob: -3.3256328105926514
    4. ')' → logprob: -3.4506328105926514
    5. '"""' → logprob: -4.075632572174072
    6. '  
' → logprob: -4.700632572174072
    7. '"' → logprob: -4.825632572174072
    8. '    
' → logprob: -5.450632572174072
    9. '"""
' (adapté à ' """
') → logprob: -6.200632572174072
    10. '' → logprob: -6.200632572174072

Token 103: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15747979283332825
    2. '   ' → logprob: -2.532479763031006
    3. 'n' → logprob: -3.032479763031006
    4. '\n' → logprob: -4.407479763031006
    5. '    
' → logprob: -6.032479763031006
    6. ' 
' → logprob: -7.157479763031006
    7. '\' → logprob: -7.407479763031006
    8. ' for' → logprob: -7.407479763031006
    9. '```' → logprob: -8.032480239868164
    10. 'newline' → logprob: -8.282480239868164

Token 104: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0973879098892212
    2. 'for' (adapté à ' for') → logprob: -1.5973879098892212
    3. ' for' → logprob: -1.7223879098892212
    4. 'result' → logprob: -2.0973877906799316
    5. '   ' → logprob: -3.2223877906799316
    6. 'n' → logprob: -3.5973877906799316
    7. 'y' → logprob: -3.5973877906799316
    8. 'results' → logprob: -4.222387790679932
    9. 'terms' → logprob: -4.847387790679932
    10. '    
' → logprob: -4.847387790679932

Token 105: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20391179621219635
    2. ' ' → logprob: -1.7039117813110352
    3. ' _' → logprob: -6.203911781311035
    4. 'i' → logprob: -8.203911781311035
    5. '_' → logprob: -8.828911781311035
    6. ' ‌' → logprob: -10.453911781311035
    7. ' ' → logprob: -12.328911781311035
    8. '  ' → logprob: -12.578911781311035
    9. '	i' → logprob: -12.578911781311035
    10. ' ▁' → logprob: -12.578911781311035

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0048517188988626
    2. 'in' → logprob: -5.879851818084717
    3. ' ' → logprob: -6.254851818084717
    4. ' i' → logprob: -9.504851341247559
    5. '   ' → logprob: -10.754851341247559
    6. '  ' → logprob: -11.379851341247559
    7. '_' → logprob: -13.129851341247559
    8. 'n' → logprob: -13.129851341247559
    9. 's' → logprob: -13.504851341247559
    10. ',' → logprob: -13.629851341247559

Token 107: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.016050910577178
    2. 'range' → logprob: -4.141050815582275
    3. ' ' → logprob: -11.266051292419434
    4. '	range' → logprob: -13.891051292419434
    5. ' rang' → logprob: -14.016051292419434
    6. '(range' → logprob: -14.266051292419434
    7. 'rang' → logprob: -14.766051292419434
    8. ' xrange' → logprob: -14.891051292419434
    9. ' r' → logprob: -16.016050338745117
    10. ' ran' → logprob: -16.141050338745117

Token 108: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '(
' → logprob: -14.625000953674316
    3. ' (' → logprob: -14.750000953674316
    4. '10' → logprob: -18.0
    5. '(len' → logprob: -18.5
    6. '1' → logprob: -20.375
    7. ')' → logprob: -20.375
    8. ' ' → logprob: -20.75
    9. '('' → logprob: -20.75
    10. '(i' → logprob: -20.75

Token 109: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0014127352042123675
    2. '1' → logprob: -6.751412868499756
    3. ' ' → logprob: -8.626412391662598
    4. '0' → logprob: -9.876412391662598
    5. '   ' → logprob: -11.751412391662598
    6. '(' → logprob: -13.126412391662598
    7. ')' → logprob: -13.626412391662598
    8. '       ' → logprob: -15.626412391662598
    9. '    ' → logprob: -15.751412391662598
    10. '```' → logprob: -16.501413345336914

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004184891004115343
    2. ')' → logprob: -5.504184722900391
    3. ':' → logprob: -10.00418472290039
    4. '):
' → logprob: -10.25418472290039
    5. '+' → logprob: -11.50418472290039
    6. ' ):' → logprob: -11.50418472290039
    7. ',' → logprob: -12.87918472290039
    8. '   ' → logprob: -13.37918472290039
    9. '():' → logprob: -14.62918472290039
    10. '**' → logprob: -15.62918472290039

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21847832202911377
    2. '   ' → logprob: -1.9684783220291138
    3. '    ' → logprob: -4.593478202819824
    4. ' ' → logprob: -4.843478202819824
    5. '\n' → logprob: -4.968478202819824
    6. '        
' → logprob: -4.968478202819824
    7. '    
' → logprob: -5.093478202819824
    8. ':' → logprob: -5.218478202819824
    9. '
' → logprob: -5.843478202819824
    10. 'n' → logprob: -6.343478202819824

Token 112: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5147321820259094
    2. ' print' → logprob: -2.0147321224212646
    3. 'x' → logprob: -2.3897321224212646
    4. ' x' → logprob: -2.6397321224212646
    5. ' y' → logprob: -3.2647321224212646
    6. '   ' → logprob: -3.3897321224212646
    7. 'y' → logprob: -3.8897321224212646
    8. '       ' → logprob: -4.389732360839844
    9. '    ' → logprob: -7.514732360839844
    10. ' ' → logprob: -9.014732360839844

Token 113: ' Calcul' (ID: 57243)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3390842378139496
    2. '    ' → logprob: -2.2140841484069824
    3. 'y' → logprob: -2.9640841484069824
    4. ' print' → logprob: -3.3390841484069824
    5. ' x' → logprob: -3.4640841484069824
    6. 'print' → logprob: -3.5890841484069824
    7. '   ' → logprob: -4.839084148406982
    8. 'x' → logprob: -4.964084148406982
    9. ' ' → logprob: -5.089084148406982
    10. ' if' → logprob: -5.214084148406982

Token 114: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8079937100410461
    2. '   ' → logprob: -1.4329936504364014
    3. '    ' → logprob: -1.8079936504364014
    4. 'x' → logprob: -3.8079936504364014
    5. '        ' → logprob: -3.8079936504364014
    6. ' =' → logprob: -3.8079936504364014
    7. ' x' → logprob: -3.8079936504364014
    8. ' ' → logprob: -3.8079936504364014
    9. '        
' → logprob: -4.8079938888549805
    10. ' y' → logprob: -5.1829938888549805

Token 115: ' nouveau' (ID: 23184)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.26523250341415405
    2. 'y' → logprob: -1.6402325630187988
    3. ' ' → logprob: -3.890232563018799
    4. 'x' → logprob: -4.515232563018799
    5. ' x' → logprob: -5.140232563018799
    6. ' next' → logprob: -7.265232563018799
    7. '   ' → logprob: -8.76523208618164
    8. '  ' → logprob: -8.76523208618164
    9. '    ' → logprob: -9.01523208618164
    10. ' new' → logprob: -9.39023208618164

Token 116: ' terme' (ID: 42959)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1700705885887146
    2. 'y' → logprob: -2.4200706481933594
    3. ' y' → logprob: -3.1700706481933594
    4. 'x' → logprob: -4.545070648193359
    5. '_' → logprob: -4.920070648193359
    6. '  ' → logprob: -6.295070648193359
    7. '   ' → logprob: -6.545070648193359
    8. '    ' → logprob: -7.045070648193359
    9. ' x' → logprob: -7.045070648193359
    10. 't' → logprob: -7.670070648193359

Token 117: ' selon' (ID: 27571)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6973428726196289
    2. 'x' → logprob: -1.322342872619629
    3. '        
' → logprob: -2.197342872619629
    4. '        ' → logprob: -3.072342872619629
    5. ' x' → logprob: -3.572342872619629
    6. '    ' → logprob: -4.822342872619629
    7. '   ' → logprob: -4.947342872619629
    8. ' =' → logprob: -5.322342872619629
    9. ' ' → logprob: -5.447342872619629
    10. ' 
' → logprob: -5.572342872619629

Token 118: ' la' (ID: 557)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -1.2576593160629272
    2. ' ' → logprob: -1.5076593160629272
    3. 'r' → logprob: -1.6326593160629272
    4. ' r' → logprob: -1.7576593160629272
    5. 'y' → logprob: -3.257659435272217
    6. '"' → logprob: -3.632659435272217
    7. ''' → logprob: -4.257659435272217
    8. ' la' → logprob: -4.507659435272217
    9. ' l' → logprob: -4.882659435272217
    10. ' '' → logprob: -5.382659435272217

Token 119: ' formule' (ID: 84316)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0537751205265522
    2. ' r' → logprob: -4.053775310516357
    3. 'ré' → logprob: -4.803775310516357
    4. ' ' → logprob: -5.803775310516357
    5. 's' → logprob: -5.803775310516357
    6. 'x' → logprob: -5.928775310516357
    7. ' recurrence' → logprob: -6.178775310516357
    8. ' y' → logprob: -6.303775310516357
    9. ' ré' → logprob: -6.553775310516357
    10. '   ' → logprob: -6.553775310516357

Token 120: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5185976028442383
    2. ' ' → logprob: -1.6435976028442383
    3. '   ' → logprob: -1.6435976028442383
    4. 'y' → logprob: -2.1435976028442383
    5. '    ' → logprob: -2.7685976028442383
    6. '    
' → logprob: -3.3935976028442383
    7. ' 
' → logprob: -3.3935976028442383
    8. ' y' → logprob: -3.6435976028442383
    9. '     
' → logprob: -3.7685976028442383
    10. 'x' → logprob: -4.143597602844238

Token 121: ' ré' (ID: 3146)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.38570618629455566
    2. ' la' → logprob: -1.6357061862945557
    3. ' r' → logprob: -3.3857061862945557
    4. 'la' → logprob: -3.5107061862945557
    5. ' y' → logprob: -3.6357061862945557
    6. ' ré' → logprob: -4.635705947875977
    7. ' recurrence' → logprob: -4.635705947875977
    8. 'y' → logprob: -5.260705947875977
    9. 'ré' → logprob: -5.635705947875977
    10. ' réc' → logprob: -6.010705947875977

Token 122: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0005382588133215904
    2. 'c' → logprob: -8.250537872314453
    3. 'cc' → logprob: -9.375537872314453
    4. 'cur' → logprob: -9.375537872314453
    5. 'cup' → logprob: -10.000537872314453
    6. 'urrence' → logprob: -10.250537872314453
    7. 'current' → logprob: -10.750537872314453
    8. 'cu' → logprob: -13.750537872314453
    9. 'currency' → logprob: -14.500537872314453
    10. '_curr' → logprob: -14.750537872314453

Token 123: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.006961519829928875
    2. 'e' → logprob: -5.006961345672607
    3. 'rence' → logprob: -10.256961822509766
    4. 'ece' → logprob: -10.256961822509766
    5. 'en' → logprob: -10.381961822509766
    6. 'a' → logprob: -10.506961822509766
    7. 'ente' → logprob: -10.631961822509766
    8. '#' → logprob: -11.131961822509766
    9. '_' → logprob: -11.506961822509766
    10. 'ent' → logprob: -12.006961822509766

Token 124: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46838515996932983
    2. 'x' → logprob: -2.2183852195739746
    3. '        
' → logprob: -2.7183852195739746
    4. ' ' → logprob: -2.8433852195739746
    5. '   ' → logprob: -4.093385219573975
    6. '    ' → logprob: -4.343385219573975
    7. ' 
' → logprob: -4.343385219573975
    8. '    
' → logprob: -4.593385219573975
    9. '        ' → logprob: -4.593385219573975
    10. 'y' → logprob: -4.593385219573975

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5501812696456909
    2. 'x' → logprob: -1.175181269645691
    3. '   ' → logprob: -3.3001813888549805
    4. ' ' → logprob: -3.9251813888549805
    5. ' x' → logprob: -4.1751813888549805
    6. ' 
' → logprob: -4.6751813888549805
    7. '        
' → logprob: -5.0501813888549805
    8. '    ' → logprob: -5.5501813888549805
    9. 'y' → logprob: -5.6751813888549805
    10. '    
' → logprob: -6.0501813888549805

Token 126: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10792019218206406
    2. ' x' → logprob: -2.3579201698303223
    3. 'y' (adapté à ' y') → logprob: -5.482920169830322
    4. ' y' → logprob: -5.732920169830322
    5. '   ' → logprob: -8.48292064666748
    6. ' ' → logprob: -10.60792064666748
    7. '	x' → logprob: -10.85792064666748
    8. '    ' → logprob: -10.98292064666748
    9. '       ' → logprob: -12.48292064666748
    10. '    
' → logprob: -12.60792064666748

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07904213666915894
    2. '=' → logprob: -2.5790421962738037
    3. ' ' → logprob: -9.704042434692383
    4. ' =
' → logprob: -10.079042434692383
    5. ')' → logprob: -10.954042434692383
    6. '<|end|>' → logprob: -11.329042434692383
    7. ',' → logprob: -11.954042434692383
    8. 's' → logprob: -12.579042434692383
    9. ' ' → logprob: -12.954042434692383
    10. ' *=' → logprob: -13.829042434692383

Token 128: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.1813679337501526
    2. 'r' → logprob: -1.8063678741455078
    3. ' ' → logprob: -6.431367874145508
    4. '	r' → logprob: -13.181367874145508
    5. ' ' → logprob: -13.181367874145508
    6. '(r' → logprob: -13.806367874145508
    7. ' 
' → logprob: -13.931367874145508
    8. 'space' → logprob: -14.181367874145508
    9. ' (' → logprob: -14.556367874145508
    10. '<|end|>' → logprob: -14.556367874145508

Token 129: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0005242000916041434
    2. '*' → logprob: -7.625524044036865
    3. ' ' → logprob: -10.375524520874023
    4. ' ' → logprob: -12.500524520874023
    5. ' **' → logprob: -14.750524520874023
    6. '	' → logprob: -15.500524520874023
    7. '<|end|>' → logprob: -15.625524520874023
    8. ')' → logprob: -15.875524520874023
    9. ' *
' → logprob: -16.000524520874023
    10. '*x' → logprob: -16.750524520874023

Token 130: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28132742643356323
    2. ' x' → logprob: -1.406327486038208
    3. ' ' → logprob: -8.656327247619629
    4. '	x' → logprob: -13.281327247619629
    5. ' ' → logprob: -15.031327247619629
    6. ' 
' → logprob: -15.156327247619629
    7. ')' → logprob: -15.406327247619629
    8. ')x' → logprob: -15.781327247619629
    9. '<|end|>' → logprob: -16.031328201293945
    10. '(x' → logprob: -16.468828201293945

Token 131: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.015605280175805092
    2. '-' → logprob: -4.265605449676514
    3. ' ' → logprob: -6.640605449676514
    4. ' ' → logprob: -9.140604972839355
    5. ')' → logprob: -12.015604972839355
    6. '<|end|>' → logprob: -12.390604972839355
    7. '	' → logprob: -13.015604972839355
    8. '"' → logprob: -13.015604972839355
    9. ' -
' → logprob: -13.015604972839355
    10. ' −' → logprob: -13.265604972839355

Token 132: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.01774071902036667
    2. 'd' → logprob: -4.142740726470947
    3. ' ' → logprob: -6.392740726470947
    4. ' ' → logprob: -10.892740249633789
    5. '	d' → logprob: -12.517740249633789
    6. '"' → logprob: -13.392740249633789
    7. ''' → logprob: -13.642740249633789
    8. 's' → logprob: -14.017740249633789
    9. '<|end|>' → logprob: -14.017740249633789
    10. ' 
' → logprob: -14.392740249633789

Token 133: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0028205662965774536
    2. '\n' → logprob: -6.6278204917907715
    3. '       ' → logprob: -7.7528204917907715
    4. '        
' → logprob: -8.25282096862793
    5. '  
' → logprob: -8.50282096862793
    6. '
' → logprob: -8.62782096862793
    7. ' 
' → logprob: -8.75282096862793
    8. '    
' → logprob: -9.62782096862793
    9. '' → logprob: -9.87782096862793
    10. '<|end|>' → logprob: -10.00282096862793

Token 134: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00939797330647707
    2. '\n' → logprob: -5.384397983551025
    3. '       ' → logprob: -6.134397983551025
    4. '        
' → logprob: -6.759397983551025
    5. ' 
' → logprob: -7.259397983551025
    6. '  
' → logprob: -8.634397506713867
    7. 'x' → logprob: -8.759397506713867
    8. '<|end|>' → logprob: -9.009397506713867
    9. 'newline' → logprob: -9.634397506713867
    10. '    
' → logprob: -9.884397506713867

Token 135: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22643639147281647
    2. 'print' → logprob: -2.2264363765716553
    3. '
' → logprob: -3.2264363765716553
    4. '        
' → logprob: -3.3514363765716553
    5. '\n' → logprob: -4.726436614990234
    6. ' 
' → logprob: -5.476436614990234
    7. ' print' → logprob: -5.976436614990234
    8. '\' → logprob: -6.976436614990234
    9. '  
' → logprob: -7.101436614990234
    10. '    
' → logprob: -7.351436614990234

Token 136: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.49071061611175537
    2. ' print' → logprob: -1.6157106161117554
    3. ' x' → logprob: -2.365710735321045
    4. 'x' → logprob: -3.115710735321045
    5. '   ' → logprob: -3.490710735321045
    6. '    ' → logprob: -4.865710735321045
    7. ' ' → logprob: -5.365710735321045
    8. '       ' → logprob: -5.990710735321045
    9. 'p' → logprob: -6.865710735321045
    10. 'pr' → logprob: -7.115710735321045

Token 137: 'ichage' (ID: 118475)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25182226300239563
    2. 'iche' → logprob: -1.6268222332000732
    3. 'ic' → logprob: -4.126822471618652
    4. 'icher' → logprob: -5.501822471618652
    5. 'ichage' → logprob: -6.501822471618652
    6. 'f' → logprob: -6.626822471618652
    7. 'ich' → logprob: -7.001822471618652
    8. '#' → logprob: -7.251822471618652
    9. '\' → logprob: -7.751822471618652
    10. '   ' → logprob: -8.376822471618652

Token 138: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10955437272787094
    2. '       ' → logprob: -2.7345542907714844
    3. '(x' → logprob: -3.7345542907714844
    4. 'print' → logprob: -5.359554290771484
    5. '()' → logprob: -5.484554290771484
    6. '("' → logprob: -6.484554290771484
    7. '('' → logprob: -7.109554290771484
    8. '   ' → logprob: -7.359554290771484
    9. ' (' → logprob: -7.609554290771484
    10. ',' → logprob: -7.609554290771484

Token 139: ' terme' (ID: 42959)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2963606119155884
    2. 'y' → logprob: -2.046360492706299
    3. ' ' → logprob: -2.546360492706299
    4. ''' → logprob: -3.546360492706299
    5. 'x' → logprob: -4.671360492706299
    6. '"' → logprob: -5.171360492706299
    7. ' x' → logprob: -6.546360492706299
    8. ' '' → logprob: -6.546360492706299
    9. ' "' → logprob: -7.671360492706299
    10. ' ' → logprob: -8.296360969543457

Token 140: ' courant' (ID: 74694)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008137213997542858
    2. 'print' → logprob: -5.508137226104736
    3. ' print' → logprob: -6.258137226104736
    4. ',' → logprob: -7.258137226104736
    5. '        
' → logprob: -7.258137226104736
    6. ' 
' → logprob: -9.133136749267578
    7. '   ' → logprob: -9.383136749267578
    8. '\' → logprob: -9.508136749267578
    9. '\n' → logprob: -9.633136749267578
    10. '```' → logprob: -10.008136749267578

Token 141: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0257083922624588
    2. 'print' → logprob: -3.9007084369659424
    3. '        
' → logprob: -5.775708198547363
    4. ' print' → logprob: -6.650708198547363
    5. '
' → logprob: -8.650708198547363
    6. ' 
' → logprob: -9.150708198547363
    7. '   ' → logprob: -9.400708198547363
    8. '    
' → logprob: -9.525708198547363
    9. '  
' → logprob: -9.650708198547363
    10. ',' → logprob: -9.900708198547363

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3839496076107025
    2. 'print' → logprob: -1.258949637413025
    3. ' print' → logprob: -3.3839495182037354
    4. '        
' → logprob: -7.5089497566223145
    5. ' 
' → logprob: -8.883949279785156
    6. '   ' → logprob: -9.008949279785156
    7. '    
' → logprob: -10.508949279785156
    8. ' x' → logprob: -10.883949279785156
    9. '      ' → logprob: -11.633949279785156
    10. '    ' → logprob: -11.633949279785156

Token 143: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.029782544821500778
    2. ' print' → logprob: -3.52978253364563
    3. '       ' → logprob: -10.40478229522705
    4. '```' → logprob: -14.02978229522705
    5. '   ' → logprob: -15.02978229522705
    6. 'pr' → logprob: -15.40478229522705
    7. '        
' → logprob: -15.77978229522705
    8. '	print' → logprob: -16.779783248901367
    9. ' 
' → logprob: -16.779783248901367
    10. 'x' → logprob: -16.904783248901367

Token 144: '(y' (ID: 14684)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021075816825032234
    2. '(y' → logprob: -3.89607572555542
    3. '(x' → logprob: -8.646076202392578
    4. '()' → logprob: -9.146076202392578
    5. '('' → logprob: -9.146076202392578
    6. '(f' → logprob: -9.396076202392578
    7. '("("' → logprob: -10.396076202392578
    8. '(
' → logprob: -11.521076202392578
    9. '((' → logprob: -11.896076202392578
    10. '("' → logprob: -12.021076202392578

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.778209353797138e-05
    2. ')
' → logprob: -10.000067710876465
    3. ' )' → logprob: -11.000067710876465
    4. '')' → logprob: -13.250067710876465
    5. '   ' → logprob: -13.750067710876465
    6. '")' → logprob: -13.750067710876465
    7. ')`' → logprob: -14.375067710876465
    8. ',' → logprob: -15.625067710876465
    9. '))' → logprob: -16.00006866455078
    10. '       ' → logprob: -16.00006866455078

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0278840065002441
    2. '
' → logprob: -1.2778840065002441
    3. ' 
' → logprob: -1.5278840065002441
    4. 'x' → logprob: -2.652884006500244
    5. '        
' → logprob: -3.277884006500244
    6. '    
' → logprob: -4.277884006500244
    7. '   ' → logprob: -5.277884006500244
    8. ' ' → logprob: -5.527884006500244
    9. ' x' → logprob: -5.527884006500244
    10. '  
' → logprob: -5.652884006500244

Token 147: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15215249359607697
    2. '       ' → logprob: -2.5271525382995605
    3. ' x' → logprob: -3.2771525382995605
    4. ' 
' → logprob: -4.0271525382995605
    5. '   ' → logprob: -6.0271525382995605
    6. '        
' → logprob: -7.1521525382995605
    7. '
' → logprob: -7.1521525382995605
    8. '    
' → logprob: -7.4021525382995605
    9. ' ' → logprob: -8.027152061462402
    10. '\n' → logprob: -8.652152061462402

Token 148: ' La' (ID: 3038)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002187376143410802
    2. ' x' → logprob: -6.127187252044678
    3. '   ' → logprob: -13.127187728881836
    4. ' ' → logprob: -16.502187728881836
    5. '       ' → logprob: -16.502187728881836
    6. '	x' → logprob: -16.502187728881836
    7. '#' → logprob: -18.127187728881836
    8. '    ' → logprob: -18.877187728881836
    9. '```' → logprob: -19.002187728881836
    10. ' ' → logprob: -19.252187728881836

Token 149: ' valeur' (ID: 41664)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11861129850149155
    2. ' x' → logprob: -2.6186113357543945
    3. ' ' → logprob: -3.3686113357543945
    4. ' y' → logprob: -6.3686113357543945
    5. 'y' → logprob: -6.7436113357543945
    6. ' 
' → logprob: -7.3686113357543945
    7. 'space' → logprob: -8.118611335754395
    8. '	x' → logprob: -8.243611335754395
    9. '_' → logprob: -8.868611335754395
    10. ' space' → logprob: -9.368611335754395

Token 150: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18965670466423035
    2. ' =' → logprob: -1.9396567344665527
    3. 'x' → logprob: -3.9396567344665527
    4. 'y' → logprob: -4.939656734466553
    5. ' x' → logprob: -7.439656734466553
    6. ' ' → logprob: -7.439656734466553
    7. '_' → logprob: -7.564656734466553
    8. ' y' → logprob: -7.689656734466553
    9. '=x' → logprob: -9.689656257629395
    10. '=y' → logprob: -10.314656257629395

Token 151: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7286024689674377
    2. ' y' → logprob: -1.603602409362793
    3. 'y' → logprob: -1.728602409362793
    4. ' x' → logprob: -1.978602409362793
    5. ' ' → logprob: -7.853602409362793
    6. '	y' → logprob: -10.728602409362793
    7. '	x' → logprob: -10.853602409362793
    8. '"x' → logprob: -12.541102409362793
    9. ''x' → logprob: -13.416102409362793
    10. '<|end|>' → logprob: -13.478602409362793

Token 152: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232877135276794
    2. ' =' → logprob: -0.8982877135276794
    3. '=y' → logprob: -9.273287773132324
    4. ' ' → logprob: -10.273287773132324
    5. ' y' → logprob: -10.773287773132324
    6. 'y' → logprob: -11.898287773132324
    7. '=x' → logprob: -12.648287773132324
    8. '=user' → logprob: -14.148287773132324
    9. ',' → logprob: -14.398287773132324
    10. 'x' → logprob: -14.773287773132324

Token 153: ' l' (ID: 305)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6709964871406555
    2. ' ' → logprob: -1.1709964275360107
    3. ' la' → logprob: -2.0459964275360107
    4. 'y' → logprob: -3.5459964275360107
    5. ' le' → logprob: -4.79599666595459
    6. ' prochaine' → logprob: -5.79599666595459
    7. 'le' → logprob: -6.42099666595459
    8. 'la' → logprob: -6.54599666595459
    9. ' ' → logprob: -6.92099666595459
    10. ' l' → logprob: -7.04599666595459

Token 154: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04866627976298332
    2. 'e' → logprob: -3.67366623878479
    3. ''' → logprob: -4.298666477203369
    4. ''année' → logprob: -5.923666477203369
    5. ''avenir' → logprob: -7.298666477203369
    6. ' a' → logprob: -7.423666477203369
    7. 'es' → logprob: -7.423666477203369
    8. '   ' → logprob: -7.673666477203369
    9. ''ét' → logprob: -7.798666477203369
    10. ' prochaine' → logprob: -7.923666477203369

Token 155: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.020389942452311516
    2. ' it' → logprob: -4.270390033721924
    3. 'iteration' → logprob: -5.520390033721924
    4. ''' → logprob: -7.395390033721924
    5. 'a' → logprob: -8.395389556884766
    6. 'ité' → logprob: -8.520389556884766
    7. 'ét' → logprob: -8.645389556884766
    8. 'é' → logprob: -9.020389556884766
    9. 'iter' → logprob: -9.020389556884766
    10. 'itter' → logprob: -9.395389556884766

Token 156: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.7822359800338745
    2. 'é' → logprob: -1.5322359800338745
    3. 'ér' → logprob: -1.5322359800338745
    4. 'er' → logprob: -2.657236099243164
    5. 'érieur' → logprob: -4.282236099243164
    6. 'éré' → logprob: -5.282236099243164
    7. 'érêt' → logprob: -5.532236099243164
    8. 'ère' → logprob: -5.532236099243164
    9. 'érateur' → logprob: -6.157236099243164
    10. 'érer' → logprob: -6.532236099243164

Token 157: ' suivante' (ID: 107439)
  Prédit: ' suivante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.32101988792419434
    2. ' ' → logprob: -1.5710198879241943
    3. ' y' → logprob: -3.3210198879241943
    4. ' =' → logprob: -4.446020126342773
    5. '=' → logprob: -4.821020126342773
    6. ' suivant' → logprob: -5.196020126342773
    7. 'y' → logprob: -6.071020126342773
    8. ' siguiente' → logprob: -6.446020126342773
    9. ' précédente' → logprob: -7.946020126342773
    10. ' i' → logprob: -8.696020126342773

Token 158: ' devient' (ID: 63488)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28340038657188416
    2. '=' → logprob: -1.4084004163742065
    3. ' ' → logprob: -6.158400535583496
    4. ' x' → logprob: -9.908400535583496
    5. ' y' → logprob: -10.158400535583496
    6. ' =
' → logprob: -10.908400535583496
    7. 'x' → logprob: -11.533400535583496
    8. ',' → logprob: -12.533400535583496
    9. '=x' → logprob: -12.908400535583496
    10. 'y' → logprob: -13.033400535583496

Token 159: ' la' (ID: 557)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.42873623967170715
    2. 'y' → logprob: -1.0537362098693848
    3. '	y' → logprob: -10.928736686706543
    4. ' ' → logprob: -11.428736686706543
    5. ' ' → logprob: -12.803736686706543
    6. ''y' → logprob: -14.428736686706543
    7. '=y' → logprob: -14.428736686706543
    8. 'x' → logprob: -14.928736686706543
    9. ''' → logprob: -15.178736686706543
    10. ' 
' → logprob: -15.303736686706543

Token 160: ' valeur' (ID: 41664)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.25202053785324097
    2. ' y' → logprob: -1.5020205974578857
    3. ' ' → logprob: -9.627020835876465
    4. 'x' → logprob: -11.752020835876465
    5. ''y' → logprob: -12.502020835876465
    6. '	y' → logprob: -12.627020835876465
    7. '`' → logprob: -13.877020835876465
    8. ' ' → logprob: -13.877020835876465
    9. 's' → logprob: -14.502020835876465
    10. 'n' → logprob: -14.627020835876465

Token 161: ' de' (ID: 334)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5313824415206909
    2. ' y' → logprob: -1.281382441520691
    3. ' de' → logprob: -2.5313825607299805
    4. ' ' → logprob: -3.0313825607299805
    5. 'de' → logprob: -5.1563825607299805
    6. ' of' → logprob: -8.40638256072998
    7. 'd' → logprob: -8.65638256072998
    8. ' d' → logprob: -9.15638256072998
    9. 'x' → logprob: -9.28138256072998
    10. ' suivante' → logprob: -10.03138256072998

Token 162: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3868745267391205
    2. ' y' → logprob: -1.1368745565414429
    3. ' ' → logprob: -13.386874198913574
    4. '	y' → logprob: -13.886874198913574
    5. ''y' → logprob: -14.886874198913574
    6. ' ' → logprob: -15.136874198913574
    7. '‘y' → logprob: -15.886874198913574
    8. 'x' → logprob: -17.26187515258789
    9. 'y's' → logprob: -17.26187515258789
    10. '```' → logprob: -17.76187515258789

Token 163: ' cour' (ID: 2871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5490157604217529
    2. ' 
' → logprob: -1.924015760421753
    3. '
' → logprob: -2.549015760421753
    4. '        
' → logprob: -2.674015760421753
    5. '<|end|>' → logprob: -3.424015760421753
    6. 'x' → logprob: -3.799015760421753
    7. ' x' → logprob: -3.924015760421753
    8. ' ' → logprob: -4.549015998840332
    9. '  
' → logprob: -4.549015998840332
    10. '    
' → logprob: -4.924015998840332

Token 164: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.12866736948490143
    2. 'ant' → logprob: -2.1286673545837402
    3. 'r' → logprob: -6.75366735458374
    4. 'a' → logprob: -7.75366735458374
    5. 'an' → logprob: -9.253667831420898
    6. 'rant' → logprob: -11.878667831420898
    7. ' ante' → logprob: -12.253667831420898
    8. '

' → logprob: -12.253667831420898
    9. 'amment' → logprob: -12.628667831420898
    10. '   ' → logprob: -13.128667831420898

Token 165: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45326781272888184
    2. ' 
' → logprob: -1.5782678127288818
    3. '
' → logprob: -3.078267812728882
    4. '        
' → logprob: -3.328267812728882
    5. 'x' → logprob: -3.453267812728882
    6. ' x' → logprob: -3.953267812728882
    7. '  
' → logprob: -4.828268051147461
    8. '<|end|>' → logprob: -5.328268051147461
    9. '\n' → logprob: -5.578268051147461
    10. '    
' → logprob: -5.703268051147461

Token 166: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5836625099182129
    2. '       ' → logprob: -1.083662509918213
    3. ' x' → logprob: -2.833662509918213
    4. '        
' → logprob: -3.833662509918213
    5. ' 
' → logprob: -4.333662509918213
    6. '   ' → logprob: -5.833662509918213
    7. ' ' → logprob: -6.458662509918213
    8. '    
' → logprob: -6.833662509918213
    9. '    ' → logprob: -7.333662509918213
    10. '       
' → logprob: -7.833662509918213

Token 167: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.07006203383207321
    2. ' x' → logprob: -2.6950619220733643
    3. ' 
' → logprob: -9.320061683654785
    4. '	x' → logprob: -10.695061683654785
    5. ' ' → logprob: -12.070061683654785
    6. '<|end|>' → logprob: -12.945061683654785
    7. '
' → logprob: -13.945061683654785
    8. '   ' → logprob: -14.070061683654785
    9. '\n' → logprob: -14.320061683654785
    10. '    
' → logprob: -14.695061683654785

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020925104618073
    2. ' =' → logprob: -2.3502092361450195
    3. '=y' → logprob: -13.47520923614502
    4. ' ' → logprob: -14.97520923614502
    5. '=
' → logprob: -15.10020923614502
    6. '=

' → logprob: -15.22520923614502
    7. ' =
' → logprob: -15.85020923614502
    8. '<|end|>' → logprob: -16.975210189819336
    9. '＝' → logprob: -17.475210189819336
    10. '=}' → logprob: -17.600210189819336

Token 169: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07888989895582199
    2. ' y' → logprob: -2.578889846801758
    3. '	y' → logprob: -16.078889846801758
    4. ' ' → logprob: -17.078889846801758
    5. ' ' → logprob: -17.203889846801758
    6. 'x' → logprob: -17.453889846801758
    7. ')y' → logprob: -20.703889846801758
    8. '_y' → logprob: -20.828889846801758
    9. ' 
' → logprob: -20.953889846801758
    10. ' ' → logprob: -21.328889846801758

Token 170: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7546024322509766
    2. '<|end|>' → logprob: -1.1296024322509766
    3. '\n' → logprob: -2.1296024322509766
    4. ' ' → logprob: -3.5046024322509766
    5. '```' → logprob: -4.254602432250977
    6. '#' → logprob: -4.629602432250977
    7. '\' → logprob: -4.879602432250977
    8. 'def' → logprob: -5.254602432250977
    9. ' 
' → logprob: -5.504602432250977
    10. '' → logprob: -5.754602432250977

Token 172: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0363730825483799
    2. ' ' → logprob: -4.036373138427734
    3. ' recurrence' → logprob: -5.286373138427734
    4. ' fibonacci' → logprob: -5.286373138427734
    5. ' factorial' → logprob: -5.786373138427734
    6. ' test' → logprob: -6.661373138427734
    7. ' calculate' → logprob: -7.286373138427734
    8. ' factor' → logprob: -7.536373138427734
    9. ' somme' → logprob: -8.036373138427734
    10. ' sequence' → logprob: -8.661373138427734

Token 173: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48340240120887756
    2. '_' → logprob: -1.3584023714065552
    3. '():' → logprob: -2.1084024906158447
    4. '()' → logprob: -6.358402252197266
    5. ':' → logprob: -6.858402252197266
    6. '_:' → logprob: -6.983402252197266
    7. ' (' → logprob: -8.233402252197266
    8. '```' → logprob: -9.483402252197266
    9. '(_)' → logprob: -9.733402252197266
    10. '(:' → logprob: -9.733402252197266

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2360742092132568
    2. ' r' → logprob: -1.3610742092132568
    3. ' ' → logprob: -1.7360742092132568
    4. 'r' → logprob: -1.8610742092132568
    5. '(' → logprob: -2.611074209213257
    6. '(r' → logprob: -4.236074447631836
    7. ' (' → logprob: -4.361074447631836
    8. ' 
' → logprob: -4.861074447631836
    9. '    ' → logprob: -5.361074447631836
    10. '    
' → logprob: -6.236074447631836

Token 175: ' """
' (ID: 7037)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11717115342617035
    2. ' r' → logprob: -2.367171049118042
    3. 'x' → logprob: -4.492171287536621
    4. ' x' → logprob: -6.117171287536621
    5. '   ' → logprob: -6.242171287536621
    6. ' for' → logprob: -7.742171287536621
    7. ' 
' → logprob: -8.742171287536621
    8. '#' → logprob: -8.742171287536621
    9. '    
' → logprob: -8.992171287536621
    10. 'n' → logprob: -9.367171287536621

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06951417028903961
    2. '    ' → logprob: -3.319514274597168
    3. '#' → logprob: -4.944514274597168
    4. 'I' → logprob: -5.569514274597168
    5. 'C' → logprob: -6.194514274597168
    6. ' #' → logprob: -6.319514274597168
    7. 'Initial' → logprob: -6.569514274597168
    8. 'Dé' → logprob: -6.694514274597168
    9. 'Calcul' → logprob: -6.819514274597168
    10. ' I' → logprob: -7.069514274597168

Token 177: ' Fonction' (ID: 189149)
  Prédit: 'Initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Initial' → logprob: -0.998142421245575
    2. '#' → logprob: -1.2481424808502197
    3. 'Calcul' → logprob: -2.6231424808502197
    4. 'Cal' → logprob: -2.9981424808502197
    5. '   ' → logprob: -3.1231424808502197
    6. 'Dé' → logprob: -3.4981424808502197
    7. 'App' → logprob: -3.6231424808502197
    8. 'Aff' → logprob: -3.6231424808502197
    9. 'Code' → logprob: -4.498142242431641
    10. 'Ex' → logprob: -4.748142242431641

Token 178: ' principale' (ID: 68926)
  Prédit: ' principale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' principale' → logprob: -0.03924667090177536
    2. ' principal' → logprob: -4.039246559143066
    3. ' main' → logprob: -4.289246559143066
    4. ' d' → logprob: -5.289246559143066
    5. ' de' → logprob: -6.539246559143066
    6. ' qui' → logprob: -8.539246559143066
    7. ' test' → logprob: -9.789246559143066
    8. ' ' → logprob: -9.789246559143066
    9. 'princip' → logprob: -9.914246559143066
    10. ' principales' → logprob: -9.914246559143066

Token 179: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08150800317525864
    2. 'def' → logprob: -3.831507921218872
    3. ' :' → logprob: -4.206508159637451
    4. ':' → logprob: -4.581508159637451
    5. ' qui' → logprob: -4.831508159637451
    6. ' def' → logprob: -4.831508159637451
    7. ' pour' → logprob: -5.081508159637451
    8. ' ' → logprob: -6.581508159637451
    9. ' de' → logprob: -6.581508159637451
    10. ' permettant' → logprob: -6.706508159637451

Token 180: ' lit' (ID: 11980)
  Prédit: ' demande'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' demande' → logprob: -0.5672550797462463
    2. ' lance' → logprob: -2.1922550201416016
    3. ' appelle' → logprob: -2.1922550201416016
    4. ' teste' → logprob: -2.5672550201416016
    5. ' permet' → logprob: -2.6922550201416016
    6. ' initialise' → logprob: -3.9422550201416016
    7. ' récup' → logprob: -4.692255020141602
    8. ' ex' → logprob: -4.942255020141602
    9. ' démar' → logprob: -5.692255020141602
    10. 'dem' → logprob: -5.817255020141602

Token 181: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.1361922323703766
    2. ' des' → logprob: -2.5111923217773438
    3. ' l' → logprob: -3.8861923217773438
    4. ' ' → logprob: -4.761192321777344
    5. ' une' → logprob: -5.261192321777344
    6. 'r' → logprob: -6.136192321777344
    7. ' la' → logprob: -6.136192321777344
    8. ' un' → logprob: -6.761192321777344
    9. 'les' → logprob: -6.886192321777344
    10. '   ' → logprob: -7.136192321777344

Token 182: ' entr' (ID: 7072)
  Prédit: ' paramètres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paramètres' → logprob: -0.9153252243995667
    2. ' param' → logprob: -1.5403251647949219
    3. ' valeurs' → logprob: -1.6653251647949219
    4. 'val' → logprob: -2.415325164794922
    5. 'param' → logprob: -2.415325164794922
    6. 'r' → logprob: -5.415325164794922
    7. ' val' → logprob: -5.415325164794922
    8. 'ent' → logprob: -6.040325164794922
    9. ' entr' → logprob: -6.540325164794922
    10. ' ' → logprob: -7.415325164794922

Token 183: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0004452083958312869
    2. 'ée' → logprob: -8.000445365905762
    3. 'ees' → logprob: -9.875445365905762
    4. 'é' → logprob: -10.125445365905762
    5. 'és' → logprob: -11.625445365905762
    6. 'es' → logprob: -12.375445365905762
    7. '```' → logprob: -14.000445365905762
    8. 'er' → logprob: -14.500445365905762
    9. '   ' → logprob: -14.750445365905762
    10. 'e' → logprob: -14.875445365905762

Token 184: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1411880254745483
    2. ' ' → logprob: -1.1411880254745483
    3. ' ,' → logprob: -2.266188144683838
    4. ' utilisateur' → logprob: -2.266188144683838
    5. '   ' → logprob: -2.391188144683838
    6. ' )' → logprob: -4.641188144683838
    7. ' utilisateurs' → logprob: -4.766188144683838
    8. ' user' → logprob: -4.891188144683838
    9. ' de' → logprob: -5.266188144683838
    10. 'user' → logprob: -5.266188144683838

Token 185: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.16332805156707764
    2. 'l' → logprob: -1.9133280515670776
    3. ''utilisateur' → logprob: -6.663328170776367
    4. 'util' → logprob: -7.288328170776367
    5. ' utilisateur' → logprob: -7.538328170776367
    6. '	l' → logprob: -8.413328170776367
    7. '’utilisateur' → logprob: -9.413328170776367
    8. ' ' → logprob: -9.538328170776367
    9. 's' → logprob: -10.163328170776367
    10. ' utilisateurs' → logprob: -10.538328170776367

Token 186: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.014355769380927086
    2. 'util' → logprob: -4.389355659484863
    3. '’utilisateur' → logprob: -6.514355659484863
    4. ' utilisateur' → logprob: -8.764355659484863
    5. ''util' → logprob: -9.514355659484863
    6. '   ' → logprob: -10.014355659484863
    7. ''' → logprob: -10.764355659484863
    8. '_util' → logprob: -10.889355659484863
    9. 'a' → logprob: -11.389355659484863
    10. 'u' → logprob: -12.139355659484863

Token 187: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33949053287506104
    2. ',' → logprob: -1.339490532875061
    3. ' ,' → logprob: -4.7144904136657715
    4. '    ' → logprob: -5.3394904136657715
    5. ' ' → logprob: -5.3394904136657715
    6. ' et' → logprob: -5.5894904136657715
    7. '  ' → logprob: -6.7144904136657715
    8. 's' → logprob: -8.08949089050293
    9. ' (' → logprob: -8.08949089050293
    10. ')' → logprob: -8.08949089050293

Token 188: ' puis' (ID: 18766)
  Prédit: ' appelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appelle' → logprob: -0.3084598481655121
    2. ' les' → logprob: -2.058459758758545
    3. ' puis' → logprob: -3.058459758758545
    4. ' crée' → logprob: -4.058459758758545
    5. ' lance' → logprob: -4.183459758758545
    6. ' calc' → logprob: -4.808459758758545
    7. ' ex' → logprob: -5.058459758758545
    8. ' effect' → logprob: -5.308459758758545
    9. ' calculates' → logprob: -5.433459758758545
    10. ' récup' → logprob: -5.558459758758545

Token 189: ' appelle' (ID: 111796)
  Prédit: ' appelle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appelle' → logprob: -0.048420652747154236
    2. ' lance' → logprob: -3.5484206676483154
    3. ' les' → logprob: -5.048420429229736
    4. ''appelle' → logprob: -6.048420429229736
    5. ' ex' → logprob: -6.298420429229736
    6. ' app' → logprob: -6.548420429229736
    7. 'app' → logprob: -7.048420429229736
    8. '   ' → logprob: -7.423420429229736
    9. ' appel' → logprob: -7.423420429229736
    10. ' ' → logprob: -7.548420429229736

Token 190: ' la' (ID: 557)
  Prédit: ' recurrence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recurrence' → logprob: -0.06914278864860535
    2. 'rec' → logprob: -2.9441428184509277
    3. ' la' → logprob: -4.569142818450928
    4. '	rec' → logprob: -6.069142818450928
    5. '   ' → logprob: -7.194142818450928
    6. ' rec' → logprob: -8.44414234161377
    7. ' ' → logprob: -9.19414234161377
    8. ' réc' → logprob: -9.56914234161377
    9. ' the' → logprob: -9.69414234161377
    10. '    ' → logprob: -9.69414234161377

Token 191: ' fonction' (ID: 17610)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.06374594569206238
    2. ' recurrence' → logprob: -3.0637459754943848
    3. 'fonction' → logprob: -4.438745975494385
    4. 'r' → logprob: -5.938745975494385
    5. ' fonction' → logprob: -8.563745498657227
    6. 'ré' → logprob: -9.063745498657227
    7. 'function' → logprob: -9.188745498657227
    8. 'def' → logprob: -10.063745498657227
    9. ' function' → logprob: -10.563745498657227
    10. ' rec' → logprob: -10.688745498657227

Token 192: '
' (ID: 198)
  Prédit: ' recurrence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recurrence' → logprob: -0.18000026047229767
    2. 'rec' → logprob: -1.8050003051757812
    3. '`' → logprob: -9.430000305175781
    4. ' `' → logprob: -9.805000305175781
    5. 'r' → logprob: -10.305000305175781
    6. ' rec' → logprob: -10.555000305175781
    7. 're' → logprob: -10.680000305175781
    8. 'ré' → logprob: -11.930000305175781
    9. ' recur' → logprob: -12.555000305175781
    10. 'def' → logprob: -12.805000305175781

Token 193: '   ' (ID: 271)
  Prédit: ' recurrence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recurrence' → logprob: -0.21424630284309387
    2. '   ' → logprob: -1.9642462730407715
    3. 'rec' → logprob: -2.9642462730407715
    4. ' rec' → logprob: -8.46424674987793
    5. '	rec' → logprob: -8.96424674987793
    6. 'def' → logprob: -9.33924674987793
    7. ' `' → logprob: -9.33924674987793
    8. '    ' → logprob: -9.46424674987793
    9. ' ' → logprob: -9.90174674987793
    10. ' réc' → logprob: -10.27674674987793

Token 194: ' de' (ID: 334)
  Prédit: ' recurrence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recurrence' → logprob: -0.062296926975250244
    2. 'rec' → logprob: -2.8122968673706055
    3. ' rec' → logprob: -8.812296867370605
    4. 'r' → logprob: -9.562296867370605
    5. ' recursion' → logprob: -10.812296867370605
    6. ' recur' → logprob: -10.937296867370605
    7. ' `' → logprob: -11.687296867370605
    8. ' réc' → logprob: -11.687296867370605
    9. 're' → logprob: -11.687296867370605
    10. '   ' → logprob: -11.937296867370605

Token 195: ' calcul' (ID: 7559)
  Prédit: ' recurrence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recurrence' → logprob: -0.4659607708454132
    2. 'rec' → logprob: -1.0909607410430908
    3. 'r' → logprob: -3.340960741043091
    4. 'ré' → logprob: -7.46596097946167
    5. 're' → logprob: -9.090960502624512
    6. ' réc' → logprob: -9.340960502624512
    7. ' recur' → logprob: -9.590960502624512
    8. ' rec' → logprob: -9.590960502624512
    9. ' recurrent' → logprob: -10.215960502624512
    10. 'calcul' → logprob: -10.715960502624512

Token 196: ' de' (ID: 334)
  Prédit: ' recurrence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recurrence' → logprob: -0.15807263553142548
    2. 'rec' → logprob: -2.7830727100372314
    3. ' de' → logprob: -3.4080727100372314
    4. '   ' → logprob: -4.033072471618652
    5. 'de' → logprob: -4.408072471618652
    6. ' ' → logprob: -5.783072471618652
    7. ' rec' → logprob: -6.033072471618652
    8. ' et' → logprob: -6.158072471618652
    9. '_rec' → logprob: -6.408072471618652
    10. '	rec' → logprob: -6.408072471618652

Token 197: ' la' (ID: 557)
  Prédit: ' recurrence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recurrence' → logprob: -0.2064497172832489
    2. 'rec' → logprob: -1.9564497470855713
    3. 'la' → logprob: -3.8314497470855713
    4. ' la' → logprob: -4.456449508666992
    5. 'r' → logprob: -4.706449508666992
    6. 'ré' → logprob: -7.581449508666992
    7. ' rec' → logprob: -7.581449508666992
    8. 'sequence' → logprob: -7.706449508666992
    9. ' sequence' → logprob: -7.831449508666992
    10. ' réc' → logprob: -8.206449508666992

Token 198: ' suite' (ID: 13800)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.2884579598903656
    2. ' suite' → logprob: -1.538457989692688
    3. 'rec' → logprob: -4.538457870483398
    4. 's' → logprob: -4.663457870483398
    5. 'r' → logprob: -5.538457870483398
    6. ' recurrence' → logprob: -5.663457870483398
    7. 'sequence' → logprob: -5.788457870483398
    8. ' sequence' → logprob: -5.913457870483398
    9. '_suite' → logprob: -6.913457870483398
    10. 'ré' → logprob: -7.913457870483398

Token 199: ' ré' (ID: 3146)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012896070256829262
    2. '    
' → logprob: -6.2628960609436035
    3. '    ' → logprob: -6.2628960609436035
    4. ')' → logprob: -6.3878960609436035
    5. '.' → logprob: -6.7628960609436035
    6. 'def' → logprob: -7.1378960609436035
    7. '
' → logprob: -7.2628960609436035
    8. '()' → logprob: -7.2628960609436035
    9. ' ' → logprob: -7.3878960609436035
    10. ',' → logprob: -7.3878960609436035

Token 200: 'current' (ID: 5804)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.006465009413659573
    2. 'c' → logprob: -5.381464958190918
    3. 'cc' → logprob: -6.631464958190918
    4. 'current' → logprob: -8.631464958190918
    5. 'urrence' → logprob: -8.756464958190918
    6. 'cur' → logprob: -9.006464958190918
    7. 'cup' → logprob: -10.506464958190918
    8. '_curr' → logprob: -11.756464958190918
    9. ' curr' → logprob: -12.506464958190918
    10. 'cu' → logprob: -13.006464958190918

Token 201: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01864289864897728
    2. 'ence' → logprob: -4.018642902374268
    3. 'ce' → logprob: -7.893642902374268
    4. 'ente' → logprob: -10.14364242553711
    5. 'ée' → logprob: -10.64364242553711
    6. 'ece' → logprob: -10.89364242553711
    7. 'nelle' → logprob: -11.89364242553711
    8. 'ent' → logprob: -12.01864242553711
    9. 'ee' → logprob: -12.26864242553711
    10. 'es' → logprob: -12.26864242553711

Token 202: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03177056089043617
    2. '.' → logprob: -4.281770706176758
    3. '    
' → logprob: -4.781770706176758
    4. ',' → logprob: -5.281770706176758
    5. ' ' → logprob: -6.906770706176758
    6. '    ' → logprob: -7.031770706176758
    7. ')' → logprob: -7.406770706176758
    8. '(' → logprob: -8.406770706176758
    9. '  ' → logprob: -8.531770706176758
    10. 'def' → logprob: -8.656770706176758

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020389800192788243
    2. '    
' → logprob: -9.750204086303711
    3. 'r' → logprob: -10.000204086303711
    4. ' ' → logprob: -10.000204086303711
    5. '    ' → logprob: -10.625204086303711
    6. '
' → logprob: -11.375204086303711
    7. '  ' → logprob: -11.875204086303711
    8. '```' → logprob: -13.250204086303711
    9. ' r' → logprob: -13.500204086303711
    10. ' 
' → logprob: -13.500204086303711

Token 204: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5147940516471863
    2. 'r' → logprob: -1.389794111251831
    3. ' r' → logprob: -1.889794111251831
    4. '    ' → logprob: -7.139793872833252
    5. ' """' → logprob: -7.389793872833252
    6. ' ' → logprob: -8.26479434967041
    7. '"""' → logprob: -8.76479434967041
    8. '    
' → logprob: -10.01479434967041
    9. ' """
' → logprob: -10.13979434967041
    10. '  ' → logprob: -10.13979434967041

Token 205: ''utilisateur' (ID: 140803)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1013084128499031
    2. 'a' → logprob: -2.9763083457946777
    3. 'es' → logprob: -3.6013083457946777
    4. ''utilisateur' → logprob: -4.851308345794678
    5. 'u' → logprob: -5.726308345794678
    6. '   ' → logprob: -6.226308345794678
    7. ''''' → logprob: -6.351308345794678
    8. ''' → logprob: -6.851308345794678
    9. 'i' → logprob: -7.476308345794678
    10. ''entrée' → logprob: -8.101308822631836

Token 206: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -1.5720274448394775
    2. '   ' → logprob: -1.6970274448394775
    3. ' est' → logprob: -1.6970274448394775
    4. ' peut' → logprob: -1.8220274448394775
    5. ' entre' → logprob: -3.0720274448394775
    6. ' des' → logprob: -3.0720274448394775
    7. ' sais' → logprob: -3.5720274448394775
    8. ' devra' → logprob: -3.8220274448394775
    9. ' )' → logprob: -4.572027206420898
    10. ' pourra' → logprob: -4.947027206420898

Token 207: ' fournir' (ID: 83313)
  Prédit: ' saisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.12636421620845795
    2. ' fournir' → logprob: -2.751364231109619
    3. ' entrer' → logprob: -3.376364231109619
    4. ' ' → logprob: -4.751364231109619
    5. ' rentrer' → logprob: -5.376364231109619
    6. ' ' → logprob: -5.876364231109619
    7. ' pouvoir' → logprob: -6.126364231109619
    8. 's' → logprob: -7.001364231109619
    9. ' sais' → logprob: -8.251363754272461
    10. ' continuer' → logprob: -8.376363754272461

Token 208: ' trois' (ID: 25564)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.0951863527297974
    2. ' les' → logprob: -1.7201863527297974
    3. ' r' → logprob: -1.9701863527297974
    4. ' trois' → logprob: -1.9701863527297974
    5. ')' → logprob: -2.470186233520508
    6. 'r' → logprob: -2.720186233520508
    7. ' des' → logprob: -4.720186233520508
    8. ' un' → logprob: -4.720186233520508
    9. ' ' → logprob: -4.970186233520508
    10. '(r' → logprob: -5.345186233520508

Token 209: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.06873655319213867
    2. ' valeurs' → logprob: -3.8187365531921387
    3. ' integers' → logprob: -3.8187365531921387
    4. 'ent' → logprob: -4.443736553192139
    5. ' nombres' → logprob: -5.568736553192139
    6. ' entier' → logprob: -5.943736553192139
    7. ' espaces' → logprob: -6.568736553192139
    8. ' val' → logprob: -7.068736553192139
    9. ' int' → logprob: -7.068736553192139
    10. ' ' → logprob: -7.943736553192139

Token 210: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.49514472484588623
    2. 'r' → logprob: -0.9951447248458862
    3. 'rees' → logprob: -4.245144844055176
    4. 'ières' → logprob: -5.370144844055176
    5. 'rée' → logprob: -7.870144844055176
    6. 'ries' → logprob: -7.995144844055176
    7. 'rés' → logprob: -7.995144844055176
    8. 'res' → logprob: -8.245144844055176
    9. 't' → logprob: -9.370144844055176
    10. '   ' → logprob: -9.495144844055176

Token 211: ' sépar' (ID: 97160)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.41389739513397217
    2. 'r' → logprob: -1.6638973951339722
    3. ',' → logprob: -2.9138975143432617
    4. ' sépar' → logprob: -2.9138975143432617
    5. ' en' → logprob: -4.913897514343262
    6. ' ' → logprob: -5.038897514343262
    7. ':' → logprob: -5.038897514343262
    8. '(r' → logprob: -5.413897514343262
    9. ' (' → logprob: -5.663897514343262
    10. 's' → logprob: -5.913897514343262

Token 212: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0015893694944679737
    2. 'é' → logprob: -7.126589298248291
    3. 'es' → logprob: -7.251589298248291
    4. 's' → logprob: -10.62658977508545
    5. ' par' → logprob: -11.00158977508545
    6. 'par' → logprob: -11.50158977508545
    7. 'e' → logprob: -11.50158977508545
    8. 'ès' → logprob: -12.12658977508545
    9. 'rés' → logprob: -12.62658977508545
    10. '```' → logprob: -13.87658977508545

Token 213: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.004654407035559416
    2. 'par' → logprob: -5.379654407501221
    3. 'es' → logprob: -11.129653930664062
    4. '(par' → logprob: -12.004653930664062
    5. ' ' → logprob: -12.254653930664062
    6. 's' → logprob: -13.004653930664062
    7. '_par' → logprob: -13.629653930664062
    8. '   ' → logprob: -13.754653930664062
    9. 'e' → logprob: -13.879653930664062
    10. ',' → logprob: -14.629653930664062

Token 214: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2940848767757416
    2. ' un' → logprob: -1.794084906578064
    3. ' espaces' → logprob: -3.5440847873687744
    4. 'un' → logprob: -3.9190847873687744
    5. ' espace' → logprob: -3.9190847873687744
    6. 'des' → logprob: -4.2940850257873535
    7. 'esp' → logprob: -6.6690850257873535
    8. 'spaces' → logprob: -6.9190850257873535
    9. 'es' → logprob: -7.0440850257873535
    10. ' ' → logprob: -7.4190850257873535

Token 215: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.7021065354347229
    2. ' espaces' → logprob: -0.7021065354347229
    3. 'spaces' → logprob: -5.702106475830078
    4. 'es' → logprob: -5.702106475830078
    5. ''esp' → logprob: -6.202106475830078
    6. ''espace' → logprob: -9.202106475830078
    7. ' espace' → logprob: -10.952106475830078
    8. ' spaces' → logprob: -10.952106475830078
    9. '’esp' → logprob: -11.077106475830078
    10. '   ' → logprob: -11.077106475830078

Token 216: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.659772515296936
    2. ':' → logprob: -1.534772515296936
    3. ' :' → logprob: -2.0347723960876465
    4. '.' → logprob: -2.1597723960876465
    5. ')' → logprob: -4.9097723960876465
    6. ' ,' → logprob: -5.5347723960876465
    7. '   ' → logprob: -5.7847723960876465
    8. '):' → logprob: -5.7847723960876465
    9. ' pour' → logprob: -7.1597723960876465
    10. ' )' → logprob: -7.2847723960876465

Token 217: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6175565719604492
    2. ' r' → logprob: -0.8675565719604492
    3. '   ' → logprob: -4.617556571960449
    4. ' "' → logprob: -4.742556571960449
    5. ' ' → logprob: -5.367556571960449
    6. ' ")' → logprob: -5.367556571960449
    7. ' """' → logprob: -5.992556571960449
    8. '"' → logprob: -6.117556571960449
    9. ' )' → logprob: -6.242556571960449
    10. ')' → logprob: -6.867556571960449

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017076305812224746
    2. ' ,' → logprob: -8.750170707702637
    3. ',d' → logprob: -11.625170707702637
    4. ',r' → logprob: -13.625170707702637
    5. ' ' → logprob: -14.375170707702637
    6. ',
' → logprob: -15.250170707702637
    7. ')' → logprob: -15.375170707702637
    8. 'r' → logprob: -15.625170707702637
    9. '<|end|>' → logprob: -16.250171661376953
    10. 'd' → logprob: -16.250171661376953

Token 219: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5235379934310913
    2. 'd' → logprob: -0.8985379934310913
    3. 'x' → logprob: -8.523537635803223
    4. ' x' → logprob: -8.648537635803223
    5. ',' → logprob: -10.648537635803223
    6. ' ' → logprob: -12.023537635803223
    7. '   ' → logprob: -12.523537635803223
    8. ' ,' → logprob: -12.898537635803223
    9. ',d' → logprob: -14.023537635803223
    10. 'r' → logprob: -14.648537635803223

Token 220: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02114970050752163
    2. ' et' → logprob: -3.8961496353149414
    3. ' ,' → logprob: -7.896149635314941
    4. 'et' → logprob: -8.521149635314941
    5. ' e' → logprob: -11.271149635314941
    6. ' ' → logprob: -12.021149635314941
    7. ')' → logprob: -12.521149635314941
    8. ' and' → logprob: -12.521149635314941
    9. 'e' → logprob: -12.646149635314941
    10. ' и' → logprob: -13.396149635314941

Token 221: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5759496092796326
    2. 'x' → logprob: -0.8259496092796326
    3. ' ' → logprob: -11.825949668884277
    4. ' ' → logprob: -13.825949668884277
    5. ',' → logprob: -14.575949668884277
    6. '   ' → logprob: -14.825949668884277
    7. '  ' → logprob: -15.825949668884277
    8. 's' → logprob: -16.20094871520996
    9. '	x' → logprob: -16.20094871520996
    10. 'a' → logprob: -16.32594871520996

Token 222: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06063627451658249
    2. ')
' → logprob: -3.685636281967163
    3. '   ' → logprob: -3.810636281967163
    4. '.' → logprob: -5.310636043548584
    5. ',' → logprob: -6.185636043548584
    6. '):
' → logprob: -6.935636043548584
    7. ').' → logprob: -6.935636043548584
    8. '):' → logprob: -7.435636043548584
    9. '")' → logprob: -7.560636043548584
    10. '
' → logprob: -7.560636043548584

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010505330748856068
    2. ')' → logprob: -5.510505199432373
    3. '"""' → logprob: -5.760505199432373
    4. '"""
' → logprob: -6.760505199432373
    5. '    
' → logprob: -7.385505199432373
    6. '
' → logprob: -8.260505676269531
    7. '   
' → logprob: -8.635505676269531
    8. ' """
' → logprob: -8.885505676269531
    9. ')
' → logprob: -9.135505676269531
    10. ' 
' → logprob: -9.260505676269531

Token 224: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022626129910349846
    2. '"""' → logprob: -4.397625923156738
    3. '"""
' (adapté à ' """
') → logprob: -5.522625923156738
    4. ' """
' → logprob: -6.022625923156738
    5. ')' → logprob: -6.772625923156738
    6. ' """' → logprob: -6.772625923156738
    7. '"' → logprob: -8.272625923156738
    8. '
' → logprob: -8.897625923156738
    9. '    ' → logprob: -8.897625923156738
    10. '""' → logprob: -9.147625923156738

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005124176852405071
    2. 'r' → logprob: -6.130124092102051
    3. ' r' → logprob: -6.255124092102051
    4. '    
' → logprob: -7.755124092102051
    5. 'input' → logprob: -8.75512409210205
    6. '    ' → logprob: -9.25512409210205
    7. 'inputs' → logprob: -9.25512409210205
    8. ' input' → logprob: -10.38012409210205
    9. ' inputs' → logprob: -10.50512409210205
    10. ' line' → logprob: -10.75512409210205

Token 226: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6681134700775146
    2. '   ' → logprob: -1.5431134700775146
    3. 'try' → logprob: -2.2931134700775146
    4. 'inputs' → logprob: -2.2931134700775146
    5. ' r' → logprob: -3.9181134700775146
    6. 'user' → logprob: -4.668113708496094
    7. 'values' → logprob: -4.918113708496094
    8. ' inputs' → logprob: -5.043113708496094
    9. ' try' → logprob: -5.168113708496094
    10. 'input' → logprob: -5.418113708496094

Token 227: ' Lecture' (ID: 106534)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.6611506342887878
    2. 'val' → logprob: -2.1611506938934326
    3. 'input' → logprob: -2.2861506938934326
    4. 'values' → logprob: -2.6611506938934326
    5. 'user' → logprob: -3.1611506938934326
    6. 'entrée' → logprob: -3.9111506938934326
    7. 'r' → logprob: -4.0361504554748535
    8. ' inputs' → logprob: -4.1611504554748535
    9. 'entry' → logprob: -4.5361504554748535
    10. 'vals' → logprob: -4.5361504554748535

Token 228: ' et' (ID: 859)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.2642132043838501
    2. 'r' → logprob: -1.51421320438385
    3. ' des' → logprob: -5.0142130851745605
    4. 's' → logprob: -6.5142130851745605
    5. ' ' → logprob: -6.8892130851745605
    6. ' de' → logprob: -7.1392130851745605
    7. '   ' → logprob: -7.3892130851745605
    8. ' user' → logprob: -7.8892130851745605
    9. 'user' → logprob: -8.014213562011719
    10. ' line' → logprob: -8.264213562011719

Token 229: ' conversion' (ID: 22165)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3205089569091797
    2. ' récupération' → logprob: -1.4455089569091797
    3. ' traitement' → logprob: -1.6955089569091797
    4. ' split' → logprob: -1.6955089569091797
    5. ' séparation' → logprob: -4.07050895690918
    6. 'r' → logprob: -4.07050895690918
    7. 'trait' → logprob: -4.19550895690918
    8. 'spl' → logprob: -4.32050895690918
    9. ' unpack' → logprob: -4.69550895690918
    10. ' la' → logprob: -4.82050895690918

Token 230: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.782999575138092
    2. '   ' → logprob: -0.907999575138092
    3. 'r' → logprob: -3.0329995155334473
    4. ' r' → logprob: -3.1579995155334473
    5. ' de' → logprob: -3.4079995155334473
    6. 'des' → logprob: -5.282999515533447
    7. ' ' → logprob: -6.157999515533447
    8. ' line' → logprob: -6.157999515533447
    9. 'de' → logprob: -6.282999515533447
    10. '    
' → logprob: -6.907999515533447

Token 231: ' entr' (ID: 7072)
  Prédit: ' entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entr' → logprob: -1.1907572746276855
    2. 'r' → logprob: -1.5657572746276855
    3. 'val' → logprob: -1.5657572746276855
    4. 'entr' → logprob: -2.1907572746276855
    5. 'inputs' → logprob: -3.1907572746276855
    6. 'entrée' → logprob: -3.4407572746276855
    7. 'ent' → logprob: -3.5657572746276855
    8. ' inputs' → logprob: -3.9407572746276855
    9. ' r' → logprob: -4.3157572746276855
    10. ' valeurs' → logprob: -4.8157572746276855

Token 232: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0023745812941342592
    2. 'ees' → logprob: -6.502374649047852
    3. 'r' → logprob: -7.627374649047852
    4. 't' → logprob: -8.752374649047852
    5. 'ée' → logprob: -9.627374649047852
    6. 'ies' → logprob: -10.002374649047852
    7. 'e' → logprob: -10.877374649047852
    8. 'er' → logprob: -11.002374649047852
    9. 'nées' → logprob: -11.127374649047852
    10. 'tries' → logprob: -11.252374649047852

Token 233: ' utilisateur' (ID: 115595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0792834535241127
    2. ' r' → logprob: -2.9542834758758545
    3. 'r' → logprob: -3.9542834758758545
    4. ' line' → logprob: -6.704283237457275
    5. '    
' → logprob: -6.704283237457275
    6. 's' → logprob: -7.579283237457275
    7. ' inputs' → logprob: -8.204283714294434
    8. '    ' → logprob: -8.329283714294434
    9. 'inputs' → logprob: -8.329283714294434
    10. ' user' → logprob: -8.454283714294434

Token 234: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1558375060558319
    2. ' r' → logprob: -2.5308375358581543
    3. 'r' → logprob: -2.9058375358581543
    4. '    
' → logprob: -5.155837535858154
    5. ' =' → logprob: -6.780837535858154
    6. ' 
' → logprob: -7.905837535858154
    7. ' line' → logprob: -8.155837059020996
    8. 'input' → logprob: -8.155837059020996
    9. '    ' → logprob: -8.280837059020996
    10. 'inputs' → logprob: -8.280837059020996

Token 235: 'r' (ID: 81)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4619297385215759
    2. 'r' → logprob: -1.2119297981262207
    3. 'input' → logprob: -3.0869297981262207
    4. ' )' → logprob: -4.461929798126221
    5. ' r' → logprob: -4.961929798126221
    6. ' input' → logprob: -4.961929798126221
    7. '   ' → logprob: -7.961929798126221
    8. 'int' → logprob: -8.211929321289062
    9. ' ' → logprob: -9.336929321289062
    10. 'l' → logprob: -9.336929321289062

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006234417669475079
    2. ',d' → logprob: -7.8756232261657715
    3. ' ,' → logprob: -8.37562370300293
    4. 'd' → logprob: -11.87562370300293
    5. '),' → logprob: -12.75062370300293
    6. ')' → logprob: -13.25062370300293
    7. ',)' → logprob: -15.37562370300293
    8. ',),' → logprob: -15.37562370300293
    9. ',",' → logprob: -15.87562370300293
    10. '‌,' → logprob: -16.00062370300293

Token 237: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.17993293702602386
    2. 'd' → logprob: -1.804932951927185
    3. ',' → logprob: -9.054932594299316
    4. ',d' → logprob: -10.429932594299316
    5. ' ,' → logprob: -10.679932594299316
    6. ' ' → logprob: -11.804932594299316
    7. ')' → logprob: -12.304932594299316
    8. '   ' → logprob: -13.554932594299316
    9. '	d' → logprob: -13.554932594299316
    10. ')d' → logprob: -13.929932594299316

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018339496455155313
    2. ' ,' → logprob: -9.12518310546875
    3. ' et' → logprob: -10.00018310546875
    4. ')' → logprob: -11.25018310546875
    5. 'et' → logprob: -11.25018310546875
    6. ',x' → logprob: -13.87518310546875
    7. '),' → logprob: -14.37518310546875
    8. ' )' → logprob: -15.12518310546875
    9. 'x' → logprob: -15.62518310546875
    10. ',)' → logprob: -15.75018310546875

Token 239: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20143595337867737
    2. ' x' → logprob: -1.701435923576355
    3. 'et' → logprob: -11.826436042785645
    4. ',' → logprob: -12.076436042785645
    5. ' ' → logprob: -12.701436042785645
    6. ' et' → logprob: -12.951436042785645
    7. ' and' → logprob: -13.076436042785645
    8. ',x' → logprob: -14.076436042785645
    9. ' ,' → logprob: -15.076436042785645
    10. 'and' → logprob: -15.326436042785645

Token 240: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046618093620054424
    2. ' )' → logprob: -8.125466346740723
    3. ' =' → logprob: -8.875466346740723
    4. ')=' → logprob: -11.000466346740723
    5. '=' → logprob: -11.750466346740723
    6. ')
' → logprob: -13.000466346740723
    7. '   ' → logprob: -13.625466346740723
    8. '):' → logprob: -13.750466346740723
    9. ',' → logprob: -14.875466346740723
    10. ' ' → logprob: -15.750466346740723

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06496255099773407
    2. ' r' → logprob: -3.06496262550354
    3. 'r' → logprob: -4.689962387084961
    4. ' line' → logprob: -6.439962387084961
    5. ' input' → logprob: -7.064962387084961
    6. 'input' → logprob: -7.064962387084961
    7. '    ' → logprob: -7.314962387084961
    8. ' inputs' → logprob: -7.314962387084961
    9. 'inputs' → logprob: -7.439962387084961
    10. '    
' → logprob: -7.439962387084961

Token 242: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5889421105384827
    2. 'r' (adapté à ' r') → logprob: -0.9639421105384827
    3. '   ' → logprob: -3.463942050933838
    4. ' line' → logprob: -4.963942050933838
    5. ' inputs' → logprob: -5.088942050933838
    6. 'inputs' → logprob: -5.463942050933838
    7. 'line' → logprob: -6.088942050933838
    8. ' values' → logprob: -6.338942050933838
    9. 'values' → logprob: -6.463942050933838
    10. ' user' → logprob: -6.463942050933838

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003088871017098427
    2. ' ,' → logprob: -8.125308990478516
    3. ' =' → logprob: -11.625308990478516
    4. '=' → logprob: -13.750308990478516
    5. ',d' → logprob: -13.750308990478516
    6. 's' → logprob: -14.875308990478516
    7. ',r' → logprob: -14.875308990478516
    8. ',s' → logprob: -15.250308990478516
    9. ',input' → logprob: -15.250308990478516
    10. ',int' → logprob: -15.750308990478516

Token 244: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.06198180466890335
    2. 'd' → logprob: -2.8119819164276123
    3. ' ' → logprob: -11.936982154846191
    4. '<|end|>' → logprob: -13.186982154846191
    5. ' ' → logprob: -13.311982154846191
    6. '  ' → logprob: -13.686982154846191
    7. '_d' → logprob: -13.686982154846191
    8. '	d' → logprob: -14.686982154846191
    9. ',d' → logprob: -15.436982154846191
    10. ' =' → logprob: -15.561982154846191

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.872261317563243e-05
    2. ' ,' → logprob: -9.750059127807617
    3. ',x' → logprob: -15.250059127807617
    4. ' =' → logprob: -16.625059127807617
    5. '=' → logprob: -17.750059127807617
    6. '‌,' → logprob: -18.125059127807617
    7. ',input' → logprob: -18.375059127807617
    8. ' ' → logprob: -18.750059127807617
    9. '<|end|>' → logprob: -18.750059127807617
    10. '_,' → logprob: -18.875059127807617

Token 246: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06197138875722885
    2. 'x' → logprob: -2.811971426010132
    3. ' ' → logprob: -12.811971664428711
    4. ' and' → logprob: -14.811971664428711
    5. '	x' → logprob: -15.311971664428711
    6. ' ' → logprob: -15.561971664428711
    7. ',x' → logprob: -16.18697166442871
    8. ',' → logprob: -16.43697166442871
    9. '  ' → logprob: -17.43697166442871
    10. 'and' → logprob: -17.56197166442871

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054884202778339386
    2. '=' → logprob: -2.929884195327759
    3. '=input' → logprob: -13.55488395690918
    4. '=int' → logprob: -15.05488395690918
    5. ')' → logprob: -16.30488395690918
    6. ',' → logprob: -16.55488395690918
    7. ' ' → logprob: -16.55488395690918
    8. '=user' → logprob: -18.17988395690918
    9. '＝' → logprob: -18.42988395690918
    10. '	' → logprob: -18.80488395690918

Token 248: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.20143945515155792
    2. 'map' → logprob: -1.7014394998550415
    3. ' input' → logprob: -12.07643985748291
    4. 'input' → logprob: -12.20143985748291
    5. ' ' → logprob: -12.32643985748291
    6. '[' → logprob: -12.70143985748291
    7. '	map' → logprob: -13.07643985748291
    8. 'm' → logprob: -13.70143985748291
    9. ' [' → logprob: -13.70143985748291
    10. '(map' → logprob: -13.82643985748291

Token 249: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.062093839049339294
    2. '(' → logprob: -2.812093734741211
    3. '(input' → logprob: -9.187093734741211
    4. 'int' → logprob: -11.562093734741211
    5. '(str' → logprob: -11.687093734741211
    6. '(
' → logprob: -13.187093734741211
    7. '<int' → logprob: -13.562093734741211
    8. '[int' → logprob: -13.812093734741211
    9. '(lambda' → logprob: -14.562093734741211
    10. '(in' → logprob: -15.562093734741211

Token 250: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02754811756312847
    2. 'input' → logprob: -3.77754807472229
    3. ',input' → logprob: -5.902548313140869
    4. '(' → logprob: -6.902548313140869
    5. ',' → logprob: -8.152547836303711
    6. ')' → logprob: -8.652547836303711
    7. ' input' → logprob: -9.402547836303711
    8. ' (' → logprob: -12.402547836303711
    9. '=input' → logprob: -13.027547836303711
    10. ' ,' → logprob: -13.652547836303711

Token 251: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.038042180240154266
    2. ' input' → logprob: -3.2880420684814453
    3. '(input' → logprob: -14.413042068481445
    4. ')' → logprob: -16.288042068481445
    5. '=input' → logprob: -17.413042068481445
    6. '	input' → logprob: -17.538042068481445
    7. '   ' → logprob: -17.538042068481445
    8. ',input' → logprob: -18.038042068481445
    9. '<input' → logprob: -18.163042068481445
    10. ' ' → logprob: -18.913042068481445

Token 252: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00530277332291007
    2. '()' → logprob: -5.255302906036377
    3. '(' → logprob: -9.880302429199219
    4. '())' → logprob: -12.005302429199219
    5. ' ().' → logprob: -12.755302429199219
    6. '("").' → logprob: -13.005302429199219
    7. '('').' → logprob: -13.380302429199219
    8. '("' → logprob: -13.880302429199219
    9. '('' → logprob: -14.005302429199219
    10. '(()' → logprob: -14.255302429199219

Token 253: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005530327325686812
    2. 'strip' → logprob: -7.500553131103516
    3. ' split' → logprob: -17.000553131103516
    4. 'rstrip' → logprob: -18.000553131103516
    5. '(split' → logprob: -18.500553131103516
    6. 'spl' → logprob: -18.875553131103516
    7. '.split' → logprob: -19.375553131103516
    8. 'read' → logprob: -20.250553131103516
    9. 'str' → logprob: -20.375553131103516
    10. '_split' → logprob: -21.250553131103516

Token 254: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0046737417578697205
    2. '()' → logprob: -5.754673957824707
    3. '()))' → logprob: -7.129673957824707
    4. '('' → logprob: -7.504673957824707
    5. '(' → logprob: -9.504673957824707
    6. ')' → logprob: -9.754673957824707
    7. ' ())' → logprob: -12.629673957824707
    8. '("' → logprob: -12.879673957824707
    9. '(','' → logprob: -13.254673957824707
    10. '))' → logprob: -14.129673957824707

Token 255: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030357103794813156
    2. '   ' → logprob: -4.0303568840026855
    3. ' recurrence' → logprob: -4.9053568840026855
    4. '    
' → logprob: -5.6553568840026855
    5. '  
' → logprob: -8.030357360839844
    6. 'rec' → logprob: -8.030357360839844
    7. ')
' → logprob: -9.030357360839844
    8. ' 
' → logprob: -9.155357360839844
    9. ')' → logprob: -9.405357360839844
    10. '<|end|>' → logprob: -9.655357360839844

Token 256: ' #' (ID: 1069)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.6451241970062256
    2. ' recurrence' → logprob: -1.2701241970062256
    3. '   ' → logprob: -1.6451241970062256
    4. '    
' → logprob: -7.020124435424805
    5. '
' → logprob: -7.645124435424805
    6. '	rec' → logprob: -8.770124435424805
    7. ' rec' → logprob: -10.770124435424805
    8. '   
' → logprob: -11.020124435424805
    9. '  
' → logprob: -11.395124435424805
    10. '  ' → logprob: -11.770124435424805

Token 257: ' App' (ID: 2583)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.1002127155661583
    2. ' recurrence' → logprob: -2.350212812423706
    3. '   ' → logprob: -12.600213050842285
    4. 're' → logprob: -14.100213050842285
    5. 'rep' → logprob: -14.225213050842285
    6. 'return' → logprob: -14.475213050842285
    7. ' rec' → logprob: -15.600213050842285
    8. '	rec' → logprob: -16.35021209716797
    9. 'repeat' → logprob: -16.60021209716797
    10. '  ' → logprob: -16.60021209716797

Token 258: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.02647852525115013
    2. 'eler' → logprob: -3.6514785289764404
    3. 'elle' → logprob: -10.02647876739502
    4. 'e' → logprob: -11.27647876739502
    5. 'er' → logprob: -11.27647876739502
    6. 'l' → logprob: -11.40147876739502
    7. '\' → logprob: -11.52647876739502
    8. 'ele' → logprob: -11.52647876739502
    9. 'eleration' → logprob: -11.65147876739502
    10. 'eller' → logprob: -12.15147876739502

Token 259: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12611150741577148
    2. '(re' → logprob: -2.2511115074157715
    3. '(rec' → logprob: -5.0011115074157715
    4. ' recurrence' → logprob: -6.0011115074157715
    5. '(
' → logprob: -6.3761115074157715
    6. ' (' → logprob: -6.6261115074157715
    7. 'rec' → logprob: -7.6261115074157715
    8. 'def' → logprob: -8.75111198425293
    9. '(r' → logprob: -9.12611198425293
    10. '   ' → logprob: -9.75111198425293

Token 260: ' la' (ID: 557)
  Prédit: ' recurrence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recurrence' → logprob: -0.575941264629364
    2. 'rec' → logprob: -0.825941264629364
    3. 're' → logprob: -14.07594108581543
    4. ' recurrent' → logprob: -15.32594108581543
    5. 'r' → logprob: -15.70094108581543
    6. ' rec' → logprob: -15.70094108581543
    7. ' recur' → logprob: -15.70094108581543
    8. 'rep' → logprob: -16.20094108581543
    9. ' recurr' → logprob: -16.45094108581543
    10. '	rec' → logprob: -16.70094108581543

Token 261: ' fonction' (ID: 17610)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.04859725013375282
    2. ' recurrence' → logprob: -3.0485973358154297
    3. 'fonction' → logprob: -12.54859733581543
    4. 'r' → logprob: -13.04859733581543
    5. 're' → logprob: -13.79859733581543
    6. ' rec' → logprob: -13.92359733581543
    7. ' recur' → logprob: -14.67359733581543
    8. 'function' → logprob: -14.79859733581543
    9. 'rep' → logprob: -15.29859733581543
    10. 'def' → logprob: -15.29859733581543

Token 262: ' pour' (ID: 1930)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.40395307540893555
    2. ' recurrence' → logprob: -1.1539530754089355
    3. '(re' → logprob: -4.1539530754089355
    4. '(rec' → logprob: -7.4039530754089355
    5. '(' → logprob: -7.7789530754089355
    6. 're' → logprob: -9.028953552246094
    7. 'def' → logprob: -10.403953552246094
    8. '	rec' → logprob: -10.903953552246094
    9. '(
' → logprob: -11.403953552246094
    10. ' rec' → logprob: -12.278953552246094

Token 263: ' afficher' (ID: 146524)
  Prédit: ' recurrence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recurrence' → logprob: -0.08934454619884491
    2. 'rec' → logprob: -2.4643445014953613
    3. 'calcul' → logprob: -8.58934497833252
    4. 'cal' → logprob: -9.58934497833252
    5. ' calcul' → logprob: -9.83934497833252
    6. 're' → logprob: -10.08934497833252
    7. ' afficher' → logprob: -11.58934497833252
    8. 'r' → logprob: -11.58934497833252
    9. ' réc' → logprob: -11.71434497833252
    10. ' rec' → logprob: -12.46434497833252

Token 264: ' la' (ID: 557)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.3178302049636841
    2. ' recurrence' → logprob: -1.317830204963684
    3. 'la' → logprob: -6.4428300857543945
    4. '(re' → logprob: -6.9428300857543945
    5. '(rec' → logprob: -6.9428300857543945
    6. 're' → logprob: -8.067830085754395
    7. ' la' → logprob: -8.192830085754395
    8. '(' → logprob: -9.192830085754395
    9. 'r' → logprob: -9.692830085754395
    10. 'le' → logprob: -9.817830085754395

Token 265: ' suite' (ID: 13800)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.08770762383937836
    2. ' recurrence' → logprob: -2.58770751953125
    3. 'sequence' → logprob: -5.71270751953125
    4. 'suite' → logprob: -6.08770751953125
    5. 'ré' → logprob: -6.33770751953125
    6. 'r' → logprob: -6.96270751953125
    7. ' sequence' → logprob: -8.33770751953125
    8. ' suite' → logprob: -9.58770751953125
    9. 'sequ' → logprob: -10.08770751953125
    10. 're' → logprob: -10.71270751953125

Token 266: '
' (ID: 198)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.68803870677948
    2. ' recurrence' → logprob: -1.43803870677948
    3. '   ' → logprob: -1.56303870677948
    4. '(re' → logprob: -3.3130388259887695
    5. '(' → logprob: -4.9380388259887695
    6. '(rec' → logprob: -5.3130388259887695
    7. '(r' → logprob: -7.6880388259887695
    8. '(
' → logprob: -7.6880388259887695
    9. '	rec' → logprob: -8.18803882598877
    10. ' (' → logprob: -8.31303882598877

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23273076117038727
    2. ' recurrence' → logprob: -1.732730746269226
    3. 'rec' → logprob: -3.4827308654785156
    4. ' rec' → logprob: -10.232730865478516
    5. '	rec' → logprob: -10.357730865478516
    6. '  ' → logprob: -10.982730865478516
    7. '(rec' → logprob: -12.357730865478516
    8. ' recur' → logprob: -12.607730865478516
    9. '    
' → logprob: -12.857730865478516
    10. ' recurrent' → logprob: -12.982730865478516

Token 268: ' recurrence' (ID: 127370)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.048590775579214096
    2. ' recurrence' → logprob: -3.048590660095215
    3. '   ' → logprob: -13.923590660095215
    4. 're' → logprob: -14.048590660095215
    5. ' rec' → logprob: -14.423590660095215
    6. 'rep' → logprob: -15.048590660095215
    7. ' recur' → logprob: -15.423590660095215
    8. '	rec' → logprob: -16.17359161376953
    9. 'reci' → logprob: -16.29859161376953
    10. 'Rec' → logprob: -16.54859161376953

Token 269: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -1.2352385965641588e-05
    2. '_' → logprob: -11.500012397766113
    3. '_sequences' → logprob: -13.500012397766113
    4. '_seq' → logprob: -14.750012397766113
    5. ' _' → logprob: -16.125011444091797
    6. '_s' → logprob: -16.375011444091797
    7. '_SEQUENCE' → logprob: -17.250011444091797
    8. '_suite' → logprob: -17.750011444091797
    9. '_sn' → logprob: -17.875011444091797
    10. ''_' → logprob: -18.375011444091797

Token 270: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.16023772954940796
    2. '(' → logprob: -1.9102377891540527
    3. ' (' → logprob: -11.285237312316895
    4. '(
' → logprob: -14.410237312316895
    5. '(run' → logprob: -16.53523826599121
    6. '(rr' → logprob: -17.16023826599121
    7. '(

' → logprob: -17.16023826599121
    8. '(x' → logprob: -17.28523826599121
    9. '(re' → logprob: -17.28523826599121
    10. '((' → logprob: -17.53523826599121

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.65101717156358e-05
    2. ',d' → logprob: -9.250096321105957
    3. ' ,' → logprob: -15.125096321105957
    4. 'd' → logprob: -17.500097274780273
    5. ',
' → logprob: -17.875097274780273
    6. ',r' → logprob: -18.000097274780273
    7. ')' → logprob: -18.125097274780273
    8. ',",' → logprob: -19.125097274780273
    9. ' d' → logprob: -19.250097274780273
    10. ',

' → logprob: -19.500097274780273

Token 272: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.31326204538345337
    2. 'd' → logprob: -1.3132619857788086
    3. ')d' → logprob: -16.063262939453125
    4. 'x' → logprob: -16.688262939453125
    5. ')' → logprob: -16.813262939453125
    6. ' x' → logprob: -17.438262939453125
    7. ' ' → logprob: -17.688262939453125
    8. '	d' → logprob: -17.688262939453125
    9. ' ' → logprob: -18.188262939453125
    10. '_d' → logprob: -18.313262939453125

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4987974029500037e-05
    2. ',x' → logprob: -11.375024795532227
    3. ' ,' → logprob: -11.375024795532227
    4. ')' → logprob: -13.375024795532227
    5. 'x' → logprob: -15.250024795532227
    6. ',
' → logprob: -16.625024795532227
    7. '   ' → logprob: -17.000024795532227
    8. ' ' → logprob: -17.250024795532227
    9. ' x' → logprob: -17.750024795532227
    10. 's' → logprob: -18.625024795532227

Token 274: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4740805923938751
    2. ' x' → logprob: -0.9740805625915527
    3. ')' → logprob: -12.849081039428711
    4. ')x' → logprob: -14.224081039428711
    5. '	x' → logprob: -16.09908103942871
    6. ' ' → logprob: -17.22408103942871
    7. ' ' → logprob: -17.59908103942871
    8. ' )' → logprob: -17.84908103942871
    9. ' 
' → logprob: -18.97408103942871
    10. '"x' → logprob: -18.97408103942871

Token 275: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.25
    3. ')
' → logprob: -16.5
    4. '))' → logprob: -18.875
    5. ')`' → logprob: -20.0
    6. ')#' → logprob: -20.125
    7. ')}' → logprob: -20.25
    8. '),' → logprob: -20.625
    9. ')

' → logprob: -20.625
    10. ')**' → logprob: -21.0

Token 276: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03881926089525223
    2. '
' → logprob: -3.2888193130493164
    3. '```' → logprob: -8.163819313049316
    4. '\n' → logprob: -8.413819313049316
    5. ' if' → logprob: -8.788819313049316
    6. '<|end|>' → logprob: -10.038819313049316
    7. 'print' → logprob: -11.413819313049316
    8. '\
' → logprob: -11.413819313049316
    9. '#' → logprob: -11.538819313049316
    10. '\' → logprob: -11.538819313049316

Token 277: ' Point' (ID: 9971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003177952254191041
    2. ' if' → logprob: -5.753178119659424
    3. 'i' → logprob: -15.503177642822266
    4. 'If' → logprob: -18.003177642822266
    5. '```' → logprob: -18.753177642822266
    6. '#' → logprob: -19.628177642822266
    7. 'I' → logprob: -21.503177642822266
    8. ' i' → logprob: -21.878177642822266
    9. ' If' → logprob: -22.003177642822266
    10. 'ifdef' → logprob: -22.128177642822266

Token 278: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10410764813423157
    2. '_' → logprob: -2.604107618331909
    3. 'd' → logprob: -3.979107618331909
    4. '_d' → logprob: -5.104107856750488
    5. 'if' → logprob: -10.229107856750488
    6. ' _' → logprob: -10.354107856750488
    7. ' ' → logprob: -11.104107856750488
    8. 's' → logprob: -11.479107856750488
    9. '_de' → logprob: -11.979107856750488
    10. ' if' → logprob: -11.979107856750488

Token 279: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.2017030417919159
    2. 'entrée' → logprob: -1.7017030715942383
    3. 'entr' → logprob: -9.076703071594238
    4. ''' → logprob: -9.951703071594238
    5. '_' → logprob: -10.076703071594238
    6. '__' → logprob: -10.701703071594238
    7. '’entrée' → logprob: -10.701703071594238
    8. 'entry' → logprob: -11.451703071594238
    9. ''ex' → logprob: -11.951703071594238
    10. ''ent' → logprob: -11.951703071594238

Token 280: ' du' (ID: 1462)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.062083642929792404
    2. '

' → logprob: -3.8120837211608887
    3. ' if' → logprob: -3.9370837211608887
    4. ' 

' → logprob: -5.062083721160889
    5. '
' → logprob: -5.187083721160889
    6. ' 
' → logprob: -6.687083721160889
    7. '  
' → logprob: -7.062083721160889
    8. '_' → logprob: -7.437083721160889
    9. '  

' → logprob: -7.562083721160889
    10. '    
' → logprob: -7.687083721160889

Token 281: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.21781978011131287
    2. ' programme' → logprob: -1.7178198099136353
    3. 'program' → logprob: -4.217819690704346
    4. ' script' → logprob: -7.092819690704346
    5. 'script' → logprob: -7.592819690704346
    6. ' program' → logprob: -8.592820167541504
    7. 'programm' → logprob: -11.967820167541504
    8. 'programma' → logprob: -12.217820167541504
    9. '_program' → logprob: -12.592820167541504
    10. 'Programme' → logprob: -12.717820167541504

Token 282: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2532908320426941
    2. 'if' → logprob: -1.5032908916473389
    3. '

' → logprob: -6.75329065322876
    4. ' if' → logprob: -9.253291130065918
    5. '
' → logprob: -9.628291130065918
    6. ' 
' → logprob: -10.878291130065918
    7. '  
' → logprob: -11.878291130065918
    8. '    
' → logprob: -13.378291130065918
    9. '```' → logprob: -13.378291130065918
    10. '\n' → logprob: -14.128291130065918

Token 283: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.9361264946837764e-07
    2. ' if' → logprob: -16.25
    3. 'i' → logprob: -18.75
    4. '```' → logprob: -20.625
    5. '
' → logprob: -21.375
    6. '    
' → logprob: -23.75
    7. 'main' → logprob: -23.75
    8. '  
' → logprob: -24.375
    9. ' 
' → logprob: -24.625
    10. '	if' → logprob: -24.875

Token 284: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.022100254893302917
    2. '__' → logprob: -3.8971002101898193
    3. ' ' → logprob: -6.647100448608398
    4. '_' → logprob: -8.897100448608398
    5. ' ' → logprob: -10.147100448608398
    6. ' _' → logprob: -10.272100448608398
    7. ' ' → logprob: -10.647100448608398
    8. ' ‌' → logprob: -12.397100448608398
    9. '_name' → logprob: -12.647100448608398
    10. ' True' → logprob: -12.772100448608398

Token 285: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31035539507865906
    2. ' ==' → logprob: -1.6853554248809814
    3. '==' → logprob: -2.5603554248809814
    4. ' __' → logprob: -6.310355186462402
    5. '_' → logprob: -6.685355186462402
    6. 'name' → logprob: -7.310355186462402
    7. '=' → logprob: -8.185355186462402
    8. '=="' → logprob: -9.810355186462402
    9. ' =' → logprob: -10.685355186462402
    10. '=='' → logprob: -11.185355186462402

Token 286: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.128163257315464e-07
    2. '==' → logprob: -15.5
    3. '_' → logprob: -16.625
    4. '____' → logprob: -17.875
    5. '__.__' → logprob: -18.375
    6. '___' → logprob: -18.875
    7. ' ==' → logprob: -20.125
    8. '__
' → logprob: -20.125
    9. '______' → logprob: -20.125
    10. '__

' → logprob: -20.875

Token 287: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00207590963691473
    2. '==' → logprob: -6.377075672149658
    3. ' ==' → logprob: -8.002076148986816
    4. '=="' → logprob: -10.377076148986816
    5. '_' → logprob: -12.627076148986816
    6. '"' → logprob: -13.627076148986816
    7. '=' → logprob: -13.627076148986816
    8. '___' → logprob: -14.002076148986816
    9. '=='' → logprob: -14.502076148986816
    10. ' __' → logprob: -15.752076148986816

Token 288: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014373159036040306
    2. ''' → logprob: -4.264373302459717
    3. ' "__' → logprob: -8.514372825622559
    4. '__' → logprob: -12.014372825622559
    5. ' '__' → logprob: -12.889372825622559
    6. '"_' → logprob: -15.889372825622559
    7. '"name' → logprob: -15.889372825622559
    8. '"user' → logprob: -16.264373779296875
    9. '("__' → logprob: -17.014373779296875
    10. ''"' → logprob: -17.264373779296875

Token 289: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.512236498361744e-07
    2. 'name' → logprob: -14.500000953674316
    3. ' main' → logprob: -17.625
    4. '_main' → logprob: -19.125
    5. 'ma' → logprob: -21.25
    6. 'm' → logprob: -21.5
    7. '	main' → logprob: -22.375
    8. 'maine' → logprob: -22.375
    9. 'mp' → logprob: -22.625
    10. 'mai' → logprob: -23.5

Token 290: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.12693209946155548
    2. '__' → logprob: -2.126932144165039
    3. '__':
' → logprob: -12.501932144165039
    4. '_' → logprob: -15.251932144165039
    5. '"' → logprob: -17.25193214416504
    6. '__["' → logprob: -17.75193214416504
    7. '__("' → logprob: -18.00193214416504
    8. '___' → logprob: -18.12693214416504
    9. '```' → logprob: -18.87693214416504
    10. '_"' → logprob: -19.25193214416504

Token 291: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1259632259607315
    2. '__' → logprob: -2.5009632110595703
    3. ' "__' → logprob: -3.6259632110595703
    4. ' __' → logprob: -5.75096321105957
    5. ' main' → logprob: -6.12596321105957
    6. ''' → logprob: -6.12596321105957
    7. 'main' → logprob: -6.25096321105957
    8. ' '__' → logprob: -8.87596321105957
    9. ' "' → logprob: -10.00096321105957
    10. '_main' → logprob: -11.00096321105957

Token 292: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.02975604310631752
    2. ' main' → logprob: -3.5297560691833496
    3. '	main' → logprob: -12.154755592346191
    4. '_main' → logprob: -15.654755592346191
    5. '   ' → logprob: -15.779755592346191
    6. '(main' → logprob: -17.279756546020508
    7. ' ' → logprob: -19.154756546020508
    8. '.main' → logprob: -19.279756546020508
    9. 'Main' → logprob: -19.529756546020508
    10. 'maine' → logprob: -19.654756546020508

Token 293: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24638059735298157
    2. '<|end|>' → logprob: -1.9963805675506592
    3. '
' → logprob: -2.621380567550659
    4. ')' → logprob: -5.621380805969238
    5. '\n' → logprob: -6.371380805969238
    6. '```' → logprob: -6.496380805969238
    7. '()
' → logprob: -6.621380805969238
    8. '#' → logprob: -7.371380805969238
    9. '(' → logprob: -7.871380805969238
    10. '<|end|>' → logprob: -8.621380805969238


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 291
Tokens correctement prédits (1ère position, stricte): 100
Tokens correctement prédits (1ère position, avec adaptation): 104
Tokens correctement prédits (top 10): 205
Précision stricte (1ère position): 34.36%
Précision adaptée (1ère position): 35.74%
Précision (top 10): 70.45%
================================================================================
