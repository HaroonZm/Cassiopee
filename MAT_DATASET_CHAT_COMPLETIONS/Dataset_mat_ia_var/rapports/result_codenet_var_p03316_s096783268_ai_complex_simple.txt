================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add

n = int(input())
digits = map(int, (lambda x: list(x))(str(n)))
s = reduce(add, digits)
print("YesNo"[((n % s) != 0)*3:][:3])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123510599136353
    2. 'wrap' → logprob: -0.8623510599136353
    3. 'reduce' → logprob: -3.4873509407043457
    4. 'l' → logprob: -6.112350940704346
    5. ' wraps' → logprob: -6.362350940704346
    6. 'cached' → logprob: -7.612350940704346
    7. 'cache' → logprob: -7.987350940704346
    8. 'cmp' → logprob: -9.112351417541504
    9. '```' → logprob: -9.237351417541504
    10. ' partial' → logprob: -9.487351417541504

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03611566498875618
    2. '(lambda' → logprob: -3.4111156463623047
    3. '.' → logprob: -6.786115646362305
    4. ' (' → logprob: -7.786115646362305
    5. ',' → logprob: -8.036115646362305
    6. 'lambda' → logprob: -9.036115646362305
    7. '```' → logprob: -9.286115646362305
    8. 'a' → logprob: -9.536115646362305
    9. ''' → logprob: -10.036115646362305
    10. '\' → logprob: -10.286115646362305

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01442087721079588
    2. '(
' → logprob: -5.139420986175537
    3. '(lambda' → logprob: -5.389420986175537
    4. 'def' → logprob: -6.639420986175537
    5. ',' → logprob: -7.139420986175537
    6. '\' → logprob: -8.139420509338379
    7. ' ' → logprob: -8.264420509338379
    8. ' (' → logprob: -8.389420509338379
    9. '' → logprob: -9.139420509338379
    10. '
' → logprob: -9.139420509338379

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9289020299911499
    2. ' operator' → logprob: -1.42890202999115
    3. ' itertools' → logprob: -1.55390202999115
    4. ' collections' → logprob: -1.92890202999115
    5. ' os' → logprob: -4.9289021492004395
    6. 'operator' → logprob: -7.4289021492004395
    7. ' sys' → logprob: -8.553901672363281
    8. ' typing' → logprob: -8.553901672363281
    9. 'collections' → logprob: -8.928901672363281
    10. 'math' → logprob: -9.053901672363281

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.044668834656476974
    2. 'import' → logprob: -3.6696689128875732
    3. '.' → logprob: -4.169668674468994
    4. ' ' → logprob: -6.044668674468994
    5. ' .' → logprob: -8.419669151306152
    6. '.import' → logprob: -9.169669151306152
    7. '	import' → logprob: -11.419669151306152
    8. '_import' → logprob: -11.544669151306152
    9. '<|end|>' → logprob: -11.794669151306152
    10. ' Import' → logprob: -13.169669151306152

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.13038945198059082
    2. ' import' → logprob: -2.630389451980591
    3. 'add' → logprob: -3.755389451980591
    4. ' mul' → logprob: -4.005389213562012
    5. ' ' → logprob: -5.505389213562012
    6. 'import' → logprob: -5.755389213562012
    7. 'mul' → logprob: -7.130389213562012
    8. ' item' → logprob: -8.380389213562012
    9. ' icon' → logprob: -10.130389213562012
    10. '_add' → logprob: -10.380389213562012

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2545537054538727
    2. '\' → logprob: -2.62955379486084
    3. '(
' → logprob: -3.25455379486084
    4. '\n' → logprob: -3.25455379486084
    5. ',' → logprob: -3.75455379486084
    6. '#' → logprob: -4.62955379486084
    7. ' ' → logprob: -5.25455379486084
    8. 'def' → logprob: -5.25455379486084
    9. ')' → logprob: -5.50455379486084
    10. '
' → logprob: -5.75455379486084

Token 10: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03048279881477356
    2. '(
' → logprob: -3.905482769012451
    3. '#' → logprob: -5.530482769012451
    4. 'def' → logprob: -6.655482769012451
    5. 'a' → logprob: -6.780482769012451
    6. '\' → logprob: -7.030482769012451
    7. 'result' → logprob: -7.405482769012451
    8. ',' → logprob: -7.530482769012451
    9. '(

' → logprob: -8.65548324584961
    10. '(a' → logprob: -8.90548324584961

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.271315097808838
    2. '_' → logprob: -1.396315097808838
    3. ' =' → logprob: -1.646315097808838
    4. 'u' → logprob: -2.271315097808838
    5. ' ' → logprob: -2.521315097808838
    6. 'umber' → logprob: -3.646315097808838
    7. 'um' → logprob: -3.771315097808838
    8. 'a' → logprob: -3.896315097808838
    9. ',' → logprob: -4.896315097808838
    10. 'umbers' → logprob: -5.396315097808838

Token 12: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01192072220146656
    2. '0' → logprob: -4.886920928955078
    3. '1' → logprob: -6.011920928955078
    4. '10' → logprob: -6.636920928955078
    5. '5' → logprob: -8.636920928955078
    6. ''' → logprob: -9.261920928955078
    7. '20' → logprob: -9.511920928955078
    8. ' '' → logprob: -9.636920928955078
    9. 'int' → logprob: -10.886920928955078
    10. '100' → logprob: -11.136920928955078

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001785112835932523
    2. '(n' → logprob: -9.500178337097168
    3. '()' → logprob: -10.500178337097168
    4. '(input' → logprob: -10.625178337097168
    5. ' (' → logprob: -10.875178337097168
    6. '('' → logprob: -11.625178337097168
    7. '(`' → logprob: -12.000178337097168
    8. '```' → logprob: -13.000178337097168
    9. '(

' → logprob: -13.375178337097168
    10. '<|end|>' → logprob: -13.500178337097168

Token 14: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34575068950653076
    2. ')' → logprob: -1.9707506895065308
    3. '()' → logprob: -2.0957508087158203
    4. '())' → logprob: -3.5957508087158203
    5. '('' → logprob: -6.72075080871582
    6. '(
' → logprob: -7.47075080871582
    7. '))' → logprob: -8.72075080871582
    8. '')' → logprob: -9.09575080871582
    9. '(()' → logprob: -9.47075080871582
    10. '("("' → logprob: -9.59575080871582

Token 15: 'digits' (ID: 135574)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3000141978263855
    2. 'numbers' → logprob: -2.3000142574310303
    3. 'lst' → logprob: -2.9250142574310303
    4. 'total' → logprob: -3.3000142574310303
    5. 'arr' → logprob: -4.050014019012451
    6. 's' → logprob: -4.300014019012451
    7. 'sequence' → logprob: -4.800014019012451
    8. 'data' → logprob: -4.925014019012451
    9. 'a' → logprob: -5.050014019012451
    10. 'nums' → logprob: -5.300014019012451

Token 16: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42129766941070557
    2. ' =' → logprob: -1.7962976694107056
    3. '=' → logprob: -2.546297550201416
    4. '_' → logprob: -2.671297550201416
    5. '(' → logprob: -4.421297550201416
    6. '[:]' → logprob: -5.546297550201416
    7. 's' → logprob: -5.671297550201416
    8. '()' → logprob: -5.796297550201416
    9. '.' → logprob: -6.296297550201416
    10. '[]' → logprob: -6.546297550201416

Token 17: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1942080557346344
    2. 'input' → logprob: -2.1942081451416016
    3. ' list' → logprob: -3.0692081451416016
    4. '[input' → logprob: -4.694208145141602
    5. ' input' → logprob: -5.694208145141602
    6. '[' → logprob: -5.694208145141602
    7. ' [' → logprob: -6.694208145141602
    8. '[list' → logprob: -7.194208145141602
    9. '(input' → logprob: -8.569208145141602
    10. '(list' → logprob: -8.569208145141602

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.46210044622421265
    2. '(' → logprob: -1.0871005058288574
    3. '(lambda' → logprob: -3.4621005058288574
    4. '(str' → logprob: -6.712100505828857
    5. 'int' → logprob: -8.8371000289917
    6. '[int' → logprob: -10.2121000289917
    7. '<int' → logprob: -10.7121000289917
    8. ' (' → logprob: -11.7121000289917
    9. 'lambda' → logprob: -12.2121000289917
    10. '(ord' → logprob: -12.2121000289917

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012685162015259266
    2. '(' → logprob: -4.637685298919678
    3. '(n' → logprob: -6.387685298919678
    4. ')' → logprob: -7.137685298919678
    5. '(user' → logprob: -9.01268482208252
    6. ',input' → logprob: -10.13768482208252
    7. '(line' → logprob: -10.76268482208252
    8. ',' → logprob: -10.88768482208252
    9. '(inputs' → logprob: -11.01268482208252
    10. '(data' → logprob: -11.13768482208252

Token 20: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02014976553618908
    2. ' input' → logprob: -4.2701497077941895
    3. 'list' → logprob: -5.2701497077941895
    4. 'str' → logprob: -7.3951497077941895
    5. ' list' → logprob: -9.145150184631348
    6. ' str' → logprob: -9.770150184631348
    7. '(input' → logprob: -10.395150184631348
    8. ' ' → logprob: -12.270150184631348
    9. ')' → logprob: -12.395150184631348
    10. '[input' → logprob: -13.020150184631348

Token 21: 'lambda' (ID: 35280)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05274996533989906
    2. 'str' → logprob: -3.1777498722076416
    3. 'list' → logprob: -4.802750110626221
    4. ' input' → logprob: -6.927750110626221
    5. ' str' → logprob: -8.177749633789062
    6. ' ' → logprob: -9.552749633789062
    7. '(input' → logprob: -9.552749633789062
    8. '   ' → logprob: -11.052749633789062
    9. '(str' → logprob: -11.052749633789062
    10. ')' → logprob: -11.052749633789062

Token 22: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.074715256690979
    2. 'x' → logprob: -1.449715256690979
    3. 's' → logprob: -1.699715256690979
    4. 'str' → logprob: -2.6997151374816895
    5. ' s' → logprob: -2.8247151374816895
    6. 'input' → logprob: -3.4497151374816895
    7. 'list' → logprob: -3.6997151374816895
    8. ' input' → logprob: -4.1997151374816895
    9. ' str' → logprob: -4.4497151374816895
    10. 'digit' → logprob: -5.4497151374816895

Token 23: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00401714164763689
    2. ' :' → logprob: -5.879017353057861
    3. 'x' → logprob: -7.504017353057861
    4. ':x' → logprob: -7.629017353057861
    5. ' x' → logprob: -8.879016876220703
    6. ':list' → logprob: -11.879016876220703
    7. ':n' → logprob: -12.379016876220703
    8. ':
' → logprob: -12.754016876220703
    9. ')' → logprob: -12.879016876220703
    10. 's' → logprob: -12.879016876220703

Token 24: ' list' (ID: 1562)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6102206110954285
    2. 'str' → logprob: -1.2352206707000732
    3. 'list' → logprob: -2.6102206707000732
    4. ' str' → logprob: -2.9852206707000732
    5. ' x' → logprob: -3.3602206707000732
    6. ' list' → logprob: -5.110220432281494
    7. 'f' → logprob: -7.985220432281494
    8. 'lambda' → logprob: -7.985220432281494
    9. 'input' → logprob: -8.610220909118652
    10. ' f' → logprob: -9.735220909118652

Token 25: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.044423140585422516
    2. '(str' → logprob: -3.2944231033325195
    3. '(' → logprob: -5.4194231033325195
    4. ')(' → logprob: -6.6694231033325195
    5. 'x' → logprob: -8.41942310333252
    6. ')' → logprob: -8.54442310333252
    7. '(map' → logprob: -9.29442310333252
    8. '(input' → logprob: -9.79442310333252
    9. ')x' → logprob: -9.91942310333252
    10. 'str' → logprob: -10.91942310333252

Token 26: '))(' (ID: 72297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3071905374526978
    2. ')))' → logprob: -1.3071905374526978
    3. '(n' → logprob: -2.057190418243408
    4. '(input' → logprob: -2.432190418243408
    5. '))(' → logprob: -2.682190418243408
    6. '(str' → logprob: -2.807190418243408
    7. '))' → logprob: -3.182190418243408
    8. ')(' → logprob: -3.307190418243408
    9. '(x' → logprob: -4.807190418243408
    10. '(' → logprob: -5.057190418243408

Token 27: 'str' (ID: 689)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005497818812727928
    2. 'str' → logprob: -5.755497932434082
    3. ' input' → logprob: -6.380497932434082
    4. '(input' → logprob: -7.505497932434082
    5. ' str' → logprob: -10.130497932434082
    6. '(str' → logprob: -11.255497932434082
    7. ')' → logprob: -11.755497932434082
    8. ' ' → logprob: -12.755497932434082
    9. 'n' → logprob: -13.255497932434082
    10. '   ' → logprob: -13.755497932434082

Token 28: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01852436177432537
    2. 'n' → logprob: -4.018524169921875
    3. '(' → logprob: -8.018524169921875
    4. ')n' → logprob: -11.018524169921875
    5. ' n' → logprob: -11.393524169921875
    6. ' (' → logprob: -11.643524169921875
    7. '	n' → logprob: -13.143524169921875
    8. ')' → logprob: -13.268524169921875
    9. ')(' → logprob: -13.643524169921875
    10. '_n' → logprob: -13.893524169921875

Token 29: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.1553812175989151
    2. ')' → logprob: -2.530381202697754
    3. '))))' → logprob: -2.780381202697754
    4. '))' → logprob: -6.155381202697754
    5. ')n' → logprob: -9.780381202697754
    6. ')))
' → logprob: -11.530381202697754
    7. '))))
' → logprob: -11.655381202697754
    8. '   ' → logprob: -11.905381202697754
    9. ')));' → logprob: -12.155381202697754
    10. '[' → logprob: -12.155381202697754

Token 30: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020013193134218454
    2. '))' → logprob: -7.0020012855529785
    3. ' )' → logprob: -8.252001762390137
    4. 'digits' → logprob: -8.627001762390137
    5. ')
' → logprob: -9.002001762390137
    6. '\n' → logprob: -9.627001762390137
    7. '(n' → logprob: -9.752001762390137
    8. '(' → logprob: -9.752001762390137
    9. '\' → logprob: -10.127001762390137
    10. ' ' → logprob: -10.252001762390137

Token 31: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.07772157341241837
    2. '=' → logprob: -2.82772159576416
    3. 'u' → logprob: -4.82772159576416
    4. ' =' → logprob: -5.07772159576416
    5. 'ums' → logprob: -8.20272159576416
    6. ')' → logprob: -8.32772159576416
    7. '(' → logprob: -8.57772159576416
    8. '_' → logprob: -9.07772159576416
    9. '.' → logprob: -9.57772159576416
    10. ',' → logprob: -9.82772159576416

Token 32: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.20142464339733124
    2. ' reduce' → logprob: -1.7014245986938477
    3. 're' → logprob: -12.576424598693848
    4. 'sum' → logprob: -12.951424598693848
    5. 'redu' → logprob: -13.326424598693848
    6. '.reduce' → logprob: -14.201424598693848
    7. 'list' → logprob: -14.576424598693848
    8. ' ' → logprob: -14.826424598693848
    9. '(re' → logprob: -14.951424598693848
    10. ' sum' → logprob: -15.076424598693848

Token 33: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.006780269090086222
    2. '(' → logprob: -5.00678014755249
    3. '(lambda' → logprob: -9.756780624389648
    4. 'add' → logprob: -12.631780624389648
    5. '(operator' → logprob: -12.881780624389648
    6. ' (' → logprob: -15.131780624389648
    7. '(
' → logprob: -15.256780624389648
    8. ')add' → logprob: -15.631780624389648
    9. '(Add' → logprob: -16.13178062438965
    10. ' add' → logprob: -16.25678062438965

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005530542694032192
    2. ',d' → logprob: -5.25553035736084
    3. ' ,' → logprob: -8.13053035736084
    4. '),' → logprob: -14.63053035736084
    5. ',
' → logprob: -14.75553035736084
    6. ')' → logprob: -15.00553035736084
    7. ',s' → logprob: -15.25553035736084
    8. 'digits' → logprob: -16.255531311035156
    9. '`,' → logprob: -16.505531311035156
    10. ' digits' → logprob: -16.755531311035156

Token 35: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.10024624317884445
    2. 'digits' → logprob: -2.3502461910247803
    3. ')' → logprob: -10.72524642944336
    4. '_digits' → logprob: -12.10024642944336
    5. ' )' → logprob: -12.22524642944336
    6. 'igits' → logprob: -12.85024642944336
    7. 'Digits' → logprob: -13.60024642944336
    8. ' ' → logprob: -14.10024642944336
    9. 'd' → logprob: -14.85024642944336
    10. ' ' → logprob: -14.85024642944336

Token 36: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16023357212543488
    2. '))' → logprob: -1.9102336168289185
    3. ')))' → logprob: -12.535233497619629
    4. ')
' → logprob: -13.410233497619629
    5. '),' → logprob: -13.660233497619629
    6. ' )' → logprob: -13.660233497619629
    7. '))
' → logprob: -14.035233497619629
    8. ' ))' → logprob: -15.285233497619629
    9. ')s' → logprob: -15.535233497619629
    10. ',' → logprob: -15.910233497619629

Token 37: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024839844554662704
    2. 'print' → logprob: -6.37748384475708
    3. '()' → logprob: -8.377484321594238
    4. '#' → logprob: -8.377484321594238
    5. 's' → logprob: -9.752484321594238
    6. '<|end|>' → logprob: -9.877484321594238
    7. '(' → logprob: -10.252484321594238
    8. ')
' → logprob: -10.252484321594238
    9. '```' → logprob: -10.752484321594238
    10. '(s' → logprob: -10.752484321594238

Token 38: '("' (ID: 568)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.07903783768415451
    2. '(' → logprob: -2.57903790473938
    3. 's' → logprob: -8.9540376663208
    4. '()' → logprob: -11.7040376663208
    5. '('' → logprob: -12.4540376663208
    6. ' (' → logprob: -13.0790376663208
    7. '((' → logprob: -13.8290376663208
    8. '(`' → logprob: -14.0790376663208
    9. '(sum' → logprob: -14.3290376663208
    10. '("("' → logprob: -14.3290376663208

Token 39: 'Yes' (ID: 13022)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08024183660745621
    2. '",' → logprob: -2.8302419185638428
    3. 'The' → logprob: -5.330241680145264
    4. '{s' → logprob: -5.455241680145264
    5. '{' → logprob: -6.205241680145264
    6. '")' → logprob: -6.330241680145264
    7. 'Sum' → logprob: -6.455241680145264
    8. '"' → logprob: -6.455241680145264
    9. '{}".' → logprob: -7.580241680145264
    10. '"s' → logprob: -8.080242156982422

Token 40: 'No' (ID: 3160)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04031963273882866
    2. '")' → logprob: -3.7903196811676025
    3. ' if' → logprob: -4.165319442749023
    4. 'if' → logprob: -6.665319442749023
    5. ')' → logprob: -10.915319442749023
    6. ' "' → logprob: -11.040319442749023
    7. '!' → logprob: -11.165319442749023
    8. '!")' → logprob: -11.665319442749023
    9. ''' → logprob: -11.790319442749023
    10. '!"' → logprob: -11.915319442749023

Token 41: '"[' (ID: 95855)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1435304880142212
    2. '")' → logprob: -2.2685303688049316
    3. ' if' → logprob: -4.018530368804932
    4. 'if' → logprob: -5.143530368804932
    5. 'Yes' → logprob: -5.768530368804932
    6. ')' → logprob: -6.768530368804932
    7. ' Yes' → logprob: -7.643530368804932
    8. 'If' → logprob: -7.768530368804932
    9. ' "' → logprob: -7.893530368804932
    10. ' ")' → logprob: -8.51853084564209

Token 42: '((' (ID: 2054)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3672005832195282
    2. ' s' → logprob: -1.7422006130218506
    3. '1' → logprob: -2.4922006130218506
    4. ' ' → logprob: -4.7422003746032715
    5. '-' → logprob: -4.8672003746032715
    6. '2' → logprob: -5.2422003746032715
    7. '4' → logprob: -5.6172003746032715
    8. '0' → logprob: -5.7422003746032715
    9. 'not' → logprob: -5.8672003746032715
    10. '7' → logprob: -6.1172003746032715

Token 43: 'n' (ID: 77)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0017621672013774514
    2. ' s' → logprob: -6.876762390136719
    3. 'n' → logprob: -8.501762390136719
    4. '(s' → logprob: -8.626762390136719
    5. '1' → logprob: -9.376762390136719
    6. '9' → logprob: -10.001762390136719
    7. '0' → logprob: -10.001762390136719
    8. ''s' → logprob: -10.751762390136719
    9. '10' → logprob: -11.126762390136719
    10. ')' → logprob: -11.126762390136719

Token 44: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5326473116874695
    2. '%s' → logprob: -1.5326473712921143
    3. ' %' → logprob: -1.6576473712921143
    4. 's' → logprob: -5.657647132873535
    5. ')' → logprob: -7.157647132873535
    6. ' ' → logprob: -7.157647132873535
    7. '==' → logprob: -7.782647132873535
    8. '%i' → logprob: -8.907647132873535
    9. '-' → logprob: -9.282647132873535
    10. ')s' → logprob: -9.407647132873535

Token 45: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0024926606565713882
    2. ' s' → logprob: -6.502492427825928
    3. '3' → logprob: -8.127492904663086
    4. '10' → logprob: -8.627492904663086
    5. '9' → logprob: -8.752492904663086
    6. '2' → logprob: -8.877492904663086
    7. '5' → logprob: -9.627492904663086
    8. '7' → logprob: -10.127492904663086
    9. '6' → logprob: -10.252492904663086
    10. '1' → logprob: -11.127492904663086

Token 46: ')' (ID: 8)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5985947847366333
    2. '==' → logprob: -1.3485947847366333
    3. ')' → logprob: -2.2235946655273438
    4. ' !=' → logprob: -2.7235946655273438
    5. ' ==' → logprob: -4.598594665527344
    6. ')!=' → logprob: -5.348594665527344
    7. ' )' → logprob: -7.348594665527344
    8. ')==' → logprob: -7.473594665527344
    9. '>' → logprob: -7.598594665527344
    10. ' ' → logprob: -8.973594665527344

Token 47: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.21562427282333374
    2. ' !=' → logprob: -2.0906243324279785
    3. '==' → logprob: -2.9656243324279785
    4. ')' → logprob: -4.5906243324279785
    5. ' ==' → logprob: -6.0906243324279785
    6. '>' → logprob: -6.4656243324279785
    7. ')!=' → logprob: -6.4656243324279785
    8. ']!=' → logprob: -7.2156243324279785
    9. ')]' → logprob: -7.4656243324279785
    10. ' )' → logprob: -7.5906243324279785

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043000686913728714
    2. ' ' → logprob: -3.1680006980895996
    3. ' ' → logprob: -15.168000221252441
    4. '  ' → logprob: -15.293000221252441
    5. '1' → logprob: -15.480500221252441
    6. '   ' → logprob: -15.543000221252441
    7. '=' → logprob: -15.918000221252441
    8. ')' → logprob: -16.355501174926758
    9. '۰' → logprob: -16.730501174926758
    10. 's' → logprob: -16.793001174926758

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002619318547658622
    2. ' ' → logprob: -8.250262260437012
    3. '1' → logprob: -15.687762260437012
    4. '  ' → logprob: -16.625261306762695
    5. ')' → logprob: -16.937761306762695
    6. 'zero' → logprob: -17.250261306762695
    7. '   ' → logprob: -17.312761306762695
    8. '۰' → logprob: -17.500261306762695
    9. '```' → logprob: -17.750261306762695
    10. 'True' → logprob: -17.812761306762695

Token 50: ')*' (ID: 11043)
  Prédit: '::'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '::' → logprob: -0.16584977507591248
    2. ']' → logprob: -2.9158496856689453
    3. ':' → logprob: -3.0408496856689453
    4. '])' → logprob: -4.040849685668945
    5. ']:' → logprob: -4.290849685668945
    6. ')::' → logprob: -4.540849685668945
    7. ':]' → logprob: -5.790849685668945
    8. ']*' → logprob: -6.665849685668945
    9. ')' → logprob: -6.790849685668945
    10. '*' → logprob: -7.290849685668945

Token 51: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0011156888213008642
    2. '4' → logprob: -6.876115798950195
    3. ' ' → logprob: -10.251115798950195
    4. '6' → logprob: -11.126115798950195
    5. '1' → logprob: -11.376115798950195
    6. '2' → logprob: -11.501115798950195
    7. '5' → logprob: -11.751115798950195
    8. '   ' → logprob: -14.126115798950195
    9. '  ' → logprob: -14.251115798950195
    10. '

' → logprob: -14.626115798950195

Token 52: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.042588137090206146
    2. '])' → logprob: -3.542588233947754
    3. ':]' → logprob: -5.042588233947754
    4. ']' → logprob: -6.292588233947754
    5. '4' → logprob: -6.792588233947754
    6. '-' → logprob: -7.292588233947754
    7. ' :' → logprob: -7.417588233947754
    8. '::' → logprob: -7.667588233947754
    9. ']:' → logprob: -7.667588233947754
    10. '3' → logprob: -8.292588233947754

Token 53: '][:' (ID: 63357)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.7495489716529846
    2. '6' → logprob: -1.3745489120483398
    3. '(None' → logprob: -2.24954891204834
    4. '((' → logprob: -2.37454891204834
    5. '9' → logprob: -3.12454891204834
    6. ' None' → logprob: -4.49954891204834
    7. ']' → logprob: -5.49954891204834
    8. '8' → logprob: -5.87454891204834
    9. '])' → logprob: -5.87454891204834
    10. '(' → logprob: -6.12454891204834

Token 54: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.006766291335225105
    2. '2' → logprob: -5.006766319274902
    3. '1' → logprob: -11.006766319274902
    4. '4' → logprob: -11.256766319274902
    5. '5' → logprob: -12.006766319274902
    6. '6' → logprob: -12.756766319274902
    7. '"' → logprob: -13.006766319274902
    8. ' ' → logprob: -13.319266319274902
    9. '   ' → logprob: -13.631766319274902
    10. '  ' → logprob: -14.006766319274902

Token 55: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03429097682237625
    2. ')' → logprob: -3.4092910289764404
    3. ']' → logprob: -8.15929126739502
    4. ')])' → logprob: -8.65929126739502
    5. ')]' → logprob: -9.65929126739502
    6. '))' → logprob: -10.03429126739502
    7. ' ])' → logprob: -10.65929126739502
    8. '])
' → logprob: -11.65929126739502
    9. '"])' → logprob: -11.78429126739502
    10. ']))' → logprob: -12.03429126739502


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 53
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 34
Précision stricte (1ère position): 28.30%
Précision adaptée (1ère position): 28.30%
Précision (top 10): 64.15%
================================================================================
