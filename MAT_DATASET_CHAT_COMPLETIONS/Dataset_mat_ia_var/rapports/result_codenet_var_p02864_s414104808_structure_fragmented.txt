================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(2147483647)
INF = float("inf")
MOD = 10 ** 9 + 7

def get_input():
    return sys.stdin.readline().rstrip()

def parse_n_and_k(input_fn):
    line = input_fn()
    return map(int, line.split())

def parse_heights(input_fn, n):
    line = input_fn()
    heights = list(map(int, line.split()))
    return [0] + heights

def create_dp_table(n, k):
    return [[INF] * (n - k + 1) for _ in range(n + 1)]

def initialize_dp(dp):
    dp[0][0] = 0

def compute_cost(H, x, x0):
    return max(0, H[x] - H[x0])

def update_dp_cell(dp, H, x, y):
    candidates = [dp[x0][y - 1] + compute_cost(H, x, x0) for x0 in range(x)]
    dp[x][y] = min(candidates)

def fill_dp(dp, H, n, k):
    for x in range(1, n + 1):
        for y in range(1, n - k + 1):
            update_dp_cell(dp, H, x, y)

def find_minimum(dp, n, k):
    values = [dp[x][n - k] for x in range(n + 1)]
    return min(values)

def print_result(result):
    print(result)

def resolve():
    n, k = parse_n_and_k(get_input)
    H = parse_heights(get_input, n)
    dp = create_dp_table(n, k)
    initialize_dp(dp)
    fill_dp(dp, H, n, k)
    result = find_minimum(dp, n, k)
    print_result(result)

resolve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2127087504486553e-05
    2. ' .' → logprob: -11.875021934509277
    3. '.`' → logprob: -13.125021934509277
    4. '[' → logprob: -13.250021934509277
    5. '.readline' → logprob: -13.250021934509277
    6. '.import' → logprob: -13.875021934509277
    7. '.user' → logprob: -14.000021934509277
    8. '."""' → logprob: -14.125021934509277
    9. '.​' → logprob: -14.250021934509277
    10. '.[' → logprob: -14.625021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5748613476753235
    2. '_trace' → logprob: -1.5748612880706787
    3. ' _' → logprob: -3.1998612880706787
    4. '_exc' → logprob: -3.3248612880706787
    5. '_version' → logprob: -3.5748612880706787
    6. '_ex' → logprob: -3.5748612880706787
    7. '_encoding' → logprob: -3.6998612880706787
    8. 'trace' → logprob: -4.824861526489258
    9. '_default' → logprob: -5.449861526489258
    10. '_set' → logprob: -5.449861526489258

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00019209683523513377
    2. 'ursive' → logprob: -8.875191688537598
    3. 'urs' → logprob: -11.000191688537598
    4. 'ur' → logprob: -11.750191688537598
    5. 'limit' → logprob: -12.000191688537598
    6. 'urf' → logprob: -12.125191688537598
    7. '_limit' → logprob: -12.625191688537598
    8. 'urse' → logprob: -13.000191688537598
    9. 'ursor' → logprob: -13.000191688537598
    10. 'ursively' → logprob: -13.250191688537598

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15307803452014923
    2. 'limit' → logprob: -2.028078079223633
    3. '_depth' → logprob: -4.653078079223633
    4. '_' → logprob: -7.903078079223633
    5. 'depth' → logprob: -9.653078079223633
    6. ' limit' → logprob: -10.028078079223633
    7. '_rate' → logprob: -10.153078079223633
    8. '_error' → logprob: -10.403078079223633
    9. '_lim' → logprob: -10.653078079223633
    10. '_max' → logprob: -10.778078079223633

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3557529857498594e-05
    2. '(
' → logprob: -11.37502384185791
    3. ' (' → logprob: -11.87502384185791
    4. '(

' → logprob: -12.75002384185791
    5. '((' → logprob: -14.50002384185791
    6. '```' → logprob: -14.75002384185791
    7. '("("' → logprob: -14.75002384185791
    8. '('' → logprob: -15.50002384185791
    9. '(.' → logprob: -15.62502384185791
    10. '(
' → logprob: -15.75002384185791

Token 9: '214' (ID: 21401)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07892151176929474
    2. '100' → logprob: -2.5789215564727783
    3. '300' → logprob: -11.2039213180542
    4. ' ' → logprob: -11.8289213180542
    5. '500' → logprob: -12.3289213180542
    6. '999' → logprob: -12.5789213180542
    7. '200' → logprob: -14.3289213180542
    8. '150' → logprob: -14.3289213180542
    9. '1' → logprob: -14.7039213180542
    10. '   ' → logprob: -14.9539213180542

Token 10: '748' (ID: 39478)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.35106566548347473
    2. '748' → logprob: -1.2260656356811523
    3. '74' → logprob: -6.101065635681152
    4. '73' → logprob: -8.726065635681152
    5. '72' → logprob: -10.101065635681152
    6. '78' → logprob: -10.351065635681152
    7. '747' → logprob: -10.476065635681152
    8. '738' → logprob: -10.601065635681152
    9. '743' → logprob: -10.851065635681152
    10. '83' → logprob: -10.851065635681152

Token 11: '364' (ID: 30673)
  Prédit: '364'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '364' → logprob: -0.00012773419439326972
    2. '363' → logprob: -9.125127792358398
    3. '3' → logprob: -11.000127792358398
    4. '36' → logprob: -14.000127792358398
    5. '367' → logprob: -14.250127792358398
    6. '366' → logprob: -15.125127792358398
    7. '```' → logprob: -16.2501277923584
    8. '362' → logprob: -16.3751277923584
    9. '365' → logprob: -17.1251277923584
    10. '{' → logprob: -17.2501277923584

Token 12: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ')' → logprob: -19.125
    3. '8' → logprob: -19.125
    4. '6' → logprob: -20.75
    5. '2' → logprob: -21.875
    6. '9' → logprob: -24.0
    7. ' ' → logprob: -24.0
    8. '))' → logprob: -24.5
    9. '৭' → logprob: -24.625
    10. '```' → logprob: -24.625

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '))' → logprob: -14.250000953674316
    3. ' )' → logprob: -14.750000953674316
    4. ')
' → logprob: -16.375001907348633
    5. '`)' → logprob: -17.625001907348633
    6. '')' → logprob: -17.750001907348633
    7. ')

' → logprob: -18.125001907348633
    8. ')))' → logprob: -18.250001907348633
    9. ')`' → logprob: -18.250001907348633
    10. '）' → logprob: -18.500001907348633

Token 14: 'INF' (ID: 64358)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9544928073883057
    2. '
' → logprob: -1.2044928073883057
    3. '\' → logprob: -1.5794928073883057
    4. '' → logprob: -3.2044928073883057
    5. '```' → logprob: -3.3294928073883057
    6. '#' → logprob: -4.829492568969727
    7. '
' → logprob: -5.079492568969727
    8. ')' → logprob: -5.204492568969727
    9. 'import' → logprob: -5.829492568969727
    10. '  
' → logprob: -6.329492568969727

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9861841797828674
    2. '_' → logprob: -1.1111841201782227
    3. '=' → logprob: -1.7361841201782227
    4. '.' → logprob: -2.4861841201782227
    5. ')' → logprob: -4.236184120178223
    6. ' _' → logprob: -5.111184120178223
    7. ' .' → logprob: -5.486184120178223
    8. ' ' → logprob: -5.611184120178223
    9. ',' → logprob: -5.986184120178223
    10. '>' → logprob: -6.611184120178223

Token 16: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2129504382610321
    2. ' float' → logprob: -2.0879504680633545
    3. '10' → logprob: -3.0879504680633545
    4. 'float' → logprob: -3.8379504680633545
    5. ' int' → logprob: -7.837950229644775
    6. 'int' → logprob: -8.837950706481934
    7. '1' → logprob: -9.212950706481934
    8. '100' → logprob: -10.462950706481934
    9. '214' → logprob: -10.962950706481934
    10. '2' → logprob: -11.712950706481934

Token 17: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0061968229711055756
    2. '(' → logprob: -5.131196975708008
    3. '("' → logprob: -8.756196975708008
    4. '('.')' → logprob: -10.631196975708008
    5. '.' → logprob: -11.006196975708008
    6. ''' → logprob: -11.256196975708008
    7. '(\'' → logprob: -11.631196975708008
    8. '('_' → logprob: -11.881196975708008
    9. '('.' → logprob: -11.881196975708008
    10. '32' → logprob: -11.881196975708008

Token 18: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.3357607126235962
    2. 'inf' → logprob: -1.4607607126235962
    3. ''' → logprob: -2.9607605934143066
    4. ''ins' → logprob: -7.710760593414307
    5. '"' → logprob: -7.960760593414307
    6. ''inc' → logprob: -8.710761070251465
    7. ''im' → logprob: -9.585761070251465
    8. ''i' → logprob: -9.960761070251465
    9. ''information' → logprob: -10.210761070251465
    10. 'INF' → logprob: -10.335761070251465

Token 19: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.04416906461119652
    2. ')' → logprob: -3.1691689491271973
    3. ')")' → logprob: -6.794168949127197
    4. '"' → logprob: -10.169169425964355
    5. ')"' → logprob: -12.044169425964355
    6. ' )' → logprob: -13.794169425964355
    7. '}")' → logprob: -14.044169425964355
    8. ' ")' → logprob: -14.544169425964355
    9. '()' → logprob: -14.919169425964355
    10. '')' → logprob: -15.044169425964355

Token 20: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5084798336029053
    2. '
' → logprob: -1.1334798336029053
    3. '\' → logprob: -3.8834798336029053
    4. '

' → logprob: -4.133480072021484
    5. '```' → logprob: -4.133480072021484
    6. '\n' → logprob: -4.633480072021484
    7. '
' → logprob: -5.383480072021484
    8. '' → logprob: -5.383480072021484
    9. 'n' → logprob: -7.008480072021484
    10. '#' → logprob: -7.258480072021484

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14922185242176056
    2. '=' → logprob: -2.024221897125244
    3. ' ' → logprob: -5.274221897125244
    4. '_' → logprob: -7.149221897125244
    5. ')' → logprob: -8.274221420288086
    6. '<|end|>' → logprob: -8.524221420288086
    7. ' =)' → logprob: -9.899221420288086
    8. ' )' → logprob: -9.899221420288086
    9. '.' → logprob: -11.399221420288086
    10. ' _' → logprob: -11.774221420288086

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07007259875535965
    2. '10' → logprob: -2.820072650909424
    3. '100' → logprob: -4.820072650909424
    4. '1' → logprob: -12.445072174072266
    5. 'int' → logprob: -14.320072174072266
    6. ' (' → logprob: -15.070072174072266
    7. '998' → logprob: -15.195072174072266
    8. ' int' → logprob: -15.445072174072266
    9. '2' → logprob: -15.945072174072266
    10. '0' → logprob: -15.945072174072266

Token 23: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01120520755648613
    2. '100' → logprob: -4.511205196380615
    3. ' ' → logprob: -8.886205673217773
    4. '998' → logprob: -11.261205673217773
    5. '1' → logprob: -12.011205673217773
    6. 'int' → logprob: -16.636205673217773
    7. '(' → logprob: -17.011205673217773
    8. '2' → logprob: -17.261205673217773
    9. '999' → logprob: -17.511205673217773
    10. '123' → logprob: -18.386205673217773

Token 24: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.000953502138145268
    2. '**' → logprob: -7.125953674316406
    3. '09' → logprob: -8.875953674316406
    4. ' ' → logprob: -12.250953674316406
    5. '```' → logprob: -12.625953674316406
    6. '7' → logprob: -15.000953674316406
    7. '009' → logprob: -15.375953674316406
    8. ' **' → logprob: -16.000953674316406
    9. '+' → logprob: -16.125953674316406
    10. '``' → logprob: -16.250953674316406

Token 25: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -16.375
    3. ' ' → logprob: -17.25
    4. '```' → logprob: -20.0
    5. '+' → logprob: -20.25
    6. '10' → logprob: -20.375
    7. '９' → logprob: -21.25
    8. '18' → logprob: -21.875
    9. '19' → logprob: -22.875
    10. '**' → logprob: -23.25

Token 26: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -20.0
    3. ' ' → logprob: -21.375
    4. '```' → logprob: -22.25
    5. '18' → logprob: -22.625
    6. '９' → logprob: -22.875
    7. '10' → logprob: -22.875
    8. '8' → logprob: -24.5
    9. '19' → logprob: -24.75
    10. '+' → logprob: -25.125

Token 27: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005936028435826302
    2. ' +' → logprob: -5.130936145782471
    3. '7' → logprob: -12.130935668945312
    4. '+
' → logprob: -14.380935668945312
    5. '＋' → logprob: -14.755935668945312
    6. '+

' → logprob: -15.255935668945312
    7. ' ' → logprob: -15.630935668945312
    8. ' +
' → logprob: -15.755935668945312
    9. ' plus' → logprob: -16.380935668945312
    10. 'plus' → logprob: -16.755935668945312

Token 28: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '+' → logprob: -16.875
    4. '```' → logprob: -18.375
    5. '   ' → logprob: -19.0
    6. '  ' → logprob: -20.375
    7. '７' → logprob: -20.375
    8. '07' → logprob: -20.8125
    9. ' ' → logprob: -20.875
    10. '9' → logprob: -21.0

Token 29: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '７' → logprob: -20.375
    4. '```' → logprob: -20.375
    5. '+' → logprob: -20.75
    6. '07' → logprob: -21.625
    7. '   ' → logprob: -21.75
    8. '

' → logprob: -22.0
    9. '۷' → logprob: -22.25
    10. '٧' → logprob: -23.25

Token 30: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44227591156959534
    2. '

' → logprob: -1.692275881767273
    3. '' → logprob: -2.8172760009765625
    4. '\n' → logprob: -2.9422760009765625
    5. '```' → logprob: -3.9422760009765625
    6. 'def' → logprob: -4.4422760009765625
    7. '
' → logprob: -4.5672760009765625
    8. '\' → logprob: -4.6922760009765625
    9. '


' → logprob: -6.1922760009765625
    10. '`' → logprob: -6.3172760009765625

Token 31: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002538086613640189
    2. '
' → logprob: -6.877538204193115
    3. 'n' → logprob: -7.002538204193115
    4. '```' → logprob: -8.252537727355957
    5. '\n' → logprob: -9.002537727355957
    6. 'class' → logprob: -10.002537727355957
    7. '\' → logprob: -10.377537727355957
    8. 'a' → logprob: -10.377537727355957
    9. 'A' → logprob: -11.127537727355957
    10. 'from' → logprob: -11.377537727355957

Token 32: ' get' (ID: 717)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.554726243019104
    2. ' ' → logprob: -0.929726243019104
    3. ' solve' → logprob: -5.4297261238098145
    4. ' f' → logprob: -5.6797261238098145
    5. ' main' → logprob: -5.8047261238098145
    6. ' factor' → logprob: -6.3047261238098145
    7. ' factorial' → logprob: -6.3047261238098145
    8. ' a' → logprob: -6.3047261238098145
    9. ' process' → logprob: -6.4297261238098145
    10. ' space' → logprob: -6.4297261238098145

Token 33: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8352959156036377
    2. '_max' → logprob: -0.8352959156036377
    3. '_distance' → logprob: -3.5852959156036377
    4. '_path' → logprob: -4.710295677185059
    5. '_dp' → logprob: -4.710295677185059
    6. '_min' → logprob: -4.835295677185059
    7. '_sum' → logprob: -4.960295677185059
    8. '_input' → logprob: -4.960295677185059
    9. '_answer' → logprob: -4.960295677185059
    10. '_depth' → logprob: -5.085295677185059

Token 34: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4101981520652771
    2. '(' → logprob: -1.4101982116699219
    3. '()' → logprob: -2.410198211669922
    4. '_' → logprob: -6.660198211669922
    5. '_line' → logprob: -8.535198211669922
    6. '()(' → logprob: -8.660198211669922
    7. '("("' → logprob: -9.035198211669922
    8. '```' → logprob: -9.285198211669922
    9. '_input' → logprob: -9.535198211669922
    10. ' ()' → logprob: -9.785198211669922

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05487021058797836
    2. ' return' → logprob: -3.554870128631592
    3. '()' → logprob: -5.054870128631592
    4. '    
' → logprob: -5.554870128631592
    5. '\n' → logprob: -5.804870128631592
    6. '\' → logprob: -6.179870128631592
    7. ' ' → logprob: -6.179870128631592
    8. '(' → logprob: -6.429870128631592
    9. '    ' → logprob: -6.554870128631592
    10. 'return' → logprob: -6.929870128631592

Token 36: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25284045934677124
    2. ' return' → logprob: -1.627840518951416
    3. '   ' → logprob: -3.627840518951416
    4. 'input' → logprob: -8.502840042114258
    5. 'data' → logprob: -9.252840042114258
    6. 'n' → logprob: -9.752840042114258
    7. ' input' → logprob: -10.877840042114258
    8. ' ' → logprob: -11.502840042114258
    9. 'ret' → logprob: -11.502840042114258
    10. 'try' → logprob: -11.627840042114258

Token 37: ' sys' (ID: 12228)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8293624520301819
    2. ' input' → logprob: -1.204362392425537
    3. ' sys' → logprob: -1.829362392425537
    4. ' map' → logprob: -3.079362392425537
    5. ' int' → logprob: -3.204362392425537
    6. 'input' → logprob: -5.079362392425537
    7. 'list' → logprob: -5.079362392425537
    8. 'int' → logprob: -6.079362392425537
    9. 'sys' → logprob: -7.079362392425537
    10. 'map' → logprob: -7.579362392425537

Token 38: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00016861737822182477
    2. '.' → logprob: -8.750168800354004
    3. '.stdout' → logprob: -11.875168800354004
    4. '.readline' → logprob: -13.250168800354004
    5. '.std' → logprob: -14.000168800354004
    6. '.argv' → logprob: -15.125168800354004
    7. 'stdin' → logprob: -16.125167846679688
    8. '.st' → logprob: -16.250167846679688
    9. ' stdin' → logprob: -16.750167846679688
    10. '.input' → logprob: -17.250167846679688

Token 39: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002968311309814453
    2. '.read' → logprob: -6.5029683113098145
    3. '.' → logprob: -6.6279683113098145
    4. '.readlines' → logprob: -9.002967834472656
    5. '.buffer' → logprob: -11.377967834472656
    6. 'read' → logprob: -12.627967834472656
    7. '.Read' → logprob: -13.377967834472656
    8. '<|end|>' → logprob: -13.877967834472656
    9. ' readline' → logprob: -14.252967834472656
    10. ' .' → logprob: -14.752967834472656

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3132711350917816
    2. '()' → logprob: -1.313271164894104
    3. '(' → logprob: -12.313271522521973
    4. '()
' → logprob: -13.438271522521973
    5. '()

' → logprob: -13.688271522521973
    6. '()\' → logprob: -14.563271522521973
    7. ' ()' → logprob: -14.938271522521973
    8. '()(' → logprob: -15.188271522521973
    9. ' ().' → logprob: -15.188271522521973
    10. '()<' → logprob: -15.813271522521973

Token 41: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.07889022678136826
    2. 'rstrip' → logprob: -2.578890323638916
    3. ' strip' → logprob: -15.578889846801758
    4. 'rst' → logprob: -15.828889846801758
    5. 'str' → logprob: -16.578889846801758
    6. '_strip' → logprob: -17.203889846801758
    7. 'split' → logprob: -17.828889846801758
    8. 'stripe' → logprob: -18.078889846801758
    9. 'decode' → logprob: -18.328889846801758
    10. 'r' → logprob: -18.328889846801758

Token 42: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0016726837493479252
    2. '()

' → logprob: -7.376672744750977
    3. '(' → logprob: -7.626672744750977
    4. '()
' → logprob: -7.876672744750977
    5. '()\' → logprob: -8.751672744750977
    6. '(
' → logprob: -12.251672744750977
    7. '\' → logprob: -12.376672744750977
    8. '\n' → logprob: -12.876672744750977
    9. 'def' → logprob: -13.376672744750977
    10. '().' → logprob: -14.001672744750977

Token 43: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0035058727953583
    2. '\' → logprob: -6.128505706787109
    3. '
' → logprob: -7.628505706787109
    4. '\n' → logprob: -7.753505706787109
    5. '```' → logprob: -8.75350570678711
    6. 'n' → logprob: -9.75350570678711
    7. '

' → logprob: -10.12850570678711
    8. 'd' → logprob: -10.25350570678711
    9. 'class' → logprob: -10.87850570678711
    10. '' → logprob: -11.00350570678711

Token 44: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.027782000601291656
    2. ' solve' → logprob: -4.277781963348389
    3. ' dfs' → logprob: -4.777781963348389
    4. ' ' → logprob: -5.652781963348389
    5. ' factorial' → logprob: -8.527782440185547
    6. ' max' → logprob: -8.527782440185547
    7. ' bfs' → logprob: -8.652782440185547
    8. ' get' → logprob: -8.902782440185547
    9. ' calculate' → logprob: -9.152782440185547
    10. ' resolve' → logprob: -9.277782440185547

Token 45: '_n' (ID: 2170)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.2298940122127533
    2. '_line' → logprob: -1.8548940420150757
    3. '()' → logprob: -3.729893922805786
    4. '(' → logprob: -4.854894161224365
    5. '_' → logprob: -4.854894161224365
    6. '_int' → logprob: -5.229894161224365
    7. '_data' → logprob: -6.604894161224365
    8. '_list' → logprob: -8.479893684387207
    9. ')' → logprob: -8.479893684387207
    10. '_tokens' → logprob: -8.604893684387207

Token 46: '_and' (ID: 18645)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36259549856185913
    2. 'um' → logprob: -1.862595558166504
    3. 'umber' → logprob: -2.112595558166504
    4. 'umbers' → logprob: -4.612595558166504
    5. '_' → logprob: -4.987595558166504
    6. 'ext' → logprob: -5.487595558166504
    7. 'ame' → logprob: -6.112595558166504
    8. '(' → logprob: -6.487595558166504
    9. '())' → logprob: -6.987595558166504
    10. '_int' → logprob: -7.362595558166504

Token 47: '_k' (ID: 11637)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.41761913895606995
    2. '_k' → logprob: -1.2926191091537476
    3. 'k' → logprob: -4.042619228363037
    4. '_a' → logprob: -4.542619228363037
    5. '_values' → logprob: -5.292619228363037
    6. '_arr' → logprob: -5.292619228363037
    7. '_s' → logprob: -5.417619228363037
    8. '_list' → logprob: -5.542619228363037
    9. 'm' → logprob: -5.792619228363037
    10. '_q' → logprob: -5.792619228363037

Token 48: '(input' (ID: 10054)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004610626492649317
    2. '(' → logprob: -5.629610538482666
    3. '()' → logprob: -7.129610538482666
    4. ' ():' → logprob: -9.004611015319824
    5. '():
' → logprob: -9.879611015319824
    6. '(line' → logprob: -11.504611015319824
    7. '):' → logprob: -12.129611015319824
    8. ' ()' → logprob: -12.254611015319824
    9. '():

' → logprob: -12.754611015319824
    10. '("("' → logprob: -13.504611015319824

Token 49: '_fn' (ID: 34804)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3889386057853699
    2. '()' → logprob: -1.8889386653900146
    3. '_line' → logprob: -2.6389386653900146
    4. ')' → logprob: -3.0139386653900146
    5. '():' → logprob: -3.6389386653900146
    6. '_' → logprob: -5.1389384269714355
    7. 's' → logprob: -5.2639384269714355
    8. '):
' → logprob: -5.5139384269714355
    9. '_string' → logprob: -6.1389384269714355
    10. '_str' → logprob: -6.2639384269714355

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17451252043247223
    2. '():' → logprob: -2.4245126247406006
    3. '()' → logprob: -2.7995126247406006
    4. ')' → logprob: -4.5495123863220215
    5. ' ):' → logprob: -9.92451286315918
    6. '())' → logprob: -10.42451286315918
    7. '):
' → logprob: -10.42451286315918
    8. '():
' → logprob: -10.67451286315918
    9. ' ():' → logprob: -10.79951286315918
    10. '(' → logprob: -10.92451286315918

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014596158638596535
    2. '()' → logprob: -4.764595985412598
    3. '():' → logprob: -6.389595985412598
    4. '(' → logprob: -6.514595985412598
    5. ' return' → logprob: -7.389595985412598
    6. 'input' → logprob: -7.764595985412598
    7. ' ()' → logprob: -8.139595985412598
    8. '    
' → logprob: -8.389595985412598
    9. ' input' → logprob: -8.764595985412598
    10. '    ' → logprob: -9.014595985412598

Token 52: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8222711086273193
    2. ' n' → logprob: -1.1972711086273193
    3. ' line' → logprob: -2.0722711086273193
    4. ' input' → logprob: -2.9472711086273193
    5. ' return' → logprob: -3.1972711086273193
    6. 'n' → logprob: -4.072271347045898
    7. 'line' (adapté à ' line') → logprob: -5.197271347045898
    8. 'input' → logprob: -5.322271347045898
    9. ' data' → logprob: -5.447271347045898
    10. ' parts' → logprob: -6.447271347045898

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03394361957907677
    2. '=' → logprob: -3.4089436531066895
    3. 's' → logprob: -8.283943176269531
    4. '_' → logprob: -10.158943176269531
    5. '=line' → logprob: -12.908943176269531
    6. '_tokens' → logprob: -13.533943176269531
    7. '()' → logprob: -14.158943176269531
    8. ')' → logprob: -14.283943176269531
    9. '_line' → logprob: -15.533943176269531
    10. '(' → logprob: -15.533943176269531

Token 54: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0297551192343235
    2. 'input' → logprob: -3.529755115509033
    3. ' get' → logprob: -12.404755592346191
    4. 'get' → logprob: -14.529755592346191
    5. '(input' → logprob: -17.029754638671875
    6. ' ' → logprob: -17.779754638671875
    7. '	input' → logprob: -17.779754638671875
    8. ' parse' → logprob: -18.279754638671875
    9. 'parse' → logprob: -18.779754638671875
    10. '=input' → logprob: -19.029754638671875

Token 55: '_fn' (ID: 34804)
  Prédit: '_fn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fn' → logprob: -7.707997428951785e-05
    2. '_str' → logprob: -10.875077247619629
    3. 'fn' → logprob: -10.875077247619629
    4. '_line' → logprob: -11.250077247619629
    5. '(fn' → logprob: -12.125077247619629
    6. '_' → logprob: -12.250077247619629
    7. '=' → logprob: -12.625077247619629
    8. '_fp' → logprob: -12.625077247619629
    9. '()' → logprob: -12.750077247619629
    10. ' =' → logprob: -12.875077247619629

Token 56: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001781925675459206
    2. '().' → logprob: -6.376781940460205
    3. '(' → logprob: -9.626781463623047
    4. ' ()' → logprob: -11.626781463623047
    5. '()
' → logprob: -12.876781463623047
    6. '()

' → logprob: -14.376781463623047
    7. '（）' → logprob: -14.501781463623047
    8. '();' → logprob: -14.626781463623047
    9. '())' → logprob: -15.876781463623047
    10. '(),' → logprob: -15.876781463623047

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11021346598863602
    2. '.split' → logprob: -2.3602135181427
    3. 'split' → logprob: -5.110213279724121
    4. '.strip' → logprob: -5.860213279724121
    5. 'return' → logprob: -7.985213279724121
    6. '().' → logprob: -8.610213279724121
    7. 'tokens' → logprob: -8.735213279724121
    8. '()' → logprob: -9.110213279724121
    9. '    
' → logprob: -10.360213279724121
    10. '_split' → logprob: -10.610213279724121

Token 58: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6302117109298706
    2. '   ' → logprob: -1.1302117109298706
    3. 'return' (adapté à ' return') → logprob: -2.75521183013916
    4. ' parts' → logprob: -3.13021183013916
    5. ' n' → logprob: -3.63021183013916
    6. 'n' → logprob: -4.88021183013916
    7. 'parts' → logprob: -7.13021183013916
    8. ' tokens' → logprob: -7.50521183013916
    9. 'a' → logprob: -7.75521183013916
    10. 'tokens' → logprob: -7.88021183013916

Token 59: ' map' (ID: 4014)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.41148969531059265
    2. 'list' → logprob: -1.661489725112915
    3. ' tuple' → logprob: -2.161489725112915
    4. 'tuple' → logprob: -3.911489725112915
    5. ' map' → logprob: -4.911489486694336
    6. 'map' → logprob: -5.411489486694336
    7. '[list' → logprob: -8.536489486694336
    8. '[line' → logprob: -9.536489486694336
    9. ' [' → logprob: -9.661489486694336
    10. 'line' → logprob: -10.036489486694336

Token 60: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023343777284026146
    2. '(' → logprob: -3.773343801498413
    3. '(lambda' → logprob: -9.398344039916992
    4. '(str' → logprob: -11.398344039916992
    5. 'int' → logprob: -13.398344039916992
    6. '(
' → logprob: -13.648344039916992
    7. '(tuple' → logprob: -14.648344039916992
    8. '(

' → logprob: -14.773344039916992
    9. '<int' → logprob: -15.273344039916992
    10. '[int' → logprob: -15.773344039916992

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.437603622674942
    2. ',line' → logprob: -1.5626035928726196
    3. '(line' → logprob: -1.9376035928726196
    4. ' ,' → logprob: -7.81260347366333
    5. ' line' → logprob: -8.812603950500488
    6. '(' → logprob: -9.312603950500488
    7. 'line' → logprob: -9.437603950500488
    8. ' (' → logprob: -11.437603950500488
    9. '#line' → logprob: -11.562603950500488
    10. ',(' → logprob: -11.812603950500488

Token 62: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.31328487396240234
    2. 'line' → logprob: -1.3132848739624023
    3. ')' → logprob: -11.563284873962402
    4. '	line' → logprob: -11.938284873962402
    5. '(line' → logprob: -12.563284873962402
    6. '   ' → logprob: -13.563284873962402
    7. '=line' → logprob: -14.313284873962402
    8. ',line' → logprob: -14.438284873962402
    9. '[line' → logprob: -14.688284873962402
    10. '#line' → logprob: -14.938284873962402

Token 63: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.22382894158363342
    2. '().' → logprob: -1.973828911781311
    3. '.strip' → logprob: -3.3488290309906006
    4. '.' → logprob: -3.7238290309906006
    5. ' .' → logprob: -6.0988287925720215
    6. '.rstrip' → logprob: -9.59882926940918
    7. 'split' → logprob: -10.72382926940918
    8. '   ' → logprob: -12.34882926940918
    9. ' ().' → logprob: -12.72382926940918
    10. ').' → logprob: -12.84882926940918

Token 64: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02395256794989109
    2. '('' → logprob: -3.8989524841308594
    3. '()' → logprob: -6.148952484130859
    4. '(' → logprob: -6.773952484130859
    5. '("' → logprob: -10.14895248413086
    6. '()))' → logprob: -10.64895248413086
    7. ' ())' → logprob: -11.27395248413086
    8. ')' → logprob: -11.52395248413086
    9. '(()' → logprob: -11.64895248413086
    10. '())
' → logprob: -11.77395248413086

Token 65: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3411647081375122
    2. '
' → logprob: -1.4661647081375122
    3. '<|end|>' → logprob: -3.9661645889282227
    4. '

' → logprob: -4.341164588928223
    5. '\' → logprob: -5.216164588928223
    6. '\n' → logprob: -5.591164588928223
    7. '<|end|>' → logprob: -5.591164588928223
    8. '```' → logprob: -5.966164588928223
    9. 'newline' → logprob: -6.341164588928223
    10. '#' → logprob: -6.716164588928223

Token 66: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5078251957893372
    2. ' parse' → logprob: -1.7578251361846924
    3. ' solve' → logprob: -2.3828251361846924
    4. 'parse' → logprob: -2.8828251361846924
    5. 'main' → logprob: -3.3828251361846924
    6. 'solve' → logprob: -4.0078253746032715
    7. ' dfs' → logprob: -4.8828253746032715
    8. ' count' → logprob: -6.2578253746032715
    9. ' get' → logprob: -6.5078253746032715
    10. ' process' → logprob: -6.5078253746032715

Token 67: '_he' (ID: 94257)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.3957620859146118
    2. '_array' → logprob: -1.8957620859146118
    3. '_a' → logprob: -2.6457619667053223
    4. '_arr' → logprob: -3.1457619667053223
    5. '_input' → logprob: -3.7707619667053223
    6. '_data' → logprob: -4.895761966705322
    7. '_int' → logprob: -5.145761966705322
    8. '_' → logprob: -5.520761966705322
    9. '_n' → logprob: -5.520761966705322
    10. '_line' → logprob: -6.020761966705322

Token 68: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -0.044017013162374496
    2. 'ight' → logprob: -3.1690170764923096
    3. 'ap' → logprob: -7.1690168380737305
    4. 'aps' → logprob: -8.54401683807373
    5. 'app' → logprob: -11.16901683807373
    6. 'ig' → logprob: -11.91901683807373
    7. 'igts' → logprob: -12.04401683807373
    8. 'igth' → logprob: -12.41901683807373
    9. 'ght' → logprob: -12.66901683807373
    10. 'l' → logprob: -12.91901683807373

Token 69: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -9.610702363715973e-06
    2. '(' → logprob: -11.875009536743164
    3. ' (' → logprob: -13.750009536743164
    4. '(line' → logprob: -13.875009536743164
    5. '(_' → logprob: -15.750009536743164
    6. '():' → logprob: -16.875009536743164
    7. ',input' → logprob: -17.500009536743164
    8. '_(' → logprob: -17.500009536743164
    9. '(lines' → logprob: -17.875009536743164
    10. '(inp' → logprob: -17.875009536743164

Token 70: '_fn' (ID: 34804)
  Prédit: '_fn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fn' → logprob: -5.0020742492051795e-05
    2. 'fn' → logprob: -10.750049591064453
    3. ')' → logprob: -11.000049591064453
    4. '_fp' → logprob: -12.875049591064453
    5. '_f' → logprob: -13.000049591064453
    6. ')_' → logprob: -13.250049591064453
    7. '_' → logprob: -13.250049591064453
    8. '_FN' → logprob: -14.500049591064453
    9. '_sn' → logprob: -14.875049591064453
    10. '_func' → logprob: -15.125049591064453

Token 71: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023136918898671865
    2. '):
' → logprob: -6.127313613891602
    3. ')' → logprob: -9.252313613891602
    4. ' ):' → logprob: -11.127313613891602
    5. '):
' → logprob: -11.252313613891602
    6. '   ' → logprob: -12.502313613891602
    7. ' ' → logprob: -15.377313613891602
    8. '）：' → logprob: -15.377313613891602
    9. ')：' → logprob: -15.752313613891602
    10. ',' → logprob: -15.877313613891602

Token 72: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09530127048492432
    2. ' n' → logprob: -2.7203011512756348
    3. 'N' → logprob: -4.345301151275635
    4. '   ' → logprob: -4.970301151275635
    5. ' N' → logprob: -6.595301151275635
    6. 'k' → logprob: -6.970301151275635
    7. ')' → logprob: -7.095301151275635
    8. ' ' → logprob: -7.720301151275635
    9. '):
' → logprob: -7.845301151275635
    10. 'input' → logprob: -8.220301628112793

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01616446115076542
    2. '):
' → logprob: -4.141164302825928
    3. ')' → logprob: -9.141164779663086
    4. '):
' → logprob: -11.141164779663086
    5. ' ):' → logprob: -12.141164779663086
    6. '):

' → logprob: -13.766164779663086
    7. '   ' → logprob: -14.516164779663086
    8. ':' → logprob: -14.516164779663086
    9. ',' → logprob: -15.516164779663086
    10. '_' → logprob: -15.891164779663086

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004438971809577197
    2. ' line' → logprob: -7.750443935394287
    3. '	line' → logprob: -12.750443458557129
    4. '    
' → logprob: -13.375443458557129
    5. ' heights' → logprob: -13.375443458557129
    6. '
' → logprob: -13.750443458557129
    7. '(line' → logprob: -13.875443458557129
    8. ' return' → logprob: -14.000443458557129
    9. 'line' → logprob: -14.250443458557129
    10. ' lines' → logprob: -14.500443458557129

Token 75: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8735244274139404
    2. ' line' → logprob: -1.1235244274139404
    3. ' return' → logprob: -2.4985244274139404
    4. 'return' → logprob: -2.6235244274139404
    5. 'line' (adapté à ' line') → logprob: -2.7485244274139404
    6. 'he' → logprob: -3.4985244274139404
    7. ' heights' → logprob: -4.8735246658325195
    8. ' lines' → logprob: -9.49852466583252
    9. 'input' → logprob: -9.62352466583252
    10. '   ' → logprob: -9.87352466583252

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029759865254163742
    2. '=' → logprob: -3.5297598838806152
    3. '   ' → logprob: -11.904759407043457
    4. ' ' → logprob: -13.654759407043457
    5. '=input' → logprob: -14.404759407043457
    6. '=line' → logprob: -14.904759407043457
    7. 's' → logprob: -16.279760360717773
    8. ' ' → logprob: -16.279760360717773
    9. ')' → logprob: -16.279760360717773
    10. '_' → logprob: -16.529760360717773

Token 77: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.02324594371020794
    2. 'input' → logprob: -3.7732460498809814
    3. '(input' → logprob: -16.02324676513672
    4. '	input' → logprob: -16.14824676513672
    5. '=input' → logprob: -16.39824676513672
    6. ' ' → logprob: -16.64824676513672
    7. '<input' → logprob: -18.27324676513672
    8. ',input' → logprob: -18.39824676513672
    9. '[input' → logprob: -18.64824676513672
    10. ' inputs' → logprob: -19.02324676513672

Token 78: '_fn' (ID: 34804)
  Prédit: '_fn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fn' → logprob: -1.5213274309644476e-05
    2. 'fn' → logprob: -11.125015258789062
    3. 'Fn' → logprob: -15.500015258789062
    4. '(fn' → logprob: -16.375015258789062
    5. '_fp' → logprob: -18.250015258789062
    6. '	fn' → logprob: -18.250015258789062
    7. '.fn' → logprob: -19.000015258789062
    8. '_' → logprob: -19.125015258789062
    9. '```' → logprob: -19.125015258789062
    10. '_FN' → logprob: -19.125015258789062

Token 79: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3151417374610901
    2. '()
' → logprob: -1.3151416778564453
    3. '().' → logprob: -6.315141677856445
    4. '()
' → logprob: -9.690141677856445
    5. '()

' → logprob: -12.815141677856445
    6. '(' → logprob: -13.565141677856445
    7. '().
' → logprob: -13.690141677856445
    8. '()"' → logprob: -14.690141677856445
    9. ')' → logprob: -14.815141677856445
    10. ' ()' → logprob: -14.940141677856445

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021108859218657017
    2. 'return' → logprob: -6.752110958099365
    3. ' return' → logprob: -7.002110958099365
    4. ' heights' → logprob: -10.752110481262207
    5. 'he' → logprob: -12.377110481262207
    6. '	return' → logprob: -13.377110481262207
    7. '  ' → logprob: -14.252110481262207
    8. ')' → logprob: -14.377110481262207
    9. '    ' → logprob: -14.877110481262207
    10. ' ' → logprob: -15.127110481262207

Token 81: ' heights' (ID: 57359)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5342538952827454
    2. ' return' → logprob: -0.9092538952827454
    3. '   ' → logprob: -4.53425407409668
    4. 'he' → logprob: -8.78425407409668
    5. ' heights' → logprob: -9.03425407409668
    6. '	return' → logprob: -10.90925407409668
    7. ' ' → logprob: -11.53425407409668
    8. ' list' → logprob: -11.78425407409668
    9. 'list' → logprob: -11.90925407409668
    10. '  ' → logprob: -12.65925407409668

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17975416779518127
    2. '=' → logprob: -1.8047541379928589
    3. ' ' → logprob: -13.179754257202148
    4. ')' → logprob: -13.179754257202148
    5. '.' → logprob: -13.554754257202148
    6. '   ' → logprob: -14.054754257202148
    7. '[:]' → logprob: -14.054754257202148
    8. ',' → logprob: -14.429754257202148
    9. ' =
' → logprob: -15.429754257202148
    10. '＝' → logprob: -15.679754257202148

Token 83: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1602257490158081
    2. ' list' → logprob: -1.910225749015808
    3. '[list' → logprob: -13.910225868225098
    4. '	list' → logprob: -15.785225868225098
    5. '=list' → logprob: -16.28522491455078
    6. '   ' → logprob: -16.41022491455078
    7. 'List' → logprob: -16.41022491455078
    8. '[' → logprob: -16.53522491455078
    9. ' ' → logprob: -16.66022491455078
    10. 'line' → logprob: -16.66022491455078

Token 84: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.001933277933858335
    2. '(' → logprob: -6.2519330978393555
    3. '(int' → logprob: -12.626933097839355
    4. '(line' → logprob: -14.376933097839355
    5. 'map' → logprob: -15.501933097839355
    6. '	map' → logprob: -15.876933097839355
    7. ',map' → logprob: -16.001934051513672
    8. '.map' → logprob: -16.626934051513672
    9. ' (' → logprob: -16.876934051513672
    10. '(
' → logprob: -17.126934051513672

Token 85: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006018842686899006
    2. '(' → logprob: -7.875601768493652
    3. 'int' → logprob: -9.000601768493652
    4. ')' → logprob: -10.375601768493652
    5. '<int' → logprob: -10.625601768493652
    6. ',int' → logprob: -10.750601768493652
    7. '[int' → logprob: -12.625601768493652
    8. ']int' → logprob: -12.750601768493652
    9. ')(' → logprob: -12.875601768493652
    10. '<|end|>' → logprob: -12.875601768493652

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.235853374004364
    2. ',line' → logprob: -1.6108534336090088
    3. '(line' → logprob: -4.61085319519043
    4. ' ,' → logprob: -8.73585319519043
    5. '(' → logprob: -8.98585319519043
    6. ',(' → logprob: -9.11085319519043
    7. '(),' → logprob: -10.86085319519043
    8. '),' → logprob: -12.23585319519043
    9. '#line' → logprob: -12.61085319519043
    10. '=line' → logprob: -12.98585319519043

Token 87: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07890267670154572
    2. ' line' → logprob: -2.5789027214050293
    3. '(line' → logprob: -11.828902244567871
    4. '	line' → logprob: -13.578902244567871
    5. '#line' → logprob: -13.703902244567871
    6. ')' → logprob: -14.078902244567871
    7. ' ' → logprob: -14.203902244567871
    8. ',line' → logprob: -14.703902244567871
    9. '=line' → logprob: -14.828902244567871
    10. '   ' → logprob: -14.828902244567871

Token 88: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.477688193321228
    2. '.split' → logprob: -0.977688193321228
    3. ' .' → logprob: -5.727688312530518
    4. '.' → logprob: -8.47768783569336
    5. '.strip' → logprob: -9.10268783569336
    6. 'split' → logprob: -11.10268783569336
    7. ' ().' → logprob: -12.10268783569336
    8. ').' → logprob: -13.10268783569336
    9. '.rstrip' → logprob: -13.22768783569336
    10. ')' → logprob: -13.22768783569336

Token 89: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.18339988589286804
    2. '))' → logprob: -1.8083999156951904
    3. '()' → logprob: -6.558399677276611
    4. '())' → logprob: -6.808399677276611
    5. '(' → logprob: -7.183399677276611
    6. '()))
' → logprob: -8.80840015411377
    7. ')' → logprob: -9.30840015411377
    8. '()))

' → logprob: -10.80840015411377
    9. '   ' → logprob: -10.93340015411377
    10. '(),' → logprob: -11.05840015411377

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008987197652459145
    2. 'return' → logprob: -7.500898838043213
    3. ' return' → logprob: -8.000898361206055
    4. '	return' → logprob: -12.000898361206055
    5. '<|end|>' → logprob: -13.125898361206055
    6. ' ' → logprob: -14.125898361206055
    7. '  ' → logprob: -14.250898361206055
    8. '   ' → logprob: -15.000898361206055
    9. ':return' → logprob: -16.000898361206055
    10. '       ' → logprob: -16.125898361206055

Token 91: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.621798038482666
    2. 'return' (adapté à ' return') → logprob: -1.121798038482666
    3. '   ' → logprob: -1.996798038482666
    4. ' if' → logprob: -6.746798038482666
    5. 'if' → logprob: -8.746797561645508
    6. ' ' → logprob: -9.746797561645508
    7. 'assert' → logprob: -9.996797561645508
    8. ' while' → logprob: -10.121797561645508
    9. ' assert' → logprob: -10.496797561645508
    10. '	return' → logprob: -11.246797561645508

Token 92: ' [' (ID: 723)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.34873130917549133
    2. ' heights' → logprob: -1.223731279373169
    3. 'height' → logprob: -8.59873104095459
    4. ' he' → logprob: -10.22373104095459
    5. ' ' → logprob: -10.97373104095459
    6. ' ' → logprob: -11.47373104095459
    7. '   ' → logprob: -11.84873104095459
    8. '	' → logprob: -12.28623104095459
    9. ' height' → logprob: -12.47373104095459
    10. 'hei' → logprob: -12.78623104095459

Token 93: '0' (ID: 15)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.6871403455734253
    2. '0' → logprob: -1.8121403455734253
    3. 'h' → logprob: -1.9371403455734253
    4. 'min' → logprob: -2.562140464782715
    5. 'INF' → logprob: -2.812140464782715
    6. 'max' → logprob: -3.937140464782715
    7. '*' → logprob: -4.812140464782715
    8. 'float' → logprob: -5.437140464782715
    9. 'int' → logprob: -5.437140464782715
    10. 'height' → logprob: -5.687140464782715

Token 94: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009361166739836335
    2. ']+' → logprob: -7.000936031341553
    3. ',' → logprob: -10.875936508178711
    4. ' ]' → logprob: -12.625936508178711
    5. '`]' → logprob: -13.750936508178711
    6. '()]' → logprob: -14.500936508178711
    7. '"]' → logprob: -15.375936508178711
    8. '']' → logprob: -15.875936508178711
    9. ')' → logprob: -15.875936508178711
    10. '+]' → logprob: -16.37593650817871

Token 95: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06259740144014359
    2. ' +' → logprob: -2.8125975131988525
    3. 'he' → logprob: -7.812597274780273
    4. '+[' → logprob: -8.812597274780273
    5. ' heights' → logprob: -10.562597274780273
    6. '[' → logprob: -10.687597274780273
    7. '+h' → logprob: -11.437597274780273
    8. '+n' → logprob: -13.187597274780273
    9. 'height' → logprob: -13.437597274780273
    10. '   ' → logprob: -13.812597274780273

Token 96: ' heights' (ID: 57359)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.054925158619880676
    2. ' heights' → logprob: -2.9299252033233643
    3. 'height' → logprob: -10.429924964904785
    4. ' he' → logprob: -11.804924964904785
    5. '[' → logprob: -12.554924964904785
    6. '_he' → logprob: -14.679924964904785
    7. ' [' → logprob: -15.054924964904785
    8. ' ' → logprob: -15.054924964904785
    9. 'He' → logprob: -15.179924964904785
    10. 'heur' → logprob: -15.304924964904785

Token 97: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4536815285682678
    2. 'def' → logprob: -1.078681468963623
    3. '<|end|>' → logprob: -4.328681468963623
    4. '

' → logprob: -4.578681468963623
    5. '\n' → logprob: -7.828681468963623
    6. '```' → logprob: -8.328681945800781
    7. '\' → logprob: -9.078681945800781
    8. '<|end|>' → logprob: -9.203681945800781
    9. '  
' → logprob: -9.453681945800781
    10. '
' → logprob: -9.703681945800781

Token 99: ' create' (ID: 2501)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.2690683603286743
    2. ' main' → logprob: -1.3940683603286743
    3. ' count' → logprob: -1.8940683603286743
    4. ' dp' → logprob: -2.8940682411193848
    5. ' dfs' → logprob: -2.8940682411193848
    6. ' max' → logprob: -3.0190682411193848
    7. ' calculate' → logprob: -3.1440682411193848
    8. ' compute' → logprob: -3.3940682411193848
    9. ' calc' → logprob: -3.5190682411193848
    10. ' find' → logprob: -4.644068241119385

Token 100: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.13179147243499756
    2. '_graph' → logprob: -2.506791591644287
    3. '_segment' → logprob: -4.881791591644287
    4. '_' → logprob: -5.256791591644287
    5. '_stack' → logprob: -5.881791591644287
    6. '_adj' → logprob: -6.006791591644287
    7. '_transition' → logprob: -6.006791591644287
    8. '_table' → logprob: -6.131791591644287
    9. 'dp' → logprob: -6.131791591644287
    10. '_array' → logprob: -6.131791591644287

Token 101: '_table' (ID: 11721)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.020092856138944626
    2. '_array' → logprob: -4.520092964172363
    3. '(' → logprob: -5.145092964172363
    4. '_table' → logprob: -6.270092964172363
    5. '():' → logprob: -7.395092964172363
    6. ' (' → logprob: -8.395092964172363
    7. '(N' → logprob: -9.770092964172363
    8. '_list' → logprob: -10.145092964172363
    9. '(dp' → logprob: -10.145092964172363
    10. '_arrays' → logprob: -10.145092964172363

Token 102: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0020004885736852884
    2. '(' → logprob: -6.502000331878662
    3. ' (' → logprob: -7.627000331878662
    4. '():' → logprob: -12.25200080871582
    5. '(
' → logprob: -13.37700080871582
    6. '(size' → logprob: -13.75200080871582
    7. '(num' → logprob: -14.50200080871582
    8. '(N' → logprob: -14.50200080871582
    9. '(s' → logprob: -14.75200080871582
    10. '(length' → logprob: -15.12700080871582

Token 103: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028790760785341263
    2. ',' → logprob: -3.6537907123565674
    3. '):
' → logprob: -6.1537909507751465
    4. ')' → logprob: -8.528790473937988
    5. ' ):' → logprob: -9.153790473937988
    6. '+' → logprob: -10.653790473937988
    7. ',n' → logprob: -11.528790473937988
    8. '):
' → logprob: -12.028790473937988
    9. '   ' → logprob: -12.028790473937988
    10. ':' → logprob: -13.028790473937988

Token 104: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.13382168114185333
    2. ' k' → logprob: -2.258821725845337
    3. 'm' → logprob: -5.008821487426758
    4. 'INF' → logprob: -5.883821487426758
    5. 'max' → logprob: -6.133821487426758
    6. ')' → logprob: -6.508821487426758
    7. ' m' → logprob: -6.508821487426758
    8. ' max' → logprob: -6.633821487426758
    9. ' INF' → logprob: -7.008821487426758
    10. '):
' → logprob: -7.508821487426758

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016979146748781204
    2. '):
' → logprob: -6.751698017120361
    3. ',' → logprob: -7.626698017120361
    4. ')' → logprob: -10.626697540283203
    5. ' ):' → logprob: -11.751697540283203
    6. '):
' → logprob: -12.001697540283203
    7. '   ' → logprob: -14.501697540283203
    8. ':' → logprob: -14.626697540283203
    9. ',n' → logprob: -15.376697540283203
    10. '):

' → logprob: -15.876697540283203

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001024235738441348
    2. ' return' → logprob: -7.12602424621582
    3. 'return' → logprob: -9.25102424621582
    4. '[' → logprob: -9.62602424621582
    5. 'dp' → logprob: -10.87602424621582
    6. '[[' → logprob: -12.00102424621582
    7. ' [' → logprob: -12.37602424621582
    8. '	return' → logprob: -12.37602424621582
    9. ' [[' → logprob: -12.50102424621582
    10. '  ' → logprob: -12.62602424621582

Token 107: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9418776035308838
    2. 'return' (adapté à ' return') → logprob: -1.4418776035308838
    3. ' return' → logprob: -1.5668776035308838
    4. '[[' → logprob: -2.191877603530884
    5. ' [[' → logprob: -3.066877603530884
    6. '[' → logprob: -5.816877365112305
    7. 'dp' → logprob: -6.316877365112305
    8. '[
' → logprob: -6.941877365112305
    9. ' [' → logprob: -7.191877365112305
    10. ' dp' → logprob: -9.941877365112305

Token 108: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0012021353468298912
    2. ' [[' → logprob: -6.75120210647583
    3. '[' → logprob: -10.376202583312988
    4. '[
' → logprob: -15.376202583312988
    5. ' [' → logprob: -15.751202583312988
    6. '([[' → logprob: -16.001201629638672
    7. ' [[[' → logprob: -16.626201629638672
    8. '   ' → logprob: -17.126201629638672
    9. '[['' → logprob: -17.126201629638672
    10. '[n' → logprob: -17.626201629638672

Token 109: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.41610080003738403
    2. '0' → logprob: -1.1661007404327393
    3. '-' → logprob: -3.9161007404327393
    4. '-inf' → logprob: -5.666100978851318
    5. 'inf' → logprob: -6.541100978851318
    6. '-INF' → logprob: -6.666100978851318
    7. 'False' → logprob: -6.916100978851318
    8. 'float' → logprob: -7.166100978851318
    9. '(' → logprob: -8.04110050201416
    10. 'None' → logprob: -8.66610050201416

Token 110: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004430709406733513
    2. ']*(' → logprob: -6.254430770874023
    3. 'for' → logprob: -6.504430770874023
    4. ' for' → logprob: -7.004430770874023
    5. ']*' → logprob: -9.504430770874023
    6. ' ]' → logprob: -11.629430770874023
    7. '   ' → logprob: -12.504430770874023
    8. ']+' → logprob: -12.504430770874023
    9. 'if' → logprob: -13.129430770874023
    10. '+' → logprob: -15.129430770874023

Token 111: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5777347087860107
    2. 'for' → logprob: -0.8277347087860107
    3. ']' → logprob: -6.45273494720459
    4. '   ' → logprob: -8.70273494720459
    5. '	for' → logprob: -11.07773494720459
    6. ']*(' → logprob: -11.57773494720459
    7. ')' → logprob: -11.95273494720459
    8. ' ' → logprob: -11.95273494720459
    9. ',' → logprob: -12.32773494720459
    10. ']*' → logprob: -12.45273494720459

Token 112: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.023625344038009644
    2. ' (' → logprob: -4.023625373840332
    3. '(n' → logprob: -5.398625373840332
    4. '(' → logprob: -7.023625373840332
    5. 'k' → logprob: -10.898625373840332
    6. '((' → logprob: -11.523625373840332
    7. '   ' → logprob: -12.148625373840332
    8. ' ' → logprob: -12.523625373840332
    9. '(j' → logprob: -12.898625373840332
    10. '100' → logprob: -13.898625373840332

Token 113: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.015746330842375755
    2. '(k' → logprob: -4.265746116638184
    3. ' k' → logprob: -6.640746116638184
    4. ' (' → logprob: -8.640746116638184
    5. '(n' → logprob: -10.015746116638184
    6. '(' → logprob: -10.390746116638184
    7. '   ' → logprob: -11.140746116638184
    8. 'n' → logprob: -12.140746116638184
    9. ' ' → logprob: -13.390746116638184
    10. '{k' → logprob: -14.390746116638184

Token 114: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5770397782325745
    2. ' +' → logprob: -0.8270397782325745
    3. ')' → logprob: -6.95203971862793
    4. ' )' → logprob: -9.82703971862793
    5. ' ' → logprob: -10.07703971862793
    6. '   ' → logprob: -11.45203971862793
    7. '+k' → logprob: -11.57703971862793
    8. '
' → logprob: -12.20203971862793
    9. '-' → logprob: -12.88953971862793
    10. '*' → logprob: -13.07703971862793

Token 115: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16734758019447327
    2. '1' → logprob: -1.9173475503921509
    3. ' k' → logprob: -5.042347431182861
    4. ' ' → logprob: -7.667347431182861
    5. '(k' → logprob: -10.16734790802002
    6. '2' → logprob: -10.54234790802002
    7. '+' → logprob: -10.79234790802002
    8. '-' → logprob: -11.16734790802002
    9. '0' → logprob: -11.22984790802002
    10. '   ' → logprob: -11.54234790802002

Token 116: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5771346092224121
    2. ' +' → logprob: -0.8271346092224121
    3. ')' → logprob: -6.952134609222412
    4. ' ' → logprob: -9.70213508605957
    5. '1' → logprob: -10.45213508605957
    6. '
' → logprob: -10.70213508605957
    7. '-' → logprob: -10.70213508605957
    8. '   ' → logprob: -10.82713508605957
    9. ' -' → logprob: -11.32713508605957
    10. ' )' → logprob: -11.32713508605957

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023288452997803688
    2. '2' → logprob: -3.7732884883880615
    3. ' ' → logprob: -10.14828872680664
    4. '   ' → logprob: -13.83578872680664
    5. '3' → logprob: -14.02328872680664
    6. '
' → logprob: -14.14828872680664
    7. ')' → logprob: -14.83578872680664
    8. '```' → logprob: -15.39828872680664
    9. '

' → logprob: -15.71078872680664
    10. '  ' → logprob: -16.33578872680664

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002488022670149803
    2. '2' → logprob: -6.002488136291504
    3. ' ' → logprob: -11.627488136291504
    4. '3' → logprob: -14.064988136291504
    5. '
' → logprob: -14.252488136291504
    6. '

' → logprob: -15.002488136291504
    7. ')' → logprob: -15.252488136291504
    8. '   ' → logprob: -15.627488136291504
    9. '+' → logprob: -15.814988136291504
    10. '```' → logprob: -15.814988136291504

Token 119: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5267808437347412
    2. ')' → logprob: -1.1517808437347412
    3. 'for' → logprob: -2.401780843734741
    4. '   ' → logprob: -6.65178108215332
    5. ']' → logprob: -7.02678108215332
    6. ' )' → logprob: -8.02678108215332
    7. ' ' → logprob: -8.65178108215332
    8. ')]' → logprob: -9.52678108215332
    9. '    ' → logprob: -10.40178108215332
    10. ' ]' → logprob: -10.77678108215332

Token 120: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1606007218360901
    2. 'for' → logprob: -1.9106006622314453
    3. '   ' → logprob: -7.910600662231445
    4. '	for' → logprob: -12.410600662231445
    5. '    ' → logprob: -13.410600662231445
    6. ' ' → logprob: -13.535600662231445
    7. ']' → logprob: -13.660600662231445
    8. '  ' → logprob: -14.035600662231445
    9. ')' → logprob: -14.910600662231445
    10. '
' → logprob: -15.785600662231445

Token 121: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6931627988815308
    2. ' _' → logprob: -0.6931627988815308
    3. ' ' → logprob: -12.06816291809082
    4. ' range' → logprob: -12.56816291809082
    5. ' i' → logprob: -13.19316291809082
    6. '_range' → logprob: -13.31816291809082
    7. '_i' → logprob: -13.44316291809082
    8. ' in' → logprob: -14.06816291809082
    9. ' ' → logprob: -15.81816291809082
    10. '_s' → logprob: -16.06816291809082

Token 122: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.013636828400194645
    2. ' range' → logprob: -4.888637065887451
    3. ' in' → logprob: -5.638637065887451
    4. 'in' → logprob: -6.013637065887451
    5. '(range' → logprob: -12.013636589050293
    6. ' ' → logprob: -13.138636589050293
    7. '  ' → logprob: -14.388636589050293
    8. '	range' → logprob: -15.513636589050293
    9. 'n' → logprob: -15.763636589050293
    10. 'row' → logprob: -16.01363754272461

Token 123: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '(range' → logprob: -16.75020408630371
    4. '	range' → logprob: -19.75020408630371
    5. '[' → logprob: -20.62520408630371
    6. '   ' → logprob: -21.25020408630371
    7. ' ' → logprob: -21.50020408630371
    8. '  ' → logprob: -22.50020408630371
    9. '.range' → logprob: -23.37520408630371
    10. '```' → logprob: -23.75020408630371

Token 124: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0018202434293925762
    2. '(' → logprob: -6.376820087432861
    3. ' (' → logprob: -9.37682056427002
    4. '(k' → logprob: -11.12682056427002
    5. 'n' → logprob: -11.25182056427002
    6. ' n' → logprob: -12.50182056427002
    7. '((' → logprob: -13.50182056427002
    8. '(
' → logprob: -15.50182056427002
    9. '	n' → logprob: -16.251819610595703
    10. ' ' → logprob: -16.251819610595703

Token 125: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0012763076229020953
    2. '+' → logprob: -6.87627649307251
    3. ' )' → logprob: -8.751276016235352
    4. ' +' → logprob: -10.251276016235352
    5. ')' → logprob: -10.626276016235352
    6. '-' → logprob: -11.251276016235352
    7. ' ]' → logprob: -12.376276016235352
    8. ']' → logprob: -12.876276016235352
    9. '   ' → logprob: -13.626276016235352
    10. ' -' → logprob: -13.876276016235352

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037359268753789365
    2. ' ' → logprob: -8.375373840332031
    3. '2' → logprob: -8.875373840332031
    4. '3' → logprob: -13.625373840332031
    5. '   ' → logprob: -14.000373840332031
    6. '  ' → logprob: -15.812873840332031
    7. '0' → logprob: -16.00037384033203
    8. ')' → logprob: -16.00037384033203
    9. '```' → logprob: -16.12537384033203
    10. '
' → logprob: -16.18787384033203

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002707529056351632
    2. '2' → logprob: -8.37527084350586
    3. ' ' → logprob: -10.25027084350586
    4. '0' → logprob: -13.12527084350586
    5. '3' → logprob: -13.25027084350586
    6. '   ' → logprob: -14.75027084350586
    7. '7' → logprob: -15.62527084350586
    8. '5' → logprob: -16.12527084350586
    9. '4' → logprob: -16.37527084350586
    10. '  ' → logprob: -16.56277084350586

Token 128: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000556012790184468
    2. ']' → logprob: -7.500555992126465
    3. ')' → logprob: -13.000555992126465
    4. ' ]' → logprob: -15.000555992126465
    5. '   ' → logprob: -16.12555694580078
    6. '])]' → logprob: -16.62555694580078
    7. '}]' → logprob: -16.75055694580078
    8. ')],' → logprob: -16.87555694580078
    9. '])' → logprob: -17.25055694580078
    10. ']]' → logprob: -17.37555694580078

Token 129: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2634473443031311
    2. '<|end|>' → logprob: -2.1384472846984863
    3. 'def' → logprob: -2.2634472846984863
    4. ']' → logprob: -5.388447284698486
    5. '<|end|>' → logprob: -6.263447284698486
    6. '```' → logprob: -7.013447284698486
    7. '
' → logprob: -7.888447284698486
    8. '#' → logprob: -8.388447761535645
    9. ')]' → logprob: -8.513447761535645
    10. ':' → logprob: -8.513447761535645

Token 130: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4880962073802948
    2. ' solve' → logprob: -1.7380962371826172
    3. 'main' → logprob: -2.363096237182617
    4. ' min' → logprob: -3.488096237182617
    5. 'solve' → logprob: -3.488096237182617
    6. 'min' → logprob: -3.863096237182617
    7. ' calculate' → logprob: -4.988096237182617
    8. ' compute' → logprob: -5.613096237182617
    9. 'calculate' → logprob: -5.613096237182617
    10. ' calc' → logprob: -5.613096237182617

Token 131: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0308221522718668
    2. '(dp' → logprob: -3.6558220386505127
    3. 'dp' → logprob: -6.030822277069092
    4. '_' → logprob: -6.530822277069092
    5. '(' → logprob: -7.905822277069092
    6. '_DP' → logprob: -9.905821800231934
    7. '	dp' → logprob: -10.280821800231934
    8. 'DP' → logprob: -10.905821800231934
    9. ' dp' → logprob: -11.155821800231934
    10. '```' → logprob: -11.405821800231934

Token 132: '(dp' (ID: 68843)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.022971386089920998
    2. '(' → logprob: -3.8979713916778564
    3. '_table' → logprob: -6.772971153259277
    4. '(dp' → logprob: -7.022971153259277
    5. ' (' → logprob: -9.272971153259277
    6. '_(' → logprob: -9.522971153259277
    7. '_dp' → logprob: -9.772971153259277
    8. '(_' → logprob: -9.897971153259277
    9. '(table' → logprob: -10.397971153259277
    10. '_' → logprob: -10.522971153259277

Token 133: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02805059589445591
    2. '):' → logprob: -4.278050422668457
    3. ',n' → logprob: -4.903050422668457
    4. '):
' → logprob: -5.153050422668457
    5. ' ,' → logprob: -8.153050422668457
    6. ')' → logprob: -9.153050422668457
    7. '   ' → logprob: -10.028050422668457
    8. '[' → logprob: -10.778050422668457
    9. ',k' → logprob: -10.778050422668457
    10. ',
' → logprob: -11.028050422668457

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23965927958488464
    2. 'dp' → logprob: -1.739659309387207
    3. ' dp' → logprob: -3.489659309387207
    4. ' for' → logprob: -5.489659309387207
    5. '	dp' → logprob: -7.114659309387207
    6. '    
' → logprob: -7.489659309387207
    7. '```' → logprob: -7.489659309387207
    8. 'for' → logprob: -7.739659309387207
    9. '(dp' → logprob: -8.489659309387207
    10. '
' → logprob: -8.864659309387207

Token 135: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.46053239703178406
    2. 'for' → logprob: -1.5855324268341064
    3. ' for' → logprob: -2.3355324268341064
    4. '   ' → logprob: -3.0855324268341064
    5. ' dp' → logprob: -3.8355324268341064
    6. '	dp' → logprob: -9.835532188415527
    7. ' ' → logprob: -10.710532188415527
    8. '```' → logprob: -11.085532188415527
    9. '	for' → logprob: -11.648032188415527
    10. '
' → logprob: -11.773032188415527

Token 136: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0802738870552275e-05
    2. '```' → logprob: -12.25001049041748
    3. '][' → logprob: -12.87501049041748
    4. '\[' → logprob: -14.25001049041748
    5. ' [' → logprob: -14.75001049041748
    6. '[][' → logprob: -14.87501049041748
    7. ')[' → logprob: -14.87501049041748
    8. 'def' → logprob: -15.37501049041748
    9. '1' → logprob: -15.37501049041748
    10. '0' → logprob: -15.87501049041748

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024608144303783774
    2. '1' → logprob: -8.625246047973633
    3. ' ' → logprob: -10.125246047973633
    4. '[' → logprob: -11.000246047973633
    5. '][' → logprob: -11.750246047973633
    6. ']' → logprob: -14.750246047973633
    7. '-' → logprob: -15.312746047973633
    8. ')' → logprob: -15.500246047973633
    9. ' [' → logprob: -15.562746047973633
    10. '```' → logprob: -15.562746047973633

Token 138: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006939699524082243
    2. ']' → logprob: -7.6256937980651855
    3. '[' → logprob: -8.750694274902344
    4. ' ][' → logprob: -10.125694274902344
    5. '])' → logprob: -12.625694274902344
    6. ']=' → logprob: -13.250694274902344
    7. '][-' → logprob: -14.875694274902344
    8. '0' → logprob: -15.250694274902344
    9. '])[' → logprob: -15.500694274902344
    10. '][:' → logprob: -15.625694274902344

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.250015258789062
    3. ']' → logprob: -13.250015258789062
    4. ')' → logprob: -15.750015258789062
    5. '۰' → logprob: -16.562515258789062
    6. '1' → logprob: -16.750015258789062
    7. '-' → logprob: -16.937515258789062
    8. 'len' → logprob: -17.062515258789062
    9. '
' → logprob: -17.187515258789062
    10. '   ' → logprob: -17.250015258789062

Token 140: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.130576806142926e-05
    2. ' ]' → logprob: -10.500031471252441
    3. ']=' → logprob: -12.500031471252441
    4. '=' → logprob: -18.125030517578125
    5. '`]' → logprob: -19.125030517578125
    6. '']' → logprob: -19.750030517578125
    7. ' =' → logprob: -19.750030517578125
    8. ')' → logprob: -19.875030517578125
    9. '[' → logprob: -20.000030517578125
    10. ']
' → logprob: -20.250030517578125

Token 141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519298195838928
    2. ' =' → logprob: -1.501929759979248
    3. '[' → logprob: -15.001930236816406
    4. ' ' → logprob: -16.376930236816406
    5. ' ' → logprob: -17.001930236816406
    6. '＝' → logprob: -17.001930236816406
    7. ',' → logprob: -17.376930236816406
    8. '0' → logprob: -17.501930236816406
    9. ']=' → logprob: -17.626930236816406
    10. '=int' → logprob: -17.751930236816406

Token 142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '1' → logprob: -18.750001907348633
    4. '۰' → logprob: -19.750001907348633
    5. '[' → logprob: -20.312501907348633
    6. '(' → logprob: -20.312501907348633
    7. 'INF' → logprob: -20.937501907348633
    8. '00' → logprob: -21.187501907348633
    9. '000' → logprob: -21.312501907348633
    10. 'int' → logprob: -21.375001907348633

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '1' → logprob: -18.625
    4. '۰' → logprob: -19.375
    5. '(' → logprob: -20.8125
    6. 'INF' → logprob: -20.9375
    7. '00' → logprob: -21.0625
    8. '000' → logprob: -21.25
    9. 'int' → logprob: -21.3125
    10. '-' → logprob: -21.375

Token 144: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01622532680630684
    2. '<|end|>' → logprob: -4.141225337982178
    3. '<|end|>' → logprob: -9.51622486114502
    4. '
' → logprob: -9.89122486114502
    5. '```' → logprob: -10.76622486114502
    6. '#' → logprob: -11.26622486114502
    7. ')' → logprob: -11.64122486114502
    8. ' def' → logprob: -12.14122486114502
    9. '[' → logprob: -13.26622486114502
    10. 'from' → logprob: -13.26622486114502

Token 146: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.8365643620491028
    2. ' main' → logprob: -1.461564302444458
    3. 'solve' → logprob: -1.711564302444458
    4. ' solve' → logprob: -2.586564302444458
    5. 'compute' → logprob: -3.461564302444458
    6. 'calculate' → logprob: -3.961564302444458
    7. 'min' → logprob: -4.461564540863037
    8. ' compute' → logprob: -5.586564540863037
    9. ' min' → logprob: -5.961564540863037
    10. ' calculate' → logprob: -6.336564540863037

Token 147: '_cost' (ID: 36820)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.09837425500154495
    2. '_cost' → logprob: -2.848374366760254
    3. '_next' → logprob: -4.848374366760254
    4. '_min' → logprob: -5.223374366760254
    5. '(dp' → logprob: -5.348374366760254
    6. '(' → logprob: -5.598374366760254
    7. '_step' → logprob: -6.098374366760254
    8. '_' → logprob: -6.223374366760254
    9. 'dp' → logprob: -6.348374366760254
    10. '_transition' → logprob: -6.973374366760254

Token 148: '(H' (ID: 20904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4115111827850342
    2. '(height' → logprob: -1.7865111827850342
    3. '(h' → logprob: -2.536511182785034
    4. '(i' → logprob: -2.911511182785034
    5. '(prev' → logprob: -4.411511421203613
    6. '(a' → logprob: -4.411511421203613
    7. '(current' → logprob: -6.161511421203613
    8. '(n' → logprob: -6.286511421203613
    9. ' (' → logprob: -6.786511421203613
    10. '(distance' → logprob: -6.911511421203613

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004583326634019613
    2. '):' → logprob: -6.379583358764648
    3. ',i' → logprob: -6.504583358764648
    4. ' ,' → logprob: -8.129583358764648
    5. '[i' → logprob: -8.254583358764648
    6. 'i' → logprob: -8.629583358764648
    7. ')' → logprob: -8.629583358764648
    8. 's' → logprob: -9.129583358764648
    9. '[' → logprob: -9.629583358764648
    10. '_,' → logprob: -9.754583358764648

Token 150: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3435157537460327
    2. ' i' → logprob: -1.3435157537460327
    3. 'start' → logprob: -5.093515872955322
    4. ' start' → logprob: -5.343515872955322
    5. 'dp' → logprob: -5.593515872955322
    6. 'n' → logprob: -5.968515872955322
    7. 'j' → logprob: -6.343515872955322
    8. ' n' → logprob: -6.593515872955322
    9. 'l' → logprob: -6.843515872955322
    10. ' j' → logprob: -7.093515872955322

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012502583675086498
    2. '):' → logprob: -4.762502670288086
    3. ',y' → logprob: -6.512502670288086
    4. ' ,' → logprob: -7.012502670288086
    5. '):
' → logprob: -7.012502670288086
    6. ',x' → logprob: -9.137502670288086
    7. ',i' → logprob: -9.512502670288086
    8. '[' → logprob: -10.137502670288086
    9. ' ):' → logprob: -10.262502670288086
    10. '1' → logprob: -10.262502670288086

Token 152: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07212747633457184
    2. ' y' → logprob: -2.6971275806427
    3. 'i' → logprob: -6.947127342224121
    4. 'j' → logprob: -7.322127342224121
    5. ' ' → logprob: -9.197127342224121
    6. ')' → logprob: -9.572127342224121
    7. '   ' → logprob: -9.697127342224121
    8. 'x' → logprob: -9.822127342224121
    9. ' j' → logprob: -9.947127342224121
    10. ' i' → logprob: -10.072127342224121

Token 153: '0' (ID: 15)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6052273511886597
    2. '):' → logprob: -1.4802273511886597
    3. '-' → logprob: -2.355227470397949
    4. '1' → logprob: -3.230227470397949
    5. '):
' → logprob: -3.230227470397949
    6. ')' → logprob: -3.605227470397949
    7. ',' → logprob: -4.480227470397949
    8. '):

' → logprob: -6.105227470397949
    9. ''):' → logprob: -6.230227470397949
    10. '_plus' → logprob: -6.480227470397949

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2624795734882355
    2. '):
' → logprob: -1.512479543685913
    3. ',' → logprob: -4.887479782104492
    4. ')' → logprob: -5.887479782104492
    5. '):

' → logprob: -9.762479782104492
    6. ' ):' → logprob: -9.762479782104492
    7. '):
' → logprob: -10.887479782104492
    8. 'x' → logprob: -11.637479782104492
    9. '1' → logprob: -11.762479782104492
    10. ' ):
' → logprob: -12.012479782104492

Token 155: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07186690717935562
    2. '   ' → logprob: -2.696866989135742
    3. '):' → logprob: -6.946866989135742
    4. ':
' → logprob: -7.571866989135742
    5. '():' → logprob: -8.196866989135742
    6. ' :' → logprob: -10.446866989135742
    7. '<|end|>' → logprob: -10.821866989135742
    8. '#:' → logprob: -11.071866989135742
    9. ',' → logprob: -11.196866989135742
    10. ')' → logprob: -11.196866989135742

Token 156: ' return' (ID: 622)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2014731764793396
    2. 'return' (adapté à ' return') → logprob: -1.9514732360839844
    3. ' return' → logprob: -3.7014732360839844
    4. ' abs' → logprob: -4.451473236083984
    5. '   ' → logprob: -5.951473236083984
    6. 'max' → logprob: -7.326473236083984
    7. '(abs' → logprob: -8.076473236083984
    8. 'INF' → logprob: -8.326473236083984
    9. '(H' → logprob: -9.701473236083984
    10. 'if' → logprob: -10.076473236083984

Token 157: ' max' (ID: 2999)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.25417360663414
    2. '(H' → logprob: -2.379173517227173
    3. ' abs' → logprob: -2.754173517227173
    4. '(abs' → logprob: -3.004173517227173
    5. ' (' → logprob: -4.004173755645752
    6. 'min' → logprob: -9.629173278808594
    7. '(' → logprob: -9.629173278808594
    8. '
' → logprob: -10.379173278808594
    9. 'H' → logprob: -10.504173278808594
    10. ' ' → logprob: -10.504173278808594

Token 158: '(' (ID: 7)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.19470208883285522
    2. '(' → logprob: -1.8197021484375
    3. '(abs' → logprob: -4.3197021484375
    4. 'abs' → logprob: -7.1947021484375
    5. '0' → logprob: -7.4447021484375
    6. 'H' → logprob: -8.6947021484375
    7. '(
' → logprob: -11.1947021484375
    8. ' abs' → logprob: -11.8197021484375
    9. '((' → logprob: -12.5697021484375
    10. '(

' → logprob: -12.5697021484375

Token 159: '0' (ID: 15)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.057561300694942474
    2. 'abs' → logprob: -3.0575613975524902
    3. '0' → logprob: -4.80756139755249
    4. '(H' → logprob: -7.93256139755249
    5. '(abs' → logprob: -8.807560920715332
    6. ' abs' → logprob: -9.182560920715332
    7. ' H' → logprob: -9.307560920715332
    8. ')' → logprob: -10.807560920715332
    9. ',H' → logprob: -11.682560920715332
    10. '(' → logprob: -11.932560920715332

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005412388709373772
    2. ',H' → logprob: -7.6255412101745605
    3. ' ,' → logprob: -10.000541687011719
    4. ',
' → logprob: -12.625541687011719
    5. 'H' → logprob: -13.375541687011719
    6. ' if' → logprob: -14.500541687011719
    7. '   ' → logprob: -14.625541687011719
    8. ' H' → logprob: -14.625541687011719
    9. ',x' → logprob: -14.750541687011719
    10. ')' → logprob: -14.750541687011719

Token 161: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.055331747978925705
    2. ' H' → logprob: -2.9303317070007324
    3. 'abs' → logprob: -8.43033218383789
    4. ' abs' → logprob: -8.80533218383789
    5. '(H' → logprob: -10.55533218383789
    6. 'x' → logprob: -10.80533218383789
    7. ' ' → logprob: -11.68033218383789
    8. '   ' → logprob: -12.18033218383789
    9. '	H' → logprob: -12.30533218383789
    10. ' x' → logprob: -12.43033218383789

Token 162: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00016766376211307943
    2. 'x' → logprob: -9.500167846679688
    3. '[' → logprob: -9.625167846679688
    4. ' [' → logprob: -11.500167846679688
    5. ' x' → logprob: -12.500167846679688
    6. '][' → logprob: -12.875167846679688
    7. ']' → logprob: -13.125167846679688
    8. ')' → logprob: -13.375167846679688
    9. '(x' → logprob: -13.375167846679688
    10. '```' → logprob: -13.875167846679688

Token 163: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006253490573726594
    2. ']-' → logprob: -7.625625133514404
    3. ' ]' → logprob: -9.875625610351562
    4. '-' → logprob: -9.875625610351562
    5. '[x' → logprob: -10.875625610351562
    6. '[' → logprob: -12.000625610351562
    7. ' -' → logprob: -12.125625610351562
    8. '"]' → logprob: -14.125625610351562
    9. 'x' → logprob: -14.375625610351562
    10. ']]' → logprob: -14.500625610351562

Token 164: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17895877361297607
    2. '-' → logprob: -2.0539588928222656
    3. ' -' → logprob: -3.4289588928222656
    4. ']-' → logprob: -6.053958892822266
    5. '[' → logprob: -7.303958892822266
    6. '[x' → logprob: -8.928958892822266
    7. ')' → logprob: -10.678958892822266
    8. ' ' → logprob: -11.803958892822266
    9. ' ]' → logprob: -11.803958892822266
    10. '[]' → logprob: -12.303958892822266

Token 165: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0003062646137550473
    2. ' H' → logprob: -8.125306129455566
    3. ' ' → logprob: -12.875306129455566
    4. 'max' → logprob: -13.500306129455566
    5. '   ' → logprob: -13.500306129455566
    6. '(H' → logprob: -13.500306129455566
    7. '(' → logprob: -13.750306129455566
    8. 'x' → logprob: -14.125306129455566
    9. ')' → logprob: -14.250306129455566
    10. '  ' → logprob: -15.000306129455566

Token 166: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0017413432942703366
    2. 'x' → logprob: -6.501741409301758
    3. '[' → logprob: -8.751741409301758
    4. '(x' → logprob: -11.251741409301758
    5. ' [' → logprob: -11.376741409301758
    6. '][' → logprob: -11.376741409301758
    7. ']' → logprob: -11.376741409301758
    8. ' x' → logprob: -11.626741409301758
    9. '[
' → logprob: -11.876741409301758
    10. '0' → logprob: -12.501741409301758

Token 167: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012308525037951767
    2. '])' → logprob: -10.000123023986816
    3. '[' → logprob: -10.625123023986816
    4. '[x' → logprob: -10.625123023986816
    5. ']' → logprob: -12.000123023986816
    6. 'x' → logprob: -12.125123023986816
    7. ' ' → logprob: -12.125123023986816
    8. 'o' → logprob: -13.125123023986816
    9. '_' → logprob: -13.250123023986816
    10. '```' → logprob: -13.625123023986816

Token 168: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0022467232774943113
    2. ')' → logprob: -6.252246856689453
    3. ')])' → logprob: -9.002246856689453
    4. ']' → logprob: -9.377246856689453
    5. '[x' → logprob: -10.502246856689453
    6. '[' → logprob: -10.877246856689453
    7. ' ])' → logprob: -11.252246856689453
    8. '))' → logprob: -11.627246856689453
    9. '])
' → logprob: -11.877246856689453
    10. '-' → logprob: -12.002246856689453

Token 169: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011273572221398354
    2. '<|end|>' → logprob: -5.136273384094238
    3. '
' → logprob: -5.761273384094238
    4. '```' → logprob: -6.761273384094238
    5. ')' → logprob: -8.011273384094238
    6. '<|end|>' → logprob: -8.761273384094238
    7. '\n' → logprob: -9.136273384094238
    8. ' def' → logprob: -9.261273384094238
    9. '[' → logprob: -9.261273384094238
    10. '#' → logprob: -9.886273384094238

Token 170: ' update' (ID: 4027)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4125715494155884
    2. ' solve' → logprob: -1.6625715494155884
    3. 'solve' → logprob: -1.6625715494155884
    4. ' main' → logprob: -2.412571430206299
    5. ' def' → logprob: -2.787571430206299
    6. 'main' → logprob: -2.912571430206299
    7. 'compute' → logprob: -3.287571430206299
    8. ' compute' → logprob: -3.537571430206299
    9. 'min' → logprob: -3.787571430206299
    10. 'calculate' → logprob: -4.162571430206299

Token 171: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.033307917416095734
    2. '_' → logprob: -3.6583080291748047
    3. '(dp' → logprob: -5.658308029174805
    4. '(' → logprob: -5.908308029174805
    5. '(_' → logprob: -8.533308029174805
    6. '_lp' → logprob: -9.033308029174805
    7. '```' → logprob: -9.658308029174805
    8. '_cost' → logprob: -9.908308029174805
    9. '_DP' → logprob: -9.908308029174805
    10. '_(' → logprob: -9.908308029174805

Token 172: '_cell' (ID: 39197)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0015165306394919753
    2. '(' → logprob: -6.501516342163086
    3. ' (' → logprob: -11.626516342163086
    4. '(n' → logprob: -12.376516342163086
    5. 'dp' → logprob: -14.626516342163086
    6. '(df' → logprob: -15.501516342163086
    7. '(
' → logprob: -16.001516342163086
    8. '(def' → logprob: -16.626516342163086
    9. ' dp' → logprob: -17.001516342163086
    10. '(D' → logprob: -17.501516342163086

Token 173: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.008691268973052502
    2. '(' → logprob: -4.758691310882568
    3. ' (' → logprob: -9.50869083404541
    4. '(i' → logprob: -14.50869083404541
    5. '(
' → logprob: -14.75869083404541
    6. 'dp' → logprob: -15.63369083404541
    7. '(df' → logprob: -15.63369083404541
    8. '(row' → logprob: -15.75869083404541
    9. '(d' → logprob: -16.008691787719727
    10. '(def' → logprob: -16.133691787719727

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014924844726920128
    2. ' ,' → logprob: -7.751492500305176
    3. ',i' → logprob: -8.001492500305176
    4. '[x' → logprob: -8.376492500305176
    5. '[i' → logprob: -8.751492500305176
    6. ',x' → logprob: -9.001492500305176
    7. '[' → logprob: -9.126492500305176
    8. ' ' → logprob: -10.751492500305176
    9. ',n' → logprob: -11.001492500305176
    10. ')' → logprob: -11.001492500305176

Token 175: ' H' (ID: 487)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6660663485527039
    2. 'i' → logprob: -0.9160663485527039
    3. ' x' → logprob: -3.2910664081573486
    4. 'x' → logprob: -3.7910664081573486
    5. ' n' → logprob: -4.4160661697387695
    6. 'n' → logprob: -5.0410661697387695
    7. ' dp' → logprob: -6.0410661697387695
    8. 'dp' → logprob: -6.4160661697387695
    9. ' H' → logprob: -6.5410661697387695
    10. 'H' → logprob: -7.1660661697387695

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002096197713399306
    2. ' ,' → logprob: -8.62520980834961
    3. ',x' → logprob: -10.75020980834961
    4. 'x' → logprob: -12.87520980834961
    5. '   ' → logprob: -13.00020980834961
    6. ')' → logprob: -14.37520980834961
    7. '[x' → logprob: -14.75020980834961
    8. ',i' → logprob: -14.75020980834961
    9. ',n' → logprob: -14.87520980834961
    10. ',
' → logprob: -15.12520980834961

Token 177: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2937756776809692
    2. ' i' → logprob: -1.4187756776809692
    3. 'x' → logprob: -1.5437756776809692
    4. ' x' → logprob: -1.5437756776809692
    5. ' n' → logprob: -3.5437755584716797
    6. 'n' → logprob: -3.7937755584716797
    7. ' dp' → logprob: -6.91877555847168
    8. 'k' → logprob: -7.04377555847168
    9. ' k' → logprob: -7.29377555847168
    10. 'dp' → logprob: -7.41877555847168

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008415495976805687
    2. ' ,' → logprob: -7.3758416175842285
    3. '0' → logprob: -9.00084114074707
    4. ',x' → logprob: -9.75084114074707
    5. ' ' → logprob: -12.00084114074707
    6. '   ' → logprob: -12.25084114074707
    7. ',
' → logprob: -12.25084114074707
    8. '_,' → logprob: -12.62584114074707
    9. ')' → logprob: -12.87584114074707
    10. 'x' → logprob: -13.00084114074707

Token 179: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7092553973197937
    2. 'k' → logprob: -1.5842554569244385
    3. ' x' → logprob: -1.7092554569244385
    4. ' k' → logprob: -2.8342554569244385
    5. 'i' → logprob: -3.8342554569244385
    6. 'j' → logprob: -4.459255218505859
    7. ' i' → logprob: -4.834255218505859
    8. ' j' → logprob: -5.084255218505859
    9. 'y' → logprob: -6.209255218505859
    10. ' y' → logprob: -6.709255218505859

Token 180: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026858771219849586
    2. '):' → logprob: -3.9018588066101074
    3. '):
' → logprob: -5.151858806610107
    4. '   ' → logprob: -7.901858806610107
    5. '):
' → logprob: -10.27685832977295
    6. ' ,' → logprob: -10.27685832977295
    7. ',x' → logprob: -11.15185832977295
    8. ')' → logprob: -11.27685832977295
    9. ',y' → logprob: -12.27685832977295
    10. '    ' → logprob: -12.27685832977295

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018287137150764465
    2. ' for' → logprob: -5.143287181854248
    3. 'min' → logprob: -5.893287181854248
    4. 'for' → logprob: -6.018287181854248
    5. ' min' → logprob: -6.518287181854248
    6. 'cost' → logprob: -6.893287181854248
    7. 'dp' → logprob: -7.018287181854248
    8. ' cost' → logprob: -7.143287181854248
    9. ' if' → logprob: -7.393287181854248
    10. 'if' → logprob: -7.643287181854248

Token 182: ' candidates' (ID: 18116)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7013068795204163
    2. 'min' → logprob: -2.0763068199157715
    3. '   ' → logprob: -2.3263068199157715
    4. 'dp' → logprob: -2.5763068199157715
    5. 'best' → logprob: -2.8263068199157715
    6. 'if' → logprob: -3.3263068199157715
    7. ' for' → logprob: -3.5763068199157715
    8. 'n' → logprob: -3.7013068199157715
    9. 'cost' → logprob: -3.7013068199157715
    10. ' min' → logprob: -4.9513068199157715

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029781386256217957
    2. '=' → logprob: -3.5297813415527344
    3. '=[]' → logprob: -11.779781341552734
    4. ' ' → logprob: -11.904781341552734
    5. ',' → logprob: -12.154781341552734
    6. ' =
' → logprob: -13.279781341552734
    7. ')' → logprob: -13.279781341552734
    8. '   ' → logprob: -13.404781341552734
    9. ' =[' → logprob: -13.404781341552734
    10. '[' → logprob: -14.154781341552734

Token 184: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.33883434534072876
    2. '[
' → logprob: -1.713834285736084
    3. '[]' → logprob: -2.338834285736084
    4. '[]
' → logprob: -4.838834285736084
    5. '[min' → logprob: -6.838834285736084
    6. '[x' → logprob: -8.213834762573242
    7. '[y' → logprob: -8.338834762573242
    8. '[max' → logprob: -8.463834762573242
    9. '[(' → logprob: -8.588834762573242
    10. '[k' → logprob: -8.963834762573242

Token 185: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003919463779311627
    2. ' dp' → logprob: -8.875391960144043
    3. 'INF' → logprob: -9.125391960144043
    4. '(dp' → logprob: -9.875391960144043
    5. '   ' → logprob: -10.500391960144043
    6. 'compute' → logprob: -10.500391960144043
    7. ']' → logprob: -11.875391960144043
    8. '	dp' → logprob: -12.375391960144043
    9. '0' → logprob: -12.500391960144043
    10. '(' → logprob: -13.000391960144043

Token 186: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.002236139727756381
    2. 'x' → logprob: -6.502236366271973
    3. '[y' → logprob: -7.502236366271973
    4. '[' → logprob: -9.252236366271973
    5. '][' → logprob: -10.502236366271973
    6. ' [' → logprob: -11.127236366271973
    7. '[
' → logprob: -11.377236366271973
    8. ' x' → logprob: -11.377236366271973
    9. '(x' → logprob: -12.752236366271973
    10. ',x' → logprob: -12.877236366271973

Token 187: '0' (ID: 15)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.286767840385437
    2. '-' → logprob: -1.536767840385437
    3. ' -' → logprob: -4.036767959594727
    4. '[y' → logprob: -4.661767959594727
    5. '[' → logprob: -5.911767959594727
    6. 'y' → logprob: -6.536767959594727
    7. ' ][' → logprob: -6.536767959594727
    8. ']' → logprob: -7.786767959594727
    9. ' ' → logprob: -8.286767959594727
    10. '   ' → logprob: -8.536767959594727

Token 188: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007580502424389124
    2. 'y' → logprob: -8.250758171081543
    3. '[y' → logprob: -8.500758171081543
    4. ' ][' → logprob: -8.750758171081543
    5. ']' → logprob: -9.375758171081543
    6. ' y' → logprob: -10.500758171081543
    7. '[' → logprob: -12.250758171081543
    8. ' ' → logprob: -12.750758171081543
    9. '
' → logprob: -13.000758171081543
    10. '

' → logprob: -13.688258171081543

Token 189: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00026991849881596863
    2. ' y' → logprob: -8.375269889831543
    3. ']' → logprob: -11.250269889831543
    4. '
' → logprob: -12.000269889831543
    5. ' ' → logprob: -12.375269889831543
    6. 'x' → logprob: -12.375269889831543
    7. '(y' → logprob: -12.625269889831543
    8. '   ' → logprob: -13.375269889831543
    9. '0' → logprob: -13.875269889831543
    10. '[y' → logprob: -14.250269889831543

Token 190: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4607628881931305
    2. ']' → logprob: -1.085762858390808
    3. ' -' → logprob: -3.4607629776000977
    4. ']+' → logprob: -9.335762977600098
    5. 'x' → logprob: -10.585762977600098
    6. '],' → logprob: -11.960762977600098
    7. '[' → logprob: -12.335762977600098
    8. ' ]' → logprob: -12.835762977600098
    9. '1' → logprob: -12.960762977600098
    10. 'y' → logprob: -12.960762977600098

Token 191: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2378600735682994e-05
    2. ' ' → logprob: -10.375032424926758
    3. '-' → logprob: -14.375032424926758
    4. ']' → logprob: -15.500032424926758
    5. '   ' → logprob: -15.625032424926758
    6. '
' → logprob: -15.750032424926758
    7. '  ' → logprob: -16.875032424926758
    8. '```' → logprob: -17.687532424926758
    9. '...' → logprob: -18.187532424926758
    10. '

' → logprob: -18.625032424926758

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -11.250014305114746
    3. '   ' → logprob: -15.000014305114746
    4. '
' → logprob: -15.500014305114746
    5. ']' → logprob: -15.625014305114746
    6. '```' → logprob: -16.68751335144043
    7. '  ' → logprob: -16.75001335144043
    8. '-' → logprob: -16.81251335144043
    9. ')' → logprob: -17.25001335144043
    10. '...' → logprob: -17.37501335144043

Token 193: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012882133014500141
    2. ' +' → logprob: -7.251288414001465
    3. '+' → logprob: -8.001288414001465
    4. ']+' → logprob: -8.751288414001465
    5. ')' → logprob: -10.126288414001465
    6. ' ]' → logprob: -10.626288414001465
    7. ']
' → logprob: -12.251288414001465
    8. '   ' → logprob: -12.626288414001465
    9. 'for' → logprob: -13.126288414001465
    10. ',' → logprob: -13.251288414001465

Token 194: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1004212498664856
    2. '+' → logprob: -2.350421190261841
    3. 'for' → logprob: -9.350420951843262
    4. ' for' → logprob: -9.350420951843262
    5. '   ' → logprob: -11.600420951843262
    6. ' ' → logprob: -11.850420951843262
    7. ' +
' → logprob: -12.100420951843262
    8. ',' → logprob: -12.850420951843262
    9. '+
' → logprob: -12.975420951843262
    10. '    ' → logprob: -13.100420951843262

Token 195: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0031844829209148884
    2. ' compute' → logprob: -5.7531843185424805
    3. 'max' → logprob: -12.25318431854248
    4. '
' → logprob: -14.50318431854248
    5. 'cost' → logprob: -14.62818431854248
    6. ' max' → logprob: -14.87818431854248
    7. 'calculate' → logprob: -14.87818431854248
    8. '   ' → logprob: -16.378185272216797
    9. '.compute' → logprob: -16.628185272216797
    10. ' ' → logprob: -16.753185272216797

Token 196: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.6240566083070007e-06
    2. 'cost' → logprob: -13.500001907348633
    3. 'Cost' → logprob: -16.625001907348633
    4. '_COST' → logprob: -17.250001907348633
    5. ' cost' → logprob: -18.000001907348633
    6. '_co' → logprob: -19.000001907348633
    7. '_' → logprob: -19.500001907348633
    8. ' _' → logprob: -19.875001907348633
    9. '-cost' → logprob: -20.000001907348633
    10. '_code' → logprob: -20.000001907348633

Token 197: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -5.9153885558771435e-06
    2. '(' → logprob: -12.125005722045898
    3. ' (' → logprob: -15.125005722045898
    4. '(
' → logprob: -15.625005722045898
    5. ')' → logprob: -18.2500057220459
    6. '```' → logprob: -19.0000057220459
    7. '(

' → logprob: -19.1250057220459
    8. 'H' → logprob: -19.8750057220459
    9. '

' → logprob: -19.8750057220459
    10. '
' → logprob: -20.0000057220459

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02793305739760399
    2. ',x' → logprob: -4.027933120727539
    3. '(x' → logprob: -4.652933120727539
    4. ' ,' → logprob: -8.777933120727539
    5. '(' → logprob: -10.402933120727539
    6. ')' → logprob: -11.652933120727539
    7. 'x' → logprob: -12.152933120727539
    8. ',
' → logprob: -14.277933120727539
    9. ' x' → logprob: -14.527933120727539
    10. ' (' → logprob: -14.652933120727539

Token 199: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006733018439263105
    2. ' x' → logprob: -5.006732940673828
    3. ',' → logprob: -11.506732940673828
    4. ',x' → logprob: -12.506732940673828
    5. ')' → logprob: -13.506732940673828
    6. ')x' → logprob: -14.131732940673828
    7. '(x' → logprob: -14.506732940673828
    8. '	x' → logprob: -15.131732940673828
    9. '
' → logprob: -15.131732940673828
    10. ' ' → logprob: -15.506732940673828

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008918096427805722
    2. ',x' → logprob: -7.25089168548584
    3. ' ,' → logprob: -8.62589168548584
    4. ' ' → logprob: -14.25089168548584
    5. 'x' → logprob: -14.50089168548584
    6. '   ' → logprob: -15.00089168548584
    7. ',
' → logprob: -15.62589168548584
    8. ',y' → logprob: -15.87589168548584
    9. '[x' → logprob: -15.87589168548584
    10. ')' → logprob: -16.250892639160156

Token 201: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004624749533832073
    2. ' x' → logprob: -5.379624843597412
    3. ' ' → logprob: -13.129624366760254
    4. '
' → logprob: -14.004624366760254
    5. '   ' → logprob: -14.379624366760254
    6. ')' → logprob: -14.629624366760254
    7. ')x' → logprob: -15.629624366760254
    8. '  ' → logprob: -16.50462532043457
    9. '	x' → logprob: -16.75462532043457
    10. ']' → logprob: -16.87962532043457

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5213274309644476e-05
    2. ')' → logprob: -12.000015258789062
    3. 'x' → logprob: -12.500015258789062
    4. '-' → logprob: -13.625015258789062
    5. ' ' → logprob: -13.875015258789062
    6. '
' → logprob: -14.375015258789062
    7. '```' → logprob: -14.375015258789062
    8. '])' → logprob: -14.875015258789062
    9. '[' → logprob: -14.875015258789062
    10. ')]' → logprob: -15.125015258789062

Token 203: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013512482109945267
    2. 'for' → logprob: -9.37513542175293
    3. ')
' → logprob: -10.87513542175293
    4. ' for' → logprob: -11.75013542175293
    5. ' )' → logprob: -12.12513542175293
    6. '   ' → logprob: -12.25013542175293
    7. ']' → logprob: -12.75013542175293
    8. 'x' → logprob: -12.87513542175293
    9. ' ' → logprob: -13.12513542175293
    10. '```' → logprob: -13.37513542175293

Token 204: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10031050443649292
    2. 'for' → logprob: -2.3503105640411377
    3. '   ' → logprob: -9.600310325622559
    4. '	for' → logprob: -10.475310325622559
    5. ' ' → logprob: -12.725310325622559
    6. '
' → logprob: -12.975310325622559
    7. '    ' → logprob: -14.100310325622559
    8. ')' → logprob: -14.475310325622559
    9. '  ' → logprob: -15.475310325622559
    10. '       ' → logprob: -15.600310325622559

Token 205: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.13950297236442566
    2. 'x' → logprob: -2.389503002166748
    3. ' range' → logprob: -3.264503002166748
    4. 'range' → logprob: -8.13950252532959
    5. ' xrange' → logprob: -11.76450252532959
    6. '	x' → logprob: -12.01450252532959
    7. ' in' → logprob: -12.51450252532959
    8. '
' → logprob: -12.88950252532959
    9. ' ' → logprob: -13.76450252532959
    10. 'Range' → logprob: -14.13950252532959

Token 206: '0' (ID: 15)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6356281042098999
    2. '0' → logprob: -0.7606281042098999
    3. 'in' → logprob: -6.1356282234191895
    4. '_' → logprob: -7.8856282234191895
    5. 'x' → logprob: -8.135627746582031
    6. ' ' → logprob: -9.510627746582031
    7. 'range' → logprob: -9.635627746582031
    8. '```' → logprob: -11.760627746582031
    9. ' range' → logprob: -12.010627746582031
    10. '
' → logprob: -12.135627746582031

Token 207: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011080006137490273
    2. 'in' → logprob: -4.511079788208008
    3. ' ' → logprob: -11.011079788208008
    4. 'range' → logprob: -11.511079788208008
    5. 'x' → logprob: -13.761079788208008
    6. 'import' → logprob: -13.886079788208008
    7. '<|end|>' → logprob: -14.011079788208008
    8. ')' → logprob: -14.136079788208008
    9. ' range' → logprob: -15.261079788208008
    10. ',' → logprob: -15.261079788208008

Token 208: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326258182525635
    2. 'range' → logprob: -1.3132625818252563
    3. '(range' → logprob: -14.063262939453125
    4. '	range' → logprob: -16.438262939453125
    5. ' xrange' → logprob: -17.688262939453125
    6. '_range' → logprob: -19.438262939453125
    7. '.range' → logprob: -19.438262939453125
    8. '   ' → logprob: -19.688262939453125
    9. ' ' → logprob: -19.813262939453125
    10. '
' → logprob: -20.063262939453125

Token 209: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.695652425289154
    2. '(y' → logprob: -0.695652425289154
    3. '(max' → logprob: -6.570652484893799
    4. '(' → logprob: -6.820652484893799
    5. '((' → logprob: -13.07065200805664
    6. 'y' → logprob: -13.07065200805664
    7. ' (' → logprob: -13.69565200805664
    8. '(len' → logprob: -13.82065200805664
    9. 'max' → logprob: -14.07065200805664
    10. '(k' → logprob: -14.32065200805664

Token 210: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06259504705667496
    2. ')' → logprob: -2.9375951290130615
    3. ')])' → logprob: -5.062594890594482
    4. ' )' → logprob: -7.187594890594482
    5. 'y' → logprob: -8.56259536743164
    6. '])]' → logprob: -9.06259536743164
    7. ')][' → logprob: -9.43759536743164
    8. '-' → logprob: -9.81259536743164
    9. ' -' → logprob: -10.18759536743164
    10. '0' → logprob: -10.31259536743164

Token 211: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15219026803970337
    2. '   ' → logprob: -2.5271902084350586
    3. ')' → logprob: -3.1521902084350586
    4. 'min' → logprob: -4.902190208435059
    5. ' dp' → logprob: -5.152190208435059
    6. ')
' → logprob: -6.152190208435059
    7. 'if' → logprob: -7.527190208435059
    8. 'return' → logprob: -7.902190208435059
    9. '
' → logprob: -8.027190208435059
    10. ']' → logprob: -8.402190208435059

Token 212: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0007369658560492098
    2. ' dp' → logprob: -7.375737190246582
    3. '   ' → logprob: -9.625737190246582
    4. 'return' → logprob: -11.125737190246582
    5. 'min' → logprob: -11.250737190246582
    6. '
' → logprob: -12.125737190246582
    7. ' ' → logprob: -12.750737190246582
    8. 'if' → logprob: -13.000737190246582
    9. '	dp' → logprob: -13.500737190246582
    10. '_dp' → logprob: -14.000737190246582

Token 213: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -12.500005722045898
    3. '][' → logprob: -13.625005722045898
    4. ' [' → logprob: -15.250005722045898
    5. 'x' → logprob: -15.875005722045898
    6. '[
' → logprob: -16.3750057220459
    7. ')[' → logprob: -17.2500057220459
    8. '}[' → logprob: -17.3750057220459
    9. '[y' → logprob: -17.3750057220459
    10. '```' → logprob: -17.7500057220459

Token 214: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003255719493608922
    2. '[y' → logprob: -9.000325202941895
    3. ']' → logprob: -9.375325202941895
    4. '[' → logprob: -9.375325202941895
    5. ' ][' → logprob: -10.750325202941895
    6. '[x' → logprob: -12.375325202941895
    7. '"][' → logprob: -13.375325202941895
    8. '
' → logprob: -14.250325202941895
    9. 'y' → logprob: -14.250325202941895
    10. ''][' → logprob: -14.750325202941895

Token 215: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.935296834039036e-06
    2. ' y' → logprob: -12.87500286102295
    3. '<|end|>' → logprob: -15.12500286102295
    4. ']' → logprob: -18.000003814697266
    5. '
' → logprob: -18.500003814697266
    6. ' ' → logprob: -18.625003814697266
    7. '	y' → logprob: -19.625003814697266
    8. ')' → logprob: -20.000003814697266
    9. '   ' → logprob: -20.625003814697266
    10. '<|end|>' → logprob: -20.750003814697266

Token 216: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006737126968801022
    2. ']=' → logprob: -8.000673294067383
    3. ' ]' → logprob: -8.875673294067383
    4. '=' → logprob: -9.000673294067383
    5. ' =' → logprob: -9.875673294067383
    6. ')' → logprob: -11.000673294067383
    7. 'min' → logprob: -12.625673294067383
    8. '=min' → logprob: -13.500673294067383
    9. ']+=' → logprob: -13.875673294067383
    10. '])' → logprob: -14.750673294067383

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38713040947914124
    2. ' =' → logprob: -1.1371303796768188
    3. '=min' → logprob: -8.262130737304688
    4. 'min' → logprob: -13.887130737304688
    5. '.=' → logprob: -15.887130737304688
    6. ' ' → logprob: -16.762130737304688
    7. ' min' → logprob: -17.012130737304688
    8. ',' → logprob: -17.512130737304688
    9. ')' → logprob: -17.637130737304688
    10. '=

' → logprob: -18.137130737304688

Token 218: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.023245712742209435
    2. ' min' → logprob: -3.7732458114624023
    3. '	min' → logprob: -16.398244857788086
    4. '   ' → logprob: -16.648244857788086
    5. 'minimum' → logprob: -18.273244857788086
    6. 'mini' → logprob: -19.148244857788086
    7. 'max' → logprob: -19.148244857788086
    8. '
' → logprob: -19.148244857788086
    9. ' ' → logprob: -19.273244857788086
    10. '(min' → logprob: -19.523244857788086

Token 219: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.1875571544806007e-05
    2. '(' → logprob: -11.375011444091797
    3. 'c' → logprob: -15.000011444091797
    4. ' (' → logprob: -16.875011444091797
    5. '(
' → logprob: -17.250011444091797
    6. '(candidate' → logprob: -17.875011444091797
    7. '(min' → logprob: -20.250011444091797
    8. '[c' → logprob: -21.125011444091797
    9. '(C' → logprob: -21.625011444091797
    10. '(

' → logprob: -21.750011444091797

Token 220: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.01021780539304018
    2. 'and' → logprob: -4.760217666625977
    3. 'c' → logprob: -7.510217666625977
    4. '[c' → logprob: -7.635217666625977
    5. '(c' → logprob: -8.010217666625977
    6. '[' → logprob: -9.010217666625977
    7. 'andid' → logprob: -9.510217666625977
    8. '(' → logprob: -11.135217666625977
    9. '{' → logprob: -11.635217666625977
    10. 'andi' → logprob: -12.260217666625977

Token 221: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0206720617134124e-05
    2. ' )' → logprob: -12.12501049041748
    3. ')
' → logprob: -12.75001049041748
    4. '())' → logprob: -13.75001049041748
    5. '()' → logprob: -16.125009536743164
    6. '<|end|>' → logprob: -16.125009536743164
    7. '   ' → logprob: -16.500009536743164
    8. '))' → logprob: -16.500009536743164
    9. '])' → logprob: -16.500009536743164
    10. ']' → logprob: -16.500009536743164

Token 222: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: ' fill' (ID: 6954)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6638376712799072
    2. 'main' → logprob: -0.7888376712799072
    3. ' solve' → logprob: -4.288837432861328
    4. 'solve' → logprob: -4.288837432861328
    5. 'def' → logprob: -6.413837432861328
    6. ' def' → logprob: -8.038837432861328
    7. 'compute' → logprob: -8.788837432861328
    8. ' find' → logprob: -8.788837432861328
    9. 'process' → logprob: -8.913837432861328
    10. 'parse' → logprob: -9.038837432861328

Token 224: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -6.480199954239652e-05
    2. '(dp' → logprob: -10.000064849853516
    3. '_' → logprob: -11.625064849853516
    4. 'dp' → logprob: -11.750064849853516
    5. '_lp' → logprob: -14.500064849853516
    6. '_DP' → logprob: -14.750064849853516
    7. '(_' → logprob: -15.375064849853516
    8. '```' → logprob: -15.625064849853516
    9. ' _' → logprob: -15.875064849853516
    10. '_dn' → logprob: -16.000064849853516

Token 225: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0008725132793188095
    2. '(n' → logprob: -7.500872611999512
    3. '(' → logprob: -8.125872611999512
    4. ' (' → logprob: -11.500872611999512
    5. 'dp' → logprob: -12.250872611999512
    6. '(df' → logprob: -12.750872611999512
    7. 'def' → logprob: -12.750872611999512
    8. '(def' → logprob: -13.000872611999512
    9. '_dp' → logprob: -16.000871658325195
    10. '(
' → logprob: -16.500871658325195

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002371521550230682
    2. ',H' → logprob: -8.500237464904785
    3. ' ,' → logprob: -10.375237464904785
    4. ',n' → logprob: -14.625237464904785
    5. ',
' → logprob: -14.750237464904785
    6. 'H' → logprob: -15.250237464904785
    7. ' H' → logprob: -15.375237464904785
    8. ')' → logprob: -15.500237464904785
    9. '   ' → logprob: -15.500237464904785
    10. '):' → logprob: -15.750237464904785

Token 227: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.014043391682207584
    2. ' H' → logprob: -4.51404333114624
    3. 'n' → logprob: -5.88904333114624
    4. ' n' → logprob: -9.014043807983398
    5. 'dp' → logprob: -9.389043807983398
    6. ')' → logprob: -12.264043807983398
    7. '   ' → logprob: -12.889043807983398
    8. ' dp' → logprob: -13.389043807983398
    9. 'N' → logprob: -13.514043807983398
    10. '```' → logprob: -13.639043807983398

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000543261703569442
    2. ',n' → logprob: -7.875543117523193
    3. ' ,' → logprob: -8.875543594360352
    4. '   ' → logprob: -11.750543594360352
    5. '):
' → logprob: -12.000543594360352
    6. ',
' → logprob: -12.500543594360352
    7. 'n' → logprob: -12.875543594360352
    8. '):' → logprob: -13.875543594360352
    9. ',k' → logprob: -14.000543594360352
    10. ',N' → logprob: -15.375543594360352

Token 229: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14314398169517517
    2. ' n' → logprob: -2.018143892288208
    3. 'k' → logprob: -8.018143653869629
    4. ' k' → logprob: -9.768143653869629
    5. '   ' → logprob: -10.518143653869629
    6. ' ' → logprob: -11.518143653869629
    7. 'N' → logprob: -11.643143653869629
    8. ',' → logprob: -11.955643653869629
    9. ')' → logprob: -12.018143653869629
    10. 'x' → logprob: -12.268143653869629

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007098094210959971
    2. ' ,' → logprob: -7.3757100105285645
    3. ',k' → logprob: -9.750709533691406
    4. ',
' → logprob: -11.000709533691406
    5. '):
' → logprob: -12.500709533691406
    6. '   ' → logprob: -14.125709533691406
    7. 'k' → logprob: -14.125709533691406
    8. 'def' → logprob: -14.625709533691406
    9. ',

' → logprob: -15.000709533691406
    10. '
' → logprob: -15.125709533691406

Token 231: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001504982472397387
    2. ' k' → logprob: -6.501504898071289
    3. 'K' → logprob: -14.376504898071289
    4. 'n' → logprob: -14.626504898071289
    5. ')' → logprob: -14.751504898071289
    6. '```' → logprob: -14.751504898071289
    7. '   ' → logprob: -15.126504898071289
    8. ' ' → logprob: -15.626504898071289
    9. '	k' → logprob: -17.06400489807129
    10. 'y' → logprob: -17.12650489807129

Token 232: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2754032015800476
    2. ',' → logprob: -1.6504032611846924
    3. '):
' → logprob: -3.0254032611846924
    4. '):
' → logprob: -9.150403022766113
    5. '   ' → logprob: -9.900403022766113
    6. ')' → logprob: -10.025403022766113
    7. '):

' → logprob: -12.400403022766113
    8. ':' → logprob: -12.400403022766113
    9. ' ):' → logprob: -12.650403022766113
    10. ',y' → logprob: -12.775403022766113

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007112090941518545
    2. ' for' → logprob: -5.3821120262146
    3. 'for' → logprob: -6.0071120262146
    4. '	for' → logprob: -11.382112503051758
    5. '```' → logprob: -11.382112503051758
    6. '
' → logprob: -12.382112503051758
    7. '    
' → logprob: -15.007112503051758
    8. '   ' → logprob: -15.632112503051758
    9. '``' → logprob: -16.882112503051758
    10. 'def' → logprob: -17.382112503051758

Token 234: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1166762113571167
    2. ' for' → logprob: -2.3666763305664062
    3. '   ' → logprob: -4.116676330566406
    4. '```' → logprob: -10.491676330566406
    5. '``' → logprob: -12.866676330566406
    6. '	for' → logprob: -12.866676330566406
    7. '
' → logprob: -13.241676330566406
    8. ' ' → logprob: -14.116676330566406
    9. '  ' → logprob: -15.116676330566406
    10. '    
' → logprob: -15.991676330566406

Token 235: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20143575966358185
    2. 'x' → logprob: -1.7014358043670654
    3. ' y' → logprob: -11.076436042785645
    4. 'y' → logprob: -13.201436042785645
    5. ' i' → logprob: -13.326436042785645
    6. ' ' → logprob: -13.701436042785645
    7. '	x' → logprob: -14.076436042785645
    8. ' ' → logprob: -14.701436042785645
    9. 'i' → logprob: -14.701436042785645
    10. '_x' → logprob: -15.076436042785645

Token 236: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08898483216762543
    2. 'in' → logprob: -2.463984727859497
    3. ',' → logprob: -11.463984489440918
    4. '	in' → logprob: -11.588984489440918
    5. '   ' → logprob: -11.963984489440918
    6. 'import' → logprob: -12.338984489440918
    7. ' ' → logprob: -12.338984489440918
    8. '1' → logprob: -12.588984489440918
    9. '0' → logprob: -13.838984489440918
    10. 'In' → logprob: -14.088984489440918

Token 237: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '(range' → logprob: -17.251171112060547
    4. '   ' → logprob: -18.751171112060547
    5. ' ' → logprob: -19.501171112060547
    6. '	range' → logprob: -19.751171112060547
    7. 'k' → logprob: -20.126171112060547
    8. 'rang' → logprob: -21.001171112060547
    9. 'n' → logprob: -21.126171112060547
    10. '  ' → logprob: -21.501171112060547

Token 238: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10146567970514297
    2. '(k' → logprob: -2.3514657020568848
    3. '1' → logprob: -6.726465702056885
    4. 'k' → logprob: -9.976465225219727
    5. '(n' → logprob: -11.726465225219727
    6. ' k' → logprob: -13.101465225219727
    7. '(
' → logprob: -13.851465225219727
    8. ' (' → logprob: -14.851465225219727
    9. '(K' → logprob: -14.851465225219727
    10. ' ' → logprob: -14.976465225219727

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005280365236103535
    2. 'k' → logprob: -5.255280494689941
    3. ' ' → logprob: -10.130280494689941
    4. ' k' → logprob: -12.630280494689941
    5. 'n' → logprob: -13.380280494689941
    6. '(k' → logprob: -14.505280494689941
    7. '(' → logprob: -14.755280494689941
    8. '   ' → logprob: -14.755280494689941
    9. '2' → logprob: -15.380280494689941
    10. '0' → logprob: -16.692779541015625

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011546355381142348
    2. ' ,' → logprob: -9.500115394592285
    3. ',n' → logprob: -10.125115394592285
    4. 'n' → logprob: -15.125115394592285
    5. ',
' → logprob: -15.625115394592285
    6. '(n' → logprob: -17.1251163482666
    7. ',k' → logprob: -17.6251163482666
    8. '   ' → logprob: -17.7501163482666
    9. ' ' → logprob: -18.2501163482666
    10. '1' → logprob: -18.3751163482666

Token 241: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.048588961362838745
    2. ' n' → logprob: -3.048588991165161
    3. '   ' → logprob: -14.298588752746582
    4. ' ' → logprob: -14.548588752746582
    5. '	n' → logprob: -15.298588752746582
    6. '
' → logprob: -16.4235897064209
    7. '(n' → logprob: -16.7985897064209
    8. ')' → logprob: -17.1735897064209
    9. ')n' → logprob: -17.1735897064209
    10. '    ' → logprob: -17.2985897064209

Token 242: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020839422941208
    2. ' +' → logprob: -2.350208282470703
    3. '   ' → logprob: -14.225208282470703
    4. '):
' → logprob: -15.100208282470703
    5. '
' → logprob: -15.350208282470703
    6. '+
' → logprob: -15.975208282470703
    7. ' -' → logprob: -16.475208282470703
    8. '+n' → logprob: -16.475208282470703
    9. ' ' → logprob: -16.600208282470703
    10. '＋' → logprob: -16.850208282470703

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014025058771949261
    2. ' ' → logprob: -8.875140190124512
    3. ')' → logprob: -15.500140190124512
    4. '   ' → logprob: -16.250141143798828
    5. '```' → logprob: -17.062641143798828
    6. '
' → logprob: -17.875141143798828
    7. ',' → logprob: -18.562641143798828
    8. '  ' → logprob: -18.625141143798828
    9. '2' → logprob: -19.062641143798828
    10. '):
' → logprob: -19.250141143798828

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.625024795532227
    3. ')' → logprob: -16.000024795532227
    4. '   ' → logprob: -17.125024795532227
    5. '
' → logprob: -17.437524795532227
    6. '(' → logprob: -17.875024795532227
    7. '```' → logprob: -17.875024795532227
    8. '2' → logprob: -17.937524795532227
    9. 'k' → logprob: -18.687524795532227
    10. '１' → logprob: -19.000024795532227

Token 245: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03808555379509926
    2. '):' → logprob: -3.288085460662842
    3. '):
' → logprob: -10.6630859375
    4. '   ' → logprob: -11.7880859375
    5. ':' → logprob: -11.9130859375
    6. ':
' → logprob: -12.9130859375
    7. ' ):
' → logprob: -12.9130859375
    8. ')' → logprob: -14.5380859375
    9. ',' → logprob: -15.2880859375
    10. '():
' → logprob: -15.5380859375

Token 246: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3254128098487854
    2. '       ' → logprob: -1.5754127502441406
    3. 'for' → logprob: -3.2004127502441406
    4. '   ' → logprob: -3.5754127502441406
    5. '	for' → logprob: -6.450412750244141
    6. ' ' → logprob: -8.07541275024414
    7. '	   ' → logprob: -9.45041275024414
    8. '    ' → logprob: -10.07541275024414
    9. ',' → logprob: -10.45041275024414
    10. '<|end|>' → logprob: -11.07541275024414

Token 247: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4741944968700409
    2. ' for' → logprob: -0.9741945266723633
    3. '   ' → logprob: -9.349194526672363
    4. '       ' → logprob: -10.599194526672363
    5. '	for' → logprob: -12.349194526672363
    6. ' ' → logprob: -13.974194526672363
    7. '    ' → logprob: -15.974194526672363
    8. '```' → logprob: -16.724193572998047
    9. '
' → logprob: -16.849193572998047
    10. '  ' → logprob: -17.349193572998047

Token 248: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.16022665798664093
    2. 'y' → logprob: -1.9102267026901245
    3. ' range' → logprob: -13.785226821899414
    4. ' ' → logprob: -14.785226821899414
    5. 'range' → logprob: -14.910226821899414
    6. 'x' → logprob: -15.410226821899414
    7. '	y' → logprob: -16.035226821899414
    8. 'k' → logprob: -16.035226821899414
    9. '    ' → logprob: -16.160226821899414
    10. ' x' → logprob: -16.285226821899414

Token 249: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04300091043114662
    2. 'in' → logprob: -3.1680009365081787
    3. '<|end|>' → logprob: -14.293001174926758
    4. ' ' → logprob: -14.543001174926758
    5. '(' → logprob: -15.918001174926758
    6. 'import' → logprob: -16.043001174926758
    7. 'range' → logprob: -16.668001174926758
    8. '1' → logprob: -16.918001174926758
    9. ')' → logprob: -17.418001174926758
    10. ',' → logprob: -17.668001174926758

Token 250: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01260889321565628
    2. ' range' → logprob: -4.387609004974365
    3. '(range' → logprob: -9.262608528137207
    4. '(' → logprob: -12.637608528137207
    5. '1' → logprob: -14.887608528137207
    6. '	range' → logprob: -15.387608528137207
    7. '   ' → logprob: -16.012609481811523
    8. 'for' → logprob: -16.012609481811523
    9. 'k' → logprob: -16.262609481811523
    10. ' ' → logprob: -16.512609481811523

Token 251: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.249780638725497e-05
    2. '(k' → logprob: -10.375032424926758
    3. ' (' → logprob: -14.250032424926758
    4. '(
' → logprob: -15.125032424926758
    5. '(y' → logprob: -15.250032424926758
    6. '1' → logprob: -16.125032424926758
    7. 'k' → logprob: -17.125032424926758
    8. '((' → logprob: -17.750032424926758
    9. '(x' → logprob: -17.750032424926758
    10. 'def' → logprob: -19.500032424926758

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03203428536653519
    2. 'k' → logprob: -3.532034397125244
    3. '2' → logprob: -6.157034397125244
    4. ' ' → logprob: -9.782033920288086
    5. '(' → logprob: -10.657033920288086
    6. '0' → logprob: -10.782033920288086
    7. 'x' → logprob: -10.782033920288086
    8. ' k' → logprob: -11.282033920288086
    9. 'max' → logprob: -11.907033920288086
    10. '   ' → logprob: -11.907033920288086

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036216014996171
    2. ' ,' → logprob: -8.000362396240234
    3. ',x' → logprob: -11.250362396240234
    4. ',k' → logprob: -11.625362396240234
    5. ',y' → logprob: -13.000362396240234
    6. ',n' → logprob: -13.875362396240234
    7. '   ' → logprob: -14.750362396240234
    8. '       ' → logprob: -14.875362396240234
    9. '           ' → logprob: -15.000362396240234
    10. ',
' → logprob: -15.625362396240234

Token 254: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.14960898458957672
    2. 'min' → logprob: -2.649609088897705
    3. ' min' → logprob: -3.399609088897705
    4. 'n' → logprob: -4.024609088897705
    5. ' k' → logprob: -4.274609088897705
    6. ' n' → logprob: -6.024609088897705
    7. '(n' → logprob: -8.649608612060547
    8. '(min' → logprob: -8.649608612060547
    9. 'x' → logprob: -8.899608612060547
    10. ' (' → logprob: -9.149608612060547

Token 255: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10132908821105957
    2. '-' → logprob: -2.4763290882110596
    3. '+' → logprob: -4.6013288497924805
    4. '-k' → logprob: -6.3513288497924805
    5. ' +' → logprob: -7.8513288497924805
    6. '
' → logprob: -10.10132884979248
    7. '[' → logprob: -10.60132884979248
    8. 'k' → logprob: -10.97632884979248
    9. ' ' → logprob: -11.10132884979248
    10. ',' → logprob: -11.22632884979248

Token 256: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00019126241386402398
    2. ' k' → logprob: -8.625191688537598
    3. 'x' → logprob: -11.875191688537598
    4. 'y' → logprob: -12.500191688537598
    5. '   ' → logprob: -15.125191688537598
    6. ' ' → logprob: -15.875191688537598
    7. ' y' → logprob: -16.00019073486328
    8. '
' → logprob: -17.12519073486328
    9. ' x' → logprob: -17.25019073486328
    10. '	k' → logprob: -17.25019073486328

Token 257: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06994654983282089
    2. ' +' → logprob: -2.694946527481079
    3. ' ' → logprob: -12.8199462890625
    4. '[' → logprob: -13.1949462890625
    5. ')' → logprob: -13.4449462890625
    6. '   ' → logprob: -14.5699462890625
    7. '+
' → logprob: -14.6949462890625
    8. '0' → logprob: -14.8199462890625
    9. '```' → logprob: -14.9449462890625
    10. ')+' → logprob: -15.0699462890625

Token 258: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08908636122941971
    2. '1' → logprob: -2.4640862941741943
    3. ' ' → logprob: -8.839086532592773
    4. '   ' → logprob: -14.214086532592773
    5. 'y' → logprob: -15.089086532592773
    6. '
' → logprob: -15.401586532592773
    7. '3' → logprob: -15.651586532592773
    8. '

' → logprob: -16.339086532592773
    9. '２' → logprob: -16.589086532592773
    10. '  ' → logprob: -17.089086532592773

Token 259: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023249205201864243
    2. '1' → logprob: -3.7732491493225098
    3. ' ' → logprob: -12.648249626159668
    4. 'y' → logprob: -15.398249626159668
    5. '
' → logprob: -16.52324867248535
    6. '   ' → logprob: -16.64824867248535
    7. 'k' → logprob: -17.02324867248535
    8. '3' → logprob: -17.39824867248535
    9. '２' → logprob: -17.71074867248535
    10. '```' → logprob: -17.71074867248535

Token 260: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3876188099384308
    2. '):' → logprob: -1.1376187801361084
    3. '+' → logprob: -7.8876190185546875
    4. '       ' → logprob: -8.762619018554688
    5. ':' → logprob: -9.262619018554688
    6. '):
' → logprob: -10.512619018554688
    7. '):

' → logprob: -10.512619018554688
    8. '   ' → logprob: -11.012619018554688
    9. ')' → logprob: -11.387619018554688
    10. '           ' → logprob: -11.512619018554688

Token 261: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006540587637573481
    2. ' if' → logprob: -8.250654220581055
    3. '               ' → logprob: -9.375654220581055
    4. '<|end|>' → logprob: -9.625654220581055
    5. ',' → logprob: -9.750654220581055
    6. '```' → logprob: -10.125654220581055
    7. '[' → logprob: -10.625654220581055
    8. 'dp' → logprob: -10.875654220581055
    9. '       ' → logprob: -11.000654220581055
    10. 'update' → logprob: -11.500654220581055

Token 262: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.28968480229377747
    2. ' update' → logprob: -1.414684772491455
    3. ' if' → logprob: -5.414684772491455
    4. 'if' → logprob: -5.664684772491455
    5. '               ' → logprob: -8.164685249328613
    6. '           ' → logprob: -8.414685249328613
    7. '   ' → logprob: -10.539685249328613
    8. '.update' → logprob: -10.789685249328613
    9. '	update' → logprob: -11.539685249328613
    10. '       ' → logprob: -12.539685249328613

Token 263: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -2.248469718324486e-05
    2. 'dp' → logprob: -10.750022888183594
    3. '(dp' → logprob: -14.875022888183594
    4. '_df' → logprob: -15.875022888183594
    5. '_dx' → logprob: -16.250022888183594
    6. '_dc' → logprob: -16.375022888183594
    7. '_dt' → logprob: -16.500022888183594
    8. '_dl' → logprob: -16.750022888183594
    9. '_lp' → logprob: -17.250022888183594
    10. 'DP' → logprob: -17.375022888183594

Token 264: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -6.76628842484206e-05
    2. '(dp' → logprob: -10.125067710876465
    3. '_dp' → logprob: -11.375067710876465
    4. '_cells' → logprob: -11.500067710876465
    5. '_' → logprob: -13.125067710876465
    6. '_Cell' → logprob: -13.750067710876465
    7. 'cell' → logprob: -13.875067710876465
    8. 'dp' → logprob: -14.500067710876465
    9. 'Cell' → logprob: -14.875067710876465
    10. '```' → logprob: -15.125067710876465

Token 265: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -12.000008583068848
    3. ' (' → logprob: -13.000008583068848
    4. '(
' → logprob: -14.750008583068848
    5. 'dp' → logprob: -18.125009536743164
    6. '(df' → logprob: -18.250009536743164
    7. '	dp' → logprob: -18.500009536743164
    8. '(

' → logprob: -19.375009536743164
    9. ' dp' → logprob: -19.500009536743164
    10. '(dispatch' → logprob: -20.000009536743164

Token 266: ',' (ID: 11)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.004144526552408934
    2. ',' → logprob: -5.504144668579102
    3. 'dp' → logprob: -10.004144668579102
    4. ')' → logprob: -11.629144668579102
    5. '(' → logprob: -12.754144668579102
    6. ' dp' → logprob: -12.754144668579102
    7. ' ,' → logprob: -13.129144668579102
    8. ' (' → logprob: -13.379144668579102
    9. '	dp' → logprob: -13.504144668579102
    10. ')(' → logprob: -15.129144668579102

Token 267: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.10042513161897659
    2. ' H' → logprob: -2.3504252433776855
    3. 'dp' → logprob: -8.850424766540527
    4. ' dp' → logprob: -9.600424766540527
    5. 'x' → logprob: -12.725424766540527
    6. ' x' → logprob: -13.725424766540527
    7. ' ' → logprob: -13.850424766540527
    8. ')' → logprob: -13.975424766540527
    9. 'y' → logprob: -14.975424766540527
    10. ' y' → logprob: -15.350424766540527

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016778295685071498
    2. ' ,' → logprob: -9.125167846679688
    3. ',x' → logprob: -9.750167846679688
    4. 'x' → logprob: -16.000167846679688
    5. '   ' → logprob: -16.125167846679688
    6. ' x' → logprob: -16.250167846679688
    7. '[x' → logprob: -16.875167846679688
    8. ',
' → logprob: -17.125167846679688
    9. '```' → logprob: -17.375167846679688
    10. '(x' → logprob: -17.875167846679688

Token 269: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011047935113310814
    2. ' x' → logprob: -4.511047840118408
    3. 'dp' → logprob: -16.51104736328125
    4. '	x' → logprob: -18.51104736328125
    5. ' ' → logprob: -18.63604736328125
    6. ')x' → logprob: -18.88604736328125
    7. ')' → logprob: -19.13604736328125
    8. ' dp' → logprob: -19.38604736328125
    9. '(x' → logprob: -19.51104736328125
    10. '   ' → logprob: -19.76104736328125

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006647797417826951
    2. ' ,' → logprob: -7.500664710998535
    3. ',y' → logprob: -9.125664710998535
    4. 'y' → logprob: -13.375664710998535
    5. '   ' → logprob: -14.750664710998535
    6. '[' → logprob: -15.125664710998535
    7. ',
' → logprob: -15.375664710998535
    8. '[y' → logprob: -15.625664710998535
    9. ')' → logprob: -16.12566566467285
    10. '           ' → logprob: -16.25066566467285

Token 271: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005234002135694027
    2. ' y' → logprob: -5.2552337646484375
    3. ')y' → logprob: -16.130233764648438
    4. '	y' → logprob: -16.255233764648438
    5. ' ' → logprob: -17.255233764648438
    6. ')' → logprob: -17.380233764648438
    7. 'yb' → logprob: -18.130233764648438
    8. '   ' → logprob: -18.255233764648438
    9. '           ' → logprob: -18.755233764648438
    10. '       ' → logprob: -19.505233764648438

Token 272: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.662937372922897e-05
    2. ')
' → logprob: -9.250096321105957
    3. ' )' → logprob: -15.125096321105957
    4. ')

' → logprob: -16.875097274780273
    5. '<|end|>' → logprob: -17.125097274780273
    6. '))' → logprob: -17.625097274780273
    7. ')#' → logprob: -17.625097274780273
    8. '   ' → logprob: -17.750097274780273
    9. '       ' → logprob: -17.875097274780273
    10. ')
' → logprob: -18.000097274780273

Token 273: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: ' find' (ID: 1646)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.39104825258255005
    2. ' main' → logprob: -1.1410481929779053
    3. 'solve' → logprob: -6.516048431396484
    4. ' solve' → logprob: -6.766048431396484
    5. 'def' → logprob: -7.141048431396484
    6. 'parse' → logprob: -8.766048431396484
    7. ' def' → logprob: -8.766048431396484
    8. 'get' → logprob: -9.516048431396484
    9. 'fill' → logprob: -10.016048431396484
    10. ' get' → logprob: -10.016048431396484

Token 275: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.3452323079109192
    2. '_best' → logprob: -1.9702322483062744
    3. '_opt' → logprob: -2.0952322483062744
    4. '_max' → logprob: -4.4702324867248535
    5. '_answer' → logprob: -4.4702324867248535
    6. '_k' → logprob: -6.0952324867248535
    7. '_dp' → logprob: -7.4702324867248535
    8. '_' → logprob: -7.4702324867248535
    9. 'optimal' → logprob: -7.4702324867248535
    10. '_solution' → logprob: -7.5952324867248535

Token 276: 'imum' (ID: 4556)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.2626104950904846
    2. '_dp' → logprob: -1.7626104354858398
    3. '_value' → logprob: -4.13761043548584
    4. '_total' → logprob: -4.26261043548584
    5. '_answer' → logprob: -4.88761043548584
    6. '_' → logprob: -5.26261043548584
    7. '_max' → logprob: -5.51261043548584
    8. '_result' → logprob: -6.13761043548584
    9. 'dp' → logprob: -6.38761043548584
    10. '_diff' → logprob: -6.76261043548584

Token 277: '(dp' (ID: 68843)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.6649113893508911
    2. '(dp' → logprob: -1.5399113893508911
    3. '_dp' → logprob: -1.9149113893508911
    4. 'dp' → logprob: -2.7899112701416016
    5. 'cost' → logprob: -4.039911270141602
    6. '_total' → logprob: -4.414911270141602
    7. '_value' → logprob: -4.789911270141602
    8. '_answer' → logprob: -5.539911270141602
    9. '(' → logprob: -5.789911270141602
    10. '_result' → logprob: -6.039911270141602

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01832798309624195
    2. '):' → logprob: -4.5183281898498535
    3. '):
' → logprob: -5.2683281898498535
    4. ',n' → logprob: -6.3933281898498535
    5. ' ,' → logprob: -8.268327713012695
    6. ',k' → logprob: -10.268327713012695
    7. ' ):' → logprob: -10.393327713012695
    8. ')' → logprob: -10.768327713012695
    9. '   ' → logprob: -10.893327713012695
    10. '[n' → logprob: -11.018327713012695

Token 279: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7890384793281555
    2. 'k' → logprob: -0.9140384793281555
    3. ' n' → logprob: -2.1640384197235107
    4. ' k' → logprob: -3.5390384197235107
    5. 'dp' → logprob: -7.53903865814209
    6. ')' → logprob: -8.66403865814209
    7. ' dp' → logprob: -9.66403865814209
    8. 'H' → logprob: -10.03903865814209
    9. 'def' → logprob: -11.66403865814209
    10. ' H' → logprob: -11.72653865814209

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035854605957865715
    2. ',k' → logprob: -6.003585338592529
    3. ' ,' → logprob: -7.003585338592529
    4. ',n' → logprob: -8.628585815429688
    5. ',
' → logprob: -11.878585815429688
    6. '   ' → logprob: -12.503585815429688
    7. 'def' → logprob: -13.003585815429688
    8. '):
' → logprob: -13.503585815429688
    9. 'n' → logprob: -13.878585815429688
    10. 'k' → logprob: -14.003585815429688

Token 281: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007145775598473847
    2. ' k' → logprob: -7.2507147789001465
    3. 'n' → logprob: -13.250714302062988
    4. ')' → logprob: -13.375714302062988
    5. '
' → logprob: -14.500714302062988
    6. '   ' → logprob: -15.375714302062988
    7. '1' → logprob: -15.875714302062988
    8. ' n' → logprob: -16.500715255737305
    9. ' ' → logprob: -16.625715255737305
    10. 'MOD' → logprob: -16.750715255737305

Token 282: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4744492769241333
    2. '):
' → logprob: -0.9744492769241333
    3. ',' → logprob: -8.349449157714844
    4. '):
' → logprob: -9.974449157714844
    5. '   ' → logprob: -10.224449157714844
    6. ')' → logprob: -10.224449157714844
    7. '):

' → logprob: -11.599449157714844
    8. ' ):' → logprob: -12.474449157714844
    9. ' ):
' → logprob: -13.474449157714844
    10. ' ' → logprob: -14.599449157714844

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15816310048103333
    2. 'return' → logprob: -2.408163070678711
    3. ' return' → logprob: -3.158163070678711
    4. 'min' → logprob: -4.408163070678711
    5. ' min' → logprob: -6.533163070678711
    6. '```' → logprob: -9.033163070678711
    7. 'def' → logprob: -10.783163070678711
    8. 'import' → logprob: -12.158163070678711
    9. '	return' → logprob: -12.533163070678711
    10. '
' → logprob: -12.908163070678711

Token 284: ' values' (ID: 4824)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06273680180311203
    2. 'min' → logprob: -2.937736749649048
    3. ' return' → logprob: -5.187736988067627
    4. 'ans' → logprob: -7.437736988067627
    5. 'result' → logprob: -7.562736988067627
    6. '   ' → logprob: -7.687736988067627
    7. ' min' → logprob: -8.187736511230469
    8. 'res' → logprob: -8.437736511230469
    9. '```' → logprob: -9.937736511230469
    10. 'c' → logprob: -10.187736511230469

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055094536393880844
    2. ' =' → logprob: -2.9300944805145264
    3. '=
' → logprob: -10.055094718933105
    4. '=min' → logprob: -10.055094718933105
    5. '=[' → logprob: -10.305094718933105
    6. '[' → logprob: -10.930094718933105
    7. '[n' → logprob: -11.430094718933105
    8. '   ' → logprob: -11.430094718933105
    9. '=n' → logprob: -11.930094718933105
    10. '=[]' → logprob: -12.305094718933105

Token 286: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04942471906542778
    2. 'dp' → logprob: -3.424424648284912
    3. '(dp' → logprob: -4.924424648284912
    4. ' dp' → logprob: -5.549424648284912
    5. ' [' → logprob: -5.674424648284912
    6. '[d' → logprob: -7.674424648284912
    7. '[
' → logprob: -8.04942512512207
    8. '[min' → logprob: -8.79942512512207
    9. '[df' → logprob: -10.04942512512207
    10. '   ' → logprob: -10.92442512512207

Token 287: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00043639098294079304
    2. ' dp' → logprob: -7.750436305999756
    3. '   ' → logprob: -12.750436782836914
    4. '(dp' → logprob: -13.750436782836914
    5. ' ' → logprob: -14.375436782836914
    6. '	dp' → logprob: -14.750436782836914
    7. 'row' → logprob: -15.875436782836914
    8. '
' → logprob: -16.000436782836914
    9. '  ' → logprob: -16.250436782836914
    10. '```' → logprob: -16.375436782836914

Token 288: '[x' (ID: 17295)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.001695176586508751
    2. '[i' → logprob: -7.126695156097412
    3. '[x' → logprob: -7.251695156097412
    4. 'n' → logprob: -9.62669563293457
    5. '[j' → logprob: -9.75169563293457
    6. '[-' → logprob: -10.37669563293457
    7. '[' → logprob: -11.75169563293457
    8. 'x' → logprob: -12.25169563293457
    9. '[m' → logprob: -12.25169563293457
    10. '[k' → logprob: -13.25169563293457

Token 289: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14660575985908508
    2. '[n' → logprob: -2.0216057300567627
    3. 'n' → logprob: -5.771605968475342
    4. '][-' → logprob: -8.146605491638184
    5. '[x' → logprob: -9.021605491638184
    6. '[' → logprob: -9.146605491638184
    7. '[k' → logprob: -9.646605491638184
    8. '[-' → logprob: -9.896605491638184
    9. ']' → logprob: -10.521605491638184
    10. '(n' → logprob: -10.646605491638184

Token 290: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0017157548572868109
    2. ' n' → logprob: -7.126715660095215
    3. '(n' → logprob: -7.251715660095215
    4. 'k' → logprob: -9.501715660095215
    5. '
' → logprob: -10.126715660095215
    6. ' ' → logprob: -10.376715660095215
    7. '   ' → logprob: -11.626715660095215
    8. '-' → logprob: -11.751715660095215
    9. '[n' → logprob: -11.876715660095215
    10. ' (' → logprob: -12.501715660095215

Token 291: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.16107797622680664
    2. ' -' → logprob: -2.5360779762268066
    3. '-' → logprob: -3.0360779762268066
    4. '][' → logprob: -3.9110779762268066
    5. 'k' → logprob: -6.911077976226807
    6. '
' → logprob: -8.786077499389648
    7. ')][' → logprob: -9.973577499389648
    8. ']' → logprob: -10.036077499389648
    9. ' ' → logprob: -10.411077499389648
    10. '][-' → logprob: -10.536077499389648

Token 292: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -8.602024900028482e-05
    2. ' k' → logprob: -9.375085830688477
    3. ' ' → logprob: -15.000085830688477
    4. '
' → logprob: -15.125085830688477
    5. '(k' → logprob: -15.375085830688477
    6. 'x' → logprob: -16.375085830688477
    7. ']' → logprob: -16.812585830688477
    8. '_k' → logprob: -16.875085830688477
    9. '	k' → logprob: -17.125085830688477
    10. '-k' → logprob: -17.125085830688477

Token 293: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3928030729293823
    2. ']' → logprob: -1.1428030729293823
    3. ' +' → logprob: -5.392803192138672
    4. '][' → logprob: -6.892803192138672
    5. ' ]' → logprob: -9.517803192138672
    6. '])' → logprob: -10.142803192138672
    7. ']]' → logprob: -10.517803192138672
    8. '   ' → logprob: -10.517803192138672
    9. '+x' → logprob: -11.142803192138672
    10. ')' → logprob: -11.267803192138672

Token 294: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38784798979759216
    2. 'for' → logprob: -1.1378480195999146
    3. ']' → logprob: -7.262847900390625
    4. '[x' → logprob: -8.387847900390625
    5. ' ' → logprob: -11.262847900390625
    6. '[' → logprob: -11.512847900390625
    7. '	for' → logprob: -11.887847900390625
    8. 'x' → logprob: -12.012847900390625
    9. '   ' → logprob: -12.637847900390625
    10. ')' → logprob: -13.262847900390625

Token 295: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.611323624383658e-05
    2. ' x' → logprob: -9.625065803527832
    3. '
' → logprob: -19.37506675720215
    4. '	x' → logprob: -20.37506675720215
    5. ')x' → logprob: -20.62506675720215
    6. '$x' → logprob: -21.62506675720215
    7. ' ' → logprob: -22.00006675720215
    8. '"x' → logprob: -22.25006675720215
    9. ',x' → logprob: -22.25006675720215
    10. '```' → logprob: -22.62506675720215

Token 296: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01606721803545952
    2. 'in' → logprob: -4.141067028045654
    3. 'x' → logprob: -10.391067504882812
    4. 'range' → logprob: -13.891067504882812
    5. 'import' → logprob: -14.891067504882812
    6. ' ' → logprob: -15.141067504882812
    7. 'n' → logprob: -15.766067504882812
    8. 'In' → logprob: -16.016067504882812
    9. '<|end|>' → logprob: -16.141067504882812
    10. ' x' → logprob: -16.391067504882812

Token 297: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759396553039551
    2. 'range' → logprob: -0.8259396553039551
    3. 'x' → logprob: -15.700939178466797
    4. '(range' → logprob: -16.950939178466797
    5. ' xrange' → logprob: -18.575939178466797
    6. '
' → logprob: -18.575939178466797
    7. '	range' → logprob: -19.325939178466797
    8. ' ' → logprob: -19.450939178466797
    9. 'Range' → logprob: -19.700939178466797
    10. ' x' → logprob: -19.950939178466797

Token 298: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.16137219965457916
    2. '(n' → logprob: -2.536372184753418
    3. '(' → logprob: -2.661372184753418
    4. '1' → logprob: -11.286372184753418
    5. 'k' → logprob: -12.911372184753418
    6. ' (' → logprob: -13.286372184753418
    7. '(len' → logprob: -14.286372184753418
    8. '((' → logprob: -14.411372184753418
    9. '(
' → logprob: -15.036372184753418
    10. '(x' → logprob: -15.036372184753418

Token 299: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03832489997148514
    2. ' +' → logprob: -3.2883248329162598
    3. ')]' → logprob: -9.288325309753418
    4. ')])' → logprob: -9.663325309753418
    5. '-' → logprob: -10.038325309753418
    6. ',' → logprob: -10.663325309753418
    7. ')' → logprob: -10.663325309753418
    8. ' -' → logprob: -10.788325309753418
    9. '+
' → logprob: -12.413325309753418
    10. '+k' → logprob: -12.913325309753418

Token 300: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.865583706414327e-05
    2. ' ' → logprob: -9.25009822845459
    3. '(' → logprob: -13.75009822845459
    4. ')' → logprob: -15.12509822845459
    5. '+' → logprob: -15.50009822845459
    6. '2' → logprob: -15.75009822845459
    7. '```' → logprob: -15.81259822845459
    8. ',' → logprob: -16.187599182128906
    9. '
' → logprob: -16.687599182128906
    10. '0' → logprob: -16.687599182128906

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.625012397766113
    3. '+' → logprob: -13.125012397766113
    4. '2' → logprob: -15.000012397766113
    5. '(' → logprob: -15.250012397766113
    6. '0' → logprob: -15.500012397766113
    7. '```' → logprob: -16.187511444091797
    8. ')' → logprob: -16.562511444091797
    9. '-' → logprob: -17.250011444091797
    10. '۱' → logprob: -17.437511444091797

Token 302: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.12784086167812347
    2. ']' → logprob: -2.127840757369995
    3. ')' → logprob: -7.127840995788574
    4. '])' → logprob: -9.752840995788574
    5. ' ]' → logprob: -11.002840995788574
    6. ')]
' → logprob: -11.627840995788574
    7. ']
' → logprob: -11.627840995788574
    8. ' if' → logprob: -11.877840995788574
    9. '])]' → logprob: -12.002840995788574
    10. ')])' → logprob: -13.502840995788574

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3186641335487366
    2. 'return' → logprob: -1.3186640739440918
    3. '
' → logprob: -5.693664073944092
    4. ' return' → logprob: -6.318664073944092
    5. '```' → logprob: -8.94366455078125
    6. ')' → logprob: -10.44366455078125
    7. '    
' → logprob: -10.56866455078125
    8. 'min' → logprob: -11.44366455078125
    9. '	return' → logprob: -11.81866455078125
    10. ')return' → logprob: -12.69366455078125

Token 304: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04746003448963165
    2. ' return' → logprob: -3.4224600791931152
    3. '   ' → logprob: -4.297460079193115
    4. 'min' → logprob: -9.422459602355957
    5. '
' → logprob: -10.797459602355957
    6. 'result' → logprob: -11.922459602355957
    7. '    
' → logprob: -13.047459602355957
    8. ' min' → logprob: -13.297459602355957
    9. '	return' → logprob: -13.922459602355957
    10. 'minimum' → logprob: -13.922459602355957

Token 305: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2014147937297821
    2. ' min' → logprob: -1.7014148235321045
    3. '	min' → logprob: -14.576415061950684
    4. '   ' → logprob: -14.701415061950684
    5. '(min' → logprob: -15.076415061950684
    6. ' ' → logprob: -17.076414108276367
    7. 'minimum' → logprob: -17.201414108276367
    8. '[min' → logprob: -17.701414108276367
    9. ' ' → logprob: -17.826414108276367
    10. 'max' → logprob: -17.826414108276367

Token 306: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.75
    3. 'values' → logprob: -17.0
    4. ' (' → logprob: -17.625
    5. '(value' → logprob: -19.625
    6. ' values' → logprob: -20.125
    7. '(vals' → logprob: -20.75
    8. '	values' → logprob: -21.875
    9. '(
' → logprob: -22.125
    10. '.values' → logprob: -22.5

Token 307: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -13.375003814697266
    3. '())' → logprob: -14.000003814697266
    4. ' )' → logprob: -14.375003814697266
    5. '()' → logprob: -15.250003814697266
    6. '))' → logprob: -15.500003814697266
    7. '[' → logprob: -16.000003814697266
    8. '}' → logprob: -16.375003814697266
    9. '   ' → logprob: -16.625003814697266
    10. ')}' → logprob: -16.875003814697266

Token 308: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0826513022184372
    2. '<|end|>' → logprob: -2.707651376724243
    3. '```' → logprob: -4.707651138305664
    4. '#' → logprob: -5.832651138305664
    5. '<|end|>' → logprob: -8.582651138305664
    6. 'n' → logprob: -9.207651138305664
    7. ')' → logprob: -9.457651138305664
    8. 'x' → logprob: -9.582651138305664
    9. 'for' → logprob: -10.207651138305664
    10. 'return' → logprob: -10.207651138305664

Token 309: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01119671668857336
    2. ' main' → logprob: -4.511196613311768
    3. 'solve' → logprob: -8.886197090148926
    4. ' solve' → logprob: -12.261197090148926
    5. 'minimum' → logprob: -13.261197090148926
    6. 'process' → logprob: -13.511197090148926
    7. 'min' → logprob: -13.886197090148926
    8. 'def' → logprob: -14.511197090148926
    9. 'solution' → logprob: -14.886197090148926
    10. 'minimal' → logprob: -15.261197090148926

Token 310: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5382453799247742
    2. '_min' → logprob: -1.288245439529419
    3. '(min' → logprob: -2.663245439529419
    4. '_result' → logprob: -2.913245439529419
    5. 'min' → logprob: -5.66324520111084
    6. '_' → logprob: -5.78824520111084
    7. '()' → logprob: -6.16324520111084
    8. 'result' → logprob: -6.28824520111084
    9. '_results' → logprob: -6.78824520111084
    10. '_final' → logprob: -7.16324520111084

Token 311: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.6501592993736267
    2. '(min' → logprob: -0.9001592993736267
    3. '(value' → logprob: -2.6501593589782715
    4. '(' → logprob: -7.4001593589782715
    5. '(val' → logprob: -10.025158882141113
    6. '(m' → logprob: -10.025158882141113
    7. '(res' → logprob: -10.025158882141113
    8. '():' → logprob: -10.025158882141113
    9. ' (' → logprob: -10.400158882141113
    10. '(output' → logprob: -11.400158882141113

Token 312: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26195085048675537
    2. '):
' → logprob: -1.5119508504867554
    3. '(result' → logprob: -4.636950969696045
    4. ',result' → logprob: -9.261950492858887
    5. ')' → logprob: -9.636950492858887
    6. ',' → logprob: -9.761950492858887
    7. '   ' → logprob: -10.386950492858887
    8. 'result' → logprob: -11.011950492858887
    9. '):
' → logprob: -11.761950492858887
    10. '):

' → logprob: -12.261950492858887

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.201590895652771
    2. 'print' → logprob: -1.701590895652771
    3. ' print' → logprob: -8.951590538024902
    4. '```' → logprob: -9.951590538024902
    5. '	print' → logprob: -16.07659149169922
    6. '(print' → logprob: -16.20159149169922
    7. 'def' → logprob: -16.45159149169922
    8. '`' → logprob: -16.57659149169922
    9. '``' → logprob: -17.20159149169922
    10. ' ' → logprob: -18.07659149169922

Token 314: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -19.25
    3. '```' → logprob: -20.25
    4. '   ' → logprob: -21.25
    5. '
' → logprob: -25.5
    6. '`' → logprob: -26.5
    7. 'println' → logprob: -27.125
    8. '	print' → logprob: -27.125
    9. '``' → logprob: -27.75
    10. 'pr' → logprob: -28.25

Token 315: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00015920029545668513
    2. 'result' → logprob: -8.75015926361084
    3. '(' → logprob: -14.12515926361084
    4. '=result' → logprob: -19.125158309936523
    5. ' result' → logprob: -19.250158309936523
    6. ',result' → logprob: -19.375158309936523
    7. '[result' → logprob: -20.000158309936523
    8. '(f' → logprob: -20.125158309936523
    9. '(res' → logprob: -20.500158309936523
    10. '(
' → logprob: -20.875158309936523

Token 316: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.75
    3. ')`' → logprob: -17.125
    4. '))' → logprob: -17.5
    5. ' )' → logprob: -18.125
    6. '())' → logprob: -18.875
    7. '()' → logprob: -19.0
    8. '),' → logprob: -19.25
    9. ')}' → logprob: -19.25
    10. '`)' → logprob: -20.0

Token 317: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.256334695033729e-05
    2. 'if' → logprob: -9.500082969665527
    3. '#' → logprob: -12.250082969665527
    4. '```' → logprob: -12.875082969665527
    5. ' def' → logprob: -15.625082969665527
    6. 'n' → logprob: -15.875082969665527
    7. 'x' → logprob: -18.12508201599121
    8. 'import' → logprob: -18.62508201599121
    9. '``' → logprob: -19.25008201599121
    10. '...' → logprob: -19.50008201599121

Token 318: ' resolve' (ID: 14062)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0007283978629857302
    2. ' main' → logprob: -7.250728607177734
    3. 'solve' → logprob: -11.000728607177734
    4. 'def' → logprob: -13.500728607177734
    5. 'run' → logprob: -15.625728607177734
    6. 'process' → logprob: -16.625728607177734
    7. ' solve' → logprob: -17.000728607177734
    8. '	main' → logprob: -17.125728607177734
    9. '```' → logprob: -17.375728607177734
    10. 'solution' → logprob: -18.000728607177734

Token 319: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00042221311014145613
    2. '():
' → logprob: -8.000422477722168
    3. ' ():' → logprob: -9.375422477722168
    4. '(n' → logprob: -13.625422477722168
    5. '():
' → logprob: -14.750422477722168
    6. '()' → logprob: -15.500422477722168
    7. '():

' → logprob: -16.37542152404785
    8. '(' → logprob: -16.75042152404785
    9. '(input' → logprob: -18.62542152404785
    10. ' ()' → logprob: -19.12542152404785

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1520509272813797
    2. 'n' → logprob: -2.6520509719848633
    3. ' n' → logprob: -2.6520509719848633
    4. ' input' → logprob: -10.652050971984863
    5. '	n' → logprob: -11.902050971984863
    6. '   ' → logprob: -12.402050971984863
    7. 'input' → logprob: -12.652050971984863
    8. '```' → logprob: -13.152050971984863
    9. 'import' → logprob: -13.652050971984863
    10. ' ' → logprob: -14.652050971984863

Token 321: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.000407316314522177
    2. '   ' → logprob: -8.250407218933105
    3. ' n' → logprob: -9.125407218933105
    4. 'input' → logprob: -10.875407218933105
    5. 'import' → logprob: -11.250407218933105
    6. 'N' → logprob: -12.625407218933105
    7. '	n' → logprob: -14.250407218933105
    8. ' ' → logprob: -14.750407218933105
    9. '```' → logprob: -15.000407218933105
    10. '#' → logprob: -16.000408172607422

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000810936326161027
    2. ',k' → logprob: -7.1258111000061035
    3. ' ,' → logprob: -12.000810623168945
    4. 'k' → logprob: -15.375810623168945
    5. ',
' → logprob: -17.000810623168945
    6. ',K' → logprob: -17.500810623168945
    7. ' k' → logprob: -17.750810623168945
    8. ',n' → logprob: -18.500810623168945
    9. ',\
' → logprob: -19.250810623168945
    10. '‌,' → logprob: -19.375810623168945

Token 323: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0017036291537806392
    2. ' k' → logprob: -6.37670373916626
    3. '   ' → logprob: -14.251703262329102
    4. ' ' → logprob: -15.751703262329102
    5. '    ' → logprob: -15.751703262329102
    6. '=' → logprob: -16.2517032623291
    7. 'n' → logprob: -16.3767032623291
    8. 'K' → logprob: -16.5017032623291
    9. '  ' → logprob: -16.6267032623291
    10. ' =' → logprob: -17.3767032623291

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474077433347702
    2. '=' → logprob: -0.9740774631500244
    3. ',' → logprob: -15.849077224731445
    4. '=k' → logprob: -16.474077224731445
    5. '=sys' → logprob: -16.974077224731445
    6. '＝' → logprob: -17.474077224731445
    7. ' ' → logprob: -17.474077224731445
    8. '=n' → logprob: -17.849077224731445
    9. '=get' → logprob: -18.099077224731445
    10. '   ' → logprob: -18.099077224731445

Token 325: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.6931492686271667
    2. ' parse' → logprob: -0.6931492686271667
    3. ' map' → logprob: -13.56814956665039
    4. 'map' → logprob: -14.56814956665039
    5. '   ' → logprob: -15.44314956665039
    6. '	parse' → logprob: -16.94314956665039
    7. '(parse' → logprob: -17.81814956665039
    8. '=parse' → logprob: -18.94314956665039
    9. '_parse' → logprob: -19.06814956665039
    10. ' ' → logprob: -19.44314956665039

Token 326: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -4.60414821645827e-06
    2. 'parse' → logprob: -12.875004768371582
    3. '_k' → logprob: -13.625004768371582
    4. 'n' → logprob: -15.125004768371582
    5. '_input' → logprob: -15.375004768371582
    6. '_' → logprob: -16.125003814697266
    7. 'get' → logprob: -16.625003814697266
    8. '(' → logprob: -17.125003814697266
    9. 'int' → logprob: -17.250003814697266
    10. '_and' → logprob: -17.625003814697266

Token 327: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -3.173704271830502e-06
    2. 'and' → logprob: -12.87500286102295
    3. '_k' → logprob: -14.87500286102295
    4. 'k' → logprob: -15.75000286102295
    5. '_or' → logprob: -17.750003814697266
    6. '_AND' → logprob: -18.000003814697266
    7. ' and' → logprob: -18.500003814697266
    8. 'def' → logprob: -18.625003814697266
    9. 'And' → logprob: -19.000003814697266
    10. '```' → logprob: -19.125003814697266

Token 328: '_k' (ID: 11637)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00043400691356509924
    2. 'get' → logprob: -8.375433921813965
    3. '_k' → logprob: -8.750433921813965
    4. 'input' → logprob: -10.250433921813965
    5. 'parse' → logprob: -13.250433921813965
    6. 'lambda' → logprob: -13.375433921813965
    7. 'def' → logprob: -13.375433921813965
    8. 'int' → logprob: -13.500433921813965
    9. 'kx' → logprob: -13.625433921813965
    10. 'sys' → logprob: -14.500433921813965

Token 329: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.005352109204977751
    2. '(sys' → logprob: -5.505352020263672
    3. '(lambda' → logprob: -7.255352020263672
    4. 'get' → logprob: -7.630352020263672
    5. '(input' → logprob: -9.505352020263672
    6. 'sys' → logprob: -13.005352020263672
    7. '(' → logprob: -13.130352020263672
    8. ' (' → logprob: -14.130352020263672
    9. '()' → logprob: -14.880352020263672
    10. '(print' → logprob: -15.505352020263672

Token 330: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.1008713702030946e-06
    2. 'input' → logprob: -13.125001907348633
    3. '(input' → logprob: -19.125001907348633
    4. ')' → logprob: -19.125001907348633
    5. '_INPUT' → logprob: -19.500001907348633
    6. 'Input' → logprob: -19.500001907348633
    7. ' input' → logprob: -20.125001907348633
    8. '_line' → logprob: -20.875001907348633
    9. '<input' → logprob: -20.875001907348633
    10. '_' → logprob: -21.000001907348633

Token 331: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038348292582668364
    2. '())' → logprob: -7.875383377075195
    3. '()' → logprob: -13.000383377075195
    4. ' )' → logprob: -14.500383377075195
    5. ')
' → logprob: -15.125383377075195
    6. '))' → logprob: -15.250383377075195
    7. ')`' → logprob: -16.500383377075195
    8. ')get' → logprob: -18.375383377075195
    9. ')

' → logprob: -18.500383377075195
    10. ' ())' → logprob: -18.625383377075195

Token 332: '   ' (ID: 271)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.733851432800293
    2. '   ' → logprob: -0.733851432800293
    3. ' H' → logprob: -3.233851432800293
    4. 'n' → logprob: -8.483851432800293
    5. '```' → logprob: -9.233851432800293
    6. '	H' → logprob: -10.108851432800293
    7. ' ' → logprob: -10.733851432800293
    8. '
' → logprob: -11.233851432800293
    9. ' line' → logprob: -11.358851432800293
    10. ' n' → logprob: -11.358851432800293

Token 333: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.0002631238894537091
    2. 'he' → logprob: -9.000263214111328
    3. ' H' → logprob: -9.125263214111328
    4. 'h' → logprob: -11.750263214111328
    5. 'if' → logprob: -11.750263214111328
    6. ' heights' → logprob: -12.375263214111328
    7. 'k' → logprob: -12.625263214111328
    8. '```' → logprob: -13.000263214111328
    9. '   ' → logprob: -13.875263214111328
    10. 'input' → logprob: -14.125263214111328

Token 334: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692831456661224
    2. '=' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.751928329467773
    4. ' ' → logprob: -17.001928329467773
    5. '=parse' → logprob: -17.126928329467773
    6. '   ' → logprob: -17.251928329467773
    7. ',' → logprob: -17.251928329467773
    8. '＝' → logprob: -18.126928329467773
    9. '=create' → logprob: -18.501928329467773
    10. ')' → logprob: -18.876928329467773

Token 335: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.5759624242782593
    2. 'parse' → logprob: -0.8259624242782593
    3. '(parse' → logprob: -10.82596206665039
    4. '=parse' → logprob: -13.20096206665039
    5. '   ' → logprob: -14.57596206665039
    6. '	parse' → logprob: -14.57596206665039
    7. '.parse' → logprob: -16.07596206665039
    8. '_parse' → logprob: -16.32596206665039
    9. ' ' → logprob: -16.82596206665039
    10. '[' → logprob: -18.45096206665039

Token 336: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -3.054500666621607e-06
    2. 'he' → logprob: -12.87500286102295
    3. '_n' → logprob: -16.000003814697266
    4. '_height' → logprob: -16.250003814697266
    5. '_' → logprob: -16.875003814697266
    6. 'n' → logprob: -17.750003814697266
    7. '_input' → logprob: -18.000003814697266
    8. 'He' → logprob: -18.125003814697266
    9. 'input' → logprob: -18.375003814697266
    10. '```' → logprob: -18.750003814697266

Token 337: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -0.0005681642796844244
    2. 'ight' → logprob: -7.500568389892578
    3. 'ght' → logprob: -12.750568389892578
    4. 'he' → logprob: -13.250568389892578
    5. 'ig' → logprob: -13.250568389892578
    6. '```' → logprob: -13.625568389892578
    7. '   ' → logprob: -13.750568389892578
    8. '_' → logprob: -13.750568389892578
    9. 'IGHTS' → logprob: -13.875568389892578
    10. '[' → logprob: -14.250568389892578

Token 338: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -2.935296834039036e-06
    2. 'get' → logprob: -12.87500286102295
    3. '[get' → logprob: -15.12500286102295
    4. ',get' → logprob: -17.125003814697266
    5. '=get' → logprob: -17.250003814697266
    6. '(sys' → logprob: -18.500003814697266
    7. '```' → logprob: -19.000003814697266
    8. ')get' → logprob: -19.375003814697266
    9. ' (' → logprob: -19.750003814697266
    10. '@get' → logprob: -19.750003814697266

Token 339: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.522638169466518e-05
    2. 'input' → logprob: -10.625024795532227
    3. 'Input' → logprob: -14.125024795532227
    4. 'get' → logprob: -15.625024795532227
    5. '_INPUT' → logprob: -18.125024795532227
    6. 'put' → logprob: -18.125024795532227
    7. 'import' → logprob: -18.750024795532227
    8. 'print' → logprob: -18.875024795532227
    9. '```' → logprob: -18.875024795532227
    10. 'def' → logprob: -19.000024795532227

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014296787790954113
    2. ',n' → logprob: -4.264297008514404
    3. ' ,' → logprob: -9.389296531677246
    4. '(n' → logprob: -10.014296531677246
    5. ')' → logprob: -12.889296531677246
    6. '   ' → logprob: -13.764296531677246
    7. 'n' → logprob: -14.514296531677246
    8. '(' → logprob: -15.139296531677246
    9. ' ' → logprob: -15.389296531677246
    10. '(),' → logprob: -16.014297485351562

Token 341: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023245712742209435
    2. ' n' → logprob: -3.7732458114624023
    3. '   ' → logprob: -16.148244857788086
    4. ')n' → logprob: -16.523244857788086
    5. '	n' → logprob: -17.648244857788086
    6. ')' → logprob: -17.773244857788086
    7. ' ' → logprob: -18.773244857788086
    8. '  ' → logprob: -20.398244857788086
    9. '(n' → logprob: -20.773244857788086
    10. ' ' → logprob: -20.773244857788086

Token 342: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008619658648967743
    2. ')
' → logprob: -4.758619785308838
    3. ')

' → logprob: -13.00861930847168
    4. ')
' → logprob: -13.13361930847168
    5. ' )' → logprob: -14.50861930847168
    6. '   ' → logprob: -15.50861930847168
    7. ')n' → logprob: -16.00861930847168
    8. ' ' → logprob: -17.75861930847168
    9. ' )
' → logprob: -18.00861930847168
    10. '())' → logprob: -18.13361930847168

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7389265298843384
    2. 'dp' → logprob: -0.7389265298843384
    3. ' dp' → logprob: -3.113926410675049
    4. '
' → logprob: -8.863926887512207
    5. '```' → logprob: -9.613926887512207
    6. '	dp' → logprob: -10.113926887512207
    7. 'DP' → logprob: -10.988926887512207
    8. '    
' → logprob: -11.488926887512207
    9. ' ' → logprob: -11.488926887512207
    10. '  ' → logprob: -11.613926887512207

Token 344: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -9.901345038088039e-05
    2. ' dp' → logprob: -9.250099182128906
    3. '
' → logprob: -13.875099182128906
    4. '```' → logprob: -14.500099182128906
    5. '   ' → logprob: -14.625099182128906
    6. '#' → logprob: -15.125099182128906
    7. '	dp' → logprob: -15.750099182128906
    8. 'k' → logprob: -15.750099182128906
    9. 'if' → logprob: -16.500099182128906
    10. '    
' → logprob: -16.500099182128906

Token 345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4743809103965759
    2. ' =' → logprob: -0.9743809103965759
    3. '=create' → logprob: -8.099380493164062
    4. '```' → logprob: -16.474380493164062
    5. 'create' → logprob: -17.099380493164062
    6. '＝' → logprob: -17.599380493164062
    7. ',' → logprob: -18.474380493164062
    8. '[' → logprob: -18.474380493164062
    9. ')' → logprob: -18.724380493164062
    10. '(create' → logprob: -19.099380493164062

Token 346: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.014163628220558167
    2. ' create' → logprob: -4.264163494110107
    3. '(create' → logprob: -17.014163970947266
    4. '   ' → logprob: -17.264163970947266
    5. '=create' → logprob: -17.639163970947266
    6. '.create' → logprob: -19.014163970947266
    7. '	create' → logprob: -19.639163970947266
    8. '_create' → logprob: -20.264163970947266
    9. ' ' → logprob: -20.264163970947266
    10. ':create' → logprob: -21.389163970947266

Token 347: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0013640470569953322
    2. 'dp' → logprob: -6.626364231109619
    3. '(dp' → logprob: -10.251363754272461
    4. ' dp' → logprob: -14.751363754272461
    5. '_dt' → logprob: -15.126363754272461
    6. '```' → logprob: -15.126363754272461
    7. '_' → logprob: -15.251363754272461
    8. 'DP' → logprob: -15.626363754272461
    9. ')' → logprob: -15.751363754272461
    10. '	dp' → logprob: -15.876363754272461

Token 348: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.0003637097543105483
    2. 'dp' → logprob: -8.12536334991455
    3. '(dp' → logprob: -10.00036334991455
    4. '_dp' → logprob: -11.12536334991455
    5. 'table' → logprob: -12.00036334991455
    6. 'Table' → logprob: -14.25036334991455
    7. '_tables' → logprob: -15.25036334991455
    8. '_TABLE' → logprob: -15.37536334991455
    9. ' dp' → logprob: -16.750364303588867
    10. '<table' → logprob: -17.000364303588867

Token 349: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.3856492842023727e-06
    2. ' (' → logprob: -14.250000953674316
    3. 'n' → logprob: -14.625000953674316
    4. '(' → logprob: -15.625000953674316
    5. '```' → logprob: -16.750001907348633
    6. ',n' → logprob: -18.750001907348633
    7. ',' → logprob: -18.875001907348633
    8. '<n' → logprob: -19.250001907348633
    9. '<|end|>' → logprob: -19.250001907348633
    10. ' n' → logprob: -19.375001907348633

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007719963323324919
    2. ',k' → logprob: -4.882719993591309
    3. ' ,' → logprob: -9.132719993591309
    4. 'k' → logprob: -12.757719993591309
    5. ',n' → logprob: -13.382719993591309
    6. '   ' → logprob: -14.882719993591309
    7. ',
' → logprob: -15.382719993591309
    8. '```' → logprob: -15.507719993591309
    9. ' k' → logprob: -15.632719993591309
    10. ')' → logprob: -15.757719993591309

Token 351: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0005530327325686812
    2. ' k' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.750553131103516
    4. '	k' → logprob: -19.750553131103516
    5. ',k' → logprob: -20.000553131103516
    6. ')' → logprob: -20.375553131103516
    7. '
' → logprob: -20.875553131103516
    8. 'n' → logprob: -21.000553131103516
    9. '```' → logprob: -21.000553131103516
    10. ' ' → logprob: -21.125553131103516

Token 352: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.048620183020830154
    2. ')' → logprob: -3.0486202239990234
    3. ')
' → logprob: -10.423620223999023
    4. '   ' → logprob: -13.048620223999023
    5. ')

' → logprob: -14.173620223999023
    6. ' )
' → logprob: -16.173620223999023
    7. ' ' → logprob: -17.673620223999023
    8. '())
' → logprob: -17.923620223999023
    9. '
' → logprob: -18.548620223999023
    10. ')n' → logprob: -18.548620223999023

Token 353: '   ' (ID: 271)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.0013959495117887855
    2. '   ' → logprob: -6.626396179199219
    3. ' initialize' → logprob: -9.626396179199219
    4. '	initialize' → logprob: -13.376396179199219
    5. '```' → logprob: -13.876396179199219
    6. '.initialize' → logprob: -14.001396179199219
    7. '_initialize' → logprob: -14.376396179199219
    8. '
' → logprob: -16.12639617919922
    9. 'Initialize' → logprob: -16.75139617919922
    10. '  ' → logprob: -17.50139617919922

Token 354: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' (adapté à ' initialize') → logprob: -1.1472419600977446e-06
    2. ' initialize' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.125001907348633
    4. '	initialize' → logprob: -18.625001907348633
    5. '.initialize' → logprob: -19.000001907348633
    6. '```' → logprob: -19.125001907348633
    7. 'initial' → logprob: -19.625001907348633
    8. '
' → logprob: -20.000001907348633
    9. 'fill' → logprob: -20.250001907348633
    10. '_initialize' → logprob: -20.250001907348633

Token 355: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -5.796184723294573e-06
    2. 'dp' → logprob: -12.625005722045898
    3. '(dp' → logprob: -13.250005722045898
    4. '_' → logprob: -14.375005722045898
    5. '_dt' → logprob: -17.8750057220459
    6. '_lp' → logprob: -18.0000057220459
    7. '_dc' → logprob: -18.2500057220459
    8. '_df' → logprob: -18.5000057220459
    9. '_dn' → logprob: -18.8750057220459
    10. '_hp' → logprob: -18.8750057220459

Token 356: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.25
    3. 'dp' → logprob: -17.625
    4. '(
' → logprob: -19.5
    5. '	dp' → logprob: -19.875
    6. '(df' → logprob: -20.375
    7. ' (' → logprob: -20.5
    8. '(dt' → logprob: -20.75
    9. '(dx' → logprob: -21.625
    10. ' dp' → logprob: -22.5

Token 357: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3132975101470947
    2. ')
' → logprob: -1.3132975101470947
    3. ')

' → logprob: -10.813297271728516
    4. '   ' → logprob: -11.813297271728516
    5. ')
' → logprob: -11.813297271728516
    6. '
' → logprob: -14.438297271728516
    7. ' )
' → logprob: -15.938297271728516
    8. ' )' → logprob: -16.188297271728516
    9. ')`
' → logprob: -16.813297271728516
    10. ')`' → logprob: -17.313297271728516

Token 358: '   ' (ID: 271)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -0.08317205309867859
    2. '   ' → logprob: -2.583172082901001
    3. ' fill' → logprob: -5.458171844482422
    4. '	fill' → logprob: -12.333171844482422
    5. '```' → logprob: -12.708171844482422
    6. '.fill' → logprob: -13.583171844482422
    7. '(fill' → logprob: -13.583171844482422
    8. '
' → logprob: -15.208171844482422
    9. '  ' → logprob: -15.208171844482422
    10. ' ' → logprob: -15.458171844482422

Token 359: ' fill' (ID: 6954)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' (adapté à ' fill') → logprob: -6.749814019713085e-06
    2. ' fill' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.625006675720215
    4. 'for' → logprob: -17.75000762939453
    5. '```' → logprob: -18.25000762939453
    6. '.fill' → logprob: -18.75000762939453
    7. '
' → logprob: -18.87500762939453
    8. '(fill' → logprob: -19.00000762939453
    9. '	fill' → logprob: -19.50000762939453
    10. ' ' → logprob: -20.25000762939453

Token 360: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -9.372294698550832e-06
    2. 'dp' → logprob: -11.625009536743164
    3. '(dp' → logprob: -14.875009536743164
    4. '_' → logprob: -17.250009536743164
    5. '_dt' → logprob: -17.875009536743164
    6. '_lp' → logprob: -17.875009536743164
    7. '_df' → logprob: -18.125009536743164
    8. '_py' → logprob: -18.500009536743164
    9. '
' → logprob: -18.750009536743164
    10. '_dc' → logprob: -18.875009536743164

Token 361: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.2200749754119897e-06
    2. 'dp' → logprob: -13.125001907348633
    3. '(' → logprob: -16.500001907348633
    4. ' (' → logprob: -17.125001907348633
    5. '```' → logprob: -18.000001907348633
    6. ' dp' → logprob: -18.875001907348633
    7. '	dp' → logprob: -19.000001907348633
    8. '(
' → logprob: -19.000001907348633
    9. '(df' → logprob: -19.875001907348633
    10. '(lp' → logprob: -21.500001907348633

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005810309085063636
    2. '(dp' → logprob: -7.50058126449585
    3. ' ,' → logprob: -10.875580787658691
    4. 'dp' → logprob: -11.750580787658691
    5. ' dp' → logprob: -14.375580787658691
    6. ',
' → logprob: -15.250580787658691
    7. '   ' → logprob: -16.000581741333008
    8. ')' → logprob: -16.125581741333008
    9. '(' → logprob: -16.625581741333008
    10. '	dp' → logprob: -16.750581741333008

Token 363: ' H' (ID: 487)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05917022004723549
    2. 'H' → logprob: -3.5591702461242676
    3. ' dp' → logprob: -3.5591702461242676
    4. ' H' → logprob: -7.559170246124268
    5. '   ' → logprob: -12.18416976928711
    6. ' ' → logprob: -14.18416976928711
    7. '(dp' → logprob: -14.93416976928711
    8. ')' → logprob: -15.05916976928711
    9. '    ' → logprob: -15.43416976928711
    10. '	dp' → logprob: -15.43416976928711

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.2994620242971e-06
    2. ' ,' → logprob: -11.750008583068848
    3. ',n' → logprob: -16.00000762939453
    4. 'dp' → logprob: -16.12500762939453
    5. '   ' → logprob: -16.37500762939453
    6. ')' → logprob: -17.00000762939453
    7. '```' → logprob: -18.00000762939453
    8. 'n' → logprob: -18.37500762939453
    9. ',d' → logprob: -18.62500762939453
    10. ' dp' → logprob: -19.37500762939453

Token 365: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00015860427811276168
    2. ' n' → logprob: -8.750158309936523
    3. '	n' → logprob: -18.000158309936523
    4. '   ' → logprob: -18.000158309936523
    5. '
' → logprob: -18.500158309936523
    6. ')n' → logprob: -19.375158309936523
    7. ')' → logprob: -20.625158309936523
    8. '```' → logprob: -21.000158309936523
    9. ',n' → logprob: -21.250158309936523
    10. ' ' → logprob: -21.375158309936523

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008528703474439681
    2. ' ,' → logprob: -7.250853061676025
    3. ',k' → logprob: -8.875852584838867
    4. '   ' → logprob: -13.000852584838867
    5. 'k' → logprob: -14.250852584838867
    6. ',
' → logprob: -16.250852584838867
    7. ')' → logprob: -16.750852584838867
    8. ' k' → logprob: -17.125852584838867
    9. ' ' → logprob: -18.500852584838867
    10. '```' → logprob: -18.625852584838867

Token 367: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0010531729785725474
    2. ' k' → logprob: -6.876053333282471
    3. 'n' → logprob: -11.126052856445312
    4. '   ' → logprob: -12.501052856445312
    5. ' n' → logprob: -14.126052856445312
    6. ' ' → logprob: -14.501052856445312
    7. '
' → logprob: -15.376052856445312
    8. ')' → logprob: -16.001052856445312
    9. '    ' → logprob: -16.876052856445312
    10. '	k' → logprob: -17.001052856445312

Token 368: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07891159504652023
    2. ')' → logprob: -2.578911542892456
    3. ')
' → logprob: -11.453911781311035
    4. '   ' → logprob: -12.203911781311035
    5. ' )
' → logprob: -12.203911781311035
    6. ')

' → logprob: -13.953911781311035
    7. ' )' → logprob: -15.328911781311035
    8. ' ' → logprob: -16.20391082763672
    9. '  ' → logprob: -18.20391082763672
    10. ')`
' → logprob: -18.32891082763672

Token 369: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.25604376196861267
    2. '   ' → logprob: -1.506043791770935
    3. ' result' → logprob: -5.631043910980225
    4. 'print' → logprob: -7.631043910980225
    5. 'res' → logprob: -10.881043434143066
    6. '```' → logprob: -12.256043434143066
    7. '
' → logprob: -12.506043434143066
    8. '	result' → logprob: -13.006043434143066
    9. ' print' → logprob: -13.006043434143066
    10. ' ' → logprob: -13.131043434143066

Token 370: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0006807420286349952
    2. 'print' → logprob: -7.625680923461914
    3. 'res' → logprob: -8.625680923461914
    4. '   ' → logprob: -11.750680923461914
    5. ' result' → logprob: -12.750680923461914
    6. 'answer' → logprob: -14.000680923461914
    7. '```' → logprob: -14.375680923461914
    8. '
' → logprob: -14.625680923461914
    9. 'ans' → logprob: -15.625680923461914
    10. '    
' → logprob: -16.125680923461914

Token 371: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38708266615867615
    2. '=' → logprob: -1.1370826959609985
    3. ')' → logprob: -8.887083053588867
    4. ' ' → logprob: -10.137083053588867
    5. ',' → logprob: -11.262083053588867
    6. '_' → logprob: -11.887083053588867
    7. '(' → logprob: -12.637083053588867
    8. ' ' → logprob: -13.637083053588867
    9. '   ' → logprob: -13.637083053588867
    10. '  ' → logprob: -13.762083053588867

Token 372: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.4740805923938751
    2. ' find' → logprob: -0.9740805625915527
    3. '   ' → logprob: -12.849081039428711
    4. '
' → logprob: -14.849081039428711
    5. '(find' → logprob: -15.099081039428711
    6. '	find' → logprob: -15.974081039428711
    7. ' ' → logprob: -16.84908103942871
    8. '  ' → logprob: -17.09908103942871
    9. '=find' → logprob: -17.47408103942871
    10. '.find' → logprob: -17.84908103942871

Token 373: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.981667537620524e-06
    2. 'min' → logprob: -13.375001907348633
    3. 'minimum' → logprob: -14.875001907348633
    4. '_max' → logprob: -18.625001907348633
    5. '_m' → logprob: -19.375001907348633
    6. '_result' → logprob: -19.625001907348633
    7. 'minimal' → logprob: -19.875001907348633
    8. '_MIN' → logprob: -20.750001907348633
    9. '```' → logprob: -20.750001907348633
    10. '
' → logprob: -22.125001907348633

Token 374: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.00012475410767365247
    2. 'um' → logprob: -9.50012493133545
    3. 'im' → logprob: -10.50012493133545
    4. 'inum' → logprob: -11.12512493133545
    5. 'ium' → logprob: -12.12512493133545
    6. 'mum' → logprob: -14.87512493133545
    7. 'IMUM' → logprob: -15.37512493133545
    8. 'imal' → logprob: -15.37512493133545
    9. '_' → logprob: -15.50012493133545
    10. 'ute' → logprob: -16.000123977661133

Token 375: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -17.75
    4. 'dp' → logprob: -18.125
    5. '```' → logprob: -18.125
    6. '(df' → logprob: -18.5
    7. '(dt' → logprob: -19.5
    8. '(
' → logprob: -19.875
    9. '	dp' → logprob: -20.5
    10. '(db' → logprob: -20.5

Token 376: ',' (ID: 11)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.023959314450621605
    2. ',' → logprob: -3.7739593982696533
    3. 'dp' → logprob: -8.398959159851074
    4. ')' → logprob: -8.398959159851074
    5. '(' → logprob: -9.023959159851074
    6. ' (' → logprob: -9.773959159851074
    7. '(n' → logprob: -9.898959159851074
    8. ' dp' → logprob: -11.523959159851074
    9. '```' → logprob: -11.898959159851074
    10. ' ,' → logprob: -12.023959159851074

Token 377: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014163747429847717
    2. ' n' → logprob: -4.264163970947266
    3. '   ' → logprob: -16.139163970947266
    4. '	n' → logprob: -16.389163970947266
    5. ')n' → logprob: -16.764163970947266
    6. '
' → logprob: -18.889163970947266
    7. ',n' → logprob: -19.139163970947266
    8. ' ' → logprob: -19.139163970947266
    9. '  ' → logprob: -19.264163970947266
    10. '    ' → logprob: -19.639163970947266

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004141091834753752
    2. ',k' → logprob: -5.504140853881836
    3. ' ,' → logprob: -9.754140853881836
    4. ',
' → logprob: -13.754140853881836
    5. 'k' → logprob: -14.129140853881836
    6. '-k' → logprob: -14.504140853881836
    7. '-' → logprob: -14.629140853881836
    8. ')' → logprob: -14.754140853881836
    9. ' -' → logprob: -15.379140853881836
    10. '   ' → logprob: -15.504140853881836

Token 379: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.4391956685576588e-05
    2. ' k' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.875024795532227
    4. ')' → logprob: -19.625024795532227
    5. ' ' → logprob: -19.750024795532227
    6. '
' → logprob: -20.375024795532227
    7. '	k' → logprob: -20.375024795532227
    8. '```' → logprob: -20.875024795532227
    9. 'n' → logprob: -21.000024795532227
    10. '  ' → logprob: -22.125024795532227

Token 380: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0017637170385569334
    2. ')' → logprob: -6.376763820648193
    3. ')
' → logprob: -10.251763343811035
    4. '   ' → logprob: -10.626763343811035
    5. ' )
' → logprob: -13.251763343811035
    6. '+' → logprob: -16.75176429748535
    7. ')

' → logprob: -17.50176429748535
    8. ',' → logprob: -17.50176429748535
    9. ' ' → logprob: -17.87676429748535
    10. ')`
' → logprob: -17.87676429748535

Token 381: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023586407769471407
    2. '   ' → logprob: -6.252358436584473
    3. ' print' → logprob: -7.752358436584473
    4. '(print' → logprob: -17.00235939025879
    5. '
' → logprob: -17.12735939025879
    6. '	print' → logprob: -17.25235939025879
    7. '```' → logprob: -17.62735939025879
    8. '#print' → logprob: -18.75235939025879
    9. ' ' → logprob: -19.12735939025879
    10. '.print' → logprob: -19.12735939025879

Token 382: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -18.0
    3. 'return' → logprob: -22.5
    4. '
' → logprob: -24.875
    5. '   ' → logprob: -25.75
    6. '#print' → logprob: -26.125
    7. '(print' → logprob: -26.875
    8. '.print' → logprob: -27.375
    9. '_print' → logprob: -28.125
    10. '-print' → logprob: -28.375

Token 383: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.00026217024424113333
    2. '(result' → logprob: -8.250262260437012
    3. '(' → logprob: -14.875262260437012
    4. 'result' → logprob: -15.125262260437012
    5. '_(' → logprob: -16.625261306762695
    6. '_' → logprob: -16.750261306762695
    7. '(_' → logprob: -16.875261306762695
    8. 'Result' → logprob: -17.750261306762695
    9. '_Result' → logprob: -18.000261306762695
    10. '_RESULT' → logprob: -18.250261306762695

Token 384: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -12.625003814697266
    3. '(results' → logprob: -16.375003814697266
    4. '(res' → logprob: -16.750003814697266
    5. 'result' → logprob: -16.875003814697266
    6. ' (' → logprob: -17.125003814697266
    7. '(resultado' → logprob: -19.250003814697266
    8. '(response' → logprob: -19.750003814697266
    9. ',result' → logprob: -20.000003814697266
    10. '=result' → logprob: -20.125003814697266

Token 385: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. '())' → logprob: -12.750005722045898
    3. ')
' → logprob: -13.125005722045898
    4. '()' → logprob: -15.125005722045898
    5. ' )' → logprob: -16.5000057220459
    6. '))' → logprob: -18.0000057220459
    7. ')`' → logprob: -19.3750057220459
    8. '   ' → logprob: -19.7500057220459
    9. '）' → logprob: -19.7500057220459
    10. '`)' → logprob: -20.1250057220459

Token 386: 'resolve' (ID: 31567)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38689857721328735
    2. 'resolve' → logprob: -1.1368985176086426
    3. '#' → logprob: -10.7618989944458
    4. '#if' → logprob: -13.0118989944458
    5. ' resolve' → logprob: -13.7618989944458
    6. ' if' → logprob: -13.7618989944458
    7. '```' → logprob: -14.1368989944458
    8. '(resolve' → logprob: -14.7618989944458
    9. 'import' → logprob: -15.2618989944458
    10. '?' → logprob: -16.011898040771484

Token 387: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 385
Tokens correctement prédits (1ère position, stricte): 179
Tokens correctement prédits (1ère position, avec adaptation): 194
Tokens correctement prédits (top 10): 336
Précision stricte (1ère position): 46.49%
Précision adaptée (1ère position): 50.39%
Précision (top 10): 87.27%
================================================================================
