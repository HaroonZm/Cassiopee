================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def check_each_char_appears_twice(s):
    """
    Vérifie si chaque caractère de la chaîne donnée apparaît exactement deux fois.
    
    Arguments :
        s (str) : La chaîne de caractères à analyser.
        
    Retourne :
        bool : True si chaque caractère apparaît exactement deux fois, False sinon.
    """
    for char in s:
        # Compte le nombre d'occurrences du caractère courant dans la chaîne
        if s.count(char) != 2:
            # Si un caractère n'apparaît pas exactement deux fois, retourne False
            return False
    # Tous les caractères apparaissent exactement deux fois
    return True

def main():
    """
    Point d'entrée principal du programme.
    Lit une chaîne de caractères depuis l'entrée utilisateur et affiche "Yes"
    si chaque caractère apparaît exactement deux fois, "No" sinon.
    """
    # Lit la chaîne de caractères depuis l'entrée standard
    input_str = input()
    
    # Vérifie si chaque caractère apparaît exactement deux fois
    if check_each_char_appears_twice(input_str):
        print("Yes")
    else:
        print("No")
        # Termine le programme immédiatement avec un code de sortie différent de zéro
        sys.exit()

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' check' (ID: 2371)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023265164345502853
    2. ' main' → logprob: -5.148265361785889
    3. ' process' → logprob: -5.898265361785889
    4. ' space' → logprob: -6.023265361785889
    5. ' sys' → logprob: -6.273265361785889
    6. ' ' → logprob: -6.273265361785889
    7. '  ' → logprob: -7.023265361785889
    8. ' a' → logprob: -7.398265361785889
    9. ' function' → logprob: -7.398265361785889
    10. ' def' → logprob: -7.523265361785889

Token 5: '_each' (ID: 79044)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006065667141228914
    2. '_space' → logprob: -5.881065845489502
    3. '(' → logprob: -6.506065845489502
    4. ' _' → logprob: -8.006065368652344
    5. '_name' → logprob: -8.256065368652344
    6. '_password' → logprob: -9.006065368652344
    7. '_check' → logprob: -9.131065368652344
    8. '```' → logprob: -9.506065368652344
    9. ' ' → logprob: -9.756065368652344
    10. '_character' → logprob: -9.881065368652344

Token 6: '_char' (ID: 23398)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004626649431884289
    2. ' _' → logprob: -7.004626750946045
    3. '(' → logprob: -7.129626750946045
    4. '_space' → logprob: -7.379626750946045
    5. ' ' → logprob: -7.504626750946045
    6. '_token' → logprob: -7.629626750946045
    7. '_word' → logprob: -8.004626274108887
    8. '_character' → logprob: -8.254626274108887
    9. '_line' → logprob: -8.754626274108887
    10. '_parent' → logprob: -8.754626274108887

Token 7: '_' (ID: 62)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08480190485715866
    2. '_' → logprob: -2.7098019123077393
    3. 's' → logprob: -5.45980167388916
    4. ':' → logprob: -5.83480167388916
    5. '_:' → logprob: -6.45980167388916
    6. ' (' → logprob: -6.83480167388916
    7. ''s' → logprob: -6.95980167388916
    8. '(:' → logprob: -6.95980167388916
    9. '(_:' → logprob: -7.20980167388916
    10. '(_' → logprob: -8.08480167388916

Token 8: 'appe' (ID: 15645)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4359642267227173
    2. 'is' → logprob: -2.1859641075134277
    3. 'exists' → logprob: -2.6859641075134277
    4. 'present' → logprob: -3.1859641075134277
    5. 'v' → logprob: -3.9359641075134277
    6. 'exist' → logprob: -4.810964107513428
    7. 'ascii' → logprob: -4.810964107513428
    8. 'string' → logprob: -4.810964107513428
    9. 'input' → logprob: -4.935964107513428
    10. 'contains' → logprob: -4.935964107513428

Token 9: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.05432930588722229
    2. 'ar' → logprob: -3.4293293952941895
    3. 'a' → logprob: -4.0543293952941895
    4. 'aring' → logprob: -6.3043293952941895
    5. 'ared' → logprob: -8.054328918457031
    6. 'arsa' → logprob: -8.429328918457031
    7. '```' → logprob: -8.679328918457031
    8. 'ara' → logprob: -9.054328918457031
    9. 'aran' → logprob: -9.179328918457031
    10. '_' → logprob: -10.054328918457031

Token 10: '_tw' (ID: 139926)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0743110328912735
    2. '(' → logprob: -3.0743110179901123
    3. '_in' → logprob: -3.8243110179901123
    4. '_once' → logprob: -6.199311256408691
    5. ' (' → logprob: -7.699311256408691
    6. '(_' → logprob: -8.699311256408691
    7. '_to' → logprob: -8.949311256408691
    8. '_every' → logprob: -9.199311256408691
    9. '_at' → logprob: -9.699311256408691
    10. '('_' → logprob: -10.074311256408691

Token 11: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0191490575671196
    2. 'i' → logprob: -4.144148826599121
    3. 'ic' → logprob: -6.019148826599121
    4. '_i' → logprob: -8.644148826599121
    5. 'ices' → logprob: -8.894148826599121
    6. 'ce' → logprob: -8.894148826599121
    7. '_' → logprob: -9.144148826599121
    8. '```' → logprob: -9.644148826599121
    9. '__' → logprob: -11.769148826599121
    10. 'o' → logprob: -11.769148826599121

Token 12: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.062447234988212585
    2. '(:' → logprob: -3.3124473094940186
    3. '():' → logprob: -4.6874470710754395
    4. ':' → logprob: -4.6874470710754395
    5. '(_:' → logprob: -5.9374470710754395
    6. '_' → logprob: -6.9374470710754395
    7. '_:' → logprob: -6.9374470710754395
    8. '(_' → logprob: -8.312447547912598
    9. ' (' → logprob: -8.562447547912598
    10. '('' → logprob: -8.687447547912598

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005288311280310154
    2. ')' → logprob: -5.255288124084473
    3. ' ):' → logprob: -10.630288124084473
    4. ':' → logprob: -11.130288124084473
    5. '):
' → logprob: -11.505288124084473
    6. '[' → logprob: -14.005288124084473
    7. ')：' → logprob: -14.005288124084473
    8. ''):' → logprob: -14.630288124084473
    9. ' ' → logprob: -14.755288124084473
    10. '   ' → logprob: -14.755288124084473

Token 14: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008492941851727664
    2. ':
' → logprob: -7.25084924697876
    3. '   ' → logprob: -9.625849723815918
    4. ' :' → logprob: -9.875849723815918
    5. '():' → logprob: -11.500849723815918
    6. ':return' → logprob: -12.375849723815918
    7. ':**' → logprob: -13.875849723815918
    8. '```' → logprob: -14.000849723815918
    9. '):' → logprob: -14.250849723815918
    10. '`:' → logprob: -14.375849723815918

Token 15: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8959798216819763
    2. '```' → logprob: -0.8959798216819763
    3. '
' → logprob: -2.895979881286621
    4. ' for' → logprob: -3.020979881286621
    5. ' 
' → logprob: -3.395979881286621
    6. '\n' → logprob: -3.895979881286621
    7. '\' → logprob: -4.895979881286621
    8. '    
' → logprob: -5.145979881286621
    9. '``' → logprob: -5.645979881286621
    10. 'n' → logprob: -6.020979881286621

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37684839963912964
    2. '"""' → logprob: -1.8768484592437744
    3. ' """' → logprob: -2.2518484592437744
    4. ' ' → logprob: -3.8768484592437744
    5. 'Returns' → logprob: -5.251848220825195
    6. '    ' → logprob: -5.376848220825195
    7. ')' → logprob: -5.501848220825195
    8. 'The' → logprob: -6.126848220825195
    9. ' The' → logprob: -6.376848220825195
    10. '  ' → logprob: -6.376848220825195

Token 17: ' Vér' (ID: 159169)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06303747743368149
    2. 'Checks' → logprob: -3.813037395477295
    3. 'Check' → logprob: -4.063037395477295
    4. 'Returns' → logprob: -4.188037395477295
    5. '"""' → logprob: -6.438037395477295
    6. 'For' → logprob: -6.563037395477295
    7. 'This' → logprob: -6.688037395477295
    8. 'Iter' → logprob: -7.688037395477295
    9. 'Each' → logprob: -7.938037395477295
    10. 'Return' → logprob: -8.063037872314453

Token 18: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.06188611686229706
    2. 'if' → logprob: -3.3118860721588135
    3. 'ifi' → logprob: -3.8118860721588135
    4. 'ifié' → logprob: -7.686886310577393
    5. 'ifier' → logprob: -7.811886310577393
    6. 'ifiez' → logprob: -8.186885833740234
    7. 'i' → logprob: -9.186885833740234
    8. 'ifies' → logprob: -9.436885833740234
    9. '   ' → logprob: -9.561885833740234
    10. 'ify' → logprob: -10.936885833740234

Token 19: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47107571363449097
    2. ' if' → logprob: -1.8460757732391357
    3. ' que' → logprob: -1.9710757732391357
    4. ' si' → logprob: -2.8460757732391357
    5. '  ' → logprob: -4.721075534820557
    6. ' ' → logprob: -5.721075534820557
    7. '   ' → logprob: -6.221075534820557
    8. ' chaque' → logprob: -6.346075534820557
    9. ' that' → logprob: -6.721075534820557
    10. 'si' → logprob: -7.096075534820557

Token 20: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.0599336177110672
    2. ' ' → logprob: -2.934933662414551
    3. ' every' → logprob: -6.434933662414551
    4. ' each' → logprob: -6.684933662414551
    5. 'cha' → logprob: -7.309933662414551
    6. ' tous' → logprob: -7.434933662414551
    7. ' ' → logprob: -9.18493366241455
    8. 'each' → logprob: -9.30993366241455
    9. 'ch' → logprob: -9.68493366241455
    10. 't' → logprob: -9.68493366241455

Token 21: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.7806578874588013
    2. ' caractère' → logprob: -0.7806578874588013
    3. ' caract' → logprob: -2.9056577682495117
    4. ' ' → logprob: -4.280657768249512
    5. 'char' → logprob: -5.280657768249512
    6. 'c' → logprob: -5.905657768249512
    7. ' car' → logprob: -6.155657768249512
    8. '   ' → logprob: -6.905657768249512
    9. ' caractères' → logprob: -7.030657768249512
    10. '```' → logprob: -7.030657768249512

Token 22: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5109187960624695
    2. ' du' → logprob: -1.8859188556671143
    3. 'de' → logprob: -2.5109188556671143
    4. ' apparaît' → logprob: -2.6359188556671143
    5. ' dans' → logprob: -3.7609188556671143
    6. 'ap' → logprob: -4.135918617248535
    7. 'dans' → logprob: -4.260918617248535
    8. 'du' → logprob: -4.385918617248535
    9. 'd' → logprob: -4.885918617248535
    10. ' appara' → logprob: -5.135918617248535

Token 23: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8420677781105042
    2. ' la' → logprob: -0.9670677781105042
    3. 's' → logprob: -1.7170677185058594
    4. ' s' → logprob: -5.342067718505859
    5. 'chaine' → logprob: -6.092067718505859
    6. 'l' → logprob: -6.967067718505859
    7. 'string' → logprob: -8.21706771850586
    8. ' ' → logprob: -8.46706771850586
    9. '```' → logprob: -8.59206771850586
    10. 'une' → logprob: -8.96706771850586

Token 24: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.7882947325706482
    2. 'chaine' → logprob: -1.288294792175293
    3. 'cha' → logprob: -1.413294792175293
    4. 's' → logprob: -4.413294792175293
    5. 'string' → logprob: -4.913294792175293
    6. ' chaine' → logprob: -6.038294792175293
    7. '   ' → logprob: -6.163294792175293
    8. 'phrase' → logprob: -7.663294792175293
    9. 'str' → logprob: -7.913294792175293
    10. ' string' → logprob: -7.913294792175293

Token 25: ' donnée' (ID: 130126)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6498983502388
    2. ' apparaît' → logprob: -1.7748982906341553
    3. 's' → logprob: -1.8998982906341553
    4. '   ' → logprob: -3.1498982906341553
    5. ' ' → logprob: -3.3998982906341553
    6. 'd' → logprob: -3.6498982906341553
    7. ' d' → logprob: -4.399898529052734
    8. ' est' → logprob: -4.649898529052734
    9. ' appara' → logprob: -4.899898529052734
    10. ' a' → logprob: -5.274898529052734

Token 26: ' apparaît' (ID: 147656)
  Prédit: ' apparaît'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apparaît' → logprob: -0.08603322505950928
    2. ' s' → logprob: -3.586033344268799
    3. ' appara' → logprob: -3.961033344268799
    4. ' ' → logprob: -4.086033344268799
    5. 'appe' → logprob: -5.836033344268799
    6. 's' → logprob: -6.086033344268799
    7. ' est' → logprob: -6.086033344268799
    8. ' a' → logprob: -6.086033344268799
    9. ' appar' → logprob: -6.336033344268799
    10. '   ' → logprob: -6.461033344268799

Token 27: ' exactement' (ID: 108701)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.21971826255321503
    2. 'au' → logprob: -1.7197182178497314
    3. ' deux' → logprob: -4.7197184562683105
    4. ' ' → logprob: -5.2197184562683105
    5. 'de' → logprob: -6.3447184562683105
    6. ' exactement' → logprob: -7.2197184562683105
    7. '   ' → logprob: -7.8447184562683105
    8. '2' → logprob: -8.344717979431152
    9. '```' → logprob: -8.594717979431152
    10. '_' → logprob: -9.094717979431152

Token 28: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6157037019729614
    2. ' deux' → logprob: -0.8657037019729614
    3. ' ' → logprob: -3.365703582763672
    4. ' exactement' → logprob: -6.740703582763672
    5. ' au' → logprob: -7.115703582763672
    6. '2' → logprob: -7.115703582763672
    7. 'au' → logprob: -7.240703582763672
    8. ' de' → logprob: -7.365703582763672
    9. ' two' → logprob: -9.615703582763672
    10. '```' → logprob: -10.240703582763672

Token 29: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.22801484167575836
    2. ' fois' → logprob: -1.6030148267745972
    3. ' ' → logprob: -6.728014945983887
    4. 'fo' → logprob: -6.728014945983887
    5. ' ' → logprob: -9.478014945983887
    6. 'f' → logprob: -10.103014945983887
    7. '```' → logprob: -10.228014945983887
    8. '   ' → logprob: -10.478014945983887
    9. ' f' → logprob: -12.728014945983887
    10. '<|end|>' → logprob: -12.978014945983887

Token 30: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7689917087554932
    2. '   ' → logprob: -0.7689917087554932
    3. ' ' → logprob: -3.143991708755493
    4. ')' → logprob: -5.393991470336914
    5. 'def' → logprob: -5.518991470336914
    6. ' dans' → logprob: -5.768991470336914
    7. '<|end|>' → logprob: -5.893991470336914
    8. '  ' → logprob: -6.018991470336914
    9. ',' → logprob: -6.143991470336914
    10. ' )' → logprob: -6.393991470336914

Token 31: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05852799862623215
    2. '"""' → logprob: -3.183527946472168
    3. '\n' → logprob: -4.933527946472168
    4. '"""
' → logprob: -5.683527946472168
    5. '```' → logprob: -5.933527946472168
    6. '""' → logprob: -8.183527946472168
    7. '  
' → logprob: -8.308527946472168
    8. '    
' → logprob: -8.308527946472168
    9. '
' → logprob: -8.433527946472168
    10. ')' → logprob: -8.433527946472168

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005194739904254675
    2. '"""' → logprob: -5.505194664001465
    3. ' """' → logprob: -7.255194664001465
    4. ' ' → logprob: -9.380194664001465
    5. '    ' → logprob: -9.505194664001465
    6. '  ' → logprob: -9.630194664001465
    7. '```' → logprob: -10.255194664001465
    8. ')' → logprob: -10.380194664001465
    9. ' """
' → logprob: -10.505194664001465
    10. '    
' → logprob: -10.755194664001465

Token 33: ' Arguments' (ID: 63373)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3744671940803528
    2. 'for' → logprob: -1.249467134475708
    3. ' for' → logprob: -3.874467134475708
    4. '"""' → logprob: -5.874467372894287
    5. '```' → logprob: -7.499467372894287
    6. 'if' → logprob: -7.499467372894287
    7. '"""
' → logprob: -8.124466896057129
    8. ' if' → logprob: -9.374466896057129
    9. '       ' → logprob: -9.749466896057129
    10. ' ' → logprob: -9.874466896057129

Token 34: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6876754760742188
    2. '   ' → logprob: -0.9376754760742188
    3. ' :' → logprob: -2.4376754760742188
    4. ':
' → logprob: -4.687675476074219
    5. ' :
' → logprob: -6.562675476074219
    6. ' ' → logprob: -6.562675476074219
    7. '):' → logprob: -6.562675476074219
    8. 's' → logprob: -6.687675476074219
    9. ')' → logprob: -7.187675476074219
    10. '
' → logprob: -7.312675476074219

Token 35: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2100803703069687
    2. 's' → logprob: -1.8350803852081299
    3. ' s' → logprob: -4.460080146789551
    4. ')' → logprob: -4.460080146789551
    5. '```' → logprob: -5.460080146789551
    6. ' )' → logprob: -6.585080146789551
    7. ' ' → logprob: -7.960080146789551
    8. '):
' → logprob: -9.46008014678955
    9. '    ' → logprob: -9.46008014678955
    10. '):' → logprob: -9.96008014678955

Token 36: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.013503124006092548
    2. ' s' → logprob: -4.888503074645996
    3. '   ' → logprob: -5.138503074645996
    4. '```' → logprob: -12.138503074645996
    5. 'str' → logprob: -13.013503074645996
    6. ' ' → logprob: -13.013503074645996
    7. 'string' → logprob: -14.013503074645996
    8. '	s' → logprob: -14.513503074645996
    9. '  ' → logprob: -14.638503074645996
    10. '       ' → logprob: -14.888503074645996

Token 37: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7901317477226257
    2. ' )' → logprob: -0.9151317477226257
    3. '):' → logprob: -3.1651318073272705
    4. ' :' → logprob: -3.1651318073272705
    5. '   ' → logprob: -3.7901318073272705
    6. ' ):' → logprob: -4.165131568908691
    7. ' ' → logprob: -4.915131568908691
    8. '    ' → logprob: -5.040131568908691
    9. ':' → logprob: -5.665131568908691
    10. '```' → logprob: -6.040131568908691

Token 38: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0003461905289441347
    2. ' str' → logprob: -8.000346183776855
    3. 'string' → logprob: -11.500346183776855
    4. 's' → logprob: -14.625346183776855
    5. 'stri' → logprob: -16.250347137451172
    6. 'st' → logprob: -17.125347137451172
    7. ':str' → logprob: -18.125347137451172
    8. ')' → logprob: -18.125347137451172
    9. '(str' → logprob: -19.000347137451172
    10. '	str' → logprob: -19.375347137451172

Token 39: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5764763951301575
    2. '):' → logprob: -0.8264763951301575
    3. '<|end|>' → logprob: -8.451476097106934
    4. ' ):' → logprob: -9.201476097106934
    5. '   ' → logprob: -9.451476097106934
    6. '):
' → logprob: -9.826476097106934
    7. ' )' → logprob: -10.451476097106934
    8. ' ' → logprob: -10.701476097106934
    9. '):

' → logprob: -11.701476097106934
    10. '<|end|>' → logprob: -11.826476097106934

Token 40: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44755449891090393
    2. '):' → logprob: -1.5725544691085815
    3. '   ' → logprob: -1.9475544691085815
    4. ' )' → logprob: -4.822554588317871
    5. ' ):' → logprob: -6.572554588317871
    6. ' ' → logprob: -7.947554588317871
    7. '    ' → logprob: -8.197554588317871
    8. '):
' → logprob: -8.697554588317871
    9. '<|end|>' → logprob: -9.322554588317871
    10. '  ' → logprob: -9.697554588317871

Token 41: ' La' (ID: 3038)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1282490491867065
    2. ' str' → logprob: -1.1282490491867065
    3. '   ' → logprob: -1.5032490491867065
    4. ' La' → logprob: -3.378249168395996
    5. 'str' → logprob: -3.378249168395996
    6. 's' → logprob: -4.128249168395996
    7. ' ' → logprob: -4.628249168395996
    8. 'La' → logprob: -5.003249168395996
    9. ' s' → logprob: -5.128249168395996
    10. 'string' → logprob: -5.253249168395996

Token 42: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.03768210858106613
    2. 'cha' → logprob: -4.162682056427002
    3. 'chaine' → logprob: -4.537682056427002
    4. ' ' → logprob: -5.287682056427002
    5. '   ' → logprob: -5.412682056427002
    6. ' chaine' → logprob: -7.412682056427002
    7. 's' → logprob: -8.16268253326416
    8. '  ' → logprob: -9.16268253326416
    9. ' cha' → logprob: -9.41268253326416
    10. ' string' → logprob: -10.16268253326416

Token 43: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30140042304992676
    2. '<|end|>' → logprob: -2.3014004230499268
    3. ' d' → logprob: -3.0514004230499268
    4. ' de' → logprob: -3.4264004230499268
    5. ' )' → logprob: -3.9264004230499268
    6. ')' → logprob: -4.051400184631348
    7. ' donnée' → logprob: -4.926400184631348
    8. 'de' → logprob: -4.926400184631348
    9. '   ' → logprob: -5.051400184631348
    10. 'd' → logprob: -5.301400184631348

Token 44: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.056321579962968826
    2. ' caractères' → logprob: -2.931321620941162
    3. ' caractère' → logprob: -7.556321620941162
    4. ' caract' → logprob: -8.056321144104004
    5. 'texte' → logprob: -8.431321144104004
    6. ' caracteres' → logprob: -8.931321144104004
    7. 'code' → logprob: -9.806321144104004
    8. ' car' → logprob: -10.056321144104004
    9. ' ' → logprob: -10.306321144104004
    10. 'entrée' → logprob: -10.556321144104004

Token 45: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08454921841621399
    2. ' )' → logprob: -3.2095491886138916
    3. '   ' → logprob: -3.3345491886138916
    4. ' ' → logprob: -5.584549427032471
    5. '```' → logprob: -7.709549427032471
    6. '  ' → logprob: -8.959548950195312
    7. '    ' → logprob: -9.084548950195312
    8. '<|end|>' → logprob: -9.834548950195312
    9. '')' → logprob: -10.209548950195312
    10. ' à' → logprob: -10.209548950195312

Token 46: ' analyser' (ID: 104487)
  Prédit: ' vérifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.18655842542648315
    2. 'v' → logprob: -1.811558485031128
    3. ' analyser' → logprob: -6.561558246612549
    4. ')' → logprob: -6.811558246612549
    5. ' v' → logprob: -7.186558246612549
    6. ' tester' → logprob: -7.561558246612549
    7. ' checker' → logprob: -7.561558246612549
    8. '   ' → logprob: -7.561558246612549
    9. ' vér' → logprob: -7.686558246612549
    10. 'ver' → logprob: -8.686558723449707

Token 47: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12931209802627563
    2. '   ' → logprob: -2.129312038421631
    3. ' )' → logprob: -6.754312038421631
    4. '```' → logprob: -8.004312515258789
    5. ')\' → logprob: -8.504312515258789
    6. ')
' → logprob: -8.879312515258789
    7. '\n' → logprob: -9.129312515258789
    8. ' ' → logprob: -9.504312515258789
    9. '  ' → logprob: -9.504312515258789
    10. '):' → logprob: -9.754312515258789

Token 48: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03281787410378456
    2. ')' → logprob: -4.907817840576172
    3. '"""' → logprob: -5.157817840576172
    4. '\n' → logprob: -5.282817840576172
    5. '```' → logprob: -5.282817840576172
    6. '    
' → logprob: -5.657817840576172
    7. '
' → logprob: -6.532817840576172
    8. '\' → logprob: -6.657817840576172
    9. ' ' → logprob: -7.532817840576172
    10. '  
' → logprob: -7.657817840576172

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000462366413557902
    2. '       ' → logprob: -9.250462532043457
    3. '    
' → logprob: -9.375462532043457
    4. '```' → logprob: -9.625462532043457
    5. '
' → logprob: -10.000462532043457
    6. '"""' → logprob: -10.125462532043457
    7. ')' → logprob: -10.250462532043457
    8. ' ' → logprob: -10.750462532043457
    9. '    ' → logprob: -10.875462532043457
    10. '  ' → logprob: -11.125462532043457

Token 50: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004572768695652485
    2. 'Returns' → logprob: -6.629572868347168
    3. '"""' → logprob: -6.879572868347168
    4. 'for' → logprob: -7.254572868347168
    5. '"""
' → logprob: -7.754572868347168
    6. '```' → logprob: -8.129572868347168
    7. 'return' → logprob: -8.254572868347168
    8. 'Retour' (adapté à ' Retour') → logprob: -9.004572868347168
    9. '       ' → logprob: -9.379572868347168
    10. 'returns' → logprob: -9.754572868347168

Token 51: 'ne' (ID: 611)
  Prédit: 'urne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urne' → logprob: -0.7924010157585144
    2. 'urn' → logprob: -1.2924010753631592
    3. 'ne' → logprob: -2.167401075363159
    4. '   ' → logprob: -2.167401075363159
    5. 'ur' → logprob: -3.917401075363159
    6. 'rne' → logprob: -5.16740083694458
    7. '       ' → logprob: -5.79240083694458
    8. 'u' → logprob: -6.04240083694458
    9. 'nne' → logprob: -6.41740083694458
    10. '"""
' → logprob: -6.54240083694458

Token 52: ' :
' (ID: 10039)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0037516250740736723
    2. ' ' → logprob: -6.003751754760742
    3. 'True' → logprob: -7.253751754760742
    4. ' None' → logprob: -8.378751754760742
    5. ' False' → logprob: -9.003751754760742
    6. ' :' → logprob: -10.128751754760742
    7. ' bool' → logprob: -10.253751754760742
    8. ' true' → logprob: -10.503751754760742
    9. ':' → logprob: -10.503751754760742
    10. '  ' → logprob: -11.003751754760742

Token 53: '       ' (ID: 309)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.6570213437080383
    2. '   ' → logprob: -0.7820213437080383
    3. 'True' → logprob: -4.157021522521973
    4. '    ' → logprob: -5.157021522521973
    5. ' bool' → logprob: -6.282021522521973
    6. ' ' → logprob: -8.157021522521973
    7. ' False' → logprob: -9.407021522521973
    8. '```' → logprob: -9.407021522521973
    9. ' ' → logprob: -9.532021522521973
    10. 'bool' → logprob: -9.782021522521973

Token 54: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' (adapté à ' bool') → logprob: -0.5527210831642151
    2. ' bool' → logprob: -0.9277210831642151
    3. '   ' → logprob: -4.05272102355957
    4. 'True' → logprob: -4.92772102355957
    5. ' True' → logprob: -5.42772102355957
    6. '(bool' → logprob: -9.80272102355957
    7. '       ' → logprob: -10.17772102355957
    8. 'Bool' → logprob: -11.05272102355957
    9. '```' → logprob: -11.80272102355957
    10. ' boolean' → logprob: -11.92772102355957

Token 55: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7601773738861084
    2. 'ean' → logprob: -1.0101773738861084
    3. 'e' → logprob: -2.6351773738861084
    4. '<|end|>' → logprob: -3.6351773738861084
    5. 'é' → logprob: -3.8851773738861084
    6. '   ' → logprob: -4.1351776123046875
    7. 'éan' → logprob: -4.3851776123046875
    8. '```' → logprob: -4.7601776123046875
    9. ' :' → logprob: -6.0101776123046875
    10. ' True' → logprob: -6.5101776123046875

Token 56: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.01450159028172493
    2. 'True' → logprob: -4.264501571655273
    3. '   ' → logprob: -8.514501571655273
    4. ' ' → logprob: -9.389501571655273
    5. ' return' → logprob: -11.139501571655273
    6. '    ' → logprob: -11.639501571655273
    7. ' true' → logprob: -11.889501571655273
    8. ' len' → logprob: -12.139501571655273
    9. '       ' → logprob: -12.639501571655273
    10. ' all' → logprob: -12.764501571655273

Token 57: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5721670389175415
    2. ' si' → logprob: -1.6971670389175415
    3. '<|end|>' → logprob: -2.072166919708252
    4. 'if' → logprob: -2.697166919708252
    5. ' ' → logprob: -3.947166919708252
    6. 'si' → logprob: -4.072166919708252
    7. '   ' → logprob: -4.322166919708252
    8. 's' → logprob: -5.697166919708252
    9. '```' → logprob: -6.072166919708252
    10. ' or' → logprob: -7.697166919708252

Token 58: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.004354514181613922
    2. ' tous' → logprob: -6.629354476928711
    3. ' ' → logprob: -6.754354476928711
    4. ' every' → logprob: -6.879354476928711
    5. ' each' → logprob: -7.754354476928711
    6. ' toutes' → logprob: -9.004354476928711
    7. ' chacun' → logprob: -10.004354476928711
    8. ' ' → logprob: -10.129354476928711
    9. 'Chaque' → logprob: -10.129354476928711
    10. 'every' → logprob: -10.379354476928711

Token 59: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.27951592206954956
    2. ' ' → logprob: -1.6545159816741943
    3. 'car' → logprob: -3.0295159816741943
    4. ' caract' → logprob: -6.029515743255615
    5. ' espace' → logprob: -7.904515743255615
    6. ' caractères' → logprob: -8.029516220092773
    7. ' car' → logprob: -8.404516220092773
    8. '  ' → logprob: -8.529516220092773
    9. '   ' → logprob: -9.154516220092773
    10. '_' → logprob: -9.279516220092773

Token 60: ' apparaît' (ID: 147656)
  Prédit: ' apparaît'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apparaît' → logprob: -0.3062986433506012
    2. ' de' → logprob: -1.6812986135482788
    3. '   ' → logprob: -3.6812987327575684
    4. ' ' → logprob: -4.056298732757568
    5. ' appara' → logprob: -4.681298732757568
    6. 'de' → logprob: -5.056298732757568
    7. '```' → logprob: -5.681298732757568
    8. 'appe' → logprob: -5.806298732757568
    9. '_' → logprob: -6.306298732757568
    10. '    ' → logprob: -6.556298732757568

Token 61: ' exactement' (ID: 108701)
  Prédit: ' exactement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactement' → logprob: -0.169166699051857
    2. ' deux' → logprob: -2.0441668033599854
    3. 'exact' → logprob: -4.669166564941406
    4. ' ' → logprob: -5.419166564941406
    5. 'de' → logprob: -5.419166564941406
    6. ' au' → logprob: -6.044166564941406
    7. ' exactly' → logprob: -6.294166564941406
    8. ' exact' → logprob: -6.294166564941406
    9. 'au' → logprob: -6.794166564941406
    10. '_exact' → logprob: -8.544166564941406

Token 62: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.048897214233875275
    2. ' ' → logprob: -3.1738972663879395
    3. 'de' → logprob: -5.6738972663879395
    4. ' two' → logprob: -6.2988972663879395
    5. '2' → logprob: -8.173896789550781
    6. ' True' → logprob: -8.923896789550781
    7. ' au' → logprob: -10.423896789550781
    8. ' exactement' → logprob: -10.423896789550781
    9. '  ' → logprob: -10.548896789550781
    10. 'au' → logprob: -11.048896789550781

Token 63: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.6995669007301331
    2. 'fois' → logprob: -0.6995669007301331
    3. ' ' → logprob: -5.449566841125488
    4. 'fo' → logprob: -6.824566841125488
    5. 'f' → logprob: -8.074566841125488
    6. '  ' → logprob: -8.949566841125488
    7. '   ' → logprob: -8.949566841125488
    8. '<|end|>' → logprob: -9.699566841125488
    9. 'times' → logprob: -9.824566841125488
    10. ' espaces' → logprob: -9.949566841125488

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001011611195281148
    2. '   ' → logprob: -7.001011848449707
    3. '.' → logprob: -10.126011848449707
    4. ' ,' → logprob: -10.626011848449707
    5. ',
' → logprob: -11.126011848449707
    6. '```' → logprob: -12.001011848449707
    7. 'False' → logprob: -12.876011848449707
    8. ';' → logprob: -13.126011848449707
    9. 'else' → logprob: -13.251011848449707
    10. 'True' → logprob: -13.501011848449707

Token 65: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.004465962294489145
    2. 'False' → logprob: -5.7544660568237305
    3. '   ' → logprob: -6.7544660568237305
    4. ' sinon' → logprob: -10.12946605682373
    5. ' True' → logprob: -10.50446605682373
    6. ' ' → logprob: -10.62946605682373
    7. '    ' → logprob: -11.12946605682373
    8. ' else' → logprob: -11.87946605682373
    9. '  ' → logprob: -12.75446605682373
    10. '       ' → logprob: -13.37946605682373

Token 66: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3086712956428528
    2. ' sinon' → logprob: -1.808671236038208
    3. '```' → logprob: -3.308671236038208
    4. ' autrement' → logprob: -4.433671474456787
    5. ' otherwise' → logprob: -4.558671474456787
    6. ' ' → logprob: -4.683671474456787
    7. '<|end|>' → logprob: -4.808671474456787
    8. '  ' → logprob: -4.933671474456787
    9. '.' → logprob: -5.183671474456787
    10. '    ' → logprob: -5.683671474456787

Token 67: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026802722364664078
    2. '.' → logprob: -3.9018027782440186
    3. '
' → logprob: -6.0268025398254395
    4. ')' → logprob: -6.6518025398254395
    5. '\n' → logprob: -7.1518025398254395
    6. '```' → logprob: -7.2768025398254395
    7. '.
' → logprob: -8.401803016662598
    8. ').' → logprob: -8.651803016662598
    9. ')
' → logprob: -8.776803016662598
    10. 'def' → logprob: -9.151803016662598

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017413463443517685
    2. '"""' → logprob: -5.01741361618042
    3. '
' → logprob: -5.14241361618042
    4. '```' → logprob: -6.51741361618042
    5. '"""
' → logprob: -6.76741361618042
    6. '\n' → logprob: -7.01741361618042
    7. '    
' → logprob: -7.26741361618042
    8. '""' → logprob: -8.892413139343262
    9. ')' → logprob: -9.142413139343262
    10. '  
' → logprob: -9.517413139343262

Token 69: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0490918792784214
    2. '
' → logprob: -3.6740918159484863
    3. '```' → logprob: -4.799091815948486
    4. '"""' → logprob: -5.049091815948486
    5. '\n' → logprob: -5.799091815948486
    6. '"""
' (adapté à ' """
') → logprob: -6.424091815948486
    7. ')' → logprob: -6.424091815948486
    8. '    
' → logprob: -7.549091815948486
    9. ')
' → logprob: -8.049092292785645
    10. '"' → logprob: -8.924092292785645

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001777042169123888
    2. '    
' → logprob: -7.001777172088623
    3. '
' → logprob: -7.126777172088623
    4. '    ' → logprob: -10.126776695251465
    5. '```' → logprob: -11.876776695251465
    6. '     
' → logprob: -13.001776695251465
    7. 'from' → logprob: -13.001776695251465
    8. '   
' → logprob: -13.126776695251465
    9. '       ' → logprob: -13.126776695251465
    10. 'import' → logprob: -13.626776695251465

Token 71: ' for' (ID: 395)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -1.0173133611679077
    2. ' char' → logprob: -1.3923133611679077
    3. '   ' → logprob: -1.7673133611679077
    4. 'counter' → logprob: -2.7673134803771973
    5. 'counts' → logprob: -2.8923134803771973
    6. 'from' → logprob: -3.3923134803771973
    7. ' counter' → logprob: -4.017313480377197
    8. ' from' → logprob: -4.517313480377197
    9. 'chars' → logprob: -4.642313480377197
    10. 'count' → logprob: -4.767313480377197

Token 72: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.6357203125953674
    2. ' c' → logprob: -1.0107202529907227
    3. ' ' → logprob: -2.2607202529907227
    4. 'char' → logprob: -7.260720252990723
    5. 'c' → logprob: -7.385720252990723
    6. ' ch' → logprob: -7.510720252990723
    7. ' caract' → logprob: -9.135720252990723
    8. ' car' → logprob: -9.385720252990723
    9. ' ' → logprob: -10.510720252990723
    10. ' character' → logprob: -10.885720252990723

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004066763445734978
    2. 'in' → logprob: -5.7540669441223145
    3. ' ' → logprob: -7.5040669441223145
    4. 's' → logprob: -8.379066467285156
    5. ' ,' → logprob: -10.754066467285156
    6. ' s' → logprob: -10.754066467285156
    7. ',' → logprob: -11.254066467285156
    8. '  ' → logprob: -11.254066467285156
    9. ' not' → logprob: -11.754066467285156
    10. '   ' → logprob: -11.754066467285156

Token 74: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0007398230955004692
    2. 's' → logprob: -7.250740051269531
    3. ' set' → logprob: -10.500740051269531
    4. ' ' → logprob: -13.250740051269531
    5. 'set' → logprob: -15.250740051269531
    6. ' ' → logprob: -16.56324005126953
    7. '   ' → logprob: -16.62574005126953
    8. '	s' → logprob: -17.31324005126953
    9. '_s' → logprob: -17.43824005126953
    10. '(s' → logprob: -17.50074005126953

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01602909155189991
    2. ' :' → logprob: -4.266028881072998
    3. '   ' → logprob: -6.766028881072998
    4. '):' → logprob: -7.891028881072998
    5. '       ' → logprob: -8.266029357910156
    6. '    ' → logprob: -10.141029357910156
    7. '=' → logprob: -12.016029357910156
    8. ':
' → logprob: -12.516029357910156
    9. ' if' → logprob: -12.641029357910156
    10. '  ' → logprob: -12.641029357910156

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022368174046278
    2. '    ' → logprob: -4.39736795425415
    3. '   ' → logprob: -5.52236795425415
    4. ' if' → logprob: -6.77236795425415
    5. ' ' → logprob: -6.89736795425415
    6. ':' → logprob: -6.89736795425415
    7. '<|end|>' → logprob: -6.89736795425415
    8. '        ' → logprob: -7.52236795425415
    9. ' :' → logprob: -7.89736795425415
    10. '      ' → logprob: -8.397368431091309

Token 77: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12930265069007874
    2. ' if' → logprob: -2.129302740097046
    3. '   ' → logprob: -6.504302501678467
    4. 'count' → logprob: -7.254302501678467
    5. '```' → logprob: -9.754302978515625
    6. '       ' → logprob: -9.879302978515625
    7. 's' → logprob: -10.504302978515625
    8. ' ' → logprob: -11.629302978515625
    9. ' count' → logprob: -12.504302978515625
    10. '    ' → logprob: -12.504302978515625

Token 78: ' Comp' (ID: 5211)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.48921680450439453
    2. ' if' → logprob: -1.8642168045043945
    3. 'if' → logprob: -1.9892168045043945
    4. ' count' → logprob: -2.9892168045043945
    5. '   ' → logprob: -3.4892168045043945
    6. ' s' → logprob: -5.3642168045043945
    7. '       ' → logprob: -6.1142168045043945
    8. 'counts' → logprob: -6.4892168045043945
    9. '    ' → logprob: -6.7392168045043945
    10. 's' → logprob: -6.7392168045043945

Token 79: 'te' (ID: 411)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.08087324351072311
    2. 'te' → logprob: -2.5808732509613037
    3. 't' → logprob: -7.080873012542725
    4. 'teur' → logprob: -7.705873012542725
    5. '   ' → logprob: -8.705873489379883
    6. '#' → logprob: -9.330873489379883
    7. '```' → logprob: -9.580873489379883
    8. 'té' → logprob: -9.705873489379883
    9. '=' → logprob: -10.643373489379883
    10. 'tere' → logprob: -10.768373489379883

Token 80: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2981249988079071
    2. ' =' → logprob: -1.9231250286102295
    3. '=' → logprob: -2.9231250286102295
    4. '   ' → logprob: -3.7981250286102295
    5. '(s' → logprob: -4.42312479019165
    6. '_' → logprob: -4.67312479019165
    7. ' s' → logprob: -5.04812479019165
    8. '    ' → logprob: -5.67312479019165
    9. ' ' → logprob: -6.17312479019165
    10. '       ' → logprob: -7.79812479019165

Token 81: ' nombre' (ID: 9733)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5873318314552307
    2. ' s' → logprob: -0.9623318314552307
    3. '   ' → logprob: -3.087331771850586
    4. '    ' → logprob: -5.212331771850586
    5. ' nombre' → logprob: -5.337331771850586
    6. ' ' → logprob: -5.712331771850586
    7. 'nombre' → logprob: -7.337331771850586
    8. '       ' → logprob: -7.462331771850586
    9. '```' → logprob: -7.462331771850586
    10. ' code' → logprob: -7.712331771850586

Token 82: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7713088393211365
    2. ' de' → logprob: -1.6463088989257812
    3. ' =' → logprob: -2.5213088989257812
    4. '=' → logprob: -3.0213088989257812
    5. 's' → logprob: -3.0213088989257812
    6. '    ' → logprob: -3.0213088989257812
    7. ' of' → logprob: -4.021308898925781
    8. ' d' → logprob: -4.396308898925781
    9. '(s' → logprob: -4.396308898925781
    10. 'de' → logprob: -4.396308898925781

Token 83: ''occ' (ID: 158932)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5480654835700989
    2. ' s' → logprob: -1.048065423965454
    3. ' ' → logprob: -3.173065423965454
    4. '(s' → logprob: -4.798065662384033
    5. ' occurrences' → logprob: -4.798065662384033
    6. '   ' → logprob: -5.173065662384033
    7. '    ' → logprob: -7.048065662384033
    8. '  ' → logprob: -7.298065662384033
    9. ' caracteres' → logprob: -7.298065662384033
    10. ' car' → logprob: -7.673065662384033

Token 84: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.0011639113072305918
    2. 'ur' → logprob: -6.876163959503174
    3. 'urr' → logprob: -10.126163482666016
    4. 'urrencies' → logprob: -10.751163482666016
    5. 'u' → logprob: -11.251163482666016
    6. 'curr' → logprob: -11.501163482666016
    7. 'orr' → logprob: -11.751163482666016
    8. 'urrence' → logprob: -11.876163482666016
    9. ' occurrences' → logprob: -12.001163482666016
    10. '```' → logprob: -12.126163482666016

Token 85: ' du' (ID: 1462)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7029719352722168
    2. '   ' → logprob: -1.0779719352722168
    3. '       ' → logprob: -2.827971935272217
    4. '    ' → logprob: -3.452971935272217
    5. 'if' → logprob: -3.577971935272217
    6. ' de' → logprob: -4.202971935272217
    7. ' ' → logprob: -4.702971935272217
    8. 's' → logprob: -4.827971935272217
    9. ' s' → logprob: -5.327971935272217
    10. ' =' → logprob: -5.702971935272217

Token 86: ' caractère' (ID: 80509)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.4316294193267822
    2. ' char' → logprob: -1.0566294193267822
    3. 'car' → logprob: -7.431629180908203
    4. ' caract' → logprob: -7.556629180908203
    5. ' caractère' → logprob: -7.556629180908203
    6. ' ' → logprob: -8.431629180908203
    7. 's' → logprob: -8.431629180908203
    8. 'c' → logprob: -8.556629180908203
    9. ' s' → logprob: -8.556629180908203
    10. ' car' → logprob: -8.806629180908203

Token 87: ' courant' (ID: 74694)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14305491745471954
    2. ' ' → logprob: -2.893054962158203
    3. '    ' → logprob: -3.393054962158203
    4. ' =' → logprob: -4.393054962158203
    5. 'if' → logprob: -4.518054962158203
    6. '=' → logprob: -4.893054962158203
    7. ' s' → logprob: -5.268054962158203
    8. 's' → logprob: -5.643054962158203
    9. '   ' → logprob: -6.393054962158203
    10. '       ' → logprob: -6.768054962158203

Token 88: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22176600992679596
    2. ' if' → logprob: -1.7217659950256348
    3. '   ' → logprob: -4.471765995025635
    4. '    ' → logprob: -6.346765995025635
    5. 'if' → logprob: -6.346765995025635
    6. ' =' → logprob: -6.471765995025635
    7. 'count' → logprob: -6.846765995025635
    8. '        ' → logprob: -7.221765995025635
    9. ',' → logprob: -7.721765995025635
    10. '=' → logprob: -8.096766471862793

Token 89: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0067372736521065235
    2. 's' → logprob: -5.006737232208252
    3. ' ' → logprob: -11.00673770904541
    4. '    ' → logprob: -13.38173770904541
    5. '   ' → logprob: -13.75673770904541
    6. ' the' → logprob: -14.25673770904541
    7. ' ' → logprob: -14.63173770904541
    8. '```' → logprob: -15.00673770904541
    9. ' `' → logprob: -15.63173770904541
    10. '(s' → logprob: -15.75673770904541

Token 90: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.025947246700525284
    2. ' s' → logprob: -3.775947332382202
    3. '   ' → logprob: -6.025947093963623
    4. 'string' → logprob: -9.025947570800781
    5. ' ' → logprob: -10.150947570800781
    6. 'chaine' → logprob: -10.150947570800781
    7. ' string' → logprob: -10.275947570800781
    8. '```' → logprob: -11.150947570800781
    9. ' chaîne' → logprob: -12.150947570800781
    10. '       ' → logprob: -12.525947570800781

Token 91: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015260282903909683
    2. '   ' → logprob: -4.390260219573975
    3. ' if' → logprob: -6.765260219573975
    4. '    ' → logprob: -7.265260219573975
    5. '        ' → logprob: -8.515260696411133
    6. ' s' → logprob: -9.140260696411133
    7. ',' → logprob: -9.515260696411133
    8. 's' → logprob: -9.515260696411133
    9. '      ' → logprob: -9.640260696411133
    10. 'n' → logprob: -9.765260696411133

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007488900329917669
    2. '   ' → logprob: -5.00748872756958
    3. ' =' → logprob: -9.007489204406738
    4. '    ' → logprob: -9.132489204406738
    5. ' if' → logprob: -9.382489204406738
    6. '      ' → logprob: -9.632489204406738
    7. '=' → logprob: -9.757489204406738
    8. ':' → logprob: -9.882489204406738
    9. 'count' → logprob: -10.007489204406738
    10. ',' → logprob: -10.132489204406738

Token 93: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41709867119789124
    2. 'if' (adapté à ' if') → logprob: -1.2920986413955688
    3. ' s' → logprob: -3.2920987606048584
    4. 's' → logprob: -3.9170987606048584
    5. '   ' → logprob: -4.917098522186279
    6. '       ' → logprob: -7.167098522186279
    7. 'count' → logprob: -7.417098522186279
    8. ' count' → logprob: -8.292098999023438
    9. '```' → logprob: -9.292098999023438
    10. ' ' → logprob: -9.792098999023438

Token 94: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0010344763286411762
    2. 's' → logprob: -6.876034259796143
    3. ' ' → logprob: -13.5010347366333
    4. ' ' → logprob: -16.251033782958984
    5. '(s' → logprob: -16.751033782958984
    6. '```' → logprob: -16.751033782958984
    7. '_s' → logprob: -17.751033782958984
    8. '	s' → logprob: -18.126033782958984
    9. '    ' → logprob: -18.126033782958984
    10. ' ```' → logprob: -18.501033782958984

Token 95: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.01268481183797121
    2. '.' → logprob: -4.3876848220825195
    3. '.s' → logprob: -9.51268482208252
    4. ' .' → logprob: -9.63768482208252
    5. '.c' → logprob: -10.51268482208252
    6. ').' → logprob: -12.63768482208252
    7. '.Count' → logprob: -13.51268482208252
    8. '.co' → logprob: -14.38768482208252
    9. '.startswith' → logprob: -14.63768482208252
    10. '.lower' → logprob: -14.76268482208252

Token 96: '(char' (ID: 14823)
  Prédit: '(char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(char' → logprob: -0.0005968777113594115
    2. '(' → logprob: -7.75059700012207
    3. ' (' → logprob: -8.87559700012207
    4. '(car' → logprob: -11.00059700012207
    5. '(chars' → logprob: -12.37559700012207
    6. '(chr' → logprob: -13.75059700012207
    7. ')' → logprob: -14.12559700012207
    8. '(character' → logprob: -14.25059700012207
    9. '(
' → logprob: -14.25059700012207
    10. 'char' → logprob: -14.37559700012207

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16132381558418274
    2. ' )' → logprob: -1.9113237857818604
    3. ')!=' → logprob: -7.1613240242004395
    4. ' !=' → logprob: -8.411323547363281
    5. '()' → logprob: -9.786323547363281
    6. '!=' → logprob: -10.536323547363281
    7. '())' → logprob: -12.286323547363281
    8. '()!=' → logprob: -12.536323547363281
    9. '   ' → logprob: -12.661323547363281
    10. '    ' → logprob: -13.661323547363281

Token 98: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.06021862104535103
    2. '!=' → logprob: -3.060218572616577
    3. '()!=' → logprob: -4.935218811035156
    4. ')' → logprob: -6.060218811035156
    5. ')!=' → logprob: -6.560218811035156
    6. '()' → logprob: -7.810218811035156
    7. ' ' → logprob: -9.060218811035156
    8. ' )' → logprob: -9.435218811035156
    9. ']!=' → logprob: -11.935218811035156
    10. ' ()' → logprob: -12.435218811035156

Token 99: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0017024369444698095
    2. '2' → logprob: -6.376702308654785
    3. ' ' → logprob: -15.501702308654785
    4. '```' → logprob: -20.6267032623291
    5. '<|end|>' → logprob: -21.1892032623291
    6. 's' → logprob: -21.5017032623291
    7. '1' → logprob: -21.8142032623291
    8. ')' → logprob: -21.8767032623291
    9. '20' → logprob: -21.9392032623291
    10. ' ' → logprob: -22.0017032623291

Token 100: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.061967913061380386
    2. ' ' → logprob: -2.8119678497314453
    3. '```' → logprob: -15.811967849731445
    4. '   ' → logprob: -17.624467849731445
    5. ' ' → logprob: -17.686967849731445
    6. '۲' → logprob: -17.936967849731445
    7. '  ' → logprob: -18.249467849731445
    8. '２' → logprob: -18.686967849731445
    9. '<|end|>' → logprob: -19.186967849731445
    10. '3' → logprob: -19.374467849731445

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014440136961638927
    2. ':
' → logprob: -4.264440059661865
    3. ':return' → logprob: -8.639440536499023
    4. '       ' → logprob: -9.514440536499023
    5. '           ' → logprob: -11.639440536499023
    6. ' :' → logprob: -12.014440536499023
    7. '   ' → logprob: -12.139440536499023
    8. '):' → logprob: -13.014440536499023
    9. '):
' → logprob: -14.139440536499023
    10. ':

' → logprob: -14.139440536499023

Token 102: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7045357823371887
    2. '           ' → logprob: -0.7045357823371887
    3. 'return' → logprob: -5.204535961151123
    4. ' return' → logprob: -5.329535961151123
    5. '
' → logprob: -7.954535961151123
    6. '   ' → logprob: -8.579535484313965
    7. ':' → logprob: -9.329535484313965
    8. ':return' → logprob: -9.329535484313965
    9. '               ' → logprob: -10.079535484313965
    10. '          ' → logprob: -10.204535484313965

Token 103: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8247438669204712
    2. ' return' → logprob: -1.1997438669204712
    3. 'return' → logprob: -1.8247438669204712
    4. '           ' → logprob: -2.3247437477111816
    5. '   ' → logprob: -7.449743747711182
    6. '               ' → logprob: -7.574743747711182
    7. '
' → logprob: -8.82474422454834
    8. '	return' → logprob: -10.94974422454834
    9. '        
' → logprob: -11.82474422454834
    10. ' 
' → logprob: -12.07474422454834

Token 104: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5638721585273743
    2. ' return' → logprob: -0.9388721585273743
    3. '           ' → logprob: -3.9388720989227295
    4. '       ' → logprob: -4.063872337341309
    5. '   ' → logprob: -5.813872337341309
    6. 'ret' → logprob: -9.813872337341309
    7. 'Retour' → logprob: -9.813872337341309
    8. ' retourner' → logprob: -10.063872337341309
    9. '    ' → logprob: -10.563872337341309
    10. 'Return' → logprob: -10.813872337341309

Token 105: ' un' (ID: 537)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31208500266075134
    2. ' ' → logprob: -2.687084913253784
    3. ' False' → logprob: -3.062084913253784
    4. ' ' → logprob: -3.312084913253784
    5. ' not' → logprob: -3.437084913253784
    6. ' True' → logprob: -3.562084913253784
    7. '           ' → logprob: -3.687084913253784
    8. 'False' → logprob: -4.562085151672363
    9. 'return' → logprob: -4.812085151672363
    10. '    ' → logprob: -5.687085151672363

Token 106: ' caractère' (ID: 80509)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020807310938835144
    2. 'e' → logprob: -5.145807266235352
    3. ' caract' → logprob: -5.645807266235352
    4. ' caractère' → logprob: -5.895807266235352
    5. ' espace' → logprob: -6.270807266235352
    6. ' return' → logprob: -6.770807266235352
    7. '   ' → logprob: -7.145807266235352
    8. '  ' → logprob: -7.395807266235352
    9. '           ' → logprob: -7.520807266235352
    10. ' car' → logprob: -7.645807266235352

Token 107: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.005266838241368532
    2. '           ' → logprob: -5.8802666664123535
    3. 'n' → logprob: -6.2552666664123535
    4. ' apparaît' → logprob: -8.630267143249512
    5. ' ne' → logprob: -9.130267143249512
    6. ' ' → logprob: -9.255267143249512
    7. ' return' → logprob: -9.880267143249512
    8. ' s' → logprob: -10.880267143249512
    9. ' est' → logprob: -11.505267143249512
    10. ' appara' → logprob: -11.755267143249512

Token 108: ''ap' (ID: 31362)
  Prédit: ''ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ap' → logprob: -0.5926824808120728
    2. ''appar' → logprob: -0.9676824808120728
    3. 'a' → logprob: -4.092682361602783
    4. ''a' → logprob: -4.467682361602783
    5. ''' → logprob: -4.467682361602783
    6. 'ap' → logprob: -4.717682361602783
    7. ''app' → logprob: -5.717682361602783
    8. ''est' → logprob: -5.967682361602783
    9. 'e' → logprob: -5.967682361602783
    10. 'n' → logprob: -6.342682361602783

Token 109: 'para' (ID: 16151)
  Prédit: 'para'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'para' → logprob: -0.21169988811016083
    2. 'par' → logprob: -1.8366998434066772
    3. 'pa' → logprob: -3.711699962615967
    4. 'p' → logprob: -5.836699962615967
    5. 'pp' → logprob: -6.211699962615967
    6. '
' → logprob: -6.961699962615967
    7. 'pas' → logprob: -7.461699962615967
    8. ' paraît' → logprob: -8.586699485778809
    9. 'pare' → logprob: -9.086699485778809
    10. '

' → logprob: -10.211699485778809

Token 110: 'ît' (ID: 33077)
  Prédit: 'ît'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ît' → logprob: -0.049463290721178055
    2. 'it' → logprob: -3.0494632720947266
    3. 'î' → logprob: -7.424463272094727
    4. 't' → logprob: -9.299463272094727
    5. 'ıt' → logprob: -9.424463272094727
    6. 'ït' → logprob: -9.924463272094727
    7. '
' → logprob: -10.424463272094727
    8. 'Î' → logprob: -12.424463272094727
    9. 'i' → logprob: -13.174463272094727
    10. 'ít' → logprob: -13.299463272094727

Token 111: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.4544002413749695
    2. ' ' → logprob: -1.2044003009796143
    3. 'pas' → logprob: -3.2044003009796143
    4. '<|end|>' → logprob: -4.704400062561035
    5. ' jamais' → logprob: -5.829400062561035
    6. '  ' → logprob: -6.204400062561035
    7. 'space' → logprob: -6.579400062561035
    8. ' espace' → logprob: -6.704400062561035
    9. ' True' → logprob: -7.079400062561035
    10. ' )' → logprob: -7.079400062561035

Token 112: ' exactement' (ID: 108701)
  Prédit: ' exactement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactement' → logprob: -0.7624038457870483
    2. ' ' → logprob: -1.3874038457870483
    3. ' exactly' → logprob: -2.262403964996338
    4. ' deux' → logprob: -2.762403964996338
    5. 'exact' → logprob: -3.137403964996338
    6. ' exact' → logprob: -3.137403964996338
    7. ' pas' → logprob: -3.887403964996338
    8. 'de' → logprob: -5.137403964996338
    9. '2' → logprob: -7.762403964996338
    10. ' de' → logprob: -8.13740348815918

Token 113: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.4388429820537567
    2. 'de' → logprob: -1.188843011856079
    3. ' ' → logprob: -3.688843011856079
    4. '2' → logprob: -3.688843011856079
    5. ' exactement' → logprob: -7.9388427734375
    6. 'exact' → logprob: -9.4388427734375
    7. ' two' → logprob: -9.9388427734375
    8. 'two' → logprob: -10.8138427734375
    9. ' exactly' → logprob: -11.1888427734375
    10. '   ' → logprob: -11.1888427734375

Token 114: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.22589226067066193
    2. 'fois' → logprob: -1.6008923053741455
    3. ' ' → logprob: -7.975892066955566
    4. 'fo' → logprob: -11.100892066955566
    5. ' espaces' → logprob: -11.225892066955566
    6. '  ' → logprob: -11.350892066955566
    7. ' ' → logprob: -11.350892066955566
    8. 'f' → logprob: -11.475892066955566
    9. '<|end|>' → logprob: -11.475892066955566
    10. '    
' → logprob: -11.600892066955566

Token 115: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.733206033706665
    2. '               ' → logprob: -1.358206033706665
    3. ':' → logprob: -1.483206033706665
    4. ',' → logprob: -3.733206033706665
    5. ' :' → logprob: -5.733205795288086
    6. ' return' → logprob: -5.983205795288086
    7. ':
' → logprob: -6.233205795288086
    8. 'return' → logprob: -6.858205795288086
    9. ':return' → logprob: -6.983205795288086
    10. '       ' → logprob: -7.233205795288086

Token 116: ' retourne' (ID: 178818)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6366665959358215
    2. '               ' → logprob: -1.3866665363311768
    3. ' return' → logprob: -1.6366665363311768
    4. 'return' → logprob: -3.6366665363311768
    5. ' retourner' → logprob: -11.261666297912598
    6. '       ' → logprob: -11.636666297912598
    7. '            
' → logprob: -11.761666297912598
    8. ' ' → logprob: -11.886666297912598
    9. ' retour' → logprob: -12.261666297912598
    10. ' retourne' → logprob: -12.386666297912598

Token 117: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.018151817843317986
    2. 'False' → logprob: -4.018151760101318
    3. ' True' → logprob: -13.393152236938477
    4. '   ' → logprob: -16.018152236938477
    5. '(False' → logprob: -16.893152236938477
    6. ' false' → logprob: -17.143152236938477
    7. ' ' → logprob: -17.268152236938477
    8. '=False' → logprob: -17.393152236938477
    9. ' Faux' → logprob: -17.393152236938477
    10. ' None' → logprob: -17.518152236938477

Token 118: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026374878361821175
    2. '               ' → logprob: -6.0026373863220215
    3. '
' → logprob: -9.87763786315918
    4. '       ' → logprob: -10.12763786315918
    5. 'return' → logprob: -10.25263786315918
    6. ' return' → logprob: -10.62763786315918
    7. '            
' → logprob: -12.25263786315918
    8. '          ' → logprob: -12.75263786315918
    9. '   ' → logprob: -14.37763786315918
    10. '```' → logprob: -15.00263786315918

Token 119: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.576873758807778e-05
    2. '       ' → logprob: -10.000075340270996
    3. '               ' → logprob: -11.125075340270996
    4. 'return' → logprob: -11.500075340270996
    5. ' return' → logprob: -13.000075340270996
    6. '
' → logprob: -13.750075340270996
    7. '   ' → logprob: -14.000075340270996
    8. '            
' → logprob: -14.500075340270996
    9. '          ' → logprob: -14.750075340270996
    10. '```' → logprob: -16.250076293945312

Token 120: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3164227306842804
    2. ' return' → logprob: -1.566422700881958
    3. '           ' → logprob: -2.816422700881958
    4. '               ' → logprob: -6.066422939300537
    5. '   ' → logprob: -8.691422462463379
    6. '       ' → logprob: -9.066422462463379
    7. '
' → logprob: -11.316422462463379
    8. ' ' → logprob: -11.941422462463379
    9. '	return' → logprob: -12.316422462463379
    10. '```' → logprob: -13.441422462463379

Token 121: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.06196768581867218
    2. ' False' → logprob: -2.811967611312866
    3. '(False' → logprob: -17.811967849731445
    4. 'F' → logprob: -17.936967849731445
    5. 'True' → logprob: -18.811967849731445
    6. 'Fa' → logprob: -19.561967849731445
    7. 'Fal' → logprob: -19.936967849731445
    8. '=False' → logprob: -19.936967849731445
    9. 'false' → logprob: -20.186967849731445
    10. 'Falsy' → logprob: -20.311967849731445

Token 122: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28009653091430664
    2. '
' → logprob: -1.9050965309143066
    3. '    
' → logprob: -2.4050965309143066
    4. ' 
' → logprob: -6.280096530914307
    5. '  
' → logprob: -6.655096530914307
    6. '   
' → logprob: -6.655096530914307
    7. '  ' → logprob: -8.405096054077148
    8. '\n' → logprob: -9.155096054077148
    9. ' return' → logprob: -9.405096054077148
    10. ' ' → logprob: -9.405096054077148

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010867771692574024
    2. '
' → logprob: -5.010867595672607
    3. '    
' → logprob: -5.510867595672607
    4. '  
' → logprob: -10.885868072509766
    5. ' return' → logprob: -11.010868072509766
    6. ' 
' → logprob: -11.010868072509766
    7. 'return' → logprob: -11.385868072509766
    8. '   
' → logprob: -11.635868072509766
    9. '        
' → logprob: -11.885868072509766
    10. '   ' → logprob: -12.010868072509766

Token 124: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47685399651527405
    2. 'return' → logprob: -0.9768539667129517
    3. ' return' → logprob: -6.226853847503662
    4. '    
' → logprob: -7.726853847503662
    5. '
' → logprob: -8.10185432434082
    6. ' ' → logprob: -10.47685432434082
    7. '```' → logprob: -12.35185432434082
    8. '	return' → logprob: -12.47685432434082
    9. '  
' → logprob: -12.47685432434082
    10. '  ' → logprob: -12.85185432434082

Token 125: ' Tous' (ID: 64900)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09399385750293732
    2. ' return' → logprob: -2.843993902206421
    3. '   ' → logprob: -3.468993902206421
    4. 'Retour' → logprob: -8.593994140625
    5. 'Return' → logprob: -8.843994140625
    6. '#' → logprob: -11.343994140625
    7. '    
' → logprob: -12.218994140625
    8. ' ' → logprob: -12.843994140625
    9. '  ' → logprob: -12.843994140625
    10. 'eturn' → logprob: -13.093994140625

Token 126: ' les' (ID: 1341)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.2109382003545761
    2. ' les' → logprob: -2.0859382152557373
    3. 'les' → logprob: -3.7109382152557373
    4. 'car' → logprob: -4.210937976837158
    5. ' caracteres' → logprob: -4.335937976837158
    6. '   ' → logprob: -5.210937976837158
    7. ' characters' → logprob: -5.835937976837158
    8. ' car' → logprob: -6.335937976837158
    9. ' caract' → logprob: -7.210937976837158
    10. 'characters' → logprob: -7.335937976837158

Token 127: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.3138915002346039
    2. 'car' → logprob: -1.3138915300369263
    3. 'char' → logprob: -8.813891410827637
    4. 'characters' → logprob: -9.063891410827637
    5. '#' → logprob: -9.313891410827637
    6. 'chars' → logprob: -9.688891410827637
    7. ' caracteres' → logprob: -9.813891410827637
    8. ' car' → logprob: -9.813891410827637
    9. 'c' → logprob: -10.813891410827637
    10. ' caractère' → logprob: -10.813891410827637

Token 128: ' appara' (ID: 52982)
  Prédit: ' appara'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appara' → logprob: -0.0855453610420227
    2. 'ap' → logprob: -3.460545301437378
    3. ' ont' → logprob: -3.710545301437378
    4. 'ont' → logprob: -4.085545539855957
    5. ' sont' → logprob: -5.960545539855957
    6. 's' → logprob: -6.085545539855957
    7. '   ' → logprob: -6.085545539855957
    8. 'appar' → logprob: -7.585545539855957
    9. ' semblent' → logprob: -7.710545539855957
    10. 'appear' → logprob: -7.960545539855957

Token 129: 'issent' (ID: 31556)
  Prédit: 'issent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issent' → logprob: -0.18434549868106842
    2. 'nt' → logprob: -1.9343454837799072
    3. 'ss' → logprob: -4.059345722198486
    4. 't' → logprob: -6.059345722198486
    5. 'î' → logprob: -6.309345722198486
    6. 'ît' → logprob: -6.684345722198486
    7. 'ent' → logprob: -7.934345722198486
    8. 'iss' → logprob: -8.434345245361328
    9. 'tent' → logprob: -10.059345245361328
    10. 'ment' → logprob: -10.184345245361328

Token 130: ' exactement' (ID: 108701)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exact' → logprob: -0.37050580978393555
    2. ' exactement' → logprob: -1.2455058097839355
    3. ' deux' → logprob: -4.4955058097839355
    4. ' exactly' → logprob: -5.2455058097839355
    5. ' exact' → logprob: -5.6205058097839355
    6. 'de' → logprob: -7.1205058097839355
    7. ' True' → logprob: -7.6205058097839355
    8. ' ' → logprob: -8.620506286621094
    9. '2' → logprob: -9.745506286621094
    10. '_exact' → logprob: -9.995506286621094

Token 131: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4746760129928589
    2. ' deux' → logprob: -0.9746760129928589
    3. ' ' → logprob: -8.599676132202148
    4. '2' → logprob: -8.849676132202148
    5. 'two' → logprob: -8.849676132202148
    6. ' two' → logprob: -9.099676132202148
    7. ' ' → logprob: -12.474676132202148
    8. 'tw' → logprob: -13.349676132202148
    9. '   ' → logprob: -13.599676132202148
    10. '  ' → logprob: -13.599676132202148

Token 132: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.14410223066806793
    2. ' fois' → logprob: -2.0191023349761963
    3. 'fo' → logprob: -6.644102096557617
    4. '   ' → logprob: -9.894102096557617
    5. ' ' → logprob: -10.019102096557617
    6. 'f' → logprob: -11.144102096557617
    7. ' ' → logprob: -12.644102096557617
    8. '  ' → logprob: -12.769102096557617
    9. '    
' → logprob: -13.269102096557617
    10. 'times' → logprob: -13.394102096557617

Token 133: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004320996522437781
    2. '    
' → logprob: -8.500432014465332
    3. ' return' → logprob: -9.000432014465332
    4. '
' → logprob: -9.875432014465332
    5. 'return' → logprob: -10.000432014465332
    6. '   
' → logprob: -13.500432014465332
    7. ' 
' → logprob: -13.875432014465332
    8. '  
' → logprob: -14.000432014465332
    9. '   ' → logprob: -14.000432014465332
    10. '	return' → logprob: -14.125432014465332

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009431460639461875
    2. 'return' → logprob: -7.000943183898926
    3. ' return' → logprob: -10.375943183898926
    4. '    
' → logprob: -15.125943183898926
    5. '	return' → logprob: -16.37594223022461
    6. '
' → logprob: -16.75094223022461
    7. '   ' → logprob: -17.12594223022461
    8. '       ' → logprob: -17.62594223022461
    9. '  ' → logprob: -17.75094223022461
    10. ':return' → logprob: -18.62594223022461

Token 135: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08596780151128769
    2. '   ' → logprob: -2.585967779159546
    3. ' return' → logprob: -4.960968017578125
    4. '	return' → logprob: -10.210968017578125
    5. '  ' → logprob: -12.335968017578125
    6. ' ' → logprob: -12.960968017578125
    7. 'eturn' → logprob: -14.335968017578125
    8. '
' → logprob: -14.460968017578125
    9. 'ret' → logprob: -14.585968017578125
    10. '    
' → logprob: -14.710968017578125

Token 136: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3132616877555847
    2. ' True' → logprob: -1.3132617473602295
    3. 'False' → logprob: -18.938261032104492
    4. '(True' → logprob: -19.563261032104492
    5. ' Tru' → logprob: -20.438261032104492
    6. ' ' → logprob: -20.438261032104492
    7. '=True' → logprob: -20.813261032104492
    8. 'true' → logprob: -21.063261032104492
    9. ' ' → logprob: -21.438261032104492
    10. 'Tr' → logprob: -21.688261032104492

Token 137: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.33883264660835266
    2. '
' → logprob: -1.7138326168060303
    3. '<|end|>' → logprob: -2.7138326168060303
    4. '\n' → logprob: -4.088832855224609
    5. '```' → logprob: -4.963832855224609
    6. '[' → logprob: -5.963832855224609
    7. 'a' → logprob: -5.963832855224609
    8. '(' → logprob: -6.463832855224609
    9. ' ' → logprob: -6.588832855224609
    10. 'n' → logprob: -6.713832855224609

Token 139: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0385105200111866
    2. ' check' → logprob: -3.53851056098938
    3. ' is' → logprob: -5.288510322570801
    4. ' palindrome' → logprob: -6.538510322570801
    5. ' reverse' → logprob: -6.788510322570801
    6. ' test' → logprob: -8.2885103225708
    7. 'main' → logprob: -8.4135103225708
    8. ' process' → logprob: -8.9135103225708
    9. ' count' → logprob: -9.6635103225708
    10. ' pal' → logprob: -9.7885103225708

Token 140: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10680180042982101
    2. '(' → logprob: -2.356801748275757
    3. '_' → logprob: -5.106801986694336
    4. '()' → logprob: -8.481801986694336
    5. ':' → logprob: -9.231801986694336
    6. '_:' → logprob: -10.106801986694336
    7. ' ():' → logprob: -10.231801986694336
    8. ' (' → logprob: -11.106801986694336
    9. '_(' → logprob: -11.231801986694336
    10. '(_' → logprob: -11.356801986694336

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011422793380916119
    2. ' ' → logprob: -5.511422634124756
    3. '    ' → logprob: -6.136422634124756
    4. ' input' → logprob: -6.261422634124756
    5. ' s' → logprob: -7.011422634124756
    6. ' import' → logprob: -7.886422634124756
    7. 's' → logprob: -8.011423110961914
    8. '    
' → logprob: -8.511423110961914
    9. ' 
' → logprob: -8.636423110961914
    10. '  ' → logprob: -8.761423110961914

Token 142: ' """
' (ID: 7037)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.599134087562561
    2. ' input' → logprob: -1.599134087562561
    3. '   ' → logprob: -2.7241339683532715
    4. ' s' → logprob: -2.7241339683532715
    5. ' if' → logprob: -3.3491339683532715
    6. 's' → logprob: -3.7241339683532715
    7. ' test' → logprob: -4.2241339683532715
    8. ' user' → logprob: -4.7241339683532715
    9. 'import' → logprob: -4.7241339683532715
    10. ' n' → logprob: -5.0991339683532715

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.762500524520874
    2. ' s' → logprob: -1.012500524520874
    3. 's' → logprob: -2.137500524520874
    4. ' input' → logprob: -4.762500762939453
    5. ' test' → logprob: -5.012500762939453
    6. ' import' → logprob: -5.137500762939453
    7. ' user' → logprob: -5.137500762939453
    8. '    ' → logprob: -5.387500762939453
    9. ' ' → logprob: -5.762500762939453
    10. 'import' → logprob: -6.012500762939453

Token 144: ' Point' (ID: 9971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6196854710578918
    2. '#' → logprob: -2.619685411453247
    3. ' s' → logprob: -2.744685411453247
    4. 's' → logprob: -2.744685411453247
    5. ' test' → logprob: -2.744685411453247
    6. 'user' → logprob: -3.119685411453247
    7. ' user' → logprob: -3.369685411453247
    8. 'test' → logprob: -3.744685411453247
    9. 'print' → logprob: -4.744685649871826
    10. 'if' → logprob: -4.994685649871826

Token 145: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.004971289541572332
    2. 'd' → logprob: -5.629971504211426
    3. ' de' → logprob: -6.754971504211426
    4. '_d' → logprob: -9.629971504211426
    5. ' ' → logprob: -9.879971504211426
    6. '<|end|>' → logprob: -10.754971504211426
    7. '  ' → logprob: -11.254971504211426
    8. '   ' → logprob: -11.379971504211426
    9. '_' → logprob: -11.754971504211426
    10. 'de' → logprob: -12.129971504211426

Token 146: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.16204798221588135
    2. ''entrée' → logprob: -1.9120479822158813
    3. 'entr' → logprob: -6.412047863006592
    4. '’entrée' → logprob: -9.28704833984375
    5. ' entrée' → logprob: -10.78704833984375
    6. 'entry' → logprob: -10.91204833984375
    7. '_' → logprob: -11.16204833984375
    8. 'ent' → logprob: -11.28704833984375
    9. 'entrant' → logprob: -11.66204833984375
    10. 'entra' → logprob: -12.66204833984375

Token 147: ' principal' (ID: 10589)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.781571090221405
    2. ' de' → logprob: -0.906571090221405
    3. '   ' → logprob: -2.15657114982605
    4. 'de' → logprob: -5.031570911407471
    5. ' d' → logprob: -5.781570911407471
    6. 'def' → logprob: -6.156570911407471
    7. 'du' → logprob: -6.281570911407471
    8. ':' → logprob: -6.406570911407471
    9. ' ' → logprob: -6.531570911407471
    10. '()' → logprob: -6.531570911407471

Token 148: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08421023190021515
    2. ' du' → logprob: -3.459210157394409
    3. ' de' → logprob: -4.084210395812988
    4. ':' → logprob: -4.084210395812988
    5. ' :' → logprob: -5.709210395812988
    6. 'de' → logprob: -5.834210395812988
    7. '()' → logprob: -5.959210395812988
    8. '():' → logprob: -6.584210395812988
    9. 'def' → logprob: -6.834210395812988
    10. '    ' → logprob: -7.084210395812988

Token 149: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.40583574771881104
    2. ' programme' → logprob: -1.155835747718811
    3. 'program' → logprob: -4.9058356285095215
    4. ' script' → logprob: -5.1558356285095215
    5. 'script' → logprob: -5.2808356285095215
    6. ' program' → logprob: -7.6558356285095215
    7. 'code' → logprob: -11.15583610534668
    8. 'programma' → logprob: -11.28083610534668
    9. ' code' → logprob: -11.65583610534668
    10. 'programm' → logprob: -12.03083610534668

Token 150: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008425564505159855
    2. ':' → logprob: -5.508425712585449
    3. '    
' → logprob: -6.258425712585449
    4. '():' → logprob: -7.633425712585449
    5. ' :' → logprob: -7.633425712585449
    6. '):' → logprob: -7.758425712585449
    7. '
' → logprob: -8.25842571258545
    8. ')' → logprob: -8.38342571258545
    9. '```' → logprob: -9.00842571258545
    10. '.' → logprob: -9.50842571258545

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00075459701474756
    2. '    
' → logprob: -7.6257548332214355
    3. '    ' → logprob: -8.375754356384277
    4. ' 
' → logprob: -12.250754356384277
    5. '  ' → logprob: -12.375754356384277
    6. ')' → logprob: -12.500754356384277
    7. '   
' → logprob: -12.750754356384277
    8. '   ' → logprob: -12.875754356384277
    9. '```' → logprob: -13.125754356384277
    10. '
' → logprob: -13.250754356384277

Token 152: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010194806382060051
    2. ' import' → logprob: -6.385194778442383
    3. ' input' → logprob: -6.510194778442383
    4. ' s' → logprob: -6.635194778442383
    5. 's' → logprob: -6.885194778442383
    6. ' user' → logprob: -7.010194778442383
    7. ' try' → logprob: -7.510194778442383
    8. '    
' → logprob: -7.760194778442383
    9. 'import' → logprob: -7.885194778442383
    10. 'n' → logprob: -7.885194778442383

Token 153: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.27105697989463806
    2. ' une' → logprob: -2.646056890487671
    3. ' la' → logprob: -2.771056890487671
    4. ' l' → logprob: -3.271056890487671
    5. ' ' → logprob: -3.896056890487671
    6. ' les' → logprob: -4.52105712890625
    7. '   ' → logprob: -4.64605712890625
    8. ' un' → logprob: -4.77105712890625
    9. ' le' → logprob: -4.77105712890625
    10. '  ' → logprob: -6.89605712890625

Token 154: ' chaîne' (ID: 89288)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.7694030404090881
    2. ' chaîne' → logprob: -0.8944030404090881
    3. ' ' → logprob: -2.5194029808044434
    4. 'ligne' → logprob: -3.5194029808044434
    5. 'chaine' → logprob: -5.144402980804443
    6. ' chaine' → logprob: -5.269402980804443
    7. '   ' → logprob: -6.269402980804443
    8. 'cha' → logprob: -6.519402980804443
    9. 'l' → logprob: -7.019402980804443
    10. 'entrée' → logprob: -7.519402980804443

Token 155: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.064264677464962
    2. ' de' → logprob: -3.8142647743225098
    3. '   ' → logprob: -4.31426477432251
    4. ' d' → logprob: -4.93926477432251
    5. ' ' → logprob: -5.68926477432251
    6. 'from' → logprob: -5.93926477432251
    7. 'de' → logprob: -6.06426477432251
    8. 'input' → logprob: -6.18926477432251
    9. '(stdin' → logprob: -6.68926477432251
    10. 'import' → logprob: -6.93926477432251

Token 156: ' caractères' (ID: 183106)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4321242570877075
    2. 'car' → logprob: -1.4321242570877075
    3. 'entrée' → logprob: -1.5571242570877075
    4. 'stdin' → logprob: -2.557124137878418
    5. ' caractères' → logprob: -2.932124137878418
    6. 'sys' → logprob: -3.182124137878418
    7. 'input' → logprob: -3.307124137878418
    8. 'la' → logprob: -3.682124137878418
    9. 'ligne' → logprob: -4.057124137878418
    10. 'texte' → logprob: -4.807124137878418

Token 157: ' depuis' (ID: 16277)
  Prédit: ' depuis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' depuis' → logprob: -0.7111368179321289
    2. 'dep' → logprob: -1.711136817932129
    3. '   ' → logprob: -1.961136817932129
    4. ' à' → logprob: -2.586136817932129
    5. ' de' → logprob: -3.086136817932129
    6. 'de' → logprob: -3.961136817932129
    7. 'from' → logprob: -4.586136817932129
    8. ' en' → logprob: -4.836136817932129
    9. ',' → logprob: -5.211136817932129
    10. ' from' → logprob: -5.711136817932129

Token 158: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4540337920188904
    2. 'l' → logprob: -1.2040338516235352
    3. ' la' → logprob: -4.079033851623535
    4. ' ' → logprob: -4.329033851623535
    5. ' stdin' → logprob: -4.329033851623535
    6. ' standard' → logprob: -5.079033851623535
    7. ' input' → logprob: -5.454033851623535
    8. ' les' → logprob: -6.329033851623535
    9. 'la' → logprob: -6.454033851623535
    10. 'standard' → logprob: -6.704033851623535

Token 159: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.03479468822479248
    2. ''' → logprob: -4.284794807434082
    3. 'entrée' → logprob: -4.909794807434082
    4. 'a' → logprob: -5.159794807434082
    5. 'input' → logprob: -5.909794807434082
    6. 'stdin' → logprob: -6.284794807434082
    7. 'e' → logprob: -6.659794807434082
    8. 'es' → logprob: -8.284794807434082
    9. 'sys' → logprob: -8.409794807434082
    10. '’entrée' → logprob: -8.534794807434082

Token 160: ' utilisateur' (ID: 115595)
  Prédit: ' standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.01828022487461567
    2. 'standard' → logprob: -4.018280029296875
    3. ' utilisateur' → logprob: -9.893280029296875
    4. ' stdin' → logprob: -10.768280029296875
    5. 'Standard' → logprob: -10.893280029296875
    6. 'stdin' → logprob: -11.768280029296875
    7. '   ' → logprob: -12.018280029296875
    8. '_standard' → logprob: -12.143280029296875
    9. ' standart' → logprob: -12.518280029296875
    10. ' standar' → logprob: -13.268280029296875

Token 161: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01874445006251335
    2. ',' → logprob: -4.018744468688965
    3. '.' → logprob: -8.393744468688965
    4. '    
' → logprob: -8.518744468688965
    5. ':' → logprob: -9.768744468688965
    6. ' ,' → logprob: -10.018744468688965
    7. ',
' → logprob: -11.143744468688965
    8. '    ' → logprob: -12.268744468688965
    9. '   ' → logprob: -12.393744468688965
    10. ' :' → logprob: -12.518744468688965

Token 162: ' affiche' (ID: 127479)
  Prédit: ' vér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vér' → logprob: -0.02364478074014187
    2. ' appelle' → logprob: -4.648644924163818
    3. ' vérifier' → logprob: -5.023644924163818
    4. '   ' → logprob: -5.898644924163818
    5. ' check' → logprob: -7.023644924163818
    6. 'v' → logprob: -7.148644924163818
    7. ' la' → logprob: -7.648644924163818
    8. ' verifies' → logprob: -7.898644924163818
    9. ' v' → logprob: -8.52364444732666
    10. ' affiche' → logprob: -8.89864444732666

Token 163: ' "' (ID: 392)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11130320280790329
    2. '("' → logprob: -2.4863030910491943
    3. '()' → logprob: -4.611303329467773
    4. '('' → logprob: -5.736303329467773
    5. '(True' → logprob: -5.861303329467773
    6. '(
' → logprob: -5.986303329467773
    7. '("""' → logprob: -6.986303329467773
    8. ' la' → logprob: -7.236303329467773
    9. ' ' → logprob: -7.486303329467773
    10. '("")' → logprob: -8.236303329467773

Token 164: 'Yes' (ID: 13022)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3054080307483673
    2. ' True' → logprob: -2.180408000946045
    3. 'OK' → logprob: -3.180408000946045
    4. 'Oui' → logprob: -3.180408000946045
    5. '"' → logprob: -3.680408000946045
    6. 'O' → logprob: -4.430408000946045
    7. 'Yes' → logprob: -4.680408000946045
    8. 'Valid' → logprob: -5.930408000946045
    9. ' O' → logprob: -5.930408000946045
    10. 'YES' → logprob: -6.055408000946045

Token 165: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0003606104583013803
    2. ',' → logprob: -8.875360488891602
    3. ' ou' → logprob: -9.375360488891602
    4. '   ' → logprob: -9.750360488891602
    5. '```' → logprob: -10.250360488891602
    6. ' or' → logprob: -10.875360488891602
    7. '"""' → logprob: -12.125360488891602
    8. '",' → logprob: -12.375360488891602
    9. '")' → logprob: -13.250360488891602
    10. 'or' → logprob: -13.375360488891602

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027870500925928354
    2. ' if' → logprob: -7.002787113189697
    3. ' si' → logprob: -7.377787113189697
    4. '"' → logprob: -7.627787113189697
    5. ',' → logprob: -7.752787113189697
    6. 'if' → logprob: -9.502786636352539
    7. '```' → logprob: -9.627786636352539
    8. ' ou' → logprob: -10.002786636352539
    9. ' ' → logprob: -10.377786636352539
    10. '  ' → logprob: -10.502786636352539

Token 167: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0829520896077156
    2. ' si' → logprob: -2.9579520225524902
    3. ' if' → logprob: -3.8329520225524902
    4. ',' → logprob: -6.45795202255249
    5. '"' → logprob: -6.70795202255249
    6. ' ' → logprob: -7.08295202255249
    7. 'if' → logprob: -7.33295202255249
    8. ' s' → logprob: -7.83295202255249
    9. '  ' → logprob: -7.95795202255249
    10. ' ou' → logprob: -8.082952499389648

Token 168: ' chaque' (ID: 21194)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.02295694127678871
    2. 'check' → logprob: -4.522956848144531
    3. ' chaque' → logprob: -4.897956848144531
    4. ' ' → logprob: -5.647956848144531
    5. ' la' → logprob: -8.147956848144531
    6. ' each' → logprob: -8.772956848144531
    7. '(check' → logprob: -8.772956848144531
    8. ' ' → logprob: -10.022956848144531
    9. ' l' → logprob: -10.272956848144531
    10. 'each' → logprob: -10.397956848144531

Token 169: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.08683967590332031
    2. ' ' → logprob: -3.0868396759033203
    3. ' caract' → logprob: -3.5868396759033203
    4. 'car' → logprob: -5.33683967590332
    5. ' character' → logprob: -6.08683967590332
    6. ' char' → logprob: -6.71183967590332
    7. ' car' → logprob: -7.46183967590332
    8. 'char' → logprob: -7.58683967590332
    9. ' ' → logprob: -8.83683967590332
    10. ' caractères' → logprob: -9.21183967590332

Token 170: ' apparaît' (ID: 147656)
  Prédit: ' apparaît'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apparaît' → logprob: -0.6651882529258728
    2. ' ' → logprob: -2.2901883125305176
    3. 'appe' → logprob: -2.2901883125305176
    4. '<|end|>' → logprob: -2.5401883125305176
    5. ' appara' → logprob: -2.6651883125305176
    6. '   ' → logprob: -3.0401883125305176
    7. ' appears' → logprob: -3.1651883125305176
    8. ' de' → logprob: -4.040188312530518
    9. '  ' → logprob: -5.290188312530518
    10. 'appear' → logprob: -5.665188312530518

Token 171: ' exactement' (ID: 108701)
  Prédit: ' exactement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactement' → logprob: -0.16413648426532745
    2. ' ' → logprob: -2.1641364097595215
    3. ' exactly' → logprob: -3.9141364097595215
    4. 'exact' → logprob: -4.7891364097595215
    5. ' deux' → logprob: -5.0391364097595215
    6. ' exact' → logprob: -7.1641364097595215
    7. '_exact' → logprob: -8.28913688659668
    8. ' au' → logprob: -8.53913688659668
    9. ' ' → logprob: -9.03913688659668
    10. '   ' → logprob: -9.16413688659668

Token 172: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.006678186822682619
    2. ' ' → logprob: -5.756678104400635
    3. ' two' → logprob: -5.756678104400635
    4. 'de' → logprob: -8.131678581237793
    5. 'two' → logprob: -11.131678581237793
    6. ' ' → logprob: -12.006678581237793
    7. ' de' → logprob: -12.006678581237793
    8. ' dois' → logprob: -13.256678581237793
    9. '2' → logprob: -13.381678581237793
    10. ' zwei' → logprob: -13.756678581237793

Token 173: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.25261038541793823
    2. 'fois' → logprob: -1.502610445022583
    3. ' ' → logprob: -7.752610206604004
    4. 'fo' → logprob: -9.002610206604004
    5. ' ' → logprob: -10.377610206604004
    6. 'times' → logprob: -10.377610206604004
    7. ' times' → logprob: -10.502610206604004
    8. ' f' → logprob: -11.252610206604004
    9. 'f' → logprob: -11.627610206604004
    10. ' veces' → logprob: -12.377610206604004

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031133070588111877
    2. '   ' → logprob: -6.253113269805908
    3. '.' → logprob: -6.878113269805908
    4. ' ,' → logprob: -9.128113746643066
    5. '"' → logprob: -11.253113746643066
    6. '",' → logprob: -11.378113746643066
    7. ';' → logprob: -12.378113746643066
    8. ',
' → logprob: -12.378113746643066
    9. 'def' → logprob: -12.878113746643066
    10. ' dans' → logprob: -13.378113746643066

Token 175: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15547338128089905
    2. '"' → logprob: -2.280473470687866
    3. ' sinon' → logprob: -3.405473470687866
    4. 'et' → logprob: -5.655473232269287
    5. ' et' → logprob: -5.905473232269287
    6. 'sin' → logprob: -7.655473232269287
    7. '"\' → logprob: -7.780473232269287
    8. 'else' → logprob: -8.655473709106445
    9. '    
' → logprob: -9.030473709106445
    10. ' "' → logprob: -9.030473709106445

Token 176: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.12068808823823929
    2. ' No' → logprob: -2.2456881999969482
    3. 'Non' → logprob: -5.370687961578369
    4. '"' → logprob: -6.370687961578369
    5. '"No' → logprob: -6.870687961578369
    6. ' ' → logprob: -8.870688438415527
    7. ' Non' → logprob: -8.995688438415527
    8. '   ' → logprob: -9.495688438415527
    9. ' "' → logprob: -10.870688438415527
    10. 'False' → logprob: -11.245688438415527

Token 177: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -3.070975071750581e-05
    2. '```' → logprob: -10.875030517578125
    3. 'else' → logprob: -12.875030517578125
    4. 'otherwise' → logprob: -12.875030517578125
    5. '   ' → logprob: -13.125030517578125
    6. '"""' → logprob: -13.750030517578125
    7. 'Otherwise' → logprob: -14.000030517578125
    8. ' otherwise' → logprob: -14.125030517578125
    9. '"
' → logprob: -14.750030517578125
    10. ' sinon' → logprob: -15.250030517578125

Token 178: ' sinon' (ID: 52915)
  Prédit: ' sinon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sinon' → logprob: -0.0945153534412384
    2. '   ' → logprob: -2.844515323638916
    3. ' autrement' → logprob: -4.094515323638916
    4. ' otherwise' → logprob: -4.219515323638916
    5. 'otherwise' → logprob: -8.719515800476074
    6. ' else' → logprob: -8.969515800476074
    7. '```' → logprob: -9.344515800476074
    8. ' dans' → logprob: -9.594515800476074
    9. ' ' → logprob: -10.594515800476074
    10. 'else' → logprob: -10.719515800476074

Token 179: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017498735338449478
    2. ':' → logprob: -5.142498970031738
    3. '
' → logprob: -5.142498970031738
    4. '    
' → logprob: -6.017498970031738
    5. '.' → logprob: -6.142498970031738
    6. '```' → logprob: -7.767498970031738
    7. '  
' → logprob: -9.142498970031738
    8. 'def' → logprob: -9.142498970031738
    9. '<|end|>' → logprob: -9.142498970031738
    10. ',' → logprob: -9.392498970031738

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0406293161213398
    2. '
' → logprob: -3.5406293869018555
    3. '    
' → logprob: -4.5406293869018555
    4. '  
' → logprob: -9.915629386901855
    5. '   
' → logprob: -10.415629386901855
    6. '```' → logprob: -10.540629386901855
    7. '\n' → logprob: -11.040629386901855
    8. ' 
' → logprob: -11.790629386901855
    9. '' → logprob: -12.540629386901855
    10. '\' → logprob: -12.540629386901855

Token 181: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008931978605687618
    2. '    
' → logprob: -5.008932113647461
    3. '
' → logprob: -6.133932113647461
    4. 's' → logprob: -11.383932113647461
    5. '   
' → logprob: -11.383932113647461
    6. '```' → logprob: -11.508932113647461
    7. '  
' → logprob: -12.008932113647461
    8. ' 
' → logprob: -13.633932113647461
    9. 'input' → logprob: -14.133932113647461
    10. '    
    
' → logprob: -14.383932113647461

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010991342132911086
    2. 's' → logprob: -6.876099109649658
    3. 'input' → logprob: -10.126099586486816
    4. ' s' → logprob: -11.251099586486816
    5. 'import' → logprob: -12.251099586486816
    6. 'try' → logprob: -13.126099586486816
    7. '    
' → logprob: -13.251099586486816
    8. 'user' → logprob: -13.626099586486816
    9. 'text' → logprob: -13.876099586486816
    10. 'line' → logprob: -14.626099586486816

Token 183: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6557685732841492
    2. 'input' → logprob: -0.9057685732841492
    3. 'user' → logprob: -3.155768632888794
    4. '   ' → logprob: -3.905768632888794
    5. ' input' → logprob: -5.405768394470215
    6. ' s' → logprob: -5.655768394470215
    7. 'try' → logprob: -6.405768394470215
    8. 'text' → logprob: -6.530768394470215
    9. ' user' → logprob: -6.780768394470215
    10. 'import' → logprob: -7.405768394470215

Token 184: ' Lit' (ID: 45595)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38681936264038086
    2. 's' → logprob: -1.8868193626403809
    3. ' input' → logprob: -2.886819362640381
    4. 'user' → logprob: -3.011819362640381
    5. ' s' → logprob: -3.636819362640381
    6. 'string' → logprob: -4.011819362640381
    7. ' user' → logprob: -4.761819362640381
    8. 'line' → logprob: -5.886819362640381
    9. 'text' → logprob: -6.261819362640381
    10. 'chaine' → logprob: -6.386819362640381

Token 185: ' la' (ID: 557)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.23941349983215332
    2. 'input' → logprob: -2.6144134998321533
    3. ' s' → logprob: -3.1144134998321533
    4. ' user' → logprob: -3.2394134998321533
    5. '   ' → logprob: -4.114413261413574
    6. ' line' → logprob: -4.489413261413574
    7. ' ' → logprob: -4.739413261413574
    8. ' une' → logprob: -5.364413261413574
    9. 'user' → logprob: -5.739413261413574
    10. ' sys' → logprob: -5.739413261413574

Token 186: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.5450893640518188
    2. 'input' → logprob: -1.5450893640518188
    3. ' input' → logprob: -2.6700892448425293
    4. ' chaîne' → logprob: -3.0450892448425293
    5. 'string' → logprob: -3.2950892448425293
    6. 's' → logprob: -4.170089244842529
    7. ' chaine' → logprob: -4.545089244842529
    8. ' string' → logprob: -4.920089244842529
    9. 'cha' → logprob: -5.170089244842529
    10. 'user' → logprob: -5.795089244842529

Token 187: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13116051256656647
    2. ' =' → logprob: -3.1311604976654053
    3. 'user' → logprob: -4.006160736083984
    4. 'input' → logprob: -4.256160736083984
    5. ' user' → logprob: -4.506160736083984
    6. 's' → logprob: -4.881160736083984
    7. ' input' → logprob: -5.006160736083984
    8. ' s' → logprob: -5.131160736083984
    9. 'chaine' → logprob: -5.756160736083984
    10. ' d' → logprob: -6.256160736083984

Token 188: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.004186317324638367
    2. ' caractères' → logprob: -6.004186153411865
    3. 'entrée' → logprob: -7.004186153411865
    4. 'l' → logprob: -8.004186630249023
    5. 'input' → logprob: -8.129186630249023
    6. 'user' → logprob: -9.754186630249023
    7. 'texte' → logprob: -10.254186630249023
    8. ' l' → logprob: -11.754186630249023
    9. 'import' → logprob: -12.004186630249023
    10. 's' → logprob: -12.129186630249023

Token 189: ' depuis' (ID: 16277)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6122950315475464
    2. '   ' → logprob: -1.7372950315475464
    3. 'input' → logprob: -1.8622950315475464
    4. 'user' → logprob: -2.237295150756836
    5. ' s' → logprob: -4.737295150756836
    6. ' input' → logprob: -5.487295150756836
    7. ' user' → logprob: -6.112295150756836
    8. 'chaine' → logprob: -6.112295150756836
    9. 'line' → logprob: -7.237295150756836
    10. 'string' → logprob: -7.612295150756836

Token 190: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20419371128082275
    2. 'input' → logprob: -1.9541937112808228
    3. ' l' → logprob: -3.579193592071533
    4. ' sys' → logprob: -4.829193592071533
    5. 'l' → logprob: -5.829193592071533
    6. ' ' → logprob: -6.204193592071533
    7. 'sys' → logprob: -6.704193592071533
    8. ' la' → logprob: -8.454194068908691
    9. ' ' → logprob: -8.829194068908691
    10. ' stdin' → logprob: -9.079194068908691

Token 191: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.04626533016562462
    2. 'entrée' → logprob: -3.1712653636932373
    3. 'input' → logprob: -6.546265125274658
    4. ''' → logprob: -6.796265125274658
    5. ''utilisateur' → logprob: -7.796265125274658
    6. '’entrée' → logprob: -9.671265602111816
    7. 'stdin' → logprob: -10.046265602111816
    8. 'e' → logprob: -10.171265602111816
    9. ''ent' → logprob: -10.296265602111816
    10. 'entr' → logprob: -10.421265602111816

Token 192: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25290340185165405
    2. 'user' → logprob: -1.7529034614562988
    3. 's' → logprob: -3.752903461456299
    4. '   ' → logprob: -4.252903461456299
    5. 'util' → logprob: -5.627903461456299
    6. 'string' → logprob: -6.127903461456299
    7. ' utilisateur' → logprob: -6.252903461456299
    8. ' =' → logprob: -6.752903461456299
    9. 'chaine' → logprob: -7.502903461456299
    10. ' user' → logprob: -7.627903461456299

Token 193: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06251587718725204
    2. 's' → logprob: -3.3125159740448
    3. ' s' → logprob: -4.437515735626221
    4. 'input' → logprob: -4.562515735626221
    5. ' input' → logprob: -6.687515735626221
    6. 'line' → logprob: -8.687516212463379
    7. 'string' → logprob: -8.937516212463379
    8. ' line' → logprob: -9.062516212463379
    9. 'user' → logprob: -9.062516212463379
    10. '    
' → logprob: -9.812516212463379

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16369754076004028
    2. ' s' → logprob: -2.4136974811553955
    3. 's' → logprob: -3.0386974811553955
    4. 'input' → logprob: -4.913697719573975
    5. ' input' → logprob: -5.413697719573975
    6. ' line' → logprob: -7.663697719573975
    7. 'string' → logprob: -7.788697719573975
    8. ' string' → logprob: -8.163697242736816
    9. 'user' → logprob: -8.663697242736816
    10. ' user' → logprob: -8.788697242736816

Token 195: ' input' (ID: 3422)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4625771939754486
    2. 'input' (adapté à ' input') → logprob: -1.337577223777771
    3. ' s' → logprob: -3.2125771045684814
    4. ' input' → logprob: -3.4625771045684814
    5. 'user' → logprob: -3.5875771045684814
    6. ' user' → logprob: -5.5875773429870605
    7. '   ' → logprob: -6.0875773429870605
    8. 'string' → logprob: -6.9625773429870605
    9. 'line' → logprob: -7.0875773429870605
    10. 'text' → logprob: -7.8375773429870605

Token 196: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.4513280987739563
    2. '_string' → logprob: -1.2013280391693115
    3. '_' → logprob: -3.3263280391693115
    4. '_line' → logprob: -3.8263280391693115
    5. '_text' → logprob: -6.076328277587891
    6. '()' → logprob: -7.076328277587891
    7. '_s' → logprob: -7.451328277587891
    8. 's' → logprob: -8.07632827758789
    9. '_data' → logprob: -8.32632827758789
    10. '_user' → logprob: -9.07632827758789

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740890562534332
    2. '=' → logprob: -0.9740890264511108
    3. '()' → logprob: -11.724088668823242
    4. ' ' → logprob: -13.974088668823242
    5. '_' → logprob: -14.474088668823242
    6. '	' → logprob: -14.474088668823242
    7. ' ' → logprob: -14.599088668823242
    8. '(' → logprob: -14.599088668823242
    9. ')' → logprob: -14.849088668823242
    10. '   ' → logprob: -15.224088668823242

Token 198: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8855459690093994
    2. 'sys' → logprob: -0.8855459690093994
    3. ' sys' → logprob: -1.8855459690093994
    4. ' input' → logprob: -3.7605459690093994
    5. '   ' → logprob: -13.63554573059082
    6. '(sys' → logprob: -13.63554573059082
    7. '=sys' → logprob: -13.76054573059082
    8. '	sys' → logprob: -14.76054573059082
    9. 's' → logprob: -14.88554573059082
    10. 'stdin' → logprob: -16.38554573059082

Token 199: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00014060820103622973
    2. '(' → logprob: -9.375140190124512
    3. '().' → logprob: -10.625140190124512
    4. '("")' → logprob: -11.500140190124512
    5. ' ()' → logprob: -11.625140190124512
    6. '("' → logprob: -11.875140190124512
    7. '()
' → logprob: -13.750140190124512
    8. '())' → logprob: -13.875140190124512
    9. '（）' → logprob: -14.000140190124512
    10. '()`' → logprob: -14.500140190124512

Token 200: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09385190904140472
    2. '
' → logprob: -2.5938518047332764
    3. '    
' → logprob: -4.3438520431518555
    4. '  
' → logprob: -6.5938520431518555
    5. 'if' → logprob: -9.093852043151855
    6. ' if' → logprob: -9.218852043151855
    7. '   
' → logprob: -9.218852043151855
    8. ' 
' → logprob: -9.843852043151855
    9. '<|end|>' → logprob: -10.468852043151855
    10. '  ' → logprob: -10.718852043151855

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030680038034915924
    2. 'if' → logprob: -3.780679941177368
    3. ' if' → logprob: -4.905680179595947
    4. '    
' → logprob: -14.030679702758789
    5. '   ' → logprob: -14.405679702758789
    6. 'result' → logprob: -15.030679702758789
    7. '    ' → logprob: -15.030679702758789
    8. '	if' → logprob: -15.030679702758789
    9. '  ' → logprob: -16.03067970275879
    10. ' ' → logprob: -16.78067970275879

Token 202: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008161775767803192
    2. '   ' → logprob: -7.500816345214844
    3. ' if' → logprob: -8.250816345214844
    4. 'result' → logprob: -13.125816345214844
    5. ' ' → logprob: -17.625816345214844
    6. 'print' → logprob: -17.750816345214844
    7. '```' → logprob: -17.750816345214844
    8. '  ' → logprob: -18.375816345214844
    9. '	if' → logprob: -19.000816345214844
    10. '    
' → logprob: -19.125816345214844

Token 203: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0023643479216843843
    2. ' if' → logprob: -6.127364158630371
    3. 'result' → logprob: -8.877364158630371
    4. '   ' → logprob: -10.502364158630371
    5. 'print' → logprob: -11.377364158630371
    6. ' result' → logprob: -14.752364158630371
    7. '
' → logprob: -15.252364158630371
    8. ' ' → logprob: -16.877365112304688
    9. '```' → logprob: -16.877365112304688
    10. '#' → logprob: -17.377365112304688

Token 204: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0001843485952122137
    2. 'if' → logprob: -8.750184059143066
    3. '   ' → logprob: -11.500184059143066
    4. 'ifi' → logprob: -11.625184059143066
    5. 'ifiez' → logprob: -12.875184059143066
    6. 'i' → logprob: -13.250184059143066
    7. 'ifié' → logprob: -13.625184059143066
    8. 'ifier' → logprob: -14.875184059143066
    9. 'ifies' → logprob: -15.125184059143066
    10. 'ife' → logprob: -15.500184059143066

Token 205: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3223553001880646
    2. '(' → logprob: -1.4473552703857422
    3. ' if' → logprob: -3.697355270385742
    4. '    ' → logprob: -4.947355270385742
    5. '  ' → logprob: -5.947355270385742
    6. 'if' → logprob: -6.197355270385742
    7. ' si' → logprob: -6.947355270385742
    8. 'si' → logprob: -6.947355270385742
    9. '_' → logprob: -7.697355270385742
    10. ' (' → logprob: -8.072355270385742

Token 206: ' chaque' (ID: 21194)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.007668967824429274
    2. 'check' → logprob: -4.882668972015381
    3. '(check' → logprob: -10.507668495178223
    4. ' each' → logprob: -11.007668495178223
    5. ' ' → logprob: -11.257668495178223
    6. ' ' → logprob: -13.257668495178223
    7. '	check' → logprob: -13.382668495178223
    8. ' chaque' → logprob: -13.757668495178223
    9. 'each' → logprob: -14.132668495178223
    10. ' not' → logprob: -14.882668495178223

Token 207: ' caractère' (ID: 80509)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1819385290145874
    2. '_char' → logprob: -1.5569385290145874
    3. ' char' → logprob: -1.9319385290145874
    4. '_character' → logprob: -2.181938648223877
    5. '_each' → logprob: -2.681938648223877
    6. 'char' → logprob: -2.931938648223877
    7. ' caract' → logprob: -3.556938648223877
    8. ' ' → logprob: -3.931938648223877
    9. ' character' → logprob: -4.181938648223877
    10. ' caractère' → logprob: -4.431938648223877

Token 208: ' apparaît' (ID: 147656)
  Prédit: ' appears'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appears' → logprob: -0.9353150129318237
    2. 'appe' → logprob: -1.0603150129318237
    3. ' apparaît' → logprob: -2.3103151321411133
    4. '_' → logprob: -2.6853151321411133
    5. ' ' → logprob: -3.0603151321411133
    6. '<|end|>' → logprob: -3.8103151321411133
    7. ' appara' → logprob: -4.185315132141113
    8. ' ' → logprob: -6.060315132141113
    9. 'appear' → logprob: -7.060315132141113
    10. '   ' → logprob: -7.185315132141113

Token 209: ' exactement' (ID: 108701)
  Prédit: ' exactement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactement' → logprob: -0.05740880221128464
    2. ' exactly' → logprob: -3.5574088096618652
    3. ' ' → logprob: -4.182408809661865
    4. 'exact' → logprob: -5.057408809661865
    5. '_exact' → logprob: -5.932408809661865
    6. '   ' → logprob: -7.057408809661865
    7. ' ' → logprob: -7.182408809661865
    8. '    ' → logprob: -8.182408332824707
    9. '_' → logprob: -8.307408332824707
    10. ' exact' → logprob: -8.557408332824707

Token 210: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.048475392162799835
    2. ' ' → logprob: -3.173475503921509
    3. 'de' → logprob: -6.04847526550293
    4. ' two' → logprob: -6.29847526550293
    5. ' ' → logprob: -7.17347526550293
    6. '2' → logprob: -8.54847526550293
    7. ' exactement' → logprob: -9.42347526550293
    8. '  ' → logprob: -10.17347526550293
    9. 'two' → logprob: -10.29847526550293
    10. ' twice' → logprob: -10.54847526550293

Token 211: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.4751570522785187
    2. 'fois' → logprob: -0.9751570224761963
    3. ' ' → logprob: -6.975157260894775
    4. ' times' → logprob: -10.100156784057617
    5. 'times' → logprob: -10.350156784057617
    6. ' ' → logprob: -10.475156784057617
    7. 'fo' → logprob: -11.100156784057617
    8. ' veces' → logprob: -11.350156784057617
    9. ' vezes' → logprob: -12.100156784057617
    10. 'f' → logprob: -12.850156784057617

Token 212: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015017713885754347
    2. '    
' → logprob: -7.126501560211182
    3. ' if' → logprob: -8.37650203704834
    4. '    ' → logprob: -8.87650203704834
    5. '<|end|>' → logprob: -9.00150203704834
    6. ',' → logprob: -10.12650203704834
    7. '  ' → logprob: -10.12650203704834
    8. 'if' → logprob: -10.87650203704834
    9. '   
' → logprob: -11.00150203704834
    10. ':' → logprob: -11.12650203704834

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015406885650008917
    2. ' if' → logprob: -7.001540660858154
    3. 'if' → logprob: -7.376540660858154
    4. '    
' → logprob: -13.501541137695312
    5. '   ' → logprob: -13.751541137695312
    6. '	if' → logprob: -15.376541137695312
    7. '    ' → logprob: -15.626541137695312
    8. '  ' → logprob: -15.876541137695312
    9. ' ' → logprob: -16.626541137695312
    10. '       ' → logprob: -16.751541137695312

Token 214: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6985024809837341
    2. ' if' → logprob: -0.6985024809837341
    3. '   ' → logprob: -5.323502540588379
    4. 'result' → logprob: -8.198502540588379
    5. ' result' → logprob: -8.573502540588379
    6. ' ' → logprob: -15.073502540588379
    7. '	if' → logprob: -15.323502540588379
    8. ' is' → logprob: -15.698502540588379
    9. '    
' → logprob: -15.698502540588379
    10. 'is' → logprob: -16.198501586914062

Token 215: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.0005547016044147313
    2. 'check' → logprob: -7.50055456161499
    3. '(check' → logprob: -13.500555038452148
    4. '	check' → logprob: -15.875555038452148
    5. '_check' → logprob: -16.62555503845215
    6. ' ' → logprob: -16.87555503845215
    7. ' not' → logprob: -17.00055503845215
    8. ' ' → logprob: -17.50055503845215
    9. 'Check' → logprob: -17.75055503845215
    10. '.check' → logprob: -18.25055503845215

Token 216: '_each' (ID: 79044)
  Prédit: '_each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_each' → logprob: -0.0015058133285492659
    2. '_' → logprob: -6.5015058517456055
    3. '_every' → logprob: -13.376505851745605
    4. 'each' → logprob: -14.376505851745605
    5. ' _' → logprob: -15.001505851745605
    6. '_e' → logprob: -15.251505851745605
    7. ' each' → logprob: -15.751505851745605
    8. '_exact' → logprob: -16.50150489807129
    9. '_here' → logprob: -16.62650489807129
    10. ' ' → logprob: -16.62650489807129

Token 217: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.42097988724708557
    2. '_each' → logprob: -1.4209798574447632
    3. '_' → logprob: -2.2959799766540527
    4. '_character' → logprob: -7.545979976654053
    5. '_chars' → logprob: -7.670979976654053
    6. ' _' → logprob: -8.170979499816895
    7. 'char' → logprob: -10.170979499816895
    8. '_every' → logprob: -10.295979499816895
    9. ' ' → logprob: -10.545979499816895
    10. ' char' → logprob: -10.795979499816895

Token 218: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2664456789934775e-06
    2. ' _' → logprob: -14.500000953674316
    3. '_chars' → logprob: -14.875000953674316
    4. '_ap' → logprob: -15.500000953674316
    5. '_char' → logprob: -15.750000953674316
    6. '_app' → logprob: -17.375001907348633
    7. 'appe' → logprob: -18.000001907348633
    8. '_occ' → logprob: -18.250001907348633
    9. '_str' → logprob: -18.750001907348633
    10. '_exists' → logprob: -19.000001907348633

Token 219: 'appe' (ID: 15645)
  Prédit: 'appe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appe' → logprob: -2.057743949990254e-05
    2. 's' → logprob: -11.125020980834961
    3. 'appear' → logprob: -13.625020980834961
    4. ' ' → logprob: -13.750020980834961
    5. ' appears' → logprob: -13.875020980834961
    6. 'app' → logprob: -14.250020980834961
    7. '
' → logprob: -14.875020980834961
    8. '```' → logprob: -15.125020980834961
    9. '_' → logprob: -15.250020980834961
    10. 'input' → logprob: -15.500020980834961

Token 220: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -2.4034345187828876e-05
    2. 'ar' → logprob: -11.50002384185791
    3. '```' → logprob: -12.87502384185791
    4. 'ares' → logprob: -13.12502384185791
    5. 'ears' → logprob: -13.37502384185791
    6. 'pars' → logprob: -13.87502384185791
    7. 'rs' → logprob: -14.37502384185791
    8. '``' → logprob: -14.75002384185791
    9. 'arst' → logprob: -14.75002384185791
    10. '_' → logprob: -14.75002384185791

Token 221: '_tw' (ID: 139926)
  Prédit: '_tw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tw' → logprob: -0.000750663282815367
    2. '_' → logprob: -7.250750541687012
    3. '_two' → logprob: -11.375750541687012
    4. '_t' → logprob: -11.625750541687012
    5. '_once' → logprob: -12.625750541687012
    6. '_each' → logprob: -13.125750541687012
    7. '_exact' → logprob: -13.250750541687012
    8. '_to' → logprob: -13.500750541687012
    9. '_thr' → logprob: -13.500750541687012
    10. ' ' → logprob: -13.750750541687012

Token 222: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.009140846319496632
    2. 'o' → logprob: -5.634140968322754
    3. 'ices' → logprob: -5.759140968322754
    4. 'ic' → logprob: -7.134140968322754
    5. '   ' → logprob: -7.884140968322754
    6. 'w' → logprob: -8.009140968322754
    7. 'i' → logprob: -8.384140968322754
    8. '```' → logprob: -8.759140968322754
    9. '       ' → logprob: -9.634140968322754
    10. '_' → logprob: -10.259140968322754

Token 223: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0007732972735539079
    2. ' (' → logprob: -7.7507734298706055
    3. '(' → logprob: -8.000773429870605
    4. '(s' → logprob: -12.125773429870605
    5. ')' → logprob: -14.625773429870605
    6. '(inp' → logprob: -14.750773429870605
    7. '(
' → logprob: -15.250773429870605
    8. '(import' → logprob: -15.375773429870605
    9. '(output' → logprob: -16.00077247619629
    10. '(user' → logprob: -16.50077247619629

Token 224: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -2.2961512513575144e-05
    2. '_' → logprob: -11.625022888183594
    3. '_char' → logprob: -11.750022888183594
    4. 'str' → logprob: -12.750022888183594
    5. '_chars' → logprob: -13.500022888183594
    6. ')' → logprob: -14.000022888183594
    7. '_)' → logprob: -15.125022888183594
    8. '(str' → logprob: -15.375022888183594
    9. '_STR' → logprob: -16.000022888183594
    10. '_string' → logprob: -16.625022888183594

Token 225: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033162652980536222
    2. '):
' → logprob: -5.753316402435303
    3. ':' → logprob: -9.378315925598145
    4. '():' → logprob: -10.753315925598145
    5. ' ):' → logprob: -11.253315925598145
    6. ')' → logprob: -11.378315925598145
    7. '   ' → logprob: -11.878315925598145
    8. '():
' → logprob: -14.628315925598145
    9. '==' → logprob: -15.628315925598145
    10. ')==' → logprob: -15.628315925598145

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006770504405722022
    2. ':' → logprob: -7.375677108764648
    3. 'print' → logprob: -10.625677108764648
    4. ':
' → logprob: -11.875677108764648
    5. ' print' → logprob: -12.000677108764648
    6. '   ' → logprob: -12.750677108764648
    7. '    ' → logprob: -12.875677108764648
    8. '      ' → logprob: -13.375677108764648
    9. '        
' → logprob: -14.125677108764648
    10. '[' → logprob: -14.125677108764648

Token 227: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033571321982890368
    2. ' print' → logprob: -5.87835693359375
    3. 'print' (adapté à ' print') → logprob: -7.50335693359375
    4. '   ' → logprob: -14.75335693359375
    5. '    ' → logprob: -15.25335693359375
    6. '           ' → logprob: -15.62835693359375
    7. '      ' → logprob: -16.25335693359375
    8. ' ' → logprob: -16.50335693359375
    9. '	print' → logprob: -17.12835693359375
    10. '```' → logprob: -18.12835693359375

Token 228: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0009122979827225208
    2. '(' → logprob: -7.000912189483643
    3. '('' → logprob: -14.0009126663208
    4. ' ("' → logprob: -17.250911712646484
    5. '(
' → logprob: -18.000911712646484
    6. '("("' → logprob: -18.375911712646484
    7. '("")' → logprob: -18.500911712646484
    8. '("""' → logprob: -18.625911712646484
    9. '"' → logprob: -19.375911712646484
    10. '   ' → logprob: -19.500911712646484

Token 229: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -3.128163257315464e-07
    2. ' Yes' → logprob: -16.0
    3. 'Ye' → logprob: -16.75
    4. 'Oui' → logprob: -18.0
    5. 'Y' → logprob: -18.5
    6. 'YES' → logprob: -20.125
    7. 'Yep' → logprob: -20.5
    8. 'Yeah' → logprob: -20.625
    9. '.Yes' → logprob: -21.125
    10. '   ' → logprob: -21.375

Token 230: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0002625278721097857
    2. '")
' → logprob: -8.250262260437012
    3. ')' → logprob: -13.750262260437012
    4. ')")' → logprob: -16.375263214111328
    5. '")
' → logprob: -16.875263214111328
    6. '"' → logprob: -17.375263214111328
    7. ' ")' → logprob: -17.750263214111328
    8. '')' → logprob: -18.250263214111328
    9. '!")' → logprob: -18.625263214111328
    10. '")

' → logprob: -18.750263214111328

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.126521035796031e-05
    2. ' else' → logprob: -9.625091552734375
    3. 'else' → logprob: -10.625091552734375
    4. '    
' → logprob: -14.375091552734375
    5. '	else' → logprob: -16.375091552734375
    6. '       ' → logprob: -16.500091552734375
    7. '   ' → logprob: -17.250091552734375
    8. '  ' → logprob: -17.750091552734375
    9. ' ' → logprob: -18.500091552734375
    10. 'e' → logprob: -18.625091552734375

Token 232: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11409864574670792
    2. ' else' → logprob: -2.61409854888916
    3. 'else' (adapté à ' else') → logprob: -3.36409854888916
    4. '	else' → logprob: -13.48909854888916
    5. '    
' → logprob: -14.23909854888916
    6. 'e' → logprob: -14.98909854888916
    7. '       ' → logprob: -15.48909854888916
    8. ' ' → logprob: -16.364099502563477
    9. 'els' → logprob: -16.614099502563477
    10. '```' → logprob: -16.864099502563477

Token 233: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04941190034151077
    2. ':
' → logprob: -3.0494120121002197
    3. '       ' → logprob: -7.174411773681641
    4. ' :' → logprob: -10.42441177368164
    5. '   ' → logprob: -11.17441177368164
    6. ' :
' → logprob: -11.29941177368164
    7. '():' → logprob: -15.04941177368164
    8. '):' → logprob: -15.17441177368164
    9. '):
' → logprob: -15.17441177368164
    10. '    ' → logprob: -15.17441177368164

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.249780638725497e-05
    2. ' print' → logprob: -10.500032424926758
    3. 'print' → logprob: -12.250032424926758
    4. '   ' → logprob: -17.125032424926758
    5. '      ' → logprob: -17.250032424926758
    6. '    ' → logprob: -17.375032424926758
    7. '           ' → logprob: -17.500032424926758
    8. '     ' → logprob: -18.375032424926758
    9. ' ' → logprob: -18.750032424926758
    10. '(print' → logprob: -19.000032424926758

Token 235: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.38692933320999146
    2. 'print' (adapté à ' print') → logprob: -1.1369292736053467
    3. '       ' → logprob: -9.761929512023926
    4. '	print' → logprob: -15.636929512023926
    5. '.print' → logprob: -15.636929512023926
    6. '(print' → logprob: -15.636929512023926
    7. '   ' → logprob: -16.13692855834961
    8. ' ' → logprob: -17.26192855834961
    9. '        ' → logprob: -17.38692855834961
    10. '```' → logprob: -17.51192855834961

Token 236: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0007100477814674377
    2. '(' → logprob: -7.2507100105285645
    3. '(
' → logprob: -15.875710487365723
    4. '('' → logprob: -16.750709533691406
    5. ' ("' → logprob: -17.125709533691406
    6. '("""' → logprob: -18.625709533691406
    7. '("")' → logprob: -19.500709533691406
    8. '()' → logprob: -19.625709533691406
    9. '"' → logprob: -19.875709533691406
    10. '(

' → logprob: -20.250709533691406

Token 237: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: 0.0
    2. '"No' → logprob: -17.0
    3. ' No' → logprob: -20.0
    4. 'N' → logprob: -23.875
    5. '_No' → logprob: -25.875
    6. '"' → logprob: -26.375
    7. '   ' → logprob: -26.625
    8. '>No' → logprob: -26.875
    9. '.No' → logprob: -27.0
    10. 'NO' → logprob: -27.25

Token 238: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.8908587662735954e-05
    2. ')' → logprob: -11.000019073486328
    3. ')")' → logprob: -13.125019073486328
    4. '")
' → logprob: -15.875019073486328
    5. '}")' → logprob: -18.125019073486328
    6. '')' → logprob: -19.250019073486328
    7. '”)' → logprob: -20.000019073486328
    8. '"' → logprob: -20.000019073486328
    9. ' ")' → logprob: -20.750019073486328
    10. '!")' → logprob: -20.875019073486328

Token 239: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5802573561668396
    2. '
' → logprob: -0.8302573561668396
    3. '<|end|>' → logprob: -5.830257415771484
    4. '```' → logprob: -7.080257415771484
    5. '\n' → logprob: -8.580257415771484
    6. '

' → logprob: -8.705257415771484
    7. '  
' → logprob: -9.830257415771484
    8. ' if' → logprob: -10.205257415771484
    9. '    
' → logprob: -10.830257415771484
    10. '\' → logprob: -11.330257415771484

Token 240: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4758223295211792
    2. '
' → logprob: -1.1008223295211792
    3. '<|end|>' → logprob: -3.1008224487304688
    4. '```' → logprob: -8.350822448730469
    5. '

' → logprob: -8.475822448730469
    6. '\n' → logprob: -8.850822448730469
    7. '  
' → logprob: -9.100822448730469
    8. ' if' → logprob: -9.350822448730469
    9. '        
' → logprob: -9.725822448730469
    10. '    
' → logprob: -9.725822448730469

Token 241: ' Termine' (ID: 150192)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.085517113911919e-05
    2. '
' → logprob: -11.12505054473877
    3. ' if' → logprob: -11.25005054473877
    4. '<|end|>' → logprob: -11.62505054473877
    5. '```' → logprob: -12.37505054473877
    6. '    
' → logprob: -13.00005054473877
    7. 'return' → logprob: -13.00005054473877
    8. 'sys' → logprob: -13.25005054473877
    9. '#' → logprob: -13.37505054473877
    10. '        
' → logprob: -13.87505054473877

Token 242: ' le' (ID: 505)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.5273422598838806
    2. 'sys' → logprob: -1.4023423194885254
    3. ' sys' → logprob: -2.2773423194885254
    4. '()' → logprob: -3.1523423194885254
    5. 'import' → logprob: -5.152342319488525
    6. '   ' → logprob: -5.152342319488525
    7. '	sys' → logprob: -5.777342319488525
    8. '(' → logprob: -6.152342319488525
    9. '       ' → logprob: -7.777342319488525
    10. 'exit' → logprob: -8.027341842651367

Token 243: ' programme' (ID: 18190)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.4979092478752136
    2. 'programme' → logprob: -1.3729093074798584
    3. ' programme' → logprob: -2.6229093074798584
    4. ' program' → logprob: -2.7479093074798584
    5. '_program' → logprob: -7.122909069061279
    6. 'rogram' → logprob: -7.747909069061279
    7. 'prog' → logprob: -8.622909545898438
    8. 'programma' → logprob: -8.622909545898438
    9. 'sys' → logprob: -9.122909545898438
    10. ' programma' → logprob: -9.872909545898438

Token 244: ' immédiatement' (ID: 100743)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012968452647328377
    2. '       ' → logprob: -4.76296854019165
    3. 'sys' → logprob: -5.51296854019165
    4. ' sys' → logprob: -8.387968063354492
    5. 'import' → logprob: -9.637968063354492
    6. '	sys' → logprob: -11.762968063354492
    7. '(sys' → logprob: -12.512968063354492
    8. 'exit' → logprob: -13.387968063354492
    9. '           ' → logprob: -13.762968063354492
    10. '    
' → logprob: -14.137968063354492

Token 245: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32386502623558044
    2. '   ' → logprob: -1.3238650560379028
    3. 'sys' → logprob: -5.073864936828613
    4. ' sys' → logprob: -5.698864936828613
    5. 'import' → logprob: -7.323864936828613
    6. 'return' → logprob: -9.198864936828613
    7. '(sys' → logprob: -10.073864936828613
    8. '	sys' → logprob: -10.323864936828613
    9. ' return' → logprob: -10.573864936828613
    10. '           ' → logprob: -10.823864936828613

Token 246: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11897385120391846
    2. 'sys' → logprob: -2.618973731994629
    3. ' sys' → logprob: -3.243973731994629
    4. '   ' → logprob: -9.118973731994629
    5. 'exit' → logprob: -9.743973731994629
    6. ' ' → logprob: -10.118973731994629
    7. '       ' → logprob: -10.368973731994629
    8. '```' → logprob: -10.993973731994629
    9. ' exit' → logprob: -11.618973731994629
    10. 'import' → logprob: -12.118973731994629

Token 247: ' code' (ID: 3490)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1513753980398178
    2. ' exit' → logprob: -2.5263752937316895
    3. ' sys' → logprob: -3.2763752937316895
    4. 'exit' → logprob: -4.1513752937316895
    5. ' ' → logprob: -5.7763752937316895
    6. 'sys' → logprob: -6.0263752937316895
    7. '   ' → logprob: -7.7763752937316895
    8. ' return' → logprob: -7.7763752937316895
    9. ' code' → logprob: -8.776375770568848
    10. ' non' → logprob: -8.901375770568848

Token 248: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02000417374074459
    2. ' sys' → logprob: -5.6450042724609375
    3. ' de' → logprob: -6.0200042724609375
    4. ' ' → logprob: -6.0200042724609375
    5. '       ' → logprob: -6.2700042724609375
    6. 'exit' → logprob: -6.3950042724609375
    7. '   ' → logprob: -6.5200042724609375
    8. ' d' → logprob: -6.6450042724609375
    9. 'sys' → logprob: -6.6450042724609375
    10. 'd' → logprob: -6.7700042724609375

Token 249: ' sortie' (ID: 52761)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005835341871716082
    2. 'sys' → logprob: -8.25058364868164
    3. ' ' → logprob: -8.87558364868164
    4. ' sys' → logprob: -9.00058364868164
    5. '   ' → logprob: -11.00058364868164
    6. 'exit' → logprob: -11.25058364868164
    7. '0' → logprob: -11.75058364868164
    8. 'error' → logprob: -12.00058364868164
    9. ' error' → logprob: -12.12558364868164
    10. ' exit' → logprob: -12.87558364868164

Token 250: ' différent' (ID: 114823)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09097357094287872
    2. ' ' → logprob: -2.4659736156463623
    3. ' sys' → logprob: -6.340973377227783
    4. 'sys' → logprob: -9.215973854064941
    5. '   ' → logprob: -9.715973854064941
    6. '       ' → logprob: -9.715973854064941
    7. '```' → logprob: -11.215973854064941
    8. '    ' → logprob: -11.340973854064941
    9. '0' → logprob: -11.465973854064941
    10. 'import' → logprob: -12.965973854064941

Token 251: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02485976368188858
    2. ' ' → logprob: -4.02485990524292
    3. '0' → logprob: -5.52485990524292
    4. '   ' → logprob: -6.64985990524292
    5. ' de' → logprob: -7.77485990524292
    6. 'from' → logprob: -8.274859428405762
    7. ' from' → logprob: -8.399859428405762
    8. 'import' → logprob: -8.899859428405762
    9. ' sys' → logprob: -9.274859428405762
    10. '    ' → logprob: -9.524859428405762

Token 252: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009784307330846786
    2. ' ' → logprob: -4.63478422164917
    3. '1' → logprob: -10.509784698486328
    4. '   ' → logprob: -14.509784698486328
    5. ' zero' → logprob: -15.384784698486328
    6. '  ' → logprob: -16.009784698486328
    7. 'zero' → logprob: -16.759784698486328
    8. '    ' → logprob: -16.884784698486328
    9. ' sys' → logprob: -17.134784698486328
    10. ' ' → logprob: -17.509784698486328

Token 253: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6145367622375488
    2. ' sys' → logprob: -0.9895367622375488
    3. 'sys' → logprob: -2.739536762237549
    4. '
' → logprob: -4.989536762237549
    5. '   ' → logprob: -5.114536762237549
    6. '        
' → logprob: -5.364536762237549
    7. '(sys' → logprob: -5.489536762237549
    8. '           ' → logprob: -7.864536762237549
    9. '	sys' → logprob: -8.86453628540039
    10. 'exit' → logprob: -9.11453628540039

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2330867201089859
    2. 'sys' → logprob: -1.7330867052078247
    3. ' sys' → logprob: -3.9830868244171143
    4. '   ' → logprob: -4.608086585998535
    5. 'import' → logprob: -6.108086585998535
    6. 'exit' → logprob: -8.358086585998535
    7. '	sys' → logprob: -10.358086585998535
    8. '```' → logprob: -10.358086585998535
    9. '(sys' → logprob: -10.858086585998535
    10. '        
' → logprob: -11.233086585998535

Token 255: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.16040346026420593
    2. ' sys' → logprob: -1.9104034900665283
    3. '       ' → logprob: -9.03540325164795
    4. 'import' → logprob: -10.03540325164795
    5. '   ' → logprob: -11.78540325164795
    6. 'exit' → logprob: -11.91040325164795
    7. '	sys' → logprob: -13.53540325164795
    8. '=sys' → logprob: -15.66040325164795
    9. '```' → logprob: -15.66040325164795
    10. '(sys' → logprob: -15.91040325164795

Token 256: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -7.660315895918757e-05
    2. '.' → logprob: -9.500076293945312
    3. '.stderr' → logprob: -14.500076293945312
    4. 'exit' → logprob: -15.250076293945312
    5. '.stdout' → logprob: -15.250076293945312
    6. ' exit' → logprob: -15.875076293945312
    7. ' .' → logprob: -16.000076293945312
    8. '.EXIT' → logprob: -16.000076293945312
    9. '	exit' → logprob: -16.125076293945312
    10. '.Exit' → logprob: -16.250076293945312

Token 257: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -6.869017852295656e-06
    2. '()' → logprob: -12.000006675720215
    3. ' (' → logprob: -14.375006675720215
    4. '1' → logprob: -17.62500762939453
    5. '(EXIT' → logprob: -18.00000762939453
    6. '("("' → logprob: -18.12500762939453
    7. '(
' → logprob: -18.37500762939453
    8. '((' → logprob: -18.62500762939453
    9. '\(' → logprob: -19.25000762939453
    10. '(-' → logprob: -19.25000762939453

Token 258: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08160172402858734
    2. '
' → logprob: -2.956601619720459
    3. '<|end|>' → logprob: -3.831601619720459
    4. '\n' → logprob: -6.206601619720459
    5. '```' → logprob: -6.831601619720459
    6. ' if' → logprob: -7.581601619720459
    7. '

' → logprob: -7.831601619720459
    8. '    
' → logprob: -8.581602096557617
    9. '  
' → logprob: -8.831602096557617
    10. '\' → logprob: -9.956602096557617

Token 259: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01642400026321411
    2. '__' → logprob: -4.141424179077148
    3. '_' → logprob: -8.641424179077148
    4. ' ' → logprob: -9.266424179077148
    5. '_name' → logprob: -10.266424179077148
    6. ' _' → logprob: -10.641424179077148
    7. ' ___' → logprob: -10.891424179077148
    8. '___' → logprob: -11.141424179077148
    9. ' ' → logprob: -11.891424179077148
    10. ' ' → logprob: -12.266424179077148

Token 260: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003388502635061741
    2. ' ==' → logprob: -6.128388404846191
    3. '==' → logprob: -7.253388404846191
    4. ' __' → logprob: -8.003388404846191
    5. '.__' → logprob: -9.878388404846191
    6. '[' → logprob: -10.378388404846191
    7. '__.__' → logprob: -10.503388404846191
    8. '__.' → logprob: -10.753388404846191
    9. '__[' → logprob: -11.253388404846191
    10. '=="' → logprob: -11.878388404846191

Token 261: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.7432603272027336e-06
    2. '==' → logprob: -13.500001907348633
    3. '__.__' → logprob: -15.625001907348633
    4. ' ==' → logprob: -16.375001907348633
    5. '___' → logprob: -16.875001907348633
    6. '____' → logprob: -17.500001907348633
    7. '=="' → logprob: -18.625001907348633
    8. '_' → logprob: -18.750001907348633
    9. '__.' → logprob: -18.875001907348633
    10. '__('' → logprob: -19.000001907348633

Token 262: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11303452402353287
    2. ' ==' → logprob: -2.73803448677063
    3. '==' → logprob: -3.23803448677063
    4. '=="' → logprob: -5.863034725189209
    5. '=='' → logprob: -10.11303424835205
    6. '_' → logprob: -10.73803424835205
    7. '___' → logprob: -11.11303424835205
    8. '[' → logprob: -12.73803424835205
    9. ' =="' → logprob: -12.73803424835205
    10. '===' → logprob: -13.11303424835205

Token 263: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023540576919913292
    2. ''' → logprob: -3.773540496826172
    3. ' "__' → logprob: -8.273540496826172
    4. '__' → logprob: -10.273540496826172
    5. ' '__' → logprob: -12.398540496826172
    6. '"user' → logprob: -14.273540496826172
    7. '"name' → logprob: -15.898540496826172
    8. '"_' → logprob: -15.898540496826172
    9. '("__' → logprob: -16.148540496826172
    10. ''"' → logprob: -16.773540496826172

Token 264: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.625
    3. 'name' → logprob: -16.5
    4. '_main' → logprob: -17.0
    5. '	main' → logprob: -17.875
    6. '"' → logprob: -18.25
    7. 'ma' → logprob: -18.625
    8. '__' → logprob: -19.0
    9. 'maine' → logprob: -19.25
    10. 'm' → logprob: -20.0

Token 265: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3868878483772278
    2. '__":
' → logprob: -1.136887788772583
    3. '__':
' → logprob: -11.636887550354004
    4. '__["' → logprob: -12.386887550354004
    5. '__:' → logprob: -13.511887550354004
    6. '_' → logprob: -13.761887550354004
    7. '__",' → logprob: -14.511887550354004
    8. '__("' → logprob: -14.761887550354004
    9. '__.__' → logprob: -15.761887550354004
    10. '__*/' → logprob: -16.13688850402832

Token 266: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2582177221775055
    2. 'main' → logprob: -1.508217692375183
    3. '   ' → logprob: -5.508217811584473
    4. '	main' → logprob: -6.133217811584473
    5. '_main' → logprob: -11.258217811584473
    6. '    
' → logprob: -11.508217811584473
    7. ' ' → logprob: -11.508217811584473
    8. '  ' → logprob: -12.633217811584473
    9. ' ' → logprob: -12.758217811584473
    10. '(main' → logprob: -13.258217811584473

Token 267: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.16024452447891235
    2. ' main' → logprob: -1.9102444648742676
    3. '	main' → logprob: -11.160244941711426
    4. '   ' → logprob: -12.035244941711426
    5. ' ' → logprob: -16.78524398803711
    6. '(main' → logprob: -17.16024398803711
    7. ' ' → logprob: -17.53524398803711
    8. '_main' → logprob: -17.66024398803711
    9. '.main' → logprob: -17.91024398803711
    10. '  ' → logprob: -18.53524398803711

Token 268: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00048024329589679837
    2. '(' → logprob: -8.125480651855469
    3. '()
' → logprob: -8.625480651855469
    4. ' ()' → logprob: -13.500480651855469
    5. '(
' → logprob: -14.000480651855469
    6. '()

' → logprob: -14.125480651855469
    7. '()`' → logprob: -14.750480651855469
    8. '();' → logprob: -15.250480651855469
    9. '()\' → logprob: -15.375480651855469
    10. '()<' → logprob: -15.500480651855469


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 266
Tokens correctement prédits (1ère position, stricte): 108
Tokens correctement prédits (1ère position, avec adaptation): 115
Tokens correctement prédits (top 10): 197
Précision stricte (1ère position): 40.60%
Précision adaptée (1ère position): 43.23%
Précision (top 10): 74.06%
================================================================================
