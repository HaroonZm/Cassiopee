================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import sub

def f(): return input()

x = map(int, [f()])
a = [1110]
b = list(x)
print(reduce(sub, a + b))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123008728027344
    2. 'wrap' → logprob: -0.8623008728027344
    3. 'reduce' → logprob: -3.4873008728027344
    4. 'l' → logprob: -6.112300872802734
    5. ' wraps' → logprob: -6.362300872802734
    6. 'cached' → logprob: -7.612300872802734
    7. 'cache' → logprob: -8.112300872802734
    8. 'cmp' → logprob: -9.112300872802734
    9. '```' → logprob: -9.237300872802734
    10. ' partial' → logprob: -9.612300872802734

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9002471566200256
    2. ' operator' → logprob: -1.5252470970153809
    3. ' itertools' → logprob: -1.5252470970153809
    4. ' collections' → logprob: -1.9002470970153809
    5. ' os' → logprob: -4.900247097015381
    6. 'operator' → logprob: -7.525247097015381
    7. ' typing' → logprob: -8.525247573852539
    8. ' sys' → logprob: -8.650247573852539
    9. 'collections' → logprob: -8.900247573852539
    10. 'math' → logprob: -9.025247573852539

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022971155121922493
    2. 'import' → logprob: -3.8979711532592773
    3. ' ' → logprob: -6.397971153259277
    4. '.' → logprob: -7.397971153259277
    5. ' .' → logprob: -9.147971153259277
    6. '.import' → logprob: -10.647971153259277
    7. '	import' → logprob: -11.772971153259277
    8. '<|end|>' → logprob: -13.022971153259277
    9. '_import' → logprob: -13.397971153259277
    10. ' ' → logprob: -13.522971153259277

Token 8: ' sub' (ID: 1543)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.31903505325317383
    2. ' import' → logprob: -1.9440350532531738
    3. 'add' → logprob: -2.444035053253174
    4. ' ' → logprob: -4.069035053253174
    5. ' mul' → logprob: -4.194035053253174
    6. 'import' → logprob: -4.819035053253174
    7. 'mul' → logprob: -6.194035053253174
    8. ' item' → logprob: -8.694034576416016
    9. 'item' → logprob: -9.569034576416016
    10. ' ad' → logprob: -9.819034576416016

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011261790990829468
    2. '\' → logprob: -5.136261940002441
    3. '\n' → logprob: -6.261261940002441
    4. ',' → logprob: -7.011261940002441
    5. '(
' → logprob: -7.386261940002441
    6. ')' → logprob: -7.386261940002441
    7. '\(' → logprob: -7.636261940002441
    8. '(

' → logprob: -9.136261940002441
    9. 'def' → logprob: -9.261261940002441
    10. '#' → logprob: -9.636261940002441

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31167134642601013
    2. '(lambda' → logprob: -2.186671257019043
    3. ',' → logprob: -2.936671257019043
    4. 'def' → logprob: -3.686671257019043
    5. 'lambda' → logprob: -3.811671257019043
    6. ')' → logprob: -4.436671257019043
    7. 'reduce' → logprob: -4.936671257019043
    8. 'a' → logprob: -5.061671257019043
    9. '#' → logprob: -5.061671257019043
    10. '(
' → logprob: -5.186671257019043

Token 11: ' f' (ID: 285)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3847568929195404
    2. ' reduce' → logprob: -1.8847569227218628
    3. ' calculate' → logprob: -3.0097568035125732
    4. ' add' → logprob: -3.0097568035125732
    5. ' factorial' → logprob: -4.259757041931152
    6. ' sum' → logprob: -4.634757041931152
    7. ' process' → logprob: -4.759757041931152
    8. ' space' → logprob: -4.884757041931152
    9. ' subtract' → logprob: -5.134757041931152
    10. ' apply' → logprob: -5.634757041931152

Token 12: '():' (ID: 9442)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3853115737438202
    2. '(x' → logprob: -2.5103116035461426
    3. '(a' → logprob: -3.0103116035461426
    4. 'def' → logprob: -3.1353116035461426
    5. 'unct' → logprob: -3.5103116035461426
    6. '(n' → logprob: -3.6353116035461426
    7. 'unction' → logprob: -4.260311603546143
    8. 'u' → logprob: -4.760311603546143
    9. 'unc' → logprob: -4.760311603546143
    10. '(u' → logprob: -4.760311603546143

Token 13: ' return' (ID: 622)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.5624882578849792
    2. '   ' → logprob: -1.187488317489624
    3. ' ' → logprob: -2.562488317489624
    4. ' return' → logprob: -4.562488079071045
    5. '\' → logprob: -4.687488079071045
    6. ' \' → logprob: -5.312488079071045
    7. '\n' → logprob: -5.562488079071045
    8. ' 
' → logprob: -5.937488079071045
    9. 'return' → logprob: -6.437488079071045
    10. '    
' → logprob: -6.562488079071045

Token 14: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4002808928489685
    2. '0' → logprob: -1.7752809524536133
    3. ' lambda' → logprob: -2.2752809524536133
    4. 'lambda' → logprob: -3.6502809524536133
    5. ' reduce' → logprob: -4.275280952453613
    6. 'reduce' → logprob: -4.775280952453613
    7. '1' → logprob: -5.150280952453613
    8. ' []' → logprob: -7.900280952453613
    9. ' functools' → logprob: -8.275280952453613
    10. ' None' → logprob: -8.400280952453613

Token 15: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010267487727105618
    2. '.' → logprob: -4.76026725769043
    3. '()' → logprob: -7.01026725769043
    4. ' (' → logprob: -9.01026725769043
    5. '(
' → logprob: -9.01026725769043
    6. '('' → logprob: -9.38526725769043
    7. ')' → logprob: -9.51026725769043
    8. '().' → logprob: -9.51026725769043
    9. ' ' → logprob: -9.76026725769043
    10. '(

' → logprob: -10.26026725769043

Token 16: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0181773900985718
    2. 'result' → logprob: -1.3931773900985718
    3. 'a' → logprob: -1.5181773900985718
    4. 'n' → logprob: -3.6431775093078613
    5. 'reduce' → logprob: -4.018177509307861
    6. '_' → logprob: -4.268177509307861
    7. 'def' → logprob: -4.268177509307861
    8. ' ' → logprob: -4.518177509307861
    9. ' x' → logprob: -4.643177509307861
    10. '(' → logprob: -4.893177509307861

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02348107285797596
    2. '=' → logprob: -4.3984808921813965
    3. ' ' → logprob: -5.1484808921813965
    4. ',' → logprob: -6.5234808921813965
    5. '[' → logprob: -6.7734808921813965
    6. '.' → logprob: -7.1484808921813965
    7. '_' → logprob: -7.3984808921813965
    8. '(' → logprob: -7.7734808921813965
    9. '  ' → logprob: -8.773481369018555
    10. ')' → logprob: -9.273481369018555

Token 18: ' map' (ID: 4014)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6554341912269592
    2. ' f' → logprob: -0.7804341912269592
    3. 'int' → logprob: -4.4054341316223145
    4. ' int' → logprob: -4.7804341316223145
    5. 'reduce' → logprob: -7.7804341316223145
    6. ' ' → logprob: -8.030434608459473
    7. ' []' → logprob: -8.280434608459473
    8. '0' → logprob: -8.780434608459473
    9. ' reduce' → logprob: -8.905434608459473
    10. 'x' → logprob: -9.030434608459473

Token 19: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01522036548703909
    2. '(lambda' → logprob: -4.7652201652526855
    3. '(f' → logprob: -5.1402201652526855
    4. '(x' → logprob: -8.515220642089844
    5. '(func' → logprob: -8.765220642089844
    6. '(function' → logprob: -9.390220642089844
    7. '<|end|>' → logprob: -10.140220642089844
    8. '(sub' → logprob: -10.140220642089844
    9. '(int' → logprob: -10.765220642089844
    10. '((' → logprob: -10.890220642089844

Token 20: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3849102854728699
    2. '(f' → logprob: -1.2599103450775146
    3. '(x' → logprob: -3.8849103450775146
    4. ')' → logprob: -4.5099101066589355
    5. '())' → logprob: -7.2599101066589355
    6. '<|end|>' → logprob: -7.2599101066589355
    7. '()' → logprob: -7.5099101066589355
    8. '(input' → logprob: -7.8849101066589355
    9. '(()' → logprob: -8.134910583496094
    10. '('' → logprob: -8.259910583496094

Token 21: ' [' (ID: 723)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.14393676817417145
    2. 'f' → logprob: -2.0189368724823
    3. '(f' → logprob: -7.518936634063721
    4. ')' → logprob: -8.018937110900879
    5. ' ' → logprob: -8.518937110900879
    6. '(' → logprob: -9.643937110900879
    7. ' (' → logprob: -9.768937110900879
    8. ' )' → logprob: -10.393937110900879
    9. ' input' → logprob: -11.143937110900879
    10. 'input' → logprob: -12.143937110900879

Token 22: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.012945028021931648
    2. ''f' → logprob: -4.762945175170898
    3. ' f' → logprob: -5.637945175170898
    4. ''' → logprob: -7.762945175170898
    5. ' '' → logprob: -9.762945175170898
    6. '"' → logprob: -9.762945175170898
    7. ' ' → logprob: -10.387945175170898
    8. '(f' → logprob: -10.387945175170898
    9. '')' → logprob: -10.637945175170898
    10. '   ' → logprob: -10.637945175170898

Token 23: '()])
' (ID: 141457)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06260467320680618
    2. '()]' → logprob: -2.8126046657562256
    3. '())' → logprob: -8.562604904174805
    4. '(),' → logprob: -8.937604904174805
    5. '()"' → logprob: -9.062604904174805
    6. '()],' → logprob: -9.812604904174805
    7. ']()' → logprob: -10.312604904174805
    8. '`()' → logprob: -11.062604904174805
    9. '()">' → logprob: -11.187604904174805
    10. '(' → logprob: -11.312604904174805

Token 24: 'a' (ID: 64)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022123686969280243
    2. '[' → logprob: -4.77212381362915
    3. ' )' → logprob: -5.02212381362915
    4. ',' → logprob: -5.89712381362915
    5. '])' → logprob: -7.14712381362915
    6. '(' → logprob: -7.77212381362915
    7. 'x' → logprob: -7.89712381362915
    8. ',)' → logprob: -8.147123336791992
    9. ' ' → logprob: -8.272123336791992
    10. ')])' → logprob: -8.397123336791992

Token 25: ' =' (ID: 314)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.04794636741280556
    2. 'pp' → logprob: -4.672946453094482
    3. 'd' → logprob: -4.797946453094482
    4. 'rg' → logprob: -5.172946453094482
    5. '(dd' → logprob: -5.547946453094482
    6. ' =' → logprob: -5.672946453094482
    7. 'p' → logprob: -5.797946453094482
    8. 'vg' → logprob: -5.797946453094482
    9. '=' → logprob: -6.672946453094482
    10. '(d' → logprob: -6.922946453094482

Token 26: ' [' (ID: 723)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.3090170621871948
    2. ' reduce' → logprob: -1.5590170621871948
    3. ' list' → logprob: -3.6840171813964844
    4. 'list' → logprob: -4.309017181396484
    5. ' map' → logprob: -4.434017181396484
    6. 'map' → logprob: -5.809017181396484
    7. ' [' → logprob: -7.559017181396484
    8. 're' → logprob: -8.059017181396484
    9. '[' → logprob: -8.309017181396484
    10. 'x' → logprob: -9.059017181396484

Token 27: '111' (ID: 8780)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7475810647010803
    2. '1' → logprob: -1.4975810050964355
    3. 'x' → logprob: -1.6225810050964355
    4. ' ' → logprob: -3.1225810050964355
    5. ' x' → logprob: -3.8725810050964355
    6. 'reduce' → logprob: -4.7475810050964355
    7. ']' → logprob: -5.1225810050964355
    8. '42' → logprob: -5.3725810050964355
    9. '2' → logprob: -5.6225810050964355
    10. '10' → logprob: -5.7475810050964355

Token 28: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22231924533843994
    2. ']' → logprob: -1.97231924533844
    3. '1' → logprob: -3.4723191261291504
    4. '7' → logprob: -5.22231912612915
    5. '6' → logprob: -5.34731912612915
    6. ' ,' → logprob: -5.72231912612915
    7. '-' → logprob: -5.97231912612915
    8. ' -' → logprob: -6.34731912612915
    9. '2' → logprob: -6.47231912612915
    10. '0' → logprob: -6.47231912612915

Token 29: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21338696777820587
    2. ']' → logprob: -1.7133870124816895
    3. '-' → logprob: -5.4633870124816895
    4. ' ,' → logprob: -6.5883870124816895
    5. ' -' → logprob: -6.7133870124816895
    6. '+' → logprob: -6.9633870124816895
    7. '0' → logprob: -6.9633870124816895
    8. '1' → logprob: -7.5883870124816895
    9. ' ]' → logprob: -7.7133870124816895
    10. '7' → logprob: -8.088386535644531

Token 30: 'b' (ID: 65)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3423206806182861
    2. '[' → logprob: -1.3423206806182861
    3. '+' → logprob: -1.5923206806182861
    4. ' ' → logprob: -2.592320680618286
    5. 'a' → logprob: -3.342320680618286
    6. ')' → logprob: -3.467320680618286
    7. ' +' → logprob: -4.092320442199707
    8. ' -' → logprob: -4.467320442199707
    9. ']' → logprob: -4.592320442199707
    10. '+
' → logprob: -4.717320442199707

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0550432987511158
    2. '=' → logprob: -3.1800432205200195
    3. '.' → logprob: -5.4300432205200195
    4. '[' → logprob: -5.8050432205200195
    5. '.append' → logprob: -5.9300432205200195
    6. '+' → logprob: -7.3050432205200195
    7. '.extend' → logprob: -7.4300432205200195
    8. ' +' → logprob: -8.80504322052002
    9. ' +=' → logprob: -8.80504322052002
    10. ',' → logprob: -9.68004322052002

Token 32: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.9412038326263428
    2. ' [' → logprob: -1.4412038326263428
    3. '[' → logprob: -2.1912038326263428
    4. 'list' → logprob: -2.1912038326263428
    5. ' map' → logprob: -2.5662038326263428
    6. 'map' → logprob: -3.9412038326263428
    7. ' a' → logprob: -4.441204071044922
    8. 'a' → logprob: -4.441204071044922
    9. 'reduce' → logprob: -4.441204071044922
    10. ' reduce' → logprob: -4.691204071044922

Token 33: '(x' (ID: 4061)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.09943389892578125
    2. '(' → logprob: -2.7244338989257812
    3. '(a' → logprob: -3.9744338989257812
    4. '(x' → logprob: -5.474433898925781
    5. '(range' → logprob: -5.849433898925781
    6. '(re' → logprob: -6.724433898925781
    7. '(filter' → logprob: -6.974433898925781
    8. '(m' → logprob: -8.099433898925781
    9. '()' → logprob: -8.599433898925781
    10. '(b' → logprob: -9.224433898925781

Token 34: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012013536877930164
    2. ')]' → logprob: -5.6370134353637695
    3. ',' → logprob: -6.0120134353637695
    4. ')])' → logprob: -6.1370134353637695
    5. ' )' → logprob: -6.6370134353637695
    6. '))' → logprob: -7.1370134353637695
    7. ')
' → logprob: -7.2620134353637695
    8. '[' → logprob: -8.38701343536377
    9. '[sub' → logprob: -8.63701343536377
    10. 'sub' → logprob: -9.26201343536377

Token 35: 'print' (ID: 1598)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8470680117607117
    2. '[' → logprob: -1.5970680713653564
    3. '+' → logprob: -1.7220680713653564
    4. '<|end|>' → logprob: -2.2220680713653564
    5. ' ' → logprob: -3.9720680713653564
    6. '
' → logprob: -4.472067832946777
    7. ' -' → logprob: -4.722067832946777
    8. '[-' → logprob: -4.847067832946777
    9. ' +' → logprob: -5.222067832946777
    10. ' 
' → logprob: -5.722067832946777

Token 36: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05037564039230347
    2. '(a' → logprob: -3.4253756999969482
    3. '(b' → logprob: -5.050375461578369
    4. '(sub' → logprob: -5.175375461578369
    5. '(sum' → logprob: -6.675375461578369
    6. '((' → logprob: -6.675375461578369
    7. '('' → logprob: -7.675375461578369
    8. '("("' → logprob: -7.675375461578369
    9. '(list' → logprob: -8.175375938415527
    10. '([' → logprob: -8.300375938415527

Token 37: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.3605290651321411
    2. 'd' → logprob: -1.3605290651321411
    3. 'duced' → logprob: -3.4855289459228516
    4. 'pr' → logprob: -4.735528945922852
    5. 's' → logprob: -5.860528945922852
    6. 'sub' → logprob: -7.235528945922852
    7. 'du' → logprob: -7.235528945922852
    8. 'verse' → logprob: -7.485528945922852
    9. 'versed' → logprob: -7.735528945922852
    10. 'p' → logprob: -8.485528945922852

Token 38: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.007987147197127342
    2. '(' → logprob: -4.882987022399902
    3. '(lambda' → logprob: -9.382987022399902
    4. ')' → logprob: -9.507987022399902
    5. 'sub' → logprob: -9.632987022399902
    6. ' (' → logprob: -9.757987022399902
    7. '(operator' → logprob: -10.632987022399902
    8. '(
' → logprob: -10.757987022399902
    9. ',' → logprob: -11.007987022399902
    10. '(Sub' → logprob: -11.632987022399902

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014913184568285942
    2. ',a' → logprob: -4.514913082122803
    3. ',b' → logprob: -5.639913082122803
    4. ' ,' → logprob: -8.264913558959961
    5. ',
' → logprob: -11.389913558959961
    6. 'a' → logprob: -11.389913558959961
    7. ',x' → logprob: -12.639913558959961
    8. ',(' → logprob: -12.639913558959961
    9. 'b' → logprob: -13.514913558959961
    10. ',

' → logprob: -13.639913558959961

Token 40: ' a' (ID: 261)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.10859298706054688
    2. ' a' → logprob: -2.733592987060547
    3. 'b' → logprob: -3.358592987060547
    4. 'a' → logprob: -5.858592987060547
    5. ' [' → logprob: -9.483592987060547
    6. '[a' → logprob: -9.733592987060547
    7. '[b' → logprob: -10.108592987060547
    8. ')' → logprob: -10.858592987060547
    9. '[' → logprob: -10.858592987060547
    10. ')b' → logprob: -10.983592987060547

Token 41: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008506310172379017
    2. ',b' → logprob: -5.1335062980651855
    3. ' ,' → logprob: -6.2585062980651855
    4. '-' → logprob: -7.8835062980651855
    5. ' -' → logprob: -8.633506774902344
    6. ')' → logprob: -9.633506774902344
    7. '-b' → logprob: -11.258506774902344
    8. ',
' → logprob: -12.258506774902344
    9. 'b' → logprob: -12.633506774902344
    10. ' ' → logprob: -12.758506774902344

Token 42: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.34846630692481995
    2. 'b' → logprob: -1.2234662771224976
    3. ')b' → logprob: -11.973465919494629
    4. '[' → logprob: -12.348465919494629
    5. ' ' → logprob: -12.473465919494629
    6. '[b' → logprob: -13.223465919494629
    7. '<|end|>' → logprob: -13.473465919494629
    8. ')' → logprob: -13.973465919494629
    9. '(b' → logprob: -14.598465919494629
    10. '['' → logprob: -14.723465919494629

Token 43: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000839046377222985
    2. ')' → logprob: -7.1258392333984375
    3. ')))' → logprob: -10.750839233398438
    4. '))
' → logprob: -11.500839233398438
    5. ' ))' → logprob: -13.000839233398438
    6. '),' → logprob: -15.125839233398438
    7. '))

' → logprob: -16.250839233398438
    8. ')
' → logprob: -16.500839233398438
    9. ' ' → logprob: -16.875839233398438
    10. ',' → logprob: -17.125839233398438


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 41
Tokens correctement prédits (1ère position, stricte): 11
Tokens correctement prédits (1ère position, avec adaptation): 11
Tokens correctement prédits (top 10): 21
Précision stricte (1ère position): 26.83%
Précision adaptée (1ère position): 26.83%
Précision (top 10): 51.22%
================================================================================
