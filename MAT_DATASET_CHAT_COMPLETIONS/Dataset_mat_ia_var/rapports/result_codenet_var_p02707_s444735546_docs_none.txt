================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    N = int(input())
    A_list = list(map(int, input().split()))
    SV = [0 for i in range(N)]
    for i in A_list:
        SV[i-1] += 1
    for i in SV:
        print(i)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2743290662765503
    2. '\n' → logprob: -1.7743290662765503
    3. '   ' → logprob: -3.52432918548584
    4. '(' → logprob: -4.39932918548584
    5. ' 
' → logprob: -5.14932918548584
    6. '    
' → logprob: -5.27432918548584
    7. ' ' → logprob: -5.52432918548584
    8. ''' → logprob: -5.64932918548584
    9. '    ' → logprob: -6.39932918548584
    10. '```' → logprob: -6.39932918548584

Token 4: ' N' (ID: 478)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5992159247398376
    2. '   ' → logprob: -1.4742159843444824
    3. 'pass' → logprob: -2.0992159843444824
    4. 'return' → logprob: -2.8492159843444824
    5. '#' → logprob: -4.224215984344482
    6. 'p' → logprob: -5.224215984344482
    7. '```' → logprob: -5.724215984344482
    8. 'r' → logprob: -5.724215984344482
    9. 'a' → logprob: -5.974215984344482
    10. '\' → logprob: -5.974215984344482

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5315092206001282
    2. ' =' → logprob: -1.2815091609954834
    3. '_' → logprob: -2.1565091609954834
    4. ')' → logprob: -5.5315093994140625
    5. ' ' → logprob: -5.5315093994140625
    6. '.' → logprob: -5.7815093994140625
    7. '   ' → logprob: -5.9065093994140625
    8. ',' → logprob: -5.9065093994140625
    9. '  ' → logprob: -7.4065093994140625
    10. 'u' → logprob: -7.6565093994140625

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.12677279114723206
    2. ' ' → logprob: -2.251772880554199
    3. 'int' → logprob: -4.501772880554199
    4. '10' → logprob: -6.126772880554199
    5. ' input' → logprob: -8.5017728805542
    6. '0' → logprob: -9.1267728805542
    7. '5' → logprob: -9.2517728805542
    8. '20' → logprob: -9.8767728805542
    9. 'input' → logprob: -10.6267728805542
    10. '=int' → logprob: -11.1267728805542

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008271370315924287
    2. '(input' → logprob: -7.750827312469482
    3. '('' → logprob: -8.375826835632324
    4. '```' → logprob: -9.875826835632324
    5. ''' → logprob: -10.375826835632324
    6. ' (' → logprob: -11.125826835632324
    7. '()' → logprob: -11.625826835632324
    8. '(`' → logprob: -11.750826835632324
    9. 'input' → logprob: -11.875826835632324
    10. '`' → logprob: -12.000826835632324

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3121808171272278
    2. '()' → logprob: -1.937180757522583
    3. ')' → logprob: -2.687180757522583
    4. '())' → logprob: -3.062180757522583
    5. '('' → logprob: -5.562180995941162
    6. '))' → logprob: -6.187180995941162
    7. '()))' → logprob: -6.437180995941162
    8. '(""))' → logprob: -7.687180995941162
    9. '(
' → logprob: -8.312180519104004
    10. '("("' → logprob: -9.062180519104004

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10819710791110992
    2. 'for' → logprob: -3.7331972122192383
    3. '    
' → logprob: -4.233197212219238
    4. '\' → logprob: -4.483197212219238
    5. '```' → logprob: -4.608197212219238
    6. ' for' → logprob: -4.733197212219238
    7. '\n' → logprob: -4.733197212219238
    8. '`' → logprob: -5.108197212219238
    9. ')' → logprob: -5.358197212219238
    10. 'if' → logprob: -6.108197212219238

Token 10: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7490378618240356
    2. 'for' → logprob: -1.7490378618240356
    3. 'i' → logprob: -1.9990378618240356
    4. ' for' → logprob: -2.624037742614746
    5. 'if' → logprob: -2.999037742614746
    6. 's' → logprob: -3.249037742614746
    7. ' ' → logprob: -3.374037742614746
    8. 'n' → logprob: -3.374037742614746
    9. '```' → logprob: -3.374037742614746
    10. ''' → logprob: -3.499037742614746

Token 11: '_list' (ID: 4162)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014872431056573987
    2. '[]' → logprob: -7.0014872550964355
    3. '[:]' → logprob: -8.376486778259277
    4. '[i' → logprob: -9.126486778259277
    5. '=' → logprob: -9.876486778259277
    6. '.' → logprob: -10.001486778259277
    7. ')' → logprob: -10.876486778259277
    8. '[A' → logprob: -11.001486778259277
    9. '[...]' → logprob: -11.126486778259277
    10. '\[' → logprob: -11.376486778259277

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2644754946231842
    2. ' =' → logprob: -1.6394754648208618
    3. '.' → logprob: -4.264475345611572
    4. '=' → logprob: -4.514475345611572
    5. '[:]' → logprob: -5.139475345611572
    6. '.append' → logprob: -5.639475345611572
    7. ')' → logprob: -6.639475345611572
    8. '[]' → logprob: -7.014475345611572
    9. '_' → logprob: -7.514475345611572
    10. '.setdefault' → logprob: -8.51447582244873

Token 13: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.20043960213661194
    2. 'list' → logprob: -2.200439691543579
    3. ' []' → logprob: -2.950439691543579
    4. ' [' → logprob: -4.450439453125
    5. '[]' → logprob: -5.200439453125
    6. '[list' → logprob: -7.450439453125
    7. '[' → logprob: -8.075439453125
    8. '[input' → logprob: -8.325439453125
    9. ' ' → logprob: -9.325439453125
    10. ' input' → logprob: -9.575439453125

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014365430688485503
    2. '(range' → logprob: -7.001436710357666
    3. '(input' → logprob: -7.876436710357666
    4. '(int' → logprob: -10.251436233520508
    5. '(eval' → logprob: -10.876436233520508
    6. '(
' → logprob: -11.126436233520508
    7. '("("' → logprob: -11.626436233520508
    8. '(user' → logprob: -12.626436233520508
    9. '(`' → logprob: -12.626436233520508
    10. '(

' → logprob: -12.626436233520508

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2516794204711914
    2. '(' → logprob: -1.6266794204711914
    3. '(lambda' → logprob: -4.001679420471191
    4. '(str' → logprob: -5.001679420471191
    5. '(input' → logprob: -7.751679420471191
    6. ')' → logprob: -8.626679420471191
    7. '(
' → logprob: -9.501679420471191
    8. ' (' → logprob: -9.751679420471191
    9. '(eval' → logprob: -9.876679420471191
    10. 'int' → logprob: -11.126679420471191

Token 16: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.061733707785606384
    2. ',input' → logprob: -3.5617337226867676
    3. '(' → logprob: -4.061733722686768
    4. ',' → logprob: -4.436733722686768
    5. '))' → logprob: -6.436733722686768
    6. 'input' → logprob: -8.68673324584961
    7. ' ,' → logprob: -9.18673324584961
    8. ')' → logprob: -9.43673324584961
    9. '<|end|>' → logprob: -9.43673324584961
    10. '=input' → logprob: -9.68673324584961

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.693622887134552
    2. ' input' → logprob: -0.693622887134552
    3. '(input' → logprob: -7.693623065948486
    4. ',input' → logprob: -11.443622589111328
    5. ')' → logprob: -12.318622589111328
    6. '=input' → logprob: -12.943622589111328
    7. '))' → logprob: -14.568622589111328
    8. '	input' → logprob: -14.693622589111328
    9. '_input' → logprob: -15.068622589111328
    10. '[input' → logprob: -15.193622589111328

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.18899427354335785
    2. '()' → logprob: -2.4389941692352295
    3. '()))' → logprob: -2.5639941692352295
    4. '())' → logprob: -5.063994407653809
    5. '())))' → logprob: -7.063994407653809
    6. '()));' → logprob: -7.563994407653809
    7. '()>' → logprob: -9.063994407653809
    8. '(' → logprob: -10.688994407653809
    9. '))' → logprob: -10.688994407653809
    10. ')' → logprob: -11.313994407653809

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016158436483237892
    2. 'strip' → logprob: -8.750161170959473
    3. 'rstrip' → logprob: -12.750161170959473
    4. ' split' → logprob: -15.750161170959473
    5. '(split' → logprob: -16.87516212463379
    6. 'spl' → logprob: -17.12516212463379
    7. ')' → logprob: -19.62516212463379
    8. 'sp' → logprob: -19.62516212463379
    9. 's' → logprob: -19.87516212463379
    10. '.split' → logprob: -21.37516212463379

Token 20: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.44439247250556946
    2. ')' → logprob: -1.069392442703247
    3. '()))' → logprob: -4.569392681121826
    4. '(' → logprob: -5.694392681121826
    5. '())' → logprob: -7.069392681121826
    6. ')))' → logprob: -7.444392681121826
    7. '()' → logprob: -7.944392681121826
    8. ''))' → logprob: -11.569392204284668
    9. '(
' → logprob: -12.069392204284668
    10. '())))' → logprob: -12.444392204284668

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10501386225223541
    2. ')' → logprob: -3.730013847351074
    3. '    
' → logprob: -3.730013847351074
    4. '```' → logprob: -3.855013847351074
    5. '
' → logprob: -3.980013847351074
    6. '    ' → logprob: -6.355013847351074
    7. '`' → logprob: -6.730013847351074
    8. ' for' → logprob: -6.730013847351074
    9. 'for' → logprob: -6.980013847351074
    10. '' → logprob: -6.980013847351074

Token 22: ' SV' (ID: 28049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44652271270751953
    2. 'for' → logprob: -1.4465227127075195
    3. ' for' → logprob: -2.9465227127075195
    4. 'sum' → logprob: -4.1965227127075195
    5. 'n' → logprob: -4.8215227127075195
    6. ')' → logprob: -4.9465227127075195
    7. 'i' → logprob: -5.0715227127075195
    8. 'r' → logprob: -5.1965227127075195
    9. 's' → logprob: -5.1965227127075195
    10. '```' → logprob: -5.4465227127075195

Token 23: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.141033411026001
    2. ' =' → logprob: -1.141033411026001
    3. '=' → logprob: -1.891033411026001
    4. '_sum' → logprob: -2.766033411026001
    5. 'um' → logprob: -4.016033172607422
    6. 'S' → logprob: -4.141033172607422
    7. '[' → logprob: -4.266033172607422
    8. '=[]' → logprob: -4.266033172607422
    9. '_list' → logprob: -4.516033172607422
    10. '_count' → logprob: -5.141033172607422

Token 24: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4634714126586914
    2. ' sum' → logprob: -1.5884714126586914
    3. 'sum' → logprob: -1.9634714126586914
    4. ' [' → logprob: -2.0884714126586914
    5. ' []' → logprob: -2.0884714126586914
    6. ' ' → logprob: -3.2134714126586914
    7. '[]' → logprob: -3.3384714126586914
    8. '[' → logprob: -4.088471412658691
    9. ' {}' → logprob: -4.088471412658691
    10. ' A' → logprob: -4.213471412658691

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016720877029001713
    2. '(' → logprob: -7.751672267913818
    3. 'A' → logprob: -7.876672267913818
    4. ' ' → logprob: -8.12667179107666
    5. '[' → logprob: -9.12667179107666
    6. '-' → logprob: -9.37667179107666
    7. '1' → logprob: -9.37667179107666
    8. '   ' → logprob: -9.87667179107666
    9. 'False' → logprob: -9.87667179107666
    10. ']' → logprob: -10.00167179107666

Token 26: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010277632623910904
    2. ',' → logprob: -4.76027774810791
    3. ' ]' → logprob: -7.51027774810791
    4. '])' → logprob: -7.76027774810791
    5. ')' → logprob: -8.13527774810791
    6. ')]' → logprob: -8.63527774810791
    7. ']*' → logprob: -9.13527774810791
    8. ']*(' → logprob: -10.01027774810791
    9. ' for' → logprob: -10.38527774810791
    10. ']+' → logprob: -11.63527774810791

Token 27: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40572306513786316
    2. ' _' → logprob: -1.1557230949401855
    3. ' i' → logprob: -4.4057230949401855
    4. 'i' → logprob: -5.9057230949401855
    5. ' in' → logprob: -6.5307230949401855
    6. ' range' → logprob: -7.5307230949401855
    7. 'range' → logprob: -7.5307230949401855
    8. '_range' → logprob: -7.5307230949401855
    9. '_i' → logprob: -8.280722618103027
    10. ' ' → logprob: -8.530722618103027

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009827514179050922
    2. 'in' → logprob: -4.759827613830566
    3. ' range' → logprob: -7.509827613830566
    4. 'range' → logprob: -7.634827613830566
    5. ' ' → logprob: -9.259827613830566
    6. '(' → logprob: -10.634827613830566
    7. '(range' → logprob: -10.759827613830566
    8. ')' → logprob: -10.884827613830566
    9. ' )' → logprob: -12.384827613830566
    10. '	range' → logprob: -12.759827613830566

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1602308303117752
    2. 'range' → logprob: -1.9102308750152588
    3. '	range' → logprob: -12.28523063659668
    4. '(range' → logprob: -13.66023063659668
    5. 'A' → logprob: -15.16023063659668
    6. ' ' → logprob: -15.41023063659668
    7. ' xrange' → logprob: -16.03523063659668
    8. '_range' → logprob: -16.41023063659668
    9. ' A' → logprob: -16.91023063659668
    10. '.range' → logprob: -17.16023063659668

Token 30: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.027704188600182533
    2. '(' → logprob: -3.6527042388916016
    3. '(len' → logprob: -6.652704238891602
    4. ' (' → logprob: -9.652704238891602
    5. '(n' → logprob: -10.277704238891602
    6. ')' → logprob: -12.777704238891602
    7. '(s' → logprob: -13.277704238891602
    8. '(S' → logprob: -13.402704238891602
    9. '((' → logprob: -13.777704238891602
    10. '(A' → logprob: -13.902704238891602

Token 31: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000523246475495398
    2. ')])' → logprob: -7.875523090362549
    3. '+' → logprob: -10.000523567199707
    4. ')' → logprob: -10.375523567199707
    5. ' )' → logprob: -10.500523567199707
    6. '])]' → logprob: -10.625523567199707
    7. '   ' → logprob: -12.500523567199707
    8. ')]
' → logprob: -13.250523567199707
    9. '))' → logprob: -13.250523567199707
    10. ']' → logprob: -13.250523567199707

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7136738300323486
    2. '
' → logprob: -1.2136738300323486
    3. ' for' → logprob: -2.7136738300323486
    4. ' 
' → logprob: -2.8386738300323486
    5. 'for' → logprob: -2.9636738300323486
    6. '    
' → logprob: -4.5886735916137695
    7. '  
' → logprob: -5.0886735916137695
    8. ' ' → logprob: -5.2136735916137695
    9. '<|end|>' → logprob: -5.5886735916137695
    10. 's' → logprob: -6.3386735916137695

Token 33: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7462822794914246
    2. ' for' → logprob: -1.2462823390960693
    3. '   ' → logprob: -1.8712823390960693
    4. ' ' → logprob: -2.8712823390960693
    5. '
' → logprob: -4.74628210067749
    6. ' 
' → logprob: -4.87128210067749
    7. '```' → logprob: -6.12128210067749
    8. 's' → logprob: -6.49628210067749
    9. '\n' → logprob: -6.87128210067749
    10. '	for' → logprob: -6.99628210067749

Token 34: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03089427389204502
    2. ' ' → logprob: -3.5308942794799805
    3. 'i' → logprob: -7.0308942794799805
    4. '  ' → logprob: -9.15589427947998
    5. '_' → logprob: -9.28089427947998
    6. ' _' → logprob: -10.65589427947998
    7. ' ‌' → logprob: -11.53089427947998
    8. ' ' → logprob: -12.03089427947998
    9. ' in' → logprob: -13.03089427947998
    10. '	i' → logprob: -13.40589427947998

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0070852297358214855
    2. 'in' → logprob: -5.00708532333374
    3. ' ' → logprob: -8.007084846496582
    4. '  ' → logprob: -11.257084846496582
    5. '	in' → logprob: -12.132084846496582
    6. '<|end|>' → logprob: -12.132084846496582
    7. '+' → logprob: -12.632084846496582
    8. ' i' → logprob: -12.632084846496582
    9. ')' → logprob: -14.444584846496582
    10. '1' → logprob: -14.507084846496582

Token 36: ' A' (ID: 355)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00024989593657664955
    2. 'range' → logprob: -8.375249862670898
    3. ' ' → logprob: -11.000249862670898
    4. '	range' → logprob: -13.250249862670898
    5. ' xrange' → logprob: -14.750249862670898
    6. '(range' → logprob: -16.1252498626709
    7. '  ' → logprob: -16.2502498626709
    8. ' ran' → logprob: -16.5002498626709
    9. ')' → logprob: -16.7502498626709
    10. ' space' → logprob: -17.3752498626709

Token 37: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0015921075828373432
    2. '_' → logprob: -6.62659215927124
    3. ' _' → logprob: -9.876591682434082
    4. '[' → logprob: -10.126591682434082
    5. '[i' → logprob: -10.751591682434082
    6. '_s' → logprob: -10.751591682434082
    7. '_lst' → logprob: -10.876591682434082
    8. '[_' → logprob: -11.126591682434082
    9. '_l' → logprob: -11.251591682434082
    10. '_i' → logprob: -11.376591682434082

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0694403201341629
    2. ' :' → logprob: -3.1944403648376465
    3. 'in' → logprob: -4.0694403648376465
    4. ' in' → logprob: -4.8194403648376465
    5. ' ' → logprob: -8.069439888000488
    6. '[' → logprob: -8.819439888000488
    7. ',' → logprob: -9.319439888000488
    8. '  ' → logprob: -9.944439888000488
    9. '.' → logprob: -10.069439888000488
    10. '[:]' → logprob: -10.569439888000488

Token 39: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36894696950912476
    2. '    ' → logprob: -2.1189470291137695
    3. '   ' → logprob: -2.3689470291137695
    4. ' ' → logprob: -2.7439470291137695
    5. '       ' → logprob: -4.7439470291137695
    6. '<|end|>' → logprob: -5.1189470291137695
    7. '[' → logprob: -5.6189470291137695
    8. '+' → logprob: -5.8689470291137695
    9. ' :' → logprob: -6.3689470291137695
    10. '  ' → logprob: -6.4939470291137695

Token 40: ' SV' (ID: 28049)
  Prédit: ' SV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' SV' → logprob: -0.04215976595878601
    2. 'SV' (adapté à ' SV') → logprob: -3.7921597957611084
    3. '   ' → logprob: -4.792159557342529
    4. '    ' → logprob: -5.542159557342529
    5. ' ' → logprob: -5.667159557342529
    6. ' if' → logprob: -6.792159557342529
    7. ' S' → logprob: -8.667160034179688
    8. '[' → logprob: -8.792160034179688
    9. '(S' → logprob: -8.917160034179688
    10. ' ]' → logprob: -9.292160034179688

Token 41: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15697740018367767
    2. '[S' → logprob: -2.156977415084839
    3. '[i' → logprob: -3.531977415084839
    4. '[A' → logprob: -8.531977653503418
    5. '[V' → logprob: -9.781977653503418
    6. '[int' → logprob: -10.031977653503418
    7. '[I' → logprob: -11.031977653503418
    8. '[...]' → logprob: -11.781977653503418
    9. '[B' → logprob: -12.156977653503418
    10. '[s' → logprob: -12.281977653503418

Token 42: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010852797888219357
    2. ']+=' → logprob: -4.635852813720703
    3. ' ]' → logprob: -7.635852813720703
    4. '-' → logprob: -7.635852813720703
    5. '+' → logprob: -9.760852813720703
    6. '[' → logprob: -10.260852813720703
    7. ']+' → logprob: -11.760852813720703
    8. ' -' → logprob: -11.760852813720703
    9. '+=' → logprob: -12.510852813720703
    10. ']]' → logprob: -12.635852813720703

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.198043699143454e-05
    2. ']' → logprob: -9.500091552734375
    3. ' ' → logprob: -11.250091552734375
    4. '<|end|>' → logprob: -13.500091552734375
    5. ']+=' → logprob: -13.875091552734375
    6. ']>' → logprob: -15.125091552734375
    7. '0' → logprob: -15.250091552734375
    8. '-' → logprob: -15.250091552734375
    9. '2' → logprob: -15.375091552734375
    10. '   ' → logprob: -15.625091552734375

Token 44: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4925921559333801
    2. ']+=' → logprob: -1.1175920963287354
    3. '+=' → logprob: -3.1175920963287354
    4. ' +=' → logprob: -4.9925923347473145
    5. ' ]' → logprob: -5.2425923347473145
    6. '+' → logprob: -5.2425923347473145
    7. '+]' → logprob: -9.492591857910156
    8. '=' → logprob: -9.617591857910156
    9. '[' → logprob: -9.992591857910156
    10. ']=' → logprob: -10.367591857910156

Token 45: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008195385336875916
    2. '=' → logprob: -5.508195400238037
    3. ' +=' → logprob: -5.508195400238037
    4. ']+=' → logprob: -9.883194923400879
    5. '+' → logprob: -12.883194923400879
    6. ' =' → logprob: -14.383194923400879
    7. '+='' → logprob: -14.883194923400879
    8. '+=(' → logprob: -15.258194923400879
    9. '-=' → logprob: -16.883195877075195
    10. '+="' → logprob: -17.133195877075195

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014299227041192353
    2. ' ' → logprob: -8.875143051147461
    3. '   ' → logprob: -13.750143051147461
    4. 'i' → logprob: -14.625143051147461
    5. '<|end|>' → logprob: -14.625143051147461
    6. '2' → logprob: -14.875143051147461
    7. '10' → logprob: -15.250143051147461
    8. '  ' → logprob: -15.875143051147461
    9. '100' → logprob: -16.68764305114746
    10. '3' → logprob: -16.93764305114746

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.500031471252441
    3. 'i' → logprob: -12.750031471252441
    4. '2' → logprob: -15.125031471252441
    5. '   ' → logprob: -15.500031471252441
    6. '10' → logprob: -15.750031471252441
    7. ' i' → logprob: -15.875031471252441
    8. '<|end|>' → logprob: -16.000032424926758
    9. '  ' → logprob: -16.562532424926758
    10. '100' → logprob: -16.812532424926758

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1348745822906494
    2. '<|end|>' → logprob: -1.1348745822906494
    3. '\n' → logprob: -1.2598745822906494
    4. '   ' → logprob: -3.8848745822906494
    5. ')' → logprob: -4.50987434387207
    6. '#' → logprob: -4.50987434387207
    7. '```' → logprob: -4.50987434387207
    8. '\' → logprob: -4.88487434387207
    9. ' ' → logprob: -5.50987434387207
    10. '\r' → logprob: -6.50987434387207

Token 49: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.206740140914917
    2. '   ' → logprob: -1.581740140914917
    3. '<|end|>' → logprob: -1.956740140914917
    4. ' ' → logprob: -2.081740140914917
    5. '
' → logprob: -2.206740140914917
    6. '```' → logprob: -3.206740140914917
    7. ' 
' → logprob: -3.831740140914917
    8. '    
' → logprob: -4.206740379333496
    9. ')' → logprob: -4.581740379333496
    10. '  
' → logprob: -4.581740379333496

Token 50: ' for' (ID: 395)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4683589041233063
    2. ' ' → logprob: -1.7183588743209839
    3. '   ' → logprob: -2.4683589935302734
    4. ' 
' → logprob: -3.5933589935302734
    5. '
' → logprob: -4.218358993530273
    6. '\' → logprob: -4.468358993530273
    7. '<|end|>' → logprob: -4.718358993530273
    8. ')' → logprob: -4.843358993530273
    9. '  
' → logprob: -5.218358993530273
    10. '[' → logprob: -5.218358993530273

Token 51: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03454921022057533
    2. ' _' → logprob: -4.659549236297607
    3. ' ' → logprob: -5.034549236297607
    4. ' v' → logprob: -5.034549236297607
    5. ' s' → logprob: -6.034549236297607
    6. 'i' → logprob: -6.159549236297607
    7. ' SV' → logprob: -6.409549236297607
    8. '_' → logprob: -6.534549236297607
    9. ' x' → logprob: -7.034549236297607
    10. ' j' → logprob: -7.534549236297607

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006225021090358496
    2. 'in' → logprob: -5.631225109100342
    3. ' ' → logprob: -6.006225109100342
    4. '  ' → logprob: -9.381224632263184
    5. ',' → logprob: -11.131224632263184
    6. 'range' → logprob: -11.256224632263184
    7. '_' → logprob: -11.631224632263184
    8. '	in' → logprob: -11.881224632263184
    9. ' ' → logprob: -12.006224632263184
    10. ' range' → logprob: -12.131224632263184

Token 53: ' SV' (ID: 28049)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10047192126512527
    2. 'range' → logprob: -2.3504719734191895
    3. ' SV' → logprob: -8.600471496582031
    4. 'SV' → logprob: -9.975471496582031
    5. ' ' → logprob: -11.975471496582031
    6. '(range' → logprob: -12.100471496582031
    7. 'Range' → logprob: -12.350471496582031
    8. '	range' → logprob: -12.787971496582031
    9. '  ' → logprob: -12.975471496582031
    10. ' ran' → logprob: -13.162971496582031

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.995397365652025e-05
    2. ' :' → logprob: -10.500089645385742
    3. ' in' → logprob: -10.625089645385742
    4. ',' → logprob: -11.875089645385742
    5. ':
' → logprob: -11.875089645385742
    6. 'in' → logprob: -12.000089645385742
    7. '):' → logprob: -12.500089645385742
    8. 'print' → logprob: -12.625089645385742
    9. ':**' → logprob: -12.625089645385742
    10. '>' → logprob: -12.875089645385742

Token 55: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03025614097714424
    2. ' print' → logprob: -4.905256271362305
    3. '\n' → logprob: -5.280256271362305
    4. ' ' → logprob: -5.780256271362305
    5. ' 
' → logprob: -5.780256271362305
    6. '    
' → logprob: -5.780256271362305
    7. '       ' → logprob: -5.780256271362305
    8. 'print' → logprob: -5.905256271362305
    9. '    ' → logprob: -7.030256271362305
    10. '\' → logprob: -7.655256271362305

Token 56: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6938117742538452
    2. ' print' → logprob: -0.6938117742538452
    3. '   ' → logprob: -7.568811893463135
    4. ' if' → logprob: -9.193811416625977
    5. 'if' → logprob: -10.943811416625977
    6. '    ' → logprob: -10.943811416625977
    7. ' ' → logprob: -13.068811416625977
    8. '       ' → logprob: -13.068811416625977
    9. '	print' → logprob: -13.068811416625977
    10. '```' → logprob: -13.443811416625977

Token 57: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.048589982092380524
    2. '(' → logprob: -3.0485899448394775
    3. '((' → logprob: -14.048589706420898
    4. '(f' → logprob: -14.423589706420898
    5. ' (' → logprob: -15.173589706420898
    6. '()' → logprob: -15.548589706420898
    7. '(
' → logprob: -15.548589706420898
    8. '("("' → logprob: -15.798589706420898
    9. '('' → logprob: -15.923589706420898
    10. '(`' → logprob: -16.6735897064209

Token 58: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. ')
' → logprob: -13.250004768371582
    3. ' )' → logprob: -13.625004768371582
    4. '()' → logprob: -14.500004768371582
    5. '))' → logprob: -14.875004768371582
    6. ')`' → logprob: -15.000004768371582
    7. '')' → logprob: -16.875003814697266
    8. '())' → logprob: -16.875003814697266
    9. '`)' → logprob: -17.000003814697266
    10. ',' → logprob: -17.000003814697266

Token 59: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.021231282502412796
    2. ' ' → logprob: -4.271231174468994
    3. ' ' → logprob: -5.646231174468994
    4. '__' → logprob: -6.021231174468994
    5. '_' → logprob: -7.021231174468994
    6. ' _' → logprob: -9.646231651306152
    7. ' ​' → logprob: -10.396231651306152
    8. '  ' → logprob: -10.771231651306152
    9. ' ‌' → logprob: -10.896231651306152
    10. ' ﻿' → logprob: -11.396231651306152

Token 61: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.010264179669320583
    2. ' ==' → logprob: -5.3852643966674805
    3. ' __' → logprob: -5.3852643966674805
    4. '_' → logprob: -7.0102643966674805
    5. '==' → logprob: -10.01026439666748
    6. ' _' → logprob: -11.26026439666748
    7. ' .' → logprob: -11.38526439666748
    8. '___' → logprob: -11.38526439666748
    9. '__.__' → logprob: -11.51026439666748
    10. '__.' → logprob: -11.88526439666748

Token 62: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0010987765854224563
    2. '__.__' → logprob: -7.7510986328125
    3. '___' → logprob: -8.6260986328125
    4. '_' → logprob: -8.8760986328125
    5. '__["' → logprob: -9.5010986328125
    6. '==' → logprob: -9.6260986328125
    7. '__.' → logprob: -9.7510986328125
    8. '__[' → logprob: -10.0010986328125
    9. '____' → logprob: -10.3760986328125
    10. '[' → logprob: -11.6260986328125

Token 63: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2750038802623749
    2. '__' → logprob: -1.5250039100646973
    3. '==' → logprob: -3.9000039100646973
    4. '=="' → logprob: -7.025003910064697
    5. '[' → logprob: -7.775003910064697
    6. '_' → logprob: -7.900003910064697
    7. '=='' → logprob: -8.900003433227539
    8. '"' → logprob: -9.150003433227539
    9. '.' → logprob: -9.525003433227539
    10. ' =="' → logprob: -9.525003433227539

Token 64: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.054941076785326004
    2. ''' → logprob: -2.929941177368164
    3. ' "' → logprob: -10.304941177368164
    4. ' "__' → logprob: -10.804941177368164
    5. '__' → logprob: -13.054941177368164
    6. ' '' → logprob: -13.679941177368164
    7. '"user' → logprob: -14.429941177368164
    8. ' '__' → logprob: -14.929941177368164
    9. '_' → logprob: -15.929941177368164
    10. '"name' → logprob: -16.054941177368164

Token 65: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01608986034989357
    2. '__' → logprob: -4.141089916229248
    3. '_main' → logprob: -10.64108943939209
    4. 'm' → logprob: -11.76608943939209
    5. 'py' → logprob: -12.76608943939209
    6. '___' → logprob: -12.89108943939209
    7. '__":
' → logprob: -13.01608943939209
    8. 'name' → logprob: -13.14108943939209
    9. ' main' → logprob: -13.14108943939209
    10. '_' → logprob: -13.26608943939209

Token 66: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3132854104042053
    2. '__":
' → logprob: -1.3132853507995605
    3. '__':
' → logprob: -11.938285827636719
    4. '__["' → logprob: -12.188285827636719
    5. '__.' → logprob: -12.438285827636719
    6. '__.__' → logprob: -12.688285827636719
    7. '__:' → logprob: -13.063285827636719
    8. '__("' → logprob: -13.688285827636719
    9. '_' → logprob: -14.188285827636719
    10. '__",' → logprob: -14.188285827636719

Token 67: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0009146820520982146
    2. '   ' → logprob: -8.000914573669434
    3. '	main' → logprob: -8.000914573669434
    4. 'main' → logprob: -8.750914573669434
    5. ' ' → logprob: -10.625914573669434
    6. '<|end|>' → logprob: -11.000914573669434
    7. ' ' → logprob: -11.250914573669434
    8. '(main' → logprob: -11.375914573669434
    9. '    
' → logprob: -12.250914573669434
    10. '_main' → logprob: -12.625914573669434

Token 68: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.026304252445697784
    2. 'main' (adapté à ' main') → logprob: -3.651304244995117
    3. '	main' → logprob: -12.776304244995117
    4. ' ma' → logprob: -14.401304244995117
    5. ' ' → logprob: -15.526304244995117
    6. ' ' → logprob: -16.026304244995117
    7. '(main' → logprob: -16.026304244995117
    8. ' m' → logprob: -16.651304244995117
    9. '_main' → logprob: -16.901304244995117
    10. '.main' → logprob: -17.151304244995117

Token 69: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002158146962756291
    2. '(' → logprob: -8.625215530395508
    3. '()
' → logprob: -10.500215530395508
    4. ' ()' → logprob: -12.500215530395508
    5. '()`' → logprob: -13.250215530395508
    6. '()

' → logprob: -14.500215530395508
    7. '(
' → logprob: -14.750215530395508
    8. '`()' → logprob: -14.750215530395508
    9. '()
' → logprob: -15.125215530395508
    10. ')' → logprob: -15.375215530395508


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 67
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 31
Tokens correctement prédits (top 10): 54
Précision stricte (1ère position): 43.28%
Précision adaptée (1ère position): 46.27%
Précision (top 10): 80.60%
================================================================================
