================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque
S=deque(input())
Q=int(input())
snt=1
for i in range(Q):
    inp=input().split()
    if inp[0]=="1":
        snt*=(-1)
    else:
        F=int(inp[1])
        C=inp[2]
        if (2*F-3)*snt>0:
            S.append(C)
        else:
            S.appendleft(C)
if snt==1:
    for i in range(len(S)):
        print(S.popleft(),end="")
    print()
else:
    for i in range(len(S)):
        print(S.pop(),end="")
    print()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.41044583916664124
    2. ' abc' → logprob: -1.9104458093643188
    3. 'deque' → logprob: -2.4104459285736084
    4. ' defaultdict' → logprob: -2.5354459285736084
    5. 'default' → logprob: -4.660445690155029
    6. ' deque' → logprob: -6.035445690155029
    7. 'Counter' → logprob: -6.160445690155029
    8. '```' → logprob: -6.160445690155029
    9. ' Counter' → logprob: -6.660445690155029
    10. ' named' → logprob: -7.035445690155029

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12134145945310593
    2. '\' → logprob: -3.2463414669036865
    3. '.' → logprob: -3.4963414669036865
    4. '\n' → logprob: -4.496341228485107
    5. 'newline' → logprob: -5.121341228485107
    6. '```' → logprob: -5.246341228485107
    7. '[' → logprob: -5.246341228485107
    8. 'import' → logprob: -5.746341228485107
    9. '\(' → logprob: -5.871341228485107
    10. ',' → logprob: -5.996341228485107

Token 5: 'S' (ID: 50)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.177742600440979
    2. '.' → logprob: -3.1777424812316895
    3. 'd' → logprob: -3.3027424812316895
    4. '[' → logprob: -4.3027424812316895
    5. 'a' → logprob: -4.3027424812316895
    6. '\' → logprob: -4.3027424812316895
    7. '\n' → logprob: -4.4277424812316895
    8. ',' → logprob: -5.1777424812316895
    9. '```' → logprob: -5.1777424812316895
    10. 'newline' → logprob: -5.5527424812316895

Token 6: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6392456889152527
    2. '.' → logprob: -1.3892457485198975
    3. '=' → logprob: -1.6392457485198975
    4. '(' → logprob: -4.764245510101318
    5. '[' → logprob: -5.389245510101318
    6. ' ' → logprob: -5.389245510101318
    7. 'tring' → logprob: -5.514245510101318
    8. ',' → logprob: -6.139245510101318
    9. 't' → logprob: -7.264245510101318
    10. 'T' → logprob: -7.389245510101318

Token 7: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.013167761266231537
    2. '"' → logprob: -5.638167858123779
    3. ' deque' → logprob: -5.638167858123779
    4. 'de' → logprob: -5.638167858123779
    5. '""' → logprob: -7.138167858123779
    6. '[]' → logprob: -7.888167858123779
    7. ' []' → logprob: -8.263167381286621
    8. '''' → logprob: -8.263167381286621
    9. 'set' → logprob: -8.513167381286621
    10. ' ' → logprob: -8.638167381286621

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011968977050855756
    2. '([' → logprob: -7.75119686126709
    3. '()' → logprob: -8.12619686126709
    4. '([]' → logprob: -8.87619686126709
    5. '((' → logprob: -9.12619686126709
    6. '(S' → logprob: -9.25119686126709
    7. '([(' → logprob: -10.37619686126709
    8. '[' → logprob: -10.62619686126709
    9. '[(' → logprob: -11.12619686126709
    10. '('' → logprob: -11.62619686126709

Token 9: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.11619077622890472
    2. ')' → logprob: -2.8661906719207764
    3. '(' → logprob: -3.2411906719207764
    4. '()' → logprob: -4.3661909103393555
    5. '))' → logprob: -7.7411909103393555
    6. '()))' → logprob: -8.366190910339355
    7. ' ())' → logprob: -9.116190910339355
    8. '('' → logprob: -9.241190910339355
    9. '().' → logprob: -11.491190910339355
    10. '')' → logprob: -11.491190910339355

Token 10: 'Q' (ID: 48)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08443966507911682
    2. ')' → logprob: -3.459439754486084
    3. '.pop' → logprob: -4.334439754486084
    4. '.reverse' → logprob: -4.584439754486084
    5. '()' → logprob: -4.709439754486084
    6. '(' → logprob: -5.209439754486084
    7. '[' → logprob: -5.709439754486084
    8. '[::-' → logprob: -5.834439754486084
    9. '.append' → logprob: -6.084439754486084
    10. 'while' → logprob: -7.459439754486084

Token 11: '=int' (ID: 37431)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.25448042154312134
    2. '=' → logprob: -1.6294803619384766
    3. ' =' → logprob: -4.004480361938477
    4. '[' → logprob: -5.004480361938477
    5. '.append' → logprob: -6.754480361938477
    6. ' .' → logprob: -7.504480361938477
    7. ' ' → logprob: -7.504480361938477
    8. '=int' → logprob: -8.254480361938477
    9. '(' → logprob: -8.629480361938477
    10. '=[]' → logprob: -8.754480361938477

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03498729318380356
    2. '(input' → logprob: -3.534987211227417
    3. '('' → logprob: -5.409987449645996
    4. '()' → logprob: -8.034987449645996
    5. '(
' → logprob: -8.909987449645996
    6. '("("' → logprob: -9.284987449645996
    7. '("' → logprob: -10.159987449645996
    8. ''' → logprob: -10.409987449645996
    9. 'input' → logprob: -10.409987449645996
    10. '(`' → logprob: -10.534987449645996

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.24674978852272034
    2. '()' → logprob: -1.746749758720398
    3. ')' → logprob: -3.1217498779296875
    4. '(' → logprob: -9.121749877929688
    5. ' ())' → logprob: -9.746749877929688
    6. '`)' → logprob: -10.121749877929688
    7. '())
' → logprob: -11.496749877929688
    8. '().' → logprob: -12.246749877929688
    9. ' )' → logprob: -12.746749877929688
    10. '();)' → logprob: -12.871749877929688

Token 14: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021244358271360397
    2. ' for' → logprob: -4.021244525909424
    3. '\n' → logprob: -6.146244525909424
    4. '```' → logprob: -8.021244049072266
    5. '\' → logprob: -8.271244049072266
    6. '
' → logprob: -9.396244049072266
    7. '' → logprob: -9.396244049072266
    8. ' ' → logprob: -10.146244049072266
    9. '[' → logprob: -10.146244049072266
    10. '.for' → logprob: -10.271244049072266

Token 15: 'nt' (ID: 578)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011202137917280197
    2. '=' → logprob: -5.761202335357666
    3. 'um' → logprob: -5.886202335357666
    4. '.=' → logprob: -6.636202335357666
    5. ' =' → logprob: -6.886202335357666
    6. '.append' → logprob: -7.511202335357666
    7. 'u' → logprob: -7.761202335357666
    8. '.)' → logprob: -8.386201858520508
    9. '[' → logprob: -8.386201858520508
    10. ')' → logprob: -8.636201858520508

Token 16: '=' (ID: 28)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20250210165977478
    2. '=' → logprob: -2.8275020122528076
    3. 's' → logprob: -2.9525020122528076
    4. ' =' → logprob: -2.9525020122528076
    5. '.append' → logprob: -5.827502250671387
    6. '=[]' → logprob: -5.952502250671387
    7. 'ring' → logprob: -6.077502250671387
    8. '=input' → logprob: -6.577502250671387
    9. 'a' → logprob: -6.702502250671387
    10. '.=' → logprob: -7.077502250671387

Token 17: '1' (ID: 16)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.023501992225647
    2. '''' → logprob: -1.398501992225647
    3. '[]' → logprob: -1.648501992225647
    4. '""' → logprob: -2.0235018730163574
    5. '"' → logprob: -4.023501873016357
    6. 's' → logprob: -4.273501873016357
    7. 'list' → logprob: -4.898501873016357
    8. 'Q' → logprob: -5.023501873016357
    9. ''' → logprob: -5.398501873016357
    10. 'input' → logprob: -5.648501873016357

Token 18: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015224243514239788
    2. '<|end|>' → logprob: -4.765224456787109
    3. '+' → logprob: -6.640224456787109
    4. '0' → logprob: -6.765224456787109
    5. 'for' → logprob: -6.765224456787109
    6. ')' → logprob: -7.515224456787109
    7. ' for' → logprob: -7.640224456787109
    8. '_' → logprob: -8.01522445678711
    9. '[' → logprob: -8.51522445678711
    10. ' 
' → logprob: -8.64022445678711

Token 19: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43507784605026245
    2. ' for' → logprob: -1.3100779056549072
    3. ' ' → logprob: -2.6850779056549072
    4. '+' → logprob: -5.310077667236328
    5. '*' → logprob: -5.935077667236328
    6. '\' → logprob: -6.560077667236328
    7. '=' → logprob: -6.935077667236328
    8. '_' → logprob: -7.060077667236328
    9. '\n' → logprob: -7.185077667236328
    10. '' → logprob: -7.685077667236328

Token 20: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08370394259691238
    2. ' _' → logprob: -3.0837039947509766
    3. '  ' → logprob: -4.208703994750977
    4. ' s' → logprob: -4.833703994750977
    5. ' i' → logprob: -4.958703994750977
    6. '_' → logprob: -5.583703994750977
    7. 's' → logprob: -8.583703994750977
    8. ' S' → logprob: -9.083703994750977
    9. ' in' → logprob: -9.333703994750977
    10. ' token' → logprob: -9.333703994750977

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7033212780952454
    2. 'n' → logprob: -1.4533212184906006
    3. 'in' → logprob: -1.7033212184906006
    4. ' n' → logprob: -2.4533212184906006
    5. ' ' → logprob: -5.95332145690918
    6. '_' → logprob: -8.57832145690918
    7. 's' → logprob: -9.20332145690918
    8. '  ' → logprob: -9.70332145690918
    9. '<n' → logprob: -10.07832145690918
    10. ',' → logprob: -10.32832145690918

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38688018918037415
    2. 'range' → logprob: -1.1368801593780518
    3. ' ' → logprob: -12.511879920959473
    4. 's' → logprob: -13.386879920959473
    5. 'Q' → logprob: -14.136879920959473
    6. '	range' → logprob: -14.386879920959473
    7. '  ' → logprob: -14.636879920959473
    8. 'input' → logprob: -14.636879920959473
    9. 'ra' → logprob: -15.136879920959473
    10. 'rang' → logprob: -15.261879920959473

Token 23: '(Q' (ID: 14437)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5786206126213074
    2. '(Q' → logprob: -0.8286206126213074
    3. ' (' → logprob: -5.953620433807373
    4. '(len' → logprob: -10.078620910644531
    5. '(s' → logprob: -11.453620910644531
    6. ' Q' → logprob: -11.578620910644531
    7. '(range' → logprob: -12.328620910644531
    8. 'Q' → logprob: -12.703620910644531
    9. '(S' → logprob: -12.703620910644531
    10. ' ' → logprob: -13.328620910644531

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026603206992149353
    2. ' ):' → logprob: -4.1516032218933105
    3. ')' → logprob: -4.6516032218933105
    4. '+' → logprob: -7.9016032218933105
    5. ',' → logprob: -8.151602745056152
    6. ' )' → logprob: -8.651602745056152
    7. ':' → logprob: -9.401602745056152
    8. '):
' → logprob: -10.526602745056152
    9. ' ' → logprob: -11.401602745056152
    10. ' ,' → logprob: -13.026602745056152

Token 25: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4577327370643616
    2. '```' → logprob: -2.332732677459717
    3. '   ' → logprob: -2.457732677459717
    4. ' query' → logprob: -3.082732677459717
    5. '<|end|>' → logprob: -3.957732677459717
    6. ' input' → logprob: -3.957732677459717
    7. '    ' → logprob: -4.707732677459717
    8. '  
' → logprob: -5.082732677459717
    9. ' 
' → logprob: -5.082732677459717
    10. '  ' → logprob: -5.207732677459717

Token 26: ' inp' (ID: 64450)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.153488278388977
    2. ' q' → logprob: -1.653488278388977
    3. ' query' → logprob: -2.2784881591796875
    4. 'q' → logprob: -2.2784881591796875
    5. ' c' → logprob: -2.9034881591796875
    6. 'c' → logprob: -3.2784881591796875
    7. 't' → logprob: -3.5284881591796875
    8. ' ' → logprob: -3.5284881591796875
    9. ' command' → logprob: -3.9034881591796875
    10. ' cmd' → logprob: -4.0284881591796875

Token 27: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005609492771327496
    2. ' =' → logprob: -5.630609512329102
    3. 'ut' → logprob: -7.630609512329102
    4. '_=' → logprob: -7.880609512329102
    5. '_' → logprob: -8.255609512329102
    6. '=line' → logprob: -8.505609512329102
    7. 't' → logprob: -9.005609512329102
    8. '()' → logprob: -9.005609512329102
    9. '=input' → logprob: -9.255609512329102
    10. 's' → logprob: -9.505609512329102

Token 28: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09215784072875977
    2. '(' → logprob: -2.4671578407287598
    3. '().' → logprob: -6.46715784072876
    4. '('' → logprob: -6.84215784072876
    5. '("("' → logprob: -8.092157363891602
    6. '("")' → logprob: -10.092157363891602
    7. '())' → logprob: -10.467157363891602
    8. '("' → logprob: -10.717157363891602
    9. '```' → logprob: -10.842157363891602
    10. ')' → logprob: -11.092157363891602

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5094070477061905e-05
    2. 'strip' → logprob: -11.625015258789062
    3. 'startswith' → logprob: -12.375015258789062
    4. 'rstrip' → logprob: -14.000015258789062
    5. 's' → logprob: -14.625015258789062
    6. ' split' → logprob: -14.875015258789062
    7. 'spl' → logprob: -15.250015258789062
    8. 'sp' → logprob: -16.750015258789062
    9. '(split' → logprob: -18.125015258789062
    10. 'plit' → logprob: -19.125015258789062

Token 30: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2981737554073334
    2. '(' → logprob: -1.6731737852096558
    3. '('' → logprob: -2.673173666000366
    4. '("("' → logprob: -6.923173904418945
    5. '(`' → logprob: -10.423173904418945
    6. '("' → logprob: -10.423173904418945
    7. '())' → logprob: -10.673173904418945
    8. '()]' → logprob: -11.423173904418945
    9. '(
' → logprob: -11.923173904418945
    10. '```' → logprob: -12.173173904418945

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5604429841041565
    2. ' if' → logprob: -1.5604429244995117
    3. ' ' → logprob: -1.9354429244995117
    4. '[' → logprob: -3.5604429244995117
    5. '```' → logprob: -3.6854429244995117
    6. 'if' → logprob: -4.810442924499512
    7. '    ' → logprob: -5.685442924499512
    8. '<|end|>' → logprob: -6.310442924499512
    9. '\' → logprob: -6.560442924499512
    10. '  ' → logprob: -6.685442924499512

Token 32: ' if' (ID: 538)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7772344350814819
    2. '   ' → logprob: -1.652234435081482
    3. ' ' → logprob: -2.0272345542907715
    4. ' if' → logprob: -2.4022345542907715
    5. 'if' (adapté à ' if') → logprob: -2.5272345542907715
    6. '```' → logprob: -4.1522345542907715
    7. '    ' → logprob: -4.6522345542907715
    8. '_' → logprob: -5.5272345542907715
    9. 'i' → logprob: -5.5272345542907715
    10. ' 
' → logprob: -6.4022345542907715

Token 33: ' inp' (ID: 64450)
  Prédit: ' inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.06374829262495041
    2. 'inp' → logprob: -2.813748359680176
    3. ' s' → logprob: -7.563748359680176
    4. ' len' → logprob: -7.563748359680176
    5. 's' → logprob: -8.313748359680176
    6. '(inp' → logprob: -8.313748359680176
    7. ' ' → logprob: -8.688748359680176
    8. 'len' → logprob: -10.188748359680176
    9. ' in' → logprob: -11.063748359680176
    10. ' a' → logprob: -12.063748359680176

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00017362393555231392
    2. ' [' → logprob: -8.750173568725586
    3. '==' → logprob: -11.875173568725586
    4. ' ==' → logprob: -12.375173568725586
    5. ' ' → logprob: -12.750173568725586
    6. '[
' → logprob: -15.625173568725586
    7. '[-' → logprob: -16.000173568725586
    8. '   ' → logprob: -16.000173568725586
    9. '```' → logprob: -16.375173568725586
    10. '=' → logprob: -16.500173568725586

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020735491125378758
    2. ' ' → logprob: -9.12520694732666
    3. '1' → logprob: -9.62520694732666
    4. '[' → logprob: -10.62520694732666
    5. '(' → logprob: -12.37520694732666
    6. '2' → logprob: -13.37520694732666
    7. '3' → logprob: -14.00020694732666
    8. ']' → logprob: -14.50020694732666
    9. ']==' → logprob: -15.25020694732666
    10. '-' → logprob: -15.75020694732666

Token 36: ']=="' (ID: 164578)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09192657470703125
    2. '=='' → logprob: -3.4669265747070312
    3. ' ==' → logprob: -3.8419265747070312
    4. ']==' → logprob: -4.216926574707031
    5. ']' → logprob: -4.966926574707031
    6. ']=='' → logprob: -5.341926574707031
    7. '=' → logprob: -5.591926574707031
    8. '=="' → logprob: -5.841926574707031
    9. '[' → logprob: -7.591926574707031
    10. ')' → logprob: -7.591926574707031

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18549169600009918
    2. 'R' → logprob: -2.5604918003082275
    3. 'p' → logprob: -4.060491561889648
    4. 'L' → logprob: -4.560491561889648
    5. '2' → logprob: -4.810491561889648
    6. '"' → logprob: -4.810491561889648
    7. '+' → logprob: -5.060491561889648
    8. 'a' → logprob: -5.060491561889648
    9. 'i' → logprob: -5.060491561889648
    10. ''' → logprob: -5.435491561889648

Token 38: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.20374059677124023
    2. ' ":' → logprob: -2.2037405967712402
    3. ':' → logprob: -2.9537405967712402
    4. '"' → logprob: -4.20374059677124
    5. ' "' → logprob: -6.07874059677124
    6. ' :' → logprob: -6.32874059677124
    7. '"):' → logprob: -7.07874059677124
    8. '):' → logprob: -7.20374059677124
    9. ' ":"' → logprob: -8.203741073608398
    10. ' ):' → logprob: -8.203741073608398

Token 39: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.755495011806488
    2. ' s' → logprob: -1.5054950714111328
    3. ' if' → logprob: -2.130495071411133
    4. '    ' → logprob: -2.255495071411133
    5. ' ' → logprob: -3.255495071411133
    6. 'if' → logprob: -4.505495071411133
    7. '=' → logprob: -4.755495071411133
    8. ' and' → logprob: -4.755495071411133
    9. '<|end|>' → logprob: -5.880495071411133
    10. ' :' → logprob: -6.005495071411133

Token 40: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9441760778427124
    2. 's' (adapté à ' s') → logprob: -1.6941760778427124
    3. 'if' → logprob: -1.9441760778427124
    4. ' if' → logprob: -1.9441760778427124
    5. ' ' → logprob: -2.319176197052002
    6. 'd' → logprob: -4.819176197052002
    7. ' t' → logprob: -5.194176197052002
    8. ' x' → logprob: -5.319176197052002
    9. ' d' → logprob: -5.444176197052002
    10. 'x' → logprob: -5.819176197052002

Token 41: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -7.941850526549388e-06
    2. '_nt' → logprob: -12.875007629394531
    3. 'n' → logprob: -13.125007629394531
    4. '=' → logprob: -13.375007629394531
    5. ' nt' → logprob: -14.500007629394531
    6. 'nts' → logprob: -14.750007629394531
    7. 'ent' → logprob: -15.375007629394531
    8. 't' → logprob: -15.750007629394531
    9. '.nt' → logprob: -16.37500762939453
    10. 'tn' → logprob: -16.62500762939453

Token 42: '*=' (ID: 93955)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3628843128681183
    2. '*=' → logprob: -1.862884283065796
    3. '=' → logprob: -2.612884283065796
    4. '^' → logprob: -2.987884283065796
    5. '%=' → logprob: -4.737884521484375
    6. '*' → logprob: -5.112884521484375
    7. ' ^=' → logprob: -5.362884521484375
    8. '=(' → logprob: -6.487884521484375
    9. ' *=' → logprob: -6.987884521484375
    10. ' +=' → logprob: -7.487884521484375

Token 43: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00018196819291915745
    2. '1' → logprob: -9.375182151794434
    3. '(-' → logprob: -9.875182151794434
    4. '2' → logprob: -11.000182151794434
    5. 'int' → logprob: -11.375182151794434
    6. ' -' → logprob: -11.875182151794434
    7. '```' → logprob: -13.250182151794434
    8. '(' → logprob: -13.625182151794434
    9. ' ' → logprob: -13.750182151794434
    10. '0' → logprob: -13.875182151794434

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.125001907348633
    4. '2' → logprob: -16.875001907348633
    5. '<|end|>' → logprob: -17.625001907348633
    6. ')' → logprob: -17.750001907348633
    7. 's' → logprob: -17.750001907348633
    8. '  ' → logprob: -17.875001907348633
    9. '１' → logprob: -18.375001907348633
    10. '۱' → logprob: -19.187501907348633

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006782424170523882
    2. ')
' → logprob: -7.500678062438965
    3. ' )' → logprob: -9.125678062438965
    4. '<|end|>' → logprob: -12.375678062438965
    5. '1' → logprob: -12.500678062438965
    6. ')*' → logprob: -13.250678062438965
    7. ')**' → logprob: -13.875678062438965
    8. ' )
' → logprob: -14.000678062438965
    9. ')#' → logprob: -14.250678062438965
    10. ')
' → logprob: -14.250678062438965

Token 46: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.7493867874145508
    2. ' elif' → logprob: -1.2493867874145508
    3. '\n' → logprob: -2.874386787414551
    4. '_' → logprob: -2.999386787414551
    5. ' ' → logprob: -3.124386787414551
    6. ' 
' → logprob: -3.624386787414551
    7. '\' → logprob: -4.249386787414551
    8. '<|end|>' → logprob: -4.499386787414551
    9. ' else' → logprob: -5.124386787414551
    10. 'else' (adapté à ' else') → logprob: -5.499386787414551

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07304595410823822
    2. ' :' → logprob: -2.6980459690093994
    3. ' :
' → logprob: -6.44804573059082
    4. ':
' → logprob: -7.07304573059082
    5. ' if' → logprob: -8.07304573059082
    6. 'if' → logprob: -8.82304573059082
    7. ' ' → logprob: -9.82304573059082
    8. '    ' → logprob: -9.82304573059082
    9. '   ' → logprob: -10.32304573059082
    10. ' :
' → logprob: -10.57304573059082

Token 49: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5419243574142456
    2. ' if' → logprob: -1.1669243574142456
    3. '    ' → logprob: -2.916924476623535
    4. 'if' → logprob: -3.166924476623535
    5. '   ' → logprob: -5.291924476623535
    6. ' ' → logprob: -7.291924476623535
    7. ',' → logprob: -7.416924476623535
    8. '       ' → logprob: -7.416924476623535
    9. '  ' → logprob: -7.416924476623535
    10. ' ,' → logprob: -7.791924476623535

Token 50: ' F' (ID: 454)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2728798985481262
    2. 't' → logprob: -2.0228798389434814
    3. ' if' → logprob: -4.0228800773620605
    4. ' t' → logprob: -4.2728800773620605
    5. 'c' → logprob: -4.3978800773620605
    6. 'f' → logprob: -4.5228800773620605
    7. 'd' → logprob: -4.7728800773620605
    8. 'x' → logprob: -4.7728800773620605
    9. 'p' → logprob: -5.1478800773620605
    10. ' ' → logprob: -5.2728800773620605

Token 51: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7467303276062012
    2. '=int' → logprob: -0.7467303276062012
    3. ' =' → logprob: -3.871730327606201
    4. '=input' → logprob: -4.621730327606201
    5. 'rom' → logprob: -5.246730327606201
    6. ',' → logprob: -5.371730327606201
    7. '=len' → logprob: -5.746730327606201
    8. '==' → logprob: -5.996730327606201
    9. 'if' → logprob: -6.246730327606201
    10. ' ' → logprob: -7.371730327606201

Token 52: '(inp' (ID: 141645)
  Prédit: '(inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inp' → logprob: -4.739826181321405e-05
    2. 'inp' → logprob: -10.37504768371582
    3. '(' → logprob: -11.12504768371582
    4. ' inp' → logprob: -14.50004768371582
    5. '(instr' → logprob: -15.12504768371582
    6. ' (' → logprob: -15.50004768371582
    7. '(input' → logprob: -16.12504768371582
    8. 'Inp' → logprob: -16.37504768371582
    9. ' ' → logprob: -16.50004768371582
    10. '   ' → logprob: -17.37504768371582

Token 53: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.3458322731312364e-06
    2. '1' → logprob: -11.875007629394531
    3. '[
' → logprob: -16.25000762939453
    4. '```' → logprob: -16.75000762939453
    5. ' [' → logprob: -17.62500762939453
    6. '2' → logprob: -18.50000762939453
    7. '][' → logprob: -18.75000762939453
    8. ')' → logprob: -18.75000762939453
    9. '\[' → logprob: -19.12500762939453
    10. '(' → logprob: -19.50000762939453

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.500000953674316
    3. '[' → logprob: -14.875000953674316
    4. '2' → logprob: -15.875000953674316
    5. '   ' → logprob: -17.125001907348633
    6. '```' → logprob: -17.250001907348633
    7. '
' → logprob: -18.250001907348633
    8. '0' → logprob: -18.625001907348633
    9. '``' → logprob: -19.125001907348633
    10. '  ' → logprob: -19.437501907348633

Token 55: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4914211332798004
    2. ')
' → logprob: -1.116421103477478
    3. '])' → logprob: -2.9914212226867676
    4. '])
' → logprob: -4.741421222686768
    5. ' )' → logprob: -7.366421222686768
    6. ' )
' → logprob: -7.616421222686768
    7. ')
' → logprob: -8.11642074584961
    8. '）' → logprob: -8.86642074584961
    9. ')

' → logprob: -9.99142074584961
    10. '）
' → logprob: -9.99142074584961

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11100741475820541
    2. 'if' → logprob: -3.2360074520111084
    3. ' if' → logprob: -3.3610074520111084
    4. ' ' → logprob: -5.361007213592529
    5. ' C' → logprob: -5.361007213592529
    6. 't' → logprob: -5.861007213592529
    7. ' c' → logprob: -6.111007213592529
    8. ',' → logprob: -6.361007213592529
    9. ' t' → logprob: -6.736007213592529
    10. 'd' → logprob: -6.736007213592529

Token 57: ' C' (ID: 363)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.617709219455719
    2. 'C' (adapté à ' C') → logprob: -0.992709219455719
    3. 'd' → logprob: -2.492709159851074
    4. 'D' → logprob: -5.742709159851074
    5. 'if' → logprob: -6.117709159851074
    6. 'p' → logprob: -7.117709159851074
    7. ' c' → logprob: -8.117709159851074
    8. 'F' → logprob: -8.617709159851074
    9. 'f' → logprob: -9.117709159851074
    10. 'a' → logprob: -9.242709159851074

Token 58: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01375194825232029
    2. '=input' → logprob: -4.763751983642578
    3. '=int' → logprob: -5.638751983642578
    4. '=S' → logprob: -7.513751983642578
    5. '=
' → logprob: -8.263751983642578
    6. '=C' → logprob: -8.513751983642578
    7. '=in' → logprob: -8.763751983642578
    8. ' =' → logprob: -8.763751983642578
    9. '=s' → logprob: -9.013751983642578
    10. '=_' → logprob: -10.638751983642578

Token 59: 'inp' (ID: 74055)
  Prédit: 'inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inp' → logprob: -0.00043496055877767503
    2. ' inp' → logprob: -8.000434875488281
    3. 'int' → logprob: -9.250434875488281
    4. 'input' → logprob: -13.500434875488281
    5. 'str' → logprob: -13.625434875488281
    6. '(inp' → logprob: -14.000434875488281
    7. 'Inp' → logprob: -17.37543487548828
    8. '   ' → logprob: -17.62543487548828
    9. 'list' → logprob: -17.75043487548828
    10. 'instr' → logprob: -18.25043487548828

Token 60: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023560250701848418
    2. '2' → logprob: -8.375235557556152
    3. '```' → logprob: -13.375235557556152
    4. ' [' → logprob: -13.750235557556152
    5. '\[' → logprob: -15.000235557556152
    6. ''[' → logprob: -15.000235557556152
    7. '][' → logprob: -15.000235557556152
    8. '   ' → logprob: -15.250235557556152
    9. ' ' → logprob: -15.625235557556152
    10. '`' → logprob: -15.750235557556152

Token 61: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.750006675720215
    4. '[' → logprob: -16.25000762939453
    5. '-' → logprob: -17.12500762939453
    6. '２' → logprob: -17.25000762939453
    7. '  ' → logprob: -17.50000762939453
    8. '۲' → logprob: -18.00000762939453
    9. '```' → logprob: -18.25000762939453
    10. '1' → logprob: -18.37500762939453

Token 62: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03840303048491478
    2. ']
' → logprob: -3.288403034210205
    3. ']
' → logprob: -8.413402557373047
    4. '[' → logprob: -9.663402557373047
    5. ' ]' → logprob: -10.663402557373047
    6. '][' → logprob: -11.163402557373047
    7. '']' → logprob: -11.288402557373047
    8. ']

' → logprob: -11.413402557373047
    9. ' ]
' → logprob: -12.163402557373047
    10. '])' → logprob: -13.288402557373047

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24433103203773499
    2. '
' → logprob: -1.7443310022354126
    3. ' if' → logprob: -3.619331121444702
    4. ' 
' → logprob: -5.244330883026123
    5. 'if' → logprob: -5.619330883026123
    6. '        
' → logprob: -5.744330883026123
    7. '<|end|>' → logprob: -6.369330883026123
    8. '        ' → logprob: -8.369331359863281
    9. '```' → logprob: -8.619331359863281
    10. '
' → logprob: -8.744331359863281

Token 64: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10025055706501007
    2. ' if' → logprob: -2.350250482559204
    3. '       ' → logprob: -10.225250244140625
    4. ' ' → logprob: -13.100250244140625
    5. '```' → logprob: -13.475250244140625
    6. '        ' → logprob: -13.975250244140625
    7. 'If' → logprob: -13.975250244140625
    8. '   ' → logprob: -14.225250244140625
    9. '
' → logprob: -14.225250244140625
    10. 's' → logprob: -14.725250244140625

Token 65: ' (' (ID: 350)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.0372265577316284
    2. '(s' → logprob: -1.1622265577316284
    3. ' (' → logprob: -1.5372265577316284
    4. 's' → logprob: -2.162226676940918
    5. '(' → logprob: -6.412226676940918
    6. ' ' → logprob: -8.287226676940918
    7. '(S' → logprob: -8.662226676940918
    8. 'S' → logprob: -9.224726676940918
    9. ' S' → logprob: -9.287226676940918
    10. '  ' → logprob: -9.287226676940918

Token 66: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3239118754863739
    2. ' s' → logprob: -1.5739119052886963
    3. '(s' → logprob: -3.5739119052886963
    4. 'F' → logprob: -3.8239119052886963
    5. ' (' → logprob: -4.573911666870117
    6. ' F' → logprob: -5.448911666870117
    7. '(F' → logprob: -5.448911666870117
    8. ' ' → logprob: -8.448911666870117
    9. 'S' → logprob: -8.948911666870117
    10. '  ' → logprob: -9.573911666870117

Token 67: '*' (ID: 9)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.48453211784362793
    2. '*s' → logprob: -2.109532117843628
    3. '*' → logprob: -2.484532117843628
    4. ' ==' → logprob: -2.734532117843628
    5. 'if' → logprob: -4.109532356262207
    6. ' if' → logprob: -4.359532356262207
    7. ' and' → logprob: -4.359532356262207
    8. 's' → logprob: -4.484532356262207
    9. ')==' → logprob: -4.734532356262207
    10. ' *' → logprob: -4.734532356262207

Token 68: 'F' (ID: 37)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.037422508001327515
    2. 'F' → logprob: -3.5374224185943604
    3. ' s' → logprob: -5.2874226570129395
    4. 'C' → logprob: -6.7874226570129395
    5. 'S' → logprob: -7.7874226570129395
    6. ' F' → logprob: -8.537422180175781
    7. '(s' → logprob: -9.037422180175781
    8. '(' → logprob: -9.412422180175781
    9. '1' → logprob: -9.787422180175781
    10. '   ' → logprob: -9.912422180175781

Token 69: '-' (ID: 12)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.39711859822273254
    2. '-' → logprob: -1.7721185684204102
    3. ' ==' → logprob: -3.27211856842041
    4. 's' → logprob: -3.27211856842041
    5. '<=' → logprob: -3.52211856842041
    6. '*s' → logprob: -3.64711856842041
    7. ')' → logprob: -5.14711856842041
    8. ')==' → logprob: -5.52211856842041
    9. ' -' → logprob: -5.64711856842041
    10. '==(' → logprob: -6.52211856842041

Token 70: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.264899879693985
    2. 's' → logprob: -1.5148998498916626
    3. ' s' → logprob: -4.639899730682373
    4. ' ' → logprob: -7.139899730682373
    5. ' (' → logprob: -7.139899730682373
    6. '(' → logprob: -7.264899730682373
    7. ')' → logprob: -8.264900207519531
    8. '(s' → logprob: -8.889900207519531
    9. '_s' → logprob: -8.889900207519531
    10. 'S' → logprob: -9.514900207519531

Token 71: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.05267351493239403
    2. ')' → logprob: -3.177673578262329
    3. ')*(' → logprob: -5.42767333984375
    4. ')==' → logprob: -6.05267333984375
    5. '==' → logprob: -6.30267333984375
    6. '*s' → logprob: -8.42767333984375
    7. ')!=' → logprob: -8.42767333984375
    8. '+s' → logprob: -8.67767333984375
    9. ')**' → logprob: -9.05267333984375
    10. '==-' → logprob: -9.92767333984375

Token 72: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004263350740075111
    2. ' s' → logprob: -5.754263401031494
    3. '*s' → logprob: -7.254263401031494
    4. '==' → logprob: -9.254262924194336
    5. '   ' → logprob: -10.254262924194336
    6. '+s' → logprob: -10.379262924194336
    7. '<s' → logprob: -10.504262924194336
    8. '}s' → logprob: -10.754262924194336
    9. '	s' → logprob: -11.004262924194336
    10. '_s' → logprob: -11.129262924194336

Token 73: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.00028946425300091505
    2. 't' → logprob: -8.250289916992188
    3. 'n' → logprob: -11.125289916992188
    4. '_nt' → logprob: -11.750289916992188
    5. 'tn' → logprob: -12.500289916992188
    6. ' nt' → logprob: -15.000289916992188
    7. '(nt' → logprob: -15.750289916992188
    8. 'ntil' → logprob: -16.000289916992188
    9. ' ' → logprob: -16.375289916992188
    10. 'n't' → logprob: -16.500289916992188

Token 74: '>' (ID: 29)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12943024933338165
    2. '==-' → logprob: -2.7544302940368652
    3. ' ==' → logprob: -3.0044302940368652
    4. '<' → logprob: -5.129430294036865
    5. '>' → logprob: -7.129430294036865
    6. '+' → logprob: -7.254430294036865
    7. ')==' → logprob: -8.254429817199707
    8. ')' → logprob: -9.004429817199707
    9. ' <' → logprob: -9.379429817199707
    10. ']==' → logprob: -9.879429817199707

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028127210680395365
    2. ' ' → logprob: -5.87781286239624
    3. '=' → logprob: -12.127812385559082
    4. '-' → logprob: -14.002812385559082
    5. '1' → logprob: -14.752812385559082
    6. ' -' → logprob: -14.877812385559082
    7. '>' → logprob: -15.002812385559082
    8. '۰' → logprob: -16.1278133392334
    9. '    ' → logprob: -16.3778133392334
    10. ')' → logprob: -16.3778133392334

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20280152559280396
    2. ':
' → logprob: -1.7028014659881592
    3. '==' → logprob: -8.077801704406738
    4. '):
' → logprob: -8.327801704406738
    5. '<|end|>' → logprob: -8.827801704406738
    6. '       ' → logprob: -9.077801704406738
    7. ':S' → logprob: -9.327801704406738
    8. ' and' → logprob: -9.452801704406738
    9. '=' → logprob: -9.577801704406738
    10. '):' → logprob: -9.827801704406738

Token 77: '           ' (ID: 352)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.30842211842536926
    2. '       ' → logprob: -2.183422088623047
    3. '           ' → logprob: -2.183422088623047
    4. '   ' → logprob: -3.808422088623047
    5. 'S' → logprob: -5.183422088623047
    6. ' if' → logprob: -5.183422088623047
    7. '    ' → logprob: -6.183422088623047
    8. '        ' → logprob: -6.558422088623047
    9. ' ' → logprob: -7.683422088623047
    10. '               ' → logprob: -7.933422088623047

Token 78: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.4746072590351105
    2. ' S' → logprob: -0.9746072292327881
    3. '           ' → logprob: -8.599607467651367
    4. 's' → logprob: -8.849607467651367
    5. '   ' → logprob: -9.599607467651367
    6. ' if' → logprob: -10.849607467651367
    7. ')' → logprob: -11.099607467651367
    8. 'if' → logprob: -11.099607467651367
    9. '               ' → logprob: -11.099607467651367
    10. '>S' → logprob: -11.349607467651367

Token 79: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.044134847819805145
    2. '.' → logprob: -3.7941348552703857
    3. 'append' → logprob: -3.9191348552703857
    4. '.app' → logprob: -7.669134616851807
    5. '```' → logprob: -9.044135093688965
    6. ' .' → logprob: -10.294135093688965
    7. '.p' → logprob: -10.544135093688965
    8. 'appen' → logprob: -10.794135093688965
    9. '
' → logprob: -11.044135093688965
    10. '   ' → logprob: -11.044135093688965

Token 80: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.10347404330968857
    2. 'left' → logprob: -2.3534741401672363
    3. '(' → logprob: -5.728474140167236
    4. '(
' → logprob: -11.853473663330078
    5. '(left' → logprob: -13.728473663330078
    6. '<|end|>' → logprob: -14.853473663330078
    7. '((' → logprob: -15.103473663330078
    8. ' (' → logprob: -15.853473663330078
    9. '(CType' → logprob: -15.853473663330078
    10. '(c' → logprob: -16.103473663330078

Token 81: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38725414872169495
    2. ')
' → logprob: -1.1372541189193726
    3. '       ' → logprob: -8.262253761291504
    4. ')
' → logprob: -9.262253761291504
    5. ' )
' → logprob: -11.762253761291504
    6. 'else' → logprob: -11.887253761291504
    7. ' )' → logprob: -12.012253761291504
    8. ')

' → logprob: -12.262253761291504
    9. ' else' → logprob: -13.262253761291504
    10. '   ' → logprob: -13.512253761291504

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12934592366218567
    2. 'else' → logprob: -2.5043458938598633
    3. ' else' → logprob: -3.2543458938598633
    4. '<|end|>' → logprob: -7.129345893859863
    5. '```' → logprob: -9.254345893859863
    6. '	else' → logprob: -10.004345893859863
    7. '<|end|>' → logprob: -11.004345893859863
    8. '   ' → logprob: -11.754345893859863
    9. 'elif' → logprob: -11.754345893859863
    10. '_else' → logprob: -12.379345893859863

Token 83: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.34918034076690674
    2. '       ' → logprob: -1.4741803407669067
    3. ' else' → logprob: -2.724180221557617
    4. '```' → logprob: -9.474180221557617
    5. '	else' → logprob: -9.849180221557617
    6. '   ' → logprob: -10.849180221557617
    7. '_else' → logprob: -11.724180221557617
    8. 'elif' → logprob: -12.474180221557617
    9. 'Else' → logprob: -13.599180221557617
    10. '      ' → logprob: -13.974180221557617

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08950936049222946
    2. ':
' → logprob: -2.4645092487335205
    3. '           ' → logprob: -8.214509010314941
    4. ':
' → logprob: -9.089509010314941
    5. ' :
' → logprob: -9.089509010314941
    6. '       ' → logprob: -10.839509010314941
    7. ' :' → logprob: -11.464509010314941
    8. '          ' → logprob: -11.589509010314941
    9. ':

' → logprob: -11.714509010314941
    10. '        ' → logprob: -12.339509010314941

Token 85: '           ' (ID: 352)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.391297847032547
    2. 'S' → logprob: -1.1412978172302246
    3. '           ' → logprob: -6.641297817230225
    4. '   ' → logprob: -6.891297817230225
    5. '```' → logprob: -7.141297817230225
    6. '       ' → logprob: -7.516297817230225
    7. 's' → logprob: -8.891298294067383
    8. '
' → logprob: -8.891298294067383
    9. ' ' → logprob: -9.141298294067383
    10. '               ' → logprob: -9.891298294067383

Token 86: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.0004317420825827867
    2. ' S' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.000432014465332
    4. '	S' → logprob: -16.625431060791016
    5. ' ' → logprob: -16.875431060791016
    6. '           ' → logprob: -17.500431060791016
    7. '       ' → logprob: -17.625431060791016
    8. 'deque' → logprob: -17.750431060791016
    9. '  ' → logprob: -18.000431060791016
    10. '```' → logprob: -18.500431060791016

Token 87: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0203888900578022
    2. '.' → logprob: -4.270389080047607
    3. 'append' → logprob: -5.395389080047607
    4. '```' → logprob: -7.270389080047607
    5. '.extend' → logprob: -8.77038860321045
    6. 'left' → logprob: -8.77038860321045
    7. '.app' → logprob: -9.02038860321045
    8. '.p' → logprob: -9.39538860321045
    9. '	append' → logprob: -9.77038860321045
    10. 'appen' → logprob: -9.77038860321045

Token 88: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00038717821007594466
    2. 'lef' → logprob: -8.125387191772461
    3. 'le' → logprob: -9.625387191772461
    4. 'l' → logprob: -10.750387191772461
    5. '```' → logprob: -13.125387191772461
    6. '(C' → logprob: -14.500387191772461
    7. ' Lef' → logprob: -15.750387191772461
    8. '
' → logprob: -16.25038719177246
    9. ')' → logprob: -16.25038719177246
    10. 'opleft' → logprob: -16.37538719177246

Token 89: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0024783893022686243
    2. '(' → logprob: -6.00247859954834
    3. ' (' → logprob: -13.87747859954834
    4. '(c' → logprob: -14.37747859954834
    5. '((' → logprob: -14.75247859954834
    6. '(
' → logprob: -15.25247859954834
    7. '('' → logprob: -15.37747859954834
    8. ')' → logprob: -16.377477645874023
    9. ')(' → logprob: -17.377477645874023
    10. '()' → logprob: -17.377477645874023

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -14.500000953674316
    4. '))' → logprob: -17.750001907348633
    5. ')`' → logprob: -17.750001907348633
    6. '())' → logprob: -17.875001907348633
    7. ')#' → logprob: -18.125001907348633
    8. ')}' → logprob: -18.375001907348633
    9. ')}}' → logprob: -18.750001907348633
    10. ')

' → logprob: -18.750001907348633

Token 91: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.030500371009111404
    2. '```' → logprob: -4.405500411987305
    3. 'print' → logprob: -4.780500411987305
    4. ' if' → logprob: -5.030500411987305
    5. '
' → logprob: -6.655500411987305
    6. '#' → logprob: -8.280500411987305
    7. '``' → logprob: -8.405500411987305
    8. 'ans' → logprob: -8.780500411987305
    9. ')' → logprob: -8.905500411987305
    10. 'while' → logprob: -9.030500411987305

Token 92: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.026312140747904778
    2. 's' → logprob: -3.6513121128082275
    3. '(s' → logprob: -11.776311874389648
    4. ' ' → logprob: -13.776311874389648
    5. ' (' → logprob: -14.026311874389648
    6. '1' → logprob: -14.276311874389648
    7. ' ' → logprob: -14.651311874389648
    8. '_s' → logprob: -14.901311874389648
    9. '(' → logprob: -15.901311874389648
    10. '0' → logprob: -15.901311874389648

Token 93: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: 0.0
    2. '_nt' → logprob: -17.125
    3. 'n' → logprob: -17.75
    4. '.nt' → logprob: -19.5
    5. '```' → logprob: -19.625
    6. 'nts' → logprob: -19.75
    7. '[' → logprob: -20.0
    8. 'nte' → logprob: -20.25
    9. 'nd' → logprob: -20.25
    10. ' nt' → logprob: -20.5

Token 94: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03518802672624588
    2. '==-' → logprob: -3.4101879596710205
    3. '<' → logprob: -7.0351881980896
    4. '>' → logprob: -7.6601881980896
    5. ' ==' → logprob: -8.785187721252441
    6. '```' → logprob: -10.910187721252441
    7. '===' → logprob: -11.660187721252441
    8. '=' → logprob: -12.660187721252441
    9. '1' → logprob: -13.285187721252441
    10. '==
' → logprob: -13.785187721252441

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012541078962385654
    2. '-' → logprob: -4.3875412940979
    3. ' ' → logprob: -10.512540817260742
    4. ' -' → logprob: -13.012540817260742
    5. '```' → logprob: -14.012540817260742
    6. '−' → logprob: -15.012540817260742
    7. '>' → logprob: -15.575040817260742
    8. '">' → logprob: -16.200040817260742
    9. '(' → logprob: -16.387540817260742
    10. '１' → logprob: -16.512540817260742

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012511172099038959
    2. ':
' → logprob: -9.00012493133545
    3. ' :' → logprob: -14.12512493133545
    4. 'print' → logprob: -14.75012493133545
    5. ':
' → logprob: -15.87512493133545
    6. '):' → logprob: -16.375125885009766
    7. ':**' → logprob: -16.500125885009766
    8. '：' → logprob: -17.125125885009766
    9. '():' → logprob: -17.250125885009766
    10. ':

' → logprob: -17.750125885009766

Token 97: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.058646950870752335
    2. '   ' → logprob: -3.6836469173431396
    3. '```' → logprob: -3.8086469173431396
    4. ' print' → logprob: -4.683647155761719
    5. '``' → logprob: -8.433647155761719
    6. '	print' → logprob: -8.933647155761719
    7. '.print' → logprob: -10.433647155761719
    8. '
' → logprob: -12.058647155761719
    9. '    
' → logprob: -12.808647155761719
    10. '`' → logprob: -13.308647155761719

Token 98: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.362307223957032e-05
    2. '```' → logprob: -10.125073432922363
    3. ' print' → logprob: -10.375073432922363
    4. '   ' → logprob: -13.500073432922363
    5. '``' → logprob: -14.375073432922363
    6. 'import' → logprob: -15.875073432922363
    7. '.print' → logprob: -16.75007438659668
    8. '	print' → logprob: -17.37507438659668
    9. '
' → logprob: -17.62507438659668
    10. 'from' → logprob: -18.00007438659668

Token 99: ' i' (ID: 575)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8642545938491821
    2. 'i' → logprob: -1.1142545938491821
    3. '_' → logprob: -2.3642544746398926
    4. ' c' → logprob: -2.9892544746398926
    5. 'x' → logprob: -3.1142544746398926
    6. ' i' → logprob: -3.4892544746398926
    7. ' _' → logprob: -4.489254474639893
    8. 's' → logprob: -4.739254474639893
    9. ' x' → logprob: -5.739254474639893
    10. ' s' → logprob: -6.239254474639893

Token 100: ' in' (ID: 306)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.12618990242481232
    2. 'S' → logprob: -2.876189947128296
    3. ' in' → logprob: -3.001189947128296
    4. 'in' → logprob: -4.751189708709717
    5. '(S' → logprob: -6.001189708709717
    6. ' range' → logprob: -7.376189708709717
    7. 'range' → logprob: -8.001190185546875
    8. ' ' → logprob: -8.626190185546875
    9. 's' → logprob: -9.501190185546875
    10. '(' → logprob: -10.876190185546875

Token 101: ' range' (ID: 3352)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.008755200542509556
    2. 'range' → logprob: -4.758755207061768
    3. ' range' → logprob: -9.13375473022461
    4. ' S' → logprob: -10.50875473022461
    5. '(S' → logprob: -12.63375473022461
    6. 'list' → logprob: -13.75875473022461
    7. '(range' → logprob: -15.13375473022461
    8. 's' → logprob: -15.38375473022461
    9. '   ' → logprob: -16.25875473022461
    10. ' ' → logprob: -16.63375473022461

Token 102: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -2.2603901015827432e-05
    2. 'len' → logprob: -10.750022888183594
    3. ' len' → logprob: -14.250022888183594
    4. '(' → logprob: -15.875022888183594
    5. ' (' → logprob: -16.000022888183594
    6. ',len' → logprob: -16.500022888183594
    7. '=len' → logprob: -16.875022888183594
    8. '<len' → logprob: -16.875022888183594
    9. '	len' → logprob: -18.375022888183594
    10. '   ' → logprob: -18.875022888183594

Token 103: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.1160349458805285e-05
    2. 'S' → logprob: -11.500011444091797
    3. '(' → logprob: -14.125011444091797
    4. ')' → logprob: -16.500011444091797
    5. ' (' → logprob: -17.000011444091797
    6. '(s' → logprob: -17.750011444091797
    7. '(
' → logprob: -18.875011444091797
    8. 's' → logprob: -19.250011444091797
    9. '[S' → logprob: -19.500011444091797
    10. ' S' → logprob: -19.625011444091797

Token 104: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05990307405591011
    2. '):
' → logprob: -2.934903144836426
    3. ')' → logprob: -5.434903144836426
    4. '):
' → logprob: -7.684903144836426
    5. ' ):' → logprob: -8.934903144836426
    6. ')):' → logprob: -10.434903144836426
    7. ' ):
' → logprob: -11.184903144836426
    8. '))' → logprob: -12.934903144836426
    9. ':' → logprob: -13.309903144836426
    10. '):

' → logprob: -13.434903144836426

Token 105: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028680382296442986
    2. 'print' → logprob: -4.153680324554443
    3. ' print' → logprob: -4.403680324554443
    4. '       ' → logprob: -8.153680801391602
    5. '	print' → logprob: -10.403680801391602
    6. '```' → logprob: -11.528680801391602
    7. '.print' → logprob: -12.278680801391602
    8. ' ' → logprob: -14.528680801391602
    9. '   ' → logprob: -14.903680801391602
    10. '    ' → logprob: -15.528680801391602

Token 106: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05253225192427635
    2. ' print' → logprob: -3.052532196044922
    3. '   ' → logprob: -5.552532196044922
    4. '       ' → logprob: -10.177532196044922
    5. '```' → logprob: -11.302532196044922
    6. '	print' → logprob: -12.177532196044922
    7. '.print' → logprob: -13.427532196044922
    8. '    ' → logprob: -13.677532196044922
    9. ' ' → logprob: -14.677532196044922
    10. '           ' → logprob: -15.302532196044922

Token 107: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0019311357755213976
    2. '(' → logprob: -6.251931190490723
    3. 'S' → logprob: -13.376931190490723
    4. '('' → logprob: -14.626931190490723
    5. '(s' → logprob: -15.251931190490723
    6. '(
' → logprob: -16.001930236816406
    7. '()' → logprob: -16.501930236816406
    8. '(*' → logprob: -16.626930236816406
    9. '((' → logprob: -17.126930236816406
    10. ' (' → logprob: -17.626930236816406

Token 108: '.p' (ID: 1201)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2233183042553719e-05
    2. '.p' → logprob: -12.000012397766113
    3. '```' → logprob: -12.875012397766113
    4. '[p' → logprob: -13.625012397766113
    5. '[' → logprob: -13.875012397766113
    6. ')' → logprob: -14.375012397766113
    7. 'p' → logprob: -16.250011444091797
    8. '``' → logprob: -16.625011444091797
    9. '   ' → logprob: -16.750011444091797
    10. '[
' → logprob: -16.750011444091797

Token 109: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.008799398317933083
    2. 'op' → logprob: -4.7587995529174805
    3. 'ople' → logprob: -9.13379955291748
    4. 'opl' → logprob: -9.63379955291748
    5. 'opf' → logprob: -11.63379955291748
    6. 'opt' → logprob: -14.25879955291748
    7. 'opc' → logprob: -14.75879955291748
    8. 'oplevel' → logprob: -14.88379955291748
    9. '```' → logprob: -15.13379955291748
    10. 'oph' → logprob: -15.38379955291748

Token 110: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.16574645042419434
    2. '())' → logprob: -1.9157464504241943
    3. '()' → logprob: -5.290746688842773
    4. '()),' → logprob: -8.040746688842773
    5. '(' → logprob: -9.290746688842773
    6. '())
' → logprob: -10.790746688842773
    7. ' (),' → logprob: -11.790746688842773
    8. ')' → logprob: -12.290746688842773
    9. '(),'' → logprob: -12.415746688842773
    10. '(),"' → logprob: -12.415746688842773

Token 111: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0009355206857435405
    2. ' end' → logprob: -7.0009355545043945
    3. ',end' → logprob: -10.750935554504395
    4. '(end' → logprob: -14.500935554504395
    5. ',' → logprob: -14.625935554504395
    6. 'sep' → logprob: -14.750935554504395
    7. '   ' → logprob: -14.875935554504395
    8. ''',' → logprob: -15.125935554504395
    9. ')' → logprob: -15.375935554504395
    10. '=end' → logprob: -16.000934600830078

Token 112: '="")
' (ID: 154840)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '='' → logprob: -0.003430792596191168
    2. '="' → logprob: -6.0034308433532715
    3. '=' → logprob: -7.1284308433532715
    4. '=''' → logprob: -10.003430366516113
    5. ''' → logprob: -10.128430366516113
    6. '('' → logprob: -10.378430366516113
    7. '"' → logprob: -11.253430366516113
    8. ')' → logprob: -11.378430366516113
    9. '='')
' → logprob: -11.753430366516113
    10. '''' → logprob: -13.128430366516113

Token 113: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00018196819291915745
    2. ' else' → logprob: -8.625182151794434
    3. '<|end|>' → logprob: -14.125182151794434
    4. '```' → logprob: -14.625182151794434
    5. 'elif' → logprob: -15.000182151794434
    6. '	else' → logprob: -15.250182151794434
    7. '#else' → logprob: -15.375182151794434
    8. '
' → logprob: -16.375181198120117
    9. 'elser' → logprob: -16.375181198120117
    10. '_else' → logprob: -16.500181198120117

Token 114: ' print' (ID: 2123)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -3.166338137816638e-05
    2. ' else' → logprob: -10.375031471252441
    3. 'elif' → logprob: -15.125031471252441
    4. '```' → logprob: -17.125032424926758
    5. '#else' → logprob: -17.750032424926758
    6. 'elser' → logprob: -17.875032424926758
    7. '    
' → logprob: -17.875032424926758
    8. 'els' → logprob: -18.375032424926758
    9. '
' → logprob: -18.750032424926758
    10. '}else' → logprob: -18.875032424926758

Token 115: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.719917630311102e-05
    2. '(' → logprob: -9.625077247619629
    3. '()
' → logprob: -11.875077247619629
    4. ' ()' → logprob: -13.375077247619629
    5. '("' → logprob: -14.375077247619629
    6. '("")' → logprob: -14.500077247619629
    7. '()`' → logprob: -14.875077247619629
    8. '()"' → logprob: -15.375077247619629
    9. '()>' → logprob: -15.750077247619629
    10. '("("' → logprob: -16.000076293945312

Token 116: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -4.60414821645827e-06
    2. ' else' → logprob: -12.750004768371582
    3. 'elif' → logprob: -13.375004768371582
    4. '```' → logprob: -16.625003814697266
    5. 'elser' → logprob: -17.750003814697266
    6. '#else' → logprob: -18.625003814697266
    7. '}else' → logprob: -19.875003814697266
    8. 'elses' → logprob: -19.875003814697266
    9. 'els' → logprob: -19.875003814697266
    10. '_else' → logprob: -20.000003814697266

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0521022230386734
    2. '   ' → logprob: -3.0521023273468018
    3. ':
' → logprob: -5.677102088928223
    4. '    ' → logprob: -10.052102088928223
    5. ' :' → logprob: -11.177102088928223
    6. '       ' → logprob: -12.052102088928223
    7. ' :
' → logprob: -12.427102088928223
    8. ' ' → logprob: -12.677102088928223
    9. ' for' → logprob: -12.927102088928223
    10. '(' → logprob: -13.177102088928223

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018020345596596599
    2. 'for' → logprob: -6.75180196762085
    3. ' for' → logprob: -7.37680196762085
    4. '	for' → logprob: -12.751802444458008
    5. ' ' → logprob: -13.126802444458008
    6. '       ' → logprob: -14.501802444458008
    7. '```' → logprob: -15.251802444458008
    8. '  ' → logprob: -15.626802444458008
    9. '   ' → logprob: -16.126802444458008
    10. '    ' → logprob: -16.751802444458008

Token 119: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.88418151892256e-05
    2. ' for' → logprob: -9.750059127807617
    3. 'while' → logprob: -14.750059127807617
    4. 'S' → logprob: -16.625059127807617
    5. '   ' → logprob: -19.375059127807617
    6. ' ' → logprob: -20.375059127807617
    7. '```' → logprob: -20.625059127807617
    8. ' S' → logprob: -21.000059127807617
    9. 'from' → logprob: -21.000059127807617
    10. '
' → logprob: -22.000059127807617

Token 120: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1270974576473236
    2. 'i' → logprob: -2.1270973682403564
    3. ' _' → logprob: -8.877097129821777
    4. '_i' → logprob: -11.252097129821777
    5. '_' → logprob: -11.502097129821777
    6. ' ' → logprob: -13.002097129821777
    7. '  ' → logprob: -13.502097129821777
    8. '   ' → logprob: -13.752097129821777
    9. '	i' → logprob: -14.377097129821777
    10. '    ' → logprob: -14.627097129821777

Token 121: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2014196664094925
    2. ' in' → logprob: -1.701419711112976
    3. '   ' → logprob: -12.451419830322266
    4. 'range' → logprob: -14.076419830322266
    5. '  ' → logprob: -14.701419830322266
    6. ' ' → logprob: -14.701419830322266
    7. '(len' → logprob: -14.826419830322266
    8. 'len' → logprob: -15.576419830322266
    9. '    ' → logprob: -16.326419830322266
    10. 'n' → logprob: -16.826419830322266

Token 122: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018159663304686546
    2. ' range' → logprob: -4.018159866333008
    3. '(range' → logprob: -11.643159866333008
    4. 're' → logprob: -14.643159866333008
    5. 'S' → logprob: -15.643159866333008
    6. 'reverse' → logprob: -15.643159866333008
    7. ' ' → logprob: -17.393159866333008
    8. ' reversed' → logprob: -17.518159866333008
    9. 'len' → logprob: -17.643159866333008
    10. '   ' → logprob: -17.768159866333008

Token 123: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -4.584861744660884e-05
    2. 'len' → logprob: -10.000045776367188
    3. 'range' → logprob: -15.375045776367188
    4. '(range' → logprob: -16.375045776367188
    5. ' len' → logprob: -17.500045776367188
    6. '=len' → logprob: -17.750045776367188
    7. '[len' → logprob: -17.875045776367188
    8. '(' → logprob: -19.000045776367188
    9. ',len' → logprob: -19.125045776367188
    10. '<len' → logprob: -19.750045776367188

Token 124: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -4.961759259458631e-06
    2. 'S' → logprob: -12.250004768371582
    3. '(' → logprob: -16.6250057220459
    4. '(s' → logprob: -18.7500057220459
    5. ')' → logprob: -18.8750057220459
    6. 's' → logprob: -19.6250057220459
    7. ' (' → logprob: -19.6250057220459
    8. '[S' → logprob: -19.8750057220459
    9. '(
' → logprob: -21.2500057220459
    10. '((' → logprob: -21.3750057220459

Token 125: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09074007719755173
    2. '()):
' → logprob: -3.2157399654388428
    3. ')-' → logprob: -4.465740203857422
    4. 'S' → logprob: -4.715740203857422
    5. '):' → logprob: -5.090740203857422
    6. '):

' → logprob: -5.215740203857422
    7. '-' → logprob: -5.340740203857422
    8. '(S' → logprob: -5.840740203857422
    9. '()' → logprob: -5.965740203857422
    10. ')' → logprob: -6.215740203857422

Token 126: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031946659088134766
    2. 'print' → logprob: -4.156946659088135
    3. '       ' → logprob: -4.781946659088135
    4. ' print' → logprob: -4.906946659088135
    5. '	print' → logprob: -12.531946182250977
    6. '    ' → logprob: -13.031946182250977
    7. ' ' → logprob: -13.281946182250977
    8. '```' → logprob: -13.906946182250977
    9. '  ' → logprob: -14.281946182250977
    10. '     ' → logprob: -14.656946182250977

Token 127: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00012844942102674395
    2. ' print' → logprob: -9.000128746032715
    3. '   ' → logprob: -12.250128746032715
    4. ' ' → logprob: -16.2501277923584
    5. '       ' → logprob: -16.7501277923584
    6. '```' → logprob: -18.0001277923584
    7. '  ' → logprob: -18.3751277923584
    8. '	print' → logprob: -18.8751277923584
    9. 'printf' → logprob: -19.3751277923584
    10. '    ' → logprob: -19.8751277923584

Token 128: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.700132997939363e-05
    2. 'S' → logprob: -11.375017166137695
    3. '(' → logprob: -12.125017166137695
    4. '()' → logprob: -17.625017166137695
    5. '(
' → logprob: -19.125017166137695
    6. '(s' → logprob: -19.625017166137695
    7. '('' → logprob: -19.750017166137695
    8. 's' → logprob: -19.875017166137695
    9. '((' → logprob: -20.000017166137695
    10. ')' → logprob: -20.750017166137695

Token 129: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0002600245934445411
    2. 'pop' → logprob: -8.375260353088379
    3. '.p' → logprob: -10.500260353088379
    4. '.' → logprob: -13.500260353088379
    5. ' .' → logprob: -15.375260353088379
    6. '.Pop' → logprob: -16.875259399414062
    7. '_pop' → logprob: -17.250259399414062
    8. '```' → logprob: -17.500259399414062
    9. '   ' → logprob: -17.750259399414062
    10. '.reverse' → logprob: -17.750259399414062

Token 130: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0001628956088097766
    2. '()' → logprob: -8.750163078308105
    3. ',' → logprob: -12.750163078308105
    4. ' (),' → logprob: -14.500163078308105
    5. ',end' → logprob: -15.375163078308105
    6. '()),' → logprob: -15.625163078308105
    7. '())' → logprob: -15.750163078308105
    8. '(end' → logprob: -16.00016212463379
    9. '()
' → logprob: -16.37516212463379
    10. '(),
' → logprob: -16.50016212463379

Token 131: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -3.7697225252486533e-06
    2. ' end' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.125003814697266
    4. '(end' → logprob: -19.500003814697266
    5. '=end' → logprob: -20.125003814697266
    6. ',end' → logprob: -21.375003814697266
    7. '	end' → logprob: -21.500003814697266
    8. '[end' → logprob: -21.750003814697266
    9. ' ' → logprob: -22.250003814697266
    10. ''end' → logprob: -22.625003814697266

Token 132: '="")
' (ID: 154840)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16350531578063965
    2. '="' → logprob: -1.9135053157806396
    3. '""' → logprob: -6.038505554199219
    4. '(""))' → logprob: -7.163505554199219
    5. '=""' → logprob: -9.913505554199219
    6. '("")' → logprob: -10.163505554199219
    7. '="")
' → logprob: -11.038505554199219
    8. ' "")' → logprob: -12.413505554199219
    9. ')' → logprob: -12.413505554199219
    10. '("' → logprob: -13.788505554199219

Token 133: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2663934528827667
    2. '()' → logprob: -1.5163934230804443
    3. '()
' → logprob: -4.766393661499023
    4. '"\' → logprob: -5.391393661499023
    5. '""' → logprob: -7.516393661499023
    6. '```' → logprob: -8.016393661499023
    7. '()\' → logprob: -8.266393661499023
    8. '``' → logprob: -10.141393661499023
    9. ' print' → logprob: -10.516393661499023
    10. '("\' → logprob: -10.766393661499023

Token 134: ' print' (ID: 2123)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.576475977897644
    2. '"' → logprob: -0.826475977897644
    3. '"\' → logprob: -7.576476097106934
    4. '")' → logprob: -11.701476097106934
    5. 'print' (adapté à ' print') → logprob: -12.576476097106934
    6. '"""' → logprob: -12.701476097106934
    7. '("")' → logprob: -13.076476097106934
    8. ')' → logprob: -13.201476097106934
    9. '"",
' → logprob: -13.701476097106934
    10. '``' → logprob: -13.951476097106934

Token 135: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.2200749754119897e-06
    2. '()`' → logprob: -13.500001907348633
    3. '()
' → logprob: -15.250001907348633
    4. '(' → logprob: -16.000001907348633
    5. '())' → logprob: -16.625001907348633
    6. '()

' → logprob: -16.750001907348633
    7. ' ()' → logprob: -16.875001907348633
    8. '()<' → logprob: -17.375001907348633
    9. '()]' → logprob: -17.375001907348633
    10. '()\' → logprob: -17.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 133
Tokens correctement prédits (1ère position, stricte): 53
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 108
Précision stricte (1ère position): 39.85%
Précision adaptée (1ère position): 45.11%
Précision (top 10): 81.20%
================================================================================
