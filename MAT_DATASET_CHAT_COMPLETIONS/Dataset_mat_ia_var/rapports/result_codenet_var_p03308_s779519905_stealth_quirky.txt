================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
get = lambda: [*map(int, input().split())]
p = lambda x: __import__('builtins').print(x)

(n_,),(seq,) = get(), get(),

high = seq[~-len(seq)]
low = seq[0] if 0 in [0] else -42

for wut in seq:
    if wut > high: high = wut
    if wut < low: low = wut

p(high - low)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'get' (ID: 522)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' lambda' (ID: 27871)
  → Token d'amorce (pas de prédiction)

Token 3: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.26982152462005615
    2. ' s' → logprob: -2.3948216438293457
    3. ' ' → logprob: -3.0198216438293457
    4. ' a' → logprob: -3.3948216438293457
    5. ' space' → logprob: -3.3948216438293457
    6. 'x' → logprob: -5.144821643829346
    7. ' (' → logprob: -5.394821643829346
    8. ' get' → logprob: -5.519821643829346
    9. ' ' → logprob: -6.019821643829346
    10. '_' → logprob: -6.394821643829346

Token 4: ' [' (ID: 723)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.779599130153656
    2. ' input' → logprob: -1.0295991897583008
    3. ' ' → logprob: -2.654599189758301
    4. 'input' → logprob: -2.654599189758301
    5. 'None' → logprob: -4.029599189758301
    6. ' []' → logprob: -4.779599189758301
    7. ' True' → logprob: -5.029599189758301
    8. ' '' → logprob: -6.779599189758301
    9. ' "' → logprob: -7.029599189758301
    10. ' ()' → logprob: -7.029599189758301

Token 5: '*' (ID: 9)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.032559674233198166
    2. '1' → logprob: -3.657559633255005
    3. '0' → logprob: -5.407559871673584
    4. ']int' → logprob: -8.157559394836426
    5. ' ' → logprob: -8.532559394836426
    6. '   ' → logprob: -8.657559394836426
    7. 'x' → logprob: -9.032559394836426
    8. ' ]' → logprob: -9.032559394836426
    9. '<|end|>' → logprob: -9.157559394836426
    10. '()]' → logprob: -9.532559394836426

Token 6: 'map' (ID: 3726)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012684457935392857
    2. ' range' → logprob: -5.137684345245361
    3. 'iter' → logprob: -5.387684345245361
    4. 'map' → logprob: -8.13768482208252
    5. '(range' → logprob: -8.26268482208252
    6. 'input' → logprob: -8.26268482208252
    7. 'get' → logprob: -8.51268482208252
    8. '{' → logprob: -9.01268482208252
    9. '()]' → logprob: -9.01268482208252
    10. ']' → logprob: -9.26268482208252

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8808044791221619
    2. '(str' → logprob: -1.0058045387268066
    3. '(int' → logprob: -2.2558045387268066
    4. '(lambda' → logprob: -2.3808045387268066
    5. '(ord' → logprob: -4.005804538726807
    6. '(chr' → logprob: -6.505804538726807
    7. '(eval' → logprob: -7.380804538726807
    8. 'str' → logprob: -7.755804538726807
    9. '(get' → logprob: -8.130804061889648
    10. '(range' → logprob: -8.255804061889648

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5716818571090698
    2. '(' → logprob: -1.4466818571090698
    3. '(get' → logprob: -1.8216818571090698
    4. '(range' → logprob: -4.946681976318359
    5. '(open' → logprob: -5.446681976318359
    6. '((' → logprob: -5.571681976318359
    7. ')' → logprob: -5.696681976318359
    8. '(user' → logprob: -6.071681976318359
    9. '(eval' → logprob: -6.196681976318359
    10. ',' → logprob: -6.946681976318359

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04015647619962692
    2. ' input' → logprob: -3.290156364440918
    3. '(input' → logprob: -6.290156364440918
    4. ',input' → logprob: -9.665156364440918
    5. ')' → logprob: -10.040156364440918
    6. 'open' → logprob: -10.665156364440918
    7. 'list' → logprob: -10.665156364440918
    8. '(' → logprob: -11.040156364440918
    9. 'range' → logprob: -11.165156364440918
    10. '<input' → logprob: -11.290156364440918

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -1.1561866998672485
    2. '()' → logprob: -1.4061866998672485
    3. '(' → logprob: -1.5311866998672485
    4. '(()' → logprob: -2.031186580657959
    5. '()]' → logprob: -2.781186580657959
    6. '('' → logprob: -5.156186580657959
    7. '());' → logprob: -5.656186580657959
    8. ')' → logprob: -5.781186580657959
    9. '("("' → logprob: -6.281186580657959
    10. '();)' → logprob: -6.281186580657959

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00029708960209973156
    2. 'strip' → logprob: -8.250297546386719
    3. 'rstrip' → logprob: -10.375297546386719
    4. ' split' → logprob: -13.000297546386719
    5. 'read' → logprob: -13.375297546386719
    6. 'spl' → logprob: -14.500297546386719
    7. '(split' → logprob: -16.25029754638672
    8. 'rs' → logprob: -17.00029754638672
    9. 'startswith' → logprob: -17.75029754638672
    10. ' ' → logprob: -18.50029754638672

Token 12: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00856564100831747
    2. '()))' → logprob: -4.883565425872803
    3. '()' → logprob: -7.383565425872803
    4. '()]' → logprob: -8.258565902709961
    5. ')]' → logprob: -10.508565902709961
    6. '(' → logprob: -11.133565902709961
    7. '))' → logprob: -11.508565902709961
    8. ')' → logprob: -11.758565902709961
    9. '()),' → logprob: -11.758565902709961
    10. ' ())' → logprob: -13.008565902709961

Token 13: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006766928127035499
    2. ')' → logprob: -7.50067663192749
    3. ']' → logprob: -9.500677108764648
    4. ')])' → logprob: -10.375677108764648
    5. '()]' → logprob: -12.500677108764648
    6. '())' → logprob: -12.750677108764648
    7. '))' → logprob: -13.000677108764648
    8. '])' → logprob: -13.000677108764648
    9. '')]' → logprob: -13.250677108764648
    10. ' )' → logprob: -13.625677108764648

Token 14: 'p' (ID: 79)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3137821853160858
    2. '()' → logprob: -1.9387822151184082
    3. 'x' → logprob: -3.188782215118408
    4. '\n' → logprob: -4.063782215118408
    5. 'a' → logprob: -4.688782215118408
    6. '#' → logprob: -4.688782215118408
    7. '(
' → logprob: -4.813782215118408
    8. '[' → logprob: -4.938782215118408
    9. '\' → logprob: -5.188782215118408
    10. 'get' → logprob: -5.563782215118408

Token 15: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0001137947037932463
    2. 'rin' → logprob: -9.875113487243652
    3. 'ri' → logprob: -10.125113487243652
    4. 'print' → logprob: -11.250113487243652
    5. 'u' → logprob: -12.750113487243652
    6. 'a' → logprob: -12.875113487243652
    7. 'i' → logprob: -14.625113487243652
    8. '=' → logprob: -14.625113487243652
    9. 'int' → logprob: -15.125113487243652
    10. '#' → logprob: -15.250113487243652

Token 16: ' lambda' (ID: 27871)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.705457329750061
    2. ' get' → logprob: -0.705457329750061
    3. ' ' → logprob: -4.8304572105407715
    4. ' int' → logprob: -6.2054572105407715
    5. 'int' → logprob: -7.2054572105407715
    6. '0' → logprob: -7.7054572105407715
    7. '[get' → logprob: -8.33045768737793
    8. '1' → logprob: -8.45545768737793
    9. ' p' → logprob: -8.83045768737793
    10. ' []' → logprob: -9.45545768737793

Token 17: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06603743135929108
    2. ':' → logprob: -3.94103741645813
    3. ' s' → logprob: -4.191037654876709
    4. ' n' → logprob: -4.816037654876709
    5. 'x' → logprob: -5.066037654876709
    6. ' f' → logprob: -5.566037654876709
    7. ' a' → logprob: -6.566037654876709
    8. ' int' → logprob: -6.691037654876709
    9. ' p' → logprob: -6.691037654876709
    10. ' :' → logprob: -6.691037654876709

Token 18: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007498724386096001
    2. ' :' → logprob: -5.007498741149902
    3. ':x' → logprob: -8.382498741149902
    4. ':return' → logprob: -8.382498741149902
    5. ',' → logprob: -9.882498741149902
    6. ':[' → logprob: -10.132498741149902
    7. '[:' → logprob: -10.507498741149902
    8. '**' → logprob: -10.632498741149902
    9. ':**' → logprob: -10.632498741149902
    10. ':(' → logprob: -11.382498741149902

Token 19: ' __' (ID: 2516)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022650440223515034
    2. 'str' → logprob: -6.752264976501465
    3. ' print' → logprob: -6.877264976501465
    4. ' str' → logprob: -10.002264976501465
    5. ''' → logprob: -11.502264976501465
    6. 'f' → logprob: -12.752264976501465
    7. 'x' → logprob: -13.377264976501465
    8. '(str' → logprob: -13.877264976501465
    9. '"' → logprob: -14.252264976501465
    10. '(print' → logprob: -14.627264976501465

Token 20: 'import' (ID: 561)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009442188893444836
    2. ''' → logprob: -7.375944137573242
    3. 'str' → logprob: -8.250944137573242
    4. 'x' → logprob: -10.625944137573242
    5. ' print' → logprob: -10.875944137573242
    6. '"' → logprob: -12.125944137573242
    7. 'list' → logprob: -13.125944137573242
    8. 'f' → logprob: -13.750944137573242
    9. ' str' → logprob: -14.250944137573242
    10. ''x' → logprob: -14.250944137573242

Token 21: '__('' (ID: 54460)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9190149903297424
    2. '('' → logprob: -1.0440149307250977
    3. '__('' → logprob: -1.7940149307250977
    4. '("' → logprob: -2.7940149307250977
    5. '__("' → logprob: -4.419014930725098
    6. '__' → logprob: -5.794014930725098
    7. '('__' → logprob: -6.794014930725098
    8. '()' → logprob: -6.919014930725098
    9. '("__' → logprob: -7.169014930725098
    10. '(print' → logprob: -7.669014930725098

Token 22: 'built' (ID: 81936)
  Prédit: 'built'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'built' → logprob: -0.05619942769408226
    2. 'sys' → logprob: -3.181199312210083
    3. 'p' → logprob: -4.931199550628662
    4. 'print' → logprob: -6.306199550628662
    5. 'math' → logprob: -6.431199550628662
    6. 'fun' → logprob: -6.806199550628662
    7. ' built' → logprob: -7.681199550628662
    8. '__' → logprob: -8.181199073791504
    9. 'it' → logprob: -8.806199073791504
    10. ''' → logprob: -9.306199073791504

Token 23: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -1.6240566083070007e-06
    2. 'in' → logprob: -13.625001907348633
    3. '```' → logprob: -16.000001907348633
    4. 'i' → logprob: -16.125001907348633
    5. '``' → logprob: -17.750001907348633
    6. 'insi' → logprob: -18.375001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '...' → logprob: -18.500001907348633
    9. '-ins' → logprob: -19.125001907348633
    10. '__' → logprob: -19.125001907348633

Token 24: '').' (ID: 3426)
  Prédit: '.print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -0.3652389645576477
    2. '.' → logprob: -1.240238904953003
    3. ').' → logprob: -5.115239143371582
    4. '.p' → logprob: -5.240239143371582
    5. '').' → logprob: -5.990239143371582
    6. '.__' → logprob: -6.865239143371582
    7. 'print' → logprob: -7.490239143371582
    8. '.pr' → logprob: -7.615239143371582
    9. ').__' → logprob: -8.740239143371582
    10. ' .' → logprob: -9.115239143371582

Token 25: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0087516784551553e-05
    2. 'pow' → logprob: -11.75001049041748
    3. 'sum' → logprob: -15.62501049041748
    4. 'int' → logprob: -15.62501049041748
    5. '__' → logprob: -15.75001049041748
    6. 'abs' → logprob: -15.87501049041748
    7. 'len' → logprob: -15.87501049041748
    8. 'printf' → logprob: -16.000009536743164
    9. '#print' → logprob: -16.000009536743164
    10. 'str' → logprob: -16.125009536743164

Token 26: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018442784203216434
    2. '(x' → logprob: -6.62684440612793
    3. '(*' → logprob: -7.87684440612793
    4. '(
' → logprob: -10.00184440612793
    5. '()' → logprob: -10.87684440612793
    6. '(**' → logprob: -11.00184440612793
    7. '('' → logprob: -11.00184440612793
    8. '((' → logprob: -11.25184440612793
    9. '(eval' → logprob: -12.50184440612793
    10. '(len' → logprob: -13.12684440612793

Token 27: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.643152740551159e-05
    2. '))' → logprob: -10.250036239624023
    3. ' )' → logprob: -15.250036239624023
    4. ')))' → logprob: -15.250036239624023
    5. ')`' → logprob: -16.000036239624023
    6. ')}' → logprob: -16.500036239624023
    7. '')' → logprob: -16.875036239624023
    8. '`)' → logprob: -16.875036239624023
    9. ')])' → logprob: -17.125036239624023
    10. '),' → logprob: -17.375036239624023

Token 28: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1610950231552124
    2. 'd' → logprob: -3.286095142364502
    3. 'n' → logprob: -3.786095142364502
    4. '#' → logprob: -4.036095142364502
    5. '\' → logprob: -4.286095142364502
    6. '\n' → logprob: -4.286095142364502
    7. 'g' → logprob: -5.161095142364502
    8. '_' → logprob: -5.161095142364502
    9. 'def' → logprob: -5.286095142364502
    10. '[' → logprob: -5.286095142364502

Token 29: '_,' (ID: 14152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5080884099006653
    2. ')' → logprob: -1.7580883502960205
    3. ',)' → logprob: -1.7580883502960205
    4. ' :=' → logprob: -3.7580883502960205
    5. ':=' → logprob: -4.3830885887146
    6. ',n' → logprob: -5.0080885887146
    7. 'umber' → logprob: -5.2580885887146
    8. 'um' → logprob: -6.6330885887146
    9. 'umbers' → logprob: -6.8830885887146
    10. ' )' → logprob: -7.0080885887146

Token 30: '),(' (ID: 54876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7252733707427979
    2. 'n' → logprob: -1.6002733707427979
    3. 'm' → logprob: -2.975273370742798
    4. '*' → logprob: -3.100273370742798
    5. ' n' → logprob: -3.100273370742798
    6. ' *' → logprob: -3.100273370742798
    7. '*n' → logprob: -3.725273370742798
    8. 'get' → logprob: -3.850273370742798
    9. ' )' → logprob: -4.100273132324219
    10. 'k' → logprob: -4.600273132324219

Token 31: 'seq' (ID: 27794)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5278160572052002
    2. 'a' → logprob: -2.1528160572052
    3. 'n' → logprob: -2.1528160572052
    4. '*' → logprob: -3.6528160572052
    5. ' n' → logprob: -3.6528160572052
    6. 'm' → logprob: -3.7778160572052
    7. ')=' → logprob: -3.7778160572052
    8. '*n' → logprob: -4.027815818786621
    9. '*a' → logprob: -4.777815818786621
    10. ' a' → logprob: -4.902815818786621

Token 32: ',)' (ID: 83132)
  Prédit: ',)'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',)' → logprob: -0.7058278322219849
    2. ')=' → logprob: -1.0808278322219849
    3. ')' → logprob: -1.8308278322219849
    4. ',' → logprob: -5.580827713012695
    5. ',),' → logprob: -6.580827713012695
    6. '),' → logprob: -7.080827713012695
    7. '=' → logprob: -7.705827713012695
    8. ' )' → logprob: -9.080827713012695
    9. ',:)' → logprob: -10.205827713012695
    10. 's' → logprob: -11.080827713012695

Token 33: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003637726651504636
    2. ' =' → logprob: -5.628637790679932
    3. '=n' → logprob: -11.003637313842773
    4. '=get' → logprob: -11.253637313842773
    5. '=input' → logprob: -13.253637313842773
    6. '=user' → logprob: -13.503637313842773
    7. '=p' → logprob: -14.003637313842773
    8. ',' → logprob: -14.753637313842773
    9. '=}' → logprob: -14.753637313842773
    10. '=line' → logprob: -15.003637313842773

Token 34: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.49226754903793335
    2. '[get' → logprob: -0.9922675490379333
    3. '(get' → logprob: -4.867267608642578
    4. '[' → logprob: -5.492267608642578
    5. ' get' → logprob: -6.117267608642578
    6. '[n' → logprob: -6.992267608642578
    7. '[*' → logprob: -7.117267608642578
    8. 'map' → logprob: -7.617267608642578
    9. ' [' → logprob: -7.742267608642578
    10. '[p' → logprob: -8.117267608642578

Token 35: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10450781881809235
    2. ',' → logprob: -2.4795079231262207
    3. '(),' → logprob: -4.854507923126221
    4. '<|end|>' → logprob: -5.104507923126221
    5. '(' → logprob: -6.854507923126221
    6. '()
' → logprob: -9.479507446289062
    7. '<|end|>' → logprob: -9.604507446289062
    8. ' ()' → logprob: -9.604507446289062
    9. '();' → logprob: -9.979507446289062
    10. '(n' → logprob: -10.604507446289062

Token 36: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.7422589659690857
    2. ' get' → logprob: -0.7422589659690857
    3. '[get' → logprob: -3.8672590255737305
    4. '(get' → logprob: -4.1172590255737305
    5. ' (' → logprob: -5.4922590255737305
    6. ' [' → logprob: -5.9922590255737305
    7. '[' → logprob: -6.4922590255737305
    8. ' ' → logprob: -7.4922590255737305
    9. '(' → logprob: -7.7422590255737305
    10. ' p' → logprob: -8.24225902557373

Token 37: '(),

' (ID: 187223)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -2.2127087504486553e-05
    2. '()
' → logprob: -12.000021934509277
    3. '(' → logprob: -12.500021934509277
    4. '()`' → logprob: -13.250021934509277
    5. '()]' → logprob: -13.250021934509277
    6. '();' → logprob: -13.750021934509277
    7. '`()' → logprob: -13.750021934509277
    8. '()(' → logprob: -13.875021934509277
    9. '()<' → logprob: -14.000021934509277
    10. '()

' → logprob: -14.250021934509277

Token 38: 'high' (ID: 21116)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5977755784988403
    2. '[n' → logprob: -2.222775459289551
    3. 'sum' → logprob: -2.222775459289551
    4. 'seq' → logprob: -2.222775459289551
    5. '[' → logprob: -2.472775459289551
    6. 'n' → logprob: -2.722775459289551
    7. 'sorted' → logprob: -3.222775459289551
    8. 'len' → logprob: -3.597775459289551
    9. ' p' → logprob: -3.722775459289551
    10. '[*' → logprob: -3.722775459289551

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5902872085571289
    2. 'est' → logprob: -1.715287208557129
    3. '_' → logprob: -1.840287208557129
    4. 'er' → logprob: -3.340287208557129
    5. 's' → logprob: -3.715287208557129
    6. '=' → logprob: -3.715287208557129
    7. ',' → logprob: -4.590287208557129
    8. '<|end|>' → logprob: -6.090287208557129
    9. '=[]' → logprob: -7.090287208557129
    10. ' ' → logprob: -7.090287208557129

Token 40: ' seq' (ID: 26775)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.340956449508667
    2. 'seq' → logprob: -2.215956449508667
    3. ' max' → logprob: -2.715956449508667
    4. '0' → logprob: -2.840956449508667
    5. '-' → logprob: -4.090956687927246
    6. ' seq' → logprob: -4.715956687927246
    7. 'float' → logprob: -4.840956687927246
    8. '[]' → logprob: -5.340956687927246
    9. '[' → logprob: -5.465956687927246
    10. '[max' → logprob: -6.090956687927246

Token 41: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024074772372841835
    2. '[:]' → logprob: -3.8990747928619385
    3. '.' → logprob: -5.899074554443359
    4. '.copy' → logprob: -8.39907455444336
    5. '[:' → logprob: -8.52407455444336
    6. '[-' → logprob: -9.14907455444336
    7. '[::-' → logprob: -9.52407455444336
    8. ',' → logprob: -10.39907455444336
    9. '[]' → logprob: -10.64907455444336
    10. '.[' → logprob: -11.14907455444336

Token 42: '~-' (ID: 116107)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03171132877469063
    2. '-' → logprob: -3.5317113399505615
    3. ' ' → logprob: -6.406711101531982
    4. '1' → logprob: -9.15671157836914
    5. ' -' → logprob: -9.40671157836914
    6. ':' → logprob: -9.90671157836914
    7. ']' → logprob: -10.90671157836914
    8. '[' → logprob: -11.65671157836914
    9. ')' → logprob: -11.78171157836914
    10. 'len' → logprob: -12.28171157836914

Token 43: 'len' (ID: 3303)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19731244444847107
    2. 'n' → logprob: -2.197312355041504
    3. 'len' → logprob: -2.822312355041504
    4. '0' → logprob: -5.322312355041504
    5. ' ' → logprob: -7.197312355041504
    6. 'p' → logprob: -7.447312355041504
    7. '-' → logprob: -7.697312355041504
    8. '(' → logprob: -7.822312355041504
    9. ' n' → logprob: -8.072312355041504
    10. '(n' → logprob: -8.197312355041504

Token 44: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.055619221180677414
    2. 'seq' → logprob: -2.930619239807129
    3. ' seq' → logprob: -8.680619239807129
    4. '(' → logprob: -8.680619239807129
    5. '(sequence' → logprob: -8.805619239807129
    6. '(high' → logprob: -9.430619239807129
    7. 'high' → logprob: -9.680619239807129
    8. ')' → logprob: -11.180619239807129
    9. ']' → logprob: -11.305619239807129
    10. '(se' → logprob: -11.430619239807129

Token 45: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005040083080530167
    2. ']' → logprob: -5.880040168762207
    3. ')' → logprob: -7.255040168762207
    4. ')])' → logprob: -7.880040168762207
    5. ' )' → logprob: -8.130040168762207
    6. ')],' → logprob: -8.255040168762207
    7. '])' → logprob: -8.505040168762207
    8. ')]

' → logprob: -9.505040168762207
    9. ')]
' → logprob: -9.505040168762207
    10. '])]' → logprob: -9.755040168762207

Token 46: 'low' (ID: 14739)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023802760988473892
    2. '=' → logprob: -3.7738027572631836
    3. ',' → logprob: -8.023802757263184
    4. ' ' → logprob: -8.523802757263184
    5. ' ,' → logprob: -11.273802757263184
    6. ' =)' → logprob: -13.023802757263184
    7. '[' → logprob: -13.148802757263184
    8. '  ' → logprob: -13.148802757263184
    9. '_' → logprob: -13.273802757263184
    10. ')' → logprob: -13.398802757263184

Token 48: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.4237235486507416
    2. 'seq' → logprob: -1.173723578453064
    3. ' min' → logprob: -4.0487236976623535
    4. 'min' → logprob: -4.5487236976623535
    5. ' ' → logprob: -5.9237236976623535
    6. '0' → logprob: -6.6737236976623535
    7. ' max' → logprob: -6.7987236976623535
    8. 'max' → logprob: -7.1737236976623535
    9. ' high' → logprob: -7.1737236976623535
    10. 'high' → logprob: -7.9237236976623535

Token 49: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14322270452976227
    2. '[-' → logprob: -2.3932228088378906
    3. '[:]' → logprob: -3.6432228088378906
    4. '[::-' → logprob: -4.768222808837891
    5. '<|end|>' → logprob: -6.268222808837891
    6. '[:-' → logprob: -6.518222808837891
    7. '[:' → logprob: -7.018222808837891
    8. '[len' → logprob: -7.018222808837891
    9. '.' → logprob: -7.518222808837891
    10. '[]' → logprob: -8.51822280883789

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2679020166397095
    2. '-' → logprob: -1.7679020166397095
    3. '1' → logprob: -3.14290189743042
    4. ' ' → logprob: -4.89290189743042
    5. ':' → logprob: -5.76790189743042
    6. ']' → logprob: -6.39290189743042
    7. '])' → logprob: -6.70540189743042
    8. '~-' → logprob: -6.76790189743042
    9. ' -' → logprob: -6.95540189743042
    10. '~' → logprob: -7.08040189743042

Token 51: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010393599513918161
    2. ' ]' → logprob: -7.126039505004883
    3. ']
' → logprob: -9.126039505004883
    4. ')' → logprob: -9.626039505004883
    5. ')]' → logprob: -11.126039505004883
    6. '+' → logprob: -11.251039505004883
    7. ']

' → logprob: -11.376039505004883
    8. '-' → logprob: -12.501039505004883
    9. '<|end|>' → logprob: -12.626039505004883
    10. '])' → logprob: -12.751039505004883

Token 52: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' ' (ID: 220)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.9752516746520996
    2. ' seq' → logprob: -0.9752516746520996
    3. ' high' → logprob: -2.7252516746520996
    4. ' low' → logprob: -2.8502516746520996
    5. ' p' → logprob: -3.2252516746520996
    6. 'len' → logprob: -3.4752516746520996
    7. 'seq' → logprob: -4.1002516746521
    8. ' n' → logprob: -4.4752516746521
    9. ' not' → logprob: -5.2252516746521
    10. 'high' → logprob: -5.6002516746521

Token 54: '0' (ID: 15)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.9963127970695496
    2. 'len' → logprob: -1.2463128566741943
    3. ' seq' → logprob: -2.1213128566741943
    4. ' high' → logprob: -2.6213128566741943
    5. 'seq' → logprob: -3.1213128566741943
    6. ' low' → logprob: -3.3713128566741943
    7. 'high' → logprob: -3.9963128566741943
    8. ' n' → logprob: -4.246312618255615
    9. 'low' → logprob: -4.371312618255615
    10. 'n' → logprob: -4.496312618255615

Token 55: ' in' (ID: 306)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.617645263671875
    2. ' else' → logprob: -2.367645263671875
    3. ' <=' → logprob: -2.492645263671875
    4. ' ==' → logprob: -2.617645263671875
    5. ' >' → logprob: -3.367645263671875
    6. '==' → logprob: -3.367645263671875
    7. ' !=' → logprob: -3.492645263671875
    8. '<' → logprob: -3.742645263671875
    9. ' ' → logprob: -3.742645263671875
    10. 'else' → logprob: -3.867645263671875

Token 56: ' [' (ID: 723)
  Prédit: ' seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.046059634536504745
    2. 'seq' → logprob: -3.1710596084594727
    3. ' low' → logprob: -6.171059608459473
    4. ' high' → logprob: -7.796059608459473
    5. ' sequence' → logprob: -8.421059608459473
    6. ' ' → logprob: -9.421059608459473
    7. '(seq' → logprob: -9.671059608459473
    8. 'low' → logprob: -9.921059608459473
    9. '  ' → logprob: -10.421059608459473
    10. '[' → logprob: -10.796059608459473

Token 57: '0' (ID: 15)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.7079229950904846
    2. ' seq' → logprob: -0.8329229950904846
    3. ' high' → logprob: -2.95792293548584
    4. 'high' → logprob: -4.45792293548584
    5. ' low' → logprob: -6.45792293548584
    6. ' ' → logprob: -6.70792293548584
    7. ' sequence' → logprob: -6.70792293548584
    8. ' p' → logprob: -6.83292293548584
    9. 'low' → logprob: -7.20792293548584
    10. '(seq' → logprob: -7.58292293548584

Token 58: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10699654370546341
    2. ' ,' → logprob: -2.856996536254883
    3. ',len' → logprob: -3.481996536254883
    4. ']' → logprob: -4.856996536254883
    5. ',n' → logprob: -7.231996536254883
    6. ' ' → logprob: -7.481996536254883
    7. ' ]' → logprob: -7.606996536254883
    8. ',
' → logprob: -7.856996536254883
    9. ',-' → logprob: -7.856996536254883
    10. 'low' → logprob: -7.981996536254883

Token 59: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.04939385876059532
    2. 'else' → logprob: -3.049393892288208
    3. ' ' → logprob: -8.424393653869629
    4. ' and' → logprob: -8.424393653869629
    5. '<|end|>' → logprob: -8.549393653869629
    6. ' or' → logprob: -9.799393653869629
    7. ':' → logprob: -10.299393653869629
    8. ',' → logprob: -11.299393653869629
    9. 'and' → logprob: -11.424393653869629
    10. '==' → logprob: -12.049393653869629

Token 60: ' -' (ID: 533)
  Prédit: ' seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.9457533955574036
    2. ' high' → logprob: -1.5707533359527588
    3. 'seq' → logprob: -1.5707533359527588
    4. 'high' → logprob: -2.820753335952759
    5. ' ' → logprob: -2.945753335952759
    6. ' low' → logprob: -3.695753335952759
    7. ' None' → logprob: -4.195753574371338
    8. '0' → logprob: -4.320753574371338
    9. ' -' → logprob: -4.945753574371338
    10. 'low' → logprob: -5.195753574371338

Token 61: '42' (ID: 4689)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.119722880423069
    2. 'high' → logprob: -3.369722843170166
    3. 'seq' → logprob: -3.744722843170166
    4. 'low' → logprob: -4.494722843170166
    5. 'len' → logprob: -4.869722843170166
    6. ' ' → logprob: -4.994722843170166
    7. ' high' → logprob: -5.244722843170166
    8. '-' → logprob: -5.494722843170166
    9. '0' → logprob: -5.994722843170166
    10. 'inf' → logprob: -6.119722843170166

Token 62: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' w' (ID: 286)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16905948519706726
    2. 'i' → logprob: -2.4190595149993896
    3. ' x' → logprob: -3.0440595149993896
    4. 'x' → logprob: -4.9190592765808105
    5. '_' → logprob: -5.6690592765808105
    6. ' ' → logprob: -6.1690592765808105
    7. ' num' → logprob: -6.5440592765808105
    8. ' _' → logprob: -6.6690592765808105
    9. ' val' → logprob: -6.6690592765808105
    10. ' v' → logprob: -7.5440592765808105

Token 65: 'ut' (ID: 339)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03406091779470444
    2. 'in' → logprob: -3.4090609550476074
    3. ' ' → logprob: -8.40906047821045
    4. 'i' → logprob: -9.40906047821045
    5. ',' → logprob: -10.40906047821045
    6. ' i' → logprob: -11.28406047821045
    7. '  ' → logprob: -11.28406047821045
    8. 'e' → logprob: -11.78406047821045
    9. '_' → logprob: -12.03406047821045
    10. '   ' → logprob: -12.47156047821045

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013185526244342327
    2. 'in' → logprob: -4.513185501098633
    3. ',' → logprob: -6.763185501098633
    4. ' ' → logprob: -7.638185501098633
    5. '  ' → logprob: -8.888185501098633
    6. ' ,' → logprob: -9.263185501098633
    7. ' i' → logprob: -9.638185501098633
    8. '_' → logprob: -10.138185501098633
    9. 'i' → logprob: -10.638185501098633
    10. 'w' → logprob: -11.138185501098633

Token 67: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.16570816934108734
    2. 'range' → logprob: -2.540708065032959
    3. ' seq' → logprob: -3.040708065032959
    4. ' range' → logprob: -3.665708065032959
    5. 'sequence' → logprob: -8.665708541870117
    6. ' sequence' → logprob: -9.540708541870117
    7. '[' → logprob: -9.915708541870117
    8. 'high' → logprob: -10.165708541870117
    9. '(seq' → logprob: -10.290708541870117
    10. ' ' → logprob: -10.415708541870117

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014749871334061027
    2. ' :' → logprob: -6.751474857330322
    3. ':
' → logprob: -8.25147533416748
    4. '>' → logprob: -11.62647533416748
    5. '   ' → logprob: -11.62647533416748
    6. ' ' → logprob: -12.37647533416748
    7. '>:' → logprob: -13.12647533416748
    8. '.' → logprob: -13.25147533416748
    9. ':

' → logprob: -13.50147533416748
    10. ',' → logprob: -13.62647533416748

Token 69: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7713398337364197
    2. '   ' → logprob: -1.5213398933410645
    3. '<|end|>' → logprob: -1.6463398933410645
    4. ' if' → logprob: -2.6463398933410645
    5. ' 
' → logprob: -3.6463398933410645
    6. '  ' → logprob: -4.8963398933410645
    7. '    ' → logprob: -5.2713398933410645
    8. ' high' → logprob: -5.6463398933410645
    9. ':' → logprob: -6.6463398933410645
    10. '    
' → logprob: -6.6463398933410645

Token 70: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3209360837936401
    2. ' if' → logprob: -1.3209360837936401
    3. '<|end|>' → logprob: -1.5709360837936401
    4. ' high' → logprob: -1.6959360837936401
    5. 'high' → logprob: -3.4459362030029297
    6. '    ' → logprob: -4.19593620300293
    7. ' w' → logprob: -4.94593620300293
    8. ' low' → logprob: -5.57093620300293
    9. '   ' → logprob: -5.69593620300293
    10. 'if' (adapté à ' if') → logprob: -5.94593620300293

Token 71: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.012840057723224163
    2. 'w' → logprob: -4.387840270996094
    3. ' high' → logprob: -8.637840270996094
    4. '   ' → logprob: -9.512840270996094
    5. ' ' → logprob: -10.012840270996094
    6. '  ' → logprob: -11.387840270996094
    7. '    ' → logprob: -11.637840270996094
    8. 'high' → logprob: -12.387840270996094
    9. '	w' → logprob: -13.012840270996094
    10. ' not' → logprob: -13.825340270996094

Token 72: 'ut' (ID: 339)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.15066362917423248
    2. '>' → logprob: -2.0256636142730713
    3. ' <' → logprob: -6.02566385269165
    4. ' ' → logprob: -6.27566385269165
    5. 'w' → logprob: -6.40066385269165
    6. 'ut' → logprob: -7.40066385269165
    7. '<' → logprob: -8.025663375854492
    8. '>w' → logprob: -8.525663375854492
    9. '   ' → logprob: -8.650663375854492
    10. '  ' → logprob: -9.275663375854492

Token 73: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3199959397315979
    2. '>' → logprob: -1.3199958801269531
    3. ' <' → logprob: -5.319995880126953
    4. ' ' → logprob: -6.944995880126953
    5. '<' → logprob: -7.319995880126953
    6. ' >=' → logprob: -10.194995880126953
    7. ' high' → logprob: -10.444995880126953
    8. '   ' → logprob: -10.444995880126953
    9. '<|end|>' → logprob: -10.944995880126953
    10. 'high' → logprob: -11.444995880126953

Token 74: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.03381766378879547
    2. ' high' → logprob: -3.408817768096924
    3. ' ' → logprob: -9.783817291259766
    4. '<|end|>' → logprob: -10.533817291259766
    5. '(high' → logprob: -10.658817291259766
    6. 'low' → logprob: -11.158817291259766
    7. '  ' → logprob: -11.533817291259766
    8. '   ' → logprob: -11.908817291259766
    9. '0' → logprob: -12.033817291259766
    10. '>' → logprob: -12.283817291259766

Token 75: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01800289936363697
    2. ' :' → logprob: -4.518002986907959
    3. ':
' → logprob: -5.018002986907959
    4. ' :
' → logprob: -8.6430025100708
    5. '   ' → logprob: -9.6430025100708
    6. ':

' → logprob: -10.8930025100708
    7. ' and' → logprob: -11.8930025100708
    8. '):' → logprob: -11.8930025100708
    9. '<|end|>' → logprob: -11.8930025100708
    10. '  ' → logprob: -12.2680025100708

Token 76: ' high' (ID: 1932)
  Prédit: ' high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' high' → logprob: -0.20863494277000427
    2. 'high' → logprob: -2.458634853363037
    3. '
' → logprob: -3.208634853363037
    4. ' 
' → logprob: -3.458634853363037
    5. '<|end|>' → logprob: -3.958634853363037
    6. ' ' → logprob: -5.833634853363037
    7. '(high' → logprob: -5.958634853363037
    8. '    
' → logprob: -6.208634853363037
    9. '   ' → logprob: -6.833634853363037
    10. '
' → logprob: -7.208634853363037

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033669330179691315
    2. '=' → logprob: -3.4086692333221436
    3. ' ' → logprob: -11.283669471740723
    4. ',' → logprob: -12.158669471740723
    5. '<|end|>' → logprob: -13.033669471740723
    6. ' +=' → logprob: -14.283669471740723
    7. '=w' → logprob: -14.533669471740723
    8. ' =)' → logprob: -14.908669471740723
    9. ')' → logprob: -15.283669471740723
    10. ' =
' → logprob: -15.533669471740723

Token 78: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.04860984906554222
    2. 'w' → logprob: -3.048609733581543
    3. '<|end|>' → logprob: -11.298609733581543
    4. ' ' → logprob: -12.048609733581543
    5. ' ' → logprob: -13.548609733581543
    6. '	w' → logprob: -13.923609733581543
    7. 's' → logprob: -14.673609733581543
    8. '<|end|>' → logprob: -15.236109733581543
    9. '>w' → logprob: -15.548609733581543
    10. '    ' → logprob: -16.11111068725586

Token 79: 'ut' (ID: 339)
  Prédit: 'ut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.004625937435775995
    2. 't' → logprob: -5.3796257972717285
    3. 'u' → logprob: -12.379626274108887
    4. 'it' → logprob: -14.754626274108887
    5. 'et' → logprob: -15.379626274108887
    6. ' ut' → logprob: -15.879626274108887
    7. ' ' → logprob: -16.12962532043457
    8. 'ут' → logprob: -16.37962532043457
    9. 'ot' → logprob: -16.62962532043457
    10. 'utm' → logprob: -16.62962532043457

Token 80: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5466111898422241
    2. '<|end|>' → logprob: -0.9216111898422241
    3. ' else' → logprob: -5.296611309051514
    4. 'elif' → logprob: -5.671611309051514
    5. '    
' → logprob: -5.671611309051514
    6. ' elif' → logprob: -6.171611309051514
    7. ' 
' → logprob: -6.296611309051514
    8. 'else' → logprob: -6.296611309051514
    9. '   ' → logprob: -6.421611309051514
    10. ' ' → logprob: -6.546611309051514

Token 81: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7497777938842773
    2. '<|end|>' → logprob: -1.1247777938842773
    3. ' 
' → logprob: -2.8747777938842773
    4. ' ' → logprob: -3.1247777938842773
    5. '    
' → logprob: -3.6247777938842773
    6. ' if' → logprob: -3.9997777938842773
    7. '  
' → logprob: -3.9997777938842773
    8. '   ' → logprob: -4.499777793884277
    9. ' else' → logprob: -5.124777793884277
    10. ' elif' → logprob: -5.374777793884277

Token 82: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.01464338880032301
    2. 'w' → logprob: -4.26464319229126
    3. ' low' → logprob: -8.139643669128418
    4. 'low' → logprob: -9.264643669128418
    5. ' ' → logprob: -9.514643669128418
    6. 'Low' → logprob: -12.952143669128418
    7. '   ' → logprob: -13.014643669128418
    8. '<|end|>' → logprob: -13.264643669128418
    9. '	w' → logprob: -13.327143669128418
    10. '(w' → logprob: -13.452143669128418

Token 84: 'ut' (ID: 339)
  Prédit: 'ut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -5.800739018013701e-05
    2. 'u' → logprob: -11.0000581741333
    3. 't' → logprob: -11.5000581741333
    4. 'w' → logprob: -11.7500581741333
    5. 'at' → logprob: -12.0000581741333
    6. ' ut' → logprob: -12.3750581741333
    7. ' ' → logprob: -13.2500581741333
    8. 'it' → logprob: -13.3750581741333
    9. 'ot' → logprob: -13.5000581741333
    10. '<' → logprob: -14.0000581741333

Token 85: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.014328032732009888
    2. '<' → logprob: -4.2643280029296875
    3. ' ' → logprob: -8.889328002929688
    4. '<|end|>' → logprob: -11.514328002929688
    5. ' <
' → logprob: -12.139328002929688
    6. ' >' → logprob: -13.576828002929688
    7. ' <",' → logprob: -13.951828002929688
    8. '[' → logprob: -14.264328002929688
    9. ' \<' → logprob: -14.389328002929688
    10. '```' → logprob: -14.826828002929688

Token 86: ' low' (ID: 4465)
  Prédit: ' low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.002712500048801303
    2. 'low' → logprob: -6.002712726593018
    3. ' ' → logprob: -8.37771224975586
    4. ' high' → logprob: -13.37771224975586
    5. '(low' → logprob: -13.62771224975586
    6. ' ' → logprob: -13.75271224975586
    7. '=' → logprob: -13.75271224975586
    8. ' l' → logprob: -15.12771224975586
    9. '>' → logprob: -15.12771224975586
    10. '  ' → logprob: -15.37771224975586

Token 87: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004143338184803724
    2. '=' → logprob: -5.504143238067627
    3. ' ' → logprob: -10.129143714904785
    4. ':' → logprob: -11.254143714904785
    5. ' :' → logprob: -12.504143714904785
    6. ' w' → logprob: -12.504143714904785
    7. '=w' → logprob: -13.004143714904785
    8. ' =
' → logprob: -13.379143714904785
    9. 'w' → logprob: -15.379143714904785
    10. ' <' → logprob: -15.629143714904785

Token 88: ' low' (ID: 4465)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.00016086915275081992
    2. 'w' → logprob: -9.125161170959473
    3. ' ' → logprob: -10.125161170959473
    4. ' ' → logprob: -12.625161170959473
    5. '	w' → logprob: -13.375161170959473
    6. ' 
' → logprob: -13.875161170959473
    7. '<|end|>' → logprob: -14.000161170959473
    8. '=' → logprob: -14.125161170959473
    9. '=w' → logprob: -14.125161170959473
    10. ' low' → logprob: -14.125161170959473

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0040838588029146194
    2. '=' → logprob: -5.504083633422852
    3. ' ' → logprob: -13.004083633422852
    4. ' ==' → logprob: -13.504083633422852
    5. ' =
' → logprob: -13.629083633422852
    6. ' =)' → logprob: -15.754083633422852
    7. '<|end|>' → logprob: -16.12908363342285
    8. ' +=' → logprob: -16.50408363342285
    9. ' <' → logprob: -16.87908363342285
    10. ' =
' → logprob: -17.50408363342285

Token 90: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.016043050214648247
    2. 'w' → logprob: -4.141043186187744
    3. ' ' → logprob: -12.141042709350586
    4. '<|end|>' → logprob: -13.641042709350586
    5. ' ' → logprob: -14.141042709350586
    6. '	w' → logprob: -14.391042709350586
    7. 's' → logprob: -15.141042709350586
    8. ' 
' → logprob: -15.391042709350586
    9. '<w' → logprob: -15.766042709350586
    10. ' ' → logprob: -16.703542709350586

Token 91: 'ut' (ID: 339)
  Prédit: 'ut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.0002692032721824944
    2. 'u' → logprob: -8.625268936157227
    3. 't' → logprob: -9.500268936157227
    4. 'it' → logprob: -12.625268936157227
    5. ' ' → logprob: -13.375268936157227
    6. 'ult' → logprob: -14.062768936157227
    7. '<|end|>' → logprob: -14.312768936157227
    8. '   ' → logprob: -14.437768936157227
    9. ' ut' → logprob: -14.562768936157227
    10. ' ' → logprob: -14.562768936157227

Token 92: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: 'p' (ID: 79)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1683538556098938
    2. '<|end|>' → logprob: -2.168353796005249
    3. ' 
' → logprob: -4.043354034423828
    4. '
' → logprob: -5.168354034423828
    5. '\n' → logprob: -5.543354034423828
    6. ')' → logprob: -5.793354034423828
    7. 'n' → logprob: -6.043354034423828
    8. '  
' → logprob: -6.793354034423828
    9. '#' → logprob: -7.043354034423828
    10. '  ' → logprob: -7.043354034423828

Token 94: '(high' (ID: 126087)
  Prédit: '(high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(high' → logprob: -0.7948120832443237
    2. '(' → logprob: -1.2948120832443237
    3. '(low' → logprob: -1.2948120832443237
    4. '((' → logprob: -8.794812202453613
    5. '(max' → logprob: -9.044812202453613
    6. '(len' → logprob: -10.419812202453613
    7. '(s' → logprob: -10.919812202453613
    8. '(l' → logprob: -11.294812202453613
    9. '(h' → logprob: -11.544812202453613
    10. '(
' → logprob: -11.544812202453613

Token 95: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.27099974633893e-05
    2. '+' → logprob: -12.125012397766113
    3. ' )' → logprob: -12.625012397766113
    4. ')
' → logprob: -12.750012397766113
    5. '))' → logprob: -14.625012397766113
    6. ')

' → logprob: -16.37501335144043
    7. ')#' → logprob: -16.37501335144043
    8. ')`' → logprob: -16.62501335144043
    9. ' +' → logprob: -17.00001335144043
    10. '*' → logprob: -17.00001335144043

Token 96: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.002477796748280525
    2. ' low' → logprob: -6.002477645874023
    3. '(low' → logprob: -13.627477645874023
    4. '   ' → logprob: -16.002477645874023
    5. 'lowest' → logprob: -16.252477645874023
    6. ' ' → logprob: -16.252477645874023
    7. '_low' → logprob: -16.377477645874023
    8. '-low' → logprob: -17.002477645874023
    9. '  ' → logprob: -17.002477645874023
    10. '<|end|>' → logprob: -17.002477645874023

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2352385965641588e-05
    2. '+' → logprob: -11.875012397766113
    3. ' )' → logprob: -12.500012397766113
    4. '))' → logprob: -14.250012397766113
    5. ')
' → logprob: -14.750012397766113
    6. '*' → logprob: -16.250011444091797
    7. '[' → logprob: -17.000011444091797
    8. ')`' → logprob: -17.125011444091797
    9. ')#' → logprob: -17.375011444091797
    10. '#' → logprob: -17.500011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 95
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 36.84%
Précision adaptée (1ère position): 36.84%
Précision (top 10): 64.21%
================================================================================
