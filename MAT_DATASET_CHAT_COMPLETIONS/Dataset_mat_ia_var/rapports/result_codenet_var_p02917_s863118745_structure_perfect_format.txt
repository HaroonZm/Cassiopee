================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
B = list(map(int, input().split()))
A = [0] * N

A[0] = B[0]
A[N - 1] = B[N - 2]
for i in range(N - 2):
    A[i + 1] = min(B[i], B[i + 1])

print(sum(A))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2372170090675354
    2. ')' → logprob: -1.7372169494628906
    3. '()' → logprob: -3.4872169494628906
    4. '())' → logprob: -5.737216949462891
    5. '```' → logprob: -7.987216949462891
    6. '(
' → logprob: -8.23721694946289
    7. '`' → logprob: -9.61221694946289
    8. '(()' → logprob: -9.61221694946289
    9. '("("' → logprob: -9.61221694946289
    10. '")' → logprob: -9.73721694946289

Token 5: 'B' (ID: 33)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5059829354286194
    2. 'if' → logprob: -2.5059828758239746
    3. 's' → logprob: -2.6309828758239746
    4. 'a' → logprob: -2.6309828758239746
    5. 'x' → logprob: -3.5059828758239746
    6. '`' → logprob: -3.6309828758239746
    7. 'i' → logprob: -3.8809828758239746
    8. '[' → logprob: -4.380982875823975
    9. 'f' → logprob: -4.505982875823975
    10. ' ' → logprob: -4.630982875823975

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3672070503234863
    2. '[i' → logprob: -1.3672070503234863
    3. '[' → logprob: -1.4922070503234863
    4. '=' → logprob: -1.8672070503234863
    5. '.' → logprob: -2.7422070503234863
    6. ',' → logprob: -4.742207050323486
    7. '[]' → logprob: -4.867207050323486
    8. '[:]' → logprob: -5.242207050323486
    9. ' ' → logprob: -5.367207050323486
    10. '-' → logprob: -5.367207050323486

Token 7: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0030744075775146
    2. '[]' → logprob: -1.5030744075775146
    3. 'list' → logprob: -1.6280744075775146
    4. ' []' → logprob: -2.8780744075775146
    5. ' input' → logprob: -3.5030744075775146
    6. ' list' → logprob: -3.6280744075775146
    7. '[input' → logprob: -3.7530744075775146
    8. '[' → logprob: -3.8780744075775146
    9. '0' → logprob: -4.003074645996094
    10. 'int' → logprob: -4.503074645996094

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -8.613945101387799e-05
    2. '(range' → logprob: -9.750085830688477
    3. '()' → logprob: -12.250085830688477
    4. '(
' → logprob: -12.500085830688477
    5. ' (' → logprob: -12.750085830688477
    6. '[' → logprob: -13.000085830688477
    7. '(B' → logprob: -13.125085830688477
    8. '```' → logprob: -13.250085830688477
    9. '("("' → logprob: -13.500085830688477
    10. '(

' → logprob: -13.500085830688477

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02179376408457756
    2. '(' → logprob: -4.021793842315674
    3. '(str' → logprob: -6.021793842315674
    4. '(input' → logprob: -7.896793842315674
    5. '(lambda' → logprob: -8.521793365478516
    6. 'int' → logprob: -8.771793365478516
    7. '<int' → logprob: -9.146793365478516
    8. ')' → logprob: -9.146793365478516
    9. '<|end|>' → logprob: -9.896793365478516
    10. '(eval' → logprob: -10.021793365478516

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09591372311115265
    2. '(' → logprob: -2.8459136486053467
    3. ',input' → logprob: -3.7209136486053467
    4. ',' → logprob: -5.845913887023926
    5. ')' → logprob: -6.220913887023926
    6. '))' → logprob: -6.220913887023926
    7. '(int' → logprob: -6.970913887023926
    8. 'input' → logprob: -8.095913887023926
    9. '<input' → logprob: -8.720913887023926
    10. '=input' → logprob: -9.095913887023926

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519606053829193
    2. ' input' → logprob: -1.5019606351852417
    3. '(input' → logprob: -10.626960754394531
    4. ',input' → logprob: -12.251960754394531
    5. '=input' → logprob: -14.251960754394531
    6. ')' → logprob: -14.251960754394531
    7. ' ' → logprob: -15.376960754394531
    8. '<input' → logprob: -15.626960754394531
    9. '[input' → logprob: -15.751960754394531
    10. '	input' → logprob: -15.751960754394531

Token 12: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.012458792887628078
    2. '()' → logprob: -5.012458801269531
    3. '()))' → logprob: -5.387458801269531
    4. '())' → logprob: -7.387458801269531
    5. '(' → logprob: -8.012458801269531
    6. '(),' → logprob: -9.137458801269531
    7. '))' → logprob: -10.262458801269531
    8. '()));' → logprob: -11.012458801269531
    9. ')' → logprob: -11.887458801269531
    10. '(str' → logprob: -12.012458801269531

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00036084887688048184
    2. 'strip' → logprob: -8.000360488891602
    3. 'rstrip' → logprob: -10.625360488891602
    4. ' split' → logprob: -14.250360488891602
    5. '(split' → logprob: -14.875360488891602
    6. 'spl' → logprob: -16.3753604888916
    7. ')' → logprob: -17.3753604888916
    8. 'replace' → logprob: -18.3753604888916
    9. 'sp' → logprob: -19.1253604888916
    10. 'read' → logprob: -19.2503604888916

Token 14: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.29076308012008667
    2. '))' → logprob: -1.5407631397247314
    3. '())' → logprob: -4.040762901306152
    4. ')' → logprob: -4.790762901306152
    5. '()' → logprob: -4.915762901306152
    6. '(' → logprob: -5.415762901306152
    7. '('' → logprob: -8.790762901306152
    8. ''))' → logprob: -9.290762901306152
    9. ')))' → logprob: -10.790762901306152
    10. '()));' → logprob: -10.790762901306152

Token 15: 'A' (ID: 32)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.9466418623924255
    2. 's' → logprob: -2.1966419219970703
    3. 'c' → logprob: -2.1966419219970703
    4. 'C' → logprob: -3.0716419219970703
    5. 'S' → logprob: -3.1966419219970703
    6. 'dp' → logprob: -3.1966419219970703
    7. 'A' → logprob: -3.3216419219970703
    8. 'count' → logprob: -3.3216419219970703
    9. 'for' → logprob: -3.5716419219970703
    10. 'M' → logprob: -3.8216419219970703

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22670385241508484
    2. '=' → logprob: -1.8517038822174072
    3. '[' → logprob: -3.1017038822174072
    4. ' ' → logprob: -8.601703643798828
    5. '.' → logprob: -8.601703643798828
    6. '_' → logprob: -8.851703643798828
    7. '[]' → logprob: -9.101703643798828
    8. '[:]' → logprob: -9.351703643798828
    9. '=[]' → logprob: -10.226703643798828
    10. '[i' → logprob: -10.351703643798828

Token 17: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4279015064239502
    2. '[]' → logprob: -1.3029015064239502
    3. '[B' → logprob: -3.05290150642395
    4. ' [' → logprob: -3.80290150642395
    5. ' []' → logprob: -5.677901268005371
    6. 'B' → logprob: -6.552901268005371
    7. ' B' → logprob: -7.302901268005371
    8. '[len' → logprob: -7.927901268005371
    9. '[-' → logprob: -8.552901268005371
    10. '[i' → logprob: -9.052901268005371

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06306422501802444
    2. 'B' → logprob: -2.8130643367767334
    3. ' ' → logprob: -7.438064098358154
    4. ' B' → logprob: -8.313064575195312
    5. '1' → logprob: -8.813064575195312
    6. ']' → logprob: -10.438064575195312
    7. '-' → logprob: -10.938064575195312
    8. ')' → logprob: -11.688064575195312
    9. 'max' → logprob: -11.688064575195312
    10. 'i' → logprob: -11.688064575195312

Token 19: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025889402255415916
    2. ' ]' → logprob: -3.7758893966674805
    3. ',' → logprob: -6.7758893966674805
    4. ']*' → logprob: -7.1508893966674805
    5. ')]' → logprob: -7.7758893966674805
    6. ')' → logprob: -8.90088939666748
    7. '])' → logprob: -10.15088939666748
    8. ' for' → logprob: -10.27588939666748
    9. ']*(' → logprob: -10.27588939666748
    10. ' ])' → logprob: -11.27588939666748

Token 20: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0772998332977295
    2. '0' → logprob: -2.0772998332977295
    3. '+' → logprob: -2.3272998332977295
    4. ' ' → logprob: -2.3272998332977295
    5. ' for' → logprob: -2.4522998332977295
    6. '[' → logprob: -2.7022998332977295
    7. ',' → logprob: -3.0772998332977295
    8. 'for' → logprob: -3.0772998332977295
    9. '_' → logprob: -3.4522998332977295
    10. ' *' → logprob: -3.8272998332977295

Token 21: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10450427979230881
    2. '(N' → logprob: -2.479504346847534
    3. ' N' → logprob: -4.854504108428955
    4. '(' → logprob: -5.104504108428955
    5. ' (' → logprob: -6.604504108428955
    6. ' ' → logprob: -9.354504585266113
    7. '(len' → logprob: -10.604504585266113
    8. 'len' → logprob: -11.417004585266113
    9. '(n' → logprob: -11.667004585266113
    10. '	N' → logprob: -11.854504585266113

Token 22: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7721329927444458
    2. ' 
' → logprob: -1.0221329927444458
    3. ' for' → logprob: -2.2721328735351562
    4. 'for' → logprob: -3.3971328735351562
    5. '
' → logprob: -4.147132873535156
    6. ' ' → logprob: -5.022132873535156
    7. '\n' → logprob: -5.272132873535156
    8. '  
' → logprob: -5.522132873535156
    9. '' → logprob: -6.022132873535156
    10. '```' → logprob: -6.022132873535156

Token 23: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001414877362549305
    2. ' for' → logprob: -7.751414775848389
    3. 'A' → logprob: -8.126415252685547
    4. 'B' → logprob: -8.626415252685547
    5. 'i' → logprob: -8.751415252685547
    6. ')' → logprob: -8.751415252685547
    7. ']' → logprob: -9.626415252685547
    8. '=' → logprob: -10.876415252685547
    9. '-' → logprob: -10.876415252685547
    10. 'F' → logprob: -11.376415252685547

Token 24: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21160012483596802
    2. '=' → logprob: -1.7116000652313232
    3. '[:]' → logprob: -5.711600303649902
    4. '<|end|>' → logprob: -5.711600303649902
    5. '\[' → logprob: -7.711600303649902
    6. ' =' → logprob: -7.836600303649902
    7. '#' → logprob: -7.836600303649902
    8. '.' → logprob: -7.961600303649902
    9. '[]' → logprob: -8.336600303649902
    10. '[
' → logprob: -8.586600303649902

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032845442183315754
    2. 'N' → logprob: -6.378284454345703
    3. '-' → logprob: -6.628284454345703
    4. ' ' → logprob: -8.628284454345703
    5. '1' → logprob: -10.378284454345703
    6. ']' → logprob: -10.628284454345703
    7. ' -' → logprob: -11.503284454345703
    8. 'i' → logprob: -12.128284454345703
    9. ' N' → logprob: -12.628284454345703
    10. ')' → logprob: -13.378284454345703

Token 26: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03054557740688324
    2. ' ]' → logprob: -3.530545473098755
    3. ']=' → logprob: -7.280545711517334
    4. '=' → logprob: -10.030545234680176
    5. '[' → logprob: -10.780545234680176
    6. ' =' → logprob: -11.030545234680176
    7. ',' → logprob: -12.530545234680176
    8. '],' → logprob: -12.655545234680176
    9. ')' → logprob: -13.030545234680176
    10. ']+=' → logprob: -13.030545234680176

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13505306839942932
    2. '=' → logprob: -2.1350531578063965
    3. ' ^=' → logprob: -5.0100531578063965
    4. ' ' → logprob: -7.3850531578063965
    5. ' +=' → logprob: -8.385052680969238
    6. ' ^' → logprob: -9.135052680969238
    7. '^' → logprob: -9.135052680969238
    8. ',' → logprob: -9.510052680969238
    9. ' |=' → logprob: -9.635052680969238
    10. '<|end|>' → logprob: -9.885052680969238

Token 28: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0013921386562287807
    2. '0' → logprob: -6.751392364501953
    3. '1' → logprob: -9.251392364501953
    4. ' B' → logprob: -9.751392364501953
    5. '(B' → logprob: -10.376392364501953
    6. '2' → logprob: -11.751392364501953
    7. '-' → logprob: -11.876392364501953
    8. '(' → logprob: -12.126392364501953
    9. '10' → logprob: -12.876392364501953
    10. ' ' → logprob: -13.001392364501953

Token 29: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7491250875755213e-05
    2. '0' → logprob: -11.375027656555176
    3. '[-' → logprob: -12.375027656555176
    4. ' [' → logprob: -12.625027656555176
    5. '[N' → logprob: -13.000027656555176
    6. '```' → logprob: -13.750027656555176
    7. '1' → logprob: -14.500027656555176
    8. '[
' → logprob: -14.500027656555176
    9. '[...]' → logprob: -14.500027656555176
    10. '\[' → logprob: -15.000027656555176

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.372916686814278e-05
    2. '-' → logprob: -10.3750638961792
    3. '1' → logprob: -10.7500638961792
    4. ' ' → logprob: -11.7500638961792
    5. 'N' → logprob: -14.1250638961792
    6. '2' → logprob: -14.5000638961792
    7. '[' → logprob: -14.6875638961792
    8. '9' → logprob: -14.7500638961792
    9. '4' → logprob: -15.8125638961792
    10. ']' → logprob: -16.062562942504883

Token 31: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013275875709950924
    2. ']' → logprob: -4.513276100158691
    3. ' )' → logprob: -6.388276100158691
    4. '<|end|>' → logprob: -9.013276100158691
    5. '])' → logprob: -9.138276100158691
    6. '-' → logprob: -9.638276100158691
    7. '[' → logprob: -9.638276100158691
    8. ' -' → logprob: -10.013276100158691
    9. ' ]' → logprob: -10.513276100158691
    10. ')]' → logprob: -10.638276100158691

Token 32: 'A' (ID: 32)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0186961367726326
    2. ' ' → logprob: -5.268696308135986
    3. ' +' → logprob: -5.643696308135986
    4. ' 
' → logprob: -5.643696308135986
    5. '+
' → logprob: -6.018696308135986
    6. '  
' → logprob: -6.643696308135986
    7. '<|end|>' → logprob: -7.143696308135986
    8. '+A' → logprob: -8.143695831298828
    9. 'A' → logprob: -8.643695831298828
    10. '```' → logprob: -8.893695831298828

Token 33: '[N' (ID: 49776)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0018896145047619939
    2. '+' → logprob: -6.501889705657959
    3. ' ' → logprob: -9.5018892288208
    4. ']' → logprob: -9.6268892288208
    5. '-' → logprob: -9.8768892288208
    6. '1' → logprob: -10.2518892288208
    7. '[:]' → logprob: -10.7518892288208
    8. '[-' → logprob: -11.0018892288208
    9. '[]' → logprob: -11.1268892288208
    10. '"' → logprob: -11.1268892288208

Token 34: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015922266757115722
    2. ' -' → logprob: -6.50159215927124
    3. '1' → logprob: -9.876592636108398
    4. ']' → logprob: -10.251592636108398
    5. '[' → logprob: -13.376592636108398
    6. ' ' → logprob: -14.251592636108398
    7. '−' → logprob: -15.501592636108398
    8. '2' → logprob: -16.1890926361084
    9. '0' → logprob: -16.1890926361084
    10. ']-' → logprob: -16.2515926361084

Token 35: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014673690311610699
    2. ' ' → logprob: -6.626467227935791
    3. '2' → logprob: -8.87646770477295
    4. ']' → logprob: -13.87646770477295
    5. ')' → logprob: -15.50146770477295
    6. '１' → logprob: -15.93896770477295
    7. '```' → logprob: -16.063966751098633
    8. '-' → logprob: -16.376466751098633
    9. '0' → logprob: -16.438966751098633
    10. '  ' → logprob: -17.063966751098633

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000386701402021572
    2. '2' → logprob: -7.875386714935303
    3. ' ' → logprob: -12.125386238098145
    4. ']' → logprob: -15.937886238098145
    5. '0' → logprob: -16.06288719177246
    6. '-' → logprob: -16.12538719177246
    7. '```' → logprob: -16.37538719177246
    8. '１' → logprob: -16.50038719177246
    9. ')' → logprob: -16.75038719177246
    10. '3' → logprob: -16.87538719177246

Token 37: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015242677181959152
    2. ' ]' → logprob: -6.501524448394775
    3. '=' → logprob: -11.626523971557617
    4. ']=' → logprob: -11.876523971557617
    5. ' =' → logprob: -12.376523971557617
    6. ')' → logprob: -13.751523971557617
    7. ' ' → logprob: -15.126523971557617
    8. '']' → logprob: -15.751523971557617
    9. '`]' → logprob: -16.501523971557617
    10. '[' → logprob: -16.626523971557617

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759648680686951
    2. '=' → logprob: -0.8259648680686951
    3. ' +=' → logprob: -11.20096492767334
    4. ' ' → logprob: -12.20096492767334
    5. '+=' → logprob: -13.20096492767334
    6. ' |=' → logprob: -13.45096492767334
    7. '=

' → logprob: -14.32596492767334
    8. ')' → logprob: -14.45096492767334
    9. ' ' → logprob: -14.57596492767334
    10. ' =
' → logprob: -15.07596492767334

Token 39: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004621422383934259
    2. ' B' → logprob: -5.379621505737305
    3. ' ' → logprob: -14.129621505737305
    4. '0' → logprob: -15.629621505737305
    5. 'b' → logprob: -16.004621505737305
    6. '	B' → logprob: -16.754621505737305
    7. '_B' → logprob: -16.879621505737305
    8. '...' → logprob: -17.629621505737305
    9. 'int' → logprob: -17.879621505737305
    10. '>B' → logprob: -17.879621505737305

Token 40: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.007991643622517586
    2. '[' → logprob: -5.257991790771484
    3. 'N' → logprob: -6.132991790771484
    4. '1' → logprob: -7.632991790771484
    5. '[-' → logprob: -9.757991790771484
    6. '```' → logprob: -10.882991790771484
    7. '0' → logprob: -12.132991790771484
    8. '-' → logprob: -12.757991790771484
    9. '	N' → logprob: -12.882991790771484
    10. '`' → logprob: -13.007991790771484

Token 41: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0028751306235790253
    2. '1' → logprob: -6.002875328063965
    3. ' -' → logprob: -7.877875328063965
    4. '[' → logprob: -11.502875328063965
    5. ']' → logprob: -12.502875328063965
    6. ' ' → logprob: -13.252875328063965
    7. '```' → logprob: -14.127875328063965
    8. '2' → logprob: -14.252875328063965
    9. '`' → logprob: -14.252875328063965
    10. ']-' → logprob: -14.377875328063965

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0029868518467992544
    2. '2' → logprob: -5.877986907958984
    3. ' ' → logprob: -8.627986907958984
    4. ']' → logprob: -14.815486907958984
    5. '```' → logprob: -14.815486907958984
    6. '   ' → logprob: -15.252986907958984
    7. '  ' → logprob: -15.315486907958984
    8. '-' → logprob: -15.440486907958984
    9. ')' → logprob: -15.502986907958984
    10. '0' → logprob: -15.627986907958984

Token 43: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5759827494621277
    2. '2' → logprob: -0.8259827494621277
    3. ' ' → logprob: -10.200983047485352
    4. '```' → logprob: -13.263483047485352
    5. '   ' → logprob: -13.950983047485352
    6. '0' → logprob: -13.950983047485352
    7. '  ' → logprob: -14.513483047485352
    8. '-' → logprob: -15.263483047485352
    9. '3' → logprob: -15.450983047485352
    10. '11' → logprob: -15.825983047485352

Token 44: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000333320174831897
    2. ']' → logprob: -8.500333786010742
    3. ')
' → logprob: -9.250333786010742
    4. ' )' → logprob: -11.000333786010742
    5. '])' → logprob: -12.375333786010742
    6. ')
' → logprob: -12.625333786010742
    7. '）' → logprob: -12.875333786010742
    8. '+' → logprob: -13.125333786010742
    9. ')

' → logprob: -13.750333786010742
    10. ')]' → logprob: -13.750333786010742

Token 45: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0100895166397095
    2. '\n' → logprob: -1.0100895166397095
    3. 'for' → logprob: -1.6350895166397095
    4. '```' → logprob: -3.01008939743042
    5. ' 
' → logprob: -5.01008939743042
    6. ' for' → logprob: -5.13508939743042
    7. '<|end|>' → logprob: -5.13508939743042
    8. 'A' → logprob: -6.76008939743042
    9. '``' → logprob: -6.76008939743042
    10. '[' → logprob: -6.88508939743042

Token 46: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00992159266024828
    2. 'i' → logprob: -4.634921550750732
    3. ' ' → logprob: -8.75992202758789
    4. ' ' → logprob: -12.38492202758789
    5. '	i' → logprob: -12.63492202758789
    6. 'I' → logprob: -14.75992202758789
    7. '  ' → logprob: -14.75992202758789
    8. ' I' → logprob: -15.88492202758789
    9. '(i' → logprob: -16.75992202758789
    10. ' ' → logprob: -16.88492202758789

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029236938804388046
    2. 'in' → logprob: -3.7792370319366455
    3. ' ' → logprob: -5.154236793518066
    4. '  ' → logprob: -9.029236793518066
    5. ' i' → logprob: -10.279236793518066
    6. '	in' → logprob: -10.904236793518066
    7. '<|end|>' → logprob: -12.654236793518066
    8. '1' → logprob: -12.654236793518066
    9. ' =' → logprob: -12.904236793518066
    10. ' ' → logprob: -13.029236793518066

Token 48: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0009149204124696553
    2. 'range' → logprob: -7.000915050506592
    3. '	range' → logprob: -13.500914573669434
    4. ' ' → logprob: -13.625914573669434
    5. ' xrange' → logprob: -14.375914573669434
    6. '(range' → logprob: -15.875914573669434
    7. '<|end|>' → logprob: -17.37591552734375
    8. '  ' → logprob: -17.62591552734375
    9. ' ' → logprob: -18.37591552734375
    10. '_range' → logprob: -18.50091552734375

Token 49: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0280383548888494e-06
    2. ' (' → logprob: -14.000000953674316
    3. '1' → logprob: -16.625001907348633
    4. '(
' → logprob: -17.000001907348633
    5. ' ' → logprob: -17.750001907348633
    6. '(N' → logprob: -18.750001907348633
    7. '(i' → logprob: -19.500001907348633
    8. '(n' → logprob: -20.750001907348633
    9. ' range' → logprob: -21.000001907348633
    10. '(len' → logprob: -21.375001907348633

Token 50: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10103907436132431
    2. ' -' → logprob: -2.351039171218872
    3. '1' → logprob: -7.476038932800293
    4. '2' → logprob: -9.101038932800293
    5. ' ' → logprob: -9.601038932800293
    6. ')' → logprob: -10.101038932800293
    7. '):' → logprob: -10.601038932800293
    8. '):
' → logprob: -11.351038932800293
    9. '   ' → logprob: -12.851038932800293
    10. '-
' → logprob: -14.101038932800293

Token 51: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03004227764904499
    2. '1' → logprob: -3.5300421714782715
    3. ' ' → logprob: -8.15504264831543
    4. '```' → logprob: -13.53004264831543
    5. '   ' → logprob: -14.03004264831543
    6. '-' → logprob: -14.28004264831543
    7. '２' → logprob: -14.65504264831543
    8. '۲' → logprob: -14.90504264831543
    9. ')' → logprob: -15.28004264831543
    10. '3' → logprob: -15.65504264831543

Token 52: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931595206260681
    2. '2' → logprob: -0.6931595206260681
    3. ' ' → logprob: -11.943159103393555
    4. '   ' → logprob: -13.068159103393555
    5. '```' → logprob: -13.318159103393555
    6. '  ' → logprob: -14.693159103393555
    7. '3' → logprob: -14.693159103393555
    8. '

' → logprob: -14.943159103393555
    9. '
' → logprob: -15.943159103393555
    10. '-' → logprob: -16.693159103393555

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017443090677261353
    2. '):
' → logprob: -4.1424431800842285
    3. ' ):' → logprob: -7.0174431800842285
    4. ')' → logprob: -8.14244270324707
    5. ':' → logprob: -8.64244270324707
    6. ' ):
' → logprob: -11.26744270324707
    7. '):

' → logprob: -11.51744270324707
    8. '):
' → logprob: -11.51744270324707
    9. '+' → logprob: -12.89244270324707
    10. ']:' → logprob: -14.01744270324707

Token 54: '   ' (ID: 271)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.08506077527999878
    2. '   ' → logprob: -2.8350608348846436
    3. 'A' → logprob: -4.0850605964660645
    4. '<|end|>' → logprob: -6.2100605964660645
    5. ' ' → logprob: -6.3350605964660645
    6. '	A' → logprob: -7.2100605964660645
    7. '<|end|>' → logprob: -8.460061073303223
    8. '  ' → logprob: -8.460061073303223
    9. ' i' → logprob: -8.585061073303223
    10. '    ' → logprob: -9.085061073303223

Token 55: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.06659277528524399
    2. 'A' (adapté à ' A') → logprob: -2.9415926933288574
    3. ' ' → logprob: -4.566592693328857
    4. ' if' → logprob: -7.066592693328857
    5. '	A' → logprob: -9.191593170166016
    6. '    ' → logprob: -9.566593170166016
    7. '   ' → logprob: -9.941593170166016
    8. ' i' → logprob: -10.066593170166016
    9. '  ' → logprob: -10.191593170166016
    10. 'if' → logprob: -10.691593170166016

Token 56: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01105890329927206
    2. '[' → logprob: -4.511058807373047
    3. 'i' → logprob: -12.136058807373047
    4. '[I' → logprob: -13.386058807373047
    5. '[int' → logprob: -13.886058807373047
    6. ' [' → logprob: -14.261058807373047
    7. '[a' → logprob: -14.636058807373047
    8. '[A' → logprob: -15.261058807373047
    9. '1' → logprob: -15.386058807373047
    10. ' i' → logprob: -15.886058807373047

Token 57: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12697871029376984
    2. ' +' → logprob: -2.126978635787964
    3. ']' → logprob: -10.376978874206543
    4. '1' → logprob: -11.501978874206543
    5. '+]' → logprob: -12.376978874206543
    6. '+i' → logprob: -13.876978874206543
    7. '＋' → logprob: -14.126978874206543
    8. '+
' → logprob: -14.126978874206543
    9. ' +
' → logprob: -14.251978874206543
    10. ' +=' → logprob: -14.626978874206543

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.25009536743164
    4. '  ' → logprob: -17.50009536743164
    5. '2' → logprob: -17.50009536743164
    6. '１' → logprob: -18.87509536743164
    7. '۱' → logprob: -20.62509536743164
    8. '+' → logprob: -20.87509536743164
    9. ' ' → logprob: -21.00009536743164
    10. '    ' → logprob: -21.25009536743164

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '0' → logprob: -16.750001907348633
    4. '2' → logprob: -17.625001907348633
    5. '１' → logprob: -18.750001907348633
    6. '۱' → logprob: -19.937501907348633
    7. '  ' → logprob: -20.125001907348633
    8. '१' → logprob: -20.250001907348633
    9. '   ' → logprob: -20.625001907348633
    10. '11' → logprob: -20.750001907348633

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038405712693929672
    2. ']=' → logprob: -6.253840446472168
    3. ')' → logprob: -6.878840446472168
    4. '=' → logprob: -7.628840446472168
    5. ' ]' → logprob: -8.128840446472168
    6. ' =' → logprob: -9.378840446472168
    7. ')=' → logprob: -12.128840446472168
    8. '])' → logprob: -13.003840446472168
    9. ')]' → logprob: -13.503840446472168
    10. '   ' → logprob: -13.628840446472168

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232192277908325
    2. '=' → logprob: -0.8982192277908325
    3. '=min' → logprob: -9.648219108581543
    4. '=max' → logprob: -10.648219108581543
    5. '=int' → logprob: -13.148219108581543
    6. ' ' → logprob: -13.273219108581543
    7. '+=' → logprob: -14.023219108581543
    8. ' +=' → logprob: -14.523219108581543
    9. '   ' → logprob: -14.648219108581543
    10. ')' → logprob: -15.148219108581543

Token 62: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06395798921585083
    2. 'max' → logprob: -2.813957929611206
    3. ' min' → logprob: -6.438958168029785
    4. ' max' → logprob: -8.063958168029785
    5. 'B' → logprob: -9.563958168029785
    6. 'm' → logprob: -13.313958168029785
    7. ' B' → logprob: -13.563958168029785
    8. '(min' → logprob: -14.688958168029785
    9. ' ' → logprob: -14.813958168029785
    10. 'mi' → logprob: -14.813958168029785

Token 63: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.008782263845205307
    2. '(' → logprob: -4.758782386779785
    3. '(A' → logprob: -8.758782386779785
    4. '(
' → logprob: -11.883782386779785
    5. '((' → logprob: -14.008782386779785
    6. ' (' → logprob: -14.258782386779785
    7. '(

' → logprob: -14.258782386779785
    8. '(b' → logprob: -14.633782386779785
    9. 'B' → logprob: -15.383782386779785
    10. '(min' → logprob: -15.883782386779785

Token 64: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.1080467781284824e-05
    2. '[' → logprob: -10.125041007995605
    3. '[
' → logprob: -15.625041007995605
    4. '[A' → logprob: -15.750041007995605
    5. ')' → logprob: -15.875041007995605
    6. '[I' → logprob: -15.875041007995605
    7. '[a' → logprob: -16.375041961669922
    8. 'i' → logprob: -16.875041961669922
    9. ' i' → logprob: -17.125041961669922
    10. ' [' → logprob: -17.125041961669922

Token 65: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.017860399559140205
    2. ',' → logprob: -4.267860412597656
    3. '),' → logprob: -6.642860412597656
    4. ']' → logprob: -7.267860412597656
    5. ' ,' → logprob: -7.267860412597656
    6. ' ],' → logprob: -8.017860412597656
    7. '   ' → logprob: -8.642860412597656
    8. '[i' → logprob: -8.642860412597656
    9. '>,' → logprob: -9.142860412597656
    10. '},' → logprob: -9.892860412597656

Token 66: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.11286011338233948
    2. 'B' → logprob: -2.2378602027893066
    3. ' ' → logprob: -10.362859725952148
    4. '   ' → logprob: -12.862859725952148
    5. ' ' → logprob: -12.987859725952148
    6. '    ' → logprob: -15.237859725952148
    7. ' A' → logprob: -15.362859725952148
    8. '  ' → logprob: -15.487859725952148
    9. '	B' → logprob: -15.487859725952148
    10. '_B' → logprob: -15.612859725952148

Token 67: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.014937728643417358
    2. 'i' → logprob: -4.639937877655029
    3. '[' → logprob: -6.264937877655029
    4. '+' → logprob: -6.514937877655029
    5. '   ' → logprob: -6.889937877655029
    6. ' ' → logprob: -7.764937877655029
    7. ' i' → logprob: -8.889937400817871
    8. '1' → logprob: -9.264937400817871
    9. '  ' → logprob: -10.639937400817871
    10. '(i' → logprob: -11.014937400817871

Token 68: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019326817709952593
    2. ' +' → logprob: -6.251932621002197
    3. '1' → logprob: -12.876933097839355
    4. ' ' → logprob: -14.251933097839355
    5. '+)' → logprob: -15.251933097839355
    6. '+i' → logprob: -15.626933097839355
    7. '+
' → logprob: -16.25193214416504
    8. '   ' → logprob: -16.25193214416504
    9. ']' → logprob: -16.62693214416504
    10. '])' → logprob: -16.87693214416504

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016218038217630237
    2. ' ' → logprob: -8.750162124633789
    3. '   ' → logprob: -13.000162124633789
    4. '+' → logprob: -14.000162124633789
    5. '  ' → logprob: -15.375162124633789
    6. ')' → logprob: -16.75016212463379
    7. '0' → logprob: -16.81266212463379
    8. '```' → logprob: -17.06266212463379
    9. '１' → logprob: -17.31266212463379
    10. '2' → logprob: -17.56266212463379

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '+' → logprob: -15.750000953674316
    4. '0' → logprob: -18.500001907348633
    5. '１' → logprob: -19.125001907348633
    6. '2' → logprob: -19.125001907348633
    7. '   ' → logprob: -19.437501907348633
    8. '१' → logprob: -19.937501907348633
    9. '۱' → logprob: -19.937501907348633
    10. '  ' → logprob: -20.125001907348633

Token 71: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036787090357393026
    2. '))' → logprob: -8.000368118286133
    3. '])' → logprob: -10.500368118286133
    4. ' )' → logprob: -13.000368118286133
    5. ')
' → logprob: -14.000368118286133
    6. '})' → logprob: -14.375368118286133
    7. ')])' → logprob: -15.000368118286133
    8. ')]' → logprob: -16.000368118286133
    9. '）' → logprob: -16.125368118286133
    10. ')))' → logprob: -16.250368118286133

Token 72: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12707751989364624
    2. '(A' → logprob: -2.127077579498291
    3. '(sum' → logprob: -10.002077102661133
    4. '('' → logprob: -10.502077102661133
    5. '(len' → logprob: -10.627077102661133
    6. '()' → logprob: -11.377077102661133
    7. '(*' → logprob: -11.502077102661133
    8. '(
' → logprob: -11.877077102661133
    9. '("("' → logprob: -11.877077102661133
    10. '((' → logprob: -12.377077102661133

Token 74: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -9.639096970204264e-05
    2. '(' → logprob: -9.250096321105957
    3. ')' → logprob: -16.000097274780273
    4. '(
' → logprob: -16.875097274780273
    5. '(B' → logprob: -17.375097274780273
    6. '(a' → logprob: -18.000097274780273
    7. 'A' → logprob: -18.000097274780273
    8. '(`' → logprob: -18.625097274780273
    9. ' (' → logprob: -19.125097274780273
    10. '()' → logprob: -19.500097274780273

Token 75: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0788937583565712
    2. ')' → logprob: -2.5788936614990234
    3. '))
' → logprob: -13.078893661499023
    4. ')))' → logprob: -14.078893661499023
    5. ' ))' → logprob: -14.703893661499023
    6. ')
' → logprob: -15.078893661499023
    7. ' )' → logprob: -15.578893661499023
    8. '])' → logprob: -16.703893661499023
    9. ')}' → logprob: -17.078893661499023
    10. '),' → logprob: -17.578893661499023


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 73
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 63
Précision stricte (1ère position): 45.21%
Précision adaptée (1ère position): 45.21%
Précision (top 10): 86.30%
================================================================================
