================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
first_integer, second_integer = map(int, input().split())

maximum_of_integers = max(first_integer, second_integer)

if maximum_of_integers <= 9:
    product_of_integers = first_integer * second_integer
    print(product_of_integers)
else:
    print(-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'first' (ID: 7743)
  → Token d'amorce (pas de prédiction)

Token 1: '_integer' (ID: 82911)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.2335953414440155
    2. '_' → logprob: -2.233595371246338
    3. ' ' → logprob: -3.483595371246338
    4. '=' → logprob: -3.858595371246338
    5. '_second' → logprob: -4.233595371246338
    6. ' =' → logprob: -4.858595371246338
    7. ' second' → logprob: -4.983595371246338
    8. 'space' → logprob: -5.483595371246338
    9. 'first' → logprob: -5.608595371246338
    10. ',' → logprob: -5.983595371246338

Token 4: '_integer' (ID: 82911)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06851126998662949
    2. ',' → logprob: -3.6935112476348877
    3. '=' → logprob: -3.6935112476348877
    4. ')' → logprob: -5.068511486053467
    5. '```' → logprob: -5.693511486053467
    6. '_,' → logprob: -5.818511486053467
    7. '_=' → logprob: -7.318511486053467
    8. ' =' → logprob: -7.318511486053467
    9. '<|end|>' → logprob: -7.443511486053467
    10. '.' → logprob: -8.318511009216309

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18682439625263214
    2. '_' → logprob: -2.436824321746826
    3. '+' → logprob: -3.186824321746826
    4. ' =' → logprob: -3.811824321746826
    5. ',' → logprob: -4.061824321746826
    6. '```' → logprob: -6.936824321746826
    7. ')' → logprob: -7.811824321746826
    8. '.' → logprob: -8.686824798583984
    9. '*' → logprob: -8.936824798583984
    10. ':' → logprob: -9.186824798583984

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3589177131652832
    2. '0' → logprob: -1.2339177131652832
    3. 'input' → logprob: -5.358917713165283
    4. ' input' → logprob: -5.483917713165283
    5. ' first' → logprob: -7.858917713165283
    6. ' int' → logprob: -8.233917236328125
    7. '1' → logprob: -8.358917236328125
    8. 'first' → logprob: -8.608917236328125
    9. ' map' → logprob: -9.358917236328125
    10. 'int' → logprob: -9.483917236328125

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07527802139520645
    2. '(lambda' → logprob: -3.0752780437469482
    3. '<|end|>' → logprob: -4.450277805328369
    4. '(int' → logprob: -4.575277805328369
    5. '```' → logprob: -6.825277805328369
    6. ')' → logprob: -7.700277805328369
    7. '(str' → logprob: -7.950277805328369
    8. '<|end|>' → logprob: -7.950277805328369
    9. '(token' → logprob: -8.200278282165527
    10. '(user' → logprob: -8.200278282165527

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7562755942344666
    2. ')' → logprob: -0.8812755942344666
    3. '(' → logprob: -2.3812756538391113
    4. '(user' → logprob: -4.881275653839111
    5. '(token' → logprob: -6.006275653839111
    6. '```' → logprob: -6.256275653839111
    7. '(raw' → logprob: -6.506275653839111
    8. ',' → logprob: -6.631275653839111
    9. '(first' → logprob: -7.381275653839111
    10. '('' → logprob: -7.506275653839111

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.043112579733133316
    2. ' input' → logprob: -3.1681125164031982
    3. ')' → logprob: -9.418112754821777
    4. '(input' → logprob: -10.793112754821777
    5. 'user' → logprob: -11.793112754821777
    6. ',input' → logprob: -13.543112754821777
    7. '<input' → logprob: -14.668112754821777
    8. '=input' → logprob: -14.793112754821777
    9. '[input' → logprob: -14.918112754821777
    10. ' user' → logprob: -15.043112754821777

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5761774778366089
    2. '())' → logprob: -0.9511774778366089
    3. ')' → logprob: -3.2011775970458984
    4. '(' → logprob: -5.076177597045898
    5. '().' → logprob: -6.701177597045898
    6. '('' → logprob: -7.076177597045898
    7. '`()' → logprob: -7.576177597045898
    8. '();)' → logprob: -7.951177597045898
    9. '(()' → logprob: -8.076177597045898
    10. '`)' → logprob: -8.826177597045898

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00040099851321429014
    2. 'strip' → logprob: -7.875401020050049
    3. ' split' → logprob: -11.25040054321289
    4. 'rstrip' → logprob: -12.00040054321289
    5. 'read' → logprob: -14.62540054321289
    6. ')' → logprob: -14.75040054321289
    7. '(split' → logprob: -15.25040054321289
    8. 'startswith' → logprob: -15.50040054321289
    9. 'spl' → logprob: -15.75040054321289
    10. '```' → logprob: -16.00040054321289

Token 12: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3282141387462616
    2. ')' → logprob: -1.828214168548584
    3. '))' → logprob: -2.328214168548584
    4. '()))' → logprob: -3.953214168548584
    5. '()' → logprob: -6.703214168548584
    6. '('' → logprob: -7.203214168548584
    7. '(' → logprob: -8.078213691711426
    8. '`)' → logprob: -10.203213691711426
    9. '')' → logprob: -10.703213691711426
    10. ' ())' → logprob: -11.078213691711426

Token 13: 'maximum' (ID: 78601)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.037099890410900116
    2. '#' → logprob: -3.662099838256836
    3. '+
' → logprob: -5.412099838256836
    4. '*' → logprob: -5.662099838256836
    5. 'if' → logprob: -7.037099838256836
    6. '-' → logprob: -8.037099838256836
    7. '```' → logprob: -8.537099838256836
    8. '
' → logprob: -8.662099838256836
    9. '.' → logprob: -8.787099838256836
    10. ',' → logprob: -8.787099838256836

Token 14: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23826785385608673
    2. '_' → logprob: -1.6132678985595703
    3. ')' → logprob: -5.48826789855957
    4. '()' → logprob: -5.61326789855957
    5. '```' → logprob: -6.61326789855957
    6. '_max' → logprob: -7.11326789855957
    7. '(_)' → logprob: -7.36326789855957
    8. '.' → logprob: -7.61326789855957
    9. '(max' → logprob: -7.86326789855957
    10. '_parent' → logprob: -7.98826789855957

Token 15: '_in' (ID: 2267)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15670225024223328
    2. '(first' → logprob: -2.0317022800445557
    3. '_' → logprob: -4.781702041625977
    4. '(max' → logprob: -6.156702041625977
    5. '_first' → logprob: -6.656702041625977
    6. '_max' → logprob: -7.781702041625977
    7. '(_' → logprob: -7.781702041625977
    8. '_values' → logprob: -8.281702041625977
    9. 'first' → logprob: -8.781702041625977
    10. '_value' → logprob: -8.781702041625977

Token 16: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.4747684597969055
    2. 't' → logprob: -1.7247684001922607
    3. 'teger' → logprob: -2.0997684001922607
    4. 'put' → logprob: -2.9747684001922607
    5. 'first' → logprob: -4.09976863861084
    6. 'puts' → logprob: -5.09976863861084
    7. '[first' → logprob: -6.59976863861084
    8. 'tent' → logprob: -7.72476863861084
    9. 'TEGER' → logprob: -8.22476863861084
    10. 'ter' → logprob: -8.59976863861084

Token 17: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.03904915228486061
    2. 'ger' → logprob: -3.2890491485595703
    3. 'g' → logprob: -7.66404914855957
    4. 'r' → logprob: -8.03904914855957
    5. 'gr' → logprob: -8.78904914855957
    6. 'rs' → logprob: -11.16404914855957
    7. '```' → logprob: -11.66404914855957
    8. 'get' → logprob: -11.78904914855957
    9. 'gars' → logprob: -12.66404914855957
    10. '_' → logprob: -12.78904914855957

Token 18: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7936774492263794
    2. '(' → logprob: -1.1686774492263794
    3. '=' → logprob: -2.41867733001709
    4. ' =' → logprob: -2.79367733001709
    5. ')' → logprob: -4.04367733001709
    6. '(max' → logprob: -4.04367733001709
    7. '()' → logprob: -4.04367733001709
    8. '<|end|>' → logprob: -4.04367733001709
    9. ',' → logprob: -5.41867733001709
    10. '_max' → logprob: -5.66867733001709

Token 19: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.0040818434208631516
    2. 'max' → logprob: -5.504081726074219
    3. ' first' → logprob: -12.879081726074219
    4. ' ' → logprob: -14.629081726074219
    5. ' maximum' → logprob: -15.254081726074219
    6. '(max' → logprob: -15.629081726074219
    7. '	max' → logprob: -17.37908172607422
    8. '[max' → logprob: -17.87908172607422
    9. ' ' → logprob: -18.00408172607422
    10. 'first' → logprob: -18.25408172607422

Token 20: '(first' (ID: 31998)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07917266339063644
    2. '(first' → logprob: -2.5791726112365723
    3. '(max' → logprob: -9.07917308807373
    4. '(second' → logprob: -9.70417308807373
    5. '((' → logprob: -9.95417308807373
    6. ' (' → logprob: -11.20417308807373
    7. '()' → logprob: -11.57917308807373
    8. '(user' → logprob: -11.82917308807373
    9. '(open' → logprob: -12.70417308807373
    10. '('' → logprob: -12.82917308807373

Token 21: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.0030531694646924734
    2. '_' → logprob: -5.878053188323975
    3. '_in' → logprob: -9.128052711486816
    4. '_,' → logprob: -9.628052711486816
    5. '_second' → logprob: -10.628052711486816
    6. '_)' → logprob: -10.753052711486816
    7. '_Integer' → logprob: -11.503052711486816
    8. '_INTEGER' → logprob: -11.753052711486816
    9. ' _' → logprob: -13.253052711486816
    10. '_of' → logprob: -13.378052711486816

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7146746763028204e-05
    2. ' ,' → logprob: -10.62503719329834
    3. ')' → logprob: -11.50003719329834
    4. 'second' → logprob: -14.50003719329834
    5. ',)' → logprob: -14.50003719329834
    6. ' ' → logprob: -14.75003719329834
    7. '`,' → logprob: -15.50003719329834
    8. ',
' → logprob: -15.50003719329834
    9. ',

' → logprob: -15.75003719329834
    10. ',last' → logprob: -15.87503719329834

Token 23: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.01119577419012785
    2. 'second' → logprob: -4.511195659637451
    3. ' ' → logprob: -8.88619613647461
    4. ' ' → logprob: -11.88619613647461
    5. '	second' → logprob: -14.38619613647461
    6. '_second' → logprob: -14.76119613647461
    7. ' ,' → logprob: -15.38619613647461
    8. ''' → logprob: -15.38619613647461
    9. '_' → logprob: -15.38619613647461
    10. ')' → logprob: -15.51119613647461

Token 24: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.0003360582049936056
    2. '_' → logprob: -8.125335693359375
    3. ')_' → logprob: -11.250335693359375
    4. '_in' → logprob: -12.375335693359375
    5. ')' → logprob: -12.500335693359375
    6. '_i' → logprob: -12.625335693359375
    7. '_int' → logprob: -12.750335693359375
    8. ' _' → logprob: -13.000335693359375
    9. '_second' → logprob: -13.000335693359375
    10. '_)' → logprob: -13.125335693359375

Token 25: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. '))' → logprob: -12.750004768371582
    3. ' )' → logprob: -14.375004768371582
    4. '`)' → logprob: -15.125004768371582
    5. ')
' → logprob: -15.625004768371582
    6. ',' → logprob: -16.375003814697266
    7. '```' → logprob: -16.625003814697266
    8. '()' → logprob: -17.000003814697266
    9. '')' → logprob: -17.125003814697266
    10. '),' → logprob: -17.125003814697266

Token 26: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04006073251366615
    2. ',' → logprob: -4.665060520172119
    3. ')' → logprob: -4.915060520172119
    4. '```' → logprob: -4.915060520172119
    5. '.' → logprob: -5.540060520172119
    6. '*' → logprob: -5.915060520172119
    7. '
' → logprob: -6.040060520172119
    8. '\n' → logprob: -6.540060520172119
    9. '#' → logprob: -7.040060520172119
    10. '+' → logprob: -7.290060520172119

Token 27: ' maximum' (ID: 10562)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.4034138321876526
    2. ' maximum' → logprob: -1.1534137725830078
    3. 'maximum' → logprob: -4.903413772583008
    4. 'first' → logprob: -5.278413772583008
    5. ' ' → logprob: -5.778413772583008
    6. ' ' → logprob: -7.778413772583008
    7. ' max' → logprob: -8.653413772583008
    8. '_' → logprob: -9.153413772583008
    9. '	first' → logprob: -10.153413772583008
    10. 'max' → logprob: -10.903413772583008

Token 28: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.12715204060077667
    2. '_' → logprob: -2.1271519660949707
    3. '>' → logprob: -9.877152442932129
    4. '==' → logprob: -10.752152442932129
    5. '_in' → logprob: -10.752152442932129
    6. '__' → logprob: -11.002152442932129
    7. '_for' → logprob: -11.127152442932129
    8. ' ==' → logprob: -11.127152442932129
    9. ')' → logprob: -11.252152442932129
    10. ' _' → logprob: -11.502152442932129

Token 29: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.027708718553185463
    2. 'inte' → logprob: -3.6527087688446045
    3. '_integer' → logprob: -7.402708530426025
    4. 'in' → logprob: -7.902708530426025
    5. 'n' → logprob: -8.777709007263184
    6. 'int' → logprob: -9.652709007263184
    7. '_int' → logprob: -9.777709007263184
    8. '_' → logprob: -10.277709007263184
    9. 'the' → logprob: -10.527709007263184
    10. 'te' → logprob: -10.777709007263184

Token 30: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.008843595162034035
    2. 'teger' → logprob: -4.758843421936035
    3. 't' → logprob: -8.758843421936035
    4. 'e' → logprob: -10.383843421936035
    5. 'TEGER' → logprob: -11.008843421936035
    6. 'teg' → logprob: -11.633843421936035
    7. 'tegr' → logprob: -12.383843421936035
    8. 'eg' → logprob: -12.758843421936035
    9. '_te' → logprob: -13.133843421936035
    10. 'ter' → logprob: -13.633843421936035

Token 31: 'gers' (ID: 13027)
  Prédit: 'ger'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ger' → logprob: -0.024140633642673492
    2. 'gr' → logprob: -4.02414083480835
    3. 'gers' → logprob: -5.39914083480835
    4. 'r' → logprob: -7.02414083480835
    5. 'g' → logprob: -7.77414083480835
    6. '_' → logprob: -9.524140357971191
    7. '_gr' → logprob: -10.649140357971191
    8. 'gger' → logprob: -11.899140357971191
    9. 'rt' → logprob: -13.149140357971191
    10. 't' → logprob: -13.149140357971191

Token 32: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.30244001746177673
    2. ' ==' → logprob: -1.5524400472640991
    3. '>' → logprob: -3.4274399280548096
    4. ' >=' → logprob: -4.802440166473389
    5. ' ' → logprob: -6.427440166473389
    6. ':' → logprob: -6.552440166473389
    7. ' !=' → logprob: -6.802440166473389
    8. '==' → logprob: -6.927440166473389
    9. ' :' → logprob: -7.052440166473389
    10. ' <=' → logprob: -7.177440166473389

Token 33: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03312341868877411
    2. '10' → logprob: -3.78312349319458
    3. '0' → logprob: -5.28312349319458
    4. '100' → logprob: -5.40812349319458
    5. '20' → logprob: -9.408123016357422
    6. '50' → logprob: -9.658123016357422
    7. '1' → logprob: -10.033123016357422
    8. '5' → logprob: -10.533123016357422
    9. '9' → logprob: -10.783123016357422
    10. '99' → logprob: -12.158123016357422

Token 34: '9' (ID: 24)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4340631663799286
    2. ' ' → logprob: -1.934063196182251
    3. '10' → logprob: -2.184063196182251
    4. '100' → logprob: -2.559063196182251
    5. '1' → logprob: -4.434062957763672
    6. '50' → logprob: -6.809062957763672
    7. '20' → logprob: -6.934062957763672
    8. '5' → logprob: -7.059062957763672
    9. '9' → logprob: -7.184062957763672
    10. '3' → logprob: -8.184062957763672

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.612634362885728e-05
    2. ' :' → logprob: -9.500076293945312
    3. ':
' → logprob: -14.375076293945312
    4. ':**' → logprob: -15.375076293945312
    5. '):' → logprob: -16.375076293945312
    6. ':

' → logprob: -16.500076293945312
    7. '':'' → logprob: -16.750076293945312
    8. '':' → logprob: -17.000076293945312
    9. ':def' → logprob: -17.500076293945312
    10. ':return' → logprob: -17.500076293945312

Token 36: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019281094893813133
    2. '   ' → logprob: -4.394280910491943
    3. ':
' → logprob: -5.394280910491943
    4. ' print' → logprob: -6.894280910491943
    5. 'print' → logprob: -8.144281387329102
    6. ' :' → logprob: -8.269281387329102
    7. ',' → logprob: -8.519281387329102
    8. '.' → logprob: -9.019281387329102
    9. '    
' → logprob: -10.144281387329102
    10. ' ' → logprob: -10.144281387329102

Token 37: ' product' (ID: 1888)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6727819442749023
    2. '   ' → logprob: -1.0477819442749023
    3. 'print' → logprob: -2.0477819442749023
    4. '```' → logprob: -5.797781944274902
    5. ' 
' → logprob: -6.172781944274902
    6. '
' → logprob: -6.172781944274902
    7. '    
' → logprob: -6.672781944274902
    8. '\' → logprob: -8.422781944274902
    9. '    ' → logprob: -8.547781944274902
    10. ' ' → logprob: -8.672781944274902

Token 38: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5827302932739258
    2. ' =' → logprob: -1.2077302932739258
    3. '=' → logprob: -2.332730293273926
    4. '(' → logprob: -3.207730293273926
    5. ' ' → logprob: -5.832730293273926
    6. '<|end|>' → logprob: -7.582730293273926
    7. '()' → logprob: -8.082730293273926
    8. '<|end|>' → logprob: -8.457730293273926
    9. 's' → logprob: -8.582730293273926
    10. ')' → logprob: -8.707730293273926

Token 39: '_in' (ID: 2267)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.6993956565856934
    2. ' first' → logprob: -1.1993956565856934
    3. '_' → logprob: -2.4493956565856934
    4. ' integers' → logprob: -3.3243956565856934
    5. ' maximum' → logprob: -3.5743956565856934
    6. 'maximum' → logprob: -3.8243956565856934
    7. ' ' → logprob: -3.9493956565856934
    8. ' the' → logprob: -5.949395656585693
    9. 'the' → logprob: -6.324395656585693
    10. 'max' → logprob: -6.949395656585693

Token 40: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.0019174530170857906
    2. 't' → logprob: -7.001917362213135
    3. 'teger' → logprob: -7.001917362213135
    4. 'e' → logprob: -10.751917839050293
    5. 'teg' → logprob: -10.751917839050293
    6. 'maximum' → logprob: -11.126917839050293
    7. 'TEGER' → logprob: -11.251917839050293
    8. 'eg' → logprob: -12.501917839050293
    9. 'first' → logprob: -12.626917839050293
    10. '_te' → logprob: -12.876917839050293

Token 41: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.00010962257510982454
    2. 'ger' → logprob: -9.250109672546387
    3. 'g' → logprob: -12.250109672546387
    4. 'r' → logprob: -12.500109672546387
    5. 'gr' → logprob: -12.750109672546387
    6. 'rs' → logprob: -13.875109672546387
    7. '```' → logprob: -15.125109672546387
    8. 'ers' → logprob: -16.37510871887207
    9. '   ' → logprob: -16.37510871887207
    10. '_' → logprob: -16.62510871887207

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011156638152897358
    2. '=' → logprob: -4.5111565589904785
    3. ' *=' → logprob: -9.511157035827637
    4. '_' → logprob: -10.886157035827637
    5. ' ' → logprob: -11.636157035827637
    6. '*' → logprob: -12.886157035827637
    7. 's' → logprob: -13.511157035827637
    8. ' *' → logprob: -13.636157035827637
    9. ' +=' → logprob: -14.886157035827637
    10. ',' → logprob: -15.261157035827637

Token 43: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.033982448279857635
    2. 'first' → logprob: -3.408982515335083
    3. ' maximum' → logprob: -8.408982276916504
    4. ' max' → logprob: -10.158982276916504
    5. ' ' → logprob: -10.408982276916504
    6. 'maximum' → logprob: -11.783982276916504
    7. 'max' → logprob: -12.033982276916504
    8. '(first' → logprob: -12.283982276916504
    9. '   ' → logprob: -12.408982276916504
    10. '1' → logprob: -12.533982276916504

Token 44: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.04862211272120476
    2. '_' → logprob: -3.0486221313476562
    3. '_in' → logprob: -11.423622131347656
    4. ' _' → logprob: -11.673622131347656
    5. '_Integer' → logprob: -11.798622131347656
    6. '_INTEGER' → logprob: -13.298622131347656
    7. '_int' → logprob: -13.548622131347656
    8. '_second' → logprob: -13.923622131347656
    9. '_i' → logprob: -14.923622131347656
    10. '_\' → logprob: -15.173622131347656

Token 45: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03174030780792236
    2. '*' → logprob: -3.531740188598633
    3. ' ' → logprob: -6.406740188598633
    4. ' *
' → logprob: -9.906740188598633
    5. ' ' → logprob: -10.406740188598633
    6. ' **' → logprob: -10.656740188598633
    7. '_' → logprob: -10.781740188598633
    8. '  ' → logprob: -10.906740188598633
    9. '   ' → logprob: -11.031740188598633
    10. '```' → logprob: -11.031740188598633

Token 46: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.0890018418431282
    2. 'second' → logprob: -2.4640018939971924
    3. ' ' → logprob: -10.089001655578613
    4. '	second' → logprob: -11.464001655578613
    5. ' ' → logprob: -12.214001655578613
    6. '(second' → logprob: -13.589001655578613
    7. '_second' → logprob: -14.214001655578613
    8. ' first' → logprob: -14.214001655578613
    9. '   ' → logprob: -14.464001655578613
    10. '.second' → logprob: -14.589001655578613

Token 47: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.000724229437764734
    2. '_' → logprob: -7.2507243156433105
    3. '_in' → logprob: -12.000723838806152
    4. '_int' → logprob: -12.500723838806152
    5. ' _' → logprob: -13.750723838806152
    6. '_number' → logprob: -14.250723838806152
    7. '_INTEGER' → logprob: -14.500723838806152
    8. '_second' → logprob: -14.875723838806152
    9. '_Integer' → logprob: -15.000723838806152
    10. '_variable' → logprob: -15.250723838806152

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.059507790952920914
    2. 'else' → logprob: -3.8095078468322754
    3. '<|end|>' → logprob: -4.309507846832275
    4. '\n' → logprob: -4.559507846832275
    5. '   ' → logprob: -5.059507846832275
    6. '    
' → logprob: -6.059507846832275
    7. ' else' → logprob: -6.684507846832275
    8. 'print' → logprob: -8.059507369995117
    9. '```' → logprob: -8.309507369995117
    10. 'elif' → logprob: -8.559507369995117

Token 49: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7939906120300293
    2. '   ' → logprob: -1.1689906120300293
    3. 'else' → logprob: -1.6689906120300293
    4. '\n' → logprob: -4.168990612030029
    5. 'print' → logprob: -4.418990612030029
    6. '    
' → logprob: -5.043990612030029
    7. '<|end|>' → logprob: -5.043990612030029
    8. 'elif' → logprob: -5.418990612030029
    9. ' else' → logprob: -6.168990612030029
    10. '```' → logprob: -7.418990612030029

Token 50: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6002478003501892
    2. 'print' (adapté à ' print') → logprob: -0.9752478003501892
    3. '
' → logprob: -2.975247859954834
    4. '\n' → logprob: -4.600247859954834
    5. '    
' → logprob: -4.850247859954834
    6. 'else' → logprob: -5.850247859954834
    7. ' print' → logprob: -6.975247859954834
    8. '  
' → logprob: -8.350247383117676
    9. 'elif' → logprob: -8.600247383117676
    10. '```' → logprob: -8.600247383117676

Token 51: '(product' (ID: 31697)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2521282732486725
    2. '(product' → logprob: -1.50212824344635
    3. '(max' → logprob: -8.627128601074219
    4. '('' → logprob: -12.002128601074219
    5. '(Product' → logprob: -12.752128601074219
    6. '(pro' → logprob: -13.002128601074219
    7. ' (' → logprob: -13.252128601074219
    8. '((' → logprob: -13.627128601074219
    9. '(prod' → logprob: -13.752128601074219
    10. '()' → logprob: -13.877128601074219

Token 52: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.012406866997480392
    2. ')' → logprob: -4.512406826019287
    3. '_)' → logprob: -7.512406826019287
    4. ')_' → logprob: -7.637406826019287
    5. '_' → logprob: -8.137407302856445
    6. '_o' → logprob: -10.637407302856445
    7. '_or' → logprob: -12.512407302856445
    8. '_if' → logprob: -13.137407302856445
    9. '_for' → logprob: -13.262407302856445
    10. '_in' → logprob: -14.012407302856445

Token 53: '_in' (ID: 2267)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.007571246009320021
    2. '_in' → logprob: -5.507571220397949
    3. 'gers' → logprob: -6.882571220397949
    4. 'inte' → logprob: -7.132571220397949
    5. 'nte' → logprob: -7.382571220397949
    6. 'n' → logprob: -8.00757122039795
    7. 't' → logprob: -8.38257122039795
    8. '_' → logprob: -8.75757122039795
    9. 'nt' → logprob: -9.63257122039795
    10. '_te' → logprob: -9.75757122039795

Token 54: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.0009359975229017437
    2. 'teger' → logprob: -7.125936031341553
    3. 't' → logprob: -9.250935554504395
    4. 'teg' → logprob: -10.500935554504395
    5. '_te' → logprob: -13.000935554504395
    6. 'TEGER' → logprob: -13.125935554504395
    7. 'e' → logprob: -13.375935554504395
    8. '_' → logprob: -14.250935554504395
    9. 'eg' → logprob: -14.750935554504395
    10. 'tegr' → logprob: -15.000935554504395

Token 55: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.07098176330327988
    2. 'ger' → logprob: -2.695981740951538
    3. 'gr' → logprob: -6.945981979370117
    4. 'r' → logprob: -9.945981979370117
    5. 'g' → logprob: -11.195981979370117
    6. 'rs' → logprob: -11.320981979370117
    7. 'ge' → logprob: -13.320981979370117
    8. 'ers' → logprob: -13.445981979370117
    9. '_' → logprob: -13.820981979370117
    10. '```' → logprob: -14.070981979370117

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -14.750003814697266
    4. '')' → logprob: -17.250003814697266
    5. '))' → logprob: -17.625003814697266
    6. '`)' → logprob: -17.625003814697266
    7. '   ' → logprob: -17.750003814697266
    8. ')`' → logprob: -18.000003814697266
    9. '}' → logprob: -18.125003814697266
    10. ')

' → logprob: -18.500003814697266

Token 57: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00544553529471159
    2. 'elif' → logprob: -5.50544548034668
    3. ' else' → logprob: -6.88044548034668
    4. '```' → logprob: -8.38044548034668
    5. 'e' → logprob: -9.63044548034668
    6. '<|end|>' → logprob: -11.88044548034668
    7. 'el' → logprob: -12.25544548034668
    8. 's' → logprob: -12.63044548034668
    9. '_else' → logprob: -12.63044548034668
    10. ' elif' → logprob: -13.13044548034668

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020902375399600714
    2. ':
' → logprob: -8.500208854675293
    3. ' :' → logprob: -12.500208854675293
    4. '   ' → logprob: -13.500208854675293
    5. ':
' → logprob: -16.12520980834961
    6. ':

' → logprob: -16.75020980834961
    7. ':return' → logprob: -16.87520980834961
    8. ',' → logprob: -17.00020980834961
    9. '<|end|>' → logprob: -17.37520980834961
    10. '```' → logprob: -17.50020980834961

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00932522863149643
    2. 'print' → logprob: -5.13432502746582
    3. ' print' → logprob: -6.38432502746582
    4. '    
' → logprob: -7.25932502746582
    5. '```' → logprob: -7.88432502746582
    6. ' ' → logprob: -8.38432502746582
    7. '    ' → logprob: -8.75932502746582
    8. ' 
' → logprob: -9.38432502746582
    9. '
' → logprob: -10.50932502746582
    10. '  ' → logprob: -11.00932502746582

Token 60: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.48106253147125244
    2. 'print' (adapté à ' print') → logprob: -0.9810625314712524
    3. ' sum' → logprob: -5.981062412261963
    4. '   ' → logprob: -6.481062412261963
    5. 'sum' → logprob: -6.856062412261963
    6. ' pass' → logprob: -7.981062412261963
    7. ' first' → logprob: -8.481062889099121
    8. 'pass' → logprob: -8.856062889099121
    9. ' difference' → logprob: -8.856062889099121
    10. ' max' → logprob: -9.106062889099121

Token 61: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4485430419445038
    2. '(max' → logprob: -1.0735430717468262
    3. '(first' → logprob: -4.573543071746826
    4. '("' → logprob: -5.073543071746826
    5. '(second' → logprob: -6.323543071746826
    6. '('' → logprob: -7.698543071746826
    7. '()' → logprob: -7.823543071746826
    8. '((' → logprob: -9.198542594909668
    9. '(-' → logprob: -9.198542594909668
    10. 'max' → logprob: -10.323542594909668

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.250005722045898
    3. '9' → logprob: -14.750005722045898
    4. 'maximum' → logprob: -16.3750057220459
    5. '2' → logprob: -17.0000057220459
    6. ')' → logprob: -17.6875057220459
    7. 'first' → logprob: -18.1250057220459
    8. '10' → logprob: -18.3125057220459
    9. ' )' → logprob: -18.3125057220459
    10. '0' → logprob: -18.3125057220459

Token 63: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -16.0
    3. '))' → logprob: -16.125
    4. ' )' → logprob: -16.375
    5. '`)' → logprob: -16.75
    6. '')' → logprob: -17.25
    7. ')`' → logprob: -17.5
    8. '）' → logprob: -19.5
    9. '")' → logprob: -19.875
    10. '}' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 61
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 51
Précision stricte (1ère position): 47.54%
Précision adaptée (1ère position): 47.54%
Précision (top 10): 83.61%
================================================================================
