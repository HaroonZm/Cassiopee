================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from itertools import islice

N, K = map(int, next(stdin).split())
D = N + 1
W = 1 << N

def read_input():
    lines = islice(stdin, D)
    d = [0] * (D * W)
    for i, line in enumerate(lines):
        for j, c in enumerate(line.rstrip()):
            if c == '1':
                d[i*W + j] = 1
    return d

d = read_input()
f = [0] * (D * W)

for i in range(1, D):
    for j in range(1 << i):
        t = (j >> (i-1)) & 1
        r = 0
        val = j
        while r < i and ((val >> (i-1 - r)) & 1) == t:
            r += 1
        f[i*W + j] = r

found = False
for i in range(D):
    for ii in range(i+1, D):
        z = ii - i
        mask = (1 << z) - 1
        shift = ii * W
        for j in range(1 << ii):
            dj = d[shift + j]
            d[i*W + (j >> z)] += dj
            r = f[z*W + (j & mask)]
            if r != z:
                idx = (ii - r)*W + (((j >> z) << (z - r)) | (j & ((1 << (z - r)) - 1)))
                d[idx] += dj
    for j in range(1 << i):
        if d[i*W + j] >= K:
            I, J = i, j
            found = True
            break
    if found:
        break

print('' if I == J == 0 else format(J, f'0{I}b'))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.09144724160432816
    2. ' argv' → logprob: -2.716447353363037
    3. 'exit' → logprob: -4.466447353363037
    4. ' exit' → logprob: -5.466447353363037
    5. 'import' → logprob: -5.966447353363037
    6. 'stdout' → logprob: -6.466447353363037
    7. 'stdin' → logprob: -7.716447353363037
    8. 'path' → logprob: -7.716447353363037
    9. 'version' → logprob: -8.591446876525879
    10. ' import' → logprob: -9.216446876525879

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006454797694459558
    2. '.readline' → logprob: -8.250645637512207
    3. '\n' → logprob: -8.500645637512207
    4. '.
' → logprob: -10.125645637512207
    5. 'import' → logprob: -10.250645637512207
    6. '\' → logprob: -10.375645637512207
    7. '```' → logprob: -10.875645637512207
    8. '.read' → logprob: -10.875645637512207
    9. '' → logprob: -12.000645637512207
    10. ',' → logprob: -12.125645637512207

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15172699093818665
    2. '.readline' → logprob: -2.4017269611358643
    3. '\n' → logprob: -4.276727199554443
    4. 'for' → logprob: -4.901727199554443
    5. 'import' → logprob: -4.901727199554443
    6. 'print' → logprob: -4.901727199554443
    7. 'newline' → logprob: -5.526727199554443
    8. '```' → logprob: -6.026727199554443
    9. '
' → logprob: -6.151727199554443
    10. '.read' → logprob: -6.651727199554443

Token 6: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03390835225582123
    2. ' sys' → logprob: -3.7839083671569824
    3. ' io' → logprob: -4.783908367156982
    4. ' math' → logprob: -7.283908367156982
    5. ' typing' → logprob: -7.658908367156982
    6. 'os' → logprob: -7.908908367156982
    7. ' stdout' → logprob: -9.033907890319824
    8. ' itertools' → logprob: -9.033907890319824
    9. ' subprocess' → logprob: -9.283907890319824
    10. ' space' → logprob: -9.408907890319824

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.020581480115652084
    2. 'import' → logprob: -3.8955814838409424
    3. ' ' → logprob: -11.020581245422363
    4. '	import' → logprob: -11.645581245422363
    5. '.' → logprob: -12.395581245422363
    6. '_import' → logprob: -12.770581245422363
    7. ' im' → logprob: -13.645581245422363
    8. ' itertools' → logprob: -13.770581245422363
    9. '.import' → logprob: -13.770581245422363
    10. ' .' → logprob: -14.145581245422363

Token 8: ' is' (ID: 382)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0406745672225952
    2. 'is' → logprob: -1.2906745672225952
    3. 'per' → logprob: -2.2906746864318848
    4. 'product' → logprob: -2.4156746864318848
    5. 'chain' → logprob: -2.7906746864318848
    6. 'group' → logprob: -3.2906746864318848
    7. 'cycle' → logprob: -3.4156746864318848
    8. ' permutations' → logprob: -4.290674686431885
    9. 'com' → logprob: -4.540674686431885
    10. 'import' → logprob: -4.665674686431885

Token 9: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.003124479204416275
    2. 'l' → logprob: -6.878124713897705
    3. 'n' → logprob: -7.128124713897705
    4. '```' → logprob: -8.503124237060547
    5. 'lic' → logprob: -8.878124237060547
    6. '#' → logprob: -9.128124237060547
    7. 'ertools' → logprob: -9.128124237060547
    8. '>' → logprob: -9.253124237060547
    9. 'cycle' → logprob: -9.628124237060547
    10. '1' → logprob: -9.753124237060547

Token 10: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4337475895881653
    2. 'for' → logprob: -1.6837475299835205
    3. '\' → logprob: -2.1837475299835205
    4. 'newline' → logprob: -4.0587477684021
    5. '' → logprob: -4.6837477684021
    6. '(' → logprob: -5.4337477684021
    7. '.' → logprob: -5.6837477684021
    8. 'print' → logprob: -5.6837477684021
    9. '
' → logprob: -6.3087477684021
    10. ',' → logprob: -6.4337477684021

Token 11: 'N' (ID: 45)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10423289984464645
    2. 'f' → logprob: -3.1042327880859375
    3. 'data' → logprob: -3.7292327880859375
    4. 'def' → logprob: -4.3542327880859375
    5. '```' → logprob: -5.4792327880859375
    6. '_' → logprob: -6.1042327880859375
    7. 'lines' → logprob: -6.2292327880859375
    8. 'input' → logprob: -6.2292327880859375
    9. 'n' → logprob: -6.4792327880859375
    10. '.' → logprob: -6.8542327880859375

Token 12: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14372853934764862
    2. '=' → logprob: -2.143728494644165
    3. ',' → logprob: -4.268728733062744
    4. ' ' → logprob: -6.268728733062744
    5. ')' → logprob: -8.393728256225586
    6. '_' → logprob: -8.518728256225586
    7. '.' → logprob: -9.018728256225586
    8. ' ,' → logprob: -9.018728256225586
    9. '=int' → logprob: -11.143728256225586
    10. '  ' → logprob: -11.268728256225586

Token 13: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.7257948517799377
    2. ' ' → logprob: -1.475794792175293
    3. ' M' → logprob: -2.100794792175293
    4. 'K' → logprob: -2.600794792175293
    5. 'M' → logprob: -3.100794792175293
    6. ' =' → logprob: -4.600794792175293
    7. 'space' → logprob: -4.725794792175293
    8. 'input' → logprob: -4.975794792175293
    9. '=' → logprob: -5.225794792175293
    10. '  ' → logprob: -6.225794792175293

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10032323002815247
    2. '=' → logprob: -2.35032320022583
    3. ',' → logprob: -9.100323677062988
    4. ' ,' → logprob: -13.225323677062988
    5. ' ' → logprob: -13.350323677062988
    6. '=input' → logprob: -15.100323677062988
    7. ' =",' → logprob: -15.225323677062988
    8. ')' → logprob: -15.725323677062988
    9. ' =
' → logprob: -15.850323677062988
    10. '<|end|>' → logprob: -15.850323677062988

Token 15: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0017056517535820603
    2. 'map' → logprob: -6.376705646514893
    3. ' ' → logprob: -12.75170612335205
    4. ' list' → logprob: -15.25170612335205
    5. '	map' → logprob: -16.251705169677734
    6. ' [' → logprob: -16.501705169677734
    7. '(map' → logprob: -17.001705169677734
    8. ' ' → logprob: -17.501705169677734
    9. '[' → logprob: -17.751705169677734
    10. ' ma' → logprob: -18.251705169677734

Token 16: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009877558797597885
    2. '(int' → logprob: -5.384877681732178
    3. '(lambda' → logprob: -5.884877681732178
    4. '(str' → logprob: -6.384877681732178
    5. '<|end|>' → logprob: -7.509877681732178
    6. '(input' → logprob: -10.75987720489502
    7. '(user' → logprob: -10.75987720489502
    8. '(stdin' → logprob: -11.25987720489502
    9. '(len' → logprob: -11.50987720489502
    10. '```' → logprob: -11.50987720489502

Token 17: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.3970051109790802
    2. ',' → logprob: -1.1470050811767578
    3. '(' → logprob: -5.022005081176758
    4. '(input' → logprob: -6.897005081176758
    5. ',input' → logprob: -7.022005081176758
    6. ')' → logprob: -7.272005081176758
    7. 'stdin' → logprob: -8.022005081176758
    8. ' ,' → logprob: -8.397005081176758
    9. '(st' → logprob: -9.272005081176758
    10. ',int' → logprob: -10.272005081176758

Token 18: ' next' (ID: 2613)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.07073488086462021
    2. ' stdin' → logprob: -2.695734977722168
    3. '(stdin' → logprob: -7.320734977722168
    4. 'input' → logprob: -9.070734977722168
    5. ')' → logprob: -11.445734977722168
    6. '.stdin' → logprob: -12.445734977722168
    7. ' input' → logprob: -12.695734977722168
    8. 'str' → logprob: -14.070734977722168
    9. 'stdout' → logprob: -14.070734977722168
    10. ' ' → logprob: -14.070734977722168

Token 19: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.004143811296671629
    2. '(' → logprob: -5.504143714904785
    3. '(std' → logprob: -10.254143714904785
    4. '(st' → logprob: -10.879143714904785
    5. '(input' → logprob: -12.004143714904785
    6. '(St' → logprob: -14.129143714904785
    7. '(ST' → logprob: -14.254143714904785
    8. '(stdout' → logprob: -14.504143714904785
    9. '(iter' → logprob: -14.879143714904785
    10. '(stderr' → logprob: -15.004143714904785

Token 20: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0455990694463253
    2. ')' → logprob: -3.1705989837646484
    3. '()).' → logprob: -6.295598983764648
    4. '.readline' → logprob: -7.795598983764648
    5. ')))' → logprob: -9.045598983764648
    6. '().' → logprob: -9.170598983764648
    7. '()' → logprob: -9.795598983764648
    8. '())' → logprob: -10.795598983764648
    9. '))' → logprob: -11.170598983764648
    10. '),' → logprob: -11.920598983764648

Token 21: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.6159453392028809
    2. 'read' → logprob: -0.8659453392028809
    3. 'split' → logprob: -3.365945339202881
    4. 'rstrip' → logprob: -5.365945339202881
    5. ' readline' → logprob: -12.115945816040039
    6. '.readline' → logprob: -12.740945816040039
    7. '__' → logprob: -13.490945816040039
    8. 'decode' → logprob: -13.490945816040039
    9. ' strip' → logprob: -13.740945816040039
    10. ')' → logprob: -14.115945816040039

Token 22: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6599009037017822
    2. ')' → logprob: -0.7849009037017822
    3. '('' → logprob: -4.659900665283203
    4. '()' → logprob: -4.909900665283203
    5. '))' → logprob: -5.409900665283203
    6. '(' → logprob: -5.909900665283203
    7. '()))' → logprob: -6.284900665283203
    8. '(','' → logprob: -7.534900665283203
    9. '(),' → logprob: -8.784900665283203
    10. '(',' → logprob: -9.784900665283203

Token 23: 'D' (ID: 35)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.880089282989502
    2. 'for' → logprob: -1.630089282989502
    3. 'data' → logprob: -1.880089282989502
    4. ')' → logprob: -2.880089282989502
    5. 'result' → logprob: -3.380089282989502
    6. '\n' → logprob: -3.755089282989502
    7. 'numbers' → logprob: -3.880089282989502
    8. '' → logprob: -4.255089282989502
    9. 'a' → logprob: -4.380089282989502
    10. '
' → logprob: -4.755089282989502

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6017711162567139
    2. '=' → logprob: -1.9767711162567139
    3. '[' → logprob: -2.726771116256714
    4. ',' → logprob: -2.726771116256714
    5. ' ' → logprob: -2.976771116256714
    6. '[:]' → logprob: -3.601771116256714
    7. '.' → logprob: -4.351771354675293
    8. '_' → logprob: -4.351771354675293
    9. '=[]' → logprob: -4.476771354675293
    10. ')' → logprob: -4.601771354675293

Token 25: ' N' (ID: 478)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5905106663703918
    2. 'list' → logprob: -0.8405106663703918
    3. ' set' → logprob: -5.590510845184326
    4. ' map' → logprob: -5.590510845184326
    5. 'set' → logprob: -5.715510845184326
    6. 'map' → logprob: -6.215510845184326
    7. ' [' → logprob: -7.090510845184326
    8. '[' → logprob: -8.590510368347168
    9. ' []' → logprob: -9.215510368347168
    10. '{' → logprob: -9.340510368347168

Token 26: ' +' (ID: 659)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8194429278373718
    2. ' %' → logprob: -1.3194429874420166
    3. ' //' → logprob: -2.0694429874420166
    4. '-' → logprob: -2.9444429874420166
    5. ' ' → logprob: -3.5694429874420166
    6. '+' → logprob: -3.6944429874420166
    7. '//' → logprob: -4.0694427490234375
    8. '**' → logprob: -4.4444427490234375
    9. ' -' → logprob: -5.1944427490234375
    10. ')' → logprob: -5.3194427490234375

Token 27: ' ' (ID: 220)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5455242395401001
    2. ' K' → logprob: -1.1705242395401
    3. '1' → logprob: -2.2955241203308105
    4. ' ' → logprob: -4.7955241203308105
    5. ' (' → logprob: -8.295524597167969
    6. '-' → logprob: -8.420524597167969
    7. '(' → logprob: -8.920524597167969
    8. '2' → logprob: -9.170524597167969
    9. ' -' → logprob: -9.170524597167969
    10. '10' → logprob: -9.420524597167969

Token 28: '1' (ID: 16)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.022051041945815086
    2. '1' → logprob: -4.022050857543945
    3. '(' → logprob: -6.897050857543945
    4. ' K' → logprob: -6.897050857543945
    5. '100' → logprob: -7.647050857543945
    6. '10' → logprob: -8.272050857543945
    7. '2' → logprob: -8.772050857543945
    8. ' ' → logprob: -8.897050857543945
    9. '(K' → logprob: -9.022050857543945
    10. ' (' → logprob: -9.397050857543945

Token 29: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00830652005970478
    2. '
' → logprob: -5.883306503295898
    3. '\n' → logprob: -6.133306503295898
    4. 'for' → logprob: -7.508306503295898
    5. '\' → logprob: -7.633306503295898
    6. '' → logprob: -7.758306503295898
    7. ' 
' → logprob: -8.133306503295898
    8. '<|end|>' → logprob: -8.258306503295898
    9. '```' → logprob: -8.633306503295898
    10. 'newline' → logprob: -8.758306503295898

Token 30: 'W' (ID: 54)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19385623931884766
    2. 'for' → logprob: -2.3188562393188477
    3. ' for' → logprob: -4.068856239318848
    4. ' 
' → logprob: -4.318856239318848
    5. 'while' → logprob: -4.693856239318848
    6. '\n' → logprob: -4.693856239318848
    7. ')' → logprob: -5.568856239318848
    8. ' while' → logprob: -5.943856239318848
    9. '
' → logprob: -6.318856239318848
    10. 'def' → logprob: -6.443856239318848

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4374665319919586
    2. ' =' → logprob: -1.1874665021896362
    3. ',' → logprob: -3.687466621398926
    4. '[' → logprob: -4.812466621398926
    5. 'e' → logprob: -4.937466621398926
    6. 'hile' → logprob: -5.687466621398926
    7. '_' → logprob: -6.437466621398926
    8. 'idth' → logprob: -7.687466621398926
    9. ' ' → logprob: -7.687466621398926
    10. 'ith' → logprob: -7.812466621398926

Token 32: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9682264924049377
    2. '[' → logprob: -1.343226432800293
    3. ' []' → logprob: -1.968226432800293
    4. ' [' → logprob: -1.968226432800293
    5. '0' → logprob: -3.593226432800293
    6. 'list' → logprob: -3.843226432800293
    7. ' ' → logprob: -4.843226432800293
    8. '[int' → logprob: -5.218226432800293
    9. '{}' → logprob: -5.218226432800293
    10. ' list' → logprob: -5.968226432800293

Token 33: '1' (ID: 16)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7953254580497742
    2. '[' → logprob: -1.295325517654419
    3. '[]' → logprob: -1.920325517654419
    4. '[list' → logprob: -3.170325517654419
    5. '[int' → logprob: -3.670325517654419
    6. '[N' → logprob: -4.42032527923584
    7. '[K' → logprob: -4.79532527923584
    8. '{}' → logprob: -4.79532527923584
    9. '0' → logprob: -5.04532527923584
    10. '[next' → logprob: -5.04532527923584

Token 34: ' <<' (ID: 2256)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.776990532875061
    2. '
' → logprob: -1.401990532875061
    3. '0' → logprob: -1.526990532875061
    4. '<|end|>' → logprob: -3.4019904136657715
    5. '#' → logprob: -4.4019904136657715
    6. ' ' → logprob: -4.7769904136657715
    7. 'for' → logprob: -5.0269904136657715
    8. ' 
' → logprob: -6.2769904136657715
    9. 'while' → logprob: -6.5269904136657715
    10. ')' → logprob: -6.5269904136657715

Token 35: ' N' (ID: 478)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.05863446742296219
    2. ' K' → logprob: -3.8086345195770264
    3. 'D' → logprob: -3.9336345195770264
    4. '20' → logprob: -4.683634281158447
    5. '10' → logprob: -6.558634281158447
    6. '30' → logprob: -7.183634281158447
    7. ' ' → logprob: -7.308634281158447
    8. 'N' → logprob: -7.433634281158447
    9. ' D' → logprob: -7.683634281158447
    10. '0' → logprob: -8.183634757995605

Token 36: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1658151149749756
    2. 'dp' → logprob: -2.1658151149749756
    3. 'A' → logprob: -2.5408151149749756
    4. 'visited' → logprob: -3.2908151149749756
    5. '#' → logprob: -3.4158151149749756
    6. 'dist' → logprob: -3.9158151149749756
    7. 'weights' → logprob: -3.9158151149749756
    8. 'graph' → logprob: -3.9158151149749756
    9. 'colors' → logprob: -3.9158151149749756
    10. 'a' → logprob: -4.040815353393555

Token 38: ' read' (ID: 1729)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.42773768305778503
    2. ' count' → logprob: -2.1777377128601074
    3. ' main' → logprob: -2.4277377128601074
    4. ' bit' → logprob: -3.3027377128601074
    5. ' f' → logprob: -3.6777377128601074
    6. ' is' → logprob: -3.9277377128601074
    7. ' dfs' → logprob: -4.177737712860107
    8. ' ' → logprob: -4.802737712860107
    9. ' subset' → logprob: -4.927737712860107
    10. ' check' → logprob: -5.552737712860107

Token 39: '_input' (ID: 12507)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.8293866515159607
    2. '_array' → logprob: -1.5793867111206055
    3. '()' → logprob: -2.0793867111206055
    4. '_' → logprob: -2.3293867111206055
    5. '_input' → logprob: -3.7043867111206055
    6. '_list' → logprob: -3.9543867111206055
    7. '_data' → logprob: -4.2043867111206055
    8. '_bits' → logprob: -4.7043867111206055
    9. '_block' → logprob: -4.9543867111206055
    10. '(' → logprob: -4.9543867111206055

Token 40: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001341792638413608
    2. '(' → logprob: -6.876341819763184
    3. ' ():' → logprob: -8.626341819763184
    4. '()' → logprob: -9.501341819763184
    5. '():
' → logprob: -11.126341819763184
    6. '):' → logprob: -12.001341819763184
    7. '(line' → logprob: -12.001341819763184
    8. '_' → logprob: -12.251341819763184
    9. '(:' → logprob: -12.376341819763184
    10. '_line' → logprob: -13.126341819763184

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009812992066144943
    2. ' return' → logprob: -5.134812831878662
    3. ' for' → logprob: -7.259812831878662
    4. '    
' → logprob: -7.759812831878662
    5. '	return' → logprob: -7.759812831878662
    6. 'return' → logprob: -8.00981330871582
    7. ' ' → logprob: -8.25981330871582
    8. ' lines' → logprob: -8.25981330871582
    9. '    ' → logprob: -8.38481330871582
    10. '```' → logprob: -8.50981330871582

Token 42: ' lines' (ID: 8698)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.9707897901535034
    2. ' lines' → logprob: -1.7207897901535034
    3. ' res' → logprob: -1.8457897901535034
    4. ' return' → logprob: -1.9707897901535034
    5. '   ' → logprob: -2.845789909362793
    6. 'data' → logprob: -4.095789909362793
    7. ' arr' → logprob: -4.095789909362793
    8. ' result' → logprob: -4.220789909362793
    9. 'return' → logprob: -5.095789909362793
    10. ' pass' → logprob: -5.220789909362793

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10025271773338318
    2. '=' → logprob: -2.350252628326416
    3. ' ' → logprob: -10.725253105163574
    4. '   ' → logprob: -11.975253105163574
    5. ' =
' → logprob: -12.225253105163574
    6. '=line' → logprob: -13.475253105163574
    7. '.extend' → logprob: -13.725253105163574
    8. '=[]' → logprob: -13.725253105163574
    9. '.' → logprob: -14.225253105163574
    10. ')' → logprob: -14.225253105163574

Token 44: ' is' (ID: 382)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.661521315574646
    2. ' list' → logprob: -0.786521315574646
    3. 'is' → logprob: -4.5365214347839355
    4. ' is' → logprob: -4.6615214347839355
    5. '[list' → logprob: -5.4115214347839355
    6. ' [' → logprob: -6.1615214347839355
    7. '[' → logprob: -6.7865214347839355
    8. '   ' → logprob: -8.286520957946777
    9. '(list' → logprob: -8.786520957946777
    10. '[]' → logprob: -10.036520957946777

Token 45: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.0004587903094943613
    2. 'slice' → logprob: -7.750458717346191
    3. 'line' → logprob: -11.375458717346191
    4. 'lace' → logprob: -12.250458717346191
    5. 'li' → logprob: -12.500458717346191
    6. 'ice' → logprob: -12.750458717346191
    7. '_slice' → logprob: -13.375458717346191
    8. 'list' → logprob: -13.875458717346191
    9. '   ' → logprob: -14.625458717346191
    10. 'lit' → logprob: -15.250458717346191

Token 46: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.0003433296224102378
    2. '(' → logprob: -8.000343322753906
    3. '(st' → logprob: -12.000343322753906
    4. '(
' → logprob: -14.375343322753906
    5. '(std' → logprob: -14.875343322753906
    6. '(stderr' → logprob: -15.000343322753906
    7. '(stdout' → logprob: -15.125343322753906
    8. 'stdin' → logprob: -16.375343322753906
    9. ' (' → logprob: -17.000343322753906
    10. '.stdin' → logprob: -17.500343322753906

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4800608456134796
    2. '(' → logprob: -1.1050608158111572
    3. '(),' → logprob: -3.3550608158111572
    4. '(N' → logprob: -4.355061054229736
    5. '(W' → logprob: -7.355061054229736
    6. ' ,' → logprob: -7.855061054229736
    7. ',(' → logprob: -7.980061054229736
    8. ' (' → logprob: -9.230060577392578
    9. '(stdin' → logprob: -9.230060577392578
    10. '(D' → logprob: -9.480060577392578

Token 48: ' D' (ID: 415)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3752390444278717
    2. 'D' → logprob: -1.6252390146255493
    3. ' K' → logprob: -2.750239133834839
    4. 'N' → logprob: -3.250239133834839
    5. ' D' → logprob: -4.62523889541626
    6. ' N' → logprob: -6.25023889541626
    7. 'W' → logprob: -6.87523889541626
    8. ' ' → logprob: -8.500239372253418
    9. ' W' → logprob: -9.125239372253418
    10. '2' → logprob: -9.750239372253418

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010400752071291208
    2. ')
' → logprob: -7.001039981842041
    3. ' )' → logprob: -9.3760404586792
    4. '*' → logprob: -10.8760404586792
    5. '`)' → logprob: -11.6260404586792
    6. ',' → logprob: -12.5010404586792
    7. ')

' → logprob: -12.7510404586792
    8. '))' → logprob: -13.2510404586792
    9. ')
' → logprob: -13.3760404586792
    10. ')`' → logprob: -13.7510404586792

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054257720708847046
    2. ')' → logprob: -3.05425763130188
    3. ')
' → logprob: -5.929257869720459
    4. '
' → logprob: -7.554257869720459
    5. 'def' → logprob: -7.679257869720459
    6. ' ' → logprob: -7.804257869720459
    7. '    
' → logprob: -7.929257869720459
    8. 'return' → logprob: -8.4292573928833
    9. ',' → logprob: -8.5542573928833
    10. ' lines' → logprob: -8.6792573928833

Token 51: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033430252224206924
    2. ' for' → logprob: -4.283430099487305
    3. ' lines' → logprob: -5.283430099487305
    4. ' return' → logprob: -5.658430099487305
    5. ')' → logprob: -5.908430099487305
    6. 'return' → logprob: -6.033430099487305
    7. 'for' → logprob: -6.158430099487305
    8. 'data' → logprob: -6.658430099487305
    9. ' ' → logprob: -7.158430099487305
    10. 'def' → logprob: -8.658430099487305

Token 52: ' =' (ID: 314)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.0945870578289032
    2. 'atas' → logprob: -3.4695870876312256
    3. 'ef' → logprob: -3.5945870876312256
    4. ' =' → logprob: -3.8445870876312256
    5. '=' → logprob: -5.8445868492126465
    6. 'efs' → logprob: -6.3445868492126465
    7. 'at' → logprob: -7.2195868492126465
    8. ' ata' → logprob: -7.3445868492126465
    9. 'a' → logprob: -7.7195868492126465
    10. '_lines' → logprob: -7.8445868492126465

Token 53: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0739660263061523
    2. '[list' → logprob: -1.4489660263061523
    3. '[int' → logprob: -1.6989660263061523
    4. 'list' → logprob: -1.9489660263061523
    5. '[]' → logprob: -3.4489660263061523
    6. '{' → logprob: -3.6989660263061523
    7. 'dict' → logprob: -4.073966026306152
    8. ' [' → logprob: -4.823966026306152
    9. '{}' → logprob: -5.073966026306152
    10. '[line' → logprob: -5.948966026306152

Token 54: '0' (ID: 15)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.47451677918434143
    2. 'int' → logprob: -1.224516749382019
    3. 'map' → logprob: -3.4745168685913086
    4. ' list' → logprob: -4.224516868591309
    5. ' int' → logprob: -4.599516868591309
    6. '0' → logprob: -4.724516868591309
    7. '[int' → logprob: -5.224516868591309
    8. '[]' → logprob: -5.349516868591309
    9. 'tuple' → logprob: -5.349516868591309
    10. ' map' → logprob: -6.349516868591309

Token 55: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05656662583351135
    2. ']*' → logprob: -2.9315667152404785
    3. ' for' → logprob: -7.4315667152404785
    4. ']*(' → logprob: -7.6815667152404785
    5. 'for' → logprob: -8.43156623840332
    6. ' ]' → logprob: -8.93156623840332
    7. ',' → logprob: -8.93156623840332
    8. ')]' → logprob: -9.80656623840332
    9. '()]' → logprob: -10.30656623840332
    10. ']+' → logprob: -11.05656623840332

Token 56: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' (' (ID: 350)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.08058887720108032
    2. 'W' → logprob: -3.0805888175964355
    3. 'N' → logprob: -4.4555888175964355
    4. '(D' → logprob: -4.7055888175964355
    5. '(W' → logprob: -5.9555888175964355
    6. '(' → logprob: -5.9555888175964355
    7. '(N' → logprob: -6.2055888175964355
    8. ' D' → logprob: -6.3305888175964355
    9. ' (' → logprob: -6.9555888175964355
    10. 'K' → logprob: -7.8305888175964355

Token 58: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.08380359411239624
    2. 'W' → logprob: -2.708803653717041
    3. 'N' → logprob: -4.583803653717041
    4. ' D' → logprob: -6.333803653717041
    5. '(' → logprob: -7.708803653717041
    6. ' W' → logprob: -7.958803653717041
    7. '(D' → logprob: -8.083803176879883
    8. 'K' → logprob: -8.208803176879883
    9. '(W' → logprob: -9.083803176879883
    10. ' (' → logprob: -9.458803176879883

Token 59: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06267622858285904
    2. ')
' → logprob: -2.812676191329956
    3. '+' → logprob: -8.312676429748535
    4. ' )' → logprob: -8.687676429748535
    5. ')
' → logprob: -8.812676429748535
    6. ')

' → logprob: -9.437676429748535
    7. ' )
' → logprob: -10.687676429748535
    8. '))' → logprob: -11.187676429748535
    9. '```' → logprob: -11.937676429748535
    10. ')]' → logprob: -12.937676429748535

Token 60: ' W' (ID: 486)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.4730352759361267
    2. 'D' → logprob: -1.5980353355407715
    3. 'W' → logprob: -2.5980353355407715
    4. 'N' → logprob: -3.7230353355407715
    5. ' K' → logprob: -4.2230353355407715
    6. '(D' → logprob: -4.4730353355407715
    7. ' (' → logprob: -4.8480353355407715
    8. '2' → logprob: -4.9730353355407715
    9. '(K' → logprob: -4.9730353355407715
    10. '(' → logprob: -5.3480353355407715

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020027460996061563
    2. ' )' → logprob: -6.502002716064453
    3. ')
' → logprob: -8.127002716064453
    4. '))' → logprob: -9.002002716064453
    5. '+' → logprob: -10.127002716064453
    6. '   ' → logprob: -11.252002716064453
    7. '*' → logprob: -12.127002716064453
    8. ' +' → logprob: -12.752002716064453
    9. ' )
' → logprob: -12.752002716064453
    10. ')]' → logprob: -12.877002716064453

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.746585488319397
    2. '
' → logprob: -1.746585488319397
    3. '    
' → logprob: -1.746585488319397
    4. ' for' → logprob: -2.8715853691101074
    5. 'for' → logprob: -3.2465853691101074
    6. '<|end|>' → logprob: -3.7465853691101074
    7. ' 
' → logprob: -4.246585369110107
    8. '  
' → logprob: -4.746585369110107
    9. '' → logprob: -4.996585369110107
    10. '	
' → logprob: -5.121585369110107

Token 63: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6624203324317932
    2. ' for' → logprob: -0.9124203324317932
    3. '   ' → logprob: -3.2874202728271484
    4. '    
' → logprob: -4.287420272827148
    5. '	for' → logprob: -4.537420272827148
    6. ' 
' → logprob: -5.287420272827148
    7. '
' → logprob: -5.287420272827148
    8. ' ' → logprob: -5.912420272827148
    9. '' → logprob: -6.037420272827148
    10. '	
' → logprob: -6.287420272827148

Token 64: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3958812355995178
    2. 'i' → logprob: -1.270881175994873
    3. ' _' → logprob: -3.395881175994873
    4. '_' → logprob: -4.645881175994873
    5. '_i' → logprob: -6.645881175994873
    6. ' ' → logprob: -7.645881175994873
    7. ' line' → logprob: -7.770881175994873
    8. ' idx' → logprob: -7.895881175994873
    9. ' j' → logprob: -9.395881652832031
    10. ' l' → logprob: -9.895881652832031

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35083702206611633
    2. ' in' → logprob: -1.350836992263794
    3. ' ,' → logprob: -4.100837230682373
    4. 'in' → logprob: -4.600837230682373
    5. ' ' → logprob: -4.600837230682373
    6. '  ' → logprob: -9.100836753845215
    7. ',n' → logprob: -10.975836753845215
    8. ',in' → logprob: -10.975836753845215
    9. ',line' → logprob: -11.350836753845215
    10. '_' → logprob: -11.850836753845215

Token 66: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4321230947971344
    2. ' line' → logprob: -1.057123064994812
    3. '_' → logprob: -6.807123184204102
    4. 'l' → logprob: -7.682123184204102
    5. 'row' → logprob: -7.682123184204102
    6. 's' → logprob: -8.307123184204102
    7. ' l' → logprob: -8.307123184204102
    8. '_line' → logprob: -8.807123184204102
    9. ' _' → logprob: -8.932123184204102
    10. ' row' → logprob: -9.182123184204102

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007803818676620722
    2. 'in' → logprob: -4.882803916931152
    3. ',' → logprob: -8.632803916931152
    4. ' ' → logprob: -11.632803916931152
    5. ' ,' → logprob: -11.757803916931152
    6. '	in' → logprob: -14.257803916931152
    7. 's' → logprob: -14.757803916931152
    8. 'as' → logprob: -15.820303916931152
    9. ',in' → logprob: -15.820303916931152
    10. '<|end|>' → logprob: -15.820303916931152

Token 68: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.18015646934509277
    2. ' enumerate' → logprob: -1.8051564693450928
    3. ' lines' → logprob: -8.305156707763672
    4. 'lines' → logprob: -8.930156707763672
    5. '(en' → logprob: -11.305156707763672
    6. 'en' → logprob: -11.930156707763672
    7. 'enum' → logprob: -12.180156707763672
    8. ' ' → logprob: -12.805156707763672
    9. ' en' → logprob: -13.930156707763672
    10. '```' → logprob: -13.930156707763672

Token 69: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.01942291483283043
    2. ' lines' → logprob: -4.019423007965088
    3. ' (' → logprob: -7.894423007965088
    4. '(' → logprob: -7.894423007965088
    5. '(stdin' → logprob: -8.26942253112793
    6. 'lines' → logprob: -8.39442253112793
    7. '	lines' → logprob: -10.51942253112793
    8. '(line' → logprob: -12.26942253112793
    9. '(s' → logprob: -12.39442253112793
    10. ' stdin' → logprob: -13.51942253112793

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007591956295073032
    2. ':' → logprob: -5.382591724395752
    3. '):
' → logprob: -5.882591724395752
    4. ' ):' → logprob: -9.63259220123291
    5. ')' → logprob: -9.75759220123291
    6. '   ' → logprob: -10.38259220123291
    7. ',' → logprob: -11.25759220123291
    8. '):
' → logprob: -12.50759220123291
    9. ' :' → logprob: -13.00759220123291
    10. '():' → logprob: -13.25759220123291

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06186291575431824
    2. '    ' → logprob: -3.5618629455566406
    3. '   ' → logprob: -3.9368629455566406
    4. ' tokens' → logprob: -5.061862945556641
    5. ' ' → logprob: -6.561862945556641
    6. '<|end|>' → logprob: -6.936862945556641
    7. ' for' → logprob: -7.061862945556641
    8. 'tokens' → logprob: -7.061862945556641
    9. ',' → logprob: -8.31186294555664
    10. '        ' → logprob: -8.43686294555664

Token 72: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5765418410301208
    2. ' values' → logprob: -2.0765419006347656
    3. ' nums' → logprob: -3.0765419006347656
    4. ' tokens' → logprob: -3.2015419006347656
    5. ' numbers' → logprob: -3.2015419006347656
    6. ' parts' → logprob: -3.4515419006347656
    7. ' vals' → logprob: -3.5765419006347656
    8. ' arr' → logprob: -3.7015419006347656
    9. 'for' (adapté à ' for') → logprob: -3.8265419006347656
    10. ' data' → logprob: -3.8265419006347656

Token 73: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.034048013389110565
    2. 'j' → logprob: -3.409048080444336
    3. ' x' → logprob: -9.159048080444336
    4. ',' → logprob: -9.659048080444336
    5. ' ' → logprob: -10.034048080444336
    6. ' w' → logprob: -10.284048080444336
    7. 'x' → logprob: -10.409048080444336
    8. ' idx' → logprob: -10.784048080444336
    9. ' c' → logprob: -11.284048080444336
    10. ' k' → logprob: -11.409048080444336

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03213205933570862
    2. ' ,' → logprob: -4.157132148742676
    3. ' in' → logprob: -4.157132148742676
    4. 'in' → logprob: -8.282132148742676
    5. ' ' → logprob: -10.282132148742676
    6. '<|end|>' → logprob: -12.157132148742676
    7. ',line' → logprob: -12.782132148742676
    8. 's' → logprob: -12.907132148742676
    9. ',n' → logprob: -13.282132148742676
    10. ',value' → logprob: -13.532132148742676

Token 75: ' c' (ID: 274)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9657584428787231
    2. 'c' → logprob: -1.3407584428787231
    3. 'v' → logprob: -2.5907583236694336
    4. 'val' → logprob: -2.9657583236694336
    5. 'num' → logprob: -3.0907583236694336
    6. 'ch' → logprob: -3.0907583236694336
    7. ' x' → logprob: -3.4657583236694336
    8. ' c' → logprob: -3.9657583236694336
    9. ' val' → logprob: -3.9657583236694336
    10. 'value' → logprob: -4.590758323669434

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008971701608970761
    2. 'in' → logprob: -7.125897407531738
    3. ',' → logprob: -10.250897407531738
    4. ' ' → logprob: -10.875897407531738
    5. '  ' → logprob: -11.125897407531738
    6. 's' → logprob: -11.875897407531738
    7. '   ' → logprob: -12.375897407531738
    8. 'n' → logprob: -13.625897407531738
    9. 'ar' → logprob: -13.625897407531738
    10. 'ount' → logprob: -14.000897407531738

Token 77: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.20142436027526855
    2. 'enumer' → logprob: -1.7014243602752686
    3. ' ' → logprob: -11.826424598693848
    4. 'enum' → logprob: -14.451424598693848
    5. '   ' → logprob: -14.826424598693848
    6. '  ' → logprob: -14.951424598693848
    7. '(en' → logprob: -14.951424598693848
    8. 'en' → logprob: -14.951424598693848
    9. 'range' → logprob: -15.201424598693848
    10. 'e' → logprob: -15.701424598693848

Token 78: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0010164948180317879
    2. '(' → logprob: -7.626016616821289
    3. ' line' → logprob: -8.126016616821289
    4. '(map' → logprob: -9.251016616821289
    5. 'line' → logprob: -9.751016616821289
    6. '(list' → logprob: -10.126016616821289
    7. ' (' → logprob: -11.001016616821289
    8. '(range' → logprob: -12.626016616821289
    9. '('' → logprob: -12.876016616821289
    10. '(row' → logprob: -12.876016616821289

Token 79: '.rstrip' (ID: 161629)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.36685213446617126
    2. '.rstrip' → logprob: -1.6168521642684937
    3. '):' → logprob: -2.491852045059204
    4. '):
' → logprob: -4.366852283477783
    5. '[:-' → logprob: -4.991852283477783
    6. '.split' → logprob: -5.616852283477783
    7. ':' → logprob: -6.991852283477783
    8. ')' → logprob: -7.366852283477783
    9. ' ):' → logprob: -8.241851806640625
    10. 'rstrip' → logprob: -8.866851806640625

Token 80: '()):
' (ID: 83536)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03695376589894295
    2. '):' → logprob: -3.9119536876678467
    3. '()):
' → logprob: -4.411953926086426
    4. '():' → logprob: -5.661953926086426
    5. ''):' → logprob: -9.161953926086426
    6. '('' → logprob: -9.411953926086426
    7. '):
' → logprob: -9.661953926086426
    8. '())' → logprob: -9.661953926086426
    9. ' ):' → logprob: -9.786953926086426
    10. '('\' → logprob: -9.911953926086426

Token 81: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4434468150138855
    2. 'd' → logprob: -1.9434468746185303
    3. '           ' → logprob: -2.4434468746185303
    4. ':' → logprob: -2.8184468746185303
    5. '   ' → logprob: -4.068446636199951
    6. ' d' → logprob: -4.818446636199951
    7. '):' → logprob: -4.818446636199951
    8. ' :' → logprob: -4.943446636199951
    9. '        ' → logprob: -5.318446636199951
    10. ' ' → logprob: -5.443446636199951

Token 82: ' if' (ID: 538)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.41839799284935
    2. 'd' → logprob: -1.2933980226516724
    3. ' if' → logprob: -3.293397903442383
    4. ' ' → logprob: -4.293397903442383
    5. '           ' → logprob: -5.293397903442383
    6. '               ' → logprob: -6.043397903442383
    7. '       ' → logprob: -6.043397903442383
    8. '   ' → logprob: -6.043397903442383
    9. 'if' (adapté à ' if') → logprob: -6.293397903442383
    10. ' 
' → logprob: -7.543397903442383

Token 83: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.42889177799224854
    2. 'c' → logprob: -1.0538917779922485
    3. ' ' → logprob: -10.053892135620117
    4. 'int' → logprob: -10.178892135620117
    5. '   ' → logprob: -10.553892135620117
    6. '           ' → logprob: -10.928892135620117
    7. '	c' → logprob: -11.616392135620117
    8. 'j' → logprob: -11.741392135620117
    9. ' ' → logprob: -11.741392135620117
    10. ' int' → logprob: -11.991392135620117

Token 84: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1536654233932495
    2. '==' → logprob: -2.028665542602539
    3. '=='' → logprob: -4.653665542602539
    4. ' =='' → logprob: -7.403665542602539
    5. ':' → logprob: -8.403665542602539
    6. ' ' → logprob: -9.528665542602539
    7. '=="' → logprob: -9.778665542602539
    8. '=' → logprob: -9.778665542602539
    9. ')' → logprob: -10.028665542602539
    10. ' !=' → logprob: -10.528665542602539

Token 85: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4826876223087311
    2. ' '' → logprob: -1.7326875925064087
    3. ''#' → logprob: -2.3576877117156982
    4. ''*' → logprob: -3.7326877117156982
    5. ''.' → logprob: -3.8576877117156982
    6. ' '#'' → logprob: -4.107687473297119
    7. ' '#' → logprob: -4.357687473297119
    8. ' '*'' → logprob: -4.732687473297119
    9. ''o' → logprob: -5.982687473297119
    10. ''A' → logprob: -5.982687473297119

Token 86: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0529794692993164
    2. '1' → logprob: -1.3029794692993164
    3. ''' → logprob: -2.5529794692993164
    4. '.' → logprob: -2.8029794692993164
    5. '0' → logprob: -2.9279794692993164
    6. ''.' → logprob: -2.9279794692993164
    7. ''#' → logprob: -2.9279794692993164
    8. 'W' → logprob: -3.5529794692993164
    9. 'o' → logprob: -4.302979469299316
    10. ''*' → logprob: -5.052979469299316

Token 87: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.05948431417346001
    2. '':
' → logprob: -3.0594842433929443
    3. ''' → logprob: -5.309484481811523
    4. '):' → logprob: -6.309484481811523
    5. ''):
' → logprob: -7.184484481811523
    6. ')' → logprob: -7.184484481811523
    7. '):
' → logprob: -7.184484481811523
    8. ':' → logprob: -7.684484481811523
    9. '':
' → logprob: -7.684484481811523
    10. ''):' → logprob: -7.809484481811523

Token 88: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47561588883399963
    2. ':' → logprob: -1.2256158590316772
    3. '           ' → logprob: -2.725615978240967
    4. ':
' → logprob: -4.600615978240967
    5. ' :' → logprob: -5.725615978240967
    6. '                
' → logprob: -7.225615978240967
    7. ' :
' → logprob: -7.475615978240967
    8. '                   ' → logprob: -7.600615978240967
    9. '              ' → logprob: -7.600615978240967
    10. ' ' → logprob: -7.725615978240967

Token 89: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.039557818323373795
    2. 'd' (adapté à ' d') → logprob: -3.414557933807373
    3. ' ' → logprob: -6.289557933807373
    4. '               ' → logprob: -6.539557933807373
    5. ' 
' → logprob: -6.789557933807373
    6. '           ' → logprob: -7.164557933807373
    7. '                   ' → logprob: -9.039557456970215
    8. '   ' → logprob: -9.414557456970215
    9. '
' → logprob: -9.789557456970215
    10. '                ' → logprob: -10.039557456970215

Token 90: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06889545172452927
    2. '[' → logprob: -3.1938953399658203
    3. '[(' → logprob: -4.19389533996582
    4. '[D' → logprob: -4.81889533996582
    5. ' [' → logprob: -6.69389533996582
    6. '[j' → logprob: -7.69389533996582
    7. '[d' → logprob: -8.06889533996582
    8. '   ' → logprob: -8.69389533996582
    9. '[N' → logprob: -10.06889533996582
    10. '[I' → logprob: -10.31889533996582

Token 91: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3494538962841034
    2. ' *' → logprob: -1.2244539260864258
    3. ' ' → logprob: -7.599453926086426
    4. '*d' → logprob: -8.599453926086426
    5. '|' → logprob: -9.349453926086426
    6. '*w' → logprob: -9.474453926086426
    7. ']' → logprob: -10.599453926086426
    8. '   ' → logprob: -10.599453926086426
    9. '*N' → logprob: -11.099453926086426
    10. '*(' → logprob: -11.349453926086426

Token 92: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0019412499386817217
    2. ' W' → logprob: -6.251941204071045
    3. '(W' → logprob: -12.751941680908203
    4. ' (' → logprob: -13.251941680908203
    5. 'D' → logprob: -13.251941680908203
    6. '(' → logprob: -13.376941680908203
    7. ' ' → logprob: -13.751941680908203
    8. '           ' → logprob: -14.001941680908203
    9. '   ' → logprob: -14.626941680908203
    10. '               ' → logprob: -14.751941680908203

Token 93: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6428411602973938
    2. ' +' → logprob: -0.7678411602973938
    3. '|' → logprob: -5.267841339111328
    4. ' |' → logprob: -5.392841339111328
    5. '+j' → logprob: -8.017841339111328
    6. ' ' → logprob: -9.267841339111328
    7. ' |=' → logprob: -11.142841339111328
    8. '+=' → logprob: -11.267841339111328
    9. ' +=' → logprob: -12.267841339111328
    10. ' plus' → logprob: -12.267841339111328

Token 94: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0021853535436093807
    2. ' j' → logprob: -6.127185344696045
    3. ' ' → logprob: -15.752185821533203
    4. '   ' → logprob: -17.127185821533203
    5. '	j' → logprob: -17.627185821533203
    6. '           ' → logprob: -17.877185821533203
    7. '    ' → logprob: -18.127185821533203
    8. '$j' → logprob: -18.752185821533203
    9. '  ' → logprob: -19.002185821533203
    10. '[j' → logprob: -19.377185821533203

Token 95: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004632215015590191
    2. ' ]' → logprob: -5.504631996154785
    3. ']=' → logprob: -8.129631996154785
    4. ']+=' → logprob: -8.754631996154785
    5. '|' → logprob: -10.879631996154785
    6. '=' → logprob: -11.379631996154785
    7. ' |=' → logprob: -11.629631996154785
    8. '           ' → logprob: -11.629631996154785
    9. ')' → logprob: -12.004631996154785
    10. ']
' → logprob: -12.129631996154785

Token 96: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4478500187397003
    2. ' =' → logprob: -1.197849988937378
    3. ' |=' → logprob: -3.072849988937378
    4. '|' → logprob: -4.447850227355957
    5. '+=' → logprob: -7.572850227355957
    6. ' ' → logprob: -7.947850227355957
    7. ' +=' → logprob: -8.197850227355957
    8. ')' → logprob: -12.322850227355957
    9. ' ^=' → logprob: -12.822850227355957
    10. '|=
' → logprob: -13.197850227355957

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028561127837747335
    2. ' ' → logprob: -5.877856254577637
    3. '0' → logprob: -11.252856254577637
    4. 'True' → logprob: -11.377856254577637
    5. '   ' → logprob: -11.377856254577637
    6. ' True' → logprob: -12.377856254577637
    7. 'W' → logprob: -13.565356254577637
    8. '  ' → logprob: -14.002856254577637
    9. 'j' → logprob: -14.002856254577637
    10. '           ' → logprob: -14.127856254577637

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025394887779839337
    2. ' ' → logprob: -8.625253677368164
    3. 'True' → logprob: -10.250253677368164
    4. '0' → logprob: -11.125253677368164
    5. 'W' → logprob: -12.250253677368164
    6. '-' → logprob: -12.375253677368164
    7. 'j' → logprob: -12.500253677368164
    8. '   ' → logprob: -12.750253677368164
    9. 'K' → logprob: -13.500253677368164
    10. 'c' → logprob: -13.750253677368164

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6577905416488647
    2. '<|end|>' → logprob: -0.9077905416488647
    3. '\n' → logprob: -3.4077906608581543
    4. '   ' → logprob: -3.9077906608581543
    5. '<|end|>' → logprob: -5.157790660858154
    6. ')' → logprob: -5.657790660858154
    7. '    
' → logprob: -5.782790660858154
    8. ' ' → logprob: -6.032790660858154
    9. '  
' → logprob: -6.657790660858154
    10. ' 
' → logprob: -7.032790660858154

Token 100: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32829704880714417
    2. '<|end|>' → logprob: -1.4532970190048218
    3. '
' → logprob: -4.328297138214111
    4. ' ' → logprob: -4.578297138214111
    5. ')' → logprob: -4.828297138214111
    6. '    ' → logprob: -5.203297138214111
    7. '\n' → logprob: -6.328297138214111
    8. '    
' → logprob: -6.703297138214111
    9. '<|end|>' → logprob: -6.953297138214111
    10. '  ' → logprob: -7.203297138214111

Token 102: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1797514110803604
    2. 'd' → logprob: -1.8047513961791992
    3. ' ' → logprob: -12.4297513961792
    4. '	d' → logprob: -14.4297513961792
    5. ' ' → logprob: -14.6797513961792
    6. '(d' → logprob: -14.9297513961792
    7. '   ' → logprob: -14.9297513961792
    8. '[d' → logprob: -16.054752349853516
    9. '`' → logprob: -16.117252349853516
    10. '_d' → logprob: -16.242252349853516

Token 103: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9281102418899536
    2. '
' → logprob: -1.0531102418899536
    3. '<|end|>' → logprob: -1.4281102418899536
    4. '

' → logprob: -5.928110122680664
    5. 'd' → logprob: -6.178110122680664
    6. '```' → logprob: -6.303110122680664
    7. 'newline' → logprob: -6.553110122680664
    8. '#' → logprob: -6.928110122680664
    9. '<|end|>' → logprob: -7.053110122680664
    10. '    
' → logprob: -7.178110122680664

Token 104: 'd' (ID: 67)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43692639470100403
    2. 'def' → logprob: -1.5619263648986816
    3. '

' → logprob: -2.3119263648986816
    4. '<|end|>' → logprob: -3.3119263648986816
    5. 'd' → logprob: -6.186926364898682
    6. '```' → logprob: -6.436926364898682
    7. '' → logprob: -7.186926364898682
    8. 'newline' → logprob: -7.311926364898682
    9. 'W' → logprob: -7.561926364898682
    10. '<|end|>' → logprob: -7.561926364898682

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.958854615688324
    2. '()' → logprob: -1.5838546752929688
    3. '<|end|>' → logprob: -2.2088546752929688
    4. '=' → logprob: -2.3338546752929688
    5. '[' → logprob: -2.4588546752929688
    6. '(' → logprob: -3.2088546752929688
    7. '[:]' → logprob: -3.7088546752929688
    8. ')' → logprob: -3.8338546752929688
    9. '<|end|>' → logprob: -4.583854675292969
    10. '[]' → logprob: -4.833854675292969

Token 106: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.2524203360080719
    2. ' read' → logprob: -1.5024203062057495
    3. '[' → logprob: -7.752420425415039
    4. ' [' → logprob: -9.752420425415039
    5. '(read' → logprob: -14.002420425415039
    6. '[]' → logprob: -14.252420425415039
    7. '	read' → logprob: -14.752420425415039
    8. 'd' → logprob: -14.752420425415039
    9. 'list' → logprob: -14.877420425415039
    10. ' ' → logprob: -16.00242042541504

Token 107: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -5.438573680294212e-06
    2. '_' → logprob: -13.125005722045898
    3. '_output' → logprob: -13.750005722045898
    4. ' _' → logprob: -13.875005722045898
    5. '_data' → logprob: -14.500005722045898
    6. '```' → logprob: -15.000005722045898
    7. '_inputs' → logprob: -15.375005722045898
    8. '_in' → logprob: -16.2500057220459
    9. '_code' → logprob: -16.8750057220459
    10. '_line' → logprob: -17.1250057220459

Token 108: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.190178904333152e-05
    2. '(' → logprob: -10.500031471252441
    3. '()
' → logprob: -13.625031471252441
    4. ' ()' → logprob: -14.125031471252441
    5. '()

' → logprob: -14.375031471252441
    6. '()`' → logprob: -15.125031471252441
    7. '()<' → logprob: -15.250031471252441
    8. '()(' → logprob: -15.250031471252441
    9. '()]' → logprob: -15.625031471252441
    10. '();' → logprob: -16.125032424926758

Token 109: 'f' (ID: 69)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10309723019599915
    2. 'def' → logprob: -2.9780972003936768
    3. 'max' → logprob: -4.353097438812256
    4. 'for' → logprob: -4.853097438812256
    5. 'DP' → logprob: -5.228097438812256
    6. 'mask' → logprob: -6.103097438812256
    7. '#' → logprob: -6.603097438812256
    8. 'prev' → logprob: -6.603097438812256
    9. 'res' → logprob: -6.728097438812256
    10. 'dist' → logprob: -6.728097438812256

Token 110: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.2913956642150879
    2. ' =' → logprob: -3.041395664215088
    3. '[' → logprob: -3.166395664215088
    4. '[:]' → logprob: -3.416395664215088
    5. 'o' → logprob: -3.541395664215088
    6. '[]' → logprob: -4.166395664215088
    7. '_' → logprob: -4.791395664215088
    8. ' ' → logprob: -4.916395664215088
    9. '   ' → logprob: -4.916395664215088
    10. '0' → logprob: -5.166395664215088

Token 111: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43264877796173096
    2. ' [' → logprob: -1.057648777961731
    3. ' lambda' → logprob: -6.557648658752441
    4. '[d' → logprob: -7.057648658752441
    5. 'lambda' → logprob: -7.807648658752441
    6. '[-' → logprob: -8.682648658752441
    7. ' d' → logprob: -8.932648658752441
    8. 'd' → logprob: -8.932648658752441
    9. ' [-' → logprob: -8.932648658752441
    10. '[N' → logprob: -9.057648658752441

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04883352667093277
    2. 'float' → logprob: -3.6738336086273193
    3. '-' → logprob: -4.54883337020874
    4. 'False' → logprob: -5.67383337020874
    5. '[' → logprob: -5.79883337020874
    6. '1' → logprob: -6.42383337020874
    7. '(' → logprob: -7.54883337020874
    8. ' ' → logprob: -7.92383337020874
    9. 'd' → logprob: -7.92383337020874
    10. ' [' → logprob: -8.048833847045898

Token 113: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001317871210630983
    2. ']*' → logprob: -9.250131607055664
    3. ']*(' → logprob: -10.875131607055664
    4. ' ]' → logprob: -11.500131607055664
    5. ' ' → logprob: -13.125131607055664
    6. ')' → logprob: -14.000131607055664
    7. ',' → logprob: -14.000131607055664
    8. ' for' → logprob: -14.125131607055664
    9. '*' → logprob: -14.500131607055664
    10. '   ' → logprob: -14.875131607055664

Token 114: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3520210385322571
    2. ' *' → logprob: -1.6020209789276123
    3. '*' → logprob: -2.6020209789276123
    4. ']*(' → logprob: -5.477021217346191
    5. ']*' → logprob: -5.602021217346191
    6. ' ' → logprob: -5.852021217346191
    7. ' for' → logprob: -5.852021217346191
    8. ' ]' → logprob: -6.102021217346191
    9. ',' → logprob: -6.477021217346191
    10. 'for' → logprob: -6.477021217346191

Token 115: ' (' (ID: 350)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.2509807050228119
    2. 'W' → logprob: -2.0009806156158447
    3. '(' → logprob: -3.0009806156158447
    4. ' (' → logprob: -3.8759806156158447
    5. '(D' → logprob: -4.750980854034424
    6. ' W' → logprob: -5.625980854034424
    7. '((' → logprob: -5.875980854034424
    8. 'D' → logprob: -7.000980854034424
    9. ' ((' → logprob: -9.500980377197266
    10. ' ' → logprob: -10.000980377197266

Token 116: 'D' (ID: 35)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -1.1170300245285034
    2. '(D' → logprob: -1.3670300245285034
    3. 'W' → logprob: -1.4920300245285034
    4. 'D' → logprob: -2.117030143737793
    5. '(' → logprob: -3.492030143737793
    6. ' (' → logprob: -3.867030143737793
    7. '((' → logprob: -4.617030143737793
    8. ' W' → logprob: -5.242030143737793
    9. ' D' → logprob: -5.742030143737793
    10. '   ' → logprob: -7.242030143737793

Token 117: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08898178488016129
    2. ' *' → logprob: -2.463981866836548
    3. ' ' → logprob: -11.838981628417969
    4. ')' → logprob: -11.963981628417969
    5. '*
' → logprob: -12.088981628417969
    6. '**' → logprob: -12.213981628417969
    7. '+' → logprob: -12.463981628417969
    8. '```' → logprob: -12.838981628417969
    9. '
' → logprob: -12.963981628417969
    10. '*w' → logprob: -13.776481628417969

Token 118: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.009896093979477882
    2. ' W' → logprob: -5.634896278381348
    3. '(W' → logprob: -6.009896278381348
    4. '(' → logprob: -6.134896278381348
    5. 'D' → logprob: -7.384896278381348
    6. 'K' → logprob: -8.009896278381348
    7. ' (' → logprob: -8.134896278381348
    8. '(D' → logprob: -9.384896278381348
    9. '   ' → logprob: -9.759896278381348
    10. 'N' → logprob: -9.759896278381348

Token 119: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005554486531764269
    2. ')
' → logprob: -5.255554676055908
    3. ')

' → logprob: -8.13055419921875
    4. ' )' → logprob: -11.63055419921875
    5. ')
' → logprob: -12.13055419921875
    6. ')]' → logprob: -12.75555419921875
    7. '+' → logprob: -12.88055419921875
    8. '*' → logprob: -13.00555419921875
    9. '))' → logprob: -13.75555419921875
    10. ']' → logprob: -14.25555419921875

Token 120: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04817825183272362
    2. 'i' → logprob: -4.048178195953369
    3. 'f' → logprob: -4.298178195953369
    4. ' for' → logprob: -5.173178195953369
    5. 'def' → logprob: -5.298178195953369
    6. ')' → logprob: -6.298178195953369
    7. '#' → logprob: -7.298178195953369
    8. 'd' → logprob: -7.548178195953369
    9. '=' → logprob: -7.673178195953369
    10. ']' → logprob: -7.923178195953369

Token 121: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10643694549798965
    2. ' d' → logprob: -2.6064369678497314
    3. 'i' → logprob: -3.9814369678497314
    4. 'd' → logprob: -6.106436729431152
    5. ' k' → logprob: -6.231436729431152
    6. ' ' → logprob: -7.231436729431152
    7. ' _' → logprob: -7.606436729431152
    8. ' mask' → logprob: -7.731436729431152
    9. ' layer' → logprob: -8.106436729431152
    10. ' w' → logprob: -8.481436729431152

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.113249771296978
    2. 'in' → logprob: -2.2382497787475586
    3. ',' → logprob: -8.488249778747559
    4. ' ' → logprob: -9.113249778747559
    5. '   ' → logprob: -10.863249778747559
    6. ')' → logprob: -11.488249778747559
    7. '	in' → logprob: -11.488249778747559
    8. '+' → logprob: -11.613249778747559
    9. '1' → logprob: -11.613249778747559
    10. '0' → logprob: -11.863249778747559

Token 123: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08905407786369324
    2. ' range' → logprob: -2.4640541076660156
    3. ' ' → logprob: -10.089054107666016
    4. '   ' → logprob: -10.839054107666016
    5. '(range' → logprob: -11.089054107666016
    6. '  ' → logprob: -11.839054107666016
    7. '	range' → logprob: -11.839054107666016
    8. ')' → logprob: -12.214054107666016
    9. '```' → logprob: -12.589054107666016
    10. '[' → logprob: -13.214054107666016

Token 124: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4753376245498657
    2. '(D' → logprob: -0.9753376245498657
    3. '(N' → logprob: -7.350337505340576
    4. '(d' → logprob: -8.725337982177734
    5. '(K' → logprob: -8.850337982177734
    6. ' (' → logprob: -8.975337982177734
    7. '1' → logprob: -9.850337982177734
    8. '(W' → logprob: -10.350337982177734
    9. '(len' → logprob: -10.475337982177734
    10. '((' → logprob: -11.100337982177734

Token 125: '1' (ID: 16)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.5270566940307617
    2. '1' → logprob: -0.9020566940307617
    3. 'W' → logprob: -6.652056694030762
    4. '2' → logprob: -6.777056694030762
    5. 'N' → logprob: -7.527056694030762
    6. ' D' → logprob: -7.902056694030762
    7. '(' → logprob: -8.777056694030762
    8. 'd' → logprob: -9.152056694030762
    9. ' ' → logprob: -9.277056694030762
    10. 'K' → logprob: -9.527056694030762

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0053602829575538635
    2. ' ,' → logprob: -5.255360126495361
    3. ',D' → logprob: -9.00536060333252
    4. '(D' → logprob: -13.00536060333252
    5. '<<' → logprob: -14.25536060333252
    6. ',d' → logprob: -15.63036060333252
    7. ' ' → logprob: -15.75536060333252
    8. ' <<' → logprob: -16.005359649658203
    9. 'D' → logprob: -16.005359649658203
    10. '<D' → logprob: -16.630359649658203

Token 127: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0015909154899418354
    2. ' D' → logprob: -6.501590728759766
    3. 'W' → logprob: -10.126590728759766
    4. 'N' → logprob: -10.501590728759766
    5. 'K' → logprob: -11.376590728759766
    6. '1' → logprob: -13.001590728759766
    7. 'len' → logprob: -13.251590728759766
    8. 'd' → logprob: -13.751590728759766
    9. ' ' → logprob: -13.876590728759766
    10. '(' → logprob: -13.876590728759766

Token 128: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07890652865171432
    2. '):' → logprob: -2.578906536102295
    3. '):
' → logprob: -12.078906059265137
    4. ' ):
' → logprob: -12.578906059265137
    5. ':' → logprob: -13.078906059265137
    6. ' ):' → logprob: -13.578906059265137
    7. '+' → logprob: -13.828906059265137
    8. ':
' → logprob: -13.953906059265137
    9. '*' → logprob: -14.703906059265137
    10. ')' → logprob: -14.953906059265137

Token 129: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4195612072944641
    2. 'for' → logprob: -1.4195611476898193
    3. '   ' → logprob: -2.2945611476898193
    4. '	for' → logprob: -10.919561386108398
    5. ' ' → logprob: -11.169561386108398
    6. '```' → logprob: -12.294561386108398
    7. '       ' → logprob: -13.919561386108398
    8. '   ' → logprob: -15.169561386108398
    9. '    ' → logprob: -15.294561386108398
    10. '  ' → logprob: -15.419561386108398

Token 130: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16272343695163727
    2. ' for' → logprob: -2.2877235412597656
    3. '   ' → logprob: -3.0377235412597656
    4. 'mask' → logprob: -7.537723541259766
    5. 'shift' → logprob: -9.162723541259766
    6. ' mask' → logprob: -10.162723541259766
    7. ' ' → logprob: -10.662723541259766
    8. ' shift' → logprob: -11.412723541259766
    9. 'step' → logprob: -12.662723541259766
    10. 'f' → logprob: -12.787723541259766

Token 131: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.17222097516059875
    2. ' j' → logprob: -2.0472209453582764
    3. 'k' → logprob: -4.9222211837768555
    4. 'mask' → logprob: -5.2972211837768555
    5. ' mask' → logprob: -5.5472211837768555
    6. 's' → logprob: -5.7972211837768555
    7. 'w' → logprob: -6.0472211837768555
    8. 'x' → logprob: -6.4222211837768555
    9. ' s' → logprob: -6.7972211837768555
    10. 'm' → logprob: -7.1722211837768555

Token 132: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008641043677926064
    2. 'in' → logprob: -4.758641242980957
    3. '(' → logprob: -11.258641242980957
    4. ' ' → logprob: -11.883641242980957
    5. '   ' → logprob: -13.258641242980957
    6. ',' → logprob: -13.758641242980957
    7. ')' → logprob: -14.133641242980957
    8. 'range' → logprob: -14.133641242980957
    9. '0' → logprob: -14.758641242980957
    10. '  ' → logprob: -15.258641242980957

Token 133: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11286426335573196
    2. ' range' → logprob: -2.2378642559051514
    3. '(range' → logprob: -11.48786449432373
    4. 'W' → logprob: -11.73786449432373
    5. ' W' → logprob: -11.86286449432373
    6. ' ' → logprob: -12.61286449432373
    7. '(' → logprob: -12.61286449432373
    8. '   ' → logprob: -12.86286449432373
    9. '[' → logprob: -12.86286449432373
    10. ')' → logprob: -13.36286449432373

Token 134: '(' (ID: 7)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.016944527626037598
    2. '(' → logprob: -4.141944408416748
    3. '((' → logprob: -7.391944408416748
    4. '(f' → logprob: -8.766944885253906
    5. '(D' → logprob: -9.141944885253906
    6. '(range' → logprob: -11.641944885253906
    7. 'range' → logprob: -12.391944885253906
    8. '(w' → logprob: -12.641944885253906
    9. '(K' → logprob: -12.641944885253906
    10. '(F' → logprob: -12.891944885253906

Token 135: '1' (ID: 16)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.03412416949868202
    2. '1' → logprob: -3.9091241359710693
    3. '(' → logprob: -4.534124374389648
    4. '(W' → logprob: -6.534124374389648
    5. 'f' → logprob: -7.284124374389648
    6. '0' → logprob: -8.534124374389648
    7. 'i' → logprob: -8.909124374389648
    8. ' W' → logprob: -9.159124374389648
    9. '(i' → logprob: -9.659124374389648
    10. 'K' → logprob: -10.534124374389648

Token 136: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00792872253805399
    2. '<<' → logprob: -5.132928848266602
    3. ' ,' → logprob: -6.632928848266602
    4. ' <<' → logprob: -7.382928848266602
    5. '(' → logprob: -11.257928848266602
    6. ',W' → logprob: -11.507928848266602
    7. ')' → logprob: -12.132928848266602
    8. '   ' → logprob: -12.132928848266602
    9. ',D' → logprob: -12.132928848266602
    10. '(D' → logprob: -12.382928848266602

Token 137: ' i' (ID: 575)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.09427184611558914
    2. '(N' → logprob: -2.4692718982696533
    3. 'i' → logprob: -5.969271659851074
    4. '(i' → logprob: -6.719271659851074
    5. 'K' → logprob: -7.344271659851074
    6. '(' → logprob: -7.594271659851074
    7. '(K' → logprob: -8.719271659851074
    8. ' (' → logprob: -9.219271659851074
    9. ' N' → logprob: -9.844271659851074
    10. '   ' → logprob: -10.969271659851074

Token 138: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3492565453052521
    2. '):' → logprob: -1.2242565155029297
    3. '):
' → logprob: -7.84925651550293
    4. '   ' → logprob: -9.22425651550293
    5. '       ' → logprob: -9.22425651550293
    6. ' ):
' → logprob: -9.72425651550293
    7. ' ):' → logprob: -9.72425651550293
    8. ':' → logprob: -10.72425651550293
    9. ')' → logprob: -10.84925651550293
    10. '):

' → logprob: -10.84925651550293

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41318702697753906
    2. 'for' → logprob: -1.413187026977539
    3. ' for' → logprob: -2.788187026977539
    4. 'mask' → logprob: -4.413187026977539
    5. 'k' → logprob: -4.913187026977539
    6. 'f' → logprob: -5.163187026977539
    7. ' f' → logprob: -6.288187026977539
    8. 'if' → logprob: -6.413187026977539
    9. ' k' → logprob: -6.663187026977539
    10. 'm' → logprob: -6.663187026977539

Token 140: ' t' (ID: 260)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6577166318893433
    2. 'if' → logprob: -1.9077166318893433
    3. 'for' → logprob: -2.032716751098633
    4. 'mask' → logprob: -2.657716751098633
    5. 'count' → logprob: -4.157716751098633
    6. 'x' → logprob: -4.282716751098633
    7. 'cnt' → logprob: -4.282716751098633
    8. 'pop' → logprob: -4.282716751098633
    9. 's' → logprob: -4.532716751098633
    10. 'val' → logprob: -4.907716751098633

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2523867189884186
    2. '=' → logprob: -1.5023866891860962
    3. ' ' → logprob: -9.252387046813965
    4. '0' → logprob: -9.752387046813965
    5. 'f' → logprob: -9.752387046813965
    6. '       ' → logprob: -9.877387046813965
    7. '   ' → logprob: -10.002387046813965
    8. '        ' → logprob: -11.127387046813965
    9. '_' → logprob: -11.252387046813965
    10. '    ' → logprob: -11.627387046813965

Token 142: ' (' (ID: 350)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.34994450211524963
    2. '0' → logprob: -1.5999444723129272
    3. ' f' → logprob: -3.349944591522217
    4. 'd' → logprob: -4.224944591522217
    5. 'j' → logprob: -4.474944591522217
    6. 'float' → logprob: -4.849944591522217
    7. ' ' → logprob: -5.474944591522217
    8. '(' → logprob: -5.474944591522217
    9. ' (' → logprob: -5.599944591522217
    10. ' d' → logprob: -6.099944591522217

Token 143: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11996820569038391
    2. 'f' → logprob: -2.2449681758880615
    3. 'i' → logprob: -5.619968414306641
    4. '(j' → logprob: -6.744968414306641
    5. ' j' → logprob: -7.619968414306641
    6. 'd' → logprob: -7.744968414306641
    7. '(i' → logprob: -8.24496841430664
    8. 'K' → logprob: -8.36996841430664
    9. '(f' → logprob: -8.61996841430664
    10. '(' → logprob: -8.74496841430664

Token 144: ' >>' (ID: 6832)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.9275165796279907
    2. '>>' → logprob: -1.4275165796279907
    3. '&' → logprob: -2.552516460418701
    4. '|' → logprob: -2.802516460418701
    5. ' ^' → logprob: -2.802516460418701
    6. '^' → logprob: -2.927516460418701
    7. ' &' → logprob: -2.927516460418701
    8. ' <<' → logprob: -4.177516460418701
    9. ' |' → logprob: -4.177516460418701
    10. ')' → logprob: -4.302516460418701

Token 145: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1817956119775772
    2. '1' → logprob: -1.931795597076416
    3. '(K' → logprob: -4.056795597076416
    4. '(' → logprob: -6.681795597076416
    5. 'i' → logprob: -6.931795597076416
    6. '0' → logprob: -7.306795597076416
    7. ' (' → logprob: -7.431795597076416
    8. '(N' → logprob: -8.431796073913574
    9. 'K' → logprob: -9.306796073913574
    10. '(j' → logprob: -9.681796073913574

Token 146: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.9227083325386047
    2. 'i' → logprob: -1.17270827293396
    3. 'K' → logprob: -1.79770827293396
    4. '(K' → logprob: -2.54770827293396
    5. '1' → logprob: -3.17270827293396
    6. '0' → logprob: -5.297708511352539
    7. '(' → logprob: -6.672708511352539
    8. '(N' → logprob: -7.672708511352539
    9. 'N' → logprob: -8.797708511352539
    10. ' (' → logprob: -9.172708511352539

Token 147: '-' (ID: 12)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1603938192129135
    2. '-' → logprob: -1.9103938341140747
    3. ' ' → logprob: -9.660393714904785
    4. ' -' → logprob: -9.785393714904785
    5. '   ' → logprob: -10.535393714904785
    6. '       ' → logprob: -11.660393714904785
    7. '
' → logprob: -12.285393714904785
    8. '2' → logprob: -12.910393714904785
    9. '```' → logprob: -13.035393714904785
    10. '           ' → logprob: -13.660393714904785

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3795937522663735e-05
    2. ' ' → logprob: -11.12502384185791
    3. '2' → logprob: -11.75002384185791
    4. '   ' → logprob: -14.50002384185791
    5. '0' → logprob: -16.250022888183594
    6. '```' → logprob: -16.375022888183594
    7. '
' → logprob: -16.625022888183594
    8. ')' → logprob: -16.750022888183594
    9. 'K' → logprob: -17.812522888183594
    10. 'i' → logprob: -17.937522888183594

Token 149: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01617712713778019
    2. ')' → logprob: -4.141177177429199
    3. '1' → logprob: -9.8911771774292
    4. ' ))' → logprob: -10.5161771774292
    5. '&' → logprob: -11.2661771774292
    6. ' ' → logprob: -11.3911771774292
    7. '-' → logprob: -11.5161771774292
    8. ')&' → logprob: -11.8911771774292
    9. ' )' → logprob: -12.1411771774292
    10. '   ' → logprob: -12.1411771774292

Token 150: ' &' (ID: 827)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.24341607093811035
    2. ' ^' → logprob: -2.1184160709381104
    3. '|' → logprob: -2.9934160709381104
    4. '+' → logprob: -3.6184160709381104
    5. '       ' → logprob: -4.868415832519531
    6. '&' → logprob: -4.993415832519531
    7. ' |' → logprob: -6.368415832519531
    8. ' +' → logprob: -7.243415832519531
    9. 'f' → logprob: -8.118415832519531
    10. '           ' → logprob: -8.118415832519531

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008082019630819559
    2. ' ' → logprob: -7.125808238983154
    3. 'K' → logprob: -13.625807762145996
    4. '(' → logprob: -14.125807762145996
    5. '0' → logprob: -14.500807762145996
    6. '3' → logprob: -14.750807762145996
    7. '   ' → logprob: -15.250807762145996
    8. '7' → logprob: -15.750807762145996
    9. '((' → logprob: -16.500808715820312
    10. '  ' → logprob: -16.625808715820312

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.706686690449715e-05
    2. ' ' → logprob: -9.625066757202148
    3. '3' → logprob: -14.625066757202148
    4. '   ' → logprob: -16.37506675720215
    5. '7' → logprob: -16.50006675720215
    6. '0' → logprob: -16.50006675720215
    7. '(' → logprob: -16.50006675720215
    8. 'K' → logprob: -16.62506675720215
    9. '
' → logprob: -16.75006675720215
    10. '01' → logprob: -18.00006675720215

Token 153: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4023990333080292
    2. '
' → logprob: -1.1523990631103516
    3. '        
' → logprob: -5.527399063110352
    4. '<|end|>' → logprob: -5.902399063110352
    5. 'f' → logprob: -6.152399063110352
    6. ' if' → logprob: -6.277399063110352
    7. 'if' → logprob: -6.277399063110352
    8. ')' → logprob: -7.652399063110352
    9. ' 
' → logprob: -7.902399063110352
    10. '
' → logprob: -7.902399063110352

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0666804388165474
    2. ' if' → logprob: -3.441680431365967
    3. ' for' → logprob: -4.566680431365967
    4. 'if' → logprob: -4.691680431365967
    5. ' f' → logprob: -5.566680431365967
    6. 'for' → logprob: -6.066680431365967
    7. 'f' → logprob: -6.191680431365967
    8. '<|end|>' → logprob: -6.941680431365967
    9. 's' → logprob: -7.441680431365967
    10. ',' → logprob: -7.941680431365967

Token 155: ' r' (ID: 428)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2893846929073334
    2. 'if' → logprob: -2.039384603500366
    3. 'for' → logprob: -2.789384603500366
    4. ' f' → logprob: -3.539384603500366
    5. 'prev' → logprob: -4.539384841918945
    6. ' if' → logprob: -5.539384841918945
    7. '       ' → logprob: -5.914384841918945
    8. 'v' → logprob: -6.164384841918945
    9. ' for' → logprob: -6.289384841918945
    10. 'val' → logprob: -6.414384841918945

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15123245120048523
    2. '=' → logprob: -2.0262324810028076
    3. '[' → logprob: -5.5262322425842285
    4. '[i' → logprob: -6.7762322425842285
    5. ' ' → logprob: -7.0262322425842285
    6. 'ight' → logprob: -7.5262322425842285
    7. 'f' → logprob: -7.6512322425842285
    8. 'e' → logprob: -8.776232719421387
    9. '=[' → logprob: -8.901232719421387
    10. '   ' → logprob: -8.901232719421387

Token 157: ' ' (ID: 220)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.20403730869293213
    2. ' f' → logprob: -1.9540373086929321
    3. 'j' → logprob: -4.579037189483643
    4. '0' → logprob: -4.954037189483643
    5. 'd' → logprob: -5.329037189483643
    6. '(f' → logprob: -5.704037189483643
    7. ' (' → logprob: -5.829037189483643
    8. ' d' → logprob: -6.204037189483643
    9. '(i' → logprob: -6.204037189483643
    10. '(' → logprob: -6.329037189483643

Token 158: '0' (ID: 15)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3775821328163147
    2. 'j' → logprob: -1.75258207321167
    3. '(f' → logprob: -3.75258207321167
    4. '(j' → logprob: -3.75258207321167
    5. ' f' → logprob: -4.12758207321167
    6. '0' → logprob: -4.25258207321167
    7. '(i' → logprob: -4.25258207321167
    8. 'd' → logprob: -4.25258207321167
    9. '((' → logprob: -5.00258207321167
    10. 'i' → logprob: -5.25258207321167

Token 159: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20234008133411407
    2. '<|end|>' → logprob: -1.8273401260375977
    3. '
' → logprob: -4.327340126037598
    4. ' for' → logprob: -5.452340126037598
    5. ' if' → logprob: -7.327340126037598
    6. ',' → logprob: -7.452340126037598
    7. '        
' → logprob: -7.702340126037598
    8. 'for' → logprob: -7.827340126037598
    9. '<|end|>' → logprob: -7.827340126037598
    10. ' ' → logprob: -8.077340126037598

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026195906102657318
    2. '<|end|>' → logprob: -3.901196002960205
    3. ' for' → logprob: -6.026196002960205
    4. '
' → logprob: -6.776196002960205
    5. '	' → logprob: -6.901196002960205
    6. 'for' → logprob: -8.651195526123047
    7. ' if' → logprob: -8.776195526123047
    8. ',' → logprob: -9.151195526123047
    9. '<|end|>' → logprob: -9.276195526123047
    10. ' ' → logprob: -9.651195526123047

Token 161: ' val' (ID: 1459)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40746885538101196
    2. ' for' → logprob: -1.2824687957763672
    3. 'if' → logprob: -3.407468795776367
    4. ' if' → logprob: -4.407468795776367
    5. '       ' → logprob: -4.907468795776367
    6. 'f' → logprob: -6.157468795776367
    7. 'while' → logprob: -7.157468795776367
    8. ' f' → logprob: -7.782468795776367
    9. '           ' → logprob: -8.282468795776367
    10. ' while' → logprob: -8.532468795776367

Token 162: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1799442023038864
    2. ' =' → logprob: -1.8049441576004028
    3. 's' → logprob: -8.929944038391113
    4. '+=' → logprob: -10.804944038391113
    5. ' +=' → logprob: -11.679944038391113
    6. '[' → logprob: -12.054944038391113
    7. '   ' → logprob: -12.554944038391113
    8. 'f' → logprob: -12.804944038391113
    9. ' ' → logprob: -12.929944038391113
    10. '=f' → logprob: -12.929944038391113

Token 163: ' j' (ID: 441)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.0255011320114136
    2. '0' → logprob: -1.2755011320114136
    3. ' ' → logprob: -2.025501251220703
    4. 'd' → logprob: -2.275501251220703
    5. ' f' → logprob: -2.525501251220703
    6. 'f' → logprob: -3.150501251220703
    7. '1' → logprob: -7.275501251220703
    8. ' j' → logprob: -7.275501251220703
    9. ' float' → logprob: -7.525501251220703
    10. 'float' → logprob: -7.650501251220703

Token 164: '
' (ID: 198)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.9389119148254395
    2. '
' → logprob: -1.8139119148254395
    3. '       ' → logprob: -2.0639119148254395
    4. '<|end|>' → logprob: -2.4389119148254395
    5. ' ^=' → logprob: -3.3139119148254395
    6. ' =' → logprob: -3.6889119148254395
    7. '^' → logprob: -3.6889119148254395
    8. 'for' → logprob: -3.9389119148254395
    9. ' for' → logprob: -4.0639119148254395
    10. ' <<=' → logprob: -4.1889119148254395

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17616653442382812
    2. '<|end|>' → logprob: -2.301166534423828
    3. '
' → logprob: -3.676166534423828
    4. ' for' → logprob: -4.426166534423828
    5. ' =' → logprob: -5.551166534423828
    6. 'for' → logprob: -5.801166534423828
    7. '	' → logprob: -6.176166534423828
    8. '=' → logprob: -6.301166534423828
    9. '<|end|>' → logprob: -6.551166534423828
    10. ' 
' → logprob: -6.676166534423828

Token 166: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6569051742553711
    2. ' for' → logprob: -1.156905174255371
    3. 'while' (adapté à ' while') → logprob: -2.531905174255371
    4. ' while' → logprob: -3.281905174255371
    5. '       ' → logprob: -3.406905174255371
    6. 'f' → logprob: -6.031905174255371
    7. 'if' → logprob: -6.031905174255371
    8. 'r' → logprob: -6.531905174255371
    9. '+' → logprob: -6.781905174255371
    10. ' if' → logprob: -6.781905174255371

Token 167: ' r' (ID: 428)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.03410976752638817
    2. ' val' → logprob: -3.4091098308563232
    3. '(val' → logprob: -8.034110069274902
    4. 'j' → logprob: -9.909110069274902
    5. 'r' → logprob: -10.784110069274902
    6. 't' → logprob: -11.659110069274902
    7. ' j' → logprob: -11.659110069274902
    8. '   ' → logprob: -11.909110069274902
    9. 'True' → logprob: -12.034110069274902
    10. '(' → logprob: -12.284110069274902

Token 168: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02067992277443409
    2. '<' → logprob: -4.270679950714111
    3. ' <=' → logprob: -5.145679950714111
    4. '<=' → logprob: -8.270679473876953
    5. ' +=' → logprob: -8.770679473876953
    6. ' ' → logprob: -9.270679473876953
    7. '<len' → logprob: -9.770679473876953
    8. '<n' → logprob: -10.520679473876953
    9. '+=' → logprob: -11.145679473876953
    10. '=' → logprob: -11.395679473876953

Token 169: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.093877412378788
    2. '(' → logprob: -3.7188773155212402
    3. ' i' → logprob: -3.7188773155212402
    4. 'K' → logprob: -3.9688773155212402
    5. 'N' → logprob: -4.59387731552124
    6. '(i' → logprob: -5.71887731552124
    7. ' (' → logprob: -6.21887731552124
    8. ' K' → logprob: -6.34387731552124
    9. 'W' → logprob: -6.46887731552124
    10. 'D' → logprob: -6.84387731552124

Token 170: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1215105950832367
    2. ' and' → logprob: -2.4965105056762695
    3. ':' → logprob: -3.4965105056762695
    4. ' :
' → logprob: -7.4965105056762695
    5. '           ' → logprob: -7.6215105056762695
    6. 'and' → logprob: -8.37151050567627
    7. '       ' → logprob: -8.62151050567627
    8. '):
' → logprob: -9.12151050567627
    9. '   ' → logprob: -10.37151050567627
    10. ',' → logprob: -10.37151050567627

Token 171: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4703269302845001
    2. '(val' → logprob: -1.7203269004821777
    3. 'val' → logprob: -2.5953269004821777
    4. '(t' → logprob: -3.2203269004821777
    5. '(((' → logprob: -4.095326900482178
    6. ' not' → logprob: -4.220326900482178
    7. 'not' → logprob: -4.220326900482178
    8. '(d' → logprob: -4.595326900482178
    9. 't' → logprob: -4.845326900482178
    10. ' ((' → logprob: -5.595326900482178

Token 172: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2307068407535553
    2. '(val' → logprob: -1.730706810951233
    3. ' val' → logprob: -4.230706691741943
    4. ' (' → logprob: -5.355706691741943
    5. 't' → logprob: -5.605706691741943
    6. '((' → logprob: -6.105706691741943
    7. '(t' → logprob: -6.355706691741943
    8. '(j' → logprob: -7.105706691741943
    9. 'j' → logprob: -8.480707168579102
    10. ' t' → logprob: -8.605707168579102

Token 173: ' >>' (ID: 6832)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.16589945554733276
    2. '&' → logprob: -1.9158995151519775
    3. '>>' → logprob: -5.415899276733398
    4. ' ' → logprob: -7.790899276733398
    5. ' >>' → logprob: -7.915899276733398
    6. ')' → logprob: -8.040899276733398
    7. '   ' → logprob: -11.040899276733398
    8. ' ' → logprob: -11.290899276733398
    9. ')&' → logprob: -11.540899276733398
    10. '&
' → logprob: -11.540899276733398

Token 174: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.009268531575798988
    2. '0' → logprob: -5.259268760681152
    3. '1' → logprob: -5.759268760681152
    4. '(r' → logprob: -7.134268760681152
    5. '(' → logprob: -9.884268760681152
    6. ' r' → logprob: -11.009268760681152
    7. ' (' → logprob: -12.884268760681152
    8. ' ' → logprob: -13.509268760681152
    9. '(i' → logprob: -14.446768760681152
    10. '((' → logprob: -14.509268760681152

Token 175: 'i' (ID: 72)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.017379960045218468
    2. '1' → logprob: -4.3923797607421875
    3. '(r' → logprob: -5.8923797607421875
    4. '0' → logprob: -6.2673797607421875
    5. '(' → logprob: -8.892379760742188
    6. ' r' → logprob: -11.017379760742188
    7. '(i' → logprob: -11.142379760742188
    8. 'i' → logprob: -11.767379760742188
    9. ' (' → logprob: -12.392379760742188
    10. '2' → logprob: -12.829879760742188

Token 176: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002583266468718648
    2. '1' → logprob: -6.7525835037231445
    3. ' -' → logprob: -7.2525835037231445
    4. '-r' → logprob: -7.3775835037231445
    5. 'r' → logprob: -10.127583503723145
    6. ')' → logprob: -10.377583503723145
    7. ')-' → logprob: -13.377583503723145
    8. ' ' → logprob: -13.502583503723145
    9. '   ' → logprob: -13.752583503723145
    10. '))' → logprob: -13.752583503723145

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14437776803970337
    2. 'r' → logprob: -2.0193777084350586
    3. '2' → logprob: -6.644377708435059
    4. ' r' → logprob: -8.644377708435059
    5. ' ' → logprob: -8.894377708435059
    6. '   ' → logprob: -9.769377708435059
    7. '(r' → logprob: -12.394377708435059
    8. 'i' → logprob: -12.644377708435059
    9. '(' → logprob: -12.956877708435059
    10. '
' → logprob: -13.081877708435059

Token 178: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14436982572078705
    2. '))' → logprob: -2.0193698406219482
    3. '-r' → logprob: -7.019369602203369
    4. '-' → logprob: -8.019370079040527
    5. ')&' → logprob: -9.019370079040527
    6. ' )' → logprob: -9.269370079040527
    7. ' -' → logprob: -9.269370079040527
    8. '-i' → logprob: -9.519370079040527
    9. ')))' → logprob: -10.519370079040527
    10. 'r' → logprob: -10.894370079040527

Token 179: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0017155165551230311
    2. ' r' → logprob: -6.376715660095215
    3. '1' → logprob: -11.626715660095215
    4. '   ' → logprob: -13.126715660095215
    5. ')' → logprob: -13.876715660095215
    6. ' ' → logprob: -14.126715660095215
    7. '	r' → logprob: -14.751715660095215
    8. '
' → logprob: -16.8767147064209
    9. '  ' → logprob: -16.8767147064209
    10. '    ' → logprob: -17.0017147064209

Token 180: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03935107961297035
    2. '))' → logprob: -3.289350986480713
    3. ' )' → logprob: -6.664350986480713
    4. ')))' → logprob: -11.414351463317871
    5. ' ))' → logprob: -11.664351463317871
    6. ')&' → logprob: -11.664351463317871
    7. '})' → logprob: -14.289351463317871
    8. '   ' → logprob: -14.664351463317871
    9. '])' → logprob: -14.789351463317871
    10. ' ' → logprob: -15.039351463317871

Token 181: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11686734855175018
    2. ' &' → logprob: -2.8668673038482666
    3. '&' → logprob: -3.6168673038482666
    4. ' )' → logprob: -3.9918673038482666
    5. ')&' → logprob: -4.866867542266846
    6. '==' → logprob: -9.866867065429688
    7. ')==' → logprob: -9.991867065429688
    8. '>>' → logprob: -10.116867065429688
    9. '):
' → logprob: -10.366867065429688
    10. ' ==' → logprob: -10.741867065429688

Token 182: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026572206988930702
    2. ' ' → logprob: -3.6515722274780273
    3. 't' → logprob: -8.526572227478027
    4. ' t' → logprob: -10.276572227478027
    5. '(' → logprob: -11.151572227478027
    6. 'r' → logprob: -12.026572227478027
    7. ' (' → logprob: -12.714072227478027
    8. '7' → logprob: -12.839072227478027
    9. '3' → logprob: -13.026572227478027
    10. '31' → logprob: -13.401572227478027

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031866179779171944
    2. ' ' → logprob: -8.12531852722168
    3. '3' → logprob: -11.50031852722168
    4. '(' → logprob: -12.12531852722168
    5. 't' → logprob: -12.75031852722168
    6. '7' → logprob: -14.00031852722168
    7. '0' → logprob: -14.25031852722168
    8. 'r' → logprob: -14.25031852722168
    9. '
' → logprob: -15.25031852722168
    10. '   ' → logprob: -15.37531852722168

Token 184: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028333963826298714
    2. ')==' → logprob: -4.278334140777588
    3. ' )' → logprob: -5.153334140777588
    4. '):
' → logprob: -5.278334140777588
    5. '):' → logprob: -5.903334140777588
    6. '==' → logprob: -8.27833366394043
    7. ' ==' → logprob: -9.15333366394043
    8. ' ):' → logprob: -10.52833366394043
    9. ' ):
' → logprob: -10.77833366394043
    10. '())' → logprob: -11.52833366394043

Token 185: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6952846646308899
    2. ' ==' → logprob: -0.6952846646308899
    3. ' and' → logprob: -7.570284843444824
    4. ')' → logprob: -8.070284843444824
    5. ':
' → logprob: -8.070284843444824
    6. ':' → logprob: -8.570284843444824
    7. ' !=' → logprob: -8.695284843444824
    8. '!=' → logprob: -8.945284843444824
    9. ')==' → logprob: -9.070284843444824
    10. ' ' → logprob: -9.195284843444824

Token 186: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12748591601848602
    2. ' t' → logprob: -2.127485990524292
    3. '0' → logprob: -7.752485752105713
    4. '1' → logprob: -9.377486228942871
    5. ' ' → logprob: -10.252486228942871
    6. '(t' → logprob: -13.127486228942871
    7. '   ' → logprob: -13.377486228942871
    8. '(' → logprob: -13.877486228942871
    9. ' (' → logprob: -14.252486228942871
    10. ' ' → logprob: -14.752486228942871

Token 187: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4409641623497009
    2. ':' → logprob: -1.0659642219543457
    3. ' and' → logprob: -4.565964221954346
    4. '):
' → logprob: -6.815964221954346
    5. '           ' → logprob: -8.190963745117188
    6. '       ' → logprob: -8.690963745117188
    7. ' :
' → logprob: -9.440963745117188
    8. '):' → logprob: -9.690963745117188
    9. 'and' → logprob: -10.690963745117188
    10. ' :' → logprob: -10.815963745117188

Token 188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5336238145828247
    2. '
' → logprob: -1.9086238145828247
    3. ':
' → logprob: -2.283623695373535
    4. ' r' → logprob: -3.408623695373535
    5. '       ' → logprob: -3.533623695373535
    6. '```' → logprob: -3.658623695373535
    7. ' 
' → logprob: -4.408623695373535
    8. ':' → logprob: -4.533623695373535
    9. 'r' → logprob: -4.658623695373535
    10. '+' → logprob: -5.033623695373535

Token 189: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.12856799364089966
    2. ' r' → logprob: -2.503567934036255
    3. '           ' → logprob: -3.253567934036255
    4. '
' → logprob: -9.378567695617676
    5. '       ' → logprob: -9.878567695617676
    6. '   ' → logprob: -9.878567695617676
    7. '               ' → logprob: -11.128567695617676
    8. '```' → logprob: -12.003567695617676
    9. '	r' → logprob: -12.628567695617676
    10. ' ' → logprob: -13.253567695617676

Token 190: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04859429597854614
    2. ' +=' → logprob: -3.0485942363739014
    3. '=' → logprob: -12.17359447479248
    4. ']+=' → logprob: -14.04859447479248
    5. '+' → logprob: -14.17359447479248
    6. '   ' → logprob: -15.67359447479248
    7. '+='' → logprob: -17.048593521118164
    8. '+="' → logprob: -18.173593521118164
    9. 's' → logprob: -18.173593521118164
    10. ' =' → logprob: -18.298593521118164

Token 191: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.125139236450195
    4. '```' → logprob: -17.187639236450195
    5. '<|end|>' → logprob: -19.000139236450195
    6. '
' → logprob: -19.062639236450195
    7. ' ' → logprob: -19.125139236450195
    8. '0' → logprob: -19.625139236450195
    9. '۱' → logprob: -19.625139236450195
    10. '  ' → logprob: -19.687639236450195

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -18.250015258789062
    4. '0' → logprob: -18.375015258789062
    5. '   ' → logprob: -19.375015258789062
    6. '2' → logprob: -20.250015258789062
    7. 'r' → logprob: -20.250015258789062
    8. '
' → logprob: -20.312515258789062
    9. '<|end|>' → logprob: -20.687515258789062
    10. '۱' → logprob: -21.125015258789062

Token 193: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1735309660434723
    2. '<|end|>' → logprob: -3.0485310554504395
    3. '        
' → logprob: -3.2985310554504395
    4. ' if' → logprob: -3.9235310554504395
    5. ' 
' → logprob: -4.2985310554504395
    6. ' val' → logprob: -4.9235310554504395
    7. ' ' → logprob: -5.0485310554504395
    8. ',' → logprob: -5.2985310554504395
    9. '           ' → logprob: -5.4235310554504395
    10. '        ' → logprob: -6.1735310554504395

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16189754009246826
    2. '        
' → logprob: -3.286897659301758
    3. ' if' → logprob: -3.286897659301758
    4. ' ' → logprob: -4.161897659301758
    5. ' 
' → logprob: -4.411897659301758
    6. '        ' → logprob: -4.661897659301758
    7. '<|end|>' → logprob: -4.911897659301758
    8. ' val' → logprob: -5.161897659301758
    9. ' f' → logprob: -5.536897659301758
    10. ',' → logprob: -5.661897659301758

Token 195: ' f' (ID: 285)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.837464451789856
    2. ' if' → logprob: -0.837464451789856
    3. '       ' → logprob: -2.5874643325805664
    4. 'f' (adapté à ' f') → logprob: -3.8374643325805664
    5. ' f' → logprob: -4.462464332580566
    6. 'val' → logprob: -4.587464332580566
    7. ' val' → logprob: -5.462464332580566
    8. 'for' → logprob: -6.587464332580566
    9. 'v' → logprob: -6.837464332580566
    10. 'x' → logprob: -6.962464332580566

Token 196: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00256864121183753
    2. '[' → logprob: -6.25256872177124
    3. '[(' → logprob: -7.62756872177124
    4. ' [' → logprob: -9.002568244934082
    5. '[f' → logprob: -12.252568244934082
    6. ' i' → logprob: -12.377568244934082
    7. 'i' → logprob: -12.377568244934082
    8. '   ' → logprob: -12.752568244934082
    9. '[j' → logprob: -12.877568244934082
    10. ' =' → logprob: -12.877568244934082

Token 197: '*' (ID: 9)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.18551696836948395
    2. ']' → logprob: -1.8105169534683228
    3. ']+=' → logprob: -5.935516834259033
    4. ' ][' → logprob: -6.935516834259033
    5. '[' → logprob: -7.185516834259033
    6. '-' → logprob: -8.060517311096191
    7. '+' → logprob: -8.185517311096191
    8. '[j' → logprob: -8.435517311096191
    9. '[i' → logprob: -9.560517311096191
    10. ' ]' → logprob: -9.810517311096191

Token 198: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00020127551397308707
    2. ' W' → logprob: -9.250201225280762
    3. '(W' → logprob: -9.250201225280762
    4. '(' → logprob: -11.875201225280762
    5. 'j' → logprob: -13.875201225280762
    6. '   ' → logprob: -14.875201225280762
    7. ' (' → logprob: -15.000201225280762
    8. ' ' → logprob: -15.375201225280762
    9. '(j' → logprob: -16.625202178955078
    10. '       ' → logprob: -16.750202178955078

Token 199: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12703803181648254
    2. '+' → logprob: -2.12703800201416
    3. '+j' → logprob: -9.12703800201416
    4. ' +
' → logprob: -14.87703800201416
    5. ' plus' → logprob: -15.50203800201416
    6. '+
' → logprob: -15.75203800201416
    7. ' ' → logprob: -16.002038955688477
    8. '＋' → logprob: -16.377038955688477
    9. '+i' → logprob: -16.502038955688477
    10. ' +=' → logprob: -16.752038955688477

Token 200: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0031817557755857706
    2. ' j' → logprob: -5.7531819343566895
    3. '   ' → logprob: -13.628181457519531
    4. ' ' → logprob: -13.753181457519531
    5. '(j' → logprob: -14.628181457519531
    6. '(' → logprob: -15.003181457519531
    7. '           ' → logprob: -15.128181457519531
    8. '       ' → logprob: -15.378181457519531
    9. ' (' → logprob: -16.00318145751953
    10. '    ' → logprob: -16.37818145751953

Token 201: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014393957331776619
    2. '=' → logprob: -4.7643938064575195
    3. ' ]' → logprob: -6.2643938064575195
    4. ']=' → logprob: -6.6393938064575195
    5. ']+=' → logprob: -6.6393938064575195
    6. ' =' → logprob: -6.8893938064575195
    7. ' +=' → logprob: -9.26439380645752
    8. '+=' → logprob: -9.51439380645752
    9. ')' → logprob: -10.13939380645752
    10. ' ' → logprob: -12.76439380645752

Token 202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38795340061187744
    2. ' =' → logprob: -1.2629534006118774
    3. ' +=' → logprob: -3.887953281402588
    4. '+=' → logprob: -4.012953281402588
    5. ' |=' → logprob: -9.137953758239746
    6. '=max' → logprob: -10.262953758239746
    7. '|' → logprob: -11.512953758239746
    8. ' max' → logprob: -11.887953758239746
    9. 'max' → logprob: -12.262953758239746
    10. ' ' → logprob: -12.637953758239746

Token 203: ' r' (ID: 428)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6660457849502563
    2. 'r' → logprob: -1.4160457849502563
    3. 'max' → logprob: -1.5410457849502563
    4. ' max' → logprob: -4.541045665740967
    5. ' f' → logprob: -4.916045665740967
    6. '0' → logprob: -6.166045665740967
    7. ' r' → logprob: -6.166045665740967
    8. 'K' → logprob: -6.291045665740967
    9. '1' → logprob: -6.666045665740967
    10. 'min' → logprob: -7.166045665740967

Token 204: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: 'found' (ID: 26334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026594845578074455
    2. 'print' → logprob: -4.526594638824463
    3. 'if' → logprob: -5.651594638824463
    4. '#' → logprob: -5.901594638824463
    5. 'f' → logprob: -6.026594638824463
    6. '<|end|>' → logprob: -6.401594638824463
    7. ' for' → logprob: -6.526594638824463
    8. 'i' → logprob: -6.651594638824463
    9. ')' → logprob: -7.651594638824463
    10. 'def' → logprob: -8.276595115661621

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1346534639596939
    2. '=' → logprob: -3.0096535682678223
    3. '_' → logprob: -3.0096535682678223
    4. ' ' → logprob: -4.759653568267822
    5. '(' → logprob: -5.259653568267822
    6. ':' → logprob: -5.384653568267822
    7. ',' → logprob: -5.634653568267822
    8. '[' → logprob: -6.509653568267822
    9. '_idx' → logprob: -7.509653568267822
    10. ')' → logprob: -8.009653091430664

Token 207: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.43767836689949036
    2. ' False' → logprob: -1.062678337097168
    3. '0' → logprob: -4.812678337097168
    4. ' ' → logprob: -8.562678337097168
    5. '[]' → logprob: -8.687678337097168
    6. ' True' → logprob: -8.812678337097168
    7. 'True' → logprob: -8.812678337097168
    8. '[' → logprob: -9.937678337097168
    9. ' [' → logprob: -10.312678337097168
    10. ' []' → logprob: -10.437678337097168

Token 208: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15732458233833313
    2. '
' → logprob: -2.4073245525360107
    3. ' for' → logprob: -2.9073245525360107
    4. ':' → logprob: -8.53232479095459
    5. '\n' → logprob: -8.53232479095459
    6. ' 
' → logprob: -8.65732479095459
    7. ':
' → logprob: -9.15732479095459
    8. '<|end|>' → logprob: -9.78232479095459
    9. '```' → logprob: -10.28232479095459
    10. ',' → logprob: -10.53232479095459

Token 209: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02122405357658863
    2. ' for' → logprob: -4.146224021911621
    3. '
' → logprob: -5.271224021911621
    4. '<|end|>' → logprob: -11.646224021911621
    5. 'i' → logprob: -11.896224021911621
    6. ' 
' → logprob: -12.021224021911621
    7. '```' → logprob: -12.271224021911621
    8. 'while' → logprob: -12.771224021911621
    9. ':' → logprob: -13.021224021911621
    10. 'if' → logprob: -13.771224021911621

Token 210: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5354553461074829
    2. ' i' → logprob: -1.035455346107483
    3. ' length' → logprob: -3.7854552268981934
    4. 'x' → logprob: -5.160455226898193
    5. 'length' → logprob: -5.285455226898193
    6. ' mask' → logprob: -5.285455226898193
    7. ' x' → logprob: -5.535455226898193
    8. 'k' → logprob: -5.785455226898193
    9. 'mask' → logprob: -6.035455226898193
    10. ' k' → logprob: -6.660455226898193

Token 211: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03369595855474472
    2. 'in' → logprob: -3.408695936203003
    3. ' ' → logprob: -10.658696174621582
    4. 'range' → logprob: -11.408696174621582
    5. ',' → logprob: -11.658696174621582
    6. '1' → logprob: -13.783696174621582
    7. '_' → logprob: -14.158696174621582
    8. ')' → logprob: -14.158696174621582
    9. '```' → logprob: -14.283696174621582
    10. ' range' → logprob: -14.408696174621582

Token 212: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029771901667118073
    2. ' range' → logprob: -3.5297718048095703
    3. '   ' → logprob: -12.40477180480957
    4. ' ' → logprob: -12.40477180480957
    5. 'D' → logprob: -12.77977180480957
    6. '(range' → logprob: -12.90477180480957
    7. 'in' → logprob: -13.77977180480957
    8. '  ' → logprob: -13.90477180480957
    9. '	range' → logprob: -14.40477180480957
    10. ' D' → logprob: -14.52977180480957

Token 213: '(D' (ID: 9908)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1976601928472519
    2. '(D' → logprob: -1.947660207748413
    3. '(K' → logprob: -3.697660207748413
    4. '(N' → logprob: -4.447659969329834
    5. '(len' → logprob: -10.322660446166992
    6. '(W' → logprob: -10.322660446166992
    7. '1' → logprob: -10.322660446166992
    8. '((' → logprob: -10.822660446166992
    9. '(M' → logprob: -10.947660446166992
    10. '(d' → logprob: -11.072660446166992

Token 214: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3492355942726135
    2. '):' → logprob: -1.2242355346679688
    3. ',' → logprob: -7.724235534667969
    4. '-' → logprob: -8.349235534667969
    5. '):
' → logprob: -10.599235534667969
    6. ' ):' → logprob: -10.849235534667969
    7. ':' → logprob: -11.099235534667969
    8. ' -' → logprob: -11.224235534667969
    9. ' ):
' → logprob: -11.349235534667969
    10. '   ' → logprob: -11.474235534667969

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3879013657569885
    2. ' for' → logprob: -1.1379013061523438
    3. 'for' → logprob: -7.012901306152344
    4. '	for' → logprob: -9.637901306152344
    5. ' if' → logprob: -10.387901306152344
    6. '   ' → logprob: -11.137901306152344
    7. ' range' → logprob: -12.137901306152344
    8. ' ' → logprob: -12.762901306152344
    9. ':' → logprob: -13.512901306152344
    10. ' ind' → logprob: -13.762901306152344

Token 216: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.35135120153427124
    2. ' for' → logprob: -1.226351261138916
    3. '   ' → logprob: -5.851351261138916
    4. ' ' → logprob: -11.476350784301758
    5. '	for' → logprob: -12.226350784301758
    6. 'j' → logprob: -12.976350784301758
    7. 'if' → logprob: -13.101350784301758
    8. '```' → logprob: -13.976350784301758
    9. 'found' → logprob: -14.351350784301758
    10. ' if' → logprob: -14.476350784301758

Token 217: ' ii' (ID: 28354)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.42891165614128113
    2. ' j' → logprob: -1.0539116859436035
    3. ' W' → logprob: -9.928911209106445
    4. ' range' → logprob: -10.678911209106445
    5. 'range' → logprob: -10.928911209106445
    6. 'k' → logprob: -11.053911209106445
    7. 'W' → logprob: -11.178911209106445
    8. '(' → logprob: -11.303911209106445
    9. ' (' → logprob: -11.553911209106445
    10. ' K' → logprob: -11.678911209106445

Token 218: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1273864358663559
    2. 'in' → logprob: -2.1273863315582275
    3. '(' → logprob: -9.127386093139648
    4. ',' → logprob: -9.627386093139648
    5. ' i' → logprob: -9.752386093139648
    6. ' ' → logprob: -10.002386093139648
    7. '(i' → logprob: -10.502386093139648
    8. '   ' → logprob: -10.877386093139648
    9. 'i' → logprob: -11.002386093139648
    10. '1' → logprob: -11.252386093139648

Token 219: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11293411999940872
    2. ' range' → logprob: -2.237934112548828
    3. '(range' → logprob: -9.862934112548828
    4. '   ' → logprob: -11.237934112548828
    5. ' W' → logprob: -11.237934112548828
    6. '(W' → logprob: -11.987934112548828
    7. ' ' → logprob: -11.987934112548828
    8. 'W' → logprob: -11.987934112548828
    9. 'ange' → logprob: -12.112934112548828
    10. '(' → logprob: -12.987934112548828

Token 220: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7841971516609192
    2. '(D' → logprob: -1.5341970920562744
    3. '(W' → logprob: -1.7841970920562744
    4. '(' → logprob: -2.6591970920562744
    5. '(K' → logprob: -2.6591970920562744
    6. '(N' → logprob: -4.1591973304748535
    7. 'D' → logprob: -6.5341973304748535
    8. 'W' → logprob: -7.4091973304748535
    9. '((' → logprob: -7.6591973304748535
    10. 'i' → logprob: -7.6591973304748535

Token 221: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4321598708629608
    2. ',' → logprob: -1.3071599006652832
    3. ' +' → logprob: -2.557159900665283
    4. ' ,' → logprob: -6.182159900665283
    5. '   ' → logprob: -7.932159900665283
    6. '       ' → logprob: -9.307159423828125
    7. '):
' → logprob: -9.932159423828125
    8. '):' → logprob: -10.432159423828125
    9. '*' → logprob: -10.932159423828125
    10. '-' → logprob: -10.932159423828125

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015395533409900963
    2. ' ' → logprob: -8.875153541564941
    3. 'i' → logprob: -12.500153541564941
    4. '2' → logprob: -12.500153541564941
    5. ',' → logprob: -13.625153541564941
    6. '
' → logprob: -13.625153541564941
    7. '(' → logprob: -13.875153541564941
    8. '   ' → logprob: -14.000153541564941
    9. '(i' → logprob: -14.000153541564941
    10. ' i' → logprob: -14.750153541564941

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009668456041254103
    2. ' ,' → logprob: -7.250967025756836
    3. ',D' → logprob: -8.375967025756836
    4. '):' → logprob: -11.875967025756836
    5. '):
' → logprob: -11.875967025756836
    6. '   ' → logprob: -12.625967025756836
    7. '+' → logprob: -12.875967025756836
    8. ',W' → logprob: -13.125967025756836
    9. ' ' → logprob: -14.625967025756836
    10. '       ' → logprob: -14.750967025756836

Token 224: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0017036291537806392
    2. ' D' → logprob: -6.37670373916626
    3. 'N' → logprob: -14.251703262329102
    4. '   ' → logprob: -14.376703262329102
    5. ' ' → logprob: -16.1267032623291
    6. '	D' → logprob: -17.0017032623291
    7. '(D' → logprob: -17.2517032623291
    8. '       ' → logprob: -17.3767032623291
    9. '
' → logprob: -18.1267032623291
    10. '```' → logprob: -18.1267032623291

Token 225: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011405006051063538
    2. '):' → logprob: -4.511404991149902
    3. '+' → logprob: -8.011404991149902
    4. ' ):
' → logprob: -12.136404991149902
    5. '):
' → logprob: -12.261404991149902
    6. ':
' → logprob: -12.636404991149902
    7. '   ' → logprob: -12.761404991149902
    8. ':' → logprob: -12.886404991149902
    9. ' +' → logprob: -12.886404991149902
    10. '):

' → logprob: -14.136404991149902

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0366462841629982
    2. ' for' → logprob: -3.4116463661193848
    3. 'for' → logprob: -6.411646366119385
    4. ' if' → logprob: -7.036646366119385
    5. ',' → logprob: -9.036645889282227
    6. '	' → logprob: -9.411645889282227
    7. '<|end|>' → logprob: -9.536645889282227
    8. 'if' → logprob: -9.911645889282227
    9. '[' → logprob: -10.536645889282227
    10. '	for' → logprob: -10.661645889282227

Token 227: ' z' (ID: 579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07460270076990128
    2. ' for' → logprob: -2.8246026039123535
    3. '           ' → logprob: -4.6996026039123535
    4. '   ' → logprob: -6.3246026039123535
    5. 'if' → logprob: -7.6996026039123535
    6. ' ' → logprob: -7.9496026039123535
    7. 'mask' → logprob: -8.199603080749512
    8. '       ' → logprob: -8.574603080749512
    9. 'k' → logprob: -9.949603080749512
    10. 'm' → logprob: -10.699603080749512

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2540071904659271
    2. '=' → logprob: -1.5040072202682495
    3. 'for' → logprob: -6.879007339477539
    4. 'f' → logprob: -8.129007339477539
    5. '   ' → logprob: -8.504007339477539
    6. ' in' → logprob: -9.254007339477539
    7. ' for' → logprob: -9.879007339477539
    8. 'w' → logprob: -10.004007339477539
    9. 'j' → logprob: -10.129007339477539
    10. 'W' → logprob: -10.129007339477539

Token 229: ' ii' (ID: 28354)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6760571002960205
    2. 'f' → logprob: -1.4260571002960205
    3. 'W' → logprob: -3.0510571002960205
    4. '(i' → logprob: -3.0510571002960205
    5. '(' → logprob: -3.1760571002960205
    6. '((' → logprob: -3.4260571002960205
    7. '(f' → logprob: -3.5510571002960205
    8. ' (' → logprob: -4.676056861877441
    9. 'K' → logprob: -4.801056861877441
    10. '(W' → logprob: -4.801056861877441

Token 230: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5064647793769836
    2. '*' → logprob: -1.5064647197723389
    3. '-' → logprob: -2.006464719772339
    4. ' *' → logprob: -3.756464719772339
    5. '-W' → logprob: -4.256464958190918
    6. '
' → logprob: -6.881464958190918
    7. 'W' → logprob: -7.381464958190918
    8. '+' → logprob: -7.881464958190918
    9. '*N' → logprob: -8.256464958190918
    10. ' W' → logprob: -8.631464958190918

Token 231: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003554847207851708
    2. ' i' → logprob: -8.37535572052002
    3. '1' → logprob: -9.00035572052002
    4. 'N' → logprob: -14.00035572052002
    5. ' ' → logprob: -15.37535572052002
    6. '   ' → logprob: -15.62535572052002
    7. '<|end|>' → logprob: -16.500354766845703
    8. '  ' → logprob: -17.000354766845703
    9. '	i' → logprob: -17.500354766845703
    10. 'K' → logprob: -17.625354766845703

Token 232: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014159515500068665
    2. '       ' → logprob: -4.389159679412842
    3. '
' → logprob: -7.514159679412842
    4. '+' → logprob: -7.889159679412842
    5. '        
' → logprob: -8.139159202575684
    6. ' 
' → logprob: -9.264159202575684
    7. ' +' → logprob: -9.264159202575684
    8. ' -' → logprob: -9.514159202575684
    9. '-' → logprob: -9.889159202575684
    10. '  
' → logprob: -10.639159202575684

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2554170787334442
    2. '
' → logprob: -1.8804171085357666
    3. ' for' → logprob: -3.2554171085357666
    4. 'for' → logprob: -3.5054171085357666
    5. ' if' → logprob: -6.5054168701171875
    6. 'if' → logprob: -6.8804168701171875
    7. '        
' → logprob: -7.8804168701171875
    8. '           ' → logprob: -8.005416870117188
    9. ' 
' → logprob: -9.130416870117188
    10. '
' → logprob: -9.380416870117188

Token 234: ' mask' (ID: 10910)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0030129998922348022
    2. 'if' → logprob: -7.1280131340026855
    3. 'mask' (adapté à ' mask') → logprob: -7.2530131340026855
    4. 'found' → logprob: -8.003012657165527
    5. 'ok' → logprob: -8.878012657165527
    6. 'valid' → logprob: -9.253012657165527
    7. 'match' → logprob: -9.378012657165527
    8. 'break' → logprob: -9.378012657165527
    9. 'all' → logprob: -9.378012657165527
    10. '       ' → logprob: -9.378012657165527

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858986660838127
    2. '=' → logprob: -3.0485899448394775
    3. ' ' → logprob: -13.423589706420898
    4. ',' → logprob: -15.423589706420898
    5. ')' → logprob: -15.673589706420898
    6. '   ' → logprob: -16.0485897064209
    7. 's' → logprob: -16.0485897064209
    8. ' =(' → logprob: -16.1735897064209
    9. ' <<=' → logprob: -17.0485897064209
    10. '    ' → logprob: -17.0485897064209

Token 236: ' (' (ID: 350)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.08941768854856491
    2. '(' → logprob: -3.0894176959991455
    3. '((' → logprob: -3.9644176959991455
    4. '(z' → logprob: -4.464417457580566
    5. ' (' → logprob: -5.589417457580566
    6. '(K' → logprob: -5.839417457580566
    7. '(f' → logprob: -6.714417457580566
    8. 'W' → logprob: -6.964417457580566
    9. '(w' → logprob: -7.964417457580566
    10. '0' → logprob: -9.339417457580566

Token 237: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40118733048439026
    2. '1' → logprob: -1.1511873006820679
    3. '(W' → logprob: -4.526187419891357
    4. 'W' → logprob: -5.901187419891357
    5. ' (' → logprob: -8.4011869430542
    6. '(K' → logprob: -9.0261869430542
    7. '((' → logprob: -9.4011869430542
    8. '(z' → logprob: -10.0261869430542
    9. '(w' → logprob: -10.1511869430542
    10. '(f' → logprob: -10.1511869430542

Token 238: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.1269369274377823
    2. '<<' → logprob: -2.126936912536621
    3. ')' → logprob: -12.001936912536621
    4. '<<(' → logprob: -14.251936912536621
    5. '<' → logprob: -14.376936912536621
    6. ')<<' → logprob: -14.751936912536621
    7. '   ' → logprob: -15.501936912536621
    8. ' ' → logprob: -15.626936912536621
    9. ' <<=' → logprob: -15.751936912536621
    10. '<<<' → logprob: -15.876936912536621

Token 239: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.017690593376755714
    2. 'K' → logprob: -4.267690658569336
    3. 'N' → logprob: -5.892690658569336
    4. ' z' → logprob: -7.892690658569336
    5. '   ' → logprob: -9.517690658569336
    6. '(z' → logprob: -9.642690658569336
    7. ' ' → logprob: -9.892690658569336
    8. '(N' → logprob: -10.142690658569336
    9. '(K' → logprob: -10.142690658569336
    10. ' K' → logprob: -10.392690658569336

Token 240: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001999642699956894
    2. ')-' → logprob: -8.750200271606445
    3. ' )' → logprob: -10.125200271606445
    4. '-' → logprob: -15.500200271606445
    5. 'z' → logprob: -15.625200271606445
    6. '[' → logprob: -15.750200271606445
    7. ')
' → logprob: -16.125200271606445
    8. '```' → logprob: -16.250200271606445
    9. '1' → logprob: -16.375200271606445
    10. ']' → logprob: -16.625200271606445

Token 241: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47415536642074585
    2. ' -' → logprob: -0.9741553664207458
    3. ')' → logprob: -10.47415542602539
    4. '
' → logprob: -10.97415542602539
    5. ' ' → logprob: -11.47415542602539
    6. ')-' → logprob: -11.97415542602539
    7. '   ' → logprob: -12.97415542602539
    8. '       ' → logprob: -13.34915542602539
    9. '()-' → logprob: -13.47415542602539
    10. '<|end|>' → logprob: -13.84915542602539

Token 242: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026288547087460756
    2. ' ' → logprob: -8.250263214111328
    3. ' z' → logprob: -14.250263214111328
    4. 'z' → logprob: -15.500263214111328
    5. ')' → logprob: -16.000263214111328
    6. '(' → logprob: -16.125263214111328
    7. ' (' → logprob: -16.375263214111328
    8. '0' → logprob: -16.375263214111328
    9. '           ' → logprob: -16.500263214111328
    10. '<|end|>' → logprob: -16.625263214111328

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.250014305114746
    3. '```' → logprob: -15.375014305114746
    4. '(' → logprob: -15.875014305114746
    5. '2' → logprob: -16.12501335144043
    6. 'z' → logprob: -17.06251335144043
    7. '0' → logprob: -17.12501335144043
    8. ')' → logprob: -17.50001335144043
    9. ' (' → logprob: -17.56251335144043
    10. 'mask' → logprob: -18.31251335144043

Token 244: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14999260008335114
    2. '<|end|>' → logprob: -2.0249927043914795
    3. '       ' → logprob: -5.5249924659729
    4. ' 
' → logprob: -6.8999924659729
    5. '  
' → logprob: -7.2749924659729
    6. '        
' → logprob: -7.3999924659729
    7. '<|end|>' → logprob: -7.3999924659729
    8. ',' → logprob: -9.649992942810059
    9. '
' → logprob: -9.774992942810059
    10. ')' → logprob: -10.149992942810059

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33343756198883057
    2. '
' → logprob: -1.3334375619888306
    3. '<|end|>' → logprob: -4.708437442779541
    4. ' for' → logprob: -5.208437442779541
    5. 'for' → logprob: -6.333437442779541
    6. ' if' → logprob: -6.833437442779541
    7. '        
' → logprob: -7.083437442779541
    8. 'if' → logprob: -7.583437442779541
    9. ' 
' → logprob: -8.3334379196167
    10. '   ' → logprob: -8.9584379196167

Token 246: ' shift' (ID: 12847)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02007065899670124
    2. ' for' → logprob: -4.395070552825928
    3. 'if' → logprob: -5.145070552825928
    4. 'j' → logprob: -7.770070552825928
    5. '       ' → logprob: -7.770070552825928
    6. 'k' → logprob: -8.520071029663086
    7. 'm' → logprob: -9.270071029663086
    8. ' if' → logprob: -9.770071029663086
    9. 'ok' → logprob: -9.895071029663086
    10. 'diff' → logprob: -9.895071029663086

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759551525115967
    2. '=' → logprob: -0.8259551525115967
    3. ' ' → logprob: -12.075955390930176
    4. 'd' → logprob: -12.700955390930176
    5. 's' → logprob: -13.450955390930176
    6. '   ' → logprob: -14.075955390930176
    7. '=j' → logprob: -14.200955390930176
    8. '_' → logprob: -14.325955390930176
    9. '    ' → logprob: -14.575955390930176
    10. ')' → logprob: -15.075955390930176

Token 248: ' ii' (ID: 28354)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22847825288772583
    2. 'z' → logprob: -2.103478193283081
    3. ' i' → logprob: -3.478478193283081
    4. 'N' → logprob: -3.728478193283081
    5. 'K' → logprob: -4.97847843170166
    6. ' z' → logprob: -5.35347843170166
    7. 'D' → logprob: -5.35347843170166
    8. 'W' → logprob: -5.47847843170166
    9. ' N' → logprob: -6.72847843170166
    10. '(i' → logprob: -7.10347843170166

Token 249: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0890345647931099
    2. '-' → logprob: -2.4640345573425293
    3. ' ' → logprob: -9.714035034179688
    4. '<|end|>' → logprob: -11.214035034179688
    5. '-i' → logprob: -11.964035034179688
    6. '<|end|>' → logprob: -12.714035034179688
    7. '   ' → logprob: -12.964035034179688
    8. ')' → logprob: -13.339035034179688
    9. '[' → logprob: -13.589035034179688
    10. ',' → logprob: -13.964035034179688

Token 250: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.04387636110186577
    2. ' W' → logprob: -3.1688764095306396
    3. 'N' → logprob: -8.043876647949219
    4. 'K' → logprob: -8.293876647949219
    5. ' ' → logprob: -9.418876647949219
    6. '(W' → logprob: -9.793876647949219
    7. ' (' → logprob: -10.168876647949219
    8. 'D' → logprob: -10.418876647949219
    9. ' N' → logprob: -10.918876647949219
    10. 'z' → logprob: -10.918876647949219

Token 251: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5811632871627808
    2. '<|end|>' → logprob: -1.7061632871627808
    3. '
' → logprob: -1.9561632871627808
    4. '       ' → logprob: -2.9561634063720703
    5. '+' → logprob: -3.5811634063720703
    6. ' for' → logprob: -3.9561634063720703
    7. 'for' → logprob: -4.95616340637207
    8. ',' → logprob: -5.58116340637207
    9. '<|end|>' → logprob: -6.20616340637207
    10. ' ' → logprob: -6.83116340637207

Token 252: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9868450164794922
    2. '<|end|>' → logprob: -1.1118450164794922
    3. '       ' → logprob: -2.236845016479492
    4. '
' → logprob: -2.736845016479492
    5. 'for' → logprob: -2.861845016479492
    6. '+' → logprob: -3.236845016479492
    7. ' +' → logprob: -5.111845016479492
    8. ' ' → logprob: -5.486845016479492
    9. ' 
' → logprob: -5.486845016479492
    10. '[' → logprob: -5.486845016479492

Token 253: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007362506585195661
    2. 'j' → logprob: -7.875736236572266
    3. 'mask' → logprob: -9.000736236572266
    4. ' for' → logprob: -9.750736236572266
    5. 'val' → logprob: -10.625736236572266
    6. '       ' → logprob: -10.750736236572266
    7. 'm' → logprob: -10.875736236572266
    8. 'found' → logprob: -11.375736236572266
    9. 'shift' → logprob: -11.625736236572266
    10. 'if' → logprob: -11.875736236572266

Token 254: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3304234445095062
    2. ' j' → logprob: -1.3304234743118286
    3. 'k' → logprob: -4.830423355102539
    4. ' k' → logprob: -5.955423355102539
    5. 'x' → logprob: -6.205423355102539
    6. ' x' → logprob: -6.580423355102539
    7. 'm' → logprob: -7.455423355102539
    8. '   ' → logprob: -8.205423355102539
    9. ' y' → logprob: -8.205423355102539
    10. ' s' → logprob: -8.205423355102539

Token 255: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005257714539766312
    2. 'in' → logprob: -5.255257606506348
    3. ' =' → logprob: -12.380257606506348
    4. ' ' → logprob: -12.505257606506348
    5. '=' → logprob: -12.630257606506348
    6. ')' → logprob: -13.005257606506348
    7. ',' → logprob: -13.130257606506348
    8. '<|end|>' → logprob: -13.755257606506348
    9. '+' → logprob: -14.317757606506348
    10. 'range' → logprob: -14.692757606506348

Token 256: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2813136875629425
    2. ' range' → logprob: -1.4063136577606201
    3. '(range' → logprob: -9.1563138961792
    4. ' in' → logprob: -10.9063138961792
    5. 'shift' → logprob: -11.1563138961792
    6. '(' → logprob: -12.0313138961792
    7. ' ' → logprob: -12.1563138961792
    8. 'in' → logprob: -12.4063138961792
    9. ' shift' → logprob: -13.0313138961792
    10. ' (' → logprob: -13.4063138961792

Token 257: '(' (ID: 7)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.47306767106056213
    2. '(z' → logprob: -1.4730676412582397
    3. '(' → logprob: -2.3480677604675293
    4. '(D' → logprob: -3.3480677604675293
    5. '(K' → logprob: -4.848067760467529
    6. '((' → logprob: -5.848067760467529
    7. '(i' → logprob: -6.098067760467529
    8. '(mask' → logprob: -6.723067760467529
    9. ' (' → logprob: -7.348067760467529
    10. '(w' → logprob: -7.598067760467529

Token 258: '1' (ID: 16)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.25982338190078735
    2. '1' → logprob: -1.6348233222961426
    3. '(' → logprob: -3.7598233222961426
    4. 'shift' → logprob: -5.884823322296143
    5. 'z' → logprob: -6.009823322296143
    6. 'K' → logprob: -6.634823322296143
    7. ' ' → logprob: -7.009823322296143
    8. ' W' → logprob: -7.009823322296143
    9. '(W' → logprob: -7.134823322296143
    10. 'mask' → logprob: -7.759823322296143

Token 259: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.31491321325302124
    2. '<<' → logprob: -1.314913272857666
    3. ',' → logprob: -6.564913272857666
    4. '<<(' → logprob: -9.814912796020508
    5. ' *' → logprob: -10.189912796020508
    6. ' <<=' → logprob: -10.314912796020508
    7. ')<<' → logprob: -10.939912796020508
    8. ' ,' → logprob: -11.064912796020508
    9. ')' → logprob: -11.189912796020508
    10. '*' → logprob: -11.439912796020508

Token 260: ' ii' (ID: 28354)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.005611981265246868
    2. '(z' → logprob: -6.755611896514893
    3. 'N' → logprob: -6.880611896514893
    4. '(i' → logprob: -7.005611896514893
    5. '(N' → logprob: -7.005611896514893
    6. 'K' → logprob: -7.505611896514893
    7. 'i' → logprob: -7.880611896514893
    8. ' z' → logprob: -8.25561237335205
    9. '(' → logprob: -8.88061237335205
    10. ' (' → logprob: -9.13061237335205

Token 261: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38943174481391907
    2. '):' → logprob: -1.1394317150115967
    3. '+' → logprob: -6.514431953430176
    4. '):
' → logprob: -8.014431953430176
    5. ' ):
' → logprob: -8.514431953430176
    6. ' ):' → logprob: -8.889431953430176
    7. '       ' → logprob: -9.139431953430176
    8. '):

' → logprob: -9.639431953430176
    9. ':' → logprob: -9.764431953430176
    10. ')' → logprob: -10.264431953430176

Token 262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17233827710151672
    2. ' if' → logprob: -2.2973382472991943
    3. '<|end|>' → logprob: -3.6723382472991943
    4. ' ' → logprob: -4.922338485717773
    5. ':' → logprob: -4.922338485717773
    6. ':
' → logprob: -5.047338485717773
    7. ' 
' → logprob: -6.672338485717773
    8. '            ' → logprob: -6.922338485717773
    9. 'if' → logprob: -6.922338485717773
    10. '```' → logprob: -7.172338485717773

Token 263: ' dj' (ID: 43267)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09803494811058044
    2. 'if' → logprob: -2.4730348587036133
    3. '               ' → logprob: -5.348034858703613
    4. '           ' → logprob: -5.723034858703613
    5. 'k' → logprob: -8.598034858703613
    6. ' k' → logprob: -8.848034858703613
    7. 'v' → logprob: -9.223034858703613
    8. '
' → logprob: -9.723034858703613
    9. 'val' → logprob: -9.723034858703613
    10. ' next' → logprob: -9.848034858703613

Token 264: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5603344440460205
    2. '=' → logprob: -1.1853344440460205
    3. '[' → logprob: -2.1853344440460205
    4. ' ' → logprob: -5.810334205627441
    5. '+' → logprob: -6.435334205627441
    6. ']' → logprob: -6.560334205627441
    7. 'shift' → logprob: -6.810334205627441
    8. ' +=' → logprob: -7.060334205627441
    9. ' shift' → logprob: -7.060334205627441
    10. ' +' → logprob: -7.685334205627441

Token 265: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.16035085916519165
    2. 'd' → logprob: -1.9103507995605469
    3. ' j' → logprob: -10.535350799560547
    4. ' f' → logprob: -10.785350799560547
    5. 'f' → logprob: -11.035350799560547
    6. 'j' → logprob: -11.160350799560547
    7. '           ' → logprob: -11.285350799560547
    8. ' ' → logprob: -11.535350799560547
    9. '            ' → logprob: -12.410350799560547
    10. '	d' → logprob: -12.785350799560547

Token 266: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01751127280294895
    2. '[j' → logprob: -4.267511367797852
    3. 'shift' → logprob: -5.767511367797852
    4. ' [' → logprob: -9.392511367797852
    5. 'j' → logprob: -10.392511367797852
    6. ' shift' → logprob: -10.642511367797852
    7. '[
' → logprob: -11.017511367797852
    8. '.shift' → logprob: -11.142511367797852
    9. '[s' → logprob: -12.142511367797852
    10. '+' → logprob: -12.642511367797852

Token 267: 'shift' (ID: 27472)
  Prédit: 'shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.4903625249862671
    2. 'j' → logprob: -1.490362524986267
    3. 'i' → logprob: -2.3653626441955566
    4. ' shift' → logprob: -3.6153626441955566
    5. ' j' → logprob: -3.7403626441955566
    6. ' i' → logprob: -4.490362644195557
    7. 'ii' → logprob: -5.740362644195557
    8. ' ii' → logprob: -7.615362644195557
    9. '(' → logprob: -7.740362644195557
    10. 'jj' → logprob: -7.990362644195557

Token 268: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11387474089860916
    2. '+' → logprob: -2.238874673843384
    3. '+j' → logprob: -6.863874912261963
    4. ' ' → logprob: -12.863874435424805
    5. ' +
' → logprob: -13.863874435424805
    6. ' ' → logprob: -14.863874435424805
    7. ' +
' → logprob: -14.988874435424805
    8. '+
' → logprob: -14.988874435424805
    9. '＋' → logprob: -15.113874435424805
    10. '[j' → logprob: -15.238874435424805

Token 269: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.021448448300361633
    2. ' j' → logprob: -4.146448612213135
    3. '(j' → logprob: -5.646448612213135
    4. '((' → logprob: -7.146448612213135
    5. ' (' → logprob: -7.271448612213135
    6. '(' → logprob: -8.646448135375977
    7. ' ((' → logprob: -9.771448135375977
    8. '           ' → logprob: -10.521448135375977
    9. ' ' → logprob: -10.646448135375977
    10. '   ' → logprob: -10.896448135375977

Token 270: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05897042527794838
    2. ']
' → logprob: -2.9339704513549805
    3. ' ]' → logprob: -5.9339704513549805
    4. ' ]
' → logprob: -7.0589704513549805
    5. ']
' → logprob: -8.05897045135498
    6. ' ^' → logprob: -8.93397045135498
    7. ']==' → logprob: -10.43397045135498
    8. '           ' → logprob: -10.80897045135498
    9. ']

' → logprob: -11.18397045135498
    10. ']>' → logprob: -11.43397045135498

Token 271: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016689805313944817
    2. ' if' → logprob: -4.516689777374268
    3. '<|end|>' → logprob: -6.016689777374268
    4. '            ' → logprob: -7.016689777374268
    5. '```' → logprob: -8.016690254211426
    6. ' and' → logprob: -8.016690254211426
    7. '            
' → logprob: -8.141690254211426
    8. '          ' → logprob: -8.516690254211426
    9. ',' → logprob: -8.641690254211426
    10. ' 
' → logprob: -8.891690254211426

Token 272: ' d' (ID: 272)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.173061341047287
    2. ' fj' → logprob: -2.7980613708496094
    3. ' f' → logprob: -3.1730613708496094
    4. '           ' → logprob: -3.5480613708496094
    5. 'if' → logprob: -3.7980613708496094
    6. 'fj' → logprob: -6.548061370849609
    7. ' fk' → logprob: -6.798061370849609
    8. ' for' → logprob: -7.298061370849609
    9. 'f' → logprob: -7.423061370849609
    10. '+' → logprob: -8.67306137084961

Token 273: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011944165453314781
    2. ' [' → logprob: -4.76194429397583
    3. ' =' → logprob: -6.38694429397583
    4. '[i' → logprob: -7.51194429397583
    5. ' ' → logprob: -7.76194429397583
    6. '=' → logprob: -8.386943817138672
    7. '[(' → logprob: -9.261943817138672
    8. '[
' → logprob: -9.386943817138672
    9. '   ' → logprob: -9.886943817138672
    10. ' +=' → logprob: -10.011943817138672

Token 274: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06197306513786316
    2. ' *' → logprob: -2.8119730949401855
    3. '*w' → logprob: -13.436972618103027
    4. 'W' → logprob: -13.811972618103027
    5. ']' → logprob: -14.686972618103027
    6. ' ' → logprob: -14.811972618103027
    7. '*f' → logprob: -15.061972618103027
    8. '*(' → logprob: -15.561972618103027
    9. '*K' → logprob: -15.561972618103027
    10. '*N' → logprob: -15.686972618103027

Token 275: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.01016695611178875
    2. 'i' → logprob: -5.510167121887207
    3. 'j' → logprob: -5.760167121887207
    4. '(' → logprob: -6.885167121887207
    5. ' W' → logprob: -7.385167121887207
    6. 'shift' → logprob: -7.510167121887207
    7. '(i' → logprob: -8.260167121887207
    8. '(W' → logprob: -9.010167121887207
    9. ' (' → logprob: -9.385167121887207
    10. '```' → logprob: -9.760167121887207

Token 276: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25197911262512207
    2. '+' → logprob: -1.501979112625122
    3. '+j' → logprob: -10.126978874206543
    4. ' +
' → logprob: -12.626978874206543
    5. ' ' → logprob: -12.876978874206543
    6. '[' → logprob: -13.626978874206543
    7. '+
' → logprob: -14.626978874206543
    8. ' +
' → logprob: -14.876978874206543
    9. ']' → logprob: -15.126978874206543
    10. ' +

' → logprob: -15.501978874206543

Token 277: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.7120487689971924
    2. 'j' → logprob: -1.2120487689971924
    3. ' (' → logprob: -1.8370487689971924
    4. ' j' → logprob: -3.3370487689971924
    5. '((' → logprob: -4.337048530578613
    6. ' ((' → logprob: -6.212048530578613
    7. '(' → logprob: -6.962048530578613
    8. '           ' → logprob: -8.462048530578613
    9. '   ' → logprob: -8.962048530578613
    10. '(i' → logprob: -9.212048530578613

Token 278: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.09180183708667755
    2. '(j' → logprob: -2.716801881790161
    3. ' j' → logprob: -4.716801643371582
    4. '((' → logprob: -4.716801643371582
    5. ' (' → logprob: -6.091801643371582
    6. '   ' → logprob: -7.966801643371582
    7. ' ((' → logprob: -8.216801643371582
    8. ' ' → logprob: -8.341801643371582
    9. '(' → logprob: -9.216801643371582
    10. '           ' → logprob: -9.466801643371582

Token 279: ' >>' (ID: 6832)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -1.016111135482788
    2. ' ^' → logprob: -1.016111135482788
    3. '|' → logprob: -1.766111135482788
    4. '>>' → logprob: -2.766111135482788
    5. '&' → logprob: -3.516111135482788
    6. ' |' → logprob: -5.266111373901367
    7. ']' → logprob: -6.016111373901367
    8. ' &' → logprob: -6.766111373901367
    9. '^(' → logprob: -6.891111373901367
    10. ' ' → logprob: -6.891111373901367

Token 280: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.003341452218592167
    2. '(z' → logprob: -6.0033416748046875
    3. ' z' → logprob: -7.5033416748046875
    4. 'mask' → logprob: -8.878341674804688
    5. '(' → logprob: -9.878341674804688
    6. '(i' → logprob: -10.628341674804688
    7. ' (' → logprob: -10.753341674804688
    8. '           ' → logprob: -10.878341674804688
    9. '(mask' → logprob: -11.128341674804688
    10. '   ' → logprob: -11.503341674804688

Token 281: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.021960783749818802
    2. ')' → logprob: -3.896960735321045
    3. ' )' → logprob: -7.021960735321045
    4. ']' → logprob: -7.896960735321045
    5. '|' → logprob: -9.521961212158203
    6. ')])' → logprob: -10.771961212158203
    7. ' ' → logprob: -12.021961212158203
    8. ' ' → logprob: -12.021961212158203
    9. '   ' → logprob: -12.271961212158203
    10. '       ' → logprob: -12.396961212158203

Token 282: ' +=' (ID: 2757)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.233292818069458
    2. ' |=' → logprob: -1.733292818069458
    3. ' ^=' → logprob: -3.858292818069458
    4. '^' → logprob: -5.358292579650879
    5. '=' → logprob: -5.983292579650879
    6. '&' → logprob: -6.608292579650879
    7. '+=' → logprob: -7.358292579650879
    8. ' &=' → logprob: -7.483292579650879
    9. ' =' → logprob: -8.108292579650879
    10. ' ' → logprob: -9.733292579650879

Token 283: ' dj' (ID: 43267)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.02805871143937111
    2. ' dj' → logprob: -4.1530585289001465
    3. 'd' → logprob: -4.6530585289001465
    4. '           ' → logprob: -6.7780585289001465
    5. '   ' → logprob: -8.028059005737305
    6. ' ' → logprob: -8.903059005737305
    7. '                   ' → logprob: -9.403059005737305
    8. '               ' → logprob: -9.528059005737305
    9. ' d' → logprob: -9.653059005737305
    10. '                       ' → logprob: -9.653059005737305

Token 284: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' r' (ID: 428)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30619603395462036
    2. 'if' → logprob: -2.3061959743499756
    3. ' d' → logprob: -3.1811959743499756
    4. ' f' → logprob: -3.4311959743499756
    5. 'd' → logprob: -3.6811959743499756
    6. ' ' → logprob: -3.6811959743499756
    7. '<|end|>' → logprob: -4.431196212768555
    8. ' found' → logprob: -5.056196212768555
    9. 'f' → logprob: -5.306196212768555
    10. '            ' → logprob: -5.681196212768555

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10709251463413239
    2. '=' → logprob: -2.6070926189422607
    3. ' +=' → logprob: -4.232092380523682
    4. ' ' → logprob: -5.232092380523682
    5. '[i' → logprob: -5.357092380523682
    6. '[' → logprob: -6.607092380523682
    7. '+=' → logprob: -7.107092380523682
    8. '+' → logprob: -8.35709285736084
    9. '   ' → logprob: -8.85709285736084
    10. ',' → logprob: -9.35709285736084

Token 288: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.11331460624933243
    2. ' f' → logprob: -2.238314628601074
    3. 'd' → logprob: -9.113314628601074
    4. '(f' → logprob: -9.363314628601074
    5. ' ' → logprob: -9.738314628601074
    6. ' (' → logprob: -9.988314628601074
    7. ' d' → logprob: -10.488314628601074
    8. '0' → logprob: -10.613314628601074
    9. 'j' → logprob: -10.613314628601074
    10. '   ' → logprob: -11.113314628601074

Token 289: '[z' (ID: 105082)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2631661891937256
    2. '[ii' → logprob: -1.5131661891937256
    3. '[' → logprob: -4.888166427612305
    4. '[z' → logprob: -6.013166427612305
    5. '[j' → logprob: -7.013166427612305
    6. '[(' → logprob: -8.263166427612305
    7. 'shift' → logprob: -12.263166427612305
    8. '[idx' → logprob: -12.388166427612305
    9. '(ii' → logprob: -12.638166427612305
    10. 'ii' → logprob: -13.013166427612305

Token 290: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0032037352211773396
    2. ' *' → logprob: -5.753203868865967
    3. '*(' → logprob: -12.003203392028809
    4. '[' → logprob: -12.378203392028809
    5. '*[' → logprob: -12.753203392028809
    6. '*w' → logprob: -12.753203392028809
    7. '*f' → logprob: -12.878203392028809
    8. '<|end|>' → logprob: -13.253203392028809
    9. '+' → logprob: -13.378203392028809
    10. '*z' → logprob: -14.128203392028809

Token 291: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.016618048772215843
    2. '+' → logprob: -4.141618251800537
    3. ' +' → logprob: -8.391617774963379
    4. 'mask' → logprob: -9.016617774963379
    5. '+j' → logprob: -9.016617774963379
    6. ' W' → logprob: -10.016617774963379
    7. 'z' → logprob: -10.391617774963379
    8. 'shift' → logprob: -11.266617774963379
    9. '+w' → logprob: -12.391617774963379
    10. ' ' → logprob: -12.391617774963379

Token 292: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.055167056620121
    2. ' +' → logprob: -2.9301669597625732
    3. '+j' → logprob: -8.805167198181152
    4. '+(' → logprob: -9.430167198181152
    5. '+
' → logprob: -10.305167198181152
    6. '+[' → logprob: -11.805167198181152
    7. '[' → logprob: -12.680167198181152
    8. '+r' → logprob: -13.055167198181152
    9. '+

' → logprob: -13.430167198181152
    10. ' +(' → logprob: -13.430167198181152

Token 293: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.3129231333732605
    2. '((' → logprob: -1.8129231929779053
    3. '(mask' → logprob: -2.8129231929779053
    4. 'mask' → logprob: -3.4379231929779053
    5. 'j' → logprob: -5.312922954559326
    6. ' (' → logprob: -5.562922954559326
    7. '(d' → logprob: -6.437922954559326
    8. '(' → logprob: -6.937922954559326
    9. ' ((' → logprob: -7.312922954559326
    10. ' mask' → logprob: -8.187923431396484

Token 294: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.27984198927879333
    2. '(j' → logprob: -1.7798420190811157
    3. 'mask' → logprob: -3.529841899871826
    4. '((' → logprob: -4.154841899871826
    5. '(mask' → logprob: -4.279841899871826
    6. ' j' → logprob: -4.529841899871826
    7. ' (' → logprob: -5.529841899871826
    8. ' mask' → logprob: -7.404841899871826
    9. '(' → logprob: -7.654841899871826
    10. ' ((' → logprob: -8.154842376708984

Token 295: ' &' (ID: 827)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7049466967582703
    2. '&' → logprob: -0.8299466967582703
    3. ' +' → logprob: -3.204946756362915
    4. ' &' → logprob: -3.829946756362915
    5. '>>' → logprob: -5.079946517944336
    6. ')' → logprob: -8.329946517944336
    7. ')]' → logprob: -8.579946517944336
    8. '|' → logprob: -8.704946517944336
    9. ' >>' → logprob: -9.204946517944336
    10. ']' → logprob: -9.204946517944336

Token 296: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0017033906187862158
    2. ' mask' → logprob: -6.376703262329102
    3. '(mask' → logprob: -14.501703262329102
    4. ' ' → logprob: -14.876703262329102
    5. '	mask' → logprob: -15.626703262329102
    6. '   ' → logprob: -16.6267032623291
    7. 'm' → logprob: -17.8767032623291
    8. '  ' → logprob: -17.8767032623291
    9. '
' → logprob: -18.7517032623291
    10. 'masked' → logprob: -19.0017032623291

Token 297: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07704997807741165
    2. ']' → logprob: -2.702049970626831
    3. ')]
' → logprob: -5.32705020904541
    4. ']
' → logprob: -6.82705020904541
    5. '])' → logprob: -7.57705020904541
    6. ')' → logprob: -8.57705020904541
    7. ' ]' → logprob: -8.70205020904541
    8. ']]' → logprob: -9.57705020904541
    9. ')])' → logprob: -9.70205020904541
    10. ']+' → logprob: -10.32705020904541

Token 298: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04011306166648865
    2. ' if' → logprob: -3.4151129722595215
    3. '<|end|>' → logprob: -5.9151129722595215
    4. ')' → logprob: -7.0401129722595215
    5. '
' → logprob: -7.6651129722595215
    6. 'if' → logprob: -7.9151129722595215
    7. '+' → logprob: -8.16511344909668
    8. ',' → logprob: -8.16511344909668
    9. '```' → logprob: -8.16511344909668
    10. ' +' → logprob: -8.41511344909668

Token 299: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09270332753658295
    2. ' if' → logprob: -2.717703342437744
    3. 'f' → logprob: -3.967703342437744
    4. '           ' → logprob: -6.467703342437744
    5. ' f' → logprob: -7.217703342437744
    6. 'for' → logprob: -8.342702865600586
    7. 'found' → logprob: -8.467702865600586
    8. 'd' → logprob: -8.592702865600586
    9. 'val' → logprob: -9.342702865600586
    10. '+' → logprob: -9.342702865600586

Token 300: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0860966444015503
    2. ' d' → logprob: -1.4610966444015503
    3. 'd' → logprob: -1.5860966444015503
    4. ' r' → logprob: -1.8360966444015503
    5. 'f' → logprob: -3.96109676361084
    6. ' f' → logprob: -4.08609676361084
    7. ' dj' → logprob: -4.33609676361084
    8. '(d' → logprob: -5.58609676361084
    9. 'dj' → logprob: -5.58609676361084
    10. ' not' → logprob: -5.96109676361084

Token 301: ' !=' (ID: 1666)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.37762486934661865
    2. ' >' → logprob: -1.6276248693466187
    3. ' ==' → logprob: -2.627624988555908
    4. ' <=' → logprob: -4.377624988555908
    5. '>=' → logprob: -4.377624988555908
    6. '>' → logprob: -4.877624988555908
    7. '==' → logprob: -5.127624988555908
    8. ' ' → logprob: -5.502624988555908
    9. ' <' → logprob: -6.002624988555908
    10. ' *' → logprob: -8.62762451171875

Token 302: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6238760948181152
    2. 'z' → logprob: -1.2488760948181152
    3. ' ' → logprob: -2.6238760948181152
    4. ' z' → logprob: -2.8738760948181152
    5. 'K' → logprob: -3.3738760948181152
    6. ' K' → logprob: -4.873876094818115
    7. 'r' → logprob: -6.248876094818115
    8. 'f' → logprob: -6.748876094818115
    9. 't' → logprob: -7.498876094818115
    10. ' f' → logprob: -7.998876094818115

Token 303: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8182441592216492
    2. ' and' → logprob: -0.8182441592216492
    3. ':
' → logprob: -2.193244218826294
    4. '           ' → logprob: -5.693243980407715
    5. 'and' → logprob: -6.943243980407715
    6. '               ' → logprob: -7.818243980407715
    7. '                           ' → logprob: -8.318243980407715
    8. '<|end|>' → logprob: -8.443243980407715
    9. ' or' → logprob: -8.568243980407715
    10. '                       ' → logprob: -8.818243980407715

Token 304: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013508060947060585
    2. ' continue' → logprob: -5.263507843017578
    3. '                               ' → logprob: -5.638507843017578
    4. ' found' → logprob: -6.638507843017578
    5. ' break' → logprob: -6.763507843017578
    6. '           ' → logprob: -7.888507843017578
    7. ' if' → logprob: -8.013507843017578
    8. '                           ' → logprob: -8.513507843017578
    9. '                       ' → logprob: -8.513507843017578
    10. 'continue' → logprob: -8.513507843017578

Token 305: ' idx' (ID: 14016)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.6174033880233765
    2. ' found' → logprob: -0.9924033880233765
    3. ' break' → logprob: -3.617403507232666
    4. ' continue' → logprob: -3.992403507232666
    5. 'continue' → logprob: -3.992403507232666
    6. 'break' → logprob: -4.742403507232666
    7. ' if' → logprob: -5.492403507232666
    8. 'if' → logprob: -5.492403507232666
    9. ' d' → logprob: -6.617403507232666
    10. '                   ' → logprob: -6.617403507232666

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09532544016838074
    2. '=' → logprob: -2.595325469970703
    3. ' ' → logprob: -5.720325469970703
    4. '+' → logprob: -5.720325469970703
    5. ' +=' → logprob: -5.845325469970703
    6. ' +' → logprob: -6.220325469970703
    7. '[' → logprob: -7.220325469970703
    8. '<|end|>' → logprob: -7.970325469970703
    9. '[i' → logprob: -8.095325469970703
    10. '               ' → logprob: -8.345325469970703

Token 307: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8382689952850342
    2. 'ii' → logprob: -1.0882689952850342
    3. 'shift' → logprob: -2.713268995285034
    4. '(i' → logprob: -2.713268995285034
    5. ' i' → logprob: -3.588268995285034
    6. '(' → logprob: -4.088269233703613
    7. 'j' → logprob: -4.213269233703613
    8. '(ii' → logprob: -4.463269233703613
    9. ' ii' → logprob: -4.588269233703613
    10. ' (' → logprob: -5.463269233703613

Token 308: 'ii' (ID: 3573)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14144524931907654
    2. 'ii' → logprob: -2.6414451599121094
    3. 'j' → logprob: -3.7664451599121094
    4. '(i' → logprob: -4.016445159912109
    5. 'shift' → logprob: -4.641445159912109
    6. '(' → logprob: -6.016445159912109
    7. ' i' → logprob: -6.016445159912109
    8. 'z' → logprob: -6.391445159912109
    9. '(ii' → logprob: -6.891445159912109
    10. '(j' → logprob: -7.516445159912109

Token 309: ' -' (ID: 533)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3365280330181122
    2. ' -' → logprob: -1.4615280628204346
    3. ' *' → logprob: -3.2115280628204346
    4. '-' → logprob: -4.7115278244018555
    5. '-W' → logprob: -6.2115278244018555
    6. ')' → logprob: -7.5865278244018555
    7. '<<' → logprob: -7.9615278244018555
    8. ' >>' → logprob: -8.086527824401855
    9. ' <<' → logprob: -8.086527824401855
    10. ' +' → logprob: -8.211527824401855

Token 310: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.680820643901825
    2. 'z' → logprob: -0.805820643901825
    3. 'i' → logprob: -4.055820465087891
    4. ' z' → logprob: -4.180820465087891
    5. ' r' → logprob: -4.930820465087891
    6. 'j' → logprob: -6.180820465087891
    7. ' i' → logprob: -6.555820465087891
    8. '1' → logprob: -6.680820465087891
    9. ' (' → logprob: -7.180820465087891
    10. '(' → logprob: -7.555820465087891

Token 311: ')*' (ID: 11043)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9894958734512329
    2. '*' → logprob: -1.239495873451233
    3. ')' → logprob: -1.614495873451233
    4. '-' → logprob: -2.2394957542419434
    5. ')<<' → logprob: -4.364495754241943
    6. ' *' → logprob: -4.739495754241943
    7. ')*' → logprob: -5.364495754241943
    8. '<<' → logprob: -6.114495754241943
    9. ')>>' → logprob: -6.739495754241943
    10. '+' → logprob: -7.489495754241943

Token 312: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.008709117770195007
    2. ' W' → logprob: -4.758708953857422
    3. 'K' → logprob: -10.008708953857422
    4. '1' → logprob: -11.508708953857422
    5. 'shift' → logprob: -11.633708953857422
    6. '(' → logprob: -11.883708953857422
    7. '2' → logprob: -12.133708953857422
    8. 'N' → logprob: -12.633708953857422
    9. ' ' → logprob: -13.008708953857422
    10. ' shift' → logprob: -13.133708953857422

Token 313: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2094758301973343
    2. ' +' → logprob: -1.7094758749008179
    3. '+j' → logprob: -4.834475994110107
    4. '+(' → logprob: -10.20947551727295
    5. '+r' → logprob: -10.95947551727295
    6. '+
' → logprob: -12.20947551727295
    7. '+d' → logprob: -12.33447551727295
    8. '+i' → logprob: -13.20947551727295
    9. '+k' → logprob: -13.58447551727295
    10. '```' → logprob: -13.95947551727295

Token 314: ' (((' (ID: 25584)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.437468558549881
    2. '((' → logprob: -1.6874685287475586
    3. 'j' → logprob: -2.1874685287475586
    4. ' (' → logprob: -3.1874685287475586
    5. ' ((' → logprob: -4.937468528747559
    6. '(i' → logprob: -5.437468528747559
    7. ' j' → logprob: -6.062468528747559
    8. '(' → logprob: -7.437468528747559
    9. '(((' → logprob: -7.437468528747559
    10. 'i' → logprob: -8.312468528747559

Token 315: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005426656571216881
    2. ' j' → logprob: -8.125542640686035
    3. 'i' → logprob: -9.125542640686035
    4. 'shift' → logprob: -9.875542640686035
    5. '(j' → logprob: -11.125542640686035
    6. '           ' → logprob: -11.250542640686035
    7. '   ' → logprob: -11.500542640686035
    8. '(' → logprob: -11.750542640686035
    9. ' (' → logprob: -12.125542640686035
    10. '                   ' → logprob: -12.875542640686035

Token 316: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.7149165272712708
    2. '&' → logprob: -0.8399165272712708
    3. ' >>' → logprob: -3.089916467666626
    4. ' &' → logprob: -3.464916467666626
    5. ')' → logprob: -6.464916706085205
    6. ')>>' → logprob: -9.464916229248047
    7. '>>(' → logprob: -9.589916229248047
    8. ' (' → logprob: -9.714916229248047
    9. ' ' → logprob: -9.714916229248047
    10. '&gt' → logprob: -9.964916229248047

Token 317: ' z' (ID: 579)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.26294443011283875
    2. '(z' → logprob: -1.8879444599151611
    3. 'r' → logprob: -2.762944459915161
    4. '(i' → logprob: -5.137944221496582
    5. 'z' → logprob: -5.137944221496582
    6. ' (' → logprob: -6.512944221496582
    7. '((' → logprob: -6.512944221496582
    8. '(' → logprob: -7.262944221496582
    9. '(j' → logprob: -8.137944221496582
    10. '(mask' → logprob: -8.637944221496582

Token 318: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005245379637926817
    2. ' )' → logprob: -5.880245208740234
    3. 'r' → logprob: -7.380245208740234
    4. '))' → logprob: -7.505245208740234
    5. ')+' → logprob: -7.880245208740234
    6. ')>>' → logprob: -8.130245208740234
    7. '>>' → logprob: -9.130245208740234
    8. ')<<' → logprob: -9.630245208740234
    9. '<<' → logprob: -9.755245208740234
    10. ' ' → logprob: -9.755245208740234

Token 319: ' <<' (ID: 2256)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21471871435642242
    2. '<<' → logprob: -2.339718818664551
    3. '&' → logprob: -3.339718818664551
    4. '>>' → logprob: -4.464718818664551
    5. '+' → logprob: -4.839718818664551
    6. ' &' → logprob: -4.839718818664551
    7. '|' → logprob: -4.964718818664551
    8. ')&' → logprob: -5.839718818664551
    9. ' )' → logprob: -5.839718818664551
    10. '(' → logprob: -5.964718818664551

Token 320: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5840457081794739
    2. '(r' → logprob: -0.8340457081794739
    3. '(' → logprob: -5.834045886993408
    4. '(z' → logprob: -6.209045886993408
    5. ' (' → logprob: -6.459045886993408
    6. '(N' → logprob: -8.58404541015625
    7. 'z' → logprob: -8.58404541015625
    8. ' r' → logprob: -8.58404541015625
    9. '((' → logprob: -8.70904541015625
    10. '(j' → logprob: -9.08404541015625

Token 321: 'z' (ID: 89)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0895407497882843
    2. 'r' → logprob: -2.589540719985962
    3. '(z' → logprob: -5.214540958404541
    4. '(i' → logprob: -5.589540958404541
    5. ' (' → logprob: -7.714540958404541
    6. 'z' → logprob: -7.964540958404541
    7. '(' → logprob: -8.214540481567383
    8. '(ii' → logprob: -9.464540481567383
    9. 'i' → logprob: -9.714540481567383
    10. '(max' → logprob: -10.464540481567383

Token 322: ' -' (ID: 533)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0496605709195137
    2. '(r' → logprob: -3.2996606826782227
    3. ')' → logprob: -4.799660682678223
    4. ' (' → logprob: -6.924660682678223
    5. '(z' → logprob: -7.549660682678223
    6. '1' → logprob: -8.049660682678223
    7. ')+' → logprob: -8.174660682678223
    8. 'z' → logprob: -8.674660682678223
    9. ' r' → logprob: -8.924660682678223
    10. ')(' → logprob: -8.924660682678223

Token 323: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10082731395959854
    2. '(r' → logprob: -2.350827217102051
    3. ' (' → logprob: -8.10082721710205
    4. ' r' → logprob: -8.97582721710205
    5. '(' → logprob: -8.97582721710205
    6. '(z' → logprob: -11.47582721710205
    7. '1' → logprob: -11.60082721710205
    8. '   ' → logprob: -12.35082721710205
    9. '
' → logprob: -12.35082721710205
    10. '0' → logprob: -12.72582721710205

Token 324: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004701146390289068
    2. ' )' → logprob: -8.125470161437988
    3. '))' → logprob: -9.500470161437988
    4. ')+' → logprob: -10.000470161437988
    5. '|' → logprob: -11.625470161437988
    6. 'r' → logprob: -11.750470161437988
    7. '   ' → logprob: -11.875470161437988
    8. '        ' → logprob: -12.375470161437988
    9. '       ' → logprob: -12.375470161437988
    10. '           ' → logprob: -12.875470161437988

Token 325: ' |' (ID: 1022)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38799697160720825
    2. '+' → logprob: -1.1379969120025635
    3. ')' → logprob: -7.137997150421143
    4. '|' → logprob: -9.262996673583984
    5. ' |' → logprob: -9.387996673583984
    6. ')+' → logprob: -9.387996673583984
    7. ' ' → logprob: -10.762996673583984
    8. '+
' → logprob: -11.012996673583984
    9. ' +
' → logprob: -11.387996673583984
    10. '+j' → logprob: -12.137996673583984

Token 326: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.23967362940311432
    2. '((' → logprob: -1.7396736145019531
    3. ' (' → logprob: -3.364673614501953
    4. ' ((' → logprob: -5.864673614501953
    5. '(' → logprob: -10.114673614501953
    6. '(((' → logprob: -10.364673614501953
    7. '(mask' → logprob: -11.364673614501953
    8. ' ' → logprob: -11.864673614501953
    9. '(d' → logprob: -12.489673614501953
    10. '           ' → logprob: -12.864673614501953

Token 327: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.08464857190847397
    2. 'j' → logprob: -3.209648609161377
    3. '((' → logprob: -3.334648609161377
    4. ' (' → logprob: -5.459648609161377
    5. 'mask' → logprob: -8.334648132324219
    6. '(mask' → logprob: -8.584648132324219
    7. ' ((' → logprob: -8.959648132324219
    8. '(' → logprob: -9.084648132324219
    9. ' j' → logprob: -9.459648132324219
    10. '(((' → logprob: -9.584648132324219

Token 328: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.2526746392250061
    2. ' &' → logprob: -1.5026745796203613
    3. '&r' → logprob: -8.50267505645752
    4. '&(' → logprob: -9.50267505645752
    5. '>>' → logprob: -9.62767505645752
    6. '&i' → logprob: -9.75267505645752
    7. '(z' → logprob: -9.87767505645752
    8. '(mask' → logprob: -10.00267505645752
    9. ' (' → logprob: -10.25267505645752
    10. '(r' → logprob: -11.00267505645752

Token 329: ' ((' (ID: 3536)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.06361887603998184
    2. '((' → logprob: -3.3136188983917236
    3. 'mask' → logprob: -4.0636186599731445
    4. ' (' → logprob: -5.0636186599731445
    5. ' mask' → logprob: -7.0636186599731445
    6. ' ((' → logprob: -7.1886186599731445
    7. '(m' → logprob: -9.438618659973145
    8. '(' → logprob: -11.188618659973145
    9. ' ' → logprob: -11.438618659973145
    10. '(r' → logprob: -12.188618659973145

Token 330: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05210120230913162
    2. '(mask' → logprob: -3.0521011352539062
    3. 'mask' → logprob: -5.677101135253906
    4. ' (' → logprob: -9.927101135253906
    5. '1' → logprob: -11.677101135253906
    6. '((' → logprob: -11.802101135253906
    7. '   ' → logprob: -12.177101135253906
    8. ' mask' → logprob: -12.177101135253906
    9. '(r' → logprob: -12.677101135253906
    10. '(z' → logprob: -13.177101135253906

Token 331: ' <<' (ID: 2256)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.6845971941947937
    2. '(' → logprob: -0.8095971941947937
    3. '((' → logprob: -3.6845972537994385
    4. ' (' → logprob: -4.184597015380859
    5. 'mask' → logprob: -5.059597015380859
    6. '1' → logprob: -5.934597015380859
    7. ')' → logprob: -7.684597015380859
    8. '<<' → logprob: -8.93459701538086
    9. 'MASK' → logprob: -8.93459701538086
    10. ' mask' → logprob: -8.93459701538086

Token 332: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11269247531890869
    2. '(r' → logprob: -2.487692356109619
    3. 'mask' → logprob: -4.112692356109619
    4. '(mask' → logprob: -5.237692356109619
    5. '((' → logprob: -7.237692356109619
    6. '(z' → logprob: -7.362692356109619
    7. 'z' → logprob: -8.487692832946777
    8. '(' → logprob: -9.112692832946777
    9. ' (' → logprob: -10.112692832946777
    10. ' r' → logprob: -10.737692832946777

Token 333: 'z' (ID: 89)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -8.268254896393046e-05
    2. '(r' → logprob: -9.625082969665527
    3. '(' → logprob: -12.000082969665527
    4. 'z' → logprob: -13.000082969665527
    5. ' r' → logprob: -13.000082969665527
    6. '((' → logprob: -13.500082969665527
    7. '           ' → logprob: -14.125082969665527
    8. '(z' → logprob: -14.125082969665527
    9. ' (' → logprob: -14.500082969665527
    10. 'mask' → logprob: -14.625082969665527

Token 334: ' -' (ID: 533)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.114600834436715e-05
    2. ' r' → logprob: -9.625091552734375
    3. ')' → logprob: -11.750091552734375
    4. 'z' → logprob: -12.250091552734375
    5. '           ' → logprob: -12.375091552734375
    6. '(r' → logprob: -13.000091552734375
    7. '_r' → logprob: -13.250091552734375
    8. ' (' → logprob: -14.000091552734375
    9. '(' → logprob: -14.125091552734375
    10. '               ' → logprob: -14.375091552734375

Token 335: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.173704271830502e-06
    2. ' r' → logprob: -13.25000286102295
    3. '           ' → logprob: -14.87500286102295
    4. '(' → logprob: -15.12500286102295
    5. '(r' → logprob: -15.12500286102295
    6. '```' → logprob: -16.000003814697266
    7. '0' → logprob: -16.875003814697266
    8. '          ' → logprob: -17.000003814697266
    9. '                   ' → logprob: -17.125003814697266
    10. '               ' → logprob: -17.250003814697266

Token 336: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08472798019647598
    2. ')-' → logprob: -3.0847280025482178
    3. 'r' → logprob: -3.4597280025482178
    4. '1' → logprob: -5.709727764129639
    5. '-' → logprob: -8.334728240966797
    6. '0' → logprob: -8.834728240966797
    7. 'z' → logprob: -9.084728240966797
    8. '(' → logprob: -9.959728240966797
    9. '_r' → logprob: -9.959728240966797
    10. '(r' → logprob: -10.834728240966797

Token 337: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8743112087249756
    2. '-' → logprob: -0.9993112087249756
    3. ')' → logprob: -1.8743112087249756
    4. ')-' → logprob: -2.8743112087249756
    5. '1' → logprob: -5.874311447143555
    6. 'r' → logprob: -6.624311447143555
    7. 'mask' → logprob: -8.374311447143555
    8. '```' → logprob: -9.874311447143555
    9. '(' → logprob: -9.999311447143555
    10. '((' → logprob: -10.124311447143555

Token 338: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. 'r' → logprob: -16.75004005432129
    4. '(' → logprob: -17.12504005432129
    5. '0' → logprob: -18.87504005432129
    6. '```' → logprob: -18.87504005432129
    7. '   ' → logprob: -19.37504005432129
    8. '           ' → logprob: -19.75004005432129
    9. '((' → logprob: -19.87504005432129
    10. ')' → logprob: -20.25004005432129

Token 339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.125000953674316
    3. 'r' → logprob: -14.625000953674316
    4. '0' → logprob: -16.625001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '```' → logprob: -19.125001907348633
    7. '(' → logprob: -20.062501907348633
    8. '2' → logprob: -20.125001907348633
    9. '``' → logprob: -20.250001907348633
    10. '3' → logprob: -20.375001907348633

Token 340: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5043370723724365
    2. ')))' → logprob: -1.0043370723724365
    3. '))
' → logprob: -4.004337310791016
    4. ')))
' → logprob: -4.754337310791016
    5. ')' → logprob: -6.754337310791016
    6. '))))' → logprob: -7.254337310791016
    7. ' ))' → logprob: -7.629337310791016
    8. ' ' → logprob: -9.254337310791016
    9. ' ))
' → logprob: -9.379337310791016
    10. '           ' → logprob: -9.379337310791016

Token 341: '               ' (ID: 506)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9895931482315063
    2. '<|end|>' → logprob: -1.7395931482315063
    3. ')' → logprob: -2.489593029022217
    4. ']' → logprob: -2.614593029022217
    5. '+' → logprob: -2.989593029022217
    6. ' +=' → logprob: -3.114593029022217
    7. '][' → logprob: -3.989593029022217
    8. '```' → logprob: -3.989593029022217
    9. '[
' → logprob: -4.114593029022217
    10. '                           ' → logprob: -4.114593029022217

Token 342: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.2843046188354492
    2. 'f' → logprob: -1.6593046188354492
    3. ' d' → logprob: -3.159304618835449
    4. ' f' → logprob: -4.909304618835449
    5. 'if' → logprob: -5.284304618835449
    6. ' if' → logprob: -6.659304618835449
    7. 'found' → logprob: -7.159304618835449
    8. ' found' → logprob: -9.15930461883545
    9. 'for' → logprob: -10.03430461883545
    10. '```' → logprob: -10.78430461883545

Token 343: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.006181775592267513
    2. '[' → logprob: -5.631181716918945
    3. '[i' → logprob: -6.006181716918945
    4. 'idx' → logprob: -10.256181716918945
    5. '=' → logprob: -10.756181716918945
    6. ' =' → logprob: -11.381181716918945
    7. ' idx' → logprob: -11.506181716918945
    8. '[index' → logprob: -12.131181716918945
    9. ' [' → logprob: -12.256181716918945
    10. '[offset' → logprob: -12.506181716918945

Token 344: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.28540366888046265
    2. '+=' → logprob: -1.4104037284851074
    3. '+' → logprob: -5.910403728485107
    4. '=' → logprob: -7.160403728485107
    5. ' +' → logprob: -8.28540325164795
    6. '[' → logprob: -8.78540325164795
    7. ']+=' → logprob: -9.03540325164795
    8. ' =' → logprob: -9.16040325164795
    9. ' -=' → logprob: -10.03540325164795
    10. ')' → logprob: -10.53540325164795

Token 345: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5274324417114258
    2. ' +=' → logprob: -0.9024324417114258
    3. '=' → logprob: -5.777432441711426
    4. ' =' → logprob: -8.402432441711426
    5. ' -=' → logprob: -8.527432441711426
    6. '>' → logprob: -8.652432441711426
    7. '-=' → logprob: -9.027432441711426
    8. '[' → logprob: -9.402432441711426
    9. ']+=' → logprob: -9.527432441711426
    10. '+' → logprob: -9.652432441711426

Token 346: ' dj' (ID: 43267)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.5045081377029419
    2. '1' → logprob: -1.004508137702942
    3. 'd' → logprob: -3.8795080184936523
    4. 'f' → logprob: -5.129508018493652
    5. ' dj' → logprob: -6.504508018493652
    6. ' ' → logprob: -6.879508018493652
    7. 'fj' → logprob: -9.129508018493652
    8. 'r' → logprob: -9.129508018493652
    9. 'j' → logprob: -9.379508018493652
    10. '-' → logprob: -9.629508018493652

Token 347: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 348: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 349: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.47114843130111694
    2. 'j' → logprob: -1.8461484909057617
    3. ' i' → logprob: -2.3461484909057617
    4. 'i' → logprob: -3.0961484909057617
    5. '_' → logprob: -3.5961484909057617
    6. ' k' → logprob: -4.596148490905762
    7. ' _' → logprob: -5.096148490905762
    8. 'k' → logprob: -5.096148490905762
    9. ' x' → logprob: -5.346148490905762
    10. ' ' → logprob: -5.471148490905762

Token 351: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.035050828009843826
    2. 'in' → logprob: -3.410050868988037
    3. ' (' → logprob: -7.910050868988037
    4. '[' → logprob: -8.035050392150879
    5. '(' → logprob: -8.160050392150879
    6. ' ' → logprob: -8.285050392150879
    7. '   ' → logprob: -10.285050392150879
    8. '<|end|>' → logprob: -10.785050392150879
    9. ')' → logprob: -11.035050392150879
    10. ' [' → logprob: -11.410050392150879

Token 352: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.35184136033058167
    2. ' range' → logprob: -1.2268413305282593
    3. '(' → logprob: -6.101841449737549
    4. '(range' → logprob: -7.726841449737549
    5. 'W' → logprob: -8.60184097290039
    6. ' W' → logprob: -8.85184097290039
    7. ' (' → logprob: -8.97684097290039
    8. '(W' → logprob: -9.35184097290039
    9. '1' → logprob: -9.97684097290039
    10. '(D' → logprob: -10.10184097290039

Token 353: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15829448401927948
    2. '(D' → logprob: -2.283294439315796
    3. '(N' → logprob: -4.533294677734375
    4. '(i' → logprob: -4.533294677734375
    5. ' (' → logprob: -4.783294677734375
    6. '(range' → logprob: -5.533294677734375
    7. '(K' → logprob: -5.783294677734375
    8. '(W' → logprob: -6.033294677734375
    9. ' range' → logprob: -6.283294677734375
    10. '1' → logprob: -6.783294677734375

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7911130785942078
    2. 'D' → logprob: -1.6661131381988525
    3. '(' → logprob: -2.0411131381988525
    4. 'W' → logprob: -2.1661131381988525
    5. 'N' → logprob: -3.2911131381988525
    6. 'range' → logprob: -3.4161131381988525
    7. 'K' → logprob: -4.291112899780273
    8. ' range' → logprob: -4.666112899780273
    9. '0' → logprob: -5.291112899780273
    10. ' ' → logprob: -5.791112899780273

Token 355: ' <<' (ID: 2256)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -1.7373968362808228
    2. '<<' → logprob: -1.8623968362808228
    3. 'W' → logprob: -2.237396717071533
    4. '(' → logprob: -2.237396717071533
    5. ' W' → logprob: -2.487396717071533
    6. ' (' → logprob: -2.612396717071533
    7. ' <<' → logprob: -2.612396717071533
    8. ' range' → logprob: -3.237396717071533
    9. ',' → logprob: -3.362396717071533
    10. '(D' → logprob: -3.487396717071533

Token 356: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11960897594690323
    2. 'N' → logprob: -2.3696088790893555
    3. ' i' → logprob: -4.8696088790893555
    4. '(i' → logprob: -5.3696088790893555
    5. '(N' → logprob: -6.2446088790893555
    6. 'D' → logprob: -6.2446088790893555
    7. '(' → logprob: -6.9946088790893555
    8. ' N' → logprob: -7.2446088790893555
    9. 'K' → logprob: -7.4946088790893555
    10. ' (' → logprob: -7.4946088790893555

Token 357: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5704965591430664
    2. '):' → logprob: -0.9454965591430664
    3. '):
' → logprob: -3.4454965591430664
    4. '+' → logprob: -4.570496559143066
    5. ' )' → logprob: -6.945496559143066
    6. ')+' → logprob: -7.195496559143066
    7. '[' → logprob: -7.320496559143066
    8. ':' → logprob: -8.070496559143066
    9. '   ' → logprob: -8.195496559143066
    10. ' ):' → logprob: -8.320496559143066

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03502114489674568
    2. ' if' → logprob: -3.5350210666656494
    3. 'if' → logprob: -6.1600213050842285
    4. '```' → logprob: -6.1600213050842285
    5. '<|end|>' → logprob: -7.5350213050842285
    6. ' for' → logprob: -8.53502082824707
    7. '   ' → logprob: -8.91002082824707
    8. ',' → logprob: -10.78502082824707
    9. '...' → logprob: -11.03502082824707
    10. ' f' → logprob: -11.03502082824707

Token 359: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0743083730340004
    2. '       ' → logprob: -2.699308395385742
    3. ' if' → logprob: -5.949308395385742
    4. 'f' → logprob: -7.449308395385742
    5. '           ' → logprob: -7.699308395385742
    6. 'd' → logprob: -8.324308395385742
    7. '   ' → logprob: -8.324308395385742
    8. 'val' → logprob: -8.949308395385742
    9. 'print' → logprob: -10.449308395385742
    10. 'v' → logprob: -11.199308395385742

Token 360: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.31791138648986816
    2. 'd' → logprob: -1.3179113864898682
    3. 'f' → logprob: -6.067911148071289
    4. ' f' → logprob: -6.317911148071289
    5. ' not' → logprob: -8.442911148071289
    6. '   ' → logprob: -9.567911148071289
    7. '(d' → logprob: -9.692911148071289
    8. '       ' → logprob: -10.192911148071289
    9. '    ' → logprob: -10.317911148071289
    10. ' ' → logprob: -10.692911148071289

Token 361: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00017827287956606597
    2. '[' → logprob: -9.000178337097168
    3. ' [' → logprob: -10.125178337097168
    4. 'i' → logprob: -11.875178337097168
    5. '   ' → logprob: -12.750178337097168
    6. ' i' → logprob: -13.625178337097168
    7. '[j' → logprob: -13.875178337097168
    8. ' ' → logprob: -14.000178337097168
    9. '[
' → logprob: -14.875178337097168
    10. '[(' → logprob: -15.375178337097168

Token 362: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0015116469003260136
    2. '[' → logprob: -6.876511573791504
    3. ' *' → logprob: -8.501511573791504
    4. '*[' → logprob: -8.626511573791504
    5. '][' → logprob: -10.001511573791504
    6. '[i' → logprob: -10.251511573791504
    7. '[j' → logprob: -12.751511573791504
    8. 'W' → logprob: -12.876511573791504
    9. '[*' → logprob: -13.126511573791504
    10. '+' → logprob: -13.626511573791504

Token 363: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -5.0259150157216936e-05
    2. ' W' → logprob: -10.50005054473877
    3. 'j' → logprob: -11.37505054473877
    4. '[' → logprob: -12.37505054473877
    5. '```' → logprob: -13.12505054473877
    6. ' ' → logprob: -13.62505054473877
    7. '*' → logprob: -13.62505054473877
    8. '+' → logprob: -13.87505054473877
    9. '`' → logprob: -15.25005054473877
    10. '[j' → logprob: -15.37505054473877

Token 364: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20268908143043518
    2. '+' → logprob: -1.7026890516281128
    3. '+j' → logprob: -6.702689170837402
    4. '[j' → logprob: -10.702689170837402
    5. ' ' → logprob: -11.077689170837402
    6. '[' → logprob: -12.202689170837402
    7. '   ' → logprob: -12.577689170837402
    8. ' [' → logprob: -15.577689170837402
    9. 'j' → logprob: -16.077688217163086
    10. '+i' → logprob: -16.077688217163086

Token 365: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0024763736873865128
    2. ' j' → logprob: -6.002476215362549
    3. ' ' → logprob: -15.252476692199707
    4. '   ' → logprob: -15.377476692199707
    5. '[j' → logprob: -15.877476692199707
    6. '       ' → logprob: -17.25247573852539
    7. '	j' → logprob: -18.25247573852539
    8. '  ' → logprob: -18.50247573852539
    9. '
' → logprob: -18.62747573852539
    10. '    ' → logprob: -18.87747573852539

Token 366: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3508845269680023
    2. '>' → logprob: -2.100884437561035
    3. ']>=' → logprob: -2.975884437561035
    4. ' >' → logprob: -3.475884437561035
    5. ']>' → logprob: -3.475884437561035
    6. ']==' → logprob: -3.725884437561035
    7. ' >=' → logprob: -3.975884437561035
    8. '>=' → logprob: -4.600884437561035
    9. '==' → logprob: -6.100884437561035
    10. ' ==' → logprob: -6.225884437561035

Token 367: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.07240106165409088
    2. '>=' → logprob: -2.6974010467529297
    3. ' >' → logprob: -6.82240104675293
    4. ' <' → logprob: -7.44740104675293
    5. '>' → logprob: -8.07240104675293
    6. ' ==' → logprob: -8.32240104675293
    7. '==' → logprob: -9.32240104675293
    8. ' ' → logprob: -10.44740104675293
    9. '<' → logprob: -10.44740104675293
    10. '   ' → logprob: -10.57240104675293

Token 368: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00523837935179472
    2. ' K' → logprob: -5.2552385330200195
    3. '   ' → logprob: -12.50523853302002
    4. '       ' → logprob: -14.88023853302002
    5. ' ' → logprob: -15.38023853302002
    6. '	K' → logprob: -16.380237579345703
    7. '    ' → logprob: -16.880237579345703
    8. '           ' → logprob: -16.880237579345703
    9. '2' → logprob: -17.130237579345703
    10. '1' → logprob: -17.505237579345703

Token 369: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48574936389923096
    2. ':
' → logprob: -0.985749363899231
    3. '           ' → logprob: -4.485749244689941
    4. ':return' → logprob: -9.110749244689941
    5. '       ' → logprob: -9.735749244689941
    6. ' and' → logprob: -9.985749244689941
    7. '):
' → logprob: -10.235749244689941
    8. '():
' → logprob: -11.110749244689941
    9. '```' → logprob: -11.360749244689941
    10. '):' → logprob: -11.610749244689941

Token 370: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00441943621262908
    2. 'print' → logprob: -6.129419326782227
    3. ' print' → logprob: -6.254419326782227
    4. '               ' → logprob: -9.129419326782227
    5. '       ' → logprob: -9.254419326782227
    6. '```' → logprob: -10.004419326782227
    7. ' found' → logprob: -10.879419326782227
    8. '   ' → logprob: -12.129419326782227
    9. 'break' → logprob: -12.254419326782227
    10. ' break' → logprob: -12.379419326782227

Token 371: ' I' (ID: 357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003414870472624898
    2. ' print' → logprob: -5.753415107727051
    3. 'found' → logprob: -8.50341510772705
    4. ' found' → logprob: -10.75341510772705
    5. '
' → logprob: -12.37841510772705
    6. '           ' → logprob: -12.87841510772705
    7. '   ' → logprob: -13.25341510772705
    8. '       ' → logprob: -13.75341510772705
    9. 'result' → logprob: -14.37841510772705
    10. '```' → logprob: -14.62841510772705

Token 372: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1492094248533249
    2. 'm' → logprob: -2.774209499359131
    3. '=' → logprob: -3.774209499359131
    4. '_found' → logprob: -3.899209499359131
    5. 'nd' → logprob: -4.649209499359131
    6. '_' → logprob: -4.649209499359131
    7. 'n' → logprob: -6.024209499359131
    8. '   ' → logprob: -6.524209499359131
    9. 'N' → logprob: -6.899209499359131
    10. '#' → logprob: -7.149209499359131

Token 373: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.2803632616996765
    2. ' J' → logprob: -1.7803633213043213
    3. 'j' → logprob: -3.6553633213043213
    4. ' j' → logprob: -4.280363082885742
    5. 'print' → logprob: -4.405363082885742
    6. ' break' → logprob: -5.030363082885742
    7. 'break' → logprob: -5.655363082885742
    8. 'i' → logprob: -6.155363082885742
    9. ' i' → logprob: -6.280363082885742
    10. ' print' → logprob: -6.780363082885742

Token 374: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04905613139271736
    2. '=' → logprob: -3.049056053161621
    3. ',' → logprob: -7.799056053161621
    4. '=i' → logprob: -9.799056053161621
    5. ' ,' → logprob: -13.549056053161621
    6. ' ' → logprob: -13.674056053161621
    7. ',i' → logprob: -15.549056053161621
    8. '=j' → logprob: -16.299057006835938
    9. ' ' → logprob: -16.924057006835938
    10. ' =
' → logprob: -17.174057006835938

Token 375: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08914895355701447
    2. ' i' → logprob: -2.464148998260498
    3. '(i' → logprob: -8.58914852142334
    4. ' (' → logprob: -10.96414852142334
    5. '   ' → logprob: -13.58914852142334
    6. ' ' → logprob: -13.96414852142334
    7. ',i' → logprob: -14.58914852142334
    8. '[i' → logprob: -14.71414852142334
    9. '
' → logprob: -14.96414852142334
    10. '0' → logprob: -15.08914852142334

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003956463187932968
    2. ',j' → logprob: -5.628956317901611
    3. ' ,' → logprob: -8.12895679473877
    4. '+' → logprob: -10.12895679473877
    5. ',J' → logprob: -11.87895679473877
    6. ',K' → logprob: -12.62895679473877
    7. ',
' → logprob: -13.00395679473877
    8. '
' → logprob: -13.37895679473877
    9. ',k' → logprob: -13.75395679473877
    10. '+,' → logprob: -13.87895679473877

Token 377: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01416398212313652
    2. ' j' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.139163970947266
    4. ' ' → logprob: -15.639163970947266
    5. '    ' → logprob: -16.389163970947266
    6. ' ' → logprob: -17.514163970947266
    7. '  ' → logprob: -17.639163970947266
    8. '	j' → logprob: -18.389163970947266
    9. '       ' → logprob: -18.639163970947266
    10. '     ' → logprob: -18.639163970947266

Token 378: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00041398804751224816
    2. '
' → logprob: -8.50041389465332
    3. '<|end|>' → logprob: -8.75041389465332
    4. '\n' → logprob: -11.37541389465332
    5. '                           ' → logprob: -11.75041389465332
    6. '            
' → logprob: -12.00041389465332
    7. '		' → logprob: -12.25041389465332
    8. '               ' → logprob: -12.50041389465332
    9. '                   ' → logprob: -12.87541389465332
    10. '<|end|>' → logprob: -13.37541389465332

Token 379: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018086140975356102
    2. '<|end|>' → logprob: -4.768085956573486
    3. '
' → logprob: -4.893085956573486
    4. '                           ' → logprob: -7.393085956573486
    5. '            
' → logprob: -8.393086433410645
    6. '\n' → logprob: -8.518086433410645
    7. '               ' → logprob: -8.893086433410645
    8. ')' → logprob: -9.393086433410645
    9. '                   ' → logprob: -9.518086433410645
    10. ',' → logprob: -9.893086433410645

Token 380: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.0376606360077858
    2. 'break' → logprob: -3.537660598754883
    3. '           ' → logprob: -4.912660598754883
    4. ' found' → logprob: -7.662660598754883
    5. 'print' → logprob: -10.787660598754883
    6. ' break' → logprob: -11.662660598754883
    7. '       ' → logprob: -11.662660598754883
    8. 'Found' → logprob: -12.037660598754883
    9. '(found' → logprob: -12.662660598754883
    10. 'import' → logprob: -13.537660598754883

Token 381: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14292101562023163
    2. '=' → logprob: -2.017920970916748
    3. '=True' → logprob: -8.517921447753906
    4. ' |=' → logprob: -10.892921447753906
    5. ' ' → logprob: -11.142921447753906
    6. '<|end|>' → logprob: -12.267921447753906
    7. '=False' → logprob: -13.267921447753906
    8. ' +=' → logprob: -13.517921447753906
    9. '   ' → logprob: -13.892921447753906
    10. '    ' → logprob: -14.017921447753906

Token 382: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011047814972698689
    2. ' True' → logprob: -4.511047840118408
    3. '=True' → logprob: -19.76104736328125
    4. '(True' → logprob: -19.88604736328125
    5. '1' → logprob: -20.51104736328125
    6. 'true' → logprob: -21.51104736328125
    7. ' ' → logprob: -22.01104736328125
    8. '   ' → logprob: -22.63604736328125
    9. 'Tr' → logprob: -23.51104736328125
    10. ' ' → logprob: -24.01104736328125

Token 383: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002973422408103943
    2. '<|end|>' → logprob: -6.127973556518555
    3. '
' → logprob: -8.002973556518555
    4. '                           ' → logprob: -9.002973556518555
    5. '               ' → logprob: -9.127973556518555
    6. '       ' → logprob: -9.377973556518555
    7. '                   ' → logprob: -10.752973556518555
    8. '            
' → logprob: -11.002973556518555
    9. '          ' → logprob: -11.252973556518555
    10. '		' → logprob: -11.502973556518555

Token 384: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015800900291651487
    2. '<|end|>' → logprob: -6.626580238342285
    3. '               ' → logprob: -9.751580238342285
    4. '                           ' → logprob: -10.126580238342285
    5. '       ' → logprob: -10.626580238342285
    6. '		' → logprob: -10.751580238342285
    7. '                   ' → logprob: -10.751580238342285
    8. '
' → logprob: -11.001580238342285
    9. '   ' → logprob: -11.501580238342285
    10. '<|end|>' → logprob: -11.626580238342285

Token 385: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3871006369590759
    2. '           ' → logprob: -1.1371006965637207
    3. ' break' → logprob: -8.387100219726562
    4. '	break' → logprob: -14.137100219726562
    5. '               ' → logprob: -14.762100219726562
    6. '		' → logprob: -15.262100219726562
    7. '       ' → logprob: -16.012100219726562
    8. '_break' → logprob: -16.512100219726562
    9. '   ' → logprob: -16.887100219726562
    10. '
' → logprob: -16.887100219726562

Token 386: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 388: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.867626428604126
    2. '       ' → logprob: -1.242626428604126
    3. '           ' → logprob: -2.242626428604126
    4. '   ' → logprob: -2.617626428604126
    5. '<|end|>' → logprob: -2.867626428604126
    6. ' if' → logprob: -3.367626428604126
    7. 'break' → logprob: -5.117626190185547
    8. ' ' → logprob: -5.617626190185547
    9. '               ' → logprob: -5.742626190185547
    10. '    ' → logprob: -6.242626190185547

Token 389: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.00020520923135336488
    2. 'found' → logprob: -8.500205039978027
    3. ' not' → logprob: -13.375205039978027
    4. '	found' → logprob: -15.625205039978027
    5. ' ' → logprob: -16.625205993652344
    6. '(found' → logprob: -16.875205993652344
    7. ' break' → logprob: -17.000205993652344
    8. ' ' → logprob: -18.750205993652344
    9. '_found' → logprob: -19.000205993652344
    10. '   ' → logprob: -21.000205993652344

Token 390: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07677225768566132
    2. '   ' → logprob: -3.3267722129821777
    3. ':
' → logprob: -3.4517722129821777
    4. '       ' → logprob: -5.451772212982178
    5. ' :' → logprob: -7.451772212982178
    6. ' ==' → logprob: -7.826772212982178
    7. '           ' → logprob: -8.076772689819336
    8. ' :
' → logprob: -8.326772689819336
    9. '    ' → logprob: -8.701772689819336
    10. '==' → logprob: -9.326772689819336

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0891081690788269
    2. '   ' → logprob: -2.4641082286834717
    3. ' break' → logprob: -9.21410846710205
    4. '           ' → logprob: -9.96410846710205
    5. 'break' → logprob: -12.21410846710205
    6. '
' → logprob: -12.46410846710205
    7. '	' → logprob: -12.71410846710205
    8. '```' → logprob: -12.83910846710205
    9. '	break' → logprob: -12.96410846710205
    10. '   ' → logprob: -13.08910846710205

Token 392: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.13417313992977142
    2. '   ' → logprob: -2.6341731548309326
    3. ' break' → logprob: -3.0091731548309326
    4. '       ' → logprob: -5.5091729164123535
    5. '           ' → logprob: -7.8841729164123535
    6. '	break' → logprob: -11.009173393249512
    7. '```' → logprob: -13.009173393249512
    8. '  ' → logprob: -13.634173393249512
    9. '
' → logprob: -13.759173393249512
    10. ' ' → logprob: -14.009173393249512

Token 393: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6645916104316711
    2. 'if' → logprob: -2.0395915508270264
    3. '<|end|>' → logprob: -2.2895915508270264
    4. '   ' → logprob: -3.0395915508270264
    5. '       ' → logprob: -3.2895915508270264
    6. 'else' → logprob: -3.5395915508270264
    7. ' if' → logprob: -3.5395915508270264
    8. 'for' → logprob: -3.9145915508270264
    9. ' else' → logprob: -4.4145917892456055
    10. '```' → logprob: -4.6645917892456055

Token 394: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004627598915249109
    2. 'if' → logprob: -5.504627704620361
    3. '
' → logprob: -8.629627227783203
    4. 'I' → logprob: -9.629627227783203
    5. 'else' → logprob: -9.629627227783203
    6. '```' → logprob: -10.254627227783203
    7. 'result' → logprob: -10.379627227783203
    8. 'for' → logprob: -10.754627227783203
    9. '#' → logprob: -10.754627227783203
    10. 'pr' → logprob: -11.004627227783203

Token 395: '('' (ID: 706)
  Prédit: '(I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(I' → logprob: -0.438788503408432
    2. '(bin' → logprob: -2.063788414001465
    3. '('' → logprob: -2.813788414001465
    4. '(' → logprob: -2.938788414001465
    5. '((' → logprob: -3.188788414001465
    6. '(J' → logprob: -3.688788414001465
    7. '(f' → logprob: -4.063788414001465
    8. '(chr' → logprob: -4.563788414001465
    9. '("' → logprob: -4.813788414001465
    10. '()' → logprob: -5.063788414001465

Token 396: ''' (ID: 6)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.1571648120880127
    2. '1' → logprob: -1.4071648120880127
    3. ''' → logprob: -2.1571648120880127
    4. '0' → logprob: -2.1571648120880127
    5. 'J' → logprob: -2.1571648120880127
    6. '{' → logprob: -2.7821648120880127
    7. 'bin' → logprob: -5.032164573669434
    8. 'i' → logprob: -5.907164573669434
    9. '{}' → logprob: -5.907164573669434
    10. '{i' → logprob: -5.907164573669434

Token 397: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7085375189781189
    2. '(' → logprob: -1.3335375785827637
    3. '()' → logprob: -2.0835375785827637
    4. '(I' → logprob: -2.9585375785827637
    5. '('' → logprob: -3.3335375785827637
    6. '())' → logprob: -5.083537578582764
    7. ',' → logprob: -5.708537578582764
    8. 'I' → logprob: -6.083537578582764
    9. '(
' → logprob: -6.083537578582764
    10. '[' → logprob: -6.083537578582764

Token 398: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.1129429340362549
    2. 'found' → logprob: -1.1129429340362549
    3. ' not' → logprob: -2.112942934036255
    4. ' found' → logprob: -2.112942934036255
    5. 'not' → logprob: -2.487942934036255
    6. ' I' → logprob: -5.112942695617676
    7. 'K' → logprob: -5.612942695617676
    8. 'N' → logprob: -6.362942695617676
    9. ''' → logprob: -6.487942695617676
    10. '(found' → logprob: -6.737942695617676

Token 399: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3192524313926697
    2. ' ==' → logprob: -1.3192524909973145
    3. '+' → logprob: -5.8192524909973145
    4. '>=' → logprob: -7.1942524909973145
    5. ' is' → logprob: -7.5692524909973145
    6. '>' → logprob: -7.8192524909973145
    7. '<' → logprob: -7.9442524909973145
    8. ' <' → logprob: -8.194252014160156
    9. ')' → logprob: -8.444252014160156
    10. ' +' → logprob: -8.819252014160156

Token 400: ' J' (ID: 643)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001105448347516358
    2. '-' → logprob: -7.501105308532715
    3. 'N' → logprob: -8.126105308532715
    4. ' ' → logprob: -8.501105308532715
    5. 'D' → logprob: -10.126105308532715
    6. ' -' → logprob: -12.251105308532715
    7. '-D' → logprob: -12.501105308532715
    8. 'None' → logprob: -13.501105308532715
    9. '-N' → logprob: -13.751105308532715
    10. 'W' → logprob: -14.126105308532715

Token 401: ' ==' (ID: 951)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2940979301929474
    2. ' else' → logprob: -1.919097900390625
    3. ')' → logprob: -2.294097900390625
    4. '==' → logprob: -5.419097900390625
    5. 'I' → logprob: -7.794097900390625
    6. '
' → logprob: -7.919097900390625
    7. ' ' → logprob: -8.044097900390625
    8. 'or' → logprob: -8.544097900390625
    9. ')
' → logprob: -8.669097900390625
    10. '>' → logprob: -9.044097900390625

Token 402: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. 'D' → logprob: -15.750109672546387
    4. 'N' → logprob: -16.62510871887207
    5. '1' → logprob: -17.25010871887207
    6. '=' → logprob: -17.62510871887207
    7. '''' → logprob: -17.62510871887207
    8. '(' → logprob: -17.87510871887207
    9. '   ' → logprob: -18.00010871887207
    10. ''' → logprob: -18.25010871887207

Token 403: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. 'N' → logprob: -16.125001907348633
    4. 'D' → logprob: -17.375001907348633
    5. '1' → logprob: -17.375001907348633
    6. ')' → logprob: -18.125001907348633
    7. '```' → logprob: -19.000001907348633
    8. 'I' → logprob: -19.125001907348633
    9. '-' → logprob: -19.375001907348633
    10. '=' → logprob: -20.000001907348633

Token 404: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4741300642490387
    2. ' else' → logprob: -0.9741300344467163
    3. '
' → logprob: -10.849129676818848
    4. ')' → logprob: -10.849129676818848
    5. '   ' → logprob: -12.724129676818848
    6. '```' → logprob: -12.849129676818848
    7. ' ' → logprob: -13.099129676818848
    8. ',' → logprob: -14.099129676818848
    9. '	else' → logprob: -14.349129676818848
    10. 'or' → logprob: -14.599129676818848

Token 405: ' format' (ID: 6011)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.08809312433004379
    2. 'format' → logprob: -2.8380930423736572
    3. '''.' → logprob: -4.213093280792236
    4. ''' → logprob: -5.463093280792236
    5. ' bin' → logprob: -6.213093280792236
    6. ''{' → logprob: -6.588093280792236
    7. '(bin' → logprob: -7.338093280792236
    8. '('' → logprob: -7.713093280792236
    9. 'next' → logprob: -7.838093280792236
    10. ' format' → logprob: -7.963093280792236

Token 406: '(J' (ID: 25268)
  Prédit: '(I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(I' → logprob: -0.008358067832887173
    2. '(J' → logprob: -5.258358001708984
    3. 'I' → logprob: -6.383358001708984
    4. 'J' → logprob: -7.133358001708984
    5. '(' → logprob: -7.883358001708984
    6. '((' → logprob: -8.633358001708984
    7. ')' → logprob: -10.508358001708984
    8. ' (' → logprob: -11.758358001708984
    9. '[I' → logprob: -11.883358001708984
    10. '(K' → logprob: -12.258358001708984

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004421216901391745
    2. ' ,' → logprob: -5.754421234130859
    3. ',f' → logprob: -7.629421234130859
    4. ',I' → logprob: -7.629421234130859
    5. '[I' → logprob: -9.50442123413086
    6. ','' → logprob: -10.00442123413086
    7. '[' → logprob: -10.50442123413086
    8. ',b' → logprob: -10.62942123413086
    9. 'f' → logprob: -11.00442123413086
    10. 'I' → logprob: -11.12942123413086

Token 408: ' f' (ID: 285)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.3935774266719818
    2. ''' → logprob: -1.7685774564743042
    3. ''f' → logprob: -2.1435773372650146
    4. 'f' → logprob: -3.5185773372650146
    5. ''i' → logprob: -5.893577575683594
    6. ' f' → logprob: -6.518577575683594
    7. '
' → logprob: -6.643577575683594
    8. ' '' → logprob: -7.143577575683594
    9. ''#' → logprob: -7.768577575683594
    10. '`' → logprob: -8.268577575683594

Token 409: ''' (ID: 6)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.0039726123213768005
    2. ''' → logprob: -5.75397253036499
    3. ''{' → logprob: -8.503973007202148
    4. 'I' → logprob: -8.878973007202148
    5. ''i' → logprob: -9.003973007202148
    6. ''f' → logprob: -9.003973007202148
    7. '"I' → logprob: -9.128973007202148
    8. 'f' → logprob: -10.503973007202148
    9. ''O' → logprob: -11.378973007202148
    10. ''#' → logprob: -11.503973007202148

Token 410: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17944827675819397
    2. ''' → logprob: -1.9294482469558716
    3. '{' → logprob: -4.554448127746582
    4. ''{' → logprob: -5.179448127746582
    5. 'b' → logprob: -6.429448127746582
    6. '#' → logprob: -8.429448127746582
    7. '"' → logprob: -8.554448127746582
    8. '{i' → logprob: -8.679448127746582
    9. 'f' → logprob: -8.929448127746582
    10. ''I' → logprob: -9.054448127746582

Token 411: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -5.6457742175552994e-05
    2. '{i' → logprob: -9.875056266784668
    3. 'I' → logprob: -12.625056266784668
    4. ''{' → logprob: -14.250056266784668
    5. '{}' → logprob: -14.500056266784668
    6. 'b' → logprob: -15.625056266784668
    7. '0' → logprob: -16.125057220458984
    8. '{
' → logprob: -16.375057220458984
    9. '"{' → logprob: -16.750057220458984
    10. ' {' → logprob: -17.125057220458984

Token 412: 'I' (ID: 40)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.003732618410140276
    2. 'I' → logprob: -5.753732681274414
    3. '{i' → logprob: -7.503732681274414
    4. '{}' → logprob: -12.628732681274414
    5. '$I' → logprob: -16.378732681274414
    6. '{
' → logprob: -16.503732681274414
    7. 'b' → logprob: -17.003732681274414
    8. '"{' → logprob: -17.128732681274414
    9. 'i' → logprob: -17.378732681274414
    10. '${' → logprob: -17.503732681274414

Token 413: '}' (ID: 92)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00029923528200015426
    2. '{' → logprob: -8.125299453735352
    3. '{}' → logprob: -13.125299453735352
    4. '}' → logprob: -14.500299453735352
    5. ' b' → logprob: -15.000299453735352
    6. '
' → logprob: -15.375299453735352
    7. '	b' → logprob: -17.37529945373535
    8. '{
' → logprob: -17.62529945373535
    9. '>b' → logprob: -17.62529945373535
    10. 'Ib' → logprob: -17.75029945373535

Token 414: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00524217588827014
    2. '{' → logprob: -5.255242347717285
    3. '
' → logprob: -12.630242347717285
    4. '{}' → logprob: -13.130242347717285
    5. ' b' → logprob: -13.505242347717285
    6. ''b' → logprob: -14.505242347717285
    7. '`' → logprob: -15.255242347717285
    8. '{
' → logprob: -16.13024139404297
    9. 'Ib' → logprob: -16.25524139404297
    10. 'I' → logprob: -16.38024139404297

Token 415: ''))' (ID: 7974)
  Prédit: ''))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.37033650279045105
    2. '}' → logprob: -1.9953365325927734
    3. '')))' → logprob: -2.3703365325927734
    4. ')' → logprob: -2.6203365325927734
    5. '')' → logprob: -5.870336532592773
    6. '))' → logprob: -6.495336532592773
    7. ''))
' → logprob: -7.370336532592773
    8. '')}' → logprob: -7.495336532592773
    9. '}')' → logprob: -7.745336532592773
    10. ')))' → logprob: -7.745336532592773


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 413
Tokens correctement prédits (1ère position, stricte): 154
Tokens correctement prédits (1ère position, avec adaptation): 166
Tokens correctement prédits (top 10): 340
Précision stricte (1ère position): 37.29%
Précision adaptée (1ère position): 40.19%
Précision (top 10): 82.32%
================================================================================
