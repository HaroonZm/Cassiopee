================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
value_first, value_second = [int(item) for item in input().split()]
total_prize = 0
prize_mapping = {1: 300000, 2: 200000, 3: 100000}

if 1 <= value_first <= 3:
    total_prize += prize_mapping[value_first]

if 1 <= value_second <= 3:
    total_prize += prize_mapping[value_second]

if total_prize == 600000:
    total_prize = 1000000

print(total_prize)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'value' (ID: 1594)
  → Token d'amorce (pas de prédiction)

Token 1: '_first' (ID: 29347)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' value' (ID: 1432)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4909219443798065
    2. 'value' → logprob: -1.240921974182129
    3. '_' → logprob: -2.865921974182129
    4. '_value' → logprob: -4.240921974182129
    5. '=value' → logprob: -4.865921974182129
    6. '```' → logprob: -5.240921974182129
    7. ' =' → logprob: -5.990921974182129
    8. ')' → logprob: -6.240921974182129
    9. ',' → logprob: -6.365921974182129
    10. ' ' → logprob: -6.615921974182129

Token 4: '_second' (ID: 67724)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0398122072219849
    2. '=' → logprob: -1.0398122072219849
    3. '_' → logprob: -1.9148122072219849
    4. ')' → logprob: -2.6648120880126953
    5. '[' → logprob: -3.1648120880126953
    6. '```' → logprob: -4.039812088012695
    7. '`' → logprob: -5.539812088012695
    8. ' =' → logprob: -5.789812088012695
    9. '(' → logprob: -6.039812088012695
    10. '_,' → logprob: -6.664812088012695

Token 5: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3080349564552307
    2. ',' → logprob: -2.058034896850586
    3. '=' → logprob: -2.183034896850586
    4. '```' → logprob: -4.058034896850586
    5. '+' → logprob: -6.433034896850586
    6. ')' → logprob: -6.808034896850586
    7. '_,' → logprob: -6.808034896850586
    8. '[' → logprob: -7.058034896850586
    9. ' =' → logprob: -7.683034896850586
    10. '.' → logprob: -7.808034896850586

Token 6: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42164313793182373
    2. ' input' → logprob: -2.1716432571411133
    3. ' None' → logprob: -2.6716432571411133
    4. ' value' → logprob: -2.7966432571411133
    5. '0' → logprob: -3.6716432571411133
    6. 'value' → logprob: -3.7966432571411133
    7. 'input' → logprob: -3.9216432571411133
    8. ' []' → logprob: -4.671643257141113
    9. ' map' → logprob: -5.671643257141113
    10. ' [' → logprob: -5.796643257141113

Token 7: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10295496135950089
    2. ']' → logprob: -2.477954864501953
    3. '1' → logprob: -4.602954864501953
    4. 'value' → logprob: -5.977954864501953
    5. '10' → logprob: -7.477954864501953
    6. '42' → logprob: -8.352954864501953
    7. ']int' → logprob: -8.852954864501953
    8. '100' → logprob: -9.227954864501953
    9. 'int' → logprob: -9.477954864501953
    10. ' ' → logprob: -9.602954864501953

Token 8: '(item' (ID: 10016)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07944377511739731
    2. ']' → logprob: -3.9544436931610107
    3. '(x' → logprob: -4.07944393157959
    4. '(token' → logprob: -4.57944393157959
    5. '(value' → logprob: -4.82944393157959
    6. '(user' → logprob: -5.20444393157959
    7. '()]' → logprob: -5.32944393157959
    8. '(i' → logprob: -5.70444393157959
    9. '(s' → logprob: -5.82944393157959
    10. '(input' → logprob: -6.45444393157959

Token 9: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010387360118329525
    2. '(item' → logprob: -5.510387420654297
    3. ')]' → logprob: -6.010387420654297
    4. '(x' → logprob: -6.010387420654297
    5. '(' → logprob: -7.260387420654297
    6. '(s' → logprob: -9.010387420654297
    7. '(token' → logprob: -9.010387420654297
    8. '.split' → logprob: -9.135387420654297
    9. '.strip' → logprob: -9.135387420654297
    10. ']' → logprob: -10.135387420654297

Token 10: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32607483863830566
    2. '(' → logprob: -2.2010748386383057
    3. 'for' → logprob: -2.8260748386383057
    4. ']' → logprob: -2.9510748386383057
    5. '(x' → logprob: -3.7010748386383057
    6. '(item' → logprob: -3.9510748386383057
    7. '(token' → logprob: -5.951074600219727
    8. '(value' → logprob: -6.201074600219727
    9. '(i' → logprob: -6.701074600219727
    10. '(s' → logprob: -6.826074600219727

Token 11: ' item' (ID: 2169)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5880402326583862
    2. ' value' → logprob: -1.4630402326583862
    3. ' item' → logprob: -1.7130402326583862
    4. ' range' → logprob: -4.088040351867676
    5. ' user' → logprob: -5.963040351867676
    6. ' ' → logprob: -5.963040351867676
    7. ' line' → logprob: -6.213040351867676
    8. ' a' → logprob: -6.338040351867676
    9. 'value' → logprob: -6.463040351867676
    10. ' items' → logprob: -6.713040351867676

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01257899310439825
    2. 'in' → logprob: -4.387578964233398
    3. '<|end|>' → logprob: -10.387578964233398
    4. ' ' → logprob: -11.512578964233398
    5. '(' → logprob: -12.012578964233398
    6. 'value' → logprob: -12.387578964233398
    7. ']' → logprob: -12.512578964233398
    8. '(in' → logprob: -13.137578964233398
    9. '```' → logprob: -13.262578964233398
    10. '(value' → logprob: -13.512578964233398

Token 13: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.14490261673927307
    2. 'input' → logprob: -2.0199027061462402
    3. ' range' → logprob: -7.14490270614624
    4. ' value' → logprob: -7.64490270614624
    5. 'value' → logprob: -7.76990270614624
    6. 'range' → logprob: -8.144902229309082
    7. '(input' → logprob: -9.644902229309082
    8. ' user' → logprob: -9.644902229309082
    9. ' data' → logprob: -10.894902229309082
    10. 'user' → logprob: -11.394902229309082

Token 14: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.10885784775018692
    2. '()' → logprob: -2.7338578701019287
    3. '(' → logprob: -3.3588578701019287
    4. '().' → logprob: -5.98385763168335
    5. '())' → logprob: -8.483858108520508
    6. ']' → logprob: -8.733858108520508
    7. '()].' → logprob: -9.108858108520508
    8. '()][' → logprob: -9.108858108520508
    9. '('' → logprob: -9.233858108520508
    10. ']()' → logprob: -9.858858108520508

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00021903318702243268
    2. 'strip' → logprob: -8.500219345092773
    3. 'rstrip' → logprob: -11.250219345092773
    4. ' split' → logprob: -13.125219345092773
    5. 'replace' → logprob: -15.125219345092773
    6. 'spl' → logprob: -15.250219345092773
    7. '(split' → logprob: -17.125219345092773
    8. 'startswith' → logprob: -19.000219345092773
    9. '```' → logprob: -20.000219345092773
    10. '.split' → logprob: -20.375219345092773

Token 16: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.08592458814382553
    2. '())' → logprob: -2.8359246253967285
    3. '(' → logprob: -4.5859246253967285
    4. '('' → logprob: -4.8359246253967285
    5. '()' → logprob: -5.2109246253967285
    6. '(()' → logprob: -10.71092414855957
    7. '("' → logprob: -11.08592414855957
    8. ')]' → logprob: -11.83592414855957
    9. '()`' → logprob: -12.46092414855957
    10. '()][' → logprob: -12.58592414855957

Token 17: 'total' (ID: 9577)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9569511413574219
    2. '#' → logprob: -1.4569511413574219
    3. '*' → logprob: -2.081951141357422
    4. ':' → logprob: -2.456951141357422
    5. 'if' → logprob: -3.206951141357422
    6. '
' → logprob: -3.206951141357422
    7. '%' → logprob: -3.206951141357422
    8. '```' → logprob: -4.456951141357422
    9. '+
' → logprob: -4.581951141357422
    10. '.' → logprob: -4.956951141357422

Token 18: '_pr' (ID: 18177)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2006167620420456
    2. '=' → logprob: -2.4506168365478516
    3. ' =' → logprob: -3.2006168365478516
    4. '+' → logprob: -3.8256168365478516
    5. ' +=' → logprob: -3.8256168365478516
    6. '+=' → logprob: -5.825616836547852
    7. '_space' → logprob: -5.950616836547852
    8. '_value' → logprob: -6.950616836547852
    9. ' ' → logprob: -7.325616836547852
    10. '(' → logprob: -7.575616836547852

Token 19: 'ize' (ID: 750)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00016444525681436062
    2. 'nt' → logprob: -9.000164031982422
    3. '_int' → logprob: -11.125164031982422
    4. '```' → logprob: -12.375164031982422
    5. '=int' → logprob: -12.500164031982422
    6. '#' → logprob: -13.250164031982422
    7. 'opt' → logprob: -13.250164031982422
    8. 'es' → logprob: -13.375164031982422
    9. '[int' → logprob: -13.375164031982422
    10. '=' → logprob: -13.500164031982422

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4155943989753723
    2. ' +=' → logprob: -1.1655943393707275
    3. '=' → logprob: -4.040594577789307
    4. '_' → logprob: -5.165594577789307
    5. ' ' → logprob: -5.790594577789307
    6. '+=' → logprob: -6.665594577789307
    7. '+' → logprob: -8.040594100952148
    8. '_total' → logprob: -9.415594100952148
    9. '_space' → logprob: -9.790594100952148
    10. ' +' → logprob: -9.915594100952148

Token 21: ' ' (ID: 220)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.09810293465852737
    2. 'value' → logprob: -2.7231030464172363
    3. '0' → logprob: -3.9731030464172363
    4. ' ' → logprob: -5.223103046417236
    5. ' max' → logprob: -6.098103046417236
    6. 'max' → logprob: -7.598103046417236
    7. '100' → logprob: -8.223102569580078
    8. '(value' → logprob: -8.348102569580078
    9. ' (' → logprob: -8.848102569580078
    10. ' int' → logprob: -10.973102569580078

Token 22: '0' (ID: 15)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0287928506731987
    2. ' value' → logprob: -3.6537928581237793
    3. '0' → logprob: -6.903792858123779
    4. 'max' → logprob: -7.028792858123779
    5. '100' → logprob: -8.528792381286621
    6. '(value' → logprob: -8.653792381286621
    7. ' max' → logprob: -9.903792381286621
    8. 'min' → logprob: -10.028792381286621
    9. 'int' → logprob: -10.778792381286621
    10. ' ' → logprob: -10.778792381286621

Token 23: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11385527998209
    2. 'if' → logprob: -3.6138553619384766
    3. ' if' → logprob: -3.7388553619384766
    4. '<|end|>' → logprob: -4.238855361938477
    5. '```' → logprob: -4.488855361938477
    6. '\n' → logprob: -4.488855361938477
    7. ' 
' → logprob: -4.613855361938477
    8. '
' → logprob: -6.363855361938477
    9. ' ' → logprob: -6.488855361938477
    10. '\' → logprob: -6.613855361938477

Token 24: 'pr' (ID: 638)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.837026834487915
    2. ' if' → logprob: -1.212026834487915
    3. '
' → logprob: -1.712026834487915
    4. '```' → logprob: -2.712026834487915
    5. '\n' → logprob: -4.337026596069336
    6. ' 
' → logprob: -5.962026596069336
    7. '``' → logprob: -6.712026596069336
    8. '\' → logprob: -6.837026596069336
    9. '`' → logprob: -6.962026596069336
    10. '<|end|>' → logprob: -7.087026596069336

Token 25: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.03283367678523064
    2. 'int' → logprob: -4.157833576202393
    3. 'iz' → logprob: -4.657833576202393
    4. 'izes' → logprob: -5.657833576202393
    5. 'e' → logprob: -7.032833576202393
    6. 'i' → logprob: -7.782833576202393
    7. 'o' → logprob: -7.782833576202393
    8. '```' → logprob: -7.782833576202393
    9. 'ice' → logprob: -9.15783405303955
    10. 'es' → logprob: -9.28283405303955

Token 26: '_mapping' (ID: 64323)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46798524260520935
    2. 's' → logprob: -1.4679852724075317
    3. ' =' → logprob: -2.467985153198242
    4. '_s' → logprob: -3.342985153198242
    5. '=' → logprob: -4.842985153198242
    6. ' +=' → logprob: -5.092985153198242
    7. '_first' → logprob: -6.342985153198242
    8. ' ' → logprob: -6.717985153198242
    9. '_value' → logprob: -6.842985153198242
    10. '_space' → logprob: -6.842985153198242

Token 27: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34902751445770264
    2. ' =' → logprob: -1.2240275144577026
    3. '[' → logprob: -7.724027633666992
    4. '_' → logprob: -9.599027633666992
    5. '.setdefault' → logprob: -10.724027633666992
    6. ' ' → logprob: -11.474027633666992
    7. 's' → logprob: -11.724027633666992
    8. ']' → logprob: -12.599027633666992
    9. '.get' → logprob: -12.724027633666992
    10. '{' → logprob: -12.724027633666992

Token 28: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.31610628962516785
    2. '{' → logprob: -1.3161063194274902
    3. '{}' → logprob: -6.44110631942749
    4. ' {}' → logprob: -7.69110631942749
    5. ' {'' → logprob: -8.066105842590332
    6. '{"' → logprob: -8.941105842590332
    7. ' {
' → logprob: -9.316105842590332
    8. '{
' → logprob: -9.441105842590332
    9. '{'' → logprob: -9.441105842590332
    10. ' {"' → logprob: -9.691105842590332

Token 29: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.405274897813797
    2. '1' → logprob: -1.9052748680114746
    3. '0' → logprob: -2.4052748680114746
    4. '"' → logprob: -3.2802748680114746
    5. '   ' → logprob: -3.9052748680114746
    6. ''value' → logprob: -4.405274868011475
    7. '"value' → logprob: -5.405274868011475
    8. ' ' → logprob: -5.655274868011475
    9. '100' → logprob: -5.905274868011475
    10. '')' → logprob: -6.030274868011475

Token 30: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011224505578866228
    2. ' :' → logprob: -9.125112533569336
    3. '0' → logprob: -14.375112533569336
    4. '1' → logprob: -14.500112533569336
    5. ',' → logprob: -15.250112533569336
    6. '2' → logprob: -15.250112533569336
    7. ':value' → logprob: -15.375112533569336
    8. '6' → logprob: -15.625112533569336
    9. '```' → logprob: -16.000112533569336
    10. '4' → logprob: -16.250112533569336

Token 31: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8737103343009949
    2. '500' → logprob: -1.7487103939056396
    3. '300' → logprob: -2.2487103939056396
    4. '200' → logprob: -2.3737103939056396
    5. ' ' → logprob: -2.6237103939056396
    6. '10' → logprob: -2.9987103939056396
    7. '50' → logprob: -4.1237101554870605
    8. '1' → logprob: -4.2487101554870605
    9. '5' → logprob: -4.4987101554870605
    10. '0' → logprob: -5.1237101554870605

Token 32: '300' (ID: 4095)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2756429612636566
    2. '6' → logprob: -2.6506428718566895
    3. '500' → logprob: -2.7756428718566895
    4. '1' → logprob: -3.2756428718566895
    5. '10' → logprob: -4.0256428718566895
    6. '5' → logprob: -4.2756428718566895
    7. '3' → logprob: -4.6506428718566895
    8. '300' → logprob: -5.7756428718566895
    9. '600' → logprob: -6.1506428718566895
    10. '0' → logprob: -6.4006428718566895

Token 33: '000' (ID: 1302)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22868408262729645
    2. '0' → logprob: -2.228684186935425
    3. '000' → logprob: -2.353684186935425
    4. '00' → logprob: -6.603683948516846
    5. '}' → logprob: -9.353684425354004
    6. '},' → logprob: -9.478684425354004
    7. ' ,' → logprob: -9.853684425354004
    8. '300' → logprob: -10.603684425354004
    9. '100' → logprob: -10.853684425354004
    10. ' ' → logprob: -11.103684425354004

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011772842844948173
    2. ' ,' → logprob: -9.375117301940918
    3. ',

' → logprob: -11.250117301940918
    4. ',
' → logprob: -11.625117301940918
    5. '0' → logprob: -11.875117301940918
    6. '}' → logprob: -14.000117301940918
    7. ' ' → logprob: -14.125117301940918
    8. '000' → logprob: -14.875117301940918
    9. ',...' → logprob: -14.875117301940918
    10. ',
' → logprob: -15.250117301940918

Token 35: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07817389070987701
    2. ' ' → logprob: -3.453173875808716
    3. '200' → logprob: -4.453174114227295
    4. '500' → logprob: -4.578174114227295
    5. '100' → logprob: -4.703174114227295
    6. '300' → logprob: -5.828174114227295
    7. '600' → logprob: -5.953174114227295
    8. '000' → logprob: -5.953174114227295
    9. '700' → logprob: -6.578174114227295
    10. '400' → logprob: -7.203174114227295

Token 36: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4090324938297272
    2. '500' → logprob: -2.0340325832366943
    3. '200' → logprob: -2.9090325832366943
    4. '600' → logprob: -2.9090325832366943
    5. '100' → logprob: -3.7840325832366943
    6. '300' → logprob: -4.034032344818115
    7. '700' → logprob: -4.159032344818115
    8. ' ' → logprob: -4.409032344818115
    9. '400' → logprob: -4.659032344818115
    10. '000' → logprob: -4.784032344818115

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.968312951968983e-06
    2. ' :' → logprob: -11.875009536743164
    3. '```' → logprob: -13.500009536743164
    4. ',' → logprob: -15.000009536743164
    5. '300' → logprob: -15.625009536743164
    6. ':`' → logprob: -16.250009536743164
    7. ':
' → logprob: -16.250009536743164
    8. '3' → logprob: -16.375009536743164
    9. '0' → logprob: -16.625009536743164
    10. ':,' → logprob: -17.000009536743164

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8012078404426575
    2. '150' → logprob: -0.8012078404426575
    3. '200' → logprob: -2.6762077808380127
    4. '500' → logprob: -4.051208019256592
    5. '300' → logprob: -4.551208019256592
    6. '250' → logprob: -6.426208019256592
    7. '600' → logprob: -6.551208019256592
    8. '400' → logprob: -6.926208019256592
    9. '100' → logprob: -7.051208019256592
    10. '580' → logprob: -9.176207542419434

Token 39: '200' (ID: 1179)
  Prédit: '150'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '150' → logprob: -0.035688649863004684
    2. '200' → logprob: -3.535688638687134
    3. ' ' → logprob: -5.660688877105713
    4. '300' → logprob: -7.535688877105713
    5. '400' → logprob: -7.910688877105713
    6. '500' → logprob: -8.035688400268555
    7. '250' → logprob: -8.160688400268555
    8. '600' → logprob: -8.660688400268555
    9. '15' → logprob: -8.785688400268555
    10. '2' → logprob: -9.410688400268555

Token 40: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -2.2961512513575144e-05
    2. '00' → logprob: -10.875022888183594
    3. '0' → logprob: -13.750022888183594
    4. '```' → logprob: -13.750022888183594
    5. '_' → logprob: -14.125022888183594
    6. '001' → logprob: -14.625022888183594
    7. '   ' → logprob: -15.750022888183594
    8. ' ' → logprob: -16.312522888183594
    9. '۰۰' → logprob: -16.437522888183594
    10. '００' → logprob: -17.187522888183594

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018983196059707552
    2. ' ,' → logprob: -8.875189781188965
    3. '}' → logprob: -10.750189781188965
    4. ',
' → logprob: -11.375189781188965
    5. ',

' → logprob: -11.750189781188965
    6. ',...' → logprob: -13.375189781188965
    7. ' ' → logprob: -13.625189781188965
    8. ',
' → logprob: -13.750189781188965
    9. '```' → logprob: -13.875189781188965
    10. '1' → logprob: -14.250189781188965

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3487250506877899
    2. '3' → logprob: -1.2237250804901123
    3. '1' → logprob: -8.598725318908691
    4. '300' → logprob: -9.723725318908691
    5. ' ' → logprob: -12.348725318908691
    6. '```' → logprob: -12.348725318908691
    7. '4' → logprob: -12.473725318908691
    8. '2' → logprob: -12.661225318908691
    9. '0' → logprob: -12.786225318908691
    10. '250' → logprob: -13.223725318908691

Token 43: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.002921256935223937
    2. ' ' → logprob: -5.877921104431152
    3. '300' → logprob: -9.502921104431152
    4. '4' → logprob: -11.127921104431152
    5. '100' → logprob: -11.752921104431152
    6. '0' → logprob: -12.627921104431152
    7. '1' → logprob: -12.877921104431152
    8. '500' → logprob: -13.127921104431152
    9. '5' → logprob: -13.190421104431152
    10. '30' → logprob: -13.502921104431152

Token 44: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.696889623621246e-06
    2. ' :' → logprob: -13.12500286102295
    3. ',' → logprob: -15.50000286102295
    4. '300' → logprob: -15.75000286102295
    5. '000' → logprob: -15.87500286102295
    6. '```' → logprob: -16.375001907348633
    7. '0' → logprob: -17.375001907348633
    8. ' ' → logprob: -17.625001907348633
    9. '):' → logprob: -17.750001907348633
    10. '}:' → logprob: -18.000001907348633

Token 45: ' ' (ID: 220)
  Prédit: '150'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '150' → logprob: -0.07247912138700485
    2. '100' → logprob: -2.697479009628296
    3. ' ' → logprob: -6.822479248046875
    4. '500' → logprob: -6.947479248046875
    5. '```' → logprob: -8.822479248046875
    6. '300' → logprob: -8.947479248046875
    7. '   ' → logprob: -9.947479248046875
    8. '15' → logprob: -10.697479248046875
    9. '  ' → logprob: -11.072479248046875
    10. '120' → logprob: -11.322479248046875

Token 46: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2531152069568634
    2. '150' → logprob: -1.503115177154541
    3. '500' → logprob: -6.878115177154541
    4. '```' → logprob: -9.6281156539917
    5. '10' → logprob: -11.2531156539917
    6. '400' → logprob: -11.9406156539917
    7. '300' → logprob: -12.0031156539917
    8. '   ' → logprob: -12.0031156539917
    9. '1' → logprob: -12.3781156539917
    10. '140' → logprob: -12.4406156539917

Token 47: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -1.6166903151315637e-05
    2. '00' → logprob: -11.250016212463379
    3. '0' → logprob: -13.125016212463379
    4. '001' → logprob: -14.500016212463379
    5. '```' → logprob: -14.500016212463379
    6. '_' → logprob: -16.500015258789062
    7. '۰۰' → logprob: -17.000015258789062
    8. '{' → logprob: -17.750015258789062
    9. ')' → logprob: -18.500015258789062
    10. '００' → logprob: -18.750015258789062

Token 48: '}

' (ID: 943)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5761445164680481
    2. '}' → logprob: -0.8261445164680481
    3. ' }' → logprob: -8.576144218444824
    4. '```' → logprob: -12.826144218444824
    5. '4' → logprob: -12.951144218444824
    6. ',
' → logprob: -13.076144218444824
    7. ' ,' → logprob: -13.451144218444824
    8. '   ' → logprob: -13.576144218444824
    9. ' ' → logprob: -13.826144218444824
    10. ',

' → logprob: -14.326144218444824

Token 49: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3736911714076996
    2. '
' → logprob: -1.873691201210022
    3. '\n' → logprob: -2.2486910820007324
    4. '```' → logprob: -3.4986910820007324
    5. ' if' → logprob: -4.873691082000732
    6. '' → logprob: -4.998691082000732
    7. '\' → logprob: -5.873691082000732
    8. 'i' → logprob: -7.123691082000732
    9. '
' → logprob: -7.373691082000732
    10. 'for' → logprob: -7.373691082000732

Token 50: ' ' (ID: 220)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.16023631393909454
    2. 'value' → logprob: -1.9102363586425781
    3. ' ' → logprob: -12.160236358642578
    4. '(value' → logprob: -12.285236358642578
    5. ' (' → logprob: -14.285236358642578
    6. ' ' → logprob: -15.035236358642578
    7. '	value' → logprob: -15.535236358642578
    8. '   ' → logprob: -15.910236358642578
    9. '"value' → logprob: -15.910236358642578
    10. '  ' → logprob: -16.160236358642578

Token 51: '1' (ID: 16)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.005934962537139654
    2. ' value' → logprob: -5.130935192108154
    3. '(value' → logprob: -12.755934715270996
    4. 'valu' → logprob: -14.380934715270996
    5. 'val' → logprob: -14.630934715270996
    6. '"value' → logprob: -14.630934715270996
    7. ' ' → logprob: -14.880934715270996
    8. ''value' → logprob: -15.505934715270996
    9. 'va' → logprob: -15.880934715270996
    10. 'v' → logprob: -16.005935668945312

Token 52: ' <=' (ID: 5017)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5501826405525208
    2. ' <=' → logprob: -1.050182580947876
    3. ' in' → logprob: -3.300182580947876
    4. '==' → logprob: -3.675182580947876
    5. '<=' → logprob: -5.175182819366455
    6. ' ' → logprob: -6.175182819366455
    7. 'value' → logprob: -6.675182819366455
    8. '=' → logprob: -7.675182819366455
    9. 'in' → logprob: -7.800182819366455
    10. '0' → logprob: -8.300182342529297

Token 53: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.014164448715746403
    2. ' value' → logprob: -4.264164447784424
    3. ' ' → logprob: -15.389164924621582
    4. 'val' → logprob: -15.639164924621582
    5. 'valu' → logprob: -16.014163970947266
    6. 'values' → logprob: -16.514163970947266
    7. 'v' → logprob: -16.764163970947266
    8. '"value' → logprob: -16.764163970947266
    9. ''value' → logprob: -16.889163970947266
    10. '(value' → logprob: -16.889163970947266

Token 54: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0004953675088472664
    2. '_second' → logprob: -7.625495433807373
    3. '_' → logprob: -12.125494956970215
    4. 'first' → logprob: -14.375494956970215
    5. '_f' → logprob: -14.875494956970215
    6. ' _' → logprob: -15.125494956970215
    7. '_First' → logprob: -16.00049591064453
    8. 'First' → logprob: -16.37549591064453
    9. '```' → logprob: -16.37549591064453
    10. '_value' → logprob: -16.62549591064453

Token 55: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.056810274720191956
    2. '<=' → logprob: -2.9318103790283203
    3. ' and' → logprob: -7.05681037902832
    4. 'and' → logprob: -7.30681037902832
    5. ' ' → logprob: -8.43181037902832
    6. ' <' → logprob: -9.43181037902832
    7. '<' → logprob: -10.55681037902832
    8. ' ==' → logprob: -10.93181037902832
    9. '_' → logprob: -11.05681037902832
    10. '==' → logprob: -11.68181037902832

Token 56: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.006245276425033808
    2. ' ' → logprob: -5.131245136260986
    3. '6' → logprob: -8.881245613098145
    4. '5' → logprob: -9.631245613098145
    5. 'value' → logprob: -10.881245613098145
    6. '9' → logprob: -11.006245613098145
    7. '2' → logprob: -11.381245613098145
    8. '  ' → logprob: -11.381245613098145
    9. '10' → logprob: -11.381245613098145
    10. '4' → logprob: -11.506245613098145

Token 57: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00044711565715260804
    2. '6' → logprob: -8.375447273254395
    3. ' ' → logprob: -9.500447273254395
    4. '5' → logprob: -10.125447273254395
    5. '7' → logprob: -10.250447273254395
    6. 'value' → logprob: -11.250447273254395
    7. '9' → logprob: -11.375447273254395
    8. '4' → logprob: -11.750447273254395
    9. '10' → logprob: -11.875447273254395
    10. '2' → logprob: -12.125447273254395

Token 58: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0962209403514862
    2. ':' → logprob: -2.5962209701538086
    3. 'and' → logprob: -4.096220970153809
    4. ' :' → logprob: -7.721220970153809
    5. ' ' → logprob: -9.971220970153809
    6. ':
' → logprob: -10.471220970153809
    7. '   ' → logprob: -11.346220970153809
    8. ')' → logprob: -12.596220970153809
    9. '	and' → logprob: -12.596220970153809
    10. ' or' → logprob: -12.971220970153809

Token 59: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2654411196708679
    2. ' and' → logprob: -1.8904411792755127
    3. ':
' → logprob: -3.1404411792755127
    4. '   ' → logprob: -3.5154411792755127
    5. ' total' → logprob: -6.140440940856934
    6. 'and' → logprob: -6.140440940856934
    7. ' ' → logprob: -6.265440940856934
    8. 'total' → logprob: -6.765440940856934
    9. ' :' → logprob: -7.265440940856934
    10. '<|end|>' → logprob: -8.140440940856934

Token 60: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.8718091249465942
    2. 'total' (adapté à ' total') → logprob: -0.9968091249465942
    3. ' if' → logprob: -1.9968091249465942
    4. '   ' → logprob: -3.1218090057373047
    5. 'if' → logprob: -3.8718090057373047
    6. ' and' → logprob: -4.621809005737305
    7. '    ' → logprob: -7.496809005737305
    8. ' ' → logprob: -7.496809005737305
    9. ':' → logprob: -7.996809005737305
    10. 'and' → logprob: -8.496809005737305

Token 61: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -4.513339445111342e-05
    2. '_' → logprob: -10.500044822692871
    3. '_p' → logprob: -12.000044822692871
    4. '_total' → logprob: -12.625044822692871
    5. '_price' → logprob: -13.625044822692871
    6. ' _' → logprob: -14.000044822692871
    7. '_value' → logprob: -14.125044822692871
    8. '_reward' → logprob: -14.375044822692871
    9. '_pres' → logprob: -14.375044822692871
    10. '_aw' → logprob: -14.875044822692871

Token 62: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.0003044802288059145
    2. 'ze' → logprob: -8.500304222106934
    3. ' ' → logprob: -11.000304222106934
    4. '_' → logprob: -11.375304222106934
    5. 'e' → logprob: -11.375304222106934
    6. 'iz' → logprob: -11.500304222106934
    7. 'i' → logprob: -11.625304222106934
    8. '   ' → logprob: -11.625304222106934
    9. 'izes' → logprob: -11.875304222106934
    10. '```' → logprob: -12.875304222106934

Token 63: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.000782230228651315
    2. ' =' → logprob: -7.375782012939453
    3. '+=' → logprob: -8.875782012939453
    4. ' ' → logprob: -11.250782012939453
    5. '=' → logprob: -12.875782012939453
    6. ' -=' → logprob: -15.750782012939453
    7. ' ' → logprob: -16.500782012939453
    8. ' +' → logprob: -16.500782012939453
    9. '```' → logprob: -16.750782012939453
    10. ' *=' → logprob: -17.250782012939453

Token 64: ' prize' (ID: 29528)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.3870522975921631
    2. ' prize' → logprob: -1.137052297592163
    3. ' pr' → logprob: -9.137052536010742
    4. ' ' → logprob: -10.387052536010742
    5. '(pr' → logprob: -11.637052536010742
    6. '	pr' → logprob: -12.012052536010742
    7. ' priz' → logprob: -12.137052536010742
    8. '   ' → logprob: -12.262052536010742
    9. 'Prize' → logprob: -12.699552536010742
    10. '  ' → logprob: -13.512052536010742

Token 65: '_mapping' (ID: 64323)
  Prédit: '_mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mapping' → logprob: -9.372294698550832e-06
    2. 'mapping' → logprob: -12.375009536743164
    3. '_' → logprob: -13.125009536743164
    4. 'Mapping' → logprob: -13.125009536743164
    5. '_map' → logprob: -15.000009536743164
    6. '_MAPPING' → logprob: -15.375009536743164
    7. ' _' → logprob: -15.500009536743164
    8. '_m' → logprob: -15.750009536743164
    9. ' mapping' → logprob: -17.375009536743164
    10. '_matching' → logprob: -18.000009536743164

Token 66: '[value' (ID: 96564)
  Prédit: '[value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[value' → logprob: -0.0028778647538274527
    2. '[' → logprob: -5.877877712249756
    3. '.get' → logprob: -10.502878189086914
    4. '[val' → logprob: -10.877878189086914
    5. ' [' → logprob: -11.002878189086914
    6. '[get' → logprob: -13.127878189086914
    7. '[first' → logprob: -13.252878189086914
    8. 'value' → logprob: -14.127878189086914
    9. '[f' → logprob: -14.377878189086914
    10. '[key' → logprob: -14.377878189086914

Token 67: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -2.451116051815916e-05
    2. '_second' → logprob: -11.000024795532227
    3. '_f' → logprob: -12.000024795532227
    4. '_' → logprob: -14.000024795532227
    5. 'first' → logprob: -15.250024795532227
    6. ']_' → logprob: -15.625024795532227
    7. ')_' → logprob: -15.875024795532227
    8. ' _' → logprob: -16.000024795532227
    9. '_FIRST' → logprob: -17.125024795532227
    10. 'First' → logprob: -17.375024795532227

Token 68: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005377820343710482
    2. ']
' → logprob: -8.000537872314453
    3. ' ]' → logprob: -8.625537872314453
    4. ']*' → logprob: -11.625537872314453
    5. ']

' → logprob: -12.250537872314453
    6. '   ' → logprob: -13.000537872314453
    7. ']+' → logprob: -13.375537872314453
    8. ' ' → logprob: -13.750537872314453
    9. ']
' → logprob: -14.000537872314453
    10. '']' → logprob: -14.625537872314453

Token 69: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44714686274528503
    2. '
' → logprob: -1.1971468925476074
    3. ' if' → logprob: -3.3221468925476074
    4. ' 
' → logprob: -5.072146892547607
    5. '    
' → logprob: -5.572146892547607
    6. '\n' → logprob: -6.322146892547607
    7. '  
' → logprob: -6.447146892547607
    8. '
' → logprob: -6.822146892547607
    9. ' ' → logprob: -6.947146892547607
    10. '

' → logprob: -6.947146892547607

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0805249810218811
    2. '1' → logprob: -2.5805249214172363
    3. ' value' → logprob: -6.955524921417236
    4. 'value' → logprob: -7.330524921417236
    5. '  ' → logprob: -11.205525398254395
    6. ' (' → logprob: -12.955525398254395
    7. '   ' → logprob: -13.080525398254395
    8. ' ' → logprob: -13.205525398254395
    9. '2' → logprob: -13.705525398254395
    10. '0' → logprob: -13.705525398254395

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1608048677444458
    2. ' ' → logprob: -1.9108048677444458
    3. 'value' → logprob: -7.785804748535156
    4. '2' → logprob: -9.035804748535156
    5. ' value' → logprob: -10.785804748535156
    6. '3' → logprob: -12.160804748535156
    7. '  ' → logprob: -12.535804748535156
    8. '   ' → logprob: -12.660804748535156
    9. '0' → logprob: -12.660804748535156
    10. '6' → logprob: -13.410804748535156

Token 72: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.026331884786486626
    2. '<=' → logprob: -3.651331901550293
    3. ' ==' → logprob: -11.151331901550293
    4. ' ' → logprob: -12.276331901550293
    5. '==' → logprob: -12.526331901550293
    6. '_' → logprob: -12.776331901550293
    7. '+' → logprob: -13.401331901550293
    8. ' <' → logprob: -13.401331901550293
    9. ' !=' → logprob: -14.526331901550293
    10. ' ' → logprob: -14.651331901550293

Token 73: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.0619698166847229
    2. 'value' → logprob: -2.811969757080078
    3. ' ' → logprob: -13.061969757080078
    4. ' ' → logprob: -17.686969757080078
    5. '	value' → logprob: -18.061969757080078
    6. '"value' → logprob: -18.186969757080078
    7. 'Value' → logprob: -18.311969757080078
    8. 'alue' → logprob: -18.436969757080078
    9. '(value' → logprob: -18.811969757080078
    10. '_value' → logprob: -18.936969757080078

Token 74: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -1.3306015716807451e-05
    2. '_first' → logprob: -12.12501335144043
    3. '_' → logprob: -12.25001335144043
    4. '_se' → logprob: -13.37501335144043
    5. ' _' → logprob: -14.62501335144043
    6. '_s' → logprob: -15.12501335144043
    7. 'second' → logprob: -15.25001335144043
    8. '_seconds' → logprob: -15.62501335144043
    9. 'Second' → logprob: -16.62501335144043
    10. '_sec' → logprob: -16.87501335144043

Token 75: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2811771631240845
    2. '<=' → logprob: -1.4061771631240845
    3. ' ' → logprob: -11.031177520751953
    4. ' <' → logprob: -12.781177520751953
    5. ' ' → logprob: -13.656177520751953
    6. '<' → logprob: -13.781177520751953
    7. '_' → logprob: -13.781177520751953
    8. '```' → logprob: -13.781177520751953
    9. 'and' → logprob: -13.906177520751953
    10. ' and' → logprob: -14.406177520751953

Token 76: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.22541889548301697
    2. ' ' → logprob: -1.6004189252853394
    3. '  ' → logprob: -13.037919044494629
    4. '   ' → logprob: -13.662919044494629
    5. '```' → logprob: -13.975419044494629
    6. ' ' → logprob: -14.350419044494629
    7. '' → logprob: -15.912919044494629
    8. '2' → logprob: -15.975419044494629
    9. '<|end|>' → logprob: -15.975419044494629
    10. '`' → logprob: -16.162918090820312

Token 77: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0009131324477493763
    2. ' ' → logprob: -7.000913143157959
    3. '2' → logprob: -13.7509126663208
    4. '  ' → logprob: -15.6259126663208
    5. '   ' → logprob: -16.000913619995117
    6. '1' → logprob: -16.375913619995117
    7. '```' → logprob: -16.500913619995117
    8. '<|end|>' → logprob: -16.625913619995117
    9. '4' → logprob: -17.500913619995117
    10. '۳' → logprob: -17.875913619995117

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014199002645909786
    2. ':
' → logprob: -4.2641987800598145
    3. '   ' → logprob: -11.139199256896973
    4. ' :' → logprob: -11.264199256896973
    5. ' :
' → logprob: -12.514199256896973
    6. ' and' → logprob: -12.764199256896973
    7. ':

' → logprob: -14.014199256896973
    8. ':
' → logprob: -15.014199256896973
    9. 'and' → logprob: -15.514199256896973
    10. ' ' → logprob: -16.389198303222656

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002665192587301135
    2. 'total' → logprob: -6.627665042877197
    3. ' total' → logprob: -6.627665042877197
    4. '       ' → logprob: -11.877665519714355
    5. '	total' → logprob: -12.627665519714355
    6. ' ' → logprob: -13.127665519714355
    7. '   ' → logprob: -13.877665519714355
    8. '    ' → logprob: -14.627665519714355
    9. '```' → logprob: -14.752665519714355
    10. '  ' → logprob: -15.002665519714355

Token 80: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.576922595500946
    2. 'total' (adapté à ' total') → logprob: -1.0769226551055908
    3. '   ' → logprob: -2.326922655105591
    4. ' ' → logprob: -10.201922416687012
    5. '	total' → logprob: -10.451922416687012
    6. '       ' → logprob: -10.576922416687012
    7. '_total' → logprob: -10.951922416687012
    8. '(total' → logprob: -12.326922416687012
    9. '    ' → logprob: -12.451922416687012
    10. '  ' → logprob: -12.951922416687012

Token 81: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.0001025895617203787
    2. '_p' → logprob: -9.500102996826172
    3. '_' → logprob: -10.875102996826172
    4. ' _' → logprob: -12.375102996826172
    5. '_price' → logprob: -13.375102996826172
    6. '_pres' → logprob: -14.500102996826172
    7. '_Pr' → logprob: -14.750102996826172
    8. '_pro' → logprob: -14.750102996826172
    9. '_total' → logprob: -14.875102996826172
    10. 'pr' → logprob: -15.625102996826172

Token 82: 'ize' (ID: 750)
  Prédit: 'ze'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ze' → logprob: -0.12737657129764557
    2. 'ize' → logprob: -2.1273765563964844
    3. 'e' → logprob: -7.877376556396484
    4. 'z' → logprob: -10.627376556396484
    5. 'se' → logprob: -11.502376556396484
    6. '   ' → logprob: -11.877376556396484
    7. '```' → logprob: -12.877376556396484
    8. '_' → logprob: -13.002376556396484
    9. 'oze' → logprob: -13.002376556396484
    10. ' ' → logprob: -13.127376556396484

Token 83: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02635917067527771
    2. '+=' → logprob: -3.6513590812683105
    3. ' +' → logprob: -10.151359558105469
    4. '+' → logprob: -11.776359558105469
    5. ' ' → logprob: -12.026359558105469
    6. '```' → logprob: -13.401359558105469
    7. ' ' → logprob: -13.651359558105469
    8. ']+=' → logprob: -14.276359558105469
    9. ' -=' → logprob: -14.401359558105469
    10. '    ' → logprob: -14.901359558105469

Token 84: ' prize' (ID: 29528)
  Prédit: ' prize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prize' → logprob: -0.01643853820860386
    2. ' pr' → logprob: -4.6414384841918945
    3. 'pr' → logprob: -5.0164384841918945
    4. '	pr' → logprob: -11.891438484191895
    5. '(pr' → logprob: -11.891438484191895
    6. ' priz' → logprob: -12.016438484191895
    7. ' prizes' → logprob: -12.516438484191895
    8. ' ' → logprob: -13.141438484191895
    9. ' prank' → logprob: -13.516438484191895
    10. ' ' → logprob: -13.766438484191895

Token 85: '_mapping' (ID: 64323)
  Prédit: '_mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mapping' → logprob: -5.133198283147067e-05
    2. 'mapping' → logprob: -10.000051498413086
    3. 'Mapping' → logprob: -12.875051498413086
    4. '_pr' → logprob: -13.375051498413086
    5. '_' → logprob: -14.125051498413086
    6. '_MAPPING' → logprob: -15.250051498413086
    7. '_map' → logprob: -15.375051498413086
    8. 'pr' → logprob: -15.875051498413086
    9. '_m' → logprob: -15.875051498413086
    10. 'e' → logprob: -16.250051498413086

Token 86: '[value' (ID: 96564)
  Prédit: '[value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[value' → logprob: -8.566264295950532e-05
    2. '[' → logprob: -9.500085830688477
    3. '[val' → logprob: -12.625085830688477
    4. '.get' → logprob: -12.875085830688477
    5. 'value' → logprob: -13.125085830688477
    6. ' [' → logprob: -13.125085830688477
    7. '[data' → logprob: -16.125085830688477
    8. '```' → logprob: -16.125085830688477
    9. '\[' → logprob: -16.375085830688477
    10. '(value' → logprob: -16.500085830688477

Token 87: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -6.034592388459714e-06
    2. '_first' → logprob: -12.875005722045898
    3. '_' → logprob: -13.500005722045898
    4. '_se' → logprob: -13.875005722045898
    5. '_s' → logprob: -14.500005722045898
    6. 'second' → logprob: -14.875005722045898
    7. '_sec' → logprob: -16.6250057220459
    8. '_seconds' → logprob: -17.1250057220459
    9. 'Second' → logprob: -17.6250057220459
    10. 's' → logprob: -18.0000057220459

Token 88: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3915141355246305e-05
    2. ')
' → logprob: -11.50002384185791
    3. ']' → logprob: -12.00002384185791
    4. '}' → logprob: -12.37502384185791
    5. ' )' → logprob: -13.25002384185791
    6. '）' → logprob: -14.62502384185791
    7. ')}' → logprob: -15.00002384185791
    8. ')

' → logprob: -15.50002384185791
    9. ')]' → logprob: -15.50002384185791
    10. '))' → logprob: -15.75002384185791

Token 89: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009563630446791649
    2. '
' → logprob: -7.1259565353393555
    3. '\n' → logprob: -9.625956535339355
    4. ' print' → logprob: -10.500956535339355
    5. '#' → logprob: -10.750956535339355
    6. '```' → logprob: -11.375956535339355
    7. '\' → logprob: -11.875956535339355
    8. 'if' → logprob: -12.000956535339355
    9. '+' → logprob: -13.500956535339355
    10. 'pr' → logprob: -13.750956535339355

Token 90: ' total' (ID: 3609)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.4440937340259552
    2. ' total' → logprob: -1.1940937042236328
    3. 'value' → logprob: -3.569093704223633
    4. 'total' → logprob: -3.694093704223633
    5. ' ' → logprob: -6.319093704223633
    6. ' (' → logprob: -7.694093704223633
    7. ' not' → logprob: -9.819093704223633
    8. '(value' → logprob: -10.194093704223633
    9. ' abs' → logprob: -10.319093704223633
    10. '  ' → logprob: -10.444093704223633

Token 91: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.004232139326632023
    2. '_' → logprob: -5.504231929779053
    3. '>' → logprob: -9.754232406616211
    4. '_total' → logprob: -10.004232406616211
    5. '_p' → logprob: -11.504232406616211
    6. ' _' → logprob: -11.629232406616211
    7. '```' → logprob: -11.629232406616211
    8. '_Pr' → logprob: -12.129232406616211
    9. '_pres' → logprob: -13.129232406616211
    10. '_price' → logprob: -13.379232406616211

Token 92: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.002536067273467779
    2. 't' → logprob: -6.502536296844482
    3. 'ze' → logprob: -7.252536296844482
    4. '>' → logprob: -9.002535820007324
    5. 'e' → logprob: -9.627535820007324
    6. '```' → logprob: -10.252535820007324
    7. 'iz' → logprob: -10.877535820007324
    8. ' ' → logprob: -11.127535820007324
    9. '_' → logprob: -11.627535820007324
    10. 'z' → logprob: -12.002535820007324

Token 93: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05706363916397095
    2. '>' → logprob: -3.432063579559326
    3. ' ==' → logprob: -3.807063579559326
    4. '==' → logprob: -7.557063579559326
    5. ' >=' → logprob: -8.057064056396484
    6. ' !=' → logprob: -9.807064056396484
    7. ':' → logprob: -11.057064056396484
    8. '>=' → logprob: -11.682064056396484
    9. ' ' → logprob: -12.182064056396484
    10. ' <' → logprob: -12.932064056396484

Token 94: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5175393223762512
    2. '0' → logprob: -1.0175392627716064
    3. '600' → logprob: -3.3925392627716064
    4. '300' → logprob: -4.7675395011901855
    5. '400' → logprob: -8.517539024353027
    6. '200' → logprob: -9.767539024353027
    7. '6' → logprob: -10.767539024353027
    8. '  ' → logprob: -11.142539024353027
    9. '100' → logprob: -11.392539024353027
    10. '60' → logprob: -11.517539024353027

Token 95: '600' (ID: 6718)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08576782047748566
    2. '600' → logprob: -2.8357677459716797
    3. ' ' → logprob: -3.9607677459716797
    4. '300' → logprob: -5.58576774597168
    5. '400' → logprob: -8.33576774597168
    6. '500' → logprob: -8.83576774597168
    7. '200' → logprob: -8.96076774597168
    8. '100' → logprob: -9.08576774597168
    9. '6' → logprob: -10.96076774597168
    10. '60' → logprob: -11.21076774597168

Token 96: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.3949044942855835
    2. '00' → logprob: -1.1449044942855835
    3. '0' → logprob: -4.894904613494873
    4. '_' → logprob: -8.519904136657715
    5. ':' → logprob: -8.644904136657715
    6. ' ' → logprob: -9.269904136657715
    7. '   ' → logprob: -10.644904136657715
    8. ''' → logprob: -12.832404136657715
    9. 'else' → logprob: -13.144904136657715
    10. '```' → logprob: -13.207404136657715

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00318912067450583
    2. ':
' → logprob: -5.7531890869140625
    3. ' :' → logprob: -12.128189086914062
    4. '   ' → logprob: -12.628189086914062
    5. ':

' → logprob: -14.253189086914062
    6. 'print' → logprob: -14.753189086914062
    7. ' and' → logprob: -15.128189086914062
    8. '):' → logprob: -15.128189086914062
    9. ':return' → logprob: -15.128189086914062
    10. ':
' → logprob: -15.253189086914062

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059711623936891556
    2. 'print' → logprob: -3.8097116947174072
    3. '
' → logprob: -4.059711456298828
    4. '\n' → logprob: -4.809711456298828
    5. '    
' → logprob: -5.184711456298828
    6. ' print' → logprob: -6.059711456298828
    7. '\' → logprob: -6.934711456298828
    8. '```' → logprob: -8.059711456298828
    9. ' +' → logprob: -8.809711456298828
    10. '+' → logprob: -8.934711456298828

Token 99: ' total' (ID: 3609)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7784985899925232
    2. 'print' → logprob: -1.403498649597168
    3. '   ' → logprob: -1.653498649597168
    4. ' total' → logprob: -2.528498649597168
    5. 'total' (adapté à ' total') → logprob: -4.903498649597168
    6. '
' → logprob: -5.028498649597168
    7. '\n' → logprob: -5.153498649597168
    8. ' prize' → logprob: -6.278498649597168
    9. '\' → logprob: -7.653498649597168
    10. '    
' → logprob: -8.278498649597168

Token 100: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.0016343588940799236
    2. '_' → logprob: -7.501634120941162
    3. '_print' → logprob: -7.501634120941162
    4. 'print' → logprob: -7.876634120941162
    5. 'pr' → logprob: -9.62663459777832
    6. '_p' → logprob: -10.50163459777832
    7. 'Prize' → logprob: -11.75163459777832
    8. '   ' → logprob: -12.25163459777832
    9. '_score' → logprob: -12.37663459777832
    10. '_output' → logprob: -12.37663459777832

Token 101: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.014155636541545391
    2. '_' → logprob: -5.014155864715576
    3. 'iz' → logprob: -5.889155864715576
    4. 'i' → logprob: -6.139155864715576
    5. '   ' → logprob: -8.014155387878418
    6. 'ze' → logprob: -8.014155387878418
    7. 'z' → logprob: -8.514155387878418
    8. '_size' → logprob: -8.889155387878418
    9. 'e' → logprob: -9.014155387878418
    10. '_pr' → logprob: -9.139155387878418

Token 102: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -1.3116179704666138
    2. ' +=' → logprob: -1.8116179704666138
    3. ' =' → logprob: -2.186617851257324
    4. 'print' → logprob: -2.311617851257324
    5. '*' → logprob: -2.311617851257324
    6. '=' → logprob: -2.811617851257324
    7. ' *' → logprob: -3.061617851257324
    8. ' //' → logprob: -3.061617851257324
    9. ' ' → logprob: -3.436617851257324
    10. ',' → logprob: -4.311617851257324

Token 103: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5109416842460632
    2. ' ' → logprob: -1.635941743850708
    3. '900' → logprob: -1.760941743850708
    4. '150' → logprob: -4.760941505432129
    5. '750' → logprob: -5.135941505432129
    6. '120' → logprob: -5.510941505432129
    7. '800' → logprob: -5.635941505432129
    8. '500' → logprob: -5.760941505432129
    9. '600' → logprob: -6.635941505432129
    10. '450' → logprob: -6.635941505432129

Token 104: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6336855888366699
    2. '500' → logprob: -0.8836855888366699
    3. '400' → logprob: -4.25868558883667
    4. '600' → logprob: -4.50868558883667
    5. '300' → logprob: -4.75868558883667
    6. '700' → logprob: -5.13368558883667
    7. '800' → logprob: -5.50868558883667
    8. '1' → logprob: -6.25868558883667
    9. '350' → logprob: -6.38368558883667
    10. '450' → logprob: -6.50868558883667

Token 105: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.016495520249009132
    2. '00' → logprob: -4.641495704650879
    3. '0' → logprob: -5.016495704650879
    4. '_' → logprob: -11.266495704650879
    5. '*' → logprob: -11.516495704650879
    6. '```' → logprob: -11.891495704650879
    7. ' ' → logprob: -11.953995704650879
    8. ''' → logprob: -12.016495704650879
    9. ',' → logprob: -12.141495704650879
    10. 'print' → logprob: -12.453995704650879

Token 106: '0' (ID: 15)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009769558673724532
    2. '
' → logprob: -7.250977039337158
    3. '<|end|>' → logprob: -9.3759765625
    4. 'elif' → logprob: -9.8759765625
    5. 'else' → logprob: -10.1259765625
    6. ' print' → logprob: -10.3759765625
    7. '#' → logprob: -10.6259765625
    8. '```' → logprob: -11.2509765625
    9. '\n' → logprob: -12.6259765625
    10. ')' → logprob: -12.6259765625

Token 107: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011378349736332893
    2. 'elif' → logprob: -7.376137733459473
    3. 'else' → logprob: -8.251137733459473
    4. '<|end|>' → logprob: -9.501137733459473
    5. ' print' → logprob: -9.876137733459473
    6. '
' → logprob: -10.126137733459473
    7. '```' → logprob: -10.251137733459473
    8. '#' → logprob: -10.501137733459473
    9. ')' → logprob: -12.501137733459473
    10. '    
' → logprob: -13.126137733459473

Token 108: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.23917081207037e-05
    2. '
' → logprob: -10.250041961669922
    3. ' print' → logprob: -12.375041961669922
    4. '```' → logprob: -13.125041961669922
    5. '<|end|>' → logprob: -15.125041961669922
    6. '\' → logprob: -15.875041961669922
    7. '\n' → logprob: -16.000041961669922
    8. '#' → logprob: -17.000041961669922
    9. '\
' → logprob: -17.125041961669922
    10. '#print' → logprob: -17.125041961669922

Token 109: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.4741237461566925
    2. '(' → logprob: -0.9741237163543701
    3. '('' → logprob: -11.09912395477295
    4. '()' → logprob: -11.47412395477295
    5. '("("' → logprob: -11.59912395477295
    6. 'total' → logprob: -12.09912395477295
    7. '(value' → logprob: -12.97412395477295
    8. '(f' → logprob: -14.22412395477295
    9. '(sum' → logprob: -14.22412395477295
    10. ' (' → logprob: -14.22412395477295

Token 110: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -1.4736459888808895e-05
    2. 'pr' → logprob: -11.250014305114746
    3. '_total' → logprob: -14.500014305114746
    4. '_' → logprob: -14.750014305114746
    5. 'Prize' → logprob: -15.250014305114746
    6. '_p' → logprob: -15.500014305114746
    7. '_price' → logprob: -15.875014305114746
    8. ')' → logprob: -16.250015258789062
    9. '_Pr' → logprob: -16.500015258789062
    10. '_value' → logprob: -17.500015258789062

Token 111: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.28189197182655334
    2. 'ze' → logprob: -1.406891942024231
    3. 't' → logprob: -7.781891822814941
    4. 'e' → logprob: -8.906891822814941
    5. 'total' → logprob: -9.156891822814941
    6. '_total' → logprob: -10.281891822814941
    7. 'z' → logprob: -11.031891822814941
    8. '_' → logprob: -12.031891822814941
    9. 'value' → logprob: -12.156891822814941
    10. 'pr' → logprob: -12.531891822814941

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.875
    3. ')`' → logprob: -15.875
    4. ' )' → logprob: -16.5
    5. '`)' → logprob: -19.125
    6. ')}' → logprob: -19.25
    7. '')' → logprob: -20.0
    8. ')
' → logprob: -20.0
    9. '()' → logprob: -20.375
    10. '())' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 110
Tokens correctement prédits (1ère position, stricte): 62
Tokens correctement prédits (1ère position, avec adaptation): 62
Tokens correctement prédits (top 10): 96
Précision stricte (1ère position): 56.36%
Précision adaptée (1ère position): 56.36%
Précision (top 10): 87.27%
================================================================================
