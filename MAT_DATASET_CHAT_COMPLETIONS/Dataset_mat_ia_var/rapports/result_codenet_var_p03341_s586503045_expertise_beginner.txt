================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

n = int(sys.stdin.readline())
s = sys.stdin.readline().strip()

w = 0
e = 0

for i in range(1, len(s)):
    if s[i] == 'E':
        e += 1

min_count = e

for i in range(1, len(s)):
    if s[i - 1] == 'W':
        w += 1
    if s[i] == 'E':
        e -= 1
    count = w + e
    if count < min_count:
        min_count = count

print(min_count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1765799522399902
    2. '=' → logprob: -1.1765799522399902
    3. ' ' → logprob: -1.5515799522399902
    4. ' =' → logprob: -2.5515799522399902
    5. '_' → logprob: -3.1765799522399902
    6. 'u' → logprob: -3.8015799522399902
    7. 'e' → logprob: -5.17657995223999
    8. 'a' → logprob: -5.42657995223999
    9. ',' → logprob: -5.67657995223999
    10. 'umber' → logprob: -6.05157995223999

Token 5: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.019662216305732727
    2. ' ' → logprob: -4.644662380218506
    3. 'int' → logprob: -4.644662380218506
    4. '10' → logprob: -9.394661903381348
    5. ' input' → logprob: -9.519661903381348
    6. ' sys' → logprob: -10.769661903381348
    7. '=int' → logprob: -11.519661903381348
    8. ' len' → logprob: -11.519661903381348
    9. 'input' → logprob: -11.769661903381348
    10. '1' → logprob: -11.769661903381348

Token 6: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.779520092299208e-05
    2. '(sys' → logprob: -10.875078201293945
    3. '('' → logprob: -11.250078201293945
    4. ' (' → logprob: -11.375078201293945
    5. '()' → logprob: -11.875078201293945
    6. '(input' → logprob: -12.500078201293945
    7. '("("' → logprob: -12.625078201293945
    8. '```' → logprob: -12.625078201293945
    9. '(n' → logprob: -12.875078201293945
    10. '`' → logprob: -13.125078201293945

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003648772370070219
    2. '.)' → logprob: -5.75364875793457
    3. '.stdin' → logprob: -8.87864875793457
    4. '.argv' → logprob: -9.12864875793457
    5. ')' → logprob: -9.50364875793457
    6. '.")' → logprob: -9.87864875793457
    7. '.')' → logprob: -10.25364875793457
    8. '.readline' → logprob: -10.62864875793457
    9. '.import' → logprob: -11.87864875793457
    10. '.​' → logprob: -12.00364875793457

Token 8: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5940781235694885
    2. '.readline' → logprob: -0.8440781235694885
    3. '.read' → logprob: -4.094078063964844
    4. '.)' → logprob: -6.844078063964844
    5. ')' → logprob: -8.719078063964844
    6. '.Read' → logprob: -10.594078063964844
    7. '[' → logprob: -11.469078063964844
    8. '.")' → logprob: -11.594078063964844
    9. '.readlines' → logprob: -11.969078063964844
    10. ' .' → logprob: -11.969078063964844

Token 9: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05101293697953224
    2. '()' → logprob: -3.0510129928588867
    3. ')' → logprob: -6.551012992858887
    4. '().' → logprob: -7.051012992858887
    5. '()))' → logprob: -10.051012992858887
    6. '(' → logprob: -10.551012992858887
    7. ' ())' → logprob: -10.551012992858887
    8. '()[' → logprob: -11.301012992858887
    9. '())
' → logprob: -12.176012992858887
    10. '('' → logprob: -12.176012992858887

Token 10: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4990227222442627
    2. 'if' → logprob: -1.4990227222442627
    3. '\n' → logprob: -3.3740227222442627
    4. ')' → logprob: -3.4990227222442627
    5. 'data' → logprob: -3.4990227222442627
    6. 'print' → logprob: -4.624022483825684
    7. 's' → logprob: -4.999022483825684
    8. 'a' → logprob: -4.999022483825684
    9. 'result' → logprob: -5.124022483825684
    10. '.' → logprob: -5.374022483825684

Token 11: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10544703900814056
    2. '[' → logprob: -3.4804470539093018
    3. 'tr' → logprob: -4.230446815490723
    4. '=' → logprob: -4.480446815490723
    5. ' =' → logprob: -4.480446815490723
    6. 't' → logprob: -4.605446815490723
    7. 'um' → logprob: -4.730446815490723
    8. 'u' → logprob: -4.980446815490723
    9. '.=' → logprob: -7.355446815490723
    10. '[i' → logprob: -7.480446815490723

Token 12: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0742877945303917
    2. 'sys' → logprob: -3.0742878913879395
    3. ' input' → logprob: -3.9492878913879395
    4. 'input' → logprob: -5.1992878913879395
    5. ' ' → logprob: -8.824287414550781
    6. ''' → logprob: -9.074287414550781
    7. ''s' → logprob: -9.699287414550781
    8. ' '' → logprob: -9.824287414550781
    9. '"' → logprob: -9.949287414550781
    10. '=sys' → logprob: -10.074287414550781

Token 13: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0034101319033652544
    2. '.readline' → logprob: -6.003410339355469
    3. '.stdin' → logprob: -7.253410339355469
    4. '.stdout' → logprob: -9.128410339355469
    5. '.argv' → logprob: -10.003410339355469
    6. ' .' → logprob: -11.503410339355469
    7. '.read' → logprob: -11.878410339355469
    8. '.
' → logprob: -12.003410339355469
    9. '[' → logprob: -12.128410339355469
    10. '<|end|>' → logprob: -12.378410339355469

Token 14: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0005431424942798913
    2. '.read' → logprob: -8.125543594360352
    3. '.' → logprob: -8.375543594360352
    4. '.readlines' → logprob: -11.125543594360352
    5. ' readline' → logprob: -13.875543594360352
    6. '.Read' → logprob: -14.875543594360352
    7. '.write' → logprob: -15.375543594360352
    8. 'read' → logprob: -15.500543594360352
    9. ' .' → logprob: -16.37554359436035
    10. '().' → logprob: -16.75054359436035

Token 15: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0443560965359211
    2. '(' → logprob: -3.169356107711792
    3. '().' → logprob: -7.044355869293213
    4. ')' → logprob: -8.919356346130371
    5. '.' → logprob: -9.794356346130371
    6. '"' → logprob: -9.919356346130371
    7. ' ()' → logprob: -10.169356346130371
    8. '```' → logprob: -10.419356346130371
    9. '())' → logprob: -10.544356346130371
    10. ''s' → logprob: -10.669356346130371

Token 16: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00317783304490149
    2. 'rstrip' → logprob: -5.753177642822266
    3. 'split' → logprob: -16.628177642822266
    4. ' strip' → logprob: -16.878177642822266
    5. '_strip' → logprob: -18.128177642822266
    6. 'replace' → logprob: -18.628177642822266
    7. 'read' → logprob: -19.753177642822266
    8. '.strip' → logprob: -20.003177642822266
    9. 'str' → logprob: -20.253177642822266
    10. '-strip' → logprob: -20.253177642822266

Token 17: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020570848137140274
    2. '(' → logprob: -3.895570755004883
    3. '()`' → logprob: -12.270570755004883
    4. '())' → logprob: -12.645570755004883
    5. ' ()' → logprob: -13.020570755004883
    6. '`()' → logprob: -13.145570755004883
    7. '('' → logprob: -13.395570755004883
    8. '(

' → logprob: -13.895570755004883
    9. '()(' → logprob: -13.895570755004883
    10. '(()' → logprob: -14.020570755004883

Token 18: 'w' (ID: 86)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5841652750968933
    2. 'count' → logprob: -1.959165334701538
    3. 'result' → logprob: -2.459165334701538
    4. 'i' → logprob: -2.584165334701538
    5. 'for' → logprob: -2.834165334701538
    6. 'c' → logprob: -3.709165334701538
    7. 'f' → logprob: -3.709165334701538
    8. 'd' → logprob: -4.959165096282959
    9. 'r' → logprob: -5.084165096282959
    10. 'a' → logprob: -5.584165096282959

Token 19: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3306374549865723
    2. '_' → logprob: -1.5806374549865723
    3. '=' → logprob: -1.7056374549865723
    4. 'h' → logprob: -1.8306374549865723
    5. 'hile' → logprob: -2.8306374549865723
    6. ' =' → logprob: -3.0806374549865723
    7. 'i' → logprob: -3.7056374549865723
    8. '.' → logprob: -3.9556374549865723
    9. '[' → logprob: -4.830637454986572
    10. '_i' → logprob: -5.205637454986572

Token 20: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.193871021270752
    2. 's' → logprob: -1.818871021270752
    3. '[]' → logprob: -1.943871021270752
    4. '0' → logprob: -2.318871021270752
    5. 'set' → logprob: -2.943871021270752
    6. ' []' → logprob: -3.068871021270752
    7. ' {}' → logprob: -3.068871021270752
    8. '""' → logprob: -3.568871021270752
    9. ' s' → logprob: -3.693871021270752
    10. 'len' → logprob: -3.693871021270752

Token 21: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.6204890608787537
    2. '0' → logprob: -2.3704891204833984
    3. '""' → logprob: -2.7454891204833984
    4. 's' → logprob: -2.7454891204833984
    5. '[]' → logprob: -2.7454891204833984
    6. '[' → logprob: -3.2454891204833984
    7. 'set' → logprob: -3.4954891204833984
    8. 'len' → logprob: -3.6204891204833984
    9. '{' → logprob: -3.9954891204833984
    10. '''' → logprob: -3.9954891204833984

Token 22: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15605148673057556
    2. 'f' → logprob: -2.7810513973236084
    3. 'i' → logprob: -2.9060513973236084
    4. ' for' → logprob: -4.5310516357421875
    5. '+' → logprob: -5.0310516357421875
    6. ' ' → logprob: -6.0310516357421875
    7. '=' → logprob: -6.1560516357421875
    8. 't' → logprob: -6.9060516357421875
    9. '_' → logprob: -7.4060516357421875
    10. ',' → logprob: -7.6560516357421875

Token 23: 'e' (ID: 68)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1894015520811081
    2. 'f' → logprob: -2.064401626586914
    3. 'i' → logprob: -3.189401626586914
    4. '=' → logprob: -6.564401626586914
    5. 'c' → logprob: -7.814401626586914
    6. 'd' → logprob: -7.814401626586914
    7. ' for' → logprob: -7.939401626586914
    8. 't' → logprob: -8.189401626586914
    9. 'p' → logprob: -8.314401626586914
    10. 'a' → logprob: -8.314401626586914

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6261241436004639
    2. 'w' → logprob: -1.8761241436004639
    3. 'q' → logprob: -2.251124143600464
    4. ' =' → logprob: -2.251124143600464
    5. '+' → logprob: -3.876124143600464
    6. 'a' → logprob: -4.001124382019043
    7. '_' → logprob: -4.376124382019043
    8. 'n' → logprob: -4.376124382019043
    9. 'nd' → logprob: -5.126124382019043
    10. 'r' → logprob: -5.126124382019043

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5405517816543579
    2. ' ' → logprob: -0.9155517816543579
    3. ' n' → logprob: -4.915551662445068
    4. ' w' → logprob: -5.915551662445068
    5. 'n' → logprob: -6.290551662445068
    6. 'w' → logprob: -6.415551662445068
    7. ' len' → logprob: -6.415551662445068
    8. 'len' → logprob: -6.540551662445068
    9. ' s' → logprob: -8.415552139282227
    10. 's' → logprob: -8.540552139282227

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011437999084591866
    2. 'n' → logprob: -5.261437892913818
    3. ' ' → logprob: -5.636437892913818
    4. 'w' → logprob: -6.761437892913818
    5. 'len' → logprob: -7.261437892913818
    6. 's' → logprob: -7.886437892913818
    7. '1' → logprob: -8.636438369750977
    8. ' n' → logprob: -9.636438369750977
    9. ' len' → logprob: -11.136438369750977
    10. '100' → logprob: -11.323938369750977

Token 27: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.054358888417482376
    2. '
' → logprob: -3.054358959197998
    3. ' for' → logprob: -5.929358959197998
    4. 'f' → logprob: -7.054358959197998
    5. '\n' → logprob: -7.054358959197998
    6. 'n' → logprob: -7.804358959197998
    7. 'i' → logprob: -8.42935848236084
    8. '<|end|>' → logprob: -8.42935848236084
    9. 't' → logprob: -8.92935848236084
    10. '' → logprob: -9.30435848236084

Token 28: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00027933192905038595
    2. 'f' → logprob: -8.250279426574707
    3. 'i' → logprob: -11.250279426574707
    4. ' for' → logprob: -13.250279426574707
    5. 'if' → logprob: -13.625279426574707
    6. 'r' → logprob: -14.375279426574707
    7. 'd' → logprob: -14.500279426574707
    8. '```' → logprob: -15.125279426574707
    9. 't' → logprob: -15.375279426574707
    10. '
' → logprob: -16.00027847290039

Token 29: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0032084921840578318
    2. ' i' → logprob: -5.878208637237549
    3. '  ' → logprob: -8.25320816040039
    4. ' _' → logprob: -9.25320816040039
    5. '_' → logprob: -10.62820816040039
    6. ' s' → logprob: -11.87820816040039
    7. 'i' → logprob: -12.75320816040039
    8. ' c' → logprob: -12.87820816040039
    9. ' ‌' → logprob: -13.12820816040039
    10. ' )' → logprob: -13.25320816040039

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048179615288972855
    2. 'in' → logprob: -3.1731796264648438
    3. ' ' → logprob: -5.298179626464844
    4. 'n' → logprob: -9.548179626464844
    5. '  ' → logprob: -9.923179626464844
    6. ' n' → logprob: -10.923179626464844
    7. ',' → logprob: -11.673179626464844
    8. '	in' → logprob: -12.173179626464844
    9. ' i' → logprob: -13.423179626464844
    10. ' ,' → logprob: -13.423179626464844

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.15769454836845398
    2. ' s' → logprob: -2.1576945781707764
    3. 'range' → logprob: -3.7826945781707764
    4. 's' → logprob: -4.907694339752197
    5. ' ' → logprob: -9.157694816589355
    6. '  ' → logprob: -12.157694816589355
    7. '(range' → logprob: -12.220194816589355
    8. ' xrange' → logprob: -12.345194816589355
    9. '	range' → logprob: -12.595194816589355
    10. '   ' → logprob: -12.782694816589355

Token 32: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2527613043785095
    2. '(' → logprob: -1.5027613639831543
    3. '(len' → logprob: -7.127761363983154
    4. '(s' → logprob: -11.127760887145996
    5. ' (' → logprob: -11.627760887145996
    6. '(range' → logprob: -13.377760887145996
    7. '(length' → logprob: -13.752760887145996
    8. '(i' → logprob: -14.502760887145996
    9. '(
' → logprob: -14.502760887145996
    10. '(w' → logprob: -14.877760887145996

Token 33: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.301394023466855e-05
    2. 'len' → logprob: -9.750062942504883
    3. '1' → logprob: -13.000062942504883
    4. ' n' → logprob: -13.625062942504883
    5. ')n' → logprob: -14.375062942504883
    6. ')' → logprob: -15.375062942504883
    7. '0' → logprob: -15.500062942504883
    8. 's' → logprob: -16.625062942504883
    9. '(n' → logprob: -16.875062942504883
    10. '2' → logprob: -17.375062942504883

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038486516568809748
    2. ',n' → logprob: -5.628848552703857
    3. ' ,' → logprob: -8.753849029541016
    4. '(n' → logprob: -10.253849029541016
    5. ',len' → logprob: -10.628849029541016
    6. ' n' → logprob: -11.003849029541016
    7. 'n' → logprob: -11.378849029541016
    8. '(len' → logprob: -13.253849029541016
    9. '(' → logprob: -14.003849029541016
    10. ',
' → logprob: -15.503849029541016

Token 35: ' len' (ID: 4631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16046611964702606
    2. ' n' → logprob: -1.9104660749435425
    3. ' len' → logprob: -8.910466194152832
    4. 'len' → logprob: -9.285466194152832
    5. ' ' → logprob: -11.660466194152832
    6. '	n' → logprob: -12.910466194152832
    7. ')' → logprob: -14.535466194152832
    8. '2' → logprob: -15.035466194152832
    9. ')n' → logprob: -15.535466194152832
    10. '6' → logprob: -15.535466194152832

Token 36: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00043698702938854694
    2. '(' → logprob: -7.750436782836914
    3. 's' → logprob: -12.750436782836914
    4. '(n' → logprob: -12.750436782836914
    5. ' (' → logprob: -15.375436782836914
    6. '(w' → logprob: -15.750436782836914
    7. ')' → logprob: -16.875436782836914
    8. '(e' → logprob: -17.750436782836914
    9. '(
' → logprob: -18.375436782836914
    10. '(a' → logprob: -18.625436782836914

Token 37: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6938181519508362
    2. ')):' → logprob: -0.6938181519508362
    3. ')' → logprob: -8.443818092346191
    4. ' ):' → logprob: -8.568818092346191
    5. '))' → logprob: -9.068818092346191
    6. ')):
' → logprob: -9.443818092346191
    7. '():' → logprob: -10.693818092346191
    8. ' ' → logprob: -10.818818092346191
    9. ':' → logprob: -11.193818092346191
    10. '):
' → logprob: -12.318818092346191

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42722243070602417
    2. ' ' → logprob: -1.552222490310669
    3. '<|end|>' → logprob: -2.802222490310669
    4. ' 
' → logprob: -3.802222490310669
    5. '  ' → logprob: -4.42722225189209
    6. '  
' → logprob: -4.55222225189209
    7. ':' → logprob: -4.67722225189209
    8. '    
' → logprob: -4.92722225189209
    9. ' if' → logprob: -5.55222225189209
    10. '
' → logprob: -5.80222225189209

Token 39: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13117754459381104
    2. ' 
' → logprob: -2.8811774253845215
    3. '   ' → logprob: -3.8811774253845215
    4. ' if' → logprob: -4.0061774253845215
    5. '    ' → logprob: -4.3811774253845215
    6. 'if' (adapté à ' if') → logprob: -5.1311774253845215
    7. '     
' → logprob: -6.2561774253845215
    8. '    
' → logprob: -6.3811774253845215
    9. '<|end|>' → logprob: -6.3811774253845215
    10. '  ' → logprob: -7.0061774253845215

Token 40: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.007667790167033672
    2. 's' → logprob: -4.8826680183410645
    3. ' ' → logprob: -9.757667541503906
    4. '  ' → logprob: -13.257667541503906
    5. '   ' → logprob: -14.007667541503906
    6. '    ' → logprob: -15.007667541503906
    7. '	s' → logprob: -15.007667541503906
    8. '(s' → logprob: -15.382667541503906
    9. ' ' → logprob: -15.507667541503906
    10. '_s' → logprob: -17.257667541503906

Token 41: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.500003814697266
    3. '[I' → logprob: -16.250003814697266
    4. ' [' → logprob: -17.625003814697266
    5. '[n' → logprob: -17.625003814697266
    6. '```' → logprob: -18.000003814697266
    7. 'i' → logprob: -18.125003814697266
    8. '[j' → logprob: -18.375003814697266
    9. '[s' → logprob: -18.750003814697266
    10. '[a' → logprob: -19.375003814697266

Token 42: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01340926717966795
    2. ']==' → logprob: -4.38840913772583
    3. '==' → logprob: -7.51340913772583
    4. '=' → logprob: -9.513409614562988
    5. ']=='' → logprob: -9.513409614562988
    6. '-' → logprob: -9.638409614562988
    7. ' ]' → logprob: -10.013409614562988
    8. ' ==' → logprob: -10.638409614562988
    9. ']!=' → logprob: -10.888409614562988
    10. ':]' → logprob: -11.638409614562988

Token 43: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18002286553382874
    2. ' ==' → logprob: -1.9300228357315063
    3. '!=' → logprob: -4.805022716522217
    4. '=' → logprob: -5.305022716522217
    5. ' ' → logprob: -6.305022716522217
    6. ' !=' → logprob: -6.430022716522217
    7. '>' → logprob: -7.430022716522217
    8. ']' → logprob: -7.430022716522217
    9. ']==' → logprob: -8.055023193359375
    10. '=='' → logprob: -8.430023193359375

Token 44: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03908342868089676
    2. ''E' → logprob: -3.914083480834961
    3. '"W' → logprob: -5.164083480834961
    4. ''N' → logprob: -5.539083480834961
    5. ''w' → logprob: -5.789083480834961
    6. ''S' → logprob: -6.039083480834961
    7. 'W' → logprob: -6.914083480834961
    8. ' '' → logprob: -7.664083480834961
    9. ''e' → logprob: -7.789083480834961
    10. ''s' → logprob: -8.539083480834961

Token 45: 'E' (ID: 36)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.4619019329547882
    2. ''' → logprob: -1.4619019031524658
    3. 'E' → logprob: -2.836901903152466
    4. ''E' → logprob: -2.961901903152466
    5. ''N' → logprob: -5.086902141571045
    6. 'w' → logprob: -5.336902141571045
    7. 'e' → logprob: -5.836902141571045
    8. ''S' → logprob: -5.961902141571045
    9. '"W' → logprob: -6.211902141571045
    10. 'N' → logprob: -6.211902141571045

Token 46: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5777421593666077
    2. ''' → logprob: -0.8277421593666077
    3. '':
' → logprob: -6.577742099761963
    4. ' ':' → logprob: -9.077742576599121
    5. ':' → logprob: -9.702742576599121
    6. ' '' → logprob: -9.952742576599121
    7. '':
' → logprob: -9.952742576599121
    8. ''s' → logprob: -10.077742576599121
    9. '':

' → logprob: -11.202742576599121
    10. '"' → logprob: -11.327742576599121

Token 47: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14666834473609924
    2. 'e' → logprob: -3.0216684341430664
    3. '       ' → logprob: -3.0216684341430664
    4. ' and' → logprob: -4.521668434143066
    5. '   ' → logprob: -4.896668434143066
    6. ':
' → logprob: -5.021668434143066
    7. 'w' → logprob: -5.271668434143066
    8. ' w' → logprob: -5.896668434143066
    9. '    ' → logprob: -6.646668434143066
    10. ' :' → logprob: -7.396668434143066

Token 48: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.02431575581431389
    2. ' e' → logprob: -4.39931583404541
    3. 'w' → logprob: -4.52431583404541
    4. ' w' → logprob: -7.89931583404541
    5. '           ' → logprob: -8.64931583404541
    6. '	e' → logprob: -9.39931583404541
    7. 'east' → logprob: -9.77431583404541
    8. '       ' → logprob: -9.89931583404541
    9. '   ' → logprob: -10.14931583404541
    10. ' east' → logprob: -10.39931583404541

Token 49: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7215142250061035
    2. '+=' → logprob: -0.8465142250061035
    3. '+' → logprob: -2.4715142250061035
    4. '=' → logprob: -8.346513748168945
    5. '++' → logprob: -8.346513748168945
    6. ' +' → logprob: -9.596513748168945
    7. ' =' → logprob: -9.846513748168945
    8. ' ' → logprob: -11.471513748168945
    9. '+++' → logprob: -12.471513748168945
    10. ']+=' → logprob: -13.346513748168945

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002476016292348504
    2. ' ' → logprob: -6.002476215362549
    3. 'w' → logprob: -16.37747573852539
    4. 's' → logprob: -16.75247573852539
    5. '   ' → logprob: -17.00247573852539
    6. '2' → logprob: -17.50247573852539
    7. 'e' → logprob: -17.50247573852539
    8. '  ' → logprob: -17.62747573852539
    9. ' w' → logprob: -17.75247573852539
    10. 'i' → logprob: -18.12747573852539

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018125296628568321
    2. ' ' → logprob: -8.625181198120117
    3. '-' → logprob: -14.125181198120117
    4. 'w' → logprob: -14.875181198120117
    5. 's' → logprob: -15.750181198120117
    6. '2' → logprob: -16.250181198120117
    7. 'i' → logprob: -16.500181198120117
    8. '0' → logprob: -16.500181198120117
    9. 'e' → logprob: -17.750181198120117
    10. '   ' → logprob: -18.375181198120117

Token 52: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: 'min' (ID: 1493)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.8030543327331543
    2. '<|end|>' → logprob: -1.8030543327331543
    3. 'else' → logprob: -1.9280543327331543
    4. ' else' → logprob: -2.5530543327331543
    5. ' ' → logprob: -2.6780543327331543
    6. ' elif' → logprob: -2.8030543327331543
    7. 'w' → logprob: -4.303054332733154
    8. '```' → logprob: -5.178054332733154
    9. '   ' → logprob: -5.553054332733154
    10. 's' → logprob: -5.678054332733154

Token 54: '_count' (ID: 7536)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.478030264377594
    2. '_' → logprob: -1.3530302047729492
    3. '_left' → logprob: -2.728030204772949
    4. '_diff' → logprob: -3.478030204772949
    5. '_loss' → logprob: -5.478030204772949
    6. '_val' → logprob: -5.728030204772949
    7. '_l' → logprob: -5.853030204772949
    8. '_prefix' → logprob: -6.728030204772949
    9. '_balance' → logprob: -6.853030204772949
    10. '_count' → logprob: -7.228030204772949

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001491411472670734
    2. '=' → logprob: -6.626491546630859
    3. '_' → logprob: -9.00149154663086
    4. 's' → logprob: -10.75149154663086
    5. ' ' → logprob: -11.50149154663086
    6. '  ' → logprob: -12.75149154663086
    7. ',' → logprob: -12.75149154663086
    8. 'w' → logprob: -13.62649154663086
    9. '_w' → logprob: -14.25149154663086
    10. '_=' → logprob: -14.62649154663086

Token 56: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3355230689048767
    2. 'w' → logprob: -1.7105231285095215
    3. 'min' → logprob: -2.8355231285095215
    4. ' e' → logprob: -4.0855231285095215
    5. 'n' → logprob: -4.7105231285095215
    6. 'float' → logprob: -5.5855231285095215
    7. ' w' → logprob: -5.7105231285095215
    8. 'max' → logprob: -5.9605231285095215
    9. 'abs' → logprob: -5.9605231285095215
    10. ' min' → logprob: -5.9605231285095215

Token 57: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41238075494766235
    2. 'w' → logprob: -1.1623806953430176
    3. 'count' → logprob: -4.662380695343018
    4. '```' → logprob: -5.037380695343018
    5. ' for' → logprob: -5.412380695343018
    6. 'left' → logprob: -7.162380695343018
    7. '0' → logprob: -7.287380695343018
    8. 'l' → logprob: -8.037381172180176
    9. '_' → logprob: -8.037381172180176
    10. 'b' → logprob: -8.287381172180176

Token 59: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002514188876375556
    2. ' ' → logprob: -6.502514362335205
    3. 'i' → logprob: -7.002514362335205
    4. '_' → logprob: -10.127513885498047
    5. ' range' → logprob: -10.252513885498047
    6. ' in' → logprob: -12.127513885498047
    7. ' ' → logprob: -12.377513885498047
    8. ' _' → logprob: -12.377513885498047
    9. '  ' → logprob: -12.502513885498047
    10. '<|end|>' → logprob: -13.252513885498047

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0048615653067827225
    2. 'in' → logprob: -5.504861354827881
    3. ' ' → logprob: -7.254861354827881
    4. '  ' → logprob: -10.379861831665039
    5. '(' → logprob: -10.879861831665039
    6. 'range' → logprob: -11.754861831665039
    7. '   ' → logprob: -12.004861831665039
    8. ' range' → logprob: -12.379861831665039
    9. 'n' → logprob: -13.379861831665039
    10. '```' → logprob: -13.629861831665039

Token 61: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00043341092532500625
    2. 'range' → logprob: -7.750433444976807
    3. ' ' → logprob: -13.000432968139648
    4. '(range' → logprob: -15.625432968139648
    5. '	range' → logprob: -15.875432968139648
    6. '  ' → logprob: -16.75043296813965
    7. ' xrange' → logprob: -17.12543296813965
    8. '   ' → logprob: -17.37543296813965
    9. '```' → logprob: -18.25043296813965
    10. 'ange' → logprob: -18.50043296813965

Token 62: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016589936567470431
    2. '(len' → logprob: -6.751658916473389
    3. ' (' → logprob: -7.626658916473389
    4. '(
' → logprob: -14.876659393310547
    5. ' ' → logprob: -15.251659393310547
    6. '(n' → logprob: -15.501659393310547
    7. '(length' → logprob: -15.626659393310547
    8. '1' → logprob: -16.876659393310547
    9. '(l' → logprob: -16.876659393310547
    10. '```' → logprob: -17.126659393310547

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015924450010061264
    2. 'len' → logprob: -4.265924453735352
    3. ' ' → logprob: -7.140924453735352
    4. 'n' → logprob: -7.390924453735352
    5. ' len' → logprob: -8.640924453735352
    6. '2' → logprob: -9.640924453735352
    7. '   ' → logprob: -9.765924453735352
    8. '0' → logprob: -10.265924453735352
    9. ' n' → logprob: -12.015924453735352
    10. '(len' → logprob: -12.890924453735352

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020111948251724243
    2. ',len' → logprob: -6.252011299133301
    3. ' ,' → logprob: -9.8770112991333
    4. 'len' → logprob: -11.1270112991333
    5. ' len' → logprob: -11.6270112991333
    6. '(len' → logprob: -12.5020112991333
    7. '<len' → logprob: -13.5020112991333
    8. '   ' → logprob: -14.1270112991333
    9. 'n' → logprob: -14.3770112991333
    10. ',n' → logprob: -14.3770112991333

Token 65: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.19064868986606598
    2. ' len' → logprob: -1.8156486749649048
    3. 'n' → logprob: -4.815648555755615
    4. ' n' → logprob: -5.940648555755615
    5. '   ' → logprob: -9.190649032592773
    6. '	len' → logprob: -12.190649032592773
    7. ' ' → logprob: -13.565649032592773
    8. '(len' → logprob: -14.065649032592773
    9. '  ' → logprob: -14.190649032592773
    10. '<len' → logprob: -14.815649032592773

Token 66: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.141186450899113e-05
    2. '(' → logprob: -11.125020980834961
    3. 's' → logprob: -12.000020980834961
    4. ')' → logprob: -15.250020980834961
    5. ' (' → logprob: -15.250020980834961
    6. '(n' → logprob: -18.12502098083496
    7. ')s' → logprob: -18.37502098083496
    8. '(S' → logprob: -18.87502098083496
    9. '(code' → logprob: -19.37502098083496
    10. '(w' → logprob: -19.37502098083496

Token 67: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4164371192455292
    2. ')):' → logprob: -1.1664371490478516
    3. ')):
' → logprob: -4.291437149047852
    4. ')' → logprob: -4.791437149047852
    5. '):
' → logprob: -5.041437149047852
    6. '))' → logprob: -7.541437149047852
    7. ' ):' → logprob: -9.916437149047852
    8. ')):
' → logprob: -10.541437149047852
    9. '   ' → logprob: -10.916437149047852
    10. ' ' → logprob: -11.291437149047852

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005069856531918049
    2. ':' → logprob: -6.380069732666016
    3. '```' → logprob: -6.380069732666016
    4. 'if' → logprob: -7.880069732666016
    5. ' ' → logprob: -8.005069732666016
    6. '  ' → logprob: -8.130069732666016
    7. ' if' → logprob: -8.255069732666016
    8. '<|end|>' → logprob: -9.380069732666016
    9. ':
' → logprob: -9.880069732666016
    10. '    
' → logprob: -10.255069732666016

Token 69: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7680111527442932
    2. 'if' (adapté à ' if') → logprob: -1.7680110931396484
    3. '```' → logprob: -2.0180110931396484
    4. ' ' → logprob: -2.1430110931396484
    5. '   ' → logprob: -2.2680110931396484
    6. '    ' → logprob: -6.018011093139648
    7. 'i' → logprob: -6.393011093139648
    8. ' 
' → logprob: -6.393011093139648
    9. '  
' → logprob: -7.143011093139648
    10. '  ' → logprob: -7.268011093139648

Token 70: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1270824372768402
    2. 's' → logprob: -2.127082347869873
    3. ' ' → logprob: -9.252082824707031
    4. '   ' → logprob: -10.252082824707031
    5. '	s' → logprob: -12.127082824707031
    6. '    ' → logprob: -12.502082824707031
    7. '  ' → logprob: -12.814582824707031
    8. ' i' → logprob: -13.439582824707031
    9. ')' → logprob: -13.627082824707031
    10. 'e' → logprob: -13.752082824707031

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012035090912831947
    2. 'i' → logprob: -9.125120162963867
    3. '   ' → logprob: -12.875120162963867
    4. ']' → logprob: -13.000120162963867
    5. '[' → logprob: -13.750120162963867
    6. ''[' → logprob: -13.875120162963867
    7. '-' → logprob: -14.000120162963867
    8. ''i' → logprob: -14.375120162963867
    9. ' ' → logprob: -14.625120162963867
    10. ' ==' → logprob: -14.625120162963867

Token 72: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04372037574648857
    2. '-' → logprob: -3.4187204837799072
    3. ' -' → logprob: -6.043720245361328
    4. ']==' → logprob: -6.168720245361328
    5. '==' → logprob: -6.293720245361328
    6. '']' → logprob: -6.543720245361328
    7. ' ==' → logprob: -6.793720245361328
    8. ' ]' → logprob: -7.668720245361328
    9. ')' → logprob: -8.168720245361328
    10. '   ' → logprob: -8.293720245361328

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7093057036399841
    2. ']' → logprob: -0.9593057036399841
    3. ''E' → logprob: -2.834305763244629
    4. ''s' → logprob: -3.709305763244629
    5. ''e' → logprob: -4.459305763244629
    6. ''' → logprob: -4.459305763244629
    7. ' '' → logprob: -5.209305763244629
    8. '']' → logprob: -5.584305763244629
    9. ''i' → logprob: -5.959305763244629
    10. ' ' → logprob: -6.459305763244629

Token 74: '1' (ID: 16)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.037066925317049026
    2. ''' → logprob: -3.66206693649292
    3. ''S' → logprob: -5.16206693649292
    4. '1' → logprob: -6.03706693649292
    5. ''A' → logprob: -6.91206693649292
    6. ''I' → logprob: -7.41206693649292
    7. ''O' → logprob: -9.162066459655762
    8. ''s' → logprob: -9.287066459655762
    9. ''D' → logprob: -9.287066459655762
    10. ''H' → logprob: -9.287066459655762

Token 75: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02475009858608246
    2. ']==' → logprob: -4.274750232696533
    3. '==' → logprob: -4.899750232696533
    4. ' ==' → logprob: -6.399750232696533
    5. ' ]' → logprob: -7.024750232696533
    6. '   ' → logprob: -8.024749755859375
    7. '    ' → logprob: -9.899749755859375
    8. ']=='' → logprob: -10.149749755859375
    9. '=' → logprob: -10.524749755859375
    10. '	' → logprob: -11.024749755859375

Token 76: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22623836994171143
    2. ' ==' → logprob: -1.6012383699417114
    3. ']==' → logprob: -8.101238250732422
    4. ']' → logprob: -8.851238250732422
    5. '=' → logprob: -8.976238250732422
    6. '   ' → logprob: -9.226238250732422
    7. '    ' → logprob: -10.601238250732422
    8. ' ' → logprob: -10.851238250732422
    9. '	' → logprob: -11.226238250732422
    10. ')' → logprob: -11.226238250732422

Token 77: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.28346186876296997
    2. ''E' → logprob: -1.4084618091583252
    3. ''w' → logprob: -7.158462047576904
    4. ' '' → logprob: -7.783462047576904
    5. ''S' → logprob: -7.783462047576904
    6. '"W' → logprob: -8.408461570739746
    7. 'W' → logprob: -9.283461570739746
    8. ''O' → logprob: -9.283461570739746
    9. 'E' → logprob: -9.908461570739746
    10. ''N' → logprob: -10.033461570739746

Token 78: 'W' (ID: 54)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.5254368782043457
    2. 'W' → logprob: -0.9004368782043457
    3. ''E' → logprob: -6.525436878204346
    4. ''' → logprob: -7.525436878204346
    5. 'S' → logprob: -9.400436401367188
    6. ' W' → logprob: -9.900436401367188
    7. ' E' → logprob: -10.275436401367188
    8. '"W' → logprob: -10.275436401367188
    9. 'w' → logprob: -10.900436401367188
    10. ''S' → logprob: -11.275436401367188

Token 79: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.2570652663707733
    2. '':' → logprob: -1.8820652961730957
    3. ''' → logprob: -2.6320652961730957
    4. ':' → logprob: -6.257065296173096
    5. '':
' → logprob: -8.507064819335938
    6. ' '' → logprob: -9.507064819335938
    7. ''s' → logprob: -9.757064819335938
    8. '':

' → logprob: -10.007064819335938
    9. ':
' → logprob: -10.632064819335938
    10. ''w' → logprob: -11.132064819335938

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7200890779495239
    2. ':' → logprob: -0.8450890779495239
    3. ':
' → logprob: -3.7200889587402344
    4. 'w' → logprob: -3.9700889587402344
    5. 'e' → logprob: -3.9700889587402344
    6. ' and' → logprob: -5.595088958740234
    7. '-' → logprob: -5.845088958740234
    8. '<|end|>' → logprob: -5.845088958740234
    9. '
' → logprob: -5.970088958740234
    10. ' w' → logprob: -6.220088958740234

Token 81: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5864301323890686
    2. 'w' (adapté à ' w') → logprob: -1.7114300727844238
    3. ' e' → logprob: -1.9614300727844238
    4. 'e' → logprob: -2.211430072784424
    5. '           ' → logprob: -4.711430072784424
    6. '   ' → logprob: -6.211430072784424
    7. '       ' → logprob: -7.336430072784424
    8. ' ' → logprob: -7.586430072784424
    9. '    ' → logprob: -8.086430549621582
    10. '  ' → logprob: -9.336430549621582

Token 82: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7247616648674011
    2. '+=' → logprob: -0.7247616648674011
    3. '+' → logprob: -3.474761724472046
    4. ' +' → logprob: -9.224761962890625
    5. '=' → logprob: -10.349761962890625
    6. '1' → logprob: -12.474761962890625
    7. '+='' → logprob: -12.599761962890625
    8. '<|end|>' → logprob: -12.849761962890625
    9. ' ' → logprob: -13.224761962890625
    10. ' =' → logprob: -13.349761962890625

Token 83: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012509774416685104
    2. ' ' → logprob: -4.387509822845459
    3. '   ' → logprob: -17.012510299682617
    4. '-' → logprob: -17.262510299682617
    5. '  ' → logprob: -18.387510299682617
    6. '<|end|>' → logprob: -18.512510299682617
    7. '0' → logprob: -18.637510299682617
    8. ' ' → logprob: -18.762510299682617
    9. ' -' → logprob: -19.262510299682617
    10. '+' → logprob: -19.387510299682617

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.297462171758525e-05
    2. ' ' → logprob: -10.375033378601074
    3. '-' → logprob: -13.375033378601074
    4. '   ' → logprob: -17.000032424926758
    5. ' -' → logprob: -17.875032424926758
    6. '0' → logprob: -18.250032424926758
    7. '  ' → logprob: -18.375032424926758
    8. '+' → logprob: -18.625032424926758
    9. '<|end|>' → logprob: -18.625032424926758
    10. '１' → logprob: -18.875032424926758

Token 85: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02167012169957161
    2. '
' → logprob: -4.271670341491699
    3. '<|end|>' → logprob: -5.521670341491699
    4. '    
' → logprob: -6.146670341491699
    5. '```' → logprob: -7.396670341491699
    6. '<|end|>' → logprob: -8.1466703414917
    7. '  
' → logprob: -8.8966703414917
    8. ' ' → logprob: -9.3966703414917
    9. 'e' → logprob: -10.2716703414917
    10. '  ' → logprob: -10.6466703414917

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009699787013232708
    2. '```' → logprob: -5.384699821472168
    3. '<|end|>' → logprob: -5.884699821472168
    4. '    
' → logprob: -7.009699821472168
    5. ' ' → logprob: -7.884699821472168
    6. '
' → logprob: -8.259699821472168
    7. 'e' → logprob: -8.759699821472168
    8. '``' → logprob: -9.009699821472168
    9. '  ' → logprob: -9.384699821472168
    10. '<|end|>' → logprob: -9.634699821472168

Token 87: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7213976383209229
    2. '   ' → logprob: -1.2213976383209229
    3. 'e' → logprob: -1.7213976383209229
    4. ' ' → logprob: -3.346397638320923
    5. ' if' → logprob: -5.846397399902344
    6. '```' → logprob: -6.721397399902344
    7. '  ' → logprob: -8.471397399902344
    8. 'elif' → logprob: -8.846397399902344
    9. 'If' → logprob: -8.971397399902344
    10. '    ' → logprob: -8.971397399902344

Token 88: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.17983026802539825
    2. 's' → logprob: -1.8048303127288818
    3. 'e' → logprob: -10.179830551147461
    4. ' ' → logprob: -10.804830551147461
    5. ' e' → logprob: -10.929830551147461
    6. '   ' → logprob: -11.929830551147461
    7. '	s' → logprob: -14.054830551147461
    8. '  ' → logprob: -14.179830551147461
    9. ' ' → logprob: -15.304830551147461
    10. ''s' → logprob: -15.679830551147461

Token 89: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. '`' → logprob: -14.12500286102295
    3. '[' → logprob: -14.25000286102295
    4. '[I' → logprob: -14.87500286102295
    5. '```' → logprob: -15.00000286102295
    6. 's' → logprob: -16.250001907348633
    7. 'i' → logprob: -16.750001907348633
    8. '[
' → logprob: -17.125001907348633
    9. ''[' → logprob: -17.250001907348633
    10. ' ' → logprob: -17.375001907348633

Token 90: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009376360103487968
    2. '-' → logprob: -5.134376525878906
    3. ']==' → logprob: -6.509376525878906
    4. '']' → logprob: -7.009376525878906
    5. ' -' → logprob: -7.384376525878906
    6. ' ]' → logprob: -8.634376525878906
    7. ' ==' → logprob: -9.759376525878906
    8. ']=='' → logprob: -9.884376525878906
    9. '   ' → logprob: -10.009376525878906
    10. '==' → logprob: -10.259376525878906

Token 91: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28729671239852905
    2. '==' → logprob: -1.5372967720031738
    3. '=='' → logprob: -3.912296772003174
    4. ''' → logprob: -4.287296772003174
    5. '=' → logprob: -8.287296295166016
    6. ' ' → logprob: -8.912296295166016
    7. ' =='' → logprob: -8.912296295166016
    8. '   ' → logprob: -9.162296295166016
    9. '  ' → logprob: -9.287296295166016
    10. '    ' → logprob: -10.287296295166016

Token 92: ' '' (ID: 461)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.0005801965016871691
    2. ''' → logprob: -7.750580310821533
    3. ' '' → logprob: -9.625579833984375
    4. ''e' → logprob: -10.375579833984375
    5. ' ' → logprob: -11.000579833984375
    6. 'E' → logprob: -11.500579833984375
    7. '’E' → logprob: -11.625579833984375
    8. '   ' → logprob: -12.125579833984375
    9. ''S' → logprob: -12.250579833984375
    10. '  ' → logprob: -12.500579833984375

Token 93: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.19896307587623596
    2. ''E' → logprob: -2.323963165283203
    3. 'W' → logprob: -2.698963165283203
    4. ''' → logprob: -4.198963165283203
    5. '’E' → logprob: -9.698963165283203
    6. '"E' → logprob: -10.698963165283203
    7. ''S' → logprob: -10.823963165283203
    8. 'e' → logprob: -10.948963165283203
    9. ''w' → logprob: -10.948963165283203
    10. ' E' → logprob: -11.073963165283203

Token 94: '':
' (ID: 7669)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010221702046692371
    2. ''):
' → logprob: -5.510221481323242
    3. ''' → logprob: -5.635221481323242
    4. '':
' → logprob: -6.510221481323242
    5. '':' → logprob: -7.510221481323242
    6. '')' → logprob: -8.635221481323242
    7. '       ' → logprob: -8.885221481323242
    8. ' -' → logprob: -9.635221481323242
    9. ''):' → logprob: -10.760221481323242
    10. '):
' → logprob: -11.010221481323242

Token 95: '       ' (ID: 309)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1543191820383072
    2. '       ' → logprob: -2.1543192863464355
    3. '   ' → logprob: -4.0293192863464355
    4. ' e' → logprob: -5.1543192863464355
    5. '-' → logprob: -5.7793192863464355
    6. ' ' → logprob: -8.904318809509277
    7. ' -' → logprob: -9.654318809509277
    8. 'w' → logprob: -10.404318809509277
    9. '-e' → logprob: -10.404318809509277
    10. '```' → logprob: -10.779318809509277

Token 96: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -4.0722858102526516e-05
    2. '   ' → logprob: -10.875041007995605
    3. ' e' → logprob: -10.875041007995605
    4. '	e' → logprob: -13.375041007995605
    5. '       ' → logprob: -14.250041007995605
    6. '-' → logprob: -14.625041007995605
    7. ' ' → logprob: -17.00004005432129
    8. '           ' → logprob: -17.12504005432129
    9. '```' → logprob: -17.12504005432129
    10. '_e' → logprob: -18.37504005432129

Token 97: ' -=' (ID: 12583)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31918972730636597
    2. '-=' → logprob: -1.3191897869110107
    3. ' -=' → logprob: -5.194189548492432
    4. '=' → logprob: -8.69419002532959
    5. ' -' → logprob: -9.31919002532959
    6. ' ' → logprob: -10.06919002532959
    7. '   ' → logprob: -10.44419002532959
    8. '```' → logprob: -11.69419002532959
    9. '       ' → logprob: -12.19419002532959
    10. '+=' → logprob: -12.44419002532959

Token 98: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -16.750627517700195
    4. '```' → logprob: -17.875627517700195
    5. '0' → logprob: -18.750627517700195
    6. '<|end|>' → logprob: -19.625627517700195
    7. '１' → logprob: -20.125627517700195
    8. ' ' → logprob: -20.250627517700195
    9. '  ' → logprob: -20.375627517700195
    10. '       ' → logprob: -20.500627517700195

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '<|end|>' → logprob: -18.875
    4. '```' → logprob: -19.25
    5. '   ' → logprob: -20.25
    6. '0' → logprob: -20.625
    7. '１' → logprob: -21.5
    8. '`' → logprob: -21.875
    9. 'python' → logprob: -22.4375
    10. '  ' → logprob: -22.75

Token 100: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06728670746088028
    2. '<|end|>' → logprob: -2.817286729812622
    3. '   ' → logprob: -6.817286491394043
    4. ' 
' → logprob: -7.067286491394043
    5. '  
' → logprob: -7.317286491394043
    6. '    
' → logprob: -7.442286491394043
    7. ')' → logprob: -7.567286491394043
    8. ' if' → logprob: -7.942286491394043
    9. '```' → logprob: -8.192286491394043
    10. ' ' → logprob: -8.317286491394043

Token 101: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4254903793334961
    2. '   ' → logprob: -1.675490379333496
    3. '<|end|>' → logprob: -2.300490379333496
    4. ')' → logprob: -4.425490379333496
    5. '    
' → logprob: -4.425490379333496
    6. '  
' → logprob: -5.050490379333496
    7. ' 
' → logprob: -5.050490379333496
    8. '```' → logprob: -5.175490379333496
    9. '\n' → logprob: -5.425490379333496
    10. 'min' → logprob: -5.925490379333496

Token 102: ' count' (ID: 3605)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2824559807777405
    2. '   ' → logprob: -2.0324559211730957
    3. '
' → logprob: -2.9074559211730957
    4. '    
' → logprob: -4.032455921173096
    5. ' min' → logprob: -4.157455921173096
    6. 'count' (adapté à ' count') → logprob: -4.407455921173096
    7. 'if' → logprob: -5.282455921173096
    8. 'current' → logprob: -5.407455921173096
    9. ' if' → logprob: -6.157455921173096
    10. ' 
' → logprob: -6.907455921173096

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05491071566939354
    2. '=' → logprob: -2.929910659790039
    3. 's' → logprob: -11.429910659790039
    4. '_' → logprob: -11.554910659790039
    5. ' ' → logprob: -12.554910659790039
    6. '  ' → logprob: -13.179910659790039
    7. '   ' → logprob: -13.429910659790039
    8. ')' → logprob: -15.054910659790039
    9. '＝' → logprob: -15.179910659790039
    10. '```' → logprob: -15.554910659790039

Token 104: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.008168661966919899
    2. 'w' → logprob: -5.008168697357178
    3. ' min' → logprob: -6.633168697357178
    4. ' max' → logprob: -9.63316822052002
    5. ' ' → logprob: -9.88316822052002
    6. 'min' → logprob: -11.38316822052002
    7. '   ' → logprob: -12.88316822052002
    8. '	w' → logprob: -13.13316822052002
    9. 'max' → logprob: -13.63316822052002
    10. '  ' → logprob: -13.88316822052002

Token 105: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04859600216150284
    2. '+' → logprob: -3.048595905303955
    3. ' ' → logprob: -11.798596382141113
    4. ' plus' → logprob: -14.673596382141113
    5. '   ' → logprob: -15.673596382141113
    6. '  ' → logprob: -16.048595428466797
    7. ' e' → logprob: -16.173595428466797
    8. '+n' → logprob: -16.423595428466797
    9. '+w' → logprob: -16.798595428466797
    10. ' +
' → logprob: -17.048595428466797

Token 106: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02975292131304741
    2. ' e' → logprob: -3.5297529697418213
    3. ' ' → logprob: -13.529752731323242
    4. '	e' → logprob: -14.779752731323242
    5. '_e' → logprob: -15.404752731323242
    6. 'count' → logprob: -15.529752731323242
    7. '<|end|>' → logprob: -16.029752731323242
    8. '   ' → logprob: -16.779752731323242
    9. ' count' → logprob: -17.279752731323242
    10. '```' → logprob: -17.654752731323242

Token 107: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002886544680222869
    2. ' if' → logprob: -6.377886772155762
    3. 'if' → logprob: -8.127886772155762
    4. ' 
' → logprob: -8.502886772155762
    5. '
' → logprob: -8.752886772155762
    6. '    
' → logprob: -8.877886772155762
    7. '  
' → logprob: -8.877886772155762
    8. '<|end|>' → logprob: -9.252886772155762
    9. '   ' → logprob: -9.627886772155762
    10. ' ' → logprob: -10.377886772155762

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3262452781200409
    2. '
' → logprob: -1.3262453079223633
    3. '    
' → logprob: -4.951245307922363
    4. '\n' → logprob: -5.951245307922363
    5. '<|end|>' → logprob: -6.076245307922363
    6. ' 
' → logprob: -8.451245307922363
    7. '  
' → logprob: -8.451245307922363
    8. '
' → logprob: -8.576245307922363
    9. ' if' → logprob: -9.576245307922363
    10. '<|end|>' → logprob: -10.076245307922363

Token 109: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13933643698692322
    2. ' if' → logprob: -2.139336347579956
    3. 'if' (adapté à ' if') → logprob: -4.514336585998535
    4. ' 
' → logprob: -8.014336585998535
    5. '\n' → logprob: -8.139336585998535
    6. '    
' → logprob: -8.389336585998535
    7. '   ' → logprob: -8.389336585998535
    8. ' min' → logprob: -9.014336585998535
    9. 'min' → logprob: -9.514336585998535
    10. '  
' → logprob: -10.139336585998535

Token 110: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.0028065370861440897
    2. 'count' → logprob: -5.877806663513184
    3. '	count' → logprob: -14.377806663513184
    4. ' min' → logprob: -14.627806663513184
    5. ' ' → logprob: -15.002806663513184
    6. '(count' → logprob: -15.252806663513184
    7. '<count' → logprob: -16.377805709838867
    8. ' coun' → logprob: -18.002805709838867
    9. '[count' → logprob: -18.002805709838867
    10. 'ount' → logprob: -18.377805709838867

Token 111: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0009423116571269929
    2. '<' → logprob: -7.000942230224609
    3. ' ' → logprob: -10.50094223022461
    4. '<|end|>' → logprob: -13.37594223022461
    5. ')' → logprob: -14.25094223022461
    6. '  ' → logprob: -15.75094223022461
    7. '[' → logprob: -16.00094223022461
    8. '   ' → logprob: -16.12594223022461
    9. 'min' → logprob: -16.12594223022461
    10. ' <=' → logprob: -16.12594223022461

Token 112: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.04858816787600517
    2. 'min' → logprob: -3.048588275909424
    3. '	min' → logprob: -14.923587799072266
    4. '   ' → logprob: -15.673587799072266
    5. '=min' → logprob: -16.173587799072266
    6. ' ' → logprob: -17.048587799072266
    7. '_min' → logprob: -17.548587799072266
    8. 'm' → logprob: -18.298587799072266
    9. '(min' → logprob: -18.298587799072266
    10. ' ' → logprob: -18.923587799072266

Token 113: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.625001907348633
    3. ' _' → logprob: -15.500001907348633
    4. '_c' → logprob: -15.875001907348633
    5. '_cont' → logprob: -16.250001907348633
    6. '__' → logprob: -17.125001907348633
    7. '_co' → logprob: -18.000001907348633
    8. '\' → logprob: -18.500001907348633
    9. '_counter' → logprob: -18.750001907348633
    10. '_cost' → logprob: -18.875001907348633

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008632226963527501
    2. ':
' → logprob: -7.125863075256348
    3. '   ' → logprob: -10.750863075256348
    4. '):' → logprob: -11.000863075256348
    5. '       ' → logprob: -11.250863075256348
    6. '):
' → logprob: -13.500863075256348
    7. '<|end|>' → logprob: -13.750863075256348
    8. ':
' → logprob: -14.125863075256348
    9. '=' → logprob: -14.375863075256348
    10. ' :' → logprob: -14.375863075256348

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00076114950934425
    2. '   ' → logprob: -8.000761032104492
    3. '
' → logprob: -8.375761032104492
    4. ' min' → logprob: -8.750761032104492
    5. 'min' → logprob: -11.625761032104492
    6. '	min' → logprob: -11.625761032104492
    7. '```' → logprob: -12.625761032104492
    8. '        
' → logprob: -12.750761032104492
    9. '    
' → logprob: -13.125761032104492
    10. '      ' → logprob: -13.625761032104492

Token 116: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.030517255887389183
    2. 'min' (adapté à ' min') → logprob: -3.655517339706421
    3. '       ' → logprob: -5.780517101287842
    4. '   ' → logprob: -7.405517101287842
    5. '	min' → logprob: -8.280517578125
    6. '_min' → logprob: -9.155517578125
    7. '```' → logprob: -9.780517578125
    8. '    ' → logprob: -10.155517578125
    9. '
' → logprob: -11.280517578125
    10. '           ' → logprob: -11.530517578125

Token 117: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.4021237802808173e-05
    2. '_' → logprob: -11.625014305114746
    3. '_c' → logprob: -13.750014305114746
    4. ' _' → logprob: -14.000014305114746
    5. '_cost' → logprob: -14.500014305114746
    6. '_code' → logprob: -14.750014305114746
    7. '_token' → logprob: -15.000014305114746
    8. '\' → logprob: -15.250014305114746
    9. '_co' → logprob: -15.750014305114746
    10. '_score' → logprob: -16.00001335144043

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003178782993927598
    2. '=' → logprob: -5.753178596496582
    3. ' ' → logprob: -14.253178596496582
    4. ' =)' → logprob: -15.503178596496582
    5. ' =
' → logprob: -16.1281795501709
    6. '＝' → logprob: -16.1281795501709
    7. '<|end|>' → logprob: -17.3781795501709
    8. ' +=' → logprob: -18.1281795501709
    9. ' =
' → logprob: -18.3781795501709
    10. ',' → logprob: -18.5031795501709

Token 119: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.47407805919647217
    2. ' count' → logprob: -0.9740780591964722
    3. '	count' → logprob: -14.099078178405762
    4. '   ' → logprob: -16.224077224731445
    5. ' counts' → logprob: -16.724077224731445
    6. '_count' → logprob: -17.099077224731445
    7. 'counts' → logprob: -17.224077224731445
    8. 'c' → logprob: -17.349077224731445
    9. '$count' → logprob: -17.599077224731445
    10. '[count' → logprob: -17.849077224731445

Token 120: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.577570378780365
    2. '
' → logprob: -0.827570378780365
    3. '
' → logprob: -7.82757043838501
    4. '<|end|>' → logprob: -8.202569961547852
    5. '

' → logprob: -8.327569961547852
    6. ' print' → logprob: -8.577569961547852
    7. ' 
' → logprob: -8.702569961547852
    8. '\n' → logprob: -9.202569961547852
    9. ')' → logprob: -9.327569961547852
    10. '  
' → logprob: -9.702569961547852

Token 121: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017147827020380646
    2. '
' → logprob: -8.750171661376953
    3. ' print' → logprob: -11.625171661376953
    4. ')' → logprob: -14.000171661376953
    5. '
' → logprob: -14.500171661376953
    6. '#print' → logprob: -14.875171661376953
    7. ' 
' → logprob: -15.000171661376953
    8. '#' → logprob: -15.000171661376953
    9. '' → logprob: -15.125171661376953
    10. '<|end|>' → logprob: -15.375171661376953

Token 122: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.023252349346876144
    2. '(' → logprob: -3.773252248764038
    3. '(max' → logprob: -12.648252487182617
    4. '(m' → logprob: -13.023252487182617
    5. '()' → logprob: -14.898252487182617
    6. '('' → logprob: -15.648252487182617
    7. '(len' → logprob: -15.773252487182617
    8. ' (' → logprob: -16.023252487182617
    9. '(
' → logprob: -16.023252487182617
    10. 'min' → logprob: -16.148252487182617

Token 123: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.069664333248511e-05
    2. '_' → logprob: -10.875020980834961
    3. '_min' → logprob: -14.500020980834961
    4. ')_' → logprob: -14.875020980834961
    5. ')' → logprob: -15.250020980834961
    6. '_)' → logprob: -15.500020980834961
    7. '_counts' → logprob: -16.00002098083496
    8. '_token' → logprob: -16.25002098083496
    9. ' _' → logprob: -16.75002098083496
    10. '_co' → logprob: -17.75002098083496

Token 124: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ' )' → logprob: -12.500003814697266
    3. ')
' → logprob: -15.625003814697266
    4. '+' → logprob: -16.125003814697266
    5. '))' → logprob: -16.250003814697266
    6. ')`' → logprob: -17.250003814697266
    7. '```' → logprob: -17.750003814697266
    8. '')' → logprob: -17.750003814697266
    9. '`)' → logprob: -18.125003814697266
    10. '()' → logprob: -18.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 122
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 112
Précision stricte (1ère position): 49.18%
Précision adaptée (1ère position): 51.64%
Précision (top 10): 91.80%
================================================================================
