================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/env python3
import sys

class PersonalPrefs:
    def __init__(self):
        self.max_result = float('-inf')
    def process(self, N, M, Q, param):
        from itertools import product as repeat_chain  # purposely use product, not combinations_with_replacement
        w, x, y, z = param
        outcome = -5**8  # eccentric default
        # Let's use an alias for the max function, for giggles
        MAX = lambda *args: max(*args)
        # Assign as instance attribute counters for unclear reasons
        self.interesting_count = 0
        # We use a tuple-packed version for AA
        for AA in repeat_chain(range(1, M + 1), repeat=N):
            self.interesting_count += 1
            funky_score = 0
            # Using enumerate in a non-idiomatic way (ignore index)
            for idx, dummy in enumerate(w):
                lx = w[idx] - 1
                rx = x[idx] - 1
                if AA[rx] - AA[lx] == y[idx]:
                    funky_score += z[idx]
            outcome = MAX(outcome, funky_score)
        self.max_result = outcome
    def show_it(self):
        print(self.max_result)

def weird_var_parser():
    '''A generator that yields tokens, split by any whitespace, until EOF'''
    while True:
        try:
            stuff = sys.stdin.readline()
            if not stuff:
                break
            for itty in stuff.split():
                yield itty
        except EOFError:
            break

def entry_point():
    streamer = weird_var_parser()
    N, M, Q = (int(next(streamer)) for _ in range(3))
    # Over-creative: use a dict comprehension and map unpacking/generator for initialization
    raw = [ [int()] * Q for _ in range(4) ]
    for j in range(Q):
        for i, stuff in enumerate(('a', 'b', 'c', 'd')):
            raw[i][j] = int(next(streamer))
    obj = PersonalPrefs()
    obj.process(N, M, Q, raw)
    obj.show_it()

if __name__ == '__main__':
    # deliberately obscure entry point
    eval('entry_point()')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4815128743648529
    2. '/env' → logprob: -1.2315129041671753
    3. '/python' → logprob: -2.4815127849578857
    4. '/bash' → logprob: -5.231513023376465
    5. '/bin' → logprob: -6.731513023376465
    6. 'python' → logprob: -9.356513023376465
    7. '#!/' → logprob: -11.106513023376465
    8. 'env' → logprob: -11.481513023376465
    9. '/b' → logprob: -11.481513023376465
    10. '/per' → logprob: -12.481513023376465

Token 4: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.25196680426597595
    2. ' python' → logprob: -1.5019668340682983
    3. 'bash' → logprob: -10.50196647644043
    4. ' bash' → logprob: -11.87696647644043
    5. 'perl' → logprob: -14.00196647644043
    6. 'node' → logprob: -14.50196647644043
    7. 'py' → logprob: -14.87696647644043
    8. '/python' → logprob: -14.87696647644043
    9. 'php' → logprob: -15.12696647644043
    10. ' node' → logprob: -15.50196647644043

Token 5: '3' (ID: 18)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.060692254453897476
    2. '\' → logprob: -4.185692310333252
    3. 'import' → logprob: -4.310692310333252
    4. ' 
' → logprob: -4.685692310333252
    5. '```' → logprob: -5.185692310333252
    6. '  
' → logprob: -5.435692310333252
    7. '' → logprob: -5.560692310333252
    8. '3' → logprob: -6.060692310333252
    9. '
' → logprob: -6.310692310333252
    10. '\r' → logprob: -6.685692310333252

Token 6: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.34536346793174744
    2. 'import' → logprob: -1.3453634977340698
    3. '
' → logprob: -4.220363616943359
    4. '\' → logprob: -5.345363616943359
    5. '```' → logprob: -5.720363616943359
    6. '  
' → logprob: -6.220363616943359
    7. '' → logprob: -6.220363616943359
    8. ' 
' → logprob: -6.720363616943359
    9. '#!/' → logprob: -7.095363616943359
    10. '#' → logprob: -7.845363616943359

Token 7: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2220456898212433
    2. 'import' → logprob: -1.722045660018921
    3. '```' → logprob: -4.5970458984375
    4. '
' → logprob: -5.5970458984375
    5. '\' → logprob: -6.2220458984375
    6. '  
' → logprob: -6.7220458984375
    7. ' 
' → logprob: -7.0970458984375
    8. '#' → logprob: -7.8470458984375
    9. '<|end|>' → logprob: -8.0970458984375
    10. 'print' → logprob: -8.0970458984375

Token 8: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.15178579092025757
    2. ' ' → logprob: -2.0267858505249023
    3. ' sys' → logprob: -6.776785850524902
    4. '<|end|>' → logprob: -6.776785850524902
    5. ' json' → logprob: -6.901785850524902
    6. ' space' → logprob: -7.026785850524902
    7. ' python' → logprob: -7.526785850524902
    8. ' math' → logprob: -7.776785850524902
    9. ' collections' → logprob: -7.776785850524902
    10. ' requests' → logprob: -7.776785850524902

Token 9: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.27282580733299255
    2. '<|end|>' → logprob: -1.897825837135315
    3. '
' → logprob: -2.8978257179260254
    4. '```' → logprob: -4.647825717926025
    5. '\' → logprob: -5.147825717926025
    6. 'import' → logprob: -5.522825717926025
    7. '<|end|>' → logprob: -5.647825717926025
    8. '

' → logprob: -5.897825717926025
    9. '' → logprob: -6.022825717926025
    10. 'newline' → logprob: -6.022825717926025

Token 10: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3661355674266815
    2. 'p' → logprob: -1.991135597229004
    3. 'print' → logprob: -2.991135597229004
    4. 'de' → logprob: -3.116135597229004
    5. 'd' → logprob: -3.241135597229004
    6. '#' → logprob: -4.366135597229004
    7. 'if' → logprob: -4.991135597229004
    8. 'pr' → logprob: -5.116135597229004
    9. '-' → logprob: -5.366135597229004
    10. 'i' → logprob: -6.866135597229004

Token 11: ' Personal' (ID: 19086)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08333495259284973
    2. ' My' → logprob: -2.8333349227905273
    3. ' Space' → logprob: -4.958334922790527
    4. ' Parser' → logprob: -5.708334922790527
    5. ' User' → logprob: -5.958334922790527
    6. ' A' → logprob: -6.833334922790527
    7. ' Basic' → logprob: -7.208334922790527
    8. ' System' → logprob: -7.208334922790527
    9. ' Hello' → logprob: -7.583334922790527
    10. ' Process' → logprob: -7.833334922790527

Token 12: 'Prefs' (ID: 53055)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6448560357093811
    2. 'Info' → logprob: -1.3948559761047363
    3. 'Information' → logprob: -2.2698559761047363
    4. 'Data' → logprob: -2.3948559761047363
    5. 'Assistant' → logprob: -4.019855976104736
    6. 'ity' → logprob: -5.519855976104736
    7. '():' → logprob: -6.769855976104736
    8. 'Name' → logprob: -6.894855976104736
    9. 'Account' → logprob: -7.019855976104736
    10. 'User' → logprob: -7.144855976104736

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017159747949335724
    2. '(' → logprob: -9.375171661376953
    3. '():' → logprob: -10.375171661376953
    4. ' :' → logprob: -10.875171661376953
    5. ':
' → logprob: -11.000171661376953
    6. ':**' → logprob: -12.000171661376953
    7. '):' → logprob: -12.250171661376953
    8. '(:' → logprob: -12.750171661376953
    9. '(P' → logprob: -13.875171661376953
    10. '```' → logprob: -14.125171661376953

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03286390379071236
    2. ' ' → logprob: -4.282864093780518
    3. '    
' → logprob: -5.157864093780518
    4. '    ' → logprob: -5.532864093780518
    5. '(' → logprob: -6.282864093780518
    6. ':' → logprob: -6.782864093780518
    7. '  ' → logprob: -6.907864093780518
    8. ' def' → logprob: -7.032864093780518
    9. '<|end|>' → logprob: -7.157864093780518
    10. ' (' → logprob: -7.532864093780518

Token 15: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8438894748687744
    2. 'def' (adapté à ' def') → logprob: -0.9688894748687744
    3. '   ' → logprob: -1.9688894748687744
    4. '    ' → logprob: -3.7188894748687744
    5. '    
' → logprob: -4.093889236450195
    6. ' pass' → logprob: -5.468889236450195
    7. 'pass' → logprob: -6.218889236450195
    8. 'class' → logprob: -6.343889236450195
    9. ' ' → logprob: -7.718889236450195
    10. '     
' → logprob: -8.093889236450195

Token 16: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0008885911083780229
    2. ' init' → logprob: -7.375888824462891
    3. '__' → logprob: -8.87588882446289
    4. ' ' → logprob: -10.12588882446289
    5. ' _' → logprob: -10.25088882446289
    6. 'init' → logprob: -10.75088882446289
    7. ' def' → logprob: -11.75088882446289
    8. '_init' → logprob: -12.87588882446289
    9. ' add' → logprob: -13.12588882446289
    10. ' get' → logprob: -13.25088882446289

Token 17: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -15.75
    3. ' init' → logprob: -17.5
    4. 'in' → logprob: -18.375
    5. 'int' → logprob: -18.75
    6. 'innit' → logprob: -20.5
    7. 'inite' → logprob: -20.875
    8. 'new' → logprob: -21.625
    9. '	init' → logprob: -21.75
    10. 'inti' → logprob: -21.75

Token 18: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0892777144908905
    2. '__' → logprob: -2.464277744293213
    3. '__(
' → logprob: -8.339277267456055
    4. '__((' → logprob: -9.964277267456055
    5. '__('' → logprob: -10.339277267456055
    6. '__(*' → logprob: -11.964277267456055
    7. '___' → logprob: -12.714277267456055
    8. '(self' → logprob: -12.964277267456055
    9. '(' → logprob: -13.339277267456055
    10. '__("' → logprob: -13.714277267456055

Token 19: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.073596548754722e-05
    2. ' self' → logprob: -10.25005054473877
    3. ')' → logprob: -11.12505054473877
    4. '(self' → logprob: -15.62505054473877
    5. ' ' → logprob: -15.87505054473877
    6. ',self' → logprob: -17.000051498413086
    7. ' )' → logprob: -17.500051498413086
    8. '
' → logprob: -17.875051498413086
    9. '_self' → logprob: -18.000051498413086
    10. 's' → logprob: -18.000051498413086

Token 20: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0063623166643083096
    2. ')' → logprob: -5.881362438201904
    3. ' ,' → logprob: -6.506362438201904
    4. 'self' → logprob: -6.631362438201904
    5. '):' → logprob: -7.756362438201904
    6. ',self' → logprob: -9.256361961364746
    7. ' )' → logprob: -9.881361961364746
    8. ' ' → logprob: -10.506361961364746
    9. '_' → logprob: -10.631361961364746
    10. '<|end|>' → logprob: -11.131361961364746

Token 21: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5937643051147461
    2. '       ' → logprob: -0.9687643051147461
    3. '    ' → logprob: -3.843764305114746
    4. '        ' → logprob: -3.968764305114746
    5. ' self' → logprob: -4.593764305114746
    6. 'user' → logprob: -5.468764305114746
    7. ')' → logprob: -5.468764305114746
    8. '(self' → logprob: -5.843764305114746
    9. '(' → logprob: -6.843764305114746
    10. '   ' → logprob: -7.093764305114746

Token 22: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5279721617698669
    2. '       ' → logprob: -0.9029721617698669
    3. ' self' → logprob: -6.152972221374512
    4. 'pass' → logprob: -6.527972221374512
    5. '   ' → logprob: -8.152972221374512
    6. ' ' → logprob: -8.402972221374512
    7. ' pass' → logprob: -8.527972221374512
    8. 's' → logprob: -8.902972221374512
    9. '```' → logprob: -10.027972221374512
    10. '\n' → logprob: -10.027972221374512

Token 23: '.max' (ID: 11883)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.027138415724039078
    2. '.preferences' → logprob: -4.0271382331848145
    3. '.user' → logprob: -5.4021382331848145
    4. '.name' → logprob: -6.6521382331848145
    5. '.personal' → logprob: -6.6521382331848145
    6. '.p' → logprob: -7.9021382331848145
    7. '.person' → logprob: -8.527138710021973
    8. '.data' → logprob: -8.652138710021973
    9. '.username' → logprob: -8.777138710021973
    10. '._' → logprob: -8.902138710021973

Token 24: '_result' (ID: 11623)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.5414955019950867
    2. '_value' → logprob: -2.1664955615997314
    3. '_' → logprob: -2.7914955615997314
    4. '_items' → logprob: -3.1664955615997314
    5. '_age' → logprob: -3.4164955615997314
    6. '_size' → logprob: -3.4164955615997314
    7. '_score' → logprob: -4.041495323181152
    8. '_count' → logprob: -4.416495323181152
    9. '_connections' → logprob: -4.541495323181152
    10. '_chars' → logprob: -4.541495323181152

Token 25: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.706686690449715e-05
    2. ' s' → logprob: -10.750066757202148
    3. '_s' → logprob: -10.750066757202148
    4. '=' → logprob: -11.375066757202148
    5. ' =' → logprob: -11.750066757202148
    6. '=s' → logprob: -13.000066757202148
    7. '_' → logprob: -13.375066757202148
    8. '_size' → logprob: -14.750066757202148
    9. '_number' → logprob: -16.12506675720215
    10. '_count' → logprob: -16.37506675720215

Token 26: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026560138911008835
    2. ' None' → logprob: -4.026560306549072
    3. '10' → logprob: -5.151560306549072
    4. 'None' → logprob: -6.651560306549072
    5. '100' → logprob: -7.526560306549072
    6. '20' → logprob: -7.776560306549072
    7. '32' → logprob: -9.276559829711914
    8. '50' → logprob: -9.526559829711914
    9. '5' → logprob: -9.776559829711914
    10. '0' → logprob: -10.401559829711914

Token 27: '('-' (ID: 33343)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00408647395670414
    2. '(' → logprob: -5.629086494445801
    3. '("' → logprob: -8.1290864944458
    4. '('-' → logprob: -9.0040864944458
    5. '('.')' → logprob: -11.3790864944458
    6. '('_' → logprob: -11.5040864944458
    7. '('+' → logprob: -11.7540864944458
    8. '("("' → logprob: -12.0040864944458
    9. '('(' → logprob: -12.0040864944458
    10. '('='' → logprob: -12.1290864944458

Token 28: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.8624639324116288e-06
    2. 'in' → logprob: -13.250001907348633
    3. '1' → logprob: -17.500001907348633
    4. 'info' → logprob: -17.750001907348633
    5. '_inf' → logprob: -18.250001907348633
    6. ' inf' → logprob: -19.000001907348633
    7. '')' → logprob: -19.500001907348633
    8. 'i' → logprob: -19.750001907348633
    9. 'Inf' → logprob: -20.250001907348633
    10. '∞' → logprob: -20.500001907348633

Token 29: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0007979541551321745
    2. ')' → logprob: -7.250797748565674
    3. ''' → logprob: -9.875798225402832
    4. '')
' → logprob: -10.875798225402832
    5. ' ')' → logprob: -11.125798225402832
    6. '")' → logprob: -13.375798225402832
    7. ']' → logprob: -15.500798225402832
    8. '`)' → logprob: -15.875798225402832
    9. ''))' → logprob: -16.125797271728516
    10. '       ' → logprob: -16.375797271728516

Token 30: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' process' (ID: 2273)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.45312055945396423
    2. ' max' → logprob: -2.078120470046997
    3. ' find' → logprob: -2.203120470046997
    4. ' maximize' → logprob: -3.078120470046997
    5. ' evaluate' → logprob: -4.328120708465576
    6. ' compare' → logprob: -4.453120708465576
    7. ' space' → logprob: -4.453120708465576
    8. ' calculate' → logprob: -4.703120708465576
    9. ' set' → logprob: -4.828120708465576
    10. ' check' → logprob: -4.953120708465576

Token 33: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08717449009418488
    2. '_' → logprob: -2.587174415588379
    3. '(self' → logprob: -5.837174415588379
    4. ' (' → logprob: -6.712174415588379
    5. '_input' → logprob: -7.087174415588379
    6. ')' → logprob: -8.087174415588379
    7. '_user' → logprob: -8.087174415588379
    8. '_data' → logprob: -8.212174415588379
    9. '_results' → logprob: -8.587174415588379
    10. '_token' → logprob: -8.587174415588379

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04486775025725365
    2. ' ,' → logprob: -3.169867753982544
    3. '):' → logprob: -7.419867515563965
    4. ',p' → logprob: -7.669867515563965
    5. 'self' → logprob: -8.419867515563965
    6. ',user' → logprob: -8.794867515563965
    7. ',input' → logprob: -9.544867515563965
    8. ',item' → logprob: -9.919867515563965
    9. ',line' → logprob: -10.294867515563965
    10. ',result' → logprob: -10.419867515563965

Token 35: ' N' (ID: 478)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -1.0573883056640625
    2. ' result' → logprob: -1.0573883056640625
    3. ' self' → logprob: -2.3073883056640625
    4. ' results' → logprob: -3.8073883056640625
    5. 'result' → logprob: -4.0573883056640625
    6. 'value' → logprob: -4.0573883056640625
    7. ' x' → logprob: -4.0573883056640625
    8. ' preferences' → logprob: -4.0573883056640625
    9. ' )' → logprob: -4.4323883056640625
    10. ' prefs' → logprob: -4.5573883056640625

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055410031229257584
    2. '):' → logprob: -3.680410146713257
    3. ' ,' → logprob: -3.680410146713257
    4. ' ):' → logprob: -5.805409908294678
    5. ')' → logprob: -8.430410385131836
    6. ':' → logprob: -9.680410385131836
    7. ' )' → logprob: -9.930410385131836
    8. ',
' → logprob: -10.430410385131836
    9. ' ' → logprob: -10.430410385131836
    10. '):
' → logprob: -11.180410385131836

Token 37: ' M' (ID: 391)
  Prédit: ' preferences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' preferences' → logprob: -0.7136724591255188
    2. ' prefs' → logprob: -2.213672399520874
    3. ' results' → logprob: -2.838672399520874
    4. ' values' → logprob: -2.963672399520874
    5. ' scores' → logprob: -2.963672399520874
    6. ' data' → logprob: -3.338672399520874
    7. ' user' → logprob: -3.588672399520874
    8. ' M' → logprob: -3.713672399520874
    9. ' ' → logprob: -3.963672399520874
    10. ' A' → logprob: -4.713672637939453

Token 38: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22653552889823914
    2. ',' → logprob: -1.6015355587005615
    3. ')' → logprob: -7.101535320281982
    4. ' ):' → logprob: -8.35153579711914
    5. ' ,' → logprob: -10.60153579711914
    6. ':' → logprob: -11.47653579711914
    7. '   ' → logprob: -11.85153579711914
    8. '):
' → logprob: -12.35153579711914
    9. '),' → logprob: -12.60153579711914
    10. '       ' → logprob: -13.22653579711914

Token 39: ' Q' (ID: 1486)
  Prédit: ' preferences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' preferences' → logprob: -0.44695374369621277
    2. ' prefs' → logprob: -1.5719537734985352
    3. ' data' → logprob: -3.321953773498535
    4. ' scores' → logprob: -3.821953773498535
    5. 'prefs' → logprob: -4.446953773498535
    6. ' values' → logprob: -5.071953773498535
    7. ' results' → logprob: -5.134453773498535
    8. ' user' → logprob: -5.196953773498535
    9. ' A' → logprob: -5.446953773498535
    10. 'preferences' → logprob: -5.509453773498535

Token 40: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09052994102239609
    2. ',' → logprob: -2.4655299186706543
    3. ')' → logprob: -6.965529918670654
    4. ' ):' → logprob: -7.465529918670654
    5. ':' → logprob: -10.215530395507812
    6. ' ,' → logprob: -11.215530395507812
    7. '):
' → logprob: -12.215530395507812
    8. '=' → logprob: -12.590530395507812
    9. '   ' → logprob: -13.090530395507812
    10. '),' → logprob: -13.340530395507812

Token 41: ' param' (ID: 3802)
  Prédit: ' preferences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' preferences' → logprob: -0.47777438163757324
    2. ' prefs' → logprob: -1.4777743816375732
    3. ' data' → logprob: -3.4777743816375732
    4. ' A' → logprob: -4.102774620056152
    5. 'prefs' → logprob: -4.602774620056152
    6. ' a' → logprob: -5.290274620056152
    7. ' queries' → logprob: -5.415274620056152
    8. ' scores' → logprob: -5.477774620056152
    9. ' results' → logprob: -5.477774620056152
    10. ' p' → logprob: -5.602774620056152

Token 42: '):
' (ID: 1883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0014647466596215963
    2. '):' → logprob: -6.75146484375
    3. '_list' → logprob: -9.25146484375
    4. '1' → logprob: -9.75146484375
    5. 'eters' → logprob: -10.50146484375
    6. 'eter' → logprob: -11.12646484375
    7. '_values' → logprob: -11.25146484375
    8. '_s' → logprob: -11.50146484375
    9. ',' → logprob: -11.62646484375
    10. ')' → logprob: -11.62646484375

Token 43: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2794206440448761
    2. '       ' → logprob: -1.7794206142425537
    3. '):' → logprob: -3.4044206142425537
    4. ')' → logprob: -3.9044206142425537
    5. '<|end|>' → logprob: -4.529420852661133
    6. ',' → logprob: -6.154420852661133
    7. '   ' → logprob: -6.404420852661133
    8. ' :' → logprob: -6.529420852661133
    9. '.' → logprob: -7.029420852661133
    10. '    ' → logprob: -7.279420852661133

Token 44: ' from' (ID: 591)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029835186898708344
    2. ' 
' → logprob: -4.029835224151611
    3. '        ' → logprob: -5.154835224151611
    4. '\' → logprob: -5.904835224151611
    5. 'n' → logprob: -7.279835224151611
    6. '#' → logprob: -8.279834747314453
    7. '       ' → logprob: -8.529834747314453
    8. 'r' → logprob: -8.654834747314453
    9. '  ' → logprob: -8.654834747314453
    10. '    ' → logprob: -8.654834747314453

Token 45: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.16682235896587372
    2. ' collections' → logprob: -2.2918224334716797
    3. ' math' → logprob: -3.0418224334716797
    4. '_' → logprob: -5.54182243347168
    5. ' copy' → logprob: -8.54182243347168
    6. ' numpy' → logprob: -9.04182243347168
    7. ' operator' → logprob: -9.29182243347168
    8. ' sys' → logprob: -9.41682243347168
    9. ' _' → logprob: -9.91682243347168
    10. ' statistics' → logprob: -10.04182243347168

Token 46: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.4330936372280121
    2. '.com' → logprob: -1.4330936670303345
    3. 'import' → logprob: -2.433093547821045
    4. 'com' → logprob: -4.558093547821045
    5. 'ertools' → logprob: -4.683093547821045
    6. ' combinations' → logprob: -6.683093547821045
    7. '<|end|>' → logprob: -6.808093547821045
    8. '.per' → logprob: -6.933093547821045
    9. '.' → logprob: -7.183093547821045
    10. '.product' → logprob: -7.808093547821045

Token 47: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.07420942932367325
    2. 'product' → logprob: -3.199209451675415
    3. ' permutations' → logprob: -3.699209451675415
    4. ' combinations' → logprob: -5.199209213256836
    5. 'com' → logprob: -7.824209213256836
    6. 'per' → logprob: -10.699209213256836
    7. '	product' → logprob: -11.324209213256836
    8. '.product' → logprob: -11.574209213256836
    9. 'import' → logprob: -12.074209213256836
    10. ' ' → logprob: -12.824209213256836

Token 48: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4045867919921875
    2. '        
' → logprob: -1.9045867919921875
    3. '\' → logprob: -2.0295867919921875
    4. ',' → logprob: -2.5295867919921875
    5. '<|end|>' → logprob: -2.7795867919921875
    6. ' ' → logprob: -2.9045867919921875
    7. '
' → logprob: -3.0295867919921875
    8. '        ' → logprob: -3.0295867919921875
    9. ' 
' → logprob: -3.1545867919921875
    10. ')' → logprob: -3.4045867919921875

Token 49: ' repeat' (ID: 22962)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.5059731006622314
    2. ' ' → logprob: -1.0059731006622314
    3. ' p' → logprob: -4.380972862243652
    4. ' itertools' → logprob: -5.130972862243652
    5. ' prod' → logprob: -6.005972862243652
    6. 'product' → logprob: -6.130972862243652
    7. ' ' → logprob: -6.505972862243652
    8. ' _' → logprob: -6.630972862243652
    9. ' cart' → logprob: -6.755972862243652
    10. ' pro' → logprob: -7.505972862243652

Token 50: '_chain' (ID: 74449)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6796576380729675
    2. ',' → logprob: -2.0546576976776123
    3. '('' → logprob: -2.1796576976776123
    4. '(range' → logprob: -2.5546576976776123
    5. 's' → logprob: -3.0546576976776123
    6. '       ' → logprob: -4.179657459259033
    7. ')' → logprob: -4.554657459259033
    8. 'import' → logprob: -4.554657459259033
    9. '
' → logprob: -4.929657459259033
    10. '        ' → logprob: -5.554657459259033

Token 51: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2854442596435547
    2. 'from' → logprob: -1.6604442596435547
    3. '<|end|>' → logprob: -2.2854442596435547
    4. 'ertools' → logprob: -2.6604442596435547
    5. '(' → logprob: -2.7854442596435547
    6. '(chain' → logprob: -3.2854442596435547
    7. 'product' → logprob: -3.5354442596435547
    8. '(product' → logprob: -3.9104442596435547
    9. 'import' → logprob: -3.9104442596435547
    10. 'for' → logprob: -4.035444259643555

Token 52: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.529536247253418
    2. 'import' → logprob: -2.029536247253418
    3. '<|end|>' → logprob: -2.154536247253418
    4. '(' → logprob: -2.279536247253418
    5. ',' → logprob: -2.654536247253418
    6. '
' → logprob: -3.029536247253418
    7. 'from' → logprob: -3.029536247253418
    8. '(range' → logprob: -3.154536247253418
    9. 'for' → logprob: -3.529536247253418
    10. ' ' → logprob: -3.529536247253418

Token 53: ' purposely' (ID: 188028)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' use' (ID: 1199)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6798609495162964
    2. '_chain' → logprob: -2.179861068725586
    3. 'from' → logprob: -2.304861068725586
    4. 'product' → logprob: -2.804861068725586
    5. 'chain' → logprob: -3.429861068725586
    6. '_product' → logprob: -3.554861068725586
    7. '_import' → logprob: -4.179861068725586
    8. 'def' → logprob: -4.304861068725586
    9. '=' → logprob: -4.554861068725586
    10. '_named' → logprob: -4.679861068725586

Token 55: ' product' (ID: 1888)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.10884299129247665
    2. 'product' → logprob: -2.9838430881500244
    3. ' repeat' → logprob: -3.3588430881500244
    4. ' product' → logprob: -4.858842849731445
    5. 'chain' → logprob: -5.858842849731445
    6. 'import' → logprob: -6.108842849731445
    7. '_repeat' → logprob: -7.358842849731445
    8. ' chain' → logprob: -7.483842849731445
    9. 'from' → logprob: -7.858842849731445
    10. '   ' → logprob: -7.921342849731445

Token 56: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' not' (ID: 625)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' but' → logprob: -1.3339465856552124
    2. 'repeat' → logprob: -1.4589465856552124
    3. ' repeat' → logprob: -2.083946704864502
    4. ' ' → logprob: -2.458946704864502
    5. ' as' → logprob: -2.583946704864502
    6. '_repeat' → logprob: -3.083946704864502
    7. ' chain' → logprob: -3.583946704864502
    8. '_' → logprob: -4.458946704864502
    9. 'chain' → logprob: -4.771446704864502
    10. '    ' → logprob: -4.771446704864502

Token 58: ' combinations' (ID: 43835)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.3395187258720398
    2. 'chain' → logprob: -2.5895187854766846
    3. ' repeat' → logprob: -2.7145187854766846
    4. 'product' → logprob: -2.8395187854766846
    5. ' product' → logprob: -3.3395187854766846
    6. ' chain' → logprob: -3.7145187854766846
    7. '```' → logprob: -5.4645185470581055
    8. '   ' → logprob: -5.5895185470581055
    9. 'import' → logprob: -5.5895185470581055
    10. '_repeat' → logprob: -5.7145185470581055

Token 59: '_with' (ID: 14161)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '_re' (ID: 3067)
  Prédit: 'replacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replacement' → logprob: -0.026838941499590874
    2. ' replacement' → logprob: -3.776839017868042
    3. 'repeat' → logprob: -6.401838779449463
    4. '_re' → logprob: -6.651838779449463
    5. 're' → logprob: -8.276839256286621
    6. 'replace' → logprob: -8.901839256286621
    7. 'rep' → logprob: -9.276839256286621
    8. '-re' → logprob: -9.526839256286621
    9. '	re' → logprob: -10.901839256286621
    10. ' repetition' → logprob: -11.151839256286621

Token 61: 'placement' (ID: 17947)
  Prédit: 'peat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peat' → logprob: -0.0008777545881457627
    2. 'pe' → logprob: -7.625877857208252
    3. 'peated' → logprob: -8.875877380371094
    4. '``' → logprob: -10.000877380371094
    5. 'PEAT' → logprob: -10.125877380371094
    6. '```' → logprob: -10.125877380371094
    7. 'place' → logprob: -10.125877380371094
    8. 'placement' → logprob: -11.375877380371094
    9. 'turn' → logprob: -12.000877380371094
    10. '

' → logprob: -12.000877380371094

Token 62: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' w' (ID: 286)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9413720965385437
    2. '=' → logprob: -1.5663721561431885
    3. '<|end|>' → logprob: -1.9413721561431885
    4. '<|end|>' → logprob: -2.8163721561431885
    5. ' ' → logprob: -3.3163721561431885
    6. ')' → logprob: -3.9413721561431885
    7. '(range' → logprob: -4.191371917724609
    8. '_repeat' → logprob: -4.191371917724609
    9. 'def' → logprob: -4.566371917724609
    10. '   ' → logprob: -4.566371917724609

Token 65: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08311699330806732
    2. 'eight' → logprob: -3.0831170082092285
    3. '=' → logprob: -4.8331170082092285
    4. 'hile' → logprob: -5.2081170082092285
    5. 's' → logprob: -5.5831170082092285
    6. ' =' → logprob: -5.8331170082092285
    7. 'h' → logprob: -6.2081170082092285
    8. '   ' → logprob: -6.5831170082092285
    9. 'r' → logprob: -6.5831170082092285
    10. 'eil' → logprob: -7.0831170082092285

Token 66: ' x' (ID: 1215)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.9850350618362427
    2. ' v' → logprob: -2.235034942626953
    3. ' x' → logprob: -2.360034942626953
    4. ' c' → logprob: -2.485034942626953
    5. 'v' → logprob: -2.735034942626953
    6. ' s' → logprob: -2.985034942626953
    7. ' r' → logprob: -3.110034942626953
    8. ' l' → logprob: -3.485034942626953
    9. ' k' → logprob: -3.485034942626953
    10. 's' → logprob: -3.610034942626953

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04062267765402794
    2. ' =' → logprob: -3.4156227111816406
    3. '=' → logprob: -5.915622711181641
    4. ',y' → logprob: -6.165622711181641
    5. 'y' → logprob: -7.290622711181641
    6. ' ,' → logprob: -7.415622711181641
    7. 's' → logprob: -7.665622711181641
    8. ' ' → logprob: -9.79062271118164
    9. '0' → logprob: -10.16562271118164
    10. ' y' → logprob: -10.29062271118164

Token 68: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.019249867647886276
    2. ' y' → logprob: -4.01924991607666
    3. 'a' → logprob: -7.64424991607666
    4. 'z' → logprob: -8.76924991607666
    5. 'c' → logprob: -9.64424991607666
    6. 'v' → logprob: -9.64424991607666
    7. 'b' → logprob: -9.64424991607666
    8. 's' → logprob: -10.26924991607666
    9. 'd' → logprob: -10.51924991607666
    10. 'r' → logprob: -10.64424991607666

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024220112711191177
    2. 'z' → logprob: -4.149219989776611
    3. ',z' → logprob: -5.399219989776611
    4. ' =' → logprob: -5.899219989776611
    5. ' ,' → logprob: -7.274219989776611
    6. '=' → logprob: -9.02422046661377
    7. ' z' → logprob: -10.39922046661377
    8. 's' → logprob: -12.02422046661377
    9. ' ' → logprob: -12.52422046661377
    10. '<|end|>' → logprob: -12.64922046661377

Token 70: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.20193833112716675
    2. ' z' → logprob: -1.7019383907318115
    3. 's' → logprob: -9.07693862915039
    4. 'w' → logprob: -9.95193862915039
    5. ' ' → logprob: -10.07693862915039
    6. 'b' → logprob: -10.07693862915039
    7. 'r' → logprob: -10.20193862915039
    8. 'd' → logprob: -10.70193862915039
    9. 'a' → logprob: -10.82693862915039
    10. 'q' → logprob: -10.95193862915039

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0641481801867485
    2. '=' → logprob: -2.814148187637329
    3. ',' → logprob: -6.18914794921875
    4. ' ' → logprob: -9.81414794921875
    5. ' ,' → logprob: -10.43914794921875
    6. '  ' → logprob: -11.18914794921875
    7. '=[]' → logprob: -11.81414794921875
    8. 's' → logprob: -12.43914794921875
    9. '    ' → logprob: -13.18914794921875
    10. '<|end|>' → logprob: -13.31414794921875

Token 72: ' param' (ID: 3802)
  Prédit: ' param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.09435959905385971
    2. 'param' → logprob: -2.7193596363067627
    3. ' [' → logprob: -5.219359397888184
    4. ' map' → logprob: -5.844359397888184
    5. '0' → logprob: -6.344359397888184
    6. '[' → logprob: -6.344359397888184
    7. ' repeat' → logprob: -6.344359397888184
    8. ' ' → logprob: -6.469359397888184
    9. '[param' → logprob: -6.594359397888184
    10. ' (' → logprob: -6.719359397888184

Token 73: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014476558193564415
    2. ' =' → logprob: -5.639476776123047
    3. '<|end|>' → logprob: -6.264476776123047
    4. '[' → logprob: -6.514476776123047
    5. '
' → logprob: -6.639476776123047
    6. '       ' → logprob: -6.639476776123047
    7. ' 
' → logprob: -6.889476776123047
    8. '  
' → logprob: -7.014476776123047
    9. '        
' → logprob: -7.639476776123047
    10. '

' → logprob: -7.889476776123047

Token 74: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028435347601771355
    2. '       ' → logprob: -4.278435230255127
    3. ' 
' → logprob: -5.403435230255127
    4. '        
' → logprob: -5.528435230255127
    5. '<|end|>' → logprob: -6.028435230255127
    6. '  
' → logprob: -6.528435230255127
    7. ' ' → logprob: -8.278435707092285
    8. ':' → logprob: -8.528435707092285
    9. ',' → logprob: -8.903435707092285
    10. ',
' → logprob: -9.153435707092285

Token 75: ' outcome' (ID: 24192)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1090259552001953
    2. ' result' → logprob: -1.1090259552001953
    3. ' for' → logprob: -2.2340259552001953
    4. ' max' → logprob: -2.7340259552001953
    5. 'result' → logprob: -2.9840259552001953
    6. ' best' → logprob: -3.4840259552001953
    7. ' results' → logprob: -4.109025955200195
    8. 'for' → logprob: -4.609025955200195
    9. 'max' → logprob: -4.734025955200195
    10. ' ans' → logprob: -4.984025955200195

Token 76: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013703969307243824
    2. ' =' → logprob: -4.5137038230896
    3. '=' → logprob: -6.8887038230896
    4. '_s' → logprob: -7.1387038230896
    5. ' s' → logprob: -7.5137038230896
    6. '_' → logprob: -8.638704299926758
    7. ' ' → logprob: -10.013704299926758
    8. '_counts' → logprob: -12.076204299926758
    9. '_values' → logprob: -12.263704299926758
    10. '_results' → logprob: -12.576204299926758

Token 77: ' -' (ID: 533)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6745039820671082
    2. '[]' → logprob: -1.424504041671753
    3. ' float' → logprob: -2.549504041671753
    4. '0' → logprob: -3.174504041671753
    5. '-' → logprob: -3.424504041671753
    6. ' ' → logprob: -3.674504041671753
    7. 'float' → logprob: -3.799504041671753
    8. ' [' → logprob: -4.049503803253174
    9. ' -' → logprob: -5.049503803253174
    10. ' max' → logprob: -5.174503803253174

Token 78: '5' (ID: 20)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.015286451205611229
    2. '1' → logprob: -4.765286445617676
    3. 'sys' → logprob: -5.765286445617676
    4. '10' → logprob: -7.015286445617676
    5. ' float' → logprob: -7.015286445617676
    6. '100' → logprob: -7.515286445617676
    7. '999' → logprob: -7.640286445617676
    8. 'int' → logprob: -8.515286445617676
    9. 'inf' → logprob: -9.640286445617676
    10. '2' → logprob: -9.640286445617676

Token 79: '**' (ID: 410)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: '8' (ID: 23)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.33358290791511536
    2. 'w' → logprob: -2.208582878112793
    3. '6' → logprob: -3.333582878112793
    4. '8' → logprob: -3.708582878112793
    5. '5' → logprob: -3.958582878112793
    6. '10' → logprob: -3.958582878112793
    7. '7' → logprob: -4.208582878112793
    8. '(' → logprob: -4.708582878112793
    9. ' ' → logprob: -4.833582878112793
    10. '4' → logprob: -4.958582878112793

Token 81: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6008760929107666
    2. ' ' → logprob: -1.7258760929107666
    3. '<|end|>' → logprob: -1.9758760929107666
    4. '**' → logprob: -3.6008760929107666
    5. '
' → logprob: -3.6008760929107666
    6. '0' → logprob: -3.7258760929107666
    7. '*' → logprob: -3.9758760929107666
    8. ' 
' → logprob: -4.9758758544921875
    9. '<|end|>' → logprob: -4.9758758544921875
    10. ' +' → logprob: -5.1008758544921875

Token 82: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' eccentric' (ID: 96595)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5724483728408813
    2. '<|end|>' → logprob: -1.4474483728408813
    3. '1' → logprob: -1.9474483728408813
    4. '2' → logprob: -4.822448253631592
    5. '-' → logprob: -4.947448253631592
    6. ' (' → logprob: -5.072448253631592
    7. '0' → logprob: -5.447448253631592
    8. '7' → logprob: -5.447448253631592
    9. '10' → logprob: -5.697448253631592
    10. '(' → logprob: -5.697448253631592

Token 84: ' default' (ID: 2787)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.37052321434021
    2. ' ' → logprob: -1.37052321434021
    3. '<|end|>' → logprob: -1.37052321434021
    4. ')' → logprob: -2.74552321434021
    5. '*' → logprob: -3.24552321434021
    6. '-' → logprob: -3.37052321434021
    7. ' 
' → logprob: -3.37052321434021
    8. '
' → logprob: -4.495523452758789
    9. ',' → logprob: -4.870523452758789
    10. '\' → logprob: -5.120523452758789

Token 87: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47535407543182373
    2. '+' → logprob: -2.7253541946411133
    3. '<|end|>' → logprob: -2.7253541946411133
    4. ' 
' → logprob: -3.1003541946411133
    5. '       ' → logprob: -3.3503541946411133
    6. '-' → logprob: -3.4753541946411133
    7. '
' → logprob: -3.6003541946411133
    8. ')' → logprob: -3.9753541946411133
    9. '=' → logprob: -4.600354194641113
    10. '#' (adapté à ' #') → logprob: -4.600354194641113

Token 88: ' Let's' (ID: 41021)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0318292379379272
    2. 'for' → logprob: -1.5318292379379272
    3. '        ' → logprob: -1.6568292379379272
    4. ' ' → logprob: -2.281829357147217
    5. '       ' → logprob: -3.031829357147217
    6. ' if' → logprob: -3.906829357147217
    7. '<|end|>' → logprob: -4.406829357147217
    8. 'if' → logprob: -5.156829357147217
    9. '    ' → logprob: -5.406829357147217
    10. '#' → logprob: -5.781829357147217

Token 89: ' use' (ID: 1199)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5332361459732056
    2. ' continue' → logprob: -2.158236026763916
    3. ' try' → logprob: -2.658236026763916
    4. ' see' → logprob: -2.658236026763916
    5. ' consider' → logprob: -3.783236026763916
    6. ' check' → logprob: -4.033236026763916
    7. ' find' → logprob: -4.283236026763916
    8. ' analyze' → logprob: -4.283236026763916
    9. ' use' → logprob: -4.408236026763916
    10. ' explore' → logprob: -4.908236026763916

Token 90: ' an' (ID: 448)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.8150334358215332
    2. ' range' → logprob: -1.9400334358215332
    3. ' product' → logprob: -1.9400334358215332
    4. ' w' → logprob: -2.565033435821533
    5. ' max' → logprob: -2.940033435821533
    6. ' sum' → logprob: -3.065033435821533
    7. 'for' → logprob: -3.065033435821533
    8. ' repeat' → logprob: -3.065033435821533
    9. ' itertools' → logprob: -3.315033435821533
    10. ' list' → logprob: -3.315033435821533

Token 91: ' alias' (ID: 26026)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.8141917586326599
    2. ' approach' → logprob: -2.8766918182373047
    3. '   ' → logprob: -3.1891918182373047
    4. ' alternative' → logprob: -3.6266918182373047
    5. ' if' → logprob: -3.6891918182373047
    6. ' example' → logprob: -3.8141918182373047
    7. 'd' → logprob: -3.8766918182373047
    8. 'n' → logprob: -4.189191818237305
    9. 'alyze' → logprob: -4.189191818237305
    10. ' y' → logprob: -4.251691818237305

Token 92: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8242623805999756
    2. 'for' → logprob: -1.9492623805999756
    3. ' p' → logprob: -2.8242623805999756
    4. 'w' → logprob: -3.3242623805999756
    5. ' w' → logprob: -3.5742623805999756
    6. 'repeat' → logprob: -3.6992623805999756
    7. ' as' → logprob: -3.8242623805999756
    8. ' product' → logprob: -4.074262619018555
    9. 'rep' → logprob: -4.074262619018555
    10. 'pc' → logprob: -4.074262619018555

Token 93: ' the' (ID: 290)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.4006989896297455
    2. ' repeat' → logprob: -2.2756989002227783
    3. 'product' → logprob: -2.5256989002227783
    4. ' product' → logprob: -3.1506989002227783
    5. 'range' → logprob: -4.025699138641357
    6. 'it' → logprob: -4.025699138641357
    7. ' itertools' → logprob: -4.275699138641357
    8. 'w' → logprob: -5.025699138641357
    9. '`' → logprob: -5.150699138641357
    10. '```' → logprob: -5.338199138641357

Token 94: ' max' (ID: 2999)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.555344581604004
    2. 'repeat' → logprob: -1.930344581604004
    3. 'w' → logprob: -2.305344581604004
    4. ' itertools' → logprob: -2.430344581604004
    5. 'product' → logprob: -2.555344581604004
    6. 'range' → logprob: -2.680344581604004
    7. ' product' → logprob: -3.492844581604004
    8. 're' → logprob: -3.742844581604004
    9. ' range' → logprob: -4.055344581604004
    10. 'for' → logprob: -4.055344581604004

Token 95: ' function' (ID: 1114)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11124678701162338
    2. '_result' → logprob: -2.6112468242645264
    3. '_=' → logprob: -4.111246585845947
    4. '_val' → logprob: -5.361246585845947
    5. '_res' → logprob: -5.986246585845947
    6. ' =' → logprob: -5.986246585845947
    7. '_value' → logprob: -6.111246585845947
    8. 'imum' → logprob: -6.361246585845947
    9. '=' → logprob: -7.361246585845947
    10. '_out' → logprob: -8.486247062683105

Token 96: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34846898913383484
    2. '
' → logprob: -1.9734690189361572
    3. ' max' → logprob: -2.9734690189361572
    4. 'max' → logprob: -3.5984690189361572
    5. '        
' → logprob: -3.7234690189361572
    6. 'self' → logprob: -4.598468780517578
    7. ' self' → logprob: -4.723468780517578
    8. ' =' → logprob: -4.973468780517578
    9. ':' → logprob: -5.348468780517578
    10. 'out' → logprob: -5.723468780517578

Token 97: ' for' (ID: 395)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.2094833850860596
    2. ' max' → logprob: -1.5844833850860596
    3. 'm' → logprob: -1.8344833850860596
    4. 'max' → logprob: -2.0844833850860596
    5. ' ma' → logprob: -3.0844833850860596
    6. '        ' → logprob: -3.3344833850860596
    7. ' mx' → logprob: -3.3344833850860596
    8. '       ' → logprob: -3.9594833850860596
    9. 'ma' → logprob: -4.4594831466674805
    10. ' ' → logprob: -4.8344831466674805

Token 98: ' gig' (ID: 24489)
  Prédit: ' clarity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' clarity' → logprob: -1.2624516487121582
    2. ' max' → logprob: -1.8874516487121582
    3. ' convenience' → logprob: -2.262451648712158
    4. ' m' → logprob: -2.637451648712158
    5. ' _' → logprob: -2.762451648712158
    6. 'max' → logprob: -2.887451648712158
    7. '_' → logprob: -2.887451648712158
    8. 'm' → logprob: -3.012451648712158
    9. ' ' → logprob: -4.512451648712158
    10. ' conc' → logprob: -4.512451648712158

Token 99: 'gles' (ID: 26095)
  Prédit: 'gle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gle' → logprob: -0.7564120888710022
    2. 'a' → logprob: -1.1314120292663574
    3. 'gles' → logprob: -2.3814120292663574
    4. 'gling' → logprob: -2.7564120292663574
    5. '```' → logprob: -4.131412029266357
    6. 'e' → logprob: -5.006412029266357
    7. 'g' → logprob: -5.506412029266357
    8. 'antic' → logprob: -5.756412029266357
    9. 'ap' → logprob: -5.881412029266357
    10. 'at' → logprob: -6.693912029266357

Token 100: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2547085285186768
    2. ' max' → logprob: -1.2547085285186768
    3. '
' → logprob: -2.0047085285186768
    4. ' m' → logprob: -2.3797085285186768
    5. 'max' → logprob: -2.7547085285186768
    6. 'm' → logprob: -3.2547085285186768
    7. '        
' → logprob: -4.629708290100098
    8. ' self' → logprob: -4.754708290100098
    9. ' mx' → logprob: -4.817208290100098
    10. ' ma' → logprob: -4.879708290100098

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16645856201648712
    2. ' max' → logprob: -3.9789586067199707
    3. '        ' → logprob: -4.416458606719971
    4. 'm' → logprob: -4.416458606719971
    5. 'max' → logprob: -4.416458606719971
    6. ' my' → logprob: -4.541458606719971
    7. ' ' → logprob: -5.103958606719971
    8. '
' → logprob: -5.228958606719971
    9. ' m' → logprob: -5.478958606719971
    10. '        
' → logprob: -5.603958606719971

Token 102: ' MAX' (ID: 16960)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.5497690439224243
    2. 'max' → logprob: -2.0497689247131348
    3. ' mx' → logprob: -2.1747689247131348
    4. 'm' → logprob: -2.9872689247131348
    5. '       ' → logprob: -2.9872689247131348
    6. 'mx' → logprob: -3.2372689247131348
    7. '   ' → logprob: -3.2997689247131348
    8. ' m' → logprob: -3.7372689247131348
    9. ' ma' → logprob: -3.7997689247131348
    10. 'f' → logprob: -4.237268924713135

Token 103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6983371376991272
    2. ' =' → logprob: -0.6983371376991272
    3. '_' → logprob: -5.698337078094482
    4. '_=' → logprob: -7.073337078094482
    5. '=max' → logprob: -7.948337078094482
    6. '=lambda' → logprob: -8.44833755493164
    7. 'IMUM' → logprob: -9.57333755493164
    8. 'imum' → logprob: -10.19833755493164
    9. '  ' → logprob: -10.32333755493164
    10. '=_' → logprob: -10.57333755493164

Token 104: ' lambda' (ID: 27871)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.14301277697086334
    2. ' max' → logprob: -2.018012762069702
    3. ' ' → logprob: -8.893013000488281
    4. 'lambda' → logprob: -9.018013000488281
    5. ' lambda' → logprob: -10.393013000488281
    6. '  ' → logprob: -10.893013000488281
    7. '   ' → logprob: -11.643013000488281
    8. '	max' → logprob: -11.768013000488281
    9. 'self' → logprob: -12.393013000488281
    10. '=max' → logprob: -12.893013000488281

Token 105: ' *' (ID: 425)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.016225092113018036
    2. ' x' → logprob: -5.0162248611450195
    3. 'a' → logprob: -5.3912248611450195
    4. ' ' → logprob: -5.8912248611450195
    5. ' lambda' → logprob: -6.3912248611450195
    6. ' max' → logprob: -8.76622486114502
    7. ' A' → logprob: -9.76622486114502
    8. 'x' → logprob: -9.89122486114502
    9. '<|end|>' → logprob: -10.39122486114502
    10. '(a' → logprob: -10.39122486114502

Token 106: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.006346088368445635
    2. 'a' → logprob: -5.256346225738525
    3. ' args' → logprob: -7.006346225738525
    4. 'x' → logprob: -9.506345748901367
    5. 'arr' → logprob: -11.006345748901367
    6. 'arg' → logprob: -11.131345748901367
    7. 'values' → logprob: -11.256345748901367
    8. 'l' → logprob: -11.381345748901367
    9. 'e' → logprob: -11.631345748901367
    10. 'lst' → logprob: -11.631345748901367

Token 107: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02516484446823597
    2. ' :' → logprob: -3.775164842605591
    3. ':max' → logprob: -6.27516508102417
    4. ' max' → logprob: -11.400164604187012
    5. ',' → logprob: -12.025164604187012
    6. 'max' → logprob: -12.150164604187012
    7. ' ' → logprob: -12.400164604187012
    8. ',max' → logprob: -13.150164604187012
    9. '  ' → logprob: -13.400164604187012
    10. '=max' → logprob: -13.775164604187012

Token 108: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.026834644377231598
    2. 'max' → logprob: -3.651834726333618
    3. ' __' → logprob: -8.776834487915039
    4. '__' → logprob: -8.901834487915039
    5. '(max' → logprob: -8.901834487915039
    6. ' built' → logprob: -9.401834487915039
    7. ' ' → logprob: -12.026834487915039
    8. ' builtin' → logprob: -12.276834487915039
    9. ' args' → logprob: -12.526834487915039
    10. ' (' → logprob: -12.776834487915039

Token 109: '(*' (ID: 9000)
  Prédit: '(args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(args' → logprob: -0.5764893293380737
    2. '(*' → logprob: -0.8264893293380737
    3. '(' → logprob: -7.826489448547363
    4. '*' → logprob: -9.576489448547363
    5. 'args' → logprob: -9.576489448547363
    6. '(
' → logprob: -12.576489448547363
    7. ' args' → logprob: -13.201489448547363
    8. '(*)' → logprob: -13.576489448547363
    9. '((*' → logprob: -13.826489448547363
    10. ',args' → logprob: -13.826489448547363

Token 110: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.0008355968166142702
    2. ' args' → logprob: -7.125835418701172
    3. '(args' → logprob: -10.875835418701172
    4. '	args' → logprob: -12.750835418701172
    5. ')' → logprob: -13.250835418701172
    6. '=args' → logprob: -13.375835418701172
    7. ',args' → logprob: -13.375835418701172
    8. '$args' → logprob: -13.500835418701172
    9. '[' → logprob: -13.750835418701172
    10. '.args' → logprob: -14.250835418701172

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. ')
' → logprob: -11.75001049041748
    3. ')

' → logprob: -14.00001049041748
    4. '))' → logprob: -14.62501049041748
    5. ' )' → logprob: -14.75001049041748
    6. '()' → logprob: -16.375009536743164
    7. '   ' → logprob: -16.500009536743164
    8. ' ' → logprob: -16.625009536743164
    9. ')#' → logprob: -16.625009536743164
    10. '())' → logprob: -16.875009536743164

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3938981890678406
    2. '
' → logprob: -1.5188982486724854
    3. '<|end|>' → logprob: -2.5188982486724854
    4. '        
' → logprob: -4.268898010253906
    5. '<|end|>' → logprob: -6.018898010253906
    6. '  
' → logprob: -6.018898010253906
    7. ')' → logprob: -6.268898010253906
    8. ' 
' → logprob: -6.768898010253906
    9. ',' → logprob: -7.018898010253906
    10. ',
' → logprob: -7.893898010253906

Token 113: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.049363672733306885
    2. '       ' → logprob: -3.424363613128662
    3. '<|end|>' → logprob: -5.049363613128662
    4. '  
' → logprob: -5.924363613128662
    5. '        
' → logprob: -6.174363613128662
    6. ' 
' → logprob: -6.549363613128662
    7. '\n' → logprob: -7.549363613128662
    8. ',
' → logprob: -7.924363613128662
    9. '<|end|>' → logprob: -8.04936408996582
    10. '[' → logprob: -8.17436408996582

Token 114: ' Assign' (ID: 60840)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.4602479934692383
    2. '       ' → logprob: -1.5852479934692383
    3. 'result' → logprob: -1.8352479934692383
    4. ' for' → logprob: -1.8352479934692383
    5. '        ' → logprob: -2.5852479934692383
    6. 'for' → logprob: -3.4602479934692383
    7. ' if' → logprob: -3.8352479934692383
    8. ' ' → logprob: -4.335247993469238
    9. '        
' → logprob: -4.335247993469238
    10. ' possible' → logprob: -4.460247993469238

Token 115: ' as' (ID: 472)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.0216234922409058
    2. ' self' → logprob: -1.5216234922409058
    3. ' max' → logprob: -1.8966234922409058
    4. 'result' → logprob: -2.7716236114501953
    5. ' w' → logprob: -3.0216236114501953
    6. ' a' → logprob: -3.7716236114501953
    7. 'self' → logprob: -3.8966236114501953
    8. ' to' → logprob: -4.146623611450195
    9. 'max' → logprob: -4.271623611450195
    10. ' value' → logprob: -5.021623611450195

Token 116: ' instance' (ID: 4934)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.7484349012374878
    2. ' outcome' → logprob: -1.9984349012374878
    3. ' self' → logprob: -2.4984350204467773
    4. '       ' → logprob: -3.1234350204467773
    5. 'ments' → logprob: -3.3734350204467773
    6. ' value' → logprob: -3.4984350204467773
    7. ' a' → logprob: -3.4984350204467773
    8. 'ment' → logprob: -3.8734350204467773
    9. '        ' → logprob: -3.9984350204467773
    10. ' the' → logprob: -3.9984350204467773

Token 117: ' attribute' (ID: 13118)
  Prédit: ' variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.6108719110488892
    2. ' variable' → logprob: -1.4858719110488892
    3. ' attributes' → logprob: -2.6108717918395996
    4. '       ' → logprob: -3.4858717918395996
    5. 'variable' → logprob: -3.4858717918395996
    6. 'max' → logprob: -4.2358717918396
    7. ' attribute' → logprob: -4.3608717918396
    8. '.' → logprob: -4.3608717918396
    9. 'variables' → logprob: -4.4858717918396
    10. ' max' → logprob: -4.4858717918396

Token 118: ' counters' (ID: 62038)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014896507374942303
    2. 'self' → logprob: -5.264896392822266
    3. '<|end|>' → logprob: -5.264896392822266
    4. '        
' → logprob: -6.389896392822266
    5. ' self' → logprob: -6.514896392822266
    6. '
' → logprob: -7.639896392822266
    7. ',' → logprob: -8.639896392822266
    8. ' =' → logprob: -8.639896392822266
    9. '<|end|>' → logprob: -9.264896392822266
    10. '.' → logprob: -10.264896392822266

Token 119: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04008752107620239
    2. '<|end|>' → logprob: -3.4150874614715576
    3. ' =' → logprob: -6.290087699890137
    4. '        
' → logprob: -6.665087699890137
    5. '<|end|>' → logprob: -7.040087699890137
    6. ',' → logprob: -7.665087699890137
    7. '=' → logprob: -7.790087699890137
    8. '
' → logprob: -7.915087699890137
    9. ':' → logprob: -8.040087699890137
    10. 'self' → logprob: -8.665087699890137

Token 120: ' unclear' (ID: 59698)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.7152129411697388
    2. ' w' → logprob: -2.590212821960449
    3. ' tracking' → logprob: -2.590212821960449
    4. ' each' → logprob: -2.715212821960449
    5. ' all' → logprob: -2.840212821960449
    6. ' max' → logprob: -2.840212821960449
    7. ' i' → logprob: -2.965212821960449
    8. ' ' → logprob: -2.965212821960449
    9. ' self' → logprob: -3.215212821960449
    10. ' preferences' → logprob: -3.715212821960449

Token 121: ' reasons' (ID: 11715)
  Prédit: ' reasons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reasons' → logprob: -0.9661094546318054
    2. ' purposes' → logprob: -2.09110951423645
    3. ' preferences' → logprob: -2.09110951423645
    4. ' results' → logprob: -3.09110951423645
    5. ' states' → logprob: -3.34110951423645
    6. ' variables' → logprob: -3.84110951423645
    7. ' ' → logprob: -3.96610951423645
    8. ' choices' → logprob: -3.96610951423645
    9. ' variable' → logprob: -4.591109275817871
    10. ' usage' → logprob: -4.716109275817871

Token 122: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4990929365158081
    2. '
' → logprob: -1.874092936515808
    3. '<|end|>' → logprob: -1.874092936515808
    4. '        
' → logprob: -3.1240930557250977
    5. ',' → logprob: -4.124093055725098
    6. ' 
' → logprob: -4.999093055725098
    7. '  
' → logprob: -5.249093055725098
    8. ' ' → logprob: -6.124093055725098
    9. '<|end|>' → logprob: -6.124093055725098
    10. 'self' → logprob: -6.124093055725098

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08186516165733337
    2. '        
' → logprob: -3.331865072250366
    3. '<|end|>' → logprob: -3.956865072250366
    4. ' 
' → logprob: -5.206865310668945
    5. 'self' → logprob: -5.331865310668945
    6. '
' → logprob: -6.206865310668945
    7. '_' → logprob: -6.456865310668945
    8. '  
' → logprob: -6.456865310668945
    9. ' ' → logprob: -6.706865310668945
    10. '\' → logprob: -6.956865310668945

Token 124: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7884334921836853
    2. 'self' (adapté à ' self') → logprob: -1.03843355178833
    3. '       ' → logprob: -1.66343355178833
    4. ' result' → logprob: -8.288433074951172
    5. '   ' → logprob: -8.413433074951172
    6. 'result' → logprob: -8.413433074951172
    7. ' ' → logprob: -8.538433074951172
    8. 'count' → logprob: -9.163433074951172
    9. 'counter' → logprob: -9.288433074951172
    10. ' counter' → logprob: -9.788433074951172

Token 125: '.inter' (ID: 19028)
  Prédit: '.max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.025475189089775085
    2. '.count' → logprob: -4.275475025177002
    3. '.counter' → logprob: -5.025475025177002
    4. '.result' → logprob: -6.150475025177002
    5. '.results' → logprob: -7.400475025177002
    6. '.current' → logprob: -8.02547550201416
    7. '.best' → logprob: -8.65047550201416
    8. '.num' → logprob: -8.77547550201416
    9. '.w' → logprob: -9.02547550201416
    10. '.' → logprob: -9.02547550201416

Token 126: 'esting' (ID: 90166)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.715239405632019
    2. 'nal' → logprob: -1.840239405632019
    3. 'esting' → logprob: -1.965239405632019
    4. 'ests' → logprob: -2.3402395248413086
    5. 'action' → logprob: -2.4652395248413086
    6. 'actions' → logprob: -2.4652395248413086
    7. 'mediate' → logprob: -2.9652395248413086
    8. 'val' → logprob: -3.3402395248413086
    9. 'vals' → logprob: -3.4652395248413086
    10. 'rupt' → logprob: -3.5902395248413086

Token 127: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.9583740830421448
    2. '_counts' → logprob: -1.3333740234375
    3. '_counter' → logprob: -2.0833740234375
    4. '_indices' → logprob: -3.4583740234375
    5. '_values' → logprob: -3.5833740234375
    6. ' =' → logprob: -3.7083740234375
    7. 'ness' → logprob: -4.0833740234375
    8. '_cnt' → logprob: -4.3333740234375
    9. '_results' → logprob: -4.4583740234375
    10. '_c' → logprob: -4.5833740234375

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.201740562915802
    2. '=' → logprob: -1.7017405033111572
    3. ' +=' → logprob: -8.451740264892578
    4. '+=' → logprob: -9.701740264892578
    5. ' ' → logprob: -10.076740264892578
    6. 's' → logprob: -12.451740264892578
    7. '   ' → logprob: -13.451740264892578
    8. '  ' → logprob: -13.451740264892578
    9. ',' → logprob: -13.701740264892578
    10. '+' → logprob: -15.326740264892578

Token 129: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42972275614738464
    2. '0' → logprob: -1.054722785949707
    3. '{}' → logprob: -8.304722785949707
    4. ' sum' → logprob: -8.804722785949707
    5. 'sum' → logprob: -9.304722785949707
    6. ' [' → logprob: -9.304722785949707
    7. ' N' → logprob: -9.617222785949707
    8. '[' → logprob: -9.742222785949707
    9. '{' → logprob: -10.117222785949707
    10. ' M' → logprob: -10.304722785949707

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005705483490601182
    2. ' ' → logprob: -7.750570774078369
    3. 'sum' → logprob: -10.250570297241211
    4. '{}' → logprob: -10.750570297241211
    5. 'N' → logprob: -11.250570297241211
    6. '[' → logprob: -11.375570297241211
    7. 'len' → logprob: -11.625570297241211
    8. '{' → logprob: -11.625570297241211
    9. '42' → logprob: -12.000570297241211
    10. 'MAX' → logprob: -12.000570297241211

Token 131: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0969816446304321
    2. 'for' → logprob: -1.0969816446304321
    3. '       ' → logprob: -1.4719816446304321
    4. 'result' → logprob: -2.8469815254211426
    5. ' result' → logprob: -3.7219815254211426
    6. '        
' → logprob: -5.221981525421143
    7. 'results' → logprob: -5.971981525421143
    8. 'res' → logprob: -6.346981525421143
    9. 'self' → logprob: -7.096981525421143
    10. ' sequences' → logprob: -7.096981525421143

Token 134: ' We' (ID: 1416)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7027392387390137
    2. 'for' → logprob: -0.7027392387390137
    3. '       ' → logprob: -5.452739238739014
    4. ' result' → logprob: -6.827739238739014
    5. 'result' → logprob: -7.202739238739014
    6. ' ' → logprob: -8.452739715576172
    7. '#' → logprob: -8.577739715576172
    8. ' possible' → logprob: -8.890239715576172
    9. 'def' → logprob: -8.890239715576172
    10. '        
' → logprob: -8.952739715576172

Token 135: ' use' (ID: 1199)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4734766483306885
    2. ' can' → logprob: -1.7234766483306885
    3. ' have' → logprob: -2.5984766483306885
    4. 'for' → logprob: -2.5984766483306885
    5. ' continue' → logprob: -2.8484766483306885
    6. ' for' → logprob: -2.9734766483306885
    7. ''ll' → logprob: -3.3484766483306885
    8. ' =' → logprob: -3.5984766483306885
    9. '       ' → logprob: -3.8484766483306885
    10. ' want' → logprob: -3.9734766483306885

Token 136: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8211365342140198
    2. ' a' → logprob: -2.696136474609375
    3. 'for' → logprob: -2.821136474609375
    4. ' repeat' → logprob: -2.821136474609375
    5. ' range' → logprob: -2.946136474609375
    6. ' self' → logprob: -3.196136474609375
    7. ' the' → logprob: -3.321136474609375
    8. ' product' → logprob: -3.571136474609375
    9. ' w' → logprob: -3.821136474609375
    10. ' all' → logprob: -3.946136474609375

Token 137: ' tuple' (ID: 31311)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6489382982254028
    2. 'for' → logprob: -1.0239382982254028
    3. ' counter' → logprob: -4.023938179016113
    4. 'n' → logprob: -4.023938179016113
    5. 'def' → logprob: -4.398938179016113
    6. 'll' → logprob: -5.023938179016113
    7. ' def' → logprob: -5.023938179016113
    8. '   ' → logprob: -5.273938179016113
    9. 'counter' → logprob: -5.398938179016113
    10. ' combination' → logprob: -5.648938179016113

Token 138: '-packed' (ID: 95244)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1044329404830933
    2. ' of' → logprob: -1.4794329404830933
    3. ',' → logprob: -2.604433059692383
    4. '       ' → logprob: -2.729433059692383
    5. '=' → logprob: -3.104433059692383
    6. ' for' → logprob: -3.104433059692383
    7. 'of' → logprob: -3.479433059692383
    8. '(' → logprob: -3.854433059692383
    9. '(
' → logprob: -3.979433059692383
    10. '()' → logprob: -4.104433059692383

Token 139: ' version' (ID: 3926)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.6450974941253662
    2. ' range' → logprob: -2.395097494125366
    3. ' approach' → logprob: -2.395097494125366
    4. ' result' → logprob: -2.645097494125366
    5. ' generator' → logprob: -2.770097494125366
    6. ' counter' → logprob: -3.020097494125366
    7. ' combination' → logprob: -3.270097494125366
    8. 'for' → logprob: -3.645097494125366
    9. ' chain' → logprob: -3.895097494125366
    10. ' values' → logprob: -4.145097732543945

Token 140: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: ' AA' (ID: 44568)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -2.4156546592712402
    2. ' all' → logprob: -3.0406546592712402
    3. 'range' → logprob: -3.0406546592712402
    4. ' param' → logprob: -3.2906546592712402
    5. ' repeat' → logprob: -3.2906546592712402
    6. ' i' → logprob: -3.4156546592712402
    7. ' the' → logprob: -3.4156546592712402
    8. 'param' → logprob: -3.5406546592712402
    9. ' p' → logprob: -3.6656546592712402
    10. ' range' → logprob: -3.6656546592712402

Token 142: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6761759519577026
    2. ',' → logprob: -2.676176071166992
    3. ' =' → logprob: -2.926176071166992
    4. 's' → logprob: -3.176176071166992
    5. '_' → logprob: -3.426176071166992
    6. 'B' → logprob: -3.426176071166992
    7. 'll' → logprob: -3.426176071166992
    8. 'ss' → logprob: -3.613676071166992
    9. 'for' → logprob: -3.738676071166992
    10. '   ' → logprob: -3.738676071166992

Token 143: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2418383359909058
    2. 'for' (adapté à ' for') → logprob: -1.7418383359909058
    3. '       ' → logprob: -2.1168384552001953
    4. 'AA' → logprob: -3.4918384552001953
    5. ' AA' → logprob: -3.4918384552001953
    6. ' aa' → logprob: -3.6793384552001953
    7. ' combos' → logprob: -4.054338455200195
    8. ' possible' → logprob: -4.116838455200195
    9. ' result' → logprob: -4.179338455200195
    10. 'result' → logprob: -4.304338455200195

Token 145: ' AA' (ID: 44568)
  Prédit: ' combo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combo' → logprob: -1.9000864028930664
    2. 'combo' → logprob: -2.5250864028930664
    3. 'comb' → logprob: -2.6500864028930664
    4. 'vals' → logprob: -2.7750864028930664
    5. ' comb' → logprob: -2.9000864028930664
    6. ' vals' → logprob: -3.6500864028930664
    7. ' combos' → logprob: -3.8375864028930664
    8. ' combination' → logprob: -3.8375864028930664
    9. 'a' → logprob: -3.9000864028930664
    10. ' AA' → logprob: -3.9000864028930664

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07926671206951141
    2. 'in' → logprob: -2.5792667865753174
    3. 's' → logprob: -9.079266548156738
    4. ',' → logprob: -9.329266548156738
    5. ' ' → logprob: -10.079266548156738
    6. '_in' → logprob: -10.079266548156738
    7. '  ' → logprob: -11.079266548156738
    8. ')' → logprob: -11.454266548156738
    9. '   ' → logprob: -11.579266548156738
    10. 'n' → logprob: -11.954266548156738

Token 147: ' repeat' (ID: 22962)
  Prédit: ' repeat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeat' → logprob: -0.42919692397117615
    2. 'repeat' → logprob: -1.0541969537734985
    3. ' ' → logprob: -9.054197311401367
    4. '   ' → logprob: -9.179197311401367
    5. '_repeat' → logprob: -9.429197311401367
    6. ' repe' → logprob: -10.179197311401367
    7. ' range' → logprob: -10.866697311401367
    8. ' product' → logprob: -10.929197311401367
    9. ' list' → logprob: -10.991697311401367
    10. '  ' → logprob: -11.491697311401367

Token 148: '_chain' (ID: 74449)
  Prédit: '_chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chain' → logprob: -0.026286479085683823
    2. '((' → logprob: -4.151286602020264
    3. '_ch' → logprob: -5.901286602020264
    4. '(' → logprob: -6.776286602020264
    5. '   ' → logprob: -6.776286602020264
    6. '(product' → logprob: -6.776286602020264
    7. 's' → logprob: -7.151286602020264
    8. '(range' → logprob: -7.901286602020264
    9. '(chain' → logprob: -7.901286602020264
    10. '_range' → logprob: -8.151286125183105

Token 149: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.00035155098885297775
    2. '((' → logprob: -8.875351905822754
    3. '([' → logprob: -9.000351905822754
    4. '(' → logprob: -9.500351905822754
    5. 'range' → logprob: -12.125351905822754
    6. '

' → logprob: -13.250351905822754
    7. '
' → logprob: -13.875351905822754
    8. '('' → logprob: -14.125351905822754
    9. '   ' → logprob: -14.375351905822754
    10. '(r' → logprob: -14.500351905822754

Token 150: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6646859049797058
    2. '(N' → logprob: -1.1646859645843506
    3. '(M' → logprob: -1.7896859645843506
    4. '(w' → logprob: -5.4146857261657715
    5. '(Q' → logprob: -7.4146857261657715
    6. '(-' → logprob: -8.03968620300293
    7. '(x' → logprob: -8.28968620300293
    8. '((' → logprob: -8.78968620300293
    9. '(len' → logprob: -8.91468620300293
    10. '(max' → logprob: -8.91468620300293

Token 151: '1' (ID: 16)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.30326998233795166
    2. '1' → logprob: -1.8032699823379517
    3. 'N' → logprob: -2.553269863128662
    4. '10' → logprob: -5.428269863128662
    5. 'Q' → logprob: -5.678269863128662
    6. '2' → logprob: -6.053269863128662
    7. 'w' → logprob: -6.303269863128662
    8. '11' → logprob: -6.303269863128662
    9. '5' → logprob: -6.928269863128662
    10. '(M' → logprob: -7.178269863128662

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0058537740260362625
    2. ',M' → logprob: -5.880853652954102
    3. ' ,' → logprob: -6.505853652954102
    4. ',N' → logprob: -6.755853652954102
    5. ',w' → logprob: -8.880853652954102
    6. ',Q' → logprob: -10.380853652954102
    7. '(M' → logprob: -10.505853652954102
    8. '(' → logprob: -10.755853652954102
    9. '(N' → logprob: -10.880853652954102
    10. ',int' → logprob: -11.130853652954102

Token 153: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.012928551062941551
    2. ' M' → logprob: -5.387928485870361
    3. 'N' → logprob: -5.512928485870361
    4. '11' → logprob: -6.637928485870361
    5. '10' → logprob: -6.637928485870361
    6. '6' → logprob: -8.01292896270752
    7. ' ' → logprob: -8.38792896270752
    8. 'Q' → logprob: -8.51292896270752
    9. '5' → logprob: -9.01292896270752
    10. 'w' → logprob: -9.26292896270752

Token 154: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026323288679122925
    2. ' +' → logprob: -3.6513233184814453
    3. '),' → logprob: -11.776323318481445
    4. '
' → logprob: -12.026323318481445
    5. '+
' → logprob: -13.151323318481445
    6. '```' → logprob: -13.776323318481445
    7. ' ' → logprob: -14.151323318481445
    8. ')+' → logprob: -14.151323318481445
    9. ' ),' → logprob: -14.151323318481445
    10. '

' → logprob: -14.401323318481445

Token 155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006762736942619085
    2. ' ' → logprob: -5.006762504577637
    3. '
' → logprob: -10.631762504577637
    4. '2' → logprob: -11.131762504577637
    5. '

' → logprob: -12.631762504577637
    6. '   ' → logprob: -13.694262504577637
    7. '  ' → logprob: -14.444262504577637
    8. '```' → logprob: -14.569262504577637
    9. '11' → logprob: -14.881762504577637
    10. '+' → logprob: -15.444262504577637

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002888682356569916
    2. ' ' → logprob: -8.375288963317871
    3. '2' → logprob: -10.000288963317871
    4. '3' → logprob: -13.625288963317871
    5. '11' → logprob: -13.625288963317871
    6. 'x' → logprob: -13.687788963317871
    7. '+' → logprob: -13.875288963317871
    8. 'w' → logprob: -14.125288963317871
    9. 'N' → logprob: -14.125288963317871
    10. '   ' → logprob: -14.437788963317871

Token 157: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0041742026805877686
    2. ',' → logprob: -6.25417423248291
    3. '):' → logprob: -6.75417423248291
    4. ')):' → logprob: -7.62917423248291
    5. ' ),' → logprob: -8.00417423248291
    6. ',),' → logprob: -9.12917423248291
    7. '):
' → logprob: -10.87917423248291
    8. '},' → logprob: -10.87917423248291
    9. ')' → logprob: -11.00417423248291
    10. ')):
' → logprob: -11.25417423248291

Token 158: ' repeat' (ID: 22962)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6401934027671814
    2. ' N' → logprob: -0.8901934027671814
    3. '4' → logprob: -3.390193462371826
    4. ' ' → logprob: -4.015193462371826
    5. 'Q' → logprob: -5.515193462371826
    6. ' Q' → logprob: -5.765193462371826
    7. '3' → logprob: -6.265193462371826
    8. '2' → logprob: -7.515193462371826
    9. '5' → logprob: -9.140192985534668
    10. ')' → logprob: -9.202692985534668

Token 159: '=N' (ID: 143132)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.049166109412908554
    2. '=N' → logprob: -3.049166202545166
    3. ' =' → logprob: -8.674165725708008
    4. '=len' → logprob: -9.174165725708008
    5. '=w' → logprob: -10.049165725708008
    6. '=M' → logprob: -10.424165725708008
    7. '2' → logprob: -10.549165725708008
    8. '4' → logprob: -10.674165725708008
    9. '=z' → logprob: -10.799165725708008
    10. '=int' → logprob: -11.049165725708008

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006906710099428892
    2. '):
' → logprob: -5.006906509399414
    3. ' ):' → logprob: -9.131906509399414
    4. ':' → logprob: -10.256906509399414
    5. ')' → logprob: -11.006906509399414
    6. '):
' → logprob: -11.131906509399414
    7. '       ' → logprob: -13.006906509399414
    8. ',' → logprob: -13.131906509399414
    9. '   ' → logprob: -13.131906509399414
    10. '):

' → logprob: -13.381906509399414

Token 161: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3099590241909027
    2. ':' → logprob: -1.434959053993225
    3. ':
' → logprob: -4.1849589347839355
    4. '       ' → logprob: -5.5599589347839355
    5. '<|end|>' → logprob: -5.6849589347839355
    6. ',' → logprob: -6.4349589347839355
    7. '            
' → logprob: -7.3099589347839355
    8. '):' → logprob: -7.4349589347839355
    9. '):
' → logprob: -7.5599589347839355
    10. '               ' → logprob: -7.8099589347839355

Token 162: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4939142167568207
    2. ' result' → logprob: -2.4939141273498535
    3. '            
' → logprob: -2.6189141273498535
    4. ' if' → logprob: -2.6189141273498535
    5. '            ' → logprob: -2.8689141273498535
    6. 'result' → logprob: -3.7439141273498535
    7. '               ' → logprob: -4.2439141273498535
    8. ' 
' → logprob: -4.3689141273498535
    9. ' score' → logprob: -4.6189141273498535
    10. '                
' → logprob: -5.1189141273498535

Token 163: '.inter' (ID: 19028)
  Prédit: '.max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.21539315581321716
    2. '.inter' → logprob: -1.8403931856155396
    3. '.' → logprob: -4.09039306640625
    4. 'max' → logprob: -4.34039306640625
    5. ' .' → logprob: -7.34039306640625
    6. 'interesting' → logprob: -7.59039306640625
    7. '.current' → logprob: -7.96539306640625
    8. '_inter' → logprob: -7.96539306640625
    9. '.result' → logprob: -8.09039306640625
    10. '_max' → logprob: -8.21539306640625

Token 164: 'esting' (ID: 90166)
  Prédit: 'esting'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esting' → logprob: -0.0005840110243298113
    2. 'sting' → logprob: -7.625584125518799
    3. 'est' → logprob: -10.00058364868164
    4. 'ested' → logprob: -11.50058364868164
    5. 'rest' → logprob: -11.50058364868164
    6. 'acting' → logprob: -12.12558364868164
    7. 'isting' → logprob: -12.75058364868164
    8. 'asting' → logprob: -13.00058364868164
    9. '```' → logprob: -13.00058364868164
    10. 'interesting' → logprob: -13.12558364868164

Token 165: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.7697225252486533e-06
    2. 'count' → logprob: -13.750003814697266
    3. ' _' → logprob: -14.375003814697266
    4. '_' → logprob: -14.625003814697266
    5. '_counts' → logprob: -15.125003814697266
    6. '_c' → logprob: -15.625003814697266
    7. '._' → logprob: -16.000003814697266
    8. '_counter' → logprob: -16.000003814697266
    9. '\' → logprob: -16.375003814697266
    10. 'Count' → logprob: -16.625003814697266

Token 166: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6934588551521301
    2. '+=' → logprob: -0.6934588551521301
    3. '=' → logprob: -8.568458557128906
    4. ' =' → logprob: -9.818458557128906
    5. '+' → logprob: -10.193458557128906
    6. ' ' → logprob: -11.318458557128906
    7. '+=(' → logprob: -12.318458557128906
    8. ']+=' → logprob: -12.693458557128906
    9. '   ' → logprob: -12.943458557128906
    10. '
' → logprob: -13.693458557128906

Token 167: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011534865014255047
    2. ' ' → logprob: -4.636534690856934
    3. 'AA' → logprob: -7.386534690856934
    4. 'sum' → logprob: -7.636534690856934
    5. '(' → logprob: -8.761534690856934
    6. ' AA' → logprob: -9.011534690856934
    7. 'all' → logprob: -9.136534690856934
    8. ' sum' → logprob: -9.136534690856934
    9. 'len' → logprob: -10.136534690856934
    10. ' all' → logprob: -10.261534690856934

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015931837260723114
    2. 'sum' → logprob: -5.015931606292725
    3. 'AA' → logprob: -5.015931606292725
    4. 'all' → logprob: -6.390931606292725
    5. '(' → logprob: -7.890931606292725
    6. 'int' → logprob: -8.640932083129883
    7. 'len' → logprob: -9.015932083129883
    8. ' ' → logprob: -9.890932083129883
    9. '(sum' → logprob: -10.515932083129883
    10. ' sum' → logprob: -11.140932083129883

Token 169: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7446073889732361
    2. '<|end|>' → logprob: -0.9946073889732361
    3. '
' → logprob: -2.119607448577881
    4. ' ' → logprob: -4.869607448577881
    5. ' if' → logprob: -4.994607448577881
    6. ' 
' → logprob: -4.994607448577881
    7. '            
' → logprob: -5.619607448577881
    8. ')' → logprob: -6.244607448577881
    9. '<|end|>' → logprob: -6.244607448577881
    10. '            ' → logprob: -6.369607448577881

Token 170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19991178810596466
    2. '<|end|>' → logprob: -1.9499118328094482
    3. ' ' → logprob: -4.699911594390869
    4. ' if' → logprob: -4.824911594390869
    5. '            
' → logprob: -5.824911594390869
    6. '[' → logprob: -5.824911594390869
    7. '
' → logprob: -5.949911594390869
    8. ')' → logprob: -6.074911594390869
    9. '       ' → logprob: -6.324911594390869
    10. ' 
' → logprob: -6.449911594390869

Token 171: ' funky' (ID: 103816)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.562459111213684
    2. 'value' → logprob: -1.812459111213684
    3. 'val' → logprob: -2.0624589920043945
    4. 'result' → logprob: -2.1874589920043945
    5. 'score' → logprob: -2.1874589920043945
    6. ' value' → logprob: -2.8124589920043945
    7. ' result' → logprob: -3.1874589920043945
    8. ' score' → logprob: -3.6874589920043945
    9. ' current' → logprob: -3.6874589920043945
    10. 'res' → logprob: -3.9374589920043945

Token 172: '_score' (ID: 22555)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.3465134799480438
    2. '_val' → logprob: -2.721513509750366
    3. '_result' → logprob: -2.721513509750366
    4. '_score' → logprob: -2.721513509750366
    5. '=' → logprob: -2.971513509750366
    6. ' =' → logprob: -3.221513509750366
    7. '_out' → logprob: -6.846513271331787
    8. '_sum' → logprob: -6.971513271331787
    9. '_' → logprob: -7.721513271331787
    10. 'value' → logprob: -7.846513271331787

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023277508094906807
    2. '=' → logprob: -3.773277521133423
    3. ' ' → logprob: -10.523277282714844
    4. 's' → logprob: -13.148277282714844
    5. '  ' → logprob: -14.023277282714844
    6. ')' → logprob: -14.773277282714844
    7. '<|end|>' → logprob: -15.273277282714844
    8. ' =(' → logprob: -15.398277282714844
    9. ' =
' → logprob: -15.773277282714844
    10. ' ' → logprob: -15.773277282714844

Token 174: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4742186665534973
    2. ' sum' → logprob: -1.3492186069488525
    3. 'w' → logprob: -2.4742186069488525
    4. '0' → logprob: -4.474218845367432
    5. ' w' → logprob: -4.474218845367432
    6. 'MAX' → logprob: -5.599218845367432
    7. '(sum' → logprob: -5.974218845367432
    8. ' ' → logprob: -6.599218845367432
    9. '(w' → logprob: -7.349218845367432
    10. 'SUM' → logprob: -7.724218845367432

Token 175: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.12076975405216217
    2. 'w' → logprob: -2.495769739151001
    3. '0' → logprob: -4.49576997756958
    4. '(sum' → logprob: -4.74576997756958
    5. '(w' → logprob: -5.24576997756958
    6. 'MAX' → logprob: -5.99576997756958
    7. '(' → logprob: -6.87076997756958
    8. 'max' → logprob: -7.24576997756958
    9. ' sum' → logprob: -7.49576997756958
    10. 'SUM' → logprob: -8.120769500732422

Token 176: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4132579267024994
    2. '<|end|>' → logprob: -1.1632579565048218
    3. '            ' → logprob: -5.038258075714111
    4. ' ' → logprob: -5.413258075714111
    5. ' for' → logprob: -5.788258075714111
    6. '<|end|>' → logprob: -5.913258075714111
    7. '
' → logprob: -6.413258075714111
    8. ')' → logprob: -6.663258075714111
    9. '[' → logprob: -6.788258075714111
    10. '       ' → logprob: -7.163258075714111

Token 178: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.057355452328920364
    2. ' for' → logprob: -2.9323554039001465
    3. '           ' → logprob: -6.4323554039001465
    4. '            ' → logprob: -7.5573554039001465
    5. ' ' → logprob: -8.557355880737305
    6. ')' → logprob: -10.182355880737305
    7. '<|end|>' → logprob: -10.307355880737305
    8. '	for' → logprob: -11.182355880737305
    9. '            
' → logprob: -11.307355880737305
    10. '        ' → logprob: -12.057355880737305

Token 179: ' Using' (ID: 17511)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47437748312950134
    2. ' for' → logprob: -0.9743775129318237
    3. '           ' → logprob: -8.349377632141113
    4. ' ' → logprob: -10.974377632141113
    5. '	for' → logprob: -10.974377632141113
    6. '            ' → logprob: -11.724377632141113
    7. '   ' → logprob: -12.474377632141113
    8. ' ' → logprob: -12.599377632141113
    9. '            
' → logprob: -12.724377632141113
    10. '    ' → logprob: -12.849377632141113

Token 180: ' enumerate' (ID: 29671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3875250220298767
    2. ' for' → logprob: -1.2625250816345215
    3. 'range' → logprob: -4.6375250816345215
    4. '_' → logprob: -5.1375250816345215
    5. 'sum' → logprob: -5.8875250816345215
    6. 'enumer' → logprob: -5.8875250816345215
    7. ' range' → logprob: -5.8875250816345215
    8. ' ' → logprob: -6.0125250816345215
    9. 'a' → logprob: -6.7625250816345215
    10. 'len' → logprob: -6.7625250816345215

Token 181: ' in' (ID: 306)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8520968556404114
    2. '(' → logprob: -0.9770968556404114
    3. 'for' → logprob: -2.3520967960357666
    4. '(en' → logprob: -3.2270967960357666
    5. '(for' → logprob: -3.7270967960357666
    6. '           ' → logprob: -4.477097034454346
    7. ',' → logprob: -4.852097034454346
    8. '(
' → logprob: -5.602097034454346
    9. '(A' → logprob: -5.602097034454346
    10. '()' → logprob: -5.602097034454346

Token 182: ' a' (ID: 261)
  Prédit: 'AA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AA' → logprob: -0.6087919473648071
    2. ' AA' → logprob: -0.8587919473648071
    3. 'range' → logprob: -4.608791828155518
    4. ' enumerate' → logprob: -4.858791828155518
    5. 'enumer' → logprob: -5.233791828155518
    6. ' range' → logprob: -5.358791828155518
    7. 'for' → logprob: -6.483791828155518
    8. ' ' → logprob: -6.983791828155518
    9. '(' → logprob: -7.108791828155518
    10. ' for' → logprob: -7.608791828155518

Token 183: ' non' (ID: 2893)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9777301549911499
    2. 'for' → logprob: -1.35273015499115
    3. 'AA' → logprob: -1.85273015499115
    4. ' range' → logprob: -2.2277302742004395
    5. ' for' → logprob: -2.7277302742004395
    6. ' AA' → logprob: -4.3527302742004395
    7. 'n' → logprob: -5.4777302742004395
    8. 'enumer' → logprob: -5.7277302742004395
    9. '(range' → logprob: -5.8527302742004395
    10. 'loop' → logprob: -7.0402302742004395

Token 184: '-' (ID: 12)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.5683557987213135
    2. 'tr' → logprob: -1.8183557987213135
    3. 'con' → logprob: -2.8183557987213135
    4. 'local' → logprob: -3.3183557987213135
    5. 'traditional' → logprob: -3.5683557987213135
    6. 'enumer' → logprob: -3.9433557987213135
    7. 'Python' → logprob: -4.193355560302734
    8. '-python' → logprob: -4.318355560302734
    9. ' Python' → logprob: -4.443355560302734
    10. '-tr' → logprob: -4.443355560302734

Token 185: 'idi' (ID: 9175)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.16865794360637665
    2. 'con' → logprob: -3.2936580181121826
    3. 'tr' → logprob: -3.6686580181121826
    4. 'traditional' → logprob: -3.6686580181121826
    5. 'Python' → logprob: -3.9186580181121826
    6. 'python' → logprob: -4.4186577796936035
    7. 'local' → logprob: -4.6686577796936035
    8. 'idi' → logprob: -4.9186577796936035
    9. 'py' → logprob: -5.7936577796936035
    10. 'enumer' → logprob: -5.9186577796936035

Token 186: 'omatic' (ID: 78306)
  Prédit: 'omatic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omatic' → logprob: -0.00272058742120862
    2. 'om' → logprob: -6.002720355987549
    3. 'otic' → logprob: -9.127720832824707
    4. 'omic' → logprob: -9.752720832824707
    5. 'matic' → logprob: -10.252720832824707
    6. 'al' → logprob: -11.877720832824707
    7. 'omat' → logprob: -12.002720832824707
    8. 'omal' → logprob: -12.502720832824707
    9. '
' → logprob: -12.877720832824707
    10. 'm' → logprob: -12.877720832824707

Token 187: ' way' (ID: 2006)
  Prédit: ' way'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' way' → logprob: -0.952029287815094
    2. ' fashion' → logprob: -0.952029287815094
    3. ' manner' → logprob: -2.327029228210449
    4. 'fashion' → logprob: -2.952029228210449
    5. ' for' → logprob: -3.702029228210449
    6. 'for' → logprob: -3.952029228210449
    7. 'way' → logprob: -4.077029228210449
    8. 'm' → logprob: -4.577029228210449
    9. ' ' → logprob: -6.077029228210449
    10. ',' → logprob: -6.577029228210449

Token 188: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06305617094039917
    2. ' for' → logprob: -3.063056230545044
    3. 'for' → logprob: -4.813055992126465
    4. ',' → logprob: -6.313055992126465
    5. '            
' → logprob: -7.188055992126465
    6. ' ' → logprob: -7.313055992126465
    7. '            ' → logprob: -7.688055992126465
    8. '<|end|>' → logprob: -7.813055992126465
    9. '       ' → logprob: -8.438055992126465
    10. ' in' → logprob: -8.563055992126465

Token 189: 'ignore' (ID: 25112)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7717427611351013
    2. ' for' → logprob: -1.396742820739746
    3. '           ' → logprob: -1.646742820739746
    4. ')' → logprob: -2.896742820739746
    5. ' )' → logprob: -4.021742820739746
    6. '            ' → logprob: -5.396742820739746
    7. ' ' → logprob: -5.521742820739746
    8. '):
' → logprob: -6.396742820739746
    9. '   ' → logprob: -6.646742820739746
    10. '               ' → logprob: -6.896742820739746

Token 190: ' index' (ID: 3472)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9151273965835571
    2. 'for' → logprob: -1.6651273965835571
    3. ' the' → logprob: -1.7901273965835571
    4. ')' → logprob: -3.0401272773742676
    5. '):
' → logprob: -3.0401272773742676
    6. 'the' → logprob: -3.7901272773742676
    7. ' ' → logprob: -4.290127277374268
    8. ',' → logprob: -4.540127277374268
    9. ' i' → logprob: -4.665127277374268
    10. '):' → logprob: -4.665127277374268

Token 191: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1954479068517685
    2. ' ,' → logprob: -1.9454479217529297
    3. ')' → logprob: -4.82044792175293
    4. ',_' → logprob: -5.57044792175293
    5. '_,' → logprob: -5.57044792175293
    6. '):' → logprob: -5.82044792175293
    7. ' for' → logprob: -6.19544792175293
    8. '),' → logprob: -6.44544792175293
    9. ' in' → logprob: -6.82044792175293
    10. ' )' → logprob: -6.82044792175293

Token 192: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45336467027664185
    2. 'for' → logprob: -1.203364610671997
    3. '           ' → logprob: -3.328364610671997
    4. ' 
' → logprob: -5.078364849090576
    5. '            
' → logprob: -5.203364849090576
    6. ' ' → logprob: -5.453364849090576
    7. '   ' → logprob: -5.578364849090576
    8. '  
' → logprob: -6.328364849090576
    9. '_' → logprob: -6.828364849090576
    10. '       ' → logprob: -6.828364849090576

Token 193: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6371521949768066
    2. ' for' → logprob: -0.7621521949768066
    3. '_' → logprob: -6.012152194976807
    4. '           ' → logprob: -6.887152194976807
    5. '   ' → logprob: -8.012151718139648
    6. ' _' → logprob: -8.512151718139648
    7. '            
' → logprob: -8.512151718139648
    8. '       ' → logprob: -9.512151718139648
    9. ' ' → logprob: -9.637151718139648
    10. '    
' → logprob: -10.012151718139648

Token 194: ' idx' (ID: 14016)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8164567351341248
    2. '_,' → logprob: -1.0664567947387695
    3. ' _,' → logprob: -2.4414567947387695
    4. ' _' → logprob: -2.5664567947387695
    5. '__,' → logprob: -5.0664567947387695
    6. ' val' → logprob: -5.1914567947387695
    7. 'item' → logprob: -5.9414567947387695
    8. '(_,' → logprob: -5.9414567947387695
    9. ' ' → logprob: -6.0664567947387695
    10. ' item' → logprob: -6.1914567947387695

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03863140940666199
    2. ' ,' → logprob: -4.163631439208984
    3. ',_' → logprob: -4.413631439208984
    4. ' in' → logprob: -4.913631439208984
    5. 'in' → logprob: -6.788631439208984
    6. ' _' → logprob: -7.413631439208984
    7. '_' → logprob: -7.913631439208984
    8. ' ' → logprob: -8.163631439208984
    9. '_,' → logprob: -8.538631439208984
    10. '_in' → logprob: -9.788631439208984

Token 196: ' dummy' (ID: 34516)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.3469632863998413
    2. 'value' → logprob: -1.5969632863998413
    3. '_' → logprob: -1.8469632863998413
    4. ' val' → logprob: -3.034463405609131
    5. 'item' → logprob: -3.409463405609131
    6. 'aa' → logprob: -3.909463405609131
    7. 'v' → logprob: -3.909463405609131
    8. 'score' → logprob: -3.909463405609131
    9. ' value' → logprob: -3.971963405609131
    10. 'AA' → logprob: -4.034463405609131

Token 197: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35429155826568604
    2. 'in' → logprob: -1.229291558265686
    3. 'value' → logprob: -6.1042914390563965
    4. '_' → logprob: -6.7292914390563965
    5. '_value' → logprob: -6.8542914390563965
    6. ' ' → logprob: -8.229291915893555
    7. '_in' → logprob: -8.229291915893555
    8. 'val' → logprob: -8.854291915893555
    9. '_val' → logprob: -9.479291915893555
    10. 'score' → logprob: -10.104291915893555

Token 198: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.015250069089233875
    2. 'enumer' → logprob: -4.265250205993652
    3. ' zip' → logprob: -7.015250205993652
    4. 'zip' → logprob: -9.015250205993652
    5. ' ' → logprob: -10.640250205993652
    6. '((' → logprob: -12.390250205993652
    7. ' list' → logprob: -12.515250205993652
    8. '(' → logprob: -12.702750205993652
    9. '   ' → logprob: -12.765250205993652
    10. '[(' → logprob: -12.827750205993652

Token 199: '(w' (ID: 7420)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007514226716011763
    2. '(range' → logprob: -5.007513999938965
    3. '(A' → logprob: -8.257513999938965
    4. '([' → logprob: -8.507513999938965
    5. '((' → logprob: -8.757513999938965
    6. '(w' → logprob: -10.507513999938965
    7. '(param' → logprob: -11.007513999938965
    8. 'range' → logprob: -11.132513999938965
    9. '(list' → logprob: -11.132513999938965
    10. '(self' → logprob: -11.257513999938965

Token 200: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012011817889288068
    2. '[' → logprob: -7.626201152801514
    3. ' ):' → logprob: -8.251201629638672
    4. ':' → logprob: -8.751201629638672
    5. '):
' → logprob: -8.751201629638672
    6. 'w' → logprob: -10.001201629638672
    7. ',' → logprob: -10.626201629638672
    8. '[:' → logprob: -12.001201629638672
    9. '*' → logprob: -12.251201629638672
    10. '   ' → logprob: -12.563701629638672

Token 201: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14468015730381012
    2. '<|end|>' → logprob: -2.1446802616119385
    3. ':' → logprob: -5.269680023193359
    4. '                ' → logprob: -5.519680023193359
    5. ' ' → logprob: -6.019680023193359
    6. '           ' → logprob: -6.894680023193359
    7. '            ' → logprob: -7.144680023193359
    8. ':
' → logprob: -7.269680023193359
    9. '<|end|>' → logprob: -7.519680023193359
    10. '                
' → logprob: -7.644680023193359

Token 202: ' lx' (ID: 153863)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.108585000038147
    2. '               ' → logprob: -1.608585000038147
    3. '                
' → logprob: -1.608585000038147
    4. '                ' → logprob: -2.9835848808288574
    5. '            ' → logprob: -3.1085848808288574
    6. '            
' → logprob: -3.2335848808288574
    7. '           ' → logprob: -3.3585848808288574
    8. ' ' → logprob: -3.3585848808288574
    9. '             
' → logprob: -4.983584880828857
    10. ' if' → logprob: -4.983584880828857

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19685904681682587
    2. '=' → logprob: -1.9468590021133423
    3. ',' → logprob: -3.446859121322632
    4. 'x' → logprob: -6.821858882904053
    5. '   ' → logprob: -7.571858882904053
    6. ' +=' → logprob: -8.196859359741211
    7. ' ' → logprob: -8.321859359741211
    8. '=len' → logprob: -8.571859359741211
    9. 'ength' → logprob: -8.696859359741211
    10. 'w' → logprob: -8.821859359741211

Token 204: ' w' (ID: 286)
  Prédit: 'AA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AA' → logprob: -0.6191009283065796
    2. 'w' → logprob: -1.6191009283065796
    3. ' AA' → logprob: -2.244101047515869
    4. 'dummy' → logprob: -2.619101047515869
    5. 'x' → logprob: -3.869101047515869
    6. ' w' → logprob: -3.994101047515869
    7. ' dummy' → logprob: -4.244101047515869
    8. '(' → logprob: -4.494101047515869
    9. ' x' → logprob: -5.744101047515869
    10. ' (' → logprob: -6.494101047515869

Token 205: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.005747118033468723
    2. '[' → logprob: -5.255747318267822
    3. '<|end|>' → logprob: -9.005746841430664
    4. ' [' → logprob: -10.005746841430664
    5. '[ix' → logprob: -10.130746841430664
    6. '*' → logprob: -10.380746841430664
    7. '[token' → logprob: -10.505746841430664
    8. '[
' → logprob: -10.505746841430664
    9. '<|end|>' → logprob: -10.880746841430664
    10. ' *' → logprob: -11.005746841430664

Token 206: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03589649498462677
    2. ']*' → logprob: -4.035896301269531
    3. '*' → logprob: -5.160896301269531
    4. ' *' → logprob: -5.535896301269531
    5. ' ]' → logprob: -5.785896301269531
    6. ']+' → logprob: -6.160896301269531
    7. '[idx' → logprob: -7.535896301269531
    8. '+' → logprob: -7.785896301269531
    9. '-' → logprob: -8.285896301269531
    10. ' -' → logprob: -8.785896301269531

Token 207: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3993843197822571
    2. '*' → logprob: -1.1493842601776123
    3. ' +' → logprob: -5.524384498596191
    4. '+' → logprob: -5.524384498596191
    5. '**' → logprob: -7.024384498596191
    6. '*x' → logprob: -7.024384498596191
    7. '           ' → logprob: -7.149384498596191
    8. ',' → logprob: -8.149384498596191
    9. '[' → logprob: -8.149384498596191
    10. '*l' → logprob: -8.524384498596191

Token 208: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1293354481458664
    2. 'AA' → logprob: -2.629335403442383
    3. 'y' → logprob: -4.254335403442383
    4. ' x' → logprob: -4.379335403442383
    5. '1' → logprob: -4.754335403442383
    6. ' AA' → logprob: -5.879335403442383
    7. 'z' → logprob: -6.004335403442383
    8. '(' → logprob: -6.129335403442383
    9. ' ' → logprob: -6.879335403442383
    10. 'M' → logprob: -7.129335403442383

Token 209: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15500272810459137
    2. 'AA' → logprob: -2.9050028324127197
    3. '1' → logprob: -3.0300028324127197
    4. 'y' → logprob: -3.6550028324127197
    5. 'M' → logprob: -5.780002593994141
    6. '(' → logprob: -6.030002593994141
    7. 'z' → logprob: -6.030002593994141
    8. '(M' → logprob: -6.530002593994141
    9. 'w' → logprob: -6.530002593994141
    10. '((' → logprob: -6.780002593994141

Token 210: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' rx' (ID: 37623)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7890369296073914
    2. 'x' → logprob: -2.539036989212036
    3. ' if' → logprob: -2.664036989212036
    4. '            ' → logprob: -2.664036989212036
    5. '<|end|>' → logprob: -2.914036989212036
    6. ' ' → logprob: -3.164036989212036
    7. ' x' → logprob: -3.414036989212036
    8. ' for' → logprob: -3.414036989212036
    9. ' funky' → logprob: -3.414036989212036
    10. 'if' → logprob: -3.664036989212036

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31423425674438477
    2. '=' → logprob: -1.3142342567443848
    3. ',' → logprob: -7.064234256744385
    4. ' ' → logprob: -10.064233779907227
    5. ')' → logprob: -11.189233779907227
    6. ' ,' → logprob: -11.189233779907227
    7. '[idx' → logprob: -11.439233779907227
    8. 'idx' → logprob: -12.189233779907227
    9. '+' → logprob: -12.189233779907227
    10. '   ' → logprob: -12.564233779907227

Token 214: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09546305984258652
    2. ' x' → logprob: -2.4704630374908447
    3. 'y' → logprob: -6.345463275909424
    4. 'M' → logprob: -6.845463275909424
    5. ' y' → logprob: -6.970463275909424
    6. ' M' → logprob: -7.220463275909424
    7. 'w' → logprob: -7.220463275909424
    8. 'z' → logprob: -7.470463275909424
    9. 'param' → logprob: -8.220462799072266
    10. ' w' → logprob: -8.970462799072266

Token 215: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.002021901309490204
    2. '[' → logprob: -6.252021789550781
    3. ' [' → logprob: -10.252021789550781
    4. 'idx' → logprob: -10.502021789550781
    5. '[l' → logprob: -12.377021789550781
    6. ' idx' → logprob: -12.752021789550781
    7. '[
' → logprob: -12.752021789550781
    8. '   ' → logprob: -13.377021789550781
    9. '[index' → logprob: -13.627021789550781
    10. ')' → logprob: -13.627021789550781

Token 216: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30151525139808655
    2. '+' → logprob: -2.5515153408050537
    3. ' +' → logprob: -3.0515153408050537
    4. ' -' → logprob: -3.3015153408050537
    5. ' ]' → logprob: -3.5515153408050537
    6. ')' → logprob: -3.6765153408050537
    7. '-' → logprob: -3.8015153408050537
    8. ']+' → logprob: -4.426515102386475
    9. ' )' → logprob: -5.801515102386475
    10. ' ' → logprob: -6.176515102386475

Token 217: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6870562434196472
    2. '-' → logprob: -0.9370562434196472
    3. '<|end|>' → logprob: -2.937056303024292
    4. '+' → logprob: -4.437056064605713
    5. ' +' → logprob: -4.437056064605713
    6. '<|end|>' → logprob: -4.812056064605713
    7. ' ' → logprob: -5.312056064605713
    8. '               ' → logprob: -5.937056064605713
    9. ')' → logprob: -6.187056064605713
    10. ' if' → logprob: -6.187056064605713

Token 218: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013036933727562428
    2. ' ' → logprob: -4.388036727905273
    3. '0' → logprob: -8.013036727905273
    4. ' y' → logprob: -10.013036727905273
    5. 'y' → logprob: -10.263036727905273
    6. 'w' → logprob: -10.700536727905273
    7. 'z' → logprob: -10.825536727905273
    8. 'lx' → logprob: -11.513036727905273
    9. '<|end|>' → logprob: -11.575536727905273
    10. ' w' → logprob: -11.638036727905273

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013488641707226634
    2. ' ' → logprob: -9.125134468078613
    3. '0' → logprob: -11.000134468078613
    4. '2' → logprob: -12.375134468078613
    5. 'lx' → logprob: -14.250134468078613
    6. 'w' → logprob: -14.375134468078613
    7. '   ' → logprob: -14.875134468078613
    8. '-' → logprob: -15.125134468078613
    9. 'z' → logprob: -15.250134468078613
    10. 'l' → logprob: -15.312634468078613

Token 220: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7312976717948914
    2. '<|end|>' → logprob: -1.4812977313995361
    3. '
' → logprob: -1.6062977313995361
    4. ' 
' → logprob: -3.731297731399536
    5. '           ' → logprob: -3.731297731399536
    6. '                
' → logprob: -4.606297492980957
    7. ' ' → logprob: -5.106297492980957
    8. '            
' → logprob: -5.231297492980957
    9. '  
' → logprob: -5.606297492980957
    10. ' if' → logprob: -5.856297492980957

Token 221: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02993897534906864
    2. '<|end|>' → logprob: -4.6549391746521
    3. '                
' → logprob: -5.0299391746521
    4. '
' → logprob: -5.4049391746521
    5. ' if' → logprob: -5.7799391746521
    6. ' 
' → logprob: -6.7799391746521
    7. '  
' → logprob: -6.9049391746521
    8. '           ' → logprob: -7.6549391746521
    9. ',' → logprob: -7.6549391746521
    10. 'if' → logprob: -7.7799391746521

Token 222: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4370441436767578
    2. 'if' (adapté à ' if') → logprob: -1.0620441436767578
    3. '               ' → logprob: -6.562044143676758
    4. '<|end|>' → logprob: -6.812044143676758
    5. '           ' → logprob: -6.937044143676758
    6. '            
' → logprob: -7.562044143676758
    7. ' 
' → logprob: -7.687044143676758
    8. '                
' → logprob: -7.812044143676758
    9. ' ' → logprob: -8.187044143676758
    10. ' for' → logprob: -8.312044143676758

Token 223: ' AA' (ID: 44568)
  Prédit: 'AA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AA' → logprob: -0.28545475006103516
    2. ' AA' → logprob: -1.6604547500610352
    3. 'z' → logprob: -4.535454750061035
    4. 'param' → logprob: -4.785454750061035
    5. 'Q' → logprob: -5.410454750061035
    6. 'M' → logprob: -5.535454750061035
    7. ' Q' → logprob: -5.660454750061035
    8. '(' → logprob: -5.660454750061035
    9. ' param' → logprob: -5.660454750061035
    10. 'len' → logprob: -5.785454750061035

Token 224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005747167742811143
    2. '[l' → logprob: -7.500574588775635
    3. '[
' → logprob: -12.250575065612793
    4. ' [' → logprob: -12.375575065612793
    5. '   ' → logprob: -12.875575065612793
    6. '[s' → logprob: -13.250575065612793
    7. '>' → logprob: -13.375575065612793
    8. ' ' → logprob: -14.375575065612793
    9. '

' → logprob: -14.500575065612793
    10. '```' → logprob: -14.750575065612793

Token 225: 'rx' (ID: 26910)
  Prédit: 'lx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lx' → logprob: -0.13082818686962128
    2. 'rx' → logprob: -2.1308281421661377
    3. ' lx' → logprob: -6.005828380584717
    4. ' rx' → logprob: -8.505827903747559
    5. '   ' → logprob: -8.880827903747559
    6. 'ry' → logprob: -8.943327903747559
    7. ' ' → logprob: -9.068327903747559
    8. 'rl' → logprob: -9.880827903747559
    9. 'idx' → logprob: -9.943327903747559
    10. '```' → logprob: -10.005827903747559

Token 226: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11103899031877518
    2. ']==' → logprob: -2.61103892326355
    3. '-' → logprob: -3.86103892326355
    4. ']-' → logprob: -5.361039161682129
    5. ' -' → logprob: -5.861039161682129
    6. ' ]' → logprob: -6.486039161682129
    7. '[' → logprob: -7.611039161682129
    8. '==' → logprob: -8.236039161682129
    9. ']>=' → logprob: -8.361039161682129
    10. ']>' → logprob: -8.611039161682129

Token 227: ' -' (ID: 533)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6325808763504028
    2. '==' → logprob: -1.5075808763504028
    3. ' -' → logprob: -1.8825808763504028
    4. '-' → logprob: -2.5075807571411133
    5. ' >' → logprob: -5.007580757141113
    6. '>' → logprob: -5.757580757141113
    7. '[' → logprob: -6.007580757141113
    8. ' <=' → logprob: -8.257580757141113
    9. ']==' → logprob: -8.507580757141113
    10. ' >=' → logprob: -8.632580757141113

Token 228: ' AA' (ID: 44568)
  Prédit: 'AA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AA' → logprob: -0.026346631348133087
    2. ' AA' → logprob: -3.6513466835021973
    3. ' ' → logprob: -11.026346206665039
    4. '==' → logprob: -11.276346206665039
    5. '>' → logprob: -12.776346206665039
    6. '1' → logprob: -13.026346206665039
    7. '   ' → logprob: -13.463846206665039
    8. 'A' → logprob: -13.713846206665039
    9. '[' → logprob: -13.838846206665039
    10. '  ' → logprob: -13.963846206665039

Token 229: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.002339612226933241
    2. '[' → logprob: -6.127339839935303
    3. ' [' → logprob: -9.127339363098145
    4. '(l' → logprob: -10.877339363098145
    5. '[
' → logprob: -11.877339363098145
    6. ' lx' → logprob: -12.502339363098145
    7. 'lx' → logprob: -12.877339363098145
    8. '"' → logprob: -13.252339363098145
    9. '```' → logprob: -13.252339363098145
    10. '	l' → logprob: -13.627339363098145

Token 230: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4736459888808895e-05
    2. ']' → logprob: -11.750014305114746
    3. 'ax' → logprob: -13.812514305114746
    4. ')' → logprob: -14.375014305114746
    5. '[' → logprob: -14.750014305114746
    6. '```' → logprob: -15.187514305114746
    7. '}' → logprob: -15.375014305114746
    8. 'ix' → logprob: -15.437514305114746
    9. 'z' → logprob: -15.437514305114746
    10. 'ex' → logprob: -15.625014305114746

Token 231: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6923142075538635
    2. ']==' → logprob: -0.8173142075538635
    3. ' ==' → logprob: -3.4423141479492188
    4. '==' → logprob: -4.192314147949219
    5. ' ]' → logprob: -4.942314147949219
    6. ']>' → logprob: -7.442314147949219
    7. '[' → logprob: -7.567314147949219
    8. ']>=' → logprob: -7.567314147949219
    9. ']<=' → logprob: -7.692314147949219
    10. ')' → logprob: -8.067314147949219

Token 232: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1299452930688858
    2. '==' → logprob: -2.1299452781677246
    3. ' >' → logprob: -6.504945278167725
    4. ' >=' → logprob: -7.629945278167725
    5. ' <=' → logprob: -7.879945278167725
    6. '>' → logprob: -8.004945755004883
    7. '>=' → logprob: -9.254945755004883
    8. ' ' → logprob: -9.379945755004883
    9. '<=' → logprob: -10.129945755004883
    10. ']==' → logprob: -10.879945755004883

Token 233: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04821164906024933
    2. ' y' → logprob: -3.1732115745544434
    3. 'z' → logprob: -5.298211574554443
    4. ' z' → logprob: -9.548212051391602
    5. 'Q' → logprob: -10.173212051391602
    6. '   ' → logprob: -10.548212051391602
    7. 'param' → logprob: -10.673212051391602
    8. ' ' → logprob: -10.673212051391602
    9. '  ' → logprob: -12.798212051391602
    10. ' ' → logprob: -13.048212051391602

Token 234: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00044902291847392917
    2. '[' → logprob: -7.875449180603027
    3. '[z' → logprob: -10.750449180603027
    4. 'idx' → logprob: -12.000449180603027
    5. 'dummy' → logprob: -12.125449180603027
    6. '[q' → logprob: -12.250449180603027
    7. ' [' → logprob: -12.625449180603027
    8. '[d' → logprob: -12.625449180603027
    9. '[param' → logprob: -13.000449180603027
    10. '   ' → logprob: -13.000449180603027

Token 235: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6426282525062561
    2. '[idx' → logprob: -1.3926281929016113
    3. ':' → logprob: -1.7676281929016113
    4. '[' → logprob: -3.5176281929016113
    5. '):' → logprob: -4.767628192901611
    6. ']' → logprob: -5.267628192901611
    7. ']:
' → logprob: -5.767628192901611
    8. ' ]' → logprob: -6.267628192901611
    9. '   ' → logprob: -6.517628192901611
    10. ' ):' → logprob: -7.392628192901611

Token 236: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6079734563827515
    2. '               ' → logprob: -0.9829734563827515
    3. ':
' → logprob: -2.982973575592041
    4. ' and' → logprob: -4.107973575592041
    5. '                   ' → logprob: -5.107973575592041
    6. '           ' → logprob: -5.357973575592041
    7. '):
' → logprob: -7.732973575592041
    8. '                       ' → logprob: -7.732973575592041
    9. '<|end|>' → logprob: -7.857973575592041
    10. '                ' → logprob: -7.982973575592041

Token 237: ' funky' (ID: 103816)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.1463207006454468
    2. ' funky' → logprob: -1.2713207006454468
    3. '                       ' → logprob: -1.3963207006454468
    4. '               ' → logprob: -2.5213208198547363
    5. 'funk' → logprob: -3.8963208198547363
    6. 'self' → logprob: -4.896320819854736
    7. '                    ' → logprob: -5.021320819854736
    8. '                        
' → logprob: -5.021320819854736
    9. ' self' → logprob: -5.146320819854736
    10. '                    
' → logprob: -5.521320819854736

Token 238: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.5048530030981055e-06
    2. 'score' → logprob: -13.500001907348633
    3. '_scores' → logprob: -17.000001907348633
    4. 'Score' → logprob: -18.250001907348633
    5. '_' → logprob: -18.375001907348633
    6. '_s' → logprob: -18.375001907348633
    7. '_SCORE' → logprob: -18.375001907348633
    8. '_count' → logprob: -19.125001907348633
    9. '_sc' → logprob: -19.375001907348633
    10. '_code' → logprob: -19.375001907348633

Token 239: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5779166221618652
    2. '+=' → logprob: -0.8279166221618652
    3. ' =' → logprob: -6.577916622161865
    4. '=' → logprob: -7.452916622161865
    5. ']+=' → logprob: -13.202917098999023
    6. ' ' → logprob: -13.452917098999023
    7. '+' → logprob: -13.827917098999023
    8. ' +' → logprob: -15.702917098999023
    9. '+='' → logprob: -16.827917098999023
    10. '+=(' → logprob: -16.952917098999023

Token 240: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00011856284982059151
    2. ' z' → logprob: -9.125118255615234
    3. '   ' → logprob: -12.000118255615234
    4. '           ' → logprob: -14.250118255615234
    5. 'param' → logprob: -14.375118255615234
    6. '```' → logprob: -14.750118255615234
    7. '       ' → logprob: -15.000118255615234
    8. '	z' → logprob: -15.250118255615234
    9. 'q' → logprob: -15.500118255615234
    10. '1' → logprob: -15.750118255615234

Token 241: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0001354824344161898
    2. '[' → logprob: -9.00013542175293
    3. 'idx' → logprob: -11.62513542175293
    4. '[id' → logprob: -13.87513542175293
    5. ' [' → logprob: -14.62513542175293
    6. '[
' → logprob: -15.00013542175293
    7. '[ix' → logprob: -15.75013542175293
    8. '[i' → logprob: -15.75013542175293
    9. ' idx' → logprob: -15.87513542175293
    10. '[ip' → logprob: -15.87513542175293

Token 242: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13228464126586914
    2. '           ' → logprob: -2.132284641265869
    3. '<|end|>' → logprob: -6.757284641265869
    4. '            
' → logprob: -6.882284641265869
    5. ' 
' → logprob: -7.382284641265869
    6. '
' → logprob: -7.632284641265869
    7. '  
' → logprob: -7.632284641265869
    8. '       ' → logprob: -8.132284164428711
    9. '    
' → logprob: -8.632284164428711
    10. '               ' → logprob: -8.882284164428711

Token 244: ' outcome' (ID: 24192)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03053206019103527
    2. '
' → logprob: -4.280531883239746
    3. '       ' → logprob: -4.405531883239746
    4. ' if' → logprob: -6.405531883239746
    5. '            
' → logprob: -7.655531883239746
    6. ')' → logprob: -7.780531883239746
    7. ' 
' → logprob: -8.030531883239746
    8. '   ' → logprob: -8.655531883239746
    9. '               ' → logprob: -8.905531883239746
    10. '  
' → logprob: -9.155531883239746

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31345897912979126
    2. '=' → logprob: -1.3134589195251465
    3. '=max' → logprob: -8.563459396362305
    4. ' ' → logprob: -13.063459396362305
    5. 'max' → logprob: -13.063459396362305
    6. ' +=' → logprob: -14.438459396362305
    7. '+=' → logprob: -14.813459396362305
    8. ' max' → logprob: -15.438459396362305
    9. '   ' → logprob: -15.938459396362305
    10. '    ' → logprob: -16.188459396362305

Token 246: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.3886455297470093
    2. ' MAX' → logprob: -1.1386455297470093
    3. ' max' → logprob: -6.638645648956299
    4. 'max' → logprob: -7.763645648956299
    5. ' ' → logprob: -11.01364517211914
    6. '(MAX' → logprob: -11.63864517211914
    7. 'MA' → logprob: -12.88864517211914
    8. 'MIN' → logprob: -13.01364517211914
    9. '   ' → logprob: -13.82614517211914
    10. '_MAX' → logprob: -13.88864517211914

Token 247: '(out' (ID: 20090)
  Prédit: '(out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(out' → logprob: -0.0010374527191743255
    2. '(f' → logprob: -6.87603759765625
    3. '(' → logprob: -12.62603759765625
    4. '(max' → logprob: -14.37603759765625
    5. '((' → logprob: -15.12603759765625
    6. 'out' → logprob: -15.50103759765625
    7. '(fun' → logprob: -16.12603759765625
    8. '(func' → logprob: -16.62603759765625
    9. '[out' → logprob: -17.00103759765625
    10. '([' → logprob: -17.00103759765625

Token 248: 'come' (ID: 2512)
  Prédit: 'come'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'come' → logprob: -0.0018752054311335087
    2. '(' → logprob: -6.626875400543213
    3. '(c' → logprob: -8.251874923706055
    4. 'com' → logprob: -9.126874923706055
    5. '(out' → logprob: -9.251874923706055
    6. '(com' → logprob: -10.251874923706055
    7. 'COME' → logprob: -11.126874923706055
    8. 'Come' → logprob: -11.876874923706055
    9. 'ome' → logprob: -12.001874923706055
    10. '   ' → logprob: -12.251874923706055

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003404687449801713
    2. ' ,' → logprob: -8.375340461730957
    3. ',f' → logprob: -9.250340461730957
    4. ',
' → logprob: -11.250340461730957
    5. ',

' → logprob: -14.875340461730957
    6. ',
' → logprob: -16.375341415405273
    7. ',function' → logprob: -16.375341415405273
    8. ',int' → logprob: -16.500341415405273
    9. ',d' → logprob: -17.375341415405273
    10. ' ,
' → logprob: -17.625341415405273

Token 250: ' funky' (ID: 103816)
  Prédit: 'funk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'funk' → logprob: -0.2817654311656952
    2. ' funky' → logprob: -1.4067654609680176
    3. 'fun' → logprob: -8.03176498413086
    4. ' funk' → logprob: -8.40676498413086
    5. 'fung' → logprob: -10.78176498413086
    6. 'f' → logprob: -11.15676498413086
    7. ' ' → logprob: -11.40676498413086
    8. '   ' → logprob: -12.03176498413086
    9. 'func' → logprob: -12.28176498413086
    10. '```' → logprob: -13.15676498413086

Token 251: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -4.127333340875339e-06
    2. 'score' → logprob: -12.500003814697266
    3. '_scores' → logprob: -16.000003814697266
    4. 'Score' → logprob: -16.375003814697266
    5. '_s' → logprob: -16.750003814697266
    6. ')' → logprob: -16.875003814697266
    7. '_sc' → logprob: -17.750003814697266
    8. '_' → logprob: -18.000003814697266
    9. '_SCORE' → logprob: -18.625003814697266
    10. '_code' → logprob: -18.625003814697266

Token 252: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10063739866018295
    2. ')
' → logprob: -2.350637435913086
    3. '       ' → logprob: -7.975637435913086
    4. ')return' → logprob: -10.350637435913086
    5. ')

' → logprob: -10.600637435913086
    6. ' )' → logprob: -11.225637435913086
    7. '           ' → logprob: -12.475637435913086
    8. '
' → logprob: -12.725637435913086
    9. ' )
' → logprob: -12.975637435913086
    10. ')
' → logprob: -13.725637435913086

Token 253: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8768457174301147
    2. '<|end|>' → logprob: -1.1268457174301147
    3. ' ' → logprob: -2.5018458366394043
    4. '
' → logprob: -2.6268458366394043
    5. '  
' → logprob: -3.6268458366394043
    6. '       ' → logprob: -3.6268458366394043
    7. ' return' → logprob: -4.376845836639404
    8. 'return' → logprob: -4.626845836639404
    9. '    
' → logprob: -5.126845836639404
    10. '        
' → logprob: -5.501845836639404

Token 254: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02933129481971264
    2. '        
' → logprob: -4.779331207275391
    3. '
' → logprob: -5.154331207275391
    4. 'return' → logprob: -5.154331207275391
    5. ' return' → logprob: -5.654331207275391
    6. ' 
' → logprob: -6.779331207275391
    7. '   ' → logprob: -7.154331207275391
    8. '<|end|>' → logprob: -7.654331207275391
    9. ' ' → logprob: -7.779331207275391
    10. '' → logprob: -7.904331207275391

Token 255: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -6.861651490908116e-05
    2. '.' → logprob: -9.625068664550781
    3. 'max' → logprob: -13.250068664550781
    4. '.maximum' → logprob: -15.375068664550781
    5. ' .' → logprob: -15.500068664550781
    6. '.min' → logprob: -16.00006866455078
    7. '.ma' → logprob: -17.12506866455078
    8. '.Max' → logprob: -17.37506866455078
    9. '.m' → logprob: -17.62506866455078
    10. '.user' → logprob: -17.75006866455078

Token 256: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: 0.0
    2. 'result' → logprob: -17.75
    3. '_results' → logprob: -17.75
    4. '_RESULT' → logprob: -18.25
    5. '_score' → logprob: -18.625
    6. '_' → logprob: -18.875
    7. '_Result' → logprob: -19.375
    8. '_value' → logprob: -19.5
    9. '_res' → logprob: -20.0
    10. '_answer' → logprob: -20.625

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751529917120934
    2. '=' → logprob: -3.5297515392303467
    3. ' +=' → logprob: -14.529751777648926
    4. ' ' → logprob: -14.904751777648926
    5. ' =
' → logprob: -15.904751777648926
    6. '=max' → logprob: -16.77975082397461
    7. ' |=' → logprob: -17.15475082397461
    8. ' .=' → logprob: -17.65475082397461
    9. '    ' → logprob: -17.65475082397461
    10. ',' → logprob: -18.02975082397461

Token 258: ' outcome' (ID: 24192)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -1.073229193687439
    2. 'out' → logprob: -1.448229193687439
    3. ' outcome' → logprob: -1.823229193687439
    4. 'max' → logprob: -1.948229193687439
    5. ' max' → logprob: -2.8232293128967285
    6. ' MAX' → logprob: -2.8232293128967285
    7. 'OUT' → logprob: -8.94822883605957
    8. 'Max' → logprob: -10.82322883605957
    9. ' ' → logprob: -10.94822883605957
    10. ' out' → logprob: -10.94822883605957

Token 259: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: ' show' (ID: 2356)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.8528605103492737
    2. 'get' → logprob: -1.227860450744629
    3. ' main' → logprob: -1.727860450744629
    4. 'main' → logprob: -3.352860450744629
    5. ' run' → logprob: -4.102860450744629
    6. '__' → logprob: -4.977860450744629
    7. ' process' → logprob: -5.227860450744629
    8. 'run' → logprob: -5.352860450744629
    9. 'process' → logprob: -5.602860450744629
    10. ' __' → logprob: -5.602860450744629

Token 263: '_it' (ID: 35166)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.29626789689064026
    2. '(' → logprob: -1.7962678670883179
    3. '()' → logprob: -2.4212679862976074
    4. 'self' → logprob: -7.171267986297607
    5. '_' → logprob: -8.29626750946045
    6. '(
' → logprob: -9.04626750946045
    7. '()(' → logprob: -9.54626750946045
    8. '_result' → logprob: -9.67126750946045
    9. '():' → logprob: -9.67126750946045
    10. '(){' → logprob: -9.79626750946045

Token 264: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.034779615700244904
    2. '(' → logprob: -3.4097795486450195
    3. 'self' → logprob: -7.6597795486450195
    4. '(
' → logprob: -8.53477954864502
    5. '():' → logprob: -9.28477954864502
    6. '()' → logprob: -9.28477954864502
    7. '(s' → logprob: -9.65977954864502
    8. '   ' → logprob: -9.90977954864502
    9. ':' → logprob: -10.03477954864502
    10. '```' → logprob: -10.40977954864502

Token 265: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3871529698371887
    2. '):
' → logprob: -1.137152910232544
    3. ',' → logprob: -8.762152671813965
    4. '   ' → logprob: -9.887152671813965
    5. '(self' → logprob: -10.512152671813965
    6. 'self' → logprob: -11.137152671813965
    7. '):
' → logprob: -11.387152671813965
    8. '():
' → logprob: -12.512152671813965
    9. ')' → logprob: -12.637152671813965
    10. ':' → logprob: -12.762152671813965

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027111053350381553
    2. 'print' → logprob: -8.62527084350586
    3. '   ' → logprob: -9.87527084350586
    4. 'return' → logprob: -11.25027084350586
    5. ' print' → logprob: -11.62527084350586
    6. '```' → logprob: -11.75027084350586
    7. '	' → logprob: -12.37527084350586
    8. ' return' → logprob: -13.12527084350586
    9. '    ' → logprob: -14.25027084350586
    10. '      ' → logprob: -14.87527084350586

Token 267: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10713396221399307
    2. '       ' → logprob: -2.3571338653564453
    3. ' print' → logprob: -5.107133865356445
    4. '   ' → logprob: -7.232133865356445
    5. 'return' → logprob: -9.107133865356445
    6. '```' → logprob: -11.732133865356445
    7. '	print' → logprob: -13.232133865356445
    8. ' return' → logprob: -13.357133865356445
    9. '    ' → logprob: -13.857133865356445
    10. ' ' → logprob: -13.982133865356445

Token 268: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3136673867702484
    2. '(' → logprob: -1.3136674165725708
    3. '(f' → logprob: -7.938667297363281
    4. '(
' → logprob: -10.563667297363281
    5. '()' → logprob: -11.188667297363281
    6. 'self' → logprob: -12.813667297363281
    7. '((' → logprob: -13.063667297363281
    8. ' (' → logprob: -13.438667297363281
    9. '('' → logprob: -13.688667297363281
    10. '(

' → logprob: -14.938667297363281

Token 269: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -1.8312570318812504e-05
    2. '.' → logprob: -11.500018119812012
    3. ' .' → logprob: -11.875018119812012
    4. ').' → logprob: -14.250018119812012
    5. 'max' → logprob: -15.125018119812012
    6. '.min' → logprob: -16.250019073486328
    7. '.m' → logprob: -17.875019073486328
    8. '.
' → logprob: -18.000019073486328
    9. '.best' → logprob: -18.000019073486328
    10. '   ' → logprob: -18.125019073486328

Token 270: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -3.128163257315464e-07
    2. ' _' → logprob: -16.625
    3. 'result' → logprob: -16.625
    4. '_' → logprob: -17.875
    5. '_results' → logprob: -18.125
    6. '_res' → logprob: -18.875
    7. '_RESULT' → logprob: -19.875
    8. '_
' → logprob: -19.875
    9. ')_' → logprob: -20.25
    10. '_answer' → logprob: -20.5

Token 271: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ')
' → logprob: -12.500005722045898
    3. ' )' → logprob: -14.125005722045898
    4. '())' → logprob: -15.250005722045898
    5. '()' → logprob: -15.375005722045898
    6. '   ' → logprob: -16.0000057220459
    7. '<|end|>' → logprob: -16.5000057220459
    8. ')}' → logprob: -16.6250057220459
    9. '))' → logprob: -17.0000057220459
    10. '}' → logprob: -17.6250057220459

Token 272: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: ' weird' (ID: 28783)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.042520392686128616
    2. 'main' → logprob: -4.292520523071289
    3. '_main' → logprob: -4.292520523071289
    4. '__' → logprob: -5.417520523071289
    5. ' __' → logprob: -5.542520523071289
    6. '_' → logprob: -5.917520523071289
    7. ' sys' → logprob: -6.667520523071289
    8. ' ' → logprob: -7.417520523071289
    9. '<|end|>' → logprob: -8.292520523071289
    10. ' solve' → logprob: -8.542520523071289

Token 274: '_var' (ID: 12782)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.430267572402954
    2. '_function' → logprob: -1.930267572402954
    3. '_main' → logprob: -2.180267572402954
    4. '_func' → logprob: -2.805267572402954
    5. '_case' → logprob: -2.805267572402954
    6. '_choice' → logprob: -2.805267572402954
    7. '_' → logprob: -2.930267572402954
    8. '_value' → logprob: -3.805267572402954
    9. '_sum' → logprob: -4.430267333984375
    10. '_split' → logprob: -4.555267333984375

Token 275: '_parser' (ID: 44939)
  Prédit: '_name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_name' → logprob: -0.26810571551322937
    2. '():' → logprob: -1.7681057453155518
    3. 'Name' → logprob: -3.7681057453155518
    4. 'iable' → logprob: -4.018105506896973
    5. '():
' → logprob: -4.768105506896973
    6. 's' → logprob: -5.143105506896973
    7. '_names' → logprob: -6.268105506896973
    8. ' =' → logprob: -7.018105506896973
    9. 'name' → logprob: -7.393105506896973
    10. '_' → logprob: -7.393105506896973

Token 276: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.29375872015953064
    2. '(' → logprob: -1.918758749961853
    3. '(s' → logprob: -3.2937586307525635
    4. '(input' → logprob: -3.5437586307525635
    5. '(argv' → logprob: -4.293758869171143
    6. '(line' → logprob: -4.418758869171143
    7. '():
' → logprob: -6.043758869171143
    8. '(prompt' → logprob: -6.168758869171143
    9. '(args' → logprob: -6.293758869171143
    10. '(user' → logprob: -6.793758869171143

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004429435357451439
    2. 'n' → logprob: -9.250442504882812
    3. 'import' → logprob: -9.750442504882812
    4. '()' → logprob: -9.750442504882812
    5. 'input' → logprob: -10.000442504882812
    6. ' input' → logprob: -10.625442504882812
    7. 'try' → logprob: -10.750442504882812
    8. '    
' → logprob: -10.750442504882812
    9. '   ' → logprob: -11.625442504882812
    10. ' return' → logprob: -11.750442504882812

Token 278: ' '''' (ID: 22434)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.008773684501648
    2. 'N' → logprob: -1.508773684501648
    3. '   ' → logprob: -1.883773684501648
    4. 'n' → logprob: -2.5087738037109375
    5. 'return' → logprob: -3.5087738037109375
    6. 'try' → logprob: -3.5087738037109375
    7. 'input' → logprob: -3.7587738037109375
    8. 'line' → logprob: -4.0087738037109375
    9. ' import' → logprob: -4.2587738037109375
    10. ' N' → logprob: -4.2587738037109375

Token 279: 'A' (ID: 32)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23542097210884094
    2. 'return' → logprob: -3.2354209423065186
    3. '"""' → logprob: -3.3604209423065186
    4. 'import' → logprob: -3.4854209423065186
    5. '   ' → logprob: -3.4854209423065186
    6. 'for' → logprob: -3.9854209423065186
    7. ''''' → logprob: -5.110421180725098
    8. 'pass' → logprob: -5.235421180725098
    9. 'input' → logprob: -5.360421180725098
    10. '#' → logprob: -5.860421180725098

Token 280: ' generator' (ID: 23989)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2274748831987381
    2. ' def' → logprob: -2.9774749279022217
    3. 'b' → logprob: -3.2274749279022217
    4. '   ' → logprob: -3.6024749279022217
    5. 'return' → logprob: -4.477474689483643
    6. ')' → logprob: -4.977474689483643
    7. '
' → logprob: -5.102474689483643
    8. ' return' → logprob: -5.227474689483643
    9. 'll' → logprob: -5.352474689483643
    10. '#!/' → logprob: -5.602474689483643

Token 281: ' that' (ID: 484)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.18922556936740875
    2. ':' → logprob: -2.064225673675537
    3. 'def' → logprob: -3.939225673675537
    4. '():
' → logprob: -4.064225673675537
    5. '):' → logprob: -5.439225673675537
    6. ':
' → logprob: -6.939225673675537
    7. ' def' → logprob: -7.314225673675537
    8. '```' → logprob: -7.564225673675537
    9. ' :' → logprob: -7.814225673675537
    10. ',' → logprob: -7.939225673675537

Token 282: ' yields' (ID: 59684)
  Prédit: ' yields'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yields' → logprob: -0.3947499394416809
    2. '   ' → logprob: -2.644749879837036
    3. ' reads' → logprob: -2.644749879837036
    4. 'def' → logprob: -2.894749879837036
    5. ' def' → logprob: -2.894749879837036
    6. ' parses' → logprob: -3.019749879837036
    7. 'reads' → logprob: -5.144750118255615
    8. 'y' → logprob: -5.519750118255615
    9. 'par' → logprob: -5.769750118255615
    10. 'yield' → logprob: -5.894750118255615

Token 283: ' tokens' (ID: 20290)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.385985255241394
    2. 'from' → logprob: -1.635985255241394
    3. 'int' → logprob: -2.1359853744506836
    4. '   ' → logprob: -2.5109853744506836
    5. ' line' → logprob: -2.8859853744506836
    6. ')' → logprob: -3.1359853744506836
    7. ' from' → logprob: -3.2609853744506836
    8. 'input' → logprob: -3.5109853744506836
    9. 'param' → logprob: -4.135985374450684
    10. ' True' → logprob: -4.385985374450684

Token 284: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5841582417488098
    2. ' from' → logprob: -1.084158182144165
    3. ',' → logprob: -2.834158182144165
    4. ':' → logprob: -4.584158420562744
    5. 'from' → logprob: -5.084158420562744
    6. '       ' → logprob: -5.459158420562744
    7. ' in' → logprob: -5.584158420562744
    8. ' ,' → logprob: -5.584158420562744
    9. '():' → logprob: -5.584158420562744
    10. ' :' → logprob: -6.459158420562744

Token 285: ' split' (ID: 12648)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1703934520483017
    2. ' line' → logprob: -2.670393466949463
    3. '       ' → logprob: -3.045393466949463
    4. '    ' → logprob: -4.545393466949463
    5. ' split' → logprob: -4.920393466949463
    6. 'line' → logprob: -5.545393466949463
    7. ' separated' → logprob: -5.920393466949463
    8. ' splitting' → logprob: -6.045393466949463
    9. 'split' → logprob: -6.295393466949463
    10. 'def' → logprob: -6.545393466949463

Token 286: ' by' (ID: 656)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03534119576215744
    2. 'by' → logprob: -3.785341262817383
    3. ' by' → logprob: -5.910341262817383
    4. '(' → logprob: -6.035341262817383
    5. '()[' → logprob: -6.160341262817383
    6. '('' → logprob: -6.535341262817383
    7. 'lines' → logprob: -6.660341262817383
    8. '()
' → logprob: -7.660341262817383
    9. '('\' → logprob: -8.035341262817383
    10. '(None' → logprob: -8.660341262817383

Token 287: ' any' (ID: 1062)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3395087718963623
    2. ''' → logprob: -1.7145087718963623
    3. ' None' → logprob: -3.0895087718963623
    4. '()' → logprob: -3.2145087718963623
    5. ' whitespace' → logprob: -5.339509010314941
    6. 'lines' → logprob: -5.589509010314941
    7. 'split' → logprob: -5.964509010314941
    8. ''\' → logprob: -6.214509010314941
    9. 'wh' → logprob: -6.464509010314941
    10. ''''' → logprob: -6.964509010314941

Token 288: ' whitespace' (ID: 83606)
  Prédit: 'wh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wh' → logprob: -0.6994696855545044
    2. ' whitespace' → logprob: -0.6994696855545044
    3. 'space' → logprob: -6.699469566345215
    4. ' \' → logprob: -6.824469566345215
    5. '_wh' → logprob: -7.074469566345215
    6. ' ' → logprob: -7.574469566345215
    7. 'non' → logprob: -7.699469566345215
    8. 'white' → logprob: -7.699469566345215
    9. 'split' → logprob: -8.449469566345215
    10. 'delimiter' → logprob: -8.574469566345215

Token 289: ',' (ID: 11)
  Prédit: ''''
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''''
' → logprob: -0.5903668403625488
    2. ''''' → logprob: -0.9653668403625488
    3. '```' → logprob: -3.590366840362549
    4. '   ' → logprob: -4.215366840362549
    5. ',' → logprob: -5.215366840362549
    6. ' '''
' → logprob: -5.590366840362549
    7. '):
' → logprob: -5.840366840362549
    8. ')' → logprob: -6.215366840362549
    9. '):' → logprob: -6.340366840362549
    10. ' '''' → logprob: -6.840366840362549

Token 290: ' until' (ID: 4609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5395396947860718
    2. ' and' → logprob: -1.4145396947860718
    3. ' def' → logprob: -3.7895398139953613
    4. '    
' → logprob: -3.7895398139953613
    5. 'def' → logprob: -3.7895398139953613
    6. ' 
' → logprob: -4.414539813995361
    7. 'and' → logprob: -4.789539813995361
    8. '```' → logprob: -4.789539813995361
    9. '    ' → logprob: -4.914539813995361
    10. '):
' → logprob: -4.914539813995361

Token 291: ' EOF' (ID: 72412)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.44296619296073914
    2. '''' → logprob: -1.8179662227630615
    3. 'EOF' → logprob: -2.5679662227630615
    4. ' False' → logprob: -3.3179662227630615
    5. ' not' → logprob: -3.8179662227630615
    6. 'not' → logprob: -4.317965984344482
    7. ' EOF' → logprob: -4.692965984344482
    8. ''' → logprob: -5.192965984344482
    9. ' the' → logprob: -5.442965984344482
    10. 'stop' → logprob: -5.567965984344482

Token 292: ''''
' (ID: 33518)
  Prédit: '''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''''' → logprob: -0.7966107130050659
    2. ''''
' → logprob: -0.9216107130050659
    3. '   ' → logprob: -1.921610713005066
    4. '''' → logprob: -5.9216108322143555
    5. '```' → logprob: -7.4216108322143555
    6. ''''

' → logprob: -7.9216108322143555
    7. ''''
' → logprob: -7.9216108322143555
    8. '.' → logprob: -8.671610832214355
    9. ' '''' → logprob: -8.671610832214355
    10. ' '''
' → logprob: -9.046610832214355

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030155746266245842
    2. ' while' → logprob: -3.530155658721924
    3. '    
' → logprob: -8.655156135559082
    4. 'while' → logprob: -9.155156135559082
    5. '
' → logprob: -10.280156135559082
    6. '```' → logprob: -10.405156135559082
    7. '       ' → logprob: -10.905156135559082
    8. ' import' → logprob: -11.780156135559082
    9. 'import' → logprob: -12.155156135559082
    10. '    ' → logprob: -12.155156135559082

Token 294: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.16840754449367523
    2. ' while' → logprob: -2.668407440185547
    3. '   ' → logprob: -2.918407440185547
    4. 'for' → logprob: -3.918407440185547
    5. 'import' → logprob: -4.793407440185547
    6. ' for' → logprob: -6.418407440185547
    7. 'try' → logprob: -6.793407440185547
    8. ' import' → logprob: -7.668407440185547
    9. ' try' → logprob: -8.668407440185547
    10. '    
' → logprob: -10.418407440185547

Token 295: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.18293489515781403
    2. ' True' → logprob: -1.9329348802566528
    3. '(True' → logprob: -3.8079349994659424
    4. 'line' → logprob: -8.807934761047363
    5. ' line' → logprob: -9.807934761047363
    6. '(' → logprob: -10.307934761047363
    7. ' (' → logprob: -11.557934761047363
    8. '(line' → logprob: -11.557934761047363
    9. 'token' → logprob: -14.057934761047363
    10. 'chunk' → logprob: -14.432934761047363

Token 296: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3013322651386261
    2. '       ' → logprob: -1.8013322353363037
    3. ':
' → logprob: -2.4263322353363037
    4. '   ' → logprob: -5.301332473754883
    5. ' :' → logprob: -6.801332473754883
    6. ',' → logprob: -8.051332473754883
    7. ' :
' → logprob: -9.176332473754883
    8. '):
' → logprob: -10.176332473754883
    9. ':

' → logprob: -10.551332473754883
    10. '():' → logprob: -10.926332473754883

Token 297: '       ' (ID: 309)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.9104424715042114
    2. '       ' → logprob: -1.0354424715042114
    3. '   ' → logprob: -2.160442352294922
    4. ' line' → logprob: -2.285442352294922
    5. 'try' → logprob: -3.910442352294922
    6. ' token' → logprob: -5.785442352294922
    7. 'token' → logprob: -6.785442352294922
    8. 'line' → logprob: -7.910442352294922
    9. '	try' → logprob: -8.535442352294922
    10. '	line' → logprob: -8.910442352294922

Token 298: ' try' (ID: 2075)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.13002516329288483
    2. ' line' → logprob: -2.8800251483917236
    3. 'try' (adapté à ' try') → logprob: -3.1300251483917236
    4. 'token' → logprob: -4.005025386810303
    5. ' try' → logprob: -6.630025386810303
    6. '   ' → logprob: -7.130025386810303
    7. 'chunk' → logprob: -7.380025386810303
    8. ' token' → logprob: -7.505025386810303
    9. 'data' → logprob: -9.505024909973145
    10. 'l' → logprob: -9.755024909973145

Token 299: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21355268359184265
    2. ':
' → logprob: -1.838552713394165
    3. '           ' → logprob: -3.463552713394165
    4. ' :' → logprob: -6.338552474975586
    5. '            ' → logprob: -9.838552474975586
    6. ' :
' → logprob: -9.963552474975586
    7. '   ' → logprob: -11.213552474975586
    8. ':

' → logprob: -11.713552474975586
    9. '       ' → logprob: -12.088552474975586
    10. ':
' → logprob: -12.713552474975586

Token 300: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014142119325697422
    2. ' line' → logprob: -4.389142036437988
    3. 'line' → logprob: -6.889142036437988
    4. '   ' → logprob: -8.889142036437988
    5. 'data' → logprob: -9.014142036437988
    6. ' data' → logprob: -9.514142036437988
    7. 'token' → logprob: -9.764142036437988
    8. 'yield' → logprob: -10.139142036437988
    9. ' ' → logprob: -10.389142036437988
    10. ' token' → logprob: -10.889142036437988

Token 301: ' stuff' (ID: 9350)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.34369078278541565
    2. '           ' → logprob: -1.7186907529830933
    3. 'yield' → logprob: -2.468690872192383
    4. ' line' → logprob: -4.343690872192383
    5. 'token' → logprob: -4.468690872192383
    6. 'data' → logprob: -7.593690872192383
    7. 'inp' → logprob: -7.968690872192383
    8. '   ' → logprob: -8.218690872192383
    9. ' yield' → logprob: -8.468690872192383
    10. 'text' → logprob: -8.593690872192383

Token 302: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22560471296310425
    2. ' =' → logprob: -1.600604772567749
    3. '=line' → logprob: -9.600605010986328
    4. '=input' → logprob: -9.850605010986328
    5. '   ' → logprob: -10.725605010986328
    6. '           ' → logprob: -10.850605010986328
    7. '=sys' → logprob: -11.225605010986328
    8. ':' → logprob: -12.100605010986328
    9. '               ' → logprob: -12.350605010986328
    10. 'line' → logprob: -13.600605010986328

Token 303: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005504930857568979
    2. ' input' → logprob: -5.255505084991455
    3. 'sys' → logprob: -8.255504608154297
    4. ' sys' → logprob: -11.630504608154297
    5. 'next' → logprob: -13.005504608154297
    6. ' next' → logprob: -16.505504608154297
    7. '   ' → logprob: -18.005504608154297
    8. '=input' → logprob: -18.505504608154297
    9. '	input' → logprob: -18.630504608154297
    10. '_input' → logprob: -19.380504608154297

Token 304: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.8908587662735954e-05
    2. '.stdout' → logprob: -11.125019073486328
    3. '.' → logprob: -13.000019073486328
    4. 'stdin' → logprob: -13.750019073486328
    5. '.argv' → logprob: -15.125019073486328
    6. '.readline' → logprob: -15.500019073486328
    7. '.std' → logprob: -15.750019073486328
    8. '.stderr' → logprob: -16.000019073486328
    9. '(stdin' → logprob: -17.250019073486328
    10. '.st' → logprob: -17.625019073486328

Token 305: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.309382373117842e-05
    2. '.read' → logprob: -10.875033378601074
    3. '.' → logprob: -11.250033378601074
    4. '.stdin' → logprob: -14.125033378601074
    5. '.readlines' → logprob: -15.125033378601074
    6. 'read' → logprob: -16.625032424926758
    7. ' readline' → logprob: -17.250032424926758
    8. ' .' → logprob: -18.250032424926758
    9. '().' → logprob: -18.750032424926758
    10. '.stdout' → logprob: -18.875032424926758

Token 306: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014639395289123058
    2. '().' → logprob: -4.514639377593994
    3. '()
' → logprob: -5.639639377593994
    4. '()

' → logprob: -10.764639854431152
    5. '()
' → logprob: -12.639639854431152
    6. ' ()' → logprob: -13.264639854431152
    7. '(' → logprob: -13.389639854431152
    8. '()\' → logprob: -13.639639854431152
    9. '()`' → logprob: -14.264639854431152
    10. '())' → logprob: -14.514639854431152

Token 307: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.053985223174095154
    2. '       ' → logprob: -3.178985118865967
    3. ' if' → logprob: -4.928985118865967
    4. '.strip' → logprob: -6.928985118865967
    5. '
' → logprob: -7.428985118865967
    6. '.rstrip' → logprob: -7.678985118865967
    7. 'if' → logprob: -7.928985118865967
    8. '            
' → logprob: -8.053985595703125
    9. '        
' → logprob: -8.178985595703125
    10. 'rstrip' → logprob: -8.928985595703125

Token 308: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1856430023908615
    2. ' if' → logprob: -1.935642957687378
    3. '           ' → logprob: -3.685642957687378
    4. '       ' → logprob: -11.560643196105957
    5. '            
' → logprob: -12.185643196105957
    6. ';if' → logprob: -13.685643196105957
    7. '	if' → logprob: -14.685643196105957
    8. 'If' → logprob: -15.060643196105957
    9. '
' → logprob: -15.435643196105957
    10. 'break' → logprob: -15.560643196105957

Token 309: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.31734219193458557
    2. ' not' → logprob: -1.6923421621322632
    3. 'stuff' → logprob: -2.4423422813415527
    4. ' stuff' → logprob: -7.067342281341553
    5. '	not' → logprob: -11.567341804504395
    6. 'st' → logprob: -11.942341804504395
    7. ' stuffs' → logprob: -13.567341804504395
    8. '(not' → logprob: -13.692341804504395
    9. '	st' → logprob: -14.442341804504395
    10. '

' → logprob: -14.692341804504395

Token 310: ' stuff' (ID: 9350)
  Prédit: 'stuff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stuff' → logprob: -0.004078401252627373
    2. ' stuff' → logprob: -5.504078388214111
    3. 'staff' → logprob: -18.379077911376953
    4. 'st' → logprob: -20.254077911376953
    5. 'Stuff' → logprob: -21.004077911376953
    6. '
' → logprob: -21.129077911376953
    7. 's' → logprob: -21.129077911376953
    8. '	st' → logprob: -21.379077911376953
    9. ' staff' → logprob: -23.254077911376953
    10. ' ' → logprob: -23.629077911376953

Token 311: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07131072133779526
    2. ':
' → logprob: -2.9463107585906982
    3. '.strip' → logprob: -4.196310520172119
    4. ':return' → logprob: -7.571310520172119
    5. ' :' → logprob: -7.821310520172119
    6. '.' → logprob: -8.946310997009277
    7. '.rstrip' → logprob: -9.821310997009277
    8. ':

' → logprob: -9.821310997009277
    9. ' or' → logprob: -11.196310997009277
    10. ':
' → logprob: -11.446310997009277

Token 312: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006764395162463188
    2. ' break' → logprob: -5.5067644119262695
    3. 'break' → logprob: -6.1317644119262695
    4. 'return' → logprob: -8.13176441192627
    5. '           ' → logprob: -9.13176441192627
    6. ' return' → logprob: -9.25676441192627
    7. '                
' → logprob: -13.00676441192627
    8. '	break' → logprob: -13.38176441192627
    9. '```' → logprob: -13.38176441192627
    10. '                   ' → logprob: -13.63176441192627

Token 313: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6376591324806213
    2. 'break' (adapté à ' break') → logprob: -1.1376590728759766
    3. 'return' → logprob: -2.3876590728759766
    4. ' return' → logprob: -2.8876590728759766
    5. '               ' → logprob: -5.887659072875977
    6. '                   ' → logprob: -7.512659072875977
    7. '	break' → logprob: -11.387659072875977
    8. '
' → logprob: -11.512659072875977
    9. '           ' → logprob: -12.762659072875977
    10. '```' → logprob: -13.262659072875977

Token 314: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010797296417877078
    2. '
' → logprob: -7.626079559326172
    3. '       ' → logprob: -8.001079559326172
    4. '            
' → logprob: -8.626079559326172
    5. '               ' → logprob: -10.251079559326172
    6. '<|end|>' → logprob: -11.376079559326172
    7. 'yield' → logprob: -11.626079559326172
    8. ' yield' → logprob: -12.876079559326172
    9. '    
' → logprob: -13.251079559326172
    10. ',' → logprob: -13.376079559326172

Token 315: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014257101574912667
    2. '       ' → logprob: -6.626425743103027
    3. 'yield' → logprob: -10.126425743103027
    4. '
' → logprob: -10.501425743103027
    5. ' yield' → logprob: -10.751425743103027
    6. '               ' → logprob: -12.251425743103027
    7. '            
' → logprob: -12.751425743103027
    8. '   ' → logprob: -14.251425743103027
    9. '	       ' → logprob: -14.876425743103027
    10. '        
' → logprob: -14.876425743103027

Token 316: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11073586344718933
    2. 'for' (adapté à ' for') → logprob: -2.8607358932495117
    3. '       ' → logprob: -3.6107358932495117
    4. 'yield' → logprob: -4.235735893249512
    5. 'tokens' → logprob: -5.610735893249512
    6. ' for' → logprob: -6.235735893249512
    7. ' yield' → logprob: -8.860735893249512
    8. '
' → logprob: -9.110735893249512
    9. '	yield' → logprob: -9.735735893249512
    10. '   ' → logprob: -10.110735893249512

Token 317: ' it' (ID: 480)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.0882669985294342
    2. ' token' → logprob: -2.9632670879364014
    3. 'tok' → logprob: -3.5882670879364014
    4. 'item' → logprob: -6.713266849517822
    5. ' tok' → logprob: -6.963266849517822
    6. 'word' → logprob: -7.088266849517822
    7. 'part' → logprob: -7.213266849517822
    8. 't' → logprob: -7.588266849517822
    9. ' part' → logprob: -8.21326732635498
    10. ' word' → logprob: -8.83826732635498

Token 318: 'ty' (ID: 1206)
  Prédit: 'em'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'em' → logprob: -0.0012440400896593928
    2. ' in' → logprob: -6.751244068145752
    3. 'm' → logprob: -10.126243591308594
    4. ' ' → logprob: -11.251243591308594
    5. 'token' → logprob: -11.501243591308594
    6. 'en' → logprob: -12.876243591308594
    7. 'ems' → logprob: -12.876243591308594
    8. 'er' → logprob: -13.751243591308594
    9. 'eam' → logprob: -14.126243591308594
    10. 'e' → logprob: -14.126243591308594

Token 319: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08005742728710175
    2. 'in' → logprob: -2.580057382583618
    3. 'm' → logprob: -6.955057621002197
    4. 'token' → logprob: -9.205057144165039
    5. 'em' → logprob: -10.080057144165039
    6. ' ' → logprob: -10.580057144165039
    7. 'tokens' → logprob: -11.205057144165039
    8. 'okens' → logprob: -12.205057144165039
    9. ',' → logprob: -12.580057144165039
    10. 'n' → logprob: -12.955057144165039

Token 320: ' stuff' (ID: 9350)
  Prédit: 'stuff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stuff' → logprob: -9.615255839889869e-05
    2. ' stuff' → logprob: -9.250096321105957
    3. 'st' → logprob: -18.12509536743164
    4. 'Stuff' → logprob: -18.50009536743164
    5. 'staff' → logprob: -19.50009536743164
    6. '	st' → logprob: -20.00009536743164
    7. '   ' → logprob: -20.62509536743164
    8. ' ' → logprob: -21.12509536743164
    9. '(st' → logprob: -21.12509536743164
    10. ' stuffs' → logprob: -21.75009536743164

Token 321: '.split' (ID: 10347)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0272225309163332
    2. '.split' → logprob: -4.152222633361816
    3. 'in' → logprob: -5.277222633361816
    4. '.' → logprob: -5.527222633361816
    5. '.strip' → logprob: -6.777222633361816
    6. ' .' → logprob: -7.152222633361816
    7. 'split' → logprob: -9.652222633361816
    8. '.rstrip' → logprob: -10.152222633361816
    9. '.in' → logprob: -12.402222633361816
    10. '	in' → logprob: -13.402222633361816

Token 322: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.038231395184993744
    2. '()' → logprob: -3.288231372833252
    3. '():
' → logprob: -8.66323184967041
    4. '():

' → logprob: -12.66323184967041
    5. '()>' → logprob: -12.66323184967041
    6. '(' → logprob: -13.28823184967041
    7. '()">' → logprob: -13.28823184967041
    8. '()]' → logprob: -13.53823184967041
    9. ' ():' → logprob: -13.78823184967041
    10. '(None' → logprob: -14.16323184967041

Token 323: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030058706179261208
    2. 'yield' → logprob: -3.5300586223602295
    3. ' yield' → logprob: -8.405058860778809
    4. '	yield' → logprob: -9.905058860778809
    5. '           ' → logprob: -10.655058860778809
    6. 'Yield' → logprob: -12.030058860778809
    7. '       ' → logprob: -13.030058860778809
    8. '   ' → logprob: -13.655058860778809
    9. '```' → logprob: -14.030058860778809
    10. '                   ' → logprob: -14.655058860778809

Token 324: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.012582997791469097
    2. ' yield' → logprob: -4.762582778930664
    3. '               ' → logprob: -6.012582778930664
    4. '                   ' → logprob: -6.512582778930664
    5. '	yield' → logprob: -10.637582778930664
    6. '           ' → logprob: -13.012582778930664
    7. 'Yield' → logprob: -13.262582778930664
    8. '```' → logprob: -16.637582778930664
    9. '
' → logprob: -17.012582778930664
    10. '                ' → logprob: -17.012582778930664

Token 325: ' it' (ID: 480)
  Prédit: 'itty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itty' → logprob: -0.08895102888345718
    2. ' it' → logprob: -2.4639511108398438
    3. ' at' → logprob: -13.213951110839844
    4. ' lit' → logprob: -13.338951110839844
    5. '(it' → logprob: -13.463951110839844
    6. ' ' → logprob: -14.338951110839844
    7. 'iddy' → logprob: -14.338951110839844
    8. 'ittle' → logprob: -14.713951110839844
    9. 'itt' → logprob: -14.713951110839844
    10. '_it' → logprob: -15.088951110839844

Token 326: 'ty' (ID: 1206)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 327: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 329: ' except' (ID: 6384)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 330: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.2575688362121582
    2. 'Keyboard' → logprob: -2.257568836212158
    3. ' EOF' → logprob: -2.257568836212158
    4. 'Stop' → logprob: -4.632568836212158
    5. ' Keyboard' → logprob: -5.007568836212158
    6. 'Exception' → logprob: -7.132568836212158
    7. ' Stop' → logprob: -7.882568836212158
    8. '(' → logprob: -9.007568359375
    9. ' Exception' → logprob: -9.507568359375
    10. 'Interrupted' → logprob: -10.257568359375

Token 331: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'rror' → logprob: -17.5
    3. '
' → logprob: -17.75
    4. 'error' → logprob: -18.5
    5. 'EOF' → logprob: -19.625
    6. ':
' → logprob: -20.25
    7. 'Warning' → logprob: -20.5
    8. ' Error' → logprob: -20.75
    9. ':' → logprob: -21.0
    10. 'LError' → logprob: -21.125

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21509036421775818
    2. '           ' → logprob: -2.340090274810791
    3. ':
' → logprob: -2.340090274810791
    4. ' as' → logprob: -7.090090274810791
    5. '       ' → logprob: -11.09009075164795
    6. '():
' → logprob: -11.84009075164795
    7. '():' → logprob: -12.34009075164795
    8. '		' → logprob: -12.59009075164795
    9. '          ' → logprob: -12.59009075164795
    10. '<|end|>' → logprob: -12.59009075164795

Token 333: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003112711710855365
    2. '       ' → logprob: -8.125310897827148
    3. '               ' → logprob: -12.750310897827148
    4. '          ' → logprob: -12.750310897827148
    5. '		' → logprob: -13.250310897827148
    6. ':' → logprob: -13.500310897827148
    7. '	       ' → logprob: -13.500310897827148
    8. '         ' → logprob: -13.875310897827148
    9. ' continue' → logprob: -14.000310897827148
    10. ' as' → logprob: -14.250310897827148

Token 334: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03167102113366127
    2. '           ' → logprob: -3.5316710472106934
    3. ' break' → logprob: -6.281671047210693
    4. '       ' → logprob: -11.031670570373535
    5. '	break' → logprob: -11.031670570373535
    6. 'return' → logprob: -11.281670570373535
    7. '               ' → logprob: -13.406670570373535
    8. '```' → logprob: -14.281670570373535
    9. '_break' → logprob: -14.406670570373535
    10. '		' → logprob: -15.156670570373535

Token 335: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013932115398347378
    2. 'if' → logprob: -6.6263933181762695
    3. 'for' → logprob: -10.75139331817627
    4. 'input' → logprob: -11.37639331817627
    5. '#' → logprob: -11.62639331817627
    6. '```' → logprob: -11.75139331817627
    7. 'tokens' → logprob: -12.75139331817627
    8. ' def' → logprob: -13.12639331817627
    9. '    
' → logprob: -13.37639331817627
    10. 'data' → logprob: -13.50139331817627

Token 337: ' entry' (ID: 7251)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.002476604888215661
    2. 'main' → logprob: -6.002476692199707
    3. '	main' → logprob: -15.252476692199707
    4. '_main' → logprob: -15.377476692199707
    5. ' run' → logprob: -15.502476692199707
    6. ' solve' → logprob: -16.37747573852539
    7. ' ma' → logprob: -17.12747573852539
    8. ' ' → logprob: -17.12747573852539
    9. ' parse' → logprob: -17.50247573852539
    10. ' mai' → logprob: -17.75247573852539

Token 338: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.007238852325826883
    2. '_' → logprob: -6.132238864898682
    3. '():' → logprob: -6.132238864898682
    4. 'point' → logprob: -6.507238864898682
    5. '()' → logprob: -6.757238864898682
    6. 'Point' → logprob: -9.007238388061523
    7. '_Point' → logprob: -10.632238388061523
    8. '_p' → logprob: -11.007238388061523
    9. '_POINT' → logprob: -11.132238388061523
    10. '_points' → logprob: -11.757238388061523

Token 339: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.051066520740278e-05
    2. ' ():' → logprob: -9.750060081481934
    3. '():
' → logprob: -13.625060081481934
    4. '(' → logprob: -14.250060081481934
    5. '()' → logprob: -15.625060081481934
    6. ':' → logprob: -16.25006103515625
    7. '(":' → logprob: -17.50006103515625
    8. '():
' → logprob: -17.50006103515625
    9. '(:' → logprob: -18.75006103515625
    10. '():

' → logprob: -19.00006103515625

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003921847674064338
    2. ' tokens' → logprob: -8.875391960144043
    3. ' parser' → logprob: -9.750391960144043
    4. ' var' → logprob: -9.875391960144043
    5. ' token' → logprob: -10.250391960144043
    6. ' input' → logprob: -10.500391960144043
    7. '    ' → logprob: -10.875391960144043
    8. 'tokens' → logprob: -11.000391960144043
    9. ' gen' → logprob: -11.625391960144043
    10. ' vars' → logprob: -12.000391960144043

Token 341: ' streamer' (ID: 195349)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.8323652148246765
    2. 'parser' → logprob: -1.7073652744293213
    3. 'token' → logprob: -2.0823652744293213
    4. 'vars' → logprob: -2.0823652744293213
    5. 'gen' → logprob: -3.0823652744293213
    6. '   ' → logprob: -3.0823652744293213
    7. 'var' → logprob: -4.082365036010742
    8. 'reader' → logprob: -4.707365036010742
    9. 'it' → logprob: -5.707365036010742
    10. 'g' → logprob: -6.207365036010742

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008617646060883999
    2. '=' → logprob: -4.758617877960205
    3. ' ' → logprob: -13.508617401123047
    4. 's' → logprob: -14.508617401123047
    5. '  ' → logprob: -15.133617401123047
    6. '   ' → logprob: -15.508617401123047
    7. '=sys' → logprob: -15.883617401123047
    8. '_iter' → logprob: -16.883617401123047
    9. '_' → logprob: -16.883617401123047
    10. ',' → logprob: -17.008617401123047

Token 343: ' weird' (ID: 28783)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.03366229683160782
    2. ' weird' → logprob: -3.4086623191833496
    3. 'iter' → logprob: -12.283661842346191
    4. ' we' → logprob: -13.033661842346191
    5. 'weed' → logprob: -13.158661842346191
    6. 'weak' → logprob: -13.533661842346191
    7. ' ' → logprob: -13.658661842346191
    8. 'We' → logprob: -14.283661842346191
    9. '  ' → logprob: -14.658661842346191
    10. '```' → logprob: -14.783661842346191

Token 344: '_var' (ID: 12782)
  Prédit: '_var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_var' → logprob: 0.0
    2. 'var' → logprob: -18.0
    3. '_VAR' → logprob: -20.75
    4. '_' → logprob: -21.0
    5. '_val' → logprob: -21.125
    6. '
' → logprob: -22.0
    7. '_vars' → logprob: -22.125
    8. '_variable' → logprob: -22.75
    9. '

' → logprob: -22.875
    10. '_v' → logprob: -23.25

Token 345: '_parser' (ID: 44939)
  Prédit: '_parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: -4.572941179503687e-05
    2. 'parser' → logprob: -10.000045776367188
    3. 'Parser' → logprob: -15.625045776367188
    4. '-parser' → logprob: -18.375045776367188
    5. '_parse' → logprob: -18.500045776367188
    6. 'parse' → logprob: -18.750045776367188
    7. ' parser' → logprob: -19.375045776367188
    8. '	parser' → logprob: -19.375045776367188
    9. '_par' → logprob: -21.000045776367188
    10. '_' → logprob: -21.375045776367188

Token 346: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.9040898880339228e-05
    2. '()
' → logprob: -10.500028610229492
    3. '()

' → logprob: -14.625028610229492
    4. ' ()' → logprob: -15.000028610229492
    5. '()
' → logprob: -15.500028610229492
    6. '(' → logprob: -15.625028610229492
    7. '()`' → logprob: -16.250028610229492
    8. '();' → logprob: -16.625028610229492
    9. '()"' → logprob: -16.875028610229492
    10. '()]' → logprob: -17.625028610229492

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01193839032202959
    2. ' N' → logprob: -5.511938571929932
    3. 'N' → logprob: -5.886938571929932
    4. '    
' → logprob: -6.511938571929932
    5. 'try' → logprob: -7.011938571929932
    6. ' try' → logprob: -7.136938571929932
    7. '
' → logprob: -7.261938571929932
    8. 'n' → logprob: -8.136938095092773
    9. 'def' → logprob: -9.386938095092773
    10. 'v' → logprob: -9.636938095092773

Token 348: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0018163133645430207
    2. 'try' → logprob: -6.501816272735596
    3. 'n' → logprob: -8.376816749572754
    4. '   ' → logprob: -10.626816749572754
    5. 'while' → logprob: -11.376816749572754
    6. 'import' → logprob: -11.501816749572754
    7. 'def' → logprob: -11.751816749572754
    8. '
' → logprob: -12.001816749572754
    9. ' N' → logprob: -12.001816749572754
    10. '    
' → logprob: -12.126816749572754

Token 349: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23034518957138062
    2. ',' → logprob: -2.1053452491760254
    3. '=' → logprob: -2.4803452491760254
    4. ' ,' → logprob: -8.480344772338867
    5. '=int' → logprob: -12.230344772338867
    6. '   ' → logprob: -13.230344772338867
    7. ',next' → logprob: -13.230344772338867
    8. ' ' → logprob: -13.480344772338867
    9. ',N' → logprob: -13.605344772338867
    10. '  ' → logprob: -14.605344772338867

Token 350: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.3877473473548889
    2. 'M' → logprob: -1.1377472877502441
    3. ' ' → logprob: -7.762747287750244
    4. ' 
' → logprob: -8.887747764587402
    5. 'int' → logprob: -9.262747764587402
    6. '<|end|>' → logprob: -9.512747764587402
    7. 'space' → logprob: -10.262747764587402
    8. ' next' → logprob: -10.887747764587402
    9. ' int' → logprob: -11.012747764587402
    10. '  ' → logprob: -11.262747764587402

Token 351: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11884874105453491
    2. ',' → logprob: -2.6188488006591797
    3. '=' → logprob: -3.2438488006591797
    4. ' ,' → logprob: -8.86884880065918
    5. ' ' → logprob: -12.11884880065918
    6. ',N' → logprob: -12.36884880065918
    7. '=int' → logprob: -12.49384880065918
    8. '   ' → logprob: -13.99384880065918
    9. '=N' → logprob: -14.99384880065918
    10. '  ' → logprob: -15.36884880065918

Token 352: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.020651664584875107
    2. ' Q' → logprob: -3.8956515789031982
    3. ' =' → logprob: -10.145651817321777
    4. 'int' → logprob: -10.145651817321777
    5. '=' → logprob: -11.020651817321777
    6. '=int' → logprob: -12.520651817321777
    7. ' int' → logprob: -12.895651817321777
    8. ' ' → logprob: -13.020651817321777
    9. '	Q' → logprob: -13.770651817321777
    10. ',Q' → logprob: -13.895651817321777

Token 353: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20156897604465485
    2. '=' → logprob: -1.7015689611434937
    3. ',' → logprob: -8.826568603515625
    4. ' ' → logprob: -12.701568603515625
    5. '=int' → logprob: -12.826568603515625
    6. ' ,' → logprob: -13.326568603515625
    7. ' =
' → logprob: -15.451568603515625
    8. '=N' → logprob: -15.451568603515625
    9. '    ' → logprob: -15.701568603515625
    10. '=

' → logprob: -15.951568603515625

Token 354: ' (' (ID: 350)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7580965757369995
    2. 'map' → logprob: -1.0080965757369995
    3. ' map' → logprob: -2.508096694946289
    4. ' int' → logprob: -2.508096694946289
    5. '[int' → logprob: -6.133096694946289
    6. '(int' → logprob: -6.758096694946289
    7. '(map' → logprob: -8.133096694946289
    8. ' (' → logprob: -11.133096694946289
    9. 'next' → logprob: -11.508096694946289
    10. ' [' → logprob: -11.633096694946289

Token 355: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002943479048553854
    2. 'map' → logprob: -8.25029468536377
    3. ' int' → logprob: -10.50029468536377
    4. '[int' → logprob: -12.25029468536377
    5. '(int' → logprob: -14.75029468536377
    6. 'next' → logprob: -15.37529468536377
    7. ' map' → logprob: -16.125293731689453
    8. '   ' → logprob: -16.875293731689453
    9. '  ' → logprob: -17.625293731689453
    10. '
' → logprob: -18.000293731689453

Token 356: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.00035083942930214107
    2. 'next' → logprob: -8.375350952148438
    3. ')' → logprob: -9.500350952148438
    4. ')(' → logprob: -10.625350952148438
    5. ' (' → logprob: -12.375350952148438
    6. '
' → logprob: -12.625350952148438
    7. '(' → logprob: -12.750350952148438
    8. '

' → logprob: -12.750350952148438
    9. '   ' → logprob: -13.000350952148438
    10. ',next' → logprob: -13.625350952148438

Token 357: '(stream' (ID: 45416)
  Prédit: '(stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stream' → logprob: -5.080963092041202e-06
    2. 'stream' → logprob: -12.875004768371582
    3. '(' → logprob: -13.250004768371582
    4. ' (' → logprob: -14.750004768371582
    5. ' streamer' → logprob: -16.7500057220459
    6. '	stream' → logprob: -17.2500057220459
    7. ')' → logprob: -17.3750057220459
    8. ')(' → logprob: -17.6250057220459
    9. 'Streamer' → logprob: -17.7500057220459
    10. '(Stream' → logprob: -18.0000057220459

Token 358: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.06618873029947281
    2. 'stream' → logprob: -3.8161888122558594
    3. 'e' → logprob: -4.316188812255859
    4. 'am' → logprob: -4.566188812255859
    5. '(stream' → logprob: -4.941188812255859
    6. 'amer' → logprob: -5.066188812255859
    7. 'ream' → logprob: -6.066188812255859
    8. ' streamer' → logprob: -6.441188812255859
    9. 'mer' → logprob: -7.566188812255859
    10. 'eam' → logprob: -8.94118881225586

Token 359: '))' (ID: 915)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6766206622123718
    2. '()' → logprob: -0.8016206622123718
    3. '))' → logprob: -3.6766207218170166
    4. ')),' → logprob: -5.1766204833984375
    5. ')' → logprob: -5.4266204833984375
    6. '())' → logprob: -5.5516204833984375
    7. '()),' → logprob: -6.0516204833984375
    8. '())),
' → logprob: -7.1766204833984375
    9. ' ' → logprob: -7.9266204833984375
    10. '())))' → logprob: -9.426620483398438

Token 360: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22517900168895721
    2. ')' → logprob: -1.8501789569854736
    3. '),' → logprob: -3.2251789569854736
    4. '(),' → logprob: -6.725179195404053
    5. ' ,' → logprob: -7.225179195404053
    6. ',
' → logprob: -7.475179195404053
    7. ',)' → logprob: -7.475179195404053
    8. '()' → logprob: -7.600179195404053
    9. ' for' → logprob: -7.850179195404053
    10. ' ' → logprob: -8.350178718566895

Token 361: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005247629713267088
    2. ' _' → logprob: -5.255247592926025
    3. ' ' → logprob: -12.255248069763184
    4. '_i' → logprob: -12.630248069763184
    5. '_=' → logprob: -13.255248069763184
    6. ' i' → logprob: -14.005248069763184
    7. '  ' → logprob: -14.630248069763184
    8. 'i' → logprob: -14.755248069763184
    9. '_]' → logprob: -15.005248069763184
    10. '_x' → logprob: -15.130248069763184

Token 362: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5848047733306885
    2. '(' → logprob: -1.0848047733306885
    3. 'in' → logprob: -2.7098047733306885
    4. ' range' → logprob: -4.209804534912109
    5. ' in' → logprob: -4.584804534912109
    6. ' ' → logprob: -5.584804534912109
    7. '(None' → logprob: -6.334804534912109
    8. '_' → logprob: -6.459804534912109
    9. '(range' → logprob: -6.584804534912109
    10. '()' → logprob: -6.709804534912109

Token 363: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001763359410688281
    2. ' range' → logprob: -6.751763343811035
    3. '(' → logprob: -7.626763343811035
    4. '(range' → logprob: -9.376763343811035
    5. '[' → logprob: -11.126763343811035
    6. ')' → logprob: -13.376763343811035
    7. '('' → logprob: -13.376763343811035
    8. ' ' → logprob: -14.251763343811035
    9. '	range' → logprob: -14.626763343811035
    10. ' (' → logprob: -15.001763343811035

Token 364: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004306692280806601
    2. '3' → logprob: -7.750430583953857
    3. ' (' → logprob: -17.000431060791016
    4. '(
' → logprob: -17.500431060791016
    5. ')' → logprob: -18.125431060791016
    6. '```' → logprob: -18.875431060791016
    7. ')(' → logprob: -19.750431060791016
    8. '{' → logprob: -20.750431060791016
    9. '((' → logprob: -20.875431060791016
    10. '(

' → logprob: -21.000431060791016

Token 365: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '(' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.625001907348633
    5. ')' → logprob: -18.125001907348633
    6. '```' → logprob: -19.250001907348633
    7. '  ' → logprob: -20.250001907348633
    8. '
' → logprob: -20.625001907348633
    9. '0' → logprob: -21.375001907348633
    10. '۳' → logprob: -21.562501907348633

Token 366: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. '))' → logprob: -12.750004768371582
    3. ')
' → logprob: -14.125004768371582
    4. ')}' → logprob: -15.500004768371582
    5. ' )' → logprob: -15.750004768371582
    6. '())' → logprob: -15.750004768371582
    7. ')`' → logprob: -16.875003814697266
    8. ')#' → logprob: -17.250003814697266
    9. '),' → logprob: -17.250003814697266
    10. '()' → logprob: -17.750003814697266

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025776340044103563
    2. ' param' → logprob: -8.87525749206543
    3. 'param' → logprob: -9.50025749206543
    4. 'params' → logprob: -11.12525749206543
    5. 'w' → logprob: -11.87525749206543
    6. ' params' → logprob: -12.25025749206543
    7. '
' → logprob: -12.25025749206543
    8. '    
' → logprob: -12.62525749206543
    9. '```' → logprob: -12.75025749206543
    10. ' w' → logprob: -13.37525749206543

Token 368: ' #' (ID: 1069)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2922501564025879
    2. '   ' → logprob: -1.417250156402588
    3. 'p' → logprob: -5.042250156402588
    4. ' w' → logprob: -6.042250156402588
    5. 'prefs' → logprob: -7.042250156402588
    6. 'params' → logprob: -7.417250156402588
    7. 'param' → logprob: -7.542250156402588
    8. 'W' → logprob: -9.54224967956543
    9. ' p' → logprob: -9.91724967956543
    10. ' prefs' → logprob: -11.16724967956543

Token 369: ' Over' (ID: 7931)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1309947818517685
    2. 'param' → logprob: -2.5059947967529297
    3. 'params' → logprob: -3.7559947967529297
    4. ' w' → logprob: -4.50599479675293
    5. ' param' → logprob: -5.50599479675293
    6. '   ' → logprob: -6.75599479675293
    7. 'W' → logprob: -7.38099479675293
    8. ' params' → logprob: -8.50599479675293
    9. 'p' → logprob: -8.75599479675293
    10. 'for' → logprob: -8.88099479675293

Token 370: '-' (ID: 12)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.9467103481292725
    2. 'write' → logprob: -1.0717103481292725
    3. 'load' → logprob: -2.6967103481292725
    4. 'loaded' → logprob: -2.9467103481292725
    5. '#' → logprob: -3.0717103481292725
    6. 'view' → logprob: -3.5717103481292725
    7. '   ' → logprob: -4.071710586547852
    8. 'ride' → logprob: -4.821710586547852
    9. 'look' → logprob: -4.946710586547852
    10. 'to' → logprob: -5.321710586547852

Token 371: 'creative' (ID: 102479)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.8244261145591736
    2. 'all' → logprob: -1.3244261741638184
    3. 'loaded' → logprob: -1.9494261741638184
    4. 'r' → logprob: -2.9494261741638184
    5. 'write' → logprob: -3.3244261741638184
    6. 'engine' → logprob: -4.324426174163818
    7. 'loading' → logprob: -4.699426174163818
    8. 'ride' → logprob: -4.949426174163818
    9. 'w' → logprob: -5.449426174163818
    10. 'flow' → logprob: -5.574426174163818

Token 372: ':' (ID: 25)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0182942152023315
    2. '   ' → logprob: -1.5182942152023315
    3. ' w' → logprob: -1.7682942152023315
    4. 'params' → logprob: -1.8932942152023315
    5. 'param' → logprob: -2.893294334411621
    6. ' param' → logprob: -4.268294334411621
    7. ' params' → logprob: -4.518294334411621
    8. 'prefs' → logprob: -4.518294334411621
    9. 'p' → logprob: -7.018294334411621
    10. 'W' → logprob: -7.018294334411621

Token 373: ' use' (ID: 1199)
  Prédit: ' param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.9525323510169983
    2. 'param' → logprob: -1.5775322914123535
    3. 'params' → logprob: -1.8275322914123535
    4. ' params' → logprob: -2.7025322914123535
    5. 'w' → logprob: -2.8275322914123535
    6. '   ' → logprob: -3.2025322914123535
    7. ' w' → logprob: -3.4525322914123535
    8. 'prefs' → logprob: -3.7025322914123535
    9. 'p' → logprob: -4.8275322914123535
    10. ' prefs' → logprob: -5.0775322914123535

Token 374: ' a' (ID: 261)
  Prédit: '[w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.516345202922821
    2. 'w' → logprob: -1.8913452625274658
    3. 'param' → logprob: -2.516345262527466
    4. 'list' → logprob: -3.266345262527466
    5. 'Personal' → logprob: -3.266345262527466
    6. '[param' → logprob: -3.391345262527466
    7. 'params' → logprob: -4.141345024108887
    8. '[' → logprob: -4.641345024108887
    9. 'tuple' → logprob: -5.266345024108887
    10. 'lambda' → logprob: -5.391345024108887

Token 375: ' dict' (ID: 11878)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2994556427001953
    2. 'lambda' → logprob: -2.1744556427001953
    3. '[' → logprob: -2.7994556427001953
    4. '[list' → logprob: -3.7994556427001953
    5. '[param' → logprob: -4.549455642700195
    6. 'tuple' → logprob: -4.674455642700195
    7. '[]' → logprob: -5.174455642700195
    8. '[w' → logprob: -5.174455642700195
    9. 'w' → logprob: -5.424455642700195
    10. 'param' → logprob: -5.924455642700195

Token 376: ' comprehension' (ID: 91423)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05766652151942253
    2. ' param' → logprob: -4.182666301727295
    3. 'params' → logprob: -4.307666301727295
    4. ' params' → logprob: -4.682666301727295
    5. 'prefs' → logprob: -5.182666301727295
    6. 'param' → logprob: -5.557666301727295
    7. ' preferences' → logprob: -6.182666301727295
    8. 'data' → logprob: -6.682666301727295
    9. ' prefs' → logprob: -6.807666301727295
    10. 'preferences' → logprob: -7.182666301727295

Token 377: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003942112671211362
    2. 'params' → logprob: -9.125393867492676
    3. 'data' → logprob: -9.375393867492676
    4. 'param' → logprob: -9.500393867492676
    5. '```' → logprob: -10.750393867492676
    6. ' param' → logprob: -10.875393867492676
    7. '<|end|>' → logprob: -11.375393867492676
    8. '  ' → logprob: -11.375393867492676
    9. '{' → logprob: -11.750393867492676
    10. ' params' → logprob: -12.125393867492676

Token 378: ' map' (ID: 4014)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.21550320088863373
    2. 'z' → logprob: -2.965503215789795
    3. 'params' → logprob: -3.090503215789795
    4. '{' → logprob: -3.090503215789795
    5. ' param' → logprob: -3.840503215789795
    6. '{
' → logprob: -4.215503215789795
    7. '[param' → logprob: -5.215503215789795
    8. ' z' → logprob: -6.465503215789795
    9. '_param' → logprob: -7.340503215789795
    10. 'w' → logprob: -7.340503215789795

Token 379: ' unpack' (ID: 61704)
  Prédit: ' param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.23295101523399353
    2. 'param' → logprob: -2.7329509258270264
    3. '   ' → logprob: -3.1079509258270264
    4. ' params' → logprob: -3.4829509258270264
    5. 'params' → logprob: -3.8579509258270264
    6. ' =' → logprob: -4.1079511642456055
    7. ' z' → logprob: -4.8579511642456055
    8. '(param' → logprob: -5.2329511642456055
    9. 'z' → logprob: -6.1079511642456055
    10. 'data' → logprob: -6.2329511642456055

Token 380: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.07164499908685684
    2. 'er' → logprob: -3.0716450214385986
    3. '=' → logprob: -4.5716447830200195
    4. 'ed' → logprob: -5.1966447830200195
    5. '   ' → logprob: -5.9466447830200195
    6. 'ers' → logprob: -6.1966447830200195
    7. ' =' → logprob: -7.1966447830200195
    8. '```' → logprob: -8.82164478302002
    9. '       ' → logprob: -8.94664478302002
    10. '(
' → logprob: -8.94664478302002

Token 381: '/g' (ID: 11328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3015817403793335
    2. ' param' → logprob: -2.301581859588623
    3. 'params' → logprob: -2.676581859588623
    4. ' params' → logprob: -3.426581859588623
    5. 'param' → logprob: -3.426581859588623
    6. 'z' → logprob: -5.176581859588623
    7. 'prefs' → logprob: -5.676581859588623
    8. ' z' → logprob: -5.801581859588623
    9. 'w' → logprob: -5.926581859588623
    10. '```' → logprob: -6.426581859588623

Token 382: 'enerator' (ID: 24675)
  Prédit: 'enerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enerator' → logprob: -0.32348495721817017
    2. 'zip' → logprob: -1.4484848976135254
    3. 'en' → logprob: -3.9484848976135254
    4. 'enerate' → logprob: -4.323484897613525
    5. 'eneration' → logprob: -5.573484897613525
    6. 'ener' → logprob: -6.198484897613525
    7. 'roup' → logprob: -6.823484897613525
    8. 'enerated' → logprob: -8.198485374450684
    9. 'for' → logprob: -8.198485374450684
    10. 'lobal' → logprob: -8.448485374450684

Token 383: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6562759280204773
    2. ' param' → logprob: -1.156275987625122
    3. 'param' → logprob: -2.281275987625122
    4. 'params' → logprob: -4.406275749206543
    5. ' for' → logprob: -4.531275749206543
    6. 'z' → logprob: -4.656275749206543
    7. ' params' → logprob: -5.406275749206543
    8. ' =' → logprob: -5.656275749206543
    9. ' z' → logprob: -5.906275749206543
    10. '(param' → logprob: -6.031275749206543

Token 384: ' initialization' (ID: 41684)
  Prédit: ' param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.9957669377326965
    2. 'param' → logprob: -1.4957668781280518
    3. '_' → logprob: -1.8707668781280518
    4. ' z' → logprob: -2.4957668781280518
    5. 'z' → logprob: -2.4957668781280518
    6. '_param' → logprob: -3.6207668781280518
    7. '_z' → logprob: -4.495767116546631
    8. 'w' → logprob: -4.995767116546631
    9. ' _' → logprob: -5.245767116546631
    10. 'range' → logprob: -5.620767116546631

Token 385: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06163093075156212
    2. 'param' → logprob: -4.311630725860596
    3. ' param' → logprob: -4.311630725860596
    4. 'params' → logprob: -4.311630725860596
    5. 'w' → logprob: -5.311630725860596
    6. 'z' → logprob: -5.936630725860596
    7. 'prefs' → logprob: -5.936630725860596
    8. 'p' → logprob: -6.061630725860596
    9. ' params' → logprob: -6.186630725860596
    10. '```' → logprob: -6.436630725860596

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07214555889368057
    2. ' param' → logprob: -3.572145462036133
    3. 'param' → logprob: -4.197145462036133
    4. 'params' → logprob: -4.572145462036133
    5. ' params' → logprob: -5.072145462036133
    6. 'w' → logprob: -5.697145462036133
    7. ' w' → logprob: -6.197145462036133
    8. '```' → logprob: -6.322145462036133
    9. 'p' → logprob: -7.447145462036133
    10. ' p' → logprob: -8.322145462036133

Token 387: ' raw' (ID: 11428)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.5849444270133972
    2. 'params' → logprob: -1.084944486618042
    3. '   ' → logprob: -3.084944486618042
    4. 'w' → logprob: -4.209944248199463
    5. ' param' → logprob: -4.959944248199463
    6. 'prefs' → logprob: -4.959944248199463
    7. 'data' → logprob: -5.209944248199463
    8. 'z' → logprob: -5.209944248199463
    9. 'wx' → logprob: -5.834944248199463
    10. 'p' → logprob: -6.084944248199463

Token 388: ' =' (ID: 314)
  Prédit: '_params'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_params' → logprob: -0.7663076519966125
    2. '_data' → logprob: -1.2663075923919678
    3. ' =' → logprob: -1.7663075923919678
    4. 'data' → logprob: -3.8913075923919678
    5. '_param' → logprob: -4.516307830810547
    6. '=' → logprob: -4.641307830810547
    7. 'params' → logprob: -4.891307830810547
    8. '_input' → logprob: -4.891307830810547
    9. '_inputs' → logprob: -5.266307830810547
    10. '_vals' → logprob: -5.266307830810547

Token 389: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.06946968287229538
    2. '[' → logprob: -2.819469690322876
    3. '{
' → logprob: -5.694469451904297
    4. '[list' → logprob: -6.819469451904297
    5. 'list' → logprob: -7.319469451904297
    6. '[{' → logprob: -7.444469451904297
    7. '[(' → logprob: -7.944469451904297
    8. '{i' → logprob: -8.069469451904297
    9. '{x' → logprob: -8.444469451904297
    10. 'dict' → logprob: -8.694469451904297

Token 390: ' [' (ID: 723)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.700261116027832
    2. '(tuple' → logprob: -1.075261116027832
    3. '[int' → logprob: -2.950261116027832
    4. '(int' → logprob: -3.200261116027832
    5. '(list' → logprob: -3.450261116027832
    6. '[' → logprob: -4.200261116027832
    7. 'list' → logprob: -4.200261116027832
    8. '[list' → logprob: -5.325261116027832
    9. 'int' → logprob: -7.450261116027832
    10. '([' → logprob: -7.700261116027832

Token 391: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.889424836728722e-05
    2. 'next' → logprob: -10.625099182128906
    3. 'map' → logprob: -11.000099182128906
    4. ']' → logprob: -11.625099182128906
    5. ' int' → logprob: -11.625099182128906
    6. ']int' → logprob: -11.625099182128906
    7. '[int' → logprob: -11.750099182128906
    8. '(int' → logprob: -11.875099182128906
    9. '*' → logprob: -12.125099182128906
    10. '
' → logprob: -13.125099182128906

Token 392: '()]' (ID: 59063)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0003646633995231241
    2. '(x' → logprob: -8.125364303588867
    3. ']' → logprob: -10.125364303588867
    4. '(' → logprob: -11.875364303588867
    5. '(n' → logprob: -12.250364303588867
    6. '(i' → logprob: -12.875364303588867
    7. '(_)' → logprob: -13.000364303588867
    8. '](' → logprob: -13.125364303588867
    9. '(a' → logprob: -13.125364303588867
    10. '((' → logprob: -13.500364303588867

Token 393: ' *' (ID: 425)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.01355475652962923
    2. '(' → logprob: -5.138554573059082
    3. '()' → logprob: -5.638554573059082
    4. '()]' → logprob: -6.388554573059082
    5. '(x' → logprob: -6.888554573059082
    6. 'for' → logprob: -7.138554573059082
    7. '(i' → logprob: -9.013554573059082
    8. ']' → logprob: -9.263554573059082
    9. '(int' → logprob: -9.513554573059082
    10. ' for' → logprob: -9.638554573059082

Token 394: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.07403664290904999
    2. 'M' → logprob: -3.4490365982055664
    3. '(Q' → logprob: -4.324036598205566
    4. '4' → logprob: -4.449036598205566
    5. '3' → logprob: -4.574036598205566
    6. 'N' → logprob: -6.449036598205566
    7. '(' → logprob: -6.824036598205566
    8. '(M' → logprob: -6.949036598205566
    9. '0' → logprob: -8.574036598205566
    10. ' Q' → logprob: -8.949036598205566

Token 395: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39475342631340027
    2. ' for' → logprob: -1.1447534561157227
    3. ']' → logprob: -5.019753456115723
    4. '(' → logprob: -8.144753456115723
    5. '0' → logprob: -8.769753456115723
    6. ']*' → logprob: -8.894753456115723
    7. '(N' → logprob: -9.269753456115723
    8. ' ' → logprob: -9.519753456115723
    9. '(M' → logprob: -9.519753456115723
    10. ' ]' → logprob: -9.644753456115723

Token 396: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05329499766230583
    2. 'range' → logprob: -3.1782948970794678
    3. ' range' → logprob: -4.928295135498047
    4. '_range' → logprob: -7.053295135498047
    5. '_[' → logprob: -7.053295135498047
    6. ' _' → logprob: -7.803295135498047
    7. '_=' → logprob: -8.553295135498047
    8. '_i' → logprob: -8.678295135498047
    9. '_w' → logprob: -8.928295135498047
    10. '_
' → logprob: -9.428295135498047

Token 397: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.017899751663208008
    2. '_' → logprob: -4.642899513244629
    3. ' range' → logprob: -4.892899513244629
    4. 'in' → logprob: -7.767899513244629
    5. '(range' → logprob: -9.517899513244629
    6. ' in' → logprob: -10.142899513244629
    7. '0' → logprob: -10.392899513244629
    8. '_range' → logprob: -11.142899513244629
    9. '[' → logprob: -11.642899513244629
    10. '	range' → logprob: -12.392899513244629

Token 398: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005331232212483883
    2. ' range' → logprob: -5.255331039428711
    3. '(range' → logprob: -10.130331039428711
    4. '[' → logprob: -10.630331039428711
    5. '_' → logprob: -11.380331039428711
    6. ' ' → logprob: -12.380331039428711
    7. '
' → logprob: -12.505331039428711
    8. '  ' → logprob: -12.755331039428711
    9. '	range' → logprob: -13.255331039428711
    10. '   ' → logprob: -13.380331039428711

Token 399: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.49196022748947144
    2. 'N' → logprob: -1.7419602870941162
    3. '(' → logprob: -2.241960287094116
    4. '4' → logprob: -2.366960287094116
    5. '3' → logprob: -4.366960048675537
    6. '(M' → logprob: -8.366960525512695
    7. 'M' → logprob: -9.116960525512695
    8. ' (' → logprob: -9.866960525512695
    9. '(Q' → logprob: -9.991960525512695
    10. ' N' → logprob: -10.366960525512695

Token 400: '4' (ID: 19)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.31395968794822693
    2. '4' → logprob: -1.3139597177505493
    3. '3' → logprob: -7.56395959854126
    4. ' N' → logprob: -9.688960075378418
    5. ' ' → logprob: -10.188960075378418
    6. 'M' → logprob: -10.313960075378418
    7. 'Q' → logprob: -11.813960075378418
    8. 'len' → logprob: -12.063960075378418
    9. '   ' → logprob: -12.313960075378418
    10. '5' → logprob: -12.688960075378418

Token 401: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15671570599079132
    2. ')]' → logprob: -2.2817156314849854
    3. '(' → logprob: -3.4067156314849854
    4. ')' → logprob: -5.2817158699035645
    5. '(range' → logprob: -6.6567158699035645
    6. ' ]' → logprob: -6.7817158699035645
    7. '(N' → logprob: -6.9067158699035645
    8. '()]' → logprob: -8.156715393066406
    9. '(w' → logprob: -8.281715393066406
    10. '[' → logprob: -9.156715393066406

Token 402: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03402957320213318
    2. '(' → logprob: -4.159029483795166
    3. ' ]' → logprob: -5.159029483795166
    4. '(range' → logprob: -5.659029483795166
    5. 'for' → logprob: -6.034029483795166
    6. ']
' → logprob: -6.159029483795166
    7. '(N' → logprob: -6.284029483795166
    8. ' for' → logprob: -6.784029483795166
    9. '   ' → logprob: -8.534029960632324
    10. '()]' → logprob: -8.659029960632324

Token 403: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 404: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20366600155830383
    2. ' for' → logprob: -2.8286659717559814
    3. 'raw' → logprob: -3.0786659717559814
    4. '   ' → logprob: -3.2036659717559814
    5. 'w' → logprob: -3.5786659717559814
    6. '<|end|>' → logprob: -5.3286662101745605
    7. '[' → logprob: -6.4536662101745605
    8. '#' → logprob: -6.5786662101745605
    9. '       ' → logprob: -7.2036662101745605
    10. '(raw' → logprob: -8.328665733337402

Token 405: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6740674376487732
    2. ' i' → logprob: -0.7990674376487732
    3. ' idx' → logprob: -4.799067497253418
    4. 'idx' → logprob: -4.924067497253418
    5. '_' → logprob: -5.299067497253418
    6. 'q' → logprob: -5.424067497253418
    7. ' _' → logprob: -5.674067497253418
    8. ' q' → logprob: -5.799067497253418
    9. ' j' → logprob: -6.049067497253418
    10. 'j' → logprob: -6.174067497253418

Token 406: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006747700739651918
    2. 'in' → logprob: -5.131747722625732
    3. ' ' → logprob: -7.256747722625732
    4. ',' → logprob: -9.506747245788574
    5. '_' → logprob: -10.756747245788574
    6. ' i' → logprob: -12.256747245788574
    7. 'n' → logprob: -12.631747245788574
    8. '  ' → logprob: -12.881747245788574
    9. '	in' → logprob: -13.506747245788574
    10. '0' → logprob: -13.631747245788574

Token 407: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.348450243473053
    2. 'range' → logprob: -1.2234501838684082
    3. '_' → logprob: -13.473450660705566
    4. ' in' → logprob: -13.598450660705566
    5. '	range' → logprob: -14.348450660705566
    6. '_range' → logprob: -14.473450660705566
    7. '(range' → logprob: -14.848450660705566
    8. ' ' → logprob: -14.848450660705566
    9. ' xrange' → logprob: -15.348450660705566
    10. 'r' → logprob: -15.723450660705566

Token 408: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.00020616286201402545
    2. '(' → logprob: -8.750205993652344
    3. 'Q' → logprob: -10.000205993652344
    4. ' Q' → logprob: -13.750205993652344
    5. ' (' → logprob: -14.125205993652344
    6. '	Q' → logprob: -15.750205993652344
    7. '(len' → logprob: -16.250205993652344
    8. '(M' → logprob: -17.000205993652344
    9. ' ' → logprob: -17.250205993652344
    10. '(q' → logprob: -17.500205993652344

Token 409: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003705062437802553
    2. '):
' → logprob: -5.628705024719238
    3. ' ):' → logprob: -9.753705024719238
    4. ':' → logprob: -10.378705024719238
    5. '   ' → logprob: -11.503705024719238
    6. ')' → logprob: -13.378705024719238
    7. '):
' → logprob: -13.503705024719238
    8. ']:' → logprob: -14.128705024719238
    9. '}:' → logprob: -14.753705024719238
    10. '():' → logprob: -15.128705024719238

Token 410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012773419439326972
    2. ' for' → logprob: -9.375127792358398
    3. '<|end|>' → logprob: -10.250127792358398
    4. '   ' → logprob: -12.500127792358398
    5. 'for' → logprob: -13.375127792358398
    6. ',' → logprob: -14.125127792358398
    7. '           ' → logprob: -14.875127792358398
    8. '<|end|>' → logprob: -15.750127792358398
    9. '	   ' → logprob: -16.0001277923584
    10. '#' → logprob: -16.1876277923584

Token 411: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24277859926223755
    2. '           ' → logprob: -2.1177785396575928
    3. 'for' (adapté à ' for') → logprob: -3.1177785396575928
    4. 'w' → logprob: -3.4927785396575928
    5. ' for' → logprob: -4.867778778076172
    6. 'raw' → logprob: -5.367778778076172
    7. ' w' → logprob: -5.992778778076172
    8. 'vals' → logprob: -6.617778778076172
    9. 'n' → logprob: -7.492778778076172
    10. 'a' → logprob: -7.492778778076172

Token 412: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00917556881904602
    2. ' i' → logprob: -5.259175777435303
    3. 'k' → logprob: -5.759175777435303
    4. 'arr' → logprob: -8.384175300598145
    5. '_i' → logprob: -9.134175300598145
    6. 'idx' → logprob: -9.759175300598145
    7. 'lst' → logprob: -9.884175300598145
    8. 'd' → logprob: -10.884175300598145
    9. 'row' → logprob: -10.946675300598145
    10. 't' → logprob: -11.009175300598145

Token 413: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3868767023086548
    2. 'in' → logprob: -1.1368767023086548
    3. 'range' → logprob: -12.886877059936523
    4. ' ' → logprob: -14.011877059936523
    5. ',' → logprob: -14.136877059936523
    6. '
' → logprob: -15.136877059936523
    7. '(' → logprob: -15.136877059936523
    8. '0' → logprob: -15.261877059936523
    9. '_' → logprob: -15.636877059936523
    10. '```' → logprob: -16.261877059936523

Token 414: ' stuff' (ID: 9350)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.9215178489685059
    2. 'lst' → logprob: -1.6715178489685059
    3. 'param' → logprob: -2.046517848968506
    4. 'row' → logprob: -2.546517848968506
    5. 'key' → logprob: -3.296517848968506
    6. 'v' → logprob: -4.046517848968506
    7. 'name' → logprob: -4.421517848968506
    8. 'line' → logprob: -4.546517848968506
    9. 'k' → logprob: -4.546517848968506
    10. 'val' → logprob: -4.671517848968506

Token 415: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20142912864685059
    2. ' in' → logprob: -1.7014291286468506
    3. ',' → logprob: -11.95142936706543
    4. '	in' → logprob: -12.82642936706543
    5. ' ' → logprob: -13.45142936706543
    6. '<|end|>' → logprob: -13.82642936706543
    7. '```' → logprob: -13.95142936706543
    8. '_in' → logprob: -14.95142936706543
    9. 'import' → logprob: -15.07642936706543
    10. 's' → logprob: -15.20142936706543

Token 416: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00024989593657664955
    2. ' enumerate' → logprob: -8.375249862670898
    3. 'zip' → logprob: -11.625249862670898
    4. '(en' → logprob: -12.375249862670898
    5. '[(' → logprob: -13.000249862670898
    6. 'en' → logprob: -13.500249862670898
    7. '((' → logprob: -13.500249862670898
    8. 'enum' → logprob: -14.375249862670898
    9. '```' → logprob: -15.500249862670898
    10. '[' → logprob: -16.2502498626709

Token 417: '(('' (ID: 122195)
  Prédit: '(stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(stream' → logprob: -0.006761906202882528
    2. 'stream' → logprob: -5.6317620277404785
    3. '(map' → logprob: -6.7567620277404785
    4. '(raw' → logprob: -7.3817620277404785
    5. '([' → logprob: -7.8817620277404785
    6. '((' → logprob: -8.38176155090332
    7. 'map' → logprob: -8.75676155090332
    8. '(' → logprob: -8.75676155090332
    9. '(sys' → logprob: -8.88176155090332
    10. '(range' → logprob: -9.25676155090332

Token 418: 'a' (ID: 64)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4523788392543793
    2. 'w' → logprob: -1.2023788690567017
    3. 'int' → logprob: -3.452378749847412
    4. 'raw' → logprob: -4.952378749847412
    5. 'we' → logprob: -5.202378749847412
    6. 'next' → logprob: -5.327378749847412
    7. 'a' → logprob: -5.452378749847412
    8. 'A' → logprob: -5.577378749847412
    9. 'n' → logprob: -7.202378749847412
    10. 'i' → logprob: -7.952378749847412

Token 419: '',' (ID: 787)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.06320121139287949
    2. '',' → logprob: -3.1882011890411377
    3. '','' → logprob: -4.313201427459717
    4. 'x' → logprob: -7.063201427459717
    5. 'W' → logprob: -7.188201427459717
    6. 'a' → logprob: -7.438201427459717
    7. '[i' → logprob: -7.563201427459717
    8. '_w' → logprob: -7.563201427459717
    9. 'b' → logprob: -7.938201427459717
    10. 'N' → logprob: -8.188200950622559

Token 420: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2240087389945984
    2. 'w' → logprob: -2.099008798599243
    3. ''b' → logprob: -3.474008798599243
    4. ''w' → logprob: -3.724008798599243
    5. ''' → logprob: -3.974008798599243
    6. ' '' → logprob: -6.974008560180664
    7. ' b' → logprob: -7.724008560180664
    8. 'p' → logprob: -7.724008560180664
    9. ''N' → logprob: -7.724008560180664
    10. ''p' → logprob: -8.349008560180664

Token 421: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004509301797952503
    2. 'w' → logprob: -8.37545108795166
    3. 'a' → logprob: -9.50045108795166
    4. 'p' → logprob: -10.25045108795166
    5. ''))' → logprob: -10.87545108795166
    6. ''' → logprob: -11.62545108795166
    7. 'B' → logprob: -11.75045108795166
    8. ' b' → logprob: -11.75045108795166
    9. ''b' → logprob: -11.75045108795166
    10. '')' → logprob: -12.00045108795166

Token 422: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.3611162006855011
    2. ',' → logprob: -1.2361161708831787
    3. '','' → logprob: -4.986116409301758
    4. 'w' → logprob: -6.111116409301758
    5. 'c' → logprob: -6.861116409301758
    6. ','' → logprob: -6.861116409301758
    7. ''))' → logprob: -7.111116409301758
    8. ''' → logprob: -9.611116409301758
    9. '')' → logprob: -9.736116409301758
    10. 'x' → logprob: -9.986116409301758

Token 423: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.032985713332891464
    2. ' '' → logprob: -4.907985687255859
    3. ''w' → logprob: -5.157985687255859
    4. ''a' → logprob: -5.282985687255859
    5. 'c' → logprob: -5.532985687255859
    6. ''q' → logprob: -5.782985687255859
    7. ''p' → logprob: -6.657985687255859
    8. ''y' → logprob: -6.907985687255859
    9. ''i' → logprob: -7.407985687255859
    10. ''u' → logprob: -7.407985687255859

Token 424: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003268831642344594
    2. 'x' → logprob: -9.750327110290527
    3. 'w' → logprob: -9.750327110290527
    4. 'q' → logprob: -10.125327110290527
    5. 'a' → logprob: -10.375327110290527
    6. 'k' → logprob: -10.500327110290527
    7. 'A' → logprob: -10.875327110290527
    8. 'C' → logprob: -11.500327110290527
    9. 'p' → logprob: -11.625327110290527
    10. 'd' → logprob: -11.875327110290527

Token 425: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.016366302967071533
    2. ',' → logprob: -4.141366481781006
    3. 'd' → logprob: -8.516366004943848
    4. '','' → logprob: -9.141366004943848
    5. ''' → logprob: -11.641366004943848
    6. ','' → logprob: -12.141366004943848
    7. 'def' → logprob: -13.141366004943848
    8. ',d' → logprob: -13.391366004943848
    9. ' ,' → logprob: -13.641366004943848
    10. 'e' → logprob: -13.766366004943848

Token 426: ' '' (ID: 461)
  Prédit: ''d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''d' → logprob: -0.00022654302301816642
    2. ' '' → logprob: -8.750226974487305
    3. ''a' → logprob: -11.000226974487305
    4. ''' → logprob: -11.125226974487305
    5. 'd' → logprob: -11.375226974487305
    6. ''q' → logprob: -11.500226974487305
    7. ''z' → logprob: -12.375226974487305
    8. ''e' → logprob: -13.125226974487305
    9. ''y' → logprob: -13.250226974487305
    10. ''D' → logprob: -13.750226974487305

Token 427: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.541112427134067e-05
    2. ''d' → logprob: -9.875075340270996
    3. 'p' → logprob: -12.000075340270996
    4. 'q' → logprob: -12.125075340270996
    5. ' d' → logprob: -12.875075340270996
    6. 'b' → logprob: -14.000075340270996
    7. 'A' → logprob: -14.250075340270996
    8. 'c' → logprob: -14.312575340270996
    9. 'x' → logprob: -14.625075340270996
    10. ''' → logprob: -14.625075340270996

Token 428: '')):
' (ID: 199796)
  Prédit: '')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')):
' → logprob: -0.27338194847106934
    2. ''))' → logprob: -1.5233819484710693
    3. ')):' → logprob: -4.523382186889648
    4. ')):
' → logprob: -4.773382186889648
    5. ''):' → logprob: -6.898382186889648
    6. ')' → logprob: -8.523382186889648
    7. ''):
' → logprob: -8.523382186889648
    8. '))' → logprob: -8.773382186889648
    9. ')):
' → logprob: -9.398382186889648
    10. '()' → logprob: -10.148382186889648

Token 429: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044099487364292145
    2. ':' → logprob: -3.4190995693206787
    3. '<|end|>' → logprob: -4.7940993309021
    4. '<|end|>' → logprob: -7.2940993309021
    5. ':
' → logprob: -7.7940993309021
    6. '       ' → logprob: -9.044099807739258
    7. '               ' → logprob: -9.294099807739258
    8. '#' → logprob: -9.419099807739258
    9. '():
' → logprob: -9.544099807739258
    10. ',' → logprob: -9.544099807739258

Token 430: ' raw' (ID: 11428)
  Prédit: ' raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.3177010118961334
    2. 'raw' (adapté à ' raw') → logprob: -1.317700982093811
    3. '               ' → logprob: -5.9427008628845215
    4. '           ' → logprob: -6.4427008628845215
    5. '	raw' → logprob: -9.56770133972168
    6. '   ' → logprob: -10.19270133972168
    7. '(raw' → logprob: -10.94270133972168
    8. ' ' → logprob: -11.19270133972168
    9. '_raw' → logprob: -11.31770133972168
    10. '.raw' → logprob: -11.56770133972168

Token 431: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00172230729367584
    2. '[j' → logprob: -6.62672233581543
    3. '[' → logprob: -8.00172233581543
    4. '][' → logprob: -11.25172233581543
    5. '[int' → logprob: -11.62672233581543
    6. '[input' → logprob: -12.12672233581543
    7. '[I' → logprob: -12.37672233581543
    8. '[][' → logprob: -12.62672233581543
    9. ' [' → logprob: -12.75172233581543
    10. '[ip' → logprob: -13.00172233581543

Token 432: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08040377497673035
    2. '[j' → logprob: -2.5804038047790527
    3. ']' → logprob: -7.080403804779053
    4. '[' → logprob: -7.955403804779053
    5. ')[' → logprob: -8.580403327941895
    6. ' ][' → logprob: -10.205403327941895
    7. '"][' → logprob: -11.330403327941895
    8. '[i' → logprob: -11.580403327941895
    9. '][]' → logprob: -11.955403327941895
    10. '[next' → logprob: -12.205403327941895

Token 433: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.65707261255011e-06
    2. ' j' → logprob: -11.750008583068848
    3. ']' → logprob: -15.000008583068848
    4. '
' → logprob: -16.125009536743164
    5. '[j' → logprob: -16.625009536743164
    6. '(j' → logprob: -17.750009536743164
    7. '	j' → logprob: -17.875009536743164
    8. ' ' → logprob: -18.375009536743164
    9. '_j' → logprob: -18.375009536743164
    10. ':j' → logprob: -18.500009536743164

Token 434: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002937883138656616
    2. ']=' → logprob: -6.0029377937316895
    3. '=' → logprob: -8.002938270568848
    4. ' ]' → logprob: -9.502938270568848
    5. ' =' → logprob: -10.002938270568848
    6. ')' → logprob: -12.127938270568848
    7. '=int' → logprob: -14.502938270568848
    8. ']int' → logprob: -14.627938270568848
    9. ']+=' → logprob: -15.002938270568848
    10. ')=' → logprob: -15.377938270568848

Token 435: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142142474651337
    2. ' =' → logprob: -1.7014213800430298
    3. '=int' → logprob: -11.826421737670898
    4. ' ' → logprob: -14.701421737670898
    5. '=

' → logprob: -15.576421737670898
    6. '=
' → logprob: -16.8264217376709
    7. ',' → logprob: -17.2014217376709
    8. '＝' → logprob: -17.2014217376709
    9. ' =
' → logprob: -17.4514217376709
    10. '.=' → logprob: -17.8264217376709

Token 436: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.8550976164988242e-05
    2. ' int' → logprob: -11.000018119812012
    3. 'next' → logprob: -13.250018119812012
    4. '   ' → logprob: -16.875019073486328
    5. '<int' → logprob: -17.625019073486328
    6. '  ' → logprob: -18.000019073486328
    7. '(int' → logprob: -18.250019073486328
    8. ' next' → logprob: -19.250019073486328
    9. ' ' → logprob: -20.000019073486328
    10. '[int' → logprob: -20.250019073486328

Token 437: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -4.127333340875339e-06
    2. 'next' → logprob: -12.500003814697266
    3. '(' → logprob: -14.750003814697266
    4. ' next' → logprob: -18.000003814697266
    5. '[next' → logprob: -18.250003814697266
    6. '(
' → logprob: -19.000003814697266
    7. '	next' → logprob: -19.875003814697266
    8. ',next' → logprob: -20.500003814697266
    9. 'Next' → logprob: -21.125003814697266
    10. '.next' → logprob: -21.125003814697266

Token 438: '(stream' (ID: 45416)
  Prédit: '(stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stream' → logprob: -0.00023333763238042593
    2. 'stream' → logprob: -8.37523365020752
    3. '(' → logprob: -13.25023365020752
    4. ')' → logprob: -14.25023365020752
    5. ' streamer' → logprob: -16.500232696533203
    6. ')(' → logprob: -16.625232696533203
    7. '(
' → logprob: -16.750232696533203
    8. '	stream' → logprob: -16.750232696533203
    9. ' (' → logprob: -18.250232696533203
    10. '(st' → logprob: -18.375232696533203

Token 439: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.006228455808013678
    2. 'r' → logprob: -5.381228446960449
    3. '(stream' → logprob: -6.631228446960449
    4. 'stream' → logprob: -8.63122844696045
    5. 'ream' → logprob: -10.38122844696045
    6. ')' → logprob: -10.63122844696045
    7. 'ar' → logprob: -11.50622844696045
    8. 'rer' → logprob: -11.75622844696045
    9. 'e' → logprob: -11.88122844696045
    10. ' streamer' → logprob: -12.13122844696045

Token 440: '))
' (ID: 2210)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0022287636529654264
    2. ')' → logprob: -6.752228736877441
    3. '()))' → logprob: -7.252228736877441
    4. '()' → logprob: -8.127228736877441
    5. ' ())' → logprob: -10.877228736877441
    6. '))' → logprob: -11.127228736877441
    7. '())
' → logprob: -11.377228736877441
    8. '(' → logprob: -11.752228736877441
    9. '())

' → logprob: -15.627228736877441
    10. '()))
' → logprob: -15.877228736877441

Token 441: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 442: ' obj' (ID: 4099)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6082168221473694
    2. 'prefs' → logprob: -1.2332167625427246
    3. ' prefs' → logprob: -3.1082167625427246
    4. 'p' → logprob: -3.3582167625427246
    5. ' personal' → logprob: -3.3582167625427246
    6. 'personal' → logprob: -3.9832167625427246
    7. 'pp' → logprob: -4.858216762542725
    8. ' p' → logprob: -5.608216762542725
    9. ' pref' → logprob: -5.858216762542725
    10. 'Personal' → logprob: -5.858216762542725

Token 443: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055070266127586365
    2. '=' → logprob: -2.930070161819458
    3. 'ect' → logprob: -9.055069923400879
    4. 'ects' → logprob: -9.930069923400879
    5. '.' → logprob: -11.680069923400879
    6. ' ' → logprob: -12.430069923400879
    7. 'ection' → logprob: -13.430069923400879
    8. '_' → logprob: -13.430069923400879
    9. ' =
' → logprob: -13.555069923400879
    10. 'ective' → logprob: -13.930069923400879

Token 444: ' Personal' (ID: 19086)
  Prédit: 'Personal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Personal' → logprob: -0.048587486147880554
    2. ' Personal' → logprob: -3.0485875606536865
    3. 'Person' → logprob: -17.673587799072266
    4. ' personal' → logprob: -18.048587799072266
    5. ' Personalized' → logprob: -21.673587799072266
    6. ' ' → logprob: -21.798587799072266
    7. 'personal' → logprob: -21.923587799072266
    8. '   ' → logprob: -22.173587799072266
    9. 'ersonal' → logprob: -23.673587799072266
    10. '.Person' → logprob: -24.173587799072266

Token 445: 'Prefs' (ID: 53055)
  Prédit: 'Prefs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prefs' → logprob: -1.9361264946837764e-07
    2. 'prefs' → logprob: -16.125
    3. 'Pref' → logprob: -18.0
    4. 'Refs' → logprob: -18.125
    5. '
' → logprob: -18.75
    6. 'Prefab' → logprob: -19.25
    7. '_PREF' → logprob: -19.375
    8. 'Ptrs' → logprob: -19.375
    9. 'Personal' → logprob: -19.625
    10. 'Specs' → logprob: -20.0

Token 446: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07903123646974564
    2. '()
' → logprob: -2.579031229019165
    3. '()

' → logprob: -10.204030990600586
    4. '(N' → logprob: -10.579030990600586
    5. '(' → logprob: -10.704030990600586
    6. '();' → logprob: -10.829030990600586
    7. '()
' → logprob: -10.954030990600586
    8. '().' → logprob: -11.954030990600586
    9. '(
' → logprob: -12.704030990600586
    10. ' ()' → logprob: -13.204030990600586

Token 447: '   ' (ID: 271)
  Prédit: 'obj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obj' → logprob: -0.13068939745426178
    2. '   ' → logprob: -2.1306893825531006
    3. ' obj' → logprob: -5.75568962097168
    4. 'for' → logprob: -7.50568962097168
    5. ' for' → logprob: -10.75568962097168
    6. '	obj' → logprob: -12.38068962097168
    7. '[obj' → logprob: -12.50568962097168
    8. '    
' → logprob: -13.13068962097168
    9. ' ' → logprob: -13.50568962097168
    10. '
' → logprob: -13.75568962097168

Token 448: ' obj' (ID: 4099)
  Prédit: 'obj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obj' (adapté à ' obj') → logprob: -6.802049756515771e-05
    2. ' obj' → logprob: -10.000067710876465
    3. '   ' → logprob: -10.750067710876465
    4. '[obj' → logprob: -14.875067710876465
    5. 'param' → logprob: -15.500067710876465
    6. 'for' → logprob: -15.625067710876465
    7. '(obj' → logprob: -16.00006866455078
    8. 'params' → logprob: -16.12506866455078
    9. '	obj' → logprob: -16.37506866455078
    10. '_' → logprob: -17.37506866455078

Token 449: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -5.319370302458992e-06
    2. '.' → logprob: -12.250005722045898
    3. ' .' → logprob: -16.0000057220459
    4. '.proc' → logprob: -16.5000057220459
    5. '.run' → logprob: -16.7500057220459
    6. 'process' → logprob: -17.0000057220459
    7. '.show' → logprob: -17.6250057220459
    8. '.pro' → logprob: -17.7500057220459
    9. '.Process' → logprob: -17.8750057220459
    10. '.perform' → logprob: -18.1250057220459

Token 450: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -3.023293538717553e-05
    2. '(' → logprob: -10.875030517578125
    3. ' (' → logprob: -11.875030517578125
    4. '(
' → logprob: -12.875030517578125
    5. '((' → logprob: -13.750030517578125
    6. 'N' → logprob: -15.000030517578125
    7. '(n' → logprob: -15.375030517578125
    8. '```' → logprob: -17.375030517578125
    9. '
' → logprob: -17.750030517578125
    10. '(NS' → logprob: -19.250030517578125

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010509284038562328
    2. ' ,' → logprob: -9.625104904174805
    3. ',M' → logprob: -10.250104904174805
    4. ',
' → logprob: -12.625104904174805
    5. 'M' → logprob: -15.625104904174805
    6. '=' → logprob: -16.375104904174805
    7. '   ' → logprob: -16.750104904174805
    8. '
' → logprob: -16.875104904174805
    9. ')' → logprob: -17.375104904174805
    10. ',

' → logprob: -17.750104904174805

Token 452: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.05488329753279686
    2. ' M' → logprob: -2.9298832416534424
    3. '   ' → logprob: -15.179883003234863
    4. ' ' → logprob: -15.304883003234863
    5. ',' → logprob: -16.30488395690918
    6. '  ' → logprob: -16.42988395690918
    7. '
' → logprob: -16.67988395690918
    8. '    ' → logprob: -16.67988395690918
    9. '```' → logprob: -16.80488395690918
    10. ',M' → logprob: -17.05488395690918

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004689226043410599
    2. ' ,' → logprob: -8.250469207763672
    3. ',Q' → logprob: -8.500469207763672
    4. 'Q' → logprob: -12.875469207763672
    5. '```' → logprob: -14.500469207763672
    6. ',
' → logprob: -15.250469207763672
    7. '   ' → logprob: -15.375469207763672
    8. ')' → logprob: -15.875469207763672
    9. ',q' → logprob: -16.375469207763672
    10. '[' → logprob: -16.625469207763672

Token 454: ' Q' (ID: 1486)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.056472234427928925
    2. '(raw' → logprob: -3.0564723014831543
    3. ' raw' → logprob: -5.431472301483154
    4. '[' → logprob: -6.181472301483154
    5. '(' → logprob: -7.806472301483154
    6. 'tuple' → logprob: -7.931472301483154
    7. '(*' → logprob: -8.681471824645996
    8. ' [' → logprob: -9.181471824645996
    9. ' (' → logprob: -9.556471824645996
    10. '[a' → logprob: -9.681471824645996

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.56233171664644e-05
    2. ' ,' → logprob: -10.125055313110352
    3. ',
' → logprob: -12.125055313110352
    4. 'raw' → logprob: -12.625055313110352
    5. ',(' → logprob: -13.500055313110352
    6. ',[' → logprob: -13.625055313110352
    7. '   ' → logprob: -13.750055313110352
    8. ')' → logprob: -14.250055313110352
    9. '(raw' → logprob: -14.375055313110352
    10. 'tuple' → logprob: -14.500055313110352

Token 456: ' raw' (ID: 11428)
  Prédit: '(raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.5989382266998291
    2. 'raw' → logprob: -0.8489382266998291
    3. '[' → logprob: -4.72393798828125
    4. 'tuple' → logprob: -5.47393798828125
    5. ' raw' → logprob: -5.59893798828125
    6. '(' → logprob: -5.97393798828125
    7. '(*' → logprob: -7.09893798828125
    8. ' (' → logprob: -7.22393798828125
    9. '(tuple' → logprob: -7.34893798828125
    10. ' [' → logprob: -8.09893798828125

Token 457: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05074102059006691
    2. '[' → logprob: -3.175740957260132
    3. '[:,' → logprob: -5.425741195678711
    4. '<|end|>' → logprob: -6.675741195678711
    5. '[:' → logprob: -7.050741195678711
    6. '[...,' → logprob: -7.800741195678711
    7. ')
' → logprob: -7.800741195678711
    8. ' )' → logprob: -10.925741195678711
    9. '```' → logprob: -11.050741195678711
    10. ').__' → logprob: -11.050741195678711

Token 458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45369642972946167
    2. '.show' → logprob: -2.3286964893341064
    3. ')' → logprob: -2.4536964893341064
    4. '.' → logprob: -2.7036964893341064
    5. '[' → logprob: -3.2036964893341064
    6. '[obj' → logprob: -4.078696250915527
    7. '()' → logprob: -4.578696250915527
    8. '()
' → logprob: -4.953696250915527
    9. 'obj' → logprob: -5.328696250915527
    10. '(' → logprob: -5.453696250915527

Token 459: ' obj' (ID: 4099)
  Prédit: 'obj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obj' (adapté à ' obj') → logprob: -0.04786114767193794
    2. ' obj' → logprob: -3.547861099243164
    3. '   ' → logprob: -4.047861099243164
    4. '[obj' → logprob: -8.172861099243164
    5. '	obj' → logprob: -9.922861099243164
    6. ' ' → logprob: -10.047861099243164
    7. '.obj' → logprob: -10.047861099243164
    8. '(obj' → logprob: -11.422861099243164
    9. '
' → logprob: -11.547861099243164
    10. '```' → logprob: -11.922861099243164

Token 460: '.show' (ID: 8871)
  Prédit: '.show'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.show' → logprob: -0.004084097687155008
    2. '.' → logprob: -5.50408411026001
    3. '.mainloop' → logprob: -12.754083633422852
    4. '.savefig' → logprob: -14.379083633422852
    5. '.process' → logprob: -14.504083633422852
    6. '.run' → logprob: -14.754083633422852
    7. ' .' → logprob: -15.754083633422852
    8. '.Show' → logprob: -15.754083633422852
    9. 'show' → logprob: -16.00408363342285
    10. '.s' → logprob: -16.12908363342285

Token 461: '_it' (ID: 35166)
  Prédit: '_it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_it' → logprob: -1.5570885807392187e-05
    2. '_' → logprob: -11.125015258789062
    3. '_if' → logprob: -15.250015258789062
    4. '_at' → logprob: -16.000015258789062
    5. '()' → logprob: -16.125015258789062
    6. '_i' → logprob: -16.500015258789062
    7. '_IT' → logprob: -16.625015258789062
    8. '_to' → logprob: -17.625015258789062
    9. '__' → logprob: -17.625015258789062
    10. ' _' → logprob: -17.875015258789062

Token 462: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.032318707555532455
    2. '()
' → logprob: -3.907318592071533
    3. '(' → logprob: -4.657318592071533
    4. '(
' → logprob: -6.157318592071533
    5. '()

' → logprob: -10.032319068908691
    6. '()\' → logprob: -11.407319068908691
    7. '<|end|>' → logprob: -11.782319068908691
    8. '()`' → logprob: -12.032319068908691
    9. '
' → logprob: -12.282319068908691
    10. '();' → logprob: -12.407319068908691

Token 463: 'if' (ID: 366)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1630425900220871
    2. '(' → logprob: -1.9130425453186035
    3. '(
' → logprob: -7.4130425453186035
    4. '())' → logprob: -7.7880425453186035
    5. ')' → logprob: -7.9130425453186035
    6. '<|end|>' → logprob: -8.163043022155762
    7. '[' → logprob: -8.538043022155762
    8. '()
' → logprob: -8.913043022155762
    9. ':' → logprob: -9.038043022155762
    10. '#' → logprob: -9.538043022155762

Token 464: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20188796520233154
    2. '__' → logprob: -1.7018879652023315
    3. 'name' → logprob: -8.201888084411621
    4. '_name' → logprob: -8.826888084411621
    5. ' ' → logprob: -10.451888084411621
    6. '___' → logprob: -11.451888084411621
    7. '_' → logprob: -12.451888084411621
    8. 'Name' → logprob: -12.576888084411621
    9. ' name' → logprob: -12.826888084411621
    10. ' ' → logprob: -14.326888084411621

Token 465: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.012952087447047234
    2. ' ==' → logprob: -5.137951850891113
    3. '==' → logprob: -5.387951850891113
    4. '__.__' → logprob: -6.512951850891113
    5. '=="' → logprob: -8.137951850891113
    6. '.__' → logprob: -8.637951850891113
    7. ' __' → logprob: -9.387951850891113
    8. '__.' → logprob: -9.387951850891113
    9. 'name' → logprob: -9.512951850891113
    10. '[' → logprob: -10.262951850891113

Token 466: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.370294846012257e-05
    2. '__.__' → logprob: -10.125043869018555
    3. '==' → logprob: -13.125043869018555
    4. '__.' → logprob: -14.125043869018555
    5. '__('' → logprob: -15.250043869018555
    6. '__
' → logprob: -16.000043869018555
    7. '___' → logprob: -16.125043869018555
    8. '__["' → logprob: -16.125043869018555
    9. '=="' → logprob: -16.375043869018555
    10. ' ==' → logprob: -16.750043869018555

Token 467: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3633580207824707
    2. ' ==' → logprob: -1.3633580207824707
    3. '__' → logprob: -3.6133580207824707
    4. '=="' → logprob: -3.9883580207824707
    5. '=='' → logprob: -5.738358020782471
    6. '=' → logprob: -9.613357543945312
    7. '==
' → logprob: -10.113357543945312
    8. '"' → logprob: -11.488357543945312
    9. '===' → logprob: -11.738357543945312
    10. '[' → logprob: -11.738357543945312

Token 468: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.25199219584465027
    2. ''' → logprob: -1.5019922256469727
    3. ' "__' → logprob: -9.876992225646973
    4. ' '__' → logprob: -11.876992225646973
    5. '__' → logprob: -13.376992225646973
    6. ''"' → logprob: -13.501992225646973
    7. '"user' → logprob: -14.876992225646973
    8. '"_' → logprob: -15.626992225646973
    9. '"'' → logprob: -15.626992225646973
    10. ''_' → logprob: -15.751992225646973

Token 469: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. 'name' → logprob: -16.375
    3. '_main' → logprob: -17.125
    4. '__' → logprob: -18.0
    5. 'm' → logprob: -18.625
    6. ' main' → logprob: -19.125
    7. 'ma' → logprob: -20.25
    8. '	main' → logprob: -20.625
    9. 'mail' → logprob: -21.25
    10. '-main' → logprob: -21.625

Token 470: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.0486455038189888
    2. '__' → logprob: -3.048645496368408
    3. '__:' → logprob: -10.423645973205566
    4. '__":
' → logprob: -11.048645973205566
    5. '':' → logprob: -11.423645973205566
    6. '':
' → logprob: -13.798645973205566
    7. '_' → logprob: -14.923645973205566
    8. ':' → logprob: -16.17364501953125
    9. '__
' → logprob: -16.42364501953125
    10. ''' → logprob: -17.42364501953125

Token 471: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03255286440253258
    2. 'entry' → logprob: -4.157552719116211
    3. ' entry' → logprob: -4.157552719116211
    4. '	entry' → logprob: -7.282552719116211
    5. '    
' → logprob: -10.157552719116211
    6. '(entry' → logprob: -12.657552719116211
    7. '_entry' → logprob: -12.782552719116211
    8. '```' → logprob: -13.657552719116211
    9. '
' → logprob: -13.907552719116211
    10. '   ' → logprob: -14.407552719116211

Token 472: ' #' (ID: 1069)
  Prédit: 'entry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entry' → logprob: -8.08944896562025e-05
    2. ' entry' → logprob: -9.500081062316895
    3. '   ' → logprob: -12.250081062316895
    4. 'import' → logprob: -13.875081062316895
    5. '	entry' → logprob: -15.250081062316895
    6. 'exit' → logprob: -16.625080108642578
    7. '_entry' → logprob: -17.625080108642578
    8. '    
' → logprob: -19.000080108642578
    9. '(entry' → logprob: -19.125080108642578
    10. 'ENTRY' → logprob: -19.625080108642578

Token 473: ' deliberately' (ID: 77976)
  Prédit: 'entry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entry' → logprob: -0.008661605417728424
    2. ' entry' → logprob: -4.75866174697876
    3. '   ' → logprob: -10.508661270141602
    4. 'import' → logprob: -11.008661270141602
    5. 'exit' → logprob: -13.508661270141602
    6. '	entry' → logprob: -14.133661270141602
    7. 'main' → logprob: -14.508661270141602
    8. '__' → logprob: -15.758661270141602
    9. ' ' → logprob: -15.883661270141602
    10. '    
' → logprob: -16.0086612701416

Token 474: ' obscure' (ID: 77331)
  Prédit: 'entry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entry' → logprob: -0.3973976969718933
    2. ' entry' → logprob: -1.272397756576538
    3. '   ' → logprob: -3.272397756576538
    4. 'import' → logprob: -5.022397518157959
    5. 'main' → logprob: -6.272397518157959
    6. 'exit' → logprob: -7.397397518157959
    7. '__' → logprob: -8.272397994995117
    8. ' main' → logprob: -9.022397994995117
    9. '    
' → logprob: -9.647397994995117
    10. '  ' → logprob: -9.647397994995117

Token 475: ' entry' (ID: 7251)
  Prédit: 'entry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entry' → logprob: -0.46107903122901917
    2. '   ' → logprob: -1.0860790014266968
    3. ' entry' → logprob: -3.4610791206359863
    4. '	entry' → logprob: -7.961079120635986
    5. 'import' → logprob: -9.836078643798828
    6. ' ' → logprob: -11.211078643798828
    7. '    
' → logprob: -11.461078643798828
    8. '
' → logprob: -11.961078643798828
    9. '(entry' → logprob: -12.211078643798828
    10. '_entry' → logprob: -12.586078643798828

Token 476: ' point' (ID: 2438)
  Prédit: 'entry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entry' → logprob: -0.410484254360199
    2. '()' → logprob: -1.7854843139648438
    3. '_entry' → logprob: -2.2854843139648438
    4. '   ' → logprob: -3.7854843139648438
    5. ' entry' → logprob: -4.285484313964844
    6. '()
' → logprob: -4.285484313964844
    7. '(entry' → logprob: -4.410484313964844
    8. '(
' → logprob: -6.660484313964844
    9. '(' → logprob: -6.785484313964844
    10. '_' → logprob: -7.910484313964844

Token 477: '
' (ID: 198)
  Prédit: 'entry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entry' → logprob: -0.5039158463478088
    2. '   ' → logprob: -1.003915786743164
    3. ' entry' → logprob: -3.628915786743164
    4. '    
' → logprob: -6.878915786743164
    5. '	entry' → logprob: -6.878915786743164
    6. '(entry' → logprob: -8.253915786743164
    7. '
' → logprob: -8.378915786743164
    8. '_entry' → logprob: -9.128915786743164
    9. '<|end|>' → logprob: -10.128915786743164
    10. '.entry' → logprob: -11.003915786743164

Token 478: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37198981642723083
    2. 'entry' → logprob: -1.3719898462295532
    3. ' entry' → logprob: -2.8719897270202637
    4. '	entry' → logprob: -7.871989727020264
    5. 'import' → logprob: -11.121990203857422
    6. ' ' → logprob: -11.246990203857422
    7. '    
' → logprob: -11.746990203857422
    8. '_entry' → logprob: -11.871990203857422
    9. '(entry' → logprob: -12.246990203857422
    10. '  ' → logprob: -12.371990203857422

Token 479: ' eval' (ID: 29383)
  Prédit: 'entry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entry' → logprob: -0.0006500058807432652
    2. ' entry' → logprob: -8.000650405883789
    3. '   ' → logprob: -8.125650405883789
    4. 'import' → logprob: -11.750650405883789
    5. '	entry' → logprob: -11.750650405883789
    6. 'entr' → logprob: -14.125650405883789
    7. ' ' → logprob: -14.375650405883789
    8. 'exit' → logprob: -14.625650405883789
    9. '  ' → logprob: -15.125650405883789
    10. '(entry' → logprob: -16.12565040588379

Token 480: '('' (ID: 706)
  Prédit: '('__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('__' → logprob: -0.9763602614402771
    2. '(input' → logprob: -1.2263603210449219
    3. '(' → logprob: -1.3513603210449219
    4. '("__' → logprob: -2.851360321044922
    5. '('' → logprob: -4.476360321044922
    6. 'input' → logprob: -7.351360321044922
    7. '("' → logprob: -7.601360321044922
    8. '(__' → logprob: -8.351360321044922
    9. '('_' → logprob: -8.726360321044922
    10. '(open' → logprob: -9.351360321044922

Token 481: 'entry' (ID: 7962)
  Prédit: 'entry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entry' → logprob: -0.3619915544986725
    2. '"' → logprob: -1.61199152469635
    3. ''' → logprob: -2.3619916439056396
    4. ''e' → logprob: -6.2369914054870605
    5. ''en' → logprob: -6.3619914054870605
    6. '__' → logprob: -6.6119914054870605
    7. ''ent' → logprob: -6.7369914054870605
    8. '\'' → logprob: -7.3619914054870605
    9. 'e' → logprob: -7.4869914054870605
    10. '''' → logprob: -7.7369914054870605

Token 482: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -6.265633419388905e-05
    2. '_' → logprob: -10.375062942504883
    3. '_p' → logprob: -10.500062942504883
    4. '_po' → logprob: -13.750062942504883
    5. '()' → logprob: -14.125062942504883
    6. ' _' → logprob: -14.500062942504883
    7. '')' → logprob: -14.625062942504883
    8. '_pt' → logprob: -15.625062942504883
    9. ''_' → logprob: -15.875062942504883
    10. '_place' → logprob: -16.125062942504883

Token 483: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.6286106983898208e-05
    2. '())' → logprob: -11.875016212463379
    3. '')' → logprob: -12.500016212463379
    4. '('' → logprob: -12.625016212463379
    5. '()',' → logprob: -14.250016212463379
    6. ')' → logprob: -14.625016212463379
    7. ' ()' → logprob: -14.875016212463379
    8. '(' → logprob: -15.125016212463379
    9. '()\' → logprob: -15.250016212463379
    10. '()`' → logprob: -17.125017166137695

Token 484: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2963903844356537
    2. '()' → logprob: -1.796390414237976
    3. '')' → logprob: -2.4213902950286865
    4. '())' → logprob: -7.171390533447266
    5. ')'' → logprob: -7.421390533447266
    6. '('' → logprob: -8.046390533447266
    7. ')")' → logprob: -10.296390533447266
    8. '(' → logprob: -10.671390533447266
    9. ')')
' → logprob: -10.796390533447266
    10. ')').' → logprob: -11.296390533447266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 482
Tokens correctement prédits (1ère position, stricte): 159
Tokens correctement prédits (1ère position, avec adaptation): 170
Tokens correctement prédits (top 10): 326
Précision stricte (1ère position): 32.99%
Précision adaptée (1ère position): 35.27%
Précision (top 10): 67.63%
================================================================================
