================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# Augmente la limite de récursion pour permettre des appels récursifs profonds (nécessaire pour un grand graphe)
sys.setrecursionlimit(10**7)

# Substitue la fonction d'entrée standard pour une lecture rapide ligne par ligne
input = sys.stdin.readline

def dfs(v, color):
    """
    Effectue un parcours en profondeur (DFS) pour vérifier si le graphe est biparti.
    Attribue récursivement une couleur alternée à chaque sommet.

    Args:
        v (int): Le sommet actuellement visité.
        color (int): La couleur à assigner au sommet (1 ou -1).

    Returns:
        bool: True si le graphe peut être colorié sans conflits (biparti), False sinon.
    """
    colors[v] = color  # Attribuer la couleur au sommet courant
    for to in g[v]:    # Pour chaque voisin du sommet courant
        if colors[to] == color:
            # Si le voisin a déjà la même couleur, ce n'est pas biparti
            return False
        if colors[to] == 0 and not dfs(to, -color):
            # Si le voisin n'est pas encore colorié, coloriage avec la couleur opposée
            # Si un conflit survient plus loin, retourne immédiatement False
            return False
    return True  # Aucun conflit détecté, la sous-composante est bipartie

def Washall_Floyd(d):
    """
    Applique l'algorithme de Floyd-Warshall pour calculer les plus courts chemins
    entre toutes les paires de sommets dans un graphe pondéré.

    Args:
        d (list of list of float): Matrice d'adjacence initiale du graphe représentant les poids des arêtes.

    Returns:
        list of list of float: Matrice des plus courts chemins entre toutes les paires de sommets.
    """
    for k in range(n):              # Pour chaque sommet intermédiaire
        for i in range(n):          # Pour chaque sommet de départ
            for j in range(n):      # Pour chaque sommet d'arrivée
                # Met à jour la distance minimale de i à j via k si cela réduit le coût
                d[i][j] = min(d[i][j], d[i][k] + d[k][j])
    return d

# Lecture du nombre de sommets dans le graphe
n = int(input())

# Initialisation de la liste d'adjacence pour le graphe et la matrice des distances
g = [[] for _ in range(n)]  # Liste d'adjacence pour chaque sommet
f_inf = float('inf')        # Représente l'infini pour l'initialisation des distances
dist = [[f_inf] * n for _ in range(n)]  # Matrice des poids (distances) initiaux

# Distance d'un sommet à lui-même = 0
for i in range(n):
    dist[i][i] = 0

# Lecture de la matrice d'adjacence en entrée et construction du graphe
for i in range(n):
    S = input()  # Lire la ligne correspondant aux arêtes du sommet i
    for j in range(n):
        if S[j] == '1':
            # Il existe une arête entre i et j
            g[i].append(j)     # Ajouter j à la liste des voisins de i
            dist[i][j] = 1     # Poids de l'arête directe (i,j) = 1
            dist[j][i] = 1     # Graphe non orienté : (j,i) aussi

# Initialisation du tableau de couleurs pour la vérification bipartite
colors = [0] * n  # 0 = pas colorié, 1 ou -1 pour distinguer les deux couleurs
ans = -1          # Valeur retournée en cas de graphe non biparti

# Vérifie si le graphe est biparti à partir du sommet 0
if not dfs(0, 1):
    # Si ce n'est pas biparti, affichage de -1 selon la spécification
    print(ans)
else:
    # Si le graphe est biparti, calcule les distances via Floyd-Warshall
    Washall_Floyd(dist)
    for d in dist:
        # Pour chaque sommet, récupère la distance maximale vers un autre sommet
        tmp = max(d)
        # Prend la plus grande de ces distances (diamètre du graphe)
        ans = max(tmp, ans)
    # Affiche le diamètre + 1 (taille minimale de la partition/décomposition)
    print(ans + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' Aug' (ID: 6025)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02773398905992508
    2. '  ' → logprob: -5.52773380279541
    3. ' #' → logprob: -5.77773380279541
    4. ' def' → logprob: -6.40273380279541
    5. ' -*-' → logprob: -6.40273380279541
    6. ' import' → logprob: -6.52773380279541
    7. 'import' → logprob: -6.52773380279541
    8. ' ```' → logprob: -6.52773380279541
    9. ' argparse' → logprob: -6.52773380279541
    10. 'def' → logprob: -6.77773380279541

Token 5: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0050496906042099
    2. 'mentation' → logprob: -6.005049705505371
    3. 'mented' → logprob: -6.130049705505371
    4. 'mentor' → logprob: -8.505049705505371
    5. 'm' → logprob: -8.880049705505371
    6. 'me' → logprob: -11.005049705505371
    7. ' ment' → logprob: -11.505049705505371
    8. 'ument' → logprob: -11.880049705505371
    9. 'men' → logprob: -12.005049705505371
    10. '#' → logprob: -12.255049705505371

Token 6: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004967728164047003
    2. 'nt' → logprob: -6.00496768951416
    3. '_' → logprob: -7.37996768951416
    4. 'n' → logprob: -7.50496768951416
    5. 'z' → logprob: -7.62996768951416
    6. ' ' → logprob: -8.25496768951416
    7. 'ment' → logprob: -9.25496768951416
    8. 'ur' → logprob: -9.25496768951416
    9. 's' → logprob: -9.50496768951416
    10. '-' → logprob: -9.50496768951416

Token 7: ' limite' (ID: 48939)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.7298920750617981
    2. 'performance' → logprob: -1.4798920154571533
    3. 'v' → logprob: -2.9798920154571533
    4. ' ' → logprob: -3.2298920154571533
    5. 'product' → logprob: -3.3548920154571533
    6. 'port' → logprob: -3.8548920154571533
    7. 'pr' → logprob: -3.9798920154571533
    8. 'vis' → logprob: -4.479892253875732
    9. 't' → logprob: -4.729892253875732
    10. 'lis' → logprob: -4.854892253875732

Token 8: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42602086067199707
    2. ' de' → logprob: -2.426020860671997
    3. ' sys' → logprob: -2.426020860671997
    4. ' d' → logprob: -3.051020860671997
    5. 'sys' → logprob: -3.176020860671997
    6. '_sys' → logprob: -3.801020860671997
    7. 'd' → logprob: -4.051020622253418
    8. 'import' → logprob: -4.551020622253418
    9. ' ' → logprob: -5.176020622253418
    10. ' _' → logprob: -5.426020622253418

Token 9: ' réc' (ID: 36254)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.25937560200691223
    2. 'rec' → logprob: -1.5093755722045898
    3. ' réc' → logprob: -5.50937557220459
    4. 'ré' → logprob: -6.00937557220459
    5. 're' → logprob: -8.25937557220459
    6. 'import' → logprob: -8.50937557220459
    7. 'la' → logprob: -8.50937557220459
    8. ' recursion' → logprob: -10.00937557220459
    9. 'stack' → logprob: -10.13437557220459
    10. '```' → logprob: -10.25937557220459

Token 10: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0703667402267456
    2. 'urs' → logprob: -2.820366859436035
    3. 'ur' → logprob: -4.820366859436035
    4. 'u' → logprob: -9.070366859436035
    5. 'urrence' → logprob: -9.695366859436035
    6. '```' → logprob: -10.570366859436035
    7. 'ursive' → logprob: -10.820366859436035
    8. 'urse' → logprob: -11.070366859436035
    9. 'rs' → logprob: -11.195366859436035
    10. '#' → logprob: -12.195366859436035

Token 11: ' pour' (ID: 1930)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.05374404788017273
    2. '_sys' → logprob: -3.428744077682495
    3. '_' → logprob: -4.678743839263916
    4. 'import' → logprob: -5.053743839263916
    5. ' sys' → logprob: -5.928743839263916
    6. '_s' → logprob: -7.053743839263916
    7. '\' → logprob: -8.678744316101074
    8. '```' → logprob: -9.053744316101074
    9. '(sys' → logprob: -10.053744316101074
    10. '_import' → logprob: -10.053744316101074

Token 12: ' permettre' (ID: 55483)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3778810203075409
    2. ' sys' → logprob: -1.2528810501098633
    3. 'la' → logprob: -4.627881050109863
    4. ' la' → logprob: -5.127881050109863
    5. 'l' → logprob: -5.752881050109863
    6. 'import' → logprob: -6.002881050109863
    7. '```' → logprob: -6.627881050109863
    8. '100' → logprob: -7.002881050109863
    9. ' permettre' → logprob: -7.377881050109863
    10. 'rec' → logprob: -7.377881050109863

Token 13: ' des' (ID: 731)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6128851175308228
    2. 'd' → logprob: -1.1128851175308228
    3. 'sys' → logprob: -3.612884998321533
    4. ' de' → logprob: -3.987884998321533
    5. ' l' → logprob: -4.237884998321533
    6. 'import' → logprob: -4.362884998321533
    7. ' sys' → logprob: -4.362884998321533
    8. 'de' → logprob: -4.362884998321533
    9. '   ' → logprob: -4.862884998321533
    10. 'l' → logprob: -4.862884998321533

Token 14: ' appels' (ID: 133870)
  Prédit: ' appels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appels' → logprob: -0.12576887011528015
    2. 'app' → logprob: -3.2507688999176025
    3. ' réc' → logprob: -3.6257688999176025
    4. ' calcul' → logprob: -4.500768661499023
    5. 'r' → logprob: -4.875768661499023
    6. 'calcul' → logprob: -5.000768661499023
    7. ' traitements' → logprob: -5.250768661499023
    8. 'appel' → logprob: -5.375768661499023
    9. 'trait' → logprob: -5.750768661499023
    10. ' app' → logprob: -6.000768661499023

Token 15: ' réc' (ID: 36254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33754006028175354
    2. ' _' → logprob: -1.3375400304794312
    3. ' ' → logprob: -4.587540149688721
    4. ' de' → logprob: -5.712540149688721
    5. '  ' → logprob: -6.212540149688721
    6. '_stack' → logprob: -6.212540149688721
    7. 's' → logprob: -6.962540149688721
    8. '_s' → logprob: -7.212540149688721
    9. '_de' → logprob: -7.212540149688721
    10. '_recursive' → logprob: -7.462540149688721

Token 16: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.008945916779339314
    2. 'ursion' → logprob: -5.258945941925049
    3. 'ur' → logprob: -6.383945941925049
    4. 'ursive' → logprob: -6.633945941925049
    5. 'urrent' → logprob: -8.25894546508789
    6. 'u' → logprob: -8.75894546508789
    7. 'urr' → logprob: -10.00894546508789
    8. 'r' → logprob: -10.25894546508789
    9. '#' → logprob: -10.63394546508789
    10. 'urse' → logprob: -11.00894546508789

Token 17: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.7862979173660278
    2. 'ves' → logprob: -1.0362979173660278
    3. 'urs' → logprob: -2.5362977981567383
    4. 'ons' → logprob: -3.5362977981567383
    5. '##' → logprob: -3.9112977981567383
    6. 's' → logprob: -4.036297798156738
    7. '#' → logprob: -4.536297798156738
    8. 'f' → logprob: -4.661297798156738
    9. 'fs' → logprob: -5.036297798156738
    10. 've' → logprob: -5.161297798156738

Token 18: ' prof' (ID: 1915)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.33779358863830566
    2. 'sys' → logprob: -1.9627935886383057
    3. ' profond' → logprob: -2.5877935886383057
    4. 'import' → logprob: -4.087793350219727
    5. ' deep' → logprob: -4.462793350219727
    6. 'prof' → logprob: -4.837793350219727
    7. 'deep' → logprob: -4.837793350219727
    8. '_' → logprob: -4.962793350219727
    9. ' profondeur' → logprob: -5.337793350219727
    10. '_sys' → logprob: -6.212793350219727

Token 19: 'onds' (ID: 20754)
  Prédit: 'onde'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onde' → logprob: -0.16465693712234497
    2. 'on' → logprob: -2.7896568775177
    3. 'o' → logprob: -3.2896568775177
    4. 'ondes' → logprob: -3.4146568775177
    5. 'onds' → logprob: -4.039657115936279
    6. 'ond' → logprob: -6.164657115936279
    7. 'onda' → logprob: -9.664656639099121
    8. '\' → logprob: -9.789656639099121
    9. '```' → logprob: -9.914656639099121
    10. '#' → logprob: -9.914656639099121

Token 20: ' (' (ID: 350)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.006318612489849329
    2. 'import' → logprob: -6.25631856918335
    3. ' sys' → logprob: -6.25631856918335
    4. '\' → logprob: -6.88131856918335
    5. '_sys' → logprob: -7.25631856918335
    6. '_' → logprob: -8.506319046020508
    7. '
' → logprob: -9.006319046020508
    8. '(sys' → logprob: -9.131319046020508
    9. '\n' → logprob: -9.256319046020508
    10. '```' → logprob: -10.006319046020508

Token 21: 'né' (ID: 10149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003729418385773897
    2. ' )' → logprob: -6.128729343414307
    3. 'import' → logprob: -7.253729343414307
    4. ').' → logprob: -8.003729820251465
    5. '):' → logprob: -8.753729820251465
    6. '.' → logprob: -9.878729820251465
    7. '```' → logprob: -10.003729820251465
    8. 'e' → logprob: -10.378729820251465
    9. 'sys' → logprob: -10.753729820251465
    10. 'def' → logprob: -10.753729820251465

Token 22: 'cess' (ID: 1185)
  Prédit: 'cess'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cess' → logprob: -0.00021688752167392522
    2. 'ss' → logprob: -10.000216484069824
    3. 't' → logprob: -10.375216484069824
    4. 'ces' → logprob: -10.625216484069824
    5. 'anmoins' → logprob: -10.875216484069824
    6. 'ccess' → logprob: -11.125216484069824
    7. 'm' → logprob: -11.250216484069824
    8. 'c' → logprob: -11.500216484069824
    9. 's' → logprob: -11.500216484069824
    10. 'tant' → logprob: -12.000216484069824

Token 23: 'aire' (ID: 8189)
  Prédit: 'aires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.1632431149482727
    2. 'aire' → logprob: -2.038243055343628
    3. 'ess' → logprob: -4.913243293762207
    4. 'ite' → logprob: -5.663243293762207
    5. 's' → logprob: -5.788243293762207
    6. 'ité' → logprob: -6.163243293762207
    7. 'és' → logprob: -7.038243293762207
    8. 'es' → logprob: -7.288243293762207
    9. 'ites' → logprob: -7.413243293762207
    10. '#' → logprob: -7.663243293762207

Token 24: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.32723385095596313
    2. ' à' → logprob: -1.9522337913513184
    3. ' ' → logprob: -3.2022337913513184
    4. ' )' → logprob: -3.5772337913513184
    5. ')' → logprob: -3.7022337913513184
    6. 'pour' → logprob: -4.577233791351318
    7. ' dans' → logprob: -4.702233791351318
    8. ' aux' → logprob: -4.702233791351318
    9. ' au' → logprob: -5.327233791351318
    10. ' en' → logprob: -6.452233791351318

Token 25: ' un' (ID: 537)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.7006964683532715
    2. 'trait' → logprob: -1.9506964683532715
    3. ' traiter' → logprob: -2.4506964683532715
    4. 'le' → logprob: -2.9506964683532715
    5. 'les' → logprob: -3.2006964683532715
    6. 'la' → logprob: -3.3256964683532715
    7. 'l' → logprob: -3.7006964683532715
    8. ' des' → logprob: -4.2006964683532715
    9. 'calcul' → logprob: -4.2006964683532715
    10. 'sys' → logprob: -4.3256964683532715

Token 26: ' grand' (ID: 6363)
  Prédit: ' arbre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.6546958088874817
    2. ' alg' → logprob: -1.404695749282837
    3. 'alg' → logprob: -2.279695749282837
    4. 'pro' → logprob: -3.779695749282837
    5. 'programme' → logprob: -3.904695749282837
    6. ' programme' → logprob: -4.029695987701416
    7. 'ar' → logprob: -4.779695987701416
    8. ' code' → logprob: -4.904695987701416
    9. ' problème' → logprob: -5.279695987701416
    10. 'arb' → logprob: -5.779695987701416

Token 27: ' grap' (ID: 60955)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.08715887367725372
    2. ' nombre' → logprob: -2.5871589183807373
    3. 'n' → logprob: -5.212158679962158
    4. ' nombres' → logprob: -7.587158679962158
    5. 'es' → logprob: -7.837158679962158
    6. 's' → logprob: -8.087159156799316
    7. '_nombre' → logprob: -8.087159156799316
    8. 'import' → logprob: -8.212159156799316
    9. 'sys' → logprob: -8.837159156799316
    10. 'Nombre' → logprob: -8.962159156799316

Token 28: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.011753794737160206
    2. 'h' → logprob: -4.511753559112549
    3. 'hes' → logprob: -8.136754035949707
    4. 'hi' → logprob: -8.261754035949707
    5. 'hé' → logprob: -10.136754035949707
    6. 'heur' → logprob: -10.261754035949707
    7. 'aphe' → logprob: -10.636754035949707
    8. 'heme' → logprob: -11.511754035949707
    9. 'hs' → logprob: -12.136754035949707
    10. 'phe' → logprob: -12.136754035949707

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0137284304946661
    2. ' )' → logprob: -5.388728618621826
    3. 'import' → logprob: -5.638728618621826
    4. '.' → logprob: -6.513728618621826
    5. 'e' → logprob: -6.638728618621826
    6. 's' → logprob: -7.638728618621826
    7. ').' → logprob: -8.013728141784668
    8. '_' → logprob: -8.138728141784668
    9. 'sys' → logprob: -8.138728141784668
    10. '\' → logprob: -8.388728141784668

Token 30: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0012459473218768835
    2. ' sys' → logprob: -7.626245975494385
    3. '
' → logprob: -8.376245498657227
    4. 'import' → logprob: -8.501245498657227
    5. '_sys' → logprob: -9.376245498657227
    6. '\n' → logprob: -9.376245498657227
    7. '\' → logprob: -10.126245498657227
    8. '(sys' → logprob: -10.501245498657227
    9. '' → logprob: -10.751245498657227
    10. '
' → logprob: -10.876245498657227

Token 31: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0030443815048784018
    2. '.set' → logprob: -6.128044605255127
    3. '.setdefault' → logprob: -7.503044605255127
    4. ' .' → logprob: -9.378044128417969
    5. '.exit' → logprob: -9.503044128417969
    6. '.argv' → logprob: -10.128044128417969
    7. '.append' → logprob: -10.878044128417969
    8. '.stdout' → logprob: -11.628044128417969
    9. '.ex' → logprob: -11.878044128417969
    10. '.get' → logprob: -11.878044128417969

Token 32: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -3.845798710244708e-05
    2. '_rec' → logprob: -10.375038146972656
    3. ' recursion' → logprob: -12.125038146972656
    4. 're' → logprob: -14.750038146972656
    5. 'limit' → logprob: -15.125038146972656
    6. 'rl' → logprob: -15.375038146972656
    7. 'ref' → logprob: -15.750038146972656
    8. 'sys' → logprob: -16.000038146972656
    9. 'Rec' → logprob: -16.125038146972656
    10. 'ursion' → logprob: -16.250038146972656

Token 33: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -8.125210297293961e-05
    2. 'urs' → logprob: -9.750081062316895
    3. 'ur' → logprob: -10.750081062316895
    4. 'limit' → logprob: -14.500081062316895
    5. 'usion' → logprob: -15.000081062316895
    6. 'ursive' → logprob: -15.750081062316895
    7. 'ursor' → logprob: -15.750081062316895
    8. 'url' → logprob: -16.12508201599121
    9. 'urst' → logprob: -17.12508201599121
    10. 'urse' → logprob: -17.12508201599121

Token 34: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.10076501965522766
    2. '_limit' → logprob: -2.3507649898529053
    3. 'lim' → logprob: -7.600765228271484
    4. '_depth' → logprob: -10.350765228271484
    5. 'depth' → logprob: -11.850765228271484
    6. '_' → logprob: -12.350765228271484
    7. 'al' → logprob: -12.350765228271484
    8. '_lim' → logprob: -12.725765228271484
    9. ' limit' → logprob: -13.225765228271484
    10. '_LIMIT' → logprob: -13.850765228271484

Token 35: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5928495486150496e-05
    2. '(
' → logprob: -11.875016212463379
    3. '(

' → logprob: -12.250016212463379
    4. ' (' → logprob: -12.500016212463379
    5. '()' → logprob: -16.000015258789062
    6. '((' → logprob: -16.250015258789062
    7. '(sys' → logprob: -17.375015258789062
    8. '(
' → logprob: -17.625015258789062
    9. ' ' → logprob: -18.000015258789062
    10. '(int' → logprob: -18.000015258789062

Token 36: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.38687604665756226
    2. '100' → logprob: -1.136876106262207
    3. ' ' → logprob: -13.261876106262207
    4. '500' → logprob: -13.511876106262207
    5. '300' → logprob: -13.636876106262207
    6. '200' → logprob: -14.636876106262207
    7. '1' → logprob: -15.636876106262207
    8. '150' → logprob: -16.13687515258789
    9. '999' → logprob: -16.76187515258789
    10. '250' → logprob: -18.13687515258789

Token 37: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.055968377739191055
    2. '00' → logprob: -2.9309682846069336
    3. '4' → logprob: -7.305968284606934
    4. '5' → logprob: -8.555968284606934
    5. '6' → logprob: -8.805968284606934
    6. '0' → logprob: -9.930968284606934
    7. '007' → logprob: -11.680968284606934
    8. '7' → logprob: -12.180968284606934
    9. '005' → logprob: -12.430968284606934
    10. '**' → logprob: -13.180968284606934

Token 38: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0053038387559354305
    2. '6' → logprob: -5.255303859710693
    3. '9' → logprob: -9.880303382873535
    4. '8' → logprob: -10.880303382873535
    5. ' ' → logprob: -19.75530433654785
    6. '```' → logprob: -19.88030433654785
    7. '**' → logprob: -20.00530433654785
    8. '

' → logprob: -21.88030433654785
    9. '  ' → logprob: -21.88030433654785
    10. '+' → logprob: -22.13030433654785

Token 39: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -14.875000953674316
    4. '))' → logprob: -15.250000953674316
    5. '0' → logprob: -17.500001907348633
    6. '),' → logprob: -18.125001907348633
    7. '}' → logprob: -18.750001907348633
    8. ')}' → logprob: -19.125001907348633
    9. ' ' → logprob: -19.250001907348633
    10. ')

' → logprob: -19.250001907348633

Token 40: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26838570833206177
    2. '#' → logprob: -2.018385648727417
    3. '

' → logprob: -2.768385648727417
    4. 'def' → logprob: -4.268385887145996
    5. '' → logprob: -4.643385887145996
    6. '\n' → logprob: -5.268385887145996
    7. '\' → logprob: -5.893385887145996
    8. '
' → logprob: -6.018385887145996
    9. '```' → logprob: -6.393385887145996
    10. ' ' → logprob: -6.643385887145996

Token 41: ' Sub' (ID: 5934)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13968399167060852
    2. '#' → logprob: -2.514683961868286
    3. ' def' → logprob: -4.014684200286865
    4. 'd' → logprob: -4.014684200286865
    5. 'import' → logprob: -5.264684200286865
    6. 'class' → logprob: -6.014684200286865
    7. '\' → logprob: -6.264684200286865
    8. 'n' → logprob: -7.639684200286865
    9. 'de' → logprob: -7.764684200286865
    10. 'from' → logprob: -8.014683723449707

Token 42: 'stit' (ID: 5028)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3538872301578522
    2. 'def' → logprob: -2.4788873195648193
    3. 'mit' → logprob: -3.3538873195648193
    4. 'm' → logprob: -3.8538873195648193
    5. 'dfs' → logprob: -3.9788873195648193
    6. 'gra' → logprob: -4.35388708114624
    7. 'mission' → logprob: -4.60388708114624
    8. 'import' → logprob: -4.72888708114624
    9. 'd' → logprob: -4.85388708114624
    10. 's' → logprob: -4.85388708114624

Token 43: 'ue' (ID: 466)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.5600659847259521
    2. 'it' → logprob: -1.5600659847259521
    3. 'ute' → logprob: -3.310065984725952
    4. 'ution' → logprob: -3.560065984725952
    5. 'ue' → logprob: -3.560065984725952
    6. 'stitute' → logprob: -3.685065984725952
    7. 'stit' → logprob: -3.810065984725952
    8. 't' → logprob: -4.435066223144531
    9. 'u' → logprob: -4.685066223144531
    10. 'uer' → logprob: -4.935066223144531

Token 44: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29055163264274597
    2. 'def' → logprob: -2.4155516624450684
    3. 'r' → logprob: -3.9155516624450684
    4. 't' → logprob: -4.040551662445068
    5. ' les' → logprob: -4.040551662445068
    6. '(' → logprob: -4.415551662445068
    7. ' =' → logprob: -4.665551662445068
    8. ' ' → logprob: -4.915551662445068
    9. ')' → logprob: -4.915551662445068
    10. '=' → logprob: -5.540551662445068

Token 45: ' fonction' (ID: 17610)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1412659883499146
    2. 'def' → logprob: -1.3912659883499146
    3. 'fonction' → logprob: -2.141265869140625
    4. 'dé' → logprob: -3.391265869140625
    5. ' ' → logprob: -3.766265869140625
    6. '#' → logprob: -3.766265869140625
    7. ' def' → logprob: -4.016265869140625
    8. 'import' → logprob: -4.328765869140625
    9. 'texte' → logprob: -4.391265869140625
    10. 'f' → logprob: -4.453765869140625

Token 46: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12360206991434097
    2. ' def' → logprob: -3.6236021518707275
    3. ' sys' → logprob: -3.9986021518707275
    4. 'sys' → logprob: -4.123601913452148
    5. 'dfs' → logprob: -4.873601913452148
    6. 'range' → logprob: -5.123601913452148
    7. '_recursive' → logprob: -5.373601913452148
    8. ' ' → logprob: -5.498601913452148
    9. '_' → logprob: -5.748601913452148
    10. 'de' → logprob: -5.873601913452148

Token 47: ''entrée' (ID: 115820)
  Prédit: 'éf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éf' → logprob: -0.8344641923904419
    2. 'é' → logprob: -0.9594641923904419
    3. 'e' → logprob: -2.3344640731811523
    4. 'ef' → logprob: -3.0844640731811523
    5. 'ijkstra' → logprob: -4.334464073181152
    6. 'éc' → logprob: -5.084464073181152
    7. 'is' → logprob: -6.209464073181152
    8. 'fs' → logprob: -6.209464073181152
    9. ''' → logprob: -6.334464073181152
    10. ''é' → logprob: -6.584464073181152

Token 48: ' standard' (ID: 7024)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7993074655532837
    2. '=' → logprob: -1.4243074655532837
    3. '(' → logprob: -2.174307346343994
    4. 'def' → logprob: -2.299307346343994
    5. ' =' → logprob: -2.799307346343994
    6. '()' → logprob: -4.549307346343994
    7. '_' → logprob: -4.799307346343994
    8. '=input' → logprob: -5.424307346343994
    9. '_input' → logprob: -5.924307346343994
    10. 'replace' → logprob: -6.424307346343994

Token 49: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0166873931884766
    2. ' =' → logprob: -1.1416873931884766
    3. 'input' → logprob: -1.5166873931884766
    4. '_' → logprob: -3.0166873931884766
    5. '(' → logprob: -3.8916873931884766
    6. 'def' → logprob: -4.266687393188477
    7. '_input' → logprob: -5.141687393188477
    8. '=input' → logprob: -5.641687393188477
    9. 'sys' → logprob: -6.391687393188477
    10. ' ' → logprob: -6.641687393188477

Token 50: ' une' (ID: 2463)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2824471890926361
    2. ' input' → logprob: -1.4074472188949585
    3. ' raw' → logprob: -7.532447338104248
    4. 'raw' → logprob: -7.782447338104248
    5. 'lambda' → logprob: -8.40744686126709
    6. ' lambda' → logprob: -10.53244686126709
    7. '	input' → logprob: -10.78244686126709
    8. ' une' → logprob: -11.28244686126709
    9. 'int' → logprob: -11.53244686126709
    10. 'l' → logprob: -11.65744686126709

Token 51: ' lecture' (ID: 31993)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.5944958329200745
    2. ' entrée' → logprob: -1.5944957733154297
    3. ' lecture' → logprob: -2.0944957733154297
    4. 'lecture' → logprob: -2.8444957733154297
    5. 'fonction' → logprob: -4.59449577331543
    6. ' meilleure' → logprob: -4.59449577331543
    7. 'input' → logprob: -5.34449577331543
    8. ' input' → logprob: -5.34449577331543
    9. ' ligne' → logprob: -5.34449577331543
    10. ' source' → logprob: -5.71949577331543

Token 52: ' rapide' (ID: 44887)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5566964745521545
    2. '=input' → logprob: -1.5566964149475098
    3. ' =' → logprob: -2.5566964149475098
    4. '()' → logprob: -3.5566964149475098
    5. '=' → logprob: -3.6816964149475098
    6. 'def' → logprob: -3.9316964149475098
    7. ' rapide' → logprob: -4.05669641494751
    8. '_input' → logprob: -4.68169641494751
    9. ' input' → logprob: -4.68169641494751
    10. 'sys' → logprob: -5.68169641494751

Token 53: ' ligne' (ID: 19583)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09525240212678909
    2. 'input' → logprob: -2.845252513885498
    3. '(input' → logprob: -4.220252513885498
    4. '(
' → logprob: -5.470252513885498
    5. 'def' → logprob: -6.095252513885498
    6. '=' → logprob: -6.095252513885498
    7. 'import' → logprob: -6.220252513885498
    8. '()' → logprob: -6.470252513885498
    9. '_input' → logprob: -6.470252513885498
    10. '=input' → logprob: -7.470252513885498

Token 54: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1351175308227539
    2. ' =' → logprob: -3.510117530822754
    3. ' par' → logprob: -3.635117530822754
    4. 'par' → logprob: -4.010117530822754
    5. ' ' → logprob: -4.635117530822754
    6. 'a' → logprob: -4.760117530822754
    7. '=sys' → logprob: -4.760117530822754
    8. '=' → logprob: -5.260117530822754
    9. '=input' → logprob: -5.760117530822754
    10. '_par' → logprob: -6.010117530822754

Token 55: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.33366847038269043
    2. 'line' → logprob: -1.7086684703826904
    3. 'lin' → logprob: -3.2086684703826904
    4. ' ligne' → logprob: -4.5836687088012695
    5. '.readline' → logprob: -5.0836687088012695
    6. 'l' → logprob: -5.0836687088012695
    7. '<|end|>' → logprob: -5.0836687088012695
    8. '<|end|>' → logprob: -5.2086687088012695
    9. 'input' → logprob: -5.8336687088012695
    10. 'sys' → logprob: -5.9586687088012695

Token 56: '
' (ID: 198)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1811784952878952
    2. 'import' → logprob: -2.806178569793701
    3. 'sys' → logprob: -3.306178569793701
    4. '
' → logprob: -3.806178569793701
    5. '_input' → logprob: -4.306178569793701
    6. '=sys' → logprob: -5.056178569793701
    7. '=' → logprob: -5.306178569793701
    8. '\n' → logprob: -5.431178569793701
    9. ' =' → logprob: -6.056178569793701
    10. 'def' → logprob: -6.056178569793701

Token 57: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018492184579372406
    2. 'import' → logprob: -4.018492221832275
    3. ' input' → logprob: -8.018491744995117
    4. 'sys' → logprob: -12.018491744995117
    5. 'stdin' → logprob: -13.143491744995117
    6. 'in' → logprob: -13.768491744995117
    7. 'inp' → logprob: -13.768491744995117
    8. 'from' → logprob: -14.393491744995117
    9. ' import' → logprob: -14.518491744995117
    10. '
' → logprob: -14.518491744995117

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1441613733768463
    2. '=' → logprob: -2.0191614627838135
    3. '(' → logprob: -7.269161224365234
    4. '.' → logprob: -8.144161224365234
    5. ' ' → logprob: -9.269161224365234
    6. '()' → logprob: -9.519161224365234
    7. '=sys' → logprob: -9.519161224365234
    8. 's' → logprob: -9.644161224365234
    9. '_' → logprob: -10.394161224365234
    10. ')' → logprob: -11.019161224365234

Token 59: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10065432637929916
    2. ' sys' → logprob: -2.350654363632202
    3. 'lambda' → logprob: -7.850654125213623
    4. '	sys' → logprob: -10.725654602050781
    5. ' lambda' → logprob: -11.350654602050781
    6. '__' → logprob: -11.850654602050781
    7. '=sys' → logprob: -11.975654602050781
    8. 'input' → logprob: -12.350654602050781
    9. 'stdin' → logprob: -12.350654602050781
    10. '(sys' → logprob: -13.975654602050781

Token 60: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.288163083605468e-05
    2. '.stdout' → logprob: -10.375052452087402
    3. '.' → logprob: -11.000052452087402
    4. '.std' → logprob: -12.500052452087402
    5. '.__' → logprob: -14.875052452087402
    6. '.readline' → logprob: -15.500052452087402
    7. ' .' → logprob: -16.00005340576172
    8. '.modules' → logprob: -16.00005340576172
    9. '._' → logprob: -16.12505340576172
    10. 'stdin' → logprob: -16.37505340576172

Token 61: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.670925358776003e-05
    2. '.buffer' → logprob: -10.625066757202148
    3. '.' → logprob: -10.875066757202148
    4. '.readlines' → logprob: -11.000066757202148
    5. '.read' → logprob: -12.625066757202148
    6. 'buffer' → logprob: -12.875066757202148
    7. ' readline' → logprob: -14.500066757202148
    8. 'read' → logprob: -15.125066757202148
    9. ' .' → logprob: -18.37506675720215
    10. '.f' → logprob: -18.50006675720215

Token 62: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3747125267982483
    2. '

' → logprob: -1.2497124671936035
    3. '\n' → logprob: -4.1247124671936035
    4. '


' → logprob: -6.1247124671936035
    5. '(' → logprob: -6.4997124671936035
    6. '
' → logprob: -6.8747124671936035
    7. '(
' → logprob: -6.9997124671936035
    8. '()' → logprob: -7.4997124671936035
    9. '<|end|>' → logprob: -7.4997124671936035
    10. '\' → logprob: -7.7497124671936035

Token 63: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4921724498271942
    2. 'def' → logprob: -0.9921724796295166
    3. 'class' → logprob: -4.8671722412109375
    4. '#' → logprob: -5.3671722412109375
    5. '
' → logprob: -5.6171722412109375
    6. '

' → logprob: -7.9921722412109375
    7. 'from' → logprob: -8.117172241210938
    8. 't' → logprob: -8.492172241210938
    9. 'd' → logprob: -8.492172241210938
    10. '\' → logprob: -8.992172241210938

Token 64: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.5372974872589111
    2. ' ' → logprob: -1.0372974872589111
    3. ' DFS' → logprob: -3.912297487258911
    4. '(' → logprob: -4.537297248840332
    5. ' graph' → logprob: -4.787297248840332
    6. 'dfs' → logprob: -5.537297248840332
    7. ' calculate' → logprob: -5.537297248840332
    8. ' bfs' → logprob: -5.662297248840332
    9. ' f' → logprob: -5.912297248840332
    10. ' solve' → logprob: -6.787297248840332

Token 65: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003423427464440465
    2. '(node' → logprob: -5.75342321395874
    3. '_' → logprob: -9.753423690795898
    4. '(user' → logprob: -10.628423690795898
    5. '(n' → logprob: -10.753423690795898
    6. '(
' → logprob: -11.003423690795898
    7. '(nodes' → logprob: -11.128423690795898
    8. '(x' → logprob: -11.253423690795898
    9. ' (' → logprob: -11.503423690795898
    10. '(tree' → logprob: -12.128423690795898

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005523175350390375
    2. '):' → logprob: -7.625552177429199
    3. ' ,' → logprob: -9.8755521774292
    4. ',v' → logprob: -11.6255521774292
    5. ')' → logprob: -13.1255521774292
    6. ',p' → logprob: -14.6255521774292
    7. ',n' → logprob: -15.0005521774292
    8. ' ):' → logprob: -15.2505521774292
    9. ',d' → logprob: -15.7505521774292
    10. ':' → logprob: -16.125553131103516

Token 67: ' color' (ID: 3089)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5375562310218811
    2. 'graph' → logprob: -1.2875561714172363
    3. ' visited' → logprob: -2.7875561714172363
    4. ' graph' → logprob: -2.9125561714172363
    5. 'adj' → logprob: -4.037556171417236
    6. 'g' → logprob: -6.162556171417236
    7. 'parent' → logprob: -6.537556171417236
    8. 'p' → logprob: -7.412556171417236
    9. ' adj' → logprob: -7.662556171417236
    10. ' parent' → logprob: -7.912556171417236

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06455639004707336
    2. ',' → logprob: -2.814556360244751
    3. ')' → logprob: -6.18955659866333
    4. '):
' → logprob: -7.93955659866333
    5. 's' → logprob: -10.064556121826172
    6. '[' → logprob: -10.439556121826172
    7. ' ):' → logprob: -10.939556121826172
    8. ':' → logprob: -11.189556121826172
    9. '[]):' → logprob: -11.439556121826172
    10. '[v' → logprob: -11.939556121826172

Token 69: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7403275966644287
    2. '   ' → logprob: -0.7403275966644287
    3. '):' → logprob: -3.2403275966644287
    4. '<|end|>' → logprob: -5.990327835083008
    5. ')' → logprob: -6.365327835083008
    6. '():' → logprob: -6.740327835083008
    7. ' :' → logprob: -8.240327835083008
    8. ',' → logprob: -8.365327835083008
    9. '```' → logprob: -8.615327835083008
    10. '<|end|>' → logprob: -8.990327835083008

Token 70: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49423927068710327
    2. 'colors' → logprob: -1.619239330291748
    3. 'color' → logprob: -2.119239330291748
    4. 'visited' → logprob: -3.744239330291748
    5. ' colors' → logprob: -3.994239330291748
    6. 'global' → logprob: -4.369239330291748
    7. ' color' → logprob: -4.619239330291748
    8. ' global' → logprob: -5.494239330291748
    9. ' visited' → logprob: -6.244239330291748
    10. '	color' → logprob: -8.11923885345459

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0525168739259243
    2. '#' → logprob: -3.4275169372558594
    3. ' #' → logprob: -5.427516937255859
    4. ' if' → logprob: -5.677516937255859
    5. 'color' → logprob: -6.052516937255859
    6. 'if' → logprob: -6.177516937255859
    7. '    ' → logprob: -6.302516937255859
    8. ' color' → logprob: -6.927516937255859
    9. ' """' → logprob: -7.302516937255859
    10. '[' → logprob: -7.427516937255859

Token 72: ' Effect' (ID: 22448)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01250541117042303
    2. '#' → logprob: -5.137505531311035
    3. '    ' → logprob: -6.512505531311035
    4. ' if' → logprob: -7.137505531311035
    5. '  ' → logprob: -7.262505531311035
    6. ':' → logprob: -7.262505531311035
    7. ' #' → logprob: -7.262505531311035
    8. 'if' → logprob: -7.512505531311035
    9. ' :' → logprob: -8.137505531311035
    10. ' ' → logprob: -8.137505531311035

Token 73: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.010392318479716778
    2. 'uer' → logprob: -4.635392189025879
    3. 'u' → logprob: -8.010392189025879
    4. 'uez' → logprob: -8.760392189025879
    5. 'ué' → logprob: -10.010392189025879
    6. 'ure' → logprob: -10.135392189025879
    7. 'uate' → logprob: -10.760392189025879
    8. '   ' → logprob: -10.760392189025879
    9. 'uée' → logprob: -11.885392189025879
    10. 'ues' → logprob: -12.385392189025879

Token 74: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7070543766021729
    2. ' ' → logprob: -1.3320543766021729
    3. '<|end|>' → logprob: -2.582054376602173
    4. ' un' → logprob: -2.707054376602173
    5. ' une' → logprob: -2.957054376602173
    6. '   ' → logprob: -4.582054138183594
    7. ' l' → logprob: -4.832054138183594
    8. ' dfs' → logprob: -4.832054138183594
    9. 'dfs' → logprob: -4.832054138183594
    10. '  ' → logprob: -5.707054138183594

Token 75: ' parcours' (ID: 62625)
  Prédit: ' parcours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parcours' → logprob: -0.9807023406028748
    2. ' DFS' → logprob: -1.6057024002075195
    3. ' dfs' → logprob: -2.4807024002075195
    4. 'e' → logprob: -2.8557024002075195
    5. ' appel' → logprob: -2.8557024002075195
    6. '   ' → logprob: -3.3557024002075195
    7. 'dfs' → logprob: -3.6057024002075195
    8. 'appel' → logprob: -3.6057024002075195
    9. 'par' → logprob: -3.8557024002075195
    10. ' mar' → logprob: -3.8557024002075195

Token 76: ' en' (ID: 469)
  Prédit: '_depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depth' → logprob: -0.9445779323577881
    2. '   ' → logprob: -1.569577932357788
    3. ' en' → logprob: -1.944577932357788
    4. 'prof' → logprob: -2.944577932357788
    5. ' depth' → logprob: -3.194577932357788
    6. 'depth' → logprob: -3.694577932357788
    7. 'dfs' → logprob: -3.819577932357788
    8. ' profondeur' → logprob: -3.944577932357788
    9. ' DFS' → logprob: -4.194578170776367
    10. '_' → logprob: -4.569578170776367

Token 77: ' profondeur' (ID: 128210)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.008258054032921791
    2. ' profondeur' → logprob: -5.258257865905762
    3. 'prof' → logprob: -6.133257865905762
    4. '   ' → logprob: -8.383257865905762
    5. 'pr' → logprob: -8.758257865905762
    6. ' ' → logprob: -8.758257865905762
    7. '_pro' → logprob: -9.133257865905762
    8. 'p' → logprob: -10.008257865905762
    9. '```' → logprob: -10.508257865905762
    10. '	pro' → logprob: -10.633257865905762

Token 78: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7372872233390808
    2. '(v' → logprob: -1.6122872829437256
    3. ' (' → logprob: -1.7372872829437256
    4. ',' → logprob: -2.7372872829437256
    5. '(' → logprob: -3.2372872829437256
    6. '(u' → logprob: -4.9872870445251465
    7. ')' → logprob: -5.2372870445251465
    8. ' ' → logprob: -5.3622870445251465
    9. '.' → logprob: -5.3622870445251465
    10. '  ' → logprob: -5.8622870445251465

Token 79: 'DFS' (ID: 109565)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.8330739140510559
    2. ' profondeur' → logprob: -1.8330738544464111
    3. ')' → logprob: -2.208073854446411
    4. ' la' → logprob: -3.083073854446411
    5. '   ' → logprob: -3.208073854446411
    6. 'prof' → logprob: -3.458073854446411
    7. ' depth' → logprob: -3.583073854446411
    8. 'depth' → logprob: -3.958073854446411
    9. 'la' → logprob: -4.20807409286499
    10. 'dfs' → logprob: -4.20807409286499

Token 80: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1552392542362213
    2. ' )' → logprob: -2.4052393436431885
    3. ',' → logprob: -3.1552393436431885
    4. '   ' → logprob: -4.780239105224609
    5. ' ' → logprob: -7.155239105224609
    6. ' ,' → logprob: -7.655239105224609
    7. ' du' → logprob: -8.53023910522461
    8. ' pour' → logprob: -8.53023910522461
    9. ' de' → logprob: -9.03023910522461
    10. '):' → logprob: -9.15523910522461

Token 81: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1961117535829544
    2. '(v' → logprob: -1.821111798286438
    3. ',' → logprob: -4.571111679077148
    4. ')' → logprob: -6.446111679077148
    5. '(u' → logprob: -7.321111679077148
    6. '.' → logprob: -7.446111679077148
    7. ' (' → logprob: -7.696111679077148
    8. '(' → logprob: -7.696111679077148
    9. '    
' → logprob: -7.946111679077148
    10. '    ' → logprob: -8.196111679077148

Token 82: ' vérifier' (ID: 93671)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.1215486004948616
    2. 'color' → logprob: -2.246548652648926
    3. '   ' → logprob: -5.496548652648926
    4. ' mar' → logprob: -6.246548652648926
    5. ' ' → logprob: -7.746548652648926
    6. '_color' → logprob: -7.996548652648926
    7. ' visiter' → logprob: -8.121548652648926
    8. 'col' → logprob: -8.246548652648926
    9. '	color' → logprob: -8.496548652648926
    10. ' colore' → logprob: -8.746548652648926

Token 83: ' si' (ID: 1784)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9345200657844543
    2. ' le' → logprob: -1.4345200061798096
    3. ' si' → logprob: -1.9345200061798096
    4. ' l' → logprob: -2.3095200061798096
    5. ' les' → logprob: -3.1845200061798096
    6. ' if' → logprob: -3.9345200061798096
    7. ' que' → logprob: -4.309520244598389
    8. ' ' → logprob: -4.434520244598389
    9. '   ' → logprob: -4.684520244598389
    10. ')' → logprob: -5.309520244598389

Token 84: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.4057711958885193
    2. ' un' → logprob: -2.280771255493164
    3. 'le' → logprob: -3.030771255493164
    4. ' les' → logprob: -3.405771255493164
    5. ' la' → logprob: -3.905771255493164
    6. 'v' → logprob: -4.155771255493164
    7. ' ' → logprob: -4.655771255493164
    8. ' color' → logprob: -4.905771255493164
    9. 'color' → logprob: -4.905771255493164
    10. ' graph' → logprob: -5.093271255493164

Token 85: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.2606786787509918
    2. ' grap' → logprob: -2.135678768157959
    3. 'graph' → logprob: -2.635678768157959
    4. ' graph' → logprob: -3.635678768157959
    5. ' sommet' → logprob: -6.010678768157959
    6. '   ' → logprob: -6.260678768157959
    7. ' ' → logprob: -6.635678768157959
    8. 'color' → logprob: -6.698178768157959
    9. '```' → logprob: -6.698178768157959
    10. ' voisin' → logprob: -7.448178768157959

Token 86: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.10680962353944778
    2. 'h' → logprob: -3.356809616088867
    3. 'rap' → logprob: -3.981809616088867
    4. 'raph' → logprob: -4.106809616088867
    5. 'aphe' → logprob: -4.856809616088867
    6. 'che' → logprob: -4.981809616088867
    7. '   ' → logprob: -5.731809616088867
    8. 'hé' → logprob: -5.856809616088867
    9. 'e' → logprob: -6.481809616088867
    10. 'hte' → logprob: -6.606809616088867

Token 87: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.15342576801776886
    2. ' is' → logprob: -2.528425693511963
    3. ' peut' → logprob: -3.653425693511963
    4. 'b' → logprob: -5.278425693511963
    5. '   ' → logprob: -5.278425693511963
    6. ' possède' → logprob: -5.528425693511963
    7. ' a' → logprob: -5.653425693511963
    8. ' ' → logprob: -6.278425693511963
    9. ' can' → logprob: -6.403425693511963
    10. ')' → logprob: -6.403425693511963

Token 88: ' bip' (ID: 54467)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.45780783891677856
    2. ' bip' → logprob: -1.4578077793121338
    3. ' b' → logprob: -2.832807779312134
    4. ' ' → logprob: -2.957807779312134
    5. '   ' → logprob: -4.457808017730713
    6. '_b' → logprob: -5.832808017730713
    7. ' bien' → logprob: -6.457808017730713
    8. ' bi' → logprob: -6.707808017730713
    9. '```' → logprob: -7.020308017730713
    10. 'bi' → logprob: -7.082808017730713

Token 89: 'arti' (ID: 51348)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.10560772567987442
    2. 'arti' → logprob: -2.480607748031616
    3. 'ar' → logprob: -4.480607509613037
    4. 'a' → logprob: -5.730607509613037
    5. 'arte' → logprob: -6.855607509613037
    6. '```' → logprob: -9.418107986450195
    7. ')' → logprob: -9.480607986450195
    8. 'арт' → logprob: -9.793107986450195
    9. '_' → logprob: -9.855607986450195
    10. '#' → logprob: -9.855607986450195

Token 90: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3275798559188843
    2. '.' → logprob: -2.077579975128174
    3. '):' → logprob: -2.827579975128174
    4. ')' → logprob: -2.952579975128174
    5. ':' → logprob: -3.702579975128174
    6. ',' → logprob: -4.827579975128174
    7. '):
' → logprob: -5.452579975128174
    8. ').' → logprob: -6.952579975128174
    9. ' :' → logprob: -7.077579975128174
    10. '  ' → logprob: -7.327579975128174

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017543254420161247
    2. ')' → logprob: -4.392543315887451
    3. ':' → logprob: -6.267543315887451
    4. '):' → logprob: -6.392543315887451
    5. '    
' → logprob: -8.267542839050293
    6. '```' → logprob: -8.267542839050293
    7. '"""' → logprob: -8.267542839050293
    8. '):
' → logprob: -8.517542839050293
    9. '
' → logprob: -9.517542839050293
    10. ' ' → logprob: -10.017542839050293

Token 92: ' At' (ID: 3604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015957956202328205
    2. ')' → logprob: -7.376595973968506
    3. ':' → logprob: -7.751595973968506
    4. '"""' → logprob: -8.876595497131348
    5. '```' → logprob: -8.876595497131348
    6. '    
' → logprob: -9.376595497131348
    7. '):' → logprob: -10.001595497131348
    8. '
' → logprob: -11.001595497131348
    9. '):
' → logprob: -11.126595497131348
    10. '       ' → logprob: -11.126595497131348

Token 93: 'trib' (ID: 1420)
  Prédit: 'trib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trib' → logprob: -0.351697713136673
    2. 't' → logprob: -1.9766976833343506
    3. '   ' → logprob: -2.2266976833343506
    4. 'tr' → logprob: -3.8516976833343506
    5. 'tributes' → logprob: -4.60169792175293
    6. 'tribution' → logprob: -5.72669792175293
    7. '       ' → logprob: -5.97669792175293
    8. 'te' → logprob: -6.22669792175293
    9. 'tribut' → logprob: -6.97669792175293
    10. 'rib' → logprob: -6.97669792175293

Token 94: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.00966873299330473
    2. 'u' → logprob: -5.009668827056885
    3. 'uer' → logprob: -6.009668827056885
    4. 'e' → logprob: -8.259668350219727
    5. 'ué' → logprob: -8.759668350219727
    6. 'uée' → logprob: -10.759668350219727
    7. 'uera' → logprob: -11.509668350219727
    8. 'uent' → logprob: -11.884668350219727
    9. 'ues' → logprob: -12.259668350219727
    10. 'uez' → logprob: -12.384668350219727

Token 95: ' réc' (ID: 36254)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1541682779788971
    2. ' une' → logprob: -3.1541683673858643
    3. ' des' → logprob: -3.4041683673858643
    4. ' les' → logprob: -4.279168128967285
    5. ' aux' → logprob: -4.529168128967285
    6. ' couleur' → logprob: -5.154168128967285
    7. ' color' → logprob: -5.279168128967285
    8. ' un' → logprob: -5.529168128967285
    9. ' ' → logprob: -5.529168128967285
    10. ' le' → logprob: -5.654168128967285

Token 96: 'urs' (ID: 1628)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.8896206617355347
    2. 'urs' → logprob: -1.5146206617355347
    3. 'ursive' → logprob: -1.7646206617355347
    4. 'up' → logprob: -2.264620780944824
    5. 'urrent' → logprob: -3.139620780944824
    6. 'u' → logprob: -3.889620780944824
    7. 'urse' → logprob: -4.389620780944824
    8. 'urent' → logprob: -4.889620780944824
    9. 'ursively' → logprob: -6.639620780944824
    10. 'ure' → logprob: -6.764620780944824

Token 97: 'ivement' (ID: 37978)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.1652584820985794
    2. 'ut' → logprob: -2.4152584075927734
    3. 'utive' → logprob: -3.1652584075927734
    4. 'uer' → logprob: -4.915258407592773
    5. 'ué' → logprob: -5.290258407592773
    6. 'u' → logprob: -5.415258407592773
    7. 'ution' → logprob: -6.290258407592773
    8. 'ute' → logprob: -7.540258407592773
    9. 'uez' → logprob: -8.040258407592773
    10. 'uée' → logprob: -8.165258407592773

Token 98: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.20551522076129913
    2. ' des' → logprob: -3.205515146255493
    3. ' une' → logprob: -3.455515146255493
    4. ' color' → logprob: -3.705515146255493
    5. ' couleur' → logprob: -3.955515146255493
    6. ' les' → logprob: -4.080515384674072
    7. ' aux' → logprob: -4.205515384674072
    8. ' le' → logprob: -4.455515384674072
    9. 'color' → logprob: -4.830515384674072
    10. ' colors' → logprob: -5.955515384674072

Token 99: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.027669643983244896
    2. 'cou' → logprob: -3.777669668197632
    3. ' ' → logprob: -6.902669429779053
    4. ' color' → logprob: -7.152669429779053
    5. 'color' → logprob: -7.277669429779053
    6. '   ' → logprob: -7.277669429779053
    7. ' couleurs' → logprob: -8.152669906616211
    8. '```' → logprob: -8.965169906616211
    9. ' valeur' → logprob: -9.215169906616211
    10. 'c' → logprob: -9.340169906616211

Token 100: ' altern' (ID: 7310)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.6040631532669067
    2. ' oppos' → logprob: -1.3540631532669067
    3. ' différente' → logprob: -2.854063034057617
    4. ' à' → logprob: -3.104063034057617
    5. ' opposite' → logprob: -3.979063034057617
    6. ' ' → logprob: -3.979063034057617
    7. ' different' → logprob: -4.354063034057617
    8. '   ' → logprob: -4.604063034057617
    9. ' opposing' → logprob: -5.729063034057617
    10. ' (' → logprob: -5.729063034057617

Token 101: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3101750612258911
    2. 'ative' → logprob: -2.1851749420166016
    3. 'a' → logprob: -2.6851749420166016
    4. 'ate' → logprob: -3.1851749420166016
    5. '   ' → logprob: -4.310174942016602
    6. 'ante' → logprob: -4.560174942016602
    7. 'atif' → logprob: -5.435174942016602
    8. 'at' → logprob: -5.435174942016602
    9. 'ée' → logprob: -5.435174942016602
    10. 'é' → logprob: -5.560174942016602

Token 102: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12093771994113922
    2. ' à' → logprob: -2.7459378242492676
    3. ' aux' → logprob: -3.2459378242492676
    4. '   ' → logprob: -5.745937824249268
    5. ',' → logprob: -5.995937824249268
    6. ' to' → logprob: -6.495937824249268
    7. ')' → logprob: -6.995937824249268
    8. '(' → logprob: -7.370937824249268
    9. '  ' → logprob: -7.745937824249268
    10. ' au' → logprob: -7.870937824249268

Token 103: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.9107937812805176
    2. ' les' → logprob: -1.7857937812805176
    3. ' l' → logprob: -2.7857937812805176
    4. ' tous' → logprob: -2.7857937812805176
    5. ' ' → logprob: -3.0357937812805176
    6. 's' → logprob: -3.0357937812805176
    7. ' ses' → logprob: -3.1607937812805176
    8. 'les' → logprob: -3.2857937812805176
    9. 'v' → logprob: -3.5357937812805176
    10. 'l' → logprob: -3.7857937812805176

Token 104: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.20441722869873047
    2. ' noe' → logprob: -1.9544172286987305
    3. ' voisin' → logprob: -4.7044172286987305
    4. ' somm' → logprob: -4.8294172286987305
    5. ' ' → logprob: -5.4544172286987305
    6. 'som' → logprob: -5.5794172286987305
    7. ' som' → logprob: -5.5794172286987305
    8. ' node' → logprob: -5.7044172286987305
    9. 's' → logprob: -5.8294172286987305
    10. 'vo' → logprob: -6.4544172286987305

Token 105: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6506419777870178
    2. ',' → logprob: -1.400641918182373
    3. '.' → logprob: -1.900641918182373
    4. ')' → logprob: -2.775641918182373
    5. ' ' → logprob: -4.275641918182373
    6. ' ,' → logprob: -6.025641918182373
    7. ' )' → logprob: -7.150641918182373
    8. '    ' → logprob: -7.775641918182373
    9. '  ' → logprob: -7.775641918182373
    10. ' .' → logprob: -8.275642395019531

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006176917813718319
    2. ')' → logprob: -5.381176948547363
    3. '):' → logprob: -7.881176948547363
    4. '
' → logprob: -7.881176948547363
    5. '):
' → logprob: -8.506176948547363
    6. '    
' → logprob: -8.756176948547363
    7. ':' → logprob: -9.131176948547363
    8. ' ' → logprob: -9.756176948547363
    9. '```' → logprob: -10.131176948547363
    10. ')
' → logprob: -10.256176948547363

Token 107: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015359314857050776
    2. ' if' → logprob: -7.126535892486572
    3. ')' → logprob: -8.25153636932373
    4. 'if' → logprob: -8.37653636932373
    5. ':' → logprob: -9.62653636932373
    6. 'global' → logprob: -10.25153636932373
    7. '):' → logprob: -10.50153636932373
    8. ' global' → logprob: -11.00153636932373
    9. 'for' → logprob: -11.25153636932373
    10. ' for' → logprob: -11.37653636932373

Token 108: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05644586309790611
    2. '   ' → logprob: -3.431445837020874
    3. ':' → logprob: -4.181446075439453
    4. '):' → logprob: -5.556446075439453
    5. '(v' → logprob: -6.556446075439453
    6. ')' → logprob: -7.681446075439453
    7. ',v' → logprob: -7.931446075439453
    8. '(' → logprob: -8.306446075439453
    9. ' ,' → logprob: -8.431446075439453
    10. ' :' → logprob: -8.806446075439453

Token 109: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.307973712682724
    2. ' v' → logprob: -1.8079737424850464
    3. ' self' → logprob: -2.807973623275757
    4. '    ' → logprob: -3.932973623275757
    5. 'v' → logprob: -4.307973861694336
    6. 'self' → logprob: -5.682973861694336
    7. '       ' → logprob: -6.557973861694336
    8. '    
' → logprob: -7.307973861694336
    9. '```' → logprob: -7.807973861694336
    10. ' ' → logprob: -8.432973861694336

Token 110: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.35921815037727356
    2. 'graph' → logprob: -2.109218120574951
    3. 'self' → logprob: -2.609218120574951
    4. '   ' → logprob: -2.734218120574951
    5. ' v' → logprob: -3.984218120574951
    6. 'node' → logprob: -4.484218120574951
    7. ' graph' → logprob: -5.484218120574951
    8. ' self' → logprob: -5.859218120574951
    9. 'int' → logprob: -6.484218120574951
    10. 'vertex' → logprob: -6.609218120574951

Token 111: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -8.888114098226652e-05
    2. ':' → logprob: -10.125088691711426
    3. ' ,' → logprob: -10.125088691711426
    4. ',int' → logprob: -12.375088691711426
    5. ':int' → logprob: -13.750088691711426
    6. '):' → logprob: -13.750088691711426
    7. ',
' → logprob: -14.125088691711426
    8. ' :' → logprob: -15.000088691711426
    9. '<|end|>' → logprob: -15.000088691711426
    10. ')' → logprob: -15.750088691711426

Token 112: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.804671233519912e-05
    2. ' int' → logprob: -9.50008773803711
    3. ')' → logprob: -12.25008773803711
    4. '):' → logprob: -13.00008773803711
    5. '   ' → logprob: -13.37508773803711
    6. ':int' → logprob: -13.50008773803711
    7. '[int' → logprob: -14.37508773803711
    8. ',int' → logprob: -14.50008773803711
    9. ',' → logprob: -14.62508773803711
    10. '(int' → logprob: -15.00008773803711

Token 113: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005006087594665587
    2. '):' → logprob: -7.750500679016113
    3. ' ,' → logprob: -10.125500679016113
    4. ')' → logprob: -10.750500679016113
    5. '),' → logprob: -12.625500679016113
    6. '   ' → logprob: -13.125500679016113
    7. ',v' → logprob: -14.125500679016113
    8. ',
' → logprob: -14.375500679016113
    9. ' ):' → logprob: -14.625500679016113
    10. ',int' → logprob: -14.875500679016113

Token 114: ' Le' (ID: 2018)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5181729793548584
    2. ' int' → logprob: -1.3931729793548584
    3. '   ' → logprob: -2.7681729793548584
    4. 'Le' → logprob: -4.0181732177734375
    5. ')' → logprob: -4.3931732177734375
    6. ' sommet' → logprob: -4.3931732177734375
    7. 'Som' → logprob: -4.3931732177734375
    8. ' current' → logprob: -4.5181732177734375
    9. ' Le' → logprob: -4.6431732177734375
    10. 'current' → logprob: -5.6431732177734375

Token 115: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.01248481497168541
    2. ' noe' → logprob: -5.387485027313232
    3. 'som' → logprob: -5.512485027313232
    4. ' n' → logprob: -7.012485027313232
    5. ' som' → logprob: -7.012485027313232
    6. ' numéro' → logprob: -7.137485027313232
    7. ' ' → logprob: -7.512485027313232
    8. '   ' → logprob: -8.637484550476074
    9. 's' → logprob: -9.387484550476074
    10. ' somm' → logprob: -9.637484550476074

Token 116: ' actuellement' (ID: 67741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5676454305648804
    2. ',' → logprob: -1.0676454305648804
    3. '   ' → logprob: -4.06764554977417
    4. ' current' → logprob: -4.19264554977417
    5. ' )' → logprob: -4.19264554977417
    6. ' actuel' → logprob: -4.44264554977417
    7. ' courant' → logprob: -4.69264554977417
    8. ' ,' → logprob: -4.94264554977417
    9. '<|end|>' → logprob: -5.56764554977417
    10. 'current' → logprob: -5.69264554977417

Token 117: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -1.0933245420455933
    2. 'color' → logprob: -1.5933245420455933
    3. '   ' → logprob: -2.093324661254883
    4. ' color' → logprob: -2.218324661254883
    5. ' vis' → logprob: -2.718324661254883
    6. ' en' → logprob: -3.968324661254883
    7. 'trait' → logprob: -3.968324661254883
    8. ' explor' → logprob: -3.968324661254883
    9. ' parcour' → logprob: -4.093324661254883
    10. 'expl' → logprob: -4.218324661254883

Token 118: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.020496109500527382
    2. 'ited' → logprob: -4.145495891571045
    3. 'it' → logprob: -5.770495891571045
    4. 'é' → logprob: -7.645495891571045
    5. '   ' → logprob: -8.645496368408203
    6. '```' → logprob: -9.270496368408203
    7. 'itt' → logprob: -9.395496368408203
    8. 'ités' → logprob: -9.395496368408203
    9. '
' → logprob: -9.645496368408203
    10. '#' → logprob: -10.020496368408203

Token 119: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23590241372585297
    2. ',' → logprob: -1.7359024286270142
    3. '   ' → logprob: -3.6109023094177246
    4. '):' → logprob: -5.235902309417725
    5. '<|end|>' → logprob: -7.735902309417725
    6. '),' → logprob: -8.235902786254883
    7. '):
' → logprob: -8.360902786254883
    8. ',
' → logprob: -8.610902786254883
    9. ' )' → logprob: -9.235902786254883
    10. '```' → logprob: -9.485902786254883

Token 120: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021580642089247704
    2. ')' → logprob: -5.146580696105957
    3. '       ' → logprob: -5.146580696105957
    4. ' ' → logprob: -6.146580696105957
    5. '    
' → logprob: -6.396580696105957
    6. ' 
' → logprob: -7.021580696105957
    7. ',' → logprob: -7.146580696105957
    8. '    ' → logprob: -7.521580696105957
    9. '  ' → logprob: -7.521580696105957
    10. '  
' → logprob: -7.521580696105957

Token 121: ' color' (ID: 3089)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.36468735337257385
    2. ' c' → logprob: -2.239687442779541
    3. '   ' → logprob: -2.864687442779541
    4. 'current' → logprob: -3.114687442779541
    5. 'color' (adapté à ' color') → logprob: -3.489687442779541
    6. 'col' → logprob: -3.864687442779541
    7. ' current' → logprob: -4.114687442779541
    8. 'curr' → logprob: -4.614687442779541
    9. ' color' → logprob: -5.489687442779541
    10. 'adj' → logprob: -5.489687442779541

Token 122: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1682395190000534
    2. ',' → logprob: -2.9182395935058594
    3. '[v' → logprob: -2.9182395935058594
    4. ':' → logprob: -3.5432395935058594
    5. ')' → logprob: -4.793239593505859
    6. '[int' → logprob: -5.418239593505859
    7. '[' → logprob: -5.918239593505859
    8. '):
' → logprob: -7.668239593505859
    9. '   ' → logprob: -7.793239593505859
    10. 's' → logprob: -8.04323959350586

Token 123: 'int' (ID: 491)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5028881430625916
    2. 'int' → logprob: -1.8778882026672363
    3. 'list' → logprob: -2.1278882026672363
    4. ')' → logprob: -2.7528882026672363
    5. ',' → logprob: -3.8778882026672363
    6. '[v' → logprob: -4.252888202667236
    7. '[int' → logprob: -4.252888202667236
    8. 'dict' → logprob: -5.127888202667236
    9. 'List' → logprob: -6.252888202667236
    10. '):' → logprob: -7.752888202667236

Token 124: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13425537943840027
    2. ')' → logprob: -2.2592554092407227
    3. ',' → logprob: -3.8842554092407227
    4. '):
' → logprob: -7.759255409240723
    5. ' ):' → logprob: -9.259255409240723
    6. ':' → logprob: -9.884255409240723
    7. '   ' → logprob: -10.884255409240723
    8. ' ' → logprob: -11.634255409240723
    9. '),' → logprob: -11.634255409240723
    10. '):

' → logprob: -11.759255409240723

Token 125: ' La' (ID: 3038)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2208216190338135
    2. ' ' → logprob: -1.5958216190338135
    3. '[int' → logprob: -2.0958216190338135
    4. '1' → logprob: -2.4708216190338135
    5. 'int' → logprob: -2.5958216190338135
    6. '<|end|>' → logprob: -2.5958216190338135
    7. ' int' → logprob: -2.9708216190338135
    8. '2' → logprob: -3.9708216190338135
    9. 'color' → logprob: -4.720821380615234
    10. '0' → logprob: -4.720821380615234

Token 126: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.018357478082180023
    2. '   ' → logprob: -5.018357276916504
    3. ' color' → logprob: -5.018357276916504
    4. ' ' → logprob: -5.893357276916504
    5. 'color' → logprob: -6.768357276916504
    6. '1' → logprob: -8.643357276916504
    7. 'cou' → logprob: -8.768357276916504
    8. ')' → logprob: -9.268357276916504
    9. '  ' → logprob: -9.643357276916504
    10. ' couleurs' → logprob: -9.768357276916504

Token 127: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03213298320770264
    2. '<|end|>' → logprob: -4.782133102416992
    3. ' actuelle' → logprob: -5.157133102416992
    4. ' à' → logprob: -5.407133102416992
    5. ' assigned' → logprob: -5.907133102416992
    6. ' assign' → logprob: -6.282133102416992
    7. '   ' → logprob: -6.782133102416992
    8. ' ' → logprob: -6.782133102416992
    9. ' )' → logprob: -7.157133102416992
    10. ' attrib' → logprob: -7.157133102416992

Token 128: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.3188559412956238
    2. 'attrib' → logprob: -1.5688560009002686
    3. ' attrib' → logprob: -2.8188560009002686
    4. 'aff' → logprob: -6.1938557624816895
    5. ' assign' → logprob: -6.6938557624816895
    6. 'atrib' → logprob: -7.8188557624816895
    7. ' appliquer' → logprob: -7.9438557624816895
    8. ' affect' → logprob: -8.193856239318848
    9. '   ' → logprob: -8.318856239318848
    10. 'assigned' → logprob: -9.693856239318848

Token 129: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0008889487362466753
    2. 'é' → logprob: -7.500888824462891
    3. 'e' → logprob: -8.62588882446289
    4. '   ' → logprob: -9.87588882446289
    5. ' er' → logprob: -10.37588882446289
    6. 'ée' → logprob: -10.37588882446289
    7. 'ér' → logprob: -11.87588882446289
    8. 'r' → logprob: -12.00088882446289
    9. ')' → logprob: -12.00088882446289
    10. ' ' → logprob: -12.62588882446289

Token 130: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02129616029560566
    2. ' au' → logprob: -4.27129602432251
    3. ' à' → logprob: -5.02129602432251
    4. ' ' → logprob: -9.271296501159668
    5. 'au' → logprob: -9.271296501159668
    6. '   ' → logprob: -9.396296501159668
    7. ',' → logprob: -9.521296501159668
    8. ' )' → logprob: -10.021296501159668
    9. '),' → logprob: -10.771296501159668
    10. ' to' → logprob: -10.896296501159668

Token 131: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.35593143105506897
    2. ' sommet' → logprob: -1.2309314012527466
    3. 'v' → logprob: -5.355931282043457
    4. ' som' → logprob: -6.355931282043457
    5. 's' → logprob: -8.730931282043457
    6. ')' → logprob: -9.105931282043457
    7. ' ' → logprob: -9.105931282043457
    8. ' somm' → logprob: -9.230931282043457
    9. 'vo' → logprob: -9.480931282043457
    10. '```' → logprob: -9.480931282043457

Token 132: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005753153003752232
    2. ' )' → logprob: -5.380753040313721
    3. '   ' → logprob: -8.630753517150879
    4. ').' → logprob: -8.755753517150879
    5. ' actuel' → logprob: -8.755753517150879
    6. ',' → logprob: -8.880753517150879
    7. ' courant' → logprob: -9.130753517150879
    8. ' ' → logprob: -10.380753517150879
    9. 'current' → logprob: -10.380753517150879
    10. '_current' → logprob: -10.380753517150879

Token 133: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20026515424251556
    2. ' ' → logprob: -1.9502651691436768
    3. '1' → logprob: -3.5752651691436768
    4. ')' → logprob: -5.200264930725098
    5. '   ' → logprob: -5.825264930725098
    6. ' soit' → logprob: -7.325264930725098
    7. ' either' → logprob: -7.575264930725098
    8. 'color' → logprob: -8.200264930725098
    9. ',' → logprob: -8.450264930725098
    10. ' color' → logprob: -8.575264930725098

Token 134: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.9379758238792419
    2. ' or' → logprob: -1.1879758834838867
    3. ' if' → logprob: -2.1879758834838867
    4. ',' → logprob: -2.5629758834838867
    5. ')' → logprob: -2.9379758834838867
    6. '-' → logprob: -3.4379758834838867
    7. ' ' → logprob: -4.562975883483887
    8. 'ou' → logprob: -5.062975883483887
    9. ' -' → logprob: -5.187975883483887
    10. 'or' → logprob: -6.312975883483887

Token 135: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.33392301201820374
    2. '2' → logprob: -1.4589229822158813
    3. ' -' → logprob: -3.333923101425171
    4. ' ' → logprob: -4.208922863006592
    5. '0' → logprob: -7.083922863006592
    6. ')' → logprob: -10.83392333984375
    7. '   ' → logprob: -11.08392333984375
    8. '  ' → logprob: -11.95892333984375
    9. '6' → logprob: -12.95892333984375
    10. '1' → logprob: -13.33392333984375

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.875003814697266
    3. ')' → logprob: -14.000003814697266
    4. '   ' → logprob: -17.062503814697266
    5. '１' → logprob: -17.500003814697266
    6. '```' → logprob: -17.750003814697266
    7. '۱' → logprob: -18.125003814697266
    8. '-' → logprob: -18.312503814697266
    9. '2' → logprob: -18.937503814697266
    10. '१' → logprob: -19.187503814697266

Token 137: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008182140998542309
    2. ').' → logprob: -5.508182048797607
    3. '):' → logprob: -5.508182048797607
    4. '):
' → logprob: -10.758182525634766
    5. '),' → logprob: -12.133182525634766
    6. ' )' → logprob: -12.258182525634766
    7. ',' → logprob: -12.508182525634766
    8. '   ' → logprob: -13.383182525634766
    9. '):

' → logprob: -13.383182525634766
    10. ')
' → logprob: -13.883182525634766

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010197096271440387
    2. ')' → logprob: -7.251019477844238
    3. '    
' → logprob: -8.376019477844238
    4. '
' → logprob: -10.376019477844238
    5. '```' → logprob: -11.501019477844238
    6. ')
' → logprob: -11.626019477844238
    7. '  
' → logprob: -12.126019477844238
    8. '"""' → logprob: -12.376019477844238
    9. ' 
' → logprob: -12.501019477844238
    10. '   ' → logprob: -13.126019477844238

Token 139: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32881391048431396
    2. 'global' → logprob: -1.578813910484314
    3. 'for' → logprob: -3.3288140296936035
    4. 'if' → logprob: -3.4538140296936035
    5. '#' → logprob: -5.8288140296936035
    6. ')' → logprob: -6.5788140296936035
    7. ' global' → logprob: -7.3288140296936035
    8. '```' → logprob: -8.078813552856445
    9. 'graph' → logprob: -8.453813552856445
    10. ' for' → logprob: -8.578813552856445

Token 140: ':
' (ID: 734)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.009332896210253239
    2. 'True' → logprob: -5.25933313369751
    3. ' ' → logprob: -6.00933313369751
    4. ' False' → logprob: -6.75933313369751
    5. ' )' → logprob: -8.384332656860352
    6. ' bool' → logprob: -9.759332656860352
    7. ' ):' → logprob: -9.884332656860352
    8. ')' → logprob: -10.259332656860352
    9. 'False' → logprob: -10.509332656860352
    10. ' ' → logprob: -10.884332656860352

Token 141: '       ' (ID: 309)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.09015736728906631
    2. '   ' → logprob: -2.8401572704315186
    3. ' False' → logprob: -4.340157508850098
    4. 'True' → logprob: -4.340157508850098
    5. 'False' → logprob: -6.715157508850098
    6. ' bool' → logprob: -7.840157508850098
    7. '    ' → logprob: -9.465157508850098
    8. 'bool' → logprob: -10.715157508850098
    9. '       ' → logprob: -11.965157508850098
    10. ' None' → logprob: -12.090157508850098

Token 142: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' (adapté à ' bool') → logprob: -0.0767320767045021
    2. 'True' → logprob: -3.0767321586608887
    3. ' bool' → logprob: -4.201732158660889
    4. 'False' → logprob: -4.451732158660889
    5. ' True' → logprob: -6.951732158660889
    6. ' False' → logprob: -9.45173168182373
    7. '   ' → logprob: -9.57673168182373
    8. '
' → logprob: -11.95173168182373
    9. 'Bool' → logprob: -12.32673168182373
    10. '(bool' → logprob: -12.45173168182373

Token 143: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11852352321147919
    2. ')' → logprob: -2.868523597717285
    3. '):' → logprob: -3.243523597717285
    4. '<|end|>' → logprob: -4.993523597717285
    5. ' :' → logprob: -5.618523597717285
    6. ' ):' → logprob: -6.743523597717285
    7. ' True' → logprob: -6.743523597717285
    8. ' )' → logprob: -6.868523597717285
    9. '   ' → logprob: -6.993523597717285
    10. ' ' → logprob: -7.493523597717285

Token 144: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0019977507181465626
    2. 'True' → logprob: -6.251997947692871
    3. ' False' → logprob: -9.751997947692871
    4. ' ' → logprob: -12.251997947692871
    5. '   ' → logprob: -13.126997947692871
    6. ' ' → logprob: -13.376997947692871
    7. '    ' → logprob: -13.751997947692871
    8. 'False' → logprob: -14.251997947692871
    9. ' not' → logprob: -14.626997947692871
    10. '(True' → logprob: -16.251996994018555

Token 145: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ' le' (ID: 505)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.39455175399780273
    2. ' le' → logprob: -1.2695517539978027
    3. ' False' → logprob: -3.5195517539978027
    4. 'True' → logprob: -4.894551753997803
    5. ' la' → logprob: -6.019551753997803
    6. ' toutes' → logprob: -6.644551753997803
    7. ' all' → logprob: -6.894551753997803
    8. 'False' → logprob: -7.394551753997803
    9. ' possible' → logprob: -7.644551753997803
    10. ' ' → logprob: -7.644551753997803

Token 147: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.488176554441452
    2. ' graph' → logprob: -1.3631765842437744
    3. 'graph' → logprob: -2.3631765842437744
    4. 'gr' → logprob: -3.8631765842437744
    5. ' bip' → logprob: -5.363176345825195
    6. ' not' → logprob: -6.738176345825195
    7. ' color' → logprob: -6.738176345825195
    8. 'dfs' → logprob: -6.988176345825195
    9. ' dfs' → logprob: -6.988176345825195
    10. ' ' → logprob: -7.425676345825195

Token 148: 'he' (ID: 273)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'me' → logprob: -2.275348424911499
    2. 'ite' → logprob: -2.525348424911499
    3. 'def' → logprob: -2.525348424911499
    4. 'ète' → logprob: -2.525348424911499
    5. 'ière' → logprob: -2.775348424911499
    6. 'raph' → logprob: -2.775348424911499
    7. 'ité' → logprob: -3.275348424911499
    8. 'rap' → logprob: -3.775348424911499
    9. 'op' → logprob: -3.900348424911499
    10. 'ème' → logprob: -4.025348663330078

Token 149: ' peut' (ID: 9216)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.043291475623846054
    2. ' is' → logprob: -3.7932915687561035
    3. 'est' → logprob: -4.0432915687561035
    4. 'is' → logprob: -7.1682915687561035
    5. 's' → logprob: -7.4182915687561035
    6. ')' → logprob: -8.168291091918945
    7. 'b' → logprob: -8.418291091918945
    8. ' peut' → logprob: -9.418291091918945
    9. ' bip' → logprob: -9.793291091918945
    10. '_est' → logprob: -10.168291091918945

Token 150: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.1717458814382553
    2. 'être' → logprob: -1.9217458963394165
    3. ' be' → logprob: -5.796745777130127
    4. ' etre' → logprob: -6.171745777130127
    5. 'Ê' → logprob: -6.921745777130127
    6. ''être' → logprob: -7.171745777130127
    7. ' continuer' → logprob: -7.421745777130127
    8. 'contin' → logprob: -7.671745777130127
    9. 'êtres' → logprob: -7.671745777130127
    10. '’être' → logprob: -7.796745777130127

Token 151: ' color' (ID: 3089)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3312223553657532
    2. 'color' → logprob: -1.7062222957611084
    3. ' color' → logprob: -2.9562222957611084
    4. ' bip' → logprob: -3.5812222957611084
    5. ' b' → logprob: -4.7062225341796875
    6. ' ' → logprob: -5.7062225341796875
    7. ' colori' → logprob: -5.8312225341796875
    8. '   ' → logprob: -7.3312225341796875
    9. 'col' → logprob: -7.3312225341796875
    10. 'colored' → logprob: -7.4562225341796875

Token 152: 'ié' (ID: 143445)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0003199730417691171
    2. 'ed' → logprob: -8.125320434570312
    3. 'ié' → logprob: -11.875320434570312
    4. 'd' → logprob: -12.125320434570312
    5. 'ée' → logprob: -12.375320434570312
    6. 'e' → logprob: -13.000320434570312
    7. 'É' → logprob: -14.125320434570312
    8. 'i' → logprob: -14.250320434570312
    9. 'isé' → logprob: -14.375320434570312
    10. '```' → logprob: -14.750320434570312

Token 153: ' sans' (ID: 9828)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23953254520893097
    2. ' sans' → logprob: -1.7395325899124146
    3. 'sans' → logprob: -4.114532470703125
    4. ' correctement' → logprob: -4.489532470703125
    5. ' ,' → logprob: -5.989532470703125
    6. '   ' → logprob: -5.989532470703125
    7. ' en' → logprob: -7.239532470703125
    8. ' without' → logprob: -7.614532470703125
    9. ' de' → logprob: -7.614532470703125
    10. '```' → logprob: -7.739532470703125

Token 154: ' conflits' (ID: 196422)
  Prédit: ' conflit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conflit' → logprob: -0.45367032289505005
    2. 'con' → logprob: -1.5786702632904053
    3. ' conflits' → logprob: -2.2036702632904053
    4. 'contr' → logprob: -3.7036702632904053
    5. 'conf' → logprob: -4.078670501708984
    6. ' conflict' → logprob: -5.953670501708984
    7. '   ' → logprob: -6.078670501708984
    8. ' ' → logprob: -8.828670501708984
    9. ' contradiction' → logprob: -8.953670501708984
    10. ' ' → logprob: -9.078670501708984

Token 155: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007565005216747522
    2. ' ,' → logprob: -7.25075626373291
    3. '   ' → logprob: -10.25075626373291
    4. ',
' → logprob: -11.87575626373291
    5. ' else' → logprob: -14.00075626373291
    6. '```' → logprob: -14.50075626373291
    7. 'False' → logprob: -14.50075626373291
    8. 'else' → logprob: -14.87575626373291
    9. ';' → logprob: -15.12575626373291
    10. '.' → logprob: -15.37575626373291

Token 156: 'b' (ID: 65)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -1.1976821422576904
    2. ',' → logprob: -1.6976821422576904
    3. 'False' → logprob: -1.8226821422576904
    4. 'True' → logprob: -2.1976821422576904
    5. ' True' → logprob: -2.3226821422576904
    6. '   ' → logprob: -2.3226821422576904
    7. ' False' → logprob: -3.1976821422576904
    8. ')' → logprob: -5.6976823806762695
    9. ' ),' → logprob: -7.0726823806762695
    10. '       ' → logprob: -8.19768238067627

Token 157: 'ip' (ID: 488)
  Prédit: 'ip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.7939178347587585
    2. ')' → logprob: -2.4189178943634033
    3. '```' → logprob: -2.7939178943634033
    4. '   ' → logprob: -3.0439178943634033
    5. '``' → logprob: -3.2939178943634033
    6. 'es' → logprob: -3.7939178943634033
    7. 'inaire' → logprob: -4.043917655944824
    8. 'ug' → logprob: -4.543917655944824
    9. 'reak' → logprob: -4.543917655944824
    10. 'loc' → logprob: -4.606417655944824

Token 158: 'arti' (ID: 51348)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.06443200260400772
    2. 'arti' → logprob: -2.81443190574646
    3. 'arte' → logprob: -6.939432144165039
    4. 'ar' → logprob: -8.064432144165039
    5. 'artisan' → logprob: -8.564432144165039
    6. ')' → logprob: -8.689432144165039
    7. 'a' → logprob: -9.439432144165039
    8. 'arto' → logprob: -9.564432144165039
    9. 'arty' → logprob: -10.001932144165039
    10. '}' → logprob: -10.251932144165039

Token 159: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.007637627888470888
    2. ')' → logprob: -5.5076375007629395
    3. ',' → logprob: -5.8826375007629395
    4. 'e' → logprob: -7.5076375007629395
    5. '=True' → logprob: -9.632637977600098
    6. ').' → logprob: -10.757637977600098
    7. ';' → logprob: -10.882637977600098
    8. 'é' → logprob: -11.007637977600098
    9. ' ),' → logprob: -11.132637977600098
    10. ');' → logprob: -11.757637977600098

Token 160: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.1288997083902359
    2. 'False' → logprob: -2.1288998126983643
    3. '   ' → logprob: -6.628899574279785
    4. ' True' → logprob: -7.878899574279785
    5. ' else' → logprob: -8.878899574279785
    6. 'True' → logprob: -10.128899574279785
    7. 'else' → logprob: -10.628899574279785
    8. ' 
' → logprob: -11.128899574279785
    9. '    ' → logprob: -11.628899574279785
    10. '    
' → logprob: -11.878899574279785

Token 161: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5372819900512695
    2. ',' → logprob: -0.9122819900512695
    3. '<|end|>' → logprob: -5.0372819900512695
    4. ' else' → logprob: -6.4122819900512695
    5. 'else' → logprob: -6.6622819900512695
    6. '    ' → logprob: -6.9122819900512695
    7. ' sinon' → logprob: -7.4122819900512695
    8. '```' → logprob: -7.6622819900512695
    9. ')' → logprob: -7.7872819900512695
    10. '  ' → logprob: -8.03728199005127

Token 162: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018600307404994965
    2. ')' → logprob: -4.3936004638671875
    3. '.' → logprob: -5.2686004638671875
    4. '
' → logprob: -8.268600463867188
    5. '):' → logprob: -8.268600463867188
    6. ',' → logprob: -8.518600463867188
    7. ').' → logprob: -10.018600463867188
    8. ':' → logprob: -10.268600463867188
    9. '):
' → logprob: -10.393600463867188
    10. 'def' → logprob: -11.018600463867188

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01216947752982378
    2. ')' → logprob: -4.887169361114502
    3. ':' → logprob: -6.262169361114502
    4. '):' → logprob: -6.262169361114502
    5. '
' → logprob: -8.13716983795166
    6. '    
' → logprob: -9.01216983795166
    7. '"""' → logprob: -9.51216983795166
    8. '```' → logprob: -9.88716983795166
    9. '    ' → logprob: -10.51216983795166
    10. '):
' → logprob: -10.51216983795166

Token 164: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005442451220005751
    2. ')' → logprob: -5.3804426193237305
    3. '):' → logprob: -8.00544261932373
    4. '):
' → logprob: -8.88044261932373
    5. ' global' → logprob: -9.50544261932373
    6. 'global' → logprob: -9.50544261932373
    7. ':' → logprob: -9.75544261932373
    8. '    
' → logprob: -10.50544261932373
    9. ' )' → logprob: -10.63044261932373
    10. ')
' → logprob: -10.75544261932373

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012221322394907475
    2. 'global' → logprob: -7.501222133636475
    3. 'color' → logprob: -8.001221656799316
    4. 'if' → logprob: -8.501221656799316
    5. 'colors' → logprob: -10.251221656799316
    6. ' global' → logprob: -10.251221656799316
    7. '    
' → logprob: -10.626221656799316
    8. ' if' → logprob: -10.876221656799316
    9. ' color' → logprob: -11.626221656799316
    10. '   ' → logprob: -13.126221656799316

Token 166: ' colors' (ID: 10803)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.2372422218322754
    2. 'colors' (adapté à ' colors') → logprob: -1.6122422218322754
    3. 'if' → logprob: -5.112242221832275
    4. 'global' → logprob: -5.612242221832275
    5. '   ' → logprob: -6.362242221832275
    6. 'colored' → logprob: -8.612241744995117
    7. 'visited' → logprob: -9.487241744995117
    8. 'graph' → logprob: -10.487241744995117
    9. ' color' → logprob: -10.987241744995117
    10. ' colors' → logprob: -11.487241744995117

Token 167: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.500000953674316
    3. 'v' → logprob: -15.625000953674316
    4. '[node' → logprob: -16.750001907348633
    5. '[u' → logprob: -17.500001907348633
    6. ']' → logprob: -17.750001907348633
    7. '```' → logprob: -17.750001907348633
    8. '\[' → logprob: -17.875001907348633
    9. '[color' → logprob: -17.875001907348633
    10. ')[' → logprob: -18.125001907348633

Token 168: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002251125843031332
    2. ']=' → logprob: -8.500225067138672
    3. ' ]' → logprob: -11.875225067138672
    4. '=' → logprob: -12.000225067138672
    5. '[' → logprob: -12.625225067138672
    6. ')' → logprob: -12.875225067138672
    7. ']==' → logprob: -14.125225067138672
    8. '[v' → logprob: -14.125225067138672
    9. ' =' → logprob: -15.000225067138672
    10. '[color' → logprob: -15.250225067138672

Token 169: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038069259375333786
    2. ' =' → logprob: -3.288069248199463
    3. '=color' → logprob: -10.538069725036621
    4. '[' → logprob: -14.538069725036621
    5. ')' → logprob: -16.038068771362305
    6. ' color' → logprob: -16.163068771362305
    7. '＝' → logprob: -16.163068771362305
    8. '=-' → logprob: -16.413068771362305
    9. '=int' → logprob: -16.538068771362305
    10. '[color' → logprob: -16.788068771362305

Token 170: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.1002156138420105
    2. ' color' → logprob: -2.3502156734466553
    3. '	color' → logprob: -12.975215911865234
    4. ' ' → logprob: -13.475215911865234
    5. '=color' → logprob: -13.975215911865234
    6. '   ' → logprob: -13.975215911865234
    7. 'colo' → logprob: -14.725215911865234
    8. '(color' → logprob: -14.850215911865234
    9. ' couleur' → logprob: -15.037715911865234
    10. 'olor' → logprob: -15.287715911865234

Token 171: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17880965769290924
    2. 'for' → logprob: -2.678809642791748
    3. '   ' → logprob: -3.178809642791748
    4. ' for' → logprob: -3.428809642791748
    5. '<|end|>' → logprob: -4.178809642791748
    6. '    
' → logprob: -6.178809642791748
    7. '\n' → logprob: -6.678809642791748
    8. '  
' → logprob: -7.303809642791748
    9. '<|end|>' → logprob: -7.428809642791748
    10. '
' → logprob: -7.803809642791748

Token 172: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.031744807958602905
    2. 'for' → logprob: -3.5317447185516357
    3. ' for' → logprob: -6.906744956970215
    4. '    
' → logprob: -8.281744956970215
    5. '
' → logprob: -8.406744956970215
    6. '\n' → logprob: -8.531744956970215
    7. '   ' → logprob: -8.656744956970215
    8. '  
' → logprob: -9.656744956970215
    9. '<|end|>' → logprob: -10.531744956970215
    10. '' → logprob: -11.031744956970215

Token 173: ' At' (ID: 3604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.035946521908044815
    2. ' for' → logprob: -3.7859466075897217
    3. '   ' → logprob: -4.785946369171143
    4. '
' → logprob: -6.035946369171143
    5. 'color' → logprob: -7.660946369171143
    6. '<|end|>' → logprob: -7.660946369171143
    7. 'return' → logprob: -8.6609468460083
    8. '```' → logprob: -9.5359468460083
    9. '    
' → logprob: -9.6609468460083
    10. 'Assign' → logprob: -9.6609468460083

Token 174: 'trib' (ID: 1420)
  Prédit: 'trib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trib' → logprob: -0.01199198979884386
    2. 'tribut' → logprob: -5.38699197769165
    3. 'tri' → logprob: -6.01199197769165
    4. 'tr' → logprob: -6.26199197769165
    5. 't' → logprob: -6.63699197769165
    6. 'tribute' → logprob: -7.13699197769165
    7. 'tribution' → logprob: -7.76199197769165
    8. 'tributes' → logprob: -9.011992454528809
    9. 'tributed' → logprob: -9.636992454528809
    10. 'tributions' → logprob: -9.886992454528809

Token 175: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.585382878780365
    2. 'ue' → logprob: -0.835382878780365
    3. 'u' → logprob: -4.96038293838501
    4. 'ué' → logprob: -6.33538293838501
    5. 'uez' → logprob: -8.960382461547852
    6. 'uée' → logprob: -9.335382461547852
    7. 'ues' → logprob: -9.835382461547852
    8. '   ' → logprob: -10.085382461547852
    9. 'uere' → logprob: -10.335382461547852
    10. 'ure' → logprob: -10.335382461547852

Token 176: ' la' (ID: 557)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.5827244520187378
    2. 'color' → logprob: -0.8327244520187378
    3. '<|end|>' → logprob: -5.707724571228027
    4. ' couleur' → logprob: -6.207724571228027
    5. ' colors' → logprob: -7.832724571228027
    6. 'colors' → logprob: -7.957724571228027
    7. '=color' → logprob: -8.957724571228027
    8. ')' → logprob: -9.207724571228027
    9. '[color' → logprob: -9.707724571228027
    10. ' couleurs' → logprob: -9.957724571228027

Token 177: ' couleur' (ID: 48005)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.6008493304252625
    2. 'cou' → logprob: -1.2258493900299072
    3. ' couleur' → logprob: -1.9758493900299072
    4. ' color' → logprob: -3.9758493900299072
    5. 'next' → logprob: -8.975849151611328
    6. ' next' → logprob: -9.100849151611328
    7. ' couleurs' → logprob: -9.225849151611328
    8. 'token' → logprob: -9.475849151611328
    9. 'colors' → logprob: -9.850849151611328
    10. '```' → logprob: -9.975849151611328

Token 178: ' au' (ID: 2791)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2610139846801758
    2. '   ' → logprob: -1.7610139846801758
    3. '<|end|>' → logprob: -3.886013984680176
    4. ' for' → logprob: -4.136013984680176
    5. 'for' → logprob: -4.636013984680176
    6. '  
' → logprob: -5.511013984680176
    7. '    
' → logprob: -5.636013984680176
    8. '\n' → logprob: -6.386013984680176
    9. ' ' → logprob: -7.886013984680176
    10. '<|end|>' → logprob: -8.011013984680176

Token 179: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.014888877049088478
    2. ' sommet' → logprob: -4.264888763427734
    3. 'v' → logprob: -8.139888763427734
    4. 's' → logprob: -9.014888763427734
    5. '```' → logprob: -9.139888763427734
    6. 'vo' → logprob: -9.764888763427734
    7. 'vertex' → logprob: -9.764888763427734
    8. 'summ' → logprob: -10.139888763427734
    9. ' som' → logprob: -11.264888763427734
    10. 'no' → logprob: -11.639888763427734

Token 180: ' courant' (ID: 74694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6033487915992737
    2. ' for' → logprob: -1.603348731994629
    3. 'for' → logprob: -2.228348731994629
    4. '
' → logprob: -2.353348731994629
    5. '<|end|>' → logprob: -3.228348731994629
    6. '    
' → logprob: -5.603348731994629
    7. '<|end|>' → logprob: -6.228348731994629
    8. '\n' → logprob: -6.603348731994629
    9. '  
' → logprob: -7.478348731994629
    10. '  ' → logprob: -8.103348731994629

Token 181: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6607797145843506
    2. '   ' → logprob: -1.1607797145843506
    3. ' for' → logprob: -1.7857797145843506
    4. '<|end|>' → logprob: -6.91077995300293
    5. '	for' → logprob: -7.28577995300293
    6. '
' → logprob: -7.41077995300293
    7. '    
' → logprob: -8.53577995300293
    8. '<|end|>' → logprob: -10.41077995300293
    9. '```' → logprob: -10.53577995300293
    10. '  ' → logprob: -11.16077995300293

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08467847853899002
    2. 'for' → logprob: -2.8346784114837646
    3. ' for' → logprob: -3.8346784114837646
    4. '    
' → logprob: -7.459678649902344
    5. '
' → logprob: -9.084678649902344
    6. '	for' → logprob: -9.334678649902344
    7. ',' → logprob: -10.834678649902344
    8. '<|end|>' → logprob: -11.084678649902344
    9. '  
' → logprob: -12.209678649902344
    10. '   
' → logprob: -12.459678649902344

Token 183: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00018923594325315207
    2. ' for' → logprob: -8.625188827514648
    3. '   ' → logprob: -11.625188827514648
    4. 'global' → logprob: -14.625188827514648
    5. '	for' → logprob: -16.37518882751465
    6. '```' → logprob: -16.62518882751465
    7. 'next' → logprob: -17.37518882751465
    8. '    
' → logprob: -17.62518882751465
    9. 'if' → logprob: -18.50018882751465
    10. 'try' → logprob: -19.12518882751465

Token 184: ' to' (ID: 316)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.06024028733372688
    2. 'neighbor' → logprob: -3.0602402687072754
    3. ' u' → logprob: -4.685240268707275
    4. 'nei' → logprob: -6.685240268707275
    5. ' neighbor' → logprob: -7.935240268707275
    6. ' nei' → logprob: -7.935240268707275
    7. 'to' → logprob: -9.310240745544434
    8. ' voisin' → logprob: -9.310240745544434
    9. 'node' → logprob: -9.435240745544434
    10. 'next' → logprob: -10.310240745544434

Token 185: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11468660831451416
    2. 'in' → logprob: -2.2396864891052246
    3. 's' → logprob: -6.864686489105225
    4. 'n' → logprob: -8.114686965942383
    5. ',' → logprob: -8.864686965942383
    6. ' ' → logprob: -8.989686965942383
    7. 'd' → logprob: -9.614686965942383
    8. 'v' → logprob: -10.239686965942383
    9. 't' → logprob: -10.489686965942383
    10. 'de' → logprob: -10.614686965942383

Token 186: ' g' (ID: 329)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0024178687017410994
    2. 'adj' → logprob: -6.627418041229248
    3. ' graph' → logprob: -7.252418041229248
    4. 'g' → logprob: -8.00241756439209
    5. 'gr' → logprob: -10.87741756439209
    6. 'G' → logprob: -11.75241756439209
    7. 'graf' → logprob: -11.87741756439209
    8. 'graphs' → logprob: -12.50241756439209
    9. 'edges' → logprob: -12.62741756439209
    10. '   ' → logprob: -12.62741756439209

Token 187: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0003364158037584275
    2. 'raph' → logprob: -8.000336647033691
    3. '[g' → logprob: -14.750336647033691
    4. '[' → logprob: -15.625336647033691
    5. 'raf' → logprob: -15.875336647033691
    6. 'v' → logprob: -16.125335693359375
    7. 'rap' → logprob: -16.625335693359375
    8. 'raphics' → logprob: -17.500335693359375
    9. ' [' → logprob: -18.000335693359375
    10. 'raphic' → logprob: -18.500335693359375

Token 188: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -4.596781946020201e-05
    2. ']' → logprob: -10.500045776367188
    3. ']:
' → logprob: -11.250045776367188
    4. '[' → logprob: -13.750045776367188
    5. ']:
' → logprob: -13.875045776367188
    6. '[v' → logprob: -14.125045776367188
    7. ' ]' → logprob: -14.250045776367188
    8. '):' → logprob: -14.750045776367188
    9. '']:' → logprob: -14.875045776367188
    10. '}:' → logprob: -15.125045776367188

Token 189: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1593049168586731
    2. '<|end|>' → logprob: -2.4093048572540283
    3. '        
' → logprob: -3.4093048572540283
    4. ' 
' → logprob: -4.909305095672607
    5. '        ' → logprob: -5.159305095672607
    6. ' ' → logprob: -5.909305095672607
    7. '
' → logprob: -6.284305095672607
    8. '    ' → logprob: -6.409305095672607
    9. ' if' → logprob: -6.909305095672607
    10. 'if' → logprob: -7.034305095672607

Token 190: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03997734189033508
    2. ' if' → logprob: -4.039977550506592
    3. 'if' → logprob: -4.539977550506592
    4. '<|end|>' → logprob: -4.664977550506592
    5. '
' → logprob: -7.539977550506592
    6. '        
' → logprob: -8.414977073669434
    7. '   ' → logprob: -8.664977073669434
    8. '<|end|>' → logprob: -8.914977073669434
    9. '    ' → logprob: -9.039977073669434
    10. ' ' → logprob: -9.414977073669434

Token 191: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4084332287311554
    2. ' if' → logprob: -1.408433198928833
    3. '       ' → logprob: -2.408433198928833
    4. '   ' → logprob: -7.783433437347412
    5. 'If' → logprob: -8.658432960510254
    6. '
' → logprob: -9.408432960510254
    7. '    ' → logprob: -9.908432960510254
    8. '<|end|>' → logprob: -10.408432960510254
    9. '	if' → logprob: -10.783432960510254
    10. '#' → logprob: -11.908432960510254

Token 192: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.6049795150756836
    2. ' each' → logprob: -1.2299795150756836
    3. ' to' → logprob: -2.2299795150756836
    4. 'to' → logprob: -3.8549795150756836
    5. 'each' → logprob: -4.979979515075684
    6. ' chacun' → logprob: -4.979979515075684
    7. ' ' → logprob: -5.229979515075684
    8. '  ' → logprob: -5.979979515075684
    9. ' every' → logprob: -5.979979515075684
    10. ' voisin' → logprob: -6.479979515075684

Token 193: ' voisin' (ID: 145411)
  Prédit: ' voisin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisin' → logprob: -0.16771306097507477
    2. ' sommet' → logprob: -2.042713165283203
    3. ' adjacent' → logprob: -5.042713165283203
    4. 'neighbor' → logprob: -5.167713165283203
    5. ' neighbor' → logprob: -5.792713165283203
    6. 'vo' → logprob: -5.792713165283203
    7. 'adj' → logprob: -6.292713165283203
    8. ' adj' → logprob: -6.542713165283203
    9. ' voisins' → logprob: -6.667713165283203
    10. ' vois' → logprob: -7.917713165283203

Token 194: ' du' (ID: 1462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04241848364472389
    2. '       ' → logprob: -3.9174184799194336
    3. ':
' → logprob: -4.917418479919434
    4. ' :' → logprob: -5.792418479919434
    5. '   ' → logprob: -5.917418479919434
    6. '<|end|>' → logprob: -5.917418479919434
    7. ',' → logprob: -6.292418479919434
    8. ' if' → logprob: -6.792418479919434
    9. '    ' → logprob: -6.792418479919434
    10. ' ' → logprob: -8.292418479919434

Token 195: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.08353837579488754
    2. ' v' → logprob: -2.958538293838501
    3. 'v' → logprob: -3.583538293838501
    4. ' vertex' → logprob: -9.083538055419922
    5. 'som' → logprob: -9.083538055419922
    6. ' voisin' → logprob: -9.708538055419922
    7. 's' → logprob: -10.083538055419922
    8. '[v' → logprob: -10.083538055419922
    9. ' som' → logprob: -10.458538055419922
    10. 'vertex' → logprob: -10.833538055419922

Token 196: ' courant' (ID: 74694)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.8094965219497681
    2. 'v' → logprob: -0.9344965219497681
    3. '<|end|>' → logprob: -3.0594964027404785
    4. ' current' → logprob: -3.3094964027404785
    5. ' actuel' → logprob: -3.6844964027404785
    6. ':' → logprob: -3.6844964027404785
    7. 'current' → logprob: -4.8094964027404785
    8. ' :' → logprob: -5.1844964027404785
    9. ',' → logprob: -5.9344964027404785
    10. ' ' → logprob: -6.5594964027404785

Token 197: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1528714895248413
    2. ':' → logprob: -2.027871608734131
    3. ' if' → logprob: -5.527871608734131
    4. 'if' → logprob: -6.402871608734131
    5. ':
' → logprob: -6.402871608734131
    6. ',' → logprob: -6.902871608734131
    7. '<|end|>' → logprob: -6.902871608734131
    8. ' :' → logprob: -7.902871608734131
    9. '   ' → logprob: -8.402871131896973
    10. '<|end|>' → logprob: -10.152871131896973

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0059067499823868275
    2. ' if' → logprob: -6.255906581878662
    3. '<|end|>' → logprob: -7.130906581878662
    4. '        
' → logprob: -7.255906581878662
    5. '
' → logprob: -7.380906581878662
    6. 'if' → logprob: -7.630906581878662
    7. '   ' → logprob: -7.880906581878662
    8. '    ' → logprob: -8.00590705871582
    9. ' ' → logprob: -8.38090705871582
    10. '        ' → logprob: -9.50590705871582

Token 199: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05672410875558853
    2. ' if' → logprob: -2.9317240715026855
    3. '       ' → logprob: -6.3067240715026855
    4. '<|end|>' → logprob: -12.181724548339844
    5. '	if' → logprob: -12.556724548339844
    6. '           ' → logprob: -12.806724548339844
    7. '```' → logprob: -14.056724548339844
    8. '   ' → logprob: -14.056724548339844
    9. ';if' → logprob: -14.306724548339844
    10. 'If' → logprob: -14.556724548339844

Token 200: ' colors' (ID: 10803)
  Prédit: ' colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.38688942790031433
    2. 'colors' → logprob: -1.1368894577026367
    3. 'color' → logprob: -11.761889457702637
    4. ' color' → logprob: -13.011889457702637
    5. 'to' → logprob: -13.261889457702637
    6. '(colors' → logprob: -13.386889457702637
    7. ' couleurs' → logprob: -13.761889457702637
    8. ' colores' → logprob: -14.136889457702637
    9. '   ' → logprob: -14.511889457702637
    10. '_colors' → logprob: -14.511889457702637

Token 201: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -3.128163257315464e-07
    2. 'to' → logprob: -16.125
    3. '[' → logprob: -16.375
    4. ' [' → logprob: -16.625
    5. '[from' → logprob: -17.625
    6. '[temp' → logprob: -19.375
    7. '   ' → logprob: -19.375
    8. '(to' → logprob: -19.5
    9. '[v' → logprob: -19.5
    10. '[
' → logprob: -20.0

Token 202: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4464244544506073
    2. ' ==' → logprob: -1.8214244842529297
    3. ')' → logprob: -2.8214244842529297
    4. ']==' → logprob: -2.9464244842529297
    5. ']' → logprob: -3.8214244842529297
    6. ' ' → logprob: -3.8214244842529297
    7. '==-' → logprob: -3.8214244842529297
    8. '[' → logprob: -4.94642448425293
    9. ')==' → logprob: -5.07142448425293
    10. ' is' → logprob: -5.69642448425293

Token 203: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2104732245206833
    2. ' ==' → logprob: -1.7104731798171997
    3. '==-' → logprob: -4.83547306060791
    4. ' is' → logprob: -7.46047306060791
    5. 'is' → logprob: -8.58547306060791
    6. ')==' → logprob: -9.33547306060791
    7. ')' → logprob: -9.58547306060791
    8. '=' → logprob: -9.83547306060791
    9. ']==' → logprob: -10.21047306060791
    10. ' ' → logprob: -10.58547306060791

Token 204: ' color' (ID: 3089)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7432267665863037
    2. 'color' → logprob: -0.7432267665863037
    3. ' ' → logprob: -3.4932267665863037
    4. ' color' → logprob: -4.118227005004883
    5. 'colors' → logprob: -6.493227005004883
    6. '   ' → logprob: -7.993227005004883
    7. '	color' → logprob: -9.368227005004883
    8. 'None' → logprob: -9.868227005004883
    9. ' colors' → logprob: -10.118227005004883
    10. '  ' → logprob: -10.430727005004883

Token 205: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1280331313610077
    2. ':return' → logprob: -2.12803316116333
    3. ':
' → logprob: -7.25303316116333
    4. ' :' → logprob: -9.003032684326172
    5. '):' → logprob: -9.378032684326172
    6. '<|end|>' → logprob: -9.628032684326172
    7. ')' → logprob: -9.753032684326172
    8. ' return' → logprob: -10.628032684326172
    9. 'return' → logprob: -10.878032684326172
    10. '<|end|>' → logprob: -13.003032684326172

Token 206: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09571745991706848
    2. ':' → logprob: -3.345717430114746
    3. ':return' → logprob: -3.470717430114746
    4. ' return' → logprob: -4.220717430114746
    5. 'return' → logprob: -5.345717430114746
    6. '       ' → logprob: -5.845717430114746
    7. '               ' → logprob: -6.720717430114746
    8. '<|end|>' → logprob: -8.220717430114746
    9. ')' → logprob: -8.470717430114746
    10. '          ' → logprob: -9.095717430114746

Token 207: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.024095486849546432
    2. ' return' → logprob: -3.7740955352783203
    3. '           ' → logprob: -7.27409553527832
    4. '               ' → logprob: -9.27409553527832
    5. '
' → logprob: -10.52409553527832
    6. ':return' → logprob: -10.89909553527832
    7. '	return' → logprob: -12.02409553527832
    8. '       ' → logprob: -12.64909553527832
    9. '                   ' → logprob: -13.02409553527832
    10. '   ' → logprob: -13.14909553527832

Token 208: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00193458900321275
    2. ' return' → logprob: -6.25193452835083
    3. '   ' → logprob: -12.876935005187988
    4. '           ' → logprob: -13.751935005187988
    5. '       ' → logprob: -13.876935005187988
    6. '#' → logprob: -14.876935005187988
    7. '
' → logprob: -15.126935005187988
    8. 'Return' → logprob: -15.126935005187988
    9. '```' → logprob: -15.626935005187988
    10. ':return' → logprob: -16.751934051513672

Token 209: ' le' (ID: 505)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.8169865608215332
    2. ' True' → logprob: -1.4419865608215332
    3. ' colors' → logprob: -1.8169865608215332
    4. 'colors' → logprob: -1.9419865608215332
    5. ' not' → logprob: -4.566986560821533
    6. 'color' → logprob: -6.441986560821533
    7. 'not' → logprob: -6.566986560821533
    8. 'False' → logprob: -7.066986560821533
    9. ' color' → logprob: -7.566986560821533
    10. ' couleurs' → logprob: -7.941986560821533

Token 210: ' voisin' (ID: 145411)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -1.092715859413147
    2. ' colors' → logprob: -1.467715859413147
    3. 'color' → logprob: -2.5927157402038574
    4. '<|end|>' → logprob: -2.5927157402038574
    5. ' color' → logprob: -2.9677157402038574
    6. ' same' → logprob: -3.0927157402038574
    7. ' next' → logprob: -3.2177157402038574
    8. ')' → logprob: -3.2177157402038574
    9. 'same' → logprob: -3.3427157402038574
    10. ' not' → logprob: -4.467715740203857

Token 211: ' a' (ID: 261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' déjà' (ID: 21229)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5227210521697998
    2. '<|end|>' → logprob: -2.0227210521698
    3. 'the' → logprob: -2.2727210521698
    4. ' the' → logprob: -2.3977210521698
    5. 'same' → logprob: -3.0227210521698
    6. 'colors' → logprob: -4.772721290588379
    7. ' same' → logprob: -5.147721290588379
    8. '```' → logprob: -5.772721290588379
    9. ' colors' → logprob: -6.022721290588379
    10. ' dezelfde' → logprob: -6.772721290588379

Token 213: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4788562059402466
    2. ' la' → logprob: -1.1038562059402466
    3. 'the' → logprob: -4.353856086730957
    4. '<|end|>' → logprob: -4.353856086730957
    5. 'same' → logprob: -5.103856086730957
    6. ' the' → logprob: -5.353856086730957
    7. '```' → logprob: -5.728856086730957
    8. '...' → logprob: -6.353856086730957
    9. 'une' → logprob: -6.603856086730957
    10. 'm' → logprob: -6.978856086730957

Token 214: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.042464639991521835
    2. ' même' → logprob: -3.2924647331237793
    3. '```' → logprob: -7.042464733123779
    4. 'cou' → logprob: -7.292464733123779
    5. 'mme' → logprob: -7.292464733123779
    6. 'same' → logprob: -7.417464733123779
    7. 'Même' → logprob: -8.167464256286621
    8. 'mm' → logprob: -8.417464256286621
    9. '...' → logprob: -9.292464256286621
    10. '#' → logprob: -9.417464256286621

Token 215: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.16747109591960907
    2. 'cou' → logprob: -2.417471170425415
    3. 'color' → logprob: -2.917471170425415
    4. '<|end|>' → logprob: -5.167470932006836
    5. ' color' → logprob: -5.292470932006836
    6. ' couleurs' → logprob: -9.542470932006836
    7. ')' → logprob: -10.292470932006836
    8. '```' → logprob: -10.417470932006836
    9. '_color' → logprob: -11.167470932006836
    10. 'c' → logprob: -11.667470932006836

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5602063536643982
    2. '               ' → logprob: -1.185206413269043
    3. '           ' → logprob: -2.810206413269043
    4. ':' → logprob: -3.810206413269043
    5. ' return' → logprob: -4.060206413269043
    6. ':return' → logprob: -4.185206413269043
    7. 'return' → logprob: -5.060206413269043
    8. ' ,' → logprob: -7.810206413269043
    9. ':
' → logprob: -7.810206413269043
    10. '                   ' → logprob: -7.935206413269043

Token 217: ' ce' (ID: 2357)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2848016619682312
    2. 'return' → logprob: -1.784801721572876
    3. '               ' → logprob: -2.534801721572876
    4. '           ' → logprob: -7.284801483154297
    5. '                   ' → logprob: -11.659801483154297
    6. '
' → logprob: -12.034801483154297
    7. '	return' → logprob: -12.534801483154297
    8. ':return' → logprob: -12.534801483154297
    9. '       ' → logprob: -12.659801483154297
    10. '                       ' → logprob: -12.784801483154297

Token 218: ' n' (ID: 297)
  Prédit: ' qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.25737449526786804
    2. '#' → logprob: -2.3823745250701904
    3. ' return' → logprob: -3.1323745250701904
    4. 'ci' → logprob: -3.3823745250701904
    5. 'return' → logprob: -4.757374286651611
    6. ' that' → logprob: -5.007374286651611
    7. ' #' → logprob: -5.257374286651611
    8. 's' → logprob: -5.632374286651611
    9. '```' → logprob: -5.757374286651611
    10. 'n' → logprob: -5.882374286651611

Token 219: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.10770024359226227
    2. 'est' → logprob: -2.3577003479003906
    3. '’est' → logprob: -5.857700347900391
    4. 'e' → logprob: -6.857700347900391
    5. 'ela' → logprob: -7.482700347900391
    6. '#' → logprob: -7.607700347900391
    7. 'es' → logprob: -7.732700347900391
    8. 'n' → logprob: -7.982700347900391
    9. ''''' → logprob: -8.23270034790039
    10. '

' → logprob: -8.48270034790039

Token 220: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.04859941080212593
    2. 'pas' → logprob: -3.0485994815826416
    3. '_pas' → logprob: -11.798599243164062
    4. ' possible' → logprob: -13.548599243164062
    5. 'possible' → logprob: -14.298599243164062
    6. 'not' → logprob: -14.798599243164062
    7. 'Pas' → logprob: -14.798599243164062
    8. ' not' → logprob: -15.298599243164062
    9. ' a' → logprob: -15.673599243164062
    10. '   ' → logprob: -16.048599243164062

Token 221: ' bip' (ID: 54467)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05474448949098587
    2. ' bip' → logprob: -3.0547444820404053
    3. ' un' → logprob: -5.304744720458984
    4. 'un' → logprob: -7.804744720458984
    5. ' b' → logprob: -8.304744720458984
    6. ' possible' → logprob: -8.429744720458984
    7. 'possible' → logprob: -9.179744720458984
    8. ' ' → logprob: -9.929744720458984
    9. '   ' → logprob: -10.179744720458984
    10. 'bien' → logprob: -10.804744720458984

Token 222: 'arti' (ID: 51348)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.4859040081501007
    2. 'arti' → logprob: -0.9859039783477783
    3. 'arte' → logprob: -4.735904216766357
    4. 'arto' → logprob: -7.485904216766357
    5. 'ar' → logprob: -7.610904216766357
    6. 'a' → logprob: -7.735904216766357
    7. 'arty' → logprob: -9.1109037399292
    8. ' ' → logprob: -9.2359037399292
    9. '   ' → logprob: -9.3609037399292
    10. 'i' → logprob: -9.4859037399292

Token 223: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03550596162676811
    2. '               ' → logprob: -4.035505771636963
    3. '       ' → logprob: -4.785505771636963
    4. ',' → logprob: -5.660505771636963
    5. 'return' → logprob: -6.160505771636963
    6. '
' → logprob: -6.785505771636963
    7. '.' → logprob: -7.160505771636963
    8. ' return' → logprob: -8.285506248474121
    9. ')' → logprob: -8.410506248474121
    10. '                   ' → logprob: -8.785506248474121

Token 224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018281981348991394
    2. '               ' → logprob: -4.268281936645508
    3. '       ' → logprob: -5.643281936645508
    4. ',' → logprob: -8.518281936645508
    5. ':' → logprob: -8.893281936645508
    6. ')' → logprob: -10.018281936645508
    7. 'return' → logprob: -10.268281936645508
    8. ' return' → logprob: -10.268281936645508
    9. ':
' → logprob: -10.518281936645508
    10. '		' → logprob: -10.893281936645508

Token 225: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001021736185066402
    2. ' return' → logprob: -7.001021862030029
    3. '               ' → logprob: -9.751021385192871
    4. '           ' → logprob: -9.876021385192871
    5. '	return' → logprob: -15.876021385192871
    6. '       ' → logprob: -15.876021385192871
    7. ':return' → logprob: -16.001022338867188
    8. '                   ' → logprob: -16.251022338867188
    9. '
' → logprob: -17.376022338867188
    10. '   ' → logprob: -17.626022338867188

Token 226: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0015023599844425917
    2. ' False' → logprob: -6.501502513885498
    3. 'F' → logprob: -18.751502990722656
    4. '(False' → logprob: -18.751502990722656
    5. 'false' → logprob: -19.876502990722656
    6. 'True' → logprob: -20.001502990722656
    7. '=False' → logprob: -21.001502990722656
    8. '   ' → logprob: -21.376502990722656
    9. '_false' → logprob: -21.501502990722656
    10. '
' → logprob: -21.751502990722656

Token 227: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002726601669564843
    2. '<|end|>' → logprob: -8.625272750854492
    3. '        
' → logprob: -10.375272750854492
    4. '      ' → logprob: -11.375272750854492
    5. ',' → logprob: -11.750272750854492
    6. '
' → logprob: -11.875272750854492
    7. '	' → logprob: -12.125272750854492
    8. '   ' → logprob: -12.250272750854492
    9. ')' → logprob: -12.375272750854492
    10. '<|end|>' → logprob: -12.500272750854492

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010568645084276795
    2. '<|end|>' → logprob: -7.001056671142578
    3. '        
' → logprob: -9.751056671142578
    4. '
' → logprob: -10.376056671142578
    5. '<|end|>' → logprob: -11.376056671142578
    6. '   ' → logprob: -11.376056671142578
    7. '  
' → logprob: -12.126056671142578
    8. '	' → logprob: -12.626056671142578
    9. '      ' → logprob: -12.876056671142578
    10. 'elif' → logprob: -12.876056671142578

Token 229: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0053847068920731544
    2. 'elif' → logprob: -5.755384922027588
    3. 'if' (adapté à ' if') → logprob: -6.255384922027588
    4. ' if' → logprob: -8.63038444519043
    5. ' elif' → logprob: -9.88038444519043
    6. '        
' → logprob: -10.75538444519043
    7. '
' → logprob: -11.50538444519043
    8. '   ' → logprob: -12.38038444519043
    9. '      ' → logprob: -12.50538444519043
    10. '        ' → logprob: -12.63038444519043

Token 230: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.07889430224895477
    2. ' colors' → logprob: -2.5788943767547607
    3. '(colors' → logprob: -13.32889461517334
    4. '   ' → logprob: -14.20389461517334
    5. 'color' → logprob: -14.20389461517334
    6. ' ' → logprob: -14.57889461517334
    7. '.colors' → logprob: -15.64139461517334
    8. ' not' → logprob: -15.89139461517334
    9. 'not' → logprob: -16.203893661499023
    10. ' colores' → logprob: -16.328893661499023

Token 231: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: 0.0
    2. '[from' → logprob: -18.375
    3. 'to' → logprob: -19.25
    4. ' [' → logprob: -19.25
    5. '

' → logprob: -19.375
    6. '[' → logprob: -19.75
    7. '
' → logprob: -20.125
    8. '[temp' → logprob: -20.5
    9. '[tmp' → logprob: -21.0
    10. '```' → logprob: -21.125

Token 232: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14394502341747284
    2. ' ==' → logprob: -2.2689449787139893
    3. '==-' → logprob: -4.393945217132568
    4. ']' → logprob: -4.893945217132568
    5. ')' → logprob: -5.518945217132568
    6. ']==' → logprob: -5.643945217132568
    7. ' is' → logprob: -6.268945217132568
    8. 'is' → logprob: -6.893945217132568
    9. ' ' → logprob: -9.26894474029541
    10. ')==' → logprob: -9.51894474029541

Token 233: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38970085978507996
    2. ' ==' → logprob: -1.1397008895874023
    3. '==-' → logprob: -6.014700889587402
    4. ' is' → logprob: -8.389700889587402
    5. 'is' → logprob: -9.389700889587402
    6. ']==' → logprob: -10.264700889587402
    7. ')==' → logprob: -11.264700889587402
    8. '=' → logprob: -11.889700889587402
    9. ' ' → logprob: -12.264700889587402
    10. '==
' → logprob: -12.514700889587402

Token 234: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859236627817154
    2. ' ' → logprob: -3.0485923290252686
    3. '   ' → logprob: -12.798592567443848
    4. 'None' → logprob: -13.798592567443848
    5. '  ' → logprob: -14.673592567443848
    6. '    ' → logprob: -15.673592567443848
    7. '	' → logprob: -15.673592567443848
    8. ' -' → logprob: -15.798592567443848
    9. ' None' → logprob: -16.29859161376953
    10. '-' → logprob: -17.04859161376953

Token 235: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011706985533237457
    2. ' ' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.126171112060547
    4. 'None' → logprob: -16.251171112060547
    5. '  ' → logprob: -16.751171112060547
    6. '	' → logprob: -17.626171112060547
    7. '    ' → logprob: -17.938671112060547
    8. '۰' → logprob: -18.626171112060547
    9. ' -' → logprob: -18.751171112060547
    10. '_' → logprob: -18.876171112060547

Token 236: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020786523818969727
    2. ':
' → logprob: -3.8957865238189697
    3. ' and' → logprob: -8.77078628540039
    4. '       ' → logprob: -11.14578628540039
    5. ' :' → logprob: -11.14578628540039
    6. '):' → logprob: -11.52078628540039
    7. 'and' → logprob: -11.64578628540039
    8. ',' → logprob: -11.64578628540039
    9. ':

' → logprob: -11.89578628540039
    10. ':return' → logprob: -12.14578628540039

Token 237: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.20144735276699066
    2. ' not' → logprob: -1.7014473676681519
    3. '   ' → logprob: -10.701447486877441
    4. 'dfs' → logprob: -11.951447486877441
    5. '(not' → logprob: -13.451447486877441
    6. '
' → logprob: -13.576447486877441
    7. '!' → logprob: -14.326447486877441
    8. ' dfs' → logprob: -14.701447486877441
    9. '```' → logprob: -14.951447486877441
    10. '	not' → logprob: -14.951447486877441

Token 238: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.1269282102584839
    2. ' dfs' → logprob: -2.1269283294677734
    3. 'df' → logprob: -16.251928329467773
    4. 'DFS' → logprob: -17.751928329467773
    5. 'd' → logprob: -17.876928329467773
    6. ' ' → logprob: -18.251928329467773
    7. '   ' → logprob: -18.376928329467773
    8. ' bfs' → logprob: -19.001928329467773
    9. '
' → logprob: -19.376928329467773
    10. ' ' → logprob: -19.626928329467773

Token 239: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -1.981667537620524e-06
    2. 'to' → logprob: -13.500001907348633
    3. '(' → logprob: -14.875001907348633
    4. ' (' → logprob: -16.000001907348633
    5. '[to' → logprob: -17.250001907348633
    6. '(
' → logprob: -17.625001907348633
    7. ',to' → logprob: -17.750001907348633
    8. '(To' → logprob: -18.375001907348633
    9. ' to' → logprob: -18.500001907348633
    10. '	to' → logprob: -20.750001907348633

Token 240: ',' (ID: 11)
  Prédit: '(to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.4104154706001282
    2. '(-' → logprob: -1.6604154109954834
    3. ',' → logprob: -2.2854154109954834
    4. '(' → logprob: -3.1604154109954834
    5. ',to' → logprob: -7.1604156494140625
    6. '(color' → logprob: -7.7854156494140625
    7. ' (' → logprob: -8.160415649414062
    8. '(
' → logprob: -8.410415649414062
    9. '(v' → logprob: -8.410415649414062
    10. ' ,' → logprob: -8.785415649414062

Token 241: ' -' (ID: 533)
  Prédit: '-color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-color' → logprob: -0.01011726725846529
    2. '-' → logprob: -4.885117053985596
    3. ' -' → logprob: -6.135117053985596
    4. '   ' → logprob: -9.510117530822754
    5. '-code' → logprob: -9.510117530822754
    6. '-c' → logprob: -10.385117530822754
    7. '-col' → logprob: -10.635117530822754
    8. '-output' → logprob: -11.760117530822754
    9. '-change' → logprob: -11.760117530822754
    10. '-carbon' → logprob: -12.135117530822754

Token 242: 'color' (ID: 4991)
  Prédit: 'color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -9.13388703338569e-06
    2. ' color' → logprob: -11.625009536743164
    3. 'colors' → logprob: -15.750009536743164
    4. '1' → logprob: -18.375009536743164
    5. '	color' → logprob: -18.625009536743164
    6. '(color' → logprob: -18.875009536743164
    7. '=color' → logprob: -19.625009536743164
    8. '   ' → logprob: -20.000009536743164
    9. ')' → logprob: -20.125009536743164
    10. ' ' → logprob: -20.125009536743164

Token 243: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006978806108236313
    2. '):
' → logprob: -5.006978988647461
    3. ')' → logprob: -8.256978988647461
    4. '):
' → logprob: -13.256978988647461
    5. ' ):' → logprob: -13.506978988647461
    6. '):

' → logprob: -14.256978988647461
    7. ')):' → logprob: -16.25697898864746
    8. ')：' → logprob: -17.38197898864746
    9. ':' → logprob: -17.63197898864746
    10. ''):' → logprob: -18.25697898864746

Token 244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003422567679081112
    2. ' return' → logprob: -8.75034236907959
    3. 'return' → logprob: -9.87534236907959
    4. ':' → logprob: -10.00034236907959
    5. ':return' → logprob: -10.12534236907959
    6. '               ' → logprob: -10.25034236907959
    7. ':
' → logprob: -12.62534236907959
    8. '       ' → logprob: -13.00034236907959
    9. '```' → logprob: -13.37534236907959
    10. '          ' → logprob: -13.62534236907959

Token 245: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023732218891382217
    2. ' return' → logprob: -3.7737321853637695
    3. '           ' → logprob: -8.02373218536377
    4. '               ' → logprob: -8.77373218536377
    5. '       ' → logprob: -13.02373218536377
    6. '	return' → logprob: -13.77373218536377
    7. '   ' → logprob: -14.39873218536377
    8. ':return' → logprob: -15.02373218536377
    9. '
' → logprob: -17.023733139038086
    10. ' ' → logprob: -17.148733139038086

Token 246: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004582145716995001
    2. ' return' → logprob: -5.504581928253174
    3. '           ' → logprob: -7.754581928253174
    4. '               ' → logprob: -9.629582405090332
    5. '       ' → logprob: -11.879582405090332
    6. '   ' → logprob: -13.879582405090332
    7. '                   ' → logprob: -14.754582405090332
    8. '	return' → logprob: -15.379582405090332
    9. ':return' → logprob: -15.879582405090332
    10. '
' → logprob: -16.004581451416016

Token 247: ' le' (ID: 505)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1436653435230255
    2. 'not' → logprob: -2.018665313720703
    3. ' colors' → logprob: -8.143665313720703
    4. 'colors' → logprob: -8.393665313720703
    5. ' dfs' → logprob: -8.393665313720703
    6. ' the' → logprob: -9.393665313720703
    7. 'dfs' → logprob: -9.768665313720703
    8. '```' → logprob: -10.768665313720703
    9. ' ' → logprob: -11.268665313720703
    10. '(not' → logprob: -11.518665313720703

Token 248: ' voisin' (ID: 145411)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.7183492183685303
    2. ' voisin' → logprob: -0.7183492183685303
    3. 'dfs' → logprob: -4.718349456787109
    4. 'neighbor' → logprob: -4.843349456787109
    5. ' dfs' → logprob: -5.593349456787109
    6. 'not' → logprob: -6.093349456787109
    7. ' neighbor' → logprob: -7.343349456787109
    8. ' vo' → logprob: -7.468349456787109
    9. ' voisins' → logprob: -8.84334945678711
    10. ' not' → logprob: -8.96834945678711

Token 249: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4132747948169708
    2. 'n' → logprob: -1.5382747650146484
    3. ' is' → logprob: -2.2882747650146484
    4. '<|end|>' → logprob: -4.913274765014648
    5. ' est' → logprob: -5.413274765014648
    6. ' has' → logprob: -5.538274765014648
    7. ',' → logprob: -7.038274765014648
    8. 'is' → logprob: -7.038274765014648
    9. ')' → logprob: -7.038274765014648
    10. 'est' → logprob: -7.288274765014648

Token 250: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.15372419357299805
    2. 'a' → logprob: -2.278724193572998
    3. ''a' → logprob: -4.153724193572998
    4. 'est' → logprob: -4.528724193572998
    5. '’est' → logprob: -5.778724193572998
    6. ' a' → logprob: -6.028724193572998
    7. ' est' → logprob: -6.528724193572998
    8. 'n' → logprob: -6.778724193572998
    9. ' n' → logprob: -6.903724193572998
    10. 'pas' → logprob: -7.028724193572998

Token 251: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0700061246752739
    2. ' pas' → logprob: -2.6950061321258545
    3. 'not' → logprob: -10.320006370544434
    4. ' jamais' → logprob: -11.195006370544434
    5. ' not' → logprob: -12.070006370544434
    6. ' toujours' → logprob: -12.445006370544434
    7. '0' → logprob: -12.570006370544434
    8. 'jam' → logprob: -12.945006370544434
    9. 'color' → logprob: -13.320006370544434
    10. '_pas' → logprob: -13.695006370544434

Token 252: ' encore' (ID: 14043)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.028834551572799683
    2. ' color' → logprob: -3.653834581375122
    3. 'colored' → logprob: -6.778834342956543
    4. ' encore' → logprob: -7.778834342956543
    5. ' colori' → logprob: -8.278834342956543
    6. 'pas' → logprob: -8.403834342956543
    7. 'col' → logprob: -8.903834342956543
    8. '_color' → logprob: -9.278834342956543
    9. '.color' → logprob: -10.278834342956543
    10. ' colore' → logprob: -10.778834342956543

Token 253: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.016643257811665535
    2. ' color' → logprob: -4.141643047332764
    3. 'colored' → logprob: -7.891643047332764
    4. ' colori' → logprob: -9.016643524169922
    5. 'col' → logprob: -10.141643524169922
    6. 'vis' → logprob: -11.016643524169922
    7. '_color' → logprob: -11.141643524169922
    8. 'assign' → logprob: -12.266643524169922
    9. '	color' → logprob: -12.266643524169922
    10. '.color' → logprob: -12.391643524169922

Token 254: 'ié' (ID: 143445)
  Prédit: 'ié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ié' → logprob: -0.004516515880823135
    2. 'é' → logprob: -5.5045166015625
    3. 'i' → logprob: -7.7545166015625
    4. 'isé' → logprob: -13.2545166015625
    5. 'ie' → logprob: -13.5045166015625
    6. 'iable' → logprob: -13.6295166015625
    7. 'ied' → logprob: -14.1295166015625
    8. '   ' → logprob: -14.1295166015625
    9. '#' → logprob: -14.2545166015625
    10. 'ier' → logprob: -14.5045166015625

Token 255: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1692378669977188
    2. ':
' → logprob: -2.7942378520965576
    3. '               ' → logprob: -3.1692378520965576
    4. ',' → logprob: -3.5442378520965576
    5. '           ' → logprob: -4.044238090515137
    6. ':return' → logprob: -5.544238090515137
    7. '):' → logprob: -7.044238090515137
    8. '):
' → logprob: -8.169238090515137
    9. ')' → logprob: -8.169238090515137
    10. '       ' → logprob: -8.544238090515137

Token 256: ' colori' (ID: 159860)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01382707804441452
    2. 'return' → logprob: -4.763826847076416
    3. ' return' → logprob: -5.513826847076416
    4. '           ' → logprob: -6.763826847076416
    5. '              ' → logprob: -12.513827323913574
    6. '                   ' → logprob: -13.138827323913574
    7. ':return' → logprob: -13.138827323913574
    8. '                       ' → logprob: -13.888827323913574
    9. '```' → logprob: -14.013827323913574
    10. '             ' → logprob: -14.138827323913574

Token 257: 'age' (ID: 477)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.09942633658647537
    2. 'er' → logprob: -2.59942626953125
    3. 'e' → logprob: -4.09942626953125
    4. 'ed' → logprob: -6.59942626953125
    5. 'r' → logprob: -7.47442626953125
    6. '#' → logprob: -7.47442626953125
    7. '```' → logprob: -8.09942626953125
    8. 'ng' → logprob: -8.47442626953125
    9. '   ' → logprob: -9.47442626953125
    10. '
' → logprob: -9.47442626953125

Token 258: ' avec' (ID: 3937)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' False' → logprob: -1.4847873449325562
    2. '   ' → logprob: -1.7347873449325562
    3. ' éch' → logprob: -2.1097874641418457
    4. 'False' → logprob: -2.3597874641418457
    5. ' et' → logprob: -2.7347874641418457
    6. '           ' → logprob: -3.1097874641418457
    7. 'et' → logprob: -3.2347874641418457
    8. ' failed' → logprob: -3.3597874641418457
    9. 'failed' → logprob: -4.234787464141846
    10. '       ' → logprob: -4.234787464141846

Token 259: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.15526680648326874
    2. '-l' → logprob: -2.655266761779785
    3. 'la' → logprob: -3.030266761779785
    4. ' l' → logprob: -4.405266761779785
    5. '-' → logprob: -5.280266761779785
    6. ' la' → logprob: -5.780266761779785
    7. '-la' → logprob: -6.405266761779785
    8. 'une' → logprob: -7.030266761779785
    9. 'le' → logprob: -7.280266761779785
    10. '-c' → logprob: -8.155266761779785

Token 260: ' couleur' (ID: 48005)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -1.0023237466812134
    2. 'm' → logprob: -1.1273237466812134
    3. 'op' → logprob: -1.6273237466812134
    4. 'color' → logprob: -2.877323627471924
    5. ' couleur' → logprob: -4.002323627471924
    6. 'aut' → logprob: -4.002323627471924
    7. ' même' → logprob: -5.127323627471924
    8. 'suite' → logprob: -6.127323627471924
    9. 'not' → logprob: -6.252323627471924
    10. ' oppos' → logprob: -7.127323627471924

Token 261: ' oppos' (ID: 20679)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.1759635955095291
    2. ' oppos' → logprob: -2.0509636402130127
    3. 'inverse' → logprob: -4.550963401794434
    4. 'opp' → logprob: -4.675963401794434
    5. 'altern' → logprob: -4.925963401794434
    6. 'alternative' → logprob: -6.675963401794434
    7. '   ' → logprob: -7.300963401794434
    8. ' inverse' → logprob: -7.300963401794434
    9. ' op' → logprob: -7.550963401794434
    10. ' opp' → logprob: -7.800963401794434

Token 262: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00047630956396460533
    2. 'é' → logprob: -8.000475883483887
    3. '-' → logprob: -9.750475883483887
    4. 'ee' → logprob: -10.000475883483887
    5. '   ' → logprob: -11.750475883483887
    6. '-é' → logprob: -12.125475883483887
    7. 'lée' → logprob: -12.500475883483887
    8. 'e' → logprob: -13.000475883483887
    9. 'éd' → logprob: -13.125475883483887
    10. 'rée' → logprob: -13.250475883483887

Token 263: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015789281576871872
    2. '               ' → logprob: -5.26578950881958
    3. ':' → logprob: -5.76578950881958
    4. ' return' → logprob: -6.26578950881958
    5. 'return' → logprob: -6.39078950881958
    6. '.' → logprob: -6.64078950881958
    7. ',' → logprob: -7.26578950881958
    8. ':return' → logprob: -7.51578950881958
    9. ')' → logprob: -7.89078950881958
    10. '       ' → logprob: -8.765789031982422

Token 264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4747106432914734
    2. '               ' → logprob: -0.9747106432914734
    3. 'return' → logprob: -8.474710464477539
    4. ' return' → logprob: -8.724710464477539
    5. ':' → logprob: -9.224710464477539
    6. '       ' → logprob: -10.474710464477539
    7. ':return' → logprob: -10.474710464477539
    8. ',' → logprob: -11.099710464477539
    9. '                   ' → logprob: -11.099710464477539
    10. '              ' → logprob: -11.224710464477539

Token 265: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004297776613384485
    2. ' return' → logprob: -5.504297733306885
    3. '               ' → logprob: -9.004298210144043
    4. '           ' → logprob: -9.254298210144043
    5. ':return' → logprob: -15.504298210144043
    6. '	return' → logprob: -16.004297256469727
    7. '
' → logprob: -16.004297256469727
    8. '                   ' → logprob: -16.254297256469727
    9. '{return' → logprob: -16.629297256469727
    10. '```' → logprob: -17.129297256469727

Token 266: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023651303723454475
    2. '           ' → logprob: -4.523651123046875
    3. ' return' → logprob: -4.523651123046875
    4. '               ' → logprob: -6.398651123046875
    5. '       ' → logprob: -12.773651123046875
    6. '```' → logprob: -12.898651123046875
    7. '                   ' → logprob: -13.273651123046875
    8. '	return' → logprob: -13.898651123046875
    9. ':return' → logprob: -14.148651123046875
    10. '{return' → logprob: -14.273651123046875

Token 267: ' un' (ID: 537)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.523169994354248
    2. ' not' → logprob: -0.898169994354248
    3. 'False' → logprob: -11.148170471191406
    4. 'pas' → logprob: -11.898170471191406
    5. 'dfs' → logprob: -12.398170471191406
    6. '
' → logprob: -12.523170471191406
    7. '```' → logprob: -12.523170471191406
    8. ' ' → logprob: -13.148170471191406
    9. ' pas' → logprob: -13.398170471191406
    10. ' False' → logprob: -13.398170471191406

Token 268: ' conflit' (ID: 144504)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.706517219543457
    2. ' conflit' → logprob: -0.956517219543457
    3. ' problème' → logprob: -2.706517219543457
    4. 'pro' → logprob: -4.331517219543457
    5. 'dfs' → logprob: -4.456517219543457
    6. 'appel' → logprob: -4.706517219543457
    7. ' appel' → logprob: -5.706517219543457
    8. ' passage' → logprob: -6.206517219543457
    9. 'proble' → logprob: -6.456517219543457
    10. ' conflict' → logprob: -6.956517219543457

Token 269: ' surv' (ID: 11507)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.20910364389419556
    2. 'sur' → logprob: -2.084103584289551
    3. ' surv' → logprob: -3.834103584289551
    4. 's' → logprob: -4.209103584289551
    5. ' est' → logprob: -4.584103584289551
    6. 'se' → logprob: -5.209103584289551
    7. 'vient' → logprob: -6.084103584289551
    8. ' apparaît' → logprob: -6.209103584289551
    9. 'detect' → logprob: -6.584103584289551
    10. 'ap' → logprob: -6.959103584289551

Token 270: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.0006398845580406487
    2. 'ent' → logprob: -7.500639915466309
    3. 'vient' → logprob: -10.250639915466309
    4. 'et' → logprob: -11.750639915466309
    5. 'enant' → logprob: -12.375639915466309
    6. 'it' → logprob: -12.375639915466309
    7. 'enue' → logprob: -12.375639915466309
    8. 'êt' → logprob: -12.500639915466309
    9. 'int' → logprob: -12.625639915466309
    10. 'iennent' → logprob: -12.750639915466309

Token 271: ' plus' (ID: 2932)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1172214150428772
    2. '           ' → logprob: -2.4922213554382324
    3. '               ' → logprob: -4.492221355438232
    4. ':' → logprob: -4.492221355438232
    5. 'return' → logprob: -6.242221355438232
    6. ':
' → logprob: -6.617221355438232
    7. ':return' → logprob: -6.992221355438232
    8. ' return' → logprob: -7.367221355438232
    9. ' ,' → logprob: -8.11722183227539
    10. ' lors' → logprob: -9.11722183227539

Token 272: ' loin' (ID: 40875)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.22211794555187225
    2. 'loin' → logprob: -1.7221179008483887
    3. ' tard' → logprob: -5.347117900848389
    4. '   ' → logprob: -5.597117900848389
    5. 'bas' → logprob: -5.722117900848389
    6. '```' → logprob: -6.222117900848389
    7. 'lo' → logprob: -6.597117900848389
    8. 'avant' → logprob: -6.597117900848389
    9. 'late' → logprob: -6.972117900848389
    10. 'l' → logprob: -7.222117900848389

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02048536017537117
    2. '           ' → logprob: -4.2704854011535645
    3. '               ' → logprob: -5.2704854011535645
    4. 'return' → logprob: -7.5204854011535645
    5. ' return' → logprob: -8.395484924316406
    6. ':' → logprob: -9.270484924316406
    7. ' ,' → logprob: -9.895484924316406
    8. ':
' → logprob: -9.895484924316406
    9. 'dans' → logprob: -10.020484924316406
    10. '                   ' → logprob: -10.145484924316406

Token 274: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15244507789611816
    2. ' return' → logprob: -2.527445077896118
    3. '               ' → logprob: -2.902445077896118
    4. '           ' → logprob: -5.027444839477539
    5. '                   ' → logprob: -11.027444839477539
    6. ':return' → logprob: -11.277444839477539
    7. '	return' → logprob: -11.402444839477539
    8. ' retour' → logprob: -11.902444839477539
    9. ' retourner' → logprob: -11.902444839477539
    10. 'ret' → logprob: -12.152444839477539

Token 275: ' immédiatement' (ID: 100743)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0004306692280806601
    2. ' False' → logprob: -7.750430583953857
    3. '(False' → logprob: -17.375431060791016
    4. '```' → logprob: -17.625431060791016
    5. '=False' → logprob: -17.750431060791016
    6. '   ' → logprob: -18.250431060791016
    7. '_false' → logprob: -18.875431060791016
    8. '.False' → logprob: -18.875431060791016
    9. 'false' → logprob: -19.875431060791016
    10. 'True' → logprob: -20.375431060791016

Token 276: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0005530327325686812
    2. ' False' → logprob: -7.500553131103516
    3. '   ' → logprob: -18.375553131103516
    4. '(False' → logprob: -18.875553131103516
    5. 'false' → logprob: -19.000553131103516
    6. '=False' → logprob: -19.500553131103516
    7. 'True' → logprob: -19.875553131103516
    8. '```' → logprob: -20.625553131103516
    9. '_false' → logprob: -21.125553131103516
    10. '.False' → logprob: -21.875553131103516

Token 277: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5248954892158508
    2. '               ' → logprob: -0.8998954892158508
    3. ':' → logprob: -7.524895668029785
    4. ':return' → logprob: -7.774895668029785
    5. 'return' → logprob: -7.899895668029785
    6. ' return' → logprob: -8.774895668029785
    7. ':
' → logprob: -9.149895668029785
    8. '       ' → logprob: -9.649895668029785
    9. '                   ' → logprob: -9.774895668029785
    10. '                       ' → logprob: -11.399895668029785

Token 278: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6330904364585876
    2. '               ' → logprob: -0.7580904364585876
    3. '       ' → logprob: -8.508090019226074
    4. ' return' → logprob: -9.133090019226074
    5. 'return' → logprob: -9.133090019226074
    6. '```' → logprob: -10.508090019226074
    7. '                   ' → logprob: -11.133090019226074
    8. '<|end|>' → logprob: -11.508090019226074
    9. ':return' → logprob: -12.133090019226074
    10. '                       ' → logprob: -12.633090019226074

Token 279: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.017383236438035965
    2. '               ' → logprob: -4.517383098602295
    3. ' return' → logprob: -5.267383098602295
    4. '           ' → logprob: -6.767383098602295
    5. '       ' → logprob: -12.892383575439453
    6. '                   ' → logprob: -13.642383575439453
    7. '	return' → logprob: -13.642383575439453
    8. '   ' → logprob: -13.892383575439453
    9. ':return' → logprob: -14.642383575439453
    10. '                       ' → logprob: -14.767383575439453

Token 280: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0206720617134124e-05
    2. ' False' → logprob: -11.50001049041748
    3. 'True' → logprob: -20.750009536743164
    4. '(False' → logprob: -20.875009536743164
    5. 'false' → logprob: -21.000009536743164
    6. 'F' → logprob: -21.875009536743164
    7. '_false' → logprob: -21.875009536743164
    8. '=False' → logprob: -22.500009536743164
    9. '.False' → logprob: -24.250009536743164
    10. 'Fal' → logprob: -24.875009536743164

Token 281: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005622077151201665
    2. 'return' → logprob: -8.12556266784668
    3. ' return' → logprob: -9.00056266784668
    4. '	return' → logprob: -10.12556266784668
    5. '    
' → logprob: -10.37556266784668
    6. '       ' → logprob: -10.75056266784668
    7. '<|end|>' → logprob: -10.87556266784668
    8. '  ' → logprob: -12.12556266784668
    9. '.' → logprob: -12.37556266784668
    10. '
' → logprob: -12.50056266784668

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.017927029868588e-05
    2. 'return' → logprob: -10.125080108642578
    3. ' return' → logprob: -11.125080108642578
    4. '    
' → logprob: -11.250080108642578
    5. '       ' → logprob: -12.250080108642578
    6. '<|end|>' → logprob: -13.125080108642578
    7. '	return' → logprob: -13.875080108642578
    8. '  
' → logprob: -14.125080108642578
    9. '
' → logprob: -14.125080108642578
    10. ')' → logprob: -14.250080108642578

Token 283: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14549626410007477
    2. '   ' → logprob: -2.020496368408203
    3. 'True' → logprob: -6.395496368408203
    4. ' return' → logprob: -7.145496368408203
    5. '	return' → logprob: -8.645496368408203
    6. '```' → logprob: -10.145496368408203
    7. 'true' → logprob: -10.520496368408203
    8. '    
' → logprob: -10.895496368408203
    9. ' ' → logprob: -11.020496368408203
    10. '  ' → logprob: -11.020496368408203

Token 284: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015023599844425917
    2. ' True' → logprob: -6.501502513885498
    3. '(True' → logprob: -19.376502990722656
    4. '=True' → logprob: -21.626502990722656
    5. 'true' → logprob: -21.626502990722656
    6. 'Tr' → logprob: -22.251502990722656
    7. '   ' → logprob: -22.501502990722656
    8. 'TRUE' → logprob: -23.376502990722656
    9. 'False' → logprob: -23.501502990722656
    10. '.True' → logprob: -23.751502990722656

Token 285: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: ' Aucun' (ID: 199365)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: ' conflit' (ID: 144504)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.006935355253517628
    2. ' conflit' → logprob: -5.006935119628906
    3. 'conf' → logprob: -9.131935119628906
    4. '_con' → logprob: -9.881935119628906
    5. 'pro' → logprob: -10.381935119628906
    6. ' problème' → logprob: -11.131935119628906
    7. 'proble' → logprob: -12.256935119628906
    8. ' conflits' → logprob: -13.131935119628906
    9. 'contr' → logprob: -13.506935119628906
    10. '```' → logprob: -14.006935119628906

Token 289: ' détect' (ID: 118715)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0010012515122070909
    2. 'ée' → logprob: -7.751001358032227
    3. 'ected' → logprob: -8.001001358032227
    4. 'e' → logprob: -9.001001358032227
    5. 'ed' → logprob: -9.126001358032227
    6. 'er' → logprob: -13.751001358032227
    7. 'è' → logprob: -14.376001358032227
    8. 'ect' → logprob: -14.876001358032227
    9. '&eacute' → logprob: -16.001001358032227
    10. 'É' → logprob: -16.251001358032227

Token 291: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' la' (ID: 557)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.13404397666454315
    2. 'return' → logprob: -2.1340439319610596
    3. ' True' → logprob: -5.009044170379639
    4. 'continue' → logprob: -8.63404369354248
    5. ' return' → logprob: -8.88404369354248
    6. '   ' → logprob: -10.63404369354248
    7. '```' → logprob: -11.38404369354248
    8. 'contin' → logprob: -11.50904369354248
    9. '<|end|>' → logprob: -11.50904369354248
    10. 'def' → logprob: -11.75904369354248

Token 293: ' sous' (ID: 14487)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.11795254051685333
    2. ' fonction' → logprob: -3.617952585220337
    3. 'gr' → logprob: -3.867952585220337
    4. ' couleur' → logprob: -4.117952346801758
    5. 'graph' → logprob: -4.117952346801758
    6. 'def' → logprob: -4.367952346801758
    7. 'cou' → logprob: -5.742952346801758
    8. 'color' → logprob: -5.992952346801758
    9. 'function' → logprob: -6.117952346801758
    10. 'dé' → logprob: -6.242952346801758

Token 294: '-com' (ID: 18251)
  Prédit: '-part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-part' → logprob: -0.48245474696159363
    2. '   ' → logprob: -2.482454776763916
    3. 'part' → logprob: -2.607454776763916
    4. 'graph' → logprob: -2.857454776763916
    5. 'gr' → logprob: -2.982454776763916
    6. ' partie' → logprob: -3.357454776763916
    7. '-' → logprob: -3.607454776763916
    8. '_part' → logprob: -4.107454776763916
    9. '-gr' → logprob: -4.107454776763916
    10. '_gr' → logprob: -4.482454776763916

Token 295: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.017098743468523026
    2. 'ponent' → logprob: -4.267098903656006
    3. 'p' → logprob: -6.392098903656006
    4. 'ponente' → logprob: -8.017098426818848
    5. '-' → logprob: -8.142098426818848
    6. 'pon' → logprob: -9.017098426818848
    7. 'position' → logprob: -9.017098426818848
    8. 'ante' → logprob: -9.767098426818848
    9. 'part' → logprob: -10.142098426818848
    10. '_pos' → logprob: -10.517098426818848

Token 296: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.00010616567305987701
    2. 'ant' → logprob: -9.625105857849121
    3. 'nte' → logprob: -11.250105857849121
    4. 's' → logprob: -11.375105857849121
    5. 'antes' → logprob: -12.875105857849121
    6. 'anten' → logprob: -13.250105857849121
    7. '#' → logprob: -13.500105857849121
    8. '
' → logprob: -13.625105857849121
    9. 'nante' → logprob: -14.000105857849121
    10. '-' → logprob: -14.250105857849121

Token 297: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.4642339050769806
    2. ' est' → logprob: -1.0892338752746582
    3. 'graph' → logprob: -4.089233875274658
    4. 'du' → logprob: -4.714233875274658
    5. 'b' → logprob: -5.464233875274658
    6. ' du' → logprob: -5.839233875274658
    7. ' graph' → logprob: -7.214233875274658
    8. 'gr' → logprob: -8.589234352111816
    9. '#' → logprob: -9.339234352111816
    10. ' bip' → logprob: -9.339234352111816

Token 298: ' bip' (ID: 54467)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0014138080878183246
    2. 'bien' → logprob: -7.251413822174072
    3. 'bi' → logprob: -7.501413822174072
    4. ' bip' → logprob: -9.626413345336914
    5. '   ' → logprob: -10.126413345336914
    6. 'part' → logprob: -12.376413345336914
    7. '```' → logprob: -12.751413345336914
    8. 'bic' → logprob: -12.876413345336914
    9. '
' → logprob: -13.126413345336914
    10. '#' → logprob: -13.126413345336914

Token 299: 'art' (ID: 497)
  Prédit: 'arti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arti' → logprob: -0.2029288113117218
    2. 'art' → logprob: -1.7029287815093994
    3. 'arte' → logprob: -7.0779290199279785
    4. 'ar' → logprob: -7.4529290199279785
    5. 'arto' → logprob: -9.57792854309082
    6. 'ari' → logprob: -12.32792854309082
    7. 'арт' → logprob: -12.57792854309082
    8. 'arty' → logprob: -12.95292854309082
    9. 'arta' → logprob: -13.70292854309082
    10. 'arts' → logprob: -13.82792854309082

Token 300: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.8461929559707642
    2. 'ite' → logprob: -0.8461929559707642
    3. 'e' → logprob: -1.9711929559707642
    4. 'i' → logprob: -6.221192836761475
    5. 'ed' → logprob: -8.221193313598633
    6. 'it' → logprob: -10.096193313598633
    7. ' ie' → logprob: -10.346193313598633
    8. 'te' → logprob: -10.721193313598633
    9. '```' → logprob: -10.846193313598633
    10. '#' → logprob: -10.908693313598633

Token 301: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 302: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0037134999874979258
    2. 'def' → logprob: -6.253713607788086
    3. 'N' → logprob: -6.878713607788086
    4. 'import' → logprob: -7.753713607788086
    5. '#' → logprob: -8.878713607788086
    6. 'if' → logprob: -9.378713607788086
    7. '```' → logprob: -10.378713607788086
    8. '    
' → logprob: -11.128713607788086
    9. 'v' → logprob: -11.253713607788086
    10. 'V' → logprob: -11.253713607788086

Token 303: ' Wash' (ID: 10529)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.43889954686164856
    2. ' main' → logprob: -1.0638995170593262
    3. 'solve' → logprob: -4.813899517059326
    4. ' solve' → logprob: -6.938899517059326
    5. 'is' → logprob: -7.813899517059326
    6. 'b' → logprob: -8.063899993896484
    7. ' is' → logprob: -8.438899993896484
    8. 'check' → logprob: -9.938899993896484
    9. ' bip' → logprob: -10.688899993896484
    10. ' check' → logprob: -11.063899993896484

Token 304: 'all' (ID: 586)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.591246485710144
    2. 'h' → logprob: -1.091246485710144
    3. 'ing' → logprob: -3.9662466049194336
    4. 'ash' → logprob: -4.091246604919434
    5. 'hing' → logprob: -4.216246604919434
    6. 'ed' → logprob: -4.341246604919434
    7. 'out' → logprob: -4.966246604919434
    8. 'er' → logprob: -5.591246604919434
    9. 'graph' → logprob: -5.716246604919434
    10. 'Wash' → logprob: -5.966246604919434

Token 305: '_F' (ID: 2729)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.23270080983638763
    2. 'l' → logprob: -3.107700824737549
    3. '-F' → logprob: -3.607700824737549
    4. 'ar' → logprob: -3.732700824737549
    5. '()' → logprob: -3.982700824737549
    6. '_F' → logprob: -3.982700824737549
    7. '```' → logprob: -4.857700824737549
    8. '--' → logprob: -5.107700824737549
    9. 'f' → logprob: -5.232700824737549
    10. '_f' → logprob: -5.482700824737549

Token 306: 'loyd' (ID: 58664)
  Prédit: 'loyd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loyd' → logprob: -0.001695772516541183
    2. 'lo' → logprob: -7.37669563293457
    3. 'loid' → logprob: -7.37669563293457
    4. 'l' → logprob: -7.87669563293457
    5. 'lord' → logprob: -10.50169563293457
    6. 'ol' → logprob: -12.12669563293457
    7. 'll' → logprob: -12.12669563293457
    8. 'W' → logprob: -12.25169563293457
    9. 'ord' → logprob: -13.12669563293457
    10. 'LOY' → logprob: -13.25169563293457

Token 307: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09369441866874695
    2. '()' → logprob: -2.8436944484710693
    3. '_' → logprob: -3.9686944484710693
    4. 'War' → logprob: -5.21869421005249
    5. '(W' → logprob: -6.96869421005249
    6. '-' → logprob: -7.59369421005249
    7. '```' → logprob: -7.71869421005249
    8. '(_)' → logprob: -7.71869421005249
    9. '_W' → logprob: -7.84369421005249
    10. '(K' → logprob: -7.96869421005249

Token 308: '):
' (ID: 1883)
  Prédit: 'ijkstra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.7950814962387085
    2. 'ist' → logprob: -1.5450814962387085
    3. '(i' → logprob: -2.420081615447998
    4. 'i' → logprob: -2.545081615447998
    5. 'istance' → logprob: -3.420081615447998
    6. ')' → logprob: -3.795081615447998
    7. 'W' → logprob: -4.295081615447998
    8. 'is' → logprob: -4.795081615447998
    9. '()' → logprob: -4.920081615447998
    10. 'ij' → logprob: -5.295081615447998

Token 309: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01859995536506176
    2. '(' → logprob: -4.268599987030029
    3. ':' → logprob: -6.143599987030029
    4. '(i' → logprob: -7.268599987030029
    5. '(d' → logprob: -8.018599510192871
    6. '():' → logprob: -8.143599510192871
    7. '(N' → logprob: -8.643599510192871
    8. ' (' → logprob: -9.143599510192871
    9. '(len' → logprob: -9.393599510192871
    10. '(a' → logprob: -9.643599510192871

Token 310: ' """
' (ID: 7037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4755893647670746
    2. '   ' → logprob: -0.975589394569397
    3. 'for' → logprob: -6.975589275360107
    4. ' n' → logprob: -8.100589752197266
    5. 'V' → logprob: -8.975589752197266
    6. '	n' → logprob: -10.100589752197266
    7. '  ' → logprob: -10.725589752197266
    8. 'N' → logprob: -10.725589752197266
    9. ' ' → logprob: -10.975589752197266
    10. '```' → logprob: -11.475589752197266

Token 311: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7483641505241394
    2. '   ' → logprob: -0.9983641505241394
    3. ' n' → logprob: -1.8733642101287842
    4. ' for' → logprob: -5.873363971710205
    5. 'for' → logprob: -6.498363971710205
    6. '  ' → logprob: -8.748364448547363
    7. '    ' → logprob: -9.248364448547363
    8. ' ' → logprob: -9.498364448547363
    9. '	n' → logprob: -9.873364448547363
    10. '"""
' → logprob: -10.748364448547363

Token 312: ' Ap' (ID: 6537)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2253695726394653
    2. 'def' → logprob: -1.3503695726394653
    3. '   ' → logprob: -1.9753695726394653
    4. 'for' → logprob: -2.350369453430176
    5. ' for' → logprob: -2.475369453430176
    6. '#' → logprob: -3.100369453430176
    7. ' n' → logprob: -3.850369453430176
    8. ' """' → logprob: -4.225369453430176
    9. '"""' → logprob: -4.725369453430176
    10. ' def' → logprob: -4.850369453430176

Token 313: 'plique' (ID: 71193)
  Prédit: 'plique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plique' → logprob: -0.797692060470581
    2. 'pl' → logprob: -1.797692060470581
    3. 'ply' → logprob: -1.922692060470581
    4. 'prox' → logprob: -2.422692060470581
    5. 'pliquer' → logprob: -2.797692060470581
    6. 'pr' → logprob: -3.547692060470581
    7. 'p' → logprob: -3.797692060470581
    8. 'pli' → logprob: -4.42269229888916
    9. 'plic' → logprob: -4.92269229888916
    10. 'porte' → logprob: -5.54769229888916

Token 314: ' l' (ID: 305)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.985196053981781
    2. 'n' → logprob: -1.6101961135864258
    3. ' la' → logprob: -1.9851961135864258
    4. 'for' → logprob: -2.110196113586426
    5. '   ' → logprob: -2.360196113586426
    6. 'def' → logprob: -3.235196113586426
    7. ' n' → logprob: -4.235196113586426
    8. ' le' → logprob: -4.485196113586426
    9. 'le' → logprob: -6.235196113586426
    10. '"""
' → logprob: -6.610196113586426

Token 315: ''' (ID: 6)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21668048202991486
    2. 'e' → logprob: -3.3416805267333984
    3. '"""' → logprob: -3.5916805267333984
    4. 'a' → logprob: -3.8416805267333984
    5. '   ' → logprob: -4.091680526733398
    6. ' def' → logprob: -4.091680526733398
    7. '"""
' → logprob: -4.841680526733398
    8. '```' → logprob: -4.841680526733398
    9. ' """
' → logprob: -4.966680526733398
    10. 'r' → logprob: -5.216680526733398

Token 316: 'alg' (ID: 15258)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06958366930484772
    2. ' for' → logprob: -3.3195836544036865
    3. 'alg' → logprob: -4.569583892822266
    4. 'import' → logprob: -5.069583892822266
    5. '"""
' → logprob: -5.194583892822266
    6. 'def' → logprob: -5.819583892822266
    7. '   ' → logprob: -5.819583892822266
    8. 'algo' → logprob: -7.569583892822266
    9. '"""' → logprob: -7.694583892822266
    10. 'algorithm' → logprob: -7.819583892822266

Token 317: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.04258059337735176
    2. 'or' → logprob: -3.4175806045532227
    3. 'orithm' → logprob: -4.917580604553223
    4. 'o' → logprob: -6.792580604553223
    5. 'orit' → logprob: -8.542580604553223
    6. '```' → logprob: -10.167580604553223
    7. '
' → logprob: -10.292580604553223
    8. 'ort' → logprob: -10.417580604553223
    9. 'orique' → logprob: -10.917580604553223
    10. 'ory' → logprob: -11.042580604553223

Token 318: 'me' (ID: 1047)
  Prédit: 'orith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.3346688449382782
    2. 'me' → logprob: -1.8346688747406006
    3. 'or' → logprob: -2.2096688747406006
    4. 'orit' → logprob: -6.0846686363220215
    5. 'orth' → logprob: -6.2096686363220215
    6. 'r' → logprob: -6.3346686363220215
    7. 't' → logprob: -6.8346686363220215
    8. 'ort' → logprob: -6.9596686363220215
    9. 'm' → logprob: -7.0846686363220215
    10. 'def' → logprob: -7.0846686363220215

Token 319: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2882276177406311
    2. 'de' → logprob: -1.4132275581359863
    3. 'F' → logprob: -5.538227558135986
    4. 'def' → logprob: -6.663227558135986
    5. '   ' → logprob: -6.788227558135986
    6. ' Floyd' → logprob: -7.538227558135986
    7. 'f' → logprob: -9.413228034973145
    8. '_f' → logprob: -11.163228034973145
    9. ' flo' → logprob: -11.288228034973145
    10. '  ' → logprob: -11.413228034973145

Token 320: ' Floyd' (ID: 76639)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0020885197445750237
    2. 'War' → logprob: -6.25208854675293
    3. 'Flo' → logprob: -9.00208854675293
    4. 'f' → logprob: -11.25208854675293
    5. '```' → logprob: -11.87708854675293
    6. '   ' → logprob: -12.37708854675293
    7. ' Floyd' → logprob: -12.37708854675293
    8. '
' → logprob: -13.12708854675293
    9. '_F' → logprob: -14.25208854675293
    10. 'Fl' → logprob: -14.25208854675293

Token 321: '-W' (ID: 14439)
  Prédit: '-W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-W' → logprob: -0.10046566277742386
    2. 'War' → logprob: -2.350465774536133
    3. '–' → logprob: -8.975465774536133
    4. '_W' → logprob: -10.100465774536133
    5. '-war' → logprob: -10.100465774536133
    6. 'W' → logprob: -11.225465774536133
    7. '-' → logprob: -11.725465774536133
    8. ' War' → logprob: -11.725465774536133
    9. 'Wars' → logprob: -11.725465774536133
    10. 'war' → logprob: -12.600465774536133

Token 322: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0005968777113594115
    2. 'arshal' → logprob: -7.50059700012207
    3. '```' → logprob: -11.37559700012207
    4. 'arle' → logprob: -11.50059700012207
    5. 'ars' → logprob: -12.37559700012207
    6. '–' → logprob: -12.75059700012207
    7. 'r' → logprob: -13.00059700012207
    8. '-' → logprob: -13.00059700012207
    9. 'arst' → logprob: -13.50059700012207
    10. '}' → logprob: -13.50059700012207

Token 323: 'shall' (ID: 30275)
  Prédit: 'shall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shall' → logprob: -4.5491004129871726e-05
    2. 'sh' → logprob: -10.750045776367188
    3. '```' → logprob: -11.500045776367188
    4. 'shal' → logprob: -11.875045776367188
    5. 'shell' → logprob: -13.125045776367188
    6. '``' → logprob: -14.000045776367188
    7. 'ar' → logprob: -14.375045776367188
    8. 'll' → logprob: -14.500045776367188
    9. 's' → logprob: -14.750045776367188
    10. ' shall' → logprob: -15.500045776367188

Token 324: ' pour' (ID: 1930)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.03340119495987892
    2. '   ' → logprob: -4.408401012420654
    3. ' (' → logprob: -5.158401012420654
    4. ' pour' → logprob: -5.283401012420654
    5. ' for' → logprob: -5.908401012420654
    6. '(dist' → logprob: -5.908401012420654
    7. '(n' → logprob: -6.783401012420654
    8. '(distance' → logprob: -7.408401012420654
    9. '(' → logprob: -7.658401012420654
    10. '(matrix' → logprob: -7.783401012420654

Token 325: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -1.1205517053604126
    2. '   ' → logprob: -1.4955517053604126
    3. ' n' → logprob: -1.8705517053604126
    4. 'n' → logprob: -2.120551586151123
    5. ' la' → logprob: -2.995551586151123
    6. ' trouver' → logprob: -3.245551586151123
    7. ' mettre' → logprob: -4.120551586151123
    8. ' for' → logprob: -4.495551586151123
    9. ' ' → logprob: -4.620551586151123
    10. 'for' → logprob: -4.620551586151123

Token 326: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0033434750512242317
    2. 'ler' → logprob: -6.25334358215332
    3. 'ter' → logprob: -7.62834358215332
    4. 'l' → logprob: -7.62834358215332
    5. '#' → logprob: -9.00334358215332
    6. 'rer' → logprob: -9.25334358215332
    7. 'e' → logprob: -10.50334358215332
    8. 'r' → logprob: -10.75334358215332
    9. '```' → logprob: -10.75334358215332
    10. '
' → logprob: -11.25334358215332

Token 327: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.2957664132118225
    2. ' les' → logprob: -1.6707663536071777
    3. ' la' → logprob: -3.0457663536071777
    4. 'la' → logprob: -4.670766353607178
    5. ' toutes' → logprob: -5.420766353607178
    6. 't' → logprob: -5.795766353607178
    7. ' ' → logprob: -7.045766353607178
    8. 's' → logprob: -7.420766353607178
    9. '   ' → logprob: -7.670766353607178
    10. 'Les' → logprob: -8.295766830444336

Token 328: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.2856375277042389
    2. 'plus' → logprob: -1.7856374979019165
    3. ' distances' → logprob: -2.535637617111206
    4. 'dist' → logprob: -7.785637378692627
    5. ' shortest' → logprob: -8.535637855529785
    6. 'distance' → logprob: -8.660637855529785
    7. 'Plus' → logprob: -9.160637855529785
    8. '+' → logprob: -9.410637855529785
    9. 'n' → logprob: -9.660637855529785
    10. '-plus' → logprob: -9.785637855529785

Token 329: ' courts' (ID: 33374)
  Prédit: 'cour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cour' → logprob: -0.07511315494775772
    2. 'court' → logprob: -3.07511305809021
    3. '-' → logprob: -5.075113296508789
    4. 'short' → logprob: -5.075113296508789
    5. '```' → logprob: -5.325113296508789
    6. 'for' → logprob: -5.700113296508789
    7. 'long' → logprob: -6.450113296508789
    8. 'dist' → logprob: -7.075113296508789
    9. ' courts' → logprob: -8.325113296508789
    10. ' ' → logprob: -8.325113296508789

Token 330: ' chemins' (ID: 192063)
  Prédit: ' chemins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chemins' → logprob: -0.04428550601005554
    2. ' distances' → logprob: -4.169285297393799
    3. '_che' → logprob: -4.544285297393799
    4. ' chemin' → logprob: -5.044285297393799
    5. ' paths' → logprob: -5.294285297393799
    6. '_' → logprob: -6.544285297393799
    7. '_paths' → logprob: -6.544285297393799
    8. 'che' → logprob: -6.669285297393799
    9. 'paths' → logprob: -7.169285297393799
    10. '_path' → logprob: -8.794285774230957

Token 331: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.855032742023468
    2. '(dist' → logprob: -1.1050326824188232
    3. '(d' → logprob: -2.3550326824188232
    4. ' entre' → logprob: -2.3550326824188232
    5. ' (' → logprob: -3.6050326824188232
    6. '(de' → logprob: -5.605032920837402
    7. '(distance' → logprob: -5.980032920837402
    8. ' ' → logprob: -6.105032920837402
    9. 'dist' → logprob: -6.355032920837402
    10. ' des' → logprob: -6.480032920837402

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5701242685317993
    2. ' entre' → logprob: -0.9451242685317993
    3. ')' → logprob: -4.82012414932251
    4. ' between' → logprob: -4.82012414932251
    5. '(' → logprob: -5.44512414932251
    6. ' ' → logprob: -5.44512414932251
    7. '  ' → logprob: -5.57012414932251
    8. ' (' → logprob: -5.57012414932251
    9. 'def' → logprob: -6.44512414932251
    10. 'entre' → logprob: -6.82012414932251

Token 333: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.04231129586696625
    2. 'entre' (adapté à ' entre') → logprob: -4.167311191558838
    3. ' dans' → logprob: -4.542311191558838
    4. '   ' → logprob: -5.042311191558838
    5. ' between' → logprob: -5.792311191558838
    6. ' ' → logprob: -6.792311191558838
    7. ' pour' → logprob: -6.792311191558838
    8. '"""
' → logprob: -7.542311191558838
    9. ' possibles' → logprob: -7.667311191558838
    10. 'dans' → logprob: -7.667311191558838

Token 334: ' toutes' (ID: 17502)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.005928678438067436
    2. ' tous' → logprob: -5.2559285163879395
    3. ' toutes' → logprob: -8.130928993225098
    4. 'tout' → logprob: -8.380928993225098
    5. 's' → logprob: -10.505928993225098
    6. '_t' → logprob: -10.630928993225098
    7. 'all' → logprob: -10.880928993225098
    8. '```' → logprob: -11.005928993225098
    9. 'Toutes' → logprob: -11.130928993225098
    10. 'Tous' → logprob: -11.505928993225098

Token 335: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4337109923362732
    2. 'les' → logprob: -1.058711051940918
    3. ' pairs' → logprob: -5.433711051940918
    4. 'pairs' → logprob: -8.933711051940918
    5. ' ' → logprob: -9.058711051940918
    6. ' pair' → logprob: -9.433711051940918
    7. '#' → logprob: -9.683711051940918
    8. '_pairs' → logprob: -9.683711051940918
    9. ' p' → logprob: -10.183711051940918
    10. 's' → logprob: -10.433711051940918

Token 336: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5304310917854309
    2. ' p' → logprob: -0.9054310917854309
    3. 's' → logprob: -5.655431270599365
    4. 'pairs' → logprob: -6.155431270599365
    5. 'pa' → logprob: -7.780431270599365
    6. 'cou' → logprob: -8.155430793762207
    7. ' couples' → logprob: -8.405430793762207
    8. ' pairs' → logprob: -8.905430793762207
    9. ' ' → logprob: -9.030430793762207
    10. 'pair' → logprob: -9.280430793762207

Token 337: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.0008082019630819559
    2. 'a' → logprob: -7.750808238983154
    3. 'airs' → logprob: -8.500807762145996
    4. '-' → logprob: -10.625807762145996
    5. ' a' → logprob: -10.750807762145996
    6. 'aire' → logprob: -11.125807762145996
    7. 'ar' → logprob: -11.250807762145996
    8. 'ai' → logprob: -11.250807762145996
    9. 'air' → logprob: -11.750807762145996
    10. ' p' → logprob: -12.000807762145996

Token 338: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7651152610778809
    2. ' des' → logprob: -2.015115261077881
    3. ' d' → logprob: -2.390115261077881
    4. 'd' → logprob: -2.390115261077881
    5. ' les' → logprob: -3.140115261077881
    6. ' de' → logprob: -3.140115261077881
    7. ' ' → logprob: -4.140115261077881
    8. '<|end|>' → logprob: -4.390115261077881
    9. 'des' → logprob: -4.515115261077881
    10. '    ' → logprob: -4.515115261077881

Token 339: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004889435134828091
    2. ' somm' → logprob: -6.004889488220215
    3. 'som' → logprob: -7.254889488220215
    4. ' noe' → logprob: -7.629889488220215
    5. 'n' → logprob: -8.129889488220215
    6. 'vertices' → logprob: -8.754889488220215
    7. ' sommet' → logprob: -9.004889488220215
    8. '```' → logprob: -9.254889488220215
    9. '#' → logprob: -9.379889488220215
    10. 'no' → logprob: -9.379889488220215

Token 340: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0011096131056547165
    2. 'mets' → logprob: -7.626109600067139
    3. 'ètes' → logprob: -8.376110076904297
    4. 'et' → logprob: -9.501110076904297
    5. 'met' → logprob: -9.876110076904297
    6. 'ètres' → logprob: -9.876110076904297
    7. 'è' → logprob: -10.001110076904297
    8. 'es' → logprob: -10.376110076904297
    9. 'etes' → logprob: -10.626110076904297
    10. 'res' → logprob: -11.001110076904297

Token 341: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018944498151540756
    2. ':' → logprob: -4.393944263458252
    3. ' :' → logprob: -5.768944263458252
    4. '
' → logprob: -7.643944263458252
    5. ':
' → logprob: -7.643944263458252
    6. ' (' → logprob: -7.768944263458252
    7. ' :
' → logprob: -8.01894474029541
    8. '.' → logprob: -8.14394474029541
    9. ',' → logprob: -8.14394474029541
    10. '(d' → logprob: -8.39394474029541

Token 342: ' un' (ID: 537)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.04352135956287384
    2. 'le' → logprob: -3.4185214042663574
    3. ' un' → logprob: -4.793521404266357
    4. ' la' → logprob: -7.168521404266357
    5. ' ' → logprob: -8.2935209274292
    6. 'l' → logprob: -9.0435209274292
    7. 'un' → logprob: -9.6685209274292
    8. 'la' → logprob: -9.7935209274292
    9. ' d' → logprob: -9.9185209274292
    10. ' graph' → logprob: -10.0435209274292

Token 343: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.7757026553153992
    2. 'gr' → logprob: -0.9007026553153992
    3. 'graph' → logprob: -2.650702714920044
    4. ' graph' → logprob: -2.775702714920044
    5. '   ' → logprob: -9.650702476501465
    6. 'g' → logprob: -9.650702476501465
    7. '(gr' → logprob: -10.025702476501465
    8. 'mat' → logprob: -10.275702476501465
    9. '_gr' → logprob: -10.400702476501465
    10. '	graph' → logprob: -10.650702476501465

Token 344: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.7380469441413879
    2. 'he' → logprob: -1.3630468845367432
    3. 'rap' → logprob: -1.9880468845367432
    4. 'h' → logprob: -2.738046884536743
    5. 'raph' → logprob: -3.363046884536743
    6. 'r' → logprob: -4.238047122955322
    7. '#' → logprob: -5.488047122955322
    8. 'hé' → logprob: -5.738047122955322
    9. 'hes' → logprob: -6.113047122955322
    10. 'phe' → logprob: -6.238047122955322

Token 345: ' pond' (ID: 42367)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004614541772753
    2. '    
' → logprob: -6.629614353179932
    3. '
' → logprob: -7.129614353179932
    4. ' d' → logprob: -7.129614353179932
    5. 'def' → logprob: -7.754614353179932
    6. ' (' → logprob: -8.12961483001709
    7. ',' → logprob: -9.00461483001709
    8. '.' → logprob: -9.25461483001709
    9. '  ' → logprob: -9.25461483001709
    10. 'd' → logprob: -9.75461483001709

Token 346: 'éré' (ID: 33338)
  Prédit: 'éré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.9532001614570618
    2. 'és' → logprob: -1.953200101852417
    3. 'u' → logprob: -2.703200101852417
    4. 'es' → logprob: -2.828200101852417
    5. 'acé' → logprob: -2.828200101852417
    6. 'éné' → logprob: -3.078200101852417
    7. 'def' → logprob: -3.453200101852417
    8. 'r' → logprob: -3.578200101852417
    9. 'édé' → logprob: -4.203200340270996
    10. 'ré' → logprob: -4.203200340270996

Token 347: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015692120417952538
    2. ':' → logprob: -5.390692234039307
    3. '
' → logprob: -6.015692234039307
    4. '(n' → logprob: -6.265692234039307
    5. ' (' → logprob: -6.390692234039307
    6. '(d' → logprob: -6.765692234039307
    7. ',' → logprob: -7.390692234039307
    8. '(' → logprob: -7.515692234039307
    9. 'def' → logprob: -7.515692234039307
    10. ':
' → logprob: -7.640692234039307

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037794087547808886
    2. '
' → logprob: -5.753779411315918
    3. 'def' → logprob: -8.003779411315918
    4. '    
' → logprob: -9.128779411315918
    5. 'for' → logprob: -10.378779411315918
    6. 'n' → logprob: -10.503779411315918
    7. ' ' → logprob: -11.253779411315918
    8. '  
' → logprob: -11.378779411315918
    9. 'd' → logprob: -11.503779411315918
    10. ' for' → logprob: -11.503779411315918

Token 349: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35321304202079773
    2. 'n' → logprob: -1.2282130718231201
    3. ' n' → logprob: -5.978212833404541
    4. 'for' → logprob: -6.478212833404541
    5. '
' → logprob: -7.978212833404541
    6. ' for' → logprob: -9.2282133102417
    7. 'def' → logprob: -9.4782133102417
    8. '  ' → logprob: -9.7282133102417
    9. ' ' → logprob: -10.4782133102417
    10. '```' → logprob: -11.1032133102417

Token 350: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.545133650302887
    2. ':' → logprob: -1.4201335906982422
    3. '(d' → logprob: -2.295133590698242
    4. ':
' → logprob: -3.670133590698242
    5. '):
' → logprob: -4.295133590698242
    6. ' (' → logprob: -4.295133590698242
    7. ' :' → logprob: -4.670133590698242
    8. ' :
' → logprob: -5.420133590698242
    9. '):' → logprob: -5.795133590698242
    10. '
' → logprob: -6.045133590698242

Token 351: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001904127886518836
    2. ' d' → logprob: -7.376904010772705
    3. '       ' → logprob: -7.626904010772705
    4. 'd' → logprob: -7.751904010772705
    5. '
' → logprob: -8.126904487609863
    6. '    ' → logprob: -10.626904487609863
    7. '):
' → logprob: -10.751904487609863
    8. '(d' → logprob: -12.251904487609863
    9. '    
' → logprob: -12.501904487609863
    10. '```' → logprob: -13.251904487609863

Token 352: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.01270917896181345
    2. ' d' → logprob: -4.762709140777588
    3. 'dist' → logprob: -5.762709140777588
    4. 'distance' → logprob: -7.512709140777588
    5. 'graph' → logprob: -9.012709617614746
    6. '   ' → logprob: -9.512709617614746
    7. ' dist' → logprob: -9.512709617614746
    8. ' distances' → logprob: -10.262709617614746
    9. 'n' → logprob: -10.387709617614746
    10. 'matrix' → logprob: -10.887709617614746

Token 353: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5902457237243652
    2. '):' → logprob: -0.8402457237243652
    3. ' :' → logprob: -4.840245723724365
    4. ',' → logprob: -5.715245723724365
    5. ' (' → logprob: -6.590245723724365
    6. '):
' → logprob: -7.215245723724365
    7. ' ):' → logprob: -7.715245723724365
    8. ')' → logprob: -9.340246200561523
    9. '   ' → logprob: -10.090246200561523
    10. ' ' → logprob: -10.215246200561523

Token 354: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06005563586950302
    2. '):' → logprob: -2.935055732727051
    3. ')' → logprob: -5.560055732727051
    4. 'List' → logprob: -7.310055732727051
    5. 'int' → logprob: -7.810055732727051
    6. ' list' → logprob: -9.68505573272705
    7. '   ' → logprob: -9.81005573272705
    8. 'matrix' → logprob: -10.68505573272705
    9. ':list' → logprob: -10.81005573272705
    10. '):
' → logprob: -10.93505573272705

Token 355: ' of' (ID: 328)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13130666315555573
    2. '):
' → logprob: -2.2563066482543945
    3. ':' → logprob: -4.6313066482543945
    4. '[list' → logprob: -5.6313066482543945
    5. '[int' → logprob: -6.1313066482543945
    6. '   ' → logprob: -6.2563066482543945
    7. '[List' → logprob: -8.381306648254395
    8. ')' → logprob: -8.381306648254395
    9. ' ):' → logprob: -9.006306648254395
    10. ':list' → logprob: -9.381306648254395

Token 356: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.073596548754722e-05
    2. 'lists' → logprob: -10.12505054473877
    3. ' list' → logprob: -11.50005054473877
    4. 'int' → logprob: -15.00005054473877
    5. ' lists' → logprob: -16.000051498413086
    6. '[list' → logprob: -17.125051498413086
    7. '   ' → logprob: -17.500051498413086
    8. ')' → logprob: -17.500051498413086
    9. '(list' → logprob: -18.125051498413086
    10. '	list' → logprob: -18.500051498413086

Token 357: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.4880804419517517
    2. '):' → logprob: -0.9880804419517517
    3. ' of' → logprob: -4.3630805015563965
    4. '):
' → logprob: -7.8630805015563965
    5. 'of' → logprob: -8.613080024719238
    6. ')' → logprob: -8.863080024719238
    7. 'int' → logprob: -8.988080024719238
    8. '<int' → logprob: -9.113080024719238
    9. '   ' → logprob: -9.488080024719238
    10. '[list' → logprob: -9.738080024719238

Token 358: ' float' (ID: 4428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004499765345826745
    2. 'float' → logprob: -7.750450134277344
    3. ' int' → logprob: -11.500450134277344
    4. 'ints' → logprob: -11.750450134277344
    5. 'flo' → logprob: -13.875450134277344
    6. '[int' → logprob: -15.875450134277344
    7. '(int' → logprob: -16.625450134277344
    8. '	int' → logprob: -17.750450134277344
    9. '
' → logprob: -17.750450134277344
    10. 'inte' → logprob: -17.875450134277344

Token 359: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01053907535970211
    2. '[int' → logprob: -5.1355390548706055
    3. ')' → logprob: -6.5105390548706055
    4. ' ):' → logprob: -6.8855390548706055
    5. '):
' → logprob: -7.1355390548706055
    6. '[' → logprob: -7.2605390548706055
    7. ']):' → logprob: -7.8855390548706055
    8. '[List' → logprob: -9.635539054870605
    9. '   ' → logprob: -10.260539054870605
    10. ' )' → logprob: -10.510539054870605

Token 360: ' Mat' (ID: 9926)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8616778254508972
    2. '   ' → logprob: -1.861677885055542
    3. 'list' → logprob: -1.986677885055542
    4. 'La' → logprob: -2.486677885055542
    5. 'float' → logprob: -2.611677885055542
    6. ' La' → logprob: -2.736677885055542
    7. ' float' → logprob: -3.361677885055542
    8. ' la' → logprob: -4.861677646636963
    9. 'Distances' → logprob: -5.361677646636963
    10. 'Distance' → logprob: -5.486677646636963

Token 361: 'rice' (ID: 44478)
  Prédit: 'rices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rices' → logprob: -0.24584831297397614
    2. 'rice' → logprob: -1.620848298072815
    3. 'atrice' → logprob: -4.370848178863525
    4. 'r' → logprob: -5.995848178863525
    5. 'ric' → logprob: -7.120848178863525
    6. 'rics' → logprob: -7.620848178863525
    7. 'riz' → logprob: -7.620848178863525
    8. 'eur' → logprob: -7.745848178863525
    9. 'atrices' → logprob: -7.870848178863525
    10. 'étr' → logprob: -8.120848655700684

Token 362: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.39227399230003357
    2. '[' → logprob: -2.2672739028930664
    3. 'de' → logprob: -2.2672739028930664
    4. ' des' → logprob: -2.7672739028930664
    5. ' of' → logprob: -3.6422739028930664
    6. ')' → logprob: -4.767273902893066
    7. '   ' → logprob: -4.892273902893066
    8. '[int' → logprob: -6.142273902893066
    9. 'distance' → logprob: -6.517273902893066
    10. 'des' → logprob: -6.767273902893066

Token 363: ''ad' (ID: 36162)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.668099582195282
    2. 'dist' → logprob: -1.4180996417999268
    3. 'float' → logprob: -2.0430996417999268
    4. 'distance' → logprob: -2.6680996417999268
    5. ' float' → logprob: -4.043099403381348
    6. 'int' → logprob: -4.293099403381348
    7. ' distance' → logprob: -5.418099403381348
    8. ' la' → logprob: -5.793099403381348
    9. ')' → logprob: -6.418099403381348
    10. ' dist' → logprob: -6.668099403381348

Token 364: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.12773343920707703
    2. 'j' → logprob: -2.1277334690093994
    3. 'istance' → logprob: -8.00273323059082
    4. '[j' → logprob: -8.87773323059082
    5. 'd' → logprob: -9.12773323059082
    6. 'jec' → logprob: -9.75273323059082
    7. 'ja' → logprob: -10.12773323059082
    8. '[' → logprob: -10.50273323059082
    9. ' jac' → logprob: -10.87773323059082
    10. 'jc' → logprob: -11.37773323059082

Token 365: 'ence' (ID: 1082)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.32556208968162537
    2. 'ence' → logprob: -1.7005621194839478
    3. 'ac' → logprob: -2.450562000274658
    4. 'ences' → logprob: -6.575562000274658
    5. 'istance' → logprob: -6.825562000274658
    6. 'ec' → logprob: -6.950562000274658
    7. '#' → logprob: -7.200562000274658
    8. 'escence' → logprob: -7.450562000274658
    9. '```' → logprob: -7.450562000274658
    10. 'ance' → logprob: -7.575562000274658

Token 366: ' initial' (ID: 4871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07539498805999756
    2. '):' → logprob: -2.950395107269287
    3. ')' → logprob: -4.200395107269287
    4. '):
' → logprob: -5.450395107269287
    5. ' de' → logprob: -7.825395107269287
    6. ',' → logprob: -9.325394630432129
    7. ' des' → logprob: -9.450394630432129
    8. 'de' → logprob: -9.575394630432129
    9. '):
' → logprob: -9.950394630432129
    10. 'def' → logprob: -10.075394630432129

Token 367: 'e' (ID: 68)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4575347900390625
    2. ')' → logprob: -1.4575347900390625
    3. 'def' → logprob: -3.2075347900390625
    4. 'e' → logprob: -3.2075347900390625
    5. '):' → logprob: -3.8325347900390625
    6. '):
' → logprob: -5.0825347900390625
    7. 'ée' → logprob: -5.8325347900390625
    8. '#' → logprob: -6.0825347900390625
    9. ']' → logprob: -6.3325347900390625
    10. 'if' → logprob: -6.3325347900390625

Token 368: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3262102007865906
    2. '):' → logprob: -1.5762102603912354
    3. '):
' → logprob: -2.8262102603912354
    4. ')' → logprob: -4.451210021972656
    5. '       ' → logprob: -9.076210021972656
    6. '):
' → logprob: -9.201210021972656
    7. ' des' → logprob: -9.326210021972656
    8. ',' → logprob: -9.576210021972656
    9. ' ):' → logprob: -9.576210021972656
    10. ' de' → logprob: -9.951210021972656

Token 369: ' grap' (ID: 60955)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12210267782211304
    2. 'graph' → logprob: -3.372102737426758
    3. 'd' → logprob: -3.497102737426758
    4. ' distances' → logprob: -3.622102737426758
    5. 'distance' → logprob: -5.247102737426758
    6. 'gr' → logprob: -5.247102737426758
    7. 'po' → logprob: -5.497102737426758
    8. 'float' → logprob: -5.497102737426758
    9. 'co' → logprob: -6.497102737426758
    10. 'cout' → logprob: -7.497102737426758

Token 370: 'he' (ID: 273)
  Prédit: 'raph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raph' → logprob: -0.33179792761802673
    2. '   ' → logprob: -2.2067978382110596
    3. '       ' → logprob: -3.4567978382110596
    4. ')' → logprob: -3.4567978382110596
    5. '[' → logprob: -3.9567978382110596
    6. ']' → logprob: -4.206798076629639
    7. 'es' → logprob: -5.206798076629639
    8. 'rap' → logprob: -5.456798076629639
    9. '])' → logprob: -5.581798076629639
    10. '[[' → logprob: -5.581798076629639

Token 371: ' représentant' (ID: 136122)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3113786280155182
    2. '):' → logprob: -1.8113785982131958
    3. '):
' → logprob: -2.3113787174224854
    4. ')' → logprob: -5.311378479003906
    5. '):
' → logprob: -10.061378479003906
    6. '):

' → logprob: -12.311378479003906
    7. ' ):' → logprob: -12.561378479003906
    8. '"):' → logprob: -12.561378479003906
    9. ',' → logprob: -12.686378479003906
    10. '"):
' → logprob: -13.186378479003906

Token 372: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5159376859664917
    2. 'les' → logprob: -1.2659376859664917
    3. ' la' → logprob: -2.3909378051757812
    4. ' distances' → logprob: -3.7659378051757812
    5. 'la' → logprob: -5.890937805175781
    6. '   ' → logprob: -6.515937805175781
    7. 'dist' → logprob: -6.515937805175781
    8. 'l' → logprob: -9.015937805175781
    9. ')' → logprob: -9.390937805175781
    10. 'le' → logprob: -9.390937805175781

Token 373: ' poids' (ID: 56058)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.08077285438776016
    2. 'dist' → logprob: -2.580772876739502
    3. 'distance' → logprob: -7.455772876739502
    4. ' dist' → logprob: -7.580772876739502
    5. ' coûts' → logprob: -8.455772399902344
    6. ' ' → logprob: -8.955772399902344
    7. '   ' → logprob: -9.205772399902344
    8. ' distance' → logprob: -9.205772399902344
    9. ' poids' → logprob: -9.705772399902344
    10. ' cout' → logprob: -10.580772399902344

Token 374: ' des' (ID: 731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4335034191608429
    2. ' des' → logprob: -1.9335033893585205
    3. '):' → logprob: -2.1835033893585205
    4. '   ' → logprob: -2.8085033893585205
    5. ' )' → logprob: -3.6835033893585205
    6. '):
' → logprob: -5.4335036277771
    7. ' ):' → logprob: -6.1835036277771
    8. 'des' → logprob: -7.3085036277771
    9. ')
' → logprob: -7.8085036277771
    10. ' de' → logprob: -7.9335036277771

Token 375: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.29741188883781433
    2. ' ar' → logprob: -1.9224119186401367
    3. ' distances' → logprob: -2.7974119186401367
    4. 'dist' → logprob: -3.9224119186401367
    5. 'are' → logprob: -4.172411918640137
    6. ' arcs' → logprob: -5.047411918640137
    7. 'arest' → logprob: -5.797411918640137
    8. ' chemins' → logprob: -6.172411918640137
    9. ' are' → logprob: -6.422411918640137
    10. 'che' → logprob: -8.172411918640137

Token 376: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.09057066589593887
    2. 'cs' → logprob: -2.4655706882476807
    3. 'c' → logprob: -7.090570449829102
    4. 'ètes' → logprob: -8.465570449829102
    5. 'r' → logprob: -8.715570449829102
    6. 'tes' → logprob: -8.965570449829102
    7. 'êts' → logprob: -9.715570449829102
    8. 'ê' → logprob: -9.715570449829102
    9. '^' → logprob: -10.590570449829102
    10. '```' → logprob: -10.965570449829102

Token 377: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.449184775352478
    2. '):' → logprob: -1.199184775352478
    3. '):
' → logprob: -3.4491848945617676
    4. ')' → logprob: -3.5741848945617676
    5. ' ):' → logprob: -8.32418441772461
    6. '       ' → logprob: -9.07418441772461
    7. '):
' → logprob: -9.82418441772461
    8. ' )' → logprob: -10.32418441772461
    9. ' ):
' → logprob: -10.57418441772461
    10. ',' → logprob: -10.69918441772461

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001052103703841567
    2. '"""' → logprob: -7.376051902770996
    3. ')' → logprob: -8.251051902770996
    4. '
' → logprob: -9.501051902770996
    5. '"""
' → logprob: -9.876051902770996
    6. '    
' → logprob: -11.251051902770996
    7. '    ' → logprob: -12.501051902770996
    8. '       ' → logprob: -12.751051902770996
    9. '""' → logprob: -12.876051902770996
    10. '  ' → logprob: -13.126051902770996

Token 379: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09937983006238937
    2. '"""
' → logprob: -2.724379777908325
    3. 'n' → logprob: -3.724379777908325
    4. '"""' → logprob: -6.224380016326904
    5. 'for' → logprob: -6.599380016326904
    6. '
' → logprob: -7.224380016326904
    7. ')
' → logprob: -8.849379539489746
    8. ')' → logprob: -8.974379539489746
    9. '```' → logprob: -8.974379539489746
    10. '""' → logprob: -9.224379539489746

Token 380: ':
' (ID: 734)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.002501698210835457
    2. 'd' → logprob: -6.127501487731934
    3. ' None' → logprob: -8.502501487731934
    4. 'None' → logprob: -10.377501487731934
    5. ' [' → logprob: -10.627501487731934
    6. '[' → logprob: -11.127501487731934
    7. ':' → logprob: -11.127501487731934
    8. ' [
' → logprob: -11.252501487731934
    9. '   ' → logprob: -12.252501487731934
    10. '    ' → logprob: -12.877501487731934

Token 381: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.532551109790802
    2. ' d' → logprob: -1.0325510501861572
    3. 'd' → logprob: -2.9075510501861572
    4. ' None' → logprob: -6.282551288604736
    5. 'None' → logprob: -8.907550811767578
    6. '    ' → logprob: -9.157550811767578
    7. ' list' → logprob: -10.407550811767578
    8. ' ' → logprob: -10.657550811767578
    9. '       ' → logprob: -11.532550811767578
    10. '  ' → logprob: -11.657550811767578

Token 382: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.018576670438051224
    2. ' list' → logprob: -4.018576622009277
    3. 'None' → logprob: -7.893576622009277
    4. '   ' → logprob: -10.518576622009277
    5. ' None' → logprob: -10.768576622009277
    6. 'd' → logprob: -12.893576622009277
    7. 'List' → logprob: -13.143576622009277
    8. ' ' → logprob: -15.518576622009277
    9. '[list' → logprob: -15.518576622009277
    10. ' d' → logprob: -15.768576622009277

Token 383: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1935732662677765
    2. '[list' → logprob: -1.818573236465454
    3. 'of' → logprob: -4.318573474884033
    4. '[List' → logprob: -8.693572998046875
    5. '[' → logprob: -9.568572998046875
    6. ' de' → logprob: -10.068572998046875
    7. '(list' → logprob: -10.693572998046875
    8. '   ' → logprob: -11.193572998046875
    9. '_of' → logprob: -11.318572998046875
    10. '```' → logprob: -11.443572998046875

Token 384: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.11996734328568e-05
    2. ' list' → logprob: -10.125041007995605
    3. 'float' → logprob: -13.875041007995605
    4. 'lists' → logprob: -16.000041961669922
    5. '[list' → logprob: -17.750041961669922
    6. '(list' → logprob: -18.500041961669922
    7. '	list' → logprob: -18.625041961669922
    8. 'int' → logprob: -19.000041961669922
    9. '```' → logprob: -20.375041961669922
    10. '=list' → logprob: -20.875041961669922

Token 385: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.04781148582696915
    2. '[' → logprob: -3.547811508178711
    3. 'of' → logprob: -4.047811508178711
    4. '<float' → logprob: -8.172811508178711
    5. 'float' → logprob: -9.297811508178711
    6. '```' → logprob: -10.297811508178711
    7. ' de' → logprob: -11.422811508178711
    8. 'de' → logprob: -12.297811508178711
    9. '[int' → logprob: -13.422811508178711
    10. 'd' → logprob: -13.547811508178711

Token 386: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0003382038848940283
    2. ' float' → logprob: -8.000338554382324
    3. 'flo' → logprob: -12.875338554382324
    4. 'int' → logprob: -16.000337600708008
    5. '(float' → logprob: -16.625337600708008
    6. '	float' → logprob: -18.250337600708008
    7. '<float' → logprob: -18.375337600708008
    8. '=float' → logprob: -18.625337600708008
    9. 'f' → logprob: -18.625337600708008
    10. 'fl' → logprob: -19.000337600708008

Token 387: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00028135839966125786
    2. '   ' → logprob: -9.25028133392334
    3. ':
' → logprob: -9.50028133392334
    4. ' :' → logprob: -9.62528133392334
    5. '):' → logprob: -11.25028133392334
    6. '[int' → logprob: -11.37528133392334
    7. ':return' → logprob: -12.00028133392334
    8. ']:' → logprob: -12.25028133392334
    9. 'd' → logprob: -12.50028133392334
    10. ':d' → logprob: -13.62528133392334

Token 388: ' Mat' (ID: 9926)
  Prédit: ' La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.3413441777229309
    2. 'La' → logprob: -1.7163441181182861
    3. ' Mat' → logprob: -2.966344118118286
    4. '   ' → logprob: -3.091344118118286
    5. 'M' → logprob: -4.966344356536865
    6. ' M' → logprob: -6.216344356536865
    7. ' la' → logprob: -6.466344356536865
    8. ' matr' → logprob: -7.216344356536865
    9. 'Mat' → logprob: -8.591343879699707
    10. ' Les' → logprob: -8.716343879699707

Token 389: 'rice' (ID: 44478)
  Prédit: 'rice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rice' → logprob: -0.0006402421277016401
    2. 'atrice' → logprob: -7.500640392303467
    3. 'r' → logprob: -10.625639915466309
    4. 'tr' → logprob: -10.750639915466309
    5. 'rée' → logprob: -11.125639915466309
    6. 'rise' → logprob: -11.250639915466309
    7. 'ice' → logprob: -12.875639915466309
    8. 'ré' → logprob: -13.125639915466309
    9. 'ric' → logprob: -13.250639915466309
    10. 'rie' → logprob: -13.625639915466309

Token 390: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.49818480014801025
    2. ' des' → logprob: -1.4981848001480103
    3. ' of' → logprob: -1.8731848001480103
    4. '[' → logprob: -5.123184680938721
    5. '   ' → logprob: -5.623184680938721
    6. 'de' → logprob: -5.998184680938721
    7. '[
' → logprob: -7.623184680938721
    8. '[int' → logprob: -7.623184680938721
    9. ' =' → logprob: -8.373185157775879
    10. ' deepcopy' → logprob: -8.373185157775879

Token 391: ' plus' (ID: 2932)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.2796781659126282
    2. 'dist' → logprob: -1.5296781063079834
    3. 'plus' → logprob: -4.2796783447265625
    4. 'distance' → logprob: -4.6546783447265625
    5. 'float' → logprob: -6.2796783447265625
    6. ' plus' → logprob: -6.9046783447265625
    7. 'd' → logprob: -7.7796783447265625
    8. 'cout' → logprob: -9.029678344726562
    9. 'int' → logprob: -9.279678344726562
    10. ' distance' → logprob: -9.404678344726562

Token 392: ' courts' (ID: 33374)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7610629200935364
    2. ' court' → logprob: -2.3860628604888916
    3. 'court' → logprob: -2.6360628604888916
    4. 'cour' → logprob: -2.7610628604888916
    5. ' -' → logprob: -3.0110628604888916
    6. '   ' → logprob: -3.0110628604888916
    7. ' proches' → logprob: -3.2610628604888916
    8. ' courts' → logprob: -3.8860628604888916
    9. '```' → logprob: -3.8860628604888916
    10. '_short' → logprob: -4.136063098907471

Token 393: ' chemins' (ID: 192063)
  Prédit: ' chemins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chemins' → logprob: -0.391775906085968
    2. ' distances' → logprob: -1.2667758464813232
    3. 'dist' → logprob: -3.8917758464813232
    4. 'che' → logprob: -4.391776084899902
    5. ' chemin' → logprob: -5.766776084899902
    6. 'paths' → logprob: -6.141776084899902
    7. '_che' → logprob: -6.141776084899902
    8. ' paths' → logprob: -7.141776084899902
    9. ' traj' → logprob: -8.391776084899902
    10. 'distance' → logprob: -9.016776084899902

Token 394: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016139354556798935
    2. 'd' → logprob: -5.516139507293701
    3. ' d' → logprob: -5.766139507293701
    4. ')' → logprob: -6.516139507293701
    5. ' distances' → logprob: -7.141139507293701
    6. ',' → logprob: -7.266139507293701
    7. ' de' → logprob: -7.266139507293701
    8. 'def' → logprob: -7.391139507293701
    9. 'de' → logprob: -7.641139507293701
    10. '<|end|>' → logprob: -7.641139507293701

Token 395: ' toutes' (ID: 17502)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.008755320683121681
    2. 's' → logprob: -5.258755207061768
    3. ' tous' → logprob: -6.133755207061768
    4. 'som' → logprob: -7.883755207061768
    5. ' toutes' → logprob: -8.008755683898926
    6. 'les' → logprob: -8.133755683898926
    7. 'tout' → logprob: -9.008755683898926
    8. '   ' → logprob: -9.508755683898926
    9. 'all' → logprob: -10.008755683898926
    10. '```' → logprob: -10.133755683898926

Token 396: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3040161728858948
    2. 'les' → logprob: -1.42901611328125
    3. '   ' → logprob: -5.17901611328125
    4. 's' → logprob: -5.30401611328125
    5. ' des' → logprob: -5.42901611328125
    6. '```' → logprob: -6.42901611328125
    7. '[i' → logprob: -6.67901611328125
    8. ' pairs' → logprob: -7.17901611328125
    9. '#' → logprob: -7.30401611328125
    10. 'des' → logprob: -7.92901611328125

Token 397: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5776825547218323
    2. 's' → logprob: -0.9526825547218323
    3. ' p' → logprob: -3.3276824951171875
    4. 'pairs' → logprob: -4.2026824951171875
    5. 'points' → logprob: -6.7026824951171875
    6. ' pairs' → logprob: -8.327682495117188
    7. 'pair' → logprob: -9.077682495117188
    8. 'vertices' → logprob: -9.077682495117188
    9. 'som' → logprob: -9.452682495117188
    10. 'nodes' → logprob: -9.702682495117188

Token 398: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.008568006567656994
    2. 'a' → logprob: -5.133567810058594
    3. 'airs' → logprob: -6.633567810058594
    4. 'ai' → logprob: -7.383567810058594
    5. 'air' → logprob: -8.883567810058594
    6. 'ares' → logprob: -9.008567810058594
    7. '-' → logprob: -9.508567810058594
    8. '_' → logprob: -9.758567810058594
    9. 'aire' → logprob: -10.383567810058594
    10. '@' → logprob: -10.508567810058594

Token 399: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8865973949432373
    2. ' d' → logprob: -1.7615973949432373
    3. ',' → logprob: -2.1365973949432373
    4. ']' → logprob: -3.0115973949432373
    5. '_d' → logprob: -3.0115973949432373
    6. '_' → logprob: -3.1365973949432373
    7. ')' → logprob: -3.6365973949432373
    8. 'd' → logprob: -3.8865973949432373
    9. 's' → logprob: -4.011597633361816
    10. ' de' → logprob: -4.011597633361816

Token 400: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0015717566711828113
    2. ' somm' → logprob: -7.5015716552734375
    3. 'som' → logprob: -7.5015716552734375
    4. 'vertices' → logprob: -8.626571655273438
    5. 'dist' → logprob: -9.376571655273438
    6. 'points' → logprob: -9.626571655273438
    7. 'nodes' → logprob: -10.126571655273438
    8. 'n' → logprob: -11.251571655273438
    9. 'no' → logprob: -11.251571655273438
    10. 'indices' → logprob: -11.626571655273438

Token 401: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -2.3795937522663735e-05
    2. 'et' → logprob: -12.12502384185791
    3. 'es' → logprob: -12.37502384185791
    4. '   ' → logprob: -12.75002384185791
    5. 'êts' → logprob: -12.75002384185791
    6. 'ètres' → logprob: -12.87502384185791
    7. '
' → logprob: -13.75002384185791
    8. 'ètes' → logprob: -14.00002384185791
    9. 'e' → logprob: -14.12502384185791
    10. 'ettes' → logprob: -14.62502384185791

Token 402: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01504670362919569
    2. ':' → logprob: -4.5150465965271
    3. '):' → logprob: -6.6400465965271
    4. '):
' → logprob: -6.7650465965271
    5. ':
' → logprob: -7.3900465965271
    6. '
' → logprob: -7.8900465965271
    7. '.' → logprob: -8.640047073364258
    8. ')' → logprob: -8.765047073364258
    9. '    
' → logprob: -10.140047073364258
    10. ',' → logprob: -10.515047073364258

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000181372175575234
    2. '
' → logprob: -9.250181198120117
    3. '"""' → logprob: -10.000181198120117
    4. '    
' → logprob: -10.625181198120117
    5. 'def' → logprob: -12.625181198120117
    6. '"""
' → logprob: -12.875181198120117
    7. ')' → logprob: -13.000181198120117
    8. '  ' → logprob: -13.500181198120117
    9. 'n' → logprob: -13.875181198120117
    10. '    ' → logprob: -13.875181198120117

Token 404: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006769483909010887
    2. '"""' → logprob: -6.25676965713501
    3. ':' → logprob: -6.63176965713501
    4. ')' → logprob: -6.75676965713501
    5. '
' → logprob: -6.88176965713501
    6. '):' → logprob: -7.25676965713501
    7. '```' → logprob: -9.131769180297852
    8. 'for' → logprob: -9.256769180297852
    9. '"""
' (adapté à ' """
') → logprob: -9.506769180297852
    10. '    
' → logprob: -9.631769180297852

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11370950937271118
    2. 'n' → logprob: -2.2387094497680664
    3. 'for' → logprob: -7.113709449768066
    4. ' n' → logprob: -10.238709449768066
    5. '	n' → logprob: -10.738709449768066
    6. ' for' → logprob: -11.863709449768066
    7. '  ' → logprob: -12.988709449768066
    8. '
' → logprob: -13.113709449768066
    9. '   ' → logprob: -13.738709449768066
    10. 'def' → logprob: -13.863709449768066

Token 406: ' for' (ID: 395)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1471429020166397
    2. '   ' → logprob: -2.0221428871154785
    3. 'for' (adapté à ' for') → logprob: -6.0221428871154785
    4. ' n' → logprob: -6.2721428871154785
    5. ' for' → logprob: -9.397143363952637
    6. '	n' → logprob: -10.397143363952637
    7. 'N' → logprob: -12.022143363952637
    8. '```' → logprob: -12.147143363952637
    9. '  ' → logprob: -12.272143363952637
    10. ' ' → logprob: -12.272143363952637

Token 407: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.002187141450121999
    2. ' k' → logprob: -6.127187252044678
    3. 'i' → logprob: -13.87718677520752
    4. 'n' → logprob: -14.75218677520752
    5. '   ' → logprob: -15.25218677520752
    6. '	k' → logprob: -16.252187728881836
    7. 't' → logprob: -16.752187728881836
    8. '(k' → logprob: -16.877187728881836
    9. 'p' → logprob: -17.002187728881836
    10. '_k' → logprob: -17.127187728881836

Token 408: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07890906929969788
    2. 'in' → logprob: -2.578909158706665
    3. ' ' → logprob: -12.078908920288086
    4. '   ' → logprob: -12.078908920288086
    5. '	in' → logprob: -13.328908920288086
    6. ',' → logprob: -13.453908920288086
    7. '  ' → logprob: -13.953908920288086
    8. 'range' → logprob: -14.078908920288086
    9. 'In' → logprob: -14.203908920288086
    10. 'n' → logprob: -15.328908920288086

Token 409: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.2729995988775045e-06
    2. ' range' → logprob: -12.000006675720215
    3. 'r' → logprob: -20.2500057220459
    4. 'rang' → logprob: -20.5000057220459
    5. '	range' → logprob: -21.2500057220459
    6. 'd' → logprob: -21.3750057220459
    7. 'n' → logprob: -21.8750057220459
    8. '   ' → logprob: -22.0000057220459
    9. 'g' → logprob: -22.1250057220459
    10. '(range' → logprob: -22.3750057220459

Token 410: '(n' (ID: 2406)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.3873850405216217
    2. '(n' → logprob: -1.1373850107192993
    3. '(V' → logprob: -8.387385368347168
    4. 'len' → logprob: -8.887385368347168
    5. '(N' → logprob: -9.762385368347168
    6. '(' → logprob: -10.012385368347168
    7. '   ' → logprob: -10.887385368347168
    8. 'n' → logprob: -11.137385368347168
    9. '(num' → logprob: -12.012385368347168
    10. '(v' → logprob: -13.012385368347168

Token 411: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012524965219199657
    2. '):
' → logprob: -4.3875250816345215
    3. '):
' → logprob: -12.012524604797363
    4. ' ):' → logprob: -12.012524604797363
    5. ')' → logprob: -13.137524604797363
    6. ':' → logprob: -14.137524604797363
    7. ']:' → logprob: -15.637524604797363
    8. '):

' → logprob: -16.13752555847168
    9. '   ' → logprob: -16.76252555847168
    10. '}:' → logprob: -16.76252555847168

Token 412: '             ' (ID: 1698)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012096378486603498
    2. ' for' → logprob: -7.626209735870361
    3. '   ' → logprob: -8.001209259033203
    4. '<|end|>' → logprob: -9.126209259033203
    5. '	   ' → logprob: -9.626209259033203
    6. 'for' → logprob: -9.751209259033203
    7. '        
' → logprob: -10.126209259033203
    8. '	' → logprob: -10.751209259033203
    9. ' ' → logprob: -10.876209259033203
    10. '    ' → logprob: -11.001209259033203

Token 413: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0042754653841257095
    2. ' for' → logprob: -6.504275321960449
    3. '	   ' → logprob: -7.129275321960449
    4. '   ' → logprob: -7.504275321960449
    5. '	' → logprob: -7.754275321960449
    6. 'for' → logprob: -8.50427532196045
    7. '        
' → logprob: -8.75427532196045
    8. '	       ' → logprob: -8.87927532196045
    9. '
' → logprob: -9.12927532196045
    10. '<|end|>' → logprob: -9.37927532196045

Token 414: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02935386449098587
    2. ' for' → logprob: -4.029354095458984
    3. '   ' → logprob: -4.529354095458984
    4. '       ' → logprob: -8.029354095458984
    5. '	for' → logprob: -10.529354095458984
    6. 'range' → logprob: -14.529354095458984
    7. ' ' → logprob: -14.654354095458984
    8. '	   ' → logprob: -16.404354095458984
    9. '  ' → logprob: -16.904354095458984
    10. '
' → logprob: -17.029354095458984

Token 415: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4010595381259918
    2. ' range' → logprob: -1.1510595083236694
    3. 'n' → logprob: -4.276059627532959
    4. ' n' → logprob: -8.9010591506958
    5. '   ' → logprob: -10.2760591506958
    6. ' ' → logprob: -12.0260591506958
    7. 'k' → logprob: -12.4010591506958
    8. ' in' → logprob: -12.4010591506958
    9. '	range' → logprob: -12.7760591506958
    10. 'in' → logprob: -14.2760591506958

Token 416: ' sommet' (ID: 130502)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04722321033477783
    2. 'inter' → logprob: -4.297223091125488
    3. ' intermediate' → logprob: -4.422223091125488
    4. ' k' → logprob: -4.797223091125488
    5. 'i' → logprob: -5.547223091125488
    6. '   ' → logprob: -5.797223091125488
    7. ' ' → logprob: -6.547223091125488
    8. ' interm' → logprob: -6.922223091125488
    9. ' intermediary' → logprob: -7.047223091125488
    10. 'j' → logprob: -7.672223091125488

Token 417: ' interm' (ID: 120489)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4539259374141693
    2. '       ' → logprob: -1.0789259672164917
    3. ':' → logprob: -4.328926086425781
    4. ' for' → logprob: -5.828926086425781
    5. ':
' → logprob: -5.828926086425781
    6. '<|end|>' → logprob: -6.078926086425781
    7. '        
' → logprob: -7.453926086425781
    8. '    
' → logprob: -7.828926086425781
    9. 'for' → logprob: -8.078926086425781
    10. '<|end|>' → logprob: -8.078926086425781

Token 418: 'édiaire' (ID: 161555)
  Prédit: 'édiaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'édiaire' → logprob: -0.24670879542827606
    2. 'm' → logprob: -2.496708869934082
    3. 'édia' → logprob: -3.246708869934082
    4. '   ' → logprob: -3.621708869934082
    5. 'mediate' → logprob: -3.871708869934082
    6. 'medi' → logprob: -3.996708869934082
    7. 'édi' → logprob: -4.621708869934082
    8. 'dia' → logprob: -5.871708869934082
    9. 'iaire' → logprob: -6.121708869934082
    10. 'inaire' → logprob: -6.371708869934082

Token 419: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8721957206726074
    2. '       ' → logprob: -0.9971957206726074
    3. ':' → logprob: -1.6221957206726074
    4. ':
' → logprob: -5.247195720672607
    5. '<|end|>' → logprob: -5.872195720672607
    6. ',' → logprob: -5.997195720672607
    7. '    
' → logprob: -6.497195720672607
    8. '        
' → logprob: -6.997195720672607
    9. ' :' → logprob: -7.247195720672607
    10. '    ' → logprob: -7.872195720672607

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020731717813760042
    2. '   ' → logprob: -7.002073287963867
    3. ' for' → logprob: -7.252073287963867
    4. '	   ' → logprob: -8.377073287963867
    5. '	' → logprob: -10.002073287963867
    6. '        
' → logprob: -10.127073287963867
    7. 'for' → logprob: -10.752073287963867
    8. '    ' → logprob: -10.877073287963867
    9. ',' → logprob: -11.002073287963867
    10. '    
' → logprob: -11.127073287963867

Token 421: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05236325040459633
    2. '   ' → logprob: -3.552363157272339
    3. ' for' → logprob: -3.802363157272339
    4. '	for' → logprob: -10.552363395690918
    5. '       ' → logprob: -11.427363395690918
    6. ' ' → logprob: -13.052363395690918
    7. '  ' → logprob: -13.927363395690918
    8. '    ' → logprob: -15.302363395690918
    9. '   ' → logprob: -15.302363395690918
    10. '           ' → logprob: -15.927363395690918

Token 422: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00021831797494087368
    2. ' i' → logprob: -8.750218391418457
    3. 'u' → logprob: -9.750218391418457
    4. 'v' → logprob: -14.000218391418457
    5. '   ' → logprob: -14.875218391418457
    6. 'j' → logprob: -16.12521743774414
    7. ' ' → logprob: -16.50021743774414
    8. '	i' → logprob: -17.00021743774414
    9. ' u' → logprob: -17.37521743774414
    10. '  ' → logprob: -18.50021743774414

Token 423: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02977374941110611
    2. 'in' → logprob: -3.529773712158203
    3. 'n' → logprob: -11.279773712158203
    4. ' ' → logprob: -12.529773712158203
    5. '   ' → logprob: -12.904773712158203
    6. 'range' → logprob: -14.029773712158203
    7. 'd' → logprob: -14.279773712158203
    8. 'import' → logprob: -14.529773712158203
    9. 'In' → logprob: -15.029773712158203
    10. '  ' → logprob: -15.279773712158203

Token 424: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '(range' → logprob: -18.000431060791016
    4. 'n' → logprob: -18.250431060791016
    5. 'ange' → logprob: -18.375431060791016
    6. '	range' → logprob: -19.750431060791016
    7. 'rang' → logprob: -19.875431060791016
    8. ' ' → logprob: -19.875431060791016
    9. '   ' → logprob: -21.125431060791016
    10. 'Range' → logprob: -21.375431060791016

Token 425: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10021130740642548
    2. 'n' → logprob: -2.3502113819122314
    3. '(' → logprob: -12.725211143493652
    4. '   ' → logprob: -14.475211143493652
    5. '	n' → logprob: -14.725211143493652
    6. ' n' → logprob: -14.975211143493652
    7. ' (' → logprob: -15.725211143493652
    8. '(
' → logprob: -16.47521209716797
    9. ',n' → logprob: -17.35021209716797
    10. ' ' → logprob: -17.47521209716797

Token 426: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008689980022609234
    2. '):
' → logprob: -4.758689880371094
    3. '   ' → logprob: -10.383689880371094
    4. ':' → logprob: -11.258689880371094
    5. '       ' → logprob: -11.258689880371094
    6. ' ):' → logprob: -11.758689880371094
    7. '           ' → logprob: -12.383689880371094
    8. '):
' → logprob: -13.008689880371094
    9. ')' → logprob: -14.008689880371094
    10. '):

' → logprob: -14.133689880371094

Token 427: '         ' (ID: 983)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011844364780699834
    2. '               ' → logprob: -9.750118255615234
    3. '            ' → logprob: -11.000118255615234
    4. ' for' → logprob: -12.000118255615234
    5. '                   ' → logprob: -12.250118255615234
    6. '       ' → logprob: -12.500118255615234
    7. '            
' → logprob: -12.625118255615234
    8. '	       ' → logprob: -12.625118255615234
    9. ' ' → logprob: -12.750118255615234
    10. '          ' → logprob: -13.000118255615234

Token 428: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00033760786755010486
    2. '               ' → logprob: -8.375337600708008
    3. '            
' → logprob: -10.250337600708008
    4. '   ' → logprob: -11.500337600708008
    5. '	       ' → logprob: -11.625337600708008
    6. '<|end|>' → logprob: -11.750337600708008
    7. ' for' → logprob: -11.875337600708008
    8. '       ' → logprob: -12.000337600708008
    9. '            ' → logprob: -12.125337600708008
    10. '             ' → logprob: -12.500337600708008

Token 429: ' Pour' (ID: 13931)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006969689857214689
    2. ' for' → logprob: -5.256969451904297
    3. 'for' → logprob: -6.381969451904297
    4. '   ' → logprob: -11.131969451904297
    5. '               ' → logprob: -11.756969451904297
    6. ' ' → logprob: -12.506969451904297
    7. ' ' → logprob: -12.506969451904297
    8. '	   ' → logprob: -12.631969451904297
    9. '	       ' → logprob: -13.256969451904297
    10. '       ' → logprob: -13.506969451904297

Token 430: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020067155361175537
    2. ' range' → logprob: -4.02006721496582
    3. 'n' → logprob: -6.27006721496582
    4. ' n' → logprob: -11.39506721496582
    5. '   ' → logprob: -11.64506721496582
    6. ' ' → logprob: -13.89506721496582
    7. 'in' → logprob: -14.39506721496582
    8. ' in' → logprob: -14.64506721496582
    9. 'for' → logprob: -14.77006721496582
    10. '       ' → logprob: -15.14506721496582

Token 431: ' sommet' (ID: 130502)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03723209351301193
    2. 'range' → logprob: -4.037231922149658
    3. 'n' → logprob: -5.037231922149658
    4. ' j' → logprob: -5.162231922149658
    5. ' range' → logprob: -5.287231922149658
    6. '   ' → logprob: -6.662231922149658
    7. '       ' → logprob: -9.287232398986816
    8. '           ' → logprob: -9.662232398986816
    9. 'i' → logprob: -9.662232398986816
    10. 'for' → logprob: -10.287232398986816

Token 432: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9454619288444519
    2. 'n' → logprob: -1.3204619884490967
    3. '           ' → logprob: -1.6954619884490967
    4. '(n' → logprob: -2.1954619884490967
    5. ' n' → logprob: -4.320461750030518
    6. ':
' → logprob: -4.320461750030518
    7. '   ' → logprob: -5.445461750030518
    8. '       ' → logprob: -5.445461750030518
    9. ' in' → logprob: -5.820461750030518
    10. ':n' → logprob: -6.195461750030518

Token 433: ' départ' (ID: 32693)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08361468464136124
    2. 'range' → logprob: -2.5836145877838135
    3. ' range' → logprob: -5.458614826202393
    4. ' n' → logprob: -7.708614826202393
    5. '(n' → logprob: -12.333614349365234
    6. '[n' → logprob: -15.458614349365234
    7. '	n' → logprob: -15.458614349365234
    8. '(range' → logprob: -15.958614349365234
    9. ' ' → logprob: -16.208614349365234
    10. '   ' → logprob: -16.333614349365234

Token 434: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006098012439906597
    2. ':' → logprob: -6.006097793579102
    3. '       ' → logprob: -6.756097793579102
    4. '               ' → logprob: -7.006097793579102
    5. '<|end|>' → logprob: -7.381097793579102
    6. '   ' → logprob: -7.881097793579102
    7. '            
' → logprob: -9.131097793579102
    8. ':
' → logprob: -9.506097793579102
    9. '<|end|>' → logprob: -9.631097793579102
    10. '	       ' → logprob: -9.756097793579102

Token 435: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.895480277715251e-06
    2. '               ' → logprob: -13.375008583068848
    3. ' for' → logprob: -13.750008583068848
    4. '	       ' → logprob: -13.875008583068848
    5. '            
' → logprob: -13.875008583068848
    6. '       ' → logprob: -14.250008583068848
    7. ' ' → logprob: -14.500008583068848
    8. '            ' → logprob: -14.500008583068848
    9. '          ' → logprob: -15.125008583068848
    10. ',' → logprob: -15.125008583068848

Token 436: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2979590892791748
    2. ' for' → logprob: -1.7979590892791748
    3. 'for' (adapté à ' for') → logprob: -2.547959089279175
    4. '           ' → logprob: -4.297959327697754
    5. '	for' → logprob: -10.297959327697754
    6. '                   ' → logprob: -10.547959327697754
    7. '       ' → logprob: -10.672959327697754
    8. '	       ' → logprob: -10.672959327697754
    9. '	           ' → logprob: -10.922959327697754
    10. '   ' → logprob: -11.047959327697754

Token 437: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008614926598966122
    2. ' j' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.258614540100098
    4. '	j' → logprob: -16.258615493774414
    5. 'k' → logprob: -18.383615493774414
    6. ' ' → logprob: -18.883615493774414
    7. '    ' → logprob: -19.133615493774414
    8. 'm' → logprob: -19.258615493774414
    9. '_j' → logprob: -20.258615493774414
    10. '  ' → logprob: -20.383615493774414

Token 438: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008625566959381104
    2. 'in' → logprob: -4.758625507354736
    3. ' ' → logprob: -12.133625984191895
    4. 'range' → logprob: -12.508625984191895
    5. 'n' → logprob: -13.883625984191895
    6. '```' → logprob: -15.883625984191895
    7. 's' → logprob: -16.258625030517578
    8. '<|end|>' → logprob: -16.258625030517578
    9. '	in' → logprob: -16.383625030517578
    10. ' range' → logprob: -16.383625030517578

Token 439: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234121344983578
    2. ' range' → logprob: -5.255234241485596
    3. '(range' → logprob: -15.505233764648438
    4. 'n' → logprob: -16.255233764648438
    5. '   ' → logprob: -18.630233764648438
    6. ' ' → logprob: -18.755233764648438
    7. '	range' → logprob: -18.755233764648438
    8. 'in' → logprob: -19.880233764648438
    9. 'ange' → logprob: -20.005233764648438
    10. ' n' → logprob: -20.505233764648438

Token 440: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.165323868393898
    2. 'n' → logprob: -1.9153238534927368
    3. 'range' → logprob: -5.290323734283447
    4. ' range' → logprob: -10.415324211120605
    5. ' n' → logprob: -11.540324211120605
    6. '(range' → logprob: -12.915324211120605
    7. ' (' → logprob: -13.540324211120605
    8. '   ' → logprob: -13.665324211120605
    9. 'in' → logprob: -14.915324211120605
    10. '(' → logprob: -15.415324211120605

Token 441: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002135390415787697
    2. '):
' → logprob: -6.377135276794434
    3. '           ' → logprob: -8.627135276794434
    4. ':' → logprob: -8.877135276794434
    5. ' ):' → logprob: -10.252135276794434
    6. ')' → logprob: -10.877135276794434
    7. '       ' → logprob: -11.127135276794434
    8. '               ' → logprob: -11.127135276794434
    9. '):
' → logprob: -12.252135276794434
    10. '   ' → logprob: -12.377135276794434

Token 442: '     ' (ID: 530)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0021765506826341152
    2. '                ' → logprob: -7.002176761627197
    3. ' if' → logprob: -7.752176761627197
    4. ' d' → logprob: -8.252176284790039
    5. ' ' → logprob: -9.377176284790039
    6. '           ' → logprob: -9.502176284790039
    7. '              ' → logprob: -9.752176284790039
    8. ' (' → logprob: -9.877176284790039
    9. '                
' → logprob: -9.877176284790039
    10. 'if' → logprob: -10.127176284790039

Token 443: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006548931705765426
    2. '                ' → logprob: -8.875655174255371
    3. '<|end|>' → logprob: -9.000655174255371
    4. ' if' → logprob: -9.875655174255371
    5. '              ' → logprob: -10.125655174255371
    6. ' ' → logprob: -10.125655174255371
    7. ',' → logprob: -10.250655174255371
    8. '           ' → logprob: -10.250655174255371
    9. '                
' → logprob: -10.375655174255371
    10. '                       ' → logprob: -10.750655174255371

Token 444: ' Pour' (ID: 13931)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006902566645294428
    2. 'n' → logprob: -5.881902694702148
    3. '           ' → logprob: -6.381902694702148
    4. 'for' → logprob: -6.881902694702148
    5. '              ' → logprob: -8.506902694702148
    6. '                ' → logprob: -8.881902694702148
    7. 'if' → logprob: -8.881902694702148
    8. ' for' → logprob: -9.006902694702148
    9. 'range' → logprob: -9.131902694702148
    10. ' ' → logprob: -9.506902694702148

Token 445: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024048931896686554
    2. ' range' → logprob: -3.7740490436553955
    3. 'n' → logprob: -7.149048805236816
    4. ' n' → logprob: -11.524048805236816
    5. 'd' → logprob: -13.649048805236816
    6. 'in' → logprob: -13.774048805236816
    7. '   ' → logprob: -14.149048805236816
    8. 'j' → logprob: -14.149048805236816
    9. ' in' → logprob: -14.149048805236816
    10. ' ' → logprob: -14.399048805236816

Token 446: ' sommet' (ID: 130502)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3172180652618408
    2. 'range' → logprob: -1.3172180652618408
    3. ' range' → logprob: -5.692217826843262
    4. ' n' → logprob: -7.942217826843262
    5. 'in' → logprob: -9.067217826843262
    6. ' in' → logprob: -9.817217826843262
    7. '(n' → logprob: -11.567217826843262
    8. 'distance' → logprob: -11.692217826843262
    9. '   ' → logprob: -12.067217826843262
    10. 'k' → logprob: -12.317217826843262

Token 447: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: ''arrivée' (ID: 156076)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03806260600686073
    2. ' range' → logprob: -3.288062572479248
    3. 'ange' → logprob: -11.288063049316406
    4. '   ' → logprob: -13.163063049316406
    5. 'rang' → logprob: -13.413063049316406
    6. ' gamme' → logprob: -13.663063049316406
    7. '_range' → logprob: -14.163063049316406
    8. ' ' → logprob: -14.288063049316406
    9. '(range' → logprob: -14.413063049316406
    10. 'n' → logprob: -14.538063049316406

Token 449: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004565327544696629
    2. ' d' → logprob: -8.875456809997559
    3. 'd' → logprob: -9.250456809997559
    4. '                       ' → logprob: -9.750456809997559
    5. '                ' → logprob: -10.375456809997559
    6. '                   ' → logprob: -10.750456809997559
    7. '                
' → logprob: -10.750456809997559
    8. '<|end|>' → logprob: -11.250456809997559
    9. 's' → logprob: -11.750456809997559
    10. ':' → logprob: -11.750456809997559

Token 450: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00041113083716481924
    2. ' d' → logprob: -8.000411033630371
    3. '                
' → logprob: -10.750411033630371
    4. '                ' → logprob: -11.000411033630371
    5. '           ' → logprob: -11.625411033630371
    6. 'd' → logprob: -11.750411033630371
    7. '              ' → logprob: -12.250411033630371
    8. '                   ' → logprob: -12.500411033630371
    9. '                       ' → logprob: -12.625411033630371
    10. '			' → logprob: -13.500411033630371

Token 451: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8884299993515015
    2. ' if' → logprob: -1.0134299993515015
    3. '                   ' → logprob: -1.7634299993515015
    4. 'd' → logprob: -3.263430118560791
    5. '               ' → logprob: -4.888430118560791
    6. ' d' → logprob: -5.263430118560791
    7. '                       ' → logprob: -5.763430118560791
    8. '   ' → logprob: -9.888429641723633
    9. '	if' → logprob: -10.763429641723633
    10. '                    ' → logprob: -11.013429641723633

Token 452: ' Met' (ID: 7227)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.41404643654823303
    2. 'if' → logprob: -1.1640464067459106
    3. ' if' → logprob: -4.289046287536621
    4. ' d' → logprob: -4.414046287536621
    5. '                   ' → logprob: -7.039046287536621
    6. '               ' → logprob: -9.539046287536621
    7. '                       ' → logprob: -10.789046287536621
    8. '   ' → logprob: -12.039046287536621
    9. '                           ' → logprob: -13.039046287536621
    10. '           ' → logprob: -13.914046287536621

Token 453: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.12703613936901093
    2. ' à' → logprob: -2.2520360946655273
    3. 'a' → logprob: -5.377036094665527
    4. 'd' → logprob: -5.627036094665527
    5. '               ' → logprob: -6.377036094665527
    6. 'tre' → logprob: -6.752036094665527
    7. '                   ' → logprob: -7.002036094665527
    8. 'À' → logprob: -7.252036094665527
    9. '-à' → logprob: -7.877036094665527
    10. 'if' → logprob: -8.252036094665527

Token 454: ' jour' (ID: 8379)
  Prédit: ' jour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jour' → logprob: -0.669021487236023
    2. 'jour' → logprob: -1.294021487236023
    3. 'min' → logprob: -1.794021487236023
    4. 'd' → logprob: -3.1690216064453125
    5. 'day' → logprob: -6.2940216064453125
    6. ' jours' → logprob: -6.5440216064453125
    7. 'jours' → logprob: -7.6690216064453125
    8. '_min' → logprob: -7.9190216064453125
    9. '   ' → logprob: -8.169021606445312
    10. 'Jour' → logprob: -8.544021606445312

Token 455: ' la' (ID: 557)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.41574904322624207
    2. 'd' → logprob: -1.1657490730285645
    3. 'if' → logprob: -4.2907490730285645
    4. ' if' → logprob: -4.4157490730285645
    5. '               ' → logprob: -6.2907490730285645
    6. '                   ' → logprob: -7.2907490730285645
    7. '           ' → logprob: -9.665748596191406
    8. '   ' → logprob: -10.290748596191406
    9. '	d' → logprob: -11.665748596191406
    10. '                       ' → logprob: -11.790748596191406

Token 456: ' distance' (ID: 9324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0025514080189168453
    2. ' d' → logprob: -6.127551555633545
    3. 'if' → logprob: -8.252551078796387
    4. ' if' → logprob: -10.002551078796387
    5. 'min' → logprob: -10.127551078796387
    6. 'distance' → logprob: -11.877551078796387
    7. ' shortest' → logprob: -13.002551078796387
    8. '           ' → logprob: -13.252551078796387
    9. '               ' → logprob: -13.627551078796387
    10. 'short' → logprob: -13.752551078796387

Token 457: ' minimale' (ID: 143217)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9338217973709106
    2. '               ' → logprob: -1.4338217973709106
    3. ' d' → logprob: -1.8088217973709106
    4. '                   ' → logprob: -2.308821678161621
    5. 'if' → logprob: -3.183821678161621
    6. 'd' → logprob: -3.433821678161621
    7. '           ' → logprob: -3.933821678161621
    8. '[i' → logprob: -4.808821678161621
    9. '   ' → logprob: -7.058821678161621
    10. '                       ' → logprob: -7.183821678161621

Token 458: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.476554274559021
    2. 'd' → logprob: -1.476554274559021
    3. ' if' → logprob: -2.8515543937683105
    4. '                   ' → logprob: -3.1015543937683105
    5. '               ' → logprob: -3.3515543937683105
    6. 'if' → logprob: -4.7265543937683105
    7. '           ' → logprob: -6.7265543937683105
    8. '[i' → logprob: -6.9765543937683105
    9. '                       ' → logprob: -7.1015543937683105
    10. '   ' → logprob: -7.4765543937683105

Token 459: ' i' (ID: 575)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2894926965236664
    2. ' d' → logprob: -1.5394927263259888
    3. 'i' → logprob: -3.539492607116699
    4. ' i' → logprob: -4.914492607116699
    5. '   ' → logprob: -8.7894926071167
    6. '[i' → logprob: -9.1644926071167
    7. 'j' → logprob: -10.4144926071167
    8. 'l' → logprob: -10.4144926071167
    9. ' j' → logprob: -10.5394926071167
    10. '	d' → logprob: -10.7894926071167

Token 460: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4088796377182007
    2. ' à' → logprob: -1.9088796377182007
    3. '][' → logprob: -2.9088797569274902
    4. '[j' → logprob: -3.9088797569274902
    5. '               ' → logprob: -4.03387975692749
    6. '   ' → logprob: -4.15887975692749
    7. '                   ' → logprob: -4.53387975692749
    8. '           ' → logprob: -4.78387975692749
    9. ']' → logprob: -4.90887975692749
    10. ',' → logprob: -4.90887975692749

Token 461: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.023251881822943687
    2. ' j' → logprob: -3.77325177192688
    3. 'i' → logprob: -13.1482515335083
    4. 'k' → logprob: -13.3982515335083
    5. '   ' → logprob: -13.8982515335083
    6. ' ' → logprob: -14.1482515335083
    7. '```' → logprob: -14.2732515335083
    8. '[j' → logprob: -14.6482515335083
    9. 'l' → logprob: -15.8982515335083
    10. '	j' → logprob: -17.273252487182617

Token 462: ' via' (ID: 4493)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.150112271308899
    2. '               ' → logprob: -1.275112271308899
    3. '                   ' → logprob: -1.400112271308899
    4. ' d' → logprob: -2.5251121520996094
    5. 'if' → logprob: -3.4001121520996094
    6. 'd' → logprob: -3.9001121520996094
    7. '                       ' → logprob: -3.9001121520996094
    8. ' =' → logprob: -7.900112152099609
    9. '                           ' → logprob: -7.900112152099609
    10. '                        
' → logprob: -7.900112152099609

Token 463: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07889298349618912
    2. ' k' → logprob: -2.578892946243286
    3. ' ' → logprob: -13.953892707824707
    4. '   ' → logprob: -14.953892707824707
    5. ' ' → logprob: -15.078892707824707
    6. '[k' → logprob: -15.078892707824707
    7. '	k' → logprob: -15.328892707824707
    8. '```' → logprob: -15.328892707824707
    9. '(k' → logprob: -15.703892707824707
    10. 'l' → logprob: -16.203893661499023

Token 464: ' si' (ID: 1784)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.1466320753097534
    2. ' if' → logprob: -1.1466320753097534
    3. '               ' → logprob: -2.271632194519043
    4. 'd' → logprob: -2.396632194519043
    5. '                   ' → logprob: -2.521632194519043
    6. 'if' → logprob: -2.646632194519043
    7. '                       ' → logprob: -4.021632194519043
    8. '                           ' → logprob: -8.271632194519043
    9. '           ' → logprob: -8.646632194519043
    10. '[d' → logprob: -8.771632194519043

Token 465: ' cela' (ID: 17542)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.12697146832942963
    2. 'd' → logprob: -2.126971483230591
    3. '	d' → logprob: -11.001971244812012
    4. ' ' → logprob: -11.751971244812012
    5. ' ' → logprob: -11.876971244812012
    6. '   ' → logprob: -12.501971244812012
    7. '(d' → logprob: -12.501971244812012
    8. ' (' → logprob: -13.501971244812012
    9. '  ' → logprob: -13.751971244812012
    10. '```' → logprob: -15.251971244812012

Token 466: ' réduit' (ID: 120775)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.18309372663497925
    2. ' améli' → logprob: -2.933093786239624
    3. '<' → logprob: -3.308093786239624
    4. ' permet' → logprob: -3.808093786239624
    5. ' réduit' → logprob: -4.058093547821045
    6. ' est' → logprob: -4.183093547821045
    7. ' is' → logprob: -5.558093547821045
    8. 's' → logprob: -5.558093547821045
    9. ' offre' → logprob: -5.933093547821045
    10. ' vaut' → logprob: -6.808093547821045

Token 467: ' le' (ID: 505)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.06271104514598846
    2. 'd' → logprob: -2.812711000442505
    3. ' la' → logprob: -7.687711238861084
    4. '               ' → logprob: -8.437710762023926
    5. ' le' → logprob: -10.937710762023926
    6. '           ' → logprob: -11.937710762023926
    7. ' l' → logprob: -12.062710762023926
    8. ' les' → logprob: -12.312710762023926
    9. 'la' → logprob: -12.437710762023926
    10. '                   ' → logprob: -12.562710762023926

Token 468: ' coût' (ID: 73109)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.5752149820327759
    2. ' distance' → logprob: -1.5752149820327759
    3. ' d' → logprob: -1.7002149820327759
    4. 'd' → logprob: -3.2002148628234863
    5. ' coût' → logprob: -5.950214862823486
    6. 'dist' → logprob: -7.200214862823486
    7. ' espace' → logprob: -7.575214862823486
    8. 'co' → logprob: -7.700214862823486
    9. ' ' → logprob: -8.200215339660645
    10. ' dist' → logprob: -8.450215339660645

Token 469: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33743569254875183
    2. '                   ' → logprob: -1.5874357223510742
    3. ' d' → logprob: -2.962435722351074
    4. 'd' → logprob: -3.837435722351074
    5. '                       ' → logprob: -5.587435722351074
    6. ' and' → logprob: -7.337435722351074
    7. '[d' → logprob: -7.587435722351074
    8. '           ' → logprob: -7.712435722351074
    9. '                    
' → logprob: -7.962435722351074
    10. ',' → logprob: -7.962435722351074

Token 470: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15564918518066406
    2. '                   ' → logprob: -2.155649185180664
    3. '                       ' → logprob: -4.030649185180664
    4. ' d' → logprob: -5.280649185180664
    5. 'd' → logprob: -6.280649185180664
    6. ' if' → logprob: -6.655649185180664
    7. '                           ' → logprob: -7.030649185180664
    8. '                               ' → logprob: -7.905649185180664
    9. '                        
' → logprob: -8.780649185180664
    10. 'if' → logprob: -8.905649185180664

Token 471: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.3043913245201111
    2. 'if' → logprob: -1.5543913841247559
    3. ' if' → logprob: -3.554391384124756
    4. ' d' → logprob: -3.929391384124756
    5. '                   ' → logprob: -5.929391384124756
    6. '               ' → logprob: -9.304390907287598
    7. '                       ' → logprob: -9.429390907287598
    8. '   ' → logprob: -11.679390907287598
    9. '                           ' → logprob: -12.679390907287598
    10. '	d' → logprob: -13.054390907287598

Token 472: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[j' → logprob: -15.875
    3. '[I' → logprob: -16.625
    4. '```' → logprob: -17.125
    5. ' [' → logprob: -17.375
    6. '[k' → logprob: -18.875
    7. '[' → logprob: -19.0
    8. '[u' → logprob: -19.5
    9. '\[' → logprob: -19.5
    10. '
' → logprob: -20.0

Token 473: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005980585236102343
    2. '[j' → logprob: -5.130980491638184
    3. '[k' → logprob: -10.630980491638184
    4. ' ][' → logprob: -11.005980491638184
    5. ']' → logprob: -12.380980491638184
    6. '[i' → logprob: -13.130980491638184
    7. '[' → logprob: -13.505980491638184
    8. '"][' → logprob: -14.005980491638184
    9. 'k' → logprob: -14.630980491638184
    10. 'j' → logprob: -14.755980491638184

Token 474: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.980854959692806e-05
    2. 'k' → logprob: -9.625069618225098
    3. ' j' → logprob: -12.625069618225098
    4. '	j' → logprob: -15.250069618225098
    5. '[j' → logprob: -16.000070571899414
    6. ']' → logprob: -17.375070571899414
    7. '][' → logprob: -17.625070571899414
    8. '
' → logprob: -17.750070571899414
    9. '   ' → logprob: -17.875070571899414
    10. '```' → logprob: -18.250070571899414

Token 475: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013488073600456119
    2. ']=' → logprob: -6.626348972320557
    3. ' ]' → logprob: -11.126348495483398
    4. 'min' → logprob: -12.126348495483398
    5. '=' → logprob: -13.501348495483398
    6. 'd' → logprob: -14.376348495483398
    7. '=min' → logprob: -14.501348495483398
    8. ' =' → logprob: -16.2513484954834
    9. ')' → logprob: -16.8763484954834
    10. '>' → logprob: -17.1263484954834

Token 476: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0485999770462513
    2. ' =' → logprob: -3.0485999584198
    3. '=min' → logprob: -11.298600196838379
    4. 'min' → logprob: -15.798600196838379
    5. '   ' → logprob: -17.798599243164062
    6. '>' → logprob: -17.923599243164062
    7. ')' → logprob: -18.548599243164062
    8. '<=' → logprob: -19.173599243164062
    9. ' min' → logprob: -19.423599243164062
    10. '=
' → logprob: -19.423599243164062

Token 477: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0011703446507453918
    2. ' min' → logprob: -6.7511701583862305
    3. '	min' → logprob: -16.376171112060547
    4. '   ' → logprob: -19.876171112060547
    5. 'max' → logprob: -20.751171112060547
    6. '.min' → logprob: -22.001171112060547
    7. '(min' → logprob: -22.251171112060547
    8. 'mini' → logprob: -22.251171112060547
    9. 'd' → logprob: -22.751171112060547
    10. '[min' → logprob: -22.876171112060547

Token 478: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00016206118743866682
    2. '(' → logprob: -8.750162124633789
    3. 'd' → logprob: -12.625162124633789
    4. '(
' → logprob: -15.375162124633789
    5. ' (' → logprob: -17.37516212463379
    6. ' d' → logprob: -18.12516212463379
    7. '	d' → logprob: -20.00016212463379
    8. '((' → logprob: -21.62516212463379
    9. '(

' → logprob: -21.62516212463379
    10. '(
' → logprob: -21.75016212463379

Token 479: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002551050391048193
    2. 'd' → logprob: -6.002551078796387
    3. '[d' → logprob: -10.252551078796387
    4. ' [' → logprob: -11.002551078796387
    5. ' d' → logprob: -11.502551078796387
    6. ')[' → logprob: -12.002551078796387
    7. '
' → logprob: -13.252551078796387
    8. 'i' → logprob: -13.627551078796387
    9. '   ' → logprob: -14.002551078796387
    10. '[' → logprob: -14.002551078796387

Token 480: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.043205056339502335
    2. '][' → logprob: -3.1682050228118896
    3. '[j' → logprob: -9.043205261230469
    4. ')[' → logprob: -9.543205261230469
    5. 'i' → logprob: -12.418205261230469
    6. '[' → logprob: -12.668205261230469
    7. ' ][' → logprob: -13.418205261230469
    8. '(i' → logprob: -13.668205261230469
    9. '   ' → logprob: -13.668205261230469
    10. ')][' → logprob: -13.918205261230469

Token 481: 'j' (ID: 73)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16023966670036316
    2. 'j' → logprob: -1.9102396965026855
    3. '[k' → logprob: -12.035239219665527
    4. '
' → logprob: -12.410239219665527
    5. '[j' → logprob: -13.285239219665527
    6. '][' → logprob: -13.785239219665527
    7. '```' → logprob: -14.410239219665527
    8. ']' → logprob: -14.410239219665527
    9. ' k' → logprob: -14.910239219665527
    10. '   ' → logprob: -15.035239219665527

Token 482: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016549695283174515
    2. ' ,' → logprob: -4.391549587249756
    3. ',d' → logprob: -5.516549587249756
    4. 'd' → logprob: -11.766550064086914
    5. ' d' → logprob: -12.641550064086914
    6. ',
' → logprob: -14.641550064086914
    7. '   ' → logprob: -14.891550064086914
    8. '),' → logprob: -16.266550064086914
    9. ' ,
' → logprob: -16.516550064086914
    10. '],' → logprob: -16.641550064086914

Token 483: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1602676957845688
    2. ' d' → logprob: -1.91026771068573
    3. '	d' → logprob: -10.41026782989502
    4. '   ' → logprob: -12.03526782989502
    5. '               ' → logprob: -13.53526782989502
    6. '                   ' → logprob: -13.78526782989502
    7. '  ' → logprob: -14.16026782989502
    8. '    ' → logprob: -14.16026782989502
    9. '              ' → logprob: -14.66026782989502
    10. ' ' → logprob: -14.66026782989502

Token 484: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. 'i' → logprob: -14.875000953674316
    3. '][' → logprob: -15.375000953674316
    4. ' [' → logprob: -16.5
    5. '[' → logprob: -16.875
    6. '
' → logprob: -17.0
    7. ')[' → logprob: -17.125
    8. '```' → logprob: -18.625
    9. '[j' → logprob: -18.75
    10. '[
' → logprob: -19.25

Token 485: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013290488859638572
    2. '[i' → logprob: -6.626328945159912
    3. ' ][' → logprob: -13.75132942199707
    4. '[j' → logprob: -14.12632942199707
    5. '[k' → logprob: -14.12632942199707
    6. '[' → logprob: -15.75132942199707
    7. ']' → logprob: -15.87632942199707
    8. 'i' → logprob: -16.75132942199707
    9. '[I' → logprob: -16.87632942199707
    10. '}[' → logprob: -17.25132942199707

Token 486: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9361264946837764e-07
    2. '[k' → logprob: -16.5
    3. 'j' → logprob: -17.875
    4. ' k' → logprob: -18.125
    5. '
' → logprob: -20.0
    6. '][' → logprob: -20.0
    7. '	k' → logprob: -20.25
    8. '   ' → logprob: -20.75
    9. '_k' → logprob: -22.375
    10. ' ' → logprob: -22.5

Token 487: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019480334594845772
    2. ']+' → logprob: -6.25194787979126
    3. ' ]' → logprob: -10.876948356628418
    4. '[' → logprob: -15.251948356628418
    5. '[j' → logprob: -15.876948356628418
    6. '+' → logprob: -16.0019474029541
    7. '+]' → logprob: -17.8769474029541
    8. '][' → logprob: -18.0019474029541
    9. ')' → logprob: -18.1269474029541
    10. '[i' → logprob: -18.2519474029541

Token 488: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25411295890808105
    2. '+' → logprob: -1.504112958908081
    3. '+d' → logprob: -6.12911319732666
    4. '+j' → logprob: -13.75411319732666
    5. '+k' → logprob: -14.50411319732666
    6. ' ' → logprob: -15.00411319732666
    7. '+c' → logprob: -15.25411319732666
    8. '+D' → logprob: -15.50411319732666
    9. 'd' → logprob: -16.254112243652344
    10. ' ' → logprob: -16.379112243652344

Token 489: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006715967319905758
    2. ' d' → logprob: -5.006715774536133
    3. '	d' → logprob: -15.131715774536133
    4. '   ' → logprob: -15.506715774536133
    5. '  ' → logprob: -17.381715774536133
    6. '    ' → logprob: -17.631715774536133
    7. '                   ' → logprob: -17.631715774536133
    8. ' ' → logprob: -18.006715774536133
    9. '           ' → logprob: -18.381715774536133
    10. '               ' → logprob: -18.381715774536133

Token 490: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0004234051739331335
    2. '[i' → logprob: -8.250423431396484
    3. 'k' → logprob: -8.750423431396484
    4. '[j' → logprob: -12.875423431396484
    5. '][' → logprob: -14.750423431396484
    6. '
' → logprob: -15.375423431396484
    7. '[' → logprob: -15.500423431396484
    8. '```' → logprob: -16.250423431396484
    9. ' [' → logprob: -16.375423431396484
    10. '[
' → logprob: -16.500423431396484

Token 491: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002570481738075614
    2. '[j' → logprob: -8.37525749206543
    3. ']' → logprob: -10.75025749206543
    4. ' ][' → logprob: -12.50025749206543
    5. 'j' → logprob: -15.12525749206543
    6. '[' → logprob: -15.25025749206543
    7. '[i' → logprob: -15.87525749206543
    8. ''][' → logprob: -16.00025749206543
    9. ',j' → logprob: -16.25025749206543
    10. '"][' → logprob: -16.37525749206543

Token 492: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.292907877039397e-06
    2. '[j' → logprob: -12.75000286102295
    3. ' j' → logprob: -15.50000286102295
    4. '][' → logprob: -17.875003814697266
    5. '	j' → logprob: -18.125003814697266
    6. '
' → logprob: -18.750003814697266
    7. '_j' → logprob: -19.875003814697266
    8. '```' → logprob: -20.125003814697266
    9. ',j' → logprob: -20.500003814697266
    10. ']' → logprob: -20.625003814697266

Token 493: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029853234067559242
    2. '))' → logprob: -3.529853343963623
    3. '])' → logprob: -9.904852867126465
    4. ' )' → logprob: -10.279852867126465
    5. ')
' → logprob: -11.279852867126465
    6. '})' → logprob: -12.779852867126465
    7. '))
' → logprob: -14.404852867126465
    8. ' ))' → logprob: -14.529852867126465
    9. ')))' → logprob: -15.029852867126465
    10. '               ' → logprob: -15.279852867126465

Token 494: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 495: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 496: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20141363143920898
    2. ' d' → logprob: -1.701413631439209
    3. '	d' → logprob: -15.701414108276367
    4. '[d' → logprob: -16.201414108276367
    5. '(d' → logprob: -17.201414108276367
    6. '_d' → logprob: -17.951414108276367
    7. ' ' → logprob: -18.576414108276367
    8. ' ' → logprob: -20.326414108276367
    9. '"d' → logprob: -20.451414108276367
    10. ')d' → logprob: -20.576414108276367

Token 497: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 498: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.70512855052948
    2. 'n' → logprob: -1.70512855052948
    3. '<|end|>' → logprob: -2.0801286697387695
    4. 'def' → logprob: -2.2051286697387695
    5. '#' → logprob: -2.5801286697387695
    6. '' → logprob: -5.3301286697387695
    7. '

' → logprob: -6.4551286697387695
    8. '```' → logprob: -6.5801286697387695
    9. 'import' → logprob: -6.7051286697387695
    10. '\n' → logprob: -7.2051286697387695

Token 499: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11049135029315948
    2. '#' → logprob: -2.4854912757873535
    3. 'def' → logprob: -4.3604912757873535
    4. 'import' → logprob: -5.1104912757873535
    5. 'if' → logprob: -6.6104912757873535
    6. '
' → logprob: -7.8604912757873535
    7. 'data' → logprob: -8.610491752624512
    8. '```' → logprob: -8.860491752624512
    9. '<|end|>' → logprob: -8.860491752624512
    10. 'input' → logprob: -10.235491752624512

Token 500: ' du' (ID: 1462)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14073580503463745
    2. '()' → logprob: -2.8907358646392822
    3. ' =' → logprob: -3.0157358646392822
    4. '(n' → logprob: -4.765735626220703
    5. '=' → logprob: -4.890735626220703
    6. '(' → logprob: -5.140735626220703
    7. ' n' → logprob: -6.015735626220703
    8. '<|end|>' → logprob: -7.765735626220703
    9. '<|end|>' → logprob: -8.140735626220703
    10. '_n' → logprob: -8.265735626220703

Token 501: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019997733179479837
    2. ' n' → logprob: -6.876999855041504
    3. 'input' → logprob: -7.751999855041504
    4. 'nombre' → logprob: -9.251999855041504
    5. 'int' → logprob: -9.376999855041504
    6. ' input' → logprob: -9.376999855041504
    7. 's' → logprob: -9.626999855041504
    8. 'import' → logprob: -10.501999855041504
    9. 'entrée' → logprob: -10.626999855041504
    10. '```' → logprob: -10.876999855041504

Token 502: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1465485095977783
    2. 'd' → logprob: -2.1465485095977783
    3. '_' → logprob: -2.3965485095977783
    4. 'de' → logprob: -2.3965485095977783
    5. ' =' → logprob: -2.3965485095977783
    6. '<|end|>' → logprob: -2.6465485095977783
    7. 's' → logprob: -3.0215485095977783
    8. 'des' → logprob: -3.3965485095977783
    9. '=' → logprob: -3.6465485095977783
    10. ' n' → logprob: -3.7715485095977783

Token 503: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029672494158148766
    2. 'vertices' → logprob: -3.654672384262085
    3. 'som' → logprob: -6.279672622680664
    4. ' somm' → logprob: -7.529672622680664
    5. 'nodes' → logprob: -7.654672622680664
    6. 'n' → logprob: -8.529672622680664
    7. ' vertices' → logprob: -9.404672622680664
    8. 'cases' → logprob: -9.904672622680664
    9. 'graph' → logprob: -10.654672622680664
    10. '_vertices' → logprob: -10.904672622680664

Token 504: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -3.47626737493556e-05
    2. 'ètes' → logprob: -10.87503433227539
    3. 'etes' → logprob: -12.62503433227539
    4. 'et' → logprob: -12.75003433227539
    5. 'ettes' → logprob: -13.00003433227539
    6. 'êts' → logprob: -13.00003433227539
    7. 'ètres' → logprob: -13.12503433227539
    8. 'è' → logprob: -13.75003433227539
    9. '#' → logprob: -14.62503433227539
    10. 'èves' → logprob: -15.00003433227539

Token 505: ' dans' (ID: 2671)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010556064546108246
    2. '=' → logprob: -5.135556221008301
    3. ' =' → logprob: -5.885556221008301
    4. '=n' → logprob: -6.885556221008301
    5. '(n' → logprob: -7.760556221008301
    6. ' n' → logprob: -8.0105562210083
    7. '=
' → logprob: -11.3855562210083
    8. '```' → logprob: -11.3855562210083
    9. '
' → logprob: -11.7605562210083
    10. ',' → logprob: -12.1355562210083

Token 506: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2247984409332275
    2. 'la' → logprob: -1.8497984409332275
    3. 'le' → logprob: -1.9747984409332275
    4. 'graph' → logprob: -2.2247984409332275
    5. ' graph' → logprob: -2.4747984409332275
    6. 'l' → logprob: -2.4747984409332275
    7. ' le' → logprob: -2.9747984409332275
    8. ' n' → logprob: -3.5997984409332275
    9. ' la' → logprob: -4.349798202514648
    10. 'g' → logprob: -4.474798202514648

Token 507: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.10053789615631104
    2. 'graph' → logprob: -2.3505377769470215
    3. ' grap' → logprob: -8.47553825378418
    4. ' graph' → logprob: -9.85053825378418
    5. 'g' → logprob: -10.10053825378418
    6. '```' → logprob: -11.60053825378418
    7. '#' → logprob: -11.72553825378418
    8. '
' → logprob: -12.35053825378418
    9. 'code' → logprob: -13.35053825378418
    10. 'gra' → logprob: -13.60053825378418

Token 508: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.5871366262435913
    2. 'aphe' → logprob: -0.8371366262435913
    3. 'h' → logprob: -5.337136745452881
    4. '#' → logprob: -5.837136745452881
    5. 'phe' → logprob: -6.212136745452881
    6. 'ph' → logprob: -7.087136745452881
    7. 'aph' → logprob: -8.587136268615723
    8. 'ap' → logprob: -9.462136268615723
    9. '```' → logprob: -9.837136268615723
    10. 'ah' → logprob: -10.087136268615723

Token 509: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00018983196059707552
    2. '
' → logprob: -8.625189781188965
    3. '=' → logprob: -12.125189781188965
    4. ' =' → logprob: -13.125189781188965
    5. ' n' → logprob: -13.625189781188965
    6. '=n' → logprob: -13.875189781188965
    7. ':' → logprob: -16.00019073486328
    8. '

' → logprob: -16.00019073486328
    9. '=
' → logprob: -16.12519073486328
    10. '```' → logprob: -16.25019073486328

Token 510: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.676292231422849e-05
    2. ' n' → logprob: -11.000017166137695
    3. '	n' → logprob: -19.625017166137695
    4. 'input' → logprob: -21.250017166137695
    5. '﻿' → logprob: -21.375017166137695
    6. 'N' → logprob: -22.125017166137695
    7. '```' → logprob: -22.125017166137695
    8. '#' → logprob: -22.250017166137695
    9. '
' → logprob: -22.375017166137695
    10. 'import' → logprob: -22.750017166137695

Token 511: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38859981298446655
    2. ' =' → logprob: -1.1385998725891113
    3. ',' → logprob: -6.888599872589111
    4. '=int' → logprob: -7.263599872589111
    5. ' =
' → logprob: -13.763599395751953
    6. '=input' → logprob: -13.763599395751953
    7. ' ,' → logprob: -14.013599395751953
    8. ')' → logprob: -14.013599395751953
    9. ' ' → logprob: -14.013599395751953
    10. '=

' → logprob: -14.763599395751953

Token 512: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001170225441455841
    2. ' int' → logprob: -6.7511701583862305
    3. ' ' → logprob: -19.251171112060547
    4. '	int' → logprob: -19.876171112060547
    5. '=int' → logprob: -20.001171112060547
    6. '[int' → logprob: -20.251171112060547
    7. '  ' → logprob: -20.376171112060547
    8. '(int' → logprob: -20.626171112060547
    9. '<int' → logprob: -21.126171112060547
    10. '10' → logprob: -22.876171112060547

Token 513: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00769428675994277
    2. 'input' → logprob: -5.007694244384766
    3. '(' → logprob: -7.507694244384766
    4. '()' → logprob: -7.757694244384766
    5. '(
' → logprob: -13.882694244384766
    6. ' input' → logprob: -14.507694244384766
    7. '=input' → logprob: -15.132694244384766
    8. ' (' → logprob: -15.257694244384766
    9. ' ()' → logprob: -17.007694244384766
    10. '(sys' → logprob: -17.132694244384766

Token 514: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.030175765976309776
    2. '().' → logprob: -3.5301756858825684
    3. '()' → logprob: -7.780175685882568
    4. ')' → logprob: -12.405176162719727
    5. ' ())' → logprob: -13.280176162719727
    6. '())
' → logprob: -13.905176162719727
    7. '(' → logprob: -15.530176162719727
    8. '();)' → logprob: -15.655176162719727
    9. '())

' → logprob: -16.655176162719727
    10. '()),' → logprob: -16.905176162719727

Token 515: '#' (ID: 2)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.052530672401189804
    2. '#' → logprob: -3.4275307655334473
    3. 'm' → logprob: -4.427530765533447
    4. 'INF' → logprob: -5.802530765533447
    5. 'colors' → logprob: -5.927530765533447
    6. 'edges' → logprob: -7.552530765533447
    7. 'inf' → logprob: -8.302530288696289
    8. 'graph' → logprob: -9.302530288696289
    9. '#g' → logprob: -9.802530288696289
    10. 'n' → logprob: -10.177530288696289

Token 516: ' Initial' (ID: 9209)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0326445996761322
    2. '#' → logprob: -4.032644748687744
    3. 'INF' → logprob: -4.407644748687744
    4. 'colors' → logprob: -6.407644748687744
    5. 'inf' → logprob: -8.782644271850586
    6. 'edges' → logprob: -9.157644271850586
    7. 'm' → logprob: -9.532644271850586
    8. 'graph' → logprob: -9.532644271850586
    9. 'Inf' → logprob: -10.282644271850586
    10. 'import' → logprob: -10.782644271850586

Token 517: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.10584388673305511
    2. 'ization' → logprob: -2.4808437824249268
    3. 'iser' → logprob: -4.730844020843506
    4. 'ize' → logprob: -5.605844020843506
    5. 'is' → logprob: -6.605844020843506
    6. 'izing' → logprob: -6.730844020843506
    7. 'izer' → logprob: -7.980844020843506
    8. '#' → logprob: -8.355843544006348
    9. 'ise' → logprob: -8.605843544006348
    10. 'isez' → logprob: -8.980843544006348

Token 518: ' de' (ID: 334)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.06046473607420921
    2. 'd' → logprob: -3.68546462059021
    3. ' g' → logprob: -4.060464859008789
    4. ' d' → logprob: -4.810464859008789
    5. '#' → logprob: -6.060464859008789
    6. ' of' → logprob: -6.060464859008789
    7. 'n' → logprob: -7.685464859008789
    8. ' des' → logprob: -7.685464859008789
    9. 'graph' → logprob: -7.685464859008789
    10. '<|end|>' → logprob: -7.935464859008789

Token 519: ' la' (ID: 557)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.048771198838949203
    2. ' g' → logprob: -3.0487711429595947
    3. '[]' → logprob: -8.798770904541016
    4. 'd' → logprob: -11.548770904541016
    5. 'colors' → logprob: -12.298770904541016
    6. ' d' → logprob: -12.923770904541016
    7. '[' → logprob: -13.173770904541016
    8. 'graph' → logprob: -13.173770904541016
    9. 'inf' → logprob: -13.548770904541016
    10. ' ' → logprob: -13.548770904541016

Token 520: ' liste' (ID: 31719)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.010901497676968575
    2. 'colors' → logprob: -4.63590145111084
    3. 'graph' → logprob: -7.13590145111084
    4. ' g' → logprob: -8.63590145111084
    5. 'import' → logprob: -10.01090145111084
    6. 'd' → logprob: -10.26090145111084
    7. 'adj' → logprob: -10.63590145111084
    8. 'INF' → logprob: -11.38590145111084
    9. 'dist' → logprob: -11.63590145111084
    10. 'inf' → logprob: -11.76090145111084

Token 521: ' d' (ID: 272)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.037155602127313614
    2. ' g' → logprob: -3.6621556282043457
    3. 's' → logprob: -5.537155628204346
    4. '_g' → logprob: -6.662155628204346
    5. ' des' → logprob: -7.037155628204346
    6. 'd' → logprob: -7.287155628204346
    7. ' =' → logprob: -7.287155628204346
    8. ' of' → logprob: -7.412155628204346
    9. 'des' → logprob: -7.412155628204346
    10. '#g' → logprob: -7.787155628204346

Token 522: ''ad' (ID: 36162)
  Prédit: ''ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ad' → logprob: -0.3367762863636017
    2. 'adj' → logprob: -1.3367762565612793
    3. 'e' → logprob: -4.961776256561279
    4. '_ad' → logprob: -5.836776256561279
    5. '_adj' → logprob: -5.836776256561279
    6. '’ad' → logprob: -6.086776256561279
    7. ' adjacency' → logprob: -6.086776256561279
    8. '[]' → logprob: -6.336776256561279
    9. 'ad' → logprob: -6.711776256561279
    10. '```' → logprob: -6.961776256561279

Token 523: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.38803035020828247
    2. 'j' → logprob: -1.1380302906036377
    3. 'js' → logprob: -7.513030529022217
    4. 'ja' → logprob: -8.013030052185059
    5. 'jec' → logprob: -9.138030052185059
    6. 'jc' → logprob: -9.388030052185059
    7. '[j' → logprob: -11.013030052185059
    8. 'g' → logprob: -11.138030052185059
    9. 'jm' → logprob: -11.513030052185059
    10. 's' → logprob: -12.013030052185059

Token 524: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.08004520833492279
    2. 'ences' → logprob: -2.830045223236084
    3. 'g' → logprob: -4.705045223236084
    4. 'cence' → logprob: -5.580045223236084
    5. 'escence' → logprob: -6.580045223236084
    6. '#' → logprob: -6.830045223236084
    7. 'ces' → logprob: -6.830045223236084
    8. 'acency' → logprob: -8.080044746398926
    9. 'c' → logprob: -8.205044746398926
    10. 'rence' → logprob: -8.455044746398926

Token 525: ' pour' (ID: 1930)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.176947600673884e-05
    2. '=' → logprob: -11.875021934509277
    3. ' =' → logprob: -12.125021934509277
    4. ',' → logprob: -12.750021934509277
    5. ' g' → logprob: -13.375021934509277
    6. '
' → logprob: -13.750021934509277
    7. '#' → logprob: -13.875021934509277
    8. 'for' → logprob: -14.000021934509277
    9. '=g' → logprob: -14.625021934509277
    10. '#g' → logprob: -15.125021934509277

Token 526: ' le' (ID: 505)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.012566749937832355
    2. ' g' → logprob: -4.387566566467285
    3. '[]' → logprob: -10.262566566467285
    4. '[g' → logprob: -12.512566566467285
    5. 'n' → logprob: -12.637566566467285
    6. 'le' → logprob: -13.262566566467285
    7. '_g' → logprob: -13.387566566467285
    8. '_' → logprob: -13.637566566467285
    9. ' la' → logprob: -13.637566566467285
    10. 'graph' → logprob: -13.762566566467285

Token 527: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.03773985058069229
    2. 'g' → logprob: -3.6627397537231445
    3. 'graph' → logprob: -4.9127397537231445
    4. ' grap' → logprob: -5.5377397537231445
    5. ' graph' → logprob: -10.162739753723145
    6. ' g' → logprob: -10.287739753723145
    7. 'gra' → logprob: -12.537739753723145
    8. 'graf' → logprob: -13.287739753723145
    9. 'graphs' → logprob: -13.287739753723145
    10. '```' → logprob: -13.912739753723145

Token 528: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.7971335649490356
    2. 'he' → logprob: -1.6721335649490356
    3. 'phe' → logprob: -1.6721335649490356
    4. 'ph' → logprob: -2.297133445739746
    5. '#' → logprob: -3.797133445739746
    6. 'phes' → logprob: -4.047133445739746
    7. 'hes' → logprob: -4.172133445739746
    8. 'raph' → logprob: -5.547133445739746
    9. 'h' → logprob: -5.672133445739746
    10. 'es' → logprob: -5.797133445739746

Token 529: ' et' (ID: 859)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0018634299049153924
    2. ' =' → logprob: -6.626863479614258
    3. '=' → logprob: -7.626863479614258
    4. ' g' → logprob: -10.376863479614258
    5. '=g' → logprob: -11.626863479614258
    6. ',' → logprob: -12.876863479614258
    7. ':' → logprob: -13.001863479614258
    8. '[g' → logprob: -13.626863479614258
    9. '#' → logprob: -14.251863479614258
    10. '```' → logprob: -14.501863479614258

Token 530: ' la' (ID: 557)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.018165279179811478
    2. 'g' → logprob: -4.518165111541748
    3. ' colors' → logprob: -5.268165111541748
    4. 'edges' → logprob: -7.643165111541748
    5. 'd' → logprob: -8.143165588378906
    6. 'les' → logprob: -8.143165588378906
    7. '#' → logprob: -8.518165588378906
    8. 'l' → logprob: -8.518165588378906
    9. 'le' → logprob: -9.268165588378906
    10. 'la' → logprob: -9.268165588378906

Token 531: ' matr' (ID: 25095)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.8817853927612305
    2. 'mat' → logprob: -1.1317853927612305
    3. 'dist' → logprob: -1.8817853927612305
    4. 'distance' → logprob: -2.8817853927612305
    5. 'matrix' → logprob: -4.6317853927612305
    6. 'liste' → logprob: -4.7567853927612305
    7. ' matr' → logprob: -4.8817853927612305
    8. '#' → logprob: -5.0067853927612305
    9. 'list' → logprob: -5.3817853927612305
    10. ' distances' → logprob: -5.7567853927612305

Token 532: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.10231035947799683
    2. 'ce' → logprob: -2.4773104190826416
    3. 'ices' → logprob: -4.4773101806640625
    4. 'ces' → logprob: -6.8523101806640625
    5. 'ge' → logprob: -8.602310180664062
    6. 'ise' → logprob: -9.352310180664062
    7. '#' → logprob: -9.477310180664062
    8. 'isse' → logprob: -9.602310180664062
    9. 'iste' → logprob: -10.102310180664062
    10. 'che' → logprob: -10.477310180664062

Token 533: ' des' (ID: 731)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05616753175854683
    2. 'de' → logprob: -3.9311676025390625
    3. ' d' → logprob: -4.5561676025390625
    4. ' de' → logprob: -4.6811676025390625
    5. ' des' → logprob: -5.0561676025390625
    6. 'des' → logprob: -5.5561676025390625
    7. ' of' → logprob: -6.6811676025390625
    8. 'inf' → logprob: -7.1811676025390625
    9. '<|end|>' → logprob: -7.1811676025390625
    10. 'import' → logprob: -7.3061676025390625

Token 534: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.17089146375656128
    2. ' distances' → logprob: -1.920891523361206
    3. 'distance' → logprob: -5.045891284942627
    4. 'd' → logprob: -6.045891284942627
    5. 'po' → logprob: -6.795891284942627
    6. ' poids' → logprob: -8.420891761779785
    7. ' dist' → logprob: -9.420891761779785
    8. 'Distances' → logprob: -9.420891761779785
    9. 'pond' → logprob: -9.920891761779785
    10. 'cout' → logprob: -10.045891761779785

Token 535: '
' (ID: 198)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00010008628305513412
    2. '
' → logprob: -9.625100135803223
    3. ':' → logprob: -12.000100135803223
    4. '```' → logprob: -12.125100135803223
    5. ' g' → logprob: -12.125100135803223
    6. '#' → logprob: -12.375100135803223
    7. ',' → logprob: -12.625100135803223
    8. '=' → logprob: -13.000100135803223
    9. ':
' → logprob: -13.250100135803223
    10. '#g' → logprob: -13.250100135803223

Token 536: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.9361264946837764e-07
    2. ' g' → logprob: -16.625
    3. '```' → logprob: -17.375
    4. 'colors' → logprob: -17.75
    5. 'graph' → logprob: -19.25
    6. '#' → logprob: -19.875
    7. '_g' → logprob: -19.875
    8. '#g' → logprob: -20.375
    9. '
' → logprob: -20.875
    10. 'import' → logprob: -21.625

Token 537: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020925104618073
    2. '=' → logprob: -2.3502092361450195
    3. ',' → logprob: -13.22520923614502
    4. '=[]' → logprob: -14.35020923614502
    5. '=[' → logprob: -16.225210189819336
    6. '＝' → logprob: -17.100210189819336
    7. ' ' → logprob: -17.725210189819336
    8. ' ' → logprob: -17.850210189819336
    9. ' =[' → logprob: -17.975210189819336
    10. '=g' → logprob: -18.350210189819336

Token 538: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015920029545668513
    2. ' [[]' → logprob: -8.75015926361084
    3. '[]' → logprob: -14.50015926361084
    4. '[[' → logprob: -15.50015926361084
    5. '[:]' → logprob: -18.750158309936523
    6. '[['' → logprob: -19.000158309936523
    7. '[n' → logprob: -19.125158309936523
    8. '[int' → logprob: -19.500158309936523
    9. '[
' → logprob: -19.750158309936523
    10. '[]
' → logprob: -19.875158309936523

Token 539: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5762861371040344
    2. ' for' → logprob: -0.8262861371040344
    3. ')' → logprob: -8.201286315917969
    4. ']' → logprob: -10.076286315917969
    5. ',' → logprob: -11.701286315917969
    6. '	for' → logprob: -11.826286315917969
    7. ' ' → logprob: -11.951286315917969
    8. 'n' → logprob: -12.576286315917969
    9. '   ' → logprob: -13.076286315917969
    10. ',n' → logprob: -14.451286315917969

Token 540: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00014573395310435444
    2. '_range' → logprob: -9.62514591217041
    3. 'range' → logprob: -10.50014591217041
    4. '_i' → logprob: -11.12514591217041
    5. ' range' → logprob: -11.50014591217041
    6. '_s' → logprob: -11.62514591217041
    7. ' _' → logprob: -11.62514591217041
    8. '_v' → logprob: -13.50014591217041
    9. 'i' → logprob: -13.62514591217041
    10. '_in' → logprob: -13.75014591217041

Token 541: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012226363644003868
    2. ' range' → logprob: -5.012226581573486
    3. 'in' → logprob: -5.262226581573486
    4. ' in' → logprob: -8.512226104736328
    5. '_' → logprob: -9.137226104736328
    6. '_range' → logprob: -13.387226104736328
    7. 'i' → logprob: -14.137226104736328
    8. ' ' → logprob: -14.887226104736328
    9. '0' → logprob: -15.137226104736328
    10. ' _' → logprob: -15.262226104736328

Token 542: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0206720617134124e-05
    2. ' range' → logprob: -11.50001049041748
    3. '_' → logprob: -20.500009536743164
    4. 'r' → logprob: -21.375009536743164
    5. 'rang' → logprob: -21.500009536743164
    6. '	range' → logprob: -21.750009536743164
    7. '(range' → logprob: -21.875009536743164
    8. '_range' → logprob: -22.000009536743164
    9. '   ' → logprob: -22.375009536743164
    10. ' ' → logprob: -22.500009536743164

Token 543: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04858884960412979
    2. 'n' → logprob: -3.048588752746582
    3. '(' → logprob: -14.298588752746582
    4. ' n' → logprob: -14.548588752746582
    5. ' (' → logprob: -15.673588752746582
    6. '	n' → logprob: -16.0485897064209
    7. '
' → logprob: -17.5485897064209
    8. ')n' → logprob: -17.9235897064209
    9. '_n' → logprob: -19.5485897064209
    10. '(
' → logprob: -20.1735897064209

Token 544: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.6047699318733066e-05
    2. ')]
' → logprob: -11.125016212463379
    3. ')]

' → logprob: -14.500016212463379
    4. ')]
' → logprob: -15.000016212463379
    5. ')' → logprob: -15.250016212463379
    6. ']' → logprob: -16.875015258789062
    7. ' )' → logprob: -17.000015258789062
    8. ')],' → logprob: -17.500015258789062
    9. ')].' → logprob: -17.625015258789062
    10. ')])' → logprob: -19.375015258789062

Token 545: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0027520956937223673
    2. '<|end|>' → logprob: -6.502752304077148
    3. 'distance' → logprob: -7.502752304077148
    4. '
' → logprob: -7.877752304077148
    5. 'dist' → logprob: -8.627752304077148
    6. ' d' → logprob: -9.002752304077148
    7. ' distances' → logprob: -12.127752304077148
    8. '  
' → logprob: -13.252752304077148
    9. ' 
' → logprob: -13.502752304077148
    10. ',' → logprob: -13.627752304077148

Token 546: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003326480044052005
    2. 'dist' → logprob: -6.003326416015625
    3. 'distance' → logprob: -7.253326416015625
    4. '
' → logprob: -9.628326416015625
    5. 'inf' → logprob: -11.003326416015625
    6. '<|end|>' → logprob: -11.253326416015625
    7. 'INF' → logprob: -11.253326416015625
    8. 'g' → logprob: -12.128326416015625
    9. '#' → logprob: -12.128326416015625
    10. 'colors' → logprob: -12.878326416015625

Token 547: ' Liste' (ID: 61030)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011964072473347187
    2. 'INF' → logprob: -5.261963844299316
    3. 'dist' → logprob: -5.511963844299316
    4. 'inf' → logprob: -7.136963844299316
    5. 'for' → logprob: -7.386963844299316
    6. 'distance' → logprob: -7.511963844299316
    7. 'colors' → logprob: -7.511963844299316
    8. 'import' → logprob: -10.011963844299316
    9. 'D' → logprob: -10.636963844299316
    10. 'color' → logprob: -11.136963844299316

Token 548: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9534144401550293
    2. '<|end|>' → logprob: -1.4534144401550293
    3. ' des' → logprob: -2.2034144401550293
    4. 'des' → logprob: -2.3284144401550293
    5. ' of' → logprob: -2.9534144401550293
    6. ' d' → logprob: -3.3284144401550293
    7. 'for' → logprob: -3.3284144401550293
    8. ' for' → logprob: -4.453414440155029
    9. ' de' → logprob: -4.703414440155029
    10. 'of' → logprob: -5.453414440155029

Token 549: ''ad' (ID: 36162)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.02960294485092163
    2. ''ad' → logprob: -3.7796030044555664
    3. ' adjacency' → logprob: -5.529603004455566
    4. '[]' → logprob: -6.404603004455566
    5. 'e' → logprob: -8.279603004455566
    6. 'ad' → logprob: -8.779603004455566
    7. '’ad' → logprob: -9.404603004455566
    8. '_adj' → logprob: -10.154603004455566
    9. '-ad' → logprob: -10.529603004455566
    10. 'Adj' → logprob: -10.779603004455566

Token 550: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.16038283705711365
    2. 'j' → logprob: -1.910382866859436
    3. 'acency' → logprob: -10.035383224487305
    4. 'g' → logprob: -10.160383224487305
    5. 'jec' → logprob: -10.660383224487305
    6. 'jc' → logprob: -11.035383224487305
    7. 'js' → logprob: -11.785383224487305
    8. 'aj' → logprob: -11.910383224487305
    9. 'adj' → logprob: -12.285383224487305
    10. 'ja' → logprob: -13.035383224487305

Token 551: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.01569845713675022
    2. 'acency' → logprob: -5.515698432922363
    3. 'escence' → logprob: -5.640698432922363
    4. 'ance' → logprob: -5.765698432922363
    5. 'ac' → logprob: -6.390698432922363
    6. 'ences' → logprob: -7.015698432922363
    7. 'es' → logprob: -7.140698432922363
    8. 'ace' → logprob: -7.765698432922363
    9. 'cence' → logprob: -8.140698432922363
    10. '#' → logprob: -9.015698432922363

Token 552: ' pour' (ID: 1930)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.029736364260315895
    2. '<|end|>' → logprob: -4.154736518859863
    3. 'dist' → logprob: -4.904736518859863
    4. '
' → logprob: -5.779736518859863
    5. 'distance' → logprob: -5.904736518859863
    6. ' d' → logprob: -8.279736518859863
    7. ' distances' → logprob: -9.779736518859863
    8. ' 
' → logprob: -10.904736518859863
    9. '  
' → logprob: -11.404736518859863
    10. 'for' → logprob: -11.779736518859863

Token 553: ' chaque' (ID: 21194)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8916378021240234
    2. ' chaque' → logprob: -1.7666378021240234
    3. 'le' → logprob: -2.2666378021240234
    4. ' les' → logprob: -2.5166378021240234
    5. '_' → logprob: -2.5166378021240234
    6. 'l' → logprob: -2.7666378021240234
    7. 'la' → logprob: -4.016637802124023
    8. ' la' → logprob: -4.141637802124023
    9. 'g' → logprob: -4.641637802124023
    10. ' le' → logprob: -5.016637802124023

Token 554: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.06232336163520813
    2. 'som' → logprob: -3.1873233318328857
    3. 's' → logprob: -4.312323570251465
    4. 'vertex' → logprob: -6.062323570251465
    5. 'range' → logprob: -6.937323570251465
    6. ' somm' → logprob: -7.687323570251465
    7. ' som' → logprob: -7.937323570251465
    8. 'i' → logprob: -8.062323570251465
    9. ' range' → logprob: -8.562323570251465
    10. ' i' → logprob: -8.687323570251465

Token 555: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.30936190485954285
    2. 'colors' → logprob: -1.9343619346618652
    3. 'dist' → logprob: -2.9343619346618652
    4. '
' → logprob: -3.0593619346618652
    5. '<|end|>' → logprob: -4.434361934661865
    6. 'distance' → logprob: -4.809361934661865
    7. ' distances' → logprob: -7.684361934661865
    8. ' 
' → logprob: -8.059361457824707
    9. '  
' → logprob: -8.559361457824707
    10. ' d' → logprob: -9.059361457824707

Token 556: 'f' (ID: 69)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.0346364863216877
    2. 'd' → logprob: -3.7846364974975586
    3. 'dist' → logprob: -5.159636497497559
    4. 'INF' → logprob: -5.409636497497559
    5. 'inf' → logprob: -7.659636497497559
    6. 'for' → logprob: -8.409636497497559
    7. 'color' → logprob: -8.784636497497559
    8. 'distance' → logprob: -8.909636497497559
    9. ' colors' → logprob: -9.909636497497559
    10. '```' → logprob: -11.034636497497559

Token 557: '_inf' (ID: 107309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.631986677646637
    2. 'or' → logprob: -1.0069866180419922
    3. ' =' → logprob: -3.256986618041992
    4. 'l' → logprob: -4.256986618041992
    5. 'lo' → logprob: -4.881986618041992
    6. '_dist' → logprob: -4.881986618041992
    7. 'loyd' → logprob: -5.131986618041992
    8. '=' → logprob: -5.131986618041992
    9. 'd' → logprob: -5.506986618041992
    10. 'loat' → logprob: -5.881986618041992

Token 558: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1158214807510376
    2. '=' → logprob: -2.990821361541748
    3. '=float' → logprob: -3.365821361541748
    4. 'o' → logprob: -3.740821361541748
    5. 'loat' → logprob: -8.115821838378906
    6. '=int' → logprob: -8.740821838378906
    7. 'i' → logprob: -8.990821838378906
    8. 'inf' → logprob: -10.240821838378906
    9. 'init' → logprob: -10.240821838378906
    10. 'inite' → logprob: -10.240821838378906

Token 559: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.02345370687544346
    2. '10' → logprob: -3.773453712463379
    3. ' float' → logprob: -8.523453712463379
    4. 'int' → logprob: -12.148453712463379
    5. '1' → logprob: -12.898453712463379
    6. '(float' → logprob: -14.398453712463379
    7. '100' → logprob: -14.523453712463379
    8. ' ' → logprob: -14.773453712463379
    9. '	float' → logprob: -16.023452758789062
    10. 'fl' → logprob: -17.023452758789062

Token 560: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0004348413785919547
    2. '("' → logprob: -8.375434875488281
    3. ''in' → logprob: -8.500434875488281
    4. ''' → logprob: -15.250434875488281
    5. '(in' → logprob: -15.625434875488281
    6. '(' → logprob: -15.750434875488281
    7. '"' → logprob: -17.00043487548828
    8. ''il' → logprob: -17.37543487548828
    9. ''inc' → logprob: -17.37543487548828
    10. ''ex' → logprob: -17.50043487548828

Token 561: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.20227883756160736
    2. 'inf' → logprob: -1.7022788524627686
    3. ''' → logprob: -7.2022786140441895
    4. '"' → logprob: -9.702279090881348
    5. ''ex' → logprob: -10.952279090881348
    6. 'in' → logprob: -11.202279090881348
    7. ''inc' → logprob: -12.202279090881348
    8. ''ins' → logprob: -12.702279090881348
    9. ''int' → logprob: -12.827279090881348
    10. '('' → logprob: -12.827279090881348

Token 562: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.030021915212273598
    2. ')' → logprob: -3.530021905899048
    3. '')
' → logprob: -8.280021667480469
    4. '")' → logprob: -12.030021667480469
    5. '')
' → logprob: -12.905021667480469
    6. '')

' → logprob: -13.405021667480469
    7. ')'' → logprob: -13.655021667480469
    8. '.')' → logprob: -13.905021667480469
    9. ')')
' → logprob: -14.030021667480469
    10. ''' → logprob: -14.155021667480469

Token 563: '       ' (ID: 309)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06475485116243362
    2. 'dist' → logprob: -3.3147549629211426
    3. '
' → logprob: -4.314754962921143
    4. 'distance' → logprob: -4.439754962921143
    5. '#' → logprob: -7.439754962921143
    6. ' d' → logprob: -8.314754486083984
    7. '<|end|>' → logprob: -8.814754486083984
    8. ' distances' → logprob: -9.064754486083984
    9. '

' → logprob: -10.814754486083984
    10. 'colors' → logprob: -11.064754486083984

Token 564: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08398961275815964
    2. 'dist' → logprob: -2.7089896202087402
    3. 'distance' → logprob: -4.83398962020874
    4. '
' → logprob: -5.83398962020874
    5. '#' (adapté à ' #') → logprob: -5.83398962020874
    6. 'colors' → logprob: -9.208989143371582
    7. '

' → logprob: -10.958989143371582
    8. ' distances' → logprob: -11.458989143371582
    9. ' d' → logprob: -12.583989143371582
    10. '
' → logprob: -12.833989143371582

Token 565: ' Re' (ID: 907)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6872373223304749
    2. 'f' → logprob: -1.31223726272583
    3. 'inf' → logprob: -1.93723726272583
    4. '#' → logprob: -3.31223726272583
    5. 'distance' → logprob: -3.68723726272583
    6. 'dist' → logprob: -4.18723726272583
    7. 'colors' → logprob: -6.06223726272583
    8. 'float' → logprob: -6.18723726272583
    9. 'INF' → logprob: -6.81223726272583
    10. 'import' → logprob: -7.93723726272583

Token 566: 'prés' (ID: 61592)
  Prédit: 'loat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loat' → logprob: -0.1399940401315689
    2. 'inf' → logprob: -2.2649941444396973
    3. 'f' → logprob: -4.764994144439697
    4. '=float' → logprob: -5.264994144439697
    5. '_inf' → logprob: -5.514994144439697
    6. '```' → logprob: -6.014994144439697
    7. '#' → logprob: -6.389994144439697
    8. 'float' → logprob: -7.889994144439697
    9. 'l' → logprob: -8.014993667602539
    10. 'ormat' → logprob: -8.014993667602539

Token 567: 'ente' (ID: 1576)
  Prédit: 'resent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'resent' → logprob: -1.1443313360214233
    2. 'resents' → logprob: -1.2693313360214233
    3. 'sent' → logprob: -1.8943313360214233
    4. 'esent' → logprob: -2.394331455230713
    5. 'resente' → logprob: -2.769331455230713
    6. 'prés' → logprob: -3.769331455230713
    7. 'rés' → logprob: -4.144331455230713
    8. 'float' → logprob: -4.269331455230713
    9. 'resenter' → logprob: -5.144331455230713
    10. 'resentation' → logprob: -5.519331455230713

Token 568: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.13694295287132263
    2. 'l' → logprob: -2.5119428634643555
    3. ' une' → logprob: -3.2619428634643555
    4. '<|end|>' → logprob: -5.6369428634643555
    5. ' ' → logprob: -6.6369428634643555
    6. ' la' → logprob: -6.7619428634643555
    7. ' ' → logprob: -7.3869428634643555
    8. 'une' → logprob: -7.7619428634643555
    9. ' infinity' → logprob: -8.511942863464355
    10. 'inf' → logprob: -8.636942863464355

Token 569: ''in' (ID: 17942)
  Prédit: ''in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.4850026071071625
    2. 'a' → logprob: -1.6100026369094849
    3. 'in' → logprob: -2.3600025177001953
    4. 'e' → logprob: -3.1100025177001953
    5. 'inf' → logprob: -3.7350025177001953
    6. '_in' → logprob: -5.360002517700195
    7. 'oint' → logprob: -5.485002517700195
    8. '∞' → logprob: -6.485002517700195
    9. ''' → logprob: -6.985002517700195
    10. 'distance' → logprob: -7.110002517700195

Token 570: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.009220817126333714
    2. 'finity' → logprob: -5.009220600128174
    3. 'fin' → logprob: -6.634220600128174
    4. 'finite' → logprob: -7.009220600128174
    5. 'float' → logprob: -8.759221076965332
    6. 'fi' → logprob: -9.509221076965332
    7. 'fty' → logprob: -10.509221076965332
    8. '```' → logprob: -12.509221076965332
    9. 'possible' → logprob: -13.259221076965332
    10. 'fo' → logprob: -13.259221076965332

Token 571: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.13626712560653687
    2. 'inity' → logprob: -2.1362671852111816
    3. 'init' → logprob: -5.886267185211182
    4. 'iny' → logprob: -6.136267185211182
    5. 'inie' → logprob: -6.386267185211182
    6. 'ity' → logprob: -6.636267185211182
    7. 'inty' → logprob: -7.136267185211182
    8. 'inite' → logprob: -8.386266708374023
    9. 'in' → logprob: -9.386266708374023
    10. 'i' → logprob: -9.511266708374023

Token 572: ' pour' (ID: 1930)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04643877223134041
    2. 'dist' → logprob: -3.921438694000244
    3. '
' → logprob: -4.421438694000244
    4. '#' → logprob: -4.796438694000244
    5. 'distance' → logprob: -5.296438694000244
    6. ' d' → logprob: -9.171439170837402
    7. '<|end|>' → logprob: -9.671439170837402
    8. ' distances' → logprob: -10.421439170837402
    9. '

' → logprob: -10.921439170837402
    10. ' #' → logprob: -11.296439170837402

Token 573: ' l' (ID: 305)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.5048823356628418
    2. 'l' → logprob: -1.6298823356628418
    3. ' les' → logprob: -1.6298823356628418
    4. 'initial' → logprob: -1.6298823356628418
    5. ' la' → logprob: -2.754882335662842
    6. ' l' → logprob: -3.129882335662842
    7. ' initial' → logprob: -3.129882335662842
    8. 'la' → logprob: -3.379882335662842
    9. 'distance' → logprob: -6.629882335662842
    10. ' une' → logprob: -7.754882335662842

Token 574: ''' (ID: 6)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.8457009792327881
    2. 'es' → logprob: -1.095700979232788
    3. 'a' → logprob: -1.845700979232788
    4. ''' → logprob: -4.220701217651367
    5. 'init' → logprob: -4.345701217651367
    6. 'e' → logprob: -4.595701217651367
    7. 'dist' → logprob: -5.470701217651367
    8. 'istance' → logprob: -5.470701217651367
    9. 'in' → logprob: -5.720701217651367
    10. 'distance' → logprob: -5.720701217651367

Token 575: 'initial' (ID: 17493)
  Prédit: 'initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.08127909898757935
    2. 'distance' → logprob: -2.8312790393829346
    3. 'absence' → logprob: -4.831279277801514
    4. 'dist' → logprob: -5.331279277801514
    5. 'init' → logprob: -6.581279277801514
    6. '#' → logprob: -7.206279277801514
    7. 'in' → logprob: -7.331279277801514
    8. 'mat' → logprob: -7.581279277801514
    9. ''' → logprob: -7.831279277801514
    10. ' initial' → logprob: -7.956279277801514

Token 576: 'isation' (ID: 6993)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9364907145500183
    2. 'ity' → logprob: -1.436490774154663
    3. 'ité' → logprob: -1.436490774154663
    4. 'it' → logprob: -2.811490774154663
    5. 'u' → logprob: -4.186490535736084
    6. 'ition' → logprob: -4.436490535736084
    7. 'iti' → logprob: -4.686490535736084
    8. 'itié' → logprob: -4.686490535736084
    9. 'ite' → logprob: -5.061490535736084
    10. 'itie' → logprob: -5.436490535736084

Token 577: ' des' (ID: 731)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0019219681853428483
    2. 'dist' → logprob: -6.626922130584717
    3. 'distance' → logprob: -7.876922130584717
    4. '#' → logprob: -9.251921653747559
    5. '
' → logprob: -9.251921653747559
    6. ' d' → logprob: -11.126921653747559
    7. ',' → logprob: -12.626921653747559
    8. '```' → logprob: -13.251921653747559
    9. 'D' → logprob: -13.751921653747559
    10. ' distances' → logprob: -14.126921653747559

Token 578: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6282684803009033
    2. ' distances' → logprob: -0.8782684803009033
    3. 'distance' → logprob: -3.5032684803009033
    4. 'd' → logprob: -3.8782684803009033
    5. ' distance' → logprob: -9.128268241882324
    6. ' d' → logprob: -10.378268241882324
    7. ' dist' → logprob: -10.878268241882324
    8. 'Distances' → logprob: -11.003268241882324
    9. ' distancia' → logprob: -12.878268241882324
    10. 'mat' → logprob: -12.878268241882324

Token 579: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04596594348549843
    2. 'dist' → logprob: -3.4209659099578857
    3. '
' → logprob: -5.045966148376465
    4. 'distance' → logprob: -5.295966148376465
    5. 'colors' → logprob: -7.795966148376465
    6. '#' → logprob: -8.295966148376465
    7. ' d' → logprob: -10.920966148376465
    8. ' distances' → logprob: -10.920966148376465
    9. '```' → logprob: -11.045966148376465
    10. '  
' → logprob: -11.295966148376465

Token 580: 'dist' (ID: 24126)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0013424931094050407
    2. 'dist' → logprob: -7.126342296600342
    3. 'distance' → logprob: -7.626342296600342
    4. '#' → logprob: -10.7513427734375
    5. '```' → logprob: -10.7513427734375
    6. ' d' → logprob: -12.8763427734375
    7. '
' → logprob: -13.8763427734375
    8. 'f' → logprob: -14.3763427734375
    9. '<|end|>' → logprob: -14.7513427734375
    10. ' distances' → logprob: -14.7513427734375

Token 581: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759530663490295
    2. ' =' → logprob: -0.8259530663490295
    3. '=[]' → logprob: -12.200953483581543
    4. 'ance' → logprob: -13.200953483581543
    5. 'ances' → logprob: -13.575953483581543
    6. '=[' → logprob: -13.825953483581543
    7. '=[[' → logprob: -13.950953483581543
    8. '＝' → logprob: -13.950953483581543
    9. 's' → logprob: -14.825953483581543
    10. '[' → logprob: -14.950953483581543

Token 582: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0007105246186256409
    2. ' [[' → logprob: -7.250710487365723
    3. '[' → logprob: -14.750710487365723
    4. '([[' → logprob: -16.12571144104004
    5. '[f' → logprob: -18.12571144104004
    6. '[['' → logprob: -20.00071144104004
    7. ' [' → logprob: -20.12571144104004
    8. ' ' → logprob: -20.62571144104004
    9. '=[[' → logprob: -20.87571144104004
    10. '[
' → logprob: -20.87571144104004

Token 583: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0006217729533091187
    2. '0' → logprob: -7.750621795654297
    3. '(f' → logprob: -8.625621795654297
    4. '(' → logprob: -11.875621795654297
    5. ' f' → logprob: -12.625621795654297
    6. '	f' → logprob: -14.500621795654297
    7. '
' → logprob: -14.875621795654297
    8. 'float' → logprob: -15.625621795654297
    9. ' (' → logprob: -15.875621795654297
    10. ' ' → logprob: -17.750621795654297

Token 584: '_inf' (ID: 107309)
  Prédit: '_inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inf' → logprob: -0.0048515996895730495
    2. 'inf' → logprob: -5.379851818084717
    3. 'f' → logprob: -8.504851341247559
    4. '-inf' → logprob: -11.629851341247559
    5. 'n' → logprob: -11.879851341247559
    6. '_INF' → logprob: -12.504851341247559
    7. '.inf' → logprob: -13.254851341247559
    8. 'if' → logprob: -13.504851341247559
    9. 'float' → logprob: -14.004851341247559
    10. '+' → logprob: -14.379851341247559

Token 585: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8720654249191284
    2. ' if' → logprob: -1.2470654249191284
    3. 'if' → logprob: -2.122065544128418
    4. ']' → logprob: -2.497065544128418
    5. 'for' → logprob: -2.622065544128418
    6. ']*' → logprob: -3.997065544128418
    7. ']*(' → logprob: -6.872065544128418
    8. ')' → logprob: -8.997065544128418
    9. '   ' → logprob: -9.122065544128418
    10. ' ]' → logprob: -9.622065544128418

Token 586: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6837770938873291
    2. 'for' → logprob: -0.9337770938873291
    3. ' if' → logprob: -2.808777093887329
    4. 'if' → logprob: -3.183777093887329
    5. ']' → logprob: -8.30877685546875
    6. ']*' → logprob: -8.43377685546875
    7. '   ' → logprob: -10.68377685546875
    8. '	for' → logprob: -11.30877685546875
    9. ']*(' → logprob: -11.68377685546875
    10. ' ' → logprob: -12.30877685546875

Token 587: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.7610454708337784e-05
    2. ' n' → logprob: -10.500027656555176
    3. '(n' → logprob: -19.00002670288086
    4. '	n' → logprob: -19.37502670288086
    5. ')n' → logprob: -20.75002670288086
    6. '
' → logprob: -22.12502670288086
    7. '_n' → logprob: -23.12502670288086
    8. '   ' → logprob: -24.00002670288086
    9. '­n' → logprob: -24.62502670288086
    10. ',n' → logprob: -24.62502670288086

Token 588: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07891115546226501
    2. 'for' → logprob: -2.578911066055298
    3. '	for' → logprob: -11.328910827636719
    4. ']' → logprob: -12.078910827636719
    5. ')' → logprob: -13.328910827636719
    6. ' ' → logprob: -13.578910827636719
    7. '   ' → logprob: -14.828910827636719
    8. ' ' → logprob: -15.828910827636719
    9. '    ' → logprob: -16.70391082763672
    10. ' ]' → logprob: -16.95391082763672

Token 589: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00014609156642109156
    2. '_i' → logprob: -9.25014591217041
    3. ' _' → logprob: -10.12514591217041
    4. '_range' → logprob: -12.12514591217041
    5. '_j' → logprob: -13.25014591217041
    6. 'i' → logprob: -13.87514591217041
    7. '_n' → logprob: -14.37514591217041
    8. '_in' → logprob: -14.50014591217041
    9. '_=' → logprob: -16.125146865844727
    10. '_s' → logprob: -16.125146865844727

Token 590: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0040823169983923435
    2. ' range' → logprob: -5.504082202911377
    3. '_range' → logprob: -13.254082679748535
    4. '_' → logprob: -13.879082679748535
    5. 'in' → logprob: -13.879082679748535
    6. '(range' → logprob: -15.379082679748535
    7. '	range' → logprob: -16.50408172607422
    8. ' in' → logprob: -16.87908172607422
    9. 'n' → logprob: -19.37908172607422
    10. ' ' → logprob: -20.50408172607422

Token 591: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00861456897109747
    2. ' range' → logprob: -4.758614540100098
    3. '_range' → logprob: -17.633615493774414
    4. '	range' → logprob: -17.633615493774414
    5. '(range' → logprob: -18.258615493774414
    6. 'n' → logprob: -18.883615493774414
    7. '_' → logprob: -20.883615493774414
    8. '
' → logprob: -21.883615493774414
    9. 'in' → logprob: -22.008615493774414
    10. '   ' → logprob: -22.258615493774414

Token 592: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008756620809435844
    2. ' range' → logprob: -4.758756637573242
    3. '(range' → logprob: -9.008756637573242
    4. 'n' → logprob: -10.883756637573242
    5. '(n' → logprob: -13.883756637573242
    6. '	range' → logprob: -16.883756637573242
    7. 'in' → logprob: -17.508756637573242
    8. '_range' → logprob: -18.633756637573242
    9. ')' → logprob: -18.883756637573242
    10. '.range' → logprob: -19.258756637573242

Token 593: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.300083648762666e-05
    2. ')' → logprob: -10.250053405761719
    3. ']' → logprob: -11.000053405761719
    4. ' )' → logprob: -15.125053405761719
    5. ')]
' → logprob: -15.875053405761719
    6. ')],' → logprob: -16.25005340576172
    7. '])' → logprob: -16.25005340576172
    8. '])]' → logprob: -16.25005340576172
    9. ']]' → logprob: -16.75005340576172
    10. '')]' → logprob: -16.87505340576172

Token 594: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 595: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14429058134555817
    2. '<|end|>' → logprob: -2.1442906856536865
    3. ' for' → logprob: -4.769290447235107
    4. '
' → logprob: -5.269290447235107
    5. 'dist' → logprob: -5.769290447235107
    6. '<|end|>' → logprob: -8.519290924072266
    7. ' 
' → logprob: -9.769290924072266
    8. '
' → logprob: -10.019290924072266
    9. '  
' → logprob: -10.019290924072266
    10. '

' → logprob: -10.769290924072266

Token 596: ' Mat' (ID: 9926)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009857968427240849
    2. ' for' → logprob: -4.634858131408691
    3. '<|end|>' → logprob: -9.259858131408691
    4. 'dist' → logprob: -12.259858131408691
    5. '0' → logprob: -15.009858131408691
    6. '	for' → logprob: -15.134858131408691
    7. '#' → logprob: -15.134858131408691
    8. '[' → logprob: -15.259858131408691
    9. 'For' → logprob: -15.509858131408691
    10. '<|end|>' → logprob: -15.634858131408691

Token 597: 'rice' (ID: 44478)
  Prédit: 'atrice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atrice' → logprob: -1.338600516319275
    2. '[i' → logprob: -1.713600516319275
    3. 'atrix' → logprob: -1.713600516319275
    4. '[n' → logprob: -1.838600516319275
    5. '[' → logprob: -2.7136006355285645
    6. 'n' → logprob: -3.5886006355285645
    7. ']' → logprob: -3.7136006355285645
    8. 'dist' → logprob: -3.9636006355285645
    9. '=' → logprob: -4.3386006355285645
    10. '[ind' → logprob: -4.9636006355285645

Token 598: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 599: ' poids' (ID: 56058)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.006458143703639507
    2. 'n' → logprob: -5.631458282470703
    3. 'range' → logprob: -6.631458282470703
    4. ' distances' → logprob: -6.881458282470703
    5. 'distance' → logprob: -8.131458282470703
    6. ' dist' → logprob: -8.881458282470703
    7. ' range' → logprob: -10.131458282470703
    8. ' n' → logprob: -11.131458282470703
    9. 'ranges' → logprob: -11.381458282470703
    10. '
' → logprob: -12.256458282470703

Token 600: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 601: 'dist' (ID: 24126)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009292102768085897
    2. ')' → logprob: -7.750929355621338
    3. ' n' → logprob: -8.00092887878418
    4. ')n' → logprob: -9.00092887878418
    5. '(n' → logprob: -10.50092887878418
    6. ']' → logprob: -12.75092887878418
    7. '<|end|>' → logprob: -12.75092887878418
    8. ')]' → logprob: -12.87592887878418
    9. '])' → logprob: -14.00092887878418
    10. 'dist' → logprob: -14.50092887878418

Token 602: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.004879704210907221
    2. '[i' → logprob: -6.129879474639893
    3. ']' → logprob: -6.254879474639893
    4. '[' → logprob: -7.754879474639893
    5. 'ance' → logprob: -8.87987995147705
    6. '   ' → logprob: -10.12987995147705
    7. 'ancias' → logprob: -11.00487995147705
    8. ')' → logprob: -11.12987995147705
    9. '])' → logprob: -11.25487995147705
    10. 'anc' → logprob: -11.25487995147705

Token 603: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011149567551910877
    2. 'for' → logprob: -5.1361494064331055
    3. ' for' → logprob: -5.8861494064331055
    4. ' )' → logprob: -6.7611494064331055
    5. ')]' → logprob: -7.3861494064331055
    6. '])' → logprob: -8.386149406433105
    7. ']' → logprob: -8.511149406433105
    8. '   ' → logprob: -10.261149406433105
    9. ')])' → logprob: -10.511149406433105
    10. '[i' → logprob: -10.886149406433105

Token 604: ' init' (ID: 6327)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21355308592319489
    2. '<|end|>' → logprob: -1.9635530710220337
    3. ' for' → logprob: -2.9635531902313232
    4. '
' → logprob: -8.963553428649902
    5. '<|end|>' → logprob: -9.213553428649902
    6. 'dist' → logprob: -10.213553428649902
    7. ')' → logprob: -11.088553428649902
    8. '#' → logprob: -12.588553428649902
    9. '```' → logprob: -13.213553428649902
    10. ',' → logprob: -13.463553428649902

Token 605: 'iaux' (ID: 35231)
  Prédit: 'ial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.6077820062637329
    2. 'ialis' → logprob: -0.9827820062637329
    3. '[i' → logprob: -3.6077818870544434
    4. 'i' → logprob: -3.8577818870544434
    5. '[' → logprob: -4.607781887054443
    6. 'iaux' → logprob: -4.982781887054443
    7. 'iale' → logprob: -4.982781887054443
    8. '[:]' → logprob: -5.607781887054443
    9. 'ialize' → logprob: -6.607781887054443
    10. ']' → logprob: -6.857781887054443

Token 606: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03284821659326553
    2. ' for' → logprob: -3.9078481197357178
    3. '<|end|>' → logprob: -4.407848358154297
    4. '<|end|>' → logprob: -11.032848358154297
    5. '
' → logprob: -11.282848358154297
    6. '#' → logprob: -11.657848358154297
    7. '```' → logprob: -12.157848358154297
    8. 'dist' → logprob: -12.907848358154297
    9. ')' → logprob: -13.282848358154297
    10. ',' → logprob: -13.532848358154297

Token 607: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003384422743692994
    2. ' for' → logprob: -8.000338554382324
    3. '<|end|>' → logprob: -13.625338554382324
    4. '```' → logprob: -14.125338554382324
    5. '#' → logprob: -14.250338554382324
    6. '
' → logprob: -15.750338554382324
    7. 'n' → logprob: -15.875338554382324
    8. 'dist' → logprob: -16.750337600708008
    9. '	for' → logprob: -17.875337600708008
    10. '  
' → logprob: -17.875337600708008

Token 608: ' Distance' (ID: 53583)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001741935731843114
    2. 'colors' → logprob: -6.501741886138916
    3. 'm' → logprob: -8.501742362976074
    4. ' for' → logprob: -10.626742362976074
    5. 'edges' → logprob: -12.376742362976074
    6. 'color' → logprob: -12.376742362976074
    7. '#' → logprob: -12.626742362976074
    8. 'q' → logprob: -15.626742362976074
    9. ' colors' → logprob: -16.251741409301758
    10. 'import' → logprob: -17.376741409301758

Token 609: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7219372391700745
    2. '[i' → logprob: -1.4719371795654297
    3. '<|end|>' → logprob: -1.9719371795654297
    4. 'for' → logprob: -2.7219371795654297
    5. ' for' → logprob: -3.3469371795654297
    6. ' =' → logprob: -3.9719371795654297
    7. '[source' → logprob: -5.72193717956543
    8. '[src' → logprob: -5.84693717956543
    9. 's' → logprob: -5.97193717956543
    10. '[u' → logprob: -6.09693717956543

Token 610: ''un' (ID: 9788)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5679832100868225
    2. 'istance' → logprob: -1.3179831504821777
    3. '[i' → logprob: -2.3179831504821777
    4. 'ist' → logprob: -2.9429831504821777
    5. ' i' → logprob: -4.442983150482178
    6. ' for' → logprob: -7.442983150482178
    7. '(i' → logprob: -7.817983150482178
    8. '=i' → logprob: -8.067983627319336
    9. 'istant' → logprob: -8.817983627319336
    10. '```' → logprob: -8.942983627319336

Token 611: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07196199148893356
    2. ' sommet' → logprob: -3.5719618797302246
    3. '[i' → logprob: -3.8219618797302246
    4. ' i' → logprob: -5.071961879730225
    5. 'istance' → logprob: -5.696961879730225
    6. 'som' → logprob: -6.071961879730225
    7. 'e' → logprob: -6.071961879730225
    8. '(i' → logprob: -7.196961879730225
    9. '```' → logprob: -7.321961879730225
    10. 's' → logprob: -7.321961879730225

Token 612: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07008859515190125
    2. ' à' → logprob: -3.8200886249542236
    3. '[' → logprob: -4.5700883865356445
    4. 'i' → logprob: -4.6950883865356445
    5. ' de' → logprob: -5.4450883865356445
    6. ' i' → logprob: -5.6950883865356445
    7. '<|end|>' → logprob: -5.6950883865356445
    8. ' ' → logprob: -5.9450883865356445
    9. 'de' → logprob: -6.0700883865356445
    10. 'à' → logprob: -6.5700883865356445

Token 613: ' lui' (ID: 10623)
  Prédit: ' itself'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itself' → logprob: -0.4373675286769867
    2. '<|end|>' → logprob: -2.3123674392700195
    3. ' lui' → logprob: -2.4373674392700195
    4. 'i' → logprob: -2.4373674392700195
    5. '#' → logprob: -4.0623674392700195
    6. 'self' → logprob: -4.6873674392700195
    7. 'l' → logprob: -4.9373674392700195
    8. '[i' → logprob: -5.1873674392700195
    9. ' i' → logprob: -5.1873674392700195
    10. '```' → logprob: -5.4373674392700195

Token 614: '-même' (ID: 41085)
  Prédit: '-même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-même' → logprob: -0.0031983929220587015
    2. 'm' → logprob: -5.878198623657227
    3. 'self' → logprob: -9.003198623657227
    4. '[' → logprob: -9.378198623657227
    5. '```' → logprob: -9.753198623657227
    6. '-m' → logprob: -9.753198623657227
    7. ' même' → logprob: -10.753198623657227
    8. '-' → logprob: -11.378198623657227
    9. '-mêmes' → logprob: -11.378198623657227
    10. '[m' → logprob: -11.628198623657227

Token 615: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06228192523121834
    2. ' for' → logprob: -2.812281847000122
    3. '[i' → logprob: -8.687281608581543
    4. '=' → logprob: -9.437281608581543
    5. ' =' → logprob: -10.687281608581543
    6. '	for' → logprob: -10.812281608581543
    7. '[' → logprob: -11.937281608581543
    8. '<|end|>' → logprob: -12.062281608581543
    9. '   ' → logprob: -12.687281608581543
    10. '
' → logprob: -12.937281608581543

Token 616: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. ' ' → logprob: -17.25247573852539
    4. '  ' → logprob: -19.87747573852539
    5. '1' → logprob: -20.50247573852539
    6. '   ' → logprob: -20.62747573852539
    7. '[' → logprob: -21.00247573852539
    8. '```' → logprob: -21.12747573852539
    9. '۰' → logprob: -21.37747573852539
    10. '=' → logprob: -22.37747573852539

Token 617: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -20.625
    4. '1' → logprob: -20.875
    5. 'for' → logprob: -21.0
    6. 'dist' → logprob: -21.25
    7. '۰' → logprob: -21.625
    8. ' ' → logprob: -21.75
    9. '[' → logprob: -22.25
    10. '=' → logprob: -22.5

Token 618: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.039430275559425354
    2. ' for' → logprob: -3.4144303798675537
    3. '
' → logprob: -5.164430141448975
    4. '<|end|>' → logprob: -10.039430618286133
    5. '	for' → logprob: -13.039430618286133
    6. '  
' → logprob: -13.289430618286133
    7. '```' → logprob: -13.664430618286133
    8. '   ' → logprob: -14.539430618286133
    9. '    
' → logprob: -14.539430618286133
    10. '

' → logprob: -14.664430618286133

Token 619: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.860340752406046e-05
    2. ' for' → logprob: -9.7500581741333
    3. '   ' → logprob: -15.7500581741333
    4. '	for' → logprob: -16.500059127807617
    5. '```' → logprob: -17.625059127807617
    6. '
' → logprob: -20.500059127807617
    7. '``' → logprob: -23.375059127807617
    8. ' ' → logprob: -24.125059127807617
    9. '    
' → logprob: -24.500059127807617
    10. '﻿' → logprob: -25.250059127807617

Token 620: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12693609297275543
    2. ' i' → logprob: -2.126936197280884
    3. 'v' → logprob: -12.251935958862305
    4. 'u' → logprob: -13.376935958862305
    5. ' v' → logprob: -13.876935958862305
    6. '	i' → logprob: -15.126935958862305
    7. ' u' → logprob: -16.126935958862305
    8. ' ' → logprob: -16.376935958862305
    9. 'k' → logprob: -16.876935958862305
    10. '```' → logprob: -17.001935958862305

Token 621: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04300444945693016
    2. 'in' → logprob: -3.1680045127868652
    3. ' ' → logprob: -13.168004035949707
    4. 'range' → logprob: -14.168004035949707
    5. 'n' → logprob: -14.418004035949707
    6. '	in' → logprob: -14.793004035949707
    7. 'In' → logprob: -14.918004035949707
    8. '  ' → logprob: -15.168004035949707
    9. ',' → logprob: -15.543004035949707
    10. '```' → logprob: -16.168004989624023

Token 622: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01814994215965271
    2. ' range' → logprob: -4.0181498527526855
    3. '	range' → logprob: -17.268150329589844
    4. '(range' → logprob: -17.518150329589844
    5. ' ' → logprob: -18.643150329589844
    6. 'rang' → logprob: -19.143150329589844
    7. 'n' → logprob: -19.518150329589844
    8. '   ' → logprob: -19.643150329589844
    9. '```' → logprob: -19.643150329589844
    10. '
' → logprob: -20.143150329589844

Token 623: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.35907602310180664
    2. 'n' → logprob: -1.3590760231018066
    3. ' n' → logprob: -3.1090760231018066
    4. '(' → logprob: -9.359075546264648
    5. ' (' → logprob: -10.234075546264648
    6. '	n' → logprob: -11.484075546264648
    7. ')n' → logprob: -12.359075546264648
    8. ' ' → logprob: -14.734075546264648
    9. ')' → logprob: -15.109075546264648
    10. '(
' → logprob: -15.234075546264648

Token 624: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10100965946912766
    2. '):
' → logprob: -2.3510096073150635
    3. ')' → logprob: -7.226009845733643
    4. '):
' → logprob: -10.851009368896484
    5. ':' → logprob: -11.101009368896484
    6. '+' → logprob: -11.226009368896484
    7. ' ):' → logprob: -11.351009368896484
    8. ']:' → logprob: -11.976009368896484
    9. '   ' → logprob: -13.226009368896484
    10. ' ):
' → logprob: -13.726009368896484

Token 625: '   ' (ID: 271)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6227769255638123
    2. '   ' → logprob: -0.8727769255638123
    3. 'dist' → logprob: -3.122776985168457
    4. '	dist' → logprob: -6.372776985168457
    5. '   ' → logprob: -11.997776985168457
    6. '_dist' → logprob: -12.622776985168457
    7. '       ' → logprob: -13.497776985168457
    8. 'Dist' → logprob: -13.497776985168457
    9. '(dist' → logprob: -14.122776985168457
    10. '.dist' → logprob: -14.372776985168457

Token 626: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.008618946187198162
    2. ' dist' → logprob: -4.7586188316345215
    3. '   ' → logprob: -12.50861930847168
    4. '	dist' → logprob: -14.25861930847168
    5. '_dist' → logprob: -17.75861930847168
    6. 'Dist' → logprob: -19.50861930847168
    7. '.dist' → logprob: -19.63361930847168
    8. '(dist' → logprob: -20.00861930847168
    9. 'distance' → logprob: -20.75861930847168
    10. '-dist' → logprob: -22.13361930847168

Token 627: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.375001907348633
    3. '[I' → logprob: -14.750001907348633
    4. ' [' → logprob: -15.375001907348633
    5. '\[' → logprob: -18.000001907348633
    6. '```' → logprob: -18.250001907348633
    7. ')[' → logprob: -18.250001907348633
    8. '][' → logprob: -18.500001907348633
    9. '[n' → logprob: -18.750001907348633
    10. 'i' → logprob: -19.000001907348633

Token 628: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000363590574124828
    2. '[i' → logprob: -8.00036334991455
    3. ' ][' → logprob: -10.87536334991455
    4. ']' → logprob: -11.75036334991455
    5. '[' → logprob: -14.37536334991455
    6. '[I' → logprob: -14.75036334991455
    7. '"][' → logprob: -16.625364303588867
    8. ')][' → logprob: -17.000364303588867
    9. ' [' → logprob: -17.125364303588867
    10. ')[' → logprob: -17.125364303588867

Token 629: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.320199877838604e-07
    2. ' i' → logprob: -14.75
    3. '   ' → logprob: -17.375
    4. ']' → logprob: -19.25
    5. '	i' → logprob: -19.5
    6. '[i' → logprob: -19.75
    7. 'I' → logprob: -19.75
    8. ' ' → logprob: -20.0
    9. ')' → logprob: -20.0
    10. '_i' → logprob: -20.375

Token 630: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009177462197840214
    2. ']=' → logprob: -5.1341776847839355
    3. '=' → logprob: -5.7591776847839355
    4. ' ]' → logprob: -9.759177207946777
    5. ' =' → logprob: -10.509177207946777
    6. ')' → logprob: -12.509177207946777
    7. '<|end|>' → logprob: -14.884177207946777
    8. ')=' → logprob: -15.384177207946777
    9. '']=' → logprob: -16.134178161621094
    10. '   ' → logprob: -16.384178161621094

Token 631: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00033546582562848926
    2. ' =' → logprob: -8.000335693359375
    3. '=
' → logprob: -17.500335693359375
    4. '.=' → logprob: -18.375335693359375
    5. '＝' → logprob: -19.500335693359375
    6. '=}' → logprob: -19.500335693359375
    7. '=

' → logprob: -19.875335693359375
    8. ']=' → logprob: -20.375335693359375
    9. ')=' → logprob: -20.500335693359375
    10. '=int' → logprob: -21.000335693359375

Token 632: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. ' ' → logprob: -21.000019073486328
    4. '   ' → logprob: -21.500019073486328
    5. '00' → logprob: -21.750019073486328
    6. '  ' → logprob: -22.625019073486328
    7. '۰' → logprob: -22.750019073486328
    8. '000' → logprob: -23.875019073486328
    9. '1' → logprob: -24.375019073486328
    10. '```' → logprob: -24.875019073486328

Token 633: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '00' → logprob: -21.625
    4. '۰' → logprob: -22.75
    5. '   ' → logprob: -23.0
    6. ' ' → logprob: -23.25
    7. '  ' → logprob: -23.875
    8. '000' → logprob: -24.0
    9. 'f' → logprob: -25.0
    10. '０' → logprob: -25.125

Token 634: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 635: '#' (ID: 2)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00014764121442567557
    2. 'for' → logprob: -8.875147819519043
    3. '#' → logprob: -12.625147819519043
    4. 'k' → logprob: -13.625147819519043
    5. ' m' → logprob: -13.875147819519043
    6. 'q' → logprob: -14.125147819519043
    7. '```' → logprob: -14.375147819519043
    8. '#m' → logprob: -14.875147819519043
    9. 'a' → logprob: -16.375146865844727
    10. 'e' → logprob: -16.750146865844727

Token 636: ' Lecture' (ID: 106534)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0028467215597629547
    2. 'for' → logprob: -5.877846717834473
    3. 'q' → logprob: -10.627846717834473
    4. '#' → logprob: -12.252846717834473
    5. ' m' → logprob: -12.377846717834473
    6. 'k' → logprob: -12.877846717834473
    7. '```' → logprob: -13.002846717834473
    8. 'edges' → logprob: -14.252846717834473
    9. 'e' → logprob: -14.877846717834473
    10. ' for' → logprob: -14.877846717834473

Token 637: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16894039511680603
    2. ' for' → logprob: -2.918940305709839
    3. '<|end|>' → logprob: -3.293940305709839
    4. ' of' → logprob: -3.668940305709839
    5. 'm' → logprob: -3.793940305709839
    6. ' des' → logprob: -5.043940544128418
    7. 'des' → logprob: -6.418940544128418
    8. 'edges' → logprob: -6.668940544128418
    9. '#' → logprob: -6.918940544128418
    10. 's' → logprob: -7.168940544128418

Token 638: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33388108015060425
    2. 'm' → logprob: -1.333881139755249
    3. 'int' → logprob: -4.20888090133667
    4. '
' → logprob: -6.83388090133667
    5. 'range' → logprob: -6.95888090133667
    6. ' n' → logprob: -6.95888090133667
    7. 'edges' → logprob: -7.58388090133667
    8. 'for' → logprob: -7.83388090133667
    9. '(n' → logprob: -8.083881378173828
    10. '...' → logprob: -8.833881378173828

Token 639: ' matr' (ID: 25095)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0019537294283509254
    2. 'for' → logprob: -6.376953601837158
    3. ' m' → logprob: -9.501954078674316
    4. 'nombre' → logprob: -9.501954078674316
    5. ' for' → logprob: -10.251954078674316
    6. 'n' → logprob: -10.501954078674316
    7. 'number' → logprob: -11.126954078674316
    8. 'num' → logprob: -12.126954078674316
    9. 'nb' → logprob: -13.001954078674316
    10. 'import' → logprob: -13.126954078674316

Token 640: 'ice' (ID: 603)
  Prédit: 'ches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ches' → logprob: -0.44630858302116394
    2. 't' → logprob: -1.6963086128234863
    3. 'che' → logprob: -2.1963086128234863
    4. 'ces' → logprob: -4.321308612823486
    5. 'sses' → logprob: -4.446308612823486
    6. 'ges' → logprob: -4.821308612823486
    7. 'ux' → logprob: -5.071308612823486
    8. 'tes' → logprob: -5.571308612823486
    9. 'ce' → logprob: -5.946308612823486
    10. 'ç' → logprob: -6.196308612823486

Token 641: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024454547092318535
    2. 'dist' → logprob: -3.8994545936584473
    3. ' for' → logprob: -6.274454593658447
    4. 'd' → logprob: -6.649454593658447
    5. 'de' → logprob: -8.649454116821289
    6. 'weights' → logprob: -9.149454116821289
    7. 'distance' → logprob: -9.274454116821289
    8. 'des' → logprob: -9.399454116821289
    9. 'of' → logprob: -9.774454116821289
    10. 'po' → logprob: -10.274454116821289

Token 642: ''ad' (ID: 36162)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.03825229033827782
    2. 'istance' → logprob: -3.538252353668213
    3. ''ad' → logprob: -5.038252353668213
    4. 'ad' → logprob: -6.538252353668213
    5. '_adj' → logprob: -9.163251876831055
    6. 'istant' → logprob: -9.913251876831055
    7. 'dist' → logprob: -10.038251876831055
    8. 'ist' → logprob: -10.163251876831055
    9. '_ad' → logprob: -10.288251876831055
    10. '(adj' → logprob: -10.288251876831055

Token 643: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.04308711364865303
    2. 'j' → logprob: -3.1680870056152344
    3. 'jc' → logprob: -10.168087005615234
    4. 'jec' → logprob: -10.793087005615234
    5. 'ja' → logprob: -12.293087005615234
    6. 'Jac' → logprob: -12.668087005615234
    7. 'J' → logprob: -12.793087005615234
    8. 'g' → logprob: -13.168087005615234
    9. '_j' → logprob: -13.418087005615234
    10. 'jm' → logprob: -13.543087005615234

Token 644: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.00027682865038514137
    2. 'n' → logprob: -9.250276565551758
    3. 'ences' → logprob: -9.250276565551758
    4. 'ce' → logprob: -11.125276565551758
    5. 'cence' → logprob: -11.125276565551758
    6. 'ente' → logprob: -11.250276565551758
    7. '#' → logprob: -11.375276565551758
    8. 'ance' → logprob: -11.500276565551758
    9. 'enc' → logprob: -12.625276565551758
    10. 'en' → logprob: -12.750276565551758

Token 645: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.64708495605737e-05
    2. ' for' → logprob: -9.625066757202148
    3. '
' → logprob: -15.000066757202148
    4. 'dist' → logprob: -17.87506675720215
    5. '#' → logprob: -18.75006675720215
    6. 's' → logprob: -18.87506675720215
    7. 'm' → logprob: -19.25006675720215
    8. 'd' → logprob: -19.25006675720215
    9. '<|end|>' → logprob: -19.25006675720215
    10. 'f' → logprob: -19.37506675720215

Token 646: ' entrée' (ID: 95590)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6595507264137268
    2. 'range' → logprob: -0.9095507264137268
    3. ' range' → logprob: -2.909550666809082
    4. ' for' → logprob: -4.534550666809082
    5. 'n' → logprob: -4.909550666809082
    6. 'entrée' → logprob: -6.659550666809082
    7. '#' → logprob: -7.034550666809082
    8. ' entrée' → logprob: -8.034550666809082
    9. 'dist' → logprob: -8.159550666809082
    10. 'mat' → logprob: -8.159550666809082

Token 647: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.517272024415433e-05
    2. ' for' → logprob: -9.500075340270996
    3. '
' → logprob: -15.500075340270996
    4. '<|end|>' → logprob: -20.00007438659668
    5. '	for' → logprob: -21.37507438659668
    6. 'f' → logprob: -21.37507438659668
    7. 's' → logprob: -21.50007438659668
    8. '#' → logprob: -21.62507438659668
    9. 'dist' → logprob: -21.62507438659668
    10. 'd' → logprob: -21.75007438659668

Token 648: ' construction' (ID: 9770)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000820230518002063
    2. ' for' → logprob: -7.125820159912109
    3. '
' → logprob: -11.12582015991211
    4. '#' → logprob: -14.37582015991211
    5. 'color' → logprob: -14.87582015991211
    6. '```' → logprob: -16.62582015991211
    7. 'colors' → logprob: -17.00082015991211
    8. 'import' → logprob: -17.37582015991211
    9. 'range' → logprob: -18.25082015991211
    10. '   ' → logprob: -18.37582015991211

Token 649: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03414144366979599
    2. ' for' → logprob: -3.4091415405273438
    3. ' des' → logprob: -8.534141540527344
    4. ' of' → logprob: -8.534141540527344
    5. ' de' → logprob: -9.909141540527344
    6. 'des' → logprob: -10.909141540527344
    7. ' du' → logprob: -11.534141540527344
    8. 'de' → logprob: -12.159141540527344
    9. 'of' → logprob: -12.409141540527344
    10. '#' → logprob: -12.409141540527344

Token 650: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.5850948691368103
    2. 'graph' → logprob: -0.9600948691368103
    3. 'for' → logprob: -2.960094928741455
    4. 'g' → logprob: -5.710094928741455
    5. ' grap' → logprob: -5.960094928741455
    6. ' graph' → logprob: -6.210094928741455
    7. ' for' → logprob: -8.460094451904297
    8. '```' → logprob: -9.460094451904297
    9. 'code' → logprob: -10.960094451904297
    10. 'gra' → logprob: -11.210094451904297

Token 651: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.6109934449195862
    2. 'aphe' → logprob: -0.9859934449195862
    3. 'rap' → logprob: -3.1109933853149414
    4. 'raph' → logprob: -4.235993385314941
    5. 'che' → logprob: -4.485993385314941
    6. 'phe' → logprob: -4.610993385314941
    7. 'h' → logprob: -6.235993385314941
    8. 'r' → logprob: -7.110993385314941
    9. 'ph' → logprob: -8.610993385314941
    10. '#' → logprob: -8.860993385314941

Token 652: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.570319702499546e-05
    2. ' for' → logprob: -10.750025749206543
    3. '
' → logprob: -12.375025749206543
    4. ' 
' → logprob: -20.625024795532227
    5. '    
' → logprob: -21.000024795532227
    6. '```' → logprob: -21.000024795532227
    7. '	for' → logprob: -21.500024795532227
    8. '   ' → logprob: -21.750024795532227
    9. '  
' → logprob: -21.875024795532227
    10. 'n' → logprob: -22.125024795532227

Token 653: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -18.25
    3. '
' → logprob: -23.0
    4. '	for' → logprob: -25.0
    5. '```' → logprob: -25.0
    6. '   ' → logprob: -25.875
    7. 'import' → logprob: -27.0
    8. 'from' → logprob: -27.875
    9. '    
' → logprob: -27.875
    10. '﻿' → logprob: -28.0

Token 654: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009988748468458652
    2. ' i' → logprob: -4.759988784790039
    3. '_' → logprob: -7.134988784790039
    4. '_i' → logprob: -7.509988784790039
    5. ' _' → logprob: -10.884988784790039
    6. 'u' → logprob: -11.634988784790039
    7. '	i' → logprob: -14.634988784790039
    8. 'v' → logprob: -15.509988784790039
    9. '_u' → logprob: -15.634988784790039
    10. ' u' → logprob: -15.759988784790039

Token 655: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02056208811700344
    2. 'in' → logprob: -3.895562171936035
    3. 'n' → logprob: -12.020562171936035
    4. 's' → logprob: -12.520562171936035
    5. '_' → logprob: -12.645562171936035
    6. '	in' → logprob: -13.395562171936035
    7. ' ' → logprob: -13.645562171936035
    8. 'import' → logprob: -14.145562171936035
    9. ',' → logprob: -14.395562171936035
    10. 'In' → logprob: -14.645562171936035

Token 656: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020763427019119
    2. 'range' → logprob: -2.350207567214966
    3. ' in' → logprob: -14.975207328796387
    4. ' ' → logprob: -15.350207328796387
    5. 'in' → logprob: -15.475207328796387
    6. '	range' → logprob: -16.725208282470703
    7. '(range' → logprob: -16.975208282470703
    8. 'n' → logprob: -17.225208282470703
    9. ' rang' → logprob: -17.600208282470703
    10. 'r' → logprob: -17.600208282470703

Token 657: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0037541247438639402
    2. 'n' → logprob: -5.628754138946533
    3. ' n' → logprob: -9.503753662109375
    4. '(' → logprob: -9.503753662109375
    5. ' (' → logprob: -12.378753662109375
    6. '	n' → logprob: -15.628753662109375
    7. '(
' → logprob: -16.253753662109375
    8. ',n' → logprob: -16.253753662109375
    9. ' range' → logprob: -16.503753662109375
    10. '(range' → logprob: -16.503753662109375

Token 658: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012529547326266766
    2. '):
' → logprob: -4.387529373168945
    3. ' ):' → logprob: -11.387529373168945
    4. ')' → logprob: -12.512529373168945
    5. '):
' → logprob: -13.012529373168945
    6. '+' → logprob: -13.262529373168945
    7. ':' → logprob: -15.262529373168945
    8. '}:' → logprob: -15.637529373168945
    9. '   ' → logprob: -15.887529373168945
    10. '):

' → logprob: -16.137529373168945

Token 659: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19487908482551575
    2. ' line' → logprob: -2.3198790550231934
    3. 'line' → logprob: -2.9448790550231934
    4. ' row' → logprob: -4.194879055023193
    5. 'row' → logprob: -5.444879055023193
    6. '	line' → logprob: -6.444879055023193
    7. 'ligne' → logprob: -7.444879055023193
    8. 'for' → logprob: -7.569879055023193
    9. 'data' → logprob: -7.569879055023193
    10. ' ligne' → logprob: -7.694879055023193

Token 660: ' S' (ID: 336)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.10304680466651917
    2. 'line' → logprob: -2.3530468940734863
    3. 'ligne' → logprob: -6.228046894073486
    4. 'weights' → logprob: -8.853046417236328
    5. ' row' → logprob: -8.978046417236328
    6. 'arr' → logprob: -9.353046417236328
    7. 'values' → logprob: -9.353046417236328
    8. 'vals' → logprob: -9.478046417236328
    9. 'edges' → logprob: -9.603046417236328
    10. 'lines' → logprob: -9.728046417236328

Token 661: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.442617803812027
    2. ' =' → logprob: -1.0676177740097046
    3. '_line' → logprob: -5.067617893218994
    4. 's' → logprob: -6.567617893218994
    5. 'for' → logprob: -6.942617893218994
    6. 'line' → logprob: -7.192617893218994
    7. '=input' → logprob: -7.317617893218994
    8. 'tr' → logprob: -7.317617893218994
    9. '=line' → logprob: -7.317617893218994
    10. '_' → logprob: -8.067617416381836

Token 662: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.038272131234407425
    2. 'input' → logprob: -3.2882721424102783
    3. ' list' → logprob: -8.4132719039917
    4. ' input' → logprob: -11.7882719039917
    5. 'map' → logprob: -14.5382719039917
    6. '[input' → logprob: -15.1632719039917
    7. '[' → logprob: -16.413272857666016
    8. 'int' → logprob: -16.788272857666016
    9. 'tuple' → logprob: -17.038272857666016
    10. '[list' → logprob: -17.538272857666016

Token 663: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00015872348740231246
    2. '()' → logprob: -8.750158309936523
    3. ' ().' → logprob: -15.750158309936523
    4. '.strip' → logprob: -16.750158309936523
    5. '(' → logprob: -17.250158309936523
    6. '()
' → logprob: -17.875158309936523
    7. '.rstrip' → logprob: -19.625158309936523
    8. '(i' → logprob: -20.625158309936523
    9. '.split' → logprob: -20.625158309936523
    10. '()

' → logprob: -20.875158309936523

Token 664: ' ' (ID: 220)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -1.0229272842407227
    2. '.strip' → logprob: -1.0229272842407227
    3. '.rstrip' → logprob: -1.2729272842407227
    4. 'rstrip' → logprob: -8.022927284240723
    5. '[:-' → logprob: -8.397927284240723
    6. '.' → logprob: -8.897927284240723
    7. '().' → logprob: -9.397927284240723
    8. 'split' → logprob: -9.897927284240723
    9. '.chomp' → logprob: -10.272927284240723
    10. '.replace' → logprob: -10.897927284240723

Token 665: ' #' (ID: 1069)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.568923830986023
    2. '.split' → logprob: -1.318923830986023
    3. '.rstrip' → logprob: -1.818923830986023
    4. '().' → logprob: -6.1939239501953125
    5. '.' → logprob: -6.9439239501953125
    6. '[:-' → logprob: -7.4439239501953125
    7. 'rstrip' → logprob: -7.6939239501953125
    8. '.s' → logprob: -9.693923950195312
    9. 'split' → logprob: -10.568923950195312
    10. '.chomp' → logprob: -10.568923950195312

Token 666: ' Lire' (ID: 57624)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10150584578514099
    2. ' S' → logprob: -2.726505756378174
    3. 'for' → logprob: -4.601505756378174
    4. 's' → logprob: -5.101505756378174
    5. 'values' → logprob: -5.601505756378174
    6. ' for' → logprob: -5.726505756378174
    7. ' values' → logprob: -6.101505756378174
    8. 'tokens' → logprob: -6.226505756378174
    9. ' s' → logprob: -7.351505756378174
    10. ' tokens' → logprob: -7.601505756378174

Token 667: ' la' (ID: 557)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005885421764105558
    2. '()' → logprob: -5.630885601043701
    3. ' S' → logprob: -7.255885601043701
    4. 'S' → logprob: -7.380885601043701
    5. '.rstrip' → logprob: -8.005885124206543
    6. 'rstrip' → logprob: -8.755885124206543
    7. 'list' → logprob: -9.255885124206543
    8. '.readline' → logprob: -9.505885124206543
    9. '.strip' → logprob: -9.505885124206543
    10. 'line' → logprob: -9.630885124206543

Token 668: ' ligne' (ID: 19583)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.9071048498153687
    2. 'line' → logprob: -1.1571048498153687
    3. 'rstrip' → logprob: -2.282104969024658
    4. '().' → logprob: -2.532104969024658
    5. 'ligne' → logprob: -3.407104969024658
    6. '.strip' → logprob: -3.532104969024658
    7. 'list' → logprob: -4.407104969024658
    8. 'str' → logprob: -4.907104969024658
    9. '.rstrip' → logprob: -5.532104969024658
    10. 'string' → logprob: -5.782104969024658

Token 669: ' correspondant' (ID: 146058)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3819229006767273
    2. '.strip' → logprob: -1.381922960281372
    3. '.rstrip' → logprob: -2.756922960281372
    4. '.split' → logprob: -6.506922721862793
    5. 'rstrip' → logprob: -7.631922721862793
    6. '[:-' → logprob: -8.131922721862793
    7. '.' → logprob: -8.756922721862793
    8. ' .' → logprob: -8.881922721862793
    9. '()' → logprob: -9.006922721862793
    10. '.chomp' → logprob: -10.131922721862793

Token 670: ' aux' (ID: 5850)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.5136858820915222
    2. ' à' → logprob: -1.388685941696167
    3. 's' → logprob: -2.888685941696167
    4. '[i' → logprob: -3.638685941696167
    5. 'a' → logprob: -4.013685703277588
    6. 'i' → logprob: -4.138685703277588
    7. ' aux' → logprob: -4.138685703277588
    8. '(i' → logprob: -4.888685703277588
    9. 'aux' → logprob: -5.013685703277588
    10. 'au' → logprob: -5.888685703277588

Token 671: ' ar' (ID: 646)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0029078235384076834
    2. 'edges' → logprob: -7.127907752990723
    3. 'n' → logprob: -7.502907752990723
    4. 'adj' → logprob: -7.502907752990723
    5. 'neighbors' → logprob: -8.252907752990723
    6. ' i' → logprob: -8.627907752990723
    7. '[i' → logprob: -9.627907752990723
    8. 's' → logprob: -9.752907752990723
    9. 'dist' → logprob: -9.752907752990723
    10. 'list' → logprob: -9.877907752990723

Token 672: 'êtes' (ID: 23720)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6738911867141724
    2. 'cs' → logprob: -1.7988911867141724
    3. 'êtes' → logprob: -1.9238911867141724
    4. 'g' → logprob: -3.048891067504883
    5. 'gs' → logprob: -3.423891067504883
    6. 'es' → logprob: -4.048891067504883
    7. 'c' → logprob: -4.423891067504883
    8. 'r' → logprob: -4.548891067504883
    9. 'ea' → logprob: -4.673891067504883
    10. 'ec' → logprob: -4.673891067504883

Token 673: ' du' (ID: 1462)
  Prédit: '.rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.6856743097305298
    2. '   ' → logprob: -1.5606743097305298
    3. '.strip' → logprob: -1.6856743097305298
    4. '.split' → logprob: -2.9356741905212402
    5. '().' → logprob: -4.31067419052124
    6. 'for' → logprob: -4.93567419052124
    7. 'tokens' → logprob: -5.18567419052124
    8. 'rstrip' → logprob: -5.31067419052124
    9. '[:-' → logprob: -5.81067419052124
    10. ' for' → logprob: -5.81067419052124

Token 674: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04305947944521904
    2. 'gr' → logprob: -3.2930595874786377
    3. 'graph' → logprob: -5.668059349060059
    4. ' i' → logprob: -6.793059349060059
    5. 'som' → logprob: -8.293059349060059
    6. ' grap' → logprob: -9.543059349060059
    7. 's' → logprob: -9.918059349060059
    8. 'g' → logprob: -10.668059349060059
    9. ' graph' → logprob: -11.793059349060059
    10. ' sommet' → logprob: -12.168059349060059

Token 675: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014820750802755356
    2. ' i' → logprob: -4.514820575714111
    3. '[i' → logprob: -6.264820575714111
    4. '(i' → logprob: -6.764820575714111
    5. 'for' → logprob: -8.51482105255127
    6. 's' → logprob: -9.01482105255127
    7. '   ' → logprob: -9.26482105255127
    8. ' =' → logprob: -9.26482105255127
    9. '=i' → logprob: -10.13982105255127
    10. '=' → logprob: -10.26482105255127

Token 676: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6410548686981201
    2. 'for' → logprob: -2.01605486869812
    3. '.rstrip' → logprob: -2.01605486869812
    4. 'tokens' → logprob: -2.39105486869812
    5. ' for' → logprob: -3.39105486869812
    6. '.strip' → logprob: -3.76605486869812
    7. '.split' → logprob: -3.76605486869812
    8. '    
' → logprob: -5.016055107116699
    9. ' tokens' → logprob: -5.266055107116699
    10. 'rstrip' → logprob: -5.391055107116699

Token 677: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09113246947526932
    2. ' for' → logprob: -2.841132402420044
    3. '   ' → logprob: -4.341132640838623
    4. 'S' → logprob: -4.466132640838623
    5. ' S' → logprob: -6.966132640838623
    6. 's' → logprob: -7.091132640838623
    7. 'tokens' → logprob: -7.091132640838623
    8. 'vals' → logprob: -7.216132640838623
    9. 'values' → logprob: -7.716132640838623
    10. 'edges' → logprob: -9.591132164001465

Token 678: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09067606180906296
    2. 'S' → logprob: -2.7156760692596436
    3. ' for' → logprob: -3.9656760692596436
    4. '   ' → logprob: -7.3406758308410645
    5. ' S' → logprob: -7.5906758308410645
    6. 'j' → logprob: -8.715676307678223
    7. 'values' → logprob: -9.465676307678223
    8. 'tokens' → logprob: -9.965676307678223
    9. 's' → logprob: -10.340676307678223
    10. 'edges' → logprob: -10.590676307678223

Token 679: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007607339881360531
    2. ' j' → logprob: -4.882607460021973
    3. '	j' → logprob: -14.632607460021973
    4. '```' → logprob: -15.882607460021973
    5. '   ' → logprob: -16.007606506347656
    6. 'v' → logprob: -16.382606506347656
    7. ',j' → logprob: -16.632606506347656
    8. '_j' → logprob: -16.757606506347656
    9. '$j' → logprob: -17.007606506347656
    10. '(j' → logprob: -17.007606506347656

Token 680: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08787652850151062
    2. 'in' → logprob: -2.712876558303833
    3. ' ' → logprob: -4.087876319885254
    4. '	in' → logprob: -7.962876319885254
    5. '    ' → logprob: -8.337876319885254
    6. ' ,' → logprob: -9.337876319885254
    7. '  ' → logprob: -9.462876319885254
    8. ',' → logprob: -10.212876319885254
    9. '   ' → logprob: -10.212876319885254
    10. ' j' → logprob: -10.462876319885254

Token 681: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692883610725403
    2. ' range' → logprob: -2.1269288063049316
    3. '	range' → logprob: -14.62692928314209
    4. '(range' → logprob: -15.50192928314209
    5. ' ' → logprob: -16.501928329467773
    6. 'rang' → logprob: -18.251928329467773
    7. '_range' → logprob: -18.626928329467773
    8. 's' → logprob: -18.751928329467773
    9. 'ange' → logprob: -18.876928329467773
    10. ' xrange' → logprob: -18.876928329467773

Token 682: '(n' (ID: 2406)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6121447682380676
    2. 'range' → logprob: -0.8621447682380676
    3. '(n' → logprob: -4.112144947052002
    4. '(range' → logprob: -4.362144947052002
    5. '(' → logprob: -6.112144947052002
    6. 'n' → logprob: -6.612144947052002
    7. ')' → logprob: -7.237144947052002
    8. '<|end|>' → logprob: -7.487144947052002
    9. 'in' → logprob: -7.862144947052002
    10. ' (' → logprob: -8.112144470214844

Token 683: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24050328135490417
    2. '):
' → logprob: -1.6155033111572266
    3. ')' → logprob: -4.865503311157227
    4. '   ' → logprob: -6.115503311157227
    5. ' ):' → logprob: -6.490503311157227
    6. ':' → logprob: -6.865503311157227
    7. '):
' → logprob: -7.240503311157227
    8. 'if' → logprob: -7.740503311157227
    9. ' ):
' → logprob: -7.990503311157227
    10. ',' → logprob: -8.115503311157227

Token 684: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009913798421621323
    2. ' if' → logprob: -4.759913921356201
    3. '<|end|>' → logprob: -7.884913921356201
    4. 'if' → logprob: -8.384913444519043
    5. '   ' → logprob: -8.634913444519043
    6. ' ' → logprob: -8.759913444519043
    7. '    ' → logprob: -9.009913444519043
    8. ',' → logprob: -9.134913444519043
    9. '	' → logprob: -11.009913444519043
    10. '        
' → logprob: -11.134913444519043

Token 685: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2649872303009033
    2. ' if' → logprob: -1.5149872303009033
    3. 'dist' → logprob: -5.014986991882324
    4. 'c' → logprob: -5.514986991882324
    5. 'd' → logprob: -7.139986991882324
    6. '           ' → logprob: -7.764986991882324
    7. ' c' → logprob: -8.014986991882324
    8. '       ' → logprob: -8.514986991882324
    9. 'x' → logprob: -8.639986991882324
    10. 'ch' → logprob: -8.764986991882324

Token 686: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.006715728435665369
    2. ' S' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.881715774536133
    4. 'int' → logprob: -16.256715774536133
    5. '	S' → logprob: -16.381715774536133
    6. ' ' → logprob: -17.506715774536133
    7. '>S' → logprob: -18.256715774536133
    8. ' int' → logprob: -18.506715774536133
    9. '\S' → logprob: -18.756715774536133
    10. '(S' → logprob: -18.881715774536133

Token 687: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.440506407059729e-05
    2. '[' → logprob: -11.12503433227539
    3. '[i' → logprob: -11.37503433227539
    4. ' ==' → logprob: -13.00003433227539
    5. ' [' → logprob: -13.25003433227539
    6. '==' → logprob: -13.37503433227539
    7. 'j' → logprob: -14.12503433227539
    8. '(j' → logprob: -15.37503433227539
    9. '[int' → logprob: -15.37503433227539
    10. ']' → logprob: -15.75003433227539

Token 688: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3334650695323944
    2. ' ==' → logprob: -1.3334650993347168
    3. '=='' → logprob: -3.958465099334717
    4. ']' → logprob: -8.583464622497559
    5. ')' → logprob: -8.958464622497559
    6. ']==' → logprob: -9.208464622497559
    7. ']=='' → logprob: -9.208464622497559
    8. '=' → logprob: -9.333464622497559
    9. '!=' → logprob: -9.458464622497559
    10. '=="' → logprob: -9.833464622497559

Token 689: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6206024289131165
    2. ' ==' → logprob: -1.1206023693084717
    3. '=='' → logprob: -1.9956023693084717
    4. '=="' → logprob: -8.49560260772705
    5. '==
' → logprob: -9.74560260772705
    6. ' =='' → logprob: -10.24560260772705
    7. ''' → logprob: -10.49560260772705
    8. '=' → logprob: -11.24560260772705
    9. '!=' → logprob: -11.49560260772705
    10. ')' → logprob: -12.62060260772705

Token 690: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0034772399812936783
    2. ''C' → logprob: -6.378477096557617
    3. ''A' → logprob: -6.628477096557617
    4. ''O' → logprob: -9.503477096557617
    5. '"' → logprob: -9.753477096557617
    6. ' '' → logprob: -9.753477096557617
    7. ''L' → logprob: -10.128477096557617
    8. '1' → logprob: -10.378477096557617
    9. ''U' → logprob: -10.378477096557617
    10. ''I' → logprob: -10.628477096557617

Token 691: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04470030218362808
    2. '1' → logprob: -3.1697003841400146
    3. 'Y' → logprob: -6.5447001457214355
    4. ''.' → logprob: -9.169700622558594
    5. ''#' → logprob: -10.294700622558594
    6. '"' → logprob: -10.419700622558594
    7. ''N' → logprob: -11.044700622558594
    8. '#' → logprob: -11.294700622558594
    9. 'B' → logprob: -11.419700622558594
    10. '0' → logprob: -11.419700622558594

Token 692: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4139045476913452
    2. '':' → logprob: -1.4139045476913452
    3. ':
' → logprob: -2.9139046669006348
    4. '':
' → logprob: -3.4139046669006348
    5. '):' → logprob: -6.038904666900635
    6. '):
' → logprob: -6.288904666900635
    7. ' :' → logprob: -6.538904666900635
    8. ''' → logprob: -6.913904666900635
    9. ')' → logprob: -7.413904666900635
    10. ' '' → logprob: -7.663904666900635

Token 693: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010011997073888779
    2. ':' → logprob: -5.010012149810791
    3. '       ' → logprob: -6.635012149810791
    4. ':
' → logprob: -6.635012149810791
    5. 'g' → logprob: -8.885011672973633
    6. ' g' → logprob: -8.885011672973633
    7. '#' → logprob: -9.385011672973633
    8. '):
' → logprob: -10.135011672973633
    9. ',' → logprob: -10.260011672973633
    10. '	       ' → logprob: -10.260011672973633

Token 694: ' #' (ID: 1069)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.020641157403588295
    2. ' g' → logprob: -3.8956410884857178
    3. 'dist' → logprob: -9.520641326904297
    4. '           ' → logprob: -11.895641326904297
    5. '#g' → logprob: -12.020641326904297
    6. '   ' → logprob: -12.145641326904297
    7. ' dist' → logprob: -12.395641326904297
    8. '               ' → logprob: -13.895641326904297
    9. '            
' → logprob: -14.520641326904297
    10. '	g' → logprob: -14.645641326904297

Token 695: ' Il' (ID: 5329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00541102746501565
    2. ' g' → logprob: -5.255411148071289
    3. 'dist' → logprob: -8.755411148071289
    4. '#' → logprob: -12.005411148071289
    5. ' dist' → logprob: -12.505411148071289
    6. '#g' → logprob: -12.755411148071289
    7. '           ' → logprob: -13.005411148071289
    8. '
' → logprob: -13.880411148071289
    9. '   ' → logprob: -14.130411148071289
    10. '            
' → logprob: -14.755411148071289

Token 696: ' existe' (ID: 19498)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.14536558091640472
    2. 'g' → logprob: -2.5203654766082764
    3. ' #' → logprob: -3.8953654766082764
    4. 's' → logprob: -4.0203657150268555
    5. '#' → logprob: -5.1453657150268555
    6. '           ' → logprob: -5.1453657150268555
    7. '   ' → logprob: -6.7703657150268555
    8. ' =' → logprob: -7.6453657150268555
    9. '#g' → logprob: -7.7703657150268555
    10. '       ' → logprob: -8.145365715026855

Token 697: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.09298458695411682
    2. ' une' → logprob: -2.467984676361084
    3. ' g' → logprob: -6.842984676361084
    4. ' a' → logprob: -7.217984676361084
    5. '           ' → logprob: -7.467984676361084
    6. 'un' → logprob: -7.717984676361084
    7. ' ' → logprob: -8.092984199523926
    8. ' #' → logprob: -8.467984199523926
    9. '   ' → logprob: -8.592984199523926
    10. 'g' → logprob: -9.092984199523926

Token 698: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.29664161801338196
    2. ' ar' → logprob: -2.1716415882110596
    3. 'edge' → logprob: -3.0466415882110596
    4. 'are' → logprob: -3.7966415882110596
    5. ' edge' → logprob: -4.046641826629639
    6. 'arest' → logprob: -4.296641826629639
    7. ' are' → logprob: -4.671641826629639
    8. 'relation' → logprob: -5.296641826629639
    9. ' ' → logprob: -5.421641826629639
    10. 'connexion' → logprob: -5.921641826629639

Token 699: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.10042373090982437
    2. 'c' → logprob: -3.100423812866211
    3. 'te' → logprob: -3.475423812866211
    4. 'ète' → logprob: -5.350423812866211
    5. 'ete' → logprob: -5.975423812866211
    6. 'r' → logprob: -6.100423812866211
    7. 'e' → logprob: -6.725423812866211
    8. '�' → logprob: -6.850423812866211
    9. 'g' → logprob: -6.975423812866211
    10. 'cte' → logprob: -7.350423812866211

Token 700: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.45149701833724976
    2. ' between' → logprob: -1.8264970779418945
    3. '   ' → logprob: -2.2014970779418945
    4. '           ' → logprob: -2.8264970779418945
    5. ' g' → logprob: -3.9514970779418945
    6. '       ' → logprob: -5.3264970779418945
    7. ' ' → logprob: -6.0764970779418945
    8. ' =' → logprob: -6.8264970779418945
    9. '               ' → logprob: -7.3264970779418945
    10. '    ' → logprob: -7.3264970779418945

Token 701: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931474208831787
    2. ' i' → logprob: -0.6931474208831787
    3. '	i' → logprob: -15.568147659301758
    4. '   ' → logprob: -16.318147659301758
    5. '
' → logprob: -17.443147659301758
    6. ' ' → logprob: -17.443147659301758
    7. '[i' → logprob: -17.568147659301758
    8. ' ' → logprob: -17.693147659301758
    9. 'g' → logprob: -18.193147659301758
    10. ' g' → logprob: -18.318147659301758

Token 702: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.04459884762763977
    2. 'et' → logprob: -3.1695988178253174
    3. ' and' → logprob: -6.9195990562438965
    4. ' ' → logprob: -8.294598579406738
    5. 'and' → logprob: -9.044598579406738
    6. '[i' → logprob: -9.919598579406738
    7. ',' → logprob: -10.294598579406738
    8. 's' → logprob: -10.544598579406738
    9. ' и' → logprob: -10.544598579406738
    10. '   ' → logprob: -10.919598579406738

Token 703: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5781097412109375
    2. 'i' → logprob: -0.8281097412109375
    3. ' j' → logprob: -6.8281097412109375
    4. 'j' → logprob: -6.8281097412109375
    5. ' ' → logprob: -13.953109741210938
    6. '	i' → logprob: -14.328109741210938
    7. ' ' → logprob: -14.453109741210938
    8. '   ' → logprob: -16.953109741210938
    9. '```' → logprob: -18.953109741210938
    10. '[i' → logprob: -19.453109741210938

Token 704: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005202094092965126
    2. ' g' → logprob: -5.880202293395996
    3. 'g' → logprob: -6.755202293395996
    4. '       ' → logprob: -8.505202293395996
    5. '               ' → logprob: -8.755202293395996
    6. ':
' → logprob: -9.005202293395996
    7. ',' → logprob: -9.005202293395996
    8. '   ' → logprob: -9.005202293395996
    9. '            
' → logprob: -9.005202293395996
    10. ':' → logprob: -9.505202293395996

Token 705: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00160317518748343
    2. ' g' → logprob: -7.376603126525879
    3. '       ' → logprob: -8.376603126525879
    4. 'g' → logprob: -8.876603126525879
    5. ',' → logprob: -9.001603126525879
    6. '	       ' → logprob: -9.001603126525879
    7. '            
' → logprob: -9.251603126525879
    8. '               ' → logprob: -9.626603126525879
    9. ':' → logprob: -10.251603126525879
    10. '<|end|>' → logprob: -10.376603126525879

Token 706: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.001057102927006781
    2. ' g' → logprob: -7.126057147979736
    3. 'dist' → logprob: -8.376056671142578
    4. '           ' → logprob: -11.376056671142578
    5. '   ' → logprob: -12.251056671142578
    6. '            
' → logprob: -13.001056671142578
    7. ' dist' → logprob: -13.876056671142578
    8. '```' → logprob: -14.376056671142578
    9. '#g' → logprob: -14.626056671142578
    10. '	g' → logprob: -14.626056671142578

Token 707: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[j' → logprob: -18.0
    3. '[I' → logprob: -18.25
    4. '.append' → logprob: -19.875
    5. '[' → logprob: -20.375
    6. ' [' → logprob: -20.75
    7. '[g' → logprob: -21.125
    8. 'i' → logprob: -21.25
    9. '[u' → logprob: -21.25
    10. '[v' → logprob: -22.375

Token 708: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03050672821700573
    2. '.append' → logprob: -3.5305066108703613
    3. '.' → logprob: -7.405506610870361
    4. ').' → logprob: -8.90550708770752
    5. ']' → logprob: -12.03050708770752
    6. '[j' → logprob: -12.65550708770752
    7. ' ].' → logprob: -13.65550708770752
    8. ' .' → logprob: -14.78050708770752
    9. '}.' → logprob: -14.90550708770752
    10. '   ' → logprob: -15.28050708770752

Token 709: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. '.append' → logprob: -14.750000953674316
    3. ' append' → logprob: -17.25
    4. 'app' → logprob: -20.625
    5. '_append' → logprob: -20.875
    6. 'appen' → logprob: -21.125
    7. '	append' → logprob: -22.75
    8. 'Append' → logprob: -23.125
    9. 'appe' → logprob: -24.375
    10. 'add' → logprob: -26.0

Token 710: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.10022111982107162
    2. 'j' → logprob: -2.3502211570739746
    3. '(' → logprob: -11.225220680236816
    4. '(
' → logprob: -14.600220680236816
    5. ' j' → logprob: -14.975220680236816
    6. ' (' → logprob: -15.475220680236816
    7. '	j' → logprob: -16.600221633911133
    8. '[j' → logprob: -17.975221633911133
    9. ',j' → logprob: -18.725221633911133
    10. '((' → logprob: -19.225221633911133

Token 711: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03375012427568436
    2. ')
' → logprob: -3.408750057220459
    3. '           ' → logprob: -9.533750534057617
    4. ' )' → logprob: -11.033750534057617
    5. ')
' → logprob: -12.408750534057617
    6. '               ' → logprob: -12.908750534057617
    7. ' )
' → logprob: -13.033750534057617
    8. ')

' → logprob: -13.283750534057617
    9. ');' → logprob: -13.658750534057617
    10. '       ' → logprob: -14.408750534057617

Token 712: '    ' (ID: 257)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001830942346714437
    2. '       ' → logprob: -6.3768310546875
    3. 'dist' → logprob: -10.0018310546875
    4. '   ' → logprob: -10.1268310546875
    5. '
' → logprob: -11.0018310546875
    6. '<|end|>' → logprob: -11.8768310546875
    7. '            
' → logprob: -12.5018310546875
    8. '               ' → logprob: -12.7518310546875
    9. '        
' → logprob: -12.7518310546875
    10. ',' → logprob: -12.8768310546875

Token 713: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007565572392195463
    2. 'dist' → logprob: -5.382565498352051
    3. '       ' → logprob: -5.882565498352051
    4. '   ' → logprob: -9.38256549835205
    5. '               ' → logprob: -11.13256549835205
    6. '
' → logprob: -11.13256549835205
    7. '            
' → logprob: -11.50756549835205
    8. ' dist' → logprob: -12.13256549835205
    9. '<|end|>' → logprob: -12.38256549835205
    10. ',' → logprob: -12.50756549835205

Token 714: ' Ajouter' (ID: 165754)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04710608348250389
    2. ' dist' → logprob: -3.1721060276031494
    3. '           ' → logprob: -5.5471062660217285
    4. '            
' → logprob: -10.04710578918457
    5. '	dist' → logprob: -10.04710578918457
    6. '
' → logprob: -10.17210578918457
    7. '   ' → logprob: -10.29710578918457
    8. 'Dist' → logprob: -11.42210578918457
    9. '#' → logprob: -12.42210578918457
    10. 'distance' → logprob: -12.54710578918457

Token 715: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3868727385997772
    2. 'j' → logprob: -1.1368727684020996
    3. '(j' → logprob: -14.136872291564941
    4. '	j' → logprob: -14.261872291564941
    5. ' ' → logprob: -15.886872291564941
    6. ' ' → logprob: -16.761873245239258
    7. '[j' → logprob: -17.011873245239258
    8. ',j' → logprob: -17.386873245239258
    9. '<|end|>' → logprob: -17.636873245239258
    10. ' (' → logprob: -17.761873245239258

Token 716: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 717: ' la' (ID: 557)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0619727298617363
    2. ' g' → logprob: -2.8119726181030273
    3. ' la' → logprob: -12.311972618103027
    4. ' ' → logprob: -15.561972618103027
    5. '	g' → logprob: -16.061973571777344
    6. 'l' → logprob: -16.561973571777344
    7. '[g' → logprob: -17.061973571777344
    8. 'la' → logprob: -17.436973571777344
    9. '#g' → logprob: -17.561973571777344
    10. ' ' → logprob: -17.686973571777344

Token 718: ' liste' (ID: 31719)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2843761146068573
    2. ' g' → logprob: -1.5343761444091797
    3. ' liste' → logprob: -3.6593761444091797
    4. 'liste' → logprob: -6.15937614440918
    5. ' adjacency' → logprob: -6.15937614440918
    6. 'adj' → logprob: -6.65937614440918
    7. ' voisin' → logprob: -8.28437614440918
    8. 's' → logprob: -9.65937614440918
    9. ' voisins' → logprob: -9.78437614440918
    10. 'neighbors' → logprob: -9.90937614440918

Token 719: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6554567217826843
    2. '<|end|>' → logprob: -1.780456781387329
    3. '[i' → logprob: -1.905456781387329
    4. 'd' → logprob: -3.155456781387329
    5. 'de' → logprob: -3.280456781387329
    6. 'des' → logprob: -3.405456781387329
    7. 'adj' → logprob: -3.905456781387329
    8. ' d' → logprob: -4.40545654296875
    9. ' de' → logprob: -4.53045654296875
    10. 'g' → logprob: -7.03045654296875

Token 720: ' voisins' (ID: 166720)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.5881770253181458
    2. ' voisins' → logprob: -0.8381770253181458
    3. 'adj' → logprob: -4.58817720413208
    4. 'neighbors' → logprob: -6.96317720413208
    5. 'g' → logprob: -7.33817720413208
    6. ' voisin' → logprob: -8.338176727294922
    7. ' g' → logprob: -9.838176727294922
    8. ' vois' → logprob: -9.838176727294922
    9. 'vos' → logprob: -11.213176727294922
    10. ' adj' → logprob: -11.838176727294922

Token 721: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 722: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008615754544734955
    2. ' i' → logprob: -4.758615970611572
    3. 'g' → logprob: -13.883615493774414
    4. '[i' → logprob: -16.133615493774414
    5. '	i' → logprob: -16.883615493774414
    6. ' g' → logprob: -17.133615493774414
    7. '   ' → logprob: -19.758615493774414
    8. '```' → logprob: -21.008615493774414
    9. ')i' → logprob: -21.258615493774414
    10. ' ' → logprob: -21.383615493774414

Token 723: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002156568458303809
    2. '<|end|>' → logprob: -6.377156734466553
    3. '       ' → logprob: -8.502156257629395
    4. '
' → logprob: -10.002156257629395
    5. '            
' → logprob: -10.127156257629395
    6. '   ' → logprob: -10.252156257629395
    7. ',' → logprob: -10.252156257629395
    8. 'dist' → logprob: -10.502156257629395
    9. '               ' → logprob: -10.877156257629395
    10. '<|end|>' → logprob: -11.252156257629395

Token 724: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025367451831698418
    2. '       ' → logprob: -3.900367498397827
    3. 'dist' → logprob: -5.775367259979248
    4. '   ' → logprob: -6.650367259979248
    5. ' dist' → logprob: -8.525367736816406
    6. '	dist' → logprob: -10.275367736816406
    7. '               ' → logprob: -10.525367736816406
    8. '          ' → logprob: -10.650367736816406
    9. '        
' → logprob: -10.775367736816406
    10. '            
' → logprob: -10.900367736816406

Token 725: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -1.0087516784551553e-05
    2. '           ' → logprob: -12.00001049041748
    3. ' dist' → logprob: -12.50001049041748
    4. '	dist' → logprob: -16.375009536743164
    5. '   ' → logprob: -16.625009536743164
    6. '            
' → logprob: -17.125009536743164
    7. '               ' → logprob: -18.750009536743164
    8. 'distance' → logprob: -19.875009536743164
    9. 'Dist' → logprob: -20.000009536743164
    10. '
' → logprob: -20.000009536743164

Token 726: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[I' → logprob: -14.750000953674316
    3. '[j' → logprob: -16.5
    4. '[' → logprob: -16.5
    5. '}[' → logprob: -17.375
    6. ' [' → logprob: -17.375
    7. '][' → logprob: -17.875
    8. '```' → logprob: -18.25
    9. ')[' → logprob: -18.625
    10. 'i' → logprob: -19.0

Token 727: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5817683935165405
    2. '][' → logprob: -0.8317683935165405
    3. '[j' → logprob: -5.20676851272583
    4. ')[' → logprob: -8.581768035888672
    5. '}[' → logprob: -9.331768035888672
    6. '[' → logprob: -10.831768035888672
    7. '```' → logprob: -11.581768035888672
    8. '>[' → logprob: -11.581768035888672
    9. '[I' → logprob: -12.331768035888672
    10. ']' → logprob: -12.581768035888672

Token 728: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.7697225252486533e-06
    2. '[j' → logprob: -12.750003814697266
    3. ' j' → logprob: -14.000003814697266
    4. '   ' → logprob: -17.750003814697266
    5. '	j' → logprob: -17.875003814697266
    6. '][' → logprob: -18.000003814697266
    7. '```' → logprob: -19.125003814697266
    8. 'i' → logprob: -19.500003814697266
    9. ',j' → logprob: -19.625003814697266
    10. '
' → logprob: -19.750003814697266

Token 729: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975083328783512
    2. ' =' → logprob: -3.5297508239746094
    3. ']=' → logprob: -16.40475082397461
    4. ')' → logprob: -16.52975082397461
    5. ']' → logprob: -16.52975082397461
    6. ',' → logprob: -17.02975082397461
    7. ')=' → logprob: -17.65475082397461
    8. '.=' → logprob: -19.77975082397461
    9. '1' → logprob: -20.15475082397461
    10. ' ' → logprob: -20.15475082397461

Token 730: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005530327325686812
    2. ' =' → logprob: -7.500553131103516
    3. '＝' → logprob: -21.000553131103516
    4. '.=' → logprob: -21.625553131103516
    5. '=

' → logprob: -22.250553131103516
    6. '1' → logprob: -22.750553131103516
    7. '=
' → logprob: -23.125553131103516
    8. '=int' → logprob: -23.125553131103516
    9. ' ' → logprob: -23.250553131103516
    10. '0' → logprob: -23.500553131103516

Token 731: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '0' → logprob: -15.875001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '
' → logprob: -19.375001907348633
    6. '

' → logprob: -19.375001907348633
    7. '  ' → logprob: -19.875001907348633
    8. '=' → logprob: -20.687501907348633
    9. '     ' → logprob: -21.125001907348633
    10. '１' → logprob: -21.187501907348633

Token 732: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '0' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '

' → logprob: -19.0
    5. '   ' → logprob: -19.625
    6. '１' → logprob: -19.875
    7. 'min' → logprob: -19.9375
    8. '' → logprob: -20.25
    9. 'int' → logprob: -20.25
    10. '01' → logprob: -20.625

Token 733: '    ' (ID: 257)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 734: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 735: ' Po' (ID: 12692)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '<|end|>' → logprob: -16.000011444091797
    4. '0' → logprob: -17.750011444091797
    5. '  ' → logprob: -18.500011444091797
    6. '#' → logprob: -18.750011444091797
    7. '   ' → logprob: -19.500011444091797
    8. '```' → logprob: -19.875011444091797
    9. '           ' → logprob: -20.500011444091797
    10. '
' → logprob: -20.500011444091797

Token 736: 'ids' (ID: 3375)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08670730888843536
    2. 's' → logprob: -2.961707353591919
    3. 'u' → logprob: -4.71170711517334
    4. 'nd' → logprob: -4.83670711517334
    5. 'ss' → logprob: -6.08670711517334
    6. 'os' → logprob: -6.21170711517334
    7. 'st' → logprob: -6.33670711517334
    8. 'x' → logprob: -6.58670711517334
    9. 'r' → logprob: -7.08670711517334
    10. 'd' → logprob: -7.96170711517334

Token 737: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 738: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029918259009718895
    2. ' ' → logprob: -3.7799181938171387
    3. 'l' → logprob: -5.404918193817139
    4. '<|end|>' → logprob: -6.904918193817139
    5. 'la' → logprob: -7.029918193817139
    6. ' la' → logprob: -9.029918670654297
    7. ' l' → logprob: -10.154918670654297
    8. 'le' → logprob: -10.779918670654297
    9. '  ' → logprob: -10.904918670654297
    10. 'un' → logprob: -11.154918670654297

Token 739: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.49400752782821655
    2. 'a' → logprob: -1.4940075874328613
    3. 'ar' → logprob: -1.8690075874328613
    4. '1' → logprob: -5.869007587432861
    5. 'e' → logprob: -6.119007587432861
    6. ''' → logprob: -6.619007587432861
    7. ' ar' → logprob: -7.119007587432861
    8. ''a' → logprob: -7.244007587432861
    9. 'aré' → logprob: -7.369007587432861
    10. 'l' → logprob: -7.369007587432861

Token 740: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.003911218605935574
    2. 'te' → logprob: -6.378911018371582
    3. 'ete' → logprob: -6.753911018371582
    4. 'ète' → logprob: -7.753911018371582
    5. '�' → logprob: -9.003911018371582
    6. '#' → logprob: -9.378911018371582
    7. 'êtes' → logprob: -9.753911018371582
    8. 'Ã' → logprob: -9.878911018371582
    9. 'êt' → logprob: -9.878911018371582
    10. '&' → logprob: -10.003911018371582

Token 741: ' directe' (ID: 80071)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 742: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 743: 'i' (ID: 72)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038586699520237744
    2. ')' → logprob: -8.375386238098145
    3. ' ' → logprob: -8.875386238098145
    4. '<|end|>' → logprob: -12.000386238098145
    5. ' )' → logprob: -13.500386238098145
    6. '#' → logprob: -13.625386238098145
    7. '```' → logprob: -13.750386238098145
    8. '`)' → logprob: -13.875386238098145
    9. 'dist' → logprob: -15.000386238098145
    10. 'distance' → logprob: -15.000386238098145

Token 744: ',j' (ID: 22712)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.963272213935852
    2. ',' → logprob: -1.213272213935852
    3. ',j' → logprob: -1.213272213935852
    4. '[j' → logprob: -4.4632720947265625
    5. ' à' → logprob: -5.9632720947265625
    6. ')' → logprob: -6.0882720947265625
    7. ')[' → logprob: -6.2132720947265625
    8. ' ,' → logprob: -6.3382720947265625
    9. '+' → logprob: -7.7132720947265625
    10. 'à' → logprob: -8.338272094726562

Token 745: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001882823125924915
    2. ' )' → logprob: -9.000187873840332
    3. '<|end|>' → logprob: -10.500187873840332
    4. ')
' → logprob: -10.750187873840332
    5. '')' → logprob: -12.000187873840332
    6. ']' → logprob: -13.750187873840332
    7. '<|end|>' → logprob: -14.000187873840332
    8. '   ' → logprob: -14.125187873840332
    9. '           ' → logprob: -14.125187873840332
    10. '=' → logprob: -14.375187873840332

Token 746: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 747: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -19.000019073486328
    4. '   ' → logprob: -19.375019073486328
    5. ' ' → logprob: -19.750019073486328
    6. '
' → logprob: -19.750019073486328
    7. '0' → logprob: -20.250019073486328
    8. '  ' → logprob: -20.625019073486328
    9. '

' → logprob: -20.875019073486328
    10. '۱' → logprob: -21.500019073486328

Token 748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -21.5
    4. '۱' → logprob: -22.375
    5. '

' → logprob: -22.75
    6. '   ' → logprob: -23.0
    7. '
' → logprob: -23.375
    8. '１' → logprob: -23.375
    9. '  ' → logprob: -23.375
    10. '0' → logprob: -23.5

Token 749: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 750: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 751: ' dist' (ID: 3601)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 752: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.029932141304016113
    2. '[i' → logprob: -3.5299320220947266
    3. '[' → logprob: -9.154932022094727
    4. '][' → logprob: -10.779932022094727
    5. 'j' → logprob: -11.529932022094727
    6. ')[' → logprob: -11.529932022094727
    7. ' [' → logprob: -12.279932022094727
    8. '```' → logprob: -12.279932022094727
    9. '}[' → logprob: -12.279932022094727
    10. '[I' → logprob: -13.029932022094727

Token 753: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04439030587673187
    2. '][' → logprob: -3.1693902015686035
    3. '[j' → logprob: -7.0443902015686035
    4. ')[' → logprob: -7.9193902015686035
    5. '[' → logprob: -9.669390678405762
    6. '}[' → logprob: -10.294390678405762
    7. '```' → logprob: -11.169390678405762
    8. '>[' → logprob: -11.294390678405762
    9. '[I' → logprob: -11.794390678405762
    10. ' [' → logprob: -12.419390678405762

Token 754: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.153795766294934e-06
    2. '[i' → logprob: -12.375005722045898
    3. ' i' → logprob: -13.250005722045898
    4. '	i' → logprob: -17.2500057220459
    5. 'j' → logprob: -17.6250057220459
    6. '   ' → logprob: -17.8750057220459
    7. ' ' → logprob: -18.2500057220459
    8. ',i' → logprob: -18.3750057220459
    9. ']' → logprob: -18.6250057220459
    10. '_i' → logprob: -18.8750057220459

Token 755: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326520442962646
    2. ' =' → logprob: -1.3132652044296265
    3. ']' → logprob: -12.938264846801758
    4. ')' → logprob: -14.188264846801758
    5. ']=' → logprob: -15.313264846801758
    6. ')=' → logprob: -17.063264846801758
    7. '[' → logprob: -17.563264846801758
    8. '           ' → logprob: -17.938264846801758
    9. ' ' → logprob: -18.063264846801758
    10. '   ' → logprob: -18.563264846801758

Token 756: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. '＝' → logprob: -20.268150329589844
    4. ' ' → logprob: -20.393150329589844
    5. '           ' → logprob: -21.143150329589844
    6. '   ' → logprob: -21.143150329589844
    7. ')' → logprob: -21.143150329589844
    8. '1' → logprob: -21.768150329589844
    9. '[' → logprob: -21.768150329589844
    10. '=

' → logprob: -21.768150329589844

Token 757: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. 'dist' → logprob: -17.6250057220459
    4. '0' → logprob: -18.0000057220459
    5. '   ' → logprob: -18.3750057220459
    6. '=' → logprob: -19.3750057220459
    7. '  ' → logprob: -19.5000057220459
    8. '```' → logprob: -19.6250057220459
    9. ' ' → logprob: -19.8125057220459
    10. ' dist' → logprob: -20.0000057220459

Token 758: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. 'dist' → logprob: -16.750001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '  ' → logprob: -18.500001907348633
    6. ' dist' → logprob: -19.500001907348633
    7. '           ' → logprob: -20.062501907348633
    8. '0' → logprob: -20.250001907348633
    9. ' ' → logprob: -20.312501907348633
    10. '```' → logprob: -20.875001907348633

Token 759: '    ' (ID: 257)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 760: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 761: ' Grap' (ID: 129442)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05023914948105812
    2. ' ' → logprob: -3.050239086151123
    3. 'dist' → logprob: -7.050239086151123
    4. ' dist' → logprob: -7.175239086151123
    5. '           ' → logprob: -12.300239562988281
    6. '            ' → logprob: -12.675239562988281
    7. '    ' → logprob: -13.925239562988281
    8. '=' → logprob: -14.175239562988281
    9. '<|end|>' → logprob: -14.175239562988281
    10. 'Dist' → logprob: -14.237739562988281

Token 762: 'he' (ID: 273)
  Prédit: 'aph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aph' → logprob: -0.6429708003997803
    2. 'aphe' → logprob: -0.7679708003997803
    3. 'ap' → logprob: -5.142971038818359
    4. 'ph' → logprob: -6.767971038818359
    5. '#' → logprob: -7.017971038818359
    6. 'h' → logprob: -7.642971038818359
    7. 'apho' → logprob: -7.642971038818359
    8. 'raph' → logprob: -7.892971038818359
    9. 'phe' → logprob: -8.14297103881836
    10. 'e' → logprob: -8.39297103881836

Token 763: ' non' (ID: 2893)
  Prédit: ' sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sym' → logprob: -0.8706457018852234
    2. ' non' → logprob: -1.7456457614898682
    3. '[j' → logprob: -1.9956457614898682
    4. ' und' → logprob: -2.245645761489868
    5. '[i' → logprob: -2.620645761489868
    6. 'und' → logprob: -3.245645761489868
    7. ' symmetric' → logprob: -4.495645523071289
    8. ' =' → logprob: -4.870645523071289
    9. ' bid' → logprob: -4.995645523071289
    10. '[' → logprob: -5.120645523071289

Token 764: ' orient' (ID: 13198)
  Prédit: ' orient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orient' → logprob: -1.2575268745422363
    2. ' dirig' → logprob: -1.3825268745422363
    3. 'orient' → logprob: -1.6325268745422363
    4. ' oriented' → logprob: -1.7575268745422363
    5. ' directed' → logprob: -2.7575268745422363
    6. 'or' → logprob: -3.7575268745422363
    7. '-directed' → logprob: -5.382526874542236
    8. '-or' → logprob: -6.382526874542236
    9. ' dirigido' → logprob: -6.632526874542236
    10. '   ' → logprob: -7.132526874542236

Token 765: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -4.096126576769166e-05
    2. 'ed' → logprob: -10.500041007995605
    3. 'e' → logprob: -11.375041007995605
    4. '#' → logprob: -14.750041007995605
    5. 'É' → logprob: -15.125041007995605
    6. 'éd' → logprob: -15.125041007995605
    7. '```' → logprob: -15.375041007995605
    8. 'ée' → logprob: -16.12504005432129
    9. 'ré' → logprob: -16.25004005432129
    10. 'è' → logprob: -16.25004005432129

Token 766: ' :' (ID: 712)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 767: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4747580289840698
    2. ' dist' → logprob: -0.9747580289840698
    3. '           ' → logprob: -8.72475814819336
    4. ' ' → logprob: -9.09975814819336
    5. '<|end|>' → logprob: -9.09975814819336
    6. ')' → logprob: -9.47475814819336
    7. 'Dist' → logprob: -10.34975814819336
    8. '	dist' → logprob: -10.47475814819336
    9. '            
' → logprob: -10.97475814819336
    10. '            ' → logprob: -10.97475814819336

Token 768: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5457057356834412
    2. 'i' → logprob: -1.045705795288086
    3. ' j' → logprob: -3.420705795288086
    4. 'dist' → logprob: -4.045705795288086
    5. ' i' → logprob: -4.295705795288086
    6. ' dist' → logprob: -5.795705795288086
    7. ')' → logprob: -6.420705795288086
    8. ')i' → logprob: -8.795705795288086
    9. 'g' → logprob: -8.920705795288086
    10. '[i' → logprob: -9.545705795288086

Token 769: ',i' (ID: 25032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.45967862010002136
    2. ',' → logprob: -1.5846786499023438
    3. ')[' → logprob: -2.7096786499023438
    4. ')' → logprob: -2.8346786499023438
    5. '[i' → logprob: -4.084678649902344
    6. ' ,' → logprob: -4.834678649902344
    7. '[j' → logprob: -5.834678649902344
    8. ']' → logprob: -6.334678649902344
    9. ',i' → logprob: -6.334678649902344
    10. ',j' → logprob: -6.459678649902344

Token 770: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008971556089818478
    2. ')=' → logprob: -5.383971691131592
    3. ' )' → logprob: -5.508971691131592
    4. ']' → logprob: -9.008971214294434
    5. ' =' → logprob: -10.383971214294434
    6. '[j' → logprob: -10.633971214294434
    7. ']=' → logprob: -10.883971214294434
    8. '=' → logprob: -11.008971214294434
    9. '')' → logprob: -11.133971214294434
    10. '])' → logprob: -11.258971214294434

Token 771: ' aussi' (ID: 9894)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.632952094078064
    2. ' =' → logprob: -0.757952094078064
    3. ')' → logprob: -8.882951736450195
    4. ']=' → logprob: -9.132951736450195
    5. ']' → logprob: -9.757951736450195
    6. ')=' → logprob: -10.757951736450195
    7. '<|end|>' → logprob: -11.757951736450195
    8. '[' → logprob: -12.507951736450195
    9. '=True' → logprob: -12.757951736450195
    10. '[j' → logprob: -13.007951736450195

Token 772: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 773: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 774: ' Initial' (ID: 9209)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.0026427218690514565
    2. '#' → logprob: -6.002642631530762
    3. 'for' → logprob: -9.252642631530762
    4. 'color' → logprob: -10.627642631530762
    5. 'if' → logprob: -11.627642631530762
    6. '
' → logprob: -11.752642631530762
    7. 'visited' → logprob: -11.752642631530762
    8. ' colors' → logprob: -12.877642631530762
    9. '    
' → logprob: -13.502642631530762
    10. '```' → logprob: -13.502642631530762

Token 775: 'isation' (ID: 6993)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.043348100036382675
    2. 's' → logprob: -3.9183480739593506
    3. '#' → logprob: -4.54334831237793
    4. 'z' → logprob: -5.29334831237793
    5. ' colors' → logprob: -6.16834831237793
    6. 'ze' → logprob: -6.41834831237793
    7. 'zes' → logprob: -6.54334831237793
    8. 'ize' → logprob: -8.04334831237793
    9. 'ization' → logprob: -8.29334831237793
    10. 'sizes' → logprob: -8.91834831237793

Token 776: ' du' (ID: 1462)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.05057625100016594
    2. ' colors' → logprob: -3.1755762100219727
    3. ' =' → logprob: -5.300576210021973
    4. '=' → logprob: -6.550576210021973
    5. '(colors' → logprob: -6.925576210021973
    6. '_colors' → logprob: -9.175576210021973
    7. ' couleurs' → logprob: -11.550576210021973
    8. '.colors' → logprob: -11.550576210021973
    9. 'color' → logprob: -12.050576210021973
    10. '```' → logprob: -12.425576210021973

Token 777: ' tableau' (ID: 67053)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -2.2723104848410003e-05
    2. ' colors' → logprob: -11.375022888183594
    3. 'color' → logprob: -11.750022888183594
    4. '```' → logprob: -13.000022888183594
    5. '
' → logprob: -15.000022888183594
    6. 'import' → logprob: -15.500022888183594
    7. '#' → logprob: -16.250022888183594
    8. '_colors' → logprob: -16.625022888183594
    9. '(colors' → logprob: -16.875022888183594
    10. '`' → logprob: -17.375022888183594

Token 778: ' de' (ID: 334)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.00382810621522367
    2. ' colors' → logprob: -5.878828048706055
    3. '=' → logprob: -8.253828048706055
    4. 'des' → logprob: -8.503828048706055
    5. ' =' → logprob: -9.128828048706055
    6. '(colors' → logprob: -9.128828048706055
    7. 'color' → logprob: -9.378828048706055
    8. ' couleurs' → logprob: -9.628828048706055
    9. '_colors' → logprob: -9.878828048706055
    10. 's' → logprob: -9.878828048706055

Token 779: ' couleurs' (ID: 54001)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.0027092962991446257
    2. 'color' → logprob: -6.87770938873291
    3. ' couleurs' → logprob: -7.12770938873291
    4. ' colors' → logprob: -7.25270938873291
    5. 'cou' → logprob: -8.75270938873291
    6. '0' → logprob: -12.75270938873291
    7. ' couleur' → logprob: -14.50270938873291
    8. ' colores' → logprob: -14.87770938873291
    9. ' color' → logprob: -15.00270938873291
    10. 'b' → logprob: -15.00270938873291

Token 780: ' pour' (ID: 1930)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.007229158189147711
    2. '=' → logprob: -5.007229328155518
    3. ' colors' → logprob: -7.757229328155518
    4. ' =' → logprob: -9.38222885131836
    5. '[' → logprob: -14.13222885131836
    6. '=[' → logprob: -15.25722885131836
    7. '_colors' → logprob: -15.50722885131836
    8. '(colors' → logprob: -15.50722885131836
    9. '.colors' → logprob: -15.63222885131836
    10. 'color' → logprob: -15.88222885131836

Token 781: ' la' (ID: 557)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.5824052095413208
    2. '[' → logprob: -0.8324052095413208
    3. ' colors' → logprob: -5.207405090332031
    4. '0' → logprob: -7.582405090332031
    5. 'color' → logprob: -8.957405090332031
    6. ' [' → logprob: -9.332405090332031
    7. '[n' → logprob: -9.457405090332031
    8. ' couleurs' → logprob: -9.707405090332031
    9. '[color' → logprob: -10.582405090332031
    10. '[-' → logprob: -11.582405090332031

Token 782: ' vér' (ID: 42524)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.012910783290863037
    2. '0' → logprob: -5.012910842895508
    3. ' colors' → logprob: -5.637910842895508
    4. '[' → logprob: -6.012910842895508
    5. 'color' → logprob: -9.387910842895508
    6. ' couleurs' → logprob: -10.262910842895508
    7. 'zeros' → logprob: -11.637910842895508
    8. ' ' → logprob: -12.137910842895508
    9. ' [' → logprob: -12.137910842895508
    10. ' colores' → logprob: -12.262910842895508

Token 783: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.000584249384701252
    2. 'if' → logprob: -8.875584602355957
    3. 'ication' → logprob: -9.000584602355957
    4. 'ifie' → logprob: -9.000584602355957
    5. 'fic' → logprob: -9.250584602355957
    6. 'ifier' → logprob: -10.125584602355957
    7. 'ifi' → logprob: -11.250584602355957
    8. 'ifications' → logprob: -11.500584602355957
    9. 'ifié' → logprob: -11.500584602355957
    10. 'ifying' → logprob: -12.125584602355957

Token 784: ' bip' (ID: 54467)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.6568029522895813
    2. '=' → logprob: -0.9068029522895813
    3. ' =' → logprob: -2.6568028926849365
    4. ' colors' → logprob: -4.906803131103516
    5. '=[' → logprob: -9.781803131103516
    6. '(colors' → logprob: -10.781803131103516
    7. '[' → logprob: -11.031803131103516
    8. ' couleurs' → logprob: -12.406803131103516
    9. '_colors' → logprob: -12.531803131103516
    10. '.colors' → logprob: -12.906803131103516

Token 785: 'art' (ID: 497)
  Prédit: 'arti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arti' → logprob: -0.4289807081222534
    2. 'art' → logprob: -1.0539807081222534
    3. 'ar' → logprob: -9.178980827331543
    4. 'arte' → logprob: -10.303980827331543
    5. 'arts' → logprob: -10.428980827331543
    6. 'арт' → logprob: -10.553980827331543
    7. 'artits' → logprob: -10.803980827331543
    8. 'arten' → logprob: -11.928980827331543
    9. 'arri' → logprob: -12.303980827331543
    10. 'ari' → logprob: -12.428980827331543

Token 786: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.11902930587530136
    2. 'i' → logprob: -2.8690292835235596
    3. 'ition' → logprob: -3.3690292835235596
    4. 'ie' → logprob: -4.244029521942139
    5. 'it' → logprob: -5.744029521942139
    6. 'is' → logprob: -6.744029521942139
    7. 'ité' → logprob: -6.994029521942139
    8. '[i' → logprob: -8.74402904510498
    9. 'isme' → logprob: -8.74402904510498
    10. 'ié' → logprob: -9.24402904510498

Token 787: '
' (ID: 198)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.018188457936048508
    2. ' colors' → logprob: -4.0181884765625
    3. '[' → logprob: -10.3931884765625
    4. '=' → logprob: -12.2681884765625
    5. ' =' → logprob: -13.0181884765625
    6. '(colors' → logprob: -15.0181884765625
    7. '_colors' → logprob: -15.3931884765625
    8. '.colors' → logprob: -15.5181884765625
    9. '
' → logprob: -15.8931884765625
    10. 'color' → logprob: -16.6431884765625

Token 788: 'colors' (ID: 31731)
  Prédit: 'colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -4.842555426876061e-06
    2. ' colors' → logprob: -12.250004768371582
    3. '.colors' → logprob: -20.3750057220459
    4. 'color' → logprob: -21.2500057220459
    5. '(colors' → logprob: -21.6250057220459
    6. '[' → logprob: -22.0000057220459
    7. '0' → logprob: -22.1250057220459
    8. '```' → logprob: -22.3750057220459
    9. '
' → logprob: -24.1250057220459
    10. '_colors' → logprob: -24.1250057220459

Token 789: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519296407699585
    2. ' =' → logprob: -1.5019296407699585
    3. '=[' → logprob: -14.87692928314209
    4. '=[]' → logprob: -16.626930236816406
    5. '[' → logprob: -16.751930236816406
    6. '＝' → logprob: -16.751930236816406
    7. ' =[' → logprob: -17.501930236816406
    8. '<|end|>' → logprob: -18.751930236816406
    9. '=zeros' → logprob: -19.251930236816406
    10. ']' → logprob: -19.251930236816406

Token 790: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005530327325686812
    2. ' [' → logprob: -7.500553131103516
    3. '0' → logprob: -18.875553131103516
    4. '   ' → logprob: -19.125553131103516
    5. '[n' → logprob: -19.500553131103516
    6. '([' → logprob: -20.000553131103516
    7. ' ' → logprob: -20.375553131103516
    8. '=[' → logprob: -20.500553131103516
    9. ' ' → logprob: -21.125553131103516
    10. '[-' → logprob: -21.250553131103516

Token 791: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '000' → logprob: -20.000001907348633
    4. '۰' → logprob: -20.375001907348633
    5. '00' → logprob: -21.125001907348633
    6. '   ' → logprob: -22.125001907348633
    7. '０' → logprob: -23.187501907348633
    8. '०' → logprob: -23.312501907348633
    9. '```' → logprob: -23.437501907348633
    10. '  ' → logprob: -23.562501907348633

Token 792: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3337424397468567
    2. ']' → logprob: -1.333742380142212
    3. 'for' → logprob: -4.583742618560791
    4. ']*' → logprob: -4.833742618560791
    5. ' ]' → logprob: -6.208742618560791
    6. ' *' → logprob: -10.583742141723633
    7. '*' → logprob: -11.208742141723633
    8. ')' → logprob: -11.208742141723633
    9. ' ' → logprob: -11.333742141723633
    10. '	for' → logprob: -11.458742141723633

Token 793: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7512742877006531
    2. '<|end|>' → logprob: -0.7512742877006531
    3. 'for' → logprob: -3.751274347305298
    4. '<|end|>' → logprob: -4.501274108886719
    5. '
' → logprob: -4.751274108886719
    6. ' *' → logprob: -5.751274108886719
    7. '(n' → logprob: -5.876274108886719
    8. ' ' → logprob: -6.501274108886719
    9. ' 
' → logprob: -6.751274108886719
    10. '[n' → logprob: -6.876274108886719

Token 794: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.128163257315464e-07
    2. ' n' → logprob: -15.375
    3. '	n' → logprob: -21.25
    4. '(n' → logprob: -22.375
    5. ')n' → logprob: -23.625
    6. '_n' → logprob: -24.75
    7. '
' → logprob: -25.0
    8. '   ' → logprob: -26.0
    9. '$n' → logprob: -26.0
    10. 'н' → logprob: -26.25

Token 795: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 796: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00326517247594893
    2. 'valid' → logprob: -6.378265380859375
    3. ' for' → logprob: -8.003265380859375
    4. '
' → logprob: -8.128265380859375
    5. 'is' → logprob: -8.128265380859375
    6. 'possible' → logprob: -8.753265380859375
    7. 'result' → logprob: -8.878265380859375
    8. 'ok' → logprob: -9.503265380859375
    9. 'b' → logprob: -9.628265380859375
    10. 'if' → logprob: -9.878265380859375

Token 797: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019856137223541737
    2. 'is' → logprob: -7.001985549926758
    3. 'valid' → logprob: -8.126985549926758
    4. 'result' → logprob: -8.501985549926758
    5. 'ok' → logprob: -8.751985549926758
    6. 'b' → logprob: -8.751985549926758
    7. 'possible' → logprob: -9.251985549926758
    8. 'answer' → logprob: -9.751985549926758
    9. 'all' → logprob: -10.001985549926758
    10. ' for' → logprob: -10.876985549926758

Token 798: '0' (ID: 15)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007297906093299389
    2. 'if' → logprob: -6.007297992706299
    3. 'is' → logprob: -6.132297992706299
    4. 'b' → logprob: -6.632297992706299
    5. 'valid' → logprob: -7.882297992706299
    6. 'all' → logprob: -8.13229751586914
    7. 'result' → logprob: -8.38229751586914
    8. 'ok' → logprob: -9.00729751586914
    9. 'possible' → logprob: -9.00729751586914
    10. 'answer' → logprob: -9.25729751586914

Token 799: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 800: ' pas' (ID: 2173)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.06341817229986191
    2. 'auc' → logprob: -3.68841814994812
    3. ' non' → logprob: -4.688418388366699
    4. 'in' → logprob: -4.813418388366699
    5. 'pas' → logprob: -4.938418388366699
    6. 'un' → logprob: -5.688418388366699
    7. 'ind' → logprob: -6.313418388366699
    8. 'not' → logprob: -6.313418388366699
    9. 'inut' → logprob: -6.938418388366699
    10. '<|end|>' → logprob: -7.438418388366699

Token 801: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.7244202494621277
    2. 'color' → logprob: -1.2244203090667725
    3. ' de' → logprob: -2.8494203090667725
    4. ' encore' → logprob: -2.9744203090667725
    5. 'de' → logprob: -3.0994203090667725
    6. '_color' → logprob: -3.4744203090667725
    7. 'colored' → logprob: -3.8494203090667725
    8. 'assign' → logprob: -5.849420070648193
    9. ' colored' → logprob: -5.974420070648193
    10. '_' → logprob: -6.349420070648193

Token 802: 'ié' (ID: 143445)
  Prédit: 'ié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ié' → logprob: -0.04993901774287224
    2. 'é' → logprob: -3.049938917160034
    3. 'i' → logprob: -6.924939155578613
    4. 'ed' → logprob: -8.299939155578613
    5. 'ie' → logprob: -9.924939155578613
    6. 'ied' → logprob: -10.549939155578613
    7. 'ée' → logprob: -10.799939155578613
    8. 'e' → logprob: -11.049939155578613
    9. 'ier' → logprob: -13.549939155578613
    10. '  ' → logprob: -13.674939155578613

Token 803: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22132520377635956
    2. 'for' → logprob: -2.221325159072876
    3. '

' → logprob: -2.596325159072876
    4. '<|end|>' → logprob: -4.596325397491455
    5. ' for' → logprob: -5.471325397491455
    6. '
' → logprob: -7.596325397491455
    7. '  
' → logprob: -8.471324920654297
    8. '\n' → logprob: -9.096324920654297
    9. '<|end|>' → logprob: -9.221324920654297
    10. '' → logprob: -9.846324920654297

Token 804: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08916835486888885
    2. '<|end|>' → logprob: -3.2141683101654053
    3. '0' → logprob: -3.8391683101654053
    4. ' ' → logprob: -4.714168548583984
    5. 'None' → logprob: -4.839168548583984
    6. ')' → logprob: -6.464168548583984
    7. '<|end|>' → logprob: -7.089168548583984
    8. '-' → logprob: -7.089168548583984
    9. '...' → logprob: -7.964168548583984
    10. '
' → logprob: -8.214168548583984

Token 805: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019205668941140175
    2. 'non' → logprob: -5.144205570220947
    3. 'None' → logprob: -5.144205570220947
    4. '-' → logprob: -5.894205570220947
    5. '#' → logprob: -7.269205570220947
    6. ' ' → logprob: -7.644205570220947
    7. 'not' → logprob: -7.894205570220947
    8. 'un' → logprob: -8.019206047058105
    9. 'in' → logprob: -8.269206047058105
    10. '   ' → logprob: -8.394206047058105

Token 806: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14722944796085358
    2. ',' → logprob: -2.1472294330596924
    3. ' =' → logprob: -4.6472296714782715
    4. ' or' → logprob: -5.2722296714782715
    5. '<|end|>' → logprob: -5.7722296714782715
    6. 'or' → logprob: -6.7722296714782715
    7. ' ,' → logprob: -7.5222296714782715
    8. '=-' → logprob: -9.022229194641113
    9. '=None' → logprob: -9.147229194641113
    10. ')' → logprob: -9.272229194641113

Token 807: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00038014890742488205
    2. ' -' → logprob: -7.875380039215088
    3. '(-' → logprob: -17.75037956237793
    4. '−' → logprob: -18.50037956237793
    5. ' ' → logprob: -19.12537956237793
    6. '\-' → logprob: -19.25037956237793
    7. '‑' → logprob: -19.87537956237793
    8. '–' → logprob: -20.00037956237793
    9. '<|end|>' → logprob: -20.25037956237793
    10. '1' → logprob: -20.37537956237793

Token 808: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -18.625001907348633
    4. '۱' → logprob: -18.750001907348633
    5. '```' → logprob: -18.937501907348633
    6. '১' → logprob: -18.937501907348633
    7. '2' → logprob: -19.125001907348633
    8. '１' → logprob: -19.312501907348633
    9. '१' → logprob: -19.437501907348633
    10. '+' → logprob: -19.625001907348633

Token 809: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019553620368242264
    2. ' for' → logprob: -4.3945536613464355
    3. '
' → logprob: -5.3945536613464355
    4. '#' → logprob: -6.3945536613464355
    5. '<|end|>' → logprob: -8.019553184509277
    6. 'is' → logprob: -8.769553184509277
    7. '

' → logprob: -9.144553184509277
    8. 'valid' → logprob: -10.519553184509277
    9. 'result' → logprob: -10.644553184509277
    10. 'all' → logprob: -11.019553184509277

Token 810: ' disting' (ID: 68664)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.837311863899231
    2. 'color' → logprob: -1.712311863899231
    3. ' les' → logprob: -1.837311863899231
    4. 'la' → logprob: -2.3373117446899414
    5. ' la' → logprob: -2.7123117446899414
    6. 'b' → logprob: -3.7123117446899414
    7. ' color' → logprob: -4.087311744689941
    8. 'le' → logprob: -4.837311744689941
    9. '<|end|>' → logprob: -5.212311744689941
    10. 'l' → logprob: -5.837311744689941

Token 811: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.023845020681619644
    2. 'u' → logprob: -3.7738449573516846
    3. '[' → logprob: -10.023844718933105
    4. 'ue' → logprob: -10.398844718933105
    5. 'ui' → logprob: -10.398844718933105
    6. 'uis' → logprob: -10.398844718933105
    7. 'ué' → logprob: -10.398844718933105
    8. 'uire' → logprob: -10.398844718933105
    9. '#' → logprob: -10.523844718933105
    10. 'uir' → logprob: -10.523844718933105

Token 812: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04592610150575638
    2. 'i' → logprob: -3.295926094055176
    3. ' for' → logprob: -5.170926094055176
    4. '<|end|>' → logprob: -7.670926094055176
    5. '#' → logprob: -7.795926094055176
    6. '
' → logprob: -8.170926094055176
    7. 'result' → logprob: -8.920926094055176
    8. ' i' → logprob: -8.920926094055176
    9. ')' → logprob: -9.170926094055176
    10. 'token' → logprob: -9.420926094055176

Token 813: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.13632620871067047
    2. 'part' → logprob: -2.511326313018799
    3. 'cou' → logprob: -4.261326313018799
    4. 'group' → logprob: -4.386326313018799
    5. '2' → logprob: -4.636326313018799
    6. 's' → logprob: -6.386326313018799
    7. 'c' → logprob: -6.511326313018799
    8. ' deux' → logprob: -6.511326313018799
    9. 'types' → logprob: -6.761326313018799
    10. 'com' → logprob: -7.011326313018799

Token 814: ' couleurs' (ID: 54001)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3645226061344147
    2. '#' → logprob: -1.2395225763320923
    3. 'b' → logprob: -4.989522457122803
    4. 'is' → logprob: -5.114522457122803
    5. 'ok' → logprob: -6.489522457122803
    6. 'result' → logprob: -7.864522457122803
    7. 'possible' → logprob: -8.614522933959961
    8. 'est' → logprob: -8.864522933959961
    9. 'part' → logprob: -8.864522933959961
    10. 'all' → logprob: -8.989522933959961

Token 815: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01125460397452116
    2. 'is' → logprob: -5.761254787445068
    3. 'valid' → logprob: -6.136254787445068
    4. 'b' → logprob: -6.136254787445068
    5. 'ok' → logprob: -6.636254787445068
    6. 'all' → logprob: -6.761254787445068
    7. 'possible' → logprob: -8.26125431060791
    8. 'visited' → logprob: -8.63625431060791
    9. 'found' → logprob: -8.76125431060791
    10. 'result' → logprob: -9.01125431060791

Token 816: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5833376049995422
    2. 'if' → logprob: -0.8333376049995422
    3. 'is' → logprob: -5.458337783813477
    4. 'b' → logprob: -6.083337783813477
    5. 'valid' → logprob: -8.083337783813477
    6. 'ok' → logprob: -8.208337783813477
    7. 'all' → logprob: -9.833337783813477
    8. 'possible' → logprob: -9.833337783813477
    9. 'visited' → logprob: -9.958337783813477
    10. 'res' → logprob: -10.958337783813477

Token 817: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602276712656021
    2. '=' → logprob: -1.910227656364441
    3. ',' → logprob: -14.16022777557373
    4. 's' → logprob: -14.41022777557373
    5. ' ' → logprob: -14.78522777557373
    6. '=[]' → logprob: -14.78522777557373
    7. '_' → logprob: -15.28522777557373
    8. '=int' → logprob: -15.66022777557373
    9. '=False' → logprob: -15.91022777557373
    10. '＝' → logprob: -16.035226821899414

Token 818: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0393809899687767
    2. 'True' → logprob: -3.9143810272216797
    3. '[]' → logprob: -4.41438102722168
    4. '-' → logprob: -6.16438102722168
    5. '1' → logprob: -6.41438102722168
    6. 'False' → logprob: -7.03938102722168
    7. '[' → logprob: -7.66438102722168
    8. 'n' → logprob: -7.66438102722168
    9. 'float' → logprob: -7.91438102722168
    10. '[n' → logprob: -8.16438102722168

Token 819: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.27099974633893e-05
    2. '2' → logprob: -12.500012397766113
    3. ' ' → logprob: -12.625012397766113
    4. '-' → logprob: -12.750012397766113
    5. 'sys' → logprob: -14.500012397766113
    6. ' -' → logprob: -14.875012397766113
    7. '+' → logprob: -14.875012397766113
    8. '10' → logprob: -15.250012397766113
    9. '100' → logprob: -15.875012397766113
    10. 'int' → logprob: -15.875012397766113

Token 820: '         ' (ID: 983)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48341527581214905
    2. '
' → logprob: -0.9834152460098267
    3. ' for' → logprob: -4.733415126800537
    4. '
' → logprob: -8.483415603637695
    5. '

' → logprob: -8.983415603637695
    6. 'def' → logprob: -9.358415603637695
    7. '#' → logprob: -10.733415603637695
    8. 'if' → logprob: -11.233415603637695
    9. ' 
' → logprob: -11.733415603637695
    10. 'import' → logprob: -11.858415603637695

Token 821: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22692997753620148
    2. '
' → logprob: -1.601930022239685
    3. ' for' → logprob: -7.476930141448975
    4. '
' → logprob: -7.976930141448975
    5. 'def' → logprob: -8.351929664611816
    6. 'if' → logprob: -8.476929664611816
    7. '

' → logprob: -9.351929664611816
    8. '#' (adapté à ' #') → logprob: -10.476929664611816
    9. 'import' → logprob: -10.726929664611816
    10. '' → logprob: -11.851929664611816

Token 822: ' Vale' (ID: 55242)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9015970826148987
    2. '-' → logprob: -1.651597023010254
    3. '0' → logprob: -1.901597023010254
    4. 'None' → logprob: -2.026597023010254
    5. 'for' → logprob: -2.651597023010254
    6. 'max' → logprob: -4.526597023010254
    7. 'ans' → logprob: -4.776597023010254
    8. '#' → logprob: -4.901597023010254
    9. 'n' → logprob: -5.276597023010254
    10. 'def' → logprob: -5.276597023010254

Token 823: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.8702095746994019
    2. '1' → logprob: -1.7452095746994019
    3. 'c' → logprob: -2.8702096939086914
    4. 'rs' → logprob: -3.1202096939086914
    5. 'l' → logprob: -3.6202096939086914
    6. 'ries' → logprob: -3.6202096939086914
    7. 'ry' → logprob: -3.8702096939086914
    8. 'u' → logprob: -3.9952096939086914
    9. 'lu' → logprob: -4.120209693908691
    10. 'loc' → logprob: -4.620209693908691

Token 824: ' retourn' (ID: 150215)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16070285439491272
    2. '=' → logprob: -1.9107028245925903
    3. '<|end|>' → logprob: -8.7857027053833
    4. '=-' → logprob: -8.9107027053833
    5. '1' → logprob: -9.9107027053833
    6. 'for' → logprob: -10.5357027053833
    7. ',' → logprob: -10.9107027053833
    8. 's' → logprob: -11.1607027053833
    9. '=None' → logprob: -12.1607027053833
    10. ' =
' → logprob: -12.2857027053833

Token 825: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.2909047305583954
    2. 'é' → logprob: -2.0409047603607178
    3. 'e' → logprob: -2.4159047603607178
    4. '1' → logprob: -4.040904521942139
    5. '-' → logprob: -4.915904521942139
    6. 'ee' → logprob: -5.040904521942139
    7. 'ed' → logprob: -7.290904521942139
    8. '=' → logprob: -8.040904998779297
    9. 'None' → logprob: -8.415904998779297
    10. ' -' → logprob: -8.915904998779297

Token 826: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6172184944152832
    2. '
' → logprob: -0.8672184944152832
    3. ' for' → logprob: -4.242218494415283
    4. '<|end|>' → logprob: -4.367218494415283
    5. 'if' → logprob: -5.242218494415283
    6. '#' → logprob: -5.867218494415283
    7. '

' → logprob: -7.242218494415283
    8. ' =' → logprob: -7.242218494415283
    9. '
' → logprob: -7.617218494415283
    10. '' → logprob: -7.617218494415283

Token 827: ' cas' (ID: 2108)
  Prédit: 'att'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'att' → logprob: -0.9901955127716064
    2. '-' → logprob: -1.2401955127716064
    3. ' attente' → logprob: -1.3651955127716064
    4. '-att' → logprob: -3.6151955127716064
    5. ' cas' → logprob: -4.115195274353027
    6. 'def' → logprob: -4.490195274353027
    7. ' attendant' → logprob: -4.615195274353027
    8. 'cas' → logprob: -5.115195274353027
    9. '1' → logprob: -6.615195274353027
    10. '```' → logprob: -6.740195274353027

Token 828: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8404802083969116
    2. ' d' → logprob: -1.3404802083969116
    3. 'de' → logprob: -1.8404802083969116
    4. 'd' → logprob: -1.9654802083969116
    5. 'None' → logprob: -5.840480327606201
    6. 'def' → logprob: -6.840480327606201
    7. '#' → logprob: -7.465480327606201
    8. ' None' → logprob: -7.465480327606201
    9. ' of' → logprob: -8.215479850769043
    10. ' ' → logprob: -8.340479850769043

Token 829: ' grap' (ID: 60955)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.172236829996109
    2. '-' → logprob: -1.9222368001937866
    3. 'imp' → logprob: -6.422236919403076
    4. '0' → logprob: -6.547236919403076
    5. 'non' → logprob: -6.672236919403076
    6. 'auc' → logprob: -6.797236919403076
    7. 'None' → logprob: -6.922236919403076
    8. 'absence' → logprob: -6.922236919403076
    9. 'graph' → logprob: -7.297236919403076
    10. 'in' → logprob: -7.422236919403076

Token 830: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.1207321360707283
    2. 'h' → logprob: -2.745732069015503
    3. 'aphe' → logprob: -3.120732069015503
    4. 'phe' → logprob: -6.120732307434082
    5. 'ph' → logprob: -6.745732307434082
    6. '#' → logprob: -7.245732307434082
    7. 'heme' → logprob: -7.870732307434082
    8. 'hé' → logprob: -9.245732307434082
    9. 'hi' → logprob: -9.245732307434082
    10. '`' → logprob: -9.745732307434082

Token 831: ' non' (ID: 2893)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.012622307054698467
    2. ' bip' → logprob: -5.387622356414795
    3. 'non' → logprob: -6.012622356414795
    4. '   ' → logprob: -6.512622356414795
    5. '_b' → logprob: -6.512622356414795
    6. 'conn' → logprob: -7.637622356414795
    7. ' non' → logprob: -7.637622356414795
    8. 'B' → logprob: -7.762622356414795
    9. ' ' → logprob: -8.512621879577637
    10. '0' → logprob: -9.012621879577637

Token 832: ' bip' (ID: 54467)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004895264864899218
    2. ' bip' → logprob: -7.875489711761475
    3. 'bi' → logprob: -10.875489234924316
    4. ' b' → logprob: -11.000489234924316
    5. ' ' → logprob: -11.375489234924316
    6. '_b' → logprob: -11.500489234924316
    7. '   ' → logprob: -11.750489234924316
    8. 'conn' → logprob: -11.875489234924316
    9. '```' → logprob: -12.750489234924316
    10. '0' → logprob: -12.875489234924316

Token 833: 'arti' (ID: 51348)
  Prédit: 'arti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arti' → logprob: -0.014216749928891659
    2. 'art' → logprob: -4.264216899871826
    3. 'ar' → logprob: -10.514216423034668
    4. 'arte' → logprob: -11.139216423034668
    5. 'arto' → logprob: -12.639216423034668
    6. 'ari' → logprob: -13.514216423034668
    7. ' arti' → logprob: -13.639216423034668
    8. 'арт' → logprob: -14.014216423034668
    9. 'arri' → logprob: -14.264216423034668
    10. 'a' → logprob: -14.389216423034668

Token 834: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2520963251590729
    2. 'if' → logprob: -1.5020962953567505
    3. ' for' → logprob: -9.752096176147461
    4. 'valid' → logprob: -10.627096176147461
    5. 'is' → logprob: -11.002096176147461
    6. 'visited' → logprob: -11.002096176147461
    7. 'def' → logprob: -11.627096176147461
    8. 'color' → logprob: -11.877096176147461
    9. '
' → logprob: -11.877096176147461
    10. 'found' → logprob: -12.002096176147461

Token 835: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3145197033882141
    2. 'for' → logprob: -1.3145196437835693
    3. 'is' → logprob: -7.189519882202148
    4. 'ok' → logprob: -8.439519882202148
    5. 'valid' → logprob: -9.689519882202148
    6. 'possible' → logprob: -9.689519882202148
    7. 'b' → logprob: -10.064519882202148
    8. 'def' → logprob: -10.439519882202148
    9. 'all' → logprob: -10.564519882202148
    10. '#' → logprob: -10.689519882202148

Token 836: ' Vér' (ID: 159169)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008565759286284447
    2. 'def' → logprob: -5.258565902709961
    3. 'is' → logprob: -6.633565902709961
    4. 'if' → logprob: -6.883565902709961
    5. '#' → logprob: -7.383565902709961
    6. 'ok' → logprob: -8.758565902709961
    7. 'possible' → logprob: -9.633565902709961
    8. 'all' → logprob: -10.008565902709961
    9. 'valid' → logprob: -10.758565902709961
    10. 'b' → logprob: -10.758565902709961

Token 837: 'ifie' (ID: 46409)
  Prédit: 'ification'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.022021187469363213
    2. 'ifier' → logprob: -4.147021293640137
    3. 'if' → logprob: -6.022021293640137
    4. 'for' → logprob: -6.272021293640137
    5. 'ication' → logprob: -6.522021293640137
    6. 'ify' → logprob: -9.897021293640137
    7. '#' → logprob: -10.272021293640137
    8. ' for' → logprob: -11.022021293640137
    9. 'ifie' → logprob: -11.272021293640137
    10. 'ificate' → logprob: -11.522021293640137

Token 838: ' si' (ID: 1784)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8398316502571106
    2. ' for' → logprob: -1.3398315906524658
    3. 'if' → logprob: -1.5898315906524658
    4. ' if' → logprob: -2.339831590652466
    5. ' la' → logprob: -6.464831829071045
    6. ' que' → logprob: -6.964831829071045
    7. '   ' → logprob: -7.214831829071045
    8. ' si' → logprob: -7.589831829071045
    9. ' not' → logprob: -7.714831829071045
    10. 'not' → logprob: -7.714831829071045

Token 839: ' le' (ID: 505)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.1554450988769531
    2. ' not' → logprob: -1.4054450988769531
    3. 'all' → logprob: -1.5304450988769531
    4. 'ans' → logprob: -2.155445098876953
    5. ' all' → logprob: -2.780445098876953
    6. 'dfs' → logprob: -4.155445098876953
    7. ' ans' → logprob: -4.405445098876953
    8. 'any' → logprob: -4.780445098876953
    9. ' any' → logprob: -5.655445098876953
    10. 'colors' → logprob: -6.280445098876953

Token 840: ' grap' (ID: 60955)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.2503514885902405
    2. 'not' → logprob: -2.1253514289855957
    3. 'ans' → logprob: -3.0003514289855957
    4. 'any' → logprob: -3.2503514289855957
    5. 'colors' → logprob: -5.750351428985596
    6. ' not' → logprob: -6.000351428985596
    7. ' all' → logprob: -6.000351428985596
    8. 'g' → logprob: -6.500351428985596
    9. 'True' → logprob: -6.625351428985596
    10. 'n' → logprob: -7.250351428985596

Token 841: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.5506824851036072
    2. 'aphe' → logprob: -0.9256824851036072
    3. 'h' → logprob: -4.050682544708252
    4. '#' → logprob: -4.925682544708252
    5. 'e' → logprob: -7.300682544708252
    6. 'che' → logprob: -7.925682544708252
    7. 'phe' → logprob: -8.175682067871094
    8. 'é' → logprob: -8.675682067871094
    9. 'fe' → logprob: -8.925682067871094
    10. 'è' → logprob: -8.925682067871094

Token 842: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.03553472459316254
    2. ' est' → logprob: -3.660534620285034
    3. '#' → logprob: -5.035534858703613
    4. 'is' → logprob: -6.285534858703613
    5. ' is' → logprob: -7.535534858703613
    6. 's' → logprob: -8.910534858703613
    7. 'n' → logprob: -9.910534858703613
    8. 'es' → logprob: -10.535534858703613
    9. ''est' → logprob: -10.535534858703613
    10. '(est' → logprob: -11.285534858703613

Token 843: ' bip' (ID: 54467)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002931558701675385
    2. ' bip' → logprob: -8.875292778015137
    3. 'bien' → logprob: -9.750292778015137
    4. '#' → logprob: -10.375292778015137
    5. 'bi' → logprob: -11.125292778015137
    6. 'not' → logprob: -11.125292778015137
    7. 'B' → logprob: -11.625292778015137
    8. '   ' → logprob: -12.250292778015137
    9. '```' → logprob: -12.500292778015137
    10. 'bis' → logprob: -12.500292778015137

Token 844: 'arti' (ID: 51348)
  Prédit: 'arti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arti' → logprob: -0.42903679609298706
    2. 'art' → logprob: -1.0540368556976318
    3. 'arte' → logprob: -8.679037094116211
    4. 'ar' → logprob: -9.304037094116211
    5. 'arto' → logprob: -11.179037094116211
    6. 'part' → logprob: -11.429037094116211
    7. '#' → logprob: -11.679037094116211
    8. 'арт' → logprob: -11.804037094116211
    9. 'a' → logprob: -12.554037094116211
    10. '```' → logprob: -12.679037094116211

Token 845: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00036894375807605684
    2. ' for' → logprob: -8.37536907196045
    3. 'is' → logprob: -9.87536907196045
    4. ':' → logprob: -10.62536907196045
    5. ':
' → logprob: -11.25036907196045
    6. 'def' → logprob: -11.37536907196045
    7. 'or' → logprob: -11.37536907196045
    8. 'ok' → logprob: -12.12536907196045
    9. 'all' → logprob: -12.12536907196045
    10. 'color' → logprob: -12.25036907196045

Token 846: ' partir' (ID: 12100)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1400289535522461
    2. 'all' → logprob: -2.765028953552246
    3. 'tout' → logprob: -3.640028953552246
    4. 't' → logprob: -4.015028953552246
    5. 'part' → logprob: -4.265028953552246
    6. 'not' → logprob: -5.765028953552246
    7. ' True' → logprob: -6.390028953552246
    8. 'for' → logprob: -7.140028953552246
    9. 'False' → logprob: -7.515028953552246
    10. 'l' → logprob: -7.515028953552246

Token 847: ' du' (ID: 1462)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.35519397258758545
    2. ' de' → logprob: -1.2301939725875854
    3. 'd' → logprob: -6.105194091796875
    4. '#' → logprob: -6.230194091796875
    5. 'des' → logprob: -6.480194091796875
    6. '0' → logprob: -8.105194091796875
    7. ' des' → logprob: -8.105194091796875
    8. 'def' → logprob: -8.980194091796875
    9. ' d' → logprob: -9.355194091796875
    10. 'of' → logprob: -10.105194091796875

Token 848: ' sommet' (ID: 130502)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001215475145727396
    2. 'i' → logprob: -6.75121545791626
    3. 'v' → logprob: -10.876215934753418
    4. 's' → logprob: -11.376215934753418
    5. 'som' → logprob: -11.376215934753418
    6. ' sommet' → logprob: -14.251215934753418
    7. 'range' → logprob: -14.626215934753418
    8. '=' → logprob: -14.876215934753418
    9. 'u' → logprob: -14.876215934753418
    10. 'vertex' → logprob: -15.126215934753418

Token 849: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002594919176772237
    2. 'i' → logprob: -6.127594947814941
    3. 'v' → logprob: -8.127594947814941
    4. 'u' → logprob: -9.752594947814941
    5. '_' → logprob: -10.627594947814941
    6. 's' → logprob: -11.002594947814941
    7. '=' → logprob: -12.002594947814941
    8. 'for' → logprob: -12.877594947814941
    9. ' i' → logprob: -13.502594947814941
    10. ' ' → logprob: -13.502594947814941

Token 850: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. 'i' → logprob: -14.250000953674316
    3. ' ' → logprob: -14.625000953674316
    4. 'for' → logprob: -16.125001907348633
    5. 'v' → logprob: -16.250001907348633
    6. 's' → logprob: -16.750001907348633
    7. 'u' → logprob: -17.500001907348633
    8. '
' → logprob: -18.375001907348633
    9. '_' → logprob: -18.500001907348633
    10. '=' → logprob: -19.750001907348633

Token 851: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00012523093027994037
    2. 'for' → logprob: -9.12512493133545
    3. ' if' → logprob: -11.37512493133545
    4. 'print' → logprob: -13.87512493133545
    5. 'and' → logprob: -14.25012493133545
    6. 'ans' → logprob: -14.25012493133545
    7. 'result' → logprob: -14.50012493133545
    8. '
' → logprob: -15.00012493133545
    9. 'stack' → logprob: -15.25012493133545
    10. ':' → logprob: -15.50012493133545

Token 852: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.081584716506768e-05
    2. 'print' → logprob: -10.875020980834961
    3. ' if' → logprob: -13.875020980834961
    4. 'for' → logprob: -14.875020980834961
    5. 'ans' → logprob: -15.500020980834961
    6. 'result' → logprob: -16.00002098083496
    7. 'True' → logprob: -16.37502098083496
    8. 'dfs' → logprob: -16.50002098083496
    9. 'is' → logprob: -16.75002098083496
    10. '```' → logprob: -17.25002098083496

Token 853: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2859857678413391
    2. 'dfs' → logprob: -1.6609857082366943
    3. ' not' → logprob: -2.9109857082366943
    4. 'colors' → logprob: -5.910985946655273
    5. ' dfs' → logprob: -6.535985946655273
    6. ' colors' → logprob: -9.910985946655273
    7. 'n' → logprob: -9.910985946655273
    8. 'all' → logprob: -10.160985946655273
    9. 'len' → logprob: -10.785985946655273
    10. '(not' → logprob: -11.785985946655273

Token 854: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0006121210753917694
    2. ' dfs' → logprob: -7.500612258911133
    3. 'all' → logprob: -10.125612258911133
    4. 'colors' → logprob: -11.125612258911133
    5. 'b' → logprob: -14.000612258911133
    6. 'df' → logprob: -14.000612258911133
    7. 'any' → logprob: -14.375612258911133
    8. ' ' → logprob: -15.000612258911133
    9. 'DFS' → logprob: -15.000612258911133
    10. ' all' → logprob: -15.125612258911133

Token 855: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.723352049040841e-06
    2. ' (' → logprob: -12.500004768371582
    3. '0' → logprob: -14.375004768371582
    4. '(
' → logprob: -15.250004768371582
    5. '<|end|>' → logprob: -16.875003814697266
    6. '(

' → logprob: -19.375003814697266
    7. ')(' → logprob: -19.750003814697266
    8. '((' → logprob: -20.125003814697266
    9. ')' → logprob: -20.500003814697266
    10. '```' → logprob: -20.500003814697266

Token 856: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '(' → logprob: -16.875
    3. ' ' → logprob: -19.875
    4. ')' → logprob: -20.625
    5. '(
' → logprob: -24.25
    6. '00' → logprob: -24.375
    7. '
' → logprob: -24.75
    8. '۰' → logprob: -24.75
    9. '012' → logprob: -25.375
    10. '０' → logprob: -26.25

Token 857: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. ' ,' → logprob: -13.12500286102295
    3. '1' → logprob: -14.50000286102295
    4. ',
' → logprob: -17.500001907348633
    5. ')' → logprob: -19.125001907348633
    6. ',

' → logprob: -19.500001907348633
    7. '(' → logprob: -19.500001907348633
    8. '0' → logprob: -19.750001907348633
    9. '```' → logprob: -20.375001907348633
    10. ' ' → logprob: -20.750001907348633

Token 858: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. ')' → logprob: -20.875001907348633
    4. '   ' → logprob: -21.375001907348633
    5. '１' → logprob: -21.875001907348633
    6. '۱' → logprob: -22.125001907348633
    7. '  ' → logprob: -22.750001907348633
    8. '```' → logprob: -23.000001907348633
    9. '১' → logprob: -23.750001907348633
    10. '-' → logprob: -24.000001907348633

Token 859: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '１' → logprob: -20.5
    4. ')' → logprob: -20.5
    5. '   ' → logprob: -20.875
    6. '۱' → logprob: -21.125
    7. '১' → logprob: -22.5
    8. '  ' → logprob: -22.875
    9. '१' → logprob: -22.875
    10. '```' → logprob: -23.0

Token 860: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0060358005575835705
    2. '):
' → logprob: -5.256035804748535
    3. ')' → logprob: -7.131035804748535
    4. '):
' → logprob: -13.881035804748535
    5. ':' → logprob: -14.256035804748535
    6. ' ):' → logprob: -16.25603485107422
    7. '):

' → logprob: -16.38103485107422
    8. ')：' → logprob: -17.13103485107422
    9. ').' → logprob: -17.50603485107422
    10. ')**' → logprob: -18.38103485107422

Token 861: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005379018373787403
    2. '   ' → logprob: -5.2553791999816895
    3. ' print' → logprob: -9.005378723144531
    4. '```' → logprob: -11.505378723144531
    5. '	print' → logprob: -12.380378723144531
    6. 'pass' → logprob: -13.005378723144531
    7. ':' → logprob: -13.380378723144531
    8. 'ans' → logprob: -13.505378723144531
    9. ':
' → logprob: -14.005378723144531
    10. 'exit' → logprob: -14.880378723144531

Token 862: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -15.000000953674316
    3. ' print' → logprob: -15.750000953674316
    4. 'pass' → logprob: -16.125
    5. '
' → logprob: -16.625
    6. '```' → logprob: -16.625
    7. 'exit' → logprob: -17.625
    8. 'ans' → logprob: -18.125
    9. 'sys' → logprob: -18.5
    10. 'prin' → logprob: -18.625

Token 863: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0280383548888494e-06
    2. 'pass' → logprob: -15.375000953674316
    3. ' print' → logprob: -15.500000953674316
    4. 'exit' → logprob: -15.750000953674316
    5. 'ans' → logprob: -16.250001907348633
    6. 'sys' → logprob: -16.625001907348633
    7. '   ' → logprob: -16.625001907348633
    8. '```' → logprob: -17.250001907348633
    9. '#print' → logprob: -17.500001907348633
    10. 'import' → logprob: -19.000001907348633

Token 864: ' ce' (ID: 2357)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5459397435188293
    2. 'True' → logprob: -1.2959396839141846
    3. 'print' → logprob: -2.0459396839141846
    4. ' True' → logprob: -4.170939922332764
    5. ' ans' → logprob: -7.045939922332764
    6. 'False' → logprob: -7.420939922332764
    7. '(ans' → logprob: -8.045939445495605
    8. ' print' → logprob: -8.920939445495605
    9. '   ' → logprob: -9.170939445495605
    10. ' ' → logprob: -9.545939445495605

Token 865: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023247575387358665
    2. ' n' → logprob: -5.273247718811035
    3. 'ans' → logprob: -5.398247718811035
    4. '#' → logprob: -5.523247718811035
    5. 'not' → logprob: -5.898247718811035
    6. 's' → logprob: -6.023247718811035
    7. 'return' → logprob: -6.898247718811035
    8. 'print' → logprob: -7.773247718811035
    9. 'n't' → logprob: -7.898247718811035
    10. 'est' → logprob: -8.273247718811035

Token 866: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.24591685831546783
    2. '#' → logprob: -1.9959168434143066
    3. 'est' → logprob: -2.9959168434143066
    4. 'ont' → logprob: -4.245916843414307
    5. 'pas' → logprob: -5.120916843414307
    6. 'e' → logprob: -6.120916843414307
    7. '’est' → logprob: -6.120916843414307
    8. 'u' → logprob: -7.370916843414307
    9. ' pas' → logprob: -7.495916843414307
    10. ''#' → logprob: -7.495916843414307

Token 867: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.20197349786758423
    2. ' pas' → logprob: -1.7019734382629395
    3. '_pas' → logprob: -7.7019734382629395
    4. 'not' → logprob: -9.576973915100098
    5. 'Pas' → logprob: -10.951973915100098
    6. '#' → logprob: -11.451973915100098
    7. ' not' → logprob: -13.451973915100098
    8. ':' → logprob: -13.576973915100098
    9. 'PAS' → logprob: -13.701973915100098
    10. 't' → logprob: -13.826973915100098

Token 868: ' bip' (ID: 54467)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.45200520753860474
    2. 'True' → logprob: -1.32700514793396
    3. ' True' → logprob: -2.70200514793396
    4. ' bip' → logprob: -3.82700514793396
    5. 'pas' → logprob: -5.452005386352539
    6. 'False' → logprob: -5.702005386352539
    7. 'None' → logprob: -7.202005386352539
    8. 'possible' → logprob: -8.952005386352539
    9. ' pas' → logprob: -8.952005386352539
    10. ' False' → logprob: -9.077005386352539

Token 869: 'arti' (ID: 51348)
  Prédit: 'arti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arti' → logprob: -0.01105984952300787
    2. 'art' → logprob: -4.511059761047363
    3. 'arte' → logprob: -11.636059761047363
    4. 'arto' → logprob: -13.011059761047363
    5. 'ar' → logprob: -14.886059761047363
    6. 'арт' → logprob: -15.636059761047363
    7. 'arty' → logprob: -16.26106071472168
    8. 'ari' → logprob: -16.38606071472168
    9. 'a' → logprob: -17.01106071472168
    10. ' arti' → logprob: -17.13606071472168

Token 870: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2807031571865082
    2. 'print' → logprob: -2.155703067779541
    3. ':
' → logprob: -2.405703067779541
    4. '   ' → logprob: -3.280703067779541
    5. ' print' → logprob: -7.155703067779541
    6. '):' → logprob: -9.1557035446167
    7. '.' → logprob: -9.7807035446167
    8. 'exit' → logprob: -10.6557035446167
    9. ')' → logprob: -10.7807035446167
    10. '```' → logprob: -10.9057035446167

Token 871: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.60414821645827e-06
    2. '   ' → logprob: -12.625004768371582
    3. ' print' → logprob: -13.875004768371582
    4. 'exit' → logprob: -15.625004768371582
    5. 'ans' → logprob: -16.125003814697266
    6. '```' → logprob: -16.750003814697266
    7. 'pass' → logprob: -17.250003814697266
    8. 'sys' → logprob: -17.375003814697266
    9. '
' → logprob: -18.375003814697266
    10. 'prin' → logprob: -18.750003814697266

Token 872: 'age' (ID: 477)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16216588020324707
    2. 'er' → logprob: -1.912165880203247
    3. 'print' → logprob: -6.537165641784668
    4. 'age' → logprob: -8.412165641784668
    5. '#' → logprob: -9.287165641784668
    6. 'é' → logprob: -9.662165641784668
    7. 'ons' → logprob: -10.537165641784668
    8. 'ge' → logprob: -10.537165641784668
    9. 'ier' → logprob: -11.662165641784668
    10. 'on' → logprob: -11.662165641784668

Token 873: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7444354295730591
    2. '(-' → logprob: -1.244435429573059
    3. '(ans' → logprob: -1.869435429573059
    4. '(' → logprob: -2.7444353103637695
    5. '   ' → logprob: -5.2444353103637695
    6. '(print' → logprob: -5.3694353103637695
    7. '("-' → logprob: -5.6194353103637695
    8. '("' → logprob: -6.1194353103637695
    9. 'ans' → logprob: -6.6194353103637695
    10. '-' → logprob: -7.6194353103637695

Token 874: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3878346383571625
    2. 'ans' → logprob: -1.1378346681594849
    3. '(ans' → logprob: -7.137834548950195
    4. '"-' → logprob: -10.137834548950195
    5. 'print' → logprob: -10.262834548950195
    6. ' ans' → logprob: -10.262834548950195
    7. '(-' → logprob: -10.637834548950195
    8. ' -' → logprob: -11.887834548950195
    9. '   ' → logprob: -12.387834548950195
    10. ''-' → logprob: -12.387834548950195

Token 875: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -15.625000953674316
    3. ' ' → logprob: -15.750000953674316
    4. 'print' → logprob: -15.875000953674316
    5. '
' → logprob: -16.125001907348633
    6. '2' → logprob: -16.125001907348633
    7. 'ans' → logprob: -16.250001907348633
    8. '-' → logprob: -16.375001907348633
    9. '`' → logprob: -16.875001907348633
    10. '   ' → logprob: -17.000001907348633

Token 876: ' selon' (ID: 27571)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.627176768844947e-05
    2. '
' → logprob: -10.000096321105957
    3. ')
' → logprob: -10.375096321105957
    4. ' print' → logprob: -11.250096321105957
    5. ')' → logprob: -12.125096321105957
    6. '.print' → logprob: -15.125096321105957
    7. '```' → logprob: -15.500096321105957
    8. ':
' → logprob: -15.625096321105957
    9. '(print' → logprob: -15.750096321105957
    10. '	print' → logprob: -16.62509536743164

Token 877: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1750764548778534
    2. 'problem' → logprob: -2.675076484680176
    3. 'sys' → logprob: -3.550076484680176
    4. 'ans' → logprob: -3.925076484680176
    5. 'spec' → logprob: -4.300076484680176
    6. 'requirements' → logprob: -4.425076484680176
    7. 'prompt' → logprob: -5.175076484680176
    8. 'la' → logprob: -5.925076484680176
    9. 'le' → logprob: -6.425076484680176
    10. 'the' → logprob: -7.050076484680176

Token 878: ' spéc' (ID: 20135)
  Prédit: 'prompt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prompt' → logprob: -1.229539155960083
    2. ' prompt' → logprob: -1.604539155960083
    3. ' specification' → logprob: -1.604539155960083
    4. ' problem' → logprob: -2.854539155960083
    5. ' spec' → logprob: -2.979539155960083
    6. 'spec' → logprob: -2.979539155960083
    7. 'problem' → logprob: -3.104539155960083
    8. ' spéc' → logprob: -3.354539155960083
    9. 'print' → logprob: -3.854539155960083
    10. '```' → logprob: -3.979539155960083

Token 879: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.05926087871193886
    2. '#' → logprob: -4.684260845184326
    3. 'ified' → logprob: -4.934260845184326
    4. 'ific' → logprob: -5.059260845184326
    5. 'ifications' → logprob: -5.184260845184326
    6. 'ec' → logprob: -5.309260845184326
    7. 'if' → logprob: -5.309260845184326
    8. 'f' → logprob: -5.434260845184326
    9. 'éc' → logprob: -5.559260845184326
    10. 'ifié' → logprob: -6.184260845184326

Token 880: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -15.125000953674316
    3. '```' → logprob: -15.750000953674316
    4. '
' → logprob: -16.25
    5. ')
' → logprob: -16.875
    6. ':
' → logprob: -17.125
    7. '   ' → logprob: -17.75
    8. ')' → logprob: -17.75
    9. '	print' → logprob: -18.75
    10. '``' → logprob: -19.0

Token 881: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0683535037969705e-05
    2. ' print' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.87501049041748
    4. ':
' → logprob: -16.125011444091797
    5. '```' → logprob: -16.250011444091797
    6. ':' → logprob: -16.750011444091797
    7. '	print' → logprob: -17.500011444091797
    8. '
' → logprob: -17.625011444091797
    9. ')' → logprob: -17.750011444091797
    10. '.print' → logprob: -18.375011444091797

Token 882: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -20.25
    3. '
' → logprob: -21.125
    4. '```' → logprob: -22.875
    5. 'pr' → logprob: -24.125
    6. '   ' → logprob: -25.125
    7. '	print' → logprob: -25.5
    8. 'ans' → logprob: -25.75
    9. 'prin' → logprob: -25.875
    10. '#print' → logprob: -26.0

Token 883: '(ans' (ID: 70054)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.001504982472397387
    2. '-' → logprob: -6.501504898071289
    3. '(' → logprob: -12.876504898071289
    4. '("-' → logprob: -15.876504898071289
    5. '()-' → logprob: -18.25150489807129
    6. '('-' → logprob: -18.50150489807129
    7. ' -' → logprob: -19.50150489807129
    8. '(
' → logprob: -20.00150489807129
    9. '()' → logprob: -20.75150489807129
    10. ' (-' → logprob: -21.25150489807129

Token 884: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -13.250001907348633
    3. ')`' → logprob: -16.750001907348633
    4. ' )' → logprob: -17.000001907348633
    5. '),' → logprob: -17.500001907348633
    6. '))' → logprob: -17.625001907348633
    7. ')
' → logprob: -18.750001907348633
    8. '')' → logprob: -19.000001907348633
    9. ')#' → logprob: -19.125001907348633
    10. ')return' → logprob: -19.125001907348633

Token 885: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.5928495486150496e-05
    2. 'elif' → logprob: -11.625016212463379
    3. 'exit' → logprob: -12.000016212463379
    4. ' else' → logprob: -14.875016212463379
    5. 'els' → logprob: -15.875016212463379
    6. '```' → logprob: -16.375015258789062
    7. 'elser' → logprob: -16.875015258789062
    8. 'elses' → logprob: -17.125015258789062
    9. '_else' → logprob: -17.250015258789062
    10. '#else' → logprob: -17.625015258789062

Token 886: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028236585203558207
    2. ':
' → logprob: -5.877823829650879
    3. ' :' → logprob: -11.752823829650879
    4. '   ' → logprob: -12.377823829650879
    5. '():' → logprob: -13.377823829650879
    6. ':
' → logprob: -13.877823829650879
    7. ':

' → logprob: -14.002823829650879
    8. ':def' → logprob: -14.127823829650879
    9. '.' → logprob: -14.252823829650879
    10. ':#' → logprob: -15.002823829650879

Token 887: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01550727616995573
    2. '#' → logprob: -4.515507221221924
    3. 'd' → logprob: -5.515507221221924
    4. 'short' → logprob: -9.265507698059082
    5. 'distance' → logprob: -9.265507698059082
    6. '   ' → logprob: -10.140507698059082
    7. 'f' → logprob: -10.265507698059082
    8. 'w' → logprob: -10.890507698059082
    9. 'new' → logprob: -11.140507698059082
    10. 'for' → logprob: -11.140507698059082

Token 888: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.013542636297643185
    2. '#' (adapté à ' #') → logprob: -4.513542652130127
    3. 'd' → logprob: -6.138542652130127
    4. 'res' → logprob: -9.763542175292969
    5. 'short' → logprob: -9.763542175292969
    6. 'new' → logprob: -10.138542175292969
    7. 'for' → logprob: -10.263542175292969
    8. 'distance' → logprob: -10.513542175292969
    9. 'f' → logprob: -10.638542175292969
    10. 'result' → logprob: -11.388542175292969

Token 889: ' Si' (ID: 7832)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.014443780295550823
    2. '#' → logprob: -4.389443874359131
    3. 'd' → logprob: -6.639443874359131
    4. 'for' → logprob: -9.139443397521973
    5. '   ' → logprob: -9.264443397521973
    6. 'Wash' → logprob: -9.514443397521973
    7. 'distance' → logprob: -9.889443397521973
    8. 'short' → logprob: -9.889443397521973
    9. 'new' → logprob: -10.014443397521973
    10. 'f' → logprob: -10.389443397521973

Token 890: ' le' (ID: 505)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.052051082253456116
    2. 'd' → logprob: -3.427051067352295
    3. ' dist' → logprob: -4.927051067352295
    4. '#' → logprob: -4.927051067352295
    5. '   ' → logprob: -6.052051067352295
    6. ':' → logprob: -7.552051067352295
    7. ' d' → logprob: -8.427051544189453
    8. 'f' → logprob: -8.552051544189453
    9. 'not' → logprob: -9.302051544189453
    10. 'Wash' → logprob: -10.177051544189453

Token 891: ' grap' (ID: 60955)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06127983331680298
    2. '#' → logprob: -3.811279773712158
    3. 'd' → logprob: -4.561279773712158
    4. 'g' → logprob: -4.811279773712158
    5. 'n' → logprob: -4.811279773712158
    6. ' dist' → logprob: -5.186279773712158
    7. 'graph' → logprob: -6.436279773712158
    8. 'ans' → logprob: -6.811279773712158
    9. 'len' → logprob: -7.311279773712158
    10. 'import' → logprob: -8.811280250549316

Token 892: 'he' (ID: 273)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.556842029094696
    2. '#' → logprob: -1.9318420886993408
    3. 'ap' → logprob: -2.306842088699341
    4. 'aphe' → logprob: -2.306842088699341
    5. 'rap' → logprob: -3.806842088699341
    6. 'raph' → logprob: -3.806842088699341
    7. '   ' → logprob: -4.306841850280762
    8. 'ape' → logprob: -5.181841850280762
    9. 'aph' → logprob: -6.181841850280762
    10. 'he' → logprob: -6.431841850280762

Token 893: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28648117184638977
    2. ':' → logprob: -1.5364811420440674
    3. ' is' → logprob: -4.1614813804626465
    4. ' est' → logprob: -5.1614813804626465
    5. '=' → logprob: -5.5364813804626465
    6. 'est' → logprob: -6.0364813804626465
    7. 'is' → logprob: -6.7864813804626465
    8. 'n' → logprob: -6.9114813804626465
    9. ' n' → logprob: -6.9114813804626465
    10. ' =' → logprob: -7.1614813804626465

Token 894: ' bip' (ID: 54467)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000958031858317554
    2. '   ' → logprob: -7.37595796585083
    3. ' bip' → logprob: -8.875958442687988
    4. 'bien' → logprob: -10.125958442687988
    5. 'B' → logprob: -10.625958442687988
    6. '#' → logprob: -11.000958442687988
    7. 'com' → logprob: -11.250958442687988
    8. 'n' → logprob: -11.250958442687988
    9. 'bi' → logprob: -11.375958442687988
    10. '[b' → logprob: -11.375958442687988

Token 895: 'arti' (ID: 51348)
  Prédit: 'arti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arti' → logprob: -0.0002627662615850568
    2. 'art' → logprob: -8.250263214111328
    3. 'arte' → logprob: -14.500263214111328
    4. 'ar' → logprob: -14.750263214111328
    5. 'erti' → logprob: -14.750263214111328
    6. 'arto' → logprob: -15.500263214111328
    7. 'arty' → logprob: -17.375263214111328
    8. 'artik' → logprob: -17.750263214111328
    9. 'irti' → logprob: -18.000263214111328
    10. 'арт' → logprob: -18.250263214111328

Token 896: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031887630466371775
    2. '   ' → logprob: -6.253188610076904
    3. ':
' → logprob: -6.753188610076904
    4. ',' → logprob: -9.878189086914062
    5. ' :' → logprob: -11.003189086914062
    6. '.' → logprob: -11.628189086914062
    7. '):' → logprob: -12.253189086914062
    8. '       ' → logprob: -13.503189086914062
    9. ':

' → logprob: -13.628189086914062
    10. ' and' → logprob: -13.753189086914062

Token 897: ' calc' (ID: 25691)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.017302868887782097
    2. '#' → logprob: -5.017302989959717
    3. 'd' → logprob: -5.267302989959717
    4. '   ' → logprob: -5.392302989959717
    5. 'Wash' → logprob: -8.517302513122559
    6. 'distance' → logprob: -8.892302513122559
    7. 'short' → logprob: -9.017302513122559
    8. 'res' → logprob: -10.267302513122559
    9. 'for' → logprob: -10.392302513122559
    10. 'wash' → logprob: -10.392302513122559

Token 898: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.05597536265850067
    2. 'ulate' → logprob: -3.9309754371643066
    3. 'cul' → logprob: -4.430975437164307
    4. 'ul' → logprob: -4.680975437164307
    5. 'cule' → logprob: -4.930975437164307
    6. 'dist' → logprob: -6.305975437164307
    7. '   ' → logprob: -6.805975437164307
    8. 'culate' → logprob: -6.930975437164307
    9. 'uler' → logprob: -6.930975437164307
    10. '#' → logprob: -7.680975437164307

Token 899: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043243296444416046
    2. 'dist' → logprob: -3.293243408203125
    3. ' la' → logprob: -6.668243408203125
    4. ':' → logprob: -6.668243408203125
    5. '()' → logprob: -7.418243408203125
    6. '(dist' → logprob: -7.668243408203125
    7. ' dist' → logprob: -8.043243408203125
    8. '=' → logprob: -8.793243408203125
    9. ' =' → logprob: -8.918243408203125
    10. 'e' → logprob: -9.168243408203125

Token 900: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.026284387335181236
    2. 'plus' → logprob: -4.026284217834473
    3. 'd' → logprob: -5.651284217834473
    4. '#' → logprob: -5.776284217834473
    5. 'short' → logprob: -6.776284217834473
    6. 'che' → logprob: -9.401284217834473
    7. '   ' → logprob: -9.651284217834473
    8. 'distance' → logprob: -9.901284217834473
    9. ' dist' → logprob: -10.651284217834473
    10. 'cour' → logprob: -10.901284217834473

Token 901: ' via' (ID: 4493)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9236286878585815
    2. '=' → logprob: -1.2986286878585815
    3. '   ' → logprob: -1.5486286878585815
    4. ' =' → logprob: -2.173628807067871
    5. 'final' → logprob: -6.673628807067871
    6. ' dist' → logprob: -7.548628807067871
    7. 'd' → logprob: -8.423628807067871
    8. '.' → logprob: -8.673628807067871
    9. '(dist' → logprob: -8.798628807067871
    10. 'updated' → logprob: -8.923628807067871

Token 902: ' Floyd' (ID: 76639)
  Prédit: 'Wash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Wash' → logprob: -0.5013616681098938
    2. 'dist' → logprob: -1.876361608505249
    3. ' dist' → logprob: -2.001361608505249
    4. ' Wash' → logprob: -2.251361608505249
    5. 'd' → logprob: -8.001361846923828
    6. 'W' → logprob: -9.626361846923828
    7. ' d' → logprob: -10.001361846923828
    8. 'F' → logprob: -10.251361846923828
    9. 'Dist' → logprob: -10.251361846923828
    10. '#' → logprob: -10.376361846923828

Token 903: '-W' (ID: 14439)
  Prédit: '_W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_W' → logprob: -0.8539184331893921
    2. 'dist' → logprob: -0.9789184331893921
    3. '_w' → logprob: -2.6039185523986816
    4. 'w' → logprob: -3.2289185523986816
    5. '(dist' → logprob: -3.2289185523986816
    6. '   ' → logprob: -3.3539185523986816
    7. '_' → logprob: -6.228918552398682
    8. '-W' → logprob: -6.228918552398682
    9. 'war' → logprob: -6.353918552398682
    10. 'wald' → logprob: -7.353918552398682

Token 904: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.11562132090330124
    2. 'all' → logprob: -2.490621328353882
    3. '-F' → logprob: -4.490621089935303
    4. '-W' → logprob: -4.865621089935303
    5. '-' → logprob: -5.365621089935303
    6. '_F' → logprob: -6.615621089935303
    7. '_W' → logprob: -8.615621566772461
    8. 'ars' → logprob: -8.865621566772461
    9. 'arth' → logprob: -9.115621566772461
    10. '-Ar' → logprob: -9.115621566772461

Token 905: 'shall' (ID: 30275)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0403425395488739
    2. 'shall' → logprob: -3.2903425693511963
    3. 'ar' → logprob: -6.165342330932617
    4. 'All' → logprob: -10.165342330932617
    5. 'sh' → logprob: -10.290342330932617
    6. 'ars' → logprob: -10.790342330932617
    7. 'small' → logprob: -10.915342330932617
    8. 's' → logprob: -11.165342330932617
    9. '(all' → logprob: -11.540342330932617
    10. 'Sh' → logprob: -11.665342330932617

Token 906: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6933784484863281
    2. 'dist' → logprob: -0.6933784484863281
    3. ' dist' → logprob: -9.318378448486328
    4. 'd' → logprob: -10.818378448486328
    5. 'distance' → logprob: -10.818378448486328
    6. '	dist' → logprob: -10.943378448486328
    7. '
' → logprob: -11.068378448486328
    8. 'result' → logprob: -11.443378448486328
    9. '    
' → logprob: -11.693378448486328
    10. 'print' → logprob: -11.693378448486328

Token 907: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07912386208772659
    2. 'dist' → logprob: -2.5791239738464355
    3. ' dist' → logprob: -8.579123497009277
    4. '	dist' → logprob: -10.954123497009277
    5. '```' → logprob: -11.704123497009277
    6. 'd' → logprob: -11.954123497009277
    7. '   ' → logprob: -12.579123497009277
    8. ':' → logprob: -13.329123497009277
    9. '    
' → logprob: -13.579123497009277
    10. '_dist' → logprob: -13.704123497009277

Token 908: ' Wash' (ID: 10529)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0006674022297374904
    2. 'd' → logprob: -8.625667572021484
    3. 'res' → logprob: -8.750667572021484
    4. '   ' → logprob: -9.250667572021484
    5. 'result' → logprob: -9.250667572021484
    6. ' dist' → logprob: -9.750667572021484
    7. 'short' → logprob: -10.500667572021484
    8. 'distance' → logprob: -10.875667572021484
    9. 'new' → logprob: -11.375667572021484
    10. 'Wash' (adapté à ' Wash') → logprob: -12.375667572021484

Token 909: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -5.319370302458992e-06
    2. 'hall' → logprob: -12.500005722045898
    3. '_all' → logprob: -13.625005722045898
    4. 'al' → logprob: -15.375005722045898
    5. '```' → logprob: -17.2500057220459
    6. 'All' → logprob: -17.2500057220459
    7. ' all' → logprob: -17.6250057220459
    8. '_F' → logprob: -17.6250057220459
    9. 'wall' → logprob: -17.8750057220459
    10. 'ell' → logprob: -18.2500057220459

Token 910: '_F' (ID: 2729)
  Prédit: '_F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_F' → logprob: -1.27099974633893e-05
    2. '_' → logprob: -12.250012397766113
    3. '_W' → logprob: -12.375012397766113
    4. 'F' → logprob: -13.500012397766113
    5. '```' → logprob: -14.375012397766113
    6. ' _' → logprob: -15.125012397766113
    7. '(_' → logprob: -15.250012397766113
    8. '_f' → logprob: -15.750012397766113
    9. '(' → logprob: -16.12501335144043
    10. ')' → logprob: -16.37501335144043

Token 911: 'loyd' (ID: 58664)
  Prédit: 'loyd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loyd' → logprob: -6.153795766294934e-06
    2. 'lo' → logprob: -12.375005722045898
    3. 'l' → logprob: -14.250005722045898
    4. 'ro' → logprob: -15.125005722045898
    5. 'r' → logprob: -15.250005722045898
    6. 'lord' → logprob: -15.375005722045898
    7. 'loid' → logprob: -15.375005722045898
    8. 'F' → logprob: -16.2500057220459
    9. 'lor' → logprob: -17.2500057220459
    10. 'low' → logprob: -17.3750057220459

Token 912: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -11.750009536743164
    3. ' (' → logprob: -13.750009536743164
    4. '(d' → logprob: -15.875009536743164
    5. '(dim' → logprob: -16.250009536743164
    6. '(distance' → logprob: -17.000009536743164
    7. '(di' → logprob: -17.375009536743164
    8. '(diff' → logprob: -17.875009536743164
    9. '(div' → logprob: -18.125009536743164
    10. '(D' → logprob: -18.250009536743164

Token 913: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003398726985324174
    2. ')
' → logprob: -8.62533950805664
    3. ')

' → logprob: -8.75033950805664
    4. ')
' → logprob: -13.87533950805664
    5. ')

' → logprob: -14.62533950805664
    6. ' )' → logprob: -15.50033950805664
    7. '))' → logprob: -16.62533950805664
    8. 'print' → logprob: -17.25033950805664
    9. '   ' → logprob: -17.37533950805664
    10. ')n' → logprob: -17.37533950805664

Token 914: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.050837449729442596
    2. '```' → logprob: -4.050837516784668
    3. 'for' → logprob: -4.175837516784668
    4. 'print' → logprob: -5.425837516784668
    5. '   ' → logprob: -5.800837516784668
    6. 'dist' → logprob: -6.175837516784668
    7. 'ans' → logprob: -6.300837516784668
    8. 'distance' → logprob: -6.550837516784668
    9. 'depth' → logprob: -6.925837516784668
    10. 'diam' → logprob: -7.550837516784668

Token 915: ' for' (ID: 395)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08521535992622375
    2. 'ans' → logprob: -3.2102153301239014
    3. 'print' → logprob: -3.8352153301239014
    4. 'diam' → logprob: -4.4602155685424805
    5. 'maximum' → logprob: -6.0852155685424805
    6. 'res' → logprob: -6.3352155685424805
    7. 'answer' → logprob: -6.8352155685424805
    8. 'for' (adapté à ' for') → logprob: -6.9602155685424805
    9. 'result' → logprob: -7.3352155685424805
    10. 'mx' → logprob: -7.8352155685424805

Token 916: ' d' (ID: 272)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.024927791208028793
    2. 'k' → logprob: -4.149927616119385
    3. 'u' → logprob: -5.774927616119385
    4. 'v' → logprob: -6.024927616119385
    5. 'd' → logprob: -7.024927616119385
    6. 'x' → logprob: -7.274927616119385
    7. 'dist' → logprob: -7.899927616119385
    8. 'length' → logprob: -8.024928092956543
    9. 'distance' → logprob: -8.024928092956543
    10. 'j' → logprob: -8.899928092956543

Token 917: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7513002157211304
    2. 'ist' → logprob: -0.8763002157211304
    3. 'istance' → logprob: -2.62630033493042
    4. 'i' → logprob: -3.50130033493042
    5. '[i' → logprob: -5.87630033493042
    6. 'in' → logprob: -6.00130033493042
    7. ' i' → logprob: -6.37630033493042
    8. 'e' → logprob: -7.75130033493042
    9. ' ' → logprob: -8.001299858093262
    10. 'is' → logprob: -8.876299858093262

Token 918: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02634616382420063
    2. 'range' → logprob: -3.651346206665039
    3. ' dist' → logprob: -10.401346206665039
    4. ' range' → logprob: -11.776346206665039
    5. '(dist' → logprob: -12.526346206665039
    6. 'distance' → logprob: -14.276346206665039
    7. '	dist' → logprob: -14.276346206665039
    8. 'list' → logprob: -14.776346206665039
    9. '[' → logprob: -15.151346206665039
    10. 'd' → logprob: -15.401346206665039

Token 919: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001070323633030057
    2. ':
' → logprob: -7.626070499420166
    3. '):' → logprob: -7.751070499420166
    4. '[' → logprob: -10.001070022583008
    5. ' :' → logprob: -10.751070022583008
    6. '<|end|>' → logprob: -10.751070022583008
    7. ')' → logprob: -11.001070022583008
    8. '[:]' → logprob: -11.376070022583008
    9. '[:-' → logprob: -12.001070022583008
    10. '):
' → logprob: -12.001070022583008

Token 920: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029768195003271103
    2. '       ' → logprob: -3.529768228530884
    3. ' print' → logprob: -11.779767990112305
    4. '```' → logprob: -12.029767990112305
    5. 'print' → logprob: -12.779767990112305
    6. '<|end|>' → logprob: -14.654767990112305
    7. '	print' → logprob: -14.904767990112305
    8. '    ' → logprob: -15.779767990112305
    9. '           ' → logprob: -16.654767990112305
    10. '   ' → logprob: -16.654767990112305

Token 921: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03131131827831268
    2. '   ' → logprob: -4.031311511993408
    3. ' print' → logprob: -4.531311511993408
    4. 'ans' → logprob: -6.406311511993408
    5. ' ans' → logprob: -7.406311511993408
    6. '	ans' → logprob: -10.78131103515625
    7. 'answer' → logprob: -11.90631103515625
    8. '	print' → logprob: -12.15631103515625
    9. '       ' → logprob: -12.78131103515625
    10. ' ' → logprob: -13.28131103515625

Token 922: ' Pour' (ID: 13931)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011796683247666806
    2. ' print' → logprob: -9.125118255615234
    3. '   ' → logprob: -11.750118255615234
    4. 'prin' → logprob: -14.125118255615234
    5. 'pr' → logprob: -16.125118255615234
    6. 'd' → logprob: -16.250118255615234
    7. 'for' → logprob: -16.500118255615234
    8. 'max' → logprob: -17.625118255615234
    9. '	print' → logprob: -18.250118255615234
    10. '  ' → logprob: -18.375118255615234

Token 923: ' chaque' (ID: 21194)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.057875800877809525
    2. 'x' → logprob: -3.557875871658325
    3. 'val' → logprob: -4.182875633239746
    4. 'row' → logprob: -5.682875633239746
    5. 'value' → logprob: -5.932875633239746
    6. 'v' → logprob: -6.182875633239746
    7. 'i' → logprob: -6.932875633239746
    8. ' print' → logprob: -6.932875633239746
    9. 'max' → logprob: -7.182875633239746
    10. 'line' → logprob: -7.557875633239746

Token 924: ' sommet' (ID: 130502)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.43096864223480225
    2. 'x' → logprob: -1.9309686422348022
    3. 'row' → logprob: -2.555968761444092
    4. 'i' → logprob: -2.555968761444092
    5. 'val' → logprob: -4.180968761444092
    6. 'line' → logprob: -4.430968761444092
    7. 'v' → logprob: -4.680968761444092
    8. 'j' → logprob: -5.180968761444092
    9. 'value' → logprob: -5.930968761444092
    10. 'd' → logprob: -6.555968761444092

Token 925: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1690862625837326
    2. '   ' → logprob: -2.169086217880249
    3. '       ' → logprob: -3.794086217880249
    4. ' print' → logprob: -4.294086456298828
    5. '           ' → logprob: -5.419086456298828
    6. ':' → logprob: -8.169086456298828
    7. '
' → logprob: -8.544086456298828
    8. '	print' → logprob: -9.919086456298828
    9. '    
' → logprob: -10.544086456298828
    10. '  ' → logprob: -10.794086456298828

Token 926: ' récup' (ID: 62856)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03632422536611557
    2. '   ' → logprob: -3.5363242626190186
    3. ' print' → logprob: -5.0363240242004395
    4. '       ' → logprob: -9.911324501037598
    5. '	print' → logprob: -12.536324501037598
    6. ' ' → logprob: -14.661324501037598
    7. '  ' → logprob: -15.411324501037598
    8. 'for' → logprob: -15.536324501037598
    9. '```' → logprob: -15.911324501037598
    10. '    ' → logprob: -16.16132354736328

Token 927: 'ère' (ID: 4346)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.028507303446531296
    2. 'int' → logprob: -3.7785072326660156
    3. 'print' → logprob: -6.153507232666016
    4. '   ' → logprob: -6.278507232666016
    5. 'er' → logprob: -7.903507232666016
    6. 'ute' → logprob: -8.278507232666016
    7. 'oint' → logprob: -8.778507232666016
    8. '       ' → logprob: -9.153507232666016
    9. 'range' → logprob: -9.278507232666016
    10. 'ort' → logprob: -9.778507232666016

Token 928: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10090707242488861
    2. 'max' → logprob: -2.35090708732605
    3. ' print' → logprob: -7.600906848907471
    4. 'min' → logprob: -9.475907325744629
    5. ' max' → logprob: -9.475907325744629
    6. 'd' → logprob: -10.475907325744629
    7. '   ' → logprob: -11.725907325744629
    8. '       ' → logprob: -12.600907325744629
    9. 'for' → logprob: -13.475907325744629
    10. 'the' → logprob: -13.850907325744629

Token 929: ' distance' (ID: 9324)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.000284696085145697
    2. ' max' → logprob: -8.750285148620605
    3. 'print' → logprob: -9.000285148620605
    4. 'min' → logprob: -13.500285148620605
    5. '(max' → logprob: -13.750285148620605
    6. '[max' → logprob: -15.625285148620605
    7. 'maximum' → logprob: -16.50028419494629
    8. 'd' → logprob: -16.75028419494629
    9. '=max' → logprob: -16.87528419494629
    10. '	max' → logprob: -17.00028419494629

Token 930: ' maximale' (ID: 76380)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.022921759635210037
    2. '   ' → logprob: -3.8979218006134033
    3. ' print' → logprob: -6.647921562194824
    4. '       ' → logprob: -6.897921562194824
    5. '           ' → logprob: -10.272921562194824
    6. 'max' → logprob: -10.647921562194824
    7. '	print' → logprob: -12.522921562194824
    8. '  ' → logprob: -13.272921562194824
    9. ' ' → logprob: -13.772921562194824
    10. '#print' → logprob: -14.022921562194824

Token 931: ' vers' (ID: 3640)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3429814279079437
    2. 'print' → logprob: -1.4679814577102661
    3. '   ' → logprob: -2.8429813385009766
    4. ' print' → logprob: -6.842981338500977
    5. '           ' → logprob: -8.467981338500977
    6. ',' → logprob: -9.342981338500977
    7. 'max' → logprob: -9.717981338500977
    8. '	print' → logprob: -9.842981338500977
    9. '=' → logprob: -10.342981338500977
    10. ' =' → logprob: -10.717981338500977

Token 932: ' un' (ID: 537)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10269887000322342
    2. 'd' → logprob: -2.602698802947998
    3. ' max' → logprob: -3.977698802947998
    4. ' d' → logprob: -5.352698802947998
    5. 'range' → logprob: -10.352699279785156
    6. '   ' → logprob: -11.352699279785156
    7. 'dist' → logprob: -12.602699279785156
    8. '	max' → logprob: -12.977699279785156
    9. '(max' → logprob: -13.102699279785156
    10. 'la' → logprob: -13.227699279785156

Token 933: ' autre' (ID: 20278)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0063482229597866535
    2. ' max' → logprob: -5.381348133087158
    3. 'd' → logprob: -6.756348133087158
    4. 'other' → logprob: -8.256348609924316
    5. 'v' → logprob: -9.506348609924316
    6. '_max' → logprob: -9.881348609924316
    7. 'maximum' → logprob: -10.006348609924316
    8. ' d' → logprob: -10.631348609924316
    9. 'som' → logprob: -10.756348609924316
    10. 's' → logprob: -10.881348609924316

Token 934: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.06419781595468521
    2. ' sommet' → logprob: -3.3141977787017822
    3. 'max' → logprob: -3.9391977787017822
    4. 'print' → logprob: -6.564198017120361
    5. 's' → logprob: -6.689198017120361
    6. 'vertex' → logprob: -6.939198017120361
    7. 'Som' → logprob: -7.439198017120361
    8. ' som' → logprob: -7.689198017120361
    9. 'node' → logprob: -8.314197540283203
    10. 'v' → logprob: -8.439197540283203

Token 935: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01963684894144535
    2. 'print' → logprob: -4.644636631011963
    3. '       ' → logprob: -4.644636631011963
    4. ' print' → logprob: -8.519637107849121
    5. ',' → logprob: -12.519637107849121
    6. '	print' → logprob: -12.519637107849121
    7. '    ' → logprob: -12.894637107849121
    8. '    
' → logprob: -13.269637107849121
    9. '<|end|>' → logprob: -13.269637107849121
    10. '   ' → logprob: -13.644637107849121

Token 936: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00842769630253315
    2. 'print' → logprob: -4.883427619934082
    3. '       ' → logprob: -7.258427619934082
    4. ' print' → logprob: -9.133427619934082
    5. 'ans' → logprob: -13.133427619934082
    6. '```' → logprob: -13.383427619934082
    7. '	print' → logprob: -13.633427619934082
    8. '   ' → logprob: -13.758427619934082
    9. ' ans' → logprob: -14.008427619934082
    10. 'answer' → logprob: -14.258427619934082

Token 937: ' tmp' (ID: 8919)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3140930235385895
    2. 'print' → logprob: -1.314092993736267
    3. '   ' → logprob: -7.439093112945557
    4. 'max' → logprob: -9.314092636108398
    5. ' ans' → logprob: -9.689092636108398
    6. 'answer' → logprob: -10.189092636108398
    7. '	ans' → logprob: -11.314092636108398
    8. 'm' → logprob: -11.564092636108398
    9. ' print' → logprob: -11.814092636108398
    10. 'val' → logprob: -12.189092636108398

Token 938: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3998350203037262
    2. ' =' → logprob: -1.3998349905014038
    3. '=max' → logprob: -2.5248351097106934
    4. 'max' → logprob: -6.024835109710693
    5. '_max' → logprob: -8.274834632873535
    6. ' max' → logprob: -9.524834632873535
    7. '.append' → logprob: -10.149834632873535
    8. '[max' → logprob: -11.649834632873535
    9. '=int' → logprob: -11.774834632873535
    10. ')' → logprob: -12.024834632873535

Token 939: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009120595059357584
    2. ' max' → logprob: -7.000912189483643
    3. '0' → logprob: -14.625911712646484
    4. '(max' → logprob: -17.875911712646484
    5. '-max' → logprob: -18.000911712646484
    6. '	max' → logprob: -18.125911712646484
    7. '=max' → logprob: -18.625911712646484
    8. '[max' → logprob: -19.125911712646484
    9. '_max' → logprob: -19.625911712646484
    10. ',max' → logprob: -20.000911712646484

Token 940: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00018280261429026723
    2. '(' → logprob: -9.37518310546875
    3. '(tmp' → logprob: -9.50018310546875
    4. 'd' → logprob: -10.87518310546875
    5. '(dist' → logprob: -12.75018310546875
    6. '(
' → logprob: -15.00018310546875
    7. '([' → logprob: -15.25018310546875
    8. 'tmp' → logprob: -15.37518310546875
    9. ' (' → logprob: -15.75018310546875
    10. '(_)' → logprob: -16.12518310546875

Token 941: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.44574936106801e-05
    2. ' )' → logprob: -9.62507438659668
    3. ')
' → logprob: -12.12507438659668
    4. '())' → logprob: -14.12507438659668
    5. ')#' → logprob: -14.37507438659668
    6. '<|end|>' → logprob: -14.87507438659668
    7. '))' → logprob: -15.62507438659668
    8. ' ' → logprob: -15.75007438659668
    9. ')d' → logprob: -16.00007438659668
    10. '),' → logprob: -16.50007438659668

Token 942: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11782508343458176
    2. '
' → logprob: -2.8678250312805176
    3. ' if' → logprob: -3.2428250312805176
    4. 'if' → logprob: -5.117825031280518
    5. '<|end|>' → logprob: -5.367825031280518
    6. '       ' → logprob: -5.617825031280518
    7. '    
' → logprob: -8.117825508117676
    8. ')' → logprob: -8.742825508117676
    9. '
' → logprob: -9.117825508117676
    10. '  ' → logprob: -10.117825508117676

Token 943: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4518836438655853
    2. 'if' → logprob: -1.2018836736679077
    3. '   ' → logprob: -3.201883554458618
    4. 'ans' → logprob: -4.201883792877197
    5. ' ans' → logprob: -5.076883792877197
    6. '
' → logprob: -6.951883792877197
    7. '       ' → logprob: -10.201883316040039
    8. '    
' → logprob: -11.451883316040039
    9. '
' → logprob: -11.826883316040039
    10. '	ans' → logprob: -11.951883316040039

Token 944: ' Pr' (ID: 2284)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08931237459182739
    2. 'if' → logprob: -2.4643123149871826
    3. '   ' → logprob: -8.339312553405762
    4. 'print' → logprob: -10.089312553405762
    5. '       ' → logprob: -10.339312553405762
    6. ' ans' → logprob: -10.464312553405762
    7. ' if' → logprob: -11.589312553405762
    8. '	ans' → logprob: -12.589312553405762
    9. '           ' → logprob: -12.714312553405762
    10. 'answer' → logprob: -12.839312553405762

Token 945: 'end' (ID: 419)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.0259150157216936e-05
    2. 'if' → logprob: -10.37505054473877
    3. '   ' → logprob: -11.87505054473877
    4. '       ' → logprob: -12.75005054473877
    5. 'ints' → logprob: -13.25005054473877
    6. '#' → logprob: -13.37505054473877
    7. 'e' → logprob: -13.87505054473877
    8. 'print' → logprob: -14.50005054473877
    9. 'ef' → logprob: -14.75005054473877
    10. '    ' → logprob: -14.87505054473877

Token 946: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18437357246875763
    2. ' max' → logprob: -1.9343736171722412
    3. '(max' → logprob: -3.809373617172241
    4. '=max' → logprob: -6.559373378753662
    5. 'tmp' → logprob: -9.05937385559082
    6. '(tmp' → logprob: -9.93437385559082
    7. '[max' → logprob: -11.18437385559082
    8. ' ' → logprob: -11.43437385559082
    9. 'ans' → logprob: -11.43437385559082
    10. '	max' → logprob: -11.55937385559082

Token 947: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0007643607095815241
    2. ' max' → logprob: -7.3757643699646
    3. 'ans' → logprob: -9.000763893127441
    4. 'tmp' → logprob: -11.250763893127441
    5. '(max' → logprob: -14.125763893127441
    6. ' ans' → logprob: -15.000763893127441
    7. '=max' → logprob: -16.250764846801758
    8. '	max' → logprob: -16.500764846801758
    9. 'print' → logprob: -16.500764846801758
    10. ' ' → logprob: -17.000764846801758

Token 948: ' grande' (ID: 10094)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3340384066104889
    2. 'ans' → logprob: -1.5840383768081665
    3. ' ans' → logprob: -3.084038496017456
    4. ' max' → logprob: -4.209038257598877
    5. 'large' → logprob: -4.709038257598877
    6. 'if' → logprob: -6.084038257598877
    7. ' large' → logprob: -6.334038257598877
    8. '=max' → logprob: -7.334038257598877
    9. 'grand' → logprob: -7.459038257598877
    10. '(ans' → logprob: -7.584038257598877

Token 949: ' de' (ID: 334)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4870394766330719
    2. 'max' → logprob: -1.7370394468307495
    3. 'tmp' → logprob: -1.9870394468307495
    4. '(tmp' → logprob: -3.737039566040039
    5. ' ans' → logprob: -3.862039566040039
    6. '(ans' → logprob: -4.612039566040039
    7. 'answer' → logprob: -5.612039566040039
    8. '(max' → logprob: -5.612039566040039
    9. 'if' → logprob: -5.862039566040039
    10. 'result' → logprob: -5.987039566040039

Token 950: ' ces' (ID: 10532)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5871289372444153
    2. 'tmp' → logprob: -0.8371289372444153
    3. '(ans' → logprob: -5.46212911605835
    4. '[tmp' → logprob: -6.21212911605835
    5. '(tmp' → logprob: -6.33712911605835
    6. ' ans' → logprob: -6.46212911605835
    7. 'max' → logprob: -7.46212911605835
    8. ' tmp' → logprob: -7.58712911605835
    9. 'range' → logprob: -7.83712911605835
    10. '[' → logprob: -10.837128639221191

Token 951: ' distances' (ID: 48294)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.2106720358133316
    2. ' tmp' → logprob: -1.7106720209121704
    3. 'max' → logprob: -4.960671901702881
    4. ' max' → logprob: -6.710671901702881
    5. '(tmp' → logprob: -7.585671901702881
    6. 'distance' → logprob: -9.585672378540039
    7. ' distances' → logprob: -9.585672378540039
    8. '_tmp' → logprob: -10.210672378540039
    9. 'dist' → logprob: -10.335672378540039
    10. ' ' → logprob: -10.460672378540039

Token 952: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15870152413845062
    2. 'if' → logprob: -2.6587014198303223
    3. '   ' → logprob: -3.6587014198303223
    4. 'ans' → logprob: -3.6587014198303223
    5. ' ans' → logprob: -4.033701419830322
    6. '<|end|>' → logprob: -5.908701419830322
    7. '
' → logprob: -6.158701419830322
    8. '(ans' → logprob: -7.408701419830322
    9. ' for' → logprob: -7.658701419830322
    10. '	ans' → logprob: -8.03370189666748

Token 953: 'diam' (ID: 98903)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.020768320187926292
    2. ' ans' → logprob: -4.020768165588379
    3. 'if' → logprob: -6.270768165588379
    4. '   ' → logprob: -8.020768165588379
    5. '       ' → logprob: -8.520768165588379
    6. '(ans' → logprob: -9.770768165588379
    7. 'tmp' → logprob: -9.895768165588379
    8. 'max' → logprob: -10.395768165588379
    9. ' if' → logprob: -10.395768165588379
    10. '	ans' → logprob: -11.145768165588379

Token 954: 'ètre' (ID: 60948)
  Prédit: 'ètre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètre' → logprob: -0.019497619941830635
    2. 'etre' → logprob: -4.019497394561768
    3. '`' → logprob: -8.019497871398926
    4. 'et' → logprob: -8.019497871398926
    5. 'e' → logprob: -8.269497871398926
    6. 'ète' → logprob: -8.644497871398926
    7. 'eter' → logprob: -9.144497871398926
    8. 'è' → logprob: -10.144497871398926
    9. ')' → logprob: -10.269497871398926
    10. 'èt' → logprob: -11.769497871398926

Token 955: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07580272108316422
    2. 'max' → logprob: -3.825802803039551
    3. ' )' → logprob: -4.200802803039551
    4. '=' → logprob: -4.450802803039551
    5. '=max' → logprob: -5.200802803039551
    6. ' =' → logprob: -5.325802803039551
    7. ')
' → logprob: -5.700802803039551
    8. '   ' → logprob: -6.075802803039551
    9. ',' → logprob: -6.575802803039551
    10. ' max' → logprob: -6.700802803039551

Token 956: ' grap' (ID: 60955)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6795892715454102
    2. 'graph' → logprob: -1.9295892715454102
    3. ' graph' → logprob: -2.30458927154541
    4. ' g' → logprob: -2.30458927154541
    5. 'dist' → logprob: -2.55458927154541
    6. ' dist' → logprob: -2.92958927154541
    7. ' grap' → logprob: -4.67958927154541
    8. 'gr' → logprob: -4.92958927154541
    9. ')' → logprob: -8.17958927154541
    10. ' ' → logprob: -8.67958927154541

Token 957: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.006331283133476973
    2. 'he' → logprob: -5.381331443786621
    3. 'phe' → logprob: -7.256331443786621
    4. 'ph' → logprob: -7.881331443786621
    5. 'h' → logprob: -8.006331443786621
    6. 'ap' → logprob: -9.131331443786621
    7. '#' → logprob: -10.381331443786621
    8. 'aph' → logprob: -10.506331443786621
    9. 'af' → logprob: -11.506331443786621
    10. ')' → logprob: -11.506331443786621

Token 958: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04335859417915344
    2. ' if' → logprob: -3.918358564376831
    3. ')
' → logprob: -4.79335880279541
    4. '       ' → logprob: -5.41835880279541
    5. '   ' → logprob: -5.79335880279541
    6. '<|end|>' → logprob: -5.91835880279541
    7. ',' → logprob: -6.91835880279541
    8. 'if' → logprob: -6.91835880279541
    9. ' )' → logprob: -7.41835880279541
    10. '
' → logprob: -7.66835880279541

Token 959: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.26655811071395874
    2. '   ' → logprob: -2.0165581703186035
    3. 'if' → logprob: -2.5165581703186035
    4. 'ans' → logprob: -4.2665581703186035
    5. ' ans' → logprob: -5.1415581703186035
    6. ' for' → logprob: -9.016557693481445
    7. ' =' → logprob: -10.641557693481445
    8. '(ans' → logprob: -10.766557693481445
    9. 'for' → logprob: -11.016557693481445
    10. 'answer' → logprob: -11.391557693481445

Token 960: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.008624974638223648
    2. 'if' → logprob: -4.758625030517578
    3. '   ' → logprob: -11.758625030517578
    4. ' ans' → logprob: -13.258625030517578
    5. '	ans' → logprob: -15.133625030517578
    6. 'print' → logprob: -15.383625030517578
    7. '(ans' → logprob: -15.758625030517578
    8. '       ' → logprob: -16.258625030517578
    9. ' if' → logprob: -16.383625030517578
    10. 'Ans' → logprob: -17.008625030517578

Token 961: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.031622741371393204
    2. ' =' → logprob: -3.5316226482391357
    3. '=max' → logprob: -6.281622886657715
    4. 'max' → logprob: -16.1566219329834
    5. ' max' → logprob: -18.4066219329834
    6. '=Math' → logprob: -18.5316219329834
    7. '=int' → logprob: -18.6566219329834
    8. ',max' → logprob: -19.1566219329834
    9. '＝' → logprob: -19.2816219329834
    10. '=min' → logprob: -19.4066219329834

Token 962: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12696464359760284
    2. ' max' → logprob: -2.126964569091797
    3. 'tmp' → logprob: -10.751964569091797
    4. 'int' → logprob: -11.376964569091797
    5. ' tmp' → logprob: -12.876964569091797
    6. ' int' → logprob: -14.251964569091797
    7. '	max' → logprob: -15.001964569091797
    8. '(max' → logprob: -16.376964569091797
    9. '=max' → logprob: -17.501964569091797
    10. '   ' → logprob: -17.751964569091797

Token 963: '(tmp' (ID: 22623)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.7848862373502925e-05
    2. 'ans' → logprob: -10.750027656555176
    3. '(tmp' → logprob: -12.500027656555176
    4. '(' → logprob: -12.875027656555176
    5. '	ans' → logprob: -18.250028610229492
    6. ' ans' → logprob: -18.375028610229492
    7. ' (' → logprob: -18.500028610229492
    8. 'tmp' → logprob: -18.750028610229492
    9. '(an' → logprob: -20.125028610229492
    10. '(answer' → logprob: -20.125028610229492

Token 964: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010641285916790366
    2. ' ,' → logprob: -7.001064300537109
    3. '(ans' → logprob: -9.25106430053711
    4. ')' → logprob: -10.12606430053711
    5. 'ans' → logprob: -11.62606430053711
    6. ' )' → logprob: -12.87606430053711
    7. ' ans' → logprob: -13.00106430053711
    8. ',
' → logprob: -13.50106430053711
    9. ',tmp' → logprob: -14.25106430053711
    10. ',)' → logprob: -16.00106430053711

Token 965: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00033581978641450405
    2. ' ans' → logprob: -8.000335693359375
    3. '(ans' → logprob: -16.125335693359375
    4. '0' → logprob: -16.250335693359375
    5. '	ans' → logprob: -17.000335693359375
    6. '   ' → logprob: -17.625335693359375
    7. ' ' → logprob: -18.625335693359375
    8. '           ' → logprob: -19.750335693359375
    9. '       ' → logprob: -19.875335693359375
    10. '_ans' → logprob: -20.500335693359375

Token 966: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012844942102674395
    2. ')
' → logprob: -9.125128746032715
    3. ' )' → logprob: -11.500128746032715
    4. '   ' → logprob: -11.750128746032715
    5. ')return' → logprob: -14.375128746032715
    6. ')

' → logprob: -14.875128746032715
    7. '<|end|>' → logprob: -15.500128746032715
    8. ')#' → logprob: -17.0001277923584
    9. '}' → logprob: -17.1251277923584
    10. ' ' → logprob: -17.6251277923584

Token 967: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.194110756041482e-05
    2. '
' → logprob: -10.375061988830566
    3. ' print' → logprob: -11.000061988830566
    4. '```' → logprob: -11.250061988830566
    5. '``' → logprob: -15.250061988830566
    6. '  
' → logprob: -15.500061988830566
    7. '\n' → logprob: -15.625061988830566
    8. '    
' → logprob: -16.12506103515625
    9. ')
' → logprob: -16.75006103515625
    10. ' 
' → logprob: -16.75006103515625

Token 968: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.008129963040119e-06
    2. ' print' → logprob: -12.500003814697266
    3. '```' → logprob: -16.500003814697266
    4. '
' → logprob: -17.375003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '	print' → logprob: -20.750003814697266
    7. '``' → logprob: -21.125003814697266
    8. '.print' → logprob: -21.750003814697266
    9. '(print' → logprob: -22.000003814697266
    10. '-print' → logprob: -22.125003814697266

Token 969: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. ' print' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.750001907348633
    4. '```' → logprob: -23.250001907348633
    5. '#' → logprob: -24.750001907348633
    6. '
' → logprob: -25.125001907348633
    7. '	print' → logprob: -25.500001907348633
    8. '#print' → logprob: -25.625001907348633
    9. 'Print' → logprob: -26.500001907348633
    10. 'printf' → logprob: -26.625001907348633

Token 970: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.5808128714561462
    2. 'icher' → logprob: -0.8308128714561462
    3. 'ich' → logprob: -5.455812931060791
    4. 'ic' → logprob: -8.080812454223633
    5. 'ichage' → logprob: -8.705812454223633
    6. '#' → logprob: -9.330812454223633
    7. 'cher' → logprob: -12.705812454223633
    8. 'iché' → logprob: -12.830812454223633
    9. 'ichert' → logprob: -12.955812454223633
    10. 'ichier' → logprob: -13.330812454223633

Token 971: ' le' (ID: 505)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.126983642578125
    2. 'ans' → logprob: -2.126983642578125
    3. 'int' → logprob: -10.376983642578125
    4. ' ans' → logprob: -10.876983642578125
    5. '(int' → logprob: -12.126983642578125
    6. '	ans' → logprob: -15.876983642578125
    7. '(' → logprob: -17.626983642578125
    8. ' (' → logprob: -19.376983642578125
    9. '_ans' → logprob: -19.626983642578125
    10. '   ' → logprob: -20.751983642578125

Token 972: ' diamètre' (ID: 167210)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00024739265791140497
    2. 'int' → logprob: -9.00024700164795
    3. '(ans' → logprob: -9.00024700164795
    4. ' ans' → logprob: -14.87524700164795
    5. '(int' → logprob: -16.250247955322266
    6. 'print' → logprob: -18.000247955322266
    7. '	ans' → logprob: -18.125247955322266
    8. 'answer' → logprob: -18.875247955322266
    9. '1' → logprob: -20.125247955322266
    10. '   ' → logprob: -20.375247955322266

Token 973: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4820746183395386
    2. '(ans' → logprob: -0.9820746183395386
    3. 'ans' → logprob: -5.232074737548828
    4. '   ' → logprob: -6.107074737548828
    5. '(' → logprob: -8.232074737548828
    6. '(print' → logprob: -9.732074737548828
    7. '()' → logprob: -10.607074737548828
    8. '
' → logprob: -11.232074737548828
    9. ' print' → logprob: -11.607074737548828
    10. '()
' → logprob: -11.857074737548828

Token 974: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010303827933967113
    2. '(' → logprob: -5.010303974151611
    3. ' ' → logprob: -6.135303974151611
    4. '2' → logprob: -7.260303974151611
    5. '+' → logprob: -7.760303974151611
    6. ' +' → logprob: -8.760303497314453
    7. '   ' → logprob: -9.135303497314453
    8. ' (' → logprob: -12.260303497314453
    9. '("' → logprob: -12.885303497314453
    10. 'e' → logprob: -13.260303497314453

Token 975: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023572170175611973
    2. ' ' → logprob: -8.500235557556152
    3. '2' → logprob: -10.375235557556152
    4. '+' → logprob: -14.875235557556152
    5. '.' → logprob: -15.875235557556152
    6. ' ' → logprob: -16.25023651123047
    7. '```' → logprob: -16.62523651123047
    8. '   ' → logprob: -17.06273651123047
    9. '0' → logprob: -17.25023651123047
    10. '...' → logprob: -17.31273651123047

Token 976: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017363792285323143
    2. '(ans' → logprob: -4.267364025115967
    3. ' print' → logprob: -6.142364025115967
    4. 'ans' → logprob: -7.142364025115967
    5. ' ans' → logprob: -9.017363548278809
    6. '   ' → logprob: -9.142363548278809
    7. '
' → logprob: -11.517363548278809
    8. '(print' → logprob: -11.892363548278809
    9. '(' → logprob: -12.642363548278809
    10. '+' → logprob: -13.142363548278809

Token 977: 'tail' (ID: 20472)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15143103897571564
    2. ')' → logprob: -2.026431083679199
    3. ' ' → logprob: -5.026431083679199
    4. ' )' → logprob: -7.026431083679199
    5. '+' → logprob: -7.151431083679199
    6. 'ans' → logprob: -8.7764310836792
    7. '(ans' → logprob: -9.0264310836792
    8. '   ' → logprob: -9.7764310836792
    9. ' +' → logprob: -9.7764310836792
    10. 'print' → logprob: -10.7764310836792

Token 978: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.4177659749984741
    2. 'eur' → logprob: -1.7927659749984741
    3. 'plus' → logprob: -2.1677660942077637
    4. '+' → logprob: -2.2927660942077637
    5. 'ille' → logprob: -2.2927660942077637
    6. 'au' → logprob: -2.6677660942077637
    7. 'ur' → logprob: -2.9177660942077637
    8. 'ueur' → logprob: -3.0427660942077637
    9. 'lle' → logprob: -3.1677660942077637
    10. 'e' → logprob: -4.792766094207764

Token 979: ' minimale' (ID: 143217)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.8720542192459106
    2. ' de' → logprob: -0.9970542192459106
    3. ')' → logprob: -2.622054100036621
    4. ' maximale' → logprob: -3.247054100036621
    5. 'de' → logprob: -3.497054100036621
    6. ' of' → logprob: -3.747054100036621
    7. 'du' → logprob: -4.497054100036621
    8. 'max' → logprob: -5.247054100036621
    9. '+' → logprob: -5.622054100036621
    10. ' )' → logprob: -5.622054100036621

Token 980: ' de' (ID: 334)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.31060245633125305
    2. 'du' → logprob: -1.5606024265289307
    3. ' d' → logprob: -3.9356024265289307
    4. 'de' → logprob: -4.31060266494751
    5. ' de' → logprob: -4.43560266494751
    6. 'd' → logprob: -4.81060266494751
    7. ')' → logprob: -6.18560266494751
    8. ' ' → logprob: -7.56060266494751
    9. '   ' → logprob: -8.310602188110352
    10. '<|end|>' → logprob: -8.560602188110352

Token 981: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5548661351203918
    2. ' la' → logprob: -1.054866075515747
    3. 'l' → logprob: -2.679866075515747
    4. 'une' → logprob: -5.554866313934326
    5. ' l' → logprob: -6.554866313934326
    6. ' clique' → logprob: -7.304866313934326
    7. 'cl' → logprob: -7.429866313934326
    8. 'color' → logprob: -7.679866313934326
    9. 'un' → logprob: -8.304865837097168
    10. 's' → logprob: -8.429865837097168

Token 982: ' partition' (ID: 31512)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.024851737543940544
    2. ' plus' → logprob: -3.8998517990112305
    3. 'chaine' → logprob: -6.3998517990112305
    4. 'cl' → logprob: -7.5248517990112305
    5. 'cha' → logprob: -7.5248517990112305
    6. 'ensemble' → logprob: -7.6498517990112305
    7. 'cou' → logprob: -7.7748517990112305
    8. 'che' → logprob: -8.39985179901123
    9. 's' → logprob: -9.02485179901123
    10. '_plus' → logprob: -10.14985179901123

Token 983: '/d' (ID: 6662)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026827796828001738
    2. '+' → logprob: -6.752682685852051
    3. ')
' → logprob: -7.127682685852051
    4. ' )' → logprob: -7.627682685852051
    5. ' +' → logprob: -9.25268268585205
    6. '   ' → logprob: -9.37768268585205
    7. '<|end|>' → logprob: -12.00268268585205
    8. '")' → logprob: -12.25268268585205
    9. '```' → logprob: -12.62768268585205
    10. '()' → logprob: -12.75268268585205

Token 984: 'é' (ID: 377)
  Prédit: ''ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ensemble' → logprob: -0.9598624110221863
    2. 'e' → logprob: -1.334862470626831
    3. 'ensemble' → logprob: -1.959862470626831
    4. 'é' → logprob: -2.834862470626831
    5. '```' → logprob: -3.459862470626831
    6. 'istance' → logprob: -4.084862232208252
    7. 'u' → logprob: -4.084862232208252
    8. '+' → logprob: -4.084862232208252
    9. 'l' → logprob: -4.459862232208252
    10. '2' → logprob: -5.084862232208252

Token 985: 'composition' (ID: 119135)
  Prédit: 'composition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'composition' → logprob: -0.43433433771133423
    2. 'tection' → logprob: -1.6843342781066895
    3. 'cou' → logprob: -1.9343342781066895
    4. 'c' → logprob: -4.9343342781066895
    5. 'termination' → logprob: -5.3093342781066895
    6. 'f' → logprob: -6.6843342781066895
    7. 'color' → logprob: -6.6843342781066895
    8. 'lim' → logprob: -6.8093342781066895
    9. '```' → logprob: -6.8093342781066895
    10. 'com' → logprob: -7.4343342781066895

Token 986: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01713472045958042
    2. ' )' → logprob: -4.267134666442871
    3. '+' → logprob: -7.142134666442871
    4. 'du' → logprob: -7.517134666442871
    5. ')
' → logprob: -7.767134666442871
    6. 'b' → logprob: -8.142134666442871
    7. '   ' → logprob: -9.142134666442871
    8. ' du' → logprob: -9.142134666442871
    9. 'de' → logprob: -9.392134666442871
    10. '<|end|>' → logprob: -10.142134666442871

Token 987: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7835754988482222e-05
    2. ' print' → logprob: -11.250018119812012
    3. '   ' → logprob: -12.500018119812012
    4. '```' → logprob: -13.875018119812012
    5. '
' → logprob: -16.750017166137695
    6. '``' → logprob: -18.500017166137695
    7. '	print' → logprob: -18.750017166137695
    8. '(print' → logprob: -20.125017166137695
    9. '\' → logprob: -20.625017166137695
    10. '    
' → logprob: -20.625017166137695

Token 988: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001584850688232109
    2. ' print' → logprob: -8.750158309936523
    3. '```' → logprob: -18.625158309936523
    4. '   ' → logprob: -21.000158309936523
    5. '	print' → logprob: -22.125158309936523
    6. '(print' → logprob: -22.875158309936523
    7. '``' → logprob: -23.500158309936523
    8. '.print' → logprob: -23.625158309936523
    9. 'Print' → logprob: -24.125158309936523
    10. '+' → logprob: -24.625158309936523

Token 989: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0024758970830589533
    2. 'ans' → logprob: -6.002475738525391
    3. ' ans' → logprob: -15.87747573852539
    4. '(' → logprob: -16.50247573852539
    5. ' (' → logprob: -17.75247573852539
    6. '(int' → logprob: -18.00247573852539
    7. '	ans' → logprob: -18.00247573852539
    8. 'int' → logprob: -18.50247573852539
    9. '(answer' → logprob: -20.00247573852539
    10. '((' → logprob: -20.75247573852539

Token 990: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.061970602720975876
    2. ' +' → logprob: -2.8119707107543945
    3. ')' → logprob: -12.811970710754395
    4. '+)' → logprob: -15.936970710754395
    5. '()+' → logprob: -17.311969757080078
    6. ' ' → logprob: -18.061969757080078
    7. ')+' → logprob: -18.186969757080078
    8. '＋' → logprob: -18.186969757080078
    9. '+
' → logprob: -18.811969757080078
    10. ' )' → logprob: -20.436969757080078

Token 991: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.50002098083496
    4. '2' → logprob: -22.75002098083496
    5. '```' → logprob: -23.75002098083496
    6. '0' → logprob: -24.25002098083496
    7. ')' → logprob: -24.25002098083496
    8. '+' → logprob: -24.37502098083496
    9. '１' → logprob: -24.37502098083496
    10. '  ' → logprob: -24.37502098083496

Token 992: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '   ' → logprob: -23.0
    4. '```' → logprob: -23.5
    5. '0' → logprob: -25.875
    6. '+' → logprob: -26.0
    7. '１' → logprob: -26.25
    8. ')' → logprob: -26.375
    9. '
' → logprob: -26.375
    10. '=' → logprob: -26.625

Token 993: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. ' )' → logprob: -12.250008583068848
    3. ')
' → logprob: -12.500008583068848
    4. '```' → logprob: -15.500008583068848
    5. '`)' → logprob: -16.250009536743164
    6. '))' → logprob: -16.875009536743164
    7. ')`' → logprob: -17.250009536743164
    8. '）' → logprob: -17.375009536743164
    9. '')' → logprob: -17.750009536743164
    10. '")' → logprob: -18.250009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 991
Tokens correctement prédits (1ère position, stricte): 280
Tokens correctement prédits (1ère position, avec adaptation): 299
Tokens correctement prédits (top 10): 643
Précision stricte (1ère position): 28.25%
Précision adaptée (1ère position): 30.17%
Précision (top 10): 64.88%
================================================================================
