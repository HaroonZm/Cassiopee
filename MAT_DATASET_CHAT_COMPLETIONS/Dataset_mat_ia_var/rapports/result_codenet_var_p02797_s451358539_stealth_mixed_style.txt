================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, K, S = [int(x) for x in input().split()]
res = []
for idx in range(K): res += [S]
def alt_val(s): return 2 if s == 1 else (3 if s == 2 else s-1)
j = 0
while j < N-K:
    res.insert(len(res), alt_val(S))
    j += 1
output = ''
for elem in res:
    output += str(elem) + ' '
print(output.strip())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' K' (ID: 658)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04897349700331688
    2. ' =' → logprob: -3.173973560333252
    3. ',' → logprob: -5.173973560333252
    4. ')' → logprob: -9.048973083496094
    5. '.' → logprob: -9.798973083496094
    6. ';' → logprob: -10.548973083496094
    7. '+' → logprob: -10.798973083496094
    8. '```' → logprob: -11.173973083496094
    9. '=int' → logprob: -11.298973083496094
    10. '#' → logprob: -11.548973083496094

Token 4: ' S' (ID: 336)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08110950142145157
    2. ' =' → logprob: -2.5811095237731934
    3. ',' → logprob: -6.206109523773193
    4. ')' → logprob: -9.081109046936035
    5. '.' → logprob: -10.581109046936035
    6. ';' → logprob: -10.956109046936035
    7. ' ' → logprob: -11.706109046936035
    8. '=int' → logprob: -11.706109046936035
    9. '=input' → logprob: -11.831109046936035
    10. '_' → logprob: -12.581109046936035

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007504525128751993
    2. ' =' → logprob: -5.257504463195801
    3. ',' → logprob: -6.507504463195801
    4. '+' → logprob: -9.0075044631958
    5. '```' → logprob: -9.0075044631958
    6. '_' → logprob: -9.1325044631958
    7. '.' → logprob: -9.1325044631958
    8. ')' → logprob: -9.2575044631958
    9. '[' → logprob: -9.8825044631958
    10. '*' → logprob: -10.2575044631958

Token 6: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.18563202023506165
    2. 'map' → logprob: -1.8106319904327393
    3. ' input' → logprob: -5.685632228851318
    4. 'input' → logprob: -6.435632228851318
    5. ' list' → logprob: -7.560632228851318
    6. 'list' → logprob: -8.68563175201416
    7. ' ' → logprob: -9.43563175201416
    8. '0' → logprob: -10.18563175201416
    9. ' [' → logprob: -10.31063175201416
    10. '10' → logprob: -11.68563175201416

Token 7: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.016324905678629875
    2. '0' → logprob: -5.016324996948242
    3. ']' → logprob: -5.391324996948242
    4. 'map' → logprob: -5.641324996948242
    5. ']int' → logprob: -7.141324996948242
    6. ' int' → logprob: -8.141324996948242
    7. 'N' → logprob: -9.641324996948242
    8. '1' → logprob: -9.766324996948242
    9. ' ]' → logprob: -10.016324996948242
    10. '[]' → logprob: -10.016324996948242

Token 8: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16422854363918304
    2. '(i' → logprob: -1.9142285585403442
    3. ']' → logprob: -6.164228439331055
    4. '(' → logprob: -6.914228439331055
    5. '()]' → logprob: -7.539228439331055
    6. '(s' → logprob: -9.289228439331055
    7. '(input' → logprob: -9.789228439331055
    8. '(token' → logprob: -9.789228439331055
    9. '(a' → logprob: -10.039228439331055
    10. '(item' → logprob: -10.664228439331055

Token 9: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002601438027340919
    2. ')]' → logprob: -9.000260353088379
    3. '(x' → logprob: -10.250260353088379
    4. ')i' → logprob: -11.125260353088379
    5. '(i' → logprob: -11.750260353088379
    6. ')c' → logprob: -11.750260353088379
    7. '(' → logprob: -12.000260353088379
    8. ')x' → logprob: -12.125260353088379
    9. '(token' → logprob: -12.125260353088379
    10. 'token' → logprob: -12.250260353088379

Token 10: ' for' (ID: 395)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6782834529876709
    2. '(input' → logprob: -0.9282834529876709
    3. ')' → logprob: -3.428283452987671
    4. 'for' → logprob: -3.678283452987671
    5. ' for' → logprob: -4.30328369140625
    6. ' input' → logprob: -4.55328369140625
    7. '(' → logprob: -4.80328369140625
    8. ']' → logprob: -6.17828369140625
    9. '(x' → logprob: -6.42828369140625
    10. '(line' → logprob: -6.92828369140625

Token 11: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10028387606143951
    2. 'input' → logprob: -2.3502838611602783
    3. '(input' → logprob: -10.1002836227417
    4. ' in' → logprob: -11.2252836227417
    5. ' ' → logprob: -12.1002836227417
    6. '=input' → logprob: -12.1002836227417
    7. ' range' → logprob: -12.8502836227417
    8. ' raw' → logprob: -13.1002836227417
    9. '<|end|>' → logprob: -13.8502836227417
    10. 'in' → logprob: -14.1002836227417

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2813056707382202
    2. 'in' → logprob: -1.4063056707382202
    3. 'input' → logprob: -9.531305313110352
    4. '<|end|>' → logprob: -9.906305313110352
    5. ' ' → logprob: -11.656305313110352
    6. '<|end|>' → logprob: -12.031305313110352
    7. ' input' → logprob: -12.531305313110352
    8. '=input' → logprob: -12.656305313110352
    9. '.readline' → logprob: -13.031305313110352
    10. '(input' → logprob: -14.093805313110352

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759397745132446
    2. ' input' → logprob: -0.8259397745132446
    3. '(input' → logprob: -16.200939178466797
    4. ' ' → logprob: -16.700939178466797
    5. '<input' → logprob: -16.825939178466797
    6. '=input' → logprob: -16.825939178466797
    7. '```' → logprob: -16.950939178466797
    8. 'range' → logprob: -17.325939178466797
    9. ' range' → logprob: -17.950939178466797
    10. '	input' → logprob: -18.075939178466797

Token 14: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.03907609358429909
    2. '()' → logprob: -3.289076089859009
    3. '()][' → logprob: -8.28907585144043
    4. '(' → logprob: -8.41407585144043
    5. '().' → logprob: -8.66407585144043
    6. '()].' → logprob: -9.16407585144043
    7. '()>' → logprob: -9.53907585144043
    8. ']()' → logprob: -9.78907585144043
    9. ']' → logprob: -10.03907585144043
    10. '()],' → logprob: -10.41407585144043

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003715662460308522
    2. 'strip' → logprob: -8.000371932983398
    3. 'rstrip' → logprob: -10.250371932983398
    4. ' split' → logprob: -14.375371932983398
    5. 'spl' → logprob: -16.2503719329834
    6. '(split' → logprob: -16.3753719329834
    7. 'read' → logprob: -18.0003719329834
    8. 'replace' → logprob: -18.3753719329834
    9. '```' → logprob: -19.2503719329834
    10. '.split' → logprob: -20.3753719329834

Token 16: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.012169835157692432
    2. '())' → logprob: -5.01216983795166
    3. '(' → logprob: -5.88716983795166
    4. '()' → logprob: -6.13716983795166
    5. ')]' → logprob: -8.01216983795166
    6. ']' → logprob: -9.38716983795166
    7. '()][' → logprob: -10.63716983795166
    8. '('' → logprob: -11.38716983795166
    9. ']()' → logprob: -11.63716983795166
    10. ')' → logprob: -11.88716983795166

Token 17: 'res' (ID: 430)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.248320460319519
    2. '#' → logprob: -1.998320460319519
    3. '\n' → logprob: -2.1233205795288086
    4. '
' → logprob: -2.6233205795288086
    5. 'if' → logprob: -2.7483205795288086
    6. ',' → logprob: -2.8733205795288086
    7. '`' → logprob: -2.9983205795288086
    8. '```' → logprob: -3.2483205795288086
    9. 'a' → logprob: -3.4983205795288086
    10. 'for' → logprob: -3.7483205795288086

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.593865156173706
    2. ' =' → logprob: -0.968865156173706
    3. 'u' → logprob: -3.093865156173706
    4. '.' → logprob: -4.968865394592285
    5. 'ult' → logprob: -4.968865394592285
    6. 'ul' → logprob: -6.343865394592285
    7. '[' → logprob: -6.343865394592285
    8. '_' → logprob: -6.343865394592285
    9. 'ults' → logprob: -6.593865394592285
    10. 't' → logprob: -7.343865394592285

Token 19: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4738466441631317
    2. ' ' → logprob: -1.098846673965454
    3. ' [' → logprob: -4.848846435546875
    4. ' []' → logprob: -4.848846435546875
    5. '[' → logprob: -5.098846435546875
    6. '[]' → logprob: -5.348846435546875
    7. 'S' → logprob: -5.473846435546875
    8. ' S' → logprob: -5.473846435546875
    9. '"' → logprob: -6.348846435546875
    10. ' K' → logprob: -6.848846435546875

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.051406167447566986
    2. ' for' → logprob: -3.051406145095825
    3. '\n' → logprob: -7.176406383514404
    4. ' 
' → logprob: -7.551406383514404
    5. '[' → logprob: -7.926406383514404
    6. '\' → logprob: -8.051405906677246
    7. '```' → logprob: -8.176405906677246
    8. '`' → logprob: -8.301405906677246
    9. ' ' → logprob: -9.426405906677246
    10. '
' → logprob: -9.801405906677246

Token 21: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.664469838142395
    2. ' ' → logprob: -0.789469838142395
    3. ' _' → logprob: -3.9144697189331055
    4. '_' → logprob: -4.5394697189331055
    5. 'i' → logprob: -7.9144697189331055
    6. '  ' → logprob: -8.914469718933105
    7. ' ‌' → logprob: -9.289469718933105
    8. ' ' → logprob: -9.539469718933105
    9. ' x' → logprob: -10.664469718933105
    10. ' ▁' → logprob: -11.414469718933105

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06255854666233063
    2. 'in' → logprob: -2.812558650970459
    3. ' ' → logprob: -7.562558650970459
    4. ',' → logprob: -10.3125581741333
    5. '	in' → logprob: -11.6875581741333
    6. '_' → logprob: -11.9375581741333
    7. '```' → logprob: -12.0625581741333
    8. '  ' → logprob: -13.0625581741333
    9. 'i' → logprob: -13.5000581741333
    10. ')' → logprob: -13.6250581741333

Token 23: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25193843245506287
    2. 'range' → logprob: -1.5019384622573853
    3. '(range' → logprob: -12.001938819885254
    4. '	range' → logprob: -13.376938819885254
    5. 'rang' → logprob: -14.876938819885254
    6. ' ' → logprob: -15.001938819885254
    7. 'Range' → logprob: -15.251938819885254
    8. '.range' → logprob: -15.376938819885254
    9. '_range' → logprob: -15.876938819885254
    10. ' xrange' → logprob: -16.501937866210938

Token 24: '(K' (ID: 28797)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2118300050497055
    2. '(N' → logprob: -1.7118300199508667
    3. '(K' → logprob: -4.586830139160156
    4. '(S' → logprob: -9.586830139160156
    5. ' (' → logprob: -9.961830139160156
    6. '(n' → logprob: -10.336830139160156
    7. '(len' → logprob: -11.211830139160156
    8. '(s' → logprob: -11.836830139160156
    9. '(
' → logprob: -13.211830139160156
    10. '()' → logprob: -14.336830139160156

Token 25: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026458442211151123
    2. ' ):' → logprob: -3.776458501815796
    3. '+' → logprob: -6.401458263397217
    4. ')' → logprob: -6.776458263397217
    5. ',' → logprob: -8.276458740234375
    6. ' )' → logprob: -9.901458740234375
    7. ' +' → logprob: -10.276458740234375
    8. '):
' → logprob: -10.401458740234375
    9. ' ' → logprob: -11.526458740234375
    10. '**' → logprob: -11.901458740234375

Token 26: ' res' (ID: 694)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4428103566169739
    2. ' res' → logprob: -1.567810297012329
    3. ' 
' → logprob: -2.442810297012329
    4. 'res' → logprob: -4.067810535430908
    5. '     
' → logprob: -4.317810535430908
    6. '<|end|>' → logprob: -4.817810535430908
    7. '    
' → logprob: -5.692810535430908
    8. ''' → logprob: -5.692810535430908
    9. '    ' → logprob: -5.692810535430908
    10. ' S' → logprob: -5.942810535430908

Token 27: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.054985422641038895
    2. '.' → logprob: -2.929985523223877
    3. '.app' → logprob: -10.304985046386719
    4. '.extend' → logprob: -10.429985046386719
    5. '.add' → logprob: -11.679985046386719
    6. '.push' → logprob: -11.804985046386719
    7. 'append' → logprob: -11.804985046386719
    8. '.ap' → logprob: -12.429985046386719
    9. ' .' → logprob: -12.679985046386719
    10. '_append' → logprob: -13.429985046386719

Token 28: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3451175093650818
    2. '[' → logprob: -1.7201175689697266
    3. '[S' → logprob: -2.9701175689697266
    4. '[int' → logprob: -4.095117568969727
    5. '[str' → logprob: -4.720117568969727
    6. '[s' → logprob: -4.845117568969727
    7. '[input' → logprob: -5.220117568969727
    8. '[i' → logprob: -5.470117568969727
    9. '[f' → logprob: -5.720117568969727
    10. '[N' → logprob: -5.720117568969727

Token 29: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0632842481136322
    2. ' S' → logprob: -3.313284158706665
    3. 'int' → logprob: -5.188284397125244
    4. '(S' → logprob: -5.188284397125244
    5. 'str' → logprob: -6.063284397125244
    6. ''S' → logprob: -6.313284397125244
    7. ''' → logprob: -6.563284397125244
    8. '(' → logprob: -6.688284397125244
    9. ' (' → logprob: -6.813284397125244
    10. 'N' → logprob: -7.188284397125244

Token 30: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5011919140815735
    2. '+' → logprob: -1.3761918544769287
    3. ' +' → logprob: -2.7511918544769287
    4. '-' → logprob: -3.5011918544769287
    5. ' ]' → logprob: -4.001192092895508
    6. ' -' → logprob: -4.126192092895508
    7. '%' → logprob: -6.001192092895508
    8. ')]' → logprob: -6.126192092895508
    9. '+]' → logprob: -6.126192092895508
    10. '*' → logprob: -7.126192092895508

Token 31: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28946858644485474
    2. '<|end|>' → logprob: -1.91446852684021
    3. '+' → logprob: -2.41446852684021
    4. ')' → logprob: -4.789468765258789
    5. ' +' → logprob: -6.414468765258789
    6. ' )' → logprob: -6.664468765258789
    7. '<|end|>' → logprob: -7.414468765258789
    8. '[' → logprob: -7.414468765258789
    9. ' 
' → logprob: -8.164468765258789
    10. ',' → logprob: -8.289468765258789

Token 32: ' alt' (ID: 5001)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0734967365860939
    2. '_' → logprob: -3.3234968185424805
    3. ' f' → logprob: -4.8234968185424805
    4. ' max' → logprob: -4.8234968185424805
    5. ' calculate' → logprob: -5.6984968185424805
    6. ' res' → logprob: -6.3234968185424805
    7. ' find' → logprob: -6.4484968185424805
    8. ' space' → logprob: -6.6984968185424805
    9. ' main' → logprob: -6.9484968185424805
    10. ' sum' → logprob: -7.1984968185424805

Token 33: '_val' (ID: 13694)
  Prédit: 'ernate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ernate' → logprob: -0.24555152654647827
    2. 'er' → logprob: -1.745551586151123
    3. '_' → logprob: -4.370551586151123
    4. 'ern' → logprob: -4.495551586151123
    5. '(' → logprob: -5.495551586151123
    6. '(S' → logprob: -6.495551586151123
    7. 'erna' → logprob: -6.995551586151123
    8. '(n' → logprob: -7.245551586151123
    9. 'erat' → logprob: -7.370551586151123
    10. '_list' → logprob: -7.495551586151123

Token 34: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1000971794128418
    2. '(i' → logprob: -1.1000971794128418
    3. '(idx' → logprob: -1.9750971794128418
    4. '(id' → logprob: -2.850097179412842
    5. '(x' → logprob: -2.975097179412842
    6. '(n' → logprob: -3.100097179412842
    7. '(index' → logprob: -4.600097179412842
    8. '(u' → logprob: -4.850097179412842
    9. '(s' → logprob: -5.475097179412842
    10. '(val' → logprob: -5.725097179412842

Token 35: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022548044100403786
    2. ',' → logprob: -4.272548198699951
    3. ')' → logprob: -4.897548198699951
    4. 'e' → logprob: -8.272547721862793
    5. '):
' → logprob: -9.147547721862793
    6. ')]' → logprob: -9.897547721862793
    7. 't' → logprob: -10.022547721862793
    8. 'ex' → logprob: -10.022547721862793
    9. '=' → logprob: -10.522547721862793
    10. ' ):' → logprob: -10.522547721862793

Token 36: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.236331045627594
    2. ' ' → logprob: -2.986330986022949
    3. ' 
' → logprob: -3.111330986022949
    4. '<|end|>' → logprob: -3.361330986022949
    5. ' return' → logprob: -3.986330986022949
    6. '    ' → logprob: -4.486330986022949
    7. '    
' → logprob: -4.861330986022949
    8. 's' → logprob: -4.986330986022949
    9. '(s' → logprob: -5.486330986022949
    10. ' if' → logprob: -5.611330986022949

Token 37: ' ' (ID: 220)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.4376397132873535
    2. 's' → logprob: -1.4376397132873535
    3. ' s' → logprob: -2.0626397132873535
    4. ' S' → logprob: -2.1876397132873535
    5. ' (' → logprob: -2.4376397132873535
    6. '(s' → logprob: -2.9376397132873535
    7. '(S' → logprob: -3.3126397132873535
    8. 'abs' → logprob: -3.5626397132873535
    9. '1' → logprob: -3.6876397132873535
    10. '0' → logprob: -4.6876397132873535

Token 38: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8700100183486938
    2. 'S' → logprob: -1.3700100183486938
    3. 'abs' → logprob: -2.6200098991394043
    4. '(S' → logprob: -2.6200098991394043
    5. '(s' → logprob: -2.6200098991394043
    6. '(' → logprob: -3.4950098991394043
    7. '1' → logprob: -3.7450098991394043
    8. '0' → logprob: -4.995009899139404
    9. 'K' → logprob: -5.120009899139404
    10. '(abs' → logprob: -5.120009899139404

Token 39: ' if' (ID: 538)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9151752591133118
    2. '*' → logprob: -1.040175199508667
    3. ' ' → logprob: -2.540175199508667
    4. ' if' → logprob: -3.165175199508667
    5. 's' → logprob: -3.915175199508667
    6. '+' → logprob: -4.415175437927246
    7. ' s' → logprob: -4.540175437927246
    8. ' **' → logprob: -4.665175437927246
    9. '*s' → logprob: -4.665175437927246
    10. '*(' → logprob: -4.790175437927246

Token 40: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.007644133176654577
    2. 's' → logprob: -4.882644176483154
    3. ' not' → logprob: -10.882643699645996
    4. ' ' → logprob: -11.882643699645996
    5. ' (' → logprob: -12.632643699645996
    6. '(s' → logprob: -12.882643699645996
    7. '(' → logprob: -13.632643699645996
    8. ' isinstance' → logprob: -13.882643699645996
    9. ' ' → logprob: -13.882643699645996
    10. ' len' → logprob: -14.257643699645996

Token 41: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.30724796652793884
    2. '==' → logprob: -1.5572479963302612
    3. ' ' → logprob: -3.4322478771209717
    4. '%' → logprob: -4.807248115539551
    5. ' %' → logprob: -4.932248115539551
    6. ' !=' → logprob: -6.557248115539551
    7. ' >' → logprob: -6.682248115539551
    8. ' <' → logprob: -6.807248115539551
    9. '>' → logprob: -7.182248115539551
    10. '!=' → logprob: -8.18224811553955

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09231057018041611
    2. '1' → logprob: -2.467310667037964
    3. '0' → logprob: -5.967310428619385
    4. ' S' → logprob: -8.217310905456543
    5. 'S' → logprob: -8.217310905456543
    6. '3' → logprob: -9.717310905456543
    7. '2' → logprob: -10.092310905456543
    8. '5' → logprob: -10.717310905456543
    9. ' ' → logprob: -11.154810905456543
    10. '4' → logprob: -11.217310905456543

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.062088239938020706
    2. ' ' → logprob: -3.1870882511138916
    3. '0' → logprob: -4.4370880126953125
    4. 'S' → logprob: -5.0620880126953125
    5. ' S' → logprob: -8.187088012695312
    6. '3' → logprob: -8.562088012695312
    7. '5' → logprob: -9.562088012695312
    8. '2' → logprob: -9.687088012695312
    9. ''S' → logprob: -10.937088012695312
    10. '  ' → logprob: -11.062088012695312

Token 44: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06221930682659149
    2. 'else' → logprob: -2.8122193813323975
    3. '1' → logprob: -9.687219619750977
    4. '0' → logprob: -9.812219619750977
    5. ' ' → logprob: -10.062219619750977
    6. '3' → logprob: -10.312219619750977
    7. '2' → logprob: -10.937219619750977
    8. ' ' → logprob: -11.437219619750977
    9. '6' → logprob: -11.687219619750977
    10. '4' → logprob: -11.937219619750977

Token 45: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02986353263258934
    2. ' ' → logprob: -3.5298635959625244
    3. '0' → logprob: -9.154863357543945
    4. 's' → logprob: -13.342363357543945
    5. '(' → logprob: -13.654863357543945
    6. ' s' → logprob: -14.217363357543945
    7. '  ' → logprob: -14.217363357543945
    8. ' (' → logprob: -14.654863357543945
    9. '3' → logprob: -14.967363357543945
    10. '2' → logprob: -15.217363357543945

Token 46: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011613230220973492
    2. ' ' → logprob: -4.636613368988037
    3. '0' → logprob: -6.386613368988037
    4. 's' → logprob: -9.636612892150879
    5. '3' → logprob: -10.261612892150879
    6. '(' → logprob: -10.824112892150879
    7. '2' → logprob: -11.324112892150879
    8. '-' → logprob: -12.011612892150879
    9. ' (' → logprob: -12.074112892150879
    10. ' s' → logprob: -12.199112892150879

Token 47: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0059161195531487465
    2. ' -' → logprob: -5.255916118621826
    3. 'if' → logprob: -7.505916118621826
    4. ')' → logprob: -10.005916595458984
    5. '-' → logprob: -10.255916595458984
    6. ' ' → logprob: -11.130916595458984
    7. '2' → logprob: -11.255916595458984
    8. '  ' → logprob: -12.130916595458984
    9. ' )' → logprob: -12.505916595458984
    10. '4' → logprob: -13.005916595458984

Token 48: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.22551564872264862
    2. 's' → logprob: -1.600515604019165
    3. '2' → logprob: -9.600515365600586
    4. ' ' → logprob: -10.725515365600586
    5. '1' → logprob: -11.850515365600586
    6. ' ' → logprob: -13.600515365600586
    7. '0' → logprob: -13.850515365600586
    8. '    ' → logprob: -14.350515365600586
    9. '  ' → logprob: -14.725515365600586
    10. '(s' → logprob: -14.850515365600586

Token 49: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28119030594825745
    2. '==' → logprob: -1.406190276145935
    3. ' ' → logprob: -10.406189918518066
    4. ' in' → logprob: -13.781189918518066
    5. ' <=' → logprob: -13.781189918518066
    6. ' !=' → logprob: -14.031189918518066
    7. '===' → logprob: -14.281189918518066
    8. '<=' → logprob: -14.468689918518066
    9. ' ' → logprob: -14.468689918518066
    10. '=' → logprob: -14.531189918518066

Token 50: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42918017506599426
    2. ' ' → logprob: -1.0541801452636719
    3. '0' → logprob: -8.179180145263672
    4. '3' → logprob: -8.804180145263672
    5. '1' → logprob: -11.054180145263672
    6. 'S' → logprob: -12.116680145263672
    7. '4' → logprob: -12.429180145263672
    8. 's' → logprob: -12.491680145263672
    9. '  ' → logprob: -13.054180145263672
    10. '5' → logprob: -13.241680145263672

Token 51: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004760122857987881
    2. ' ' → logprob: -5.879760265350342
    3. '0' → logprob: -6.504760265350342
    4. '3' → logprob: -7.879760265350342
    5. 'S' → logprob: -11.067259788513184
    6. '1' → logprob: -11.254759788513184
    7. 's' → logprob: -11.817259788513184
    8. '-' → logprob: -12.192259788513184
    9. '  ' → logprob: -12.317259788513184
    10. 'N' → logprob: -12.379759788513184

Token 52: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.007647564169019461
    2. 'else' → logprob: -4.882647514343262
    3. ' ' → logprob: -10.632647514343262
    4. '==' → logprob: -11.382647514343262
    5. '	else' → logprob: -13.132647514343262
    6. ' ==' → logprob: -13.882647514343262
    7. ')' → logprob: -14.257647514343262
    8. '  ' → logprob: -14.632647514343262
    9. '```' → logprob: -14.757647514343262
    10. ' or' → logprob: -15.132647514343262

Token 53: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.223150834441185
    2. '1' → logprob: -1.7231508493423462
    3. '4' → logprob: -4.473150730133057
    4. '0' → logprob: -5.473150730133057
    5. 's' → logprob: -5.973150730133057
    6. ' s' → logprob: -6.723150730133057
    7. 'S' → logprob: -7.973150730133057
    8. ' (' → logprob: -8.098151206970215
    9. ' S' → logprob: -8.223151206970215
    10. '5' → logprob: -8.473151206970215

Token 54: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023308953270316124
    2. '+' → logprob: -4.148308753967285
    3. ' )' → logprob: -5.648308753967285
    4. ' +' → logprob: -6.398308753967285
    5. '-' → logprob: -6.648308753967285
    6. ' -' → logprob: -7.773308753967285
    7. '))' → logprob: -9.023308753967285
    8. ' ' → logprob: -10.523308753967285
    9. ')))' → logprob: -10.523308753967285
    10. ')
' → logprob: -11.023308753967285

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007757577113807201
    2. ' ' → logprob: -4.882757663726807
    3. '2' → logprob: -9.257757186889648
    4. '3' → logprob: -11.007757186889648
    5. '<|end|>' → logprob: -11.007757186889648
    6. '+' → logprob: -12.382757186889648
    7. '<|end|>' → logprob: -12.757757186889648
    8. '4' → logprob: -12.945257186889648
    9. '-' → logprob: -13.070257186889648
    10. ')' → logprob: -13.695257186889648

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010211274639004841
    2. '))' → logprob: -9.375102043151855
    3. ')))' → logprob: -11.750102043151855
    4. ' )' → logprob: -12.000102043151855
    5. ')
' → logprob: -14.250102043151855
    6. ')}}' → logprob: -15.125102043151855
    7. ')}' → logprob: -15.250102043151855
    8. 'def' → logprob: -15.375102043151855
    9. ')])' → logprob: -15.500102043151855
    10. ')`' → logprob: -15.625102043151855

Token 57: 'j' (ID: 73)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45580118894577026
    2. ' for' → logprob: -2.080801248550415
    3. 'res' → logprob: -2.330801248550415
    4. ' res' → logprob: -3.830801248550415
    5. '[' → logprob: -4.080801010131836
    6. 's' → logprob: -4.330801010131836
    7. 'if' → logprob: -4.455801010131836
    8. '<|end|>' → logprob: -4.580801010131836
    9. 'print' → logprob: -4.830801010131836
    10. 'i' → logprob: -5.455801010131836

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7209222316741943
    2. ' =' → logprob: -1.5959222316741943
    3. 'for' → logprob: -2.4709222316741943
    4. 'dx' → logprob: -2.5959222316741943
    5. 'j' → logprob: -2.9709222316741943
    6. 'i' → logprob: -3.8459222316741943
    7. 'idx' → logprob: -4.470922470092773
    8. ' for' → logprob: -4.595922470092773
    9. 'f' → logprob: -4.720922470092773
    10. 'inja' → logprob: -4.970922470092773

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10209780186414719
    2. ' ' → logprob: -2.352097749710083
    3. 'K' → logprob: -7.352097988128662
    4. '1' → logprob: -7.352097988128662
    5. ' K' → logprob: -7.852097988128662
    6. 'S' → logprob: -9.602097511291504
    7. ' S' → logprob: -10.102097511291504
    8. '2' → logprob: -10.727097511291504
    9. ' -' → logprob: -10.727097511291504
    10. 'N' → logprob: -11.477097511291504

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02622377872467041
    2. '1' → logprob: -4.526223659515381
    3. 'K' → logprob: -4.651223659515381
    4. 'S' → logprob: -6.151223659515381
    5. 'N' → logprob: -6.776223659515381
    6. '-' → logprob: -7.526223659515381
    7. '2' → logprob: -7.651223659515381
    8. 'len' → logprob: -8.276224136352539
    9. ' ' → logprob: -8.526224136352539
    10. 'res' → logprob: -8.651224136352539

Token 61: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7160099744796753
    2. '<|end|>' → logprob: -0.9660099744796753
    3. 'while' → logprob: -2.466010093688965
    4. ' while' → logprob: -3.216010093688965
    5. 'for' → logprob: -6.216010093688965
    6. ' 
' → logprob: -6.341010093688965
    7. '<|end|>' → logprob: -6.966010093688965
    8. ' for' → logprob: -8.091010093688965
    9. '\n' → logprob: -8.841010093688965
    10. '```' → logprob: -9.591010093688965

Token 62: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06390553712844849
    2. ' while' → logprob: -3.3139054775238037
    3. 'for' → logprob: -3.8139054775238037
    4. '<|end|>' → logprob: -6.063905715942383
    5. '```' → logprob: -7.563905715942383
    6. ' for' → logprob: -8.438905715942383
    7. '
' → logprob: -9.063905715942383
    8. ' 
' → logprob: -9.438905715942383
    9. ':' → logprob: -10.813905715942383
    10. 'While' → logprob: -10.938905715942383

Token 63: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.04895680397748947
    2. 'j' → logprob: -3.048956871032715
    3. ' ' → logprob: -9.173956871032715
    4. ' True' → logprob: -9.173956871032715
    5. 'True' → logprob: -9.923956871032715
    6. ' len' → logprob: -10.423956871032715
    7. ' K' → logprob: -11.298956871032715
    8. ' N' → logprob: -11.673956871032715
    9. 'K' → logprob: -12.048956871032715
    10. ' res' → logprob: -12.173956871032715

Token 64: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.048775624483823776
    2. '<' → logprob: -3.0487756729125977
    3. ' ' → logprob: -9.173775672912598
    4. ' <=' → logprob: -9.673775672912598
    5. '<K' → logprob: -11.673775672912598
    6. '<len' → logprob: -12.298775672912598
    7. '<=' → logprob: -13.048775672912598
    8. '<N' → logprob: -13.173775672912598
    9. ' !=' → logprob: -13.923775672912598
    10. '+' → logprob: -13.923775672912598

Token 65: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6247825026512146
    2. 'K' → logprob: -0.9997825026512146
    3. 'len' → logprob: -2.4997825622558594
    4. ' K' → logprob: -5.249782562255859
    5. ' N' → logprob: -5.374782562255859
    6. ' len' → logprob: -5.624782562255859
    7. ' ' → logprob: -7.624782562255859
    8. 'NK' → logprob: -9.12478256225586
    9. '(' → logprob: -9.37478256225586
    10. '2' → logprob: -9.74978256225586

Token 66: '-K' (ID: 12249)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07464651018381119
    2. ' and' → logprob: -2.949646472930908
    3. ':
' → logprob: -4.199646472930908
    4. 'and' → logprob: -5.699646472930908
    5. ' :' → logprob: -7.074646472930908
    6. ' :
' → logprob: -8.324646949768066
    7. '-' → logprob: -9.449646949768066
    8. '*' → logprob: -11.199646949768066
    9. ' -' → logprob: -11.824646949768066
    10. '+' → logprob: -12.074646949768066

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08264405280351639
    2. ':
' → logprob: -2.832643985748291
    3. '+' → logprob: -4.332643985748291
    4. ' :' → logprob: -5.582643985748291
    5. ' :
' → logprob: -6.082643985748291
    6. ' and' → logprob: -6.957643985748291
    7. ' +' → logprob: -9.70764446258545
    8. 'and' → logprob: -9.83264446258545
    9. '+:' → logprob: -9.83264446258545
    10. ':
' → logprob: -10.58264446258545

Token 68: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23190748691558838
    2. ' res' → logprob: -1.9819074869155884
    3. '   ' → logprob: -3.356907367706299
    4. ' s' → logprob: -3.731907367706299
    5. ' val' → logprob: -5.856907367706299
    6. 'res' → logprob: -6.231907367706299
    7. 'if' → logprob: -6.481907367706299
    8. ' v' → logprob: -7.606907367706299
    9. ' for' → logprob: -8.231907844543457
    10. ' ' → logprob: -8.481907844543457

Token 69: ' res' (ID: 694)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0064210891723633
    2. 'if' → logprob: -1.1314210891723633
    3. ' res' → logprob: -2.0064210891723633
    4. 'res' (adapté à ' res') → logprob: -2.7564210891723633
    5. '   ' → logprob: -3.1314210891723633
    6. ' val' → logprob: -3.6314210891723633
    7. 'val' → logprob: -4.881421089172363
    8. ' s' → logprob: -5.006421089172363
    9. 'v' → logprob: -5.506421089172363
    10. 's' → logprob: -5.631421089172363

Token 70: '.insert' (ID: 13222)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.08039981126785278
    2. '[j' → logprob: -2.705399751663208
    3. '[-' → logprob: -4.830399990081787
    4. '+=' → logprob: -6.705399990081787
    5. '+' → logprob: -7.080399990081787
    6. ' +=' → logprob: -8.580399513244629
    7. '.' → logprob: -9.455399513244629
    8. '[' → logprob: -10.830399513244629
    9. '.extend' → logprob: -11.205399513244629
    10. 'append' → logprob: -11.205399513244629

Token 71: '(len' (ID: 14990)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.08117391169071198
    2. '(-' → logprob: -2.706173896789551
    3. '(' → logprob: -5.081173896789551
    4. 'j' → logprob: -5.956173896789551
    5. '(len' → logprob: -6.331173896789551
    6. '(K' → logprob: -7.956173896789551
    7. '(N' → logprob: -9.58117389678955
    8. '(k' → logprob: -10.45617389678955
    9. '-j' → logprob: -10.95617389678955
    10. '(
' → logprob: -11.08117389678955

Token 72: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00011605957115534693
    2. '(' → logprob: -9.375116348266602
    3. 'res' → logprob: -11.000116348266602
    4. ')' → logprob: -12.000116348266602
    5. '(s' → logprob: -13.500116348266602
    6. ' (' → logprob: -13.750116348266602
    7. ' res' → logprob: -13.875116348266602
    8. '(S' → logprob: -13.875116348266602
    9. '-' → logprob: -14.000116348266602
    10. '	res' → logprob: -14.125116348266602

Token 73: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.2206573486328125
    2. ')' → logprob: -1.3456573486328125
    3. ')-' → logprob: -1.3456573486328125
    4. '[j' → logprob: -1.8456573486328125
    5. '[-' → logprob: -4.2206573486328125
    6. '[' → logprob: -5.2206573486328125
    7. '))' → logprob: -6.2206573486328125
    8. '-' → logprob: -6.4706573486328125
    9. ' )' → logprob: -7.8456573486328125
    10. ' ),' → logprob: -7.9706573486328125

Token 74: ' alt' (ID: 5001)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.5455642938613892
    2. '[' → logprob: -1.6705642938613892
    3. 'res' → logprob: -2.2955641746520996
    4. ' alt' → logprob: -2.5455641746520996
    5. ' [' → logprob: -3.6705641746520996
    6. ' res' → logprob: -4.5455641746521
    7. '[S' → logprob: -5.2955641746521
    8. 'S' → logprob: -5.6705641746521
    9. ')' → logprob: -6.1705641746521
    10. ' S' → logprob: -6.5455641746521

Token 75: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -9.729906196298543e-06
    2. '_' → logprob: -11.625009536743164
    3. ' _' → logprob: -15.750009536743164
    4. '_va' → logprob: -16.250009536743164
    5. '_vals' → logprob: -16.375009536743164
    6. '_res' → logprob: -16.375009536743164
    7. 'val' → logprob: -16.625009536743164
    8. 'al' → logprob: -16.875009536743164
    9. '__' → logprob: -16.875009536743164
    10. ')_' → logprob: -17.750009536743164

Token 76: '(S' (ID: 6181)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.058066368103027344
    2. '(' → logprob: -2.9330663681030273
    3. '(S' → logprob: -5.808066368103027
    4. '(s' → logprob: -9.058066368103027
    5. ' (' → logprob: -10.433066368103027
    6. '(
' → logprob: -11.433066368103027
    7. 'res' → logprob: -11.558066368103027
    8. ')' → logprob: -12.308066368103027
    9. '(

' → logprob: -13.058066368103027
    10. ' res' → logprob: -14.183066368103027

Token 77: '))
' (ID: 2210)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.2897029221057892
    2. '))' → logprob: -1.7897028923034668
    3. '[' → logprob: -2.539702892303467
    4. ')' → logprob: -5.289702892303467
    5. 'res' → logprob: -8.414703369140625
    6. '))
' → logprob: -9.664703369140625
    7. '   ' → logprob: -10.039703369140625
    8. ')))' → logprob: -10.039703369140625
    9. ' ))' → logprob: -10.414703369140625
    10. 'j' → logprob: -10.789703369140625

Token 78: '   ' (ID: 271)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.5007508993148804
    2. ' 
' → logprob: -1.7507508993148804
    3. ' j' → logprob: -1.7507508993148804
    4. '+' → logprob: -2.25075101852417
    5. ' ' → logprob: -2.62575101852417
    6. ')' → logprob: -2.75075101852417
    7. '  
' → logprob: -3.12575101852417
    8. '<|end|>' → logprob: -3.50075101852417
    9. '```' → logprob: -3.75075101852417
    10. '
' → logprob: -4.00075101852417

Token 79: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.011774640530347824
    2. ' j' → logprob: -4.51177453994751
    3. '   ' → logprob: -7.51177453994751
    4. '	j' → logprob: -9.636775016784668
    5. '    ' → logprob: -10.136775016784668
    6. '_j' → logprob: -10.886775016784668
    7. '```' → logprob: -11.136775016784668
    8. '+' → logprob: -11.261775016784668
    9. '+j' → logprob: -12.136775016784668
    10. '    
' → logprob: -12.261775016784668

Token 80: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06312611699104309
    2. '+' → logprob: -2.9381260871887207
    3. ' +=' → logprob: -4.813126087188721
    4. '=' → logprob: -9.938126564025879
    5. '++' → logprob: -10.563126564025879
    6. ' +' → logprob: -12.313126564025879
    7. '<|end|>' → logprob: -12.563126564025879
    8. '+++' → logprob: -12.813126564025879
    9. '+='' → logprob: -13.688126564025879
    10. '+="' → logprob: -14.563126564025879

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020547140389680862
    2. ' ' → logprob: -3.8955471515655518
    3. '2' → logprob: -12.645546913146973
    4. ' ' → logprob: -14.645546913146973
    5. '3' → logprob: -14.833046913146973
    6. '   ' → logprob: -15.895546913146973
    7. '6' → logprob: -15.895546913146973
    8. '+' → logprob: -15.958046913146973
    9. '```' → logprob: -16.14554786682129
    10. '4' → logprob: -16.20804786682129

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.686778503237292e-05
    2. ' ' → logprob: -9.375097274780273
    3. '2' → logprob: -11.625097274780273
    4. 'S' → logprob: -14.250097274780273
    5. '3' → logprob: -14.375097274780273
    6. '0' → logprob: -14.750097274780273
    7. '```' → logprob: -15.437597274780273
    8. 'K' → logprob: -15.562597274780273
    9. '4' → logprob: -15.625097274780273
    10. 's' → logprob: -15.687597274780273

Token 83: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3894776701927185
    2. '[' → logprob: -1.3894777297973633
    3. '<|end|>' → logprob: -3.1394777297973633
    4. '    ' → logprob: -5.514477729797363
    5. '  ' → logprob: -5.514477729797363
    6. ')' → logprob: -5.889477729797363
    7. '```' → logprob: -6.014477729797363
    8. '   ' → logprob: -6.014477729797363
    9. '(' → logprob: -6.889477729797363
    10. '#' → logprob: -7.139477729797363

Token 84: 'output' (ID: 6130)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06764942407608032
    2. ' ' → logprob: -4.1926493644714355
    3. '[j' → logprob: -4.4426493644714355
    4. '(' → logprob: -4.8176493644714355
    5. '<|end|>' → logprob: -4.9426493644714355
    6. ')' → logprob: -5.3176493644714355
    7. '(S' → logprob: -5.9426493644714355
    8. '[]' → logprob: -6.3176493644714355
    9. '   ' → logprob: -6.4426493644714355
    10. ']' → logprob: -6.4426493644714355

Token 85: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5747864842414856
    2. ' =' → logprob: -1.6997864246368408
    3. 'print' → logprob: -1.9497864246368408
    4. '(' → logprob: -2.699786424636841
    5. '(res' → logprob: -4.19978666305542
    6. 's' → logprob: -4.57478666305542
    7. 'res' → logprob: -5.82478666305542
    8. '[' → logprob: -6.44978666305542
    9. ')' → logprob: -6.44978666305542
    10. '=[]
' → logprob: -6.82478666305542

Token 86: ' ''
' (ID: 25366)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7138805389404297
    2. ' res' → logprob: -0.8388805389404297
    3. ''' → logprob: -3.0888805389404297
    4. '"' → logprob: -3.9638805389404297
    5. ' '' → logprob: -4.83888053894043
    6. '[' → logprob: -6.58888053894043
    7. ' "' → logprob: -6.96388053894043
    8. 'len' → logprob: -7.21388053894043
    9. 'str' → logprob: -7.46388053894043
    10. ' list' → logprob: -7.83888053894043

Token 87: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013267839094623923
    2. ' for' → logprob: -6.626326560974121
    3. 'print' → logprob: -14.876326560974121
    4. '<|end|>' → logprob: -16.251327514648438
    5. '+' → logprob: -16.501327514648438
    6. '
' → logprob: -16.626327514648438
    7. 'output' → logprob: -17.126327514648438
    8. '[' → logprob: -17.126327514648438
    9. '```' → logprob: -17.126327514648438
    10. '0' → logprob: -17.501327514648438

Token 88: ' elem' (ID: 23108)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1788686513900757
    2. ' i' → logprob: -1.4288686513900757
    3. ' val' → logprob: -2.0538687705993652
    4. 'x' → logprob: -2.0538687705993652
    5. 'val' → logprob: -2.9288687705993652
    6. ' x' → logprob: -3.4288687705993652
    7. 'v' → logprob: -3.9288687705993652
    8. ' v' → logprob: -4.553868770599365
    9. ' idx' → logprob: -4.553868770599365
    10. 'idx' → logprob: -4.678868770599365

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007647564169019461
    2. 'in' → logprob: -4.882647514343262
    3. ' ' → logprob: -11.007647514343262
    4. '  ' → logprob: -11.507647514343262
    5. 's' → logprob: -11.882647514343262
    6. '   ' → logprob: -13.757647514343262
    7. '	in' → logprob: -13.757647514343262
    8. 'e' → logprob: -14.257647514343262
    9. '_in' → logprob: -14.507647514343262
    10. 'In' → logprob: -14.570147514343262

Token 90: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.25193241238594055
    2. 'res' → logprob: -1.5019323825836182
    3. '	res' → logprob: -14.501932144165039
    4. ' ' → logprob: -14.751932144165039
    5. ' range' → logprob: -14.876932144165039
    6. '(res' → logprob: -14.876932144165039
    7. ' output' → logprob: -15.001932144165039
    8. 'output' → logprob: -15.126932144165039
    9. 'range' → logprob: -15.251932144165039
    10. '[' → logprob: -15.626932144165039

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01749393343925476
    2. ':
' → logprob: -4.142493724822998
    3. '+' → logprob: -6.892493724822998
    4. 'output' → logprob: -8.267494201660156
    5. '+=' → logprob: -9.767494201660156
    6. '   ' → logprob: -10.017494201660156
    7. ' +=' → logprob: -10.767494201660156
    8. ' output' → logprob: -11.392494201660156
    9. '=' → logprob: -11.642494201660156
    10. '==' → logprob: -11.767494201660156

Token 92: '   ' (ID: 271)
  Prédit: ' output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.024595655500888824
    2. 'output' → logprob: -3.7745957374572754
    3. '   ' → logprob: -6.774595737457275
    4. '	output' → logprob: -8.524595260620117
    5. '_output' → logprob: -13.274595260620117
    6. '.output' → logprob: -13.274595260620117
    7. '<|end|>' → logprob: -13.274595260620117
    8. '```' → logprob: -13.399595260620117
    9. ' ' → logprob: -15.024595260620117
    10. '(output' → logprob: -15.399595260620117

Token 93: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.006747343111783266
    2. ' output' → logprob: -5.006747245788574
    3. '   ' → logprob: -11.006747245788574
    4. '	output' → logprob: -11.131747245788574
    5. '_output' → logprob: -15.506747245788574
    6. '$output' → logprob: -15.756747245788574
    7. '(output' → logprob: -15.881747245788574
    8. '.output' → logprob: -16.13174819946289
    9. '<|end|>' → logprob: -16.63174819946289
    10. '```' → logprob: -16.88174819946289

Token 94: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.127262681722641
    2. ' +=' → logprob: -2.127262592315674
    3. '+="' → logprob: -8.627263069152832
    4. '+='' → logprob: -8.877263069152832
    5. '+' → logprob: -11.752263069152832
    6. '=' → logprob: -12.627263069152832
    7. '+=(' → logprob: -12.877263069152832
    8. ' +' → logprob: -13.627263069152832
    9. ']+=' → logprob: -14.627263069152832
    10. 'output' → logprob: -15.627263069152832

Token 95: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.07222740352153778
    2. ' str' → logprob: -2.6972274780273438
    3. 'f' → logprob: -6.447227478027344
    4. ''' → logprob: -7.947227478027344
    5. ' f' → logprob: -8.072227478027344
    6. '(str' → logprob: -10.697227478027344
    7. '"' → logprob: -12.197227478027344
    8. ' '' → logprob: -12.322227478027344
    9. 'chr' → logprob: -13.322227478027344
    10. '	str' → logprob: -13.572227478027344

Token 96: '(elem' (ID: 61564)
  Prédit: '(elem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(elem' → logprob: -1.1472419600977446e-06
    2. 'elem' → logprob: -14.000000953674316
    3. '(' → logprob: -15.625000953674316
    4. '	elem' → logprob: -16.500001907348633
    5. '(ele' → logprob: -16.750001907348633
    6. '(e' → logprob: -18.625001907348633
    7. ' (' → logprob: -18.750001907348633
    8. '(expr' → logprob: -19.625001907348633
    9. '(element' → logprob: -19.625001907348633
    10. ' elem' → logprob: -20.250001907348633

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05784216523170471
    2. ')+' → logprob: -3.057842254638672
    3. ')+'' → logprob: -4.807842254638672
    4. ' )' → logprob: -7.307842254638672
    5. '+' → logprob: -8.557842254638672
    6. ')+"' → logprob: -8.682842254638672
    7. ' +' → logprob: -12.557842254638672
    8. ')
' → logprob: -12.682842254638672
    9. '+)' → logprob: -13.307842254638672
    10. ')+(' → logprob: -13.682842254638672

Token 98: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3009006381034851
    2. '<|end|>' → logprob: -1.4259006977081299
    3. ' ' → logprob: -4.800900459289551
    4. ' +' → logprob: -5.925900459289551
    5. '[' → logprob: -6.175900459289551
    6. 'print' → logprob: -6.550900459289551
    7. '<|end|>' → logprob: -7.050900459289551
    8. 'output' → logprob: -7.175900459289551
    9. ''' → logprob: -7.300900459289551
    10. '```' → logprob: -7.925900459289551

Token 99: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003522152081131935
    2. '"' → logprob: -6.003521919250488
    3. ' '' → logprob: -6.878521919250488
    4. ' ' → logprob: -11.503521919250488
    5. ' "' → logprob: -12.753521919250488
    6. '<|end|>' → logprob: -13.503521919250488
    7. '  ' → logprob: -14.753521919250488
    8. '`' → logprob: -15.503521919250488
    9. '',' → logprob: -15.628521919250488
    10. ' ' → logprob: -15.753521919250488

Token 100: ' '
' (ID: 17733)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31764593720436096
    2. ' ' → logprob: -1.3176459074020386
    3. ' '' → logprob: -5.567646026611328
    4. '"' → logprob: -8.067646026611328
    5. '<|end|>' → logprob: -9.317646026611328
    6. '  ' → logprob: -10.567646026611328
    7. ')' → logprob: -10.817646026611328
    8. ''s' → logprob: -11.067646026611328
    9. ''S' → logprob: -11.192646026611328
    10. ' )' → logprob: -11.192646026611328

Token 101: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.2729995988775045e-06
    2. ' print' → logprob: -12.375006675720215
    3. 'output' → logprob: -14.250006675720215
    4. '<|end|>' → logprob: -14.875006675720215
    5. '```' → logprob: -14.875006675720215
    6. 'for' → logprob: -15.375006675720215
    7. '#print' → logprob: -16.2500057220459
    8. '-print' → logprob: -16.7500057220459
    9. '`' → logprob: -17.7500057220459
    10. '+' → logprob: -17.8750057220459

Token 102: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.005984378047287464
    2. '(' → logprob: -5.255984306335449
    3. '()' → logprob: -7.255984306335449
    4. ' (' → logprob: -10.88098430633545
    5. 'output' → logprob: -11.38098430633545
    6. '(res' → logprob: -12.50598430633545
    7. '('' → logprob: -13.13098430633545
    8. '(len' → logprob: -13.13098430633545
    9. '(input' → logprob: -13.25598430633545
    10. '(
' → logprob: -13.88098430633545

Token 103: '.strip' (ID: 40613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.822646693966817e-06
    2. '))' → logprob: -12.250007629394531
    3. ' )' → logprob: -13.125007629394531
    4. '')' → logprob: -14.375007629394531
    5. ')`' → logprob: -16.00000762939453
    6. '`)' → logprob: -16.12500762939453
    7. ')
' → logprob: -16.87500762939453
    8. ')))' → logprob: -17.62500762939453
    9. '")' → logprob: -18.00000762939453
    10. '[' → logprob: -18.12500762939453

Token 104: '())' (ID: 3516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2590901553630829
    2. '())' → logprob: -1.5090901851654053
    3. '()' → logprob: -5.009089946746826
    4. '))' → logprob: -7.759089946746826
    5. ')`' → logprob: -12.134090423583984
    6. '();)' → logprob: -12.134090423583984
    7. '`)' → logprob: -12.384090423583984
    8. '])' → logprob: -12.634090423583984
    9. ')")' → logprob: -12.634090423583984
    10. '()))' → logprob: -13.259090423583984


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 102
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 79
Précision stricte (1ère position): 38.24%
Précision adaptée (1ère position): 40.20%
Précision (top 10): 77.45%
================================================================================
