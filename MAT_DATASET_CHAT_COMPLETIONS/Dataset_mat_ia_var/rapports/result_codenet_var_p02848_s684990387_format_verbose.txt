================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:36:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
nombre_decalage = int(input())

texte_original = input()

texte_chiffre = ""

for index_caractere in range(len(texte_original)):
    
    code_ascii_caractere = ord(texte_original[index_caractere])
    
    code_ascii_decale = code_ascii_caractere + nombre_decalage
    
    if code_ascii_decale <= 90:
        texte_chiffre += chr(code_ascii_decale)
    else:
        texte_chiffre += chr(code_ascii_decale - 26)

print(texte_chiffre)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'nombre' (ID: 28576)
  → Token d'amorce (pas de prédiction)

Token 1: '_de' (ID: 5047)
  → Token d'amorce (pas de prédiction)

Token 2: 'cal' (ID: 5842)
  → Token d'amorce (pas de prédiction)

Token 3: 'age' (ID: 477)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03241150453686714
    2. 's' → logprob: -4.032411575317383
    3. '=' → logprob: -5.282411575317383
    4. '[' → logprob: -5.907411575317383
    5. 'es' → logprob: -6.532411575317383
    6. '.' → logprob: -6.657411575317383
    7. '_nombre' → logprob: -6.657411575317383
    8. 'e' → logprob: -7.657411575317383
    9. '_s' → logprob: -8.407411575317383
    10. ')' → logprob: -8.532411575317383

Token 4: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002879057079553604
    2. '=' → logprob: -6.6278791427612305
    3. '[' → logprob: -7.1278791427612305
    4. ' =' → logprob: -8.25287914276123
    5. '_=' → logprob: -8.62787914276123
    6. '_nombre' → logprob: -9.75287914276123
    7. ' _' → logprob: -10.25287914276123
    8. '_s' → logprob: -10.50287914276123
    9. '```' → logprob: -10.50287914276123
    10. '.' → logprob: -10.87787914276123

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22639332711696625
    2. '1' → logprob: -1.8513933420181274
    3. '0' → logprob: -3.351393222808838
    4. '3' → logprob: -5.851393222808838
    5. '5' → logprob: -5.851393222808838
    6. '2' → logprob: -6.101393222808838
    7. '4' → logprob: -6.476393222808838
    8. '10' → logprob: -7.601393222808838
    9. ' _' → logprob: -9.351393699645996
    10. ' ' → logprob: -9.476393699645996

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003075871616601944
    2. '_' → logprob: -6.753076076507568
    3. '('' → logprob: -6.878076076507568
    4. ')' → logprob: -8.75307559967041
    5. ''' → logprob: -9.00307559967041
    6. '```' → logprob: -9.00307559967041
    7. '32' → logprob: -9.37807559967041
    8. '()' → logprob: -9.62807559967041
    9. '[' → logprob: -10.00307559967041
    10. '(nombre' → logprob: -10.12807559967041

Token 7: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010016091400757432
    2. ')' → logprob: -7.876001834869385
    3. '("("' → logprob: -8.626001358032227
    4. '()' → logprob: -8.876001358032227
    5. '('' → logprob: -9.126001358032227
    6. '(
' → logprob: -10.001001358032227
    7. '<|end|>' → logprob: -10.251001358032227
    8. ''' → logprob: -10.876001358032227
    9. '```' → logprob: -11.126001358032227
    10. ' (' → logprob: -11.376001358032227

Token 8: 'texte' (ID: 58165)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1473136991262436
    2. 'if' → logprob: -3.0223135948181152
    3. '*' → logprob: -3.5223135948181152
    4. '#' → logprob: -3.6473135948181152
    5. ')' → logprob: -4.272313594818115
    6. '+' → logprob: -4.772313594818115
    7. '=' → logprob: -5.897313594818115
    8. 'for' → logprob: -6.522313594818115
    9. '_' → logprob: -6.647313594818115
    10. 'print' → logprob: -6.897313594818115

Token 9: '_original' (ID: 92075)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11999750137329102
    2. '[:]' → logprob: -2.619997501373291
    3. ' =' → logprob: -3.994997501373291
    4. '_' → logprob: -4.744997501373291
    5. '=' → logprob: -4.869997501373291
    6. '[]' → logprob: -6.744997501373291
    7. '[:' → logprob: -6.994997501373291
    8. '[...]' → logprob: -7.619997501373291
    9. '[n' → logprob: -7.994997501373291
    10. '.' → logprob: -7.994997501373291

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04015509411692619
    2. '=' → logprob: -3.6651551723480225
    3. '[' → logprob: -5.040154933929443
    4. '_' → logprob: -5.790154933929443
    5. '[:]' → logprob: -5.790154933929443
    6. ' ' → logprob: -7.790154933929443
    7. ',' → logprob: -8.290155410766602
    8. '.' → logprob: -9.540155410766602
    9. '[::-' → logprob: -10.165155410766602
    10. ')' → logprob: -10.165155410766602

Token 11: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04978114366531372
    2. 'input' → logprob: -3.049781084060669
    3. ' ' → logprob: -7.924781322479248
    4. '""' → logprob: -8.17478084564209
    5. ' "' → logprob: -8.79978084564209
    6. ' ""' → logprob: -8.92478084564209
    7. '"' → logprob: -9.04978084564209
    8. ' str' → logprob: -10.42478084564209
    9. ''' → logprob: -10.92478084564209
    10. ' ''' → logprob: -11.17478084564209

Token 12: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008581835776567459
    2. ')' → logprob: -5.508581638336182
    3. '()' → logprob: -5.508581638336182
    4. '('' → logprob: -8.38358211517334
    5. '("("' → logprob: -9.88358211517334
    6. '```' → logprob: -10.63358211517334
    7. 'parent' → logprob: -10.88358211517334
    8. '(
' → logprob: -11.00858211517334
    9. '_parent' → logprob: -11.13358211517334
    10. ')(' → logprob: -11.25858211517334

Token 13: 'texte' (ID: 58165)
  Prédit: 'texte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.07985372841358185
    2. 'for' → logprob: -3.2048537731170654
    3. 'de' → logprob: -4.329853534698486
    4. 'nombre' → logprob: -4.954853534698486
    5. 'result' → logprob: -5.079853534698486
    6. 'n' → logprob: -6.079853534698486
    7. 'long' → logprob: -6.329853534698486
    8. 'if' → logprob: -6.704853534698486
    9. '```' → logprob: -6.829853534698486
    10. 'd' → logprob: -8.079854011535645

Token 14: '_ch' (ID: 8914)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6933097243309021
    2. '_original' → logprob: -0.6933097243309021
    3. '_orig' → logprob: -9.568309783935547
    4. '_de' → logprob: -11.193309783935547
    5. ' _' → logprob: -11.693309783935547
    6. '_or' → logprob: -11.693309783935547
    7. '_final' → logprob: -11.943309783935547
    8. '_)' → logprob: -12.068309783935547
    9. '._' → logprob: -12.193309783935547
    10. '_=' → logprob: -12.193309783935547

Token 15: 'iff' (ID: 4443)
  Prédit: 'iff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iff' → logprob: -0.7912485599517822
    2. 'iffe' → logprob: -1.4162485599517822
    3. 'if' → logprob: -2.0412485599517822
    4. 'ifre' → logprob: -2.6662485599517822
    5. 'r' → logprob: -3.1662485599517822
    6. '_' → logprob: -4.666248321533203
    7. 'iffer' → logprob: -4.791248321533203
    8. 'er' → logprob: -4.916248321533203
    9. ' =' → logprob: -5.041248321533203
    10. 'e' → logprob: -5.041248321533203

Token 16: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.15056569874286652
    2. 'ré' → logprob: -2.1505656242370605
    3. 'r' → logprob: -4.1505656242370605
    4. 'rement' → logprob: -5.0255656242370605
    5. 'e' → logprob: -7.6505656242370605
    6. 'rer' → logprob: -8.275566101074219
    7. 'er' → logprob: -8.400566101074219
    8. 'é' → logprob: -10.525566101074219
    9. 'rée' → logprob: -10.775566101074219
    10. '```' → logprob: -11.650566101074219

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3560732305049896
    2. ' =' → logprob: -1.356073260307312
    3. '_' → logprob: -3.2310731410980225
    4. 'd' → logprob: -6.231073379516602
    5. '_=' → logprob: -8.856073379516602
    6. 'e' → logprob: -9.231073379516602
    7. ' ' → logprob: -9.981073379516602
    8. 'é' → logprob: -10.231073379516602
    9. 's' → logprob: -10.356073379516602
    10. '_d' → logprob: -11.731073379516602

Token 18: ' ""

' (ID: 86057)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.15855462849140167
    2. '"' → logprob: -2.0335545539855957
    3. ' ""' → logprob: -4.658554553985596
    4. '''' → logprob: -5.908554553985596
    5. ''' → logprob: -6.533554553985596
    6. ' ' → logprob: -6.783554553985596
    7. ' "' → logprob: -7.408554553985596
    8. '[]' → logprob: -8.658555030822754
    9. ' ''' → logprob: -9.908555030822754
    10. '[' → logprob: -10.533555030822754

Token 19: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001099968678317964
    2. ' for' → logprob: -6.876100063323975
    3. 'i' → logprob: -10.001099586486816
    4. 'n' → logprob: -12.126099586486816
    5. '```' → logprob: -12.126099586486816
    6. '_' → logprob: -12.751099586486816
    7. '=' → logprob: -13.751099586486816
    8. 'f' → logprob: -13.876099586486816
    9. '\' → logprob: -13.876099586486816
    10. '\n' → logprob: -14.251099586486816

Token 20: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.049369119107723236
    2. ' ' → logprob: -3.1743690967559814
    3. ' caract' → logprob: -5.7993693351745605
    4. ' _' → logprob: -5.9243693351745605
    5. ' car' → logprob: -8.424368858337402
    6. 'i' → logprob: -9.299368858337402
    7. ' c' → logprob: -9.549368858337402
    8. '  ' → logprob: -10.049368858337402
    9. '_' → logprob: -10.174368858337402
    10. ' caractère' → logprob: -10.174368858337402

Token 21: '_car' (ID: 62991)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016255352646112442
    2. 'in' → logprob: -4.7662553787231445
    3. ' ' → logprob: -4.8912553787231445
    4. '_' → logprob: -10.141255378723145
    5. ',' → logprob: -11.141255378723145
    6. '  ' → logprob: -11.391255378723145
    7. ' i' → logprob: -11.641255378723145
    8. ' ,' → logprob: -12.391255378723145
    9. '<|end|>' → logprob: -12.766255378723145
    10. '   ' → logprob: -12.891255378723145

Token 22: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.044247645884752274
    2. 'ac' → logprob: -4.044247627258301
    3. ' in' → logprob: -4.419247627258301
    4. 'acter' → logprob: -5.044247627258301
    5. 'a' → logprob: -6.294247627258301
    6. ' act' → logprob: -6.419247627258301
    7. 't' → logprob: -7.294247627258301
    8. 'acteur' → logprob: -7.294247627258301
    9. '_' → logprob: -7.669247627258301
    10. ',' → logprob: -7.919247627258301

Token 23: 'ere' (ID: 512)
  Prédit: 'ere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -0.48623308539390564
    2. 'ère' → logprob: -0.986233115196228
    3. 'er' → logprob: -4.736233234405518
    4. 'e' → logprob: -6.486233234405518
    5. 're' → logprob: -6.486233234405518
    6. 'èr' → logprob: -9.86123275756836
    7. 'ére' → logprob: -9.86123275756836
    8. 'è' → logprob: -9.98623275756836
    9. '   ' → logprob: -10.36123275756836
    10. '=' → logprob: -10.86123275756836

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020642442628741264
    2. 'in' → logprob: -3.8956425189971924
    3. ' ' → logprob: -9.395642280578613
    4. ',' → logprob: -11.645642280578613
    5. 's' → logprob: -12.895642280578613
    6. '	in' → logprob: -14.020642280578613
    7. 'dans' → logprob: -14.145642280578613
    8. ' ,' → logprob: -14.145642280578613
    9. '  ' → logprob: -14.520642280578613
    10. 'range' → logprob: -14.770642280578613

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -11.875019073486328
    3. 'range' → logprob: -11.875019073486328
    4. ' texte' → logprob: -12.250019073486328
    5. ' rang' → logprob: -14.750019073486328
    6. '	range' → logprob: -16.000019073486328
    7. ' gamme' → logprob: -16.500019073486328
    8. '  ' → logprob: -17.000019073486328
    9. '(range' → logprob: -17.375019073486328
    10. ' nombre' → logprob: -17.625019073486328

Token 26: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42035117745399475
    2. '(len' → logprob: -1.1703511476516724
    3. '(nombre' → logprob: -3.420351266860962
    4. '(length' → logprob: -8.920351028442383
    5. '(n' → logprob: -10.170351028442383
    6. ' (' → logprob: -10.795351028442383
    7. '(numero' → logprob: -10.795351028442383
    8. '(nome' → logprob: -12.670351028442383
    9. '(
' → logprob: -12.920351028442383
    10. '(num' → logprob: -13.795351028442383

Token 27: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.7120533811976202e-05
    2. ' (' → logprob: -11.125017166137695
    3. '(n' → logprob: -14.000017166137695
    4. 'texte' → logprob: -14.375017166137695
    5. '(nombre' → logprob: -14.375017166137695
    6. ' texte' → logprob: -15.750017166137695
    7. '(text' → logprob: -16.625017166137695
    8. '(tex' → logprob: -17.750017166137695
    9. '(txt' → logprob: -17.875017166137695
    10. ')' → logprob: -18.125017166137695

Token 28: 'texte' (ID: 58165)
  Prédit: 'texte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.0003428528143558651
    2. ' texte' → logprob: -8.000343322753906
    3. '(' → logprob: -12.375343322753906
    4. 'tex' → logprob: -13.500343322753906
    5. ')' → logprob: -14.500343322753906
    6. ' ' → logprob: -14.750343322753906
    7. 'text' → logprob: -14.750343322753906
    8. 'texto' → logprob: -15.625343322753906
    9. 'txt' → logprob: -15.750343322753906
    10. ' Texte' → logprob: -16.625343322753906

Token 29: '_original' (ID: 92075)
  Prédit: '_original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_original' → logprob: -1.664371848164592e-05
    2. '_' → logprob: -11.875016212463379
    3. 'original' → logprob: -12.375016212463379
    4. '_orig' → logprob: -13.500016212463379
    5. '_ch' → logprob: -13.625016212463379
    6. '))' → logprob: -13.750016212463379
    7. '_)' → logprob: -14.125016212463379
    8. 'Original' → logprob: -15.000016212463379
    9. ')))' → logprob: -16.000017166137695
    10. ')' → logprob: -16.000017166137695

Token 30: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.017717881128191948
    2. '):' → logprob: -4.5177178382873535
    3. '))' → logprob: -5.3927178382873535
    4. ')' → logprob: -6.6427178382873535
    5. ' ))' → logprob: -8.017718315124512
    6. ' ):' → logprob: -8.267718315124512
    7. ')):
' → logprob: -9.392718315124512
    8. ')+' → logprob: -10.392718315124512
    9. ')):
' → logprob: -10.392718315124512
    10. '+' → logprob: -10.767718315124512

Token 31: '    
' (ID: 1944)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021874941885471344
    2. '   ' → logprob: -4.146874904632568
    3. '    ' → logprob: -6.521874904632568
    4. ' caract' → logprob: -6.896874904632568
    5. '_' → logprob: -7.021874904632568
    6. ' ```' → logprob: -7.521874904632568
    7. ' if' → logprob: -8.021875381469727
    8. ' 
' → logprob: -8.271875381469727
    9. '<|end|>' → logprob: -8.646875381469727
    10. '```' → logprob: -8.646875381469727

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7567777633666992
    2. ' ' → logprob: -1.5067777633666992
    3. ' if' → logprob: -2.131777763366699
    4. ' caract' → logprob: -2.256777763366699
    5. 'texte' → logprob: -3.881777763366699
    6. ' espace' → logprob: -4.131777763366699
    7. 'car' → logprob: -4.631777763366699
    8. ' texte' → logprob: -5.131777763366699
    9. '    ' → logprob: -5.381777763366699
    10. 'c' → logprob: -5.506777763366699

Token 33: ' code' (ID: 3490)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.21318212151527405
    2. 'if' → logprob: -2.213182210922241
    3. 'texte' → logprob: -2.838182210922241
    4. '   ' → logprob: -4.713181972503662
    5. ' if' → logprob: -4.838181972503662
    6. ' ' → logprob: -5.588181972503662
    7. ' caract' → logprob: -7.088181972503662
    8. 'lett' → logprob: -7.338181972503662
    9. 'char' → logprob: -7.338181972503662
    10. '  ' → logprob: -8.08818244934082

Token 34: '_ascii' (ID: 125321)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.3334314227104187
    2. '_ascii' → logprob: -1.9584314823150635
    3. 'car' → logprob: -3.0834314823150635
    4. '_c' → logprob: -3.4584314823150635
    5. 'ascii' → logprob: -3.5834314823150635
    6. '_' → logprob: -4.458431243896484
    7. '_unicode' → logprob: -5.708431243896484
    8. '_char' → logprob: -5.708431243896484
    9. ' caract' → logprob: -5.958431243896484
    10. '=' → logprob: -6.083431243896484

Token 35: '_car' (ID: 62991)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17388859391212463
    2. '_car' → logprob: -2.423888683319092
    3. '=' → logprob: -3.173888683319092
    4. '_' → logprob: -3.923888683319092
    5. ' ' → logprob: -5.798888683319092
    6. 'car' → logprob: -6.298888683319092
    7. '_char' → logprob: -6.673888683319092
    8. '_le' → logprob: -7.673888683319092
    9. '```' → logprob: -7.798888683319092
    10. '_c' → logprob: -8.048888206481934

Token 36: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.16855844855308533
    2. 'acter' → logprob: -2.543558359146118
    3. 'ac' → logprob: -2.918558359146118
    4. '   ' → logprob: -4.793558597564697
    5. '_' → logprob: -6.043558597564697
    6. 'a' → logprob: -6.168558597564697
    7. ' ' → logprob: -6.168558597564697
    8. '_act' → logprob: -6.418558597564697
    9. ' ' → logprob: -6.543558597564697
    10. '  ' → logprob: -7.168558597564697

Token 37: 'ere' (ID: 512)
  Prédit: 'ere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -0.008785098791122437
    2. 'ère' → logprob: -4.758785247802734
    3. 'er' → logprob: -9.883785247802734
    4. 'e' → logprob: -10.383785247802734
    5. '```' → logprob: -10.633785247802734
    6. '   ' → logprob: -11.133785247802734
    7. 'ére' → logprob: -11.133785247802734
    8. '=' → logprob: -11.633785247802734
    9. ' ' → logprob: -12.008785247802734
    10. '`' → logprob: -12.633785247802734

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01263690460473299
    2. '=' → logprob: -4.387637138366699
    3. ' ' → logprob: -9.1376371383667
    4. '_' → logprob: -12.2626371383667
    5. '   ' → logprob: -12.2626371383667
    6. '  ' → logprob: -13.7626371383667
    7. '+' → logprob: -13.8876371383667
    8. ')' → logprob: -13.8876371383667
    9. ' ' → logprob: -13.8876371383667
    10. ' +=' → logprob: -14.0126371383667

Token 39: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.014170913025736809
    2. 'ord' → logprob: -4.264171123504639
    3. '(ord' → logprob: -12.01417064666748
    4. ' ' → logprob: -13.88917064666748
    5. '   ' → logprob: -14.76417064666748
    6. ' code' → logprob: -17.514171600341797
    7. '  ' → logprob: -18.264171600341797
    8. 'ordre' → logprob: -18.514171600341797
    9. 'ords' → logprob: -18.764171600341797
    10. ' ' → logprob: -18.889171600341797

Token 40: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.935296834039036e-06
    2. '('' → logprob: -13.50000286102295
    3. '(
' → logprob: -14.25000286102295
    4. ' (' → logprob: -15.50000286102295
    5. '()' → logprob: -15.62500286102295
    6. '((' → logprob: -15.75000286102295
    7. '("("' → logprob: -16.500003814697266
    8. 'texte' → logprob: -16.625003814697266
    9. '(

' → logprob: -16.875003814697266
    10. '(text' → logprob: -17.625003814697266

Token 41: 'texte' (ID: 58165)
  Prédit: 'texte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.0007235141238197684
    2. ' texte' → logprob: -7.250723361968994
    3. '(' → logprob: -12.000723838806152
    4. ')' → logprob: -12.000723838806152
    5. 'tex' → logprob: -14.250723838806152
    6. ' ' → logprob: -15.000723838806152
    7. '   ' → logprob: -16.375722885131836
    8. ' Texte' → logprob: -17.250722885131836
    9. 'texto' → logprob: -17.500722885131836
    10. '  ' → logprob: -17.625722885131836

Token 42: '_original' (ID: 92075)
  Prédit: '_original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_original' → logprob: -8.77627644513268e-06
    2. 'original' → logprob: -12.000008583068848
    3. 'Original' → logprob: -13.625008583068848
    4. '_orig' → logprob: -14.125008583068848
    5. '_car' → logprob: -15.250008583068848
    6. 'car' → logprob: -16.125009536743164
    7. '```' → logprob: -16.375009536743164
    8. '_ch' → logprob: -17.250009536743164
    9. '(original' → logprob: -17.750009536743164
    10. ' original' → logprob: -18.125009536743164

Token 43: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.004175152629613876
    2. '[' → logprob: -5.629175186157227
    3. ')' → logprob: -7.629175186157227
    4. ')[' → logprob: -9.879175186157227
    5. ' [' → logprob: -10.754175186157227
    6. '[
' → logprob: -12.629175186157227
    7. ' )' → logprob: -13.129175186157227
    8. ',index' → logprob: -13.629175186157227
    9. '[ind' → logprob: -13.754175186157227
    10. 'index' → logprob: -14.004175186157227

Token 44: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -1.771655115589965e-05
    2. 'car' → logprob: -11.625018119812012
    3. '_' → logprob: -12.000018119812012
    4. '_c' → logprob: -14.250018119812012
    5. '])' → logprob: -14.875018119812012
    6. ' _' → logprob: -15.375018119812012
    7. ']))' → logprob: -15.375018119812012
    8. ']' → logprob: -15.500018119812012
    9. '	car' → logprob: -15.625018119812012
    10. '   ' → logprob: -15.625018119812012

Token 45: 'act' (ID: 588)
  Prédit: 'ere'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -0.526261031627655
    2. 'tere' → logprob: -1.5262610912322998
    3. 're' → logprob: -2.0262610912323
    4. 'act' → logprob: -3.1512610912323
    5. 'ct' → logprob: -4.151260852813721
    6. '_re' → logprob: -7.276260852813721
    7. 'te' → logprob: -8.651261329650879
    8. 'rete' → logprob: -9.651261329650879
    9. '   ' → logprob: -9.776261329650879
    10. 'f' → logprob: -9.776261329650879

Token 46: 'ere' (ID: 512)
  Prédit: 'ere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -0.00012964145571459085
    2. 're' → logprob: -9.125129699707031
    3. 'e' → logprob: -11.000129699707031
    4. 'ère' → logprob: -13.625129699707031
    5. '_re' → logprob: -14.250129699707031
    6. '   ' → logprob: -14.375129699707031
    7. '```' → logprob: -14.750129699707031
    8. ']' → logprob: -15.250129699707031
    9. 'er' → logprob: -15.625129699707031
    10. '`' → logprob: -16.25012969970703

Token 47: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012246317928656936
    2. '))' → logprob: -7.126224517822266
    3. ' )' → logprob: -8.126224517822266
    4. ')+' → logprob: -9.126224517822266
    5. '])' → logprob: -12.376224517822266
    6. '+' → logprob: -12.751224517822266
    7. '）' → logprob: -13.501224517822266
    8. ' ' → logprob: -13.751224517822266
    9. ' ' → logprob: -13.876224517822266
    10. ')
' → logprob: -14.001224517822266

Token 48: '    
' (ID: 1944)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08165884763002396
    2. '+' → logprob: -3.4566588401794434
    3. '<|end|>' → logprob: -3.7066588401794434
    4. ' if' → logprob: -5.081658840179443
    5. '   ' → logprob: -5.331658840179443
    6. ' 
' → logprob: -5.581658840179443
    7. '    ' → logprob: -6.081658840179443
    8. '  ' → logprob: -6.081658840179443
    9. '#' → logprob: -7.581658840179443
    10. 'if' → logprob: -7.581658840179443

Token 49: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7926154136657715
    2. 'if' → logprob: -0.9176154136657715
    3. '   ' → logprob: -2.5426154136657715
    4. ' ' → logprob: -3.0426154136657715
    5. '#' → logprob: -4.7926154136657715
    6. '    ' → logprob: -5.0426154136657715
    7. '```' → logprob: -6.5426154136657715
    8. '    
' → logprob: -6.7926154136657715
    9. ' #' → logprob: -7.5426154136657715
    10. '  ' → logprob: -7.7926154136657715

Token 50: ' code' (ID: 3490)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.017504241317510605
    2. 'code' (adapté à ' code') → logprob: -4.7675042152404785
    3. 'car' → logprob: -5.6425042152404785
    4. ' if' → logprob: -5.8925042152404785
    5. '#' → logprob: -7.1425042152404785
    6. 'de' → logprob: -7.6425042152404785
    7. 'nou' → logprob: -7.7675042152404785
    8. '```' → logprob: -8.017504692077637
    9. 'texte' → logprob: -8.892504692077637
    10. 'new' → logprob: -9.392504692077637

Token 51: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.004729991778731346
    2. '_shift' → logprob: -6.379730224609375
    3. '_de' → logprob: -6.629730224609375
    4. '_ch' → logprob: -7.004730224609375
    5. '_' → logprob: -8.129730224609375
    6. 'ascii' → logprob: -8.879730224609375
    7. '_a' → logprob: -9.254730224609375
    8. 'shift' → logprob: -10.379730224609375
    9. '_new' → logprob: -10.754730224609375
    10. '_c' → logprob: -10.879730224609375

Token 52: '_de' (ID: 5047)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.4114069938659668
    2. '_ch' → logprob: -2.036406993865967
    3. '_de' → logprob: -2.786406993865967
    4. '_new' → logprob: -3.161406993865967
    5. '_' → logprob: -3.161406993865967
    6. '_code' → logprob: -3.786406993865967
    7. '_shift' → logprob: -4.036406993865967
    8. '_n' → logprob: -5.286406993865967
    9. 'car' → logprob: -5.661406993865967
    10. '_dec' → logprob: -6.161406993865967

Token 53: 'cale' (ID: 12730)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.0048729428090155125
    2. 'cale' → logprob: -5.504872798919678
    3. 'placement' → logprob: -7.629872798919678
    4. 'c' → logprob: -9.754873275756836
    5. 'caler' → logprob: -9.879873275756836
    6. 'calc' → logprob: -10.129873275756836
    7. 'place' → logprob: -10.379873275756836
    8. 'call' → logprob: -10.754873275756836
    9. '```' → logprob: -12.254873275756836
    10. 'cl' → logprob: -12.317373275756836

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326965093612671
    2. '=' → logprob: -0.7576965093612671
    3. 'd' → logprob: -10.132696151733398
    4. '_' → logprob: -10.507696151733398
    5. '	' → logprob: -11.382696151733398
    6. ' ' → logprob: -12.257696151733398
    7. '   ' → logprob: -12.757696151733398
    8. 'e' → logprob: -12.882696151733398
    9. ' ' → logprob: -13.882696151733398
    10. 'code' → logprob: -14.132696151733398

Token 55: ' code' (ID: 3490)
  Prédit: ' code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.16281145811080933
    2. 'code' → logprob: -2.537811517715454
    3. ' (' → logprob: -3.037811517715454
    4. '(code' → logprob: -3.787811517715454
    5. ' ' → logprob: -8.037811279296875
    6. '(' → logprob: -8.287811279296875
    7. ' ' → logprob: -11.787811279296875
    8. ' ((' → logprob: -12.287811279296875
    9. '((' → logprob: -12.412811279296875
    10. '	code' → logprob: -12.662811279296875

Token 56: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.00176836212631315
    2. 'ascii' → logprob: -6.876768589019775
    3. '_de' → logprob: -7.876768589019775
    4. 'de' → logprob: -8.376768112182617
    5. '_as' → logprob: -10.001768112182617
    6. '_car' → logprob: -10.876768112182617
    7. '+' → logprob: -11.001768112182617
    8. '_' → logprob: -11.751768112182617
    9. 'car' → logprob: -12.251768112182617
    10. 'ASCII' → logprob: -12.251768112182617

Token 57: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.2824268639087677
    2. 'car' → logprob: -1.5324268341064453
    3. 'de' → logprob: -4.032426834106445
    4. '_de' → logprob: -4.407426834106445
    5. 'Car' → logprob: -10.782426834106445
    6. 'code' → logprob: -11.032426834106445
    7. 'ar' → logprob: -11.407426834106445
    8. 'e' → logprob: -11.532426834106445
    9. '+' → logprob: -11.782426834106445
    10. '	car' → logprob: -11.907426834106445

Token 58: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -2.141186450899113e-05
    2. 'acter' → logprob: -11.375020980834961
    3. 'ct' → logprob: -12.500020980834961
    4. '_act' → logprob: -13.000020980834961
    5. 't' → logprob: -13.750020980834961
    6. 'at' → logprob: -14.875020980834961
    7. '+' → logprob: -14.875020980834961
    8. 'acteur' → logprob: -14.875020980834961
    9. 'ac' → logprob: -15.000020980834961
    10. 'actable' → logprob: -15.625020980834961

Token 59: 'ere' (ID: 512)
  Prédit: 'ere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -3.023293538717553e-05
    2. 'e' → logprob: -11.250030517578125
    3. 're' → logprob: -11.625030517578125
    4. 'er' → logprob: -13.250030517578125
    5. 'are' → logprob: -13.375030517578125
    6. '   ' → logprob: -13.625030517578125
    7. '_re' → logprob: -13.875030517578125
    8. 'ère' → logprob: -14.125030517578125
    9. '```' → logprob: -14.625030517578125
    10. '`' → logprob: -15.875030517578125

Token 60: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931713223457336
    2. ' +' → logprob: -0.6931713223457336
    3. ' plus' → logprob: -11.693171501159668
    4. '+n' → logprob: -11.818171501159668
    5. ' -' → logprob: -13.193171501159668
    6. '-' → logprob: -13.318171501159668
    7. ' +
' → logprob: -13.318171501159668
    8. ' ' → logprob: -13.943171501159668
    9. '<|end|>' → logprob: -14.943171501159668
    10. '+
' → logprob: -15.318171501159668

Token 61: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.029836570844054222
    2. 'nombre' → logprob: -3.529836654663086
    3. ' ' → logprob: -10.154836654663086
    4. ' nom' → logprob: -10.404836654663086
    5. 'nom' → logprob: -11.779836654663086
    6. ' nombres' → logprob: -13.029836654663086
    7. ' nome' → logprob: -13.654836654663086
    8. '(nombre' → logprob: -13.654836654663086
    9. ' nomb' → logprob: -13.779836654663086
    10. '1' → logprob: -13.904836654663086

Token 62: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -7.465036105713807e-06
    2. '_d' → logprob: -12.500007629394531
    3. '_' → logprob: -13.125007629394531
    4. 'de' → logprob: -13.750007629394531
    5. ' de' → logprob: -15.750007629394531
    6. '_dec' → logprob: -16.12500762939453
    7. '_des' → logprob: -16.25000762939453
    8. ' _' → logprob: -17.25000762939453
    9. '_def' → logprob: -17.37500762939453
    10. '_code' → logprob: -17.50000762939453

Token 63: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.0001584850688232109
    2. 'c' → logprob: -9.125158309936523
    3. 'caler' → logprob: -11.125158309936523
    4. 'placement' → logprob: -11.375158309936523
    5. 'al' → logprob: -11.500158309936523
    6. '1' → logprob: -12.375158309936523
    7. 'calc' → logprob: -13.125158309936523
    8. 'cale' → logprob: -14.125158309936523
    9. '2' → logprob: -14.250158309936523
    10. '0' → logprob: -14.500158309936523

Token 64: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -6.034592388459714e-06
    2. ' age' → logprob: -12.625005722045898
    3. 'arge' → logprob: -14.000005722045898
    4. 'ag' → logprob: -14.500005722045898
    5. 'ge' → logprob: -15.000005722045898
    6. '   ' → logprob: -15.125005722045898
    7. 'agement' → logprob: -15.500005722045898
    8. 'a' → logprob: -15.625005722045898
    9. '_age' → logprob: -16.1250057220459
    10. 'e' → logprob: -16.3750057220459

Token 65: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7223182916641235
    2. ' if' → logprob: -0.8473182916641235
    3. 'if' → logprob: -2.722318172454834
    4. '    
' → logprob: -4.597318172454834
    5. '<|end|>' → logprob: -5.972318172454834
    6. ' ' → logprob: -6.347318172454834
    7. '  ' → logprob: -6.597318172454834
    8. '    ' → logprob: -6.597318172454834
    9. '#' → logprob: -7.472318172454834
    10. '```' → logprob: -7.847318172454834

Token 67: ' if' (ID: 538)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.4784250259399414
    2. 'if' (adapté à ' if') → logprob: -0.9784250259399414
    3. ' if' → logprob: -6.228425025939941
    4. 'car' → logprob: -6.853425025939941
    5. '```' → logprob: -7.353425025939941
    6. '   ' → logprob: -7.978425025939941
    7. 'while' → logprob: -9.853425025939941
    8. ' texte' → logprob: -9.978425025939941
    9. '#' → logprob: -10.103425025939941
    10. ' ' → logprob: -10.228425025939941

Token 68: ' code' (ID: 3490)
  Prédit: ' code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.02317698672413826
    2. ' ' → logprob: -4.148177146911621
    3. ' (' → logprob: -5.773177146911621
    4. 'code' → logprob: -6.398177146911621
    5. '(code' → logprob: -7.398177146911621
    6. ' chr' → logprob: -7.523177146911621
    7. '65' → logprob: -7.523177146911621
    8. '32' → logprob: -8.398177146911621
    9. 'chr' → logprob: -8.648177146911621
    10. '97' → logprob: -10.273177146911621

Token 69: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.0002467966405674815
    2. '_de' → logprob: -9.00024700164795
    3. 'ascii' → logprob: -9.12524700164795
    4. '_as' → logprob: -12.25024700164795
    5. '_' → logprob: -12.62524700164795
    6. 'de' → logprob: -13.00024700164795
    7. 'ASCII' → logprob: -14.25024700164795
    8. '_ai' → logprob: -14.50024700164795
    9. '<=' → logprob: -14.87524700164795
    10. 'Ascii' → logprob: -15.12524700164795

Token 70: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.00014561474381480366
    2. '_car' → logprob: -9.37514591217041
    3. 'de' → logprob: -9.87514591217041
    4. 'car' → logprob: -12.62514591217041
    5. '	de' → logprob: -13.12514591217041
    6. '_code' → logprob: -13.62514591217041
    7. '_' → logprob: -14.37514591217041
    8. 'code' → logprob: -14.87514591217041
    9. '>' → logprob: -15.25014591217041
    10. '```' → logprob: -15.50014591217041

Token 71: 'cale' (ID: 12730)
  Prédit: 'cale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cale' → logprob: -0.008038705214858055
    2. 'cal' → logprob: -4.883038520812988
    3. 'caler' → logprob: -9.008038520812988
    4. 'c' → logprob: -9.133038520812988
    5. 'code' → logprob: -10.133038520812988
    6. 'case' → logprob: -10.258038520812988
    7. 'place' → logprob: -10.508038520812988
    8. '<' → logprob: -11.008038520812988
    9. 'cade' → logprob: -11.133038520812988
    10. 'scale' → logprob: -11.383038520812988

Token 72: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.009833531454205513
    2. '>' → logprob: -5.009833335876465
    3. ' <' → logprob: -6.634833335876465
    4. ' <=' → logprob: -6.884833335876465
    5. ' >=' → logprob: -7.259833335876465
    6. '<' → logprob: -10.884833335876465
    7. '<=' → logprob: -11.509833335876465
    8. '<|end|>' → logprob: -11.509833335876465
    9. '>=' → logprob: -11.509833335876465
    10. ' ' → logprob: -11.759833335876465

Token 73: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6837844252586365
    2. '122' → logprob: -0.8087844252586365
    3. '126' → logprob: -3.0587844848632812
    4. '90' → logprob: -6.183784484863281
    5. '127' → logprob: -7.683784484863281
    6. '255' → logprob: -9.058784484863281
    7. 'ord' → logprob: -9.308784484863281
    8. '32' → logprob: -9.308784484863281
    9. '125' → logprob: -10.058784484863281
    10. ' ord' → logprob: -10.683784484863281

Token 74: '90' (ID: 2744)
  Prédit: '122'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '122' → logprob: -0.271579384803772
    2. '90' → logprob: -1.646579384803772
    3. '126' → logprob: -3.1465792655944824
    4. '57' → logprob: -7.396579265594482
    5. '255' → logprob: -7.396579265594482
    6. '127' → logprob: -7.521579265594482
    7. ' ' → logprob: -9.02157974243164
    8. 'ord' → logprob: -9.14657974243164
    9. '125' → logprob: -10.77157974243164
    10. '111' → logprob: -10.89657974243164

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08477135002613068
    2. ' and' → logprob: -3.2097713947296143
    3. ' :' → logprob: -3.2097713947296143
    4. 'and' → logprob: -7.834771156311035
    5. ':
' → logprob: -9.459771156311035
    6. '<|end|>' → logprob: -10.459771156311035
    7. ' or' → logprob: -11.084771156311035
    8. ' ' → logprob: -12.084771156311035
    9. ':return' → logprob: -12.084771156311035
    10. ' :
' → logprob: -12.084771156311035

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3344109356403351
    2. '   ' → logprob: -2.5844109058380127
    3. '<|end|>' → logprob: -2.5844109058380127
    4. ' ' → logprob: -3.0844109058380127
    5. 'texte' → logprob: -3.5844109058380127
    6. '    ' → logprob: -4.709411144256592
    7. '        
' → logprob: -5.084411144256592
    8. '    
' → logprob: -5.209411144256592
    9. ' 
' → logprob: -5.334411144256592
    10. ' :' → logprob: -5.459411144256592

Token 77: ' texte' (ID: 53492)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' (adapté à ' texte') → logprob: -0.006308307871222496
    2. ' texte' → logprob: -5.256308078765869
    3. ' caract' → logprob: -8.131308555603027
    4. ' ' → logprob: -9.006308555603027
    5. '       ' → logprob: -9.006308555603027
    6. '```' → logprob: -9.381308555603027
    7. '   ' → logprob: -9.506308555603027
    8. 'code' → logprob: -9.881308555603027
    9. 'car' → logprob: -10.131308555603027
    10. '    ' → logprob: -10.131308555603027

Token 78: '_ch' (ID: 8914)
  Prédit: '_ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ch' → logprob: -1.3544423381972592e-05
    2. 'ch' → logprob: -11.25001335144043
    3. '	ch' → logprob: -16.00001335144043
    4. ' +=' → logprob: -16.37501335144043
    5. '_' → logprob: -16.50001335144043
    6. '+=' → logprob: -17.62501335144043
    7. '_de' → logprob: -18.00001335144043
    8. '_cipher' → logprob: -18.12501335144043
    9. '```' → logprob: -18.25001335144043
    10. '_chr' → logprob: -18.25001335144043

Token 79: 'iff' (ID: 4443)
  Prédit: 'iff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iff' → logprob: -0.0022002172190696
    2. 'iffe' → logprob: -6.502200126647949
    3. 'if' → logprob: -7.502200126647949
    4. 'ifre' → logprob: -9.00220012664795
    5. 'eff' → logprob: -12.12720012664795
    6. 'ifr' → logprob: -12.25220012664795
    7. 'iffer' → logprob: -12.75220012664795
    8. '   ' → logprob: -12.75220012664795
    9. 'i' → logprob: -14.00220012664795
    10. 'ifft' → logprob: -14.12720012664795

Token 80: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0010822329204529524
    2. 'e' → logprob: -7.376082420349121
    3. 'r' → logprob: -8.501082420349121
    4. 'rement' → logprob: -9.376082420349121
    5. 'ré' → logprob: -9.751082420349121
    6. 'ree' → logprob: -10.751082420349121
    7. 'reur' → logprob: -10.876082420349121
    8. 'er' → logprob: -11.376082420349121
    9. 'rer' → logprob: -12.001082420349121
    10. 'fre' → logprob: -12.376082420349121

Token 81: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06199110299348831
    2. '+=' → logprob: -2.8119912147521973
    3. '+="' → logprob: -11.686990737915039
    4. '+='' → logprob: -12.186990737915039
    5. '+' → logprob: -12.311990737915039
    6. ' +' → logprob: -12.686990737915039
    7. '+=(' → logprob: -14.061990737915039
    8. ' =' → logprob: -14.061990737915039
    9. '=' → logprob: -14.436990737915039
    10. ']+=' → logprob: -16.06199073791504

Token 82: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.04862608388066292
    2. ' chr' → logprob: -3.048626184463501
    3. '(chr' → logprob: -10.173625946044922
    4. ' ' → logprob: -15.548625946044922
    5. '_chr' → logprob: -16.298625946044922
    6. '   ' → logprob: -16.923625946044922
    7. 'Chr' → logprob: -17.173625946044922
    8. '  ' → logprob: -17.423625946044922
    9. '```' → logprob: -17.548625946044922
    10. 'char' → logprob: -17.548625946044922

Token 83: '(code' (ID: 31208)
  Prédit: '(code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(code' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.250001907348633
    3. 'code' → logprob: -17.625001907348633
    4. ' (' → logprob: -18.500001907348633
    5. '(Code' → logprob: -18.750001907348633
    6. '(c' → logprob: -20.500001907348633
    7. '(
' → logprob: -20.875001907348633
    8. '```' → logprob: -20.875001907348633
    9. '(codec' → logprob: -21.000001907348633
    10. '(co' → logprob: -21.000001907348633

Token 84: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.0004923873930238187
    2. 'ascii' → logprob: -7.625492572784424
    3. '_' → logprob: -13.250492095947266
    4. 'Ascii' → logprob: -13.625492095947266
    5. ' ascii' → logprob: -15.250492095947266
    6. '_ast' → logprob: -15.500492095947266
    7. 'ASCII' → logprob: -15.750492095947266
    8. '_as' → logprob: -16.125492095947266
    9. '_sql' → logprob: -16.750492095947266
    10. '_ai' → logprob: -16.750492095947266

Token 85: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.0008114131633192301
    2. 'de' → logprob: -7.125811576843262
    3. '_car' → logprob: -12.875811576843262
    4. 'code' → logprob: -13.625811576843262
    5. 'car' → logprob: -13.625811576843262
    6. '_d' → logprob: -14.500811576843262
    7. '	de' → logprob: -14.750811576843262
    8. '_code' → logprob: -14.750811576843262
    9. '_dec' → logprob: -16.000810623168945
    10. '_' → logprob: -16.875810623168945

Token 86: 'cale' (ID: 12730)
  Prédit: 'cale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cale' → logprob: -0.0034177242778241634
    2. 'cal' → logprob: -5.753417491912842
    3. 'caler' → logprob: -9.50341796875
    4. 'case' → logprob: -9.62841796875
    5. 'place' → logprob: -10.37841796875
    6. 'code' → logprob: -10.50341796875
    7. 'scale' → logprob: -11.37841796875
    8. 'c' → logprob: -11.75341796875
    9. 'cade' → logprob: -12.25341796875
    10. 'cape' → logprob: -12.75341796875

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4774636924266815
    2. ')
' → logprob: -1.602463722229004
    3. '   ' → logprob: -1.727463722229004
    4. 'else' → logprob: -7.852463722229004
    5. ')
' → logprob: -10.352463722229004
    6. ' )' → logprob: -10.602463722229004
    7. ' else' → logprob: -10.852463722229004
    8. ' )
' → logprob: -11.352463722229004
    9. ')

' → logprob: -11.477463722229004
    10. '       ' → logprob: -12.227463722229004

Token 88: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.39191728830337524
    2. ' else' → logprob: -1.1419172286987305
    3. 'elif' → logprob: -5.3919172286987305
    4. ' elif' → logprob: -7.8919172286987305
    5. '	else' → logprob: -10.14191722869873
    6. '   ' → logprob: -10.51691722869873
    7. '<|end|>' → logprob: -10.51691722869873
    8. '```' → logprob: -12.51691722869873
    9. '_else' → logprob: -12.64191722869873
    10. '	elif' → logprob: -13.01691722869873

Token 89: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4817988872528076
    2. ' else' → logprob: -0.9817988872528076
    3. 'elif' → logprob: -4.981799125671387
    4. ' elif' → logprob: -7.106799125671387
    5. '	else' → logprob: -12.231799125671387
    6. '<|end|>' → logprob: -13.606799125671387
    7. '_else' → logprob: -13.856799125671387
    8. '   ' → logprob: -13.981799125671387
    9. '```' → logprob: -13.981799125671387
    10. '	elif' → logprob: -14.356799125671387

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0064388420432806015
    2. ':
' → logprob: -5.756438732147217
    3. ' :' → logprob: -5.756438732147217
    4. ' :
' → logprob: -10.131439208984375
    5. '       ' → logprob: -10.381439208984375
    6. '   ' → logprob: -11.131439208984375
    7. '    ' → logprob: -12.756439208984375
    8. ':
' → logprob: -13.381439208984375
    9. ':

' → logprob: -14.256439208984375
    10. '        ' → logprob: -14.756439208984375

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6668103933334351
    2. '    ' → logprob: -1.541810393333435
    3. 'texte' → logprob: -2.1668105125427246
    4. '        ' → logprob: -2.2918105125427246
    5. '32' → logprob: -4.916810512542725
    6. '     
' → logprob: -5.041810512542725
    7. ' "' → logprob: -5.166810512542725
    8. '   ' → logprob: -5.291810512542725
    9. '"' → logprob: -5.291810512542725
    10. ' ' → logprob: -5.416810512542725

Token 92: ' texte' (ID: 53492)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' (adapté à ' texte') → logprob: -0.7553024888038635
    2. ' chr' → logprob: -1.3803024291992188
    3. ' texte' → logprob: -1.7553024291992188
    4. 'chr' → logprob: -2.2553024291992188
    5. '(chr' → logprob: -8.505302429199219
    6. ' texto' → logprob: -8.630302429199219
    7. '   ' → logprob: -9.005302429199219
    8. '    ' → logprob: -9.130302429199219
    9. ' code' → logprob: -9.755302429199219
    10. ' caract' → logprob: -10.005302429199219

Token 93: '_ch' (ID: 8914)
  Prédit: '_ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ch' → logprob: -0.0004237627435941249
    2. '_de' → logprob: -7.875423908233643
    3. 'ch' → logprob: -10.875423431396484
    4. '_' → logprob: -11.875423431396484
    5. '_original' → logprob: -11.875423431396484
    6. '_con' → logprob: -13.750423431396484
    7. '_che' → logprob: -14.000423431396484
    8. '	ch' → logprob: -14.125423431396484
    9. '```' → logprob: -14.250423431396484
    10. '_chr' → logprob: -14.500423431396484

Token 94: 'iff' (ID: 4443)
  Prédit: 'iff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iff' → logprob: -0.0073213400319218636
    2. 'if' → logprob: -5.007321357727051
    3. 'iffe' → logprob: -8.00732135772705
    4. 'ifre' → logprob: -8.63232135772705
    5. 'ff' → logprob: -10.38232135772705
    6. 'ifr' → logprob: -11.00732135772705
    7. 'i' → logprob: -11.50732135772705
    8. 'iffer' → logprob: -11.50732135772705
    9. 'eff' → logprob: -12.00732135772705
    10. '```' → logprob: -12.25732135772705

Token 95: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00027254095766693354
    2. 'r' → logprob: -8.750272750854492
    3. 'e' → logprob: -9.250272750854492
    4. '_re' → logprob: -12.125272750854492
    5. 'ré' → logprob: -13.000272750854492
    6. 'er' → logprob: -13.000272750854492
    7. 'rage' → logprob: -13.000272750854492
    8. 'rement' → logprob: -14.375272750854492
    9. 'reur' → logprob: -14.500272750854492
    10. 'rer' → logprob: -14.625272750854492

Token 96: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.35402220487594604
    2. '+=' → logprob: -1.2290222644805908
    3. '+' → logprob: -5.604022026062012
    4. '=' → logprob: -7.479022026062012
    5. '+='' → logprob: -7.479022026062012
    6. '+="' → logprob: -8.354022026062012
    7. '`' → logprob: -8.854022026062012
    8. '[' → logprob: -9.104022026062012
    9. ' =' → logprob: -9.479022026062012
    10. ' +' → logprob: -9.854022026062012

Token 97: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.16024503111839294
    2. ' chr' → logprob: -1.9102450609207153
    3. '(chr' → logprob: -10.785244941711426
    4. '_chr' → logprob: -16.785245895385742
    5. ' ' → logprob: -18.035245895385742
    6. 'ch' → logprob: -18.160245895385742
    7. '   ' → logprob: -18.160245895385742
    8. 'Chr' → logprob: -18.285245895385742
    9. ' Chr' → logprob: -18.535245895385742
    10. ' ' → logprob: -18.785245895385742

Token 98: '(code' (ID: 31208)
  Prédit: '(code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(code' → logprob: -0.18035297095775604
    2. '(' → logprob: -1.9303529262542725
    3. '((' → logprob: -3.9303529262542725
    4. '(ord' → logprob: -8.805353164672852
    5. '(chr' → logprob: -9.055353164672852
    6. '("("' → logprob: -12.180353164672852
    7. '(c' → logprob: -12.430353164672852
    8. '(((' → logprob: -12.555353164672852
    9. '('' → logprob: -12.555353164672852
    10. '(Code' → logprob: -13.430353164672852

Token 99: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.006833063904196024
    2. 'ascii' → logprob: -5.006833076477051
    3. '_de' → logprob: -9.88183307647705
    4. 'Ascii' → logprob: -10.75683307647705
    5. 'ASCII' → logprob: -11.00683307647705
    6. 'de' → logprob: -11.38183307647705
    7. '_as' → logprob: -12.25683307647705
    8. '_code' → logprob: -12.63183307647705
    9. '_' → logprob: -13.63183307647705
    10. '_ai' → logprob: -13.75683307647705

Token 100: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.0003963569179177284
    2. 'de' → logprob: -7.875396251678467
    3. '_car' → logprob: -11.375396728515625
    4. '-de' → logprob: -13.500396728515625
    5. 'car' → logprob: -13.750396728515625
    6. '	de' → logprob: -14.500396728515625
    7. 'code' → logprob: -14.625396728515625
    8. '_code' → logprob: -15.250396728515625
    9. '-' → logprob: -15.250396728515625
    10. '_d' → logprob: -16.000396728515625

Token 101: 'cale' (ID: 12730)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.005374510306864977
    2. 'cale' → logprob: -5.255374431610107
    3. 'caler' → logprob: -10.505374908447266
    4. 'calc' → logprob: -10.755374908447266
    5. 'c' → logprob: -11.255374908447266
    6. 'placement' → logprob: -11.380374908447266
    7. '+' → logprob: -11.755374908447266
    8. ')' → logprob: -12.005374908447266
    9. '1' → logprob: -12.255374908447266
    10. '[' → logprob: -12.380374908447266

Token 102: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3487388491630554
    2. '-' → logprob: -1.2237389087677002
    3. ')' → logprob: -8.223738670349121
    4. ' )' → logprob: -11.348738670349121
    5. ' ' → logprob: -11.473738670349121
    6. '-)' → logprob: -13.473738670349121
    7. '45' → logprob: -14.473738670349121
    8. ')-' → logprob: -15.098738670349121
    9. ' ' → logprob: -15.223738670349121
    10. '41' → logprob: -16.473739624023438

Token 103: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0009140860638581216
    2. ' ' → logprob: -7.000914096832275
    3. '(' → logprob: -13.750913619995117
    4. ' (' → logprob: -14.000913619995117
    5. '   ' → logprob: -15.375913619995117
    6. '	' → logprob: -16.625913619995117
    7. '  ' → logprob: -17.000913619995117
    8. ''' → logprob: -17.125913619995117
    9. '90' → logprob: -17.125913619995117
    10. '91' → logprob: -17.375913619995117

Token 104: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -13.000003814697266
    3. '91' → logprob: -13.500003814697266
    4. '90' → logprob: -14.500003814697266
    5. '   ' → logprob: -19.125003814697266
    6. '(' → logprob: -19.125003814697266
    7. '```' → logprob: -20.250003814697266
    8. ''' → logprob: -20.375003814697266
    9. '	' → logprob: -20.750003814697266
    10. '('' → logprob: -20.875003814697266

Token 105: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.968312951968983e-06
    2. ' )' → logprob: -11.750009536743164
    3. ')
' → logprob: -13.875009536743164
    4. '))' → logprob: -14.000009536743164
    5. ')`' → logprob: -16.750009536743164
    6. '')' → logprob: -17.000009536743164
    7. ')}' → logprob: -17.375009536743164
    8. ')))' → logprob: -18.125009536743164
    9. '")' → logprob: -18.250009536743164
    10. '   ' → logprob: -18.375009536743164

Token 106: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007784062530845404
    2. '("("' → logprob: -4.882783889770508
    3. '('' → logprob: -8.882783889770508
    4. '("' → logprob: -11.382783889770508
    5. '(`' → logprob: -11.882783889770508
    6. '("")' → logprob: -12.132783889770508
    7. '()' → logprob: -12.257783889770508
    8. '("""' → logprob: -12.257783889770508
    9. ' (' → logprob: -13.507783889770508
    10. '("(' → logprob: -13.632783889770508

Token 108: 'texte' (ID: 58165)
  Prédit: 'texte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -1.1472419600977446e-06
    2. ' texte' → logprob: -13.750000953674316
    3. 'tex' → logprob: -17.000001907348633
    4. 'txt' → logprob: -18.625001907348633
    5. 'texto' → logprob: -18.750001907348633
    6. 'text' → logprob: -19.000001907348633
    7. ')' → logprob: -21.000001907348633
    8. '"' → logprob: -21.375001907348633
    9. 'tekst' → logprob: -21.375001907348633
    10. '(' → logprob: -21.625001907348633

Token 109: '_ch' (ID: 8914)
  Prédit: '_ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ch' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -14.875
    3. '_)' → logprob: -18.0
    4. 'ch' → logprob: -18.75
    5. '_chr' → logprob: -18.875
    6. '	ch' → logprob: -19.125
    7. ')' → logprob: -19.25
    8. '_che' → logprob: -19.5
    9. '_ph' → logprob: -19.625
    10. '_cl' → logprob: -19.75

Token 110: 'iff' (ID: 4443)
  Prédit: 'fre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fre' → logprob: -0.8434104919433594
    2. 'ifre' → logprob: -0.8434104919433594
    3. 'iff' → logprob: -2.5934104919433594
    4. 'if' → logprob: -3.5934104919433594
    5. 'fr' → logprob: -3.9684104919433594
    6. '_' → logprob: -5.218410491943359
    7. 're' → logprob: -5.843410491943359
    8. 'ff' → logprob: -6.218410491943359
    9. '```' → logprob: -6.843410491943359
    10. 'e' → logprob: -7.093410491943359

Token 111: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -2.165027217415627e-05
    2. 'r' → logprob: -11.250021934509277
    3. 'ré' → logprob: -12.250021934509277
    4. '_re' → logprob: -12.625021934509277
    5. 'reur' → logprob: -16.12502098083496
    6. 'rer' → logprob: -16.37502098083496
    7. 'er' → logprob: -16.37502098083496
    8. '_' → logprob: -16.50002098083496
    9. 'e' → logprob: -17.12502098083496
    10. 'rement' → logprob: -17.50002098083496

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.375
    3. '))' → logprob: -18.5
    4. ')`' → logprob: -18.75
    5. ')
' → logprob: -20.0
    6. '')' → logprob: -20.625
    7. '）' → logprob: -20.75
    8. '")' → logprob: -21.375
    9. ')**' → logprob: -21.625
    10. '`)' → logprob: -21.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 110
Tokens correctement prédits (1ère position, stricte): 65
Tokens correctement prédits (1ère position, avec adaptation): 68
Tokens correctement prédits (top 10): 92
Précision stricte (1ère position): 59.09%
Précision adaptée (1ère position): 61.82%
Précision (top 10): 83.64%
================================================================================
