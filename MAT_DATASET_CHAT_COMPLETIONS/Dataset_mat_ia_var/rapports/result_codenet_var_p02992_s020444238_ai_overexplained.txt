================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Prendre deux entiers en entrée séparés par un espace, puis les convertir en entiers grâce à map(). L'utilisateur saisit la valeur de n et m, que l'on utilise dans la suite du programme.
n, m = map(int, input().split(' '))  # Par exemple, si on entre "10 3", alors n=10, m=3

# Définir une constante entière Mod valant 10**9 + 7, utilisée pour tous les calculs modulo afin d'éviter des débordements d'entiers et pour respecter les contraintes des problèmes courants.
Mod = 1000000007

# Calculer la racine carrée de n avec l'opérateur d'exponentiation '**' et 0.5. 
# Prendre la partie entière en utilisant int(), puis ajouter 1. 
# Ce spl correspond à la borne supérieure pour une division, utilisée dans la construction suivante.
spl = int(n ** 0.5) + 1

# On construit une liste f en deux étapes :
# 1. Créer une liste contenant les entiers de 0 à spl-1 (inclus). 
# 2. Créer une autre liste contenant, pour chaque i de 1 à spl-1, le résultat de la division entière n//i. 
#    Ensuite, on inverse cette deuxième liste avec [::-1] (c'est pourquoi ça se termine par les plus petits quotients).
# 3. On concatène les deux listes pour obtenir la liste f.
first_part = [i for i in range(spl)]  # Liste contenant [0, 1, ..., spl-1]
second_part = [n // i for i in range(1, spl)]  # Liste contenant les quotients n//i pour i de 1 à spl-1
second_part_reversed = second_part[::-1]  # Inverser la liste pour une utilisation ultérieure
f = first_part + second_part_reversed  # On concatène les listes pour obtenir la liste finale f

# Calculer la longueur de la liste f et la stocker dans k.
# C'est égal à 2*spl-1 car first_part fait spl éléments et second_part fait spl-1 éléments. 
k = 2 * spl - 1

# Initialiser une liste 'dp' de taille k.
# La liste 'dp' commence par un 0 suivi de (k-1) fois la valeur 1.
# C'est-à-dire, dp[0]=0 et dp[1]=dp[2]=...=dp[k-1]=1.
dp = [0] + [1] * (k - 1)

# Démarre une boucle qui va s'exécuter m fois, en incrémentant i à chaque itération de la boucle.
for i in range(m):

    # Initialiser une nouvelle liste dp2 de taille k, contenant uniquement des 0.
    # Cette liste va contenir les nouveaux calculs pour l'itération courante de la boucle.
    dp2 = [0] * k

    # Boucler sur les positions j de 1 à k-1 (inclus).
    for j in range(1, k):

        # Calcul intermédiaire :
        # - dp2[j-1] : Le terme calculé précédemment, permet un cumul (dp2 est censé représenter des totaux accumulés).
        # - dp[k-j] : Un élément bien particulier de dp, calculé à partir de l'indice k-j.
        # - (f[j] - f[j-1]) : Différence entre deux valeurs consécutives de la liste f.
        # - On multiplie dp[k-j] par (f[j] - f[j-1]).
        # - On additionne cela à dp2[j-1].
        # - Le tout modulo Mod, pour rester dans les bornes d'entiers et respecter des contraintes algorithmiques.
        dp2[j] = (dp2[j-1] + dp[k-j] * (f[j] - f[j-1])) % Mod

    # À la fin de cette boucle imbriquée, on prépare dp pour l'itération suivante de la boucle principale 
    # en écrasant la référence précédente avec la nouvelle liste calculée dp2.
    dp = dp2

# Après avoir exécuté la boucle principale m fois, le résultat final se trouve dans la dernière valeur de dp (dp[k-1]).
# On affiche ce résultat avec print(). Cela donnera la réponse au problème.
print(dp[k-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Pr' (ID: 2284)
  → Token d'amorce (pas de prédiction)

Token 2: 'endre' (ID: 9574)
  → Token d'amorce (pas de prédiction)

Token 3: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02576102688908577
    2. ' un' → logprob: -3.900761127471924
    3. '_' → logprob: -6.400761127471924
    4. ' en' → logprob: -7.025761127471924
    5. ' la' → logprob: -7.150761127471924
    6. ' une' → logprob: -7.275761127471924
    7. ' le' → logprob: -8.150760650634766
    8. 'un' → logprob: -8.275760650634766
    9. ' ' → logprob: -9.275760650634766
    10. ' soin' → logprob: -9.650760650634766

Token 4: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.10582737624645233
    2. ' ent' → logprob: -2.8558273315429688
    3. ' ' → logprob: -3.6058273315429688
    4. 'ent' → logprob: -5.730827331542969
    5. ' espaces' → logprob: -6.480827331542969
    6. 'n' → logprob: -6.605827331542969
    7. ' chiffres' → logprob: -6.730827331542969
    8. ' arguments' → logprob: -6.730827331542969
    9. ' variables' → logprob: -6.855827331542969
    10. 'nombre' → logprob: -6.980827331542969

Token 5: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.006626201327890158
    2. 'r' → logprob: -5.506626129150391
    3. 'ier' → logprob: -6.506626129150391
    4. 'ières' → logprob: -7.381626129150391
    5. '```' → logprob: -8.88162612915039
    6. 'ers' → logprob: -10.13162612915039
    7. 't' → logprob: -10.25662612915039
    8. 'ri' → logprob: -10.25662612915039
    9. 'i' → logprob: -10.25662612915039
    10. 'rée' → logprob: -10.50662612915039

Token 6: ' en' (ID: 469)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009575337171554565
    2. 'n' → logprob: -5.009575366973877
    3. 'x' → logprob: -6.134575366973877
    4. ',' → logprob: -7.884575366973877
    5. ' a' → logprob: -9.259574890136719
    6. 's' → logprob: -10.259574890136719
    7. '#' → logprob: -10.384574890136719
    8. 'e' → logprob: -10.384574890136719
    9. 'ent' → logprob: -10.384574890136719
    10. 'd' → logprob: -10.884574890136719

Token 7: ' entrée' (ID: 95590)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.041987981647253036
    2. 'input' → logprob: -3.416987895965576
    3. ' entrée' → logprob: -5.416987895965576
    4. 'entr' → logprob: -6.291987895965576
    5. ' input' → logprob: -7.041987895965576
    6. '```' → logprob: -8.291988372802734
    7. ''entrée' → logprob: -8.541988372802734
    8. '  ' → logprob: -8.541988372802734
    9. 'ent' → logprob: -9.166988372802734
    10. 'entrant' → logprob: -9.541988372802734

Token 8: ' sépar' (ID: 97160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1572478860616684
    2. 'n' → logprob: -2.40724778175354
    3. 'x' → logprob: -2.90724778175354
    4. '#' → logprob: -7.782248020172119
    5. 'e' → logprob: -9.032247543334961
    6. '```' → logprob: -9.032247543334961
    7. 'i' → logprob: -10.032247543334961
    8. 'ent' → logprob: -10.407247543334961
    9. 'nombre' → logprob: -11.282247543334961
    10. '`' → logprob: -11.282247543334961

Token 9: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0013589247828349471
    2. 'é' → logprob: -6.751358985900879
    3. 's' → logprob: -8.876358985900879
    4. 'es' → logprob: -10.751358985900879
    5. 'ès' → logprob: -11.376358985900879
    6. '```' → logprob: -12.001358985900879
    7. 'ément' → logprob: -12.501358985900879
    8. 'ées' → logprob: -13.001358985900879
    9. 'par' → logprob: -14.251358985900879
    10. 'ée' → logprob: -14.876358985900879

Token 10: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.06130797415971756
    2. ' par' → logprob: -3.436307907104492
    3. 's' → logprob: -4.186307907104492
    4. '_par' → logprob: -5.061307907104492
    5. ',' → logprob: -6.061307907104492
    6. '```' → logprob: -7.436307907104492
    7. '[' → logprob: -7.561307907104492
    8. ' ' → logprob: -7.686307907104492
    9. ':' → logprob: -8.311307907104492
    10. '(par' → logprob: -8.311307907104492

Token 11: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.05589646100997925
    2. ' un' → logprob: -3.930896520614624
    3. 'une' → logprob: -4.180896282196045
    4. ''un' → logprob: -4.305896282196045
    5. '```' → logprob: -6.555896282196045
    6. ''' → logprob: -6.805896282196045
    7. '_' → logprob: -7.430896282196045
    8. '_un' → logprob: -7.555896282196045
    9. ' ' → logprob: -7.555896282196045
    10. 'des' → logprob: -8.055896759033203

Token 12: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.11363450437784195
    2. ' espace' → logprob: -3.7386345863342285
    3. 'esp' → logprob: -3.9886345863342285
    4. 'space' → logprob: -4.3636345863342285
    5. '_' → logprob: -4.4886345863342285
    6. 's' → logprob: -4.4886345863342285
    7. ''espace' → logprob: -4.4886345863342285
    8. ',' → logprob: -5.1136345863342285
    9. '```' → logprob: -5.2386345863342285
    10. '\n' → logprob: -5.9886345863342285

Token 13: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.35897111892700195
    2. 'n' → logprob: -1.858971118927002
    3. 'x' → logprob: -2.108971118927002
    4. '```' → logprob: -3.983971118927002
    5. '`' → logprob: -5.608971118927002
    6. 'e' → logprob: -7.358971118927002
    7. 'ent' → logprob: -7.608971118927002
    8. 'i' → logprob: -8.108970642089844
    9. '``' → logprob: -8.108970642089844
    10. 'input' → logprob: -8.608970642089844

Token 14: ' puis' (ID: 18766)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1784479022026062
    2. 'x' → logprob: -2.303447961807251
    3. 'n' → logprob: -2.803447961807251
    4. 'input' → logprob: -6.928447723388672
    5. '```' → logprob: -7.928447723388672
    6. 'i' → logprob: -8.053447723388672
    7. 'v' → logprob: -8.178447723388672
    8. 'e' → logprob: -8.678447723388672
    9. 'b' → logprob: -8.928447723388672
    10. 'val' → logprob: -9.053447723388672

Token 15: ' les' (ID: 1341)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0293092727661133
    2. 's' → logprob: -1.7793092727661133
    3. 'n' → logprob: -2.2793092727661133
    4. 'input' → logprob: -2.2793092727661133
    5. 'a' → logprob: -2.6543092727661133
    6. 'print' → logprob: -2.9043092727661133
    7. '```' → logprob: -3.6543092727661133
    8. 'val' → logprob: -3.7793092727661133
    9. ' input' → logprob: -4.029309272766113
    10. '#' → logprob: -4.904309272766113

Token 16: ' convertir' (ID: 79223)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5713761448860168
    2. 's' → logprob: -1.446376085281372
    3. ' =' → logprob: -1.946376085281372
    4. 'a' → logprob: -3.446376085281372
    5. '+' → logprob: -5.571376323699951
    6. '#' → logprob: -5.571376323699951
    7. 'n' → logprob: -5.946376323699951
    8. 'print' → logprob: -6.196376323699951
    9. ',' → logprob: -6.321376323699951
    10. 'x' → logprob: -6.821376323699951

Token 17: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.4981069564819336
    2. 'x' → logprob: -2.1231069564819336
    3. 'i' → logprob: -2.1231069564819336
    4. ',' → logprob: -2.3731069564819336
    5. 'e' → logprob: -2.4981069564819336
    6. 'a' → logprob: -2.6231069564819336
    7. 's' → logprob: -2.6231069564819336
    8. '`' → logprob: -3.2481069564819336
    9. 'n' → logprob: -3.2481069564819336
    10. ' en' → logprob: -3.4981069564819336

Token 18: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.4917234480381012
    2. 'int' → logprob: -1.2417234182357788
    3. ' int' → logprob: -2.9917235374450684
    4. ' ent' → logprob: -3.9917235374450684
    5. '```' → logprob: -4.116723537445068
    6. ' des' → logprob: -5.241723537445068
    7. 'n' → logprob: -5.991723537445068
    8. ' nombres' → logprob: -6.116723537445068
    9. 'a' → logprob: -7.116723537445068
    10. ' ' → logprob: -7.491723537445068

Token 19: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.004253388848155737
    2. 'i' → logprob: -6.379253387451172
    3. 'ier' → logprob: -7.004253387451172
    4. '```' → logprob: -7.254253387451172
    5. 't' → logprob: -7.629253387451172
    6. 'ières' → logprob: -9.504253387451172
    7. 'e' → logprob: -9.629253387451172
    8. 'r' → logprob: -9.629253387451172
    9. '   ' → logprob: -10.004253387451172
    10. 'ière' → logprob: -10.629253387451172

Token 20: ' grâce' (ID: 31589)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7629260420799255
    2. 'a' → logprob: -1.2629261016845703
    3. 'n' → logprob: -1.5129261016845703
    4. 'i' → logprob: -4.26292610168457
    5. '```' → logprob: -4.88792610168457
    6. 'e' → logprob: -5.26292610168457
    7. '`' → logprob: -7.13792610168457
    8. 'ent' → logprob: -7.76292610168457
    9. 'v' → logprob: -7.76292610168457
    10. 'input' → logprob: -8.01292610168457

Token 21: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3184707462787628
    2. 'à' → logprob: -1.4434707164764404
    3. 'au' → logprob: -4.3184709548950195
    4. ''à' → logprob: -4.8184709548950195
    5. 'aux' → logprob: -5.4434709548950195
    6. ' au' → logprob: -5.6934709548950195
    7. '’à' → logprob: -6.5684709548950195
    8. '```' → logprob: -6.5684709548950195
    9. ')' → logprob: -7.3184709548950195
    10. '`' → logprob: -7.5684709548950195

Token 22: ' map' (ID: 4014)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.218677043914795
    2. 'l' → logprob: -1.468677043914795
    3. 'la' → logprob: -1.843677043914795
    4. 'input' → logprob: -2.218677043914795
    5. 'int' → logprob: -2.718677043914795
    6. ' la' → logprob: -2.843677043914795
    7. ' split' → logprob: -3.718677043914795
    8. 'map' → logprob: -3.968677043914795
    9. ' input' → logprob: -3.968677043914795
    10. ' l' → logprob: -5.343677043914795

Token 23: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40776219964027405
    2. 'input' → logprob: -1.9077621698379517
    3. 'int' → logprob: -2.282762289047241
    4. '(int' → logprob: -3.907762289047241
    5. 'i' → logprob: -4.032762050628662
    6. 'x' → logprob: -4.782762050628662
    7. 'b' → logprob: -4.782762050628662
    8. 'a' → logprob: -5.282762050628662
    9. '```' → logprob: -5.282762050628662
    10. 'ent' → logprob: -5.657762050628662

Token 24: ' L' (ID: 451)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2588064670562744
    2. 'input' → logprob: -1.2588064670562744
    3. 'int' → logprob: -1.7588064670562744
    4. 'a' → logprob: -2.5088064670562744
    5. 'i' → logprob: -3.0088064670562744
    6. 'b' → logprob: -3.1338064670562744
    7. 'n' → logprob: -4.133806228637695
    8. 'ent' → logprob: -4.133806228637695
    9. '(' → logprob: -4.758806228637695
    10. '```' → logprob: -4.883806228637695

Token 25: ''utilisateur' (ID: 140803)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0040786266326904
    2. 'i' → logprob: -1.3790786266326904
    3. 'input' → logprob: -2.1290786266326904
    4. 'a' → logprob: -2.3790786266326904
    5. 'e' → logprob: -2.6290786266326904
    6. 'iste' → logprob: -3.7540786266326904
    7. '```' → logprob: -4.1290788650512695
    8. 'n' → logprob: -4.5040788650512695
    9. 'x' → logprob: -4.7540788650512695
    10. 'es' → logprob: -4.7540788650512695

Token 26: ' sais' (ID: 30010)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.556366503238678
    2. 's' → logprob: -2.306366443634033
    3. ' =' → logprob: -2.931366443634033
    4. '[' → logprob: -3.306366443634033
    5. '=' → logprob: -3.306366443634033
    6. '()' → logprob: -3.681366443634033
    7. ' (' → logprob: -3.806366443634033
    8. ')' → logprob: -3.806366443634033
    9. 'input' → logprob: -3.806366443634033
    10. ',' → logprob: -4.306366443634033

Token 27: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00044103997061029077
    2. 'e' → logprob: -8.37544059753418
    3. '```' → logprob: -9.50044059753418
    4. '<t' → logprob: -9.62544059753418
    5. 'it' → logprob: -11.00044059753418
    6. 'т' → logprob: -11.75044059753418
    7. '#' → logprob: -12.00044059753418
    8. '`t' → logprob: -12.50044059753418
    9. ' t' → logprob: -12.62544059753418
    10. '_t' → logprob: -12.62544059753418

Token 28: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5651234984397888
    2. 'input' → logprob: -1.1901235580444336
    3. 'int' → logprob: -2.8151235580444336
    4. 's' → logprob: -4.815123558044434
    5. '()' → logprob: -5.440123558044434
    6. 'l' → logprob: -5.565123558044434
    7. '(input' → logprob: -5.565123558044434
    8. '"' → logprob: -5.690123558044434
    9. 'ent' → logprob: -5.690123558044434
    10. ''' → logprob: -5.815123558044434

Token 29: ' valeur' (ID: 41664)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3322593569755554
    2. 'input' → logprob: -1.8322594165802002
    3. 'chaine' → logprob: -3.8322594165802
    4. 'ent' → logprob: -3.9572594165802
    5. 'val' → logprob: -4.707259178161621
    6. 'n' → logprob: -4.707259178161621
    7. '"' → logprob: -4.957259178161621
    8. ' ' → logprob: -5.082259178161621
    9. ''' → logprob: -5.082259178161621
    10. 's' → logprob: -5.332259178161621

Token 30: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010189731605350971
    2. 's' → logprob: -6.510189533233643
    3. ',' → logprob: -6.635189533233643
    4. '(
' → logprob: -6.635189533233643
    5. '()' → logprob: -7.010189533233643
    6. '=' → logprob: -7.135189533233643
    7. 'a' → logprob: -7.135189533233643
    8. 'x' → logprob: -7.635189533233643
    9. 'e' → logprob: -7.885189533233643
    10. 'input' → logprob: -8.0101900100708

Token 31: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15252286195755005
    2. 'x' → logprob: -3.2775228023529053
    3. ' a' → logprob: -3.4025228023529053
    4. 's' → logprob: -3.9025228023529053
    5. 'de' → logprob: -4.152523040771484
    6. 'n' → logprob: -4.277523040771484
    7. 'l' → logprob: -4.777523040771484
    8. ' x' → logprob: -5.777523040771484
    9. ' la' → logprob: -5.902523040771484
    10. ' l' → logprob: -6.652523040771484

Token 32: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006439301068894565
    2. '```' → logprob: -8.750643730163574
    3. ',' → logprob: -9.000643730163574
    4. 'x' → logprob: -9.625643730163574
    5. '=' → logprob: -9.625643730163574
    6. 'i' → logprob: -10.000643730163574
    7. ' =' → logprob: -10.250643730163574
    8. '`' → logprob: -10.250643730163574
    9. 'e' → logprob: -10.500643730163574
    10. '(' → logprob: -10.875643730163574

Token 33: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.6014165878295898
    2. 'm' → logprob: -1.1014165878295898
    3. ' k' → logprob: -2.60141658782959
    4. 'k' → logprob: -3.72641658782959
    5. ' n' → logprob: -4.97641658782959
    6. 'n' → logprob: -5.85141658782959
    7. ' p' → logprob: -6.47641658782959
    8. 'a' → logprob: -6.60141658782959
    9. 'b' → logprob: -7.22641658782959
    10. 'r' → logprob: -7.22641658782959

Token 34: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0029591619968414307
    2. '```' → logprob: -6.377959251403809
    3. 'x' → logprob: -7.752959251403809
    4. '`' → logprob: -8.252959251403809
    5. ' n' → logprob: -9.127959251403809
    6. ',' → logprob: -9.127959251403809
    7. '``' → logprob: -10.127959251403809
    8. ' =' → logprob: -10.377959251403809
    9. '=' → logprob: -10.627959251403809
    10. '\n' → logprob: -10.627959251403809

Token 35: ' que' (ID: 661)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007435539271682501
    2. ' n' → logprob: -5.007435321807861
    3. ' =' → logprob: -8.25743579864502
    4. 'input' → logprob: -9.13243579864502
    5. '```' → logprob: -9.25743579864502
    6. '`' → logprob: -10.25743579864502
    7. 'x' → logprob: -10.38243579864502
    8. 'a' → logprob: -10.50743579864502
    9. '  
' → logprob: -10.75743579864502
    10. '\n' → logprob: -11.25743579864502

Token 36: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0069589614868164
    2. 's' → logprob: -1.5069589614868164
    3. ' =' → logprob: -2.0069589614868164
    4. ''' → logprob: -3.0069589614868164
    5. ' on' → logprob: -3.0069589614868164
    6. ' l' → logprob: -3.6319589614868164
    7. ' s' → logprob: -3.6319589614868164
    8. ' n' → logprob: -3.8819589614868164
    9. '`' → logprob: -4.756958961486816
    10. ' ,' → logprob: -5.006958961486816

Token 37: ''on' (ID: 25812)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12309247255325317
    2. ''on' → logprob: -3.4980924129486084
    3. 'ui' → logprob: -3.9980924129486084
    4. 'u' → logprob: -3.9980924129486084
    5. ''' → logprob: -4.3730926513671875
    6. 'on' → logprob: -4.3730926513671875
    7. ' on' → logprob: -5.3730926513671875
    8. 'l' → logprob: -5.3730926513671875
    9. 'n' → logprob: -5.4980926513671875
    10. 'a' → logprob: -6.2480926513671875

Token 38: ' utilise' (ID: 70283)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.132333517074585
    2. 'split' → logprob: -1.257333517074585
    3. 'do' → logprob: -2.882333517074585
    4. 've' → logprob: -3.132333517074585
    5. 'met' → logprob: -3.757333517074585
    6. 'pr' → logprob: -3.757333517074585
    7. 'aff' → logprob: -4.007333755493164
    8. 'convert' → logprob: -4.007333755493164
    9. 'sé' → logprob: -4.132333755493164
    10. 'don' → logprob: -4.382333755493164

Token 39: ' dans' (ID: 2671)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004745418205857277
    2. '=' → logprob: -6.5047454833984375
    3. 'x' → logprob: -6.7547454833984375
    4. ':' → logprob: -8.004745483398438
    5. ' =' → logprob: -8.004745483398438
    6. '`' → logprob: -8.129745483398438
    7. '```' → logprob: -8.129745483398438
    8. ',' → logprob: -8.629745483398438
    9. ' n' → logprob: -8.879745483398438
    10. 'm' → logprob: -9.254745483398438

Token 40: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0152215957641602
    2. 'n' → logprob: -1.6402215957641602
    3. ' input' → logprob: -1.7652215957641602
    4. 'la' → logprob: -2.51522159576416
    5. ' n' → logprob: -2.64022159576416
    6. ' la' → logprob: -2.76522159576416
    7. 'l' → logprob: -4.01522159576416
    8. 'range' → logprob: -4.76522159576416
    9. '```' → logprob: -5.14022159576416
    10. '`' → logprob: -5.14022159576416

Token 41: ' suite' (ID: 13800)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47261953353881836
    2. ' input' → logprob: -1.2226195335388184
    3. 'n' → logprob: -2.9726195335388184
    4. ' code' → logprob: -4.597619533538818
    5. 'code' → logprob: -5.097619533538818
    6. 's' → logprob: -5.597619533538818
    7. 'range' → logprob: -5.972619533538818
    8. ' n' → logprob: -6.722619533538818
    9. 'entrée' → logprob: -7.222619533538818
    10. 'split' → logprob: -7.347619533538818

Token 42: ' du' (ID: 1462)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002319071936653927
    2. '```' → logprob: -9.500231742858887
    3. '(' → logprob: -9.875231742858887
    4. '`' → logprob: -10.750231742858887
    5. ' n' → logprob: -10.750231742858887
    6. '(n' → logprob: -11.125231742858887
    7. '\n' → logprob: -11.750231742858887
    8. 'x' → logprob: -11.750231742858887
    9. 'a' → logprob: -12.250231742858887
    10. 'm' → logprob: -12.250231742858887

Token 43: ' programme' (ID: 18190)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.3160215616226196
    2. 'code' → logprob: -1.3160215616226196
    3. ' code' → logprob: -1.3160215616226196
    4. ' input' → logprob: -1.6910215616226196
    5. 'programme' → logprob: -5.81602144241333
    6. ' programme' → logprob: -5.94102144241333
    7. 'program' → logprob: -6.06602144241333
    8. 'texte' → logprob: -6.69102144241333
    9. ' program' → logprob: -7.69102144241333
    10. 'range' → logprob: -8.316021919250488

Token 44: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009007352404296398
    2. 'x' → logprob: -5.884007453918457
    3. '```' → logprob: -6.384007453918457
    4. 'a' → logprob: -7.259007453918457
    5. '`' → logprob: -7.259007453918457
    6. ' =' → logprob: -7.509007453918457
    7. ' n' → logprob: -7.759007453918457
    8. 'input' → logprob: -8.009007453918457
    9. 'ent' → logprob: -8.259007453918457
    10. 'int' → logprob: -8.759007453918457

Token 45: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0012668977724388242
    2. '```' → logprob: -6.876266956329346
    3. '`' → logprob: -9.001266479492188
    4. ':' → logprob: -10.376266479492188
    5. 'a' → logprob: -10.751266479492188
    6. 'x' → logprob: -11.251266479492188
    7. ',' → logprob: -11.501266479492188
    8. '``' → logprob: -11.751266479492188
    9. '(' → logprob: -11.876266479492188
    10. '\n' → logprob: -12.626266479492188

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004294771933928132
    2. ' ,' → logprob: -8.250429153442383
    3. ',m' → logprob: -8.875429153442383
    4. ',n' → logprob: -10.875429153442383
    5. ',v' → logprob: -12.875429153442383
    6. ',s' → logprob: -13.125429153442383
    7. ',b' → logprob: -13.875429153442383
    8. ',int' → logprob: -14.125429153442383
    9. ',k' → logprob: -14.750429153442383
    10. ',j' → logprob: -14.875429153442383

Token 47: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.029750484973192215
    2. ' m' → logprob: -3.5297505855560303
    3. '	m' → logprob: -20.15475082397461
    4. 'ｍ' → logprob: -20.40475082397461
    5. '*m' → logprob: -20.52975082397461
    6. ' ' → logprob: -20.65475082397461
    7. '_m' → logprob: -21.15475082397461
    8. ' ' → logprob: -21.40475082397461
    9. 'mp' → logprob: -21.40475082397461
    10. 'м' → logprob: -21.65475082397461

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759631395339966
    2. '=' → logprob: -0.8259631395339966
    3. '=input' → logprob: -11.075963020324707
    4. '=int' → logprob: -12.575963020324707
    5. ',' → logprob: -12.700963020324707
    6. ')' → logprob: -14.950963020324707
    7. '=
' → logprob: -15.075963020324707
    8. ' =
' → logprob: -15.700963020324707
    9. '=list' → logprob: -15.825963020324707
    10. '=n' → logprob: -15.825963020324707

Token 49: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07889088988304138
    2. ' map' → logprob: -2.578890800476074
    3. 'list' → logprob: -14.078890800476074
    4. 'int' → logprob: -15.453890800476074
    5. '(map' → logprob: -17.07889175415039
    6. 'input' → logprob: -17.32889175415039
    7. '	map' → logprob: -17.45389175415039
    8. 'tuple' → logprob: -17.45389175415039
    9. ' list' → logprob: -17.82889175415039
    10. 'm' → logprob: -18.07889175415039

Token 50: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03417232632637024
    2. '(' → logprob: -3.784172296524048
    3. '(input' → logprob: -4.534172534942627
    4. '(str' → logprob: -9.034172058105469
    5. ' (' → logprob: -12.409172058105469
    6. '(lambda' → logprob: -13.284172058105469
    7. '(list' → logprob: -13.534172058105469
    8. 'int' → logprob: -13.659172058105469
    9. '(
' → logprob: -13.909172058105469
    10. '<int' → logprob: -14.159172058105469

Token 51: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04672754555940628
    2. '(input' → logprob: -3.1717276573181152
    3. ')' → logprob: -6.046727657318115
    4. ',input' → logprob: -7.171727657318115
    5. ' input' → logprob: -7.671727657318115
    6. ',' → logprob: -9.546727180480957
    7. '(' → logprob: -10.296727180480957
    8. '	input' → logprob: -12.921727180480957
    9. ')(' → logprob: -13.046727180480957
    10. '=input' → logprob: -13.046727180480957

Token 52: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.7610454708337784e-05
    2. ' input' → logprob: -10.500027656555176
    3. '(input' → logprob: -16.75002670288086
    4. '<input' → logprob: -19.62502670288086
    5. '[input' → logprob: -20.87502670288086
    6. '=input' → logprob: -21.00002670288086
    7. '	input' → logprob: -21.37502670288086
    8. ',input' → logprob: -21.87502670288086
    9. ' ' → logprob: -22.50002670288086
    10. '```' → logprob: -22.62502670288086

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.25812870264053345
    2. '())' → logprob: -2.0081286430358887
    3. '()' → logprob: -2.5081286430358887
    4. '('' → logprob: -5.008128643035889
    5. '("' → logprob: -6.008128643035889
    6. '(' → logprob: -6.883128643035889
    7. ')' → logprob: -8.508129119873047
    8. '(()' → logprob: -8.758129119873047
    9. '("("' → logprob: -8.758129119873047
    10. '("")' → logprob: -8.883129119873047

Token 54: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.88418151892256e-05
    2. 'strip' → logprob: -9.750059127807617
    3. ' split' → logprob: -14.750059127807617
    4. 'rstrip' → logprob: -15.875059127807617
    5. 'spl' → logprob: -18.125059127807617
    6. '(split' → logprob: -18.250059127807617
    7. '.split' → logprob: -19.250059127807617
    8. 'read' → logprob: -20.500059127807617
    9. '_split' → logprob: -20.625059127807617
    10. ')' → logprob: -20.875059127807617

Token 55: '('' (ID: 706)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6951225996017456
    2. '()))' → logprob: -0.6951225996017456
    3. '()' → logprob: -6.820122718811035
    4. '))' → logprob: -7.320122718811035
    5. ')' → logprob: -8.695122718811035
    6. '()))
' → logprob: -10.570122718811035
    7. '(' → logprob: -11.695122718811035
    8. '())
' → logprob: -12.570122718811035
    9. ' ())' → logprob: -12.820122718811035
    10. '()))

' → logprob: -12.945122718811035

Token 56: ' '' (ID: 461)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.28509801626205444
    2. ' '' → logprob: -1.4100980758666992
    3. '))' → logprob: -5.785098075866699
    4. ''' → logprob: -8.2850980758667
    5. ')' → logprob: -8.4100980758667
    6. ' ))' → logprob: -8.5350980758667
    7. '')))' → logprob: -9.7850980758667
    8. '')' → logprob: -10.0350980758667
    9. ' "))' → logprob: -10.1600980758667
    10. ' ')' → logprob: -10.2850980758667

Token 57: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001998704159632325
    2. ')' → logprob: -6.6269989013671875
    3. ')))' → logprob: -7.3769989013671875
    4. ''))' → logprob: -10.126998901367188
    5. '()))' → logprob: -12.876998901367188
    6. ' ))' → logprob: -13.376998901367188
    7. '))
' → logprob: -14.001998901367188
    8. '"))' → logprob: -14.626998901367188
    9. '))))' → logprob: -15.001998901367188
    10. '()' → logprob: -15.001998901367188

Token 58: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7572713494300842
    2. '<|end|>' → logprob: -1.3822712898254395
    3. '\n' → logprob: -2.0072712898254395
    4. '#' → logprob: -2.5072712898254395
    5. ')' → logprob: -3.3822712898254395
    6. '  
' → logprob: -4.6322712898254395
    7. ':' → logprob: -4.7572712898254395
    8. ' ' → logprob: -6.0072712898254395
    9. '<|end|>' → logprob: -6.2572712898254395
    10. 'print' → logprob: -6.3822712898254395

Token 60: ' Par' (ID: 3371)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' exemple' (ID: 26320)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2118078470230103
    2. ' défaut' → logprob: -1.3368078470230103
    3. 'fois' → logprob: -2.7118077278137207
    4. 'd' → logprob: -2.7118077278137207
    5. 'am' → logprob: -3.2118077278137207
    6. ' la' → logprob: -3.7118077278137207
    7. 'ent' → logprob: -3.8368077278137207
    8. 'default' → logprob: -3.9618077278137207
    9. 't' → logprob: -4.086807727813721
    10. 'a' → logprob: -4.211807727813721

Token 62: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2445337176322937
    2. '<|end|>' → logprob: -1.6195337772369385
    3. '<|end|>' → logprob: -5.244533538818359
    4. ' ' → logprob: -5.994533538818359
    5. ':' → logprob: -6.119533538818359
    6. '
' → logprob: -6.494533538818359
    7. '#' → logprob: -6.619533538818359
    8. 'n' → logprob: -6.869533538818359
    9. ',' → logprob: -7.369533538818359
    10. ' )' → logprob: -7.619533538818359

Token 63: ' si' (ID: 1784)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5279235243797302
    2. '2' → logprob: -2.027923583984375
    3. ' ' → logprob: -2.027923583984375
    4. '4' → logprob: -2.777923583984375
    5. '5' → logprob: -2.777923583984375
    6. '1' → logprob: -5.027923583984375
    7. '10' → logprob: -5.277923583984375
    8. '"' → logprob: -5.402923583984375
    9. ')' → logprob: -6.027923583984375
    10. 'input' → logprob: -6.652923583984375

Token 64: ' on' (ID: 402)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02343321219086647
    2. ' l' → logprob: -4.273433208465576
    3. 'on' → logprob: -5.523433208465576
    4. 'tu' → logprob: -6.398433208465576
    5. 'vous' → logprob: -6.648433208465576
    6. 'user' → logprob: -7.523433208465576
    7. 'n' → logprob: -7.773433208465576
    8. ' vous' → logprob: -8.023433685302734
    9. ' on' → logprob: -8.273433685302734
    10. '1' → logprob: -9.148433685302734

Token 65: ' entre' (ID: 3853)
  Prédit: 've'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 've' → logprob: -0.8293514847755432
    2. 's' → logprob: -1.5793514251708984
    3. 'a' → logprob: -1.8293514251708984
    4. 'sou' → logprob: -3.3293514251708984
    5. ' veut' → logprob: -4.079351425170898
    6. 'entre' → logprob: -4.204351425170898
    7. 'veux' → logprob: -4.204351425170898
    8. 'n' → logprob: -4.329351425170898
    9. 'pr' → logprob: -4.329351425170898
    10. 'ent' → logprob: -4.704351425170898

Token 66: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.25277212262153625
    2. '10' → logprob: -2.377772092819214
    3. ' "' → logprob: -3.502772092819214
    4. ''' → logprob: -3.627772092819214
    5. ' ' → logprob: -4.002772331237793
    6. '2' → logprob: -4.502772331237793
    7. '12' → logprob: -4.752772331237793
    8. '1' → logprob: -4.752772331237793
    9. '3' → logprob: -4.877772331237793
    10. '4' → logprob: -5.627772331237793

Token 67: '10' (ID: 702)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.37657850980758667
    2. '5' → logprob: -1.7515785694122314
    3. '10' → logprob: -2.2515785694122314
    4. '4' → logprob: -3.6265785694122314
    5. '2' → logprob: -5.376578330993652
    6. ' ' → logprob: -6.751578330993652
    7. '12' → logprob: -6.876578330993652
    8. '1' → logprob: -7.501578330993652
    9. '7' → logprob: -7.626578330993652
    10. '"' → logprob: -7.876578330993652

Token 68: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012186671607196331
    2. '20' → logprob: -4.512186527252197
    3. '10' → logprob: -7.387186527252197
    4. '12' → logprob: -8.637187004089355
    5. '15' → logprob: -9.512187004089355
    6. ' "' → logprob: -10.137187004089355
    7. '23' → logprob: -10.512187004089355
    8. '30' → logprob: -10.637187004089355
    9. '18' → logprob: -11.137187004089355
    10. '16' → logprob: -11.137187004089355

Token 69: '3' (ID: 18)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.11722608655691147
    2. '5' → logprob: -2.3672261238098145
    3. '15' → logprob: -4.2422261238098145
    4. '3' → logprob: -7.1172261238098145
    5. '25' → logprob: -7.6172261238098145
    6. '12' → logprob: -7.8672261238098145
    7. '50' → logprob: -8.617225646972656
    8. ' ' → logprob: -8.867225646972656
    9. '2' → logprob: -8.992225646972656
    10. '7' → logprob: -9.117225646972656

Token 70: '",' (ID: 672)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.029112018644809723
    2. ')' → logprob: -4.404111862182617
    3. '"' → logprob: -4.904111862182617
    4. ')"' → logprob: -5.654111862182617
    5. '"))' → logprob: -5.654111862182617
    6. ')")' → logprob: -6.404111862182617
    7. ' )' → logprob: -8.779111862182617
    8. ' ")' → logprob: -9.654111862182617
    9. '))' → logprob: -10.029111862182617
    10. '')' → logprob: -10.154111862182617

Token 71: ' alors' (ID: 17971)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5043323636054993
    2. ' n' → logprob: -1.6293323040008545
    3. 'n' → logprob: -2.7543323040008545
    4. ' les' → logprob: -3.6293323040008545
    5. 'on' → logprob: -3.7543323040008545
    6. ' la' → logprob: -3.8793323040008545
    7. ' cela' → logprob: -4.004332542419434
    8. ' le' → logprob: -4.879332542419434
    9. 'la' → logprob: -4.879332542419434
    10. 'cela' → logprob: -5.254332542419434

Token 72: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.043057769536972046
    2. ' n' → logprob: -3.168057680130005
    3. ' ' → logprob: -11.168057441711426
    4. ' on' → logprob: -11.793057441711426
    5. '`' → logprob: -11.918057441711426
    6. ' ' → logprob: -12.668057441711426
    7. '	n' → logprob: -12.668057441711426
    8. 'la' → logprob: -12.793057441711426
    9. '```' → logprob: -12.793057441711426
    10. '(n' → logprob: -13.043057441711426

Token 73: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0970972552895546
    2. ' sera' → logprob: -3.097097158432007
    3. ' ,' → logprob: -3.847097158432007
    4. ' =' → logprob: -4.597097396850586
    5. '=' → logprob: -6.222097396850586
    6. ' vaut' → logprob: -6.597097396850586
    7. ' ' → logprob: -6.722097396850586
    8. ' m' → logprob: -6.722097396850586
    9. ',m' → logprob: -6.722097396850586
    10. 'm' → logprob: -6.847097396850586

Token 74: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '1' → logprob: -16.6250057220459
    4. 'n' → logprob: -17.6250057220459
    5. '```' → logprob: -19.7500057220459
    6. '=' → logprob: -19.8750057220459
    7. '۱۰' → logprob: -20.3750057220459
    8. '  ' → logprob: -21.1250057220459
    9. '100' → logprob: -21.2500057220459
    10. '    ' → logprob: -21.2500057220459

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003627269994467497
    2. ' ,' → logprob: -6.253627300262451
    3. 'm' → logprob: -7.003627300262451
    4. ',m' → logprob: -8.128626823425293
    5. ' m' → logprob: -8.253626823425293
    6. ' et' → logprob: -9.253626823425293
    7. ')' → logprob: -9.503626823425293
    8. ' and' → logprob: -11.003626823425293
    9. ',
' → logprob: -11.378626823425293
    10. '<|end|>' → logprob: -11.628626823425293

Token 76: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.11282837390899658
    2. 'm' → logprob: -2.237828254699707
    3. ' ' → logprob: -13.237828254699707
    4. 'et' → logprob: -13.737828254699707
    5. ' ' → logprob: -13.862828254699707
    6. 'n' → logprob: -14.362828254699707
    7. ' n' → logprob: -14.737828254699707
    8. '    ' → logprob: -15.237828254699707
    9. 's' → logprob: -15.362828254699707
    10. ' and' → logprob: -15.737828254699707

Token 77: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519344687461853
    2. ' =' → logprob: -1.50193452835083
    3. '=int' → logprob: -13.626934051513672
    4. ' ' → logprob: -13.876934051513672
    5. '=

' → logprob: -14.001934051513672
    6. '=
' → logprob: -14.251934051513672
    7. ' =
' → logprob: -14.501934051513672
    8. ',' → logprob: -14.751934051513672
    9. '<|end|>' → logprob: -15.126934051513672
    10. '=m' → logprob: -16.126934051513672

Token 78: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -19.87500762939453
    4. '۳' → logprob: -20.87500762939453
    5. '10' → logprob: -21.12500762939453
    6. '' → logprob: -21.25000762939453
    7. '３' → logprob: -21.50000762939453
    8. ' ' → logprob: -21.50000762939453
    9. '³' → logprob: -22.50000762939453
    10. '٣' → logprob: -22.75000762939453

Token 79: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0181734561920166
    2. '<|end|>' → logprob: -1.1431734561920166
    3. '\n' → logprob: -1.3931734561920166
    4. ')' → logprob: -3.1431734561920166
    5. '#' → logprob: -4.5181732177734375
    6. '<|end|>' → logprob: -5.6431732177734375
    7. '```' → logprob: -5.7681732177734375
    8. '\' → logprob: -5.8931732177734375
    9. '  
' → logprob: -6.5181732177734375
    10. '.' → logprob: -6.8931732177734375

Token 80: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7081599235534668
    2. '<|end|>' → logprob: -1.0831599235534668
    3. '\n' → logprob: -2.833159923553467
    4. ' ' → logprob: -3.208159923553467
    5. '#' → logprob: -3.708159923553467
    6. ':' → logprob: -4.333159923553467
    7. '  
' → logprob: -4.958159923553467
    8. ' 
' → logprob: -5.208159923553467
    9. ')' → logprob: -5.458159923553467
    10. '```' → logprob: -5.833159923553467

Token 81: ' Dé' (ID: 27247)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4532484710216522
    2. 'result' → logprob: -1.9532485008239746
    3. 'for' → logprob: -2.2032485008239746
    4. 's' → logprob: -3.2032485008239746
    5. 'sum' → logprob: -3.9532485008239746
    6. 'n' → logprob: -4.453248500823975
    7. ' #' → logprob: -4.828248500823975
    8. ' for' → logprob: -4.953248500823975
    9. 'print' → logprob: -5.328248500823975
    10. 'a' → logprob: -5.703248500823975

Token 82: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2792113125324249
    2. 'fin' → logprob: -1.6542112827301025
    3. 'fi' → logprob: -3.6542112827301025
    4. '#' → logprob: -3.7792112827301025
    5. 'fen' → logprob: -6.779211521148682
    6. 'com' → logprob: -7.779211521148682
    7. 'velop' → logprob: -8.029211044311523
    8. 'termin' → logprob: -8.529211044311523
    9. 'fa' → logprob: -9.029211044311523
    10. 'fn' → logprob: -9.154211044311523

Token 83: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.11302929371595383
    2. 'r' → logprob: -2.4880292415618896
    3. '#' → logprob: -3.8630292415618896
    4. 'def' → logprob: -7.363029479980469
    5. 'nir' → logprob: -7.488029479980469
    6. 'tir' → logprob: -7.488029479980469
    7. 'er' → logprob: -8.238029479980469
    8. 'rir' → logprob: -8.613029479980469
    9. 'e' → logprob: -8.613029479980469
    10. '```' → logprob: -8.863029479980469

Token 84: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4017730951309204
    2. 'la' → logprob: -2.526772975921631
    3. ' une' → logprob: -2.651772975921631
    4. 'a' → logprob: -3.026772975921631
    5. 'une' → logprob: -3.151772975921631
    6. 'def' → logprob: -3.651772975921631
    7. ' un' → logprob: -4.776772975921631
    8. 'le' → logprob: -5.151772975921631
    9. 'un' → logprob: -5.151772975921631
    10. ' a' → logprob: -5.151772975921631

Token 85: ' constante' (ID: 49652)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.12207840383052826
    2. 'liste' → logprob: -2.3720784187316895
    3. 'def' → logprob: -4.2470784187316895
    4. 'f' → logprob: -6.4970784187316895
    5. ' liste' → logprob: -6.8720784187316895
    6. 'function' → logprob: -6.8720784187316895
    7. 'list' → logprob: -7.3720784187316895
    8. ' fonction' → logprob: -7.4970784187316895
    9. '#' → logprob: -7.6220784187316895
    10. 's' → logprob: -7.9970784187316895

Token 86: ' entière' (ID: 61583)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9049972891807556
    2. 'MAX' → logprob: -1.7799973487854004
    3. ' =' → logprob: -2.0299973487854004
    4. 'S' → logprob: -2.5299973487854004
    5. 'SPACE' → logprob: -3.0299973487854004
    6. 'PI' → logprob: -3.0299973487854004
    7. 'CON' → logprob: -3.6549973487854004
    8. ' N' → logprob: -4.1549973487854
    9. '=' → logprob: -4.2799973487854
    10. ' ' → logprob: -4.2799973487854

Token 87: ' Mod' (ID: 7191)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.7841999530792236
    2. 'N' → logprob: -1.1591999530792236
    3. 'PI' → logprob: -2.0341999530792236
    4. 'CON' → logprob: -2.7841999530792236
    5. 'K' → logprob: -4.1591997146606445
    6. '=' → logprob: -5.2841997146606445
    7. 'C' → logprob: -5.4091997146606445
    8. 'S' → logprob: -6.4091997146606445
    9. 'CONST' → logprob: -6.4091997146606445
    10. 'LIMIT' → logprob: -6.6591997146606445

Token 88: ' val' (ID: 1459)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010699956677854061
    2. '=' → logprob: -4.63569974899292
    3. 'ULO' → logprob: -7.88569974899292
    4. 'UL' → logprob: -8.135700225830078
    5. 'ULE' → logprob: -8.760700225830078
    6. ' ' → logprob: -10.510700225830078
    7. 'E' → logprob: -10.885700225830078
    8. ' =
' → logprob: -11.260700225830078
    9. ' ' → logprob: -11.510700225830078
    10. 'U' → logprob: -11.635700225830078

Token 89: 'ant' (ID: 493)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6445800065994263
    2. ' =' → logprob: -0.7695800065994263
    3. 'ULE' → logprob: -5.394579887390137
    4. 'E' → logprob: -5.644579887390137
    5. 'ule' → logprob: -6.269579887390137
    6. 'È' → logprob: -7.894579887390137
    7. 'e' → logprob: -8.019579887390137
    8. ' ' → logprob: -8.519579887390137
    9. '=int' → logprob: -8.769579887390137
    10. '=`' → logprob: -9.144579887390137

Token 90: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32850831747055054
    2. '100' → logprob: -1.4535083770751953
    3. '10' → logprob: -3.0785083770751953
    4. ' =' → logprob: -9.328508377075195
    5. '1' → logprob: -9.453508377075195
    6. '=' → logprob: -10.453508377075195
    7. '998' → logprob: -11.203508377075195
    8. '  ' → logprob: -12.703508377075195
    9. '(' → logprob: -12.828508377075195
    10. '```' → logprob: -13.453508377075195

Token 91: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1625443994998932
    2. '100' → logprob: -1.9125443696975708
    3. ' ' → logprob: -6.537544250488281
    4. '998' → logprob: -7.537544250488281
    5. '1' → logprob: -8.037544250488281
    6. '(' → logprob: -11.662544250488281
    7. '999' → logprob: -13.537544250488281
    8. 'int' → logprob: -14.287544250488281
    9. '```' → logprob: -14.287544250488281
    10. '2' → logprob: -14.537544250488281

Token 92: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.47435420751571655
    2. '0' → logprob: -1.9743542671203613
    3. '7' → logprob: -2.0993542671203613
    4. '6' → logprob: -3.7243542671203613
    5. '3' → logprob: -4.224354267120361
    6. ' **' → logprob: -4.349354267120361
    7. '9' → logprob: -4.474354267120361
    8. ' ' → logprob: -5.099354267120361
    9. '**
' → logprob: -5.349354267120361
    10. '2' → logprob: -5.474354267120361

Token 93: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.375
    3. '09' → logprob: -16.5
    4. ' ' → logprob: -17.125
    5. '``' → logprob: -19.25
    6. '8' → logprob: -20.375
    7. '10' → logprob: -21.0
    8. '4' → logprob: -21.125
    9. '6' → logprob: -21.125
    10. '**' → logprob: -21.125

Token 94: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013488073600456119
    2. ' +' → logprob: -7.001348972320557
    3. '7' → logprob: -7.876348972320557
    4. '+
' → logprob: -10.001348495483398
    5. '9' → logprob: -12.251348495483398
    6. '+

' → logprob: -12.876348495483398
    7. '```' → logprob: -13.251348495483398
    8. ' +
' → logprob: -14.001348495483398
    9. '+</' → logprob: -14.001348495483398
    10. 'plus' → logprob: -15.251348495483398

Token 95: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.500108141452074e-05
    2. '9' → logprob: -10.875035285949707
    3. ' ' → logprob: -11.250035285949707
    4. '+' → logprob: -12.750035285949707
    5. '```' → logprob: -16.37503433227539
    6. '1' → logprob: -18.25003433227539
    7. ' +' → logprob: -18.25003433227539
    8. '  ' → logprob: -19.18753433227539
    9. '07' → logprob: -19.56253433227539
    10. '   ' → logprob: -19.93753433227539

Token 96: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.704273118884885e-07
    2. '9' → logprob: -15.000000953674316
    3. '+' → logprob: -15.875000953674316
    4. ' ' → logprob: -16.0
    5. '```' → logprob: -17.5
    6. '1' → logprob: -20.3125
    7. '   ' → logprob: -20.5
    8. '07' → logprob: -20.875
    9. '' → logprob: -21.3125
    10. '  ' → logprob: -22.0

Token 97: ',' (ID: 11)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.584629237651825
    2. '
' → logprob: -0.959629237651825
    3. ' =' → logprob: -4.209629058837891
    4. '=' → logprob: -4.459629058837891
    5. '_mod' → logprob: -4.959629058837891
    6. '

' → logprob: -4.959629058837891
    7. ' 
' → logprob: -5.334629058837891
    8. ' Mod' → logprob: -5.584629058837891
    9. 'mod' → logprob: -6.209629058837891
    10. '(Mod' → logprob: -6.834629058837891

Token 98: ' utilisée' (ID: 106548)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.1342836320400238
    2. ' Mod' → logprob: -2.1342835426330566
    3. ' ' → logprob: -5.759283542633057
    4. '_mod' → logprob: -7.009283542633057
    5. ' =' → logprob: -7.259283542633057
    6. ' 
' → logprob: -7.509283542633057
    7. '_Mod' → logprob: -7.759283542633057
    8. '(Mod' → logprob: -7.884283542633057
    9. 'mod' → logprob: -8.259284019470215
    10. '
' → logprob: -8.759284019470215

Token 99: ' pour' (ID: 1930)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.4860735535621643
    2. ' Mod' → logprob: -1.4860734939575195
    3. '=' → logprob: -3.3610734939575195
    4. ' =' → logprob: -3.3610734939575195
    5. 'mod' → logprob: -3.6110734939575195
    6. '_mod' → logprob: -3.7360734939575195
    7. '(Mod' → logprob: -4.4860734939575195
    8. ' ' → logprob: -4.9860734939575195
    9. '<|end|>' → logprob: -5.2360734939575195
    10. '_' → logprob: -5.9860734939575195

Token 100: ' tous' (ID: 10688)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.6129239797592163
    2. 'mod' → logprob: -1.8629239797592163
    3. '100' → logprob: -2.237924098968506
    4. ' ' → logprob: -2.737924098968506
    5. '10' → logprob: -3.737924098968506
    6. '(Mod' → logprob: -4.487924098968506
    7. 'MOD' → logprob: -4.487924098968506
    8. '<|end|>' → logprob: -4.487924098968506
    9. 'Mod' → logprob: -4.862924098968506
    10. '1' → logprob: -5.112924098968506

Token 101: ' les' (ID: 1341)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.24845346808433533
    2. '(Mod' → logprob: -2.123453378677368
    3. ' Mod' → logprob: -2.373453378677368
    4. '_mod' → logprob: -6.248453617095947
    5. 'mod' → logprob: -6.498453617095947
    6. 'MOD' → logprob: -6.623453617095947
    7. '_Mod' → logprob: -7.123453617095947
    8. '_MOD' → logprob: -7.498453617095947
    9. '(' → logprob: -7.873453617095947
    10. ' MOD' → logprob: -8.248453140258789

Token 102: ' calcul' (ID: 7559)
  Prédit: ' operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operations' → logprob: -0.9308539032936096
    2. ' modulo' → logprob: -2.055853843688965
    3. ' ' → logprob: -2.430853843688965
    4. ' calculations' → logprob: -2.805853843688965
    5. 'calcul' → logprob: -2.930853843688965
    6. 'mod' → logprob: -2.930853843688965
    7. ' %' → logprob: -3.305853843688965
    8. 'operations' → logprob: -3.430853843688965
    9. ' calcul' → logprob: -3.430853843688965
    10. '%' → logprob: -3.555853843688965

Token 103: 's' (ID: 82)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.14207476377487183
    2. 's' → logprob: -2.5170748233795166
    3. 'Mod' → logprob: -4.1420745849609375
    4. 'ateur' → logprob: -4.5170745849609375
    5. 'us' → logprob: -5.1420745849609375
    6. 'ation' → logprob: -5.6420745849609375
    7. 'atrice' → logprob: -5.8920745849609375
    8. '_mod' → logprob: -6.0170745849609375
    9. ' Mod' → logprob: -6.3920745849609375
    10. 'ateurs' → logprob: -6.6420745849609375

Token 104: ' modulo' (ID: 112372)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4768764078617096
    2. 'Mod' → logprob: -0.9768763780593872
    3. '

' → logprob: -6.851876258850098
    4. '
' → logprob: -7.601876258850098
    5. '```' → logprob: -8.351876258850098
    6. '  
' → logprob: -8.601876258850098
    7. '(Mod' → logprob: -8.601876258850098
    8. ' 
' → logprob: -8.851876258850098
    9. ' Mod' → logprob: -9.101876258850098
    10. 'mod' → logprob: -9.351876258850098

Token 105: ' afin' (ID: 22217)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.10264326632022858
    2. '
' → logprob: -2.3526432514190674
    3. ' =' → logprob: -7.6026434898376465
    4. '(Mod' → logprob: -7.6026434898376465
    5. ' Mod' → logprob: -7.9776434898376465
    6. '_mod' → logprob: -8.727643013000488
    7. 'mod' → logprob: -8.727643013000488
    8. ' 
' → logprob: -9.102643013000488
    9. '

' → logprob: -9.102643013000488
    10. '=' → logprob: -9.352643013000488

Token 106: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ''év' (ID: 114425)
  Prédit: ''év'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''év' → logprob: -0.4094932973384857
    2. ' éviter' → logprob: -2.0344932079315186
    3. '’éviter' → logprob: -2.2844932079315186
    4. ''assurer' → logprob: -2.9094932079315186
    5. 'év' → logprob: -3.1594932079315186
    6. ' garantir' → logprob: -7.284493446350098
    7. ' evitar' → logprob: -7.409493446350098
    8. ''emp' → logprob: -7.534493446350098
    9. ''effect' → logprob: -7.659493446350098
    10. '’assurer' → logprob: -7.784493446350098

Token 108: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.0018082220340147614
    2. 'al' → logprob: -6.626808166503906
    3. 'aler' → logprob: -9.376808166503906
    4. '```' → logprob: -9.626808166503906
    5. 'alu' → logprob: -9.876808166503906
    6. ' iter' → logprob: -10.001808166503906
    7. 'érer' → logprob: -10.001808166503906
    8. 'ider' → logprob: -10.376808166503906
    9. 'ite' → logprob: -10.501808166503906
    10. 'it' → logprob: -11.001808166503906

Token 109: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8285599946975708
    2. '10' → logprob: -0.9535599946975708
    3. '100' → logprob: -2.4535598754882812
    4. 'mod' → logprob: -3.8285598754882812
    5. ' mod' → logprob: -4.328559875488281
    6. ' MOD' → logprob: -4.703559875488281
    7. ' Mod' → logprob: -5.328559875488281
    8. ' (' → logprob: -5.328559875488281
    9. '_mod' → logprob: -5.328559875488281
    10. 'MOD' → logprob: -5.328559875488281

Token 110: ' déb' (ID: 37874)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -1.17084801197052
    2. 'Mod' → logprob: -1.67084801197052
    3. '_mod' → logprob: -1.67084801197052
    4. ' Mod' → logprob: -1.92084801197052
    5. '(Mod' → logprob: -3.5458478927612305
    6. '_' → logprob: -3.6708478927612305
    7. ' mod' → logprob: -3.7958478927612305
    8. 'MOD' → logprob: -4.2958478927612305
    9. '_MOD' → logprob: -4.5458478927612305
    10. ' MOD' → logprob: -4.7958478927612305

Token 111: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.06399287283420563
    2. 'ords' → logprob: -3.688992977142334
    3. 'uts' → logprob: -4.063992977142334
    4. 'iers' → logprob: -5.813992977142334
    5. 't' → logprob: -6.063992977142334
    6. 'f' → logprob: -6.188992977142334
    7. 'i' → logprob: -6.188992977142334
    8. 'ut' → logprob: -6.313992977142334
    9. 'or' → logprob: -6.688992977142334
    10. 'bord' → logprob: -7.063992977142334

Token 112: 'ements' (ID: 4507)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.33488497138023376
    2. 'ère' → logprob: -2.0848848819732666
    3. 'ération' → logprob: -4.084885120391846
    4. 'érant' → logprob: -4.334885120391846
    5. 'é' → logprob: -4.584885120391846
    6. 'e' → logprob: -4.584885120391846
    7. 'èrement' → logprob: -4.709885120391846
    8. 'érateur' → logprob: -4.834885120391846
    9. 'ére' → logprob: -4.959885120391846
    10. 'eur' → logprob: -4.959885120391846

Token 113: ' d' (ID: 272)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0015059324214234948
    2. '
' → logprob: -7.6265058517456055
    3. '(Mod' → logprob: -7.7515058517456055
    4. 'MOD' → logprob: -8.001505851745605
    5. ' Mod' → logprob: -9.376505851745605
    6. '=' → logprob: -9.751505851745605
    7. '_mod' → logprob: -10.501505851745605
    8. 'mod' → logprob: -10.751505851745605
    9. ' =' → logprob: -10.876505851745605
    10. '_Mod' → logprob: -11.001505851745605

Token 114: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.36102768778800964
    2. ' ent' → logprob: -2.361027717590332
    3. 'ent' → logprob: -2.736027717590332
    4. 'e' → logprob: -3.486027717590332
    5. ' ' → logprob: -3.611027717590332
    6. ' entier' → logprob: -4.111027717590332
    7. '’ent' → logprob: -4.486027717590332
    8. ' e' → logprob: -4.736027717590332
    9. ' integers' → logprob: -4.736027717590332
    10. '_' → logprob: -4.986027717590332

Token 115: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.8106579184532166
    2. 'ières' → logprob: -1.5606579780578613
    3. 'er' → logprob: -1.8106579780578613
    4. 'ier' → logprob: -3.0606579780578613
    5. 'ière' → logprob: -3.1856579780578613
    6. 'érés' → logprob: -4.560657978057861
    7. 'éro' → logprob: -4.560657978057861
    8. 'mod' → logprob: -4.810657978057861
    9. '```' → logprob: -4.935657978057861
    10. 'ers' → logprob: -5.060657978057861

Token 116: ' et' (ID: 859)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0037468678783625364
    2. '
' → logprob: -6.12874698638916
    3. '(Mod' → logprob: -7.25374698638916
    4. 'MOD' → logprob: -8.00374698638916
    5. ' Mod' → logprob: -8.62874698638916
    6. '=' → logprob: -8.75374698638916
    7. ' =' → logprob: -10.00374698638916
    8. '_mod' → logprob: -10.37874698638916
    9. 'mod' → logprob: -10.37874698638916
    10. '_Mod' → logprob: -10.75374698638916

Token 117: ' pour' (ID: 1930)
  Prédit: ' garder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' garder' → logprob: -0.8183601498603821
    2. ' conserver' → logprob: -1.4433600902557373
    3. ' garantir' → logprob: -2.6933600902557373
    4. ' assurer' → logprob: -3.3183600902557373
    5. 'overflow' → logprob: -3.3183600902557373
    6. ' overflow' → logprob: -3.6933600902557373
    7. ' éviter' → logprob: -3.6933600902557373
    8. ' préserver' → logprob: -3.8183600902557373
    9. 'n' → logprob: -3.9433600902557373
    10. 'maint' → logprob: -4.443360328674316

Token 118: ' respecter' (ID: 107203)
  Prédit: ' garantir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' garantir' → logprob: -0.8551401495933533
    2. ' mod' → logprob: -1.855140209197998
    3. ' assurer' → logprob: -2.105140209197998
    4. ' le' → logprob: -2.855140209197998
    5. ' la' → logprob: -2.980140209197998
    6. ' conserver' → logprob: -3.355140209197998
    7. ' les' → logprob: -3.605140209197998
    8. 'mod' → logprob: -4.105140209197998
    9. ' garder' → logprob: -4.605140209197998
    10. ' préserver' → logprob: -4.730140209197998

Token 119: ' les' (ID: 1341)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.11424370110034943
    2. ' ' → logprob: -2.364243745803833
    3. ' MOD' → logprob: -5.739243507385254
    4. '100' → logprob: -5.864243507385254
    5. 'MOD' → logprob: -6.364243507385254
    6. '(Mod' → logprob: -6.989243507385254
    7. ' Mod' → logprob: -7.239243507385254
    8. ' (' → logprob: -7.239243507385254
    9. 'Mod' → logprob: -7.614243507385254
    10. '```' → logprob: -7.614243507385254

Token 120: ' contraintes' (ID: 167366)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.5687885284423828
    2. ' constraints' → logprob: -2.068788528442383
    3. ' modulus' → logprob: -2.443788528442383
    4. ' contraintes' → logprob: -2.568788528442383
    5. ' MOD' → logprob: -3.443788528442383
    6. ' mod' → logprob: -3.693788528442383
    7. 'mod' → logprob: -3.943788528442383
    8. '10' → logprob: -4.068788528442383
    9. '```' → logprob: -4.568788528442383
    10. ' Mod' → logprob: -4.818788528442383

Token 121: ' des' (ID: 731)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0008114131633192301
    2. '(Mod' → logprob: -7.875811576843262
    3. 'MOD' → logprob: -8.625811576843262
    4. '=' → logprob: -9.125811576843262
    5. ' Mod' → logprob: -9.625811576843262
    6. ' =' → logprob: -10.375811576843262
    7. '_Mod' → logprob: -11.375811576843262
    8. '_mod' → logprob: -11.375811576843262
    9. 'mod' → logprob: -11.875811576843262
    10. '
' → logprob: -12.125811576843262

Token 122: ' problèmes' (ID: 49822)
  Prédit: ' problèmes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problèmes' → logprob: -0.09672214090824127
    2. ' compét' → logprob: -3.09672212600708
    3. 'pro' → logprob: -4.34672212600708
    4. ' calcul' → logprob: -4.47172212600708
    5. ' problems' → logprob: -5.22172212600708
    6. ' problème' → logprob: -5.97172212600708
    7. ' contraintes' → logprob: -6.34672212600708
    8. ' proble' → logprob: -6.47172212600708
    9. ' probl' → logprob: -6.59672212600708
    10. ' concours' → logprob: -6.84672212600708

Token 123: ' cour' (ID: 2871)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.4791578948497772
    2. '
' → logprob: -0.9791579246520996
    3. '=' → logprob: -6.6041579246521
    4. ' =' → logprob: -6.9791579246521
    5. '(Mod' → logprob: -6.9791579246521
    6. '_mod' → logprob: -7.8541579246521
    7. ' Mod' → logprob: -8.104157447814941
    8. '_Mod' → logprob: -8.229157447814941
    9. '

' → logprob: -8.479157447814941
    10. '
' → logprob: -8.979157447814941

Token 124: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.6676439046859741
    2. 'ants' → logprob: -0.7926439046859741
    3. 'ante' → logprob: -4.167644023895264
    4. 'r' → logprob: -4.417644023895264
    5. 'amment' → logprob: -5.417644023895264
    6. 'antes' → logprob: -6.542644023895264
    7. 'b' → logprob: -8.167643547058105
    8. 'a' → logprob: -8.667643547058105
    9. '```' → logprob: -8.667643547058105
    10. 'rant' → logprob: -8.917643547058105

Token 125: '.
' (ID: 558)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.07384822517633438
    2. '
' → logprob: -2.698848247528076
    3. 'MOD' → logprob: -6.573848247528076
    4. ' Mod' → logprob: -6.948848247528076
    5. '
' → logprob: -7.823848247528076
    6. '(Mod' → logprob: -7.823848247528076
    7. 'mod' → logprob: -8.198847770690918
    8. '

' → logprob: -8.698847770690918
    9. '_mod' → logprob: -9.073847770690918
    10. '  
' → logprob: -9.948847770690918

Token 126: 'Mod' (ID: 4721)
  Prédit: 'Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00043674863991327584
    2. '
' → logprob: -8.500436782836914
    3. 'MOD' → logprob: -8.500436782836914
    4. '(Mod' → logprob: -11.375436782836914
    5. ' Mod' → logprob: -11.500436782836914
    6. '=' → logprob: -13.125436782836914
    7. 'mod' → logprob: -13.500436782836914
    8. '_mod' → logprob: -13.625436782836914
    9. '_Mod' → logprob: -14.125436782836914
    10. '
' → logprob: -14.250436782836914

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126929372549057
    2. '=' → logprob: -2.12692928314209
    3. ' ' → logprob: -14.00192928314209
    4. ' ' → logprob: -15.25192928314209
    5. '=int' → logprob: -16.251930236816406
    6. ',' → logprob: -16.876930236816406
    7. '＝' → logprob: -17.376930236816406
    8. ' =
' → logprob: -17.751930236816406
    9. ')' → logprob: -17.876930236816406
    10. '_' → logprob: -18.251930236816406

Token 128: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014163747429847717
    2. '10' → logprob: -4.264163970947266
    3. '100' → logprob: -15.139163970947266
    4. ' ' → logprob: -17.264163970947266
    5. 'int' → logprob: -19.014163970947266
    6. ' int' → logprob: -19.764163970947266
    7. ' (' → logprob: -19.764163970947266
    8. '1' → logprob: -19.889163970947266
    9. '```' → logprob: -19.889163970947266
    10. ' ' → logprob: -20.514163970947266

Token 129: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.226628895296017e-06
    2. '100' → logprob: -12.000007629394531
    3. ' ' → logprob: -13.875007629394531
    4. '(' → logprob: -18.87500762939453
    5. 'int' → logprob: -19.12500762939453
    6. '1' → logprob: -21.37500762939453
    7. '109' → logprob: -21.75000762939453
    8. '１０' → logprob: -22.50000762939453
    9. '```' → logprob: -22.75000762939453
    10. '۱۰' → logprob: -23.37500762939453

Token 130: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -5.455048449221067e-05
    2. '9' → logprob: -10.000054359436035
    3. '**' → logprob: -12.125054359436035
    4. '%' → logprob: -13.625054359436035
    5. '+' → logprob: -14.000054359436035
    6. '_' → logprob: -14.250054359436035
    7. '0' → logprob: -15.375054359436035
    8. '```' → logprob: -15.375054359436035
    9. '09' → logprob: -15.750054359436035
    10. '*' → logprob: -16.25005531311035

Token 131: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.005387430544942617
    2. '+' → logprob: -5.630387306213379
    3. '007' → logprob: -6.755387306213379
    4. '7' → logprob: -7.880387306213379
    5. '07' → logprob: -8.380387306213379
    6. ' ' → logprob: -11.880387306213379
    7. ' +' → logprob: -13.005387306213379
    8. '00' → logprob: -13.880387306213379
    9. '009' → logprob: -14.380387306213379
    10. '001' → logprob: -14.505387306213379

Token 132: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.0206720617134124e-05
    2. '07' → logprob: -11.50001049041748
    3. '007' → logprob: -17.375009536743164
    4. '+' → logprob: -17.375009536743164
    5. '```' → logprob: -19.000009536743164
    6. '' → logprob: -19.125009536743164
    7. '
' → logprob: -19.625009536743164
    8. '9' → logprob: -20.750009536743164
    9. ' ' → logprob: -21.250009536743164
    10. '​' → logprob: -21.500009536743164

Token 133: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06060868501663208
    2. '<|end|>' → logprob: -3.0606086254119873
    3. '#' → logprob: -5.060608863830566
    4. '

' → logprob: -5.935608863830566
    5. '<|end|>' → logprob: -6.810608863830566
    6. '
' → logprob: -7.435608863830566
    7. 'n' → logprob: -7.810608863830566
    8. ' 
' → logprob: -8.435608863830566
    9. ')' → logprob: -8.685608863830566
    10. '' → logprob: -9.060608863830566

Token 134: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2175164669752121
    2. 'def' → logprob: -1.8425164222717285
    3. 'result' → logprob: -4.5925164222717285
    4. 'n' → logprob: -4.7175164222717285
    5. '
' → logprob: -5.2175164222717285
    6. 'a' → logprob: -5.3425164222717285
    7. 'dp' → logprob: -6.4675164222717285
    8. 'factor' → logprob: -6.4675164222717285
    9. 'import' → logprob: -7.7175164222717285
    10. 'res' → logprob: -7.9675164222717285

Token 135: ' Calcul' (ID: 57243)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6915686130523682
    2. 'def' → logprob: -0.8165686130523682
    3. 'result' → logprob: -3.316568613052368
    4. 'factor' → logprob: -4.941568374633789
    5. 'dp' → logprob: -6.316568374633789
    6. 'import' → logprob: -6.441568374633789
    7. ' #' → logprob: -6.566568374633789
    8. 'for' → logprob: -6.566568374633789
    9. 'res' → logprob: -6.566568374633789
    10. 'fact' → logprob: -6.691568374633789

Token 136: 'er' (ID: 259)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3512802124023438
    2. 'result' → logprob: -1.4762802124023438
    3. '=' → logprob: -1.6012802124023438
    4. 'def' → logprob: -2.2262802124023438
    5. 's' → logprob: -2.4762802124023438
    6. '_' → logprob: -3.8512802124023438
    7. 'n' → logprob: -3.9762802124023438
    8. ')' → logprob: -4.476280212402344
    9. ' n' → logprob: -4.601280212402344
    10. '#' → logprob: -5.101280212402344

Token 137: ' la' (ID: 557)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.8408899307250977
    2. 'result' → logprob: -1.5908899307250977
    3. 'factor' → logprob: -2.3408899307250977
    4. '(n' → logprob: -3.0908899307250977
    5. 'n' → logprob: -3.2158899307250977
    6. '(' → logprob: -3.4658899307250977
    7. 'res' → logprob: -3.5908899307250977
    8. ' (' → logprob: -3.5908899307250977
    9. 'fact' → logprob: -3.9658899307250977
    10. ' n' → logprob: -4.090889930725098

Token 138: ' rac' (ID: 12334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5948783159255981
    2. 'factor' → logprob: -1.3448783159255981
    3. 'pu' → logprob: -1.9698783159255981
    4. 'fact' → logprob: -4.219878196716309
    5. ' somme' → logprob: -4.219878196716309
    6. ' puissance' → logprob: -5.844878196716309
    7. 'pow' → logprob: -5.844878196716309
    8. 'n' → logprob: -6.094878196716309
    9. 'comb' → logprob: -6.469878196716309
    10. 'som' → logprob: -6.594878196716309

Token 139: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.00160138716455549
    2. 't' → logprob: -7.501601219177246
    3. '```' → logprob: -8.251601219177246
    4. '**' → logprob: -8.876601219177246
    5. 'ïne' → logprob: -9.126601219177246
    6. '#' → logprob: -9.126601219177246
    7. 'e' → logprob: -9.376601219177246
    8. 'c' → logprob: -9.626601219177246
    9. '()' → logprob: -10.126601219177246
    10. 'i' → logprob: -10.501601219177246

Token 140: ' carr' (ID: 18321)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1585671454668045
    2. '_c' → logprob: -3.158567190170288
    3. '_mod' → logprob: -3.408567190170288
    4. '_val' → logprob: -3.658567190170288
    5. '_de' → logprob: -5.033566951751709
    6. '_car' → logprob: -5.033566951751709
    7. ' =' → logprob: -5.158566951751709
    8. '```' → logprob: -5.408566951751709
    9. 'c' → logprob: -5.533566951751709
    10. 'd' → logprob: -5.908566951751709

Token 141: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.8232868909835815
    2. 'é' → logprob: -1.3232868909835815
    3. 'are' → logprob: -2.198287010192871
    4. 'ure' → logprob: -2.948287010192871
    5. 'aire' → logprob: -3.198287010192871
    6. 'ére' → logprob: -3.698287010192871
    7. '```' → logprob: -3.823287010192871
    8. 'rée' → logprob: -4.698287010192871
    9. 'urée' → logprob: -4.823287010192871
    10. 'uré' → logprob: -5.198287010192871

Token 142: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22422757744789124
    2. 'import' → logprob: -1.7242275476455688
    3. '(n' → logprob: -5.099227428436279
    4. '(int' → logprob: -5.474227428436279
    5. '()' → logprob: -5.974227428436279
    6. 'def' → logprob: -6.349227428436279
    7. ' (' → logprob: -6.599227428436279
    8. 'n' → logprob: -6.599227428436279
    9. 'int' → logprob: -6.724227428436279
    10. ' ' → logprob: -7.474227428436279

Token 143: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28451108932495117
    2. ' n' → logprob: -1.4095110893249512
    3. 'int' → logprob: -6.409511089324951
    4. '(n' → logprob: -7.534511089324951
    5. ' int' → logprob: -7.659511089324951
    6. 'm' → logprob: -8.03451156616211
    7. ' (' → logprob: -9.03451156616211
    8. ' m' → logprob: -9.03451156616211
    9. '(' → logprob: -10.03451156616211
    10. '(int' → logprob: -10.40951156616211

Token 144: ' avec' (ID: 3937)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0008955012308433652
    2. '**' → logprob: -7.3758955001831055
    3. 'n' → logprob: -9.375895500183105
    4. '
' → logprob: -9.625895500183105
    5. ' import' → logprob: -9.750895500183105
    6. ',' → logprob: -10.875895500183105
    7. 'int' → logprob: -11.500895500183105
    8. 'sqrt' → logprob: -12.125895500183105
    9. '*' → logprob: -12.500895500183105
    10. 'r' → logprob: -12.750895500183105

Token 145: ' l' (ID: 305)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5451027154922485
    2. 'import' → logprob: -0.9201027154922485
    3. ' int' → logprob: -4.920102596282959
    4. 'n' → logprob: -5.420102596282959
    5. 'math' → logprob: -5.545102596282959
    6. ' math' → logprob: -5.795102596282959
    7. ' import' → logprob: -6.295102596282959
    8. 'cmath' → logprob: -8.045103073120117
    9. 'from' → logprob: -8.295103073120117
    10. '**' → logprob: -8.420103073120117

Token 146: ''op' (ID: 70747)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.024306096136569977
    2. ''import' → logprob: -4.149306297302246
    3. 'int' → logprob: -5.524306297302246
    4. 'a' → logprob: -6.524306297302246
    5. '```' → logprob: -7.524306297302246
    6. '**' → logprob: -7.774306297302246
    7. 'ib' → logprob: -7.899306297302246
    8. ''int' → logprob: -8.024306297302246
    9. 'e' → logprob: -8.399306297302246
    10. 'math' → logprob: -8.649306297302246

Token 147: 'érateur' (ID: 108528)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.9838003516197205
    2. 'er' → logprob: -1.4838004112243652
    3. 'import' → logprob: -1.7338004112243652
    4. '(math' → logprob: -2.8588004112243652
    5. '```' → logprob: -3.2338004112243652
    6. 'ération' → logprob: -3.2338004112243652
    7. ' math' → logprob: -3.4838004112243652
    8. 't' → logprob: -4.358800411224365
    9. 'int' → logprob: -4.608800411224365
    10. 'érateur' → logprob: -5.608800411224365

Token 148: ' d' (ID: 272)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.20689474046230316
    2. ' **' → logprob: -1.7068947553634644
    3. 'int' → logprob: -5.581894874572754
    4. '_' → logprob: -7.331894874572754
    5. 'import' → logprob: -7.581894874572754
    6. ' ' → logprob: -9.456894874572754
    7. ' int' → logprob: -9.581894874572754
    8. '*' → logprob: -9.956894874572754
    9. '```' → logprob: -9.956894874572754
    10. ' ' → logprob: -10.206894874572754

Token 149: ''ex' (ID: 23472)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1250113844871521
    2. ''ex' → logprob: -3.500011444091797
    3. 'iv' → logprob: -3.750011444091797
    4. ''' → logprob: -4.000011444091797
    5. '`' → logprob: -4.625011444091797
    6. 'e' → logprob: -4.750011444091797
    7. 'ex' → logprob: -5.500011444091797
    8. ''ent' → logprob: -5.750011444091797
    9. '```' → logprob: -6.250011444091797
    10. 'is' → logprob: -6.250011444091797

Token 150: 'ponent' (ID: 1758)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5900617837905884
    2. 'ponent' → logprob: -0.8400617837905884
    3. '**' → logprob: -4.590061664581299
    4. 'po' → logprob: -6.215061664581299
    5. 'pon' → logprob: -6.590061664581299
    6. 'pos' → logprob: -8.965062141418457
    7. 'pow' → logprob: -9.090062141418457
    8. '```' → logprob: -9.840062141418457
    9. 'port' → logprob: -10.090062141418457
    10. 'ponential' → logprob: -10.215062141418457

Token 151: 'iation' (ID: 23408)
  Prédit: 'enti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enti' → logprob: -0.3901093006134033
    2. 'ent' → logprob: -1.6401093006134033
    3. 'iation' → logprob: -2.1401093006134033
    4. 'entation' → logprob: -4.640109062194824
    5. '**' → logprob: -7.890109062194824
    6. '1' → logprob: -7.890109062194824
    7. '```' → logprob: -8.765109062194824
    8. 'ention' → logprob: -9.015109062194824
    9. 'nt' → logprob: -9.015109062194824
    10. 'ient' → logprob: -9.515109062194824

Token 152: ' '**' (ID: 188301)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5795570015907288
    2. ' n' → logprob: -1.329556941986084
    3. '**' → logprob: -2.079556941986084
    4. ' =' → logprob: -4.454556941986084
    5. ' (' → logprob: -4.579556941986084
    6. 's' → logprob: -5.204556941986084
    7. 'sqrt' → logprob: -5.329556941986084
    8. ',' → logprob: -6.079556941986084
    9. ' **' → logprob: -6.329556941986084
    10. 'result' → logprob: -6.454556941986084

Token 153: ''' (ID: 6)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16636539995670319
    2. '(' → logprob: -2.166365385055542
    3. ' ' → logprob: -3.791365385055542
    4. ' (' → logprob: -4.291365623474121
    5. '**' → logprob: -6.416365623474121
    6. '(n' → logprob: -8.166365623474121
    7. '```' → logprob: -8.791365623474121
    8. '`' → logprob: -9.666365623474121
    9. ',' → logprob: -9.916365623474121
    10. 'n' → logprob: -10.041365623474121

Token 154: ' et' (ID: 859)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8309822678565979
    2. 'sqrt' → logprob: -1.3309822082519531
    3. 'res' → logprob: -2.080982208251953
    4. 'root' → logprob: -2.080982208251953
    5. 'r' → logprob: -3.830982208251953
    6. 'n' → logprob: -4.705982208251953
    7. 'ans' → logprob: -5.455982208251953
    8. 's' → logprob: -5.705982208251953
    9. ' result' → logprob: -5.955982208251953
    10. 'import' → logprob: -6.205982208251953

Token 155: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.050909847021102905
    2. ' n' → logprob: -4.050909996032715
    3. 'n' → logprob: -4.175909996032715
    4. ' ' → logprob: -4.550909996032715
    5. '(' → logprob: -5.800909996032715
    6. '1' → logprob: -7.300909996032715
    7. ' (' → logprob: -7.925909996032715
    8. '2' → logprob: -8.050909996032715
    9. '(n' → logprob: -8.300909996032715
    10. ' la' → logprob: -8.425909996032715

Token 156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02318059653043747
    2. '(' → logprob: -4.6481804847717285
    3. '2' → logprob: -5.3981804847717285
    4. 'n' → logprob: -5.3981804847717285
    5. ' ' → logprob: -6.7731804847717285
    6. '(n' → logprob: -6.7731804847717285
    7. ' n' → logprob: -7.2731804847717285
    8. '1' → logprob: -8.398180961608887
    9. ' (' → logprob: -8.773180961608887
    10. '```' → logprob: -9.023180961608887

Token 157: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.896309739408025e-07
    2. ' .' → logprob: -14.750000953674316
    3. '5' → logprob: -16.5
    4. '0' → logprob: -16.75
    5. '​.' → logprob: -17.125
    6. '```' → logprob: -17.375
    7. ' ' → logprob: -17.625
    8. '**' → logprob: -17.75
    9. '‌.' → logprob: -18.0
    10. '.​' → logprob: -18.125

Token 158: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.08498554676771164
    2. '.' → logprob: -2.7099854946136475
    3. '0' → logprob: -4.209985733032227
    4. '```' → logprob: -9.959985733032227
    5. ' ' → logprob: -11.209985733032227
    6. '05' → logprob: -12.334985733032227
    7. '(' → logprob: -12.709985733032227
    8. '​' → logprob: -13.209985733032227
    9. '4' → logprob: -13.334985733032227
    10. '`' → logprob: -13.459985733032227

Token 159: '.' (ID: 13)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8569254875183105
    2. 'res' → logprob: -1.6069254875183105
    3. 'sqrt' → logprob: -1.7319254875183105
    4. 'root' → logprob: -2.3569254875183105
    5. 'r' → logprob: -3.1069254875183105
    6. 'rac' → logprob: -3.7319254875183105
    7. 'n' → logprob: -4.1069254875183105
    8. 'ans' → logprob: -5.1069254875183105
    9. 's' → logprob: -6.1069254875183105
    10. ' result' → logprob: -6.3569254875183105

Token 160: ' 
' (ID: 793)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -1.0026392936706543
    2. 'res' → logprob: -1.3776392936706543
    3. 'root' → logprob: -1.5026392936706543
    4. 'result' → logprob: -2.2526392936706543
    5. 'r' → logprob: -3.5026392936706543
    6. 'rac' → logprob: -4.627639293670654
    7. 'ans' → logprob: -5.127639293670654
    8. ' res' → logprob: -6.502639293670654
    9. ' sqrt' → logprob: -6.752639293670654
    10. 's' → logprob: -7.127639293670654

Token 161: '#' (ID: 2)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.17568963766098022
    2. 'root' → logprob: -2.050689697265625
    3. 'result' → logprob: -4.300689697265625
    4. 'res' → logprob: -4.425689697265625
    5. 'r' → logprob: -6.050689697265625
    6. 'rac' → logprob: -6.675689697265625
    7. 'import' → logprob: -7.050689697265625
    8. 'ans' → logprob: -7.050689697265625
    9. 's' → logprob: -7.675689697265625
    10. 'sq' → logprob: -8.050689697265625

Token 162: ' Pr' (ID: 2284)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.4414534270763397
    2. 'root' → logprob: -1.316453456878662
    3. 'result' → logprob: -2.941453456878662
    4. 'res' → logprob: -4.066453456878662
    5. 'rac' → logprob: -5.441453456878662
    6. 'r' → logprob: -5.441453456878662
    7. 'import' → logprob: -5.816453456878662
    8. ' sqrt' → logprob: -6.066453456878662
    9. 's' → logprob: -6.691453456878662
    10. 'ans' → logprob: -7.566453456878662

Token 163: 'endre' (ID: 9574)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04220285266637802
    2. '#' → logprob: -4.042202949523926
    3. 'endre' → logprob: -4.417202949523926
    4. 'nt' → logprob: -6.167202949523926
    5. 'od' → logprob: -6.417202949523926
    6. 'ent' → logprob: -7.167202949523926
    7. 'i' → logprob: -7.167202949523926
    8. 'is' → logprob: -7.292202949523926
    9. 'endr' → logprob: -7.417202949523926
    10. 'n' → logprob: -7.417202949523926

Token 164: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.17880187928676605
    2. ' int' → logprob: -2.1788017749786377
    3. ' la' → logprob: -3.1788017749786377
    4. 'la' → logprob: -5.553802013397217
    5. 'l' → logprob: -5.803802013397217
    6. 'le' → logprob: -7.178802013397217
    7. ' l' → logprob: -7.803802013397217
    8. 'n' → logprob: -7.928802013397217
    9. ' le' → logprob: -9.053801536560059
    10. ' n' → logprob: -9.678801536560059

Token 165: ' partie' (ID: 22139)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16024920344352722
    2. ' int' → logprob: -1.9102492332458496
    3. 'n' → logprob: -12.035248756408691
    4. 'import' → logprob: -12.035248756408691
    5. '```' → logprob: -12.660248756408691
    6. 'floor' → logprob: -13.660248756408691
    7. 'ent' → logprob: -13.785248756408691
    8. '=int' → logprob: -14.035248756408691
    9. ' entier' → logprob: -14.035248756408691
    10. 'inte' → logprob: -14.410248756408691

Token 166: ' entière' (ID: 61583)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7731310725212097
    2. ' entière' → logprob: -0.8981310725212097
    3. 'enti' → logprob: -2.1481311321258545
    4. 'int' → logprob: -4.273130893707275
    5. ' ent' → logprob: -8.773131370544434
    6. ' enti' → logprob: -9.773131370544434
    7. '```' → logprob: -9.898131370544434
    8. '_ent' → logprob: -10.148131370544434
    9. '(ent' → logprob: -10.523131370544434
    10. '_' → logprob: -10.898131370544434

Token 167: ' en' (ID: 469)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7901509404182434
    2. 'n' → logprob: -1.7901508808135986
    3. 'sqrt' → logprob: -2.4151508808135986
    4. ' int' → logprob: -2.5401508808135986
    5. 'import' → logprob: -3.4151508808135986
    6. 'result' → logprob: -3.4151508808135986
    7. 'root' → logprob: -3.6651508808135986
    8. 's' → logprob: -4.040151119232178
    9. ' n' → logprob: -4.165151119232178
    10. 'res' → logprob: -4.415151119232178

Token 168: ' utilisant' (ID: 92474)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31885871291160583
    2. 'int' → logprob: -1.3188587427139282
    3. ' utilisant' → logprob: -5.318858623504639
    4. '```' → logprob: -8.693859100341797
    5. 'util' → logprob: -9.193859100341797
    6. 't' → logprob: -9.193859100341797
    7. '=int' → logprob: -9.693859100341797
    8. 'n' → logprob: -9.943859100341797
    9. ' prenant' → logprob: -10.193859100341797
    10. ' math' → logprob: -10.943859100341797

Token 169: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47407910227775574
    2. ' int' → logprob: -0.9740791320800781
    3. '```' → logprob: -14.349079132080078
    4. ' la' → logprob: -14.849079132080078
    5. '	int' → logprob: -14.974079132080078
    6. ' l' → logprob: -15.224079132080078
    7. '=int' → logprob: -15.599079132080078
    8. ' ' → logprob: -16.599079132080078
    9. '(int' → logprob: -16.724079132080078
    10. ' ' → logprob: -16.724079132080078

Token 170: '(),' (ID: 2547)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.9470491409301758
    2. 'root' → logprob: -1.1970491409301758
    3. 's' → logprob: -2.447049140930176
    4. 'rac' → logprob: -2.572049140930176
    5. 'r' → logprob: -3.197049140930176
    6. '_r' → logprob: -3.572049140930176
    7. 'n' → logprob: -3.822049140930176
    8. '(s' → logprob: -4.322049140930176
    9. '_s' → logprob: -4.697049140930176
    10. 'val' → logprob: -5.197049140930176

Token 171: ' puis' (ID: 18766)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.7165865302085876
    2. 'root' → logprob: -1.4665865898132324
    3. 'sqrt' → logprob: -2.2165865898132324
    4. 'max' → logprob: -2.7165865898132324
    5. ' limit' → logprob: -3.7165865898132324
    6. 's' → logprob: -4.466586589813232
    7. 'int' → logprob: -4.466586589813232
    8. 'import' → logprob: -4.716586589813232
    9. 'lim' → logprob: -5.091586589813232
    10. ' root' → logprob: -5.091586589813232

Token 172: ' ajouter' (ID: 78457)
  Prédit: ' ajouter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ajouter' → logprob: -1.1866815090179443
    2. 'range' → logprob: -1.4366815090179443
    3. ' parcour' → logprob: -1.8116815090179443
    4. ' range' → logprob: -2.9366815090179443
    5. 'import' → logprob: -3.4366815090179443
    6. ' utiliser' → logprob: -3.8116815090179443
    7. ' iter' → logprob: -3.9366815090179443
    8. ' bou' → logprob: -4.311681747436523
    9. ' boucle' → logprob: -4.311681747436523
    10. ' for' → logprob: -4.311681747436523

Token 173: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31421899795532227
    2. ' ' → logprob: -1.3142189979553223
    3. ' ' → logprob: -7.814218997955322
    4. ' +' → logprob: -8.064218521118164
    5. '+' → logprob: -8.439218521118164
    6. ' plus' → logprob: -11.814218521118164
    7. '2' → logprob: -12.689218521118164
    8. ' un' → logprob: -12.814218521118164
    9. 'un' → logprob: -13.189218521118164
    10. '(' → logprob: -13.689218521118164

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02162053808569908
    2. ' ' → logprob: -3.896620512008667
    3. '+' → logprob: -7.021620750427246
    4. ' +' → logprob: -8.646620750427246
    5. '(' → logprob: -12.771620750427246
    6. '2' → logprob: -12.771620750427246
    7. ' plus' → logprob: -13.271620750427246
    8. ' ' → logprob: -14.021620750427246
    9. 'plus' → logprob: -15.146620750427246
    10. ' un' → logprob: -15.396620750427246

Token 175: '.' (ID: 13)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -1.1891151666641235
    2. 'root' → logprob: -1.4391151666641235
    3. 'r' → logprob: -2.314115047454834
    4. 'int' → logprob: -2.439115047454834
    5. 's' → logprob: -2.564115047454834
    6. 'result' → logprob: -3.939115047454834
    7. 'i' → logprob: -4.064115047454834
    8. 'res' → logprob: -4.064115047454834
    9. 'ans' → logprob: -4.189115047454834
    10. ' =' → logprob: -4.189115047454834

Token 176: ' 
' (ID: 793)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.8220847249031067
    2. 'root' → logprob: -1.072084665298462
    3. 'r' → logprob: -2.072084665298462
    4. 's' → logprob: -3.822084665298462
    5. 'limit' → logprob: -4.072084903717041
    6. 'sq' → logprob: -4.697084903717041
    7. ' sqrt' → logprob: -4.947084903717041
    8. 'max' → logprob: -5.072084903717041
    9. 'k' → logprob: -5.072084903717041
    10. 'ans' → logprob: -5.572084903717041

Token 177: '#' (ID: 2)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -1.1342941522598267
    2. 'root' → logprob: -1.2592941522598267
    3. 'r' → logprob: -2.134294033050537
    4. 'limit' → logprob: -2.384294033050537
    5. 'max' → logprob: -2.509294033050537
    6. 's' → logprob: -3.134294033050537
    7. 'k' → logprob: -3.759294033050537
    8. 'sq' → logprob: -4.384294033050537
    9. 'x' → logprob: -5.259294033050537
    10. 'lim' → logprob: -5.759294033050537

Token 178: ' Ce' (ID: 14228)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8134008049964905
    2. 'sqrt' → logprob: -1.6884007453918457
    3. 'limit' → logprob: -1.9384007453918457
    4. 'root' → logprob: -2.1884007453918457
    5. 'r' → logprob: -3.3134007453918457
    6. 'lim' → logprob: -3.4384007453918457
    7. 'k' → logprob: -4.188400745391846
    8. 's' → logprob: -4.438400745391846
    9. 'sq' → logprob: -5.313400745391846
    10. 'x' → logprob: -5.438400745391846

Token 179: ' spl' (ID: 15885)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6882860064506531
    2. ' s' → logprob: -1.8132860660552979
    3. ' n' → logprob: -2.563286066055298
    4. 'r' → logprob: -3.188286066055298
    5. ' sera' → logprob: -3.563286066055298
    6. 'n' → logprob: -3.688286066055298
    7. ' r' → logprob: -3.938286066055298
    8. 'i' → logprob: -3.938286066055298
    9. ' i' → logprob: -4.063285827636719
    10. ' max' → logprob: -4.188285827636719

Token 180: ' correspond' (ID: 11095)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.05732336267828941
    2. 'it' → logprob: -3.057323455810547
    3. 'u' → logprob: -6.182323455810547
    4. 'lus' → logprob: -6.557323455810547
    5. 'ace' → logprob: -7.869823455810547
    6. '```' → logprob: -8.182323455810547
    7. 'use' → logprob: -8.244823455810547
    8. 'e' → logprob: -8.307323455810547
    9. '#' → logprob: -8.682323455810547
    10. 'ut' → logprob: -8.682323455810547

Token 181: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5861770510673523
    2. ' =' → logprob: -1.336177110671997
    3. 's' → logprob: -2.961177110671997
    4. 'ent' → logprob: -3.086177110671997
    5. ' à' → logprob: -3.711177110671997
    6. '=' → logprob: -4.211176872253418
    7. ' to' → logprob: -4.836176872253418
    8. 'ra' → logprob: -4.961176872253418
    9. ' au' → logprob: -5.211176872253418
    10. '_s' → logprob: -5.586176872253418

Token 182: ' la' (ID: 557)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5761239528656006
    2. 'int' → logprob: -0.8261239528656006
    3. ' l' → logprob: -9.32612419128418
    4. 'l' → logprob: -10.32612419128418
    5. ' ' → logprob: -10.95112419128418
    6. ' la' → logprob: -10.95112419128418
    7. '(int' → logprob: -11.57612419128418
    8. ' le' → logprob: -12.20112419128418
    9. ' ' → logprob: -13.20112419128418
    10. 's' → logprob: -13.20112419128418

Token 183: ' borne' (ID: 111819)
  Prédit: ' rac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rac' → logprob: -1.1434727907180786
    2. 'int' → logprob: -1.7684727907180786
    3. ' limite' → logprob: -1.8934727907180786
    4. 's' → logprob: -2.643472671508789
    5. ' plus' → logprob: -2.643472671508789
    6. ' valeur' → logprob: -2.768472671508789
    7. ' partie' → logprob: -3.018472671508789
    8. ' int' → logprob: -3.268472671508789
    9. ' part' → logprob: -4.143472671508789
    10. 'rac' → logprob: -5.393472671508789

Token 184: ' supérieure' (ID: 106336)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.034761764109134674
    2. 's' → logprob: -3.909761667251587
    3. '_s' → logprob: -4.909761905670166
    4. '=' → logprob: -5.784761905670166
    5. 'spl' → logprob: -6.159761905670166
    6. '=s' → logprob: -7.409761905670166
    7. '_' → logprob: -8.034761428833008
    8. '_sup' → logprob: -9.159761428833008
    9. ' ' → logprob: -9.284761428833008
    10. ' de' → logprob: -9.909761428833008

Token 185: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3906302750110626
    2. 'spl' → logprob: -1.7656302452087402
    3. ' =' → logprob: -2.1406302452087402
    4. '_s' → logprob: -4.01563024520874
    5. '=' → logprob: -5.01563024520874
    6. '=s' → logprob: -5.39063024520874
    7. ' spl' → logprob: -6.51563024520874
    8. 'sp' → logprob: -6.64063024520874
    9. '_' → logprob: -7.89063024520874
    10. '=
' → logprob: -8.265630722045898

Token 186: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.208813190460205
    2. ' range' → logprob: -1.208813190460205
    3. ' i' → logprob: -1.583813190460205
    4. ' l' → logprob: -2.083813190460205
    5. ' le' → logprob: -3.208813190460205
    6. 'range' → logprob: -4.958813190460205
    7. 'i' → logprob: -5.583813190460205
    8. ' rechercher' → logprob: -5.833813190460205
    9. ' les' → logprob: -5.958813190460205
    10. ' _' → logprob: -5.958813190460205

Token 187: ' division' (ID: 21629)
  Prédit: ' boucle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boucle' → logprob: -0.4805147349834442
    2. ' range' → logprob: -2.2305147647857666
    3. ' recherche' → logprob: -2.3555147647857666
    4. ' division' → logprob: -2.7305147647857666
    5. 'range' → logprob: -3.8555147647857666
    6. 's' → logprob: -3.8555147647857666
    7. ' valeur' → logprob: -4.2305145263671875
    8. 'r' → logprob: -5.2305145263671875
    9. ' plage' → logprob: -5.2305145263671875
    10. ' rac' → logprob: -5.3555145263671875

Token 188: ',' (ID: 11)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.7740089893341064
    2. 's' → logprob: -1.2740089893341064
    3. '_s' → logprob: -1.6490089893341064
    4. ' =' → logprob: -3.2740089893341064
    5. ' spl' → logprob: -3.6490089893341064
    6. ' s' → logprob: -7.274008750915527
    7. '=s' → logprob: -7.524008750915527
    8. ' =
' → logprob: -8.524008750915527
    9. '_' → logprob: -8.649008750915527
    10. '=' → logprob: -8.649008750915527

Token 189: ' utilisée' (ID: 106548)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4827190041542053
    2. 'spl' → logprob: -1.2327189445495605
    3. ' spl' → logprob: -2.4827189445495605
    4. ' s' → logprob: -5.3577189445495605
    5. ' ' → logprob: -6.3577189445495605
    6. ' sp' → logprob: -8.982719421386719
    7. ' 
' → logprob: -9.357719421386719
    8. '`s' → logprob: -9.357719421386719
    9. ' sple' → logprob: -9.482719421386719
    10. '  
' → logprob: -9.607719421386719

Token 190: ' dans' (ID: 2671)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.37452366948127747
    2. ' dans' → logprob: -2.499523639678955
    3. ' for' → logprob: -2.999523639678955
    4. ' afin' → logprob: -3.499523639678955
    5. ' à' → logprob: -3.624523639678955
    6. ' ' → logprob: -3.624523639678955
    7. '_' → logprob: -3.999523639678955
    8. ' =' → logprob: -4.249523639678955
    9. '_s' → logprob: -4.874523639678955
    10. 's' → logprob: -4.874523639678955

Token 191: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10638249665498734
    2. 'range' → logprob: -2.4813826084136963
    3. ' la' → logprob: -4.356382369995117
    4. ' le' → logprob: -5.731382369995117
    5. ' for' → logprob: -7.981382369995117
    6. ' l' → logprob: -8.356382369995117
    7. ' n' → logprob: -8.481382369995117
    8. 'la' → logprob: -9.106382369995117
    9. 'for' → logprob: -9.231382369995117
    10. 'le' → logprob: -9.481382369995117

Token 192: ' construction' (ID: 9770)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.803923487663269
    2. ' for' → logprob: -1.428923487663269
    3. 'for' → logprob: -1.553923487663269
    4. 'range' → logprob: -2.4289236068725586
    5. ' code' → logprob: -5.053923606872559
    6. ' boucle' → logprob: -6.303923606872559
    7. ' suite' → logprob: -7.428923606872559
    8. 's' → logprob: -7.553923606872559
    9. 'suite' → logprob: -7.553923606872559
    10. ' division' → logprob: -7.678923606872559

Token 193: ' suivante' (ID: 107439)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1628800332546234
    2. 's' → logprob: -2.7878799438476562
    3. ' des' → logprob: -4.162879943847656
    4. ' spl' → logprob: -4.162879943847656
    5. 'spl' → logprob: -4.287879943847656
    6. 'de' → logprob: -4.537879943847656
    7. ' du' → logprob: -4.787879943847656
    8. ' d' → logprob: -4.787879943847656
    9. '_s' → logprob: -5.537879943847656
    10. '_' → logprob: -5.662879943847656

Token 194: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.48987701535224915
    2. 'spl' → logprob: -0.9898769855499268
    3. '
' → logprob: -4.239877223968506
    4. ' spl' → logprob: -7.614877223968506
    5. 'sp' → logprob: -9.364876747131348
    6. '  
' → logprob: -9.614876747131348
    7. ' 
' → logprob: -9.739876747131348
    8. '
' → logprob: -9.739876747131348
    9. '`s' → logprob: -9.864876747131348
    10. 'n' → logprob: -10.114876747131348

Token 195: 'spl' (ID: 102924)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31434300541877747
    2. 'spl' → logprob: -1.314342975616455
    3. 'sqrt' → logprob: -7.564342975616455
    4. 'sq' → logprob: -8.189343452453613
    5. 'sp' → logprob: -9.564343452453613
    6. '```' → logprob: -9.689343452453613
    7. 'n' → logprob: -10.689343452453613
    8. '
' → logprob: -10.689343452453613
    9. ' spl' → logprob: -10.689343452453613
    10. 'sql' → logprob: -10.939343452453613

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14338549971580505
    2. '=' → logprob: -2.018385410308838
    3. '=s' → logprob: -8.143385887145996
    4. 'it' → logprob: -8.518385887145996
    5. 's' → logprob: -9.393385887145996
    6. ' ' → logprob: -9.768385887145996
    7. '=int' → logprob: -10.143385887145996
    8. '   ' → logprob: -11.268385887145996
    9. ' ' → logprob: -11.893385887145996
    10. 't' → logprob: -12.393385887145996

Token 197: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023245826363563538
    2. ' int' → logprob: -3.7732458114624023
    3. '(int' → logprob: -15.648245811462402
    4. ' ' → logprob: -16.14824676513672
    5. '	int' → logprob: -17.27324676513672
    6. '   ' → logprob: -18.27324676513672
    7. 'n' → logprob: -18.39824676513672
    8. ' ' → logprob: -19.02324676513672
    9. '[int' → logprob: -19.39824676513672
    10. '1' → logprob: -19.64824676513672

Token 198: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.125006675720215
    3. '(s' → logprob: -14.625006675720215
    4. '((' → logprob: -14.875006675720215
    5. 'n' → logprob: -15.250006675720215
    6. '(pow' → logprob: -18.1250057220459
    7. '(np' → logprob: -19.3750057220459
    8. ' (' → logprob: -19.8750057220459
    9. ' n' → logprob: -20.1250057220459
    10. '(int' → logprob: -20.6250057220459

Token 199: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04860439524054527
    2. ' **' → logprob: -3.0486044883728027
    3. ' ' → logprob: -11.048604011535645
    4. ' ' → logprob: -14.923604011535645
    5. '*' → logprob: -15.173604011535645
    6. '0' → logprob: -15.423604011535645
    7. '**
' → logprob: -16.29860496520996
    8. ')**' → logprob: -16.54860496520996
    9. ' *' → logprob: -16.92360496520996
    10. ' **)' → logprob: -17.17360496520996

Token 200: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. ' ' → logprob: -17.751928329467773
    4. '   ' → logprob: -19.001928329467773
    5. '  ' → logprob: -19.501928329467773
    6. '(' → logprob: -20.126928329467773
    7. '.' → logprob: -20.251928329467773
    8. '    ' → logprob: -20.501928329467773
    9. '۰' → logprob: -21.501928329467773
    10. '2' → logprob: -21.626928329467773

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '(' → logprob: -18.125001907348633
    4. '.' → logprob: -19.000001907348633
    5. '۰' → logprob: -19.875001907348633
    6. ' ' → logprob: -20.500001907348633
    7. '2' → logprob: -21.000001907348633
    8. '```' → logprob: -21.250001907348633
    9. '   ' → logprob: -21.375001907348633
    10. '٠' → logprob: -21.562501907348633

Token 202: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.9027791495318525e-05
    2. '5' → logprob: -11.000019073486328
    3. ' .' → logprob: -13.375019073486328
    4. '0' → logprob: -14.750019073486328
    5. ' ' → logprob: -16.125019073486328
    6. ',' → logprob: -16.875019073486328
    7. '1' → logprob: -17.000019073486328
    8. '3' → logprob: -17.000019073486328
    9. ')' → logprob: -17.000019073486328
    10. '6' → logprob: -17.250019073486328

Token 203: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.75
    3. ' ' → logprob: -18.8125
    4. '...' → logprob: -18.875
    5. '50' → logprob: -19.0
    6. '   ' → logprob: -19.0625
    7. '4' → logprob: -19.4375
    8. '

' → logprob: -19.4375
    9. '５' → logprob: -19.5625
    10. '  ' → logprob: -19.625

Token 204: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012976066500414163
    2. ')+' → logprob: -9.000129699707031
    3. ' )' → logprob: -12.000129699707031
    4. '+' → logprob: -17.37512969970703
    5. '))' → logprob: -17.75012969970703
    6. '）' → logprob: -18.25012969970703
    7. '())' → logprob: -18.37512969970703
    8. '')' → logprob: -19.12512969970703
    9. '()' → logprob: -19.25012969970703
    10. '")' → logprob: -19.25012969970703

Token 205: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02980232611298561
    2. ' +' → logprob: -3.5298023223876953
    3. ')+' → logprob: -10.154802322387695
    4. ')' → logprob: -11.279802322387695
    5. '()+' → logprob: -15.904802322387695
    6. '+
' → logprob: -16.404802322387695
    7. ' plus' → logprob: -17.029802322387695
    8. ']+' → logprob: -17.404802322387695
    9. '1' → logprob: -17.654802322387695
    10. ' ' → logprob: -17.779802322387695

Token 206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.875261306762695
    4. '```' → logprob: -19.375261306762695
    5. '2' → logprob: -20.500261306762695
    6. '  ' → logprob: -21.125261306762695
    7. ' ' → logprob: -21.375261306762695
    8. '	' → logprob: -22.250261306762695
    9. '0' → logprob: -22.250261306762695
    10. '１' → logprob: -22.250261306762695

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -21.625
    4. '   ' → logprob: -22.5
    5. '１' → logprob: -22.875
    6. '2' → logprob: -23.375
    7. '۱' → logprob: -23.5
    8. '' → logprob: -23.875
    9. '  ' → logprob: -24.25
    10. '১' → logprob: -24.625

Token 208: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7058436870574951
    2. '<|end|>' → logprob: -1.0808436870574951
    3. '\n' → logprob: -2.330843687057495
    4. 'n' → logprob: -3.705843687057495
    5. '  
' → logprob: -4.580843925476074
    6. ' ' → logprob: -4.955843925476074
    7. 'for' → logprob: -5.455843925476074
    8. '<|end|>' → logprob: -5.830843925476074
    9. '#' → logprob: -5.955843925476074
    10. 'newline' → logprob: -5.955843925476074

Token 209: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3296610116958618
    2. '
' → logprob: -1.4546610116958618
    3. 'result' → logprob: -1.9546610116958618
    4. 'div' → logprob: -2.0796608924865723
    5. '\n' → logprob: -2.9546608924865723
    6. '#' → logprob: -3.2046608924865723
    7. 's' → logprob: -3.4546608924865723
    8. 'n' → logprob: -4.204660892486572
    9. 'results' → logprob: -4.454660892486572
    10. '<|end|>' → logprob: -4.454660892486572

Token 210: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9743446707725525
    2. 'result' → logprob: -1.4743447303771973
    3. 'res' → logprob: -2.2243447303771973
    4. 'ans' → logprob: -2.2243447303771973
    5. 'dp' → logprob: -2.2243447303771973
    6. 'div' → logprob: -3.7243447303771973
    7. 'answer' → logprob: -4.224344730377197
    8. 'count' → logprob: -4.724344730377197
    9. 'fact' → logprob: -5.474344730377197
    10. 's' → logprob: -6.099344730377197

Token 211: ' construit' (ID: 119882)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023534521460533142
    2. ' for' → logprob: -3.7735345363616943
    3. ' =' → logprob: -9.773534774780273
    4. 'range' → logprob: -9.898534774780273
    5. '=' → logprob: -10.023534774780273
    6. 'n' → logprob: -10.523534774780273
    7. '#' → logprob: -10.523534774780273
    8. 'def' → logprob: -11.023534774780273
    9. 'or' → logprob: -11.148534774780273
    10. 's' → logprob: -11.148534774780273

Token 212: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.9008529186248779
    2. ' une' → logprob: -1.400852918624878
    3. ' un' → logprob: -1.525852918624878
    4. 'un' → logprob: -3.025852918624878
    5. ' la' → logprob: -3.900852918624878
    6. 'la' → logprob: -4.775853157043457
    7. ' des' → logprob: -4.900853157043457
    8. '[]' → logprob: -5.025853157043457
    9. 'd' → logprob: -5.275853157043457
    10. 'div' → logprob: -5.400853157043457

Token 213: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.048444055020809174
    2. 'range' → logprob: -4.2984442710876465
    3. ' liste' → logprob: -4.2984442710876465
    4. 'for' → logprob: -4.4234442710876465
    5. 'list' → logprob: -5.6734442710876465
    6. 'bou' → logprob: -6.2984442710876465
    7. ' boucle' → logprob: -7.1734442710876465
    8. 's' → logprob: -7.5484442710876465
    9. 'table' → logprob: -7.9234442710876465
    10. '#' → logprob: -8.173443794250488

Token 214: ' f' (ID: 285)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.3334050476551056
    2. ' =' → logprob: -2.833405017852783
    3. 'de' → logprob: -3.083405017852783
    4. 's' → logprob: -3.208405017852783
    5. 'dp' → logprob: -3.833405017852783
    6. 'f' → logprob: -4.333405017852783
    7. 'freq' → logprob: -4.333405017852783
    8. ' de' → logprob: -4.708405017852783
    9. ' divis' → logprob: -4.708405017852783
    10. 'range' → logprob: -4.708405017852783

Token 215: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0030928626656532288
    2. '=' → logprob: -6.5030927658081055
    3. '=[' → logprob: -6.7530927658081055
    4. 'f' → logprob: -8.503092765808105
    5. ' =[' → logprob: -9.378092765808105
    6. 'or' → logprob: -10.878092765808105
    7. '=[]' → logprob: -10.878092765808105
    8. '[' → logprob: -10.878092765808105
    9. '[]' → logprob: -11.128092765808105
    10. 'actor' → logprob: -11.378092765808105

Token 216: ' deux' (ID: 10301)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28939852118492126
    2. 'range' → logprob: -1.4143985509872437
    3. ' [' → logprob: -5.664398670196533
    4. '[n' → logprob: -6.039398670196533
    5. ' range' → logprob: -6.414398670196533
    6. '(range' → logprob: -8.289398193359375
    7. '[i' → logprob: -8.664398193359375
    8. '[f' → logprob: -9.289398193359375
    9. '[s' → logprob: -10.039398193359375
    10. '[num' → logprob: -10.789398193359375

Token 217: ' étapes' (ID: 96583)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0328318327665329
    2. ' [' → logprob: -4.03283166885376
    3. '[:]' → logprob: -6.28283166885376
    4. 'dimensions' → logprob: -6.65783166885376
    5. '[n' → logprob: -7.03283166885376
    6. '[t' → logprob: -7.03283166885376
    7. 'f' → logprob: -7.15783166885376
    8. 'élé' → logprob: -7.15783166885376
    9. '=[' → logprob: -7.28283166885376
    10. 's' → logprob: -7.28283166885376

Token 218: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06343092769384384
    2. '=' → logprob: -3.1884310245513916
    3. 'f' → logprob: -4.9384307861328125
    4. '[' → logprob: -5.0634307861328125
    5. '=[' → logprob: -5.4384307861328125
    6. '[f' → logprob: -7.8134307861328125
    7. ',' → logprob: -7.8134307861328125
    8. '=[]' → logprob: -7.9384307861328125
    9. '[]' → logprob: -8.063430786132812
    10. ' =[' → logprob: -8.188430786132812

Token 219: '#' (ID: 2)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3555249869823456
    2. '[' → logprob: -1.730525016784668
    3. ' [' → logprob: -2.605525016784668
    4. ' f' → logprob: -3.355525016784668
    5. ' =' → logprob: -5.105525016784668
    6. '[f' → logprob: -5.605525016784668
    7. '[n' → logprob: -6.980525016784668
    8. '[]' → logprob: -7.355525016784668
    9. '[
' → logprob: -8.105525016784668
    10. 'range' → logprob: -8.230525016784668

Token 220: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32329851388931274
    2. ' [' → logprob: -1.823298454284668
    3. '[n' → logprob: -2.573298454284668
    4. 'f' → logprob: -3.573298454284668
    5. ' f' → logprob: -5.323298454284668
    6. '[f' → logprob: -5.823298454284668
    7. '[m' → logprob: -6.323298454284668
    8. '[i' → logprob: -8.573298454284668
    9. '[]' → logprob: -9.323298454284668
    10. '([' → logprob: -9.323298454284668

Token 221: '1' (ID: 16)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5507922172546387
    2. '[' → logprob: -1.0507922172546387
    3. '[f' → logprob: -2.9257922172546387
    4. '[n' → logprob: -4.675792217254639
    5. ' [' → logprob: -5.675792217254639
    6. ' f' → logprob: -5.800792217254639
    7. '[]' → logprob: -6.675792217254639
    8. '[i' → logprob: -6.925792217254639
    9. 'range' → logprob: -7.175792217254639
    10. '[s' → logprob: -7.925792217254639

Token 222: '.' (ID: 13)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5199267268180847
    2. '=' → logprob: -1.5199267864227295
    3. 'f' → logprob: -1.8949267864227295
    4. ' f' → logprob: -4.39492654800415
    5. ')' → logprob: -5.01992654800415
    6. '.' → logprob: -5.14492654800415
    7. '=[' → logprob: -6.26992654800415
    8. '#' → logprob: -6.39492654800415
    9. ']' → logprob: -6.39492654800415
    10. '=f' → logprob: -6.51992654800415

Token 223: ' Cr' (ID: 5790)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2559139132499695
    2. '[' → logprob: -1.8809139728546143
    3. '[f' → logprob: -3.2559139728546143
    4. ' f' → logprob: -4.380913734436035
    5. ' [' → logprob: -4.380913734436035
    6. 'range' → logprob: -5.255913734436035
    7. '[n' → logprob: -6.630913734436035
    8. '[]' → logprob: -7.255913734436035
    9. '[s' → logprob: -8.005913734436035
    10. ' range' → logprob: -8.255913734436035

Token 224: 'éer' (ID: 83012)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8430569171905518
    2. 'e' → logprob: -2.0930569171905518
    3. '[' → logprob: -2.3430569171905518
    4. 'ist' → logprob: -2.3430569171905518
    5. 'iste' → logprob: -2.8430569171905518
    6. '=[]' → logprob: -3.3430569171905518
    7. 'éer' → logprob: -3.5930569171905518
    8. 'ée' → logprob: -3.8430569171905518
    9. '#' → logprob: -4.093056678771973
    10. '=[]
' → logprob: -4.218056678771973

Token 225: ' une' (ID: 2463)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07189232110977173
    2. '[' → logprob: -3.571892261505127
    3. ' f' → logprob: -3.946892261505127
    4. 'une' → logprob: -4.696892261505127
    5. ' une' → logprob: -4.696892261505127
    6. ' [' → logprob: -6.321892261505127
    7. '[f' → logprob: -6.946892261505127
    8. '[]' → logprob: -7.446892261505127
    9. 'la' → logprob: -9.446892738342285
    10. ' la' → logprob: -10.071892738342285

Token 226: ' liste' (ID: 31719)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.596599817276001
    2. '[' → logprob: -0.971599817276001
    3. ' [' → logprob: -3.596599817276001
    4. 'list' → logprob: -4.096599578857422
    5. ' f' → logprob: -4.721599578857422
    6. '[f' → logprob: -4.721599578857422
    7. '[n' → logprob: -5.596599578857422
    8. 'range' → logprob: -6.221599578857422
    9. 'liste' → logprob: -6.596599578857422
    10. '[int' → logprob: -7.971599578857422

Token 227: ' contenant' (ID: 131049)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03587625175714493
    2. ' =' → logprob: -3.9108762741088867
    3. ' f' → logprob: -5.160876274108887
    4. '[' → logprob: -6.160876274108887
    5. '(range' → logprob: -6.410876274108887
    6. 'de' → logprob: -6.535876274108887
    7. '=' → logprob: -6.535876274108887
    8. '=[' → logprob: -6.660876274108887
    9. '[f' → logprob: -7.660876274108887
    10. 'range' → logprob: -8.035876274108887

Token 228: ' les' (ID: 1341)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.5233925580978394
    2. 'range' → logprob: -1.7733925580978394
    3. '[' → logprob: -2.398392677307129
    4. '[i' → logprob: -3.398392677307129
    5. '(range' → logprob: -3.398392677307129
    6. '(n' → logprob: -3.773392677307129
    7. '1' → logprob: -3.773392677307129
    8. 'n' → logprob: -4.148392677307129
    9. '0' → logprob: -5.148392677307129
    10. '(' → logprob: -5.148392677307129

Token 229: ' ent' (ID: 1121)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1841282695531845
    2. '[i' → logprob: -2.0591282844543457
    3. '1' → logprob: -4.559128284454346
    4. '[' → logprob: -4.809128284454346
    5. '0' → logprob: -4.809128284454346
    6. 'range' → logprob: -5.059128284454346
    7. '[n' → logprob: -6.309128284454346
    8. 'n' → logprob: -6.434128284454346
    9. 'x' → logprob: -7.059128284454346
    10. 'k' → logprob: -7.934128284454346

Token 230: 'iers' (ID: 11012)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6263912916183472
    2. 'iers' → logprob: -2.5013914108276367
    3. '[n' → logprob: -2.7513914108276367
    4. 'f' → logprob: -3.0013914108276367
    5. '[i' → logprob: -3.2513914108276367
    6. 's' → logprob: -3.5013914108276367
    7. '[' → logprob: -3.5013914108276367
    8. 't' → logprob: -3.7513914108276367
    9. 'ier' → logprob: -3.7513914108276367
    10. 'ités' → logprob: -4.376391410827637

Token 231: ' de' (ID: 334)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.7240144610404968
    2. 'range' → logprob: -0.8490144610404968
    3. '[' → logprob: -3.3490145206451416
    4. ' range' → logprob: -3.5990145206451416
    5. '[i' → logprob: -4.0990142822265625
    6. 'f' → logprob: -6.2240142822265625
    7. ' [' → logprob: -6.2240142822265625
    8. 'from' → logprob: -7.0990142822265625
    9. ' i' → logprob: -7.4740142822265625
    10. '=' → logprob: -7.5990142822265625

Token 232: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23376256227493286
    2. '0' → logprob: -1.733762502670288
    3. 'range' → logprob: -3.483762502670288
    4. '[' → logprob: -7.858762741088867
    5. '2' → logprob: -8.483762741088867
    6. 'n' → logprob: -8.858762741088867
    7. 'm' → logprob: -9.108762741088867
    8. 'i' → logprob: -9.358762741088867
    9. ' ' → logprob: -9.483762741088867
    10. ' range' → logprob: -9.608762741088867

Token 233: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16543085873126984
    2. '1' → logprob: -2.165430784225464
    3. '0' → logprob: -3.290430784225464
    4. '[' → logprob: -8.165431022644043
    5. ' range' → logprob: -8.540431022644043
    6. '2' → logprob: -10.540431022644043
    7. 'n' → logprob: -11.415431022644043
    8. '(range' → logprob: -12.290431022644043
    9. 's' → logprob: -12.790431022644043
    10. '[n' → logprob: -13.165431022644043

Token 234: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0047010378912091255
    2. ',n' → logprob: -5.504701137542725
    3. ' ,' → logprob: -8.629700660705566
    4. 'n' → logprob: -9.254700660705566
    5. 's' → logprob: -9.754700660705566
    6. ')' → logprob: -10.254700660705566
    7. ',m' → logprob: -10.254700660705566
    8. ']' → logprob: -10.379700660705566
    9. ',f' → logprob: -10.379700660705566
    10. ',
' → logprob: -10.504700660705566

Token 235: ' spl' (ID: 15885)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6214797496795654
    2. 'spl' → logprob: -1.2464797496795654
    3. 'm' → logprob: -1.7464797496795654
    4. ' n' → logprob: -8.371479988098145
    5. '(n' → logprob: -8.621479988098145
    6. ' spl' → logprob: -9.496479988098145
    7. '100' → logprob: -9.621479988098145
    8. ' m' → logprob: -9.621479988098145
    9. '(m' → logprob: -9.996479988098145
    10. 'max' → logprob: -10.371479988098145

Token 236: '-' (ID: 12)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.005168531555682421
    2. ' =' → logprob: -5.880168437957764
    3. '=' → logprob: -6.380168437957764
    4. 'list' → logprob: -7.880168437957764
    5. '
' → logprob: -9.505168914794922
    6. ' f' → logprob: -9.755168914794922
    7. '+' → logprob: -10.130168914794922
    8. 'range' → logprob: -10.755168914794922
    9. '[' → logprob: -11.130168914794922
    10. ',' → logprob: -11.130168914794922

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001246348983841017
    2. ' ' → logprob: -9.62512493133545
    3. '-' → logprob: -10.00012493133545
    4. 's' → logprob: -12.75012493133545
    5. '2' → logprob: -12.87512493133545
    6. '+' → logprob: -13.12512493133545
    7. '```' → logprob: -13.62512493133545
    8. 'spl' → logprob: -14.00012493133545
    9. ' ' → logprob: -14.12512493133545
    10. ')' → logprob: -14.81262493133545

Token 238: ' (' (ID: 350)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0006970656104385853
    2. ' =' → logprob: -8.000697135925293
    3. ' f' → logprob: -8.500697135925293
    4. 'list' → logprob: -9.250697135925293
    5. '=' → logprob: -10.500697135925293
    6. '[' → logprob: -11.500697135925293
    7. 'range' → logprob: -12.625697135925293
    8. '
' → logprob: -12.625697135925293
    9. ',' → logprob: -12.750697135925293
    10. '=f' → logprob: -12.875697135925293

Token 239: 'in' (ID: 258)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6514806151390076
    2. ')' → logprob: -1.4014806747436523
    3. 'f' → logprob: -2.2764806747436523
    4. ' range' → logprob: -2.4014806747436523
    5. ',' → logprob: -4.401480674743652
    6. '+' → logprob: -4.776480674743652
    7. ' f' → logprob: -5.526480674743652
    8. 'list' → logprob: -6.026480674743652
    9. '(range' → logprob: -6.276480674743652
    10. ' +' → logprob: -6.526480674743652

Token 240: 'clus' (ID: 4085)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3828878402709961
    2. ' range' → logprob: -1.507887840270996
    3. 'dex' → logprob: -3.757887840270996
    4. 'd' → logprob: -3.882887840270996
    5. 't' → logprob: -4.632887840270996
    6. 's' → logprob: -5.007887840270996
    7. 'list' → logprob: -5.132887840270996
    8. 'st' → logprob: -5.257887840270996
    9. ']' → logprob: -5.382887840270996
    10. 'n' → logprob: -5.757887840270996

Token 241: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10476656258106232
    2. ',' → logprob: -2.729766607284546
    3. ']' → logprob: -4.604766368865967
    4. '+' → logprob: -4.854766368865967
    5. ')+' → logprob: -5.104766368865967
    6. 'f' → logprob: -5.604766368865967
    7. ')
' → logprob: -6.354766368865967
    8. 'range' → logprob: -6.979766368865967
    9. '=' → logprob: -7.479766368865967
    10. '[' → logprob: -7.979766368865967

Token 242: ' 
' (ID: 793)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.02068260870873928
    2. 'list' → logprob: -3.8956825733184814
    3. 'range' → logprob: -9.770682334899902
    4. '[' → logprob: -10.145682334899902
    5. '[f' → logprob: -10.520682334899902
    6. ' list' → logprob: -12.395682334899902
    7. ' f' → logprob: -12.645682334899902
    8. '
' → logprob: -13.395682334899902
    9. '=' → logprob: -13.520682334899902
    10. ' =' → logprob: -13.645682334899902

Token 243: '#' (ID: 2)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0014025020645931363
    2. '[' → logprob: -7.751402378082275
    3. 'list' → logprob: -8.126402854919434
    4. ' f' → logprob: -8.251402854919434
    5. '
' → logprob: -9.376402854919434
    6. '[f' → logprob: -9.626402854919434
    7. ' =' → logprob: -10.126402854919434
    8. '=' → logprob: -10.251402854919434
    9. '[:' → logprob: -10.376402854919434
    10. '+' → logprob: -10.376402854919434

Token 244: ' ' (ID: 220)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1181693822145462
    2. 'list' → logprob: -2.2431693077087402
    3. '[f' → logprob: -5.86816930770874
    4. ' list' → logprob: -6.86816930770874
    5. ' f' → logprob: -7.11816930770874
    6. '[' → logprob: -7.99316930770874
    7. 'range' → logprob: -9.493169784545898
    8. ' [' → logprob: -9.743169784545898
    9. '[list' → logprob: -9.993169784545898
    10. '[s' → logprob: -10.118169784545898

Token 245: '2' (ID: 17)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.011670958250761032
    2. 'list' → logprob: -4.51167106628418
    3. '[f' → logprob: -7.88667106628418
    4. 'range' → logprob: -9.26167106628418
    5. '[' → logprob: -9.88667106628418
    6. ' f' → logprob: -10.38667106628418
    7. 'lst' → logprob: -10.51167106628418
    8. '[i' → logprob: -11.38667106628418
    9. '[s' → logprob: -11.88667106628418
    10. ' list' → logprob: -11.88667106628418

Token 246: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.137589231133461
    2. 'f' → logprob: -3.0125892162323
    3. '+' → logprob: -3.5125892162323
    4. ',' → logprob: -4.012589454650879
    5. '#' → logprob: -4.137589454650879
    6. ' f' → logprob: -5.137589454650879
    7. ' +' → logprob: -6.137589454650879
    8. '.append' → logprob: -6.387589454650879
    9. ':' → logprob: -7.137589454650879
    10. '.
' → logprob: -7.387589454650879

Token 247: ' Cr' (ID: 5790)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9214053750038147
    2. '[' → logprob: -1.54640531539917
    3. '[f' → logprob: -2.04640531539917
    4. 'list' → logprob: -2.29640531539917
    5. ' [' → logprob: -2.42140531539917
    6. ' f' → logprob: -3.54640531539917
    7. ' list' → logprob: -4.79640531539917
    8. 'range' → logprob: -5.42140531539917
    9. '[n' → logprob: -5.54640531539917
    10. '[s' → logprob: -5.67140531539917

Token 248: 'éer' (ID: 83012)
  Prédit: 'éer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éer' → logprob: -0.017723502591252327
    2. 'e' → logprob: -4.517723560333252
    3. 'ée' → logprob: -5.517723560333252
    4. 'eer' → logprob: -6.517723560333252
    5. 'é' → logprob: -7.517723560333252
    6. 'er' → logprob: -8.142723083496094
    7. 'reate' → logprob: -8.892723083496094
    8. '#' → logprob: -10.267723083496094
    9. 'on' → logprob: -10.642723083496094
    10. 'ear' → logprob: -10.892723083496094

Token 249: ' une' (ID: 2463)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.2015720009803772
    2. ' list' → logprob: -2.4515719413757324
    3. '[' → logprob: -3.0765719413757324
    4. '[n' → logprob: -3.5765719413757324
    5. 'list' → logprob: -4.576571941375732
    6. '[list' → logprob: -5.576571941375732
    7. '[s' → logprob: -6.076571941375732
    8. ' la' → logprob: -6.951571941375732
    9. ' une' → logprob: -6.951571941375732
    10. '[m' → logprob: -7.826571941375732

Token 250: ' autre' (ID: 20278)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18765230476856232
    2. 'list' → logprob: -2.562652349472046
    3. '[n' → logprob: -3.062652349472046
    4. ' [' → logprob: -3.937652349472046
    5. 'liste' → logprob: -4.687652111053467
    6. '[i' → logprob: -5.187652111053467
    7. '[s' → logprob: -6.062652111053467
    8. '[
' → logprob: -6.062652111053467
    9. '[list' → logprob: -6.312652111053467
    10. ' list' → logprob: -6.812652111053467

Token 251: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.023820400238037
    2. '[' → logprob: -1.148820400238037
    3. ' list' → logprob: -1.398820400238037
    4. ' [' → logprob: -3.273820400238037
    5. ' liste' → logprob: -4.773820400238037
    6. 'range' → logprob: -5.273820400238037
    7. '[n' → logprob: -5.273820400238037
    8. '[
' → logprob: -5.773820400238037
    9. '[list' → logprob: -5.773820400238037
    10. 'liste' → logprob: -5.898820400238037

Token 252: ' contenant' (ID: 131049)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.707815408706665
    2. '(range' → logprob: -0.707815408706665
    3. '(list' → logprob: -4.957815170288086
    4. '([(' → logprob: -5.207815170288086
    5. 'range' → logprob: -6.707815170288086
    6. '(' → logprob: -7.707815170288086
    7. '[' → logprob: -8.832815170288086
    8. '(
' → logprob: -9.457815170288086
    9. '[list' → logprob: -10.457815170288086
    10. 'list' → logprob: -10.457815170288086

Token 253: ',' (ID: 11)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.08447012305259705
    2. 'n' → logprob: -3.45947003364563
    3. '[i' → logprob: -3.45947003364563
    4. '(n' → logprob: -5.334470272064209
    5. '[(' → logprob: -5.459470272064209
    6. '[int' → logprob: -5.584470272064209
    7. '[' → logprob: -5.834470272064209
    8. '[m' → logprob: -7.459470272064209
    9. ' [' → logprob: -7.959470272064209
    10. '([' → logprob: -7.959470272064209

Token 254: ' pour' (ID: 1930)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0380634106695652
    2. 'n' → logprob: -4.2880635261535645
    3. ' [' → logprob: -5.0380635261535645
    4. '[(' → logprob: -5.1630635261535645
    5. '[i' → logprob: -5.2880635261535645
    6. '[' → logprob: -6.1630635261535645
    7. '[m' → logprob: -6.9130635261535645
    8. 'range' → logprob: -7.2880635261535645
    9. '(n' → logprob: -7.6630635261535645
    10. '[int' → logprob: -7.7880635261535645

Token 255: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12400642037391663
    2. ' i' → logprob: -2.499006509780884
    3. 'x' → logprob: -3.499006509780884
    4. ' x' → logprob: -6.249006271362305
    5. 'val' → logprob: -7.499006271362305
    6. 'n' → logprob: -7.749006271362305
    7. 'v' → logprob: -8.249006271362305
    8. 'k' → logprob: -8.374006271362305
    9. '_i' → logprob: -8.624006271362305
    10. 'j' → logprob: -8.999006271362305

Token 256: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004907466005533934
    2. ' i' → logprob: -5.629907608032227
    3. 'x' → logprob: -6.754907608032227
    4. 'k' → logprob: -9.379907608032227
    5. 'n' → logprob: -11.129907608032227
    6. 'd' → logprob: -11.754907608032227
    7. 'v' → logprob: -12.254907608032227
    8. 'j' → logprob: -12.504907608032227
    9. '(i' → logprob: -12.754907608032227
    10. ' x' → logprob: -12.754907608032227

Token 257: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20946751534938812
    2. 'in' → logprob: -1.7094675302505493
    3. ' dans' → logprob: -5.83446741104126
    4. 'dans' → logprob: -6.33446741104126
    5. ',' → logprob: -7.45946741104126
    6. ')' → logprob: -7.58446741104126
    7. 'for' → logprob: -7.70946741104126
    8. 'n' → logprob: -7.83446741104126
    9. 's' → logprob: -8.209467887878418
    10. 'range' → logprob: -8.334467887878418

Token 258: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012584884651005268
    2. ' range' → logprob: -4.387584686279297
    3. '(range' → logprob: -10.262584686279297
    4. '[' → logprob: -10.637584686279297
    5. 'spl' → logprob: -13.012584686279297
    6. 's' → logprob: -13.137584686279297
    7. '	range' → logprob: -13.387584686279297
    8. '1' → logprob: -13.387584686279297
    9. 're' → logprob: -13.762584686279297
    10. 'rang' → logprob: -13.762584686279297

Token 259: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0027816968504339457
    2. ' range' → logprob: -6.002781867980957
    3. '(range' → logprob: -8.752781867980957
    4. 'i' → logprob: -9.877781867980957
    5. '[i' → logprob: -10.377781867980957
    6. '[' → logprob: -10.502781867980957
    7. '1' → logprob: -11.877781867980957
    8. 're' → logprob: -12.002781867980957
    9. 'x' → logprob: -12.252781867980957
    10. '{' → logprob: -13.002781867980957

Token 260: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6170048713684082
    2. ',' → logprob: -1.2420048713684082
    3. 'in' → logprob: -1.9920048713684082
    4. ' ,' → logprob: -4.992004871368408
    5. 'dans' → logprob: -5.117004871368408
    6. 'range' → logprob: -5.242004871368408
    7. ' à' → logprob: -5.492004871368408
    8. ')' → logprob: -5.992004871368408
    9. ' dans' → logprob: -6.367004871368408
    10. ' ' → logprob: -6.492004871368408

Token 261: ' spl' (ID: 15885)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1662062108516693
    2. 'spl' → logprob: -1.9162062406539917
    3. 'n' → logprob: -5.916206359863281
    4. ' m' → logprob: -6.041206359863281
    5. '(m' → logprob: -7.916206359863281
    6. ' spl' → logprob: -8.416206359863281
    7. '(n' → logprob: -9.791206359863281
    8. ' (' → logprob: -9.791206359863281
    9. '(' → logprob: -9.791206359863281
    10. '(s' → logprob: -10.166206359863281

Token 262: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4942949712276459
    2. '+' → logprob: -1.7442950010299683
    3. '-' → logprob: -2.1192948818206787
    4. ',
' → logprob: -3.3692948818206787
    5. '),' → logprob: -3.6192948818206787
    6. ' +' → logprob: -4.369295120239258
    7. ' -' → logprob: -4.869295120239258
    8. ')' → logprob: -5.994295120239258
    9. '
' → logprob: -6.119295120239258
    10. ' ,' → logprob: -6.119295120239258

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027802068507298827
    2. ' ' → logprob: -9.25027847290039
    3. 'm' → logprob: -9.50027847290039
    4. 'n' → logprob: -10.25027847290039
    5. '2' → logprob: -10.62527847290039
    6. '
' → logprob: -11.62527847290039
    7. '10' → logprob: -11.75027847290039
    8. 'i' → logprob: -12.12527847290039
    9. '+' → logprob: -12.25027847290039
    10. '   ' → logprob: -12.37527847290039

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014834965579211712
    2. ',
' → logprob: -4.889834880828857
    3. ' ,' → logprob: -6.264834880828857
    4. '),' → logprob: -6.264834880828857
    5. '],' → logprob: -6.764834880828857
    6. ')' → logprob: -8.014835357666016
    7. 'n' → logprob: -8.139835357666016
    8. '+' → logprob: -8.639835357666016
    9. ',n' → logprob: -8.764835357666016
    10. ',

' → logprob: -8.889835357666016

Token 265: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3227553367614746
    2. ' n' → logprob: -1.9477553367614746
    3. '[n' → logprob: -2.0727553367614746
    4. ' [' → logprob: -5.572755336761475
    5. '(n' → logprob: -6.197755336761475
    6. ' (' → logprob: -7.947755336761475
    7. '[' → logprob: -7.947755336761475
    8. '[(' → logprob: -8.572755813598633
    9. ' ' → logprob: -8.697755813598633
    10. ']' → logprob: -9.197755813598633

Token 266: ' résultat' (ID: 62556)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23265576362609863
    2. ' n' → logprob: -1.6076557636260986
    3. '[n' → logprob: -5.8576555252075195
    4. ']' → logprob: -7.2326555252075195
    5. ' ' → logprob: -7.3576555252075195
    6. ' (' → logprob: -7.4826555252075195
    7. '(n' → logprob: -7.6076555252075195
    8. 'int' → logprob: -8.10765552520752
    9. ' [' → logprob: -8.60765552520752
    10. 'm' → logprob: -8.85765552520752

Token 267: ' de' (ID: 334)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.46446290612220764
    2. '=' → logprob: -2.214462995529175
    3. '[' → logprob: -2.464462995529175
    4. 'n' → logprob: -2.714462995529175
    5. 'for' → logprob: -3.839462995529175
    6. '(n' → logprob: -4.089462757110596
    7. ',' → logprob: -4.339462757110596
    8. ' of' → logprob: -4.464462757110596
    9. ' [' → logprob: -4.714462757110596
    10. '[(' → logprob: -4.714462757110596

Token 268: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09252956509590149
    2. ' n' → logprob: -2.717529535293579
    3. '[n' → logprob: -4.592529773712158
    4. '(n' → logprob: -4.717529773712158
    5. 'm' → logprob: -6.342529773712158
    6. ' (' → logprob: -7.467529773712158
    7. ' [' → logprob: -8.467529296875
    8. '[' → logprob: -9.092529296875
    9. ' ' → logprob: -9.217529296875
    10. '[(' → logprob: -9.467529296875

Token 269: ' division' (ID: 21629)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13371708989143372
    2. ' n' → logprob: -2.7587170600891113
    3. '(n' → logprob: -3.0087170600891113
    4. '[n' → logprob: -5.508717060089111
    5. ' (' → logprob: -5.883717060089111
    6. 'div' → logprob: -6.133717060089111
    7. 'm' → logprob: -6.258717060089111
    8. ' ' → logprob: -8.13371753692627
    9. 'int' → logprob: -8.38371753692627
    10. '(' → logprob: -9.13371753692627

Token 270: ' entière' (ID: 61583)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25063470005989075
    2. ' n' → logprob: -2.2506346702575684
    3. '(n' → logprob: -2.6256346702575684
    4. ' (' → logprob: -4.375634670257568
    5. '[n' → logprob: -4.375634670257568
    6. '(' → logprob: -5.875634670257568
    7. ' ' → logprob: -6.000634670257568
    8. '[' → logprob: -6.125634670257568
    9. ' de' → logprob: -6.625634670257568
    10. 'de' → logprob: -6.625634670257568

Token 271: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.32900118827819824
    2. '(n' → logprob: -2.2040011882781982
    3. ' de' → logprob: -3.2040011882781982
    4. 'de' → logprob: -3.2040011882781982
    5. '[n' → logprob: -3.5790011882781982
    6. ' n' → logprob: -4.079001426696777
    7. ' (' → logprob: -4.079001426696777
    8. '[' → logprob: -5.079001426696777
    9. '(' → logprob: -5.329001426696777
    10. '//' → logprob: -5.954001426696777

Token 272: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3153996169567108
    2. ' //' → logprob: -1.3153996467590332
    3. 'n' → logprob: -7.190399646759033
    4. '//
' → logprob: -7.690399646759033
    5. '#' → logprob: -7.940399646759033
    6. ' //
' → logprob: -8.065399169921875
    7. ' ' → logprob: -9.690399169921875
    8. 'i' → logprob: -10.440399169921875
    9. '/' → logprob: -10.815399169921875
    10. 'm' → logprob: -10.815399169921875

Token 273: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.600714161526412e-05
    2. ' i' → logprob: -9.500076293945312
    3. '(i' → logprob: -15.000076293945312
    4. ' ' → logprob: -15.625076293945312
    5. '	i' → logprob: -15.875076293945312
    6. '```' → logprob: -16.375076293945312
    7. '   ' → logprob: -17.000076293945312
    8. '
' → logprob: -17.125076293945312
    9. ' ' → logprob: -17.125076293945312
    10. '1' → logprob: -17.375076293945312

Token 274: '.' (ID: 13)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07582780718803406
    2. ' =' → logprob: -2.9508278369903564
    3. '
' → logprob: -4.325827598571777
    4. ' f' → logprob: -6.075827598571777
    5. '=' → logprob: -7.075827598571777
    6. ',' → logprob: -7.450827598571777
    7. '+' → logprob: -7.825827598571777
    8. '1' → logprob: -7.950827598571777
    9. '[' → logprob: -7.950827598571777
    10. '
' → logprob: -8.200827598571777

Token 275: ' 
' (ID: 793)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -8.065608562901616e-05
    2. '
' → logprob: -10.000081062316895
    3. '#' → logprob: -11.250081062316895
    4. ' f' → logprob: -11.750081062316895
    5. '[' → logprob: -12.375081062316895
    6. '```' → logprob: -12.750081062316895
    7. '
' → logprob: -13.500081062316895
    8. '[
' → logprob: -14.375081062316895
    9. '[f' → logprob: -14.375081062316895
    10. 'i' → logprob: -14.500081062316895

Token 276: '#' (ID: 2)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0007468560361303389
    2. ' f' → logprob: -8.000746726989746
    3. '
' → logprob: -8.500746726989746
    4. '#' → logprob: -10.500746726989746
    5. ',' → logprob: -10.625746726989746
    6. '[' → logprob: -10.750746726989746
    7. 'lst' → logprob: -10.875746726989746
    8. '```' → logprob: -10.875746726989746
    9. ' =' → logprob: -11.250746726989746
    10. '
' → logprob: -11.250746726989746

Token 277: '   ' (ID: 271)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.700132997939363e-05
    2. ' f' → logprob: -11.500017166137695
    3. '[' → logprob: -12.375017166137695
    4. '#' → logprob: -14.250017166137695
    5. 'lst' → logprob: -14.250017166137695
    6. '[f' → logprob: -14.625017166137695
    7. '
' → logprob: -15.500017166137695
    8. '```' → logprob: -15.750017166137695
    9. '[i' → logprob: -16.375017166137695
    10. 'list' → logprob: -16.375017166137695

Token 278: ' Ensuite' (ID: 113884)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00013679367839358747
    2. 'lst' → logprob: -9.875136375427246
    3. ' f' → logprob: -10.375136375427246
    4. '[' → logprob: -11.375136375427246
    5. '#' → logprob: -11.375136375427246
    6. 'result' → logprob: -12.375136375427246
    7. 'list' → logprob: -12.625136375427246
    8. 'l' → logprob: -12.875136375427246
    9. 'first' → logprob: -12.875136375427246
    10. 'vals' → logprob: -13.000136375427246

Token 279: ',' (ID: 11)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.02947227843105793
    2. ',' → logprob: -4.154472351074219
    3. ' f' → logprob: -5.279472351074219
    4. '+' → logprob: -5.779472351074219
    5. ']' → logprob: -5.904472351074219
    6. ')' → logprob: -7.529472351074219
    7. '[' → logprob: -8.404472351074219
    8. ':' → logprob: -8.529472351074219
    9. ',f' → logprob: -8.904472351074219
    10. '],' → logprob: -9.029472351074219

Token 280: ' on' (ID: 402)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.003391829552128911
    2. ' f' → logprob: -6.628391742706299
    3. 'lst' → logprob: -7.253391742706299
    4. 'for' → logprob: -7.628391742706299
    5. '   ' → logprob: -9.003392219543457
    6. 'l' → logprob: -9.128392219543457
    7. '#' → logprob: -9.128392219543457
    8. 'vals' → logprob: -9.503392219543457
    9. 'on' → logprob: -9.628392219543457
    10. 'liste' → logprob: -10.128392219543457

Token 281: ' inverse' (ID: 53743)
  Prédit: 'extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'extend' → logprob: -0.12554042041301727
    2. 'append' → logprob: -3.0005404949188232
    3. 'concat' → logprob: -3.6255404949188232
    4. 'f' → logprob: -4.000540256500244
    5. '.extend' → logprob: -4.750540256500244
    6. 'reverse' → logprob: -5.375540256500244
    7. 'conc' → logprob: -6.500540256500244
    8. 'combine' → logprob: -6.625540256500244
    9. '+=' → logprob: -6.875540256500244
    10. 'sort' → logprob: -7.125540256500244

Token 282: ' cette' (ID: 7696)
  Prédit: '()['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.5921077132225037
    2. '()' → logprob: -0.8421077132225037
    3. 'n' → logprob: -5.967107772827148
    4. '[::-' → logprob: -5.967107772827148
    5. '()
' → logprob: -6.092107772827148
    6. '[' → logprob: -6.717107772827148
    7. 's' → logprob: -7.217107772827148
    8. 'f' → logprob: -7.217107772827148
    9. 'l' → logprob: -7.342107772827148
    10. '[n' → logprob: -7.467107772827148

Token 283: ' deuxième' (ID: 51664)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.39203977584838867
    2. 'de' → logprob: -1.2670397758483887
    3. ' liste' → logprob: -4.517039775848389
    4. 'list' → logprob: -4.767039775848389
    5. '()' → logprob: -5.642039775848389
    6. '[' → logprob: -5.642039775848389
    7. '#' → logprob: -5.642039775848389
    8. '[::-' → logprob: -6.392039775848389
    9. 's' → logprob: -6.767039775848389
    10. '2' → logprob: -7.142039775848389

Token 284: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.7516120672225952
    2. '[::-' → logprob: -1.0016120672225952
    3. 'f' → logprob: -3.6266121864318848
    4. '[' → logprob: -3.7516121864318848
    5. 'list' → logprob: -3.8766121864318848
    6. 'lst' → logprob: -4.501612186431885
    7. '()' → logprob: -4.501612186431885
    8. 'range' → logprob: -5.001612186431885
    9. '[i' → logprob: -5.001612186431885
    10. ']' → logprob: -5.126612186431885

Token 285: ' avec' (ID: 3937)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0006065295310690999
    2. '
' → logprob: -8.125606536865234
    3. ' f' → logprob: -9.750606536865234
    4. 'lst' → logprob: -10.000606536865234
    5. '[' → logprob: -10.125606536865234
    6. ' =' → logprob: -10.625606536865234
    7. '#' → logprob: -10.625606536865234
    8. 'first' → logprob: -11.250606536865234
    9. 'list' → logprob: -11.500606536865234
    10. '```' → logprob: -11.625606536865234

Token 286: ' [' (ID: 723)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.06180419772863388
    2. '[' → logprob: -2.9368042945861816
    3. 'list' → logprob: -6.186804294586182
    4. '[i' → logprob: -6.436804294586182
    5. ' [' → logprob: -6.561804294586182
    6. '()[' → logprob: -7.686804294586182
    7. '[list' → logprob: -8.311803817749023
    8. '[n' → logprob: -8.436803817749023
    9. 're' → logprob: -9.061803817749023
    10. '[len' → logprob: -9.436803817749023

Token 287: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.006686602719128132
    2. ':' → logprob: -5.756686687469482
    3. '::' → logprob: -6.381686687469482
    4. '[::-' → logprob: -6.756686687469482
    5. '<' → logprob: -8.256686210632324
    6. '][' → logprob: -9.131686210632324
    7. '
' → logprob: -9.506686210632324
    8. ']' → logprob: -9.881686210632324
    9. '```' → logprob: -9.881686210632324
    10. '::
' → logprob: -10.631686210632324

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.755678961984813e-05
    2. '-' → logprob: -9.875077247619629
    3. ' ' → logprob: -11.375077247619629
    4. 'er' → logprob: -12.750077247619629
    5. '::-' → logprob: -13.000077247619629
    6. 're' → logprob: -13.625077247619629
    7. '```' → logprob: -13.625077247619629
    8. ']' → logprob: -13.750077247619629
    9. '``' → logprob: -14.562577247619629
    10. ')' → logprob: -14.812577247619629

Token 289: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016469687689095736
    2. '])' → logprob: -6.501646995544434
    3. ']
' → logprob: -9.376646995544434
    4. ')' → logprob: -10.626646995544434
    5. ' ]' → logprob: -11.376646995544434
    6. ']))' → logprob: -11.626646995544434
    7. ']+' → logprob: -13.001646995544434
    8. ')]' → logprob: -13.001646995544434
    9. ']

' → logprob: -13.126646995544434
    10. '][' → logprob: -13.251646995544434

Token 290: ' (' (ID: 350)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00010044389637187123
    2. '
' → logprob: -10.125100135803223
    3. ' f' → logprob: -10.250100135803223
    4. '#' → logprob: -11.750100135803223
    5. '```' → logprob: -12.500100135803223
    6. '[' → logprob: -13.000100135803223
    7. ' =' → logprob: -13.125100135803223
    8. '
' → logprob: -13.875100135803223
    9. '=' → logprob: -14.000100135803223
    10. ',' → logprob: -14.250100135803223

Token 291: 'c' (ID: 66)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6458905935287476
    2. ']' → logprob: -1.2708905935287476
    3. ')' → logprob: -1.6458905935287476
    4. ')
' → logprob: -7.520890712738037
    5. ']))' → logprob: -7.520890712738037
    6. 'n' → logprob: -8.270890235900879
    7. ']
' → logprob: -8.520890235900879
    8. '])
' → logprob: -8.770890235900879
    9. '#' → logprob: -9.395890235900879
    10. '))' → logprob: -9.520890235900879

Token 292: ''est' (ID: 6616)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.21431595087051392
    2. ']' → logprob: -1.9643158912658691
    3. 's' → logprob: -4.214315891265869
    4. ')' → logprob: -4.214315891265869
    5. 'n' → logprob: -5.214315891265869
    6. ']),' → logprob: -5.839315891265869
    7. '
' → logprob: -6.089315891265869
    8. ':' → logprob: -6.464315891265869
    9. ' ])' → logprob: -6.714315891265869
    10. ' ]' → logprob: -6.964315891265869

Token 293: ' pourquoi' (ID: 39224)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7593565583229065
    2. ')' → logprob: -1.6343564987182617
    3. 'la' → logprob: -2.1343564987182617
    4. 'une' → logprob: -3.1343564987182617
    5. '#' → logprob: -3.3843564987182617
    6. 'l' → logprob: -4.009356498718262
    7. '-à' → logprob: -4.009356498718262
    8. 'que' → logprob: -4.259356498718262
    9. 'à' → logprob: -4.384356498718262
    10. 'le' → logprob: -4.384356498718262

Token 294: ' ça' (ID: 13590)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8847904205322266
    2. 'f' → logprob: -1.8847904205322266
    3. 'n' → logprob: -1.8847904205322266
    4. ']' → logprob: -2.1347904205322266
    5. 'range' → logprob: -2.6347904205322266
    6. 'len' → logprob: -2.7597904205322266
    7. '])' → logprob: -3.0097904205322266
    8. 'i' → logprob: -3.0097904205322266
    9. 'str' → logprob: -3.5097904205322266
    10. 'spl' → logprob: -3.8847904205322266

Token 295: ' se' (ID: 458)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3298964500427246
    2. 'n' → logprob: -2.4548964500427246
    3. '])' → logprob: -2.5798964500427246
    4. '[::-' → logprob: -3.7048964500427246
    5. '#' → logprob: -4.329896450042725
    6. 's' → logprob: -4.454896450042725
    7. 'f' → logprob: -4.829896450042725
    8. ')' → logprob: -4.954896450042725
    9. '[:' → logprob: -5.454896450042725
    10. '[' → logprob: -5.454896450042725

Token 296: ' termine' (ID: 76900)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.2124584913253784
    2. 'n' → logprob: -1.3374584913253784
    3. 's' → logprob: -1.9624584913253784
    4. 'contin' → logprob: -2.087458610534668
    5. 'fait' → logprob: -2.962458610534668
    6. 'f' → logprob: -4.212458610534668
    7. 'combine' → logprob: -4.212458610534668
    8. 'concat' → logprob: -4.587458610534668
    9. '#' → logprob: -4.712458610534668
    10. '[]' → logprob: -5.087458610534668

Token 297: ' par' (ID: 686)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9481022357940674
    2. 'par' → logprob: -0.9481022357940674
    3. ' par' → logprob: -2.3231022357940674
    4. '])' → logprob: -2.6981022357940674
    5. ')' → logprob: -4.198101997375488
    6. ':' → logprob: -4.698101997375488
    7. 'n' → logprob: -5.073101997375488
    8. ',' → logprob: -5.698101997375488
    9. 'pas' → logprob: -5.948101997375488
    10. '][:' → logprob: -5.948101997375488

Token 298: ' les' (ID: 1341)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7380980253219604
    2. '])' → logprob: -0.8630980253219604
    3. '::-' → logprob: -3.48809814453125
    4. '][' → logprob: -4.11309814453125
    5. '[::-' → logprob: -4.61309814453125
    6. ':' → logprob: -4.73809814453125
    7. '']' → logprob: -4.86309814453125
    8. ''])' → logprob: -4.98809814453125
    9. '[' → logprob: -5.98809814453125
    10. '1' → logprob: -6.23809814453125

Token 299: ' plus' (ID: 2932)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6789801120758057
    2. 'i' → logprob: -1.4289801120758057
    3. 'val' → logprob: -3.3039801120758057
    4. '])' → logprob: -3.6789801120758057
    5. '[' → logprob: -3.8039801120758057
    6. 'spl' → logprob: -3.9289801120758057
    7. '[i' → logprob: -4.303979873657227
    8. 'f' → logprob: -4.428979873657227
    9. ']' → logprob: -4.428979873657227
    10. '[n' → logprob: -4.678979873657227

Token 300: ' petits' (ID: 38141)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.1131582260131836
    2. ' grands' → logprob: -2.6131582260131836
    3. ' grandes' → logprob: -3.7381582260131836
    4. 'grand' → logprob: -5.238158226013184
    5. 'pet' → logprob: -6.363158226013184
    6. 'g' → logprob: -7.863158226013184
    7. ' grans' → logprob: -7.988158226013184
    8. 'large' → logprob: -8.488158226013184
    9. '```' → logprob: -8.488158226013184
    10. ')' → logprob: -8.738158226013184

Token 301: ' quot' (ID: 16209)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5652438402175903
    2. 'élé' → logprob: -2.315243721008301
    3. 'val' → logprob: -2.315243721008301
    4. 'i' → logprob: -2.440243721008301
    5. '])' → logprob: -3.440243721008301
    6. 'n' → logprob: -4.065243721008301
    7. 'ent' → logprob: -4.315243721008301
    8. ')' → logprob: -4.815243721008301
    9. 'div' → logprob: -4.815243721008301
    10. ' éléments' → logprob: -4.815243721008301

Token 302: 'ients' (ID: 4288)
  Prédit: 'ients'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ients' → logprob: -0.008157429285347462
    2. 'ents' → logprob: -5.258157253265381
    3. 'i' → logprob: -7.258157253265381
    4. 'ient' → logprob: -7.508157253265381
    5. 'eurs' → logprob: -7.508157253265381
    6. 'iens' → logprob: -7.883157253265381
    7. '```' → logprob: -8.633157730102539
    8. 'e' → logprob: -9.133157730102539
    9. 'iers' → logprob: -9.883157730102539
    10. '[' → logprob: -10.258157730102539

Token 303: ').
' (ID: 6294)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.786474883556366
    2. 'f' → logprob: -1.0364749431610107
    3. ',' → logprob: -2.5364749431610107
    4. ')' → logprob: -3.6614749431610107
    5. ']
' → logprob: -4.036474704742432
    6. 'list' → logprob: -4.786474704742432
    7. '+' → logprob: -5.161474704742432
    8. ' =' → logprob: -5.161474704742432
    9. ']+' → logprob: -5.161474704742432
    10. 'lst' → logprob: -5.411474704742432

Token 304: '#' (ID: 2)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -8.518582762917504e-05
    2. '[' → logprob: -9.75008487701416
    3. ' f' → logprob: -11.25008487701416
    4. '#' → logprob: -12.62508487701416
    5. '
' → logprob: -12.75008487701416
    6. '[
' → logprob: -13.25008487701416
    7. '```' → logprob: -13.37508487701416
    8. 'list' → logprob: -14.12508487701416
    9. '[f' → logprob: -14.62508487701416
    10. 'lst' → logprob: -14.75008487701416

Token 305: ' ' (ID: 220)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -9.829823102336377e-05
    2. '[' → logprob: -9.75009822845459
    3. ' f' → logprob: -10.87509822845459
    4. 'list' → logprob: -12.12509822845459
    5. '
' → logprob: -12.75009822845459
    6. 'lst' → logprob: -12.75009822845459
    7. '#' → logprob: -13.37509822845459
    8. '```' → logprob: -13.62509822845459
    9. '[
' → logprob: -14.12509822845459
    10. '([' → logprob: -14.62509822845459

Token 306: '3' (ID: 18)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -4.596781946020201e-05
    2. '
' → logprob: -11.125045776367188
    3. '[' → logprob: -11.625045776367188
    4. ' f' → logprob: -12.250045776367188
    5. 'lst' → logprob: -12.250045776367188
    6. '#' → logprob: -12.750045776367188
    7. '[f' → logprob: -13.875045776367188
    8. '```' → logprob: -14.000045776367188
    9. 'l' → logprob: -14.375045776367188
    10. 'v' → logprob: -14.500045776367188

Token 307: '.' (ID: 13)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03405619412660599
    2. ' =' → logprob: -4.034056186676025
    3. ' f' → logprob: -4.909056186676025
    4. 'lst' → logprob: -6.534056186676025
    5. '
' → logprob: -6.909056186676025
    6. '=' → logprob: -6.909056186676025
    7. '#' → logprob: -7.034056186676025
    8. 'vals' → logprob: -7.284056186676025
    9. 'unique' → logprob: -7.409056186676025
    10. 'values' → logprob: -7.659056186676025

Token 308: ' On' (ID: 2160)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001636739238165319
    2. 'vals' → logprob: -7.626636505126953
    3. 'lst' → logprob: -7.751636505126953
    4. ' f' → logprob: -8.251636505126953
    5. 'v' → logprob: -8.876636505126953
    6. 'values' → logprob: -9.376636505126953
    7. '#' → logprob: -10.751636505126953
    8. 'val' → logprob: -10.876636505126953
    9. 'arr' → logprob: -11.001636505126953
    10. 'nums' → logprob: -11.501636505126953

Token 309: ' concat' (ID: 73950)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.10603753477334976
    2. 'continue' → logprob: -2.8560376167297363
    3. 'contin' → logprob: -4.856037616729736
    4. ' =' → logprob: -5.106037616729736
    5. 's' → logprob: -5.231037616729736
    6. 'v' → logprob: -5.356037616729736
    7. 'combine' → logprob: -5.356037616729736
    8. '=' → logprob: -5.481037616729736
    9. 'final' → logprob: -5.856037616729736
    10. '.extend' → logprob: -7.231037616729736

Token 310: 'ène' (ID: 22902)
  Prédit: 'éné'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éné' → logprob: -0.7075566053390503
    2. 'én' → logprob: -1.0825566053390503
    3. '[' → logprob: -2.83255672454834
    4. 'é' → logprob: -2.83255672454834
    5. 'ène' → logprob: -4.33255672454834
    6. '#' → logprob: -4.45755672454834
    7. 'énez' → logprob: -4.83255672454834
    8. 'ener' → logprob: -5.70755672454834
    9. '(' → logprob: -5.83255672454834
    10. 'énées' → logprob: -6.20755672454834

Token 311: ' les' (ID: 1341)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2696545124053955
    2. '(list' → logprob: -1.5196545124053955
    3. '([' → logprob: -4.519654273986816
    4. ' list' → logprob: -5.769654273986816
    5. '(
' → logprob: -6.894654273986816
    6. '(range' → logprob: -7.019654273986816
    7. 'range' → logprob: -7.769654273986816
    8. 'f' → logprob: -7.894654273986816
    9. '(' → logprob: -8.394654273986816
    10. '[list' → logprob: -8.769654273986816

Token 312: ' deux' (ID: 10301)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00801127403974533
    2. '[' → logprob: -6.008011341094971
    3. '[list' → logprob: -6.133011341094971
    4. 'f' → logprob: -6.258011341094971
    5. ' list' → logprob: -7.633011341094971
    6. '[f' → logprob: -7.883011341094971
    7. '[
' → logprob: -8.133010864257812
    8. '(list' → logprob: -8.758010864257812
    9. 'range' → logprob: -10.133010864257812
    10. ' [' → logprob: -11.133010864257812

Token 313: ' listes' (ID: 179198)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.14596675336360931
    2. 'list' → logprob: -2.7709667682647705
    3. '([' → logprob: -3.5209667682647705
    4. '(
' → logprob: -3.7709667682647705
    5. 'lst' → logprob: -5.145966529846191
    6. '(f' → logprob: -5.770966529846191
    7. '[' → logprob: -5.895966529846191
    8. '(list' → logprob: -6.145966529846191
    9. '(' → logprob: -6.145966529846191
    10. ' f' → logprob: -6.770966529846191

Token 314: ' pour' (ID: 1930)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00022034443099983037
    2. ' f' → logprob: -9.00022029876709
    3. '[' → logprob: -10.62522029876709
    4. '
' → logprob: -10.87522029876709
    5. ' =' → logprob: -11.00022029876709
    6. 'list' → logprob: -11.12522029876709
    7. '=' → logprob: -12.12522029876709
    8. 'lst' → logprob: -12.87522029876709
    9. '([' → logprob: -13.00022029876709
    10. '   ' → logprob: -13.75022029876709

Token 315: ' obtenir' (ID: 54423)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.002647876739502
    2. ' obtenir' → logprob: -1.002647876739502
    3. 'ob' → logprob: -2.252647876739502
    4. ' f' → logprob: -2.752647876739502
    5. 'form' → logprob: -3.252647876739502
    6. ' form' → logprob: -3.627647876739502
    7. ' ' → logprob: -4.502647876739502
    8. 'former' → logprob: -5.002647876739502
    9. ' créer' → logprob: -5.627647876739502
    10. 'get' → logprob: -5.752647876739502

Token 316: ' la' (ID: 557)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01282899547368288
    2. ' list' → logprob: -4.887828826904297
    3. '[list' → logprob: -5.387828826904297
    4. '[' → logprob: -8.012828826904297
    5. '(list' → logprob: -8.887828826904297
    6. 'f' → logprob: -9.387828826904297
    7. ' [' → logprob: -10.012828826904297
    8. '[f' → logprob: -10.387828826904297
    9. '=list' → logprob: -13.012828826904297
    10. '[i' → logprob: -13.512828826904297

Token 317: ' liste' (ID: 31719)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0029796024318784475
    2. ' f' → logprob: -6.252979755401611
    3. 'list' → logprob: -7.877979755401611
    4. 'lst' → logprob: -8.377979278564453
    5. 'liste' → logprob: -8.877979278564453
    6. '[' → logprob: -9.252979278564453
    7. '[f' → logprob: -10.252979278564453
    8. 'unique' → logprob: -10.627979278564453
    9. 'v' → logprob: -10.752979278564453
    10. 'l' → logprob: -11.502979278564453

Token 318: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03387850522994995
    2. ' f' → logprob: -3.9088785648345947
    3. '(f' → logprob: -5.908878326416016
    4. '(range' → logprob: -6.408878326416016
    5. '(
' → logprob: -6.908878326416016
    6. '(' → logprob: -6.908878326416016
    7. 'v' → logprob: -7.033878326416016
    8. '([' → logprob: -7.033878326416016
    9. ' (' → logprob: -7.158878326416016
    10. '_f' → logprob: -7.283878326416016

Token 319: '.
' (ID: 558)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04231701418757439
    2. '=' → logprob: -3.6673169136047363
    3. ' =' → logprob: -4.167316913604736
    4. ' f' → logprob: -8.542317390441895
    5. '=f' → logprob: -9.667317390441895
    6. '[' → logprob: -10.292317390441895
    7. 'list' → logprob: -10.542317390441895
    8. '=[' → logprob: -10.667317390441895
    9. '```' → logprob: -11.292317390441895
    10. 'lst' → logprob: -11.417317390441895

Token 320: 'first' (ID: 7743)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -8.2994620242971e-06
    2. ' f' → logprob: -12.375008583068848
    3. ' =' → logprob: -13.625008583068848
    4. '[' → logprob: -13.875008583068848
    5. '=' → logprob: -14.875008583068848
    6. '
' → logprob: -15.000008583068848
    7. '```' → logprob: -15.000008583068848
    8. '_f' → logprob: -15.375008583068848
    9. '[f' → logprob: -15.875008583068848
    10. 'list' → logprob: -16.12500762939453

Token 321: '_part' (ID: 24053)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15854008495807648
    2. '_part' → logprob: -2.7835400104522705
    3. '_list' → logprob: -2.7835400104522705
    4. '=' → logprob: -4.90854024887085
    5. '_f' → logprob: -5.03354024887085
    6. '1' → logprob: -5.53354024887085
    7. '=list' → logprob: -6.53354024887085
    8. 'f' → logprob: -6.78354024887085
    9. 'list' → logprob: -7.40854024887085
    10. '=f' → logprob: -7.65854024887085

Token 322: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2521551549434662
    2. ' =' → logprob: -1.5021551847457886
    3. '=list' → logprob: -8.502155303955078
    4. '=[' → logprob: -11.002155303955078
    5. '=f' → logprob: -13.377155303955078
    6. '=[]' → logprob: -13.502155303955078
    7. 'range' → logprob: -14.002155303955078
    8. 'list' → logprob: -14.252155303955078
    9. ' =[' → logprob: -14.502155303955078
    10. 'f' → logprob: -14.752155303955078

Token 323: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.600714161526412e-05
    2. '[list' → logprob: -9.500076293945312
    3. ' list' → logprob: -14.000076293945312
    4. 'range' → logprob: -15.500076293945312
    5. '(list' → logprob: -18.000076293945312
    6. '[' → logprob: -18.250076293945312
    7. '=list' → logprob: -19.000076293945312
    8. '[List' → logprob: -20.500076293945312
    9. 'List' → logprob: -20.625076293945312
    10. '[i' → logprob: -20.750076293945312

Token 324: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.6789137084269896e-05
    2. ' i' → logprob: -11.25003719329834
    3. 'x' → logprob: -11.37503719329834
    4. '0' → logprob: -12.50003719329834
    5. '*i' → logprob: -12.75003719329834
    6. '*' → logprob: -13.37503719329834
    7. '_i' → logprob: -14.00003719329834
    8. 'k' → logprob: -14.12503719329834
    9. 'range' → logprob: -14.37503719329834
    10. '```' → logprob: -14.37503719329834

Token 325: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06994199007749557
    2. 'for' → logprob: -2.694941997528076
    3. ' ' → logprob: -12.319941520690918
    4. '	for' → logprob: -14.819941520690918
    5. ' i' → logprob: -15.319941520690918
    6. 'i' → logprob: -15.319941520690918
    7. ')' → logprob: -15.569941520690918
    8. ' ' → logprob: -15.819941520690918
    9. ' 
' → logprob: -17.444942474365234
    10. '  ' → logprob: -17.444942474365234

Token 326: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0434444397687912
    2. ' i' → logprob: -3.1684443950653076
    3. 'range' → logprob: -7.918444633483887
    4. ' range' → logprob: -9.918444633483887
    5. ' in' → logprob: -10.918444633483887
    6. 'in' → logprob: -11.293444633483887
    7. ' ' → logprob: -14.418444633483887
    8. '	i' → logprob: -14.668444633483887
    9. ' ' → logprob: -16.66844367980957
    10. '(i' → logprob: -16.79344367980957

Token 327: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20242196321487427
    2. 'in' → logprob: -1.7024219036102295
    3. 'range' → logprob: -7.077422142028809
    4. ' ' → logprob: -9.202422142028809
    5. ' range' → logprob: -9.952422142028809
    6. 'i' → logprob: -12.077422142028809
    7. '  ' → logprob: -12.827422142028809
    8. ' i' → logprob: -13.202422142028809
    9. 'first' → logprob: -13.452422142028809
    10. 'n' → logprob: -14.702422142028809

Token 328: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031777136027812958
    2. ' range' → logprob: -5.753177642822266
    3. '(range' → logprob: -17.003177642822266
    4. '	range' → logprob: -19.253177642822266
    5. ' ' → logprob: -20.503177642822266
    6. 'Range' → logprob: -21.628177642822266
    7. '0' → logprob: -21.753177642822266
    8. '   ' → logprob: -22.128177642822266
    9. '  ' → logprob: -22.378177642822266
    10. 're' → logprob: -22.503177642822266

Token 329: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -8.327856630785391e-05
    2. '(' → logprob: -9.500082969665527
    3. 's' → logprob: -11.750082969665527
    4. ' (' → logprob: -15.625082969665527
    5. '(sp' → logprob: -16.375083923339844
    6. 'spl' → logprob: -16.625083923339844
    7. '(n' → logprob: -17.750083923339844
    8. '(m' → logprob: -18.125083923339844
    9. '0' → logprob: -18.375083923339844
    10. '((' → logprob: -18.500083923339844

Token 330: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.006198130082339048
    2. 'p' → logprob: -5.131197929382324
    3. '(' → logprob: -9.256197929382324
    4. 'spl' → logprob: -10.006197929382324
    5. '(pl' → logprob: -10.131197929382324
    6. '1' → logprob: -11.006197929382324
    7. 'plt' → logprob: -11.381197929382324
    8. 'ple' → logprob: -11.631197929382324
    9. 'pls' → logprob: -12.131197929382324
    10. 'п' → logprob: -12.256197929382324

Token 331: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008095058728940785
    2. ')]
' → logprob: -7.750809669494629
    3. ' )' → logprob: -8.000809669494629
    4. ')]

' → logprob: -10.375809669494629
    5. ')]
' → logprob: -12.000809669494629
    6. ' ]' → logprob: -12.875809669494629
    7. ')' → logprob: -13.375809669494629
    8. ']' → logprob: -13.500809669494629
    9. '2' → logprob: -16.250808715820312
    10. 's' → logprob: -16.375808715820312

Token 332: ' ' (ID: 220)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.0012984501663595438
    2. '
' → logprob: -7.376298427581787
    3. ' second' → logprob: -7.751298427581787
    4. 'first' → logprob: -8.876298904418945
    5. ',' → logprob: -10.376298904418945
    6. 'last' → logprob: -11.001298904418945
    7. ' +' → logprob: -11.251298904418945
    8. '+' → logprob: -11.376298904418945
    9. '+
' → logprob: -11.876298904418945
    10. 'reverse' → logprob: -12.001298904418945

Token 333: ' #' (ID: 1069)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.0002407282590866089
    2. ' second' → logprob: -9.750240325927734
    3. '[' → logprob: -10.250240325927734
    4. '[::-' → logprob: -10.375240325927734
    5. '
' → logprob: -10.750240325927734
    6. 'f' → logprob: -10.750240325927734
    7. '+' → logprob: -11.000240325927734
    8. ' +' → logprob: -11.750240325927734
    9. ',' → logprob: -11.875240325927734
    10. 'plus' → logprob: -12.000240325927734

Token 334: ' Liste' (ID: 61030)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.0027119149453938007
    2. '[i' → logprob: -6.002711772918701
    3. ' second' → logprob: -9.25271224975586
    4. '[' → logprob: -9.25271224975586
    5. '[n' → logprob: -11.12771224975586
    6. 'first' → logprob: -11.50271224975586
    7. 'div' → logprob: -12.62771224975586
    8. 'i' → logprob: -13.12771224975586
    9. '[f' → logprob: -13.37771224975586
    10. 'f' → logprob: -13.37771224975586

Token 335: ' contenant' (ID: 131049)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.005529831163585186
    2. ' second' → logprob: -6.380529880523682
    3. 'f' → logprob: -6.505529880523682
    4. '[i' → logprob: -7.005529880523682
    5. '_second' → logprob: -7.505529880523682
    6. '(second' → logprob: -8.505529403686523
    7. ' =' → logprob: -9.130529403686523
    8. '[::-' → logprob: -9.380529403686523
    9. '[' → logprob: -9.630529403686523
    10. '=' → logprob: -9.880529403686523

Token 336: ' [' (ID: 723)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13485932350158691
    2. '0' → logprob: -3.009859323501587
    3. 'range' → logprob: -3.009859323501587
    4. ' i' → logprob: -4.009859085083008
    5. ' range' → logprob: -5.634859085083008
    6. '(i' → logprob: -5.759859085083008
    7. 's' → logprob: -6.759859085083008
    8. '(range' → logprob: -7.509859085083008
    9. ' ' → logprob: -8.384859085083008
    10. 'first' → logprob: -8.634859085083008

Token 337: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03014441765844822
    2. 'i' → logprob: -3.655144453048706
    3. ' ' → logprob: -5.780144214630127
    4. ' i' → logprob: -7.530144214630127
    5. 's' → logprob: -9.405144691467285
    6. 'spl' → logprob: -10.030144691467285
    7. ',' → logprob: -11.280144691467285
    8. '   ' → logprob: -11.280144691467285
    9. ')' → logprob: -11.842644691467285
    10. 'for' → logprob: -11.905144691467285

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019769940990954638
    2. ' ,' → logprob: -8.875197410583496
    3. ']' → logprob: -10.250197410583496
    4. ',s' → logprob: -11.000197410583496
    5. ',
' → logprob: -12.625197410583496
    6. ',i' → logprob: -14.125197410583496
    7. ')' → logprob: -14.750197410583496
    8. ',...' → logprob: -14.875197410583496
    9. 's' → logprob: -15.875197410583496
    10. ',
' → logprob: -16.250198364257812

Token 339: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2883946895599365
    2. ' ' → logprob: -1.4133946895599365
    3. 'spl' → logprob: -5.038394927978516
    4. ',' → logprob: -7.663394927978516
    5. ' spl' → logprob: -8.663394927978516
    6. 's' → logprob: -10.913394927978516
    7. '...,' → logprob: -11.163394927978516
    8. ' ' → logprob: -11.288394927978516
    9. '...' → logprob: -11.350894927978516
    10. ' ,' → logprob: -11.600894927978516

Token 340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14378120005130768
    2. 'spl' → logprob: -2.0187811851501465
    3. ' ' → logprob: -7.2687811851501465
    4. ',' → logprob: -8.643781661987305
    5. '...,' → logprob: -9.268781661987305
    6. '...' → logprob: -10.018781661987305
    7. ' spl' → logprob: -10.143781661987305
    8. 's' → logprob: -11.456281661987305
    9. 'split' → logprob: -12.143781661987305
    10. '```' → logprob: -12.518781661987305

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016873658751137555
    2. ' ,' → logprob: -9.000168800354004
    3. ']' → logprob: -10.375168800354004
    4. ',s' → logprob: -12.500168800354004
    5. ',
' → logprob: -12.625168800354004
    6. ')' → logprob: -12.750168800354004
    7. ',...' → logprob: -12.875168800354004
    8. '2' → logprob: -15.500168800354004
    9. 's' → logprob: -15.875168800354004
    10. 'to' → logprob: -16.000167846679688

Token 342: ' ...,' (ID: 126708)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009937292896211147
    2. ' ' → logprob: -4.634937286376953
    3. '...,' → logprob: -9.509937286376953
    4. '...' → logprob: -9.634937286376953
    5. ',' → logprob: -10.259937286376953
    6. ' ...,' → logprob: -13.259937286376953
    7. 'spl' → logprob: -13.509937286376953
    8. ' ...' → logprob: -13.759937286376953
    9. ' ,' → logprob: -14.009937286376953
    10. ',...' → logprob: -14.509937286376953

Token 343: ' spl' (ID: 15885)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.0012165444204583764
    2. ' spl' → logprob: -7.376216411590576
    3. 's' → logprob: -7.626216411590576
    4. '9' → logprob: -10.376216888427734
    5. '10' → logprob: -10.751216888427734
    6. '20' → logprob: -11.876216888427734
    7. '19' → logprob: -12.251216888427734
    8. '```' → logprob: -12.251216888427734
    9. ' ' → logprob: -12.376216888427734
    10. '4' → logprob: -12.626216888427734

Token 344: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.32594922184944153
    2. ')]' → logprob: -1.5759491920471191
    3. '])' → logprob: -3.825949192047119
    4. ']' → logprob: -3.825949192047119
    5. ')' → logprob: -3.950949192047119
    6. ' -' → logprob: -4.950949192047119
    7. 's' → logprob: -7.825949192047119
    8. ')]
' → logprob: -8.200949668884277
    9. ')])' → logprob: -8.450949668884277
    10. ',' → logprob: -8.950949668884277

Token 345: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004976287018507719
    2. ' ' → logprob: -8.125497817993164
    3. '-' → logprob: -9.750497817993164
    4. ',' → logprob: -9.875497817993164
    5. ']' → logprob: -11.250497817993164
    6. ')' → logprob: -11.375497817993164
    7. '])' → logprob: -11.500497817993164
    8. '20' → logprob: -11.750497817993164
    9. '0' → logprob: -11.875497817993164
    10. '100' → logprob: -12.625497817993164

Token 346: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00024429336190223694
    2. ']
' → logprob: -8.375244140625
    3. ' ]' → logprob: -11.375244140625
    4. ']

' → logprob: -13.375244140625
    5. ']
' → logprob: -14.375244140625
    6. ',' → logprob: -16.250244140625
    7. '']' → logprob: -17.375244140625
    8. ']

' → logprob: -17.500244140625
    9. '],' → logprob: -17.750244140625
    10. ')' → logprob: -17.875244140625

Token 347: 'second' (ID: 13901)
  Prédit: 'second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -3.130576806142926e-05
    2. ' second' → logprob: -11.125031471252441
    3. '[' → logprob: -11.500031471252441
    4. '[i' → logprob: -12.125031471252441
    5. '_second' → logprob: -15.750031471252441
    6. 'sec' → logprob: -15.875031471252441
    7. '[n' → logprob: -16.125030517578125
    8. '[first' → logprob: -16.375030517578125
    9. '[last' → logprob: -16.500030517578125
    10. '	second' → logprob: -16.500030517578125

Token 348: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -4.60414821645827e-06
    2. 'part' → logprob: -12.625004768371582
    3. '_second' → logprob: -14.875004768371582
    4. '_parts' → logprob: -14.875004768371582
    5. '_list' → logprob: -15.375004768371582
    6. '_' → logprob: -15.875004768371582
    7. ' =' → logprob: -16.875003814697266
    8. '=' → logprob: -16.875003814697266
    9. ' part' → logprob: -17.250003814697266
    10. 'f' → logprob: -17.250003814697266

Token 349: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269330382347107
    2. ' =' → logprob: -2.1269330978393555
    3. '=[' → logprob: -12.251933097839355
    4. ' =[' → logprob: -16.00193214416504
    5. '[' → logprob: -17.12693214416504
    6. '＝' → logprob: -17.62693214416504
    7. ' ' → logprob: -17.87693214416504
    8. '=list' → logprob: -18.75193214416504
    9. ' ' → logprob: -18.87693214416504
    10. '=[]' → logprob: -19.00193214416504

Token 350: ' [' (ID: 723)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.005378067959100008
    2. ' [' → logprob: -5.255378246307373
    3. '[' → logprob: -9.505377769470215
    4. '[i' → logprob: -10.130377769470215
    5. '[(' → logprob: -10.630377769470215
    6. '[int' → logprob: -13.130377769470215
    7. '[::-' → logprob: -13.380377769470215
    8. 'n' → logprob: -14.130377769470215
    9. ' ' → logprob: -15.005377769470215
    10. '([' → logprob: -15.380377769470215

Token 351: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002506111632101238
    2. '(n' → logprob: -8.375250816345215
    3. ' n' → logprob: -10.875250816345215
    4. '(' → logprob: -14.875250816345215
    5. '	n' → logprob: -15.000250816345215
    6. ' (' → logprob: -15.875250816345215
    7. '[n' → logprob: -16.0002498626709
    8. '   ' → logprob: -16.6252498626709
    9. '((' → logprob: -17.3752498626709
    10. '
' → logprob: -17.6252498626709

Token 352: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.04300832375884056
    2. ' //' → logprob: -3.168008327484131
    3. ' //(' → logprob: -12.418007850646973
    4. '
' → logprob: -13.418007850646973
    5. '#' → logprob: -13.668007850646973
    6. ' ' → logprob: -13.793007850646973
    7. '//
' → logprob: -14.543007850646973
    8. '//=' → logprob: -15.043007850646973
    9. ' ' → logprob: -15.418007850646973
    10. ' //
' → logprob: -15.668007850646973

Token 353: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.816093228830141e-06
    2. 'j' → logprob: -13.25000286102295
    3. '(i' → logprob: -14.50000286102295
    4. ' i' → logprob: -15.12500286102295
    5. 'x' → logprob: -17.375001907348633
    6. '```' → logprob: -17.625001907348633
    7. '(' → logprob: -17.875001907348633
    8. 'k' → logprob: -18.500001907348633
    9. '
' → logprob: -18.750001907348633
    10. '
' → logprob: -18.875001907348633

Token 354: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4740873873233795
    2. ' for' → logprob: -0.9740873575210571
    3. ' ' → logprob: -11.724087715148926
    4. '	for' → logprob: -13.349087715148926
    5. '1' → logprob: -15.099087715148926
    6. '   ' → logprob: -15.474087715148926
    7. '  ' → logprob: -16.59908676147461
    8. '2' → logprob: -16.72408676147461
    9. ' ' → logprob: -16.84908676147461
    10. 'if' → logprob: -17.09908676147461

Token 355: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05793227627873421
    2. 'i' → logprob: -3.0579323768615723
    3. ' range' → logprob: -4.682932376861572
    4. ' i' → logprob: -9.932931900024414
    5. ' ' → logprob: -15.682931900024414
    6. '(range' → logprob: -15.807931900024414
    7. '	range' → logprob: -16.182931900024414
    8. 're' → logprob: -16.182931900024414
    9. 'Range' → logprob: -16.307931900024414
    10. 'in' → logprob: -16.557931900024414

Token 356: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2700188457965851
    2. 'range' → logprob: -1.6450188159942627
    3. 'in' → logprob: -3.5200188159942627
    4. ' range' → logprob: -4.270019054412842
    5. ' ' → logprob: -10.770018577575684
    6. '(range' → logprob: -11.520018577575684
    7. '1' → logprob: -11.770018577575684
    8. '	range' → logprob: -13.895018577575684
    9. 'for' → logprob: -14.020018577575684
    10. '(' → logprob: -14.145018577575684

Token 357: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197004392743111
    2. ' range' → logprob: -2.8119699954986572
    3. ' ' → logprob: -13.686969757080078
    4. '(range' → logprob: -14.311969757080078
    5. '	range' → logprob: -15.186969757080078
    6. '   ' → logprob: -15.686969757080078
    7. '  ' → logprob: -15.936969757080078
    8. '1' → logprob: -16.686969757080078
    9. 'reverse' → logprob: -18.561969757080078
    10. '    ' → logprob: -19.686969757080078

Token 358: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000912774819880724
    2. 'spl' → logprob: -7.125912666320801
    3. 's' → logprob: -9.8759126663208
    4. ' ' → logprob: -10.3759126663208
    5. '(' → logprob: -11.1259126663208
    6. '(s' → logprob: -12.5634126663208
    7. '   ' → logprob: -14.3134126663208
    8. '
' → logprob: -14.5009126663208
    9. 'sl' → logprob: -14.5634126663208
    10. '

' → logprob: -14.8759126663208

Token 359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002888564020395279
    2. 'spl' → logprob: -5.8778886795043945
    3. ' ' → logprob: -10.127888679504395
    4. 's' → logprob: -10.877888679504395
    5. '(' → logprob: -11.877888679504395
    6. '   ' → logprob: -13.252888679504395
    7. 'max' → logprob: -13.440388679504395
    8. 'split' → logprob: -13.815388679504395
    9. 'sl' → logprob: -13.815388679504395
    10. '(s' → logprob: -14.002888679504395

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021829694509506226
    2. ',s' → logprob: -4.396829605102539
    3. 'spl' → logprob: -5.021829605102539
    4. 's' → logprob: -6.271829605102539
    5. ' ,' → logprob: -7.146829605102539
    6. '1' → logprob: -12.896829605102539
    7. ',
' → logprob: -13.396829605102539
    8. ' spl' → logprob: -14.021829605102539
    9. 'to' → logprob: -14.646829605102539
    10. ' ' → logprob: -14.896829605102539

Token 361: ' spl' (ID: 15885)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spl' → logprob: -1.0280383548888494e-06
    2. ' spl' → logprob: -13.875000953674316
    3. 'sl' → logprob: -17.500001907348633
    4. '   ' → logprob: -18.375001907348633
    5. 'split' → logprob: -18.375001907348633
    6. 'sp' → logprob: -18.500001907348633
    7. 'spar' → logprob: -18.875001907348633
    8. '
' → logprob: -19.500001907348633
    9. '	s' → logprob: -19.750001907348633
    10. ' ' → logprob: -19.750001907348633

Token 362: ')]' (ID: 15710)
  Prédit: ')]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')][' → logprob: -0.0022749120835214853
    2. ')]' → logprob: -6.127274990081787
    3. ')' → logprob: -10.002274513244629
    4. ')[' → logprob: -10.252274513244629
    5. ' )' → logprob: -13.002274513244629
    6. '][' → logprob: -13.127274513244629
    7. '[::-' → logprob: -13.377274513244629
    8. ']][' → logprob: -14.002274513244629
    9. ')]
' → logprob: -14.002274513244629
    10. ')])' → logprob: -14.127274513244629

Token 363: ' ' (ID: 220)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.0020527164451777935
    2. 'second' → logprob: -6.5020527839660645
    3. ')[' → logprob: -8.002052307128906
    4. ' [' → logprob: -9.377052307128906
    5. '][' → logprob: -9.627052307128906
    6. '[' → logprob: -9.877052307128906
    7. ' second' → logprob: -12.252052307128906
    8. '[first' → logprob: -13.002052307128906
    9. '
' → logprob: -13.752052307128906
    10. '   ' → logprob: -14.252052307128906

Token 364: ' #' (ID: 1069)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.007576100528240204
    2. 'second' → logprob: -5.382575988769531
    3. ')[' → logprob: -6.007575988769531
    4. '][' → logprob: -8.007575988769531
    5. '[' → logprob: -9.257575988769531
    6. ' [' → logprob: -10.382575988769531
    7. ' second' → logprob: -11.132575988769531
    8. '[first' → logprob: -12.257575988769531
    9. '
' → logprob: -12.507575988769531
    10. ')][' → logprob: -14.382575988769531

Token 365: ' Liste' (ID: 61030)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.24385128915309906
    2. '[n' → logprob: -1.8688513040542603
    3. '[' → logprob: -3.6188511848449707
    4. '[i' → logprob: -4.118851184844971
    5. '[::-' → logprob: -4.243851184844971
    6. ' second' → logprob: -6.368851184844971
    7. ' [' → logprob: -6.743851184844971
    8. '[first' → logprob: -8.368851661682129
    9. ')[' → logprob: -8.618851661682129
    10. '(second' → logprob: -8.618851661682129

Token 366: ' contenant' (ID: 131049)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.0026127593591809273
    2. '][' → logprob: -6.127612590789795
    3. ')[' → logprob: -8.002613067626953
    4. '[' → logprob: -9.877613067626953
    5. ' [' → logprob: -10.627613067626953
    6. 'second' → logprob: -12.752613067626953
    7. ' if' → logprob: -13.002613067626953
    8. '[n' → logprob: -13.502613067626953
    9. '])[' → logprob: -13.877613067626953
    10. '[i' → logprob: -14.127613067626953

Token 367: ' les' (ID: 1341)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.025000574067234993
    2. '[::-' → logprob: -4.40000057220459
    3. 'n' → logprob: -4.77500057220459
    4. 'second' → logprob: -6.52500057220459
    5. '(n' → logprob: -6.77500057220459
    6. ' [' → logprob: -7.40000057220459
    7. '[(' → logprob: -8.27500057220459
    8. 'range' → logprob: -9.40000057220459
    9. 're' → logprob: -9.52500057220459
    10. '[int' → logprob: -9.90000057220459

Token 368: ' quot' (ID: 16209)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.2241753786802292
    2. 'quot' → logprob: -2.099175453186035
    3. 'n' → logprob: -3.099175453186035
    4. 'div' → logprob: -3.849175453186035
    5. '[i' → logprob: -6.099175453186035
    6. 're' → logprob: -6.224175453186035
    7. '(n' → logprob: -6.474175453186035
    8. '[' → logprob: -6.474175453186035
    9. 'plus' → logprob: -6.974175453186035
    10. '[::-' → logprob: -6.974175453186035

Token 369: 'ients' (ID: 4288)
  Prédit: 'ients'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ients' → logprob: -0.08052068948745728
    2. 'ents' → logprob: -2.5805206298828125
    3. 'ient' → logprob: -7.0805206298828125
    4. 'ints' → logprob: -8.455520629882812
    5. 's' → logprob: -8.955520629882812
    6. 'iens' → logprob: -10.080520629882812
    7. '[' → logprob: -10.080520629882812
    8. 'i' → logprob: -10.080520629882812
    9. 'nts' → logprob: -10.205520629882812
    10. 'r' → logprob: -10.330520629882812

Token 370: ' n' (ID: 297)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.09522605687379837
    2. 'second' → logprob: -2.5952260494232178
    3. '][' → logprob: -4.970226287841797
    4. ')[' → logprob: -4.970226287841797
    5. '[' → logprob: -6.470226287841797
    6. ' [' → logprob: -8.095226287841797
    7. ' second' → logprob: -8.220226287841797
    8. '
' → logprob: -10.470226287841797
    9. '(second' → logprob: -10.595226287841797
    10. '_second' → logprob: -10.720226287841797

Token 371: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5091641545295715
    2. ' //' → logprob: -1.0091640949249268
    3. 'for' → logprob: -3.5091640949249268
    4. ' for' → logprob: -5.884164333343506
    5. ' ' → logprob: -7.759164333343506
    6. '[::-' → logprob: -8.259163856506348
    7. ',' → logprob: -8.384163856506348
    8. 'if' → logprob: -8.509163856506348
    9. 'n' → logprob: -9.384163856506348
    10. ']' → logprob: -9.384163856506348

Token 372: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.40168532729148865
    2. 'range' → logprob: -1.151685357093811
    3. '[i' → logprob: -5.2766852378845215
    4. ' range' → logprob: -5.4016852378845215
    5. '(range' → logprob: -6.0266852378845215
    6. '(i' → logprob: -6.9016852378845215
    7. ' i' → logprob: -7.1516852378845215
    8. 're' → logprob: -8.65168571472168
    9. '[' → logprob: -9.27668571472168
    10. '[::-' → logprob: -9.52668571472168

Token 373: ' pour' (ID: 1930)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.15481005609035492
    2. '[::-' → logprob: -2.2798099517822266
    3. 'second' → logprob: -3.2798099517822266
    4. ')[' → logprob: -6.279809951782227
    5. 'if' → logprob: -8.279809951782227
    6. '
' → logprob: -8.279809951782227
    7. ']' → logprob: -8.654809951782227
    8. ' ][' → logprob: -8.779809951782227
    9. '])[' → logprob: -8.904809951782227
    10. ')][' → logprob: -9.279809951782227

Token 374: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14100438356399536
    2. ' range' → logprob: -2.2660043239593506
    3. 'i' → logprob: -3.6410043239593506
    4. ' i' → logprob: -7.01600456237793
    5. 're' → logprob: -7.76600456237793
    6. ' reversed' → logprob: -9.51600456237793
    7. '[i' → logprob: -10.14100456237793
    8. '(range' → logprob: -10.26600456237793
    9. 'reverse' → logprob: -10.39100456237793
    10. ' ' → logprob: -10.64100456237793

Token 375: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38781827688217163
    2. ' in' → logprob: -1.1378183364868164
    3. 'dans' → logprob: -7.512818336486816
    4. ' dans' → logprob: -9.387818336486816
    5. ')' → logprob: -9.512818336486816
    6. 'from' → logprob: -10.262818336486816
    7. 's' → logprob: -10.387818336486816
    8. 'en' → logprob: -10.512818336486816
    9. 'range' → logprob: -10.887818336486816
    10. ' en' → logprob: -11.012818336486816

Token 376: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007534049218520522
    2. 'range' → logprob: -7.750753402709961
    3. ' ' → logprob: -8.250753402709961
    4. ' range' → logprob: -9.875753402709961
    5. 'spl' → logprob: -12.500753402709961
    6. '(' → logprob: -13.813253402709961
    7. '```' → logprob: -14.313253402709961
    8. '2' → logprob: -14.375753402709961
    9. '(range' → logprob: -14.563253402709961
    10. '[' → logprob: -14.688253402709961

Token 377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.263011578586884e-05
    2. ' ' → logprob: -10.625042915344238
    3. 'range' → logprob: -11.000042915344238
    4. ' range' → logprob: -13.750042915344238
    5. '```' → logprob: -15.937542915344238
    6. '
' → logprob: -16.562541961669922
    7. '(' → logprob: -16.625041961669922
    8. '   ' → logprob: -17.000041961669922
    9. '[' → logprob: -17.625041961669922
    10. '

' → logprob: -17.687541961669922

Token 378: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45374709367752075
    2. ' à' → logprob: -1.078747034072876
    3. 'à' → logprob: -3.953747034072876
    4. ' to' → logprob: -5.953747272491455
    5. ' ,' → logprob: -7.453747272491455
    6. 'to' → logprob: -7.578747272491455
    7. ' jusqu' → logprob: -7.828747272491455
    8. 'spl' → logprob: -7.953747272491455
    9. 'a' → logprob: -8.328746795654297
    10. 's' → logprob: -8.453746795654297

Token 379: ' spl' (ID: 15885)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.0017378974007442594
    2. '(s' → logprob: -7.00173807144165
    3. ' spl' → logprob: -7.12673807144165
    4. 'split' → logprob: -12.626737594604492
    5. 's' → logprob: -12.626737594604492
    6. '```' → logprob: -12.751737594604492
    7. ' (' → logprob: -13.126737594604492
    8. '(' → logprob: -13.251737594604492
    9. 'spar' → logprob: -13.501737594604492
    10. '	s' → logprob: -13.876737594604492

Token 380: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.7465070486068726
    2. '[::-' → logprob: -0.8715070486068726
    3. ')[' → logprob: -2.246507167816162
    4. ')][' → logprob: -7.246507167816162
    5. ' [' → logprob: -7.996507167816162
    6. '[' → logprob: -8.246506690979004
    7. '1' → logprob: -8.871506690979004
    8. '])[' → logprob: -9.746506690979004
    9. ' ][' → logprob: -9.746506690979004
    10. ')' → logprob: -9.871506690979004

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. '2' → logprob: -12.000008583068848
    3. ' ' → logprob: -13.250008583068848
    4. '
' → logprob: -17.31250762939453
    5. '-' → logprob: -17.81250762939453
    6. '(' → logprob: -18.12500762939453
    7. '```' → logprob: -18.12500762939453
    8. 'm' → logprob: -18.75000762939453
    9. '17' → logprob: -18.81250762939453
    10. '۱' → logprob: -18.87500762939453

Token 382: '
' (ID: 198)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0974687784910202
    2. '[::-' → logprob: -2.597468852996826
    3. '][' → logprob: -4.597468852996826
    4. 'second' → logprob: -5.347468852996826
    5. ']' → logprob: -6.847468852996826
    6. '
' → logprob: -6.972468852996826
    7. ' f' → logprob: -8.097468376159668
    8. 'full' → logprob: -8.222468376159668
    9. 'first' → logprob: -8.472468376159668
    10. ']+' → logprob: -8.722468376159668

Token 383: 'second' (ID: 13901)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00103042705450207
    2. '[::-' → logprob: -7.126030445098877
    3. 'second' → logprob: -8.626029968261719
    4. ' f' → logprob: -10.876029968261719
    5. '
' → logprob: -11.001029968261719
    6. ']' → logprob: -12.626029968261719
    7. '][' → logprob: -13.626029968261719
    8. '```' → logprob: -13.751029968261719
    9. 'first' → logprob: -14.126029968261719
    10. 'full' → logprob: -14.251029968261719

Token 384: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -6.704273118884885e-07
    2. '_parts' → logprob: -15.125000953674316
    3. '=_' → logprob: -16.625
    4. '_' → logprob: -17.625
    5. '_par' → logprob: -17.625
    6. ')_' → logprob: -17.75
    7. '_second' → logprob: -17.875
    8. ' _' → logprob: -17.875
    9. '=' → logprob: -18.25
    10. ']_' → logprob: -18.25

Token 385: '_re' (ID: 3067)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.00010545044642640278
    2. '=' → logprob: -9.625105857849121
    3. '[' → logprob: -10.875105857849121
    4. ')[' → logprob: -12.125105857849121
    5. ' =' → logprob: -12.250105857849121
    6. '=[' → logprob: -13.125105857849121
    7. '[:' → logprob: -13.625105857849121
    8. ' [' → logprob: -13.750105857849121
    9. '[n' → logprob: -14.000105857849121
    10. ')' → logprob: -14.250105857849121

Token 386: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.6551536321640015
    2. 'v' → logprob: -0.7801536321640015
    3. 'verse' → logprob: -4.030153751373291
    4. 'vers' → logprob: -6.030153751373291
    5. 'f' → logprob: -7.155153751373291
    6. '=' → logprob: -8.280153274536133
    7. 'served' → logprob: -8.530153274536133
    8. 'r' → logprob: -8.655153274536133
    9. 'second' → logprob: -9.030153274536133
    10. 'verted' → logprob: -9.530153274536133

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4788951277732849
    2. '=' → logprob: -0.9788951277732849
    3. '[::-' → logprob: -5.35389518737793
    4. '=[' → logprob: -10.22889518737793
    5. ' =[' → logprob: -10.47889518737793
    6. '[' → logprob: -12.10389518737793
    7. ' ' → logprob: -13.22889518737793
    8. 'second' → logprob: -13.60389518737793
    9. ' [' → logprob: -13.97889518737793
    10. ')' → logprob: -14.22889518737793

Token 388: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.014164329506456852
    2. ' second' → logprob: -4.264164447784424
    3. '[' → logprob: -14.639163970947266
    4. '	second' → logprob: -15.014163970947266
    5. ' ' → logprob: -17.389163970947266
    6. '(second' → logprob: -17.514163970947266
    7. ' [' → logprob: -18.014163970947266
    8. '.second' → logprob: -18.889163970947266
    9. 'Second' → logprob: -19.139163970947266
    10. '   ' → logprob: -19.514163970947266

Token 389: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -1.9361264946837764e-07
    2. 'part' → logprob: -15.75
    3. '_par' → logprob: -18.25
    4. '_' → logprob: -19.25
    5. '_parts' → logprob: -19.5
    6. ' _' → logprob: -19.875
    7. '_second' → logprob: -20.25
    8. '\' → logprob: -20.375
    9. '_PART' → logprob: -20.875
    10. '_p' → logprob: -21.25

Token 390: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -5.967624019831419e-05
    2. '[' → logprob: -9.875060081481934
    3. ' [' → logprob: -11.875060081481934
    4. '[:' → logprob: -14.875060081481934
    5. '[
' → logprob: -15.250060081481934
    6. ')[' → logprob: -16.375059127807617
    7. '[len' → logprob: -16.375059127807617
    8. '[-' → logprob: -16.500059127807617
    9. '[#' → logprob: -16.750059127807617
    10. '[i' → logprob: -16.875059127807617

Token 391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31374508142471313
    2. '-' → logprob: -1.3137450218200684
    3. '])' → logprob: -8.813745498657227
    4. '::-' → logprob: -8.813745498657227
    5. ')' → logprob: -9.813745498657227
    6. ']' → logprob: -9.938745498657227
    7. '```' → logprob: -11.188745498657227
    8. ':' → logprob: -11.438745498657227
    9. ' -' → logprob: -11.438745498657227
    10. '[::-' → logprob: -11.438745498657227

Token 392: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030047018080949783
    2. ')' → logprob: -3.5300469398498535
    3. '])' → logprob: -8.780047416687012
    4. ' ]' → logprob: -9.155047416687012
    5. ' )' → logprob: -11.030047416687012
    6. ']
' → logprob: -12.030047416687012
    7. '#' → logprob: -12.405047416687012
    8. ')]' → logprob: -12.780047416687012
    9. ']+' → logprob: -13.155047416687012
    10. '+' → logprob: -13.280047416687012

Token 393: ' ' (ID: 220)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.8802491215174086e-05
    2. '
' → logprob: -10.750028610229492
    3. '

' → logprob: -12.500028610229492
    4. ' f' → logprob: -13.250028610229492
    5. '#' → logprob: -14.250028610229492
    6. '  
' → logprob: -15.250028610229492
    7. '
' → logprob: -15.625028610229492
    8. ']' → logprob: -16.000028610229492
    9. '```' → logprob: -16.000028610229492
    10. '[' → logprob: -16.000028610229492

Token 394: ' #' (ID: 1069)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.011255542747676373
    2. '
' → logprob: -4.511255741119385
    3. '

' → logprob: -9.011255264282227
    4. '
' → logprob: -9.761255264282227
    5. ' f' → logprob: -10.761255264282227
    6. '  
' → logprob: -13.011255264282227
    7. '#' → logprob: -13.636255264282227
    8. '```' → logprob: -14.136255264282227
    9. ']' → logprob: -14.511255264282227
    10. ' 
' → logprob: -14.761255264282227

Token 395: ' In' (ID: 730)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.012175487354397774
    2. 'first' → logprob: -5.512175559997559
    3. ' second' → logprob: -5.887175559997559
    4. '[::-' → logprob: -6.387175559997559
    5. '#' → logprob: -6.762175559997559
    6. '[]' → logprob: -7.137175559997559
    7. '[' → logprob: -7.762175559997559
    8. 'reverse' → logprob: -8.762175559997559
    9. '[first' → logprob: -9.012175559997559
    10. ' ' → logprob: -9.262175559997559

Token 396: 'vers' (ID: 3674)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.9758756756782532
    2. 'second' → logprob: -1.4758756160736084
    3. 'verted' → logprob: -2.4758756160736084
    4. '[' → logprob: -2.6008756160736084
    5. 'vers' → logprob: -2.6008756160736084
    6. 'verse' → logprob: -2.6008756160736084
    7. 'versed' → logprob: -3.2258756160736084
    8. '[first' → logprob: -3.9758756160736084
    9. '[::-' → logprob: -4.9758758544921875
    10. 't' → logprob: -5.6008758544921875

Token 397: 'er' (ID: 259)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0757455974817276
    2. 'er' → logprob: -3.3257455825805664
    3. 'second' → logprob: -3.8257455825805664
    4. 'é' → logprob: -4.825745582580566
    5. 'ed' → logprob: -5.825745582580566
    6. 'ée' → logprob: -6.075745582580566
    7. '[' → logprob: -7.075745582580566
    8. '[]' → logprob: -8.700745582580566
    9. '[first' → logprob: -8.700745582580566
    10. 'first' → logprob: -8.825745582580566

Token 398: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.003713380778208375
    2. 'first' → logprob: -5.878713607788086
    3. ']' → logprob: -7.628713607788086
    4. ' f' → logprob: -8.628713607788086
    5. 'final' → logprob: -9.753713607788086
    6. 'second' → logprob: -9.753713607788086
    7. 'full' → logprob: -10.378713607788086
    8. '#' → logprob: -10.878713607788086
    9. '[' → logprob: -11.253713607788086
    10. ' first' → logprob: -11.503713607788086

Token 399: ' liste' (ID: 31719)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.021168135106563568
    2. 'liste' → logprob: -4.146168231964111
    3. 'se' → logprob: -5.646168231964111
    4. 'de' → logprob: -6.646168231964111
    5. 'list' → logprob: -8.521167755126953
    6. ' second' → logprob: -10.646167755126953
    7. ' seconde' → logprob: -11.021167755126953
    8. '...' → logprob: -11.521167755126953
    9. '```' → logprob: -12.021167755126953
    10. ' deuxième' → logprob: -12.146167755126953

Token 400: ' pour' (ID: 1930)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.004411959555000067
    2. '
' → logprob: -5.5044121742248535
    3. '

' → logprob: -8.629411697387695
    4. ' f' → logprob: -9.504411697387695
    5. '<|end|>' → logprob: -10.379411697387695
    6. ']' → logprob: -11.254411697387695
    7. '
' → logprob: -11.629411697387695
    8. '  
' → logprob: -11.879411697387695
    9. ' 
' → logprob: -12.629411697387695
    10. ')' → logprob: -12.879411697387695

Token 401: ' une' (ID: 2463)
  Prédit: 'avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avoir' → logprob: -0.5685206055641174
    2. 'ob' → logprob: -1.3185205459594727
    3. ' avoir' → logprob: -2.6935205459594727
    4. 'mettre' → logprob: -3.0685205459594727
    5. 'comm' → logprob: -4.693520545959473
    6. ' obtenir' → logprob: -4.818520545959473
    7. 'que' → logprob: -5.068520545959473
    8. 'l' → logprob: -5.318520545959473
    9. '#' → logprob: -5.693520545959473
    10. 'placer' → logprob: -6.068520545959473

Token 402: ' utilisation' (ID: 80058)
  Prédit: 'raison'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raison' → logprob: -0.012555796653032303
    2. 'bonne' → logprob: -5.2625555992126465
    3. 'me' → logprob: -5.6375555992126465
    4. 'rais' → logprob: -6.7625555992126465
    5. ' raison' → logprob: -7.1375555992126465
    6. 'ra' → logprob: -7.7625555992126465
    7. 'util' → logprob: -8.262556076049805
    8. 'lecture' → logprob: -8.262556076049805
    9. 'r' → logprob: -9.512556076049805
    10. 'plus' → logprob: -9.512556076049805

Token 403: ' ult' (ID: 11619)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -8.888114098226652e-05
    2. ' f' → logprob: -9.500088691711426
    3. '
' → logprob: -12.750088691711426
    4. '#' → logprob: -12.875088691711426
    5. '[' → logprob: -13.125088691711426
    6. 'final' → logprob: -13.125088691711426
    7. ' =' → logprob: -14.000088691711426
    8. '

' → logprob: -14.500088691711426
    9. ']' → logprob: -14.750088691711426
    10. ',' → logprob: -15.000088691711426

Token 404: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.05978978052735329
    2. 'érée' → logprob: -2.9347898960113525
    3. 'ime' → logprob: -6.684789657592773
    4. 'èr' → logprob: -7.309789657592773
    5. 'érale' → logprob: -7.309789657592773
    6. 'ère' → logprob: -7.309789657592773
    7. 'érieur' → logprob: -7.809789657592773
    8. ']' → logprob: -7.934789657592773
    9. 'ér' → logprob: -8.309789657592773
    10. 'er' → logprob: -8.684789657592773

Token 405: '
' (ID: 198)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.747814349073451e-05
    2. '
' → logprob: -11.125017166137695
    3. ' f' → logprob: -13.875017166137695
    4. '
' → logprob: -14.375017166137695
    5. '

' → logprob: -14.500017166137695
    6. '#' → logprob: -15.250017166137695
    7. '  
' → logprob: -16.375017166137695
    8. '```' → logprob: -16.375017166137695
    9. ' 
' → logprob: -16.500017166137695
    10. ']' → logprob: -16.625017166137695

Token 406: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -5.9153885558771435e-06
    2. '
' → logprob: -12.250005722045898
    3. ' f' → logprob: -14.250005722045898
    4. '

' → logprob: -15.875005722045898
    5. ']' → logprob: -16.2500057220459
    6. '#' → logprob: -17.0000057220459
    7. '[' → logprob: -17.0000057220459
    8. '  
' → logprob: -17.2500057220459
    9. '```' → logprob: -18.1250057220459
    10. '
' → logprob: -18.2500057220459

Token 407: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020699352025986
    2. '=' → logprob: -2.3502070903778076
    3. '=f' → logprob: -15.975207328796387
    4. 'f' → logprob: -16.35020637512207
    5. ' ' → logprob: -17.10020637512207
    6. '=[]' → logprob: -17.10020637512207
    7. 's' → logprob: -17.35020637512207
    8. '＝' → logprob: -17.72520637512207
    9. '.' → logprob: -18.10020637512207
    10. ' =)' → logprob: -18.47520637512207

Token 408: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.02980939857661724
    2. ' first' → logprob: -3.5298094749450684
    3. 'second' → logprob: -9.77980899810791
    4. ' second' → logprob: -13.27980899810791
    5. '	first' → logprob: -15.02980899810791
    6. ' ' → logprob: -15.77980899810791
    7. '[first' → logprob: -16.154809951782227
    8. '(first' → logprob: -17.279809951782227
    9. '   ' → logprob: -18.404809951782227
    10. 'f' → logprob: -18.404809951782227

Token 409: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.5
    3. '_par' → logprob: -17.5
    4. '_parts' → logprob: -17.75
    5. 'part' → logprob: -18.125
    6. '_p' → logprob: -20.625
    7. '_PART' → logprob: -20.75
    8. 's' → logprob: -21.25
    9. 'Part' → logprob: -21.375
    10. '```' → logprob: -21.375

Token 410: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029751067981123924
    2. ' +' → logprob: -3.5297510623931885
    3. '+[' → logprob: -15.02975082397461
    4. '+p' → logprob: -16.77975082397461
    5. '＋' → logprob: -17.27975082397461
    6. '[' → logprob: -17.52975082397461
    7. '.extend' → logprob: -17.52975082397461
    8. '+self' → logprob: -17.52975082397461
    9. '+c' → logprob: -17.77975082397461
    10. '+s' → logprob: -17.77975082397461

Token 411: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.00861456897109747
    2. ' second' → logprob: -4.758614540100098
    3. '	second' → logprob: -17.633615493774414
    4. '(second' → logprob: -18.258615493774414
    5. '[' → logprob: -18.883615493774414
    6. '_second' → logprob: -19.633615493774414
    7. 'Second' → logprob: -20.008615493774414
    8. '.second' → logprob: -20.133615493774414
    9. ' ' → logprob: -20.508615493774414
    10. '   ' → logprob: -20.758615493774414

Token 412: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -5.512236498361744e-07
    2. 'part' → logprob: -15.125000953674316
    3. '_second' → logprob: -15.875000953674316
    4. '_' → logprob: -15.875000953674316
    5. '_parts' → logprob: -17.125
    6. '_PART' → logprob: -19.375
    7. '_post' → logprob: -19.75
    8. ' _' → logprob: -19.875
    9. '```' → logprob: -20.375
    10. '_par' → logprob: -20.5

Token 413: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.119577556848526
    2. '_' → logprob: -2.369577646255493
    3. '_second' → logprob: -4.619577407836914
    4. '[' → logprob: -5.744577407836914
    5. '[::-' → logprob: -6.369577407836914
    6. '_part' → logprob: -6.494577407836914
    7. 're' → logprob: -7.119577407836914
    8. 'f' → logprob: -7.494577407836914
    9. '<|end|>' → logprob: -8.369577407836914
    10. '_f' → logprob: -8.994577407836914

Token 414: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.0001238004770129919
    2. 'vers' → logprob: -10.000123977661133
    3. 'ver' → logprob: -10.125123977661133
    4. 'ves' → logprob: -10.875123977661133
    5. 'verse' → logprob: -11.625123977661133
    6. 've' → logprob: -12.750123977661133
    7. 'v' → logprob: -12.875123977661133
    8. 'verted' → logprob: -13.250123977661133
    9. 'vised' → logprob: -13.750123977661133
    10. 'versal' → logprob: -14.625123977661133

Token 415: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 416: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 417: ' On' (ID: 2160)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3548133671283722
    2. ' f' → logprob: -1.2298133373260498
    3. 'first' → logprob: -5.604813575744629
    4. ' first' → logprob: -7.104813575744629
    5. '[]' → logprob: -7.229813575744629
    6. 'second' → logprob: -7.729813575744629
    7. ' ' → logprob: -9.229813575744629
    8. '[' → logprob: -9.229813575744629
    9. 'len' → logprob: -9.354813575744629
    10. 'list' → logprob: -9.729813575744629

Token 418: ' concat' (ID: 73950)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.6217294931411743
    2. 'continue' → logprob: -2.1217293739318848
    3. 'f' → logprob: -2.2467293739318848
    4. 'combine' → logprob: -2.4967293739318848
    5. 'extend' → logprob: -2.6217293739318848
    6. ' complète' → logprob: -2.6217293739318848
    7. 'append' → logprob: -2.9967293739318848
    8. ' continue' → logprob: -3.2467293739318848
    9. '.extend' → logprob: -3.2467293739318848
    10. '#' → logprob: -3.4967293739318848

Token 419: 'ène' (ID: 22902)
  Prédit: 'én'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.9036375880241394
    2. 'éné' → logprob: -1.5286376476287842
    3. 'é' → logprob: -2.278637647628784
    4. 'ène' → logprob: -2.903637647628784
    5. '[first' → logprob: -2.903637647628784
    6. '[' → logprob: -3.153637647628784
    7. 'énez' → logprob: -3.403637647628784
    8. 'ené' → logprob: -3.778637647628784
    9. 'f' → logprob: -4.278637409210205
    10. '(first' → logprob: -4.528637409210205

Token 420: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 421: ' listes' (ID: 179198)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.0952649712562561
    2. ' deux' → logprob: -2.8452649116516113
    3. ' two' → logprob: -4.470264911651611
    4. 'list' → logprob: -4.845264911651611
    5. 'lists' → logprob: -5.220264911651611
    6. 'two' → logprob: -5.720264911651611
    7. 'f' → logprob: -6.095264911651611
    8. ' listes' → logprob: -6.720264911651611
    9. ' lists' → logprob: -8.09526538848877
    10. '[' → logprob: -8.22026538848877

Token 422: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 423: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.03727596253156662
    2. 'ob' → logprob: -3.662276029586792
    3. ' avoir' → logprob: -5.787275791168213
    4. 'former' → logprob: -5.912275791168213
    5. ' form' → logprob: -7.037275791168213
    6. 'f' → logprob: -7.287275791168213
    7. 'avoir' → logprob: -7.412275791168213
    8. 'final' → logprob: -7.412275791168213
    9. 'form' → logprob: -7.412275791168213
    10. ' ' → logprob: -8.037276268005371

Token 424: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0019537294283509254
    2. ' f' → logprob: -6.251953601837158
    3. 'la' → logprob: -10.876954078674316
    4. ' la' → logprob: -12.251954078674316
    5. 'une' → logprob: -14.751954078674316
    6. 'final' → logprob: -15.251954078674316
    7. '_f' → logprob: -15.376954078674316
    8. 'l' → logprob: -16.126953125
    9. '[]' → logprob: -16.251953125
    10. ' ' → logprob: -16.626953125

Token 425: ' liste' (ID: 31719)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.8670179997570813e-05
    2. ' f' → logprob: -11.625019073486328
    3. 'full' → logprob: -12.625019073486328
    4. 'final' → logprob: -12.750019073486328
    5. 'liste' → logprob: -13.750019073486328
    6. 'complete' → logprob: -14.000019073486328
    7. '_f' → logprob: -14.750019073486328
    8. '```' → logprob: -15.000019073486328
    9. 'list' → logprob: -15.625019073486328
    10. '
' → logprob: -15.625019073486328

Token 426: ' finale' (ID: 37759)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.047379665076732635
    2. '<|end|>' → logprob: -3.547379732131958
    3. '(f' → logprob: -4.172379493713379
    4. '(' → logprob: -7.047379493713379
    5. '_f' → logprob: -7.797379493713379
    6. '<|end|>' → logprob: -8.297379493713379
    7. ' f' → logprob: -9.172379493713379
    8. ' =' → logprob: -9.672379493713379
    9. 'of' → logprob: -10.422379493713379
    10. '()' → logprob: -10.422379493713379

Token 427: ' f' (ID: 285)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8924317359924316
    2. '<|end|>' → logprob: -1.2674317359924316
    3. 'print' → logprob: -1.6424317359924316
    4. 'f' → logprob: -2.7674317359924316
    5. '[' → logprob: -4.517431735992432
    6. ']' → logprob: -4.892431735992432
    7. '
' → logprob: -4.892431735992432
    8. '#print' → logprob: -5.017431735992432
    9. ')' → logprob: -5.517431735992432
    10. ' ' → logprob: -5.642431735992432

Token 428: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 429: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4094150960445404
    2. 'print' → logprob: -2.0344150066375732
    3. 'f' → logprob: -2.1594150066375732
    4. '<|end|>' → logprob: -3.0344150066375732
    5. ']' → logprob: -5.034415245056152
    6. '[]' → logprob: -5.409415245056152
    7. '```' → logprob: -5.409415245056152
    8. '[' → logprob: -5.409415245056152
    9. '
' → logprob: -5.534415245056152
    10. '#print' → logprob: -5.784415245056152

Token 430: ' Calcul' (ID: 57243)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.4514124393463135
    2. '#' → logprob: -1.5764124393463135
    3. 'res' → logprob: -2.2014124393463135
    4. 'print' → logprob: -2.4514124393463135
    5. 'g' → logprob: -2.8264124393463135
    6. 'ans' → logprob: -3.0764124393463135
    7. 'len' → logprob: -3.4514124393463135
    8. 'result' → logprob: -3.5764124393463135
    9. 's' → logprob: -3.7014124393463135
    10. 'def' → logprob: -3.9514124393463135

Token 431: 'er' (ID: 259)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7321168780326843
    2. '#' → logprob: -1.982116937637329
    3. 'for' → logprob: -2.232116937637329
    4. 'dp' → logprob: -2.232116937637329
    5. 'ans' → logprob: -3.357116937637329
    6. '=' → logprob: -3.732116937637329
    7. 's' → logprob: -3.857116937637329
    8. 'result' → logprob: -4.10711669921875
    9. 'max' → logprob: -4.10711669921875
    10. ' =' → logprob: -4.23211669921875

Token 432: ' la' (ID: 557)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.1203511953353882
    2. 'len' → logprob: -1.3703511953353882
    3. 'size' → logprob: -2.2453513145446777
    4. 'sz' → logprob: -2.4953513145446777
    5. 'res' → logprob: -2.9953513145446777
    6. 'dp' → logprob: -3.2453513145446777
    7. 'f' → logprob: -3.6203513145446777
    8. 'ans' → logprob: -3.8703513145446777
    9. 'max' → logprob: -4.370351314544678
    10. 'prefix' → logprob: -4.495351314544678

Token 433: ' longueur' (ID: 104613)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.691680908203125
    2. 'g' → logprob: -0.941680908203125
    3. 'size' → logprob: -2.816680908203125
    4. 'f' → logprob: -4.191680908203125
    5. 'length' → logprob: -4.941680908203125
    6. 'sz' → logprob: -5.691680908203125
    7. 'dp' → logprob: -5.691680908203125
    8. 'max' → logprob: -5.941680908203125
    9. 'F' → logprob: -6.191680908203125
    10. 'long' → logprob: -6.316680908203125

Token 434: ' de' (ID: 334)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04734567180275917
    2. 'len' → logprob: -3.7973456382751465
    3. 'length' → logprob: -3.7973456382751465
    4. '_f' → logprob: -7.5473456382751465
    5. 'L' → logprob: -8.547346115112305
    6. 'of' → logprob: -8.547346115112305
    7. 'leng' → logprob: -9.047346115112305
    8. 'flen' → logprob: -9.172346115112305
    9. '=' → logprob: -9.547346115112305
    10. ' =' → logprob: -9.672346115112305

Token 435: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0280383548888494e-06
    2. '(f' → logprob: -14.500000953674316
    3. ' f' → logprob: -14.750000953674316
    4. 'len' → logprob: -18.625001907348633
    5. '```' → logprob: -19.750001907348633
    6. '_f' → logprob: -19.875001907348633
    7. '	f' → logprob: -20.000001907348633
    8. '[f' → logprob: -20.500001907348633
    9. 'length' → logprob: -21.000001907348633
    10. 'ф' → logprob: -21.125001907348633

Token 436: ' liste' (ID: 31719)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -5.5577775128767826e-06
    2. ' f' → logprob: -12.125005722045898
    3. '_f' → logprob: -17.0000057220459
    4. 'len' → logprob: -18.3750057220459
    5. '(f' → logprob: -18.3750057220459
    6. '=f' → logprob: -18.6250057220459
    7. '#' → logprob: -19.2500057220459
    8. '[f' → logprob: -19.5000057220459
    9. 's' → logprob: -19.7500057220459
    10. 'list' → logprob: -19.8750057220459

Token 437: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.09103354066610336
    2. 'len' → logprob: -3.091033458709717
    3. 'length' → logprob: -3.216033458709717
    4. 'L' → logprob: -7.341033458709717
    5. 'l' → logprob: -7.966033458709717
    6. 'leng' → logprob: -8.341033935546875
    7. 'lf' → logprob: -9.466033935546875
    8. 'flen' → logprob: -9.841033935546875
    9. '_f' → logprob: -10.716033935546875
    10. '_len' → logprob: -11.716033935546875

Token 438: ' et' (ID: 859)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.20849347114562988
    2. 'len' → logprob: -1.7084934711456299
    3. 'f' → logprob: -5.333493232727051
    4. 'l' → logprob: -7.083493232727051
    5. 'leng' → logprob: -7.333493232727051
    6. 'L' → logprob: -7.833493232727051
    7. 'size' → logprob: -9.33349323272705
    8. 'flen' → logprob: -9.58349323272705
    9. 'lf' → logprob: -10.08349323272705
    10. 'n' → logprob: -10.33349323272705

Token 439: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2477036416530609
    2. 'length' → logprob: -2.2477035522460938
    3. 'f' → logprob: -2.8727035522460938
    4. 'size' → logprob: -3.6227035522460938
    5. 'l' → logprob: -4.497703552246094
    6. 'L' → logprob: -4.997703552246094
    7. 'F' → logprob: -5.997703552246094
    8. ' length' → logprob: -6.122703552246094
    9. ' len' → logprob: -6.622703552246094
    10. 'sz' → logprob: -6.622703552246094

Token 440: ' stock' (ID: 6546)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.14985254406929016
    2. 'length' → logprob: -2.5248525142669678
    3. 'size' → logprob: -3.3998525142669678
    4. 'l' → logprob: -4.524852752685547
    5. 'f' → logprob: -5.024852752685547
    6. 'tail' → logprob: -6.774852752685547
    7. 'L' → logprob: -6.899852752685547
    8. '#' → logprob: -7.024852752685547
    9. 'leng' → logprob: -7.399852752685547
    10. 'n' → logprob: -7.399852752685547

Token 441: 'er' (ID: 259)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.75678551197052
    2. 'len' → logprob: -1.63178551197052
    3. 'f' → logprob: -1.88178551197052
    4. '_len' → logprob: -2.0067853927612305
    5. '=len' → logprob: -4.6317853927612305
    6. 'e' → logprob: -4.6317853927612305
    7. 'length' → logprob: -5.2567853927612305
    8. '_length' → logprob: -5.3817853927612305
    9. 'er' → logprob: -5.5067853927612305
    10. '=' → logprob: -5.6317853927612305

Token 442: ' dans' (ID: 2671)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.23181210458278656
    2. 'len' → logprob: -2.106812000274658
    3. 'f' → logprob: -2.481812000274658
    4. 'leng' → logprob: -7.606812000274658
    5. 'L' → logprob: -7.856812000274658
    6. 'l' → logprob: -8.356812477111816
    7. 'flen' → logprob: -8.356812477111816
    8. 'lf' → logprob: -9.231812477111816
    9. 'size' → logprob: -9.356812477111816
    10. ' length' → logprob: -9.481812477111816

Token 443: ' k' (ID: 372)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7076001167297363
    2. 'len' → logprob: -1.3326001167297363
    3. 'l' → logprob: -1.8326001167297363
    4. 'f' → logprob: -3.5826001167297363
    5. 'L' → logprob: -3.7076001167297363
    6. 'lf' → logprob: -4.082600116729736
    7. 'sz' → logprob: -6.332600116729736
    8. 'N' → logprob: -6.457600116729736
    9. 'n' → logprob: -6.457600116729736
    10. 'size' → logprob: -6.582600116729736

Token 444: '.
' (ID: 558)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.010579406283795834
    2. '=' → logprob: -4.760579586029053
    3. ' =' → logprob: -6.260579586029053
    4. '=k' → logprob: -9.885579109191895
    5. '=len' → logprob: -13.510579109191895
    6. '
' → logprob: -15.760579109191895
    7. 'len' → logprob: -15.760579109191895
    8. ' k' → logprob: -16.13558006286621
    9. '=
' → logprob: -16.63558006286621
    10. '```' → logprob: -17.76058006286621

Token 445: '#' (ID: 2)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: 0.0
    2. '
' → logprob: -18.625
    3. ' k' → logprob: -19.125
    4. '```' → logprob: -21.25
    5. '#' → logprob: -22.625
    6. '=k' → logprob: -23.875
    7. '`' → logprob: -24.0
    8. '[k' → logprob: -24.125
    9. 'к' → logprob: -24.25
    10. '
' → logprob: -24.375

Token 446: ' C' (ID: 363)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: 0.0
    2. ' k' → logprob: -19.0
    3. '```' → logprob: -21.125
    4. '
' → logprob: -22.0
    5. 'к' → logprob: -23.25
    6. '#' → logprob: -23.5
    7. '`' → logprob: -24.0
    8. '
' → logprob: -24.125
    9. '	k' → logprob: -24.125
    10. '[k' → logprob: -24.375

Token 447: ''est' (ID: 6616)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00010926496179308742
    2. '#' → logprob: -9.375109672546387
    3. ' k' → logprob: -11.625109672546387
    4. '=' → logprob: -12.750109672546387
    5. '=k' → logprob: -12.875109672546387
    6. 'om' → logprob: -13.625109672546387
    7. 'alculate' → logprob: -13.750109672546387
    8. ' =' → logprob: -13.875109672546387
    9. '_k' → logprob: -14.125109672546387
    10. 'alc' → logprob: -14.500109672546387

Token 448: ' égal' (ID: 15059)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.041941456496715546
    2. 'len' → logprob: -3.2919414043426514
    3. ' k' → logprob: -6.1669416427612305
    4. ' len' → logprob: -6.4169416427612305
    5. '=len' → logprob: -9.29194164276123
    6. '=k' → logprob: -10.04194164276123
    7. '=' → logprob: -11.66694164276123
    8. ' =' → logprob: -12.04194164276123
    9. '```' → logprob: -12.91694164276123
    10. '	k' → logprob: -13.16694164276123

Token 449: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8804724812507629
    2. 'k' → logprob: -1.3804724216461182
    3. 'à' → logprob: -1.6304724216461182
    4. '=k' → logprob: -2.755472421646118
    5. 'a' → logprob: -3.630472421646118
    6. '=' → logprob: -4.005472660064697
    7. 'len' → logprob: -4.505472660064697
    8. '=len' → logprob: -4.755472660064697
    9. ' =' → logprob: -5.255472660064697
    10. 'e' → logprob: -6.755472660064697

Token 450: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0041561610996723175
    2. ' len' → logprob: -6.504156112670898
    3. '2' → logprob: -6.629156112670898
    4. 'k' → logprob: -7.004156112670898
    5. 'spl' → logprob: -8.129156112670898
    6. '(len' → logprob: -9.504156112670898
    7. ' ' → logprob: -11.629156112670898
    8. '3' → logprob: -11.754156112670898
    9. '(' → logprob: -11.754156112670898
    10. ' k' → logprob: -12.129156112670898

Token 451: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.004506900440901518
    2. 'k' → logprob: -5.629507064819336
    3. ' len' → logprob: -7.629507064819336
    4. 'spl' → logprob: -8.504507064819336
    5. '2' → logprob: -8.629507064819336
    6. '(len' → logprob: -10.879507064819336
    7. ' k' → logprob: -12.129507064819336
    8. ' ' → logprob: -13.129507064819336
    9. 's' → logprob: -13.129507064819336
    10. '	len' → logprob: -13.254507064819336

Token 452: '*s' (ID: 71191)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.21165251731872559
    2. ' *' → logprob: -1.7116525173187256
    3. '*s' → logprob: -4.711652755737305
    4. '*(' → logprob: -6.961652755737305
    5. '*k' → logprob: -8.336652755737305
    6. '*l' → logprob: -12.086652755737305
    7. '*m' → logprob: -14.586652755737305
    8. '*p' → logprob: -14.711652755737305
    9. ' ' → logprob: -14.836652755737305
    10. ' *(' → logprob: -14.961652755737305

Token 453: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -4.842555426876061e-06
    2. 'p' → logprob: -13.250004768371582
    3. 'l' → logprob: -13.500004768371582
    4. '2' → logprob: -14.750004768371582
    5. 'spl' → logprob: -14.750004768371582
    6. '(pl' → logprob: -15.250004768371582
    7. 'plt' → logprob: -15.375004768371582
    8. 'plen' → logprob: -15.500004768371582
    9. 'Pl' → logprob: -16.3750057220459
    10. 'len' → logprob: -16.3750057220459

Token 454: '-' (ID: 12)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.5048530030981055e-06
    2. '```' → logprob: -14.625001907348633
    3. ' k' → logprob: -14.875001907348633
    4. '#' → logprob: -15.250001907348633
    5. '
' → logprob: -15.375001907348633
    6. '2' → logprob: -16.125001907348633
    7. 'f' → logprob: -17.500001907348633
    8. '=' → logprob: -18.000001907348633
    9. '`' → logprob: -18.000001907348633
    10. ' =' → logprob: -18.500001907348633

Token 455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013279760023579001
    2. '2' → logprob: -6.626327991485596
    3. ' ' → logprob: -14.001327514648438
    4. '0' → logprob: -14.126327514648438
    5. '3' → logprob: -15.376327514648438
    6. '```' → logprob: -16.126327514648438
    7. '   ' → logprob: -17.126327514648438
    8. 'k' → logprob: -17.876327514648438
    9. 'count' → logprob: -18.313827514648438
    10. '-' → logprob: -18.313827514648438

Token 456: ' car' (ID: 1669)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.250000953674316
    3. '
' → logprob: -16.625
    4. '#' → logprob: -16.625
    5. '=' → logprob: -16.75
    6. '2' → logprob: -17.0
    7. '`' → logprob: -17.125
    8. ' =' → logprob: -17.25
    9. ' k' → logprob: -17.25
    10. 'len' → logprob: -17.25

Token 457: ' first' (ID: 1577)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.40108156204223633
    2. ' len' → logprob: -2.0260815620422363
    3. 'k' → logprob: -2.1510815620422363
    4. ' k' → logprob: -2.5260815620422363
    5. 'f' → logprob: -7.526081562042236
    6. 'spl' → logprob: -7.526081562042236
    7. ' spl' → logprob: -8.151081085205078
    8. ' f' → logprob: -8.776081085205078
    9. 'le' → logprob: -9.026081085205078
    10. ' le' → logprob: -9.276081085205078

Token 458: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.49872368574142456
    2. 'len' → logprob: -1.3737237453460693
    3. '_len' → logprob: -2.3737237453460693
    4. 'k' → logprob: -4.49872350692749
    5. 'length' → logprob: -4.49872350692749
    6. '_length' → logprob: -5.12372350692749
    7. 'part' → logprob: -5.62372350692749
    8. ' =' → logprob: -6.24872350692749
    9. 'f' → logprob: -6.37372350692749
    10. 'ength' → logprob: -6.49872350692749

Token 459: ' fait' (ID: 7473)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.23146487772464752
    2. 'length' → logprob: -2.1064648628234863
    3. '_len' → logprob: -3.1064648628234863
    4. 'a' → logprob: -4.606464862823486
    5. '_length' → logprob: -4.731464862823486
    6. 'leng' → logprob: -5.856464862823486
    7. 's' → logprob: -5.981464862823486
    8. '.length' → logprob: -6.106464862823486
    9. '=' → logprob: -6.231464862823486
    10. '+' → logprob: -6.231464862823486

Token 460: ' spl' (ID: 15885)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.19342738389968872
    2. '2' → logprob: -1.818427324295044
    3. 'length' → logprob: -4.568427562713623
    4. 'long' → logprob: -6.818427562713623
    5. 'leng' → logprob: -8.068427085876465
    6. 'tail' → logprob: -8.193427085876465
    7. 'spl' → logprob: -8.193427085876465
    8. '```' → logprob: -8.318427085876465
    9. 's' → logprob: -9.193427085876465
    10. '127' → logprob: -9.318427085876465

Token 461: ' éléments' (ID: 57375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6693646311759949
    2. 'len' → logprob: -1.0443646907806396
    3. ',' → logprob: -3.2943646907806396
    4. 'length' → logprob: -3.5443646907806396
    5. '-' → logprob: -4.6693644523620605
    6. '#' → logprob: -4.7943644523620605
    7. 'long' → logprob: -4.9193644523620605
    8. '-length' → logprob: -4.9193644523620605
    9. '_len' → logprob: -5.4193644523620605
    10. ')
' → logprob: -5.5443644523620605

Token 462: ' et' (ID: 859)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9743012671824545e-05
    2. '=' → logprob: -11.250020027160645
    3. ' =' → logprob: -12.250020027160645
    4. '=k' → logprob: -14.500020027160645
    5. '
' → logprob: -14.750020027160645
    6. ',' → logprob: -15.000020027160645
    7. '```' → logprob: -15.125020027160645
    8. ' k' → logprob: -15.750020027160645
    9. '#' → logprob: -16.625019073486328
    10. ')' → logprob: -17.250019073486328

Token 463: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.005330050829797983
    2. ' second' → logprob: -5.3803300857543945
    3. 'len' → logprob: -7.3803300857543945
    4. '(second' → logprob: -9.630330085754395
    5. '(len' → logprob: -11.755330085754395
    6. ' len' → logprob: -12.005330085754395
    7. ' (' → logprob: -13.505330085754395
    8. ' seconde' → logprob: -13.755330085754395
    9. 'se' → logprob: -13.880330085754395
    10. '	second' → logprob: -13.880330085754395

Token 464: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.00029613598599098623
    2. 'part' → logprob: -8.250296592712402
    3. '_' → logprob: -11.500296592712402
    4. 'len' → logprob: -12.000296592712402
    5. '_len' → logprob: -12.125296592712402
    6. '_parts' → logprob: -12.625296592712402
    7. '_length' → logprob: -13.375296592712402
    8. '=' → logprob: -13.500296592712402
    9. ' =' → logprob: -13.500296592712402
    10. '_par' → logprob: -13.500296592712402

Token 465: ' fait' (ID: 7473)
  Prédit: 'fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fait' → logprob: -0.941459059715271
    2. 'en' → logprob: -1.066459059715271
    3. '_re' → logprob: -2.0664591789245605
    4. 'len' → logprob: -2.8164591789245605
    5. 'f' → logprob: -3.5664591789245605
    6. 're' → logprob: -3.8164591789245605
    7. '_len' → logprob: -5.0664591789245605
    8. '_en' → logprob: -5.1914591789245605
    9. '_f' → logprob: -5.6914591789245605
    10. ' fait' → logprob: -5.8164591789245605

Token 466: ' spl' (ID: 15885)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.011535457335412502
    2. '(s' → logprob: -4.63653564453125
    3. ' spl' → logprob: -6.88653564453125
    4. '(' → logprob: -7.76153564453125
    5. ' (' → logprob: -8.88653564453125
    6. 'len' → logprob: -9.88653564453125
    7. 's' → logprob: -9.88653564453125
    8. '(len' → logprob: -10.76153564453125
    9. '2' → logprob: -11.13653564453125
    10. 'split' → logprob: -11.76153564453125

Token 467: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05208175256848335
    2. ' -' → logprob: -3.177081823348999
    3. '2' → logprob: -5.05208158493042
    4. 's' → logprob: -6.55208158493042
    5. '1' → logprob: -7.42708158493042
    6. 'ength' → logprob: -9.052082061767578
    7. 'elements' → logprob: -9.302082061767578
    8. 'tokens' → logprob: -9.302082061767578
    9. '*' → logprob: -9.427082061767578
    10. ' elements' → logprob: -10.677082061767578

Token 468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.259079363080673e-05
    2. '2' → logprob: -11.625012397766113
    3. ' ' → logprob: -13.500012397766113
    4. 'second' → logprob: -14.125012397766113
    5. '```' → logprob: -15.000012397766113
    6. '
' → logprob: -15.750012397766113
    7. 'first' → logprob: -16.06251335144043
    8. 's' → logprob: -16.25001335144043
    9. 'len' → logprob: -16.50001335144043
    10. 'count' → logprob: -16.62501335144043

Token 469: ' éléments' (ID: 57375)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1160349458805285e-05
    2. '=' → logprob: -12.125011444091797
    3. ' =' → logprob: -12.375011444091797
    4. '
' → logprob: -14.125011444091797
    5. '=k' → logprob: -15.000011444091797
    6. ' k' → logprob: -15.250011444091797
    7. '```' → logprob: -16.375011444091797
    8. '#' → logprob: -17.000011444091797
    9. ',' → logprob: -17.500011444091797
    10. 'f' → logprob: -18.000011444091797

Token 470: '.' (ID: 13)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.896309739408025e-07
    2. '
' → logprob: -14.250000953674316
    3. '```' → logprob: -16.125
    4. '#' → logprob: -17.625
    5. '=' → logprob: -18.375
    6. ' =' → logprob: -18.5
    7. ' k' → logprob: -18.875
    8. 'к' → logprob: -19.25
    9. '=k' → logprob: -19.25
    10. ',' → logprob: -19.625

Token 471: ' 
' (ID: 793)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.5
    3. '
' → logprob: -17.875
    4. ' k' → logprob: -18.625
    5. '`' → logprob: -21.0
    6. '#' → logprob: -21.125
    7. 'к' → logprob: -21.375
    8. ' =' → logprob: -21.5
    9. '=k' → logprob: -21.625
    10. '=' → logprob: -21.75

Token 472: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: 0.0
    2. '```' → logprob: -16.75
    3. '
' → logprob: -19.125
    4. ' k' → logprob: -20.5
    5. '#' → logprob: -21.25
    6. '`' → logprob: -22.125
    7. 'к' → logprob: -23.125
    8. 'length' → logprob: -23.125
    9. '
' → logprob: -23.375
    10. '2' → logprob: -23.375

Token 473: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002098023891449
    2. ' =' → logprob: -2.3502097129821777
    3. '=len' → logprob: -12.725210189819336
    4. '=k' → logprob: -15.725210189819336
    5. '＝' → logprob: -16.225210189819336
    6. '=

' → logprob: -17.100210189819336
    7. '=int' → logprob: -17.225210189819336
    8. '=}' → logprob: -18.475210189819336
    9. 's' → logprob: -19.225210189819336
    10. '=
' → logprob: -19.350210189819336

Token 474: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001995250815525651
    2. ' ' → logprob: -6.501995086669922
    3. 'len' → logprob: -7.626995086669922
    4. ' len' → logprob: -12.126995086669922
    5. '   ' → logprob: -15.751995086669922
    6. '  ' → logprob: -17.126995086669922
    7. '(' → logprob: -17.876995086669922
    8. '(len' → logprob: -17.876995086669922
    9. '```' → logprob: -18.876995086669922
    10. ' ' → logprob: -19.376995086669922

Token 475: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007123126997612417
    2. 'len' → logprob: -7.2507123947143555
    3. ' ' → logprob: -13.000712394714355
    4. ' len' → logprob: -16.62571144104004
    5. '(' → logprob: -18.25071144104004
    6. '(len' → logprob: -18.37571144104004
    7. '   ' → logprob: -19.50071144104004
    8. '```' → logprob: -19.62571144104004
    9. '[len' → logprob: -21.00071144104004
    10. '  ' → logprob: -21.25071144104004

Token 476: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47611212730407715
    2. '*s' → logprob: -0.9761121273040771
    3. ' *' → logprob: -6.226112365722656
    4. '*k' → logprob: -9.851112365722656
    5. '*(' → logprob: -13.351112365722656
    6. '*m' → logprob: -15.226112365722656
    7. '*f' → logprob: -15.351112365722656
    8. '*p' → logprob: -15.476112365722656
    9. '*n' → logprob: -15.476112365722656
    10. '*l' → logprob: -15.976112365722656

Token 477: ' spl' (ID: 15885)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.00034058792516589165
    2. 's' → logprob: -8.375340461730957
    3. ' spl' → logprob: -9.125340461730957
    4. '`s' → logprob: -15.125340461730957
    5. 'split' → logprob: -15.750340461730957
    6. 'Spl' → logprob: -15.875340461730957
    7. '	s' → logprob: -16.125341415405273
    8. '(s' → logprob: -16.250341415405273
    9. 'sp' → logprob: -16.375341415405273
    10. 'sl' → logprob: -16.500341415405273

Token 478: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00317783304490149
    2. ' -' → logprob: -5.753177642822266
    3. '```' → logprob: -16.503177642822266
    4. 's' → logprob: -16.878177642822266
    5. '−' → logprob: -18.253177642822266
    6. ' ' → logprob: -18.253177642822266
    7. '1' → logprob: -18.753177642822266
    8. ' ' → logprob: -19.628177642822266
    9. '   ' → logprob: -19.753177642822266
    10. '–' → logprob: -19.878177642822266

Token 479: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -19.125
    4. '<|end|>' → logprob: -19.25
    5. '۱' → logprob: -20.375
    6. '<|end|>' → logprob: -22.0
    7. '１' → logprob: -22.25
    8. '179' → logprob: -22.375
    9. '19' → logprob: -22.625
    10. '१' → logprob: -22.6875

Token 480: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '۱' → logprob: -20.25
    4. '```' → logprob: -21.25
    5. '<|end|>' → logprob: -21.875
    6. '১' → logprob: -22.0
    7. '１' → logprob: -22.25
    8. '१' → logprob: -22.5
    9. '
' → logprob: -22.5
    10. '' → logprob: -24.125

Token 481: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 482: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5121799111366272
    2. 'f' → logprob: -1.8871798515319824
    3. '<|end|>' → logprob: -2.0121798515319824
    4. '
' → logprob: -2.7621798515319824
    5. ' ' → logprob: -3.7621798515319824
    6. 'n' → logprob: -4.512179851531982
    7. ')' → logprob: -5.637179851531982
    8. 'for' → logprob: -6.012179851531982
    9. ' 
' → logprob: -6.262179851531982
    10. '[' → logprob: -6.262179851531982

Token 483: ' Initial' (ID: 9209)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.804419219493866
    2. 'g' → logprob: -1.3044192790985107
    3. 's' → logprob: -2.4294192790985107
    4. 'sum' → logprob: -3.1794192790985107
    5. 'res' → logprob: -3.8044192790985107
    6. 'h' → logprob: -4.054419040679932
    7. 'ans' → logprob: -4.054419040679932
    8. 'for' → logprob: -4.429419040679932
    9. 'f' → logprob: -4.554419040679932
    10. 'S' → logprob: -4.679419040679932

Token 484: 'iser' (ID: 7466)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.35743165016174316
    2. 'ize' → logprob: -1.3574316501617432
    3. '#' → logprob: -4.357431411743164
    4. 'iser' → logprob: -4.482431411743164
    5. 'i' → logprob: -5.357431411743164
    6. 'e' → logprob: -5.607431411743164
    7. 'izer' → logprob: -6.107431411743164
    8. '_f' → logprob: -6.607431411743164
    9. 'izing' → logprob: -6.857431411743164
    10. 'is' → logprob: -6.982431411743164

Token 485: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16780348122119904
    2. 'g' → logprob: -3.2928035259246826
    3. 's' → logprob: -3.6678035259246826
    4. 'ans' → logprob: -3.9178035259246826
    5. 'res' → logprob: -4.1678032875061035
    6. 'F' → logprob: -4.6678032875061035
    7. 'f' → logprob: -4.6678032875061035
    8. 'sum' → logprob: -5.0428032875061035
    9. 'h' → logprob: -5.4178032875061035
    10. 'd' → logprob: -5.4178032875061035

Token 486: ' liste' (ID: 31719)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4478912055492401
    2. 'liste' → logprob: -1.4478912353515625
    3. 'list' → logprob: -2.1978912353515625
    4. 'lst' → logprob: -4.6978912353515625
    5. 'f' → logprob: -5.9478912353515625
    6. 'lis' → logprob: -7.0728912353515625
    7. 'lista' → logprob: -8.447891235351562
    8. 'result' → logprob: -8.572891235351562
    9. 'l' → logprob: -8.697891235351562
    10. '[' → logprob: -8.947891235351562

Token 487: ' '' (ID: 461)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17178303003311157
    2. 's' → logprob: -2.671782970428467
    3. 'f' → logprob: -3.546782970428467
    4. 'g' → logprob: -4.421782970428467
    5. 'd' → logprob: -4.546782970428467
    6. 'ans' → logprob: -4.796782970428467
    7. 'sum' → logprob: -5.546782970428467
    8. 'S' → logprob: -5.671782970428467
    9. 'F' → logprob: -5.671782970428467
    10. 'h' → logprob: -5.921782970428467

Token 488: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.530228853225708
    2. 'g' → logprob: -1.655228853225708
    3. 's' → logprob: -2.030228853225708
    4. 'S' → logprob: -3.905228853225708
    5. 'sum' → logprob: -4.280228614807129
    6. 'F' → logprob: -4.405228614807129
    7. 'h' → logprob: -4.655228614807129
    8. 'f' → logprob: -4.905228614807129
    9. 'ans' → logprob: -4.905228614807129
    10. 'res' → logprob: -5.530228614807129

Token 489: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012636194005608559
    2. '=' → logprob: -4.637636184692383
    3. ''' → logprob: -5.887636184692383
    4. 'dp' → logprob: -10.762636184692383
    5. ' ' → logprob: -11.137636184692383
    6. '']' → logprob: -11.637636184692383
    7. ']' → logprob: -11.762636184692383
    8. '`' → logprob: -11.887636184692383
    9. '=[' → logprob: -12.012636184692383
    10. '_' → logprob: -12.137636184692383

Token 490: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10497995465993881
    2. '=' → logprob: -2.354979991912842
    3. 'dp' → logprob: -5.354979991912842
    4. '=[' → logprob: -10.354979515075684
    5. ' dp' → logprob: -12.729979515075684
    6. '_dp' → logprob: -13.229979515075684
    7. '(dp' → logprob: -15.479979515075684
    8. ' =[' → logprob: -15.604979515075684
    9. '[' → logprob: -15.979979515075684
    10. '	dp' → logprob: -16.47998046875

Token 491: ' taille' (ID: 41644)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.30799877643585205
    2. '[' → logprob: -2.1829986572265625
    3. 'k' → logprob: -2.4329986572265625
    4. '0' → logprob: -2.8079986572265625
    5. '(k' → logprob: -6.3079986572265625
    6. ' [' → logprob: -6.4329986572265625
    7. '[m' → logprob: -7.9329986572265625
    8. '[-' → logprob: -8.932998657226562
    9. 'size' → logprob: -9.432998657226562
    10. '[n' → logprob: -9.682998657226562

Token 492: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.014499588869512081
    2. '(k' → logprob: -4.264499664306641
    3. '[k' → logprob: -8.38949966430664
    4. ' k' → logprob: -9.76449966430664
    5. ' (' → logprob: -10.01449966430664
    6. '(' → logprob: -13.26449966430664
    7. 'f' → logprob: -13.26449966430664
    8. '[' → logprob: -13.26449966430664
    9. ' [' → logprob: -14.01449966430664
    10. '{k' → logprob: -15.26449966430664

Token 493: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6716431975364685
    2. ' =' → logprob: -0.9216431975364685
    3. '=' → logprob: -2.4216432571411133
    4. '=[' → logprob: -6.171643257141113
    5. '[' → logprob: -8.171643257141113
    6. ' dp' → logprob: -9.421643257141113
    7. ']' → logprob: -11.171643257141113
    8. ',' → logprob: -11.671643257141113
    9. ' [' → logprob: -12.671643257141113
    10. '(dp' → logprob: -12.921643257141113

Token 494: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0206720617134124e-05
    2. '[' → logprob: -11.50001049041748
    3. ' dp' → logprob: -17.375009536743164
    4. '0' → logprob: -20.500009536743164
    5. '```' → logprob: -20.875009536743164
    6. ' [' → logprob: -21.000009536743164
    7. 'd' → logprob: -22.000009536743164
    8. '_dp' → logprob: -22.125009536743164
    9. '	dp' → logprob: -22.625009536743164
    10. '[-' → logprob: -22.750009536743164

Token 495: ' La' (ID: 3038)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.8193366486229934e-05
    2. ' dp' → logprob: -11.125018119812012
    3. '[' → logprob: -12.625018119812012
    4. '0' → logprob: -16.875019073486328
    5. ' [' → logprob: -16.875019073486328
    6. 'd' → logprob: -17.625019073486328
    7. '```' → logprob: -18.500019073486328
    8. '#' → logprob: -19.000019073486328
    9. '	dp' → logprob: -19.250019073486328
    10. '
' → logprob: -20.125019073486328

Token 496: ' liste' (ID: 31719)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007034952868707478
    2. ' dp' → logprob: -8.000703811645508
    3. '[' → logprob: -8.125703811645508
    4. 'd' → logprob: -10.375703811645508
    5. ' =' → logprob: -11.125703811645508
    6. '=' → logprob: -11.625703811645508
    7. '	dp' → logprob: -12.625703811645508
    8. 'p' → logprob: -13.000703811645508
    9. ' [' → logprob: -13.375703811645508
    10. ']' → logprob: -13.500703811645508

Token 497: ' '' (ID: 461)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.30234619975090027
    2. ' =' → logprob: -1.5523462295532227
    3. '=' → logprob: -3.1773462295532227
    4. ' dp' → logprob: -4.927346229553223
    5. ' ' → logprob: -9.677346229553223
    6. '	dp' → logprob: -10.427346229553223
    7. '_dp' → logprob: -10.802346229553223
    8. 'd' → logprob: -10.802346229553223
    9. ' ' → logprob: -10.927346229553223
    10. '(dp' → logprob: -11.552346229553223

Token 498: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0012685667024925351
    2. '[' → logprob: -7.50126838684082
    3. 'f' → logprob: -8.62626838684082
    4. ' =' → logprob: -8.87626838684082
    5. ' dp' → logprob: -9.12626838684082
    6. '=[' → logprob: -9.25126838684082
    7. '=' → logprob: -9.50126838684082
    8. '[k' → logprob: -10.50126838684082
    9. 'k' → logprob: -10.87626838684082
    10. 'd' → logprob: -11.12626838684082

Token 499: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02630726806819439
    2. '=' → logprob: -3.6513073444366455
    3. ' ' → logprob: -13.401307106018066
    4. '[' → logprob: -13.901307106018066
    5. ' =[' → logprob: -14.026307106018066
    6. '=[' → logprob: -14.151307106018066
    7. 'dp' → logprob: -14.276307106018066
    8. ']' → logprob: -14.776307106018066
    9. ')' → logprob: -14.901307106018066
    10. ',' → logprob: -15.026307106018066

Token 500: ' commence' (ID: 44755)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692947685718536
    2. ' =' → logprob: -2.126929521560669
    3. '=[' → logprob: -13.87692928314209
    4. 'dp' → logprob: -15.75192928314209
    5. ' ' → logprob: -16.126930236816406
    6. '=[]' → logprob: -16.626930236816406
    7. ' =[' → logprob: -16.876930236816406
    8. ',' → logprob: -17.126930236816406
    9. '[' → logprob: -17.251930236816406
    10. '＝' → logprob: -18.001930236816406

Token 501: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.238613560795784
    2. ' =' → logprob: -1.8636136054992676
    3. '=[' → logprob: -3.4886136054992676
    4. 'dp' → logprob: -3.8636136054992676
    5. ' par' → logprob: -6.363613605499268
    6. 'par' → logprob: -6.613613605499268
    7. '[' → logprob: -6.613613605499268
    8. ' dp' → logprob: -7.738613605499268
    9. '=[]' → logprob: -8.61361312866211
    10. 'avec' → logprob: -9.23861312866211

Token 502: ' un' (ID: 537)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004448751453310251
    2. '[k' → logprob: -6.254448890686035
    3. '[-' → logprob: -7.004448890686035
    4. '[n' → logprob: -7.379448890686035
    5. '0' → logprob: -7.879448890686035
    6. 'f' → logprob: -8.004448890686035
    7. ' [' → logprob: -9.254448890686035
    8. '[f' → logprob: -9.754448890686035
    9. '1' → logprob: -10.129448890686035
    10. 'k' → logprob: -10.379448890686035

Token 503: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1111334040760994
    2. '0' → logprob: -2.361133337020874
    3. ' [' → logprob: -5.986133575439453
    4. '1' → logprob: -6.986133575439453
    5. 'dp' → logprob: -6.986133575439453
    6. '[int' → logprob: -6.986133575439453
    7. 'er' → logprob: -7.361133575439453
    8. '[i' → logprob: -7.736133575439453
    9. 'e' → logprob: -7.736133575439453
    10. 'k' → logprob: -7.861133575439453

Token 504: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5579901933670044
    2. '[' → logprob: -0.9329901933670044
    3. '1' → logprob: -3.432990074157715
    4. '[n' → logprob: -7.807990074157715
    5. ' [' → logprob: -8.432990074157715
    6. 'f' → logprob: -8.807990074157715
    7. '[]' → logprob: -9.057990074157715
    8. '-' → logprob: -9.057990074157715
    9. 'Mod' → logprob: -9.557990074157715
    10. 'zero' → logprob: -9.807990074157715

Token 505: ' suivi' (ID: 60370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6223186254501343
    2. 'dp' → logprob: -1.4973186254501343
    3. '[' → logprob: -1.7473186254501343
    4. '=' → logprob: -3.747318744659424
    5. ',' → logprob: -4.122318744659424
    6. ']' → logprob: -4.122318744659424
    7. '=[' → logprob: -5.622318744659424
    8. ' [' → logprob: -6.497318744659424
    9. ' dp' → logprob: -6.747318744659424
    10. '_dp' → logprob: -6.997318744659424

Token 506: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7912739515304565
    2. '[' → logprob: -1.4162739515304565
    3. 'd' → logprob: -1.9162739515304565
    4. ' de' → logprob: -2.916274070739746
    5. ']' → logprob: -3.416274070739746
    6. ',' → logprob: -4.166274070739746
    7. 'k' → logprob: -4.666274070739746
    8. 'f' → logprob: -4.791274070739746
    9. '[k' → logprob: -4.791274070739746
    10. ' d' → logprob: -5.416274070739746

Token 507: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03480459377169609
    2. ' [' → logprob: -4.034804821014404
    3. '[k' → logprob: -4.159804821014404
    4. '[i' → logprob: -7.909804821014404
    5. 'k' → logprob: -8.409804344177246
    6. '[s' → logprob: -9.159804344177246
    7. '[-' → logprob: -9.534804344177246
    8. '0' → logprob: -9.784804344177246
    9. '[f' → logprob: -10.534804344177246
    10. ' k' → logprob: -11.159804344177246

Token 508: 'k' (ID: 74)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3913627862930298
    2. 'k' → logprob: -1.7663627862930298
    3. ' [' → logprob: -2.6413626670837402
    4. '[k' → logprob: -2.8913626670837402
    5. '0' → logprob: -4.14136266708374
    6. ' k' → logprob: -4.64136266708374
    7. ' ' → logprob: -8.141363143920898
    8. '1' → logprob: -9.516363143920898
    9. '[f' → logprob: -9.641363143920898
    10. '(k' → logprob: -10.641363143920898

Token 509: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006720705423504114
    2. ' -' → logprob: -5.006720542907715
    3. ')' → logprob: -12.256720542907715
    4. '
' → logprob: -15.631720542907715
    5. '[' → logprob: -15.881720542907715
    6. ' ' → logprob: -16.38172149658203
    7. '#' → logprob: -16.88172149658203
    8. '-
' → logprob: -17.63172149658203
    9. '```' → logprob: -17.63172149658203
    10. 'k' → logprob: -17.88172149658203

Token 510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -12.250008583068848
    3. '[' → logprob: -13.000008583068848
    4. '-' → logprob: -14.875008583068848
    5. '0' → logprob: -15.250008583068848
    6. ' -' → logprob: -16.12500762939453
    7. '2' → logprob: -16.31250762939453
    8. 'k' → logprob: -16.56250762939453
    9. '   ' → logprob: -17.12500762939453
    10. ' [' → logprob: -17.18750762939453

Token 511: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.910282552242279
    2. '0' → logprob: -1.1602826118469238
    3. ',' → logprob: -1.6602826118469238
    4. ' zeros' → logprob: -3.035282611846924
    5. ']' → logprob: -4.285282611846924
    6. '[' → logprob: -4.535282611846924
    7. '*[' → logprob: -4.910282611846924
    8. ' [' → logprob: -5.285282611846924
    9. ' ' → logprob: -6.035282611846924
    10. 'zeros' → logprob: -6.660282611846924

Token 512: ' fois' (ID: 14697)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7090882658958435
    2. ' [' → logprob: -0.8340882658958435
    3. '0' → logprob: -2.9590883255004883
    4. ' zeros' → logprob: -4.334088325500488
    5. ',' → logprob: -5.959088325500488
    6. 'zeros' → logprob: -6.709088325500488
    7. 's' → logprob: -6.834088325500488
    8. ' elements' → logprob: -6.959088325500488
    9. ' ' → logprob: -7.334088325500488
    10. ',[' → logprob: -7.959088325500488

Token 513: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6186608076095581
    2. '0' → logprob: -1.368660807609558
    3. ' [' → logprob: -2.2436609268188477
    4. '100' → logprob: -3.3686609268188477
    5. ' ' → logprob: -3.6186609268188477
    6. '1' → logprob: -3.9936609268188477
    7. 'Mod' → logprob: -4.993660926818848
    8. '[n' → logprob: -5.618660926818848
    9. '-' → logprob: -6.243660926818848
    10. 'n' → logprob: -6.368660926818848

Token 514: ' valeur' (ID: 41664)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0226496458053589
    2. 'string' → logprob: -2.0226497650146484
    3. 'Mod' → logprob: -2.2726497650146484
    4. 'nt' → logprob: -2.6476497650146484
    5. 'int' → logprob: -2.7726497650146484
    6. '0' → logprob: -2.7726497650146484
    7. ' valeur' → logprob: -3.8976497650146484
    8. 'ns' → logprob: -4.147649765014648
    9. 'val' → logprob: -4.272649765014648
    10. 'value' → logprob: -4.397649765014648

Token 515: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.46016088128089905
    2. '0' → logprob: -2.085160970687866
    3. 'm' → logprob: -2.210160970687866
    4. '[' → logprob: -3.210160970687866
    5. ' ' → logprob: -3.335160970687866
    6. ' m' → logprob: -4.210160732269287
    7. 'Mod' → logprob: -4.710160732269287
    8. '(' → logprob: -4.835160732269287
    9. ' [' → logprob: -5.460160732269287
    10. '[m' → logprob: -5.585160732269287

Token 516: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8014792799949646
    2. '1' → logprob: -1.4264793395996094
    3. '0' → logprob: -1.9264793395996094
    4. 'Mod' → logprob: -2.3014793395996094
    5. '(' → logprob: -3.8014793395996094
    6. '(Mod' → logprob: -4.301479339599609
    7. 'n' → logprob: -4.426479339599609
    8. '(m' → logprob: -5.051479339599609
    9. '(n' → logprob: -5.426479339599609
    10. '100' → logprob: -5.801479339599609

Token 517: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06345073878765106
    2. '[' → logprob: -2.813450813293457
    3. ' =' → logprob: -6.688450813293457
    4. '=' → logprob: -9.188450813293457
    5. '=[' → logprob: -9.938450813293457
    6. ' [' → logprob: -10.063450813293457
    7. ' dp' → logprob: -10.688450813293457
    8. ']' → logprob: -11.938450813293457
    9. '
' → logprob: -12.438450813293457
    10. ',' → logprob: -12.688450813293457

Token 518: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018189631402492523
    2. '[' → logprob: -4.018189430236816
    3. ' =' → logprob: -10.643189430236816
    4. ' [' → logprob: -12.018189430236816
    5. ' dp' → logprob: -12.643189430236816
    6. '=' → logprob: -12.768189430236816
    7. '=[' → logprob: -13.143189430236816
    8. '
' → logprob: -13.893189430236816
    9. '0' → logprob: -14.893189430236816
    10. ']' → logprob: -15.643189430236816

Token 519: ' C' (ID: 363)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00015920029545668513
    2. '[' → logprob: -8.75015926361084
    3. ' dp' → logprob: -14.37515926361084
    4. ' [' → logprob: -16.250158309936523
    5. '
' → logprob: -17.750158309936523
    6. '0' → logprob: -19.250158309936523
    7. '```' → logprob: -20.625158309936523
    8. '

' → logprob: -20.875158309936523
    9. 'dt' → logprob: -21.000158309936523
    10. ']' → logprob: -21.125158309936523

Token 520: ''est' (ID: 6616)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12750385701656342
    2. 'p' → logprob: -2.1275038719177246
    3. '=' → logprob: -8.627503395080566
    4. ' =' → logprob: -8.877503395080566
    5. ' dp' → logprob: -9.002503395080566
    6. '[' → logprob: -9.752503395080566
    7. '	dp' → logprob: -10.877503395080566
    8. '_dp' → logprob: -11.002503395080566
    9. 'mp' → logprob: -12.002503395080566
    10. 'py' → logprob: -12.002503395080566

Token 521: '-à' (ID: 56297)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35086575150489807
    2. 'dp' → logprob: -1.2258657217025757
    3. ' [' → logprob: -6.225865840911865
    4. ' dp' → logprob: -7.975865840911865
    5. ' =' → logprob: -9.975865364074707
    6. '=[' → logprob: -11.225865364074707
    7. '=' → logprob: -11.475865364074707
    8. '0' → logprob: -11.475865364074707
    9. ' ' → logprob: -12.475865364074707
    10. ' ' → logprob: -13.100865364074707

Token 522: '-dire' (ID: 76064)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0023476961068809032
    2. ' [' → logprob: -6.252347469329834
    3. 'dp' → logprob: -8.002347946166992
    4. '0' → logprob: -9.877347946166992
    5. '[k' → logprob: -11.627347946166992
    6. ']' → logprob: -12.502347946166992
    7. 'p' → logprob: -12.752347946166992
    8. ' dp' → logprob: -12.752347946166992
    9. ' ' → logprob: -13.002347946166992
    10. '([' → logprob: -13.252347946166992

Token 523: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01508287526667118
    2. ' [' → logprob: -4.265082836151123
    3. 'dp' → logprob: -7.015082836151123
    4. ' dp' → logprob: -11.640083312988281
    5. '0' → logprob: -12.265083312988281
    6. '([' → logprob: -12.640083312988281
    7. ' =' → logprob: -13.015083312988281
    8. '=[' → logprob: -13.890083312988281
    9. ']' → logprob: -15.765083312988281
    10. ':' → logprob: -16.01508331298828

Token 524: ' dp' (ID: 21546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12901213765144348
    2. 'dp' → logprob: -2.129012107849121
    3. ' [' → logprob: -6.254012107849121
    4. ' dp' → logprob: -8.754012107849121
    5. '0' → logprob: -14.879012107849121
    6. '([' → logprob: -15.504012107849121
    7. '   ' → logprob: -16.004013061523438
    8. '[
' → logprob: -16.129013061523438
    9. '	dp' → logprob: -16.379013061523438
    10. '_dp' → logprob: -16.504013061523438

Token 525: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07922419905662537
    2. '=' → logprob: -2.579224109649658
    3. '=[' → logprob: -8.204224586486816
    4. ' =[' → logprob: -10.079224586486816
    5. '[' → logprob: -11.079224586486816
    6. ' ' → logprob: -14.204224586486816
    7. 's' → logprob: -14.454224586486816
    8. 'dp' → logprob: -14.579224586486816
    9. ']' → logprob: -14.704224586486816
    10. ' [' → logprob: -14.954224586486816

Token 526: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7517842650413513
    2. ']' → logprob: -0.7517842650413513
    3. '=' → logprob: -3.751784324645996
    4. '[' → logprob: -3.876784324645996
    5. ' =' → logprob: -4.751784324645996
    6. ']=' → logprob: -6.626784324645996
    7. '=[' → logprob: -6.876784324645996
    8. ' [' → logprob: -7.126784324645996
    9. ' ]' → logprob: -8.376784324645996
    10. '1' → logprob: -8.626784324645996

Token 527: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015098588773980737
    2. ']=' → logprob: -7.126509666442871
    3. '0' → logprob: -7.876509666442871
    4. ',' → logprob: -8.126509666442871
    5. '=' → logprob: -11.501509666442871
    6. '],' → logprob: -12.126509666442871
    7. ' ]' → logprob: -12.501509666442871
    8. '[' → logprob: -12.626509666442871
    9. ']+' → logprob: -12.751509666442871
    10. ']==' → logprob: -13.501509666442871

Token 528: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. ',' → logprob: -17.437658309936523
    4. '=' → logprob: -17.625158309936523
    5. ' ' → logprob: -17.625158309936523
    6. '   ' → logprob: -18.312658309936523
    7. '۰' → logprob: -18.437658309936523
    8. '1' → logprob: -18.500158309936523
    9. '  ' → logprob: -18.687658309936523
    10. '[' → logprob: -18.750158309936523

Token 529: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18977850675582886
    2. 'dp' → logprob: -2.0647785663604736
    3. '[' → logprob: -3.1897785663604736
    4. ' =' → logprob: -6.5647783279418945
    5. '=' → logprob: -7.1897783279418945
    6. ' dp' → logprob: -7.3147783279418945
    7. '=[' → logprob: -7.9397783279418945
    8. ' ,' → logprob: -7.9397783279418945
    9. '
' → logprob: -8.064778327941895
    10. ';' → logprob: -8.314778327941895

Token 530: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014261290431022644
    2. ' dp' → logprob: -4.639261245727539
    3. '[' → logprob: -5.514261245727539
    4. ' [' → logprob: -8.389261245727539
    5. '1' → logprob: -9.014261245727539
    6. '```' → logprob: -10.014261245727539
    7. '
' → logprob: -11.014261245727539
    8. ' ' → logprob: -11.639261245727539
    9. ' ' → logprob: -11.889261245727539
    10. '	dp' → logprob: -12.139261245727539

Token 531: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0964638814330101
    2. '=' → logprob: -2.846463918685913
    3. ' =' → logprob: -3.471463918685913
    4. '=[' → logprob: -5.971463680267334
    5. '1' → logprob: -9.971464157104492
    6. ',' → logprob: -9.971464157104492
    7. ' =[' → logprob: -10.221464157104492
    8. 's' → logprob: -10.721464157104492
    9. ']' → logprob: -11.346464157104492
    10. ' [' → logprob: -11.346464157104492

Token 532: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002141458389814943
    2. 'i' → logprob: -9.500214576721191
    3. ' ' → logprob: -10.250214576721191
    4. ']' → logprob: -10.750214576721191
    5. '   ' → logprob: -10.750214576721191
    6. '[' → logprob: -11.125214576721191
    7. '
' → logprob: -11.625214576721191
    8. ':' → logprob: -11.875214576721191
    9. '```' → logprob: -12.000214576721191
    10. '=' → logprob: -12.125214576721191

Token 533: ']=' (ID: 9539)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.15266849100589752
    2. ']' → logprob: -2.5276684761047363
    3. ']=' → logprob: -3.0276684761047363
    4. ':' → logprob: -4.527668476104736
    5. ':k' → logprob: -6.152668476104736
    6. 'k' → logprob: -8.402668952941895
    7. ']=(' → logprob: -9.527668952941895
    8. '1' → logprob: -10.902668952941895
    9. ':].' → logprob: -11.402668952941895
    10. ',' → logprob: -11.652668952941895

Token 534: 'dp' (ID: 19037)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'dp' → logprob: -16.5000057220459
    4. '[' → logprob: -17.0000057220459
    5. '  ' → logprob: -18.6250057220459
    6. '<|end|>' → logprob: -18.6250057220459
    7. '=' → logprob: -18.7500057220459
    8. '...' → logprob: -18.8750057220459
    9. '۱' → logprob: -19.0000057220459
    10. '```' → logprob: -19.0000057220459

Token 535: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1359640508890152
    2. '2' → logprob: -2.2609641551971436
    3. '1' → logprob: -4.5109639167785645
    4. ']=' → logprob: -5.3859639167785645
    5. ']' → logprob: -6.0109639167785645
    6. '=' → logprob: -6.0109639167785645
    7. 'dp' → logprob: -6.6359639167785645
    8. '...' → logprob: -7.6359639167785645
    9. '```' → logprob: -8.385964393615723
    10. '
' → logprob: -9.510964393615723

Token 536: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.022149579599499702
    2. ']' → logprob: -4.272149562835693
    3. '1' → logprob: -5.647149562835693
    4. ':' → logprob: -6.022149562835693
    5. ':]' → logprob: -7.147149562835693
    6. 'k' → logprob: -7.397149562835693
    7. ']=' → logprob: -8.147150039672852
    8. ',' → logprob: -9.397150039672852
    9. ' :' → logprob: -10.397150039672852
    10. ' ' → logprob: -10.522150039672852

Token 537: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5784626603126526
    2. ']=' → logprob: -0.8284626603126526
    3. ']' → logprob: -6.078462600708008
    4. ' =' → logprob: -9.203462600708008
    5. ',' → logprob: -9.828462600708008
    6. '1' → logprob: -10.828462600708008
    7. '[' → logprob: -11.453462600708008
    8. ']==' → logprob: -11.453462600708008
    9. 's' → logprob: -11.953462600708008
    10. ')=' → logprob: -12.578462600708008

Token 538: '...' (ID: 1008)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02079271525144577
    2. 'dp' → logprob: -3.8957927227020264
    3. '...' → logprob: -8.895792961120605
    4. '=' → logprob: -9.270792961120605
    5. ' ' → logprob: -12.020792961120605
    6. '	dp' → logprob: -12.520792961120605
    7. ' =' → logprob: -12.645792961120605
    8. ' dp' → logprob: -12.895792961120605
    9. '(dp' → logprob: -14.020792961120605
    10. '۱' → logprob: -14.895792961120605

Token 539: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004641544655896723
    2. 'dp' → logprob: -8.25046443939209
    3. '1' → logprob: -9.12546443939209
    4. ' =' → logprob: -9.37546443939209
    5. ' dp' → logprob: -13.37546443939209
    6. ']=' → logprob: -13.50046443939209
    7. ',' → logprob: -13.62546443939209
    8. '0' → logprob: -14.00046443939209
    9. '=k' → logprob: -14.00046443939209
    10. 'p' → logprob: -14.87546443939209

Token 540: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18112927675247192
    2. '1' → logprob: -1.8061292171478271
    3. ' dp' → logprob: -6.806129455566406
    4. ' ' → logprob: -8.681129455566406
    5. '=' → logprob: -10.181129455566406
    6. '(dp' → logprob: -11.368629455566406
    7. '	dp' → logprob: -11.431129455566406
    8. ' =' → logprob: -11.618629455566406
    9. 'p' → logprob: -12.493629455566406
    10. 'k' → logprob: -12.556129455566406

Token 541: '[k' (ID: 14298)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006559174973517656
    2. '1' → logprob: -5.881559371948242
    3. ' =' → logprob: -6.506559371948242
    4. '=' → logprob: -6.756559371948242
    5. '=[' → logprob: -8.131559371948242
    6. ' [' → logprob: -8.256559371948242
    7. '[k' → logprob: -8.756559371948242
    8. '[i' → logprob: -9.381559371948242
    9. ']' → logprob: -9.756559371948242
    10. '```' → logprob: -10.381559371948242

Token 542: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002007268602028489
    2. '1' → logprob: -7.252007484436035
    3. ']' → logprob: -7.502007484436035
    4. ']=' → logprob: -7.877007484436035
    5. ' -' → logprob: -8.377007484436035
    6. '[' → logprob: -9.502007484436035
    7. '=' → logprob: -10.627007484436035
    8. '```' → logprob: -11.377007484436035
    9. '−' → logprob: -11.502007484436035
    10. 'm' → logprob: -13.127007484436035

Token 543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. '-' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.375003814697266
    4. '2' → logprob: -16.250003814697266
    5. '   ' → logprob: -16.625003814697266
    6. '```' → logprob: -16.875003814697266
    7. ']' → logprob: -17.375003814697266
    8. '  ' → logprob: -18.312503814697266
    9. '۱' → logprob: -18.375003814697266
    10. ' -' → logprob: -18.437503814697266

Token 544: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.12943202257156372
    2. '=' → logprob: -2.129431962966919
    3. ']' → logprob: -6.004432201385498
    4. '1' → logprob: -10.75443172454834
    5. ']==' → logprob: -12.37943172454834
    6. '}=' → logprob: -13.00443172454834
    7. '']=' → logprob: -13.50443172454834
    8. ')=' → logprob: -13.50443172454834
    9. ' =' → logprob: -13.87943172454834
    10. '"]=' → logprob: -14.62943172454834

Token 545: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.375158309936523
    4. '  ' → logprob: -18.875158309936523
    5. '```' → logprob: -19.000158309936523
    6. ' ' → logprob: -19.125158309936523
    7. '0' → logprob: -19.562658309936523
    8. '۱' → logprob: -20.000158309936523
    9. '' → logprob: -20.375158309936523
    10. '`' → logprob: -20.375158309936523

Token 546: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00012415809032972902
    2. '[' → logprob: -9.000123977661133
    3. '
' → logprob: -14.500123977661133
    4. ' dp' → logprob: -16.250123977661133
    5. ' =' → logprob: -17.250123977661133
    6. '=[' → logprob: -18.125123977661133
    7. '```' → logprob: -18.375123977661133
    8. ']' → logprob: -18.500123977661133
    9. '0' → logprob: -18.625123977661133
    10. ' [' → logprob: -19.000123977661133

Token 547: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.1888679839321412e-05
    2. '[' → logprob: -10.750021934509277
    3. '
' → logprob: -15.375021934509277
    4. ' dp' → logprob: -16.12502098083496
    5. '```' → logprob: -18.25002098083496
    6. ' =' → logprob: -18.75002098083496
    7. '0' → logprob: -19.37502098083496
    8. '=' → logprob: -19.75002098083496
    9. '[
' → logprob: -20.37502098083496
    10. ']' → logprob: -20.62502098083496

Token 548: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759546756744385
    2. '=' → logprob: -0.8259546756744385
    3. '=[' → logprob: -11.20095443725586
    4. ' =[' → logprob: -14.45095443725586
    5. '[' → logprob: -14.57595443725586
    6. ' ' → logprob: -15.82595443725586
    7. '＝' → logprob: -16.07595443725586
    8. ' ' → logprob: -16.45095443725586
    9. '=[]' → logprob: -16.57595443725586
    10. ']' → logprob: -16.70095443725586

Token 549: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.7697225252486533e-06
    2. ' [' → logprob: -12.500003814697266
    3. '0' → logprob: -17.750003814697266
    4. '([' → logprob: -18.875003814697266
    5. '=[' → logprob: -21.875003814697266
    6. '   ' → logprob: -22.625003814697266
    7. ' ' → logprob: -23.125003814697266
    8. '{' → logprob: -23.375003814697266
    9. '	' → logprob: -23.625003814697266
    10. 'np' → logprob: -23.875003814697266

Token 550: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '۰' → logprob: -22.25
    4. '   ' → logprob: -23.625
    5. '０' → logprob: -23.75
    6. '[' → logprob: -23.875
    7. ']' → logprob: -25.5
    8. '  ' → logprob: -25.5
    9. '०' → logprob: -25.5
    10. '০' → logprob: -25.75

Token 551: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019286326132714748
    2. ']+' → logprob: -6.251928806304932
    3. ',' → logprob: -17.251928329467773
    4. ' ]' → logprob: -17.501928329467773
    5. '}' → logprob: -18.751928329467773
    6. '1' → logprob: -18.751928329467773
    7. '0' → logprob: -19.251928329467773
    8. ')' → logprob: -20.001928329467773
    9. '+' → logprob: -20.001928329467773
    10. '```' → logprob: -20.376928329467773

Token 552: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14862436056137085
    2. ']+' → logprob: -2.6486244201660156
    3. ']' → logprob: -3.0236244201660156
    4. '+[' → logprob: -4.148624420166016
    5. ' +' → logprob: -6.398624420166016
    6. ',' → logprob: -6.898624420166016
    7. '[' → logprob: -9.023624420166016
    8. ',[' → logprob: -10.023624420166016
    9. ')+' → logprob: -10.148624420166016
    10. ')' → logprob: -10.898624420166016

Token 553: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.547789674485102e-05
    2. ' [' → logprob: -10.250035285949707
    3. '1' → logprob: -19.250036239624023
    4. '([' → logprob: -19.625036239624023
    5. '[k' → logprob: -21.875036239624023
    6. '   ' → logprob: -22.500036239624023
    7. ' ' → logprob: -22.875036239624023
    8. '[m' → logprob: -23.000036239624023
    9. '(' → logprob: -23.125036239624023
    10. '[n' → logprob: -23.625036239624023

Token 554: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -20.625
    4. '۱' → logprob: -22.0
    5. '１' → logprob: -22.5
    6. '  ' → logprob: -22.625
    7. '```' → logprob: -22.75
    8. '(' → logprob: -22.875
    9. '১' → logprob: -23.375
    10. '' → logprob: -23.6875

Token 555: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09570272266864777
    2. ']*(' → logprob: -2.595702648162842
    3. ']*' → logprob: -4.095702648162842
    4. 'for' → logprob: -10.970703125
    5. ' for' → logprob: -11.720703125
    6. ']+' → logprob: -12.970703125
    7. '*(' → logprob: -14.720703125
    8. '*' → logprob: -16.220703125
    9. '```' → logprob: -16.470703125
    10. '(' → logprob: -17.845703125

Token 556: ' *' (ID: 425)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.38949230313301086
    2. ']' → logprob: -1.5144922733306885
    3. ']*' → logprob: -2.6394922733306885
    4. '*(' → logprob: -3.8894922733306885
    5. '*' → logprob: -4.889492511749268
    6. 'for' → logprob: -6.014492511749268
    7. ' for' → logprob: -7.264492511749268
    8. '```' → logprob: -9.51449203491211
    9. ' *' → logprob: -10.13949203491211
    10. '*((' → logprob: -11.13949203491211

Token 557: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.250015258789062
    3. ' (' → logprob: -13.250015258789062
    4. 'k' → logprob: -16.250015258789062
    5. '((' → logprob: -16.625015258789062
    6. '{k' → logprob: -19.000015258789062
    7. '\(' → logprob: -20.250015258789062
    8. '[k' → logprob: -20.875015258789062
    9. '(
' → logprob: -21.125015258789062
    10. '2' → logprob: -21.500015258789062

Token 558: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0004309076175559312
    2. '(k' → logprob: -7.750431060791016
    3. ' k' → logprob: -15.750431060791016
    4. '(' → logprob: -17.000431060791016
    5. ' (' → logprob: -17.000431060791016
    6. '{k' → logprob: -18.875431060791016
    7. '	k' → logprob: -20.250431060791016
    8. '   ' → logprob: -21.000431060791016
    9. '_k' → logprob: -21.000431060791016
    10. ' ' → logprob: -22.125431060791016

Token 559: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010902655776590109
    2. ' -' → logprob: -9.12510871887207
    3. '1' → logprob: -21.00010871887207
    4. '−' → logprob: -21.12510871887207
    5. '```' → logprob: -21.50010871887207
    6. ' ' → logprob: -22.12510871887207
    7. '[' → logprob: -22.62510871887207
    8. '–' → logprob: -23.00010871887207
    9. ')' → logprob: -23.12510871887207
    10. '   ' → logprob: -23.37510871887207

Token 560: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '2' → logprob: -21.25
    4. '```' → logprob: -21.75
    5. '۱' → logprob: -21.875
    6. '１' → logprob: -22.5
    7. '   ' → logprob: -22.5625
    8. '১' → logprob: -22.6875
    9. '0' → logprob: -22.875
    10. '3' → logprob: -23.125

Token 561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '۱' → logprob: -20.625
    4. '2' → logprob: -20.75
    5. '１' → logprob: -21.5
    6. '১' → logprob: -21.625
    7. '0' → logprob: -22.0
    8. '```' → logprob: -22.125
    9. '4' → logprob: -22.4375
    10. '१' → logprob: -22.5

Token 562: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -18.125
    4. ']' → logprob: -18.75
    5. ')]' → logprob: -18.75
    6. '）' → logprob: -19.5
    7. '))' → logprob: -19.5
    8. '),' → logprob: -19.5
    9. ')}' → logprob: -19.75
    10. ')`' → logprob: -20.125

Token 563: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31452012062072754
    2. '#' → logprob: -1.4395201206207275
    3. 'i' → logprob: -4.564519882202148
    4. '
' → logprob: -5.189519882202148
    5. '<|end|>' → logprob: -5.564519882202148
    6. 'dp' → logprob: -5.939519882202148
    7. ' for' → logprob: -6.064519882202148
    8. '```' → logprob: -6.564519882202148
    9. 'f' → logprob: -6.814519882202148
    10. ')' → logprob: -6.814519882202148

Token 564: ' D' (ID: 415)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008149031549692154
    2. '#' → logprob: -5.383149147033691
    3. 'i' → logprob: -5.758149147033691
    4. ' for' → logprob: -9.258149147033691
    5. 'def' → logprob: -9.633149147033691
    6. 'j' → logprob: -9.758149147033691
    7. 'idx' → logprob: -10.508149147033691
    8. 'index' → logprob: -11.383149147033691
    9. 'm' → logprob: -11.508149147033691
    10. 's' → logprob: -12.133149147033691

Token 565: 'ém' (ID: 4135)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21822726726531982
    2. 'ef' → logprob: -1.9682272672653198
    3. 'e' → logprob: -3.2182273864746094
    4. '#' → logprob: -4.968227386474609
    5. 'é' → logprob: -5.593227386474609
    6. 'éf' → logprob: -5.843227386474609
    7. ' for' → logprob: -6.843227386474609
    8. 'efined' → logprob: -8.34322738647461
    9. 'p' → logprob: -8.46822738647461
    10. '=' → logprob: -8.84322738647461

Token 566: 'arre' (ID: 55489)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5930395126342773
    2. 'e' → logprob: -1.0930395126342773
    3. 'ebut' → logprob: -2.4680395126342773
    4. 'for' → logprob: -4.468039512634277
    5. 'éf' → logprob: -5.343039512634277
    6. 'ef' → logprob: -6.093039512634277
    7. 'u' → logprob: -6.343039512634277
    8. 'er' → logprob: -6.468039512634277
    9. 'ép' → logprob: -7.218039512634277
    10. 'éb' → logprob: -7.343039512634277

Token 567: ' une' (ID: 2463)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3152463138103485
    2. 'for' → logprob: -2.190246343612671
    3. ' for' → logprob: -3.065246343612671
    4. ' ' → logprob: -3.440246343612671
    5. '<|end|>' → logprob: -3.690246343612671
    6. 'f' → logprob: -3.940246343612671
    7. 'u' → logprob: -4.565246105194092
    8. '#' → logprob: -5.690246105194092
    9. 'i' → logprob: -5.690246105194092
    10. ' =' → logprob: -6.065246105194092

Token 568: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006767945364117622
    2. ' for' → logprob: -6.006767749786377
    3. 'i' → logprob: -6.756767749786377
    4. 'ouble' → logprob: -7.506767749786377
    5. 'pour' → logprob: -7.506767749786377
    6. 'range' → logprob: -7.631767749786377
    7. '```' → logprob: -7.756767749786377
    8. 'e' → logprob: -8.506768226623535
    9. 'ef' → logprob: -8.631768226623535
    10. '`' → logprob: -9.131768226623535

Token 569: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2025272101163864
    2. ' for' → logprob: -1.7025271654129028
    3. 'i' → logprob: -6.952527046203613
    4. ' i' → logprob: -9.327527046203613
    5. '
' → logprob: -10.827527046203613
    6. '(' → logprob: -11.952527046203613
    7. 'range' → logprob: -11.952527046203613
    8. 'f' → logprob: -12.077527046203613
    9. 'n' → logprob: -12.577527046203613
    10. ':' → logprob: -12.827527046203613

Token 570: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26386111974716187
    2. ' for' → logprob: -1.5138611793518066
    3. 'i' → logprob: -4.888861179351807
    4. ' i' → logprob: -5.763861179351807
    5. 'range' → logprob: -7.513861179351807
    6. ' in' → logprob: -8.013860702514648
    7. ' range' → logprob: -9.263860702514648
    8. '_' → logprob: -9.763860702514648
    9. 'in' → logprob: -9.763860702514648
    10. 'import' → logprob: -10.513860702514648

Token 571: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7744395732879639
    2. 'for' → logprob: -1.7744395732879639
    3. ' i' → logprob: -1.7744395732879639
    4. ' for' → logprob: -2.274439573287964
    5. 'range' → logprob: -3.149439573287964
    6. ' range' → logprob: -3.399439573287964
    7. '_' → logprob: -5.149439811706543
    8. 'spl' → logprob: -5.399439811706543
    9. 's' → logprob: -6.274439811706543
    10. ')' → logprob: -6.274439811706543

Token 572: ''ex' (ID: 23472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15648677945137024
    2. 'ur' → logprob: -2.906486749649048
    3. '=' → logprob: -3.656486749649048
    4. 'up' → logprob: -4.156486988067627
    5. 'i' → logprob: -4.406486988067627
    6. 'pl' → logprob: -4.906486988067627
    7. 'e' → logprob: -4.906486988067627
    8. 'range' → logprob: -5.156486988067627
    9. ' for' → logprob: -5.781486988067627
    10. 'u' → logprob: -6.156486988067627

Token 573: 'éc' (ID: 5675)
  Prédit: 'ecute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecute' → logprob: -1.0283851623535156
    2. 'ec' → logprob: -1.6533851623535156
    3. 'éc' → logprob: -1.7783851623535156
    4. 'for' → logprob: -2.2783851623535156
    5. 'range' → logprob: -2.7783851623535156
    6. 'p' → logprob: -3.5283851623535156
    7. 'ecut' → logprob: -3.9033851623535156
    8. 'pl' → logprob: -4.278385162353516
    9. 'pand' → logprob: -4.403385162353516
    10. 't' → logprob: -4.653385162353516

Token 574: 'uter' (ID: 23469)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0549689531326294
    2. 'for' → logprob: -1.4299689531326294
    3. 'ur' → logprob: -1.8049689531326294
    4. 'i' → logprob: -2.05496883392334
    5. 'n' → logprob: -2.92996883392334
    6. 'x' → logprob: -4.05496883392334
    7. 'range' → logprob: -4.17996883392334
    8. 'e' → logprob: -4.55496883392334
    9. 'nt' → logprob: -5.67996883392334
    10. 'r' → logprob: -5.67996883392334

Token 575: ' m' (ID: 284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07669156044721603
    2. ' for' → logprob: -2.9516916275024414
    3. 'i' → logprob: -3.9516916275024414
    4. ' i' → logprob: -6.451691627502441
    5. 'pour' → logprob: -8.076691627502441
    6. 'range' → logprob: -8.201691627502441
    7. 'from' → logprob: -9.951691627502441
    8. '(i' → logprob: -10.576691627502441
    9. 'n' → logprob: -11.076691627502441
    10. 's' → logprob: -11.076691627502441

Token 576: ' fois' (ID: 14697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1291999816894531
    2. ' times' → logprob: -1.3791999816894531
    3. ' for' → logprob: -1.3791999816894531
    4. 'times' → logprob: -2.379199981689453
    5. 'range' → logprob: -3.379199981689453
    6. 'in' → logprob: -4.379199981689453
    7. ' range' → logprob: -4.879199981689453
    8. ' in' → logprob: -5.004199981689453
    9. '_times' → logprob: -5.754199981689453
    10. '_range' → logprob: -6.004199981689453

Token 577: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003442832676228136
    2. '
' → logprob: -8.000344276428223
    3. ' for' → logprob: -12.125344276428223
    4. 'i' → logprob: -12.625344276428223
    5. '
' → logprob: -17.37534523010254
    6. '' → logprob: -17.62534523010254
    7. 'while' → logprob: -17.75034523010254
    8. '```' → logprob: -18.25034523010254
    9. '\
' → logprob: -18.25034523010254
    10. 'f' → logprob: -18.75034523010254

Token 578: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0488927885890007
    2. ' for' → logprob: -3.0488927364349365
    3. ' _' → logprob: -9.673892974853516
    4. 'range' → logprob: -9.673892974853516
    5. ' i' → logprob: -10.048892974853516
    6. '
' → logprob: -10.048892974853516
    7. 'i' → logprob: -10.423892974853516
    8. ' 
' → logprob: -10.798892974853516
    9. ':' → logprob: -10.798892974853516
    10. ' range' → logprob: -12.173892974853516

Token 579: ' incr' (ID: 52395)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4744906723499298
    2. ' range' → logprob: -0.9744906425476074
    3. 'for' → logprob: -8.224491119384766
    4. '_' → logprob: -9.224491119384766
    5. '_range' → logprob: -10.724491119384766
    6. ' for' → logprob: -10.724491119384766
    7. '(range' → logprob: -14.099491119384766
    8. ' _' → logprob: -14.349491119384766
    9. '```' → logprob: -14.849491119384766
    10. '
' → logprob: -15.099491119384766

Token 580: 'ément' (ID: 17645)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12093180418014526
    2. 'range' → logprob: -2.24593186378479
    3. 'for' → logprob: -5.370931625366211
    4. ' for' → logprob: -6.120931625366211
    5. '_range' → logprob: -7.995931625366211
    6. '```' → logprob: -8.370931625366211
    7. 'e' → logprob: -9.370931625366211
    8. 'ange' → logprob: -9.495931625366211
    9. ' ' → logprob: -9.745931625366211
    10. '=' → logprob: -9.870931625366211

Token 581: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0028425566852092743
    2. 'er' → logprob: -6.877842426300049
    3. 'ent' → logprob: -6.877842426300049
    4. '1' → logprob: -9.002842903137207
    5. 'é' → logprob: -9.377842903137207
    6. 'e' → logprob: -9.377842903137207
    7. 't' → logprob: -9.502842903137207
    8. 'for' → logprob: -9.627842903137207
    9. 'nt' → logprob: -9.752842903137207
    10. 'range' → logprob: -10.127842903137207

Token 582: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.831562876701355
    2. 'i' → logprob: -1.456562876701355
    3. ' i' → logprob: -1.456562876701355
    4. '1' → logprob: -3.4565629959106445
    5. ' _' → logprob: -3.8315629959106445
    6. 'range' → logprob: -3.9565629959106445
    7. ' range' → logprob: -4.0815629959106445
    8. ' ' → logprob: -5.4565629959106445
    9. ' for' → logprob: -6.7065629959106445
    10. 'for' → logprob: -6.7065629959106445

Token 583: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22948528826236725
    2. 'in' → logprob: -1.604485273361206
    3. ',' → logprob: -6.354485511779785
    4. 'for' → logprob: -6.604485511779785
    5. 'range' → logprob: -7.604485511779785
    6. ' for' → logprob: -9.479485511779785
    7. '=' → logprob: -9.729485511779785
    8. ':' → logprob: -9.979485511779785
    9. ' ' → logprob: -10.229485511779785
    10. ')' → logprob: -10.354485511779785

Token 584: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014226616360247135
    2. ' range' → logprob: -4.26422643661499
    3. '1' → logprob: -9.764226913452148
    4. ' ' → logprob: -13.264226913452148
    5. '_range' → logprob: -13.389226913452148
    6. '_' → logprob: -14.014226913452148
    7. '	range' → logprob: -14.764226913452148
    8. '0' → logprob: -15.139226913452148
    9. 'for' → logprob: -15.639226913452148
    10. 'rang' → logprob: -15.764226913452148

Token 585: ' it' (ID: 480)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.13206613063812256
    2. 'range' → logprob: -2.132066249847412
    3. ' ' → logprob: -6.007066249847412
    4. '_' → logprob: -6.632066249847412
    5. ' _' → logprob: -7.257066249847412
    6. '1' → logprob: -8.882065773010254
    7. ' for' → logprob: -8.882065773010254
    8. '=' → logprob: -9.632065773010254
    9. ' space' → logprob: -10.007065773010254
    10. ')' → logprob: -10.007065773010254

Token 586: 'ération' (ID: 24977)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6657190918922424
    2. 'n' → logprob: -1.2907190322875977
    3. ' range' → logprob: -2.1657190322875977
    4. ',' → logprob: -3.6657190322875977
    5. 'range' → logprob: -4.040719032287598
    6. ' for' → logprob: -4.165719032287598
    7. 'in' → logprob: -4.415719032287598
    8. '=' → logprob: -5.040719032287598
    9. 'for' → logprob: -5.165719032287598
    10. ' ' → logprob: -5.290719032287598

Token 587: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012770142406225204
    2. ' for' → logprob: -4.387770175933838
    3. '
' → logprob: -9.26276969909668
    4. ':' → logprob: -9.88776969909668
    5. 'in' → logprob: -9.88776969909668
    6. ' in' → logprob: -10.88776969909668
    7. '```' → logprob: -11.13776969909668
    8. 'range' → logprob: -11.26276969909668
    9. ':
' → logprob: -11.38776969909668
    10. 'i' → logprob: -13.51276969909668

Token 588: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1044292226433754
    2. ' range' → logprob: -2.354429244995117
    3. '1' → logprob: -5.479429244995117
    4. '0' → logprob: -10.479429244995117
    5. ' ' → logprob: -11.604429244995117
    6. ' in' → logprob: -13.354429244995117
    7. 'in' → logprob: -14.479429244995117
    8. '_' → logprob: -14.479429244995117
    9. '2' → logprob: -14.604429244995117
    10. '   ' → logprob: -15.229429244995117

Token 589: ' boucle' (ID: 174211)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6432160139083862
    2. ' range' → logprob: -0.7682160139083862
    3. '1' → logprob: -4.768216133117676
    4. ' for' → logprob: -6.643216133117676
    5. 'for' → logprob: -7.268216133117676
    6. '0' → logprob: -10.643216133117676
    7. ' ' → logprob: -10.643216133117676
    8. ' in' → logprob: -12.018216133117676
    9. ')' → logprob: -13.143216133117676
    10. 'm' → logprob: -13.268216133117676

Token 590: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007332704844884574
    2. ' for' → logprob: -7.375733375549316
    3. '
' → logprob: -9.250733375549316
    4. '```' → logprob: -12.375733375549316
    5. ':' → logprob: -12.875733375549316
    6. 'i' → logprob: -13.250733375549316
    7. 'range' → logprob: -14.125733375549316
    8. ':
' → logprob: -14.875733375549316
    9. ' 
' → logprob: -15.375733375549316
    10. 'in' → logprob: -15.750733375549316

Token 591: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.0
    3. ' for' → logprob: -17.375
    4. 'i' → logprob: -18.625
    5. '
' → logprob: -20.125
    6. 'from' → logprob: -23.375
    7. '``' → logprob: -23.375
    8. '	for' → logprob: -24.5
    9. '  
' → logprob: -25.375
    10. ' 
' → logprob: -25.5

Token 592: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08197840303182602
    2. 'i' → logprob: -2.5819783210754395
    3. ' ' → logprob: -6.4569783210754395
    4. ' in' → logprob: -7.4569783210754395
    5. ' _' → logprob: -7.5819783210754395
    6. '_' → logprob: -7.8319783210754395
    7. '_i' → logprob: -11.081978797912598
    8. 'in' → logprob: -11.831978797912598
    9. ' ' → logprob: -12.706978797912598
    10. ' range' → logprob: -13.456978797912598

Token 593: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3869248032569885
    2. 'in' → logprob: -1.1369247436523438
    3. ' ' → logprob: -10.011924743652344
    4. '1' → logprob: -12.511924743652344
    5. '  ' → logprob: -13.636924743652344
    6. '	in' → logprob: -13.761924743652344
    7. ',' → logprob: -14.511924743652344
    8. 'i' → logprob: -15.261924743652344
    9. ' ' → logprob: -15.386924743652344
    10. 'n' → logprob: -15.386924743652344

Token 594: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47409239411354065
    2. 'range' → logprob: -0.9740923643112183
    3. ' ' → logprob: -12.224092483520508
    4. '1' → logprob: -12.349092483520508
    5. ' in' → logprob: -12.349092483520508
    6. '   ' → logprob: -14.474092483520508
    7. 'in' → logprob: -14.849092483520508
    8. '	range' → logprob: -15.099092483520508
    9. '(range' → logprob: -15.349092483520508
    10. '  ' → logprob: -15.849092483520508

Token 595: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06218390539288521
    2. '(m' → logprob: -2.8121838569641113
    3. '1' → logprob: -8.68718433380127
    4. 'm' → logprob: -10.06218433380127
    5. ' (' → logprob: -12.81218433380127
    6. ' m' → logprob: -13.18718433380127
    7. '(
' → logprob: -16.187183380126953
    8. '(i' → logprob: -16.687183380126953
    9. '2' → logprob: -17.187183380126953
    10. '(M' → logprob: -17.437183380126953

Token 596: '):

' (ID: 15626)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015569974202662706
    2. ' ):' → logprob: -6.626556873321533
    3. '):
' → logprob: -8.751557350158691
    4. '+' → logprob: -10.001557350158691
    5. ')' → logprob: -11.251557350158691
    6. '1' → logprob: -12.001557350158691
    7. ':' → logprob: -12.376557350158691
    8. ' +' → logprob: -14.001557350158691
    9. '>:' → logprob: -14.751557350158691
    10. '=' → logprob: -15.001557350158691

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013401148840785027
    2. ' for' → logprob: -5.138401031494141
    3. ' ' → logprob: -6.638401031494141
    4. '    
' → logprob: -6.638401031494141
    5. 'for' → logprob: -7.013401031494141
    6. 'dp' → logprob: -7.138401031494141
    7. '    ' → logprob: -7.138401031494141
    8. '   ' → logprob: -7.388401031494141
    9. ' dp' → logprob: -7.513401031494141
    10. '	dp' → logprob: -8.63840103149414

Token 598: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3181050717830658
    2. 'dp' → logprob: -2.3181049823760986
    3. 'new' → logprob: -3.0681049823760986
    4. 'j' → logprob: -3.1931049823760986
    5. ' for' → logprob: -3.5681049823760986
    6. 'next' → logprob: -4.443105220794678
    7. '#' (adapté à ' #') → logprob: -4.693105220794678
    8. 'temp' → logprob: -4.693105220794678
    9. ' new' → logprob: -5.068105220794678
    10. '   ' → logprob: -5.193105220794678

Token 599: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1866910755634308
    2. ' for' → logprob: -2.1866910457611084
    3. 'j' → logprob: -3.5616910457611084
    4. 'dp' → logprob: -4.3116912841796875
    5. ' j' → logprob: -5.8116912841796875
    6. 'temp' → logprob: -5.9366912841796875
    7. 'new' → logprob: -5.9366912841796875
    8. ' new' → logprob: -6.0616912841796875
    9. '   ' → logprob: -6.5616912841796875
    10. ' ' → logprob: -6.6866912841796875

Token 600: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.10017387568950653
    2. '   ' → logprob: -2.8501739501953125
    3. 'er' → logprob: -3.8501739501953125
    4. '#' → logprob: -5.3501739501953125
    5. 'izer' → logprob: -5.4751739501953125
    6. 'ize' → logprob: -5.6001739501953125
    7. '=' → logprob: -6.4751739501953125
    8. '```' → logprob: -7.4751739501953125
    9. '       ' → logprob: -7.8501739501953125
    10. ' =' → logprob: -8.600173950195312

Token 601: ' une' (ID: 2463)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.636587381362915
    2. 'new' → logprob: -1.511587381362915
    3. 'dp' → logprob: -3.011587381362915
    4. '   ' → logprob: -3.136587381362915
    5. ' dp' → logprob: -3.386587381362915
    6. ' next' → logprob: -3.386587381362915
    7. 'temp' → logprob: -3.886587381362915
    8. 'tmp' → logprob: -4.136587142944336
    9. 'next' → logprob: -4.261587142944336
    10. ' tmp' → logprob: -4.636587142944336

Token 602: ' nouvelle' (ID: 24562)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0545114129781723
    2. 'tmp' → logprob: -3.304511308670044
    3. 'temp' → logprob: -5.054511547088623
    4. 'nou' → logprob: -5.554511547088623
    5. 'next' → logprob: -5.679511547088623
    6. 'nd' → logprob: -6.179511547088623
    7. 'n' → logprob: -8.054511070251465
    8. ' new' → logprob: -9.179511070251465
    9. 'dp' → logprob: -9.679511070251465
    10. 'prev' → logprob: -10.179511070251465

Token 603: ' liste' (ID: 31719)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25284120440483093
    2. '_dp' → logprob: -1.5028412342071533
    3. ' dp' → logprob: -7.127840995788574
    4. 'tmp' → logprob: -10.877840995788574
    5. '_list' → logprob: -11.252840995788574
    6. '_' → logprob: -11.252840995788574
    7. '	dp' → logprob: -11.502840995788574
    8. ' =' → logprob: -11.752840995788574
    9. '_line' → logprob: -12.127840995788574
    10. '_temp' → logprob: -12.127840995788574

Token 604: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.097042441368103
    2. ' dp' → logprob: -1.722042441368103
    3. '   ' → logprob: -1.847042441368103
    4. 'new' → logprob: -1.972042441368103
    5. ' new' → logprob: -2.4720425605773926
    6. 'nd' → logprob: -3.8470425605773926
    7. ' nxt' → logprob: -4.097042560577393
    8. 'tmp' → logprob: -4.597042560577393
    9. ' nd' → logprob: -4.722042560577393
    10. 'next' → logprob: -4.847042560577393

Token 605: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1963111162185669
    2. '_new' → logprob: -2.8213109970092773
    3. '   ' → logprob: -3.1963109970092773
    4. '_next' → logprob: -3.5713109970092773
    5. 'n' → logprob: -4.071310997009277
    6. '_n' → logprob: -4.446310997009277
    7. 'new' → logprob: -4.571310997009277
    8. '_temp' → logprob: -6.071310997009277
    9. '=' → logprob: -6.196310997009277
    10. '_tmp' → logprob: -6.446310997009277

Token 606: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02796887792646885
    2. '=' → logprob: -3.6529688835144043
    3. '   ' → logprob: -6.402968883514404
    4. '=[' → logprob: -12.402968406677246
    5. ' ' → logprob: -13.527968406677246
    6. ' =[' → logprob: -13.652968406677246
    7. '	' → logprob: -13.902968406677246
    8. '    ' → logprob: -14.152968406677246
    9. '[' → logprob: -14.402968406677246
    10. '=[]' → logprob: -14.652968406677246

Token 607: ' taille' (ID: 41644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6784721612930298
    2. '[k' → logprob: -0.8034721612930298
    3. 'k' → logprob: -3.6784720420837402
    4. ' [' → logprob: -4.05347204208374
    5. '0' → logprob: -6.92847204208374
    6. 'dp' → logprob: -7.30347204208374
    7. '(k' → logprob: -8.178472518920898
    8. ' k' → logprob: -8.928472518920898
    9. '1' → logprob: -10.178472518920898
    10. 'len' → logprob: -10.428472518920898

Token 608: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -8.0536883615423e-05
    2. ' k' → logprob: -9.500080108642578
    3. '[k' → logprob: -12.750080108642578
    4. '(k' → logprob: -12.875080108642578
    5. 'len' → logprob: -15.750080108642578
    6. '   ' → logprob: -17.375080108642578
    7. '[' → logprob: -17.500080108642578
    8. '{k' → logprob: -18.625080108642578
    9. ' [' → logprob: -18.750080108642578
    10. '	k' → logprob: -19.250080108642578

Token 609: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07396480441093445
    2. ' =' → logprob: -2.823964834213257
    3. '=' → logprob: -4.448964595794678
    4. ':' → logprob: -9.573965072631836
    5. 'dp' → logprob: -9.698965072631836
    6. '	dp' → logprob: -10.073965072631836
    7. ' dp' → logprob: -11.323965072631836
    8. '[' → logprob: -11.573965072631836
    9. '    ' → logprob: -11.573965072631836
    10. '(dp' → logprob: -12.073965072631836

Token 610: ' contenant' (ID: 131049)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.409939706325531
    2. ' dp' → logprob: -1.5349397659301758
    3. '[' → logprob: -2.409939765930176
    4. ' [' → logprob: -3.534939765930176
    5. '   ' → logprob: -6.659939765930176
    6. ' =' → logprob: -8.159939765930176
    7. '	dp' → logprob: -9.534939765930176
    8. '=[' → logprob: -9.784939765930176
    9. '=' → logprob: -9.909939765930176
    10. '0' → logprob: -10.159939765930176

Token 611: ' uniquement' (ID: 65527)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6703551411628723
    2. '[' → logprob: -0.7953551411628723
    3. 'dp' → logprob: -3.9203550815582275
    4. '1' → logprob: -4.295355319976807
    5. '[k' → logprob: -6.545355319976807
    6. ' [' → logprob: -6.920355319976807
    7. '[i' → logprob: -7.920355319976807
    8. ' ' → logprob: -8.045354843139648
    9. 'k' → logprob: -9.045354843139648
    10. 'all' → logprob: -9.295354843139648

Token 612: ' des' (ID: 731)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03938373923301697
    2. '1' → logprob: -3.28938364982605
    3. ' ' → logprob: -7.789383888244629
    4. 'zeros' → logprob: -7.789383888244629
    5. '[' → logprob: -7.914383888244629
    6. 'dp' → logprob: -9.289383888244629
    7. ' zeros' → logprob: -11.039383888244629
    8. 'z' → logprob: -11.914383888244629
    9. 'ones' → logprob: -12.414383888244629
    10. '   ' → logprob: -12.539383888244629

Token 613: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004125575942452997
    2. 'z' → logprob: -8.125412940979004
    3. 'zeros' → logprob: -9.125412940979004
    4. ' ' → logprob: -12.375412940979004
    5. '1' → logprob: -13.750412940979004
    6. '[' → logprob: -14.500412940979004
    7. ' z' → logprob: -14.500412940979004
    8. ' zeros' → logprob: -14.625412940979004
    9. 'int' → logprob: -16.000411987304688
    10. 'zer' → logprob: -16.125411987304688

Token 614: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001242772996192798
    2. 'zeros' → logprob: -10.125123977661133
    3. 'z' → logprob: -10.250123977661133
    4. '1' → logprob: -10.625123977661133
    5. ' ' → logprob: -10.875123977661133
    6. '[' → logprob: -12.875123977661133
    7. ' zeros' → logprob: -14.375123977661133
    8. ' z' → logprob: -14.375123977661133
    9. 'int' → logprob: -14.750123977661133
    10. 'o' → logprob: -15.875123977661133

Token 615: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025938500184565783
    2. 'dp' → logprob: -6.377593994140625
    3. ' dp' → logprob: -8.502593994140625
    4. '	dp' → logprob: -8.627593994140625
    5. '
' → logprob: -8.877593994140625
    6. '    
' → logprob: -9.127593994140625
    7. ',' → logprob: -9.502593994140625
    8. ':' → logprob: -9.627593994140625
    9. ' =' → logprob: -9.752593994140625
    10. '(dp' → logprob: -11.502593994140625

Token 616: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2588180899620056
    2. 'dp' → logprob: -1.5088181495666504
    3. ' dp' → logprob: -5.00881814956665
    4. '
' → logprob: -8.883817672729492
    5. '    
' → logprob: -10.883817672729492
    6. '```' → logprob: -11.383817672729492
    7. '	dp' → logprob: -11.383817672729492
    8. '(dp' → logprob: -13.383817672729492
    9. '_dp' → logprob: -14.008817672729492
    10. ' ' → logprob: -14.133817672729492

Token 617: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029993340373039246
    2. '   ' → logprob: -4.154993534088135
    3. ' dp' → logprob: -4.279993534088135
    4. '[' → logprob: -11.654993057250977
    5. '	dp' → logprob: -12.154993057250977
    6. '    
' → logprob: -13.279993057250977
    7. '
' → logprob: -14.029993057250977
    8. ' ' → logprob: -14.154993057250977
    9. '```' → logprob: -14.404993057250977
    10. '_dp' → logprob: -14.904993057250977

Token 618: ' Cette' (ID: 27383)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.015287162736058235
    2. '   ' → logprob: -4.765287399291992
    3. ' dp' → logprob: -5.015287399291992
    4. '	dp' → logprob: -11.515287399291992
    5. ' ' → logprob: -13.015287399291992
    6. '```' → logprob: -13.640287399291992
    7. '_dp' → logprob: -15.265287399291992
    8. '(dp' → logprob: -15.515287399291992
    9. ' ' → logprob: -15.765287399291992
    10. '  ' → logprob: -16.015287399291992

Token 619: ' liste' (ID: 31719)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.09154656529426575
    2. 'dp' → logprob: -2.8415465354919434
    3. ' =' → logprob: -3.8415465354919434
    4. ' ' → logprob: -5.216546535491943
    5. '=' → logprob: -6.341546535491943
    6. '[' → logprob: -9.216547012329102
    7. '	dp' → logprob: -9.216547012329102
    8. '_dp' → logprob: -9.966547012329102
    9. '   ' → logprob: -10.341547012329102
    10. ' ' → logprob: -10.716547012329102

Token 620: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054948072880506516
    2. '=' → logprob: -2.929948091506958
    3. '2' → logprob: -10.179947853088379
    4. 'dp' → logprob: -11.429947853088379
    5. '=[' → logprob: -12.804947853088379
    6. '=[]' → logprob: -12.804947853088379
    7. ' ' → logprob: -13.429947853088379
    8. '   ' → logprob: -13.429947853088379
    9. ' =[' → logprob: -13.429947853088379
    10. ' dp' → logprob: -13.554947853088379

Token 621: ' conten' (ID: 23523)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03413441777229309
    2. ' dp' → logprob: -3.4091343879699707
    3. '[' → logprob: -7.909134387969971
    4. '	dp' → logprob: -9.784134864807129
    5. '   ' → logprob: -10.534134864807129
    6. ' ' → logprob: -11.284134864807129
    7. '0' → logprob: -11.909134864807129
    8. ' =' → logprob: -12.159134864807129
    9. ' [' → logprob: -12.284134864807129
    10. '=' → logprob: -12.409134864807129

Token 622: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.21816572546958923
    2. 't' → logprob: -1.9681657552719116
    3. 'ter' → logprob: -3.718165636062622
    4. 'ir' → logprob: -4.718165874481201
    5. 'ner' → logprob: -4.968165874481201
    6. 'rer' → logprob: -4.968165874481201
    7. 'cer' → logprob: -5.843165874481201
    8. 'uer' → logprob: -6.093165874481201
    9. 'r' → logprob: -6.343165874481201
    10. 'oter' → logprob: -7.843165874481201

Token 623: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08396605402231216
    2. ' [' → logprob: -3.208966016769409
    3. 'dp' → logprob: -3.458966016769409
    4. '[k' → logprob: -5.333966255187988
    5. ' dp' → logprob: -6.458966255187988
    6. '0' → logprob: -6.458966255187988
    7. '   ' → logprob: -7.958966255187988
    8. ' ' → logprob: -8.833966255187988
    9. 'k' → logprob: -9.208966255187988
    10. '[i' → logprob: -9.458966255187988

Token 624: ' nouveaux' (ID: 43964)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11446518450975418
    2. 'dp' → logprob: -2.6144652366638184
    3. ' ' → logprob: -3.6144652366638184
    4. ' dp' → logprob: -4.989465236663818
    5. '[' → logprob: -7.489465236663818
    6. ' new' → logprob: -8.23946475982666
    7. 'new' → logprob: -9.23946475982666
    8. ' [' → logprob: -9.48946475982666
    9. '   ' → logprob: -9.98946475982666
    10. '  ' → logprob: -10.61446475982666

Token 625: ' calcul' (ID: 7559)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07031629234552383
    2. ' dp' → logprob: -2.8203163146972656
    3. '0' → logprob: -5.070316314697266
    4. ' ' → logprob: -7.195316314697266
    5. '[' → logprob: -7.695316314697266
    6. ' values' → logprob: -8.320316314697266
    7. '   ' → logprob: -8.820316314697266
    8. ' [' → logprob: -8.820316314697266
    9. 'values' → logprob: -8.820316314697266
    10. '	dp' → logprob: -9.820316314697266

Token 626: 's' (ID: 82)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ations' → logprob: -1.2386891841888428
    2. 'al' → logprob: -1.7386891841888428
    3. 'als' → logprob: -1.8636891841888428
    4. 'ts' → logprob: -1.8636891841888428
    5. 't' → logprob: -2.1136891841888428
    6. 'es' → logprob: -3.2386891841888428
    7. 'aux' → logprob: -5.113689422607422
    8. 'és' → logprob: -5.238689422607422
    9. 'ements' → logprob: -5.238689422607422
    10. 'ités' → logprob: -5.488689422607422

Token 627: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7747313976287842
    2. '   ' → logprob: -1.1497313976287842
    3. ' dp' → logprob: -1.5247313976287842
    4. '	dp' → logprob: -6.024731636047363
    5. '_dp' → logprob: -7.649731636047363
    6. '(dp' → logprob: -7.774731636047363
    7. ' =' → logprob: -7.774731636047363
    8. ',' → logprob: -8.524731636047363
    9. '[' → logprob: -8.524731636047363
    10. '  ' → logprob: -9.399731636047363

Token 628: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24902504682540894
    2. ' dp' → logprob: -1.7490251064300537
    3. '[' → logprob: -3.6240251064300537
    4. ' [' → logprob: -4.499024868011475
    5. '0' → logprob: -4.874024868011475
    6. ' ' → logprob: -7.499024868011475
    7. '[i' → logprob: -8.749025344848633
    8. 'i' → logprob: -9.499025344848633
    9. ' i' → logprob: -9.624025344848633
    10. '   ' → logprob: -9.999025344848633

Token 629: ''' (ID: 6)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.651984691619873
    2. 'dp' → logprob: -0.776984691619873
    3. 'k' → logprob: -4.776984691619873
    4. ' dp' → logprob: -4.901984691619873
    5. 'i' → logprob: -7.526984691619873
    6. 'a' → logprob: -7.526984691619873
    7. '	dp' → logprob: -8.026985168457031
    8. '   ' → logprob: -8.026985168457031
    9. 'e' → logprob: -8.526985168457031
    10. ' ' → logprob: -8.526985168457031

Token 630: 'it' (ID: 278)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.023210184648633003
    2. ' dp' → logprob: -4.023210048675537
    3. 'k' → logprob: -5.523210048675537
    4. 'i' → logprob: -7.648210048675537
    5. 'p' → logprob: -8.648210525512695
    6. '   ' → logprob: -9.648210525512695
    7. ' k' → logprob: -9.773210525512695
    8. '0' → logprob: -10.023210525512695
    9. '	dp' → logprob: -10.023210525512695
    10. '_dp' → logprob: -10.898210525512695

Token 631: 'ération' (ID: 24977)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8227767944335938
    2. 'dp' → logprob: -1.3227767944335938
    3. 'p' → logprob: -2.1977767944335938
    4. ' ' → logprob: -2.1977767944335938
    5. '2' → logprob: -3.6977767944335938
    6. ' dp' → logprob: -4.072776794433594
    7. '[' → logprob: -4.947776794433594
    8. 'ération' → logprob: -5.572776794433594
    9. '0' → logprob: -5.822776794433594
    10. '  ' → logprob: -5.822776794433594

Token 632: ' cour' (ID: 2871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.683570384979248
    2. 'dp' → logprob: -1.058570384979248
    3. ' dp' → logprob: -2.058570384979248
    4. '	dp' → logprob: -4.308570384979248
    5. '(dp' → logprob: -6.433570384979248
    6. ' ' → logprob: -6.933570384979248
    7. ',' → logprob: -7.558570384979248
    8. '  ' → logprob: -7.683570384979248
    9. '_dp' → logprob: -7.683570384979248
    10. ' =' → logprob: -7.683570384979248

Token 633: 'ante' (ID: 2116)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.434941828250885
    2. '0' → logprob: -1.8099417686462402
    3. 'p' → logprob: -2.1849417686462402
    4. '2' → logprob: -3.8099417686462402
    5. '   ' → logprob: -4.30994176864624
    6. 'é' → logprob: -4.68494176864624
    7. 'for' → logprob: -5.43494176864624
    8. 'ée' → logprob: -5.55994176864624
    9. '1' → logprob: -5.68494176864624
    10. 'er' → logprob: -5.93494176864624

Token 634: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011640305165201426
    2. 'dp' → logprob: -7.876163959503174
    3. '    
' → logprob: -8.626164436340332
    4. '
' → logprob: -8.876164436340332
    5. ',' → logprob: -9.251164436340332
    6. '[' → logprob: -9.501164436340332
    7. ':' → logprob: -9.501164436340332
    8. ' dp' → logprob: -9.751164436340332
    9. ' =' → logprob: -10.251164436340332
    10. '	dp' → logprob: -10.501164436340332

Token 635: ' la' (ID: 557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.18970097601413727
    2. 'dp' → logprob: -1.814700961112976
    3. ' k' → logprob: -5.064701080322266
    4. '[k' → logprob: -6.439701080322266
    5. ' dp' → logprob: -6.564701080322266
    6. '[' → logprob: -8.064701080322266
    7. 'range' → logprob: -9.439701080322266
    8. '0' → logprob: -9.439701080322266
    9. ' [' → logprob: -10.189701080322266
    10. '   ' → logprob: -10.564701080322266

Token 636: ' boucle' (ID: 174211)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.041333820670843124
    2. ' dp' → logprob: -3.2913339138031006
    3. ' ' → logprob: -6.6663336753845215
    4. 'for' → logprob: -7.0413336753845215
    5. ' for' → logprob: -7.2913336753845215
    6. '   ' → logprob: -8.29133415222168
    7. '	dp' → logprob: -9.66633415222168
    8. '  ' → logprob: -10.79133415222168
    9. 'i' → logprob: -10.79133415222168
    10. 'd' → logprob: -10.91633415222168

Token 637: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19765323400497437
    2. 'dp' → logprob: -1.8226532936096191
    3. ' dp' → logprob: -4.197653293609619
    4. '
' → logprob: -7.322653293609619
    5. '    
' → logprob: -7.947653293609619
    6. ',' → logprob: -8.072652816772461
    7. ':' → logprob: -8.447652816772461
    8. '.' → logprob: -8.447652816772461
    9. '(dp' → logprob: -8.572652816772461
    10. '	dp' → logprob: -8.572652816772461

Token 638: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1610850840806961
    2. '   ' → logprob: -2.0360851287841797
    3. ' dp' → logprob: -4.03608512878418
    4. '	dp' → logprob: -8.53608512878418
    5. '
' → logprob: -8.78608512878418
    6. '    
' → logprob: -9.03608512878418
    7. '```' → logprob: -9.66108512878418
    8. '(dp' → logprob: -11.53608512878418
    9. '_dp' → logprob: -11.66108512878418
    10. '[' → logprob: -11.91108512878418

Token 639: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.21614426374435425
    2. '   ' → logprob: -2.216144323348999
    3. ' dp' → logprob: -2.466144323348999
    4. '	dp' → logprob: -8.091144561767578
    5. '[' → logprob: -9.716144561767578
    6. '    
' → logprob: -10.341144561767578
    7. ' ' → logprob: -11.966144561767578
    8. '(dp' → logprob: -11.966144561767578
    9. '_dp' → logprob: -12.091144561767578
    10. '
' → logprob: -12.216144561767578

Token 640: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.747814349073451e-05
    2. '_' → logprob: -11.000017166137695
    3. '₂' → logprob: -15.000017166137695
    4. '=' → logprob: -15.750017166137695
    5. ' =' → logprob: -16.500017166137695
    6. '۲' → logprob: -16.750017166137695
    7. '[' → logprob: -17.250017166137695
    8. ' ' → logprob: -17.625017166137695
    9. '٢' → logprob: -17.750017166137695
    10. '_=' → logprob: -17.875017166137695

Token 641: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407931089401245
    2. ' =' → logprob: -0.9740793108940125
    3. '=[' → logprob: -13.599079132080078
    4. '[' → logprob: -14.849079132080078
    5. ' ' → logprob: -15.099079132080078
    6. ' =[' → logprob: -15.349079132080078
    7. '＝' → logprob: -15.849079132080078
    8. '=[]' → logprob: -17.224079132080078
    9. '	' → logprob: -17.724079132080078
    10. '   ' → logprob: -17.974079132080078

Token 642: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01814994215965271
    2. ' [' → logprob: -4.0181498527526855
    3. '[k' → logprob: -17.268150329589844
    4. '0' → logprob: -18.018150329589844
    5. ' ' → logprob: -19.143150329589844
    6. ' ' → logprob: -19.768150329589844
    7. '([' → logprob: -20.268150329589844
    8. '[i' → logprob: -20.393150329589844
    9. '   ' → logprob: -20.518150329589844
    10. '[n' → logprob: -20.643150329589844

Token 643: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '۰' → logprob: -22.0
    4. '00' → logprob: -22.375
    5. '000' → logprob: -22.75
    6. '   ' → logprob: -23.75
    7. '０' → logprob: -24.5
    8. '٠' → logprob: -25.25
    9. '०' → logprob: -25.375
    10. ')' → logprob: -25.625

Token 644: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009436229011043906
    2. ']*' → logprob: -7.125943660736084
    3. ' ]' → logprob: -9.250943183898926
    4. ')' → logprob: -10.625943183898926
    5. ' for' → logprob: -11.625943183898926
    6. '*' → logprob: -12.375943183898926
    7. ']*(' → logprob: -13.000943183898926
    8. 'for' → logprob: -13.375943183898926
    9. ' *' → logprob: -13.875943183898926
    10. ')]' → logprob: -14.750943183898926

Token 645: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.033365339040756226
    2. ' *' → logprob: -3.908365249633789
    3. ')' → logprob: -4.658365249633789
    4. ']' → logprob: -6.033365249633789
    5. ' for' → logprob: -7.658365249633789
    6. 'for' → logprob: -8.533365249633789
    7. ']*' → logprob: -9.408365249633789
    8. '*(' → logprob: -10.033365249633789
    9. ')*' → logprob: -10.908365249633789
    10. ' ' → logprob: -12.033365249633789

Token 646: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.320199877838604e-07
    2. '(k' → logprob: -15.0
    3. ' k' → logprob: -17.125
    4. '(' → logprob: -20.875
    5. '   ' → logprob: -21.125
    6. 'kx' → logprob: -22.125
    7. ' ' → logprob: -22.5
    8. '	k' → logprob: -22.625
    9. '{k' → logprob: -24.0
    10. ' (' → logprob: -24.375

Token 647: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 648: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021927781403064728
    2. 'for' → logprob: -4.021927833557129
    3. ' for' → logprob: -5.646927833557129
    4. '	for' → logprob: -9.021927833557129
    5. '<|end|>' → logprob: -9.771927833557129
    6. '    
' → logprob: -10.396927833557129
    7. '   ' → logprob: -11.521927833557129
    8. '
' → logprob: -11.521927833557129
    9. '    ' → logprob: -12.771927833557129
    10. '       ' → logprob: -12.896927833557129

Token 649: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004397124983370304
    2. ' for' → logprob: -6.004396915435791
    3. '   ' → logprob: -6.504396915435791
    4. 'j' → logprob: -8.37939739227295
    5. '<|end|>' → logprob: -9.87939739227295
    6. '	for' → logprob: -10.25439739227295
    7. '+' → logprob: -11.00439739227295
    8. '#' (adapté à ' #') → logprob: -11.12939739227295
    9. 'i' → logprob: -11.25439739227295
    10. 'sum' → logprob: -11.50439739227295

Token 650: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11629382520914078
    2. 'j' → logprob: -2.2412939071655273
    3. 'ptr' → logprob: -7.366293907165527
    4. 'prev' → logprob: -7.616293907165527
    5. 'idx' → logprob: -7.741293907165527
    6. 'pos' → logprob: -8.116293907165527
    7. 'start' → logprob: -8.616293907165527
    8. 'p' → logprob: -8.741293907165527
    9. 'dp' → logprob: -8.741293907165527
    10. 'stack' → logprob: -8.991293907165527

Token 651: 'cler' (ID: 55207)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00893374439328909
    2. 'for' → logprob: -5.5089335441589355
    3. '   ' → logprob: -6.1339335441589355
    4. ' for' → logprob: -6.1339335441589355
    5. 'j' → logprob: -8.258934020996094
    6. ' r' → logprob: -8.758934020996094
    7. 'i' → logprob: -10.633934020996094
    8. ' ' → logprob: -10.758934020996094
    9. 'x' → logprob: -11.633934020996094
    10. '  ' → logprob: -12.508934020996094

Token 652: ' sur' (ID: 1512)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1767419576644897
    2. ' for' → logprob: -1.1767419576644897
    3. 'for' → logprob: -1.1767419576644897
    4. ' j' → logprob: -2.6767420768737793
    5. '   ' → logprob: -5.676742076873779
    6. ' over' → logprob: -6.676742076873779
    7. '(j' → logprob: -6.926742076873779
    8. ' through' → logprob: -8.801741600036621
    9. 'over' → logprob: -9.051741600036621
    10. '	j' → logprob: -9.301741600036621

Token 653: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024438027292490005
    2. 'j' → logprob: -4.02443790435791
    3. ' range' → logprob: -5.14943790435791
    4. 'index' → logprob: -9.27443790435791
    5. ' j' → logprob: -9.52443790435791
    6. 'rang' → logprob: -9.64943790435791
    7. 'idx' → logprob: -9.89943790435791
    8. 'r' → logprob: -9.89943790435791
    9. 'i' → logprob: -10.39943790435791
    10. 'x' → logprob: -11.39943790435791

Token 654: ' positions' (ID: 15897)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0017969197360798717
    2. ' range' → logprob: -7.001796722412109
    3. 'j' → logprob: -7.251796722412109
    4. 'index' → logprob: -9.75179672241211
    5. 'r' → logprob: -9.87679672241211
    6. 'indices' → logprob: -10.87679672241211
    7. 'idx' → logprob: -11.12679672241211
    8. 're' → logprob: -11.75179672241211
    9. 'rang' → logprob: -12.25179672241211
    10. 'i' → logprob: -12.37679672241211

Token 655: ' j' (ID: 441)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8929466009140015
    2. 'in' → logprob: -1.0179466009140015
    3. 'range' → logprob: -1.8929466009140015
    4. ' range' → logprob: -3.267946720123291
    5. 'j' → logprob: -3.642946720123291
    6. ' j' → logprob: -4.892946720123291
    7. 'for' → logprob: -5.892946720123291
    8. ' for' → logprob: -6.892946720123291
    9. '(range' → logprob: -7.142946720123291
    10. 'k' → logprob: -7.642946720123291

Token 656: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6357163786888123
    2. ' in' → logprob: -0.7607163786888123
    3. '   ' → logprob: -6.760716438293457
    4. ',' → logprob: -7.135716438293457
    5. ')' → logprob: -8.135716438293457
    6. ' ' → logprob: -9.135716438293457
    7. 'for' → logprob: -9.260716438293457
    8. 'dans' → logprob: -9.635716438293457
    9. ':' → logprob: -9.760716438293457
    10. 'en' → logprob: -9.760716438293457

Token 657: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001093841710826382
    2. ' range' → logprob: -9.125109672546387
    3. 're' → logprob: -15.625109672546387
    4. 'reverse' → logprob: -15.750109672546387
    5. 'k' → logprob: -17.00010871887207
    6. '(range' → logprob: -17.12510871887207
    7. 'f' → logprob: -17.75010871887207
    8. 'rang' → logprob: -18.37510871887207
    9. '	range' → logprob: -18.75010871887207
    10. '   ' → logprob: -19.12510871887207

Token 658: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.849109119386412e-06
    2. ' range' → logprob: -12.000009536743164
    3. 're' → logprob: -12.750009536743164
    4. 'reverse' → logprob: -14.875009536743164
    5. 'k' → logprob: -15.625009536743164
    6. 'f' → logprob: -15.750009536743164
    7. '(range' → logprob: -17.375009536743164
    8. 'rang' → logprob: -18.250009536743164
    9. 'r' → logprob: -19.125009536743164
    10. '	range' → logprob: -19.250009536743164

Token 659: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.3696433305740356
    2. ' à' → logprob: -1.6196433305740356
    3. ',k' → logprob: -2.119643211364746
    4. 'to' → logprob: -2.244643211364746
    5. 'k' → logprob: -2.244643211364746
    6. ' k' → logprob: -2.494643211364746
    7. ',' → logprob: -2.494643211364746
    8. 'à' → logprob: -3.494643211364746
    9. ' jusqu' → logprob: -5.119643211364746
    10. '   ' → logprob: -5.244643211364746

Token 660: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.000741134281270206
    2. ' k' → logprob: -7.250741004943848
    3. '(k' → logprob: -10.625741004943848
    4. 'range' → logprob: -12.250741004943848
    5. ' (' → logprob: -14.125741004943848
    6. '(' → logprob: -14.250741004943848
    7. ' range' → logprob: -15.250741004943848
    8. ' ' → logprob: -15.750741004943848
    9. ',k' → logprob: -17.000741958618164
    10. ')' → logprob: -17.125741958618164

Token 661: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03413994610309601
    2. '):' → logprob: -4.159140110015869
    3. 'range' → logprob: -5.659140110015869
    4. ' range' → logprob: -5.784140110015869
    5. ':
' → logprob: -6.034140110015869
    6. '(range' → logprob: -6.159140110015869
    7. '   ' → logprob: -6.784140110015869
    8. '-' → logprob: -7.034140110015869
    9. '):
' → logprob: -7.284140110015869
    10. ')' → logprob: -7.284140110015869

Token 662: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.47648853063583374
    2. '1' → logprob: -1.1014885902404785
    3. '-' → logprob: -3.1014885902404785
    4. ' -' → logprob: -7.6014885902404785
    5. ' ' → logprob: -8.35148811340332
    6. '```' → logprob: -8.35148811340332
    7. ')' → logprob: -8.47648811340332
    8. ' k' → logprob: -8.85148811340332
    9. '   ' → logprob: -9.72648811340332
    10. 'range' → logprob: -10.10148811340332

Token 663: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03225754201412201
    2. ' for' → logprob: -4.532257556915283
    3. '   ' → logprob: -4.657257556915283
    4. 'for' → logprob: -4.907257556915283
    5. ':
' → logprob: -5.782257556915283
    6. ' :' → logprob: -7.532257556915283
    7. ',' → logprob: -9.032257080078125
    8. ' (' → logprob: -10.157257080078125
    9. '):' → logprob: -10.282257080078125
    10. ' range' → logprob: -10.407257080078125

Token 664: 'in' (ID: 258)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02356025017797947
    2. '):' → logprob: -3.8985602855682373
    3. ')' → logprob: -6.773560047149658
    4. ' k' → logprob: -7.023560047149658
    5. '):
' → logprob: -7.398560047149658
    6. '   ' → logprob: -8.398560523986816
    7. 'range' → logprob: -10.148560523986816
    8. ' ):' → logprob: -10.273560523986816
    9. ' ' → logprob: -11.523560523986816
    10. ',' → logprob: -11.648560523986816

Token 665: 'clus' (ID: 4085)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4753575026988983
    2. ' range' → logprob: -0.9753575325012207
    3. 'n' → logprob: -6.975357532501221
    4. '   ' → logprob: -8.975357055664062
    5. ' ' → logprob: -9.225357055664062
    6. ')' → logprob: -10.475357055664062
    7. 't' → logprob: -10.475357055664062
    8. '```' → logprob: -10.850357055664062
    9. '  ' → logprob: -11.475357055664062
    10. '    ' → logprob: -12.100357055664062

Token 666: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013360808603465557
    2. '):
' → logprob: -4.763360977172852
    3. ')' → logprob: -5.388360977172852
    4. ' ):' → logprob: -9.513360977172852
    5. ':' → logprob: -10.138360977172852
    6. '):

' → logprob: -10.513360977172852
    7. ',' → logprob: -11.513360977172852
    8. '   ' → logprob: -11.638360977172852
    9. '):
' → logprob: -13.638360977172852
    10. ' ):
' → logprob: -13.763360977172852

Token 667: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15672855079174042
    2. '   ' → logprob: -2.406728506088257
    3. 'for' → logprob: -2.906728506088257
    4. '	for' → logprob: -8.656728744506836
    5. '```' → logprob: -9.906728744506836
    6. ' 
' → logprob: -11.156728744506836
    7. '    ' → logprob: -11.281728744506836
    8. ' ' → logprob: -11.281728744506836
    9. '    
' → logprob: -11.531728744506836
    10. ' range' → logprob: -12.031728744506836

Token 668: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37868252396583557
    2. '   ' → logprob: -1.6286824941635132
    3. 'for' (adapté à ' for') → logprob: -2.1286826133728027
    4. '	for' → logprob: -10.753682136535645
    5. '```' → logprob: -11.878682136535645
    6. ' ' → logprob: -12.128682136535645
    7. '
' → logprob: -12.503682136535645
    8. ' j' → logprob: -12.503682136535645
    9. '    ' → logprob: -12.503682136535645
    10. '    
' → logprob: -12.878682136535645

Token 669: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10022587329149246
    2. ' j' → logprob: -2.3502259254455566
    3. ' in' → logprob: -11.600225448608398
    4. '1' → logprob: -13.350225448608398
    5. 'range' → logprob: -13.350225448608398
    6. ' range' → logprob: -13.475225448608398
    7. ' ' → logprob: -13.850225448608398
    8. '	j' → logprob: -13.850225448608398
    9. '_j' → logprob: -14.100225448608398
    10. 'in' → logprob: -14.350225448608398

Token 670: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1427232027053833
    2. 'in' → logprob: -2.0177230834960938
    3. ' ' → logprob: -11.267723083496094
    4. ')' → logprob: -11.392723083496094
    5. '1' → logprob: -11.892723083496094
    6. '	in' → logprob: -12.892723083496094
    7. ',' → logprob: -13.017723083496094
    8. 'n' → logprob: -13.142723083496094
    9. 'In' → logprob: -13.142723083496094
    10. '  ' → logprob: -13.642723083496094

Token 671: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04862881079316139
    2. ' range' → logprob: -3.048628807067871
    3. '1' → logprob: -10.673628807067871
    4. 'in' → logprob: -11.423628807067871
    5. ' in' → logprob: -12.548628807067871
    6. ' ' → logprob: -13.173628807067871
    7. '(range' → logprob: -14.423628807067871
    8. 'k' → logprob: -14.423628807067871
    9. '   ' → logprob: -15.173628807067871
    10. ')' → logprob: -15.423628807067871

Token 672: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25226226449012756
    2. '1' → logprob: -1.5022622346878052
    3. ' (' → logprob: -8.627262115478516
    4. ' ' → logprob: -8.877262115478516
    5. '   ' → logprob: -11.752262115478516
    6. '(
' → logprob: -13.002262115478516
    7. ')' → logprob: -13.127262115478516
    8. ',' → logprob: -13.877262115478516
    9. '(k' → logprob: -15.252262115478516
    10. 'k' → logprob: -15.377262115478516

Token 673: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. 'j' → logprob: -12.875008583068848
    3. ' ' → logprob: -12.875008583068848
    4. 'k' → logprob: -13.250008583068848
    5. '   ' → logprob: -13.750008583068848
    6. '(' → logprob: -18.62500762939453
    7. '0' → logprob: -19.43750762939453
    8. '```' → logprob: -19.43750762939453
    9. ')' → logprob: -19.56250762939453
    10. '  ' → logprob: -19.56250762939453

Token 674: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030402205884456635
    2. ',k' → logprob: -5.878040313720703
    3. ' ,' → logprob: -8.378040313720703
    4. 'k' → logprob: -12.753040313720703
    5. '   ' → logprob: -13.503040313720703
    6. ',j' → logprob: -13.878040313720703
    7. '(k' → logprob: -16.503040313720703
    8. ',
' → logprob: -16.628040313720703
    9. ',len' → logprob: -16.628040313720703
    10. ' k' → logprob: -17.003040313720703

Token 675: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.5048530030981055e-06
    2. ' k' → logprob: -13.500001907348633
    3. '   ' → logprob: -21.000001907348633
    4. '	k' → logprob: -21.500001907348633
    5. ' ' → logprob: -22.375001907348633
    6. 'к' → logprob: -24.625001907348633
    7. 'kx' → logprob: -24.875001907348633
    8. '{k' → logprob: -25.000001907348633
    9. 'len' → logprob: -25.250001907348633
    10. '```' → logprob: -25.375001907348633

Token 676: '):

' (ID: 15626)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005717403837479651
    2. '):
' → logprob: -7.5005717277526855
    3. ' ):' → logprob: -12.000572204589844
    4. ':' → logprob: -12.125572204589844
    5. ')' → logprob: -12.750572204589844
    6. '):

' → logprob: -12.875572204589844
    7. '):
' → logprob: -14.125572204589844
    8. '   ' → logprob: -15.375572204589844
    9. '}:' → logprob: -15.375572204589844
    10. ']:' → logprob: -16.125572204589844

Token 677: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026855770498514175
    2. 'dp' → logprob: -3.776855707168579
    3. ' dp' → logprob: -6.401855945587158
    4. ' if' → logprob: -7.026855945587158
    5. '   ' → logprob: -8.15185546875
    6. 'if' → logprob: -8.27685546875
    7. '```' → logprob: -8.52685546875
    8. '    ' → logprob: -9.65185546875
    9. '        
' → logprob: -10.02685546875
    10. ',' → logprob: -10.52685546875

Token 678: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01197997760027647
    2. 'for' → logprob: -4.636980056762695
    3. 'if' → logprob: -6.636980056762695
    4. ' dp' → logprob: -7.761980056762695
    5. '(dp' → logprob: -8.761980056762695
    6. 'f' → logprob: -9.136980056762695
    7. '   ' → logprob: -9.261980056762695
    8. 'while' → logprob: -9.886980056762695
    9. ' for' → logprob: -10.886980056762695
    10. '       ' → logprob: -11.886980056762695

Token 679: ' Calcul' (ID: 57243)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011930972337722778
    2. 'if' → logprob: -5.0119309425354
    3. 'val' → logprob: -5.6369309425354
    4. 'x' → logprob: -7.3869309425354
    5. 'for' → logprob: -7.7619309425354
    6. 'value' → logprob: -8.136931419372559
    7. 's' → logprob: -9.886931419372559
    8. 'v' → logprob: -10.386931419372559
    9. ' dp' → logprob: -10.636931419372559
    10. 'p' → logprob: -11.136931419372559

Token 680: ' interm' (ID: 120489)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16070783138275146
    2. '+=' → logprob: -2.660707950592041
    3. '       ' → logprob: -3.535707950592041
    4. ' =' → logprob: -3.910707950592041
    5. ' +=' → logprob: -4.285707950592041
    6. '   ' → logprob: -4.785707950592041
    7. '           ' → logprob: -5.535707950592041
    8. 'er' → logprob: -7.410707950592041
    9. '[' → logprob: -7.785707950592041
    10. ']+=' → logprob: -8.535707473754883

Token 681: 'édiaire' (ID: 161555)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.07640379667282104
    2. 'ations' → logprob: -3.951403856277466
    3. 'ateur' → logprob: -4.076403617858887
    4. '=' → logprob: -4.201403617858887
    5. 'dp' → logprob: -5.201403617858887
    6. ' =' → logprob: -5.826403617858887
    7. '#' → logprob: -5.951403617858887
    8. 'ate' → logprob: -6.076403617858887
    9. '   ' → logprob: -6.451403617858887
    10. 'er' → logprob: -6.451403617858887

Token 682: ' :
' (ID: 10039)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5639734268188477
    2. '=' → logprob: -1.5639734268188477
    3. 'dp' → logprob: -1.8139734268188477
    4. ' =' → logprob: -3.1889734268188477
    5. ':' → logprob: -5.188973426818848
    6. 's' → logprob: -6.438973426818848
    7. '           ' → logprob: -6.563973426818848
    8. '+=' → logprob: -6.938973426818848
    9. 'sum' → logprob: -7.063973426818848
    10. ' dp' → logprob: -7.313973426818848

Token 683: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.021085385233163834
    2. '       ' → logprob: -4.771085262298584
    3. ' dp' → logprob: -5.146085262298584
    4. 'if' → logprob: -5.646085262298584
    5. 'for' → logprob: -7.146085262298584
    6. '           ' → logprob: -7.646085262298584
    7. 'x' → logprob: -8.021085739135742
    8. 'val' → logprob: -8.146085739135742
    9. 'value' → logprob: -8.521085739135742
    10. ' if' → logprob: -9.396085739135742

Token 684: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004972712602466345
    2. 'val' → logprob: -5.7549729347229
    3. 'x' → logprob: -7.6299729347229
    4. 'if' → logprob: -8.129972457885742
    5. 'value' → logprob: -8.504972457885742
    6. ' dp' → logprob: -8.629972457885742
    7. 'v' → logprob: -9.129972457885742
    8. '   ' → logprob: -9.504972457885742
    9. 'for' → logprob: -10.004972457885742
    10. 'q' → logprob: -10.129972457885742

Token 685: ' -' (ID: 533)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006291487254202366
    2. 'val' → logprob: -5.881291389465332
    3. 'if' → logprob: -6.631291389465332
    4. 'for' → logprob: -7.756291389465332
    5. 'x' → logprob: -8.131291389465332
    6. 'value' → logprob: -8.381291389465332
    7. 'div' → logprob: -9.006291389465332
    8. '   ' → logprob: -9.256291389465332
    9. 'prev' → logprob: -9.381291389465332
    10. 'v' → logprob: -9.506291389465332

Token 686: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.30648255348205566
    2. 'val' → logprob: -2.0564825534820557
    3. 'x' → logprob: -2.5564825534820557
    4. 'value' → logprob: -4.056482315063477
    5. 'v' → logprob: -5.306482315063477
    6. 's' → logprob: -5.431482315063477
    7. 'limit' → logprob: -5.681482315063477
    8. 'if' → logprob: -5.806482315063477
    9. 'for' → logprob: -5.806482315063477
    10. 'div' → logprob: -6.181482315063477

Token 687: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02672937884926796
    2. '[j' → logprob: -3.6517293453216553
    3. '[i' → logprob: -8.401729583740234
    4. '[' → logprob: -9.151729583740234
    5. 'j' → logprob: -10.026729583740234
    6. ' [' → logprob: -10.776729583740234
    7. '   ' → logprob: -12.276729583740234
    8. ' ' → logprob: -12.526729583740234
    9. '
' → logprob: -12.901729583740234
    10. '

' → logprob: -13.026729583740234

Token 688: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.100059156073257e-05
    2. '[' → logprob: -10.250070571899414
    3. '[i' → logprob: -10.375070571899414
    4. ' [' → logprob: -13.750070571899414
    5. 'j' → logprob: -14.500070571899414
    6. '\[' → logprob: -14.500070571899414
    7. '```' → logprob: -14.625070571899414
    8. '[js' → logprob: -15.625070571899414
    9. '[k' → logprob: -15.625070571899414
    10. ']' → logprob: -16.000070571899414

Token 689: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015208270400762558
    2. ']+=' → logprob: -4.2652082443237305
    3. ']=' → logprob: -7.1402082443237305
    4. ' ]' → logprob: -8.64020824432373
    5. '   ' → logprob: -11.01520824432373
    6. '+=' → logprob: -11.26520824432373
    7. '[j' → logprob: -11.39020824432373
    8. ']+' → logprob: -11.89020824432373
    9. '-' → logprob: -12.01520824432373
    10. '=' → logprob: -12.64020824432373

Token 690: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.074907287256792e-05
    2. ']' → logprob: -10.00006103515625
    3. 'i' → logprob: -11.37506103515625
    4. 'j' → logprob: -13.37506103515625
    5. ' ' → logprob: -14.37506103515625
    6. '   ' → logprob: -15.12506103515625
    7. ']=' → logprob: -15.62506103515625
    8. ']+=' → logprob: -15.87506103515625
    9. '2' → logprob: -16.00006103515625
    10. ']+' → logprob: -16.12506103515625

Token 691: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09297426789999008
    2. '+' → logprob: -2.5929741859436035
    3. ']+=' → logprob: -4.7179741859436035
    4. ' +' → logprob: -6.2179741859436035
    5. '+=' → logprob: -7.0929741859436035
    6. ']+' → logprob: -7.2179741859436035
    7. ' ]' → logprob: -7.8429741859436035
    8. '       ' → logprob: -8.217974662780762
    9. ' +=' → logprob: -8.717974662780762
    10. ']=' → logprob: -8.842974662780762

Token 692: ' :' (ID: 712)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3298167586326599
    2. '+' → logprob: -2.0798168182373047
    3. ' +=' → logprob: -2.2048168182373047
    4. ' +' → logprob: -4.079816818237305
    5. '=' → logprob: -4.204816818237305
    6. ')' → logprob: -5.329816818237305
    7. ']+=' → logprob: -5.829816818237305
    8. '       ' → logprob: -6.454816818237305
    9. 'dp' → logprob: -6.579816818237305
    10. '%' → logprob: -7.454816818237305

Token 693: ' Le' (ID: 2018)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.2027448415756226
    2. 'dp' → logprob: -1.2027448415756226
    3. '+' → logprob: -1.3277448415756226
    4. ' dp' → logprob: -2.077744960784912
    5. ' (' → logprob: -6.202744960784912
    6. '(' → logprob: -6.327744960784912
    7. '(dp' → logprob: -6.452744960784912
    8. ' +=' → logprob: -7.077744960784912
    9. '+=' → logprob: -7.452744960784912
    10. ' ' → logprob: -7.702744960784912

Token 694: ' terme' (ID: 42959)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7052183151245117
    2. ' dp' → logprob: -1.0802183151245117
    3. '+' → logprob: -2.4552183151245117
    4. ' ' → logprob: -3.0802183151245117
    5. ' +' → logprob: -4.080218315124512
    6. 's' → logprob: -4.830218315124512
    7. ' plus' → logprob: -6.580218315124512
    8. 'd' → logprob: -6.830218315124512
    9. 'space' → logprob: -6.955218315124512
    10. ')' → logprob: -7.080218315124512

Token 695: ' calcul' (ID: 7559)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.577036440372467
    2. ' +' → logprob: -0.827036440372467
    3. ' ' → logprob: -7.827036380767822
    4. '%' → logprob: -8.95203685760498
    5. ' +=' → logprob: -9.57703685760498
    6. ']' → logprob: -9.70203685760498
    7. '    ' → logprob: -9.82703685760498
    8. '[' → logprob: -9.82703685760498
    9. '+=' → logprob: -10.20203685760498
    10. '*' → logprob: -10.45203685760498

Token 696: 'é' (ID: 377)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5989304184913635
    2. '+' → logprob: -1.2239303588867188
    3. 's' → logprob: -2.5989303588867188
    4. ']+' → logprob: -3.4739303588867188
    5. 'é' → logprob: -4.223930358886719
    6. 'e' → logprob: -4.723930358886719
    7. ' +' → logprob: -4.973930358886719
    8. '[' → logprob: -5.723930358886719
    9. ')' → logprob: -5.848930358886719
    10. 'es' → logprob: -6.223930358886719

Token 697: ' précéd' (ID: 55435)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6327643990516663
    2. ' +' → logprob: -0.7577643990516663
    3. '[' → logprob: -9.88276481628418
    4. ' ' → logprob: -10.13276481628418
    5. ' ' → logprob: -11.00776481628418
    6. ' +
' → logprob: -11.38276481628418
    7. ' +=' → logprob: -11.88276481628418
    8. '    ' → logprob: -12.00776481628418
    9. '   ' → logprob: -12.25776481628418
    10. ')' → logprob: -12.25776481628418

Token 698: 'emment' (ID: 58019)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2697278261184692
    2. 'é' → logprob: -1.2697278261184692
    3. 'éc' → logprob: -2.2697277069091797
    4. 'u' → logprob: -2.7697277069091797
    5. '=' → logprob: -3.0197277069091797
    6. 'emment' → logprob: -3.0197277069091797
    7. 'éd' → logprob: -3.6447277069091797
    8. ']' → logprob: -3.7697277069091797
    9. 'és' → logprob: -3.8947277069091797
    10. 'e' → logprob: -3.8947277069091797

Token 699: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38724762201309204
    2. '+' → logprob: -1.1372475624084473
    3. '       ' → logprob: -8.387248039245605
    4. ' +=' → logprob: -10.137248039245605
    5. '+=' → logprob: -10.262248039245605
    6. ' +
' → logprob: -10.762248039245605
    7. ')' → logprob: -11.012248039245605
    8. '=' → logprob: -11.512248039245605
    9. '+
' → logprob: -12.137248039245605
    10. ',' → logprob: -12.387248039245605

Token 700: ' permet' (ID: 11798)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.649178147315979
    2. '       ' → logprob: -1.524178147315979
    3. ' dp' → logprob: -1.524178147315979
    4. '+' → logprob: -4.6491780281066895
    5. ' +=' → logprob: -4.6491780281066895
    6. ' +' → logprob: -5.1491780281066895
    7. '+=' → logprob: -5.5241780281066895
    8. ')' → logprob: -5.5241780281066895
    9. '=' → logprob: -5.6491780281066895
    10. '        ' → logprob: -6.0241780281066895

Token 701: ' un' (ID: 537)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8431921005249023
    2. 'dp' → logprob: -1.2181921005249023
    3. '   ' → logprob: -2.4681921005249023
    4. ' dp' → logprob: -2.5931921005249023
    5. '+=' → logprob: -3.2181921005249023
    6. ' +=' → logprob: -3.9681921005249023
    7. '=' → logprob: -4.343192100524902
    8. ' +' → logprob: -4.468192100524902
    9. '       ' → logprob: -4.593192100524902
    10. '(dp' → logprob: -5.593192100524902

Token 702: ' cumul' (ID: 163119)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.40779590606689453
    2. 'acc' → logprob: -2.1577959060668945
    3. '+=' → logprob: -2.2827959060668945
    4. '=' → logprob: -3.5327959060668945
    5. 'aj' → logprob: -4.0327959060668945
    6. ' +=' → logprob: -4.0327959060668945
    7. 'dp' → logprob: -5.0327959060668945
    8. 's' → logprob: -5.2827959060668945
    9. ')' → logprob: -5.6577959060668945
    10. 'plus' → logprob: -5.6577959060668945

Token 703: ' (' (ID: 350)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47538572549819946
    2. ' +' → logprob: -0.9753857254981995
    3. '   ' → logprob: -7.725385665893555
    4. ' +=' → logprob: -8.475385665893555
    5. '+=' → logprob: -8.475385665893555
    6. '[' → logprob: -8.975385665893555
    7. ')' → logprob: -9.350385665893555
    8. '       ' → logprob: -9.600385665893555
    9. '    ' → logprob: -10.225385665893555
    10. ',' → logprob: -10.975385665893555

Token 704: 'dp' (ID: 19037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17562003433704376
    2. 'dp' → logprob: -2.9256200790405273
    3. '+' → logprob: -3.0506200790405273
    4. ' )' → logprob: -3.9256200790405273
    5. ' +' → logprob: -4.300620079040527
    6. '       ' → logprob: -4.925620079040527
    7. ' dp' → logprob: -5.175620079040527
    8. '+=' → logprob: -5.300620079040527
    9. '=' → logprob: -5.925620079040527
    10. '(dp' → logprob: -6.300620079040527

Token 705: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02537139505147934
    2. '[j' → logprob: -3.7753713130950928
    3. '[' → logprob: -6.400371551513672
    4. ')' → logprob: -8.775371551513672
    5. '   ' → logprob: -9.275371551513672
    6. ' [' → logprob: -9.400371551513672
    7. '[i' → logprob: -10.650371551513672
    8. ')[' → logprob: -11.025371551513672
    9. '       ' → logprob: -11.650371551513672
    10. ']' → logprob: -11.900371551513672

Token 706: ' est' (ID: 893)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00034297199454158545
    2. '[' → logprob: -8.000343322753906
    3. ' [' → logprob: -12.000343322753906
    4. '   ' → logprob: -14.750343322753906
    5. '[i' → logprob: -15.375343322753906
    6. '       ' → logprob: -15.625343322753906
    7. ')' → logprob: -15.875343322753906
    8. '[
' → logprob: -16.000343322753906
    9. '+j' → logprob: -16.500343322753906
    10. '[js' → logprob: -17.000343322753906

Token 707: ' cens' (ID: 55288)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2434089630842209
    2. ' dp' → logprob: -1.7434089183807373
    3. 'acc' → logprob: -3.9934089183807373
    4. '[' → logprob: -4.993409156799316
    5. '[j' → logprob: -6.118409156799316
    6. ' accum' → logprob: -6.243409156799316
    7. '   ' → logprob: -6.493409156799316
    8. ' ' → logprob: -6.743409156799316
    9. 'c' → logprob: -6.868409156799316
    10. ')' → logprob: -7.243409156799316

Token 708: 'é' (ID: 377)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8898161053657532
    2. '[i' → logprob: -1.0148160457611084
    3. 'é' → logprob: -2.7648160457611084
    4. '#' → logprob: -3.5148160457611084
    5. '[u' → logprob: -4.0148162841796875
    6. 'er' → logprob: -4.2648162841796875
    7. '[j' → logprob: -4.5148162841796875
    8. '[pos' → logprob: -4.6398162841796875
    9. '[idx' → logprob: -4.7648162841796875
    10. '=' → logprob: -5.0148162841796875

Token 709: ' représ' (ID: 31534)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.2080778330564499
    2. '[' → logprob: -1.7080777883529663
    3. ')' → logprob: -5.583077907562256
    4. '   ' → logprob: -7.083077907562256
    5. ' be' → logprob: -8.083077430725098
    6. '=' → logprob: -8.083077430725098
    7. ' +=' → logprob: -8.458077430725098
    8. ' )' → logprob: -8.958077430725098
    9. '[:]' → logprob: -9.208077430725098
    10. ' [' → logprob: -9.458077430725098

Token 710: 'enter' (ID: 3547)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7083173990249634
    2. '[' → logprob: -0.9583173990249634
    3. 'er' → logprob: -3.208317279815674
    4. 'uer' → logprob: -3.958317279815674
    5. 'uler' → logprob: -4.333317279815674
    6. 'u' → logprob: -4.958317279815674
    7. '#' → logprob: -5.083317279815674
    8. 'urer' → logprob: -5.333317279815674
    9. 'é' → logprob: -5.583317279815674
    10. ')' → logprob: -5.708317279815674

Token 711: ' des' (ID: 731)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2527434527873993
    2. ' dp' → logprob: -1.5027434825897217
    3. ' la' → logprob: -8.5027437210083
    4. '(dp' → logprob: -8.8777437210083
    5. '   ' → logprob: -9.1277437210083
    6. '	dp' → logprob: -9.3777437210083
    7. ' ' → logprob: -9.7527437210083
    8. ')' → logprob: -10.1277437210083
    9. ' ' → logprob: -10.6277437210083
    10. 'la' → logprob: -10.8777437210083

Token 712: ' tot' (ID: 2417)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6018593907356262
    2. ' dp' → logprob: -0.8518593907356262
    3. ' )' → logprob: -4.8518595695495605
    4. ')' → logprob: -5.1018595695495605
    5. '+' → logprob: -5.4768595695495605
    6. 's' → logprob: -5.7268595695495605
    7. ' som' → logprob: -7.6018595695495605
    8. ' ' → logprob: -7.6018595695495605
    9. ' +' → logprob: -7.7268595695495605
    10. ' ' → logprob: -8.226859092712402

Token 713: 'aux' (ID: 5454)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.00761005561798811
    2. 'als' → logprob: -5.257609844207764
    3. 'aux' → logprob: -7.507609844207764
    4. 'alp' → logprob: -7.507609844207764
    5. 'ale' → logprob: -8.132610321044922
    6. 'ales' → logprob: -8.382610321044922
    7. '   ' → logprob: -8.507610321044922
    8. '+' → logprob: -9.757610321044922
    9. 'alc' → logprob: -9.757610321044922
    10. ' +=' → logprob: -9.882610321044922

Token 714: ' accum' (ID: 23148)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.37413761019706726
    2. '+' → logprob: -1.2491376399993896
    3. ')' → logprob: -4.3741374015808105
    4. '[j' → logprob: -4.6241374015808105
    5. ' )' → logprob: -6.9991374015808105
    6. '[' → logprob: -7.2491374015808105
    7. '+j' → logprob: -7.2491374015808105
    8. '   ' → logprob: -8.374137878417969
    9. ')+' → logprob: -9.249137878417969
    10. '    ' → logprob: -9.624137878417969

Token 715: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.5584210157394409
    2. 'ulé' → logprob: -1.433421015739441
    3. 'u' → logprob: -1.808421015739441
    4. 'ule' → logprob: -4.6834211349487305
    5. ' ul' → logprob: -5.8084211349487305
    6. 'ulated' → logprob: -5.8084211349487305
    7. 'al' → logprob: -5.9334211349487305
    8. 'um' → logprob: -6.8084211349487305
    9. 'umul' → logprob: -6.8084211349487305
    10. '   ' → logprob: -7.1834211349487305

Token 716: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.01361930463463068
    2. 'es' → logprob: -4.638619422912598
    3. 'ated' → logprob: -5.763619422912598
    4. '#' → logprob: -8.263619422912598
    5. 'ées' → logprob: -8.388619422912598
    6. 'ed' → logprob: -10.013619422912598
    7. 'é' → logprob: -10.013619422912598
    8. 's' → logprob: -10.638619422912598
    9. ')' → logprob: -11.138619422912598
    10. 'érés' → logprob: -11.138619422912598

Token 717: ').
' (ID: 6294)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34653496742248535
    2. '+' → logprob: -1.3465349674224854
    3. ')' → logprob: -3.4715349674224854
    4. '[j' → logprob: -7.596534729003906
    5. ' )' → logprob: -7.846534729003906
    6. '[' → logprob: -8.096534729003906
    7. '+j' → logprob: -9.096534729003906
    8. ')+' → logprob: -9.221534729003906
    9. '+)' → logprob: -10.346534729003906
    10. ' +
' → logprob: -10.471534729003906

Token 718: '       ' (ID: 309)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.435346394777298
    2. '+' → logprob: -1.0603463649749756
    3. ' +=' → logprob: -5.560346603393555
    4. '       ' → logprob: -6.935346603393555
    5. '+=' → logprob: -7.060346603393555
    6. ' +
' → logprob: -7.935346603393555
    7. '+
' → logprob: -8.560346603393555
    8. '=' → logprob: -8.810346603393555
    9. '   ' → logprob: -9.060346603393555
    10. ')' → logprob: -10.060346603393555

Token 719: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6040171980857849
    2. '+' → logprob: -1.7290172576904297
    3. 'dp' → logprob: -2.1040172576904297
    4. '+=' → logprob: -3.1040172576904297
    5. ' +' → logprob: -3.3540172576904297
    6. ' +=' → logprob: -3.6040172576904297
    7. ' dp' → logprob: -3.8540172576904297
    8. ' =' → logprob: -4.10401725769043
    9. '       ' → logprob: -5.22901725769043
    10. ')' → logprob: -6.47901725769043

Token 720: ' -' (ID: 533)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.34049007296562195
    2. ' dp' → logprob: -1.3404901027679443
    3. '       ' → logprob: -3.8404901027679443
    4. '=' → logprob: -5.965489864349365
    5. '+' → logprob: -7.215489864349365
    6. '+=' → logprob: -7.465489864349365
    7. ' +=' → logprob: -7.465489864349365
    8. ' =' → logprob: -7.715489864349365
    9. ' +' → logprob: -8.090490341186523
    10. '   ' → logprob: -10.340490341186523

Token 721: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.060813747346401215
    2. ' dp' → logprob: -2.9358136653900146
    3. '(dp' → logprob: -5.310813903808594
    4. ' (' → logprob: -7.810813903808594
    5. '(' → logprob: -7.935813903808594
    6. '(i' → logprob: -9.810813903808594
    7. 'i' → logprob: -9.935813903808594
    8. '   ' → logprob: -10.310813903808594
    9. ' i' → logprob: -10.685813903808594
    10. 'pow' → logprob: -11.810813903808594

Token 722: '[k' (ID: 14298)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.020856117829680443
    2. '2' → logprob: -3.8958561420440674
    3. '[' → logprob: -8.645855903625488
    4. '[i' → logprob: -9.395855903625488
    5. ' [' → logprob: -10.645855903625488
    6. ']' → logprob: -11.895855903625488
    7. '[
' → logprob: -12.270855903625488
    8. '   ' → logprob: -13.270855903625488
    9. 'j' → logprob: -13.270855903625488
    10. ')' → logprob: -13.645855903625488

Token 723: '-j' (ID: 19720)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05310454219579697
    2. '-j' → logprob: -3.3031046390533447
    3. ' -' → logprob: -4.303104400634766
    4. '[j' → logprob: -7.303104400634766
    5. '2' → logprob: -8.178104400634766
    6. 'j' → logprob: -8.553104400634766
    7. ']' → logprob: -9.178104400634766
    8. '[' → logprob: -10.428104400634766
    9. '1' → logprob: -10.678104400634766
    10. '   ' → logprob: -10.803104400634766

Token 724: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.43050286173820496
    2. ']' → logprob: -1.0555028915405273
    3. ']-' → logprob: -7.180502891540527
    4. ' -' → logprob: -8.180502891540527
    5. '+' → logprob: -8.305502891540527
    6. '-j' → logprob: -8.555502891540527
    7. '])' → logprob: -9.305502891540527
    8. ']+' → logprob: -10.180502891540527
    9. ' ]' → logprob: -10.555502891540527
    10. '   ' → logprob: -10.805502891540527

Token 725: ' :' (ID: 712)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.861661970615387
    2. ']' → logprob: -1.3616619110107422
    3. ' +' → logprob: -1.4866619110107422
    4. '-' → logprob: -2.986661911010742
    5. ']+' → logprob: -3.736661911010742
    6. '[j' → logprob: -4.986661911010742
    7. '<|end|>' → logprob: -5.361661911010742
    8. ' -' → logprob: -5.611661911010742
    9. '[' → logprob: -6.236661911010742
    10. '+j' → logprob: -7.361661911010742

Token 726: ' Un' (ID: 1367)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19378416240215302
    2. ' dp' → logprob: -1.8187841176986694
    3. '(' → logprob: -5.193784236907959
    4. '(dp' → logprob: -5.443784236907959
    5. ' (' → logprob: -5.568784236907959
    6. '+' → logprob: -8.9437837600708
    7. ' +' → logprob: -9.8187837600708
    8. ' ' → logprob: -11.0687837600708
    9. ' ' → logprob: -11.4437837600708
    10. '	dp' → logprob: -11.5687837600708

Token 727: ' élément' (ID: 99627)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22723139822483063
    2. ']' → logprob: -2.352231502532959
    3. ' dp' → logprob: -2.977231502532959
    4. '*' → logprob: -4.352231502532959
    5. '[j' → logprob: -4.727231502532959
    6. '-' → logprob: -4.852231502532959
    7. ']+' → logprob: -5.227231502532959
    8. ']*' → logprob: -5.727231502532959
    9. ' *' → logprob: -5.727231502532959
    10. ' ]' → logprob: -5.852231502532959

Token 728: ' bien' (ID: 5340)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.670469343662262
    2. ' +' → logprob: -1.2954692840576172
    3. ']' → logprob: -2.170469284057617
    4. ']+' → logprob: -3.795469284057617
    5. '[' → logprob: -4.670469284057617
    6. 'from' → logprob: -4.795469284057617
    7. '[j' → logprob: -4.795469284057617
    8. '-' → logprob: -4.795469284057617
    9. '<|end|>' → logprob: -5.170469284057617
    10. '%' → logprob: -5.545469284057617

Token 729: ' particulier' (ID: 47842)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25452920794487
    2. ' -' → logprob: -1.8795292377471924
    3. '+' → logprob: -3.3795292377471924
    4. ']' → logprob: -4.129528999328613
    5. '-k' → logprob: -4.754528999328613
    6. '-mod' → logprob: -5.254528999328613
    7. ' +' → logprob: -5.629528999328613
    8. '[' → logprob: -7.379528999328613
    9. ']+' → logprob: -7.629528999328613
    10. '[j' → logprob: -7.754528999328613

Token 730: ' de' (ID: 334)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8309572339057922
    2. ' +' → logprob: -1.2059571743011475
    3. ']' → logprob: -1.7059571743011475
    4. '<|end|>' → logprob: -3.3309571743011475
    5. ']+' → logprob: -3.4559571743011475
    6. '%' → logprob: -4.830957412719727
    7. ')' → logprob: -6.330957412719727
    8. ' ]' → logprob: -6.330957412719727
    9. '<|end|>' → logprob: -7.080957412719727
    10. ']+=' → logprob: -7.455957412719727

Token 731: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0031941127963364124
    2. ' dp' → logprob: -5.753194332122803
    3. 'la' → logprob: -12.128193855285645
    4. '	dp' → logprob: -12.628193855285645
    5. 'd' → logprob: -13.378193855285645
    6. ' la' → logprob: -13.753193855285645
    7. 'f' → logprob: -13.753193855285645
    8. ' ' → logprob: -13.878193855285645
    9. 'l' → logprob: -14.128193855285645
    10. '(dp' → logprob: -14.503193855285645

Token 732: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1897289901971817
    2. '+' → logprob: -1.8147289752960205
    3. ']' → logprob: -5.1897292137146
    4. ')' → logprob: -6.6897292137146
    5. ']+' → logprob: -7.4397292137146
    6. ' +
' → logprob: -7.6897292137146
    7. '[' → logprob: -7.6897292137146
    8. '[j' → logprob: -7.8147292137146
    9. ' ]' → logprob: -8.689728736877441
    10. '       ' → logprob: -8.939728736877441

Token 733: ' calcul' (ID: 7559)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3719416558742523
    2. ')' → logprob: -1.8719416856765747
    3. '+' → logprob: -2.121941566467285
    4. '<|end|>' → logprob: -5.121941566467285
    5. ' )' → logprob: -5.246941566467285
    6. 'dp' → logprob: -5.246941566467285
    7. ']' → logprob: -5.496941566467285
    8. ' *' → logprob: -5.496941566467285
    9. '*' → logprob: -5.621941566467285
    10. ' +=' → logprob: -6.371941566467285

Token 734: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.022862330079078674
    2. '[' → logprob: -4.522862434387207
    3. ']' → logprob: -5.772862434387207
    4. '[k' → logprob: -6.397862434387207
    5. '+' → logprob: -6.647862434387207
    6. 'és' → logprob: -6.897862434387207
    7. 'ated' → logprob: -7.022862434387207
    8. 'ée' → logprob: -7.397862434387207
    9. '[j' → logprob: -8.022862434387207
    10. ')' → logprob: -8.022862434387207

Token 735: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19900469481945038
    2. ' +' → logprob: -1.9490046501159668
    3. '[k' → logprob: -4.324004650115967
    4. ']' → logprob: -5.824004650115967
    5. '[' → logprob: -5.824004650115967
    6. '+k' → logprob: -5.824004650115967
    7. '-' → logprob: -6.074004650115967
    8. ')' → logprob: -6.324004650115967
    9. '^' → logprob: -6.449004650115967
    10. ' ' → logprob: -6.449004650115967

Token 736: ' partir' (ID: 12100)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4216598868370056
    2. 'j' → logprob: -1.4216599464416504
    3. ' k' → logprob: -3.6716599464416504
    4. 'dp' → logprob: -3.9216599464416504
    5. ' j' → logprob: -4.92165994644165
    6. ']' → logprob: -5.17165994644165
    7. '-k' → logprob: -5.29665994644165
    8. '-' → logprob: -5.67165994644165
    9. 'index' → logprob: -5.67165994644165
    10. '[k' → logprob: -5.79665994644165

Token 737: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2387974262237549
    2. '[k' → logprob: -1.3637974262237549
    3. ']' → logprob: -1.7387974262237549
    4. 'de' → logprob: -2.363797426223755
    5. '(k' → logprob: -3.363797426223755
    6. '[' → logprob: -3.488797426223755
    7. '-' → logprob: -4.113797187805176
    8. ' k' → logprob: -4.363797187805176
    9. '],' → logprob: -4.488797187805176
    10. '   ' → logprob: -4.613797187805176

Token 738: ' l' (ID: 305)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9015527367591858
    2. 'k' → logprob: -1.401552677154541
    3. 'dp' → logprob: -2.151552677154541
    4. ' j' → logprob: -2.276552677154541
    5. ' k' → logprob: -2.526552677154541
    6. ' dp' → logprob: -3.401552677154541
    7. '-k' → logprob: -5.651552677154541
    8. '-' → logprob: -5.901552677154541
    9. 'f' → logprob: -6.026552677154541
    10. ']' → logprob: -6.401552677154541

Token 739: ''ind' (ID: 82245)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7212703824043274
    2. '-k' → logprob: -1.0962703227996826
    3. ' -' → logprob: -2.2212703227996826
    4. ']' → logprob: -4.096270561218262
    5. '[k' → logprob: -4.471270561218262
    6. ' ' → logprob: -4.721270561218262
    7. '[-' → logprob: -5.096270561218262
    8. 'k' → logprob: -5.471270561218262
    9. '-index' → logprob: -5.596270561218262
    10. ' k' → logprob: -5.721270561218262

Token 740: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.014647964388132095
    2. 'ices' → logprob: -4.264647960662842
    3. 'ice' → logprob: -8.2646484375
    4. 'e' → logprob: -8.7646484375
    5. 'eks' → logprob: -9.8896484375
    6. 'екс' → logprob: -12.3896484375
    7. 'es' → logprob: -12.6396484375
    8. '```' → logprob: -13.1396484375
    9. 'exe' → logprob: -13.2646484375
    10. 'i' → logprob: -13.5146484375

Token 741: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06922221183776855
    2. '-k' → logprob: -3.1942222118377686
    3. ' k' → logprob: -4.569222450256348
    4. '-' → logprob: -4.569222450256348
    5. ' -' → logprob: -6.569222450256348
    6. '-(' → logprob: -6.694222450256348
    7. ']' → logprob: -6.944222450256348
    8. '(k' → logprob: -7.694222450256348
    9. ' ' → logprob: -8.194222450256348
    10. '   ' → logprob: -9.069222450256348

Token 742: '-j' (ID: 19720)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09776687622070312
    2. '-j' → logprob: -2.722766876220703
    3. ' -' → logprob: -3.597766876220703
    4. '-k' → logprob: -10.222766876220703
    5. '-i' → logprob: -12.597766876220703
    6. ']' → logprob: -12.847766876220703
    7. '-l' → logprob: -13.097766876220703
    8. ' ' → logprob: -13.222766876220703
    9. ')' → logprob: -13.347766876220703
    10. '   ' → logprob: -13.472766876220703

Token 743: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23792727291584015
    2. '+' → logprob: -2.737927198410034
    3. ')' → logprob: -3.112927198410034
    4. '       ' → logprob: -3.237927198410034
    5. ' +' → logprob: -3.487927198410034
    6. ']+' → logprob: -4.112927436828613
    7. '-' → logprob: -5.487927436828613
    8. ' ]' → logprob: -5.612927436828613
    9. ' -' → logprob: -5.862927436828613
    10. ')+' → logprob: -6.737927436828613

Token 744: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.709384560585022
    2. ' +' → logprob: -1.584384560585022
    3. ')' → logprob: -2.2093844413757324
    4. ' dp' → logprob: -2.8343844413757324
    5. '       ' → logprob: -2.9593844413757324
    6. '+' → logprob: -3.2093844413757324
    7. '   ' → logprob: -3.7093844413757324
    8. '=' → logprob: -4.959384441375732
    9. ' =' → logprob: -5.334384441375732
    10. ' +=' → logprob: -6.334384441375732

Token 745: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7358099818229675
    2. ' +' → logprob: -1.8608100414276123
    3. '=' → logprob: -2.3608100414276123
    4. ' =' → logprob: -2.4858100414276123
    5. ' dp' → logprob: -2.8608100414276123
    6. '+' → logprob: -3.1108100414276123
    7. ')' → logprob: -3.7358100414276123
    8. ' +=' → logprob: -3.8608100414276123
    9. '       ' → logprob: -3.9858100414276123
    10. '   ' → logprob: -5.110809803009033

Token 746: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.43940892815589905
    2. 'dp' → logprob: -1.3144088983535767
    3. ' +' → logprob: -3.189409017562866
    4. '=' → logprob: -3.689409017562866
    5. ' dp' → logprob: -4.439408779144287
    6. '+=' → logprob: -5.314408779144287
    7. ' =' → logprob: -6.564408779144287
    8. ' +=' → logprob: -6.939408779144287
    9. ')' → logprob: -7.939408779144287
    10. '+
' → logprob: -7.939408779144287

Token 747: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32742857933044434
    2. 'f' → logprob: -2.4524285793304443
    3. ' dp' → logprob: -2.4524285793304443
    4. '(dp' → logprob: -3.3274285793304443
    5. ' f' → logprob: -4.452428817749023
    6. '(' → logprob: -4.452428817749023
    7. '(i' → logprob: -4.577428817749023
    8. ' (' → logprob: -4.577428817749023
    9. 'i' → logprob: -4.702428817749023
    10. '(f' → logprob: -4.952428817749023

Token 748: 'f' (ID: 69)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11276362836360931
    2. ' dp' → logprob: -2.7377636432647705
    3. 'i' → logprob: -3.6127636432647705
    4. 'm' → logprob: -5.737763404846191
    5. ' i' → logprob: -5.862763404846191
    6. 'f' → logprob: -6.362763404846191
    7. 'n' → logprob: -6.737763404846191
    8. 'j' → logprob: -6.737763404846191
    9. '(dp' → logprob: -6.737763404846191
    10. '(' → logprob: -7.362763404846191

Token 749: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0025505772791802883
    2. '[k' → logprob: -6.7525506019592285
    3. '[' → logprob: -7.1275506019592285
    4. ' [' → logprob: -7.8775506019592285
    5. '[f' → logprob: -9.87755012512207
    6. ')' → logprob: -10.25255012512207
    7. ')[' → logprob: -10.37755012512207
    8. '[-' → logprob: -10.62755012512207
    9. 'j' → logprob: -11.12755012512207
    10. '   ' → logprob: -11.75255012512207

Token 750: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026347558945417404
    2. ']-' → logprob: -3.7763476371765137
    3. '-' → logprob: -6.026347637176514
    4. '])' → logprob: -8.651347160339355
    5. ']+' → logprob: -8.776347160339355
    6. ']*' → logprob: -9.526347160339355
    7. '[j' → logprob: -9.776347160339355
    8. ']
' → logprob: -10.026347160339355
    9. '],' → logprob: -10.151347160339355
    10. ' ]' → logprob: -10.651347160339355

Token 751: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.421103298664093
    2. '-' → logprob: -1.6711032390594482
    3. ' +' → logprob: -3.1711032390594482
    4. '+' → logprob: -3.2961032390594482
    5. ' *' → logprob: -3.2961032390594482
    6. ')' → logprob: -4.421103477478027
    7. ']' → logprob: -4.796103477478027
    8. '*' → logprob: -4.796103477478027
    9. '**' → logprob: -5.671103477478027
    10. ' )' → logprob: -6.171103477478027

Token 752: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0019457722082734108
    2. ' f' → logprob: -6.251945972442627
    3. '1' → logprob: -11.001945495605469
    4. ')' → logprob: -15.751945495605469
    5. '   ' → logprob: -16.00194549560547
    6. '0' → logprob: -16.25194549560547
    7. '	f' → logprob: -16.62694549560547
    8. ' ' → logprob: -17.12694549560547
    9. ' ' → logprob: -17.50194549560547
    10. '(f' → logprob: -17.75194549560547

Token 753: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0008101018611341715
    2. 'j' → logprob: -7.125810146331787
    3. '   ' → logprob: -13.000809669494629
    4. '[f' → logprob: -13.000809669494629
    5. '	j' → logprob: -15.250809669494629
    6. '[' → logprob: -15.375809669494629
    7. '(j' → logprob: -15.625809669494629
    8. ' j' → logprob: -16.125810623168945
    9. 'f' → logprob: -16.250810623168945
    10. ' [' → logprob: -16.875810623168945

Token 754: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001358400477329269
    2. ' -' → logprob: -9.50013542175293
    3. '1' → logprob: -10.12513542175293
    4. '[j' → logprob: -11.37513542175293
    5. '[' → logprob: -12.12513542175293
    6. '])' → logprob: -12.87513542175293
    7. 'j' → logprob: -14.87513542175293
    8. '   ' → logprob: -15.37513542175293
    9. ']' → logprob: -15.62513542175293
    10. ' ' → logprob: -15.75013542175293

Token 755: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.77627644513268e-06
    2. '-' → logprob: -12.375008583068848
    3. '   ' → logprob: -12.750008583068848
    4. '[' → logprob: -15.250008583068848
    5. ' ' → logprob: -15.250008583068848
    6. '```' → logprob: -15.500008583068848
    7. '       ' → logprob: -16.375009536743164
    8. '#' → logprob: -16.750009536743164
    9. 'for' → logprob: -16.875009536743164
    10. 'i' → logprob: -16.875009536743164

Token 756: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05685262382030487
    2. '])' → logprob: -2.9318525791168213
    3. ' )' → logprob: -6.5568528175354
    4. ']' → logprob: -8.681852340698242
    5. ' ])' → logprob: -8.931852340698242
    6. ')])' → logprob: -9.056852340698242
    7. '))' → logprob: -10.681852340698242
    8. '`)' → logprob: -10.681852340698242
    9. ')]' → logprob: -10.681852340698242
    10. '）' → logprob: -11.306852340698242

Token 757: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10681883245706558
    2. ')*' → logprob: -2.981818914413452
    3. ' *' → logprob: -3.606818914413452
    4. ']' → logprob: -4.606818675994873
    5. ' )' → logprob: -4.856818675994873
    6. '*' → logprob: -6.481818675994873
    7. '):' → logprob: -6.606818675994873
    8. '   ' → logprob: -7.106818675994873
    9. ':' → logprob: -7.231818675994873
    10. ' ]' → logprob: -8.106819152832031

Token 758: ' Diff' (ID: 67533)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.14599116146564484
    2. '(f' → logprob: -2.770991086959839
    3. ' dp' → logprob: -3.895991086959839
    4. '(dp' → logprob: -3.895991086959839
    5. 'dp' → logprob: -4.145991325378418
    6. '(' → logprob: -4.520991325378418
    7. ' f' → logprob: -6.520991325378418
    8. '<|end|>' → logprob: -6.770991325378418
    9. ')' → logprob: -7.020991325378418
    10. '(n' → logprob: -7.520991325378418

Token 759: 'érence' (ID: 65256)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25899890065193176
    2. ' *' → logprob: -2.3839988708496094
    3. ']' → logprob: -2.5089988708496094
    4. '[' → logprob: -4.008998870849609
    5. '*' → logprob: -4.258998870849609
    6. ')*' → logprob: -5.133998870849609
    7. ' ' → logprob: -5.258998870849609
    8. '[j' → logprob: -5.633998870849609
    9. ' )' → logprob: -6.008998870849609
    10. '),' → logprob: -7.133998870849609

Token 760: ' entre' (ID: 3853)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.026331884786486626
    2. '*' → logprob: -3.776331901550293
    3. ')' → logprob: -5.901331901550293
    4. '<|end|>' → logprob: -8.901331901550293
    5. ' ' → logprob: -10.026331901550293
    6. '*(' → logprob: -10.276331901550293
    7. ')*' → logprob: -10.401331901550293
    8. '*j' → logprob: -11.151331901550293
    9. '*f' → logprob: -11.151331901550293
    10. ' )' → logprob: -11.651331901550293

Token 761: ' deux' (ID: 10301)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6941754221916199
    2. ' f' → logprob: -0.6941754221916199
    3. ')' → logprob: -7.6941752433776855
    4. '(f' → logprob: -8.069175720214844
    5. ' (' → logprob: -9.319175720214844
    6. ' )' → logprob: -9.694175720214844
    7. ' ' → logprob: -10.694175720214844
    8. ' dp' → logprob: -10.819175720214844
    9. 'dp' → logprob: -10.944175720214844
    10. ' ' → logprob: -11.194175720214844

Token 762: ' valeurs' (ID: 73668)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8648141026496887
    2. ' f' → logprob: -1.739814043045044
    3. ' espaces' → logprob: -1.864814043045044
    4. ' )' → logprob: -2.114814043045044
    5. 'f' → logprob: -3.239814043045044
    6. '(f' → logprob: -3.489814043045044
    7. ' (' → logprob: -4.239814281463623
    8. ' ' → logprob: -5.364814281463623
    9. ' espace' → logprob: -5.489814281463623
    10. '(' → logprob: -5.489814281463623

Token 763: ' cons' (ID: 1473)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10859747976064682
    2. ')' → logprob: -2.98359751701355
    3. '*' → logprob: -3.35859751701355
    4. '[j' → logprob: -4.858597278594971
    5. '*f' → logprob: -5.733597278594971
    6. ')*' → logprob: -6.233597278594971
    7. '   ' → logprob: -6.983597278594971
    8. ' )' → logprob: -7.358597278594971
    9. ']' → logprob: -7.608597278594971
    10. '[' → logprob: -7.608597278594971

Token 764: 'écut' (ID: 96392)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3295234441757202
    2. 'f' → logprob: -2.0795235633850098
    3. '   ' → logprob: -3.0795235633850098
    4. 'à' → logprob: -3.7045235633850098
    5. ' ]' → logprob: -3.7045235633850098
    6. '```' → logprob: -4.57952356338501
    7. ' f' → logprob: -4.82952356338501
    8. '[' → logprob: -4.95452356338501
    9. ')' → logprob: -5.07952356338501
    10. ' à' → logprob: -5.20452356338501

Token 765: 'ives' (ID: 2264)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32291683554649353
    2. ' de' → logprob: -2.1979167461395264
    3. 'f' → logprob: -2.9479167461395264
    4. 's' → logprob: -3.4479167461395264
    5. 'de' → logprob: -3.9479167461395264
    6. '   ' → logprob: -4.3229169845581055
    7. ' f' → logprob: -4.4479169845581055
    8. ')' → logprob: -5.0729169845581055
    9. 'es' → logprob: -5.0729169845581055
    10. 'e' → logprob: -5.6979169845581055

Token 766: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5794548988342285
    2. ' *' → logprob: -1.0794548988342285
    3. '*' → logprob: -3.9544548988342285
    4. ' )' → logprob: -4.0794548988342285
    5. ')*' → logprob: -4.2044548988342285
    6. '   ' → logprob: -4.2044548988342285
    7. '):' → logprob: -4.3294548988342285
    8. '       ' → logprob: -4.4544548988342285
    9. ':' → logprob: -5.8294548988342285
    10. ' +' → logprob: -6.7044548988342285

Token 767: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05488476902246475
    2. ' f' → logprob: -2.929884672164917
    3. ' la' → logprob: -14.429884910583496
    4. ' ' → logprob: -14.429884910583496
    5. ' ' → logprob: -15.054884910583496
    6. ')' → logprob: -15.429884910583496
    7. ' ' → logprob: -15.554884910583496
    8. '	f' → logprob: -16.05488395690918
    9. '(f' → logprob: -16.42988395690918
    10. '```' → logprob: -16.67988395690918

Token 768: ' liste' (ID: 31719)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0018376067746430635
    2. ' f' → logprob: -6.501837730407715
    3. 'liste' → logprob: -8.626837730407715
    4. '```' → logprob: -9.376837730407715
    5. ')' → logprob: -10.876837730407715
    6. ' liste' → logprob: -11.126837730407715
    7. ']' → logprob: -11.501837730407715
    8. '#' → logprob: -12.376837730407715
    9. '`' → logprob: -12.751837730407715
    10. 'list' → logprob: -13.376837730407715

Token 769: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03997654467821121
    2. ')' → logprob: -4.039976596832275
    3. ' f' → logprob: -5.039976596832275
    4. ']' → logprob: -5.789976596832275
    5. '[' → logprob: -6.039976596832275
    6. '[f' → logprob: -6.164976596832275
    7. '```' → logprob: -6.539976596832275
    8. ' )' → logprob: -6.539976596832275
    9. '(f' → logprob: -6.914976596832275
    10. '[j' → logprob: -6.914976596832275

Token 770: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9755982160568237
    2. ')' → logprob: -1.7255982160568237
    3. ':' → logprob: -1.7255982160568237
    4. '   ' → logprob: -2.3505983352661133
    5. '       ' → logprob: -2.7255983352661133
    6. ')*' → logprob: -3.8505983352661133
    7. ']' → logprob: -4.100598335266113
    8. ' *' → logprob: -4.100598335266113
    9. '```' → logprob: -4.725598335266113
    10. ' =' → logprob: -5.100598335266113

Token 771: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6351005434989929
    2. ':' → logprob: -1.5101006031036377
    3. '):' → logprob: -1.8851006031036377
    4. ')' → logprob: -3.2601006031036377
    5. ' =' → logprob: -4.260100364685059
    6. '=' → logprob: -4.510100364685059
    7. ' dp' → logprob: -4.760100364685059
    8. ' :' → logprob: -5.385100364685059
    9. '*' → logprob: -5.510100364685059
    10. '   ' → logprob: -5.635100364685059

Token 772: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.26966699957847595
    2. ')' → logprob: -2.519666910171509
    3. '):' → logprob: -3.019666910171509
    4. ' dp' → logprob: -3.269666910171509
    5. ':' → logprob: -4.019667148590088
    6. '=' → logprob: -4.769667148590088
    7. '       ' → logprob: -4.894667148590088
    8. ' =' → logprob: -4.894667148590088
    9. '   ' → logprob: -5.269667148590088
    10. ' +=' → logprob: -5.644667148590088

Token 773: ' -' (ID: 533)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01279368530958891
    2. ' dp' → logprob: -4.51279354095459
    3. '   ' → logprob: -6.63779354095459
    4. '       ' → logprob: -8.13779354095459
    5. ')' → logprob: -10.13779354095459
    6. '	dp' → logprob: -10.26279354095459
    7. '=' → logprob: -10.63779354095459
    8. ' =' → logprob: -11.13779354095459
    9. '(dp' → logprob: -11.63779354095459
    10. '_dp' → logprob: -12.26279354095459

Token 774: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.36160534620285034
    2. '(dp' → logprob: -1.6116054058074951
    3. ' dp' → logprob: -3.361605405807495
    4. 'm' → logprob: -3.736605405807495
    5. '(i' → logprob: -4.236605167388916
    6. ' (' → logprob: -4.361605167388916
    7. 'i' → logprob: -4.986605167388916
    8. '(m' → logprob: -5.361605167388916
    9. ' m' → logprob: -6.236605167388916
    10. '(' → logprob: -6.486605167388916

Token 775: ' multipl' (ID: 44269)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.611573338508606
    2. ' +=' → logprob: -1.736573338508606
    3. '=' → logprob: -1.986573338508606
    4. ']' → logprob: -2.9865732192993164
    5. ' =' → logprob: -3.7365732192993164
    6. ']+=' → logprob: -3.7365732192993164
    7. '[' → logprob: -4.486573219299316
    8. ')' → logprob: -4.486573219299316
    9. 'dp' → logprob: -5.986573219299316
    10. ']=' → logprob: -6.236573219299316

Token 776: 'ie' (ID: 396)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.9726451635360718
    2. 'ie' → logprob: -1.2226451635360718
    3. 'ipl' → logprob: -1.5976451635360718
    4. 'ique' → logprob: -2.3476452827453613
    5. 'iple' → logprob: -4.472645282745361
    6. 'lie' → logprob: -4.847645282745361
    7. 'ipe' → logprob: -6.222645282745361
    8. 'p' → logprob: -6.597645282745361
    9. 'pl' → logprob: -6.722645282745361
    10. 'plique' → logprob: -7.097645282745361

Token 777: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12084317952394485
    2. '(dp' → logprob: -2.6208431720733643
    3. ' dp' → logprob: -3.3708431720733643
    4. ' (' → logprob: -5.495843410491943
    5. '(' → logprob: -6.495843410491943
    6. '   ' → logprob: -7.120843410491943
    7. '	dp' → logprob: -8.870842933654785
    8. '       ' → logprob: -9.620842933654785
    9. '((' → logprob: -11.245842933654785
    10. ' ' → logprob: -11.495842933654785

Token 778: '[k' (ID: 14298)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9743012671824545e-05
    2. '[j' → logprob: -11.500020027160645
    3. '[i' → logprob: -12.250020027160645
    4. '[' → logprob: -12.750020027160645
    5. '[k' → logprob: -14.625020027160645
    6. '[-' → logprob: -15.125020027160645
    7. '₂' → logprob: -15.375020027160645
    8. ' ' → logprob: -15.500020027160645
    9. '```' → logprob: -15.625020027160645
    10. '   ' → logprob: -16.000019073486328

Token 779: '-j' (ID: 19720)
  Prédit: '-j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-j' → logprob: -0.04014868661761284
    2. '-' → logprob: -3.4151487350463867
    3. ' -' → logprob: -5.040148735046387
    4. ' ' → logprob: -12.790148735046387
    5. '   ' → logprob: -13.165148735046387
    6. '	' → logprob: -13.915148735046387
    7. ']' → logprob: -14.415148735046387
    8. '-i' → logprob: -14.665148735046387
    9. '-js' → logprob: -14.915148735046387
    10. '  ' → logprob: -14.915148735046387

Token 780: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026271846145391464
    2. '-' → logprob: -4.651271820068359
    3. '],' → logprob: -4.651271820068359
    4. '[j' → logprob: -5.401271820068359
    5. ']*' → logprob: -7.401271820068359
    6. '[' → logprob: -7.526271820068359
    7. ' ]' → logprob: -7.901271820068359
    8. ' -' → logprob: -8.15127182006836
    9. '[k' → logprob: -8.52627182006836
    10. '   ' → logprob: -9.27627182006836

Token 781: ' par' (ID: 686)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14549410343170166
    2. '*' → logprob: -2.145493984222412
    3. ')' → logprob: -4.520493984222412
    4. '<|end|>' → logprob: -6.395493984222412
    5. '   ' → logprob: -6.520493984222412
    6. ']' → logprob: -6.645493984222412
    7. ',' → logprob: -7.395493984222412
    8. '       ' → logprob: -8.02049446105957
    9. '[' → logprob: -8.02049446105957
    10. '[j' → logprob: -8.14549446105957

Token 782: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6948937177658081
    2. '(f' → logprob: -0.6948937177658081
    3. '((' → logprob: -7.069893836975098
    4. '(' → logprob: -8.069893836975098
    5. ' ((' → logprob: -8.069893836975098
    6. '(j' → logprob: -8.819893836975098
    7. ' ' → logprob: -10.569893836975098
    8. '(i' → logprob: -10.569893836975098
    9. '   ' → logprob: -10.819893836975098
    10. '  ' → logprob: -11.694893836975098

Token 783: 'f' (ID: 69)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3910195529460907
    2. '(f' → logprob: -1.141019582748413
    3. 'f' → logprob: -6.266019344329834
    4. ' f' → logprob: -6.391019344329834
    5. '(' → logprob: -7.516019344329834
    6. ' ' → logprob: -11.141019821166992
    7. '  ' → logprob: -13.516019821166992
    8. '((' → logprob: -14.016019821166992
    9. ' ((' → logprob: -14.641019821166992
    10. '   ' → logprob: -14.641019821166992

Token 784: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.3663626305060461e-05
    2. 'j' → logprob: -11.87501335144043
    3. ']' → logprob: -13.25001335144043
    4. '[f' → logprob: -13.25001335144043
    5. '[' → logprob: -13.75001335144043
    6. '][' → logprob: -14.25001335144043
    7. '```' → logprob: -15.37501335144043
    8. ')' → logprob: -15.62501335144043
    9. '[
' → logprob: -15.75001335144043
    10. '	j' → logprob: -15.75001335144043

Token 785: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0185089111328125
    2. '[j' → logprob: -4.1435089111328125
    3. ']-' → logprob: -6.0185089111328125
    4. '[' → logprob: -10.518508911132812
    5. ' ]' → logprob: -12.393508911132812
    6. '[i' → logprob: -13.393508911132812
    7. ']
' → logprob: -13.643508911132812
    8. '][' → logprob: -14.143508911132812
    9. '[f' → logprob: -14.393508911132812
    10. '[
' → logprob: -14.518508911132812

Token 786: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8211840391159058
    2. '-' → logprob: -1.0711840391159058
    3. ' -' → logprob: -1.5711840391159058
    4. ']-' → logprob: -5.071184158325195
    5. '[j' → logprob: -6.571184158325195
    6. '-f' → logprob: -7.071184158325195
    7. '[' → logprob: -7.696184158325195
    8. ' ' → logprob: -8.696184158325195
    9. '```' → logprob: -8.696184158325195
    10. ')' → logprob: -8.821184158325195

Token 787: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.022213581949472427
    2. ' f' → logprob: -4.022213459014893
    3. ' (' → logprob: -6.022213459014893
    4. '(f' → logprob: -6.522213459014893
    5. '(' → logprob: -8.77221393585205
    6. ' ' → logprob: -13.52221393585205
    7. '	f' → logprob: -13.64721393585205
    8. ' ' → logprob: -13.77221393585205
    9. '```' → logprob: -14.64721393585205
    10. '   ' → logprob: -14.89721393585205

Token 788: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00033796546631492674
    2. 'j' → logprob: -8.000337600708008
    3. 'f' → logprob: -13.250337600708008
    4. '[f' → logprob: -14.375337600708008
    5. '(j' → logprob: -16.625337600708008
    6. ' j' → logprob: -17.500337600708008
    7. '	j' → logprob: -17.500337600708008
    8. '
' → logprob: -17.625337600708008
    9. ' [' → logprob: -17.750337600708008
    10. '   ' → logprob: -18.125337600708008

Token 789: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00019769940990954638
    2. ' -' → logprob: -9.000197410583496
    3. ']' → logprob: -9.625197410583496
    4. '[j' → logprob: -13.000197410583496
    5. '1' → logprob: -13.250197410583496
    6. ']-' → logprob: -13.500197410583496
    7. '[' → logprob: -13.625197410583496
    8. '[-' → logprob: -13.875197410583496
    9. '−' → logprob: -15.000197410583496
    10. '   ' → logprob: -16.125198364257812

Token 790: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '```' → logprob: -16.75
    4. '   ' → logprob: -17.5
    5. '-' → logprob: -18.0
    6. ')' → logprob: -18.375
    7. 'k' → logprob: -18.75
    8. 'f' → logprob: -18.875
    9. 'prev' → logprob: -19.0
    10. ']' → logprob: -19.9375

Token 791: ']).
' (ID: 135644)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4755316376686096
    2. ')' → logprob: -0.9755316376686096
    3. ')])' → logprob: -7.600531578063965
    4. ']' → logprob: -7.850531578063965
    5. ')]' → logprob: -8.600531578063965
    6. ']),' → logprob: -9.225531578063965
    7. ' ])' → logprob: -9.850531578063965
    8. '))' → logprob: -9.975531578063965
    9. ' )' → logprob: -10.350531578063965
    10. '])*' → logprob: -10.475531578063965

Token 792: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5982059240341187
    2. '=' → logprob: -1.0982059240341187
    3. ' =' → logprob: -2.848206043243408
    4. '   ' → logprob: -3.973206043243408
    5. '<|end|>' → logprob: -4.223206043243408
    6. ')' → logprob: -5.473206043243408
    7. ' +=' → logprob: -5.598206043243408
    8. '(dp' → logprob: -5.848206043243408
    9. '+' → logprob: -6.098206043243408
    10. ':' → logprob: -6.098206043243408

Token 793: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.039657387882471085
    2. '=' → logprob: -3.9146573543548584
    3. ' =' → logprob: -5.1646575927734375
    4. ' dp' → logprob: -5.2896575927734375
    5. '+' → logprob: -6.1646575927734375
    6. '+=' → logprob: -6.2896575927734375
    7. ')' → logprob: -6.5396575927734375
    8. ' +=' → logprob: -6.7896575927734375
    9. '(dp' → logprob: -7.1646575927734375
    10. '   ' → logprob: -7.6646575927734375

Token 794: ' -' (ID: 533)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018123488873243332
    2. ' dp' → logprob: -4.893123626708984
    3. '=' → logprob: -5.268123626708984
    4. '+' → logprob: -5.643123626708984
    5. ' =' → logprob: -7.643123626708984
    6. '+=' → logprob: -8.018123626708984
    7. ')' → logprob: -8.143123626708984
    8. ' +=' → logprob: -8.518123626708984
    9. '(dp' → logprob: -8.768123626708984
    10. '   ' → logprob: -8.893123626708984

Token 795: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.030141523107886314
    2. ' dp' → logprob: -3.530141592025757
    3. '       ' → logprob: -8.530141830444336
    4. '   ' → logprob: -8.780141830444336
    5. '	dp' → logprob: -11.280141830444336
    6. '(dp' → logprob: -11.780141830444336
    7. 'import' → logprob: -12.155141830444336
    8. '=' → logprob: -12.530141830444336
    9. ' ' → logprob: -13.530141830444336
    10. ' ' → logprob: -13.780141830444336

Token 796: ' addition' (ID: 5856)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10640661418437958
    2. ' dp' → logprob: -3.2314066886901855
    3. '+=' → logprob: -3.2314066886901855
    4. '%=' → logprob: -4.7314066886901855
    5. 'mod' → logprob: -5.9814066886901855
    6. '=' → logprob: -6.3564066886901855
    7. 'acc' → logprob: -6.4814066886901855
    8. 'add' → logprob: -6.6064066886901855
    9. ' +=' → logprob: -6.7314066886901855
    10. 'continue' → logprob: -7.1064066886901855

Token 797: 'ne' (ID: 611)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7073687314987183
    2. ' +=' → logprob: -1.3323687314987183
    3. ' =' → logprob: -1.7073687314987183
    4. '+=' → logprob: -2.957368850708008
    5. 'ner' → logprob: -5.082368850708008
    6. 'n' → logprob: -6.332368850708008
    7. '   ' → logprob: -7.082368850708008
    8. ' dp' → logprob: -7.457368850708008
    9. '+' → logprob: -8.707368850708008
    10. 'ne' → logprob: -9.582368850708008

Token 798: ' cela' (ID: 17542)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.047687262296676636
    2. ' dp' → logprob: -3.422687292098999
    3. '(dp' → logprob: -4.29768705368042
    4. ' (' → logprob: -8.547687530517578
    5. '   ' → logprob: -9.297687530517578
    6. '(' → logprob: -10.172687530517578
    7. '	dp' → logprob: -11.172687530517578
    8. '       ' → logprob: -12.672687530517578
    9. '_dp' → logprob: -14.047687530517578
    10. ' ' → logprob: -14.922687530517578

Token 799: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5519846081733704
    2. 'dp' → logprob: -1.5519845485687256
    3. ' dp' → logprob: -2.1769845485687256
    4. '(dp' → logprob: -2.5519845485687256
    5. '	dp' → logprob: -4.801984786987305
    6. ',' → logprob: -5.426984786987305
    7. ')' → logprob: -6.676984786987305
    8. ' =' → logprob: -6.676984786987305
    9. ' to' → logprob: -6.676984786987305
    10. '_dp' → logprob: -6.676984786987305

Token 800: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04862041026353836
    2. ' dp' → logprob: -3.0486204624176025
    3. '(dp' → logprob: -10.673620223999023
    4. '	dp' → logprob: -11.673620223999023
    5. '   ' → logprob: -14.298620223999023
    6. ' ' → logprob: -15.298620223999023
    7. '       ' → logprob: -15.923620223999023
    8. ' ' → logprob: -16.048620223999023
    9. '_dp' → logprob: -16.173620223999023
    10. '```' → logprob: -16.423620223999023

Token 801: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.975612187583465e-05
    2. '[j' → logprob: -11.125029563903809
    3. '```' → logprob: -11.625029563903809
    4. '[i' → logprob: -13.250029563903809
    5. '   ' → logprob: -13.875029563903809
    6. '[' → logprob: -13.875029563903809
    7. 'dp' → logprob: -14.625029563903809
    8. '_' → logprob: -14.875029563903809
    9. '`' → logprob: -15.000029563903809
    10. '₂' → logprob: -15.250029563903809

Token 802: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.250000953674316
    3. ' [' → logprob: -14.750000953674316
    4. '   ' → logprob: -19.000001907348633
    5. '[i' → logprob: -19.250001907348633
    6. '\[' → logprob: -19.875001907348633
    7. '```' → logprob: -20.000001907348633
    8. 'j' → logprob: -20.000001907348633
    9. '[js' → logprob: -20.750001907348633
    10. '	' → logprob: -21.000001907348633

Token 803: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008594118990004063
    2. '[j' → logprob: -7.875859260559082
    3. ']' → logprob: -8.000859260559082
    4. ' -' → logprob: -8.875859260559082
    5. '])' → logprob: -13.875859260559082
    6. '   ' → logprob: -14.250859260559082
    7. '[' → logprob: -14.500859260559082
    8. '−' → logprob: -14.625859260559082
    9. '```' → logprob: -14.750859260559082
    10. '[-' → logprob: -14.875859260559082

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014967684401199222
    2. '-' → logprob: -6.7514967918396
    3. '   ' → logprob: -8.501496315002441
    4. ' ' → logprob: -10.001496315002441
    5. 'j' → logprob: -10.126496315002441
    6. '```' → logprob: -11.001496315002441
    7. '[j' → logprob: -12.376496315002441
    8. '`' → logprob: -12.876496315002441
    9. '[' → logprob: -12.876496315002441
    10. 'i' → logprob: -13.251496315002441

Token 805: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12831658124923706
    2. ')' → logprob: -2.253316640853882
    3. '])' → logprob: -4.378316402435303
    4. ' ]' → logprob: -6.503316402435303
    5. '   ' → logprob: -7.753316402435303
    6. ' )' → logprob: -8.003316879272461
    7. '       ' → logprob: -8.503316879272461
    8. ']+' → logprob: -9.003316879272461
    9. '+' → logprob: -9.378316879272461
    10. ' ])' → logprob: -10.128316879272461

Token 806: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011731995269656181
    2. 'dp' → logprob: -4.51173210144043
    3. ' dp' → logprob: -7.76173210144043
    4. '	dp' → logprob: -9.26173210144043
    5. '=' → logprob: -9.88673210144043
    6. ' =' → logprob: -10.63673210144043
    7. '       ' → logprob: -11.13673210144043
    8. '(dp' → logprob: -11.13673210144043
    9. '    
' → logprob: -11.26173210144043
    10. '
' → logprob: -11.38673210144043

Token 807: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25535115599632263
    2. 'dp' → logprob: -1.505351185798645
    3. ' dp' → logprob: -5.7553510665893555
    4. '	dp' → logprob: -8.630351066589355
    5. '(dp' → logprob: -11.380351066589355
    6. '       ' → logprob: -11.380351066589355
    7. '```' → logprob: -11.380351066589355
    8. '   ' → logprob: -12.130351066589355
    9. '_dp' → logprob: -12.130351066589355
    10. '    
' → logprob: -12.255351066589355

Token 808: ' -' (ID: 533)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3480179011821747
    2. '   ' → logprob: -1.348017930984497
    3. '=' → logprob: -3.848017930984497
    4. ' dp' → logprob: -4.473017692565918
    5. ' =' → logprob: -7.223017692565918
    6. '	dp' → logprob: -7.723017692565918
    7. '_dp' → logprob: -8.848017692565918
    8. '(dp' → logprob: -9.598017692565918
    9. '+=' → logprob: -12.223017692565918
    10. '   ' → logprob: -12.473017692565918

Token 809: ' Le' (ID: 2018)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08107201755046844
    2. ' dp' → logprob: -2.5810720920562744
    3. '=' → logprob: -6.581071853637695
    4. '(dp' → logprob: -7.581071853637695
    5. ' =' → logprob: -8.956071853637695
    6. '       ' → logprob: -10.456071853637695
    7. '#' → logprob: -10.956071853637695
    8. '	dp' → logprob: -11.206071853637695
    9. ' ' → logprob: -11.331071853637695
    10. '   ' → logprob: -11.331071853637695

Token 810: ' tout' (ID: 5501)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.2823050916194916
    2. 'dp' → logprob: -1.407305121421814
    3. ' =' → logprob: -8.407304763793945
    4. ')' → logprob: -8.532304763793945
    5. '=' → logprob: -9.157304763793945
    6. ' )' → logprob: -9.282304763793945
    7. ' ' → logprob: -9.657304763793945
    8. '_dp' → logprob: -9.657304763793945
    9. '(dp' → logprob: -9.907304763793945
    10. '%' → logprob: -9.907304763793945

Token 811: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4036196172237396
    2. ' %=' → logprob: -1.778619647026062
    3. ' %' → logprob: -2.4036195278167725
    4. '%=' → logprob: -3.2786195278167725
    5. '[j' → logprob: -4.403619766235352
    6. ')' → logprob: -4.778619766235352
    7. '=' → logprob: -4.778619766235352
    8. ']' → logprob: -6.528619766235352
    9. ')%' → logprob: -6.778619766235352
    10. '[' → logprob: -7.028619766235352

Token 812: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.08915942907333374
    2. ' Mod' → logprob: -2.7141594886779785
    3. '(Mod' → logprob: -3.9641594886779785
    4. '_Mod' → logprob: -11.21415901184082
    5. ' ' → logprob: -11.58915901184082
    6. ' ' → logprob: -11.71415901184082
    7. 'Modulo' → logprob: -11.96415901184082
    8. '100' → logprob: -12.58915901184082
    9. ' (' → logprob: -12.71415901184082
    10. '```' → logprob: -13.08915901184082

Token 813: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.267339825630188
    2. ' =' → logprob: -1.892339825630188
    3. 'dp' → logprob: -2.6423397064208984
    4. '   ' → logprob: -4.892339706420898
    5. ':' → logprob: -6.392339706420898
    6. '(dp' → logprob: -6.892339706420898
    7. ',' → logprob: -7.517339706420898
    8. '[' → logprob: -7.892339706420898
    9. ' dp' → logprob: -8.017339706420898
    10. ')' → logprob: -8.517339706420898

Token 814: ' pour' (ID: 1930)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7580986618995667
    2. 'dp' → logprob: -1.2580986022949219
    3. ' =' → logprob: -2.258098602294922
    4. '=' → logprob: -2.383098602294922
    5. '       ' → logprob: -3.508098602294922
    6. ')' → logprob: -4.508098602294922
    7. '(dp' → logprob: -5.758098602294922
    8. '   ' → logprob: -6.508098602294922
    9. '	dp' → logprob: -6.633098602294922
    10. ' 
' → logprob: -7.508098602294922

Token 815: ' rester' (ID: 54655)
  Prédit: ' éviter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.47971194982528687
    2. ' garantir' → logprob: -1.9797120094299316
    3. 'év' → logprob: -2.1047120094299316
    4. ' assurer' → logprob: -3.2297120094299316
    5. ' garder' → logprob: -3.9797120094299316
    6. ' conserver' → logprob: -3.9797120094299316
    7. ' rester' → logprob: -4.229712009429932
    8. ' gérer' → logprob: -5.729712009429932
    9. ' év' → logprob: -5.854712009429932
    10. ' continuer' → logprob: -6.104712009429932

Token 816: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0054445266723633
    2. ' Mod' → logprob: -1.5054445266723633
    3. 'Mod' → logprob: -1.6304445266723633
    4. '%' → logprob: -2.7554445266723633
    5. ' =' → logprob: -3.2554445266723633
    6. ')' → logprob: -3.5054445266723633
    7. ' ' → logprob: -3.6304445266723633
    8. '(Mod' → logprob: -4.130444526672363
    9. '_mod' → logprob: -4.380444526672363
    10. '```' → logprob: -4.630444526672363

Token 817: ' les' (ID: 1341)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.01166907325387001
    2. ' Mod' → logprob: -4.511669158935547
    3. '(Mod' → logprob: -7.386669158935547
    4. '100' → logprob: -14.761669158935547
    5. '_Mod' → logprob: -14.761669158935547
    6. '```' → logprob: -14.886669158935547
    7. 'Modulo' → logprob: -15.261669158935547
    8. '.Mod' → logprob: -16.386669158935547
    9. '_mod' → logprob: -16.636669158935547
    10. 'MOD' → logprob: -16.886669158935547

Token 818: ' born' (ID: 12275)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.017163898795843124
    2. ' Mod' → logprob: -4.3921637535095215
    3. '(Mod' → logprob: -6.0171637535095215
    4. '```' → logprob: -6.6421637535095215
    5. '100' → logprob: -7.1421637535095215
    6. '_mod' → logprob: -10.39216423034668
    7. '`' → logprob: -10.39216423034668
    8. 'Modulo' → logprob: -11.76716423034668
    9. ' ' → logprob: -12.01716423034668
    10. '``' → logprob: -12.26716423034668

Token 819: 'es' (ID: 268)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -1.5124454498291016
    2. 'e' → logprob: -1.7624454498291016
    3. '_mod' → logprob: -1.7624454498291016
    4. 'es' → logprob: -2.5124454498291016
    5. '(Mod' → logprob: -2.5124454498291016
    6. ' ' → logprob: -2.7624454498291016
    7. '=' → logprob: -3.2624454498291016
    8. ' =' → logprob: -3.3874454498291016
    9. '%' → logprob: -3.6374454498291016
    10. ' Mod' → logprob: -4.137445449829102

Token 820: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25284841656684875
    2. ' =' → logprob: -2.3778483867645264
    3. '(dp' → logprob: -2.7528483867645264
    4. ' dp' → logprob: -4.1278486251831055
    5. 'dp' → logprob: -4.2528486251831055
    6. ' (' → logprob: -4.5028486251831055
    7. ')' → logprob: -5.0028486251831055
    8. ',' → logprob: -5.1278486251831055
    9. '(' → logprob: -5.2528486251831055
    10. ':' → logprob: -6.2528486251831055

Token 821: ''ent' (ID: 53422)
  Prédit: ' Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Mod' → logprob: -0.902803361415863
    2. '(Mod' → logprob: -1.5278034210205078
    3. ' ' → logprob: -2.527803421020508
    4. 'Mod' → logprob: -2.527803421020508
    5. '=' → logprob: -3.152803421020508
    6. ')' → logprob: -3.152803421020508
    7. 'e' → logprob: -3.152803421020508
    8. '`' → logprob: -4.152803421020508
    9. ' =' → logprob: -4.152803421020508
    10. ' modulo' → logprob: -5.152803421020508

Token 822: 'iers' (ID: 11012)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4308815002441406
    2. 'er' → logprob: -1.6808815002441406
    3. 'dp' → logprob: -1.6808815002441406
    4. ' dp' → logprob: -1.9308815002441406
    5. ' =' → logprob: -2.9308815002441406
    6. 'ier' → logprob: -2.9308815002441406
    7. '(dp' → logprob: -3.5558815002441406
    8. '```' → logprob: -3.8058815002441406
    9. 'ières' → logprob: -3.9308815002441406
    10. 'e' → logprob: -4.305881500244141

Token 823: ' et' (ID: 859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4291013777256012
    2. '   ' → logprob: -1.9291013479232788
    3. '[' → logprob: -2.1791014671325684
    4. ' =' → logprob: -2.8041014671325684
    5. ')' → logprob: -4.554101467132568
    6. ':' → logprob: -5.179101467132568
    7. ']' → logprob: -5.429101467132568
    8. '[j' → logprob: -6.554101467132568
    9. '[token' → logprob: -6.554101467132568
    10. ',' → logprob: -6.804101467132568

Token 824: ' respecter' (ID: 107203)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6549602150917053
    2. ')' → logprob: -1.4049601554870605
    3. '=' → logprob: -2.7799601554870605
    4. 'dp' → logprob: -3.1549601554870605
    5. ' =' → logprob: -3.2799601554870605
    6. ' dp' → logprob: -3.7799601554870605
    7. '\n' → logprob: -3.7799601554870605
    8. '   ' → logprob: -4.9049601554870605
    9. '``' → logprob: -5.1549601554870605
    10. ' )' → logprob: -5.1549601554870605

Token 825: ' des' (ID: 731)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.27525031566619873
    2. ' Mod' → logprob: -1.5252503156661987
    3. '(Mod' → logprob: -3.7752504348754883
    4. '_Mod' → logprob: -10.400250434875488
    5. ' ' → logprob: -10.650250434875488
    6. '   ' → logprob: -11.150250434875488
    7. 'Modulo' → logprob: -11.400250434875488
    8. ' ' → logprob: -11.775250434875488
    9. '\n' → logprob: -12.275250434875488
    10. '100' → logprob: -12.650250434875488

Token 826: ' contraintes' (ID: 167366)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.5003118515014648
    2. ' Mod' → logprob: -1.0003118515014648
    3. '(Mod' → logprob: -4.250311851501465
    4. ' ' → logprob: -4.875311851501465
    5. '```' → logprob: -7.000311851501465
    6. '`' → logprob: -7.625311851501465
    7. ' modulo' → logprob: -7.937811851501465
    8. 'Modulo' → logprob: -8.250311851501465
    9. '_mod' → logprob: -8.437811851501465
    10. ' ' → logprob: -8.500311851501465

Token 827: ' alg' (ID: 4485)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025126246735453606
    2. ' =' → logprob: -4.0251264572143555
    3. '[' → logprob: -5.9001264572143555
    4. ')' → logprob: -6.1501264572143555
    5. ']' → logprob: -7.1501264572143555
    6. '   ' → logprob: -7.7751264572143555
    7. '[j' → logprob: -8.900126457214355
    8. ':' → logprob: -8.900126457214355
    9. ',' → logprob: -9.275126457214355
    10. 'dp' → logprob: -9.275126457214355

Token 828: 'orith' (ID: 9996)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8106657266616821
    2. ' dp' → logprob: -1.1856657266616821
    3. '(dp' → logprob: -1.9356657266616821
    4. '   ' → logprob: -2.6856656074523926
    5. ' =' → logprob: -4.435665607452393
    6. '       ' → logprob: -4.685665607452393
    7. '	dp' → logprob: -5.685665607452393
    8. '=' → logprob: -5.685665607452393
    9. '_dp' → logprob: -6.185665607452393
    10. ' (' → logprob: -6.435665607452393

Token 829: 'miques' (ID: 172066)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.10366158932447433
    2. 'm' → logprob: -3.60366153717041
    3. ']' → logprob: -3.72866153717041
    4. ')' → logprob: -4.60366153717041
    5. 'th' → logprob: -4.97866153717041
    6. '```' → logprob: -4.97866153717041
    7. '])' → logprob: -5.47866153717041
    8. '+' → logprob: -5.97866153717041
    9. '=' → logprob: -6.47866153717041
    10. '}' → logprob: -6.60366153717041

Token 830: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2690683603286743
    2. ' =' → logprob: -1.5190683603286743
    3. '   ' → logprob: -4.519068241119385
    4. ']' → logprob: -6.269068241119385
    5. ')' → logprob: -7.019068241119385
    6. '```' → logprob: -7.144068241119385
    7. '[' → logprob: -7.269068241119385
    8. ':' → logprob: -7.519068241119385
    9. ',' → logprob: -7.769068241119385
    10. 'dp' → logprob: -8.019068717956543

Token 831: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6739038825035095
    2. '=' → logprob: -1.4239039421081543
    3. ' =' → logprob: -1.7989039421081543
    4. 'dp' → logprob: -3.0489039421081543
    5. ':' → logprob: -4.423903942108154
    6. '[' → logprob: -4.923903942108154
    7. ' dp' → logprob: -5.173903942108154
    8. '(dp' → logprob: -5.423903942108154
    9. '       ' → logprob: -5.923903942108154
    10. '	dp' → logprob: -6.173903942108154

Token 832: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.11842875927686691
    2. '   ' → logprob: -2.3684287071228027
    3. ' dp' → logprob: -4.118428707122803
    4. '=' → logprob: -7.368428707122803
    5. '	dp' → logprob: -7.493428707122803
    6. '(dp' → logprob: -8.118429183959961
    7. ' =' → logprob: -8.743429183959961
    8. '```' → logprob: -9.993429183959961
    9. ')' → logprob: -10.493429183959961
    10. '_dp' → logprob: -10.618429183959961

Token 833: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.375001907348633
    3. '```' → logprob: -16.437501907348633
    4. '₂' → logprob: -16.562501907348633
    5. '²' → logprob: -16.812501907348633
    6. '۲' → logprob: -17.312501907348633
    7. '
' → logprob: -17.625001907348633
    8. '_' → logprob: -18.000001907348633
    9. '२' → logprob: -18.062501907348633
    10. '\[' → logprob: -18.125001907348633

Token 834: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -12.875003814697266
    3. 'j' → logprob: -14.500003814697266
    4. 'dp' → logprob: -15.375003814697266
    5. '[i' → logprob: -16.625003814697266
    6. ' [' → logprob: -16.875003814697266
    7. '   ' → logprob: -17.000003814697266
    8. '\[' → logprob: -18.125003814697266
    9. ' =' → logprob: -18.250003814697266
    10. '[d' → logprob: -18.375003814697266

Token 835: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00024203950306400657
    2. ']=' → logprob: -8.500242233276367
    3. ']=(' → logprob: -10.250242233276367
    4. ']+=' → logprob: -13.625242233276367
    5. '=' → logprob: -13.875242233276367
    6. ' ]' → logprob: -14.000242233276367
    7. ')' → logprob: -16.125242233276367
    8. '   ' → logprob: -17.375242233276367
    9. ' =' → logprob: -17.875242233276367
    10. '[' → logprob: -18.875242233276367

Token 836: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008688914589583874
    2. ' =' → logprob: -4.758688926696777
    3. '=(' → logprob: -9.508688926696777
    4. ' =(' → logprob: -16.25868797302246
    5. '＝' → logprob: -18.00868797302246
    6. '=((' → logprob: -18.75868797302246
    7. '(' → logprob: -19.00868797302246
    8. '=
' → logprob: -19.00868797302246
    9. '   ' → logprob: -19.50868797302246
    10. '+=' → logprob: -19.75868797302246

Token 837: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7690945267677307
    2. '(dp' → logprob: -0.7690945267677307
    3. '(' → logprob: -2.644094467163086
    4. '(max' → logprob: -8.644094467163086
    5. '(op' → logprob: -8.769094467163086
    6. '(prev' → logprob: -9.144094467163086
    7. '(mod' → logprob: -9.144094467163086
    8. ' ' → logprob: -9.144094467163086
    9. '(df' → logprob: -9.144094467163086
    10. '   ' → logprob: -9.269094467163086

Token 838: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.3319124011322856e-05
    2. '(dp' → logprob: -11.250022888183594
    3. ' dp' → logprob: -11.500022888183594
    4. '	dp' → logprob: -16.625022888183594
    5. '   ' → logprob: -17.375022888183594
    6. 'd' → logprob: -19.125022888183594
    7. ' ' → logprob: -19.250022888183594
    8. '(' → logprob: -20.375022888183594
    9. ' (' → logprob: -20.500022888183594
    10. ' ' → logprob: -20.875022888183594

Token 839: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006746663711965084
    2. '[j' → logprob: -7.375674724578857
    3. '[' → logprob: -10.6256742477417
    4. '   ' → logprob: -11.0006742477417
    5. 'j' → logprob: -13.1256742477417
    6. '_' → logprob: -14.4381742477417
    7. ' ' → logprob: -14.4381742477417
    8. '       ' → logprob: -14.6881742477417
    9. ')' → logprob: -15.1881742477417
    10. ' [' → logprob: -15.2506742477417

Token 840: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.250000953674316
    3. ' [' → logprob: -16.875
    4. 'j' → logprob: -18.25
    5. '   ' → logprob: -20.625
    6. '[js' → logprob: -20.875
    7. '[
' → logprob: -21.5
    8. '	' → logprob: -22.5
    9. '
' → logprob: -22.5
    10. '[i' → logprob: -22.625

Token 841: '-' (ID: 12)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.008129963040119e-06
    2. 'j' → logprob: -12.625003814697266
    3. '][' → logprob: -15.625003814697266
    4. '[' → logprob: -15.875003814697266
    5. '   ' → logprob: -16.625003814697266
    6. '-' → logprob: -16.750003814697266
    7. ']' → logprob: -17.125003814697266
    8. ' [' → logprob: -17.125003814697266
    9. '(j' → logprob: -18.750003814697266
    10. '	j' → logprob: -19.250003814697266

Token 842: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.875003814697266
    3. 'j' → logprob: -14.625003814697266
    4. '   ' → logprob: -15.625003814697266
    5. '```' → logprob: -16.437503814697266
    6. '0' → logprob: -16.875003814697266
    7. ']' → logprob: -17.187503814697266
    8. '[j' → logprob: -17.375003814697266
    9. ')' → logprob: -17.937503814697266
    10. 'prev' → logprob: -18.187503814697266

Token 843: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931480169296265
    2. ' +' → logprob: -0.6931480169296265
    3. '+
' → logprob: -14.568147659301758
    4. ' +
' → logprob: -15.943147659301758
    5. ' ' → logprob: -16.443147659301758
    6. ' plus' → logprob: -17.568147659301758
    7. '
' → logprob: -17.568147659301758
    8. ' ' → logprob: -17.818147659301758
    9. '   ' → logprob: -17.943147659301758
    10. ')' → logprob: -18.193147659301758

Token 844: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12692831456661224
    2. ' +' → logprob: -2.1269283294677734
    3. '+
' → logprob: -15.751928329467773
    4. '+(' → logprob: -18.251928329467773
    5. ' ' → logprob: -18.376928329467773
    6. '+d' → logprob: -18.626928329467773
    7. ' +
' → logprob: -19.251928329467773
    8. '＋' → logprob: -19.251928329467773
    9. '+p' → logprob: -19.876928329467773
    10. '+c' → logprob: -20.376928329467773

Token 845: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00010270876373397186
    2. ' dp' → logprob: -9.500102996826172
    3. '(dp' → logprob: -10.500102996826172
    4. '(' → logprob: -16.375102996826172
    5. '	dp' → logprob: -17.125102996826172
    6. ' (' → logprob: -17.625102996826172
    7. '   ' → logprob: -18.000102996826172
    8. '_dp' → logprob: -20.000102996826172
    9. ' ' → logprob: -20.125102996826172
    10. '1' → logprob: -20.875102996826172

Token 846: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.368984107510187e-05
    2. '[' → logprob: -10.375033378601074
    3. '[
' → logprob: -13.250033378601074
    4. ' [' → logprob: -15.250033378601074
    5. '   ' → logprob: -16.12503433227539
    6. '[K' → logprob: -16.87503433227539
    7. 'k' → logprob: -17.12503433227539
    8. '```' → logprob: -17.25003433227539
    9. '[j' → logprob: -17.50003433227539
    10. '\[' → logprob: -17.50003433227539

Token 847: '-j' (ID: 19720)
  Prédit: '-j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-j' → logprob: -0.02724236436188221
    2. '-' → logprob: -3.777242422103882
    3. ' -' → logprob: -5.527242183685303
    4. '-js' → logprob: -12.152242660522461
    5. '-token' → logprob: -13.527242660522461
    6. '-python' → logprob: -13.527242660522461
    7. '-n' → logprob: -14.277242660522461
    8. '-J' → logprob: -14.527242660522461
    9. '-[' → logprob: -15.027242660522461
    10. '-k' → logprob: -15.277242660522461

Token 848: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.983476436696947e-05
    2. ']*' → logprob: -9.375089645385742
    3. '])' → logprob: -13.000089645385742
    4. '*' → logprob: -14.000089645385742
    5. '']' → logprob: -15.125089645385742
    6. ' ]' → logprob: -15.250089645385742
    7. '-' → logprob: -15.375089645385742
    8. ']
' → logprob: -15.500089645385742
    9. '"]' → logprob: -15.750089645385742
    10. ']*(' → logprob: -16.000089645385742

Token 849: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1269499510526657
    2. ' *' → logprob: -2.1269500255584717
    3. '*(' → logprob: -10.87695026397705
    4. ')' → logprob: -13.50195026397705
    5. '   ' → logprob: -14.50195026397705
    6. ' ' → logprob: -14.75195026397705
    7. '*((' → logprob: -16.001949310302734
    8. ' ' → logprob: -16.126949310302734
    9. '%' → logprob: -16.126949310302734
    10. '#' → logprob: -16.251949310302734

Token 850: ' (' (ID: 350)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.2014312595129013
    2. ' (' → logprob: -1.7014312744140625
    3. '((' → logprob: -11.201431274414062
    4. ' ((' → logprob: -13.076431274414062
    5. '(F' → logprob: -13.451431274414062
    6. ' ' → logprob: -14.701431274414062
    7. '  ' → logprob: -15.826431274414062
    8. '   ' → logprob: -16.701431274414062
    9. '(' → logprob: -17.326431274414062
    10. '(fi' → logprob: -17.701431274414062

Token 851: 'f' (ID: 69)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.2526719570159912
    2. 'f' → logprob: -1.5026719570159912
    3. ' (' → logprob: -7.50267219543457
    4. ' f' → logprob: -8.62767219543457
    5. '(' → logprob: -11.37767219543457
    6. '	f' → logprob: -15.50267219543457
    7. '[f' → logprob: -15.75267219543457
    8. '_f' → logprob: -17.12767219543457
    9. '.f' → logprob: -18.37767219543457
    10. '`' → logprob: -18.50267219543457

Token 852: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.107425062713446e-06
    2. 'j' → logprob: -11.875006675720215
    3. '[' → logprob: -16.50000762939453
    4. '[
' → logprob: -17.12500762939453
    5. ' [' → logprob: -17.75000762939453
    6. '[f' → logprob: -18.87500762939453
    7. '   ' → logprob: -20.00000762939453
    8. '
' → logprob: -20.25000762939453
    9. '(j' → logprob: -20.37500762939453
    10. '[i' → logprob: -21.12500762939453

Token 853: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003025729674845934
    2. ']-' → logprob: -8.1253023147583
    3. '-' → logprob: -12.2503023147583
    4. ' ]' → logprob: -13.6253023147583
    5. '[' → logprob: -15.1253023147583
    6. ']
' → logprob: -15.7503023147583
    7. ' -' → logprob: -16.250303268432617
    8. '']' → logprob: -17.375303268432617
    9. ')' → logprob: -18.000303268432617
    10. '])' → logprob: -18.250303268432617

Token 854: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.020192870870232582
    2. ' -' → logprob: -4.020193099975586
    3. ']' → logprob: -6.270193099975586
    4. '[' → logprob: -9.270193099975586
    5. ']-' → logprob: -10.520193099975586
    6. ')' → logprob: -11.020193099975586
    7. ' ' → logprob: -12.270193099975586
    8. '   ' → logprob: -13.145193099975586
    9. '```' → logprob: -13.520193099975586
    10. '  ' → logprob: -14.895193099975586

Token 855: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0015023599844425917
    2. ' f' → logprob: -6.501502513885498
    3. '	f' → logprob: -17.376502990722656
    4. '(f' → logprob: -18.501502990722656
    5. '   ' → logprob: -19.501502990722656
    6. '```' → logprob: -20.501502990722656
    7. ' ' → logprob: -20.626502990722656
    8. '  ' → logprob: -21.126502990722656
    9. '[f' → logprob: -21.876502990722656
    10. '    ' → logprob: -22.126502990722656

Token 856: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00045021495316177607
    2. 'j' → logprob: -8.000450134277344
    3. 'f' → logprob: -9.125450134277344
    4. '[' → logprob: -13.500450134277344
    5. '-' → logprob: -13.625450134277344
    6. '{' → logprob: -14.000450134277344
    7. '[f' → logprob: -14.250450134277344
    8. '```' → logprob: -14.750450134277344
    9. 'user' → logprob: -15.250450134277344
    10. '(j' → logprob: -15.625450134277344

Token 857: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.014684110297821e-06
    2. ' -' → logprob: -12.000008583068848
    3. '1' → logprob: -13.375008583068848
    4. '[' → logprob: -14.750008583068848
    5. ']-' → logprob: -15.000008583068848
    6. ']' → logprob: -15.125008583068848
    7. '[j' → logprob: -16.625009536743164
    8. '])' → logprob: -16.625009536743164
    9. '−' → logprob: -16.750009536743164
    10. 'j' → logprob: -16.875009536743164

Token 858: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.75
    3. ' ' → logprob: -16.25
    4. '   ' → logprob: -16.625
    5. '-' → logprob: -20.375
    6. '{' → logprob: -20.75
    7. '[' → logprob: -21.125
    8. '``' → logprob: -21.125
    9. '`' → logprob: -21.25
    10. '  ' → logprob: -21.25

Token 859: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017421740340068936
    2. ')' → logprob: -6.376742362976074
    3. '])' → logprob: -10.376742362976074
    4. ')%' → logprob: -12.376742362976074
    5. '   ' → logprob: -12.751742362976074
    6. ' ))' → logprob: -14.001742362976074
    7. ')))' → logprob: -15.001742362976074
    8. '       ' → logprob: -15.751742362976074
    9. ']))' → logprob: -16.376741409301758
    10. ')]' → logprob: -16.751741409301758

Token 860: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06478536128997803
    2. '%' → logprob: -2.8147854804992676
    3. ' %' → logprob: -6.189785480499268
    4. ')%' → logprob: -7.189785480499268
    5. ' )' → logprob: -12.18978500366211
    6. '%)' → logprob: -13.43978500366211
    7. ' ' → logprob: -13.93978500366211
    8. ']' → logprob: -14.31478500366211
    9. '%n' → logprob: -15.43978500366211
    10. '```' → logprob: -15.81478500366211

Token 861: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -2.1008713702030946e-06
    2. '(Mod' → logprob: -13.750001907348633
    3. ' Mod' → logprob: -13.875001907348633
    4. 'MOD' → logprob: -18.625001907348633
    5. '_Mod' → logprob: -20.125001907348633
    6. 'Modulo' → logprob: -21.000001907348633
    7. '.Mod' → logprob: -22.375001907348633
    8. '_mod' → logprob: -22.500001907348633
    9. 'Mods' → logprob: -22.500001907348633
    10. '```' → logprob: -23.625001907348633

Token 862: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026462968438863754
    2. '<|end|>' → logprob: -3.651463031768799
    3. ')' → logprob: -9.90146255493164
    4. 'dp' → logprob: -10.40146255493164
    5. ']' → logprob: -10.77646255493164
    6. '<|end|>' → logprob: -11.02646255493164
    7. '```' → logprob: -11.52646255493164
    8. '}' → logprob: -11.77646255493164
    9. '[' → logprob: -12.27646255493164
    10. '  ' → logprob: -12.27646255493164

Token 863: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 864: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -8.537868779967539e-06
    2. ' dp' → logprob: -12.250008583068848
    3. '   ' → logprob: -12.500008583068848
    4. '	dp' → logprob: -17.87500762939453
    5. '(dp' → logprob: -18.62500762939453
    6. 'dc' → logprob: -21.37500762939453
    7. '```' → logprob: -21.75000762939453
    8. '_dp' → logprob: -22.37500762939453
    9. ' ' → logprob: -22.62500762939453
    10. 'print' → logprob: -23.00000762939453

Token 865: ' À' (ID: 27643)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.9361264946837764e-07
    2. ' dp' → logprob: -15.75
    3. '   ' → logprob: -20.0
    4. '	dp' → logprob: -23.75
    5. ' ' → logprob: -24.125
    6. '(dp' → logprob: -24.75
    7. '#' → logprob: -25.0
    8. 'for' → logprob: -27.625
    9. '    
' → logprob: -27.75
    10. 'df' → logprob: -27.875

Token 866: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.270377516746521
    2. 'dp' → logprob: -2.6453776359558105
    3. '#' → logprob: -3.0203776359558105
    4. 'the' → logprob: -3.2703776359558105
    5. ' la' → logprob: -3.5203776359558105
    6. '   ' → logprob: -3.8953776359558105
    7. 'l' → logprob: -4.0203776359558105
    8. 'end' → logprob: -5.3953776359558105
    9. 'le' → logprob: -6.3953776359558105
    10. '=' → logprob: -7.1453776359558105

Token 867: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.25772398710250854
    2. '#' → logprob: -2.1327240467071533
    3. 'la' → logprob: -2.6327240467071533
    4. ' la' → logprob: -4.882723808288574
    5. 'finish' → logprob: -5.007723808288574
    6. 'return' → logprob: -5.757723808288574
    7. 'end' → logprob: -5.882723808288574
    8. 'l' → logprob: -6.007723808288574
    9. ' fin' → logprob: -6.007723808288574
    10. 'indent' → logprob: -6.132723808288574

Token 868: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007630754727870226
    2. ' of' → logprob: -5.132630825042725
    3. 'dp' → logprob: -7.507630825042725
    4. ' dp' → logprob: -7.882630825042725
    5. '    
' → logprob: -8.882630348205566
    6. '(dp' → logprob: -8.882630348205566
    7. '  ' → logprob: -9.382630348205566
    8. '<|end|>' → logprob: -9.382630348205566
    9. '
' → logprob: -9.507630348205566
    10. '	dp' → logprob: -9.882630348205566

Token 869: ' cette' (ID: 7696)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3015931248664856
    2. 'la' → logprob: -1.6765930652618408
    3. 'l' → logprob: -3.301593065261841
    4. ' la' → logprob: -3.676593065261841
    5. 'each' → logprob: -5.80159330368042
    6. '#' → logprob: -6.17659330368042
    7. ' for' → logprob: -6.17659330368042
    8. 'the' → logprob: -6.30159330368042
    9. 'range' → logprob: -6.67659330368042
    10. ' chaque' → logprob: -8.051592826843262

Token 870: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12110365182161331
    2. 'bou' → logprob: -2.3711037635803223
    3. ' boucle' → logprob: -4.496103763580322
    4. 'it' → logprob: -5.121103763580322
    5. 'indent' → logprob: -7.371103763580322
    6. 'ligne' → logprob: -7.371103763580322
    7. ' for' → logprob: -7.371103763580322
    8. 'i' → logprob: -7.746103763580322
    9. 'iteration' → logprob: -8.246103286743164
    10. 'm' → logprob: -8.371103286743164

Token 871: ' imb' (ID: 63592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023990783374756575
    2. '
' → logprob: -6.87739896774292
    3. '    
' → logprob: -7.00239896774292
    4. ',' → logprob: -8.502399444580078
    5. 'dp' → logprob: -8.752399444580078
    6. ' dp' → logprob: -10.752399444580078
    7. '<|end|>' → logprob: -10.752399444580078
    8. '#' → logprob: -11.752399444580078
    9. '  ' → logprob: -11.877399444580078
    10. '  
' → logprob: -12.127399444580078

Token 872: 'ri' (ID: 872)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6828091144561768
    2. 'rne' → logprob: -2.1828091144561768
    3. 'rc' → logprob: -2.5578091144561768
    4. 'ro' → logprob: -2.9328091144561768
    5. 'ran' → logprob: -2.9328091144561768
    6. 'ru' → logprob: -3.3078091144561768
    7. 'rug' → logprob: -3.6828091144561768
    8. 'ron' → logprob: -3.9328091144561768
    9. 'roc' → logprob: -4.307808876037598
    10. 'rin' → logprob: -4.557808876037598

Token 873: 'quée' (ID: 63772)
  Prédit: 'quée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quée' → logprob: -0.04098442941904068
    2. 'ée' → logprob: -4.165984630584717
    3. 'd' → logprob: -4.915984630584717
    4. 'rée' → logprob: -4.915984630584717
    5. 'dee' → logprob: -5.290984630584717
    6. 'ree' → logprob: -6.540984630584717
    7. 'de' → logprob: -7.790984630584717
    8. 'quee' → logprob: -8.415984153747559
    9. 'ri' → logprob: -8.415984153747559
    10. 'code' → logprob: -8.540984153747559

Token 874: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013769344426691532
    2. '
' → logprob: -4.388769149780273
    3. '    
' → logprob: -7.263769149780273
    4. 'dp' → logprob: -7.763769149780273
    5. ' dp' → logprob: -9.513769149780273
    6. '
' → logprob: -10.263769149780273
    7. ',' → logprob: -11.638769149780273
    8. '(dp' → logprob: -12.513769149780273
    9. '

' → logprob: -13.013769149780273
    10. '	dp' → logprob: -13.513769149780273

Token 875: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.758300438988954e-05
    2. ' dp' → logprob: -9.250097274780273
    3. '   ' → logprob: -13.500097274780273
    4. '	dp' → logprob: -19.000097274780273
    5. '(dp' → logprob: -21.500097274780273
    6. ' ' → logprob: -21.625097274780273
    7. '#' → logprob: -22.500097274780273
    8. '  ' → logprob: -23.625097274780273
    9. 'dc' → logprob: -23.750097274780273
    10. '    
' → logprob: -24.125097274780273

Token 876: ' prépare' (ID: 150142)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07897626608610153
    2. ' dp' → logprob: -2.5789761543273926
    3. '   ' → logprob: -10.32897663116455
    4. '=' → logprob: -11.07897663116455
    5. '_dp' → logprob: -11.45397663116455
    6. ' =' → logprob: -11.57897663116455
    7. '#' → logprob: -11.70397663116455
    8. '(dp' → logprob: -12.07897663116455
    9. '	dp' → logprob: -12.82897663116455
    10. '[' → logprob: -15.20397663116455

Token 877: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003921847674064338
    2. ' dp' → logprob: -8.250391960144043
    3. '   ' → logprob: -9.000391960144043
    4. '(dp' → logprob: -12.125391960144043
    5. '	dp' → logprob: -13.250391960144043
    6. '
' → logprob: -15.500391960144043
    7. '    
' → logprob: -16.75039291381836
    8. '```' → logprob: -16.75039291381836
    9. '_dp' → logprob: -17.00039291381836
    10. '#' → logprob: -17.12539291381836

Token 878: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142532885074615
    2. '=' → logprob: -1.701425313949585
    3. ',' → logprob: -11.826425552368164
    4. '   ' → logprob: -12.326425552368164
    5. '[:]' → logprob: -15.326425552368164
    6. ' ' → logprob: -17.076425552368164
    7. 'dp' → logprob: -17.326425552368164
    8. '```' → logprob: -17.576425552368164
    9. '[' → logprob: -17.576425552368164
    10. '  ' → logprob: -18.076425552368164

Token 879: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02373640611767769
    2. ' dp' → logprob: -3.7737364768981934
    3. 'next' → logprob: -7.898736476898193
    4. ' next' → logprob: -9.398736000061035
    5. 'la' → logprob: -10.898736000061035
    6. ' la' → logprob: -11.898736000061035
    7. '(dp' → logprob: -12.273736000061035
    8. '=' → logprob: -13.398736000061035
    9. '   ' → logprob: -13.523736000061035
    10. '	dp' → logprob: -13.773736000061035

Token 880: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10011941194534302
    2. 'e' → logprob: -3.1001193523406982
    3. ''é' → logprob: -4.475119590759277
    4. 'dp' → logprob: -4.850119590759277
    5. ''utilisation' → logprob: -5.100119590759277
    6. '#' → logprob: -5.475119590759277
    7. ''' → logprob: -5.475119590759277
    8. ''avenir' → logprob: -5.600119590759277
    9. ''ensemble' → logprob: -6.600119590759277
    10. ''utilisateur' → logprob: -6.725119590759277

Token 881: 'it' (ID: 278)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11583580821752548
    2. ' dp' → logprob: -3.1158359050750732
    3. 'iteration' → logprob: -3.4908359050750732
    4. 'next' → logprob: -3.9908359050750732
    5. 'it' → logprob: -5.865835666656494
    6. 'pro' → logprob: -6.240835666656494
    7. ' prochaine' → logprob: -6.365835666656494
    8. ' next' → logprob: -6.615835666656494
    9. 'range' → logprob: -6.740835666656494
    10. 'i' → logprob: -6.740835666656494

Token 882: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.0009977981681004167
    2. 'ère' → logprob: -8.375997543334961
    3. 'érance' → logprob: -8.500997543334961
    4. 'er' → logprob: -9.125997543334961
    5. 'érer' → logprob: -9.625997543334961
    6. 'érieur' → logprob: -9.750997543334961
    7. 'érations' → logprob: -9.875997543334961
    8. '#' → logprob: -9.875997543334961
    9. 'èr' → logprob: -10.250997543334961
    10. 'érant' → logprob: -10.500997543334961

Token 883: ' suivante' (ID: 107439)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193214416503906
    2. ' =' → logprob: -1.501932144165039
    3. '   ' → logprob: -12.751932144165039
    4. ',' → logprob: -16.00193214416504
    5. 'dp' → logprob: -17.25193214416504
    6. ' ' → logprob: -17.87693214416504
    7. '  ' → logprob: -18.37693214416504
    8. '[:]' → logprob: -18.50193214416504
    9. '=
' → logprob: -19.12693214416504
    10. '[' → logprob: -19.12693214416504

Token 884: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03206153213977814
    2. ' dp' → logprob: -4.032061576843262
    3. '   ' → logprob: -4.282061576843262
    4. '(dp' → logprob: -14.282061576843262
    5. '	dp' → logprob: -14.907061576843262
    6. '_dp' → logprob: -17.282060623168945
    7. ' ' → logprob: -18.282060623168945
    8. '  ' → logprob: -18.657060623168945
    9. '.dp' → logprob: -21.157060623168945
    10. '    
' → logprob: -21.532060623168945

Token 885: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.026751194149255753
    2. 'range' → logprob: -4.5267510414123535
    3. ' dp' → logprob: -4.7767510414123535
    4. 'for' → logprob: -5.4017510414123535
    5. ' range' → logprob: -6.5267510414123535
    6. 'i' → logprob: -7.5267510414123535
    7. ' for' → logprob: -8.026751518249512
    8. 'la' → logprob: -9.526751518249512
    9. ' la' → logprob: -9.526751518249512
    10. ' i' → logprob: -9.901751518249512

Token 886: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05741555243730545
    2. 'dp' → logprob: -2.93241548538208
    3. 'loop' → logprob: -6.93241548538208
    4. 'i' → logprob: -7.18241548538208
    5. ' for' → logprob: -7.43241548538208
    6. 'bou' → logprob: -8.932415962219238
    7. '```' → logprob: -11.057415962219238
    8. 'range' → logprob: -11.432415962219238
    9. ' boucle' → logprob: -11.432415962219238
    10. '`' → logprob: -12.057415962219238

Token 887: ' principale' (ID: 68926)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003253765869885683
    2. ' dp' → logprob: -5.753253936767578
    3. '   ' → logprob: -9.503253936767578
    4. '(dp' → logprob: -13.628253936767578
    5. '	dp' → logprob: -16.128253936767578
    6. '_dp' → logprob: -17.128253936767578
    7. '=' → logprob: -19.753253936767578
    8. ' =' → logprob: -20.128253936767578
    9. '.dp' → logprob: -20.503253936767578
    10. '
' → logprob: -20.878253936767578

Token 888: ' 
' (ID: 793)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01933465152978897
    2. '   ' → logprob: -4.26933479309082
    3. ' dp' → logprob: -5.26933479309082
    4. '(dp' → logprob: -11.76933479309082
    5. '	dp' → logprob: -12.89433479309082
    6. '_dp' → logprob: -14.76933479309082
    7. '```' → logprob: -16.26933479309082
    8. '  ' → logprob: -17.51933479309082
    9. ' ' → logprob: -17.64433479309082
    10. '.dp' → logprob: -17.89433479309082

Token 889: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011927293380722404
    2. 'dp' → logprob: -6.751192569732666
    3. ' dp' → logprob: -10.751193046569824
    4. '(dp' → logprob: -14.626193046569824
    5. '    
' → logprob: -14.751193046569824
    6. '	dp' → logprob: -15.126193046569824
    7. '
' → logprob: -16.751192092895508
    8. '       ' → logprob: -17.251192092895508
    9. '  ' → logprob: -17.751192092895508
    10. '_dp' → logprob: -18.126192092895508

Token 890: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08387024700641632
    2. '   ' → logprob: -2.8338701725006104
    3. ' dp' → logprob: -3.8338701725006104
    4. '(dp' → logprob: -10.458869934082031
    5. '	dp' → logprob: -11.708869934082031
    6. '_dp' → logprob: -13.333869934082031
    7. '.dp' → logprob: -16.20886993408203
    8. '  ' → logprob: -16.45886993408203
    9. ' ' → logprob: -16.83386993408203
    10. '
' → logprob: -18.08386993408203

Token 891: ' en' (ID: 469)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01729864813387394
    2. '   ' → logprob: -4.267298698425293
    3. ' dp' → logprob: -5.767298698425293
    4. '(dp' → logprob: -13.767298698425293
    5. '	dp' → logprob: -13.892298698425293
    6. '_dp' → logprob: -16.767297744750977
    7. ' ' → logprob: -17.267297744750977
    8. '  ' → logprob: -17.392297744750977
    9. '
' → logprob: -19.142297744750977
    10. '    
' → logprob: -19.517297744750977

Token 892: ' écr' (ID: 33691)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0031784253660589457
    2. ' dp' → logprob: -5.753178596496582
    3. '(dp' → logprob: -15.128178596496582
    4. '_dp' → logprob: -15.378178596496582
    5. '	dp' → logprob: -16.253177642822266
    6. 'rem' → logprob: -17.128177642822266
    7. ' replacing' → logprob: -17.503177642822266
    8. '.dp' → logprob: -17.753177642822266
    9. 's' → logprob: -18.003177642822266
    10. '```' → logprob: -18.253177642822266

Token 893: 'asant' (ID: 18994)
  Prédit: 'ivant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivant' → logprob: -0.034639596939086914
    2. 'cr' → logprob: -3.909639596939087
    3. 'asant' → logprob: -5.784639358520508
    4. 'ignant' → logprob: -6.034639358520508
    5. 'ange' → logprob: -7.034639358520508
    6. 'iv' → logprob: -7.284639358520508
    7. 'ev' → logprob: -7.284639358520508
    8. 'iquant' → logprob: -7.659639358520508
    9. 'gal' → logprob: -7.784639358520508
    10. 'gu' → logprob: -7.784639358520508

Token 894: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003705896669998765
    2. ' dp' → logprob: -5.628705978393555
    3. '(dp' → logprob: -9.253705978393555
    4. '	dp' → logprob: -12.003705978393555
    5. '_dp' → logprob: -13.253705978393555
    6. 'la' → logprob: -13.753705978393555
    7. '   ' → logprob: -15.003705978393555
    8. ' la' → logprob: -15.128705978393555
    9. 'le' → logprob: -15.628705978393555
    10. 'l' → logprob: -16.628705978393555

Token 895: ' référence' (ID: 76252)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -5.3120038501219824e-05
    2. 'variable' → logprob: -10.625053405761719
    3. ' dp' → logprob: -10.750053405761719
    4. 'reference' → logprob: -13.500053405761719
    5. 'liste' → logprob: -14.250053405761719
    6. 'val' → logprob: -14.625053405761719
    7. 'cop' → logprob: -14.625053405761719
    8. '(dp' → logprob: -14.750053405761719
    9. 'tmp' → logprob: -14.875053405761719
    10. 'copy' → logprob: -15.000053405761719

Token 896: ' précédente' (ID: 177319)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08823174238204956
    2. '=' → logprob: -3.2132318019866943
    3. '   ' → logprob: -3.7132318019866943
    4. ' =' → logprob: -4.338231563568115
    5. '(dp' → logprob: -5.463231563568115
    6. ' dp' → logprob: -6.088231563568115
    7. '	dp' → logprob: -9.588232040405273
    8. 'with' → logprob: -10.463232040405273
    9. ' with' → logprob: -10.588232040405273
    10. ',' → logprob: -10.963232040405273

Token 897: ' avec' (ID: 3937)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0013416734291240573
    2. '=' → logprob: -7.501341819763184
    3. '   ' → logprob: -7.501341819763184
    4. ' dp' → logprob: -8.751341819763184
    5. ' =' → logprob: -9.501341819763184
    6. ',' → logprob: -13.501341819763184
    7. '(dp' → logprob: -13.751341819763184
    8. '_dp' → logprob: -15.001341819763184
    9. '	dp' → logprob: -15.126341819763184
    10. '```' → logprob: -18.126340866088867

Token 898: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00861468818038702
    2. ' dp' → logprob: -4.758614540100098
    3. '	dp' → logprob: -15.883614540100098
    4. '(dp' → logprob: -17.008615493774414
    5. '   ' → logprob: -18.633615493774414
    6. '_dp' → logprob: -18.633615493774414
    7. '```' → logprob: -20.508615493774414
    8. '.dp' → logprob: -21.508615493774414
    9. 'df' → logprob: -21.758615493774414
    10. '`' → logprob: -22.258615493774414

Token 899: ' nouvelle' (ID: 24562)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001064486219547689
    2. ' dp' → logprob: -6.876064300537109
    3. 'new' → logprob: -11.00106430053711
    4. 'nou' → logprob: -12.75106430053711
    5. '```' → logprob: -12.87606430053711
    6. ' new' → logprob: -13.37606430053711
    7. 'copy' → logprob: -13.50106430053711
    8. '`' → logprob: -13.75106430053711
    9. ' nouvelle' → logprob: -13.75106430053711
    10. '	dp' → logprob: -13.87606430053711

Token 900: ' liste' (ID: 31719)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.022676710039377213
    2. ' dp' → logprob: -3.897676706314087
    3. '   ' → logprob: -6.272676944732666
    4. '(dp' → logprob: -8.397676467895508
    5. '_dp' → logprob: -11.897676467895508
    6. '	dp' → logprob: -12.272676467895508
    7. ' =' → logprob: -12.897676467895508
    8. '=' → logprob: -13.022676467895508
    9. '
' → logprob: -13.522676467895508
    10. '`' → logprob: -13.897676467895508

Token 901: ' calcul' (ID: 7559)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.025691194459795952
    2. '   ' → logprob: -3.775691270828247
    3. ' dp' → logprob: -6.025691032409668
    4. '(dp' → logprob: -10.650691032409668
    5. '=' → logprob: -13.400691032409668
    6. ' =' → logprob: -14.275691032409668
    7. '	dp' → logprob: -14.400691032409668
    8. '_dp' → logprob: -14.900691032409668
    9. '.dp' → logprob: -17.775691986083984
    10. '  ' → logprob: -17.900691986083984

Token 902: 'ée' (ID: 2894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9303210973739624
    2. 'dp' → logprob: -1.0553210973739624
    3. '(dp' → logprob: -2.305321216583252
    4. 'ée' → logprob: -2.305321216583252
    5. '=' → logprob: -4.180321216583252
    6. 'urée' → logprob: -4.430321216583252
    7. ' dp' → logprob: -4.555321216583252
    8. '       ' → logprob: -4.805321216583252
    9. '[' → logprob: -5.805321216583252
    10. ' =' → logprob: -6.305321216583252

Token 903: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1366765946149826
    2. '   ' → logprob: -2.136676549911499
    3. ' dp' → logprob: -4.636676788330078
    4. '(dp' → logprob: -11.886676788330078
    5. '	dp' → logprob: -12.386676788330078
    6. '_dp' → logprob: -15.886676788330078
    7. ' ' → logprob: -16.511676788330078
    8. '  ' → logprob: -16.761676788330078
    9. '```' → logprob: -18.011676788330078
    10. '.dp' → logprob: -18.136676788330078

Token 904: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12750154733657837
    2. ' =' → logprob: -2.1275014877319336
    3. '2' → logprob: -7.752501487731934
    4. 'dp' → logprob: -8.877501487731934
    5. '   ' → logprob: -13.752501487731934
    6. '[' → logprob: -13.877501487731934
    7. ',' → logprob: -15.002501487731934
    8. ' ' → logprob: -15.127501487731934
    9. ' dp' → logprob: -15.127501487731934
    10. '=
' → logprob: -15.252501487731934

Token 905: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48291927576065063
    2. 'dp' → logprob: -0.9829192757606506
    3. ' dp' → logprob: -4.732919216156006
    4. '	dp' → logprob: -13.482919692993164
    5. '(dp' → logprob: -13.857919692993164
    6. '_dp' → logprob: -15.857919692993164
    7. '    
' → logprob: -17.607919692993164
    8. '  ' → logprob: -17.982919692993164
    9. ' ' → logprob: -18.232919692993164
    10. '```' → logprob: -18.857919692993164

Token 906: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6112523674964905
    2. '   ' → logprob: -0.8612523674964905
    3. ' dp' → logprob: -3.3612523078918457
    4. '	dp' → logprob: -12.611252784729004
    5. '(dp' → logprob: -13.861252784729004
    6. '```' → logprob: -15.111252784729004
    7. '_dp' → logprob: -15.236252784729004
    8. ' ' → logprob: -16.861251831054688
    9. '       ' → logprob: -17.236251831054688
    10. '  ' → logprob: -17.486251831054688

Token 907: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.012658444233238697
    2. ' dp' → logprob: -4.762658596038818
    3. '   ' → logprob: -5.512658596038818
    4. '	dp' → logprob: -14.88765811920166
    5. '(dp' → logprob: -16.512659072875977
    6. '_dp' → logprob: -18.262659072875977
    7. ' ' → logprob: -18.887659072875977
    8. '  ' → logprob: -19.762659072875977
    9. '```' → logprob: -19.762659072875977
    10. '    
' → logprob: -20.762659072875977

Token 908: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975071594119072
    2. ' =' → logprob: -3.5297508239746094
    3. ',' → logprob: -15.52975082397461
    4. '＝' → logprob: -18.52975082397461
    5. '.=' → logprob: -18.65475082397461
    6. '=}' → logprob: -19.52975082397461
    7. '2' → logprob: -19.65475082397461
    8. '=

' → logprob: -19.90475082397461
    9. '=
' → logprob: -20.15475082397461
    10. '   ' → logprob: -20.27975082397461

Token 909: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0004306692280806601
    2. ' dp' → logprob: -7.750430583953857
    3. '	dp' → logprob: -20.125431060791016
    4. 'df' → logprob: -22.125431060791016
    5. '(dp' → logprob: -22.250431060791016
    6. '_dp' → logprob: -22.750431060791016
    7. '[' → logprob: -22.875431060791016
    8. 'dc' → logprob: -23.125431060791016
    9. 'd' → logprob: -24.000431060791016
    10. '   ' → logprob: -24.375431060791016

Token 910: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '_' → logprob: -19.125
    3. '₂' → logprob: -19.875
    4. '２' → logprob: -21.75
    5. '۲' → logprob: -22.25
    6. '```' → logprob: -23.25
    7. '٢' → logprob: -24.375
    8. ' ' → logprob: -24.875
    9. '
' → logprob: -25.375
    10. '=' → logprob: -25.5

Token 911: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00018280261429026723
    2. 'result' → logprob: -9.62518310546875
    3. '
' → logprob: -9.87518310546875
    4. '#' → logprob: -10.37518310546875
    5. '```' → logprob: -12.12518310546875
    6. 'answer' → logprob: -12.25018310546875
    7. '  
' → logprob: -12.37518310546875
    8. ' print' → logprob: -12.37518310546875
    9. '<|end|>' → logprob: -12.37518310546875
    10. '#print' → logprob: -12.75018310546875

Token 912: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01437504030764103
    2. 'result' → logprob: -4.38937520980835
    3. '#' → logprob: -6.63937520980835
    4. 'answer' → logprob: -7.88937520980835
    5. 'res' → logprob: -9.389374732971191
    6. '```' → logprob: -9.514374732971191
    7. 'ans' → logprob: -12.514374732971191
    8. ' print' → logprob: -12.639374732971191
    9. 'for' → logprob: -12.764374732971191
    10. '#print' → logprob: -12.764374732971191

Token 913: ' Après' (ID: 47562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. 'result' → logprob: -13.500001907348633
    3. '```' → logprob: -17.625001907348633
    4. ' print' → logprob: -18.625001907348633
    5. 'answer' → logprob: -19.250001907348633
    6. '#print' → logprob: -21.625001907348633
    7. '#' → logprob: -22.000001907348633
    8. 'ans' → logprob: -23.375001907348633
    9. 'output' → logprob: -23.625001907348633
    10. '
' → logprob: -24.000001907348633

Token 914: ' avoir' (ID: 16595)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000990891712717712
    2. ' print' → logprob: -7.625990867614746
    3. 'dp' → logprob: -8.125990867614746
    4. 'for' → logprob: -9.375990867614746
    5. 'f' → logprob: -10.875990867614746
    6. 'n' → logprob: -11.000990867614746
    7. '#' → logprob: -11.125990867614746
    8. 'l' → logprob: -11.125990867614746
    9. '```' → logprob: -11.375990867614746
    10. 'la' → logprob: -11.375990867614746

Token 915: ' exécut' (ID: 165350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.451116051815916e-05
    2. '#' → logprob: -11.000024795532227
    3. ' print' → logprob: -12.125024795532227
    4. '```' → logprob: -14.375024795532227
    5. 'for' → logprob: -15.250024795532227
    6. 'pr' → logprob: -15.375024795532227
    7. '#print' → logprob: -15.375024795532227
    8. 'fait' → logprob: -15.625024795532227
    9. 'finished' → logprob: -15.625024795532227
    10. 'printed' → logprob: -15.750024795532227

Token 916: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.2233183042553719e-05
    2. 'er' → logprob: -11.875012397766113
    3. '#' → logprob: -13.000012397766113
    4. 'u' → logprob: -13.125012397766113
    5. 'É' → logprob: -14.625012397766113
    6. 'e' → logprob: -15.125012397766113
    7. 'ion' → logprob: -16.875011444091797
    8. 'ué' → logprob: -17.250011444091797
    9. 'ré' → logprob: -17.250011444091797
    10. 'ée' → logprob: -17.750011444091797

Token 917: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3666222095489502
    2. 'm' → logprob: -1.9916222095489502
    3. 'print' → logprob: -2.11662220954895
    4. 'for' → logprob: -3.24162220954895
    5. ' la' → logprob: -5.616621971130371
    6. 'le' → logprob: -5.741621971130371
    7. 'l' → logprob: -5.866621971130371
    8. '```' → logprob: -7.616621971130371
    9. 'les' → logprob: -8.116621971130371
    10. 'range' → logprob: -8.866621971130371

Token 918: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6525400876998901
    2. 'bou' → logprob: -1.0275400876998901
    3. ' boucle' → logprob: -2.6525402069091797
    4. 'print' → logprob: -3.2775402069091797
    5. 'm' → logprob: -5.27754020690918
    6. 'loop' → logprob: -5.40254020690918
    7. ' for' → logprob: -6.27754020690918
    8. ' bou' → logprob: -7.15254020690918
    9. '#' → logprob: -7.77754020690918
    10. '```' → logprob: -8.90254020690918

Token 919: ' principale' (ID: 68926)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017259917221963406
    2. '
' → logprob: -6.626726150512695
    3. '[' → logprob: -8.876726150512695
    4. '#' → logprob: -9.001726150512695
    5. ' print' → logprob: -9.001726150512695
    6. ',' → logprob: -12.876726150512695
    7. '
' → logprob: -13.376726150512695
    8. '#print' → logprob: -13.501726150512695
    9. '(print' → logprob: -13.751726150512695
    10. 'result' → logprob: -13.876726150512695

Token 920: ' m' (ID: 284)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020783171930816025
    2. '
' → logprob: -8.625207901000977
    3. 'result' → logprob: -11.125207901000977
    4. ' print' → logprob: -11.625207901000977
    5. '[' → logprob: -13.250207901000977
    6. '#' → logprob: -13.750207901000977
    7. ',' → logprob: -14.500207901000977
    8. 'answer' → logprob: -15.125207901000977
    9. '
' → logprob: -15.875207901000977
    10. '#print' → logprob: -15.875207901000977

Token 921: ' fois' (ID: 14697)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6400396823883057
    2. ' fois' → logprob: -1.6400396823883057
    3. ':' → logprob: -2.5150396823883057
    4. ' print' → logprob: -3.5150396823883057
    5. 'print' → logprob: -3.5150396823883057
    6. ' times' → logprob: -3.5150396823883057
    7. '[' → logprob: -3.6400396823883057
    8. ':
' → logprob: -4.140039443969727
    9. ' for' → logprob: -4.390039443969727
    10. 'for' → logprob: -4.515039443969727

Token 922: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.13388703338569e-06
    2. 'result' → logprob: -11.750009536743164
    3. '
' → logprob: -14.625009536743164
    4. ' print' → logprob: -14.875009536743164
    5. '```' → logprob: -15.750009536743164
    6. 'answer' → logprob: -16.000009536743164
    7. '#' → logprob: -16.625009536743164
    8. '#print' → logprob: -18.375009536743164
    9. 'ans' → logprob: -19.250009536743164
    10. '  
' → logprob: -19.875009536743164

Token 923: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. 'result' → logprob: -14.000000953674316
    3. ' print' → logprob: -16.75
    4. 'answer' → logprob: -18.625
    5. '
' → logprob: -19.5
    6. 'ans' → logprob: -21.125
    7. '```' → logprob: -21.25
    8. '#print' → logprob: -22.375
    9. 'res' → logprob: -22.75
    10. '#' → logprob: -22.75

Token 924: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00033903829171322286
    2. 'result' → logprob: -8.00033950805664
    3. 'rés' → logprob: -13.37533950805664
    4. 'answer' → logprob: -13.87533950805664
    5. '#' → logprob: -14.50033950805664
    6. 'res' → logprob: -15.37533950805664
    7. 'prin' → logprob: -16.00033950805664
    8. ' print' → logprob: -17.00033950805664
    9. 'r' → logprob: -17.00033950805664
    10. '#print' → logprob: -17.25033950805664

Token 925: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12389279156923294
    2. '=' → logprob: -2.2488927841186523
    3. ' =' → logprob: -4.873892784118652
    4. '#' → logprob: -6.123892784118652
    5. 'est' → logprob: -7.248892784118652
    6. 's' → logprob: -8.498892784118652
    7. '=#' → logprob: -10.248892784118652
    8. '=result' → logprob: -10.248892784118652
    9. 'result' → logprob: -10.498892784118652
    10. ' print' → logprob: -10.498892784118652

Token 926: ' se' (ID: 458)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4402533173561096
    2. 'print' → logprob: -1.3152532577514648
    3. ' =' → logprob: -2.440253257751465
    4. '#' → logprob: -8.815253257751465
    5. '=
' → logprob: -8.815253257751465
    6. ' print' → logprob: -8.940253257751465
    7. '=result' → logprob: -10.315253257751465
    8. '#print' → logprob: -11.065253257751465
    9. ',' → logprob: -11.190253257751465
    10. '
' → logprob: -11.440253257751465

Token 927: ' trouve' (ID: 30913)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39258694648742676
    2. 'r' → logprob: -1.1425869464874268
    3. 'rv' → logprob: -6.517586708068848
    4. '#' → logprob: -6.892586708068848
    5. '#print' → logprob: -7.142586708068848
    6. '=' → logprob: -7.392586708068848
    7. 'rr' → logprob: -7.642586708068848
    8. '_print' → logprob: -8.267586708068848
    9. 'rs' → logprob: -8.767586708068848
    10. '=r' → logprob: -9.267586708068848

Token 928: ' dans' (ID: 2671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09120038151741028
    2. 'dans' → logprob: -2.466200351715088
    3. 'in' → logprob: -6.966200351715088
    4. 'dp' → logprob: -7.091200351715088
    5. '=' → logprob: -8.466200828552246
    6. 'à' → logprob: -9.341200828552246
    7. ' dans' → logprob: -9.841200828552246
    8. '#' → logprob: -10.091200828552246
    9. 'au' → logprob: -10.841200828552246
    10. ' =' → logprob: -10.966200828552246

Token 929: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006719991099089384
    2. 'print' → logprob: -5.006720066070557
    3. ' dp' → logprob: -12.381719589233398
    4. '(dp' → logprob: -14.756719589233398
    5. ' print' → logprob: -17.6317195892334
    6. '```' → logprob: -19.1317195892334
    7. '	dp' → logprob: -19.2567195892334
    8. 'd' → logprob: -20.0067195892334
    9. 'stdout' → logprob: -20.0067195892334
    10. 'dt' → logprob: -20.2567195892334

Token 930: ' dernière' (ID: 39497)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5759520530700684
    2. 'print' → logprob: -0.8259520530700684
    3. ' dp' → logprob: -11.700952529907227
    4. ' print' → logprob: -12.575952529907227
    5. 'result' → logprob: -14.825952529907227
    6. 'output' → logprob: -15.950952529907227
    7. '[' → logprob: -16.075952529907227
    8. '(dp' → logprob: -16.325952529907227
    9. '#print' → logprob: -16.825952529907227
    10. 'd' → logprob: -17.075952529907227

Token 931: ' valeur' (ID: 41664)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.04493851587176323
    2. 'val' → logprob: -3.294938564300537
    3. 'ligne' → logprob: -5.294938564300537
    4. 'élé' → logprob: -6.919938564300537
    5. 'position' → logprob: -7.294938564300537
    6. 'cell' → logprob: -9.044938087463379
    7. 'value' → logprob: -10.919938087463379
    8. 'dp' → logprob: -11.044938087463379
    9. 'element' → logprob: -11.419938087463379
    10. ' case' → logprob: -12.169938087463379

Token 932: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3240632712841034
    2. 'print' → logprob: -1.3240633010864258
    3. '=' → logprob: -4.949063301086426
    4. ' =' → logprob: -6.699063301086426
    5. 'de' → logprob: -6.699063301086426
    6. 'of' → logprob: -7.699063301086426
    7. 'du' → logprob: -8.949063301086426
    8. '```' → logprob: -9.074063301086426
    9. ' of' → logprob: -9.199063301086426
    10. ' dp' → logprob: -9.324063301086426

Token 933: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.869017852295656e-06
    2. ' dp' → logprob: -12.000006675720215
    3. '(dp' → logprob: -14.250006675720215
    4. '	dp' → logprob: -18.25000762939453
    5. 'la' → logprob: -18.87500762939453
    6. 'print' → logprob: -19.87500762939453
    7. '```' → logprob: -20.50000762939453
    8. 'd' → logprob: -20.62500762939453
    9. 'dt' → logprob: -21.00000762939453
    10. 'df' → logprob: -21.12500762939453

Token 934: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.531315314830863e-06
    2. ' print' → logprob: -13.125003814697266
    3. 'result' → logprob: -13.875003814697266
    4. '
' → logprob: -15.000003814697266
    5. '```' → logprob: -15.875003814697266
    6. 'return' → logprob: -16.125003814697266
    7. 'dp' → logprob: -17.250003814697266
    8. 'output' → logprob: -18.375003814697266
    9. '(print' → logprob: -18.750003814697266
    10. '[' → logprob: -19.250003814697266

Token 935: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0044777123257517815
    2. '[-' → logprob: -6.129477500915527
    3. ' dp' → logprob: -6.504477500915527
    4. 'print' → logprob: -7.879477500915527
    5. ')' → logprob: -8.129477500915527
    6. ')[' → logprob: -10.504477500915527
    7. ']' → logprob: -11.004477500915527
    8. '[' → logprob: -11.129477500915527
    9. '(dp' → logprob: -11.504477500915527
    10. '])' → logprob: -11.879477500915527

Token 936: '[k' (ID: 14298)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0232466422021389
    2. '[k' → logprob: -3.7732465267181396
    3. '[' → logprob: -14.023246765136719
    4. '[m' → logprob: -16.02324676513672
    5. '[j' → logprob: -16.27324676513672
    6. ' [-' → logprob: -16.39824676513672
    7. '[len' → logprob: -17.02324676513672
    8. '[n' → logprob: -17.39824676513672
    9. '[
' → logprob: -17.77324676513672
    10. '][-' → logprob: -18.89824676513672

Token 937: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002003218833124265
    2. '[-' → logprob: -9.000200271606445
    3. ' -' → logprob: -9.500200271606445
    4. ']' → logprob: -13.750200271606445
    5. ']-' → logprob: -14.375200271606445
    6. '#' → logprob: -16.000200271606445
    7. '[' → logprob: -16.250200271606445
    8. '1' → logprob: -16.875200271606445
    9. '   ' → logprob: -16.875200271606445
    10. '```' → logprob: -16.875200271606445

Token 938: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0683535037969705e-05
    2. '-' → logprob: -11.75001049041748
    3. '```' → logprob: -12.87501049041748
    4. '#' → logprob: -16.250011444091797
    5. ' ' → logprob: -17.375011444091797
    6. '`' → logprob: -18.625011444091797
    7. '``' → logprob: -18.875011444091797
    8. 'minus' → logprob: -19.125011444091797
    9. ' -' → logprob: -19.375011444091797
    10. '[-' → logprob: -19.625011444091797

Token 939: ']).
' (ID: 135644)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03855983540415764
    2. ']' → logprob: -3.288559913635254
    3. ']%' → logprob: -7.788559913635254
    4. ')' → logprob: -9.913559913635254
    5. ' ])' → logprob: -10.663559913635254
    6. '])
' → logprob: -12.288559913635254
    7. '],' → logprob: -12.288559913635254
    8. '%' → logprob: -12.413559913635254
    9. ']))' → logprob: -12.788559913635254
    10. ']).' → logprob: -12.913559913635254

Token 940: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0564331205387134e-05
    2. '```' → logprob: -11.50001049041748
    3. 'result' → logprob: -16.000011444091797
    4. '``' → logprob: -16.375011444091797
    5. '
' → logprob: -17.000011444091797
    6. ' print' → logprob: -17.250011444091797
    7. 'return' → logprob: -18.500011444091797
    8. 'output' → logprob: -20.875011444091797
    9. '`' → logprob: -21.625011444091797
    10. '#' → logprob: -21.875011444091797

Token 941: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.696889623621246e-06
    2. 'result' → logprob: -13.37500286102295
    3. '```' → logprob: -14.00000286102295
    4. ' print' → logprob: -15.12500286102295
    5. '
' → logprob: -20.000001907348633
    6. 'output' → logprob: -20.125001907348633
    7. '``' → logprob: -20.125001907348633
    8. 'return' → logprob: -20.500001907348633
    9. 'answer' → logprob: -20.750001907348633
    10. '#' → logprob: -22.375001907348633

Token 942: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.263011578586884e-05
    2. '#' → logprob: -10.375042915344238
    3. '#print' → logprob: -12.125042915344238
    4. ' print' → logprob: -13.000042915344238
    5. 'pr' → logprob: -14.000042915344238
    6. '```' → logprob: -14.125042915344238
    7. '.print' → logprob: -14.625042915344238
    8. 'prints' → logprob: -14.750042915344238
    9. '=' → logprob: -15.625042915344238
    10. 'for' → logprob: -15.625042915344238

Token 943: ' ce' (ID: 2357)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.005103660747408867
    2. 'dp' → logprob: -5.755103588104248
    3. 'print' → logprob: -6.255103588104248
    4. '(print' → logprob: -12.630104064941406
    5. ' dp' → logprob: -16.005104064941406
    6. '(' → logprob: -17.130104064941406
    7. '	dp' → logprob: -17.755104064941406
    8. '```' → logprob: -18.005104064941406
    9. '((' → logprob: -18.755104064941406
    10. ' print' → logprob: -19.255104064941406

Token 944: ' résultat' (ID: 62556)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.23562726378440857
    2. 'dp' → logprob: -1.610627293586731
    3. 'result' → logprob: -5.235627174377441
    4. '(' → logprob: -6.360627174377441
    5. 'r' → logprob: -7.110627174377441
    6. 'print' → logprob: -7.485627174377441
    7. 'final' → logprob: -7.610627174377441
    8. 'dern' → logprob: -8.485627174377441
    9. 'rés' → logprob: -8.610627174377441
    10. 'int' → logprob: -8.985627174377441

Token 945: ' avec' (ID: 3937)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3306015716807451e-05
    2. '```' → logprob: -11.25001335144043
    3. '``' → logprob: -16.62501335144043
    4. ' print' → logprob: -17.12501335144043
    5. '
' → logprob: -17.50001335144043
    6. '(print' → logprob: -19.87501335144043
    7. '`
' → logprob: -21.50001335144043
    8. '`' → logprob: -21.62501335144043
    9. 'for' → logprob: -21.87501335144043
    10. '.print' → logprob: -22.37501335144043

Token 946: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -15.75
    3. ' print' → logprob: -19.0
    4. '``' → logprob: -22.875
    5. '(print' → logprob: -23.0
    6. '`' → logprob: -25.75
    7. 'printf' → logprob: -25.75
    8. 'prints' → logprob: -26.375
    9. '	print' → logprob: -27.0
    10. '
' → logprob: -27.625

Token 947: '().' (ID: 1454)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0024949219077825546
    2. '(print' → logprob: -6.877494812011719
    3. 'print' → logprob: -7.127494812011719
    4. 'dp' → logprob: -8.002494812011719
    5. '(' → logprob: -8.377494812011719
    6. '(f' → logprob: -10.002494812011719
    7. '()' → logprob: -10.252494812011719
    8. '()
' → logprob: -12.377494812011719
    9. '(
' → logprob: -12.752494812011719
    10. '((' → logprob: -12.752494812011719

Token 948: ' Cela' (ID: 44403)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0031533613801002502
    2. '(print' → logprob: -6.503153324127197
    3. '(dp' → logprob: -6.628153324127197
    4. 'dp' → logprob: -8.378153800964355
    5. '```' → logprob: -9.378153800964355
    6. '(f' → logprob: -12.378153800964355
    7. '()' → logprob: -12.753153800964355
    8. ' print' → logprob: -12.878153800964355
    9. '(' → logprob: -13.878153800964355
    10. '``' → logprob: -14.253153800964355

Token 949: ' donnera' (ID: 188715)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0039540864527225494
    2. 'prints' → logprob: -6.62895393371582
    3. '.' → logprob: -7.50395393371582
    4. ' print' → logprob: -7.62895393371582
    5. '.print' → logprob: -7.62895393371582
    6. 'dp' → logprob: -8.62895393371582
    7. '(print' → logprob: -8.75395393371582
    8. '=' → logprob: -8.87895393371582
    9. '```' → logprob: -8.87895393371582
    10. ' prints' → logprob: -9.37895393371582

Token 950: ' la' (ID: 557)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.07910899072885513
    2. 'dp' → logprob: -2.579108953475952
    3. 'print' → logprob: -8.704109191894531
    4. '(' → logprob: -10.579109191894531
    5. ' dp' → logprob: -10.954109191894531
    6. '(print' → logprob: -12.704109191894531
    7. 'result' → logprob: -13.079109191894531
    8. '(f' → logprob: -13.829109191894531
    9. '```' → logprob: -13.954109191894531
    10. '((' → logprob: -14.204109191894531

Token 951: ' réponse' (ID: 50332)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6174614429473877
    2. 'print' → logprob: -0.9924614429473877
    3. 'result' → logprob: -2.6174614429473877
    4. 'rés' → logprob: -5.117461204528809
    5. 'val' → logprob: -5.242461204528809
    6. 'final' → logprob: -5.492461204528809
    7. 'value' → logprob: -7.617461204528809
    8. '(dp' → logprob: -7.992461204528809
    9. ' dp' → logprob: -8.867461204528809
    10. '```' → logprob: -8.992461204528809

Token 952: ' au' (ID: 2791)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0005129986093379557
    2. '(' → logprob: -7.875513076782227
    3. 'dp' → logprob: -9.500513076782227
    4. '(f' → logprob: -10.625513076782227
    5. '((' → logprob: -11.250513076782227
    6. '(print' → logprob: -11.750513076782227
    7. '()' → logprob: -11.875513076782227
    8. '(
' → logprob: -13.375513076782227
    9. '```' → logprob: -13.375513076782227
    10. 'print' → logprob: -14.000513076782227

Token 953: ' problème' (ID: 35630)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010075378231704235
    2. 'f' → logprob: -5.510075569152832
    3. 'print' → logprob: -6.010075569152832
    4. 'k' → logprob: -6.385075569152832
    5. '(dp' → logprob: -7.385075569152832
    6. 'result' → logprob: -8.010075569152832
    7. ')' → logprob: -8.260075569152832
    8. ' dp' → logprob: -9.260075569152832
    9. 'final' → logprob: -9.385075569152832
    10. '(f' → logprob: -9.635075569152832

Token 954: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001772757968865335
    2. '(print' → logprob: -6.626772880554199
    3. '(dp' → logprob: -8.3767728805542
    4. '```' → logprob: -8.6267728805542
    5. ' print' → logprob: -11.5017728805542
    6. '(' → logprob: -11.7517728805542
    7. 'dp' → logprob: -12.2517728805542
    8. '``' → logprob: -12.7517728805542
    9. '(f' → logprob: -12.7517728805542
    10. '()' → logprob: -13.2517728805542

Token 955: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.2729995988775045e-06
    2. '```' → logprob: -12.000006675720215
    3. ' print' → logprob: -19.7500057220459
    4. '``' → logprob: -21.1250057220459
    5. '(print' → logprob: -26.7500057220459
    6. '	print' → logprob: -27.3750057220459
    7. '#print' → logprob: -27.3750057220459
    8. 'println' → logprob: -27.3750057220459
    9. '`' → logprob: -27.7500057220459
    10. '
' → logprob: -27.8750057220459

Token 956: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.25001335144043
    3. 'dp' → logprob: -14.87501335144043
    4. ' (' → logprob: -16.00001335144043
    5. '(df' → logprob: -16.87501335144043
    6. ' dp' → logprob: -18.75001335144043
    7. '((' → logprob: -18.87501335144043
    8. '()' → logprob: -19.00001335144043
    9. '(
' → logprob: -19.00001335144043
    10. '(dc' → logprob: -19.87501335144043

Token 957: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.12694448232650757
    2. '[-' → logprob: -2.1269445419311523
    3. '[' → logprob: -11.501944541931152
    4. '[len' → logprob: -12.876944541931152
    5. ')' → logprob: -13.626944541931152
    6. '[K' → logprob: -14.251944541931152
    7. 'k' → logprob: -14.501944541931152
    8. '-' → logprob: -14.626944541931152
    9. '{k' → logprob: -15.251944541931152
    10. '(k' → logprob: -16.626943588256836

Token 958: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9027791495318525e-05
    2. ' -' → logprob: -10.875019073486328
    3. '-
' → logprob: -17.000019073486328
    4. '[' → logprob: -17.250019073486328
    5. '1' → logprob: -17.625019073486328
    6. '−' → logprob: -17.750019073486328
    7. '<|end|>' → logprob: -18.875019073486328
    8. '[-' → logprob: -19.125019073486328
    9. '```' → logprob: -19.750019073486328
    10. ' ' → logprob: -20.125019073486328

Token 959: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '```' → logprob: -20.375
    4. '-' → logprob: -21.25
    5. '   ' → logprob: -21.5
    6. '１' → logprob: -22.125
    7. '۱' → logprob: -23.125
    8. '2' → logprob: -23.25
    9. '১' → logprob: -23.75
    10. 'print' → logprob: -23.875

Token 960: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01822568289935589
    2. '])' → logprob: -4.01822566986084
    3. '})' → logprob: -9.89322566986084
    4. '))' → logprob: -10.76822566986084
    5. ')])' → logprob: -13.26822566986084
    6. ' )' → logprob: -14.39322566986084
    7. '）' → logprob: -14.51822566986084
    8. ')]' → logprob: -15.01822566986084
    9. ')`' → logprob: -15.01822566986084
    10. ''])' → logprob: -15.39322566986084


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 958
Tokens correctement prédits (1ère position, stricte): 213
Tokens correctement prédits (1ère position, avec adaptation): 216
Tokens correctement prédits (top 10): 479
Précision stricte (1ère position): 22.23%
Précision adaptée (1ère position): 22.55%
Précision (top 10): 50.00%
================================================================================
