================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import random, math, fractions

n = int(input())

a = [[None for j in range(n)] for i in range(n)]
lst = [(i,j) for i in range(n) for j in range(n - 1, -1, -1)]
used = set()

# Generate list of primes up to 10000, minimal structure
pr = []
for k in range(2, 10000 + 1):
    prime = True
    q = 2
    while q * q <= k:
        if k % q == 0:
            prime = False
            break
        q += 1
    if prime:
        pr.append(k)

off = 0
while pr[off] < n + 3:
    off += 1

for ij in lst:
    i, j = ij
    if (i + j) % 2 == 0:
        A = (i + j) // 2
        B = n + (i - j) // 2
        # lcm with one factor
        val1 = pr[off+B]
        val2 = A+1
        val_lcm = (val2 // fractions.gcd(val2, val1)) * val1
        a[i][j] = val_lcm
        if a[i][j] in used:
            print(101, a[i][j])
            raise ValueError()
        used.add(a[i][j])

for ij in lst:
    i, j = ij
    if (i + j) % 2 == 0:
        continue

    val = 1
    # manual lcm on neighbors
    for ip, jp in [(i-1,j), (i+1,j), (i,j-1), (i,j+1)]:
        if 0 <= ip < n and 0 <= jp < n and a[ip][jp] != None:
            g = fractions.gcd(val, a[ip][jp])
            val = (val // g) * a[ip][jp]
    if val >= 5 * 10 ** 14:
        print("ERR", val)
        raise ValueError()

    res = val + 1
    while res in used:
        k = random.randint(1, (10 ** 15 - 1) // val)
        res = k * val + 1

    a[i][j] = res
    used.add(res)

for i in range(n):
    print(" ".join(map(str, a[i])))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' random' (ID: 7526)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' math' (ID: 13324)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.786532998085022
    2. 'math' → logprob: -1.161532998085022
    3. 'sys' → logprob: -2.1615328788757324
    4. ' string' → logprob: -2.9115328788757324
    5. 'os' → logprob: -3.5365328788757324
    6. ' math' → logprob: -3.9115328788757324
    7. ' sys' → logprob: -5.036532878875732
    8. 'time' → logprob: -5.661532878875732
    9. ' os' → logprob: -6.536532878875732
    10. 'numpy' → logprob: -7.036532878875732

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5132504105567932
    2. '\n' → logprob: -2.0132503509521484
    3. 'import' → logprob: -2.8882503509521484
    4. '\' → logprob: -3.0132503509521484
    5. ',' → logprob: -3.1382503509521484
    6. '<|end|>' → logprob: -3.2632503509521484
    7. '(' → logprob: -3.7632503509521484
    8. '
' → logprob: -3.7632503509521484
    9. '```' → logprob: -4.888250350952148
    10. '#' → logprob: -5.013250350952148

Token 5: ' fractions' (ID: 110523)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.8690181970596313
    2. ' os' → logprob: -1.7440181970596313
    3. 'sys' → logprob: -1.7440181970596313
    4. 'statistics' → logprob: -2.744018077850342
    5. ' statistics' → logprob: -3.119018077850342
    6. 'time' → logprob: -3.494018077850342
    7. 'numpy' → logprob: -3.869018077850342
    8. ' sys' → logprob: -3.869018077850342
    9. ' numpy' → logprob: -3.994018077850342
    10. ' cm' → logprob: -4.619018077850342

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4300852417945862
    2. '\n' → logprob: -1.5550851821899414
    3. '\' → logprob: -3.1800851821899414
    4. '<|end|>' → logprob: -3.3050851821899414
    5. 'import' → logprob: -4.180085182189941
    6. ',' → logprob: -4.555085182189941
    7. '```' → logprob: -4.805085182189941
    8. '#' → logprob: -4.930085182189941
    9. '
' → logprob: -5.055085182189941
    10. '' → logprob: -6.305085182189941

Token 7: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0998878479003906
    2. ',' → logprob: -1.7248878479003906
    3. 'import' → logprob: -1.8498878479003906
    4. '.' → logprob: -1.8498878479003906
    5. '\' → logprob: -2.8498878479003906
    6. '#' → logprob: -3.3498878479003906
    7. '<|end|>' → logprob: -4.099887847900391
    8. 'as' → logprob: -4.224887847900391
    9. '
' → logprob: -4.599887847900391
    10. '```' → logprob: -4.974887847900391

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.014756441116333
    2. '=' → logprob: -1.139756441116333
    3. 'u' → logprob: -1.514756441116333
    4. ' =' → logprob: -3.389756441116333
    5. 'a' → logprob: -3.764756441116333
    6. ' ' → logprob: -4.389756202697754
    7. '.' → logprob: -4.764756202697754
    8. 'umber' → logprob: -5.139756202697754
    9. ')' → logprob: -5.264756202697754
    10. ',' → logprob: -5.889756202697754

Token 9: ' int' (ID: 677)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.15499363839626312
    2. ' ' → logprob: -2.5299935340881348
    3. 'random' → logprob: -2.9049935340881348
    4. '10' → logprob: -5.404993534088135
    5. '5' → logprob: -6.529993534088135
    6. ' randint' → logprob: -6.779993534088135
    7. ' int' → logprob: -7.029993534088135
    8. '1' → logprob: -8.029994010925293
    9. '20' → logprob: -8.904994010925293
    10. '3' → logprob: -9.029994010925293

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004820313479285687
    2. '(input' → logprob: -8.875481605529785
    3. '()' → logprob: -9.250481605529785
    4. '(n' → logprob: -9.750481605529785
    5. '('' → logprob: -10.000481605529785
    6. '(random' → logprob: -10.125481605529785
    7. ')' → logprob: -10.625481605529785
    8. '```' → logprob: -11.250481605529785
    9. ' (' → logprob: -11.500481605529785
    10. ''' → logprob: -11.625481605529785

Token 11: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7377409934997559
    2. '()' → logprob: -1.3627409934997559
    3. ')' → logprob: -1.4877409934997559
    4. '())' → logprob: -3.237740993499756
    5. '(
' → logprob: -8.112741470336914
    6. '(

' → logprob: -9.112741470336914
    7. '('' → logprob: -9.987741470336914
    8. '))' → logprob: -10.112741470336914
    9. '```' → logprob: -10.737741470336914
    10. '(`' → logprob: -10.737741470336914

Token 12: 'a' (ID: 64)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.058535099029541
    2. 's' → logprob: -1.683535099029541
    3. ' ' → logprob: -2.183535099029541
    4. ''' → logprob: -2.183535099029541
    5. 'result' → logprob: -2.433535099029541
    6. 'x' → logprob: -2.808535099029541
    7. 'if' → logprob: -4.058535099029541
    8. 'a' → logprob: -4.558535099029541
    9. 'for' → logprob: -4.683535099029541
    10. 'factor' → logprob: -4.808535099029541

Token 13: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19262979924678802
    2. '.' → logprob: -2.067629814147949
    3. ' =' → logprob: -3.817629814147949
    4. 'pp' → logprob: -5.567629814147949
    5. 'p' → logprob: -5.692629814147949
    6. '[random' → logprob: -5.692629814147949
    7. '[i' → logprob: -5.817629814147949
    8. '.append' → logprob: -6.067629814147949
    9. '=' → logprob: -6.067629814147949
    10. 'rray' → logprob: -6.692629814147949

Token 14: ' [[' (ID: 9237)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.04793296009302139
    2. ' []' → logprob: -3.6729328632354736
    3. '[' → logprob: -4.547933101654053
    4. '[random' → logprob: -5.172933101654053
    5. ' random' → logprob: -6.297933101654053
    6. '[]' → logprob: -7.047933101654053
    7. 'random' → logprob: -7.172933101654053
    8. ' fractions' → logprob: -7.422933101654053
    9. '[f' → logprob: -8.172932624816895
    10. ' ' → logprob: -8.547932624816895

Token 15: 'None' (ID: 8505)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.03101874701678753
    2. '0' → logprob: -3.5310187339782715
    3. ' random' → logprob: -7.9060187339782715
    4. 'math' → logprob: -8.53101921081543
    5. 'fra' → logprob: -8.65601921081543
    6. 'int' → logprob: -8.78101921081543
    7. 'rand' → logprob: -9.40601921081543
    8. '(random' → logprob: -9.78101921081543
    9. 'fraction' → logprob: -9.78101921081543
    10. ']' → logprob: -10.03101921081543

Token 16: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03672155365347862
    2. 'for' → logprob: -3.4117214679718018
    3. ']' → logprob: -6.661721706390381
    4. ')' → logprob: -6.786721706390381
    5. '()' → logprob: -7.661721706390381
    6. ' ' → logprob: -9.286721229553223
    7. ',' → logprob: -10.536721229553223
    8. ' ]' → logprob: -10.536721229553223
    9. '	for' → logprob: -11.036721229553223
    10. '   ' → logprob: -11.661721229553223

Token 17: ' j' (ID: 441)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7796143889427185
    2. '_' → logprob: -0.9046143889427185
    3. ' j' → logprob: -2.0296144485473633
    4. ' i' → logprob: -6.279614448547363
    5. ' ' → logprob: -6.404614448547363
    6. ' in' → logprob: -6.779614448547363
    7. 'j' → logprob: -8.279614448547363
    8. '_j' → logprob: -8.529614448547363
    9. '<|end|>' → logprob: -9.779614448547363
    10. 'i' → logprob: -9.904614448547363

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006827967241406441
    2. 'in' → logprob: -5.0068278312683105
    3. ' ' → logprob: -9.381828308105469
    4. '<|end|>' → logprob: -10.756828308105469
    5. '	in' → logprob: -13.131828308105469
    6. ')' → logprob: -13.756828308105469
    7. '<|end|>' → logprob: -14.006828308105469
    8. 'In' → logprob: -14.131828308105469
    9. '  ' → logprob: -14.756828308105469
    10. '_in' → logprob: -15.006828308105469

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16022545099258423
    2. 'range' → logprob: -1.9102253913879395
    3. '	range' → logprob: -14.035225868225098
    4. '(range' → logprob: -15.160225868225098
    5. ' xrange' → logprob: -16.78522491455078
    6. ' ' → logprob: -16.78522491455078
    7. '_range' → logprob: -17.66022491455078
    8. ')' → logprob: -18.28522491455078
    9. '.range' → logprob: -18.66022491455078
    10. 'Range' → logprob: -18.78522491455078

Token 20: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0017100441036745906
    2. '(' → logprob: -6.376709938049316
    3. ' (' → logprob: -12.376709938049316
    4. ')' → logprob: -13.376709938049316
    5. ')n' → logprob: -14.876709938049316
    6. '(
' → logprob: -15.001709938049316
    7. '(len' → logprob: -15.001709938049316
    8. '(a' → logprob: -15.251709938049316
    9. 'n' → logprob: -15.376709938049316
    10. '(i' → logprob: -15.876709938049316

Token 21: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.990154047845863e-05
    2. ')' → logprob: -10.375049591064453
    3. ' )' → logprob: -11.375049591064453
    4. ']' → logprob: -12.250049591064453
    5. ')}' → logprob: -14.500049591064453
    6. ' ]' → logprob: -15.000049591064453
    7. '   ' → logprob: -15.125049591064453
    8. ' ' → logprob: -15.250049591064453
    9. ')]
' → logprob: -15.500049591064453
    10. ')]

' → logprob: -16.125049591064453

Token 22: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021913025993853807
    2. ' ]' → logprob: -6.127191066741943
    3. ')]' → logprob: -12.877191543579102
    4. ' for' → logprob: -13.252191543579102
    5. 'for' → logprob: -14.127191543579102
    6. '],' → logprob: -15.502191543579102
    7. ']
' → logprob: -15.627191543579102
    8. ']

' → logprob: -15.627191543579102
    9. '()]' → logprob: -16.0021915435791
    10. ']]' → logprob: -16.3771915435791

Token 23: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06612613052129745
    2. ' range' → logprob: -3.1911261081695557
    3. 'i' → logprob: -3.8161261081695557
    4. 'range' → logprob: -7.191126346588135
    5. '(range' → logprob: -10.566125869750977
    6. '_' → logprob: -10.941125869750977
    7. ' (' → logprob: -11.066125869750977
    8. ' ' → logprob: -11.566125869750977
    9. '(i' → logprob: -11.691125869750977
    10. '_i' → logprob: -11.691125869750977

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016132788732647896
    2. 'in' → logprob: -4.516132831573486
    3. '<|end|>' → logprob: -6.516132831573486
    4. '(' → logprob: -6.641132831573486
    5. '(n' → logprob: -7.016132831573486
    6. '(range' → logprob: -7.766132831573486
    7. ' ' → logprob: -7.891132831573486
    8. ' (' → logprob: -7.891132831573486
    9. '<|end|>' → logprob: -9.641132354736328
    10. ' range' → logprob: -9.641132354736328

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011059612035751343
    2. 'range' → logprob: -4.511059761047363
    3. '(range' → logprob: -11.386059761047363
    4. '	range' → logprob: -15.136059761047363
    5. ' xrange' → logprob: -17.386058807373047
    6. ' rango' → logprob: -18.511058807373047
    7. '_range' → logprob: -18.511058807373047
    8. ' ' → logprob: -18.511058807373047
    9. '.range' → logprob: -18.761058807373047
    10. ')' → logprob: -18.886058807373047

Token 26: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0020004885736852884
    2. '(' → logprob: -6.377000331878662
    3. ' (' → logprob: -8.12700080871582
    4. '(range' → logprob: -13.12700080871582
    5. ' n' → logprob: -15.50200080871582
    6. ' range' → logprob: -15.75200080871582
    7. 'n' → logprob: -15.87700080871582
    8. ' ' → logprob: -16.12700080871582
    9. '(
' → logprob: -16.62700080871582
    10. ')' → logprob: -16.87700080871582

Token 27: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.093505099765025e-05
    2. ')' → logprob: -11.625020980834961
    3. ']' → logprob: -11.750020980834961
    4. '])]' → logprob: -13.375020980834961
    5. ')])' → logprob: -13.500020980834961
    6. ' )' → logprob: -14.750020980834961
    7. '')]' → logprob: -15.125020980834961
    8. ')],' → logprob: -16.12502098083496
    9. ')]
' → logprob: -16.25002098083496
    10. '])' → logprob: -16.37502098083496

Token 28: 'lst' (ID: 65430)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7651146650314331
    2. 'for' → logprob: -1.140114665031433
    3. ']' → logprob: -2.2651147842407227
    4. ' for' → logprob: -2.8901147842407227
    5. '[' → logprob: -4.390114784240723
    6. ')' → logprob: -4.890114784240723
    7. 'n' → logprob: -5.015114784240723
    8. '```' → logprob: -5.140114784240723
    9. '<|end|>' → logprob: -5.265114784240723
    10. '
' → logprob: -5.640114784240723

Token 29: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1524661779403687
    2. '_' → logprob: -1.5274661779403687
    3. '=' → logprob: -1.6524661779403687
    4. '(' → logprob: -2.277466297149658
    5. ' =' → logprob: -2.902466297149658
    6. '.' → logprob: -3.277466297149658
    7. 's' → logprob: -3.902466297149658
    8. ']' → logprob: -4.152466297149658
    9. 'a' → logprob: -4.402466297149658
    10. '[:]' → logprob: -4.402466297149658

Token 30: ' [(' (ID: 43900)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.06331199407577515
    2. '[]' → logprob: -2.93831205368042
    3. ' [' → logprob: -4.93831205368042
    4. '[' → logprob: -6.93831205368042
    5. ' ' → logprob: -8.938311576843262
    6. ' list' → logprob: -9.938311576843262
    7. '[random' → logprob: -10.438311576843262
    8. 'list' → logprob: -11.313311576843262
    9. '[list' → logprob: -12.188311576843262
    10. '[]}' → logprob: -12.313311576843262

Token 31: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002126233885064721
    2. 'random' → logprob: -7.252126216888428
    3. 'j' → logprob: -7.377126216888428
    4. ')' → logprob: -7.877126216888428
    5. '(i' → logprob: -8.877126693725586
    6. 'n' → logprob: -9.752126693725586
    7. '0' → logprob: -9.877126693725586
    8. ' i' → logprob: -10.002126693725586
    9. ')i' → logprob: -10.627126693725586
    10. 'k' → logprob: -10.752126693725586

Token 32: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002423814032226801
    2. ',j' → logprob: -6.2524237632751465
    3. ' ,' → logprob: -7.7524237632751465
    4. ',)' → logprob: -11.377424240112305
    5. ',n' → logprob: -11.377424240112305
    6. '<|end|>' → logprob: -11.377424240112305
    7. ')' → logprob: -11.752424240112305
    8. ' ' → logprob: -11.877424240112305
    9. ',i' → logprob: -12.127424240112305
    10. ',
' → logprob: -13.377424240112305

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2961512513575144e-05
    2. ' )' → logprob: -10.750022888183594
    3. ')]' → logprob: -15.125022888183594
    4. ' ' → logprob: -15.125022888183594
    5. ' for' → logprob: -15.250022888183594
    6. ')
' → logprob: -15.500022888183594
    7. ',' → logprob: -15.625022888183594
    8. '),' → logprob: -16.250022888183594
    9. ']' → logprob: -16.500022888183594
    10. 'for' → logprob: -16.750022888183594

Token 34: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.022053027525544167
    2. 'for' → logprob: -4.397053241729736
    3. ')' → logprob: -4.897053241729736
    4. '<|end|>' → logprob: -6.647053241729736
    5. ' ' → logprob: -7.397053241729736
    6. ' )' → logprob: -9.647052764892578
    7. '<|end|>' → logprob: -10.897052764892578
    8. ',' → logprob: -11.397052764892578
    9. ']' → logprob: -11.397052764892578
    10. '	for' → logprob: -12.147052764892578

Token 35: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0009747094009071589
    2. 'range' → logprob: -7.250974655151367
    3. ' i' → logprob: -8.250974655151367
    4. '	range' → logprob: -13.500974655151367
    5. ' ' → logprob: -13.625974655151367
    6. 'i' → logprob: -14.625974655151367
    7. ' xrange' → logprob: -15.250974655151367
    8. ' in' → logprob: -15.375974655151367
    9. '_range' → logprob: -16.250974655151367
    10. '(range' → logprob: -16.375974655151367

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0020665181800723076
    2. 'in' → logprob: -6.252066612243652
    3. '<|end|>' → logprob: -9.252066612243652
    4. ' ' → logprob: -10.252066612243652
    5. 'range' → logprob: -13.252066612243652
    6. '<|end|>' → logprob: -13.502066612243652
    7. 'In' → logprob: -14.377066612243652
    8. '=' → logprob: -14.502066612243652
    9. 'n' → logprob: -14.627066612243652
    10. ' range' → logprob: -14.627066612243652

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011048054322600365
    2. 'range' → logprob: -4.511047840118408
    3. '	range' → logprob: -15.761048316955566
    4. '(range' → logprob: -16.26104736328125
    5. ' xrange' → logprob: -17.01104736328125
    6. ' ' → logprob: -18.51104736328125
    7. '_range' → logprob: -19.01104736328125
    8. '.range' → logprob: -19.76104736328125
    9. '```' → logprob: -19.76104736328125
    10. ' rang' → logprob: -20.01104736328125

Token 38: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007389922975562513
    2. '(' → logprob: -7.375739097595215
    3. 'n' → logprob: -10.000739097595215
    4. ' (' → logprob: -10.250739097595215
    5. ' n' → logprob: -10.375739097595215
    6. ')n' → logprob: -15.500739097595215
    7. '(
' → logprob: -16.5007381439209
    8. '	n' → logprob: -16.5007381439209
    9. ')' → logprob: -16.6257381439209
    10. '<|end|>' → logprob: -16.6257381439209

Token 39: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015982951736077666
    2. ')]' → logprob: -6.501598358154297
    3. ' )' → logprob: -9.501598358154297
    4. ' ' → logprob: -12.126598358154297
    5. ')n' → logprob: -12.251598358154297
    6. 'for' → logprob: -12.751598358154297
    7. ')],' → logprob: -13.126598358154297
    8. ')])' → logprob: -13.251598358154297
    9. ' for' → logprob: -13.751598358154297
    10. ']' → logprob: -14.376598358154297

Token 40: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3171359598636627
    2. ')' → logprob: -1.9421359300613403
    3. 'for' → logprob: -2.44213604927063
    4. ')]' → logprob: -3.44213604927063
    5. ']' → logprob: -5.067135810852051
    6. ' )' → logprob: -6.067135810852051
    7. ' ]' → logprob: -7.692135810852051
    8. ')],' → logprob: -8.44213581085205
    9. ' ' → logprob: -10.94213581085205
    10. '),' → logprob: -11.19213581085205

Token 41: ' j' (ID: 441)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.667497992515564
    2. 'n' → logprob: -1.292497992515564
    3. ' range' → logprob: -1.792497992515564
    4. 'range' → logprob: -3.1674981117248535
    5. ' j' → logprob: -6.1674981117248535
    6. 'j' → logprob: -6.4174981117248535
    7. ' ' → logprob: -10.792497634887695
    8. '    ' → logprob: -11.417497634887695
    9. '(n' → logprob: -12.792497634887695
    10. '   ' → logprob: -13.167497634887695

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01274436991661787
    2. 'in' → logprob: -4.387744426727295
    3. '(n' → logprob: -8.887743949890137
    4. ' (' → logprob: -10.137743949890137
    5. '(' → logprob: -10.762743949890137
    6. ')' → logprob: -10.887743949890137
    7. ' ' → logprob: -11.637743949890137
    8. '(range' → logprob: -12.637743949890137
    9. 'range' → logprob: -13.387743949890137
    10. ' range' → logprob: -13.762743949890137

Token 43: ' range' (ID: 3352)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6517891883850098
    2. 'n' → logprob: -1.0267891883850098
    3. '(n' → logprob: -2.7767891883850098
    4. ' range' → logprob: -3.2767891883850098
    5. 'range' → logprob: -3.9017891883850098
    6. ' (' → logprob: -7.77678918838501
    7. '(' → logprob: -9.526788711547852
    8. '(range' → logprob: -10.651788711547852
    9. ')n' → logprob: -11.901788711547852
    10. ')' → logprob: -12.026788711547852

Token 44: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.778209353797138e-05
    2. '(' → logprob: -9.625067710876465
    3. 'n' → logprob: -13.375067710876465
    4. ' (' → logprob: -16.25006866455078
    5. '(
' → logprob: -18.37506866455078
    6. ' n' → logprob: -19.50006866455078
    7. '(s' → logprob: -20.50006866455078
    8. ')' → logprob: -20.75006866455078
    9. '(nx' → logprob: -20.75006866455078
    10. '((' → logprob: -20.87506866455078

Token 45: ' -' (ID: 533)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.1782583391759545e-05
    2. ']' → logprob: -10.625031471252441
    3. ')' → logprob: -12.125031471252441
    4. '])]' → logprob: -14.375031471252441
    5. ')])' → logprob: -14.875031471252441
    6. ' )' → logprob: -14.875031471252441
    7. ')],' → logprob: -15.500031471252441
    8. ')]
' → logprob: -16.500032424926758
    9. '))' → logprob: -16.625032424926758
    10. '')]' → logprob: -16.625032424926758

Token 46: ' ' (ID: 220)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5417241454124451
    2. 'i' → logprob: -0.9167241454124451
    3. '1' → logprob: -4.16672420501709
    4. ' ' → logprob: -5.91672420501709
    5. 'j' → logprob: -9.16672420501709
    6. ' j' → logprob: -9.54172420501709
    7. '-i' → logprob: -11.54172420501709
    8. '2' → logprob: -12.04172420501709
    9. '(i' → logprob: -12.16672420501709
    10. '	i' → logprob: -12.41672420501709

Token 47: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008775527589023113
    2. '1' → logprob: -5.38377571105957
    3. ' i' → logprob: -5.50877571105957
    4. 'j' → logprob: -9.75877571105957
    5. ' ' → logprob: -10.38377571105957
    6. '-i' → logprob: -13.63377571105957
    7. '	i' → logprob: -13.88377571105957
    8. '(i' → logprob: -14.00877571105957
    9. '2' → logprob: -14.63377571105957
    10. '{i' → logprob: -14.82127571105957

Token 48: ',' (ID: 11)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008005765848793089
    2. ')' → logprob: -8.250800132751465
    3. ' )' → logprob: -8.375800132751465
    4. '+' → logprob: -8.625800132751465
    5. ',' → logprob: -9.250800132751465
    6. ')])' → logprob: -11.000800132751465
    7. ']' → logprob: -12.375800132751465
    8. ' +' → logprob: -12.875800132751465
    9. ')],' → logprob: -13.375800132751465
    10. '))' → logprob: -13.500800132751465

Token 49: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.026326078921556473
    2. ' -' → logprob: -3.6513261795043945
    3. '-i' → logprob: -11.526326179504395
    4. 'i' → logprob: -11.651326179504395
    5. ' i' → logprob: -12.776326179504395
    6. ' ' → logprob: -13.151326179504395
    7. '0' → logprob: -13.776326179504395
    8. 'n' → logprob: -14.651326179504395
    9. '-j' → logprob: -15.401326179504395
    10. '-n' → logprob: -15.526326179504395

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.522638169466518e-05
    2. ' ' → logprob: -10.750024795532227
    3. ' -' → logprob: -13.500024795532227
    4. '-' → logprob: -14.187524795532227
    5. '```' → logprob: -14.937524795532227
    6. '   ' → logprob: -15.750024795532227
    7. 'i' → logprob: -16.000024795532227
    8. '

' → logprob: -16.312524795532227
    9. '  ' → logprob: -16.562524795532227
    10. '0' → logprob: -16.625024795532227

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47991126775741577
    2. '-' → logprob: -0.9799112677574158
    3. ',-' → logprob: -5.3549113273620605
    4. ' -' → logprob: -7.3549113273620605
    5. '1' → logprob: -7.8549113273620605
    6. ' ,' → logprob: -10.479910850524902
    7. '```' → logprob: -10.854910850524902
    8. ' ,-' → logprob: -12.479910850524902
    9. '-,' → logprob: -12.604910850524902
    10. 'Step' → logprob: -13.229910850524902

Token 52: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03364869952201843
    2. ' -' → logprob: -3.408648729324341
    3. ' ' → logprob: -13.533648490905762
    4. '-i' → logprob: -14.033648490905762
    5. '	' → logprob: -15.033648490905762
    6. '```' → logprob: -15.658648490905762
    7. '   ' → logprob: -16.158649444580078
    8. '1' → logprob: -17.283649444580078
    9. '  ' → logprob: -17.408649444580078
    10. '﻿' → logprob: -18.158649444580078

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.750001907348633
    3. '```' → logprob: -15.562501907348633
    4. ' -' → logprob: -16.562501907348633
    5. '-' → logprob: -16.625001907348633
    6. ')' → logprob: -17.062501907348633
    7. '2' → logprob: -17.437501907348633
    8. '

' → logprob: -17.562501907348633
    9. '0' → logprob: -17.687501907348633
    10. '   ' → logprob: -18.062501907348633

Token 54: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00040123690268956125
    2. ')' → logprob: -7.875401020050049
    3. ']' → logprob: -11.750401496887207
    4. ')])' → logprob: -12.250401496887207
    5. ' )' → logprob: -12.375401496887207
    6. '))' → logprob: -13.000401496887207
    7. '])]' → logprob: -14.500401496887207
    8. ')],' → logprob: -14.625401496887207
    9. '),' → logprob: -15.625401496887207
    10. '')]' → logprob: -15.750401496887207

Token 55: 'used' (ID: 4943)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27613022923469543
    2. 'random' → logprob: -2.026130199432373
    3. 'for' → logprob: -2.776130199432373
    4. ')' → logprob: -4.276130199432373
    5. '[random' → logprob: -4.776130199432373
    6. ' for' → logprob: -5.651130199432373
    7. ' random' → logprob: -5.776130199432373
    8. ']

' → logprob: -6.026130199432373
    9. 'lst' → logprob: -6.151130199432373
    10. '```' → logprob: -6.401130199432373

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5126827955245972
    2. ' =' → logprob: -1.1376827955245972
    3. '[' → logprob: -3.1376829147338867
    4. '_' → logprob: -3.5126829147338867
    5. ']' → logprob: -6.137682914733887
    6. ')' → logprob: -6.512682914733887
    7. ' ' → logprob: -7.637682914733887
    8. '(' → logprob: -7.762682914733887
    9. '```' → logprob: -7.762682914733887
    10. '_positions' → logprob: -8.137682914733887

Token 57: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3204742670059204
    2. ' set' → logprob: -1.3204742670059204
    3. '[]' → logprob: -5.445474147796631
    4. ' []' → logprob: -6.070474147796631
    5. '{}' → logprob: -8.195474624633789
    6. ' ' → logprob: -8.945474624633789
    7. '[' → logprob: -10.070474624633789
    8. '{' → logprob: -10.445474624633789
    9. ' [' → logprob: -10.820474624633789
    10. '	set' → logprob: -10.820474624633789

Token 58: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0036691983696073294
    2. '(' → logprob: -5.628669261932373
    3. '(),' → logprob: -11.378668785095215
    4. '(()' → logprob: -11.503668785095215
    5. '()]' → logprob: -11.628668785095215
    6. '([]' → logprob: -11.753668785095215
    7. '()</' → logprob: -12.253668785095215
    8. '();' → logprob: -12.503668785095215
    9. '()<' → logprob: -12.753668785095215
    10. '()>' → logprob: -13.128668785095215

Token 59: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12047739326953888
    2. ')' → logprob: -2.4954774379730225
    3. '=' → logprob: -5.245477199554443
    4. ' for' → logprob: -5.370477199554443
    5. ':' → logprob: -5.620477199554443
    6. '(' → logprob: -5.745477199554443
    7. '.' → logprob: -5.870477199554443
    8. '<|end|>' → logprob: -6.120477199554443
    9. ']' → logprob: -6.245477199554443
    10. '#' → logprob: -6.495477199554443

Token 60: ' Generate' (ID: 33886)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2871035635471344
    2. ' for' → logprob: -1.412103533744812
    3. 'while' → logprob: -6.287103652954102
    4. 'i' → logprob: -6.537103652954102
    5. ' while' → logprob: -6.537103652954102
    6. ' i' → logprob: -7.912103652954102
    7. 'random' → logprob: -8.787103652954102
    8. 'x' → logprob: -9.412103652954102
    9. 'f' → logprob: -9.537103652954102
    10. ' random' → logprob: -9.537103652954102

Token 61: ' list' (ID: 1562)
  Prédit: ' fractions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fractions' → logprob: -1.258979320526123
    2. 'for' → logprob: -2.008979320526123
    3. ' for' → logprob: -2.258979320526123
    4. ' random' → logprob: -2.383979320526123
    5. ' a' → logprob: -2.758979320526123
    6. 'a' → logprob: -2.883979320526123
    7. 'values' → logprob: -3.383979320526123
    8. '(' → logprob: -3.633979320526123
    9. '()' → logprob: -3.633979320526123
    10. ' (' → logprob: -3.758979320526123

Token 62: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2937238216400146
    2. '=' → logprob: -1.7937238216400146
    3. ' of' → logprob: -1.9187238216400146
    4. 'of' → logprob: -2.0437238216400146
    5. 'values' → logprob: -2.7937238216400146
    6. 's' → logprob: -2.9187238216400146
    7. ' =' → logprob: -3.2937238216400146
    8. '<|end|>' → logprob: -4.168724060058594
    9. 'tokens' → logprob: -4.543724060058594
    10. '#' → logprob: -4.543724060058594

Token 63: ' primes' (ID: 104042)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -1.163212537765503
    2. 'fra' → logprob: -1.788212537765503
    3. 'positions' → logprob: -2.288212537765503
    4. 'values' → logprob: -2.663212537765503
    5. 'numbers' → logprob: -2.913212537765503
    6. 'lst' → logprob: -3.538212537765503
    7. 'dire' → logprob: -3.663212537765503
    8. 'neighbors' → logprob: -3.788212537765503
    9. 'edges' → logprob: -4.163212776184082
    10. 'points' → logprob: -4.288212776184082

Token 64: ' up' (ID: 869)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.43497568368911743
    2. ' =' → logprob: -1.3099756240844727
    3. ' primes' → logprob: -2.6849756240844727
    4. '=' → logprob: -4.934975624084473
    5. ',' → logprob: -6.434975624084473
    6. ':' → logprob: -6.809975624084473
    7. ' for' → logprob: -6.809975624084473
    8. 's' → logprob: -6.934975624084473
    9. '```' → logprob: -7.559975624084473
    10. 'def' → logprob: -7.809975624084473

Token 65: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.029607919976115227
    2. 'p' → logprob: -3.7796080112457275
    3. ' to' → logprob: -5.529607772827148
    4. '_to' → logprob: -7.404607772827148
    5. 'pto' → logprob: -7.404607772827148
    6. 'o' → logprob: -8.279607772827148
    7. 'ntil' → logprob: -8.404607772827148
    8. '[' → logprob: -8.904607772827148
    9. '100' → logprob: -9.404607772827148
    10. '[to' → logprob: -9.654607772827148

Token 66: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04945399612188339
    2. 'n' → logprob: -3.0494539737701416
    3. ' ' → logprob: -7.174454212188721
    4. '100' → logprob: -9.424453735351562
    5. ' int' → logprob: -11.549453735351562
    6. ' math' → logprob: -12.924453735351562
    7. 'int' → logprob: -13.174453735351562
    8. '20' → logprob: -13.299453735351562
    9. '2' → logprob: -14.299453735351562
    10. '250' → logprob: -14.424453735351562

Token 67: '100' (ID: 1353)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003574649803340435
    2. '100' → logprob: -6.003574848175049
    3. ' n' → logprob: -7.128574848175049
    4. '2' → logprob: -8.37857437133789
    5. '10' → logprob: -10.62857437133789
    6. '20' → logprob: -11.37857437133789
    7. ' ' → logprob: -11.62857437133789
    8. 'int' → logprob: -12.62857437133789
    9. '999' → logprob: -12.62857437133789
    10. 'math' → logprob: -12.62857437133789

Token 68: '00' (ID: 504)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.004211839754134417
    2. ' primes' → logprob: -6.004211902618408
    3. ':' → logprob: -7.379211902618408
    4. 's' → logprob: -8.25421142578125
    5. 'def' → logprob: -8.50421142578125
    6. '```' → logprob: -8.75421142578125
    7. 'prime' → logprob: -8.87921142578125
    8. 'import' → logprob: -9.62921142578125
    9. 'p' → logprob: -9.62921142578125
    10. '_pr' → logprob: -10.00421142578125

Token 69: ',' (ID: 11)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.020937953144311905
    2. ' primes' → logprob: -4.895937919616699
    3. ':' → logprob: -5.395937919616699
    4. '```' → logprob: -5.895937919616699
    5. 'def' → logprob: -6.395937919616699
    6. '#' → logprob: -7.145937919616699
    7. 'import' → logprob: -7.145937919616699
    8. 'p' → logprob: -7.395937919616699
    9. 's' → logprob: -7.645937919616699
    10. 'prime' → logprob: -7.770937919616699

Token 70: ' minimal' (ID: 19957)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.10741687566041946
    2. 'pr' → logprob: -3.357416868209839
    3. 'def' → logprob: -4.232417106628418
    4. ' using' → logprob: -4.232417106628418
    5. ' ' → logprob: -4.857417106628418
    6. 's' → logprob: -5.357417106628418
    7. ' def' → logprob: -5.357417106628418
    8. ' sieve' → logprob: -5.857417106628418
    9. ' is' → logprob: -5.982417106628418
    10. '100' → logprob: -6.107417106628418

Token 71: ' structure' (ID: 8866)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.48744964599609375
    2. 'pr' → logprob: -1.4874496459960938
    3. 'def' → logprob: -2.8624496459960938
    4. ' ' → logprob: -3.7374496459960938
    5. '_pr' → logprob: -4.237449645996094
    6. ' =' → logprob: -4.362449645996094
    7. '_' → logprob: -4.487449645996094
    8. 's' → logprob: -4.612449645996094
    9. ' def' → logprob: -4.737449645996094
    10. '```' → logprob: -5.487449645996094

Token 72: '
' (ID: 198)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.07092035561800003
    2. ':' → logprob: -3.320920467376709
    3. 'def' → logprob: -4.695920467376709
    4. ' primes' → logprob: -4.695920467376709
    5. 's' → logprob: -5.445920467376709
    6. 'import' → logprob: -6.070920467376709
    7. '```' → logprob: -6.195920467376709
    8. '=' → logprob: -6.820920467376709
    9. 'prime' → logprob: -6.945920467376709
    10. ']' → logprob: -7.445920467376709

Token 73: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0007306627230718732
    2. 'def' → logprob: -7.625730514526367
    3. ' primes' → logprob: -8.750730514526367
    4. 'prime' → logprob: -9.750730514526367
    5. 's' → logprob: -11.625730514526367
    6. 'import' → logprob: -12.250730514526367
    7. '```' → logprob: -12.875730514526367
    8. 'is' → logprob: -13.000730514526367
    9. 'max' → logprob: -13.750730514526367
    10. '_pr' → logprob: -14.000730514526367

Token 74: ' =' (ID: 314)
  Prédit: 'imes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.01703675091266632
    2. 'ime' → logprob: -4.1420369148254395
    3. 'im' → logprob: -8.142036437988281
    4. 'import' → logprob: -8.767036437988281
    5. '#' → logprob: -8.892036437988281
    6. 'mes' → logprob: -9.892036437988281
    7. 'ims' → logprob: -10.017036437988281
    8. '```' → logprob: -10.142036437988281
    9. 'i' → logprob: -10.392036437988281
    10. 'int' → logprob: -10.767036437988281

Token 75: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.21005408465862274
    2. '[' → logprob: -2.2100541591644287
    3. ' []' → logprob: -2.9600541591644287
    4. '[]' → logprob: -3.5850541591644287
    5. '[random' → logprob: -9.585054397583008
    6. '[]

' → logprob: -10.210054397583008
    7. ' []

' → logprob: -10.460054397583008
    8. ' ' → logprob: -10.585054397583008
    9. ' []
' → logprob: -11.210054397583008
    10. '[int' → logprob: -11.585054397583008

Token 76: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7670928835868835
    2. 's' → logprob: -1.0170929431915283
    3. 'is' → logprob: -2.0170929431915283
    4. 'prime' → logprob: -4.517092704772949
    5. 'num' → logprob: -4.767092704772949
    6. 'p' → logprob: -5.017092704772949
    7. 'i' → logprob: -5.142092704772949
    8. 'def' → logprob: -5.892092704772949
    9. 'limit' → logprob: -6.392092704772949
    10. ' sieve' → logprob: -6.642092704772949

Token 77: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7759388089179993
    2. 'i' → logprob: -1.0259387493133545
    3. 'x' → logprob: -2.7759387493133545
    4. ' num' → logprob: -3.0259387493133545
    5. ' x' → logprob: -3.1509387493133545
    6. 'num' → logprob: -4.025938987731934
    7. 'k' → logprob: -4.900938987731934
    8. ' k' → logprob: -6.400938987731934
    9. ' number' → logprob: -8.275938987731934
    10. ' p' → logprob: -9.150938987731934

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009786547161638737
    2. 'in' → logprob: -4.634786605834961
    3. ' ' → logprob: -11.009786605834961
    4. 'import' → logprob: -12.884786605834961
    5. 'range' → logprob: -13.259786605834961
    6. '	in' → logprob: -13.509786605834961
    7. 'k' → logprob: -13.634786605834961
    8. '1' → logprob: -13.759786605834961
    9. '2' → logprob: -14.259786605834961
    10. 'n' → logprob: -14.384786605834961

Token 79: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16022828221321106
    2. 'range' → logprob: -1.9102282524108887
    3. '2' → logprob: -12.660228729248047
    4. '	range' → logprob: -14.535228729248047
    5. ' ' → logprob: -15.285228729248047
    6. '[' → logprob: -17.285228729248047
    7. 'ran' → logprob: -17.535228729248047
    8. '  ' → logprob: -17.660228729248047
    9. '1' → logprob: -17.785228729248047
    10. 'rang' → logprob: -18.160228729248047

Token 80: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009903056547045708
    2. '2' → logprob: -4.6349029541015625
    3. ' ' → logprob: -8.884902954101562
    4. ' (' → logprob: -11.884902954101562
    5. '1' → logprob: -13.884902954101562
    6. '[' → logprob: -15.509902954101562
    7. ',' → logprob: -15.634902954101562
    8. '(
' → logprob: -15.884902954101562
    9. '```' → logprob: -16.384902954101562
    10. ':' → logprob: -16.822402954101562

Token 81: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.607391408877447e-05
    2. '100' → logprob: -10.625036239624023
    3. ' ' → logprob: -11.375036239624023
    4. '1' → logprob: -15.875036239624023
    5. '(' → logprob: -16.125036239624023
    6. '10' → logprob: -18.250036239624023
    7. '   ' → logprob: -18.375036239624023
    8. '２' → logprob: -19.125036239624023
    9. ')' → logprob: -19.875036239624023
    10. '[' → logprob: -20.000036239624023

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023360664024949074
    2. ' ,' → logprob: -3.7733607292175293
    3. ',n' → logprob: -9.398360252380371
    4. '100' → logprob: -11.148360252380371
    5. ' ' → logprob: -11.773360252380371
    6. ',k' → logprob: -11.898360252380371
    7. ',int' → logprob: -12.898360252380371
    8. '1' → logprob: -15.648360252380371
    9. ',
' → logprob: -16.023361206054688
    10. '10' → logprob: -16.023361206054688

Token 83: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.007635139394551516
    2. ' ' → logprob: -4.882635116577148
    3. '10' → logprob: -10.507635116577148
    4. '1' → logprob: -14.132635116577148
    5. '  ' → logprob: -15.632635116577148
    6. '   ' → logprob: -15.632635116577148
    7. '101' → logprob: -15.882635116577148
    8. '１００' → logprob: -16.50763511657715
    9. ')' → logprob: -16.75763511657715
    10. '    ' → logprob: -17.00763511657715

Token 84: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -2.8444881536415778e-05
    2. ' ' → logprob: -10.875028610229492
    3. '10' → logprob: -11.625028610229492
    4. '1' → logprob: -15.750028610229492
    5. '101' → logprob: -16.125028610229492
    6. '(' → logprob: -17.625028610229492
    7. '１００' → logprob: -17.750028610229492
    8. '110' → logprob: -17.875028610229492
    9. '   ' → logprob: -18.062528610229492
    10. 'int' → logprob: -18.125028610229492

Token 85: '00' (ID: 504)
  Prédit: '01'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.11285446584224701
    2. '00' → logprob: -2.237854480743408
    3. '02' → logprob: -11.61285400390625
    4. '0' → logprob: -11.98785400390625
    5. ')' → logprob: -11.98785400390625
    6. '05' → logprob: -12.23785400390625
    7. '001' → logprob: -12.73785400390625
    8. '000' → logprob: -14.23785400390625
    9. '1' → logprob: -14.61285400390625
    10. ' ' → logprob: -14.73785400390625

Token 86: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006920627201907337
    2. '):
' → logprob: -7.375691890716553
    3. '+' → logprob: -10.500692367553711
    4. ' ):' → logprob: -10.625692367553711
    5. ')' → logprob: -11.750692367553711
    6. '):
' → logprob: -12.750692367553711
    7. ':' → logprob: -13.375692367553711
    8. '):

' → logprob: -14.000692367553711
    9. ' ' → logprob: -16.12569236755371
    10. '}:' → logprob: -16.12569236755371

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011047935113310814
    2. ' ' → logprob: -4.511047840118408
    3. '  ' → logprob: -16.88604736328125
    4. ')' → logprob: -17.01104736328125
    5. '   ' → logprob: -18.26104736328125
    6. '

' → logprob: -18.63604736328125
    7. ' )' → logprob: -19.38604736328125
    8. '	' → logprob: -19.76104736328125
    9. '```' → logprob: -19.76104736328125
    10. ' ' → logprob: -19.88604736328125

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '0' → logprob: -17.37507438659668
    4. '  ' → logprob: -18.37507438659668
    5. ')' → logprob: -19.25007438659668
    6. '```' → logprob: -19.50007438659668
    7. '   ' → logprob: -19.62507438659668
    8. '2' → logprob: -21.18757438659668
    9. '

' → logprob: -21.31257438659668
    10. '):' → logprob: -21.37507438659668

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004026752896606922
    2. '):
' → logprob: -5.754026889801025
    3. ' ):' → logprob: -7.129026889801025
    4. ')' → logprob: -10.879026412963867
    5. '):
' → logprob: -11.254026412963867
    6. ':' → logprob: -11.504026412963867
    7. ' ):
' → logprob: -12.379026412963867
    8. '):

' → logprob: -14.379026412963867
    9. '}:' → logprob: -15.754026412963867
    10. ']:' → logprob: -16.004026412963867

Token 90: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.224628746509552
    2. ':' → logprob: -2.4746286869049072
    3. ' if' → logprob: -2.9746286869049072
    4. '   ' → logprob: -3.8496286869049072
    5. '    ' → logprob: -4.099628925323486
    6. '<|end|>' → logprob: -4.349628925323486
    7. ' 
' → logprob: -5.224628925323486
    8. 'if' → logprob: -5.599628925323486
    9. '```' → logprob: -6.224628925323486
    10. '  ' → logprob: -7.474628925323486

Token 91: ' prime' (ID: 9197)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.22893871366977692
    2. ' if' → logprob: -2.7289388179779053
    3. 'is' → logprob: -3.1039388179779053
    4. ' for' → logprob: -3.3539388179779053
    5. '   ' → logprob: -3.9789388179779053
    6. '    ' → logprob: -4.728938579559326
    7. ' import' → logprob: -4.853938579559326
    8. ' ' → logprob: -4.978938579559326
    9. 'import' → logprob: -5.728938579559326
    10. 'if' → logprob: -5.728938579559326

Token 92: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5183817744255066
    2. ' =' → logprob: -1.0183818340301514
    3. '=True' → logprob: -3.2683818340301514
    4. '_flag' → logprob: -6.268381595611572
    5. 's' → logprob: -6.393381595611572
    6. '_candidate' → logprob: -7.268381595611572
    7. 'flag' → logprob: -7.768381595611572
    8. '=False' → logprob: -7.768381595611572
    9. '_=' → logprob: -10.51838207244873
    10. '?' → logprob: -10.89338207244873

Token 93: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.007348089478909969
    2. 'all' → logprob: -5.00734806060791
    3. ' True' → logprob: -7.38234806060791
    4. '   ' → logprob: -12.38234806060791
    5. ' all' → logprob: -12.50734806060791
    6. '(True' → logprob: -14.13234806060791
    7. 'False' → logprob: -14.25734806060791
    8. 'true' → logprob: -14.25734806060791
    9. 'any' → logprob: -16.132349014282227
    10. '=True' → logprob: -16.507349014282227

Token 94: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5177211761474609
    2. ' for' → logprob: -1.017721176147461
    3. ' if' → logprob: -3.517721176147461
    4. 'for' → logprob: -4.767721176147461
    5. '<|end|>' → logprob: -5.892721176147461
    6. ' ' → logprob: -7.392721176147461
    7. 'if' → logprob: -8.142721176147461
    8. '  ' → logprob: -8.892721176147461
    9. '    
' → logprob: -8.892721176147461
    10. '
' → logprob: -9.142721176147461

Token 96: ' q' (ID: 2335)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16075989603996277
    2. ' for' → logprob: -1.9107599258422852
    3. '   ' → logprob: -7.535759925842285
    4. '	for' → logprob: -13.285759925842285
    5. 'if' → logprob: -16.41075897216797
    6. ' ' → logprob: -16.41075897216797
    7. '  ' → logprob: -17.53575897216797
    8. ' if' → logprob: -17.78575897216797
    9. '    ' → logprob: -18.16075897216797
    10. '    
' → logprob: -18.28575897216797

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1059229373931885
    2. 'for' → logprob: -1.1059229373931885
    3. '=' → logprob: -1.6059229373931885
    4. ' for' → logprob: -2.2309229373931885
    5. 'u' → logprob: -3.6059229373931885
    6. ' ' → logprob: -6.980922698974609
    7. '   ' → logprob: -7.855922698974609
    8. 'uer' → logprob: -8.60592269897461
    9. ',' → logprob: -8.73092269897461
    10. 'k' → logprob: -8.98092269897461

Token 98: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005925900186412036
    2. 'int' → logprob: -7.5005927085876465
    3. 'k' → logprob: -10.750592231750488
    4. ' ' → logprob: -11.125592231750488
    5. ' int' → logprob: -12.875592231750488
    6. 'math' → logprob: -15.000592231750488
    7. '(int' → logprob: -16.125593185424805
    8. ' k' → logprob: -16.375593185424805
    9. '/k' → logprob: -16.375593185424805
    10. '   ' → logprob: -16.750593185424805

Token 99: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029814021661877632
    2. 'int' → logprob: -3.5298140048980713
    3. 'k' → logprob: -9.779813766479492
    4. 'math' → logprob: -12.654813766479492
    5. ' int' → logprob: -12.904813766479492
    6. '1' → logprob: -14.779813766479492
    7. ' ' → logprob: -14.904813766479492
    8. '(int' → logprob: -15.029813766479492
    9. '0' → logprob: -16.029813766479492
    10. '[int' → logprob: -16.904813766479492

Token 100: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.079551100730896
    2. '<|end|>' → logprob: -1.454551100730896
    3. '   ' → logprob: -1.954551100730896
    4. 'while' → logprob: -2.2045512199401855
    5. 'for' → logprob: -2.7045512199401855
    6. ',' → logprob: -3.7045512199401855
    7. '*q' → logprob: -4.3295512199401855
    8. ' while' → logprob: -4.3295512199401855
    9. ',q' → logprob: -4.7045512199401855
    10. '**' → logprob: -4.8295512199401855

Token 101: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.17754347622394562
    2. ' while' → logprob: -1.9275435209274292
    3. '<|end|>' → logprob: -4.802543640136719
    4. '
' → logprob: -5.177543640136719
    5. '   ' → logprob: -6.927543640136719
    6. '<|end|>' → logprob: -7.552543640136719
    7. 'for' → logprob: -7.802543640136719
    8. ' ' → logprob: -8.302543640136719
    9. '	while' → logprob: -8.927543640136719
    10. ';' → logprob: -9.052543640136719

Token 103: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0002619318547658622
    2. ' q' → logprob: -8.250262260437012
    3. 'math' → logprob: -14.875262260437012
    4. '	q' → logprob: -15.500262260437012
    5. 'int' → logprob: -16.375261306762695
    6. '(q' → logprob: -17.125261306762695
    7. ' math' → logprob: -17.500261306762695
    8. '$q' → logprob: -19.500261306762695
    9. '*q' → logprob: -19.750261306762695
    10. ' ' → logprob: -19.750261306762695

Token 104: ' *' (ID: 425)
  Prédit: '*q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*q' → logprob: -0.03216277062892914
    2. ' *' → logprob: -3.532162666320801
    3. '*' → logprob: -6.032162666320801
    4. 'q' → logprob: -12.6571626663208
    5. '*k' → logprob: -12.6571626663208
    6. '*s' → logprob: -13.2821626663208
    7. '*p' → logprob: -15.0321626663208
    8. '*i' → logprob: -15.6571626663208
    9. '<=' → logprob: -16.032163619995117
    10. '*j' → logprob: -16.407163619995117

Token 105: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.9875325708417222e-05
    2. ' q' → logprob: -10.500029563903809
    3. '*q' → logprob: -13.125029563903809
    4. 'k' → logprob: -16.000030517578125
    5. '	q' → logprob: -16.125030517578125
    6. '(q' → logprob: -17.375030517578125
    7. ''q' → logprob: -18.875030517578125
    8. '$q' → logprob: -19.125030517578125
    9. '_q' → logprob: -19.125030517578125
    10. '[q' → logprob: -19.375030517578125

Token 106: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.02327343262732029
    2. ' <=' → logprob: -3.773273468017578
    3. '<|end|>' → logprob: -11.648273468017578
    4. ']<=' → logprob: -11.898273468017578
    5. ')<=' → logprob: -12.648273468017578
    6. '≤' → logprob: -13.148273468017578
    7. 'k' → logprob: -13.273273468017578
    8. '<|end|>' → logprob: -13.648273468017578
    9. '=' → logprob: -14.023273468017578
    10. '<' → logprob: -14.273273468017578

Token 107: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9027791495318525e-05
    2. ' k' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.000019073486328
    4. '	k' → logprob: -18.125019073486328
    5. '{k' → logprob: -18.875019073486328
    6. ' ' → logprob: -19.500019073486328
    7. '  ' → logprob: -20.250019073486328
    8. '(k' → logprob: -20.750019073486328
    9. 'kx' → logprob: -21.375019073486328
    10. '[k' → logprob: -21.375019073486328

Token 108: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17640818655490875
    2. ':' → logprob: -2.801408290863037
    3. 'and' → logprob: -2.926408290863037
    4. ':
' → logprob: -3.051408290863037
    5. '   ' → logprob: -9.676407814025879
    6. '<|end|>' → logprob: -11.051407814025879
    7. ':

' → logprob: -11.676407814025879
    8. ' ' → logprob: -11.801407814025879
    9. '<|end|>' → logprob: -11.801407814025879
    10. '	and' → logprob: -12.676407814025879

Token 109: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6883116960525513
    2. '       ' → logprob: -1.5633116960525513
    3. ' and' → logprob: -1.8133116960525513
    4. '<|end|>' → logprob: -3.1883115768432617
    5. ':
' → logprob: -3.5633115768432617
    6. '<|end|>' → logprob: -3.6883115768432617
    7. '   ' → logprob: -3.9383115768432617
    8. '
' → logprob: -5.188311576843262
    9. 'and' → logprob: -6.063311576843262
    10. ',' → logprob: -7.688311576843262

Token 110: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23870079219341278
    2. ' if' → logprob: -1.7387007474899292
    3. 'if' (adapté à ' if') → logprob: -3.7387008666992188
    4. '<|end|>' → logprob: -4.988700866699219
    5. '
' → logprob: -6.363700866699219
    6. '<|end|>' → logprob: -6.488700866699219
    7. ' ' → logprob: -6.988700866699219
    8. '   ' → logprob: -7.363700866699219
    9. ' and' → logprob: -8.738700866699219
    10. ':' → logprob: -8.863700866699219

Token 111: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011047814972698689
    2. ' k' → logprob: -4.511047840118408
    3. '	k' → logprob: -17.26104736328125
    4. ' ' → logprob: -17.76104736328125
    5. ' к' → logprob: -18.38604736328125
    6. '(k' → logprob: -19.01104736328125
    7. '{k' → logprob: -19.26104736328125
    8. ' ' → logprob: -19.76104736328125
    9. 'kx' → logprob: -19.76104736328125
    10. '_k' → logprob: -20.26104736328125

Token 112: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5759442448616028
    2. ' %' → logprob: -0.8259442448616028
    3. ' ' → logprob: -12.700943946838379
    4. ' ' → logprob: -13.700943946838379
    5. '%e' → logprob: -15.325943946838379
    6. '%i' → logprob: -15.575943946838379
    7. '%x' → logprob: -16.825944900512695
    8. '%E' → logprob: -17.200944900512695
    9. '%c' → logprob: -17.325944900512695
    10. '%s' → logprob: -17.450944900512695

Token 113: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0011703446507453918
    2. ' q' → logprob: -6.7511701583862305
    3. '	q' → logprob: -16.126171112060547
    4. ' ' → logprob: -18.876171112060547
    5. '   ' → logprob: -19.251171112060547
    6. '[q' → logprob: -19.876171112060547
    7. '  ' → logprob: -20.501171112060547
    8. '*q' → logprob: -20.876171112060547
    9. '2' → logprob: -21.001171112060547
    10. 'qml' → logprob: -21.376171112060547

Token 114: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12703846395015717
    2. ' ==' → logprob: -2.1270384788513184
    3. '0' → logprob: -9.50203800201416
    4. '=' → logprob: -10.37703800201416
    5. '===' → logprob: -13.75203800201416
    6. ')==' → logprob: -13.75203800201416
    7. ' ' → logprob: -13.75203800201416
    8. ']==' → logprob: -14.25203800201416
    9. '()==' → logprob: -15.25203800201416
    10. '==
' → logprob: -15.62703800201416

Token 115: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -20.250335693359375
    4. '۰' → logprob: -21.375335693359375
    5. '  ' → logprob: -22.125335693359375
    6. '<|end|>' → logprob: -22.125335693359375
    7. '00' → logprob: -22.250335693359375
    8. ' ' → logprob: -22.375335693359375
    9. '```' → logprob: -23.625335693359375
    10. '000' → logprob: -23.625335693359375

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. 'q' → logprob: -20.000019073486328
    4. '   ' → logprob: -20.375019073486328
    5. '۰' → logprob: -21.125019073486328
    6. '00' → logprob: -21.125019073486328
    7. '  ' → logprob: -21.250019073486328
    8. '<|end|>' → logprob: -22.125019073486328
    9. '000' → logprob: -22.375019073486328
    10. '    ' → logprob: -22.500019073486328

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004081959370523691
    2. ':
' → logprob: -5.504081726074219
    3. ':

' → logprob: -14.129081726074219
    4. ':return' → logprob: -14.129081726074219
    5. '):' → logprob: -14.629081726074219
    6. ' :' → logprob: -15.004081726074219
    7. ',' → logprob: -15.504081726074219
    8. '       ' → logprob: -15.629081726074219
    9. ':
' → logprob: -15.879081726074219
    10. ' and' → logprob: -16.12908172607422

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4396783709526062
    2. 'prime' → logprob: -1.564678430557251
    3. ' prime' → logprob: -1.939678430557251
    4. 'break' → logprob: -6.814678192138672
    5. ' break' → logprob: -7.064678192138672
    6. '
' → logprob: -7.814678192138672
    7. ':
' → logprob: -9.314678192138672
    8. '               ' → logprob: -9.314678192138672
    9. ' ' → logprob: -9.814678192138672
    10. ':' → logprob: -9.814678192138672

Token 119: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' (adapté à ' prime') → logprob: -0.20158232748508453
    2. ' prime' → logprob: -1.7015823125839233
    3. '
' → logprob: -9.576581954956055
    4. '           ' → logprob: -9.701581954956055
    5. 'break' → logprob: -10.951581954956055
    6. 'pr' → logprob: -11.576581954956055
    7. '_prime' → logprob: -11.951581954956055
    8. '   ' → logprob: -12.826581954956055
    9. '               ' → logprob: -14.076581954956055
    10. ' break' → logprob: -14.451581954956055

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4752318561077118
    2. '=' → logprob: -0.9752318859100342
    3. '=False' → logprob: -6.975231647491455
    4. '=True' → logprob: -8.475232124328613
    5. 's' → logprob: -11.850232124328613
    6. 'break' → logprob: -13.600232124328613
    7. ' ' → logprob: -14.350232124328613
    8. '=false' → logprob: -14.725232124328613
    9. '<|end|>' → logprob: -14.975232124328613
    10. '=None' → logprob: -15.100232124328613

Token 121: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.47407716512680054
    2. ' False' → logprob: -0.9740771651268005
    3. '=False' → logprob: -15.849077224731445
    4. '(False' → logprob: -17.474077224731445
    5. 'false' → logprob: -19.224077224731445
    6. 'break' → logprob: -19.724077224731445
    7. ' false' → logprob: -19.849077224731445
    8. '   ' → logprob: -19.849077224731445
    9. '_false' → logprob: -20.349077224731445
    10. '.False' → logprob: -21.724077224731445

Token 122: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00026872646412812173
    2. '
' → logprob: -9.125268936157227
    3. 'break' → logprob: -9.625268936157227
    4. '               ' → logprob: -10.625268936157227
    5. ',' → logprob: -10.625268936157227
    6. '		' → logprob: -11.250268936157227
    7. '            
' → logprob: -11.500268936157227
    8. ' break' → logprob: -11.625268936157227
    9. '                   ' → logprob: -13.125268936157227
    10. ' 
' → logprob: -13.500268936157227

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003900391166098416
    2. ' break' → logprob: -9.00039005279541
    3. '		' → logprob: -9.75039005279541
    4. 'break' → logprob: -9.75039005279541
    5. '               ' → logprob: -9.87539005279541
    6. '
' → logprob: -9.87539005279541
    7. ',' → logprob: -10.62539005279541
    8. '	break' → logprob: -12.62539005279541
    9. '                   ' → logprob: -12.62539005279541
    10. ' 
' → logprob: -13.00039005279541

Token 124: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2521132826805115
    2. ' break' → logprob: -1.5021133422851562
    3. '           ' → logprob: -8.752113342285156
    4. '	break' → logprob: -10.627113342285156
    5. '_break' → logprob: -14.252113342285156
    6. '               ' → logprob: -15.252113342285156
    7. '
' → logprob: -15.627113342285156
    8. '       ' → logprob: -15.752113342285156
    9. ' 
' → logprob: -16.627113342285156
    10. 'BREAK' → logprob: -16.877113342285156

Token 125: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3143043518066406
    2. '
' → logprob: -1.3143043518066406
    3. 'q' → logprob: -7.814304351806641
    4. '        
' → logprob: -8.18930435180664
    5. '<|end|>' → logprob: -9.18930435180664
    6. ',' → logprob: -10.06430435180664
    7. '    
' → logprob: -10.18930435180664
    8. '	' → logprob: -10.43930435180664
    9. '
' → logprob: -10.68930435180664
    10. '   ' → logprob: -10.81430435180664

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000511687423568219
    2. 'q' → logprob: -8.25051212310791
    3. '	' → logprob: -8.87551212310791
    4. '	q' → logprob: -10.25051212310791
    5. '   ' → logprob: -10.62551212310791
    6. '
' → logprob: -11.00051212310791
    7. ',' → logprob: -11.50051212310791
    8. ' q' → logprob: -12.37551212310791
    9. '<|end|>' → logprob: -12.37551212310791
    10. '	   ' → logprob: -13.00051212310791

Token 127: ' q' (ID: 2335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17996272444725037
    2. 'q' (adapté à ' q') → logprob: -2.179962635040283
    3. ' q' → logprob: -3.179962635040283
    4. '   ' → logprob: -4.929962635040283
    5. '	q' → logprob: -6.804962635040283
    6. '
' → logprob: -6.929962635040283
    7. '	' → logprob: -7.804962635040283
    8. ' ' → logprob: -9.429963111877441
    9. '    ' → logprob: -9.804963111877441
    10. '1' → logprob: -10.179963111877441

Token 128: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01416738796979189
    2. ' +=' → logprob: -4.264167308807373
    3. '=' → logprob: -12.889167785644531
    4. ']+=' → logprob: -14.264167785644531
    5. '+' → logprob: -14.639167785644531
    6. '+="' → logprob: -16.76416778564453
    7. '+='' → logprob: -17.38916778564453
    8. ' ' → logprob: -17.76416778564453
    9. '+=(' → logprob: -17.88916778564453
    10. '++' → logprob: -18.13916778564453

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -20.375139236450195
    4. '  ' → logprob: -20.500139236450195
    5. ' ' → logprob: -21.437639236450195
    6. '2' → logprob: -21.750139236450195
    7. '```' → logprob: -21.750139236450195
    8. '۱' → logprob: -21.812639236450195
    9. '１' → logprob: -22.062639236450195
    10. '+' → logprob: -22.500139236450195

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۱' → logprob: -20.125001907348633
    4. '１' → logprob: -20.875001907348633
    5. '<|end|>' → logprob: -21.250001907348633
    6. '```' → logprob: -21.312501907348633
    7. '  ' → logprob: -21.500001907348633
    8. '   ' → logprob: -21.687501907348633
    9. '१' → logprob: -21.937501907348633
    10. '১' → logprob: -22.125001907348633

Token 131: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004491596482694149
    2. 'if' → logprob: -5.629491806030273
    3. '    
' → logprob: -7.754491806030273
    4. '
' → logprob: -8.379491806030273
    5. ' if' → logprob: -8.754491806030273
    6. ':
' → logprob: -10.879491806030273
    7. '  
' → logprob: -11.254491806030273
    8. '```' → logprob: -11.629491806030273
    9. ' ' → logprob: -12.004491806030273
    10. ':' → logprob: -12.129491806030273

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015786595176905394
    2. 'if' → logprob: -6.5015788078308105
    3. ' if' → logprob: -10.001578330993652
    4. ' ' → logprob: -10.751578330993652
    5. '```' → logprob: -13.251578330993652
    6. '  ' → logprob: -13.376578330993652
    7. '<|end|>' → logprob: -13.751578330993652
    8. '    
' → logprob: -13.876578330993652
    9. ',' → logprob: -13.876578330993652
    10. ')' → logprob: -14.501578330993652

Token 133: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3792417347431183
    2. '   ' → logprob: -1.254241704940796
    3. ' if' → logprob: -3.504241704940796
    4. ' ' → logprob: -8.504241943359375
    5. '```' → logprob: -10.629241943359375
    6. '    
' → logprob: -11.504241943359375
    7. '	if' → logprob: -12.129241943359375
    8. 'If' → logprob: -12.504241943359375
    9. '  ' → logprob: -12.629241943359375
    10. '
' → logprob: -13.879241943359375

Token 134: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.313273549079895
    2. 'prime' → logprob: -1.313273549079895
    3. 'pr' → logprob: -11.813273429870605
    4. '   ' → logprob: -12.938273429870605
    5. ' ' → logprob: -13.813273429870605
    6. 'prim' → logprob: -15.188273429870605
    7. '(pr' → logprob: -15.563273429870605
    8. '_prime' → logprob: -15.688273429870605
    9. ' ' → logprob: -15.938273429870605
    10. '  ' → logprob: -16.688274383544922

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38687604665756226
    2. ':
' → logprob: -1.136876106262207
    3. ':
' → logprob: -13.636876106262207
    4. '   ' → logprob: -13.761876106262207
    5. '):
' → logprob: -14.136876106262207
    6. ':

' → logprob: -14.261876106262207
    7. ' and' → logprob: -14.511876106262207
    8. '==' → logprob: -15.386876106262207
    9. '       ' → logprob: -15.386876106262207
    10. '):' → logprob: -15.886876106262207

Token 136: '       ' (ID: 309)
  Prédit: ' pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pr' → logprob: -0.46979472041130066
    2. '       ' → logprob: -1.469794750213623
    3. 'pr' → logprob: -2.094794750213623
    4. '   ' → logprob: -3.969794750213623
    5. '	pr' → logprob: -5.844794750213623
    6. '(pr' → logprob: -12.219794273376465
    7. '           ' → logprob: -12.344794273376465
    8. ' ' → logprob: -12.594794273376465
    9. '     ' → logprob: -12.969794273376465
    10. '	' → logprob: -13.094794273376465

Token 137: ' pr' (ID: 550)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' (adapté à ' pr') → logprob: -0.2014213353395462
    2. ' pr' → logprob: -1.7014213800430298
    3. '   ' → logprob: -12.326421737670898
    4. '	pr' → logprob: -12.576421737670898
    5. '       ' → logprob: -17.4514217376709
    6. '_pr' → logprob: -17.5764217376709
    7. 'p' → logprob: -17.7014217376709
    8. 'prt' → logprob: -18.3264217376709
    9. '(pr' → logprob: -18.5764217376709
    10. '.pr' → logprob: -18.7014217376709

Token 138: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005247748922556639
    2. '.' → logprob: -5.255247592926025
    3. '.ap' → logprob: -12.130248069763184
    4. '.app' → logprob: -12.755248069763184
    5. 'append' → logprob: -12.755248069763184
    6. ' .' → logprob: -14.005248069763184
    7. '.push' → logprob: -14.380248069763184
    8. '.Append' → logprob: -14.630248069763184
    9. '.py' → logprob: -15.380248069763184
    10. '.extend' → logprob: -15.630248069763184

Token 139: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -5.512236498361744e-07
    2. 'k' → logprob: -14.625000953674316
    3. '(' → logprob: -16.875
    4. ' (' → logprob: -21.875
    5. '(
' → logprob: -22.0
    6. '(q' → logprob: -22.625
    7. ' k' → logprob: -22.75
    8. '(j' → logprob: -23.5
    9. '(i' → logprob: -23.5
    10. '((' → logprob: -23.5

Token 140: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -13.500001907348633
    3. ')
' → logprob: -14.625001907348633
    4. ')return' → logprob: -17.500001907348633
    5. ')#' → logprob: -17.750001907348633
    6. '),' → logprob: -18.000001907348633
    7. ')}' → logprob: -18.250001907348633
    8. '))' → logprob: -18.500001907348633
    9. ')`' → logprob: -18.625001907348633
    10. ')

' → logprob: -18.875001907348633

Token 141: 'off' (ID: 2864)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27959418296813965
    2. 'idx' → logprob: -2.0295941829681396
    3. 'p' → logprob: -3.1545941829681396
    4. 'pos' → logprob: -3.7795941829681396
    5. 'while' → logprob: -5.029594421386719
    6. 'index' → logprob: -5.154594421386719
    7. 'cnt' → logprob: -5.404594421386719
    8. 'cur' → logprob: -5.779594421386719
    9. 'i' → logprob: -5.779594421386719
    10. 'pr' → logprob: -5.904594421386719

Token 142: ' =' (ID: 314)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.767005443572998
    2. 's' → logprob: -1.267005443572998
    3. ' =' → logprob: -2.017005443572998
    4. 'sets' → logprob: -2.142005443572998
    5. '=' → logprob: -5.892005443572998
    6. '1' → logprob: -9.642005920410156
    7. '_sets' → logprob: -9.892005920410156
    8. '_set' → logprob: -10.017005920410156
    9. 'se' → logprob: -10.017005920410156
    10. 'f' → logprob: -10.267005920410156

Token 143: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37040531635284424
    2. '[' → logprob: -2.3704051971435547
    3. '1' → logprob: -2.6204051971435547
    4. ' ' → logprob: -3.6204051971435547
    5. 'n' → logprob: -3.6204051971435547
    6. '[n' → logprob: -4.370405197143555
    7. ' [' → logprob: -4.370405197143555
    8. '-' → logprob: -4.620405197143555
    9. 'random' → logprob: -4.620405197143555
    10. '2' → logprob: -5.120405197143555

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17057882249355316
    2. '1' → logprob: -3.420578718185425
    3. 'random' → logprob: -3.420578718185425
    4. '-' → logprob: -4.170578956604004
    5. 'len' → logprob: -4.170578956604004
    6. '[' → logprob: -4.170578956604004
    7. 'n' → logprob: -4.545578956604004
    8. '2' → logprob: -5.170578956604004
    9. '[(' → logprob: -5.795578956604004
    10. '3' → logprob: -5.920578956604004

Token 145: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1569763720035553
    2. '<|end|>' → logprob: -2.5319764614105225
    3. 'for' → logprob: -3.2819764614105225
    4. ' while' → logprob: -4.156976222991943
    5. ')' → logprob: -5.031976222991943
    6. '
' → logprob: -5.781976222991943
    7. '<|end|>' → logprob: -6.906976222991943
    8. ',' → logprob: -8.156976699829102
    9. ' for' → logprob: -8.281976699829102
    10. 'token' → logprob: -8.406976699829102

Token 146: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.11586448550224304
    2. 'for' → logprob: -2.2408645153045654
    3. ' while' → logprob: -6.490864276885986
    4. 'def' → logprob: -7.615864276885986
    5. 'step' → logprob: -8.615864753723145
    6. ' for' → logprob: -8.990864753723145
    7. '
' → logprob: -9.115864753723145
    8. 'pr' → logprob: -9.740864753723145
    9. ',' → logprob: -9.865864753723145
    10. 'i' → logprob: -9.990864753723145

Token 147: ' pr' (ID: 550)
  Prédit: ' off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' off' → logprob: -0.09064383804798126
    2. 'off' → logprob: -2.465643882751465
    3. ' len' → logprob: -6.715643882751465
    4. ' True' → logprob: -8.590643882751465
    5. 'len' → logprob: -9.340643882751465
    6. ' lst' → logprob: -9.715643882751465
    7. ' used' → logprob: -10.340643882751465
    8. 'True' → logprob: -10.465643882751465
    9. ' n' → logprob: -10.965643882751465
    10. ' ' → logprob: -11.090643882751465

Token 148: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.598092684522271e-05
    2. '[offset' → logprob: -10.625056266784668
    3. ' [' → logprob: -11.500056266784668
    4. 'and' → logprob: -11.500056266784668
    5. 'off' → logprob: -12.250056266784668
    6. ' and' → logprob: -12.250056266784668
    7. '[o' → logprob: -15.250056266784668
    8. '[len' → logprob: -15.500056266784668
    9. '```' → logprob: -16.00005531311035
    10. 'len' → logprob: -16.25005531311035

Token 149: 'off' (ID: 2864)
  Prédit: 'off'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.0005485066794790328
    2. '[' → logprob: -7.750548362731934
    3. ' off' → logprob: -9.125548362731934
    4. 'offs' → logprob: -12.625548362731934
    5. '(off' → logprob: -12.875548362731934
    6. ']' → logprob: -13.250548362731934
    7. 'offset' → logprob: -14.375548362731934
    8. '
' → logprob: -15.375548362731934
    9. '0' → logprob: -15.625548362731934
    10. '][' → logprob: -16.12554931640625

Token 150: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0047508650459349155
    2. ']<' → logprob: -5.629750728607178
    3. ']*' → logprob: -7.754750728607178
    4. ']<=' → logprob: -7.879750728607178
    5. ' ]' → logprob: -9.379751205444336
    6. ']!=' → logprob: -9.504751205444336
    7. ']%' → logprob: -10.004751205444336
    8. ']+' → logprob: -10.004751205444336
    9. '[' → logprob: -10.379751205444336
    10. ']==' → logprob: -10.629751205444336

Token 151: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.710120439529419
    2. ' <' → logprob: -0.710120439529419
    3. '<=' → logprob: -4.96012020111084
    4. ' <=' → logprob: -5.21012020111084
    5. '*' → logprob: -6.33512020111084
    6. '<n' → logprob: -6.96012020111084
    7. ' *' → logprob: -7.58512020111084
    8. '+' → logprob: -8.21012020111084
    9. '!=' → logprob: -8.46012020111084
    10. ' !=' → logprob: -8.71012020111084

Token 152: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11694783717393875
    2. ' n' → logprob: -2.616947889328003
    3. '2' → logprob: -3.866947889328003
    4. '100' → logprob: -5.616947650909424
    5. '10' → logprob: -5.741947650909424
    6. ' ' → logprob: -6.116947650909424
    7. '3' → logprob: -6.491947650909424
    8. '1' → logprob: -6.866947650909424
    9. '5' → logprob: -6.991947650909424
    10. '4' → logprob: -7.241947650909424

Token 153: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005036048591136932
    2. ' and' → logprob: -6.255035877227783
    3. ':
' → logprob: -6.630035877227783
    4. 'and' → logprob: -7.005035877227783
    5. '):' → logprob: -7.505035877227783
    6. '+' → logprob: -8.880036354064941
    7. '*' → logprob: -10.255036354064941
    8. '**' → logprob: -10.380036354064941
    9. ' :' → logprob: -10.630036354064941
    10. '//' → logprob: -10.755036354064941

Token 154: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.551307737827301
    2. 'n' → logprob: -1.4263076782226562
    3. '2' → logprob: -2.5513076782226562
    4. ' ' → logprob: -3.8013076782226562
    5. ' n' → logprob: -4.051307678222656
    6. '10' → logprob: -4.051307678222656
    7. '3' → logprob: -4.551307678222656
    8. 'off' → logprob: -4.676307678222656
    9. '100' → logprob: -4.801307678222656
    10. '0' → logprob: -5.176307678222656

Token 155: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2861064076423645
    2. 'n' → logprob: -2.1611063480377197
    3. '2' → logprob: -3.1611063480377197
    4. 'off' → logprob: -3.6611063480377197
    5. '10' → logprob: -3.7861063480377197
    6. '5' → logprob: -4.661106586456299
    7. '100' → logprob: -4.661106586456299
    8. '3' → logprob: -4.911106586456299
    9. '0' → logprob: -5.161106586456299
    10. '4' → logprob: -6.411106586456299

Token 156: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4205802083015442
    2. ' and' → logprob: -1.5455801486968994
    3. ':
' → logprob: -2.1705801486968994
    4. 'and' → logprob: -4.1705803871154785
    5. '   ' → logprob: -8.54557991027832
    6. ' :' → logprob: -9.04557991027832
    7. '):
' → logprob: -9.17057991027832
    8. '):' → logprob: -9.67057991027832
    9. ' :
' → logprob: -10.17057991027832
    10. ')' → logprob: -10.54557991027832

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44429096579551697
    2. ' off' → logprob: -1.0692909955978394
    3. 'off' → logprob: -4.194291114807129
    4. ' if' → logprob: -9.819291114807129
    5. ' ' → logprob: -9.944291114807129
    6. '(off' → logprob: -10.319291114807129
    7. ' offs' → logprob: -10.506791114807129
    8. ' and' → logprob: -10.506791114807129
    9. '
' → logprob: -10.756791114807129
    10. '   ' → logprob: -10.756791114807129

Token 158: ' off' (ID: 1277)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'off' (adapté à ' off') → logprob: -0.004339441191405058
    2. ' off' → logprob: -5.504339218139648
    3. '   ' → logprob: -8.254339218139648
    4. '
' → logprob: -14.504339218139648
    5. 'offs' → logprob: -16.37933921813965
    6. '    
' → logprob: -16.50433921813965
    7. '_off' → logprob: -17.25433921813965
    8. 'offset' → logprob: -17.62933921813965
    9. ' ' → logprob: -18.00433921813965
    10. '(off' → logprob: -18.00433921813965

Token 159: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0007635262445546687
    2. ' +=' → logprob: -7.250763416290283
    3. '+' → logprob: -9.875763893127441
    4. ']+=' → logprob: -13.500763893127441
    5. '++' → logprob: -14.750763893127441
    6. '```' → logprob: -16.125762939453125
    7. '+='' → logprob: -16.375762939453125
    8. '+="' → logprob: -16.625762939453125
    9. '   ' → logprob: -17.000762939453125
    10. '1' → logprob: -17.000762939453125

Token 160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.500001907348633
    4. '```' → logprob: -19.750001907348633
    5. '  ' → logprob: -21.250001907348633
    6. '0' → logprob: -21.500001907348633
    7. '１' → logprob: -21.812501907348633
    8. '۱' → logprob: -22.437501907348633
    9. '
' → logprob: -23.062501907348633
    10. ' ' → logprob: -23.062501907348633

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -19.25
    4. '```' → logprob: -19.875
    5. '0' → logprob: -20.125
    6. '１' → logprob: -22.125
    7. '  ' → logprob: -22.25
    8. '۱' → logprob: -22.625
    9. '`' → logprob: -23.125
    10. '१' → logprob: -23.375

Token 162: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7983499765396118
    2. 'p' → logprob: -1.9233499765396118
    3. 'a' → logprob: -2.4233498573303223
    4. 'val' → logprob: -2.5483498573303223
    5. 'while' → logprob: -2.5483498573303223
    6. 'x' → logprob: -2.5483498573303223
    7. 'd' → logprob: -3.5483498573303223
    8. 'res' → logprob: -3.6733498573303223
    9. 'v' → logprob: -3.6733498573303223
    10. 'i' → logprob: -3.9233498573303223

Token 163: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5598567724227905
    2. 'while' → logprob: -1.6848567724227905
    3. 'p' → logprob: -2.80985689163208
    4. 'x' → logprob: -3.18485689163208
    5. 'val' → logprob: -4.05985689163208
    6. 'v' → logprob: -4.18485689163208
    7. 'cur' → logprob: -4.30985689163208
    8. 'res' → logprob: -4.68485689163208
    9. 'i' → logprob: -4.80985689163208
    10. 'a' → logprob: -4.93485689163208

Token 164: ' ij' (ID: 38172)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04542640224099159
    2. 'i' → logprob: -3.670426368713379
    3. ' x' → logprob: -5.420426368713379
    4. ' _' → logprob: -5.420426368713379
    5. ' (' → logprob: -5.545426368713379
    6. '_' → logprob: -6.920426368713379
    7. ' val' → logprob: -6.920426368713379
    8. ' k' → logprob: -7.295426368713379
    9. ' pos' → logprob: -7.545426368713379
    10. ' ' → logprob: -7.545426368713379

Token 165: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04310207813978195
    2. 'in' → logprob: -3.1681020259857178
    3. ',' → logprob: -10.043102264404297
    4. ' ' → logprob: -10.793102264404297
    5. ' =' → logprob: -11.793102264404297
    6. '_' → logprob: -12.293102264404297
    7. ' ,' → logprob: -12.543102264404297
    8. 's' → logprob: -13.043102264404297
    9. 'i' → logprob: -13.168102264404297
    10. '=' → logprob: -13.293102264404297

Token 166: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.03813525289297104
    2. ' lst' → logprob: -3.288135290145874
    3. 'range' → logprob: -9.413135528564453
    4. ' range' → logprob: -11.413135528564453
    5. '(lst' → logprob: -14.913135528564453
    6. 'l' → logprob: -15.288135528564453
    7. '   ' → logprob: -15.663135528564453
    8. ' ' → logprob: -15.663135528564453
    9. 'list' → logprob: -15.913135528564453
    10. 'ls' → logprob: -16.038135528564453

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011188744247192517
    2. ':
' → logprob: -9.37511157989502
    3. ' :' → logprob: -11.00011157989502
    4. ',' → logprob: -11.75011157989502
    5. '):' → logprob: -14.00011157989502
    6. '=' → logprob: -14.62511157989502
    7. '[' → logprob: -15.50011157989502
    8. ':

' → logprob: -15.75011157989502
    9. ' =' → logprob: -16.250112533569336
    10. ':
' → logprob: -16.375112533569336

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1422831267118454
    2. ':' → logprob: -3.0172832012176514
    3. ' i' → logprob: -3.6422832012176514
    4. '    
' → logprob: -4.517282962799072
    5. ' a' → logprob: -4.642282962799072
    6. '    ' → logprob: -5.142282962799072
    7. ' ' → logprob: -5.267282962799072
    8. ' if' → logprob: -5.392282962799072
    9. ' j' → logprob: -5.517282962799072
    10. ' 
' → logprob: -5.642282962799072

Token 169: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.097194604575634
    2. ' i' → logprob: -2.5971946716308594
    3. '   ' → logprob: -4.972194671630859
    4. 'if' → logprob: -5.097194671630859
    5. ' if' → logprob: -6.097194671630859
    6. 'x' → logprob: -6.347194671630859
    7. 'a' → logprob: -7.597194671630859
    8. 'p' → logprob: -8.72219467163086
    9. ' x' → logprob: -8.97219467163086
    10. ' a' → logprob: -9.72219467163086

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03380152955651283
    2. ',j' → logprob: -3.408801555633545
    3. ' ,' → logprob: -8.908801078796387
    4. '=' → logprob: -12.408801078796387
    5. ' j' → logprob: -12.408801078796387
    6. ' =' → logprob: -12.658801078796387
    7. ' ' → logprob: -13.158801078796387
    8. 'j' → logprob: -13.658801078796387
    9. ')' → logprob: -14.283801078796387
    10. '[j' → logprob: -14.283801078796387

Token 171: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3132689297199249
    2. ' j' → logprob: -1.3132688999176025
    3. '<|end|>' → logprob: -12.313268661499023
    4. '_j' → logprob: -14.313268661499023
    5. ' ' → logprob: -14.688268661499023
    6. '	j' → logprob: -14.813268661499023
    7. 'ij' → logprob: -14.938268661499023
    8. 'jj' → logprob: -15.188268661499023
    9. 'jk' → logprob: -16.188268661499023
    10. ' ij' → logprob: -16.188268661499023

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2815024256706238
    2. '=' → logprob: -1.4065024852752686
    3. ',' → logprob: -8.156502723693848
    4. ')' → logprob: -10.156502723693848
    5. ' =
' → logprob: -11.531502723693848
    6. ' +=' → logprob: -12.531502723693848
    7. ' ' → logprob: -12.656502723693848
    8. '   ' → logprob: -13.031502723693848
    9. ' =)' → logprob: -13.406502723693848
    10. '=i' → logprob: -13.531502723693848

Token 173: ' ij' (ID: 38172)
  Prédit: ' ij'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ij' → logprob: -0.054903723299503326
    2. 'ij' → logprob: -2.929903745651245
    3. ' random' → logprob: -11.679903984069824
    4. ' ' → logprob: -12.679903984069824
    5. '    ' → logprob: -12.929903984069824
    6. 'ijn' → logprob: -13.179903984069824
    7. '   ' → logprob: -14.054903984069824
    8. 'ijk' → logprob: -14.429903984069824
    9. ' i' → logprob: -14.679903984069824
    10. 'ijkl' → logprob: -14.679903984069824

Token 174: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11150860041379929
    2. '       ' → logprob: -3.61150860786438
    3. '    
' → logprob: -3.73650860786438
    4. '<|end|>' → logprob: -4.611508369445801
    5. '=' → logprob: -4.736508369445801
    6. ' =' → logprob: -4.861508369445801
    7. ':' → logprob: -5.236508369445801
    8. ')' → logprob: -5.236508369445801
    9. 'a' → logprob: -5.611508369445801
    10. ',' → logprob: -5.611508369445801

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20409466326236725
    2. '       ' → logprob: -1.954094648361206
    3. ' if' → logprob: -3.954094648361206
    4. '    
' → logprob: -5.329094886779785
    5. ':' → logprob: -5.579094886779785
    6. ' a' → logprob: -5.579094886779785
    7. 'a' → logprob: -5.829094886779785
    8. 'if' → logprob: -6.204094886779785
    9. '    ' → logprob: -6.454094886779785
    10. ')' → logprob: -6.454094886779785

Token 176: ' if' (ID: 538)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.3407033681869507
    2. 'while' → logprob: -1.5907033681869507
    3. ' val' → logprob: -1.9657033681869507
    4. 'x' → logprob: -2.7157034873962402
    5. 'val' → logprob: -2.8407034873962402
    6. ' x' → logprob: -3.2157034873962402
    7. 'for' → logprob: -3.5907034873962402
    8. 'if' (adapté à ' if') → logprob: -3.7157034873962402
    9. 'p' → logprob: -3.8407034873962402
    10. 'v' → logprob: -3.9657034873962402

Token 177: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6033998727798462
    2. ' i' → logprob: -1.2283998727798462
    3. '(i' → logprob: -2.7283997535705566
    4. 'i' → logprob: -3.2283997535705566
    5. ' j' → logprob: -3.9783997535705566
    6. '(' → logprob: -4.103399753570557
    7. 'j' → logprob: -5.978399753570557
    8. ' a' → logprob: -6.353399753570557
    9. ' ' → logprob: -6.353399753570557
    10. ' pr' → logprob: -6.353399753570557

Token 178: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13335347175598145
    2. ' i' → logprob: -2.1333534717559814
    3. '(i' → logprob: -6.008353233337402
    4. ' (' → logprob: -6.383353233337402
    5. 'j' → logprob: -7.133353233337402
    6. ')' → logprob: -7.883353233337402
    7. ' ' → logprob: -8.508353233337402
    8. '(' → logprob: -8.758353233337402
    9. ' j' → logprob: -8.883353233337402
    10. ' not' → logprob: -9.508353233337402

Token 179: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05144524201750755
    2. ',j' → logprob: -3.176445245742798
    3. ' ,' → logprob: -5.801445007324219
    4. ' +' → logprob: -6.176445007324219
    5. '+' → logprob: -6.301445007324219
    6. '+j' → logprob: -7.676445007324219
    7. ' ==' → logprob: -7.926445007324219
    8. '==' → logprob: -8.801445007324219
    9. ' not' → logprob: -9.051445007324219
    10. ',i' → logprob: -9.051445007324219

Token 180: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4754512310028076
    2. ' j' → logprob: -0.9754512310028076
    3. '1' → logprob: -6.850451469421387
    4. ' ' → logprob: -8.225451469421387
    5. ')' → logprob: -10.475451469421387
    6. ' n' → logprob: -12.475451469421387
    7. 'n' → logprob: -12.725451469421387
    8. '	j' → logprob: -12.725451469421387
    9. '   ' → logprob: -13.850451469421387
    10. ' off' → logprob: -13.975451469421387

Token 181: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007095877546817064
    2. ' )' → logprob: -5.257095813751221
    3. ')%' → logprob: -6.632095813751221
    4. '+' → logprob: -8.257096290588379
    5. ' +' → logprob: -8.757096290588379
    6. '   ' → logprob: -10.257096290588379
    7. ' not' → logprob: -10.632096290588379
    8. ' ' → logprob: -11.507096290588379
    9. 'not' → logprob: -12.007096290588379
    10. '%' → logprob: -12.132096290588379

Token 182: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8842344284057617
    2. '%' → logprob: -2.0092344284057617
    3. ' not' → logprob: -2.0092344284057617
    4. '>' → logprob: -2.5092344284057617
    5. '>=' → logprob: -2.5092344284057617
    6. '<' → logprob: -2.8842344284057617
    7. '<=' → logprob: -3.6342344284057617
    8. ' <' → logprob: -4.134234428405762
    9. ' >=' → logprob: -4.259234428405762
    10. ')%' → logprob: -5.009234428405762

Token 183: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18152782320976257
    2. ' ' → logprob: -1.806527853012085
    3. '3' → logprob: -6.556527614593506
    4. ' n' → logprob: -8.306528091430664
    5. '4' → logprob: -10.056528091430664
    6. 'n' → logprob: -10.056528091430664
    7. '(n' → logprob: -12.306528091430664
    8. 'pr' → logprob: -12.431528091430664
    9. '  ' → logprob: -12.681528091430664
    10. '   ' → logprob: -12.931528091430664

Token 184: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0036174089182168245
    2. '3' → logprob: -5.753617286682129
    3. ' ' → logprob: -8.128617286682129
    4. 'pr' → logprob: -10.128617286682129
    5. 'n' → logprob: -10.128617286682129
    6. '4' → logprob: -10.253617286682129
    7. '7' → logprob: -12.378617286682129
    8. '5' → logprob: -12.878617286682129
    9. '10' → logprob: -13.003617286682129
    10. '(pr' → logprob: -13.003617286682129

Token 185: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28224748373031616
    2. '==' → logprob: -1.407247543334961
    3. ' !=' → logprob: -7.032247543334961
    4. ')' → logprob: -9.782247543334961
    5. '!=' → logprob: -9.782247543334961
    6. ':' → logprob: -10.157247543334961
    7. ')==' → logprob: -10.532247543334961
    8. '<|end|>' → logprob: -11.032247543334961
    9. ' ' → logprob: -12.157247543334961
    10. ']==' → logprob: -12.282247543334961

Token 186: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07704953849315643
    2. '1' → logprob: -2.827049493789673
    3. ' ' → logprob: -4.202049732208252
    4. '   ' → logprob: -13.139549255371094
    5. '
' → logprob: -15.077049255371094
    6. '2' → logprob: -15.514549255371094
    7. '```' → logprob: -16.014549255371094
    8. ' ' → logprob: -16.202049255371094
    9. '=' → logprob: -16.389549255371094
    10. ' 
' → logprob: -16.577049255371094

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1277739405632019
    2. '1' → logprob: -2.1277740001678467
    3. ' ' → logprob: -7.127773761749268
    4. '2' → logprob: -10.127774238586426
    5. '   ' → logprob: -13.252774238586426
    6. '```' → logprob: -14.940274238586426
    7. '}' → logprob: -15.565274238586426
    8. '
' → logprob: -16.56527328491211
    9. ')' → logprob: -16.69027328491211
    10. '  ' → logprob: -16.81527328491211

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028213970363140106
    2. ':
' → logprob: -6.127821445465088
    3. ' and' → logprob: -8.25282096862793
    4. '       ' → logprob: -8.25282096862793
    5. '   ' → logprob: -10.00282096862793
    6. ' :' → logprob: -10.25282096862793
    7. '=' → logprob: -11.87782096862793
    8. 'and' → logprob: -12.00282096862793
    9. ' =' → logprob: -12.25282096862793
    10. '):' → logprob: -12.50282096862793

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00357262697070837
    2. ' a' → logprob: -6.753572463989258
    3. '   ' → logprob: -7.128572463989258
    4. 'a' → logprob: -7.378572463989258
    5. '
' → logprob: -8.003572463989258
    6. ' continue' → logprob: -8.503572463989258
    7. ':' → logprob: -8.753572463989258
    8. '        
' → logprob: -10.128572463989258
    9. ',' → logprob: -10.253572463989258
    10. '    
' → logprob: -10.253572463989258

Token 190: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3989495635032654
    2. ' a' → logprob: -1.2739496231079102
    3. '       ' → logprob: -3.77394962310791
    4. '   ' → logprob: -3.89894962310791
    5. ' val' → logprob: -6.77394962310791
    6. '           ' → logprob: -6.89894962310791
    7. 'val' → logprob: -7.39894962310791
    8. ' x' → logprob: -7.77394962310791
    9. 'if' → logprob: -7.77394962310791
    10. ' if' → logprob: -7.77394962310791

Token 191: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021974841365590692
    2. 'i' → logprob: -8.750219345092773
    3. '[' → logprob: -10.375219345092773
    4. 'a' → logprob: -11.250219345092773
    5. '[a' → logprob: -12.500219345092773
    6. '[I' → logprob: -12.500219345092773
    7. ' [' → logprob: -13.000219345092773
    8. '][' → logprob: -13.500219345092773
    9. '   ' → logprob: -13.500219345092773
    10. ']' → logprob: -14.250219345092773

Token 192: ' (' (ID: 350)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.6342740654945374
    2. ' pr' → logprob: -0.7592740654945374
    3. '(pr' → logprob: -8.38427448272705
    4. ' random' → logprob: -8.50927448272705
    5. 'random' → logprob: -8.63427448272705
    6. 'n' → logprob: -9.00927448272705
    7. ' off' → logprob: -9.50927448272705
    8. ' (' → logprob: -9.63427448272705
    9. ' ' → logprob: -9.63427448272705
    10. 'a' → logprob: -9.75927448272705

Token 193: 'i' (ID: 72)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.05584719032049179
    2. ' pr' → logprob: -3.43084716796875
    3. 'off' → logprob: -4.93084716796875
    4. 'i' → logprob: -5.68084716796875
    5. 'n' → logprob: -5.93084716796875
    6. 'a' → logprob: -6.05584716796875
    7. '(pr' → logprob: -6.43084716796875
    8. '2' → logprob: -7.43084716796875
    9. '1' → logprob: -7.43084716796875
    10. ' off' → logprob: -7.80584716796875

Token 194: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2800653576850891
    2. '+' → logprob: -1.5300652980804443
    3. '+j' → logprob: -3.9050652980804443
    4. ' *' → logprob: -6.155065536499023
    5. ',' → logprob: -6.655065536499023
    6. '*' → logprob: -6.780065536499023
    7. ',j' → logprob: -7.030065536499023
    8. '*j' → logprob: -7.530065536499023
    9. '   ' → logprob: -7.655065536499023
    10. ' -' → logprob: -7.655065536499023

Token 195: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.18658070266246796
    2. ' j' → logprob: -2.3115806579589844
    3. '1' → logprob: -3.1865806579589844
    4. 'off' → logprob: -3.8115806579589844
    5. ' off' → logprob: -5.561580657958984
    6. ' ' → logprob: -6.186580657958984
    7. 'n' → logprob: -7.311580657958984
    8. ' n' → logprob: -8.436580657958984
    9. '2' → logprob: -8.811580657958984
    10. '3' → logprob: -8.811580657958984

Token 196: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1332339197397232
    2. '+' → logprob: -2.5082340240478516
    3. ' +' → logprob: -3.3832340240478516
    4. ')**' → logprob: -5.258234024047852
    5. ')+' → logprob: -6.508234024047852
    6. ')*' → logprob: -7.258234024047852
    7. ')//' → logprob: -7.258234024047852
    8. ' )' → logprob: -7.508234024047852
    9. '   ' → logprob: -8.133234024047852
    10. '-' → logprob: -9.133234024047852

Token 197: ' //' (ID: 602)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5045290589332581
    2. '+' → logprob: -1.0045289993286133
    3. '   ' → logprob: -5.379528999328613
    4. '*' → logprob: -5.754528999328613
    5. ' //' → logprob: -5.879528999328613
    6. '       ' → logprob: -5.879528999328613
    7. ' -' → logprob: -6.004528999328613
    8. '//' → logprob: -6.129528999328613
    9. '-' → logprob: -6.129528999328613
    10. ' ' → logprob: -6.129528999328613

Token 198: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009201543871313334
    2. ' ' → logprob: -7.000920295715332
    3. '1' → logprob: -12.250920295715332
    4. '   ' → logprob: -12.875920295715332
    5. '3' → logprob: -15.000920295715332
    6. '4' → logprob: -15.313420295715332
    7. '  ' → logprob: -15.875920295715332
    8. '```' → logprob: -16.625919342041016
    9. '       ' → logprob: -16.813419342041016
    10. '           ' → logprob: -16.813419342041016

Token 199: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.416665640543215e-05
    2. ' ' → logprob: -10.37503433227539
    3. '1' → logprob: -13.50003433227539
    4. '   ' → logprob: -14.37503433227539
    5. '3' → logprob: -15.00003433227539
    6. '4' → logprob: -15.00003433227539
    7. '  ' → logprob: -16.62503433227539
    8. '
' → logprob: -17.18753433227539
    9. '
' → logprob: -17.31253433227539
    10. '

' → logprob: -17.50003433227539

Token 200: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03234560415148735
    2. ' +' → logprob: -3.9073455333709717
    3. '<|end|>' → logprob: -5.782345771789551
    4. ')' → logprob: -5.907345771789551
    5. '+' → logprob: -5.907345771789551
    6. '
' → logprob: -6.782345771789551
    7. '        
' → logprob: -7.782345771789551
    8. ',' → logprob: -7.782345771789551
    9. '   ' → logprob: -8.65734577178955
    10. '        ' → logprob: -9.28234577178955

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17533065378665924
    2. '   ' → logprob: -2.800330638885498
    3. '<|end|>' → logprob: -3.050330638885498
    4. '+' → logprob: -4.675330638885498
    5. ' +' → logprob: -4.675330638885498
    6. ',' → logprob: -4.675330638885498
    7. ' else' → logprob: -5.425330638885498
    8. ' =' → logprob: -5.675330638885498
    9. ' *' → logprob: -6.175330638885498
    10. ')' → logprob: -6.425330638885498

Token 202: ' B' (ID: 418)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.534757137298584
    2. 'a' → logprob: -1.659757137298584
    3. ' a' → logprob: -2.534757137298584
    4. '       ' → logprob: -3.534757137298584
    5. ' if' → logprob: -3.784757137298584
    6. 'if' → logprob: -3.909757137298584
    7. 'b' → logprob: -4.784757137298584
    8. 'B' (adapté à ' B') → logprob: -4.784757137298584
    9. ' while' → logprob: -5.034757137298584
    10. ' B' → logprob: -5.159757137298584

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021431744098663
    2. '=' → logprob: -2.3502142429351807
    3. ',' → logprob: -12.725214004516602
    4. ' ' → logprob: -12.850214004516602
    5. ')' → logprob: -13.475214004516602
    6. ' =
' → logprob: -15.600214004516602
    7. '   ' → logprob: -15.850214004516602
    8. ' =(' → logprob: -15.850214004516602
    9. '    ' → logprob: -16.6002140045166
    10. '=(' → logprob: -17.1002140045166

Token 204: ' n' (ID: 297)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.41838106513023376
    2. ' (' → logprob: -1.2933810949325562
    3. 'pr' → logprob: -4.793381214141846
    4. 'A' → logprob: -5.043381214141846
    5. 'i' → logprob: -5.043381214141846
    6. ' i' → logprob: -5.168381214141846
    7. 'n' → logprob: -5.543381214141846
    8. '(j' → logprob: -5.543381214141846
    9. ' A' → logprob: -5.668381214141846
    10. 'j' → logprob: -5.668381214141846

Token 205: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4777432680130005
    2. '-' → logprob: -0.9777432680130005
    3. '+' → logprob: -5.852743148803711
    4. ' +' → logprob: -7.227743148803711
    5. ' ' → logprob: -10.227743148803711
    6. '  ' → logprob: -12.352743148803711
    7. '   ' → logprob: -12.352743148803711
    8. '*' → logprob: -12.352743148803711
    9. '1' → logprob: -13.227743148803711
    10. ' ' → logprob: -13.227743148803711

Token 206: ' (' (ID: 350)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7172977328300476
    2. '1' → logprob: -1.2172977924346924
    3. '2' → logprob: -2.7172977924346924
    4. 'i' → logprob: -3.3422977924346924
    5. 'off' → logprob: -3.7172977924346924
    6. 'j' → logprob: -4.092297554016113
    7. '(i' → logprob: -4.092297554016113
    8. '(' → logprob: -4.342297554016113
    9. 'A' → logprob: -4.467297554016113
    10. ' ' → logprob: -4.967297554016113

Token 207: 'i' (ID: 72)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.19759170711040497
    2. 'i' → logprob: -1.9475916624069214
    3. '(i' → logprob: -3.822591781616211
    4. 'off' → logprob: -4.947591781616211
    5. '(j' → logprob: -5.947591781616211
    6. 'n' → logprob: -7.197591781616211
    7. '(A' → logprob: -7.322591781616211
    8. '(n' → logprob: -7.447591781616211
    9. 'A' → logprob: -7.572591781616211
    10. ' (' → logprob: -7.572591781616211

Token 208: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.44846776127815247
    2. '+' → logprob: -1.32346773147583
    3. ' -' → logprob: -3.07346773147583
    4. '+j' → logprob: -3.32346773147583
    5. '-' → logprob: -4.44846773147583
    6. ')' → logprob: -7.44846773147583
    7. ' ' → logprob: -7.82346773147583
    8. '-j' → logprob: -9.073468208312988
    9. '   ' → logprob: -10.823468208312988
    10. '  ' → logprob: -10.948468208312988

Token 209: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04307866469025612
    2. ' j' → logprob: -3.168078660964966
    3. ' ' → logprob: -10.918078422546387
    4. ')' → logprob: -11.168078422546387
    5. 'A' → logprob: -11.293078422546387
    6. '1' → logprob: -11.293078422546387
    7. ' (' → logprob: -12.793078422546387
    8. 'B' → logprob: -13.043078422546387
    9. '   ' → logprob: -13.043078422546387
    10. '(' → logprob: -13.293078422546387

Token 210: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030171608086675406
    2. ')//' → logprob: -6.128016948699951
    3. ' )' → logprob: -7.128016948699951
    4. '))' → logprob: -12.00301742553711
    5. ')
' → logprob: -12.50301742553711
    6. '//' → logprob: -12.62801742553711
    7. '[' → logprob: -12.75301742553711
    8. '   ' → logprob: -12.87801742553711
    9. ' ' → logprob: -13.37801742553711
    10. '）' → logprob: -13.50301742553711

Token 211: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.7550572156906128
    2. ')' → logprob: -1.5050572156906128
    3. ' //' → logprob: -1.6300572156906128
    4. '
' → logprob: -3.3800573348999023
    5. ' ' → logprob: -3.7550573348999023
    6. '#' → logprob: -3.8800573348999023
    7. ' +' → logprob: -5.130057334899902
    8. '[' → logprob: -5.630057334899902
    9. '   ' → logprob: -6.005057334899902
    10. '2' → logprob: -6.130057334899902

Token 212: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007115975022315979
    2. ' ' → logprob: -7.250711441040039
    3. '   ' → logprob: -13.625711441040039
    4. '  ' → logprob: -15.750711441040039
    5. '1' → logprob: -16.62571144104004
    6. '```' → logprob: -17.56321144104004
    7. '4' → logprob: -17.68821144104004
    8. '۲' → logprob: -17.87571144104004
    9. '    ' → logprob: -18.00071144104004
    10. '２' → logprob: -18.31321144104004

Token 213: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.805981972021982e-05
    2. ' ' → logprob: -9.25009822845459
    3. '   ' → logprob: -14.25009822845459
    4. '1' → logprob: -14.75009822845459
    5. '  ' → logprob: -15.75009822845459
    6. '4' → logprob: -16.375097274780273
    7. '۲' → logprob: -16.437597274780273
    8. '```' → logprob: -16.500097274780273
    9. '
' → logprob: -17.250097274780273
    10. '２' → logprob: -17.437597274780273

Token 214: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02989303320646286
    2. '
' → logprob: -4.029892921447754
    3. '<|end|>' → logprob: -4.779892921447754
    4. '        
' → logprob: -6.279892921447754
    5. ',' → logprob: -8.029892921447754
    6. '<|end|>' → logprob: -8.529892921447754
    7. '   ' → logprob: -8.654892921447754
    8. ')' → logprob: -9.279892921447754
    9. '  
' → logprob: -9.279892921447754
    10. ' else' → logprob: -9.654892921447754

Token 215: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6743910312652588
    2. '       ' → logprob: -0.9243910312652588
    3. '<|end|>' → logprob: -3.424391031265259
    4. 'a' → logprob: -3.924391031265259
    5. ' a' → logprob: -4.92439079284668
    6. '    
' → logprob: -4.92439079284668
    7. ')' → logprob: -4.92439079284668
    8. ' ' → logprob: -5.29939079284668
    9. '        
' → logprob: -5.54939079284668
    10. ' 
' → logprob: -6.04939079284668

Token 216: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2811138927936554
    2. ')' → logprob: -2.281113862991333
    3. ' a' → logprob: -2.531113862991333
    4. '   ' → logprob: -3.406113862991333
    5. '       ' → logprob: -4.906114101409912
    6. 'if' → logprob: -6.031114101409912
    7. '    
' → logprob: -6.156114101409912
    8. ' if' → logprob: -6.281114101409912
    9. ' 
' → logprob: -6.406114101409912
    10. ']' → logprob: -6.531114101409912

Token 217: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.42512911558151245
    2. 'val' → logprob: -2.3001291751861572
    3. ' val' → logprob: -2.9251291751861572
    4. ' a' → logprob: -2.9251291751861572
    5. 'p' → logprob: -3.3001291751861572
    6. 'x' → logprob: -3.9251291751861572
    7. 'if' → logprob: -4.050128936767578
    8. 'while' → logprob: -4.300128936767578
    9. 'v' → logprob: -4.675128936767578
    10. ' if' → logprob: -5.425128936767578

Token 218: 'cm' (ID: 7871)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.5535326600074768
    2. ' =' → logprob: -2.428532600402832
    3. 'ist' → logprob: -2.553532600402832
    4. 'ength' → logprob: -3.053532600402832
    5. 'eft' → logprob: -3.053532600402832
    6. 'et' → logprob: -3.303532600402832
    7. 'e' → logprob: -4.178532600402832
    8. 'a' → logprob: -4.178532600402832
    9. 'st' → logprob: -4.303532600402832
    10. 'ast' → logprob: -4.678532600402832

Token 219: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017477769404649734
    2. '=' → logprob: -4.267477989196777
    3. '(' → logprob: -6.017477989196777
    4. '<|end|>' → logprob: -8.892477989196777
    5. ')' → logprob: -9.267477989196777
    6. ',' → logprob: -9.392477989196777
    7. ' ' → logprob: -9.517477989196777
    8. '_' → logprob: -9.892477989196777
    9. '   ' → logprob: -10.017477989196777
    10. ' (' → logprob: -10.017477989196777

Token 220: ' one' (ID: 1001)
  Prédit: ' pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pr' → logprob: -0.35248225927352905
    2. 'pr' → logprob: -1.2274823188781738
    3. '(pr' → logprob: -5.727482318878174
    4. 'a' → logprob: -8.477481842041016
    5. ' a' → logprob: -8.727481842041016
    6. 'A' → logprob: -8.852481842041016
    7. '1' → logprob: -9.727481842041016
    8. ' ' → logprob: -10.352481842041016
    9. ' A' → logprob: -10.602481842041016
    10. ' (' → logprob: -10.977481842041016

Token 221: ' factor' (ID: 12332)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17651063203811646
    2. '_' → logprob: -2.8015105724334717
    3. '=' → logprob: -3.3015105724334717
    4. '_val' → logprob: -4.176510810852051
    5. '(' → logprob: -4.551510810852051
    6. ')' → logprob: -5.051510810852051
    7. '_value' → logprob: -5.426510810852051
    8. ' (' → logprob: -5.551510810852051
    9. ' ' → logprob: -5.801510810852051
    10. '_a' → logprob: -6.051510810852051

Token 222: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05951463803648949
    2. '=' → logprob: -3.0595145225524902
    3. '       ' → logprob: -4.55951452255249
    4. ',' → logprob: -8.934514999389648
    5. '        ' → logprob: -10.059514999389648
    6. '           ' → logprob: -10.809514999389648
    7. ' ' → logprob: -10.809514999389648
    8. '   ' → logprob: -10.809514999389648
    9. ' and' → logprob: -11.059514999389648
    10. ':' → logprob: -11.184514999389648

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49308761954307556
    2. ' =' → logprob: -0.993087649345398
    3. '=' → logprob: -4.4930877685546875
    4. ':' → logprob: -5.9930877685546875
    5. ',' → logprob: -6.2430877685546875
    6. '        
' → logprob: -7.8680877685546875
    7. ' and' → logprob: -8.368087768554688
    8. '*' → logprob: -8.493087768554688
    9. ')' → logprob: -8.618087768554688
    10. ' *' → logprob: -8.868087768554688

Token 224: ' val' (ID: 1459)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7384944558143616
    2. 'a' → logprob: -1.8634943962097168
    3. ' x' → logprob: -1.8634943962097168
    4. 'x' → logprob: -2.988494396209717
    5. ' val' → logprob: -3.113494396209717
    6. ' p' → logprob: -3.988494396209717
    7. ' l' → logprob: -4.113494396209717
    8. 'val' (adapté à ' val') → logprob: -4.488494396209717
    9. '       ' → logprob: -4.613494396209717
    10. ' =' → logprob: -5.113494396209717

Token 225: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012523902580142021
    2. '=' → logprob: -4.387524127960205
    3. ' ' → logprob: -11.637523651123047
    4. 's' → logprob: -13.262523651123047
    5. ',' → logprob: -13.387523651123047
    6. '   ' → logprob: -14.262523651123047
    7. ')' → logprob: -15.262523651123047
    8. ' =
' → logprob: -15.262523651123047
    9. '  ' → logprob: -15.887523651123047
    10. '    ' → logprob: -16.012523651123047

Token 226: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03805927932262421
    2. '=' → logprob: -3.2880592346191406
    3. ' ' → logprob: -11.16305923461914
    4. ',' → logprob: -13.03805923461914
    5. 's' → logprob: -14.66305923461914
    6. ')' → logprob: -15.53805923461914
    7. '   ' → logprob: -16.03805923461914
    8. 'val' → logprob: -16.16305923461914
    9. '1' → logprob: -16.28805923461914
    10. ' ' → logprob: -16.53805923461914

Token 227: ' pr' (ID: 550)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.04063618928194046
    2. ' pr' → logprob: -3.4156363010406494
    3. '(pr' → logprob: -5.04063606262207
    4. ' (' → logprob: -8.66563606262207
    5. 'math' → logprob: -9.16563606262207
    6. '   ' → logprob: -9.66563606262207
    7. '(' → logprob: -10.04063606262207
    8. 'l' → logprob: -10.29063606262207
    9. ' math' → logprob: -10.79063606262207
    10. ' ' → logprob: -11.04063606262207

Token 228: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.080963092041202e-06
    2. '[offset' → logprob: -12.875004768371582
    3. ' [' → logprob: -13.250004768371582
    4. '   ' → logprob: -16.1250057220459
    5. '[val' → logprob: -16.3750057220459
    6. '[
' → logprob: -16.6250057220459
    7. '```' → logprob: -16.7500057220459
    8. 'off' → logprob: -17.1250057220459
    9. '[-' → logprob: -17.5000057220459
    10. '\[' → logprob: -17.6250057220459

Token 229: 'off' (ID: 2864)
  Prédit: 'off'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.0009650575229898095
    2. ' off' → logprob: -7.000965118408203
    3. '[' → logprob: -10.250965118408203
    4. '(off' → logprob: -11.500965118408203
    5. 'offs' → logprob: -12.750965118408203
    6. 'offset' → logprob: -13.750965118408203
    7. '   ' → logprob: -13.875965118408203
    8. '
' → logprob: -13.875965118408203
    9. '_off' → logprob: -15.000965118408203
    10. '(' → logprob: -15.500965118408203

Token 230: '+B' (ID: 185895)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007391115068458021
    2. '+' → logprob: -8.625739097595215
    3. ' ]' → logprob: -8.625739097595215
    4. ']*' → logprob: -9.000739097595215
    5. ' +' → logprob: -9.125739097595215
    6. ' ' → logprob: -10.250739097595215
    7. '**' → logprob: -10.875739097595215
    8. '   ' → logprob: -11.000739097595215
    9. ']*(' → logprob: -11.125739097595215
    10. '*' → logprob: -11.875739097595215

Token 231: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006221305229701102
    2. ']*' → logprob: -8.000621795654297
    3. ' ]' → logprob: -8.625621795654297
    4. '-' → logprob: -10.250621795654297
    5. ']-' → logprob: -10.875621795654297
    6. ' -' → logprob: -11.500621795654297
    7. '])' → logprob: -11.875621795654297
    8. ']]' → logprob: -12.250621795654297
    9. '*' → logprob: -12.750621795654297
    10. ']
' → logprob: -12.875621795654297

Token 232: '       ' (ID: 309)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10892819613218307
    2. '*' → logprob: -2.4839282035827637
    3. '%' → logprob: -4.983928203582764
    4. ' %' → logprob: -5.108928203582764
    5. '<|end|>' → logprob: -6.483928203582764
    6. ' //' → logprob: -6.733928203582764
    7. ' ' → logprob: -6.858928203582764
    8. ' +' → logprob: -7.608928203582764
    9. '#' → logprob: -7.858928203582764
    10. '   ' → logprob: -7.858928203582764

Token 233: ' val' (ID: 1459)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.053859613835811615
    2. '1' → logprob: -3.3038597106933594
    3. ' =' → logprob: -4.803859710693359
    4. '=' → logprob: -4.928859710693359
    5. ' ' → logprob: -9.67885971069336
    6. ',' → logprob: -10.17885971069336
    7. ']' → logprob: -10.30385971069336
    8. '0' → logprob: -10.67885971069336
    9. '*' → logprob: -11.17885971069336
    10. '+' → logprob: -11.80385971069336

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018174059689044952
    2. '=' → logprob: -4.018174171447754
    3. ' ' → logprob: -11.143174171447754
    4. ' *' → logprob: -12.518174171447754
    5. '*' → logprob: -12.893174171447754
    6. ',' → logprob: -13.393174171447754
    7. ' *=' → logprob: -14.268174171447754
    8. '[' → logprob: -15.268174171447754
    9. ' =
' → logprob: -15.393174171447754
    10. ' ' → logprob: -15.518174171447754

Token 236: ' A' (ID: 355)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.5762151479721069
    2. ' pr' → logprob: -0.8262151479721069
    3. '(pr' → logprob: -9.451214790344238
    4. 'n' → logprob: -9.826214790344238
    5. 'val' → logprob: -10.576214790344238
    6. 'a' → logprob: -10.701214790344238
    7. ' val' → logprob: -11.326214790344238
    8. ' ' → logprob: -11.451214790344238
    9. ' n' → logprob: -11.701214790344238
    10. 'l' → logprob: -11.701214790344238

Token 237: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7419361472129822
    2. ' +' → logprob: -1.241936206817627
    3. ']' → logprob: -1.991936206817627
    4. '<|end|>' → logprob: -3.241936206817627
    5. ' =' → logprob: -3.866936206817627
    6. ' *' → logprob: -4.991936206817627
    7. ')' → logprob: -5.116936206817627
    8. ' ' → logprob: -5.366936206817627
    9. ',' → logprob: -5.491936206817627
    10. '*' → logprob: -5.741936206817627

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04142257198691368
    2. 'pr' → logprob: -3.6664226055145264
    3. 'n' → logprob: -5.291422367095947
    4. 'off' → logprob: -5.791422367095947
    5. '2' → logprob: -5.916422367095947
    6. ' ' → logprob: -6.541422367095947
    7. '3' → logprob: -6.541422367095947
    8. '+' → logprob: -8.041422843933105
    9. ' pr' → logprob: -8.041422843933105
    10. '0' → logprob: -8.166422843933105

Token 239: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09592682868242264
    2. '<|end|>' → logprob: -3.0959267616271973
    3. ' ' → logprob: -4.095926761627197
    4. ')' → logprob: -4.970926761627197
    5. ',' → logprob: -5.095926761627197
    6. '
' → logprob: -5.470926761627197
    7. ' 
' → logprob: -5.970926761627197
    8. '    
' → logprob: -5.970926761627197
    9. '<|end|>' → logprob: -6.470926761627197
    10. '  ' → logprob: -6.595926761627197

Token 241: ' val' (ID: 1459)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.908744215965271
    2. ' a' → logprob: -2.1587443351745605
    3. 'val' (adapté à ' val') → logprob: -2.1587443351745605
    4. ' if' → logprob: -2.4087443351745605
    5. ')' → logprob: -2.5337443351745605
    6. '<|end|>' → logprob: -2.5337443351745605
    7. ' ' → logprob: -2.7837443351745605
    8. ' val' → logprob: -2.7837443351745605
    9. '       ' → logprob: -2.9087443351745605
    10. ' 
' → logprob: -2.9087443351745605

Token 242: '_l' (ID: 1478)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19885216653347015
    2. '=' → logprob: -1.9488521814346313
    3. '1' → logprob: -3.323852062225342
    4. '3' → logprob: -6.948852062225342
    5. '2' → logprob: -7.948852062225342
    6. ' ' → logprob: -8.1988525390625
    7. '_' → logprob: -9.0738525390625
    8. ' =
' → logprob: -10.4488525390625
    9. 's' → logprob: -10.9488525390625
    10. '  ' → logprob: -11.0738525390625

Token 243: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.006701754406094551
    2. ' =' → logprob: -5.756701946258545
    3. '=' → logprob: -6.131701946258545
    4. 'c' → logprob: -7.381701946258545
    5. '1' → logprob: -8.006701469421387
    6. 'm' → logprob: -8.756701469421387
    7. '   ' → logprob: -9.506701469421387
    8. 'cms' → logprob: -9.631701469421387
    9. 'val' → logprob: -10.256701469421387
    10. 'l' → logprob: -11.131701469421387

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02054586075246334
    2. '=' → logprob: -3.8955459594726562
    3. ' ' → logprob: -12.645545959472656
    4. ' =
' → logprob: -15.145545959472656
    5. ',' → logprob: -15.395545959472656
    6. ')' → logprob: -17.020545959472656
    7. 's' → logprob: -17.145545959472656
    8. '1' → logprob: -17.270545959472656
    9. '<|end|>' → logprob: -17.270545959472656
    10. '  ' → logprob: -17.395545959472656

Token 245: ' (' (ID: 350)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.11477227509021759
    2. ' val' → logprob: -2.614772319793701
    3. '(val' → logprob: -3.739772319793701
    4. 'pr' → logprob: -5.114772319793701
    5. '(pr' → logprob: -5.739772319793701
    6. ' (' → logprob: -6.614772319793701
    7. 'math' → logprob: -7.864772319793701
    8. ' pr' → logprob: -8.864771842956543
    9. '(math' → logprob: -8.864771842956543
    10. '(' → logprob: -9.364771842956543

Token 246: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00044425477972254157
    2. ' val' → logprob: -8.125444412231445
    3. 'pr' → logprob: -9.125444412231445
    4. '(val' → logprob: -10.250444412231445
    5. '(pr' → logprob: -13.375444412231445
    6. 'math' → logprob: -14.125444412231445
    7. '(' → logprob: -14.500444412231445
    8. 'l' → logprob: -15.500444412231445
    9. '   ' → logprob: -15.625444412231445
    10. ' (' → logprob: -15.750444412231445

Token 247: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00731648551300168
    2. 'val' → logprob: -5.007316589355469
    3. '[val' → logprob: -7.882316589355469
    4. '2' → logprob: -8.757316589355469
    5. ' val' → logprob: -10.757316589355469
    6. '(val' → logprob: -11.632316589355469
    7. '[' → logprob: -11.757316589355469
    8. '_val' → logprob: -11.882316589355469
    9. 'l' → logprob: -11.882316589355469
    10. '```' → logprob: -12.757316589355469

Token 248: ' //' (ID: 602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1002098023891449
    2. '*' → logprob: -2.3502097129821777
    3. ' ' → logprob: -13.225210189819336
    4. ' *
' → logprob: -14.475210189819336
    5. '*(' → logprob: -15.600210189819336
    6. ' **' → logprob: -15.850210189819336
    7. '**' → logprob: -16.225210189819336
    8. '*
' → logprob: -16.850210189819336
    9. '*l' → logprob: -16.850210189819336
    10. '   ' → logprob: -17.100210189819336

Token 249: ' fractions' (ID: 110523)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.2047792226076126
    2. 'fra' → logprob: -1.7047792673110962
    3. ' math' → logprob: -5.954779148101807
    4. ' fractions' → logprob: -7.204779148101807
    5. ' ' → logprob: -11.454779624938965
    6. '(math' → logprob: -11.579779624938965
    7. '   ' → logprob: -13.829779624938965
    8. 'fr' → logprob: -14.204779624938965
    9. 'val' → logprob: -14.704779624938965
    10. 'g' → logprob: -14.829779624938965

Token 250: '.g' (ID: 1940)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.43411219120025635
    2. 'g' → logprob: -1.0591121912002563
    3. '   ' → logprob: -6.059112071990967
    4. 'fra' → logprob: -6.809112071990967
    5. ' gcd' → logprob: -7.184112071990967
    6. 'import' → logprob: -7.934112071990967
    7. ' math' → logprob: -8.059112548828125
    8. ' ' → logprob: -8.934112548828125
    9. '```' → logprob: -9.434112548828125
    10. ' fractions' → logprob: -10.059112548828125

Token 251: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.008576866239309311
    2. 'math' → logprob: -4.8835768699646
    3. 'c' → logprob: -8.133576393127441
    4. 'g' → logprob: -8.133576393127441
    5. 'cf' → logprob: -9.383576393127441
    6. '```' → logprob: -10.008576393127441
    7. 'e' → logprob: -10.383576393127441
    8. 'cm' → logprob: -10.508576393127441
    9. 'reat' → logprob: -10.633576393127441
    10. 'def' → logprob: -10.758576393127441

Token 252: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.062035467475652695
    2. 'val' → logprob: -3.43703556060791
    3. ' val' → logprob: -4.31203556060791
    4. ',val' → logprob: -5.56203556060791
    5. '[val' → logprob: -5.68703556060791
    6. ')' → logprob: -5.68703556060791
    7. '(pr' → logprob: -6.31203556060791
    8. ' (' → logprob: -6.43703556060791
    9. '(' → logprob: -8.43703556060791
    10. ',' → logprob: -8.68703556060791

Token 253: '2' (ID: 17)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7641175389289856
    2. '(val' → logprob: -1.1391174793243408
    3. '2' → logprob: -1.7641174793243408
    4. '[val' → logprob: -4.38911771774292
    5. ')' → logprob: -4.63911771774292
    6. '1' → logprob: -5.51411771774292
    7. ' val' → logprob: -5.51411771774292
    8. 'a' → logprob: -5.88911771774292
    9. '_val' → logprob: -6.01411771774292
    10. ',val' → logprob: -6.13911771774292

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28926366567611694
    2. ',val' → logprob: -1.4142637252807617
    3. ' ,' → logprob: -4.914263725280762
    4. 'val' → logprob: -7.539263725280762
    5. ' val' → logprob: -8.664263725280762
    6. '(val' → logprob: -11.039263725280762
    7. '[val' → logprob: -11.539263725280762
    8. ',
' → logprob: -12.414263725280762
    9. '),' → logprob: -14.289263725280762
    10. '[' → logprob: -14.539263725280762

Token 255: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.014320511370897293
    2. ' val' → logprob: -4.264320373535156
    3. 'pr' → logprob: -8.764320373535156
    4. '[val' → logprob: -14.764320373535156
    5. ' pr' → logprob: -15.139320373535156
    6. '(val' → logprob: -16.264320373535156
    7. ',val' → logprob: -17.639320373535156
    8. '	val' → logprob: -17.889320373535156
    9. '[' → logprob: -18.139320373535156
    10. ' ' → logprob: -18.514320373535156

Token 256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015703336102887988
    2. '2' → logprob: -6.876570224761963
    3. '[' → logprob: -7.751570224761963
    4. 'val' → logprob: -10.126570701599121
    5. '_l' → logprob: -11.376570701599121
    6. 'l' → logprob: -11.626570701599121
    7. '   ' → logprob: -11.751570701599121
    8. '[l' → logprob: -11.876570701599121
    9. '[val' → logprob: -12.376570701599121
    10. '[i' → logprob: -12.751570701599121

Token 257: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01275060698390007
    2. ' )' → logprob: -5.012750625610352
    3. ')*' → logprob: -5.262750625610352
    4. '))' → logprob: -7.637750625610352
    5. '[' → logprob: -9.512750625610352
    6. 'val' → logprob: -9.887750625610352
    7. '[val' → logprob: -10.137750625610352
    8. ' val' → logprob: -10.387750625610352
    9. '.val' → logprob: -10.512750625610352
    10. '*' → logprob: -10.637750625610352

Token 258: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06997844576835632
    2. '*' → logprob: -2.6949784755706787
    3. ')*' → logprob: -10.944978713989258
    4. ')' → logprob: -11.569978713989258
    5. '<|end|>' → logprob: -12.319978713989258
    6. '[val' → logprob: -12.819978713989258
    7. '[' → logprob: -12.944978713989258
    8. ' *
' → logprob: -13.444978713989258
    9. ' ' → logprob: -14.194978713989258
    10. 'val' → logprob: -14.569978713989258

Token 259: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0007104054093360901
    2. ' val' → logprob: -7.250710487365723
    3. 'pr' → logprob: -14.875710487365723
    4. '	val' → logprob: -17.250709533691406
    5. '(val' → logprob: -18.250709533691406
    6. '[val' → logprob: -18.250709533691406
    7. '_val' → logprob: -20.000709533691406
    8. '.val' → logprob: -20.625709533691406
    9. ',val' → logprob: -20.625709533691406
    10. ' ' → logprob: -20.750709533691406

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1054253011243418e-05
    2. '_l' → logprob: -11.375020980834961
    3. 'val' → logprob: -12.625020980834961
    4. '[' → logprob: -12.625020980834961
    5. '[val' → logprob: -13.750020980834961
    6. '```' → logprob: -14.125020980834961
    7. 'l' → logprob: -14.875020980834961
    8. '_' → logprob: -15.250020980834961
    9. '2' → logprob: -15.375020980834961
    10. '_val' → logprob: -16.75002098083496

Token 261: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08950750529766083
    2. '<|end|>' → logprob: -3.089507579803467
    3. ')' → logprob: -3.339507579803467
    4. ' )' → logprob: -6.214507579803467
    5. ' 
' → logprob: -7.464507579803467
    6. '[' → logprob: -8.214507102966309
    7. '   ' → logprob: -8.464507102966309
    8. '  ' → logprob: -8.464507102966309
    9. ' ]' → logprob: -8.714507102966309
    10. '    ' → logprob: -8.964507102966309

Token 264: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.6789137084269896e-05
    2. '[' → logprob: -10.37503719329834
    3. '[j' → logprob: -13.25003719329834
    4. '[I' → logprob: -13.37503719329834
    5. '[a' → logprob: -13.75003719329834
    6. 'i' → logprob: -15.37503719329834
    7. '\[' → logprob: -15.87503719329834
    8. '```' → logprob: -16.125036239624023
    9. '<|end|>' → logprob: -16.125036239624023
    10. '[int' → logprob: -16.500036239624023

Token 265: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00010354319238103926
    2. '[j' → logprob: -9.625103950500488
    3. ']' → logprob: -10.375103950500488
    4. ' ][' → logprob: -13.250103950500488
    5. ']][' → logprob: -13.250103950500488
    6. '"][' → logprob: -14.000103950500488
    7. '[' → logprob: -14.250103950500488
    8. '<|end|>' → logprob: -14.875103950500488
    9. ''][' → logprob: -15.500103950500488
    10. '()][' → logprob: -16.000102996826172

Token 266: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.4974866644479334e-05
    2. ' j' → logprob: -11.125015258789062
    3. '	j' → logprob: -16.500015258789062
    4. ']' → logprob: -17.625015258789062
    5. '   ' → logprob: -17.625015258789062
    6. ',j' → logprob: -18.125015258789062
    7. '[j' → logprob: -18.125015258789062
    8. '
' → logprob: -18.625015258789062
    9. '    ' → logprob: -19.000015258789062
    10. ' ' → logprob: -19.125015258789062

Token 267: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00424389261752367
    2. '=' → logprob: -6.629243850708008
    3. ' ]' → logprob: -6.754243850708008
    4. ']=' → logprob: -6.879243850708008
    5. ' =' → logprob: -7.254243850708008
    6. ')' → logprob: -11.504243850708008
    7. '<|end|>' → logprob: -14.004243850708008
    8. ')=' → logprob: -16.254243850708008
    9. ')]' → logprob: -16.254243850708008
    10. ' ' → logprob: -16.504243850708008

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759398937225342
    2. ' =' → logprob: -0.8259398937225342
    3. ' ' → logprob: -15.200940132141113
    4. ',' → logprob: -17.075939178466797
    5. '=int' → logprob: -17.075939178466797
    6. '＝' → logprob: -17.325939178466797
    7. ')' → logprob: -18.075939178466797
    8. ' =)' → logprob: -18.325939178466797
    9. '=random' → logprob: -18.450939178466797
    10. '=

' → logprob: -18.575939178466797

Token 269: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0020553350914269686
    2. ' val' → logprob: -6.2520551681518555
    3. 'pr' → logprob: -9.002055168151855
    4. 'random' → logprob: -13.502055168151855
    5. '(val' → logprob: -14.127055168151855
    6. 'int' → logprob: -15.002055168151855
    7. ' pr' → logprob: -15.252055168151855
    8. '1' → logprob: -15.877055168151855
    9. '[val' → logprob: -15.877055168151855
    10. 'l' → logprob: -16.377056121826172

Token 270: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0010411443654447794
    2. '1' → logprob: -6.876040935516357
    3. 'a' → logprob: -12.751041412353516
    4. '2' → logprob: -13.376041412353516
    5. 'l' → logprob: -14.001041412353516
    6. '```' → logprob: -14.001041412353516
    7. '[' → logprob: -14.251041412353516
    8. ')' → logprob: -15.001041412353516
    9. '_a' → logprob: -15.501041412353516
    10. '   ' → logprob: -16.001041412353516

Token 271: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -2.47495681833243e-05
    2. 'c' → logprob: -10.875024795532227
    3. 'm' → logprob: -12.375024795532227
    4. ' cm' → logprob: -14.125024795532227
    5. 'cms' → logprob: -15.125024795532227
    6. 'sm' → logprob: -16.375024795532227
    7. '1' → logprob: -17.250024795532227
    8. '_cm' → logprob: -17.250024795532227
    9. '```' → logprob: -17.250024795532227
    10. 'mc' → logprob: -17.500024795532227

Token 272: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 275: ' a' (ID: 261)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1573255062103271
    2. 'a' → logprob: -1.9073255062103271
    3. '(i' → logprob: -1.9073255062103271
    4. '(' → logprob: -2.407325506210327
    5. '(a' → logprob: -2.407325506210327
    6. 'val' → logprob: -2.532325506210327
    7. ' a' → logprob: -3.032325506210327
    8. ' val' → logprob: -3.782325506210327
    9. 'i' → logprob: -4.407325744628906
    10. ' i' → logprob: -4.657325744628906

Token 276: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.77627644513268e-06
    2. '[' → logprob: -12.000008583068848
    3. '[I' → logprob: -13.500008583068848
    4. '[a' → logprob: -14.375008583068848
    5. '[j' → logprob: -15.000008583068848
    6. 'i' → logprob: -16.875009536743164
    7. '```' → logprob: -16.875009536743164
    8. '<|end|>' → logprob: -17.625009536743164
    9. 'a' → logprob: -17.750009536743164
    10. ' [' → logprob: -17.875009536743164

Token 277: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.22640055418014526
    2. '][' → logprob: -1.60140061378479
    3. '[j' → logprob: -7.351400375366211
    4. '[' → logprob: -8.476400375366211
    5. ']' → logprob: -10.226400375366211
    6. 'i' → logprob: -10.476400375366211
    7. ')[' → logprob: -11.351400375366211
    8. '[I' → logprob: -11.476400375366211
    9. '}[' → logprob: -11.976400375366211
    10. '[a' → logprob: -12.351400375366211

Token 278: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.4121114822482923e-06
    2. 'i' → logprob: -13.250003814697266
    3. ' j' → logprob: -14.250003814697266
    4. '[j' → logprob: -15.000003814697266
    5. '][' → logprob: -15.125003814697266
    6. '[' → logprob: -15.500003814697266
    7. '```' → logprob: -16.250003814697266
    8. ']' → logprob: -17.125003814697266
    9. '   ' → logprob: -18.125003814697266
    10. ' ' → logprob: -18.375003814697266

Token 279: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6018743515014648
    2. ' >' → logprob: -1.4768743515014648
    3. ' %' → logprob: -2.851874351501465
    4. '%' → logprob: -2.851874351501465
    5. ' ==' → logprob: -3.101874351501465
    6. '>' → logprob: -3.601874351501465
    7. ' ' → logprob: -4.351874351501465
    8. '==' → logprob: -4.726874351501465
    9. '<|end|>' → logprob: -5.101874351501465
    10. ' !=' → logprob: -6.351874351501465

Token 280: ' in' (ID: 306)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09475318342447281
    2. ' %' → logprob: -3.4697532653808594
    3. '>' → logprob: -4.219753265380859
    4. ' ' → logprob: -4.219753265380859
    5. '%' → logprob: -4.344753265380859
    6. ' ==' → logprob: -4.719753265380859
    7. '<|end|>' → logprob: -6.344753265380859
    8. ' not' → logprob: -6.594753265380859
    9. '==' → logprob: -6.719753265380859
    10. ' >=' → logprob: -6.969753265380859

Token 281: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.01814994215965271
    2. ' used' → logprob: -4.0181498527526855
    3. '.used' → logprob: -16.643150329589844
    4. 'Used' → logprob: -18.393150329589844
    5. '   ' → logprob: -18.518150329589844
    6. 'ed' → logprob: -18.643150329589844
    7. 'unused' → logprob: -19.393150329589844
    8. '_used' → logprob: -19.518150329589844
    9. 'a' → logprob: -19.643150329589844
    10. '  ' → logprob: -19.643150329589844

Token 282: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034269928000867367
    2. ':
' → logprob: -5.753427028656006
    3. ':return' → logprob: -9.628426551818848
    4. ' or' → logprob: -9.878426551818848
    5. ' :' → logprob: -10.128426551818848
    6. '<|end|>' → logprob: -10.878426551818848
    7. '):' → logprob: -11.003426551818848
    8. '   ' → logprob: -11.628426551818848
    9. ' and' → logprob: -11.878426551818848
    10. '():' → logprob: -11.878426551818848

Token 283: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04501395672559738
    2. ' continue' → logprob: -3.295013904571533
    3. 'continue' → logprob: -5.420013904571533
    4. ' break' → logprob: -6.295013904571533
    5. '       ' → logprob: -8.045014381408691
    6. ' used' → logprob: -9.045014381408691
    7. 'break' → logprob: -9.795014381408691
    8. '   ' → logprob: -9.920014381408691
    9. '
' → logprob: -10.045014381408691
    10. '```' → logprob: -10.170014381408691

Token 284: ' print' (ID: 2123)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.053090523928403854
    2. '           ' → logprob: -3.8030905723571777
    3. 'break' → logprob: -4.053090572357178
    4. ' continue' → logprob: -5.678090572357178
    5. ' raise' → logprob: -6.053090572357178
    6. ' off' → logprob: -6.303090572357178
    7. '       ' → logprob: -7.053090572357178
    8. ' a' → logprob: -7.428090572357178
    9. ' val' → logprob: -7.428090572357178
    10. 'continue' → logprob: -7.678090572357178

Token 285: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.25108420848846436
    2. '(' → logprob: -1.6260842084884644
    3. '('' → logprob: -3.751084327697754
    4. '()' → logprob: -7.001084327697754
    5. '(i' → logprob: -7.876084327697754
    6. '(-' → logprob: -7.876084327697754
    7. '(a' → logprob: -9.876084327697754
    8. ' ("' → logprob: -10.251084327697754
    9. '(
' → logprob: -10.501084327697754
    10. ' (' → logprob: -11.001084327697754

Token 286: '101' (ID: 7959)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4924606382846832
    2. '"' → logprob: -0.9924606084823608
    3. '"No' → logprob: -4.36746072769165
    4. '"A' → logprob: -6.74246072769165
    5. '-A' → logprob: -7.36746072769165
    6. '-i' → logprob: -7.36746072769165
    7. '0' → logprob: -7.49246072769165
    8. 'a' → logprob: -7.74246072769165
    9. 'i' → logprob: -7.86746072769165
    10. ''' → logprob: -7.99246072769165

Token 287: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3205901086330414
    2. ')
' → logprob: -1.3205901384353638
    3. '0' → logprob: -5.695590019226074
    4. ' )' → logprob: -6.570590019226074
    5. ' )
' → logprob: -6.945590019226074
    6. '9' → logprob: -7.445590019226074
    7. '
' → logprob: -7.820590019226074
    8. ',' → logprob: -9.320590019226074
    9. '000' → logprob: -9.945590019226074
    10. ' ' → logprob: -10.320590019226074

Token 288: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1525778770446777
    2. 'i' → logprob: -1.5275778770446777
    3. 'exit' → logprob: -1.7775778770446777
    4. 'a' → logprob: -2.2775778770446777
    5. 'flush' → logprob: -2.6525778770446777
    6. 'end' → logprob: -3.1525778770446777
    7. 'val' → logprob: -3.5275778770446777
    8. ')' → logprob: -3.6525778770446777
    9. '"' → logprob: -4.277577877044678
    10. ' ' → logprob: -5.902577877044678

Token 289: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0041991365142166615
    2. '[' → logprob: -5.629199028015137
    3. ')' → logprob: -8.004199028015137
    4. '[j' → logprob: -8.629199028015137
    5. '[
' → logprob: -10.754199028015137
    6. ',' → logprob: -10.879199028015137
    7. 'i' → logprob: -11.254199028015137
    8. ')
' → logprob: -11.879199028015137
    9. 'a' → logprob: -12.754199028015137
    10. ',i' → logprob: -12.879199028015137

Token 290: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.024175195023417473
    2. '[j' → logprob: -4.27417516708374
    3. '[i' → logprob: -4.64917516708374
    4. '[' → logprob: -8.649175643920898
    5. ']' → logprob: -8.774175643920898
    6. ' ][' → logprob: -11.524175643920898
    7. ')[' → logprob: -11.899175643920898
    8. 'i' → logprob: -12.274175643920898
    9. '   ' → logprob: -12.274175643920898
    10. '
' → logprob: -12.524175643920898

Token 291: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0014499947428703308
    2. 'i' → logprob: -6.626450061798096
    3. '[j' → logprob: -10.126449584960938
    4. ']' → logprob: -10.501449584960938
    5. '[i' → logprob: -11.876449584960938
    6. '][' → logprob: -12.001449584960938
    7. ' j' → logprob: -12.126449584960938
    8. '0' → logprob: -12.376449584960938
    9. '])' → logprob: -12.751449584960938
    10. '
' → logprob: -12.751449584960938

Token 292: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04311497136950493
    2. ')' → logprob: -3.1681149005889893
    3. ')
' → logprob: -9.66811466217041
    4. ' )
' → logprob: -10.79311466217041
    5. ',' → logprob: -11.04311466217041
    6. ');' → logprob: -12.29311466217041
    7. '   ' → logprob: -12.41811466217041
    8. ')`
' → logprob: -12.79311466217041
    9. ' )' → logprob: -13.79311466217041
    10. ')

' → logprob: -14.04311466217041

Token 293: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: ' raise' (ID: 9338)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.3760497570037842
    2. 'break' → logprob: -2.251049757003784
    3. '           ' → logprob: -2.376049757003784
    4. ' exit' → logprob: -2.876049757003784
    5. ' break' → logprob: -2.876049757003784
    6. '            
' → logprob: -7.126049995422363
    7. '0' → logprob: -7.251049995422363
    8. 'raise' (adapté à ' raise') → logprob: -8.626049995422363
    9. 'print' → logprob: -8.751049995422363
    10. '       ' → logprob: -9.126049995422363

Token 295: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.47598668932914734
    2. 'Exception' → logprob: -1.2259867191314697
    3. 'Runtime' → logprob: -2.8509867191314697
    4. ' Exception' → logprob: -4.725986480712891
    5. ' Value' → logprob: -4.975986480712891
    6. ' Runtime' → logprob: -5.475986480712891
    7. 'Assertion' → logprob: -5.475986480712891
    8. 'System' → logprob: -6.600986480712891
    9. ' Assertion' → logprob: -7.225986480712891
    10. 'Stop' → logprob: -7.475986480712891

Token 296: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.5451681974809617e-05
    2. 'rror' → logprob: -11.125015258789062
    3. 'Value' → logprob: -15.500015258789062
    4. 'Exception' → logprob: -15.875015258789062
    5. '_error' → logprob: -16.375015258789062
    6. ' Error' → logprob: -16.625015258789062
    7. ' ' → logprob: -17.375015258789062
    8. 'error' → logprob: -17.500015258789062
    9. '	Error' → logprob: -17.500015258789062
    10. 'Index' → logprob: -17.750015258789062

Token 297: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22849240899085999
    2. '       ' → logprob: -2.353492498397827
    3. '(' → logprob: -3.353492498397827
    4. ')' → logprob: -3.603492498397827
    5. '()
' → logprob: -4.103492259979248
    6. '<|end|>' → logprob: -4.228492259979248
    7. '   ' → logprob: -5.228492259979248
    8. ',' → logprob: -5.603492259979248
    9. '(
' → logprob: -6.353492259979248
    10. 'else' → logprob: -7.228492259979248

Token 298: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.692439079284668
    2. '(' → logprob: -1.442439079284668
    3. ',' → logprob: -1.692439079284668
    4. '<|end|>' → logprob: -3.567439079284668
    5. 'import' → logprob: -4.817439079284668
    6. '-' → logprob: -4.942439079284668
    7. '()' → logprob: -5.317439079284668
    8. '(
' → logprob: -5.817439079284668
    9. 'fra' → logprob: -6.067439079284668
    10. '+' → logprob: -6.067439079284668

Token 299: ' used' (ID: 2061)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6807069182395935
    2. 'used' (adapté à ' used') → logprob: -1.1807069778442383
    3. ' used' → logprob: -1.6807069778442383
    4. '   ' → logprob: -8.055706977844238
    5. '<|end|>' → logprob: -10.430706977844238
    6. '
' → logprob: -10.805706977844238
    7. '        
' → logprob: -10.805706977844238
    8. '           ' → logprob: -11.305706977844238
    9. '.used' → logprob: -11.430706977844238
    10. 'else' → logprob: -11.930706977844238

Token 300: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.008615754544734955
    2. '.' → logprob: -4.758615970611572
    3. '.update' → logprob: -14.508615493774414
    4. '.setdefault' → logprob: -15.258615493774414
    5. ' .' → logprob: -15.758615493774414
    6. '.insert' → logprob: -16.758615493774414
    7. 'add' → logprob: -16.758615493774414
    8. '.Add' → logprob: -16.883615493774414
    9. ').' → logprob: -17.508615493774414
    10. '.remove' → logprob: -17.633615493774414

Token 301: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0009120595059357584
    2. '(' → logprob: -7.000912189483643
    3. '((' → logprob: -15.250911712646484
    4. '(val' → logprob: -15.500911712646484
    5. 'a' → logprob: -17.000911712646484
    6. '(A' → logprob: -17.875911712646484
    7. '(i' → logprob: -18.500911712646484
    8. '(
' → logprob: -18.625911712646484
    9. ' (' → logprob: -19.500911712646484
    10. '(value' → logprob: -19.750911712646484

Token 302: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.500000953674316
    3. '[j' → logprob: -16.375
    4. '(i' → logprob: -17.5
    5. 'i' → logprob: -18.0
    6. 'a' → logprob: -18.875
    7. '```' → logprob: -18.875
    8. '
' → logprob: -19.0
    9. ')' → logprob: -19.25
    10. '[(' → logprob: -19.625

Token 303: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.35206305980682373
    2. '[i' → logprob: -1.6020630598068237
    3. '[j' → logprob: -2.3520631790161133
    4. ']' → logprob: -10.102063179016113
    5. '[' → logprob: -10.477063179016113
    6. ')[' → logprob: -11.602063179016113
    7. '}[' → logprob: -11.977063179016113
    8. '(i' → logprob: -12.102063179016113
    9. ' ][' → logprob: -12.852063179016113
    10. '
' → logprob: -12.852063179016113

Token 304: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00017243190086446702
    2. 'i' → logprob: -8.87517261505127
    3. '[j' → logprob: -10.62517261505127
    4. '[i' → logprob: -12.12517261505127
    5. '
' → logprob: -14.25017261505127
    6. '```' → logprob: -14.37517261505127
    7. ' j' → logprob: -15.00017261505127
    8. ']' → logprob: -15.12517261505127
    9. '
' → logprob: -15.25017261505127
    10. 'ij' → logprob: -15.37517261505127

Token 305: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7120533811976202e-05
    2. '])' → logprob: -11.375017166137695
    3. ')
' → logprob: -12.500017166137695
    4. '})' → logprob: -14.000017166137695
    5. '))' → logprob: -15.125017166137695
    6. ']' → logprob: -15.750017166137695
    7. ')}' → logprob: -16.000017166137695
    8. '}' → logprob: -16.250017166137695
    9. ')])' → logprob: -16.250017166137695
    10. ' )' → logprob: -16.500017166137695

Token 306: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37816667556762695
    2. '(' → logprob: -1.253166675567627
    3. 'import' → logprob: -5.253166675567627
    4. '<|end|>' → logprob: -5.378166675567627
    5. ' ' → logprob: -5.878166675567627
    6. ',' → logprob: -5.878166675567627
    7. '()' → logprob: -6.128166675567627
    8. '[' → logprob: -6.128166675567627
    9. '=' → logprob: -6.753166675567627
    10. '+' → logprob: -6.753166675567627

Token 307: ' ij' (ID: 38172)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1015499010682106
    2. 'i' → logprob: -2.3515498638153076
    3. ' j' → logprob: -7.476550102233887
    4. ' ' → logprob: -8.226550102233887
    5. 'j' → logprob: -8.351550102233887
    6. ' (' → logprob: -9.476550102233887
    7. ' ij' → logprob: -10.101550102233887
    8. '_' → logprob: -10.976550102233887
    9. '	i' → logprob: -11.039050102233887
    10. '(i' → logprob: -11.226550102233887

Token 308: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0889458954334259
    2. 'in' → logprob: -2.4639458656311035
    3. 'import' → logprob: -13.588946342468262
    4. '	in' → logprob: -13.963946342468262
    5. 'not' → logprob: -14.088946342468262
    6. '   ' → logprob: -14.213946342468262
    7. ' ' → logprob: -14.338946342468262
    8. '  ' → logprob: -14.338946342468262
    9. 'inth' → logprob: -15.588946342468262
    10. 's' → logprob: -15.713946342468262

Token 309: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.10032495856285095
    2. ' lst' → logprob: -2.350324869155884
    3. '[(' → logprob: -9.475324630737305
    4. 'range' → logprob: -10.975324630737305
    5. '(lst' → logprob: -11.850324630737305
    6. ' [(' → logprob: -11.975324630737305
    7. ' range' → logprob: -12.600324630737305
    8. ' ' → logprob: -12.975324630737305
    9. 'list' → logprob: -13.850324630737305
    10. '[]' → logprob: -14.225324630737305

Token 310: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022574295289814472
    2. ':
' → logprob: -6.127257347106934
    3. '<|end|>' → logprob: -10.627257347106934
    4. '=' → logprob: -11.377257347106934
    5. 'in' → logprob: -12.002257347106934
    6. ' in' → logprob: -12.127257347106934
    7. ',' → logprob: -12.377257347106934
    8. ':

' → logprob: -12.502257347106934
    9. ' =' → logprob: -13.002257347106934
    10. 's' → logprob: -13.002257347106934

Token 311: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5538436770439148
    2. '   ' → logprob: -1.0538437366485596
    3. 'i' → logprob: -2.6788437366485596
    4. ' ' → logprob: -5.1788434982299805
    5. '  ' → logprob: -6.5538434982299805
    6. '<|end|>' → logprob: -8.05384349822998
    7. '  
' → logprob: -8.55384349822998
    8. '	i' → logprob: -9.30384349822998
    9. '    
' → logprob: -9.42884349822998
    10. ' 
' → logprob: -9.55384349822998

Token 312: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.004087066277861595
    2. ' i' → logprob: -5.504086971282959
    3. '   ' → logprob: -11.754087448120117
    4. '(i' → logprob: -15.254087448120117
    5. '	i' → logprob: -15.379087448120117
    6. '  ' → logprob: -15.504087448120117
    7. ' ' → logprob: -16.879087448120117
    8. ' (' → logprob: -17.504087448120117
    9. '[i' → logprob: -18.004087448120117
    10. 'I' → logprob: -18.379087448120117

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003010233340319246
    2. ',j' → logprob: -8.125301361083984
    3. '[' → logprob: -13.125301361083984
    4. ' ,' → logprob: -13.250301361083984
    5. ',
' → logprob: -14.750301361083984
    6. '<|end|>' → logprob: -15.375301361083984
    7. ',i' → logprob: -16.000301361083984
    8. '=' → logprob: -16.250301361083984
    9. '   ' → logprob: -16.500301361083984
    10. '‌,' → logprob: -16.875301361083984

Token 314: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03804149478673935
    2. ' j' → logprob: -3.288041591644287
    3. '	j' → logprob: -17.288042068481445
    4. ',j' → logprob: -17.663042068481445
    5. '$j' → logprob: -18.038042068481445
    6. ' ' → logprob: -18.663042068481445
    7. '<|end|>' → logprob: -19.538042068481445
    8. 'i' → logprob: -20.038042068481445
    9. ' ' → logprob: -20.538042068481445
    10. '_j' → logprob: -20.663042068481445

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47425079345703125
    2. '=' → logprob: -0.9742507934570312
    3. ',' → logprob: -8.724250793457031
    4. ':' → logprob: -12.349250793457031
    5. '   ' → logprob: -12.724250793457031
    6. '=
' → logprob: -14.474250793457031
    7. ' in' → logprob: -14.599250793457031
    8. ' ' → logprob: -14.849250793457031
    9. '=i' → logprob: -14.849250793457031
    10. ')' → logprob: -15.099250793457031

Token 316: ' ij' (ID: 38172)
  Prédit: 'ij'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ij' → logprob: -0.08900315314531326
    2. ' ij' → logprob: -2.464003086090088
    3. 'ijn' → logprob: -10.089003562927246
    4. ' ' → logprob: -12.214003562927246
    5. 'ijf' → logprob: -12.589003562927246
    6. 'ijk' → logprob: -12.714003562927246
    7. '   ' → logprob: -13.214003562927246
    8. 'ijkl' → logprob: -13.339003562927246
    9. 'ijd' → logprob: -13.589003562927246
    10. '(' → logprob: -13.964003562927246

Token 317: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6217160820960999
    2. '   ' → logprob: -1.246716022491455
    3. ':
' → logprob: -1.746716022491455
    4. ' if' → logprob: -7.121716022491455
    5. '       ' → logprob: -9.371716499328613
    6. ',' → logprob: -9.371716499328613
    7. 'if' → logprob: -9.621716499328613
    8. '<|end|>' → logprob: -10.246716499328613
    9. '[' → logprob: -10.746716499328613
    10. '    
' → logprob: -11.121716499328613

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008434568881057203
    2. 'if' → logprob: -7.500843524932861
    3. ' if' → logprob: -8.250843048095703
    4. '       ' → logprob: -11.125843048095703
    5. '<|end|>' → logprob: -12.250843048095703
    6. '	if' → logprob: -13.125843048095703
    7. '    
' → logprob: -13.375843048095703
    8. ' ' → logprob: -13.625843048095703
    9. ':' → logprob: -13.625843048095703
    10. ',' → logprob: -14.000843048095703

Token 319: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9561316967010498
    2. 'else' → logprob: -1.0811316967010498
    3. 'if' (adapté à ' if') → logprob: -1.5811316967010498
    4. ' if' → logprob: -3.08113169670105
    5. ' else' → logprob: -3.70613169670105
    6. 'elif' → logprob: -9.081131935119629
    7. '       ' → logprob: -10.581131935119629
    8. ' ' → logprob: -11.831131935119629
    9. '	if' → logprob: -11.831131935119629
    10. '    ' → logprob: -11.956131935119629

Token 320: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06201798468828201
    2. '(i' → logprob: -2.8120179176330566
    3. '(a' → logprob: -10.687018394470215
    4. ' ' → logprob: -10.812018394470215
    5. '(j' → logprob: -12.687018394470215
    6. '(' → logprob: -13.687018394470215
    7. '(not' → logprob: -14.062018394470215
    8. '   ' → logprob: -14.437018394470215
    9. '(I' → logprob: -14.687018394470215
    10. ' not' → logprob: -14.812018394470215

Token 321: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.04940406605601311
    2. 'i' → logprob: -3.0494041442871094
    3. ' i' → logprob: -7.924404144287109
    4. '   ' → logprob: -8.42440414428711
    5. ' (' → logprob: -8.54940414428711
    6. '(' → logprob: -11.04940414428711
    7. '  ' → logprob: -12.17440414428711
    8. ' ' → logprob: -12.17440414428711
    9. '[i' → logprob: -12.29940414428711
    10. ')' → logprob: -12.42440414428711

Token 322: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06864995509386063
    2. '+j' → logprob: -3.193650007247925
    3. ' +' → logprob: -3.693650007247925
    4. '[' → logprob: -8.318650245666504
    5. '[j' → logprob: -8.818650245666504
    6. ')' → logprob: -11.318650245666504
    7. '+i' → logprob: -11.693650245666504
    8. ' ' → logprob: -11.693650245666504
    9. '   ' → logprob: -12.068650245666504
    10. '+
' → logprob: -12.443650245666504

Token 323: ' j' (ID: 441)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033581978641450405
    2. 'j' → logprob: -8.375335693359375
    3. ' ' → logprob: -9.250335693359375
    4. '   ' → logprob: -12.125335693359375
    5. '2' → logprob: -13.625335693359375
    6. ' j' → logprob: -13.625335693359375
    7. '```' → logprob: -14.875335693359375
    8. ')' → logprob: -15.125335693359375
    9. '0' → logprob: -15.250335693359375
    10. '[j' → logprob: -16.250335693359375

Token 324: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.874882430769503e-05
    2. '%' → logprob: -9.875079154968262
    3. ')%' → logprob: -10.625079154968262
    4. ' )' → logprob: -13.625079154968262
    5. '()' → logprob: -14.625079154968262
    6. '+' → logprob: -14.750079154968262
    7. ']' → logprob: -15.500079154968262
    8. ')
' → logprob: -15.875079154968262
    9. '```' → logprob: -16.375078201293945
    10. '%)' → logprob: -16.375078201293945

Token 325: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.007612066809087992
    2. ' %' → logprob: -4.882612228393555
    3. ')' → logprob: -12.507612228393555
    4. '!=' → logprob: -14.132612228393555
    5. '%
' → logprob: -14.757612228393555
    6. ' ' → logprob: -14.882612228393555
    7. '```' → logprob: -15.507612228393555
    8. '[' → logprob: -16.007612228393555
    9. ')%' → logprob: -16.007612228393555
    10. '1' → logprob: -16.007612228393555

Token 326: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3176068961620331
    2. '1' → logprob: -1.3176069259643555
    3. ' ' → logprob: -5.4426069259643555
    4. '!=' → logprob: -12.567606925964355
    5. '```' → logprob: -13.692606925964355
    6. ' !=' → logprob: -14.317606925964355
    7. '   ' → logprob: -14.317606925964355
    8. '0' → logprob: -15.067606925964355
    9. '!' → logprob: -15.317606925964355
    10. '[' → logprob: -15.880106925964355

Token 327: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02325398102402687
    2. '2' → logprob: -3.773253917694092
    3. ' ' → logprob: -11.89825439453125
    4. '0' → logprob: -14.14825439453125
    5. '!=' → logprob: -14.27325439453125
    6. '```' → logprob: -15.52325439453125
    7. '   ' → logprob: -16.89825439453125
    8. ' !=' → logprob: -17.02325439453125
    9. '!' → logprob: -17.21075439453125
    10. '==' → logprob: -17.33575439453125

Token 328: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6991117000579834
    2. ' !=' → logprob: -1.1991117000579834
    3. '==' → logprob: -1.8241117000579834
    4. ' ==' → logprob: -3.3241117000579834
    5. '1' → logprob: -5.5741119384765625
    6. '```' → logprob: -8.574111938476562
    7. ':' → logprob: -9.824111938476562
    8. ' ' → logprob: -10.699111938476562
    9. 'else' → logprob: -10.949111938476562
    10. '()!=' → logprob: -10.949111938476562

Token 329: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004892880679108202
    2. ' ' → logprob: -7.625489234924316
    3. '0' → logprob: -13.750489234924316
    4. '!=' → logprob: -17.250490188598633
    5. '   ' → logprob: -17.500490188598633
    6. '```' → logprob: -17.625490188598633
    7. 'else' → logprob: -18.125490188598633
    8. ' !=' → logprob: -18.187990188598633
    9. ' ' → logprob: -18.187990188598633
    10. 'not' → logprob: -18.687990188598633

Token 330: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. '0' → logprob: -14.625003814697266
    4. '!=' → logprob: -17.375003814697266
    5. 'else' → logprob: -17.500003814697266
    6. '```' → logprob: -18.125003814697266
    7. '!' → logprob: -18.625003814697266
    8. '   ' → logprob: -18.687503814697266
    9. '2' → logprob: -18.875003814697266
    10. '-' → logprob: -19.000003814697266

Token 331: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1066080778837204
    2. ':
' → logprob: -2.3566081523895264
    3. '       ' → logprob: -5.606607913970947
    4. '==' → logprob: -6.856607913970947
    5. '   ' → logprob: -7.106607913970947
    6. ' continue' → logprob: -8.606608390808105
    7. ' ==' → logprob: -8.606608390808105
    8. ' continues' → logprob: -8.981608390808105
    9. '=' → logprob: -9.106608390808105
    10. '	continue' → logprob: -9.856608390808105

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08623204380273819
    2. ':' → logprob: -2.7112319469451904
    3. '   ' → logprob: -4.5862321853637695
    4. ':
' → logprob: -5.5862321853637695
    5. ' a' → logprob: -7.2112321853637695
    6. ' :' → logprob: -7.7112321853637695
    7. ',' → logprob: -8.21123218536377
    8. 'a' → logprob: -8.46123218536377
    9. ' continue' → logprob: -8.83623218536377
    10. '[' → logprob: -9.58623218536377

Token 333: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.28226086497306824
    2. 'print' → logprob: -2.2822608947753906
    3. ' continue' → logprob: -2.7822608947753906
    4. '   ' → logprob: -3.0322608947753906
    5. 'a' → logprob: -3.9072608947753906
    6. 'pass' → logprob: -4.657260894775391
    7. 'val' → logprob: -6.657260894775391
    8. ' a' → logprob: -7.407260894775391
    9. ' print' → logprob: -7.532260894775391
    10. 'for' → logprob: -7.782260894775391

Token 334: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7829520106315613
    2. 'a' → logprob: -1.407952070236206
    3. ' a' → logprob: -1.907952070236206
    4. ' val' → logprob: -2.407952070236206
    5. 'val' → logprob: -3.407952070236206
    6. '       ' → logprob: -4.657951831817627
    7. ' for' → logprob: -4.907951831817627
    8. 'for' → logprob: -5.657951831817627
    9. ')' → logprob: -6.657951831817627
    10. ':' → logprob: -7.032951831817627

Token 335: '   ' (ID: 271)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.025174617767334
    2. 'val' → logprob: -1.150174617767334
    3. 'a' → logprob: -1.400174617767334
    4. ' a' → logprob: -3.150174617767334
    5. '   ' → logprob: -4.025174617767334
    6. 'for' → logprob: -5.650174617767334
    7. 'k' → logprob: -5.775174617767334
    8. ' for' → logprob: -6.025174617767334
    9. ' k' → logprob: -6.400174617767334
    10. 'import' → logprob: -6.400174617767334

Token 336: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.30744293332099915
    2. 'a' → logprob: -1.8074429035186768
    3. 'if' → logprob: -4.057443141937256
    4. 'for' → logprob: -4.182443141937256
    5. 'x' → logprob: -4.182443141937256
    6. 'min' → logprob: -4.682443141937256
    7. 'while' → logprob: -4.807443141937256
    8. 'found' → logprob: -5.432443141937256
    9. 'v' → logprob: -5.557443141937256
    10. 'low' → logprob: -5.932443141937256

Token 337: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22564305365085602
    2. '=' → logprob: -1.6006430387496948
    3. '1' → logprob: -9.100643157958984
    4. '2' → logprob: -9.225643157958984
    5. 's' → logprob: -11.725643157958984
    6. '_' → logprob: -13.350643157958984
    7. ',' → logprob: -13.600643157958984
    8. '   ' → logprob: -13.850643157958984
    9. '=

' → logprob: -13.975643157958984
    10. ' ' → logprob: -14.225643157958984

Token 338: ' ' (ID: 220)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.006856504827737808
    2. ' pr' → logprob: -5.131856441497803
    3. 'a' → logprob: -8.006856918334961
    4. '1' → logprob: -8.131856918334961
    5. '(pr' → logprob: -9.506856918334961
    6. 'n' → logprob: -9.881856918334961
    7. '100' → logprob: -10.006856918334961
    8. '0' → logprob: -11.006856918334961
    9. 'math' → logprob: -11.006856918334961
    10. '2' → logprob: -11.131856918334961

Token 339: '1' (ID: 16)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0071058208122849464
    2. '1' → logprob: -6.132105827331543
    3. 'a' → logprob: -6.132105827331543
    4. '(pr' → logprob: -7.132105827331543
    5. 'n' → logprob: -7.632105827331543
    6. 'random' → logprob: -7.882105827331543
    7. '(' → logprob: -8.382105827331543
    8. ' pr' → logprob: -8.632105827331543
    9. 'i' → logprob: -9.132105827331543
    10. '2' → logprob: -9.382105827331543

Token 340: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3710744082927704
    2. '
' → logprob: -2.2460744380950928
    3. '   ' → logprob: -2.3710744380950928
    4. 'while' → logprob: -2.7460744380950928
    5. ' for' → logprob: -3.2460744380950928
    6. ' while' → logprob: -5.496074199676514
    7. '    
' → logprob: -6.496074199676514
    8. '<|end|>' → logprob: -7.246074199676514
    9. ' 
' → logprob: -8.246074676513672
    10. '+' → logprob: -8.621074676513672

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4087538719177246
    2. 'for' → logprob: -1.6587538719177246
    3. '
' → logprob: -2.9087538719177246
    4. 'while' → logprob: -2.9087538719177246
    5. ' for' → logprob: -3.5337538719177246
    6. ' while' → logprob: -5.533753871917725
    7. '    
' → logprob: -7.533753871917725
    8. '<|end|>' → logprob: -7.533753871917725
    9. '    ' → logprob: -8.158754348754883
    10. '       ' → logprob: -8.283754348754883

Token 342: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09066898375749588
    2. 'while' → logprob: -2.7156689167022705
    3. 'k' → logprob: -4.96566915512085
    4. '   ' → logprob: -5.46566915512085
    5. 'val' → logprob: -6.09066915512085
    6. ' for' → logprob: -6.46566915512085
    7. 'pr' → logprob: -6.59066915512085
    8. 'x' → logprob: -7.09066915512085
    9. 'p' → logprob: -7.34066915512085
    10. 'd' → logprob: -7.46566915512085

Token 343: ' manual' (ID: 15203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.050336867570877075
    2. 'while' → logprob: -3.3003368377685547
    3. 'k' → logprob: -5.550336837768555
    4. 'd' → logprob: -6.925336837768555
    5. 'q' → logprob: -6.925336837768555
    6. 'pr' → logprob: -6.925336837768555
    7. ' for' → logprob: -7.050336837768555
    8. 'p' → logprob: -7.175336837768555
    9. 'val' → logprob: -7.175336837768555
    10. 'prime' → logprob: -7.675336837768555

Token 344: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14131267368793488
    2. ' for' → logprob: -2.266312599182129
    3. 'ly' → logprob: -4.641312599182129
    4. 'y' → logprob: -6.016312599182129
    5. 'factor' → logprob: -6.141312599182129
    6. 'steps' → logprob: -6.641312599182129
    7. 'neighbors' → logprob: -6.641312599182129
    8. 'd' → logprob: -6.891312599182129
    9. 'neighbor' → logprob: -7.141312599182129
    10. 'multip' → logprob: -7.516312599182129

Token 345: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.021913789212703705
    2. 'val' → logprob: -3.896913766860962
    3. '   ' → logprob: -7.521914005279541
    4. 'for' → logprob: -7.521914005279541
    5. 'import' → logprob: -9.271913528442383
    6. 'c' → logprob: -10.021913528442383
    7. '[val' → logprob: -10.271913528442383
    8. 'm' → logprob: -11.271913528442383
    9. 'cmath' → logprob: -11.521913528442383
    10. 'CM' → logprob: -11.646913528442383

Token 346: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8001205921173096
    2. 'for' → logprob: -1.4251205921173096
    3. '   ' → logprob: -1.9251205921173096
    4. ' =' → logprob: -2.6751205921173096
    5. '=' → logprob: -2.9251205921173096
    6. '       ' → logprob: -3.8001205921173096
    7. '
' → logprob: -5.4251203536987305
    8. '<|end|>' → logprob: -5.5501203536987305
    9. ',' → logprob: -5.9251203536987305
    10. ' ' → logprob: -7.0501203536987305

Token 347: ' neighbors' (ID: 31655)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0466748476028442
    2. 'val' → logprob: -1.6716748476028442
    3. 'for' → logprob: -1.6716748476028442
    4. '[' → logprob: -2.4216747283935547
    5. ' range' → logprob: -3.5466747283935547
    6. '[i' → logprob: -3.7966747283935547
    7. ' val' → logprob: -4.421674728393555
    8. 'a' → logprob: -4.421674728393555
    9. 'i' → logprob: -4.671674728393555
    10. 'math' → logprob: -4.796674728393555

Token 348: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2401100993156433
    2. ' for' → logprob: -1.740110158920288
    3. 'for' → logprob: -3.365110158920288
    4. '
' → logprob: -6.865109920501709
    5. '    
' → logprob: -7.115109920501709
    6. 'neighbors' → logprob: -7.865109920501709
    7. ' neighbors' → logprob: -8.115110397338867
    8. ',' → logprob: -8.240110397338867
    9. '       ' → logprob: -9.240110397338867
    10. '_neighbors' → logprob: -9.740110397338867

Token 349: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9332744479179382
    2. '   ' → logprob: -1.183274507522583
    3. ' for' → logprob: -1.308274507522583
    4. 'neighbors' → logprob: -3.683274507522583
    5. ' neighbors' → logprob: -5.933274269104004
    6. 'if' → logprob: -7.183274269104004
    7. ' if' → logprob: -7.808274269104004
    8. '_neighbors' → logprob: -8.433274269104004
    9. 's' → logprob: -8.683274269104004
    10. ',' → logprob: -9.433274269104004

Token 350: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01552288606762886
    2. 'neighbors' → logprob: -4.5155229568481445
    3. 'if' → logprob: -6.0155229568481445
    4. ' for' → logprob: -7.0155229568481445
    5. '   ' → logprob: -7.3905229568481445
    6. 'dx' → logprob: -9.515522956848145
    7. 'dirs' → logprob: -9.890522956848145
    8. 'dire' → logprob: -10.015522956848145
    9. 'neighbor' → logprob: -10.265522956848145
    10. ' neighbors' → logprob: -10.390522956848145

Token 351: ' ip' (ID: 7993)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.9529542326927185
    2. 'di' → logprob: -1.0779542922973633
    3. '(x' → logprob: -2.4529542922973633
    4. '(ii' → logprob: -3.0779542922973633
    5. '(dx' → logprob: -3.0779542922973633
    6. '(' → logprob: -3.2029542922973633
    7. 'ni' → logprob: -3.2029542922973633
    8. '(di' → logprob: -5.327954292297363
    9. 'x' → logprob: -5.452954292297363
    10. '(i' → logprob: -6.452954292297363

Token 352: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.536313533782959
    2. ' in' → logprob: -1.036313533782959
    3. ',' → logprob: -2.911313533782959
    4. ',j' → logprob: -6.036313533782959
    5. 'i' → logprob: -6.536313533782959
    6. ',d' → logprob: -7.536313533782959
    7. ',i' → logprob: -7.786313533782959
    8. 'dx' → logprob: -8.161314010620117
    9. ' ' → logprob: -8.786314010620117
    10. 'd' → logprob: -8.911314010620117

Token 353: ' jp' (ID: 72535)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.210041880607605
    2. 'jp' → logprob: -1.335041880607605
    3. 'dj' → logprob: -1.835041880607605
    4. 'dp' → logprob: -2.0850419998168945
    5. 'jj' → logprob: -2.4600419998168945
    6. '(j' → logprob: -3.4600419998168945
    7. 'ij' → logprob: -5.0850419998168945
    8. 'ii' → logprob: -5.0850419998168945
    9. '(i' → logprob: -5.7100419998168945
    10. 'iq' → logprob: -5.9600419998168945

Token 354: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1798880249261856
    2. 'in' → logprob: -1.8048880100250244
    3. ',' → logprob: -9.179887771606445
    4. '	in' → logprob: -10.804887771606445
    5. ' ' → logprob: -11.804887771606445
    6. '   ' → logprob: -12.929887771606445
    7. '  ' → logprob: -13.054887771606445
    8. ')' → logprob: -13.804887771606445
    9. ' ,' → logprob: -13.804887771606445
    10. '```' → logprob: -14.054887771606445

Token 355: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0004711874935310334
    2. '((' → logprob: -7.750471115112305
    3. '(i' → logprob: -11.250471115112305
    4. ' [(' → logprob: -11.375471115112305
    5. '[i' → logprob: -11.500471115112305
    6. '[((' → logprob: -12.625471115112305
    7. '[' → logprob: -13.500471115112305
    8. '[[' → logprob: -14.875471115112305
    9. '[
' → logprob: -15.125471115112305
    10. '([(' → logprob: -15.125471115112305

Token 356: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005478029139339924
    2. '(i' → logprob: -5.2554779052734375
    3. ' i' → logprob: -8.880477905273438
    4. '   ' → logprob: -10.380477905273438
    5. ' (' → logprob: -10.505477905273438
    6. '-' → logprob: -10.755477905273438
    7. '0' → logprob: -11.880477905273438
    8. '1' → logprob: -12.255477905273438
    9. ' ' → logprob: -12.505477905273438
    10. '(' → logprob: -13.380477905273438

Token 357: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13069085776805878
    2. ',' → logprob: -2.630690813064575
    3. ',j' → logprob: -3.255690813064575
    4. ' -' → logprob: -5.130691051483154
    5. '+' → logprob: -6.005691051483154
    6. 'j' → logprob: -6.755691051483154
    7. '   ' → logprob: -6.880691051483154
    8. ' ' → logprob: -7.005691051483154
    9. '1' → logprob: -8.380690574645996
    10. ' j' → logprob: -9.630690574645996

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.093505099765025e-05
    2. '0' → logprob: -11.000020980834961
    3. ' ' → logprob: -12.875020980834961
    4. '-' → logprob: -14.250020980834961
    5. 'j' → logprob: -14.625020980834961
    6. '   ' → logprob: -15.375020980834961
    7. 'i' → logprob: -15.875020980834961
    8. ',' → logprob: -16.25002098083496
    9. ',j' → logprob: -17.75002098083496
    10. '2' → logprob: -17.93752098083496

Token 359: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20181986689567566
    2. ',j' → logprob: -1.701819896697998
    3. ' ,' → logprob: -7.826819896697998
    4. '   ' → logprob: -11.95181941986084
    5. ' ' → logprob: -15.70181941986084
    6. '       ' → logprob: -15.70181941986084
    7. ',
' → logprob: -15.82681941986084
    8. '    ' → logprob: -15.95181941986084
    9. '           ' → logprob: -15.95181941986084
    10. '	' → logprob: -16.326820373535156

Token 360: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3497110903263092
    2. '),(' → logprob: -1.2247110605239868
    3. ' ),' → logprob: -6.724710941314697
    4. '),
' → logprob: -10.849711418151855
    5. '   ' → logprob: -10.974711418151855
    6. '-' → logprob: -10.974711418151855
    7. ' ' → logprob: -12.099711418151855
    8. '  ' → logprob: -13.349711418151855
    9. ')' → logprob: -14.349711418151855
    10. ',' → logprob: -15.224711418151855

Token 361: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.22604383528232574
    2. ' (' → logprob: -1.6010438203811646
    3. 'i' → logprob: -7.851043701171875
    4. ' i' → logprob: -8.851043701171875
    5. '(' → logprob: -10.101043701171875
    6. '   ' → logprob: -10.476043701171875
    7. ' ' → logprob: -11.226043701171875
    8. '  ' → logprob: -12.101043701171875
    9. '    ' → logprob: -12.851043701171875
    10. '           ' → logprob: -13.851043701171875

Token 362: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004967942950315773
    2. ' i' → logprob: -7.625496864318848
    3. '   ' → logprob: -12.500496864318848
    4. 'j' → logprob: -12.875496864318848
    5. '  ' → logprob: -14.000496864318848
    6. '    ' → logprob: -14.125496864318848
    7. ' ' → logprob: -14.625496864318848
    8. '	i' → logprob: -15.625496864318848
    9. 'ij' → logprob: -16.12549591064453
    10. '     ' → logprob: -16.75049591064453

Token 363: '+' (ID: 10)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.07509269565343857
    2. ',' → logprob: -3.7000927925109863
    3. 'j' → logprob: -3.8250927925109863
    4. '+' → logprob: -4.075092792510986
    5. '-' → logprob: -4.950092792510986
    6. ' ' → logprob: -7.075092792510986
    7. '   ' → logprob: -7.325092792510986
    8. '  ' → logprob: -9.325092315673828
    9. ' j' → logprob: -10.325092315673828
    10. ' ,' → logprob: -10.575092315673828

Token 364: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00016611411410849541
    2. '1' → logprob: -8.875165939331055
    3. ' j' → logprob: -10.625165939331055
    4. 'jp' → logprob: -14.625165939331055
    5. ',j' → logprob: -14.875165939331055
    6. '   ' → logprob: -14.875165939331055
    7. '0' → logprob: -15.250165939331055
    8. ' ' → logprob: -16.125165939331055
    9. ')' → logprob: -16.625165939331055
    10. '```' → logprob: -16.625165939331055

Token 365: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.4741934835910797
    2. ',' → logprob: -0.9741934537887573
    3. ' ,' → logprob: -9.099193572998047
    4. '),' → logprob: -13.599193572998047
    5. '   ' → logprob: -14.099193572998047
    6. 'j' → logprob: -14.724193572998047
    7. '),(' → logprob: -14.849193572998047
    8. ',i' → logprob: -15.224193572998047
    9. ',p' → logprob: -15.349193572998047
    10. ',
' → logprob: -15.724193572998047

Token 366: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.16642899811267853
    2. ',' → logprob: -2.166429042816162
    3. '),(' → logprob: -3.291429042816162
    4. ' ,' → logprob: -7.791429042816162
    5. ' ),' → logprob: -7.916429042816162
    6. ',(' → logprob: -7.916429042816162
    7. '],' → logprob: -9.166428565979004
    8. ',j' → logprob: -9.666428565979004
    9. ')],' → logprob: -9.666428565979004
    10. ')]' → logprob: -9.916428565979004

Token 367: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12696558237075806
    2. ' (' → logprob: -2.1269655227661133
    3. '(' → logprob: -10.501965522766113
    4. '   ' → logprob: -12.001965522766113
    5. ' ' → logprob: -13.876965522766113
    6. '  ' → logprob: -14.251965522766113
    7. 'i' → logprob: -14.376965522766113
    8. ' i' → logprob: -14.626965522766113
    9. '    ' → logprob: -15.126965522766113
    10. '[i' → logprob: -15.376965522766113

Token 368: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009128939709626138
    2. ' i' → logprob: -7.000912666320801
    3. '   ' → logprob: -14.8759126663208
    4. ' ' → logprob: -15.0009126663208
    5. '(i' → logprob: -15.1259126663208
    6. '	i' → logprob: -15.6259126663208
    7. '  ' → logprob: -16.125913619995117
    8. '    ' → logprob: -17.125913619995117
    9. ',' → logprob: -18.125913619995117
    10. '```' → logprob: -18.125913619995117

Token 369: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.0031899516470730305
    2. ',' → logprob: -5.753190040588379
    3. ' ,' → logprob: -12.253190040588379
    4. '-' → logprob: -12.878190040588379
    5. ' ' → logprob: -12.878190040588379
    6. ',i' → logprob: -14.253190040588379
    7. 'j' → logprob: -14.253190040588379
    8. '   ' → logprob: -14.503190040588379
    9. ',p' → logprob: -15.503190040588379
    10. '  ' → logprob: -16.878189086914062

Token 370: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.251091377227567e-05
    2. '+' → logprob: -10.250042915344238
    3. ' -' → logprob: -11.875042915344238
    4. '1' → logprob: -16.625041961669922
    5. '   ' → logprob: -18.250041961669922
    6. ' ' → logprob: -18.250041961669922
    7. '−' → logprob: -18.625041961669922
    8. '```' → logprob: -19.250041961669922
    9. ')' → logprob: -19.375041961669922
    10. '-
' → logprob: -19.500041961669922

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.3822154111694545e-05
    2. '),' → logprob: -10.375043869018555
    3. ' ' → logprob: -12.125043869018555
    4. ')]' → logprob: -12.875043869018555
    5. ')' → logprob: -13.000043869018555
    6. '+' → logprob: -13.250043869018555
    7. '),(' → logprob: -15.375043869018555
    8. '   ' → logprob: -16.125043869018555
    9. ')][' → logprob: -17.000043869018555
    10. '```' → logprob: -17.375043869018555

Token 372: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.036705464124679565
    2. ')]' → logprob: -4.161705493927002
    3. ')' → logprob: -4.286705493927002
    4. '),(' → logprob: -5.161705493927002
    5. '):' → logprob: -7.286705493927002
    6. ')],' → logprob: -9.286705017089844
    7. ',' → logprob: -9.911705017089844
    8. ' ),' → logprob: -10.161705017089844
    9. '],' → logprob: -10.411705017089844
    10. '):

' → logprob: -10.536705017089844

Token 373: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05779704824090004
    2. '(j' → logprob: -3.4327969551086426
    3. ' j' → logprob: -3.8077969551086426
    4. ' (' → logprob: -6.432796955108643
    5. '(i' → logprob: -10.9327974319458
    6. '   ' → logprob: -11.0577974319458
    7. '(' → logprob: -11.5577974319458
    8. '	j' → logprob: -12.3077974319458
    9. '    ' → logprob: -13.0577974319458
    10. ' ' → logprob: -13.1827974319458

Token 374: 'i' (ID: 72)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.4034345187828876e-05
    2. ' j' → logprob: -10.87502384185791
    3. '   ' → logprob: -12.50002384185791
    4. ' ' → logprob: -14.75002384185791
    5. '    ' → logprob: -15.00002384185791
    6. '  ' → logprob: -15.00002384185791
    7. '+' → logprob: -15.50002384185791
    8. ')' → logprob: -16.750024795532227
    9. '	j' → logprob: -16.875024795532227
    10. '     ' → logprob: -17.375024795532227

Token 375: ',j' (ID: 22712)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0036197893787175417
    2. '1' → logprob: -5.62861967086792
    3. '+j' → logprob: -11.503620147705078
    4. ' +' → logprob: -11.753620147705078
    5. 'j' → logprob: -14.378620147705078
    6. '-' → logprob: -14.503620147705078
    7. ' ' → logprob: -14.878620147705078
    8. '```' → logprob: -15.753620147705078
    9. '+
' → logprob: -16.003620147705078
    10. '+)' → logprob: -17.378620147705078

Token 376: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002834588522091508
    2. '1' → logprob: -5.877834796905518
    3. '-' → logprob: -10.62783432006836
    4. ' +' → logprob: -12.75283432006836
    5. ')' → logprob: -13.75283432006836
    6. ')]' → logprob: -14.62783432006836
    7. ' ' → logprob: -14.87783432006836
    8. '+)' → logprob: -15.37783432006836
    9. '+
' → logprob: -15.37783432006836
    10. '```' → logprob: -16.25283432006836

Token 377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6776029699249193e-05
    2. ' ' → logprob: -10.87502670288086
    3. '+' → logprob: -12.37502670288086
    4. '0' → logprob: -14.00002670288086
    5. '   ' → logprob: -14.00002670288086
    6. ')' → logprob: -14.37502670288086
    7. '```' → logprob: -14.68752670288086
    8. '  ' → logprob: -15.87502670288086
    9. '-' → logprob: -16.50002670288086
    10. 'i' → logprob: -16.93752670288086

Token 378: ')]' (ID: 15710)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.41280749440193176
    2. ']:
' → logprob: -1.5378074645996094
    3. '):' → logprob: -2.5378074645996094
    4. '):
' → logprob: -3.1628074645996094
    5. ']' → logprob: -7.162807464599609
    6. ')]' → logprob: -7.412807464599609
    7. ')' → logprob: -8.53780746459961
    8. ']:
' → logprob: -9.28780746459961
    9. ']):' → logprob: -9.66280746459961
    10. '   ' → logprob: -9.78780746459961

Token 379: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.919345498085022
    2. '       ' → logprob: -1.169345498085022
    3. ':
' → logprob: -1.294345498085022
    4. ',' → logprob: -5.169345378875732
    5. '   ' → logprob: -5.294345378875732
    6. '<|end|>' → logprob: -5.544345378875732
    7. '<|end|>' → logprob: -7.419345378875732
    8. '):
' → logprob: -7.919345378875732
    9. ':

' → logprob: -8.04434585571289
    10. '        
' → logprob: -8.79434585571289

Token 380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04791102930903435
    2. ' if' → logprob: -3.2979109287261963
    3. '   ' → logprob: -5.172911167144775
    4. '<|end|>' → logprob: -6.172911167144775
    5. 'if' → logprob: -6.422911167144775
    6. '	   ' → logprob: -8.672910690307617
    7. '    ' → logprob: -9.422910690307617
    8. '	if' → logprob: -9.797910690307617
    9. '<|end|>' → logprob: -10.047910690307617
    10. ',' → logprob: -11.047910690307617

Token 381: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5928013920783997
    2. 'if' (adapté à ' if') → logprob: -0.8428013920783997
    3. '       ' → logprob: -4.092801570892334
    4. '        ' → logprob: -11.217801094055176
    5. '	if' → logprob: -11.467801094055176
    6. '           ' → logprob: -13.967801094055176
    7. '        
' → logprob: -14.092801094055176
    8. '    ' → logprob: -14.217801094055176
    9. '	       ' → logprob: -14.217801094055176
    10. '   ' → logprob: -15.092801094055176

Token 382: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001720742875477299
    2. ' ' → logprob: -8.750171661376953
    3. 'ip' → logprob: -11.375171661376953
    4. '   ' → logprob: -13.875171661376953
    5. 'not' → logprob: -15.000171661376953
    6. '(' → logprob: -15.250171661376953
    7. '-' → logprob: -15.875171661376953
    8. ' ip' → logprob: -16.000171661376953
    9. '(ip' → logprob: -16.000171661376953
    10. ' not' → logprob: -16.750171661376953

Token 383: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.868328920158092e-05
    2. 'ip' → logprob: -11.000028610229492
    3. ' ' → logprob: -11.625028610229492
    4. 'not' → logprob: -13.750028610229492
    5. '(' → logprob: -14.000028610229492
    6. '-' → logprob: -14.250028610229492
    7. '(ip' → logprob: -15.250028610229492
    8. '-ip' → logprob: -16.500028610229492
    9. '   ' → logprob: -17.000028610229492
    10. '[ip' → logprob: -17.125028610229492

Token 384: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0019286326132714748
    2. ' <=' → logprob: -6.251928806304932
    3. '   ' → logprob: -18.001928329467773
    4. '>' → logprob: -18.501928329467773
    5. '<' → logprob: -18.626928329467773
    6. ' ' → logprob: -18.751928329467773
    7. 'le' → logprob: -19.501928329467773
    8. ')<=' → logprob: -19.501928329467773
    9. ')' → logprob: -19.626928329467773
    10. '0' → logprob: -19.876928329467773

Token 385: ' ip' (ID: 7993)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -3.7697225252486533e-06
    2. ' ip' → logprob: -12.500003814697266
    3. '	ip' → logprob: -17.625003814697266
    4. '[ip' → logprob: -20.875003814697266
    5. 'ipy' → logprob: -21.000003814697266
    6. '_ip' → logprob: -21.250003814697266
    7. 'ipl' → logprob: -21.375003814697266
    8. '(ip' → logprob: -21.500003814697266
    9. 'i' → logprob: -21.625003814697266
    10. 'ipi' → logprob: -21.875003814697266

Token 386: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -5.6934557505883276e-05
    2. '<n' → logprob: -10.625057220458984
    3. ' <' → logprob: -10.750057220458984
    4. 'and' → logprob: -11.500057220458984
    5. ' and' → logprob: -14.375057220458984
    6. '<len' → logprob: -15.625057220458984
    7. '<size' → logprob: -15.625057220458984
    8. 'n' → logprob: -17.375057220458984
    9. '<int' → logprob: -18.000057220458984
    10. '[' → logprob: -18.375057220458984

Token 387: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.842555426876061e-06
    2. ' n' → logprob: -12.250004768371582
    3. '	n' → logprob: -19.1250057220459
    4. '   ' → logprob: -22.8750057220459
    5. '
' → logprob: -23.3750057220459
    6. '```' → logprob: -23.7500057220459
    7. ')n' → logprob: -23.7500057220459
    8. '<|end|>' → logprob: -24.0000057220459
    9. '_n' → logprob: -24.5000057220459
    10. 'n't' → logprob: -25.6250057220459

Token 388: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5759406089782715
    2. ' and' → logprob: -0.8259406089782715
    3. ' ' → logprob: -15.20094108581543
    4. '	and' → logprob: -15.20094108581543
    5. '       ' → logprob: -15.32594108581543
    6. '   ' → logprob: -15.95094108581543
    7. '<' → logprob: -16.20094108581543
    8. '<|end|>' → logprob: -16.70094108581543
    9. '           ' → logprob: -16.95094108581543
    10. '<=' → logprob: -17.95094108581543

Token 389: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.125006675720215
    3. 'n' → logprob: -13.750006675720215
    4. 'jp' → logprob: -14.875006675720215
    5. 'j' → logprob: -15.375006675720215
    6. '   ' → logprob: -17.50000762939453
    7. '  ' → logprob: -18.75000762939453
    8. 'nj' → logprob: -19.25000762939453
    9. '
' → logprob: -19.37500762939453
    10. 'js' → logprob: -19.62500762939453

Token 390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011058080941438675
    2. 'n' → logprob: -4.5110578536987305
    3. ' ' → logprob: -12.01105785369873
    4. ' n' → logprob: -12.51105785369873
    5. 'j' → logprob: -14.88605785369873
    6. '   ' → logprob: -16.636058807373047
    7. '	n' → logprob: -17.011058807373047
    8. '<n' → logprob: -17.636058807373047
    9. 'jp' → logprob: -18.261058807373047
    10. 'nj' → logprob: -18.636058807373047

Token 391: ' <=' (ID: 5017)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0380743183195591
    2. '<' → logprob: -3.913074254989624
    3. '<n' → logprob: -4.288074493408203
    4. ' <' → logprob: -5.788074493408203
    5. ' n' → logprob: -7.538074493408203
    6. 'j' → logprob: -10.538074493408203
    7. 'nj' → logprob: -11.163074493408203
    8. '0' → logprob: -12.913074493408203
    9. 'jp' → logprob: -13.163074493408203
    10. '<=' → logprob: -13.288074493408203

Token 392: ' jp' (ID: 72535)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3425219549390022e-05
    2. ' n' → logprob: -11.25001335144043
    3. '	n' → logprob: -15.87501335144043
    4. 'j' → logprob: -16.12501335144043
    5. 'nj' → logprob: -16.50001335144043
    6. '   ' → logprob: -18.00001335144043
    7. ' ' → logprob: -18.87501335144043
    8. '  ' → logprob: -19.75001335144043
    9. '
' → logprob: -20.37501335144043
    10. '_n' → logprob: -20.87501335144043

Token 393: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6099660992622375
    2. ' <' → logprob: -1.3599660396575928
    3. '<n' → logprob: -1.6099660396575928
    4. 'n' → logprob: -10.109966278076172
    5. ' n' → logprob: -10.609966278076172
    6. ' and' → logprob: -15.234966278076172
    7. '<size' → logprob: -15.234966278076172
    8. '<len' → logprob: -15.234966278076172
    9. '<N' → logprob: -15.359966278076172
    10. 'and' → logprob: -15.484966278076172

Token 394: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00020354038861114532
    2. ' n' → logprob: -8.500203132629395
    3. '	n' → logprob: -17.37520408630371
    4. '   ' → logprob: -20.12520408630371
    5. ' ' → logprob: -21.12520408630371
    6. ')n' → logprob: -21.75020408630371
    7. '_n' → logprob: -22.25020408630371
    8. '.n' → logprob: -23.25020408630371
    9. '<|end|>' → logprob: -23.25020408630371
    10. '
' → logprob: -23.37520408630371

Token 395: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7066010236740112
    2. 'and' → logprob: -0.7066010236740112
    3. ':
' → logprob: -4.331601142883301
    4. ':' → logprob: -8.7066011428833
    5. '   ' → logprob: -10.0816011428833
    6. '	and' → logprob: -12.7066011428833
    7. '       ' → logprob: -12.8316011428833
    8. ' ' → logprob: -13.0816011428833
    9. ':

' → logprob: -14.3316011428833
    10. '():
' → logprob: -14.9566011428833

Token 396: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008433376788161695
    2. '(i' → logprob: -7.625843524932861
    3. ' a' → logprob: -8.625843048095703
    4. '(a' → logprob: -9.375843048095703
    5. 'i' → logprob: -9.875843048095703
    6. '   ' → logprob: -10.875843048095703
    7. '(' → logprob: -11.750843048095703
    8. '((' → logprob: -12.500843048095703
    9. ' (' → logprob: -12.500843048095703
    10. 'not' → logprob: -13.500843048095703

Token 397: '[ip' (ID: 198910)
  Prédit: '[ip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ip' → logprob: -1.27099974633893e-05
    2. 'ip' → logprob: -11.625012397766113
    3. '[' → logprob: -12.625012397766113
    4. '	ip' → logprob: -15.875012397766113
    5. '[i' → logprob: -16.62501335144043
    6. '```' → logprob: -16.75001335144043
    7. '/ip' → logprob: -17.50001335144043
    8. '\[' → logprob: -17.75001335144043
    9. '[
' → logprob: -18.00001335144043
    10. '(ip' → logprob: -18.50001335144043

Token 398: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.8285918831825256
    2. '[ip' → logprob: -0.8285918831825256
    3. '[j' → logprob: -2.078591823577881
    4. '[' → logprob: -6.953591823577881
    5. '[js' → logprob: -8.203592300415039
    6. ']' → logprob: -9.328592300415039
    7. 'jp' → logprob: -9.578592300415039
    8. 'ip' → logprob: -10.078592300415039
    9. '[p' → logprob: -10.578592300415039
    10. ''][' → logprob: -10.703592300415039

Token 399: 'jp' (ID: 72936)
  Prédit: 'jp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jp' → logprob: -7.696077227592468e-05
    2. ' jp' → logprob: -9.500077247619629
    3. 'j' → logprob: -13.250077247619629
    4. '[j' → logprob: -16.750076293945312
    5. ' ' → logprob: -16.875076293945312
    6. '   ' → logprob: -16.875076293945312
    7. 'ip' → logprob: -17.375076293945312
    8. 'jsp' → logprob: -18.125076293945312
    9. '    ' → logprob: -18.625076293945312
    10. '	j' → logprob: -19.000076293945312

Token 400: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1617090404033661
    2. 'is' → logprob: -2.1617090702056885
    3. ' is' → logprob: -3.4117090702056885
    4. ']!=' → logprob: -7.286708831787109
    5. '>' → logprob: -8.78670883178711
    6. 'not' → logprob: -9.03670883178711
    7. ']:
' → logprob: -9.16170883178711
    8. ')' → logprob: -10.41170883178711
    9. ']:' → logprob: -10.66170883178711
    10. '}' → logprob: -10.78670883178711

Token 401: ' !=' (ID: 1666)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.31331712007522583
    2. ' is' → logprob: -1.313317060470581
    3. '!=' → logprob: -10.43831729888916
    4. 'not' → logprob: -11.31331729888916
    5. '>' → logprob: -12.56331729888916
    6. ')' → logprob: -12.56331729888916
    7. ':' → logprob: -13.31331729888916
    8. ' ' → logprob: -13.56331729888916
    9. '	is' → logprob: -14.06331729888916
    10. '!==' → logprob: -14.43831729888916

Token 402: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.165027217415627e-05
    2. ' None' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.00002098083496
    4. '=None' → logprob: -16.75002098083496
    5. '_None' → logprob: -18.50002098083496
    6. '(None' → logprob: -18.75002098083496
    7. 'none' → logprob: -20.12502098083496
    8. '0' → logprob: -20.62502098083496
    9. ' ' → logprob: -20.87502098083496
    10. ',None' → logprob: -21.75002098083496

Token 403: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05646919086575508
    2. ':' → logprob: -2.931469202041626
    3. ' and' → logprob: -7.306468963623047
    4. '       ' → logprob: -7.681468963623047
    5. '):
' → logprob: -8.431468963623047
    6. ':

' → logprob: -9.306468963623047
    7. ' :
' → logprob: -9.931468963623047
    8. '           ' → logprob: -10.181468963623047
    9. 'and' → logprob: -10.681468963623047
    10. ':
' → logprob: -11.681468963623047

Token 404: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0062872180715203285
    2. ',' → logprob: -6.256287097930908
    3. ' val' → logprob: -6.631287097930908
    4. ':' → logprob: -7.006287097930908
    5. '```' → logprob: -7.881287097930908
    6. 'val' → logprob: -8.131287574768066
    7. '<|end|>' → logprob: -8.256287574768066
    8. ' and' → logprob: -8.256287574768066
    9. ':
' → logprob: -8.506287574768066
    10. '            
' → logprob: -8.506287574768066

Token 405: ' g' (ID: 329)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.043234169483184814
    2. ' val' → logprob: -3.41823410987854
    3. 'import' → logprob: -5.668234348297119
    4. 'g' (adapté à ' g') → logprob: -5.918234348297119
    5. '           ' → logprob: -5.918234348297119
    6. 'v' → logprob: -8.543233871459961
    7. 'def' → logprob: -9.668233871459961
    8. 'math' → logprob: -9.793233871459961
    9. ' import' → logprob: -10.043233871459961
    10. 'from' → logprob: -10.168233871459961

Token 406: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.693640947341919
    2. '=' → logprob: -0.943640947341919
    3. 'val' → logprob: -3.068640947341919
    4. '_val' → logprob: -3.068640947341919
    5. ' val' → logprob: -5.19364070892334
    6. 'cd' → logprob: -5.31864070892334
    7. 'import' → logprob: -5.31864070892334
    8. 'from' → logprob: -7.06864070892334
    9. '=g' → logprob: -7.69364070892334
    10. 'g' → logprob: -8.44364070892334

Token 407: ' fractions' (ID: 110523)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.3725225031375885
    2. 'fra' → logprob: -1.2475224733352661
    3. ' fractions' → logprob: -4.247522354125977
    4. ' math' → logprob: -4.747522354125977
    5. 'val' → logprob: -7.247522354125977
    6. 'fr' → logprob: -9.747522354125977
    7. ' val' → logprob: -10.997522354125977
    8. '(math' → logprob: -11.497522354125977
    9. ' ' → logprob: -11.997522354125977
    10. 'frac' → logprob: -12.497522354125977

Token 408: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.04926256835460663
    2. 'g' → logprob: -3.049262523651123
    3. ' gcd' → logprob: -7.799262523651123
    4. 'import' → logprob: -9.424263000488281
    5. '   ' → logprob: -9.674263000488281
    6. '_g' → logprob: -10.049263000488281
    7. '#g' → logprob: -10.299263000488281
    8. '	g' → logprob: -11.674263000488281
    9. '```' → logprob: -11.799263000488281
    10. ' ' → logprob: -12.299263000488281

Token 409: 'cd' (ID: 8301)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.43421658873558044
    2. 'cd' → logprob: -1.0592166185379028
    3. ' gcd' → logprob: -5.559216499328613
    4. '.g' → logprob: -6.809216499328613
    5. '_g' → logprob: -8.559216499328613
    6. 'math' → logprob: -8.559216499328613
    7. '   ' → logprob: -9.434216499328613
    8. '=g' → logprob: -11.059216499328613
    9. '```' → logprob: -11.559216499328613
    10. 'c' → logprob: -11.809216499328613

Token 410: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.038964543491601944
    2. '(a' → logprob: -3.2889645099639893
    3. '(g' → logprob: -7.163964748382568
    4. 'val' → logprob: -9.03896427154541
    5. '(' → logprob: -10.91396427154541
    6. 'a' → logprob: -12.41396427154541
    7. '[val' → logprob: -12.66396427154541
    8. '(value' → logprob: -13.53896427154541
    9. ' val' → logprob: -13.66396427154541
    10. ',val' → logprob: -14.28896427154541

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24289922416210175
    2. '(val' → logprob: -1.9928991794586182
    3. ',val' → logprob: -2.992899179458618
    4. '(a' → logprob: -3.617899179458618
    5. ',a' → logprob: -6.867899417877197
    6. 'val' → logprob: -7.617899417877197
    7. '(' → logprob: -8.117898941040039
    8. 'a' → logprob: -8.367898941040039
    9. ' ,' → logprob: -8.992898941040039
    10. ' val' → logprob: -9.742898941040039

Token 412: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007608635816723108
    2. ' a' → logprob: -4.882608413696289
    3. 'val' → logprob: -13.382608413696289
    4. '   ' → logprob: -14.882608413696289
    5. '           ' → logprob: -15.382608413696289
    6. '	a' → logprob: -16.13260841369629
    7. ' val' → logprob: -16.38260841369629
    8. ' ' → logprob: -16.50760841369629
    9. '    ' → logprob: -17.75760841369629
    10. '(a' → logprob: -17.88260841369629

Token 413: '[ip' (ID: 198910)
  Prédit: '[ip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ip' → logprob: -0.030075011774897575
    2. '[i' → logprob: -4.1550750732421875
    3. 'ip' → logprob: -4.2800750732421875
    4. 'i' → logprob: -9.405075073242188
    5. '[' → logprob: -11.905075073242188
    6. ' ip' → logprob: -12.530075073242188
    7. '	ip' → logprob: -13.530075073242188
    8. 'a' → logprob: -13.655075073242188
    9. '(ip' → logprob: -13.905075073242188
    10. '[p' → logprob: -14.280075073242188

Token 414: '][' (ID: 2696)
  Prédit: '[ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ip' → logprob: -0.0005094261723570526
    2. 'ip' → logprob: -7.625509262084961
    3. '[' → logprob: -11.250509262084961
    4. 'p' → logprob: -12.875509262084961
    5. ' ip' → logprob: -13.500509262084961
    6. '[p' → logprob: -13.750509262084961
    7. '][' → logprob: -13.875509262084961
    8. '	ip' → logprob: -14.250509262084961
    9. '/ip' → logprob: -14.875509262084961
    10. '
' → logprob: -15.125509262084961

Token 415: 'jp' (ID: 72936)
  Prédit: 'jp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jp' → logprob: -0.012524965219199657
    2. 'ip' → logprob: -4.5125250816345215
    3. '[ip' → logprob: -7.1375250816345215
    4. 'p' → logprob: -7.3875250816345215
    5. 'j' → logprob: -10.262524604797363
    6. ' jp' → logprob: -11.137524604797363
    7. '[j' → logprob: -12.262524604797363
    8. 'pj' → logprob: -13.012524604797363
    9. '[p' → logprob: -13.262524604797363
    10. '```' → logprob: -13.887524604797363

Token 416: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03541288152337074
    2. ')
' → logprob: -3.4104127883911133
    3. '])' → logprob: -6.410412788391113
    4. '           ' → logprob: -9.785412788391113
    5. '])
' → logprob: -10.910412788391113
    6. '       ' → logprob: -11.160412788391113
    7. ')
' → logprob: -11.785412788391113
    8. ')])' → logprob: -12.160412788391113
    9. ')]' → logprob: -12.785412788391113
    10. ']' → logprob: -13.035412788391113

Token 417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033015936613082886
    2. 'val' → logprob: -3.9080159664154053
    3. ' val' → logprob: -4.408015727996826
    4. ',val' → logprob: -9.533016204833984
    5. '```' → logprob: -9.908016204833984
    6. ',' → logprob: -10.533016204833984
    7. '       ' → logprob: -10.908016204833984
    8. '            
' → logprob: -11.408016204833984
    9. '   ' → logprob: -11.783016204833984
    10. '               ' → logprob: -12.283016204833984

Token 418: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.00010199354437645525
    2. ' val' → logprob: -9.250102043151855
    3. '           ' → logprob: -12.125102043151855
    4. '	val' → logprob: -16.37510108947754
    5. 'v' → logprob: -16.62510108947754
    6. '_val' → logprob: -16.62510108947754
    7. 'l' → logprob: -17.12510108947754
    8. '   ' → logprob: -17.25010108947754
    9. '            
' → logprob: -17.37510108947754
    10. ',val' → logprob: -17.87510108947754

Token 419: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38798820972442627
    2. ' =' → logprob: -1.1379882097244263
    3. '*=' → logprob: -7.262988090515137
    4. '//=' → logprob: -8.387988090515137
    5. ' *=' → logprob: -8.762988090515137
    6. ' //' → logprob: -10.512988090515137
    7. ' ' → logprob: -13.262988090515137
    8. '//' → logprob: -13.512988090515137
    9. '   ' → logprob: -14.512988090515137
    10. '*' → logprob: -15.387988090515137

Token 420: ' (' (ID: 350)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.29966503381729126
    2. ' val' → logprob: -1.7996649742126465
    3. '(val' → logprob: -2.4246649742126465
    4. ' (' → logprob: -5.2996649742126465
    5. ' ' → logprob: -10.299665451049805
    6. '(' → logprob: -10.924665451049805
    7. '(int' → logprob: -12.049665451049805
    8. '[val' → logprob: -12.174665451049805
    9. '(a' → logprob: -12.299665451049805
    10. 'int' → logprob: -13.299665451049805

Token 421: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.004782899748533964
    2. '(val' → logprob: -5.379782676696777
    3. ' val' → logprob: -8.754782676696777
    4. '[val' → logprob: -13.754782676696777
    5. '   ' → logprob: -14.129782676696777
    6. ' (' → logprob: -14.379782676696777
    7. '_val' → logprob: -14.754782676696777
    8. ' ' → logprob: -15.004782676696777
    9. '	val' → logprob: -15.004782676696777
    10. '  ' → logprob: -15.004782676696777

Token 422: ' //' (ID: 602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.021696599200367928
    2. ' //' → logprob: -3.8966965675354004
    3. '*' → logprob: -7.3966965675354
    4. '//' → logprob: -7.8966965675354
    5. ' ' → logprob: -9.021697044372559
    6. '*a' → logprob: -10.271697044372559
    7. '*l' → logprob: -12.146697044372559
    8. '*j' → logprob: -12.896697044372559
    9. '*b' → logprob: -13.021697044372559
    10. ' ' → logprob: -13.896697044372559

Token 423: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.9361264946837764e-07
    2. ' g' → logprob: -15.875
    3. 'a' → logprob: -18.375
    4. 'fra' → logprob: -18.625
    5. '(g' → logprob: -19.125
    6. ')' → logprob: -19.25
    7. ' ' → logprob: -19.5
    8. '   ' → logprob: -19.5
    9. '#g' → logprob: -20.25
    10. 'val' → logprob: -20.25

Token 424: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017793069127947092
    2. ')*' → logprob: -6.501779079437256
    3. '*' → logprob: -8.751779556274414
    4. ' )' → logprob: -9.751779556274414
    5. ' *' → logprob: -10.126779556274414
    6. '*)' → logprob: -10.876779556274414
    7. '*a' → logprob: -14.126779556274414
    8. 'a' → logprob: -15.626779556274414
    9. ' *)' → logprob: -15.876779556274414
    10. '   ' → logprob: -16.001779556274414

Token 425: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.23657342791557312
    2. '*a' → logprob: -1.9865734577178955
    3. ' *' → logprob: -2.6115734577178955
    4. 'a' → logprob: -9.486573219299316
    5. '*(' → logprob: -13.361573219299316
    6. ' ' → logprob: -13.361573219299316
    7. '*g' → logprob: -13.611573219299316
    8. '*b' → logprob: -13.986573219299316
    9. '*j' → logprob: -14.236573219299316
    10. ' a' → logprob: -14.236573219299316

Token 426: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00014013137842994183
    2. ' a' → logprob: -8.875140190124512
    3. '(a' → logprob: -16.375139236450195
    4. '   ' → logprob: -16.750139236450195
    5. ' ' → logprob: -17.500139236450195
    6. '  ' → logprob: -18.000139236450195
    7. '           ' → logprob: -18.375139236450195
    8. '	a' → logprob: -18.500139236450195
    9. '    ' → logprob: -19.125139236450195
    10. '(' → logprob: -19.250139236450195

Token 427: '[ip' (ID: 198910)
  Prédit: '[ip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ip' → logprob: -0.00026872646412812173
    2. 'ip' → logprob: -8.250268936157227
    3. '[' → logprob: -11.875268936157227
    4. ' ip' → logprob: -15.875268936157227
    5. '	ip' → logprob: -16.375268936157227
    6. '[param' → logprob: -16.625268936157227
    7. '[p' → logprob: -16.625268936157227
    8. ' [' → logprob: -17.000268936157227
    9. '```' → logprob: -17.750268936157227
    10. '[i' → logprob: -17.875268936157227

Token 428: '][' (ID: 2696)
  Prédit: '[ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[ip' → logprob: -3.190178904333152e-05
    2. 'ip' → logprob: -10.375031471252441
    3. '[' → logprob: -15.000031471252441
    4. '[p' → logprob: -15.625031471252441
    5. 'p' → logprob: -16.750032424926758
    6. '[param' → logprob: -17.250032424926758
    7. ' ip' → logprob: -17.250032424926758
    8. ' [' → logprob: -17.375032424926758
    9. '	ip' → logprob: -17.625032424926758
    10. '/ip' → logprob: -17.625032424926758

Token 429: 'jp' (ID: 72936)
  Prédit: 'jp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jp' → logprob: -5.872261317563243e-05
    2. 'ip' → logprob: -9.875059127807617
    3. '[ip' → logprob: -12.875059127807617
    4. ' jp' → logprob: -13.000059127807617
    5. '[j' → logprob: -14.250059127807617
    6. 'p' → logprob: -14.750059127807617
    7. 'j' → logprob: -14.750059127807617
    8. '[' → logprob: -15.000059127807617
    9. 'pj' → logprob: -15.500059127807617
    10. '```' → logprob: -15.750059127807617

Token 430: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3462170362472534
    2. '<|end|>' → logprob: -1.3462170362472534
    3. '   ' → logprob: -3.721217155456543
    4. '<|end|>' → logprob: -5.596217155456543
    5. '
' → logprob: -6.971217155456543
    6. ']' → logprob: -7.346217155456543
    7. '    
' → logprob: -7.471217155456543
    8. '}' → logprob: -7.471217155456543
    9. '       ' → logprob: -7.971217155456543
    10. '```' → logprob: -8.471217155456543

Token 431: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014804661273956299
    2. 'a' → logprob: -4.264804840087891
    3. ' a' → logprob: -8.13980484008789
    4. '       ' → logprob: -8.63980484008789
    5. '  ' → logprob: -10.01480484008789
    6. '    
' → logprob: -10.01480484008789
    7. '           ' → logprob: -10.76480484008789
    8. ' ' → logprob: -11.26480484008789
    9. '	a' → logprob: -11.63980484008789
    10. '<|end|>' → logprob: -11.63980484008789

Token 432: ' if' (ID: 538)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5814552307128906
    2. '   ' → logprob: -0.8314552307128906
    3. ' a' → logprob: -5.206455230712891
    4. ' ' → logprob: -11.70645523071289
    5. '       ' → logprob: -12.45645523071289
    6. '	a' → logprob: -12.70645523071289
    7. '    
' → logprob: -13.83145523071289
    8. '  ' → logprob: -13.83145523071289
    9. 'val' → logprob: -14.20645523071289
    10. 'if' (adapté à ' if') → logprob: -14.58145523071289

Token 433: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.15728658437728882
    2. ' val' → logprob: -2.5322866439819336
    3. 'a' → logprob: -3.0322866439819336
    4. ' a' → logprob: -4.532286643981934
    5. ' (' → logprob: -6.282286643981934
    6. '(' → logprob: -6.907286643981934
    7. '(val' → logprob: -7.032286643981934
    8. '(a' → logprob: -7.407286643981934
    9. 'used' → logprob: -7.532286643981934
    10. ' ' → logprob: -7.782286643981934

Token 434: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6238452196121216
    2. '>' → logprob: -0.8738452196121216
    3. ' ==' → logprob: -3.623845100402832
    4. '==' → logprob: -4.248845100402832
    5. ' !=' → logprob: -5.623845100402832
    6. '!=' → logprob: -6.623845100402832
    7. '%' → logprob: -7.623845100402832
    8. ' <' → logprob: -8.998845100402832
    9. ' <=' → logprob: -9.748845100402832
    10. ' not' → logprob: -9.998845100402832

Token 435: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08395377546548843
    2. '100' → logprob: -3.208953857421875
    3. '2' → logprob: -3.458953857421875
    4. '1' → logprob: -5.333953857421875
    5. 'pr' → logprob: -6.708953857421875
    6. 'int' → logprob: -7.458953857421875
    7. '(' → logprob: -7.458953857421875
    8. '3' → logprob: -8.333953857421875
    9. '999' → logprob: -8.583953857421875
    10. '200' → logprob: -8.708953857421875

Token 436: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.11824013292789459
    2. '2' → logprob: -2.9932401180267334
    3. '100' → logprob: -2.9932401180267334
    4. '1' → logprob: -4.9932403564453125
    5. 'int' → logprob: -6.6182403564453125
    6. '200' → logprob: -7.2432403564453125
    7. '(' → logprob: -7.6182403564453125
    8. '999' → logprob: -7.8682403564453125
    9. '3' → logprob: -8.368240356445312
    10. '101' → logprob: -8.618240356445312

Token 437: ' *' (ID: 425)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -1.34346604347229
    2. '000' → logprob: -1.34346604347229
    3. ':' → logprob: -1.59346604347229
    4. ':
' → logprob: -1.84346604347229
    5. '0' → logprob: -3.21846604347229
    6. '*' → logprob: -3.46846604347229
    7. ' *' → logprob: -3.59346604347229
    8. '*n' → logprob: -5.468465805053711
    9. '   ' → logprob: -5.718465805053711
    10. ':
' → logprob: -5.843465805053711

Token 438: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005632251035422087
    2. '100' → logprob: -5.630632400512695
    3. '*' → logprob: -6.755632400512695
    4. '(' → logprob: -8.255632400512695
    5. '1' → logprob: -8.505632400512695
    6. ' ' → logprob: -9.880632400512695
    7. '0' → logprob: -9.880632400512695
    8. '7' → logprob: -10.005632400512695
    9. '000' → logprob: -10.005632400512695
    10. '109' → logprob: -10.380632400512695

Token 439: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.026688750833272934
    2. '(' → logprob: -3.776688814163208
    3. '100' → logprob: -6.151688575744629
    4. '(n' → logprob: -7.651688575744629
    5. 'pr' → logprob: -7.776688575744629
    6. 'n' → logprob: -8.526688575744629
    7. '(pr' → logprob: -9.401688575744629
    8. '1' → logprob: -9.651688575744629
    9. 'pow' → logprob: -11.276688575744629
    10. '109' → logprob: -11.651688575744629

Token 440: ' **' (ID: 6240)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.013234701938927174
    2. '7' → logprob: -5.138234615325928
    3. '**' → logprob: -5.263234615325928
    4. '9' → logprob: -6.263234615325928
    5. '8' → logprob: -9.263235092163086
    6. '5' → logprob: -9.263235092163086
    7. '```' → logprob: -12.763235092163086
    8. '4' → logprob: -13.388235092163086
    9. ' ' → logprob: -14.013235092163086
    10. ' **' → logprob: -15.138235092163086

Token 441: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -0.673988938331604
    2. '18' → logprob: -1.798988938331604
    3. '9' → logprob: -2.0489888191223145
    4. '7' → logprob: -2.7989888191223145
    5. '11' → logprob: -3.4239888191223145
    6. '10' → logprob: -3.5489888191223145
    7. '6' → logprob: -4.0489888191223145
    8. '5' → logprob: -4.4239888191223145
    9. '14' → logprob: -4.4239888191223145
    10. '17' → logprob: -4.4239888191223145

Token 442: '14' (ID: 1265)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.6068236231803894
    2. '9' → logprob: -1.4818236827850342
    3. '7' → logprob: -2.106823682785034
    4. '6' → logprob: -2.981823682785034
    5. '5' → logprob: -4.106823444366455
    6. '10' → logprob: -4.106823444366455
    7. '18' → logprob: -4.731823444366455
    8. '11' → logprob: -5.481823444366455
    9. '14' → logprob: -5.856823444366455
    10. '15' → logprob: -5.856823444366455

Token 443: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20213265717029572
    2. ':
' → logprob: -1.7021327018737793
    3. '       ' → logprob: -7.702132701873779
    4. '   ' → logprob: -8.702132225036621
    5. ':return' → logprob: -10.452132225036621
    6. ' or' → logprob: -11.077132225036621
    7. ' :
' → logprob: -11.452132225036621
    8. ' and' → logprob: -11.452132225036621
    9. ' :' → logprob: -11.577132225036621
    10. ',' → logprob: -12.327132225036621

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012237003829795867
    2. '           ' → logprob: -9.3751220703125
    3. ' val' → logprob: -11.6251220703125
    4. '   ' → logprob: -11.7501220703125
    5. ':' → logprob: -12.6251220703125
    6. '      ' → logprob: -12.7501220703125
    7. ',' → logprob: -13.1251220703125
    8. '     ' → logprob: -13.2501220703125
    9. 'val' → logprob: -13.6251220703125
    10. 'a' → logprob: -14.1251220703125

Token 445: ' print' (ID: 2123)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.18556280434131622
    2. '       ' → logprob: -2.5605628490448
    3. 'print' (adapté à ' print') → logprob: -3.0605628490448
    4. ' val' → logprob: -3.5605628490448
    5. '   ' → logprob: -4.685562610626221
    6. '           ' → logprob: -5.935562610626221
    7. 'raise' → logprob: -5.935562610626221
    8. ' print' → logprob: -6.685562610626221
    9. ' raise' → logprob: -8.185563087463379
    10. 'break' → logprob: -8.435563087463379

Token 446: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15050026774406433
    2. '(val' → logprob: -2.7755002975463867
    3. '("' → logprob: -3.6505002975463867
    4. '(-' → logprob: -4.150500297546387
    5. '(n' → logprob: -4.150500297546387
    6. '('' → logprob: -4.775500297546387
    7. '(i' → logprob: -5.025500297546387
    8. '()' → logprob: -5.650500297546387
    9. '(a' → logprob: -8.275500297546387
    10. '("?' → logprob: -8.525500297546387

Token 447: 'ERR' (ID: 5392)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.033032193779945374
    2. '(' → logprob: -5.158032417297363
    3. '1' → logprob: -5.408032417297363
    4. '"' → logprob: -5.408032417297363
    5. '(val' → logprob: -6.033032417297363
    6. 'a' → logprob: -6.158032417297363
    7. '101' → logprob: -6.408032417297363
    8. '0' → logprob: -6.533032417297363
    9. ' val' → logprob: -6.533032417297363
    10. 'i' → logprob: -6.658032417297363

Token 448: '",' (ID: 672)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.07046051323413849
    2. '()' → logprob: -2.945460557937622
    3. '")
' → logprob: -4.195460319519043
    4. ':' → logprob: -8.695460319519043
    5. ')")' → logprob: -9.195460319519043
    6. '!")' → logprob: -10.445460319519043
    7. '()
' → logprob: -10.570460319519043
    8. '")
' → logprob: -10.695460319519043
    9. ')' → logprob: -11.820460319519043
    10. 'or' → logprob: -12.195460319519043

Token 449: ' val' (ID: 1459)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.44454121589660645
    2. ' i' → logprob: -1.0695412158966064
    3. 'val' → logprob: -4.569540977478027
    4. ' val' → logprob: -5.694540977478027
    5. 'n' → logprob: -7.694540977478027
    6. ' n' → logprob: -7.819540977478027
    7. '(i' → logprob: -7.819540977478027
    8. ')' → logprob: -8.444540977478027
    9. ' (' → logprob: -8.694540977478027
    10. 'a' → logprob: -9.444540977478027

Token 450: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.42481285333633423
    2. ')' → logprob: -1.1748127937316895
    3. '       ' → logprob: -3.2998127937316895
    4. '   ' → logprob: -9.049813270568848
    5. ',' → logprob: -9.174813270568848
    6. ')
' → logprob: -9.424813270568848
    7. ' )
' → logprob: -11.674813270568848
    8. ' )' → logprob: -12.049813270568848
    9. '           ' → logprob: -12.174813270568848
    10. ')`
' → logprob: -12.424813270568848

Token 451: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05603611841797829
    2. '   ' → logprob: -2.9310362339019775
    3. ',' → logprob: -8.181035995483398
    4. '           ' → logprob: -8.556035995483398
    5. ')' → logprob: -8.681035995483398
    6. 'val' → logprob: -8.806035995483398
    7. '<|end|>' → logprob: -8.931035995483398
    8. 'raise' → logprob: -9.931035995483398
    9. '        
' → logprob: -10.306035995483398
    10. '    
' → logprob: -10.431035995483398

Token 452: ' raise' (ID: 9338)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.0446290969848633
    2. 'raise' (adapté à ' raise') → logprob: -1.4196290969848633
    3. 'exit' → logprob: -1.7946290969848633
    4. 'break' → logprob: -2.0446290969848633
    5. '       ' → logprob: -2.9196290969848633
    6. ' break' → logprob: -3.6696290969848633
    7. ' raise' → logprob: -4.294629096984863
    8. ' exit' → logprob: -4.669629096984863
    9. ' val' → logprob: -5.169629096984863
    10. 'import' → logprob: -6.794629096984863

Token 453: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.06278707832098007
    2. 'Overflow' → logprob: -2.8127870559692383
    3. 'Runtime' → logprob: -7.687787055969238
    4. ' Value' → logprob: -8.312787055969238
    5. 'Exception' → logprob: -9.562787055969238
    6. 'Assertion' → logprob: -11.062787055969238
    7. ' Overflow' → logprob: -11.187787055969238
    8. 'Arithmetic' → logprob: -11.937787055969238
    9. '(Value' → logprob: -12.812787055969238
    10. 'Memory' → logprob: -13.062787055969238

Token 454: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -3.128163257315464e-07
    2. 'Value' → logprob: -16.125
    3. 'rror' → logprob: -16.125
    4. 'Overflow' → logprob: -18.5
    5. 'SError' → logprob: -18.75
    6. 'Warning' → logprob: -20.125
    7. '```' → logprob: -20.5
    8. '_Error' → logprob: -20.625
    9. 'Erro' → logprob: -21.25
    10. 'Errors' → logprob: -21.375

Token 455: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002770167076960206
    2. '()
' → logprob: -6.252769947052002
    3. '   ' → logprob: -7.127769947052002
    4. '(' → logprob: -10.50277042388916
    5. '()

' → logprob: -12.87777042388916
    6. '()\' → logprob: -13.25277042388916
    7. '()
' → logprob: -13.37777042388916
    8. '(),' → logprob: -14.00277042388916
    9. '()]' → logprob: -14.37777042388916
    10. '(
' → logprob: -14.50277042388916

Token 456: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.474481463432312
    2. '   ' → logprob: -0.974481463432312
    3. ' a' → logprob: -7.849481582641602
    4. '	a' → logprob: -11.849481582641602
    5. '       ' → logprob: -12.724481582641602
    6. 'val' → logprob: -13.099481582641602
    7. '    
' → logprob: -14.224481582641602
    8. ' ' → logprob: -15.224481582641602
    9. 'if' → logprob: -15.224481582641602
    10. 'for' → logprob: -15.349481582641602

Token 457: ' res' (ID: 694)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011607575230300426
    2. '   ' → logprob: -4.511607646942139
    3. ' a' → logprob: -7.511607646942139
    4. 'val' → logprob: -11.76160717010498
    5. 'for' → logprob: -13.63660717010498
    6. ' ' → logprob: -13.76160717010498
    7. 'if' → logprob: -13.88660717010498
    8. '	a' → logprob: -14.13660717010498
    9. '  ' → logprob: -14.76160717010498
    10. '       ' → logprob: -15.13660717010498

Token 458: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3795951008796692
    2. '[' → logprob: -1.5045950412750244
    3. ' =' → logprob: -2.6295950412750244
    4. '   ' → logprob: -4.6295952796936035
    5. '=' → logprob: -4.8795952796936035
    6. '[j' → logprob: -5.7545952796936035
    7. ' a' → logprob: -8.879594802856445
    8. ' [' → logprob: -9.004594802856445
    9. '[]' → logprob: -9.004594802856445
    10. 'a' → logprob: -9.254594802856445

Token 459: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.11113777756690979
    2. ' val' → logprob: -2.361137866973877
    3. 'random' → logprob: -5.736137866973877
    4. 'int' → logprob: -6.736137866973877
    5. 'pr' → logprob: -6.736137866973877
    6. 'a' → logprob: -6.986137866973877
    7. ' random' → logprob: -7.111137866973877
    8. '5' → logprob: -7.611137866973877
    9. '0' → logprob: -7.736137866973877
    10. '1' → logprob: -7.736137866973877

Token 460: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5810993909835815
    2. ' +' → logprob: -1.2060993909835815
    3. '+' → logprob: -2.456099510192871
    4. ' if' → logprob: -4.081099510192871
    5. '    
' → logprob: -4.706099510192871
    6. '   ' → logprob: -5.081099510192871
    7. ' *' → logprob: -5.206099510192871
    8. 'if' → logprob: -5.331099510192871
    9. ' //' → logprob: -5.831099510192871
    10. '*' → logprob: -5.831099510192871

Token 461: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017588576301932335
    2. ' ' → logprob: -4.3925886154174805
    3. 'pr' → logprob: -6.0175886154174805
    4. ' random' → logprob: -6.8925886154174805
    5. 'random' → logprob: -7.2675886154174805
    6. ' pr' → logprob: -7.6425886154174805
    7. '2' → logprob: -8.89258861541748
    8. '100' → logprob: -10.26758861541748
    9. 'val' → logprob: -10.39258861541748
    10. '10' → logprob: -10.64258861541748

Token 462: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07380205392837524
    2. 'pr' → logprob: -2.6988019943237305
    3. 'random' → logprob: -6.4488019943237305
    4. '2' → logprob: -6.9488019943237305
    5. 'val' → logprob: -8.07380199432373
    6. 'n' → logprob: -8.69880199432373
    7. '(pr' → logprob: -8.94880199432373
    8. 'a' → logprob: -9.44880199432373
    9. '7' → logprob: -9.69880199432373
    10. '100' → logprob: -9.94880199432373

Token 463: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4669376313686371
    2. '
' → logprob: -1.2169376611709595
    3. '<|end|>' → logprob: -2.71693754196167
    4. 'a' → logprob: -4.71693754196167
    5. '    
' → logprob: -6.59193754196167
    6. '<|end|>' → logprob: -8.716938018798828
    7. ' a' → logprob: -9.341938018798828
    8. ')' → logprob: -9.466938018798828
    9. '	a' → logprob: -10.341938018798828
    10. '[a' → logprob: -10.466938018798828

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0780198723077774
    2. 'a' → logprob: -2.703019857406616
    3. '
' → logprob: -5.578020095825195
    4. ' a' → logprob: -6.578020095825195
    5. '<|end|>' → logprob: -6.578020095825195
    6. '    
' → logprob: -6.828020095825195
    7. '	a' → logprob: -9.078020095825195
    8. '  
' → logprob: -9.328020095825195
    9. '[a' → logprob: -9.828020095825195
    10. '   
' → logprob: -10.203020095825195

Token 465: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31540024280548096
    2. 'a' → logprob: -1.315400242805481
    3. ' a' → logprob: -6.190400123596191
    4. '    
' → logprob: -9.565400123596191
    5. '
' → logprob: -12.190400123596191
    6. '	a' → logprob: -12.690400123596191
    7. 'if' → logprob: -12.940400123596191
    8. '```' → logprob: -13.690400123596191
    9. ' if' → logprob: -14.065400123596191
    10. '  ' → logprob: -14.190400123596191

Token 466: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0642019510269165
    2. 'True' → logprob: -2.939201831817627
    3. 'used' → logprob: -5.689201831817627
    4. 'any' → logprob: -5.814201831817627
    5. ' res' → logprob: -6.564201831817627
    6. ' True' → logprob: -7.314201831817627
    7. '(True' → logprob: -8.064202308654785
    8. '(res' → logprob: -8.314202308654785
    9. 'not' → logprob: -9.564202308654785
    10. ' used' → logprob: -10.189202308654785

Token 467: ' in' (ID: 306)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.05103253573179245
    2. '<=' → logprob: -3.551032543182373
    3. ' %' → logprob: -4.301032543182373
    4. ' <' → logprob: -5.676032543182373
    5. '%' → logprob: -5.801032543182373
    6. ' not' → logprob: -7.676032543182373
    7. '<' → logprob: -8.426032066345215
    8. ' in' → logprob: -8.551032066345215
    9. ' >' → logprob: -9.551032066345215
    10. ' >=' → logprob: -10.926032066345215

Token 468: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.023245826363563538
    2. ' used' → logprob: -3.7732458114624023
    3. '.used' → logprob: -15.773245811462402
    4. '   ' → logprob: -16.27324676513672
    5. '
' → logprob: -17.64824676513672
    6. '_used' → logprob: -17.77324676513672
    7. 'user' → logprob: -18.39824676513672
    8. ' ' → logprob: -18.64824676513672
    9. 'Used' → logprob: -19.02324676513672
    10. 'unused' → logprob: -19.02324676513672

Token 469: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4955137372016907
    2. ':
' → logprob: -0.9955137372016907
    3. ' or' → logprob: -4.120513916015625
    4. ' and' → logprob: -5.495513916015625
    5. '   ' → logprob: -7.870513916015625
    6. ',' → logprob: -9.370513916015625
    7. 'and' → logprob: -9.370513916015625
    8. '       ' → logprob: -9.620513916015625
    9. '):
' → logprob: -9.620513916015625
    10. '<|end|>' → logprob: -9.620513916015625

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05060107260942459
    2. ' res' → logprob: -3.050601005554199
    3. 'res' → logprob: -6.550601005554199
    4. '   ' → logprob: -8.0506010055542
    5. '	res' → logprob: -9.5506010055542
    6. '<|end|>' → logprob: -9.8006010055542
    7. '```' → logprob: -10.1756010055542
    8. ',res' → logprob: -10.6756010055542
    9. '
' → logprob: -11.5506010055542
    10. ':
' → logprob: -11.8006010055542

Token 471: ' k' (ID: 372)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.33007076382637024
    2. ' res' → logprob: -1.3300707340240479
    3. '       ' → logprob: -4.330070972442627
    4. '   ' → logprob: -5.705070972442627
    5. '           ' → logprob: -8.955070495605469
    6. '	res' → logprob: -10.580070495605469
    7. ' ' → logprob: -11.955070495605469
    8. ',res' → logprob: -12.830070495605469
    9. '  ' → logprob: -13.080070495605469
    10. '               ' → logprob: -13.205070495605469

Token 472: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07891710847616196
    2. ' +=' → logprob: -2.5789170265197754
    3. '+' → logprob: -10.828917503356934
    4. '=' → logprob: -12.703917503356934
    5. 'res' → logprob: -13.578917503356934
    6. ']+=' → logprob: -13.828917503356934
    7. ' ' → logprob: -14.453917503356934
    8. '   ' → logprob: -14.953917503356934
    9. '+=(' → logprob: -15.578917503356934
    10. '  ' → logprob: -15.828917503356934

Token 473: ' random' (ID: 7526)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.1413726955652237
    2. ' random' → logprob: -2.1413726806640625
    3. 'res' → logprob: -4.8913726806640625
    4. '2' → logprob: -5.6413726806640625
    5. '1' → logprob: -6.7663726806640625
    6. '(random' → logprob: -7.2663726806640625
    7. ' res' → logprob: -7.8913726806640625
    8. 'k' → logprob: -8.141372680664062
    9. ' ' → logprob: -8.766372680664062
    10. 'int' → logprob: -9.016372680664062

Token 474: '.randint' (ID: 55817)
  Prédit: '.randint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.randint' → logprob: -0.0012379679828882217
    2. '.randrange' → logprob: -6.751237869262695
    3. '.' → logprob: -9.876237869262695
    4. '.random' → logprob: -11.626237869262695
    5. '(' → logprob: -12.501237869262695
    6. '.choice' → logprob: -13.626237869262695
    7. '.Random' → logprob: -14.001237869262695
    8. '().' → logprob: -14.376237869262695
    9. ' randint' → logprob: -14.626237869262695
    10. '.uniform' → logprob: -15.876237869262695

Token 475: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024370834580622613
    2. '1' → logprob: -8.375244140625
    3. '0' → logprob: -11.875244140625
    4. '(-' → logprob: -12.875244140625
    5. '2' → logprob: -13.000244140625
    6. '(res' → logprob: -14.500244140625
    7. ' ' → logprob: -15.125244140625
    8. ' (' → logprob: -15.250244140625
    9. 'res' → logprob: -16.250244140625
    10. 'a' → logprob: -16.625244140625

Token 476: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06268485635519028
    2. '2' → logprob: -3.4376847743988037
    3. '0' → logprob: -3.5626847743988037
    4. ' ' → logprob: -8.562685012817383
    5. 'res' → logprob: -11.062685012817383
    6. '100' → logprob: -11.312685012817383
    7. 'val' → logprob: -11.562685012817383
    8. '10' → logprob: -11.562685012817383
    9. '3' → logprob: -11.937685012817383
    10. '5' → logprob: -12.437685012817383

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010924850590527058
    2. ',res' → logprob: -4.760924816131592
    3. ' ,' → logprob: -6.260924816131592
    4. '10' → logprob: -8.13592529296875
    5. 'res' → logprob: -10.63592529296875
    6. ' res' → logprob: -10.63592529296875
    7. '100' → logprob: -11.51092529296875
    8. '5' → logprob: -11.51092529296875
    9. '0' → logprob: -11.63592529296875
    10. '2' → logprob: -12.26092529296875

Token 478: ' (' (ID: 350)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6253310441970825
    2. '100' → logprob: -0.8753310441970825
    3. ' ' → logprob: -3.875330924987793
    4. '5' → logprob: -4.625330924987793
    5. '20' → logprob: -4.875330924987793
    6. '50' → logprob: -5.875330924987793
    7. '3' → logprob: -6.125330924987793
    8. '4' → logprob: -7.250330924987793
    9. '30' → logprob: -7.375330924987793
    10. '500' → logprob: -7.500330924987793

Token 479: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6560474634170532
    2. '10' → logprob: -0.7810474634170532
    3. '20' → logprob: -5.031047344207764
    4. ' ' → logprob: -5.531047344207764
    5. '5' → logprob: -5.656047344207764
    6. '50' → logprob: -5.781047344207764
    7. '500' → logprob: -6.781047344207764
    8. '200' → logprob: -7.031047344207764
    9. '30' → logprob: -7.156047344207764
    10. '15' → logprob: -7.781047344207764

Token 480: ' **' (ID: 6240)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.17592300474643707
    2. '7' → logprob: -2.6759231090545654
    3. '5' → logprob: -2.9259231090545654
    4. '9' → logprob: -3.9259231090545654
    5. '8' → logprob: -4.425922870635986
    6. '4' → logprob: -5.550922870635986
    7. '3' → logprob: -6.675922870635986
    8. '12' → logprob: -6.925922870635986
    9. '10' → logprob: -7.300922870635986
    10. '15' → logprob: -9.175923347473145

Token 481: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.6288753151893616
    2. '9' → logprob: -1.6288752555847168
    3. '7' → logprob: -1.8788752555847168
    4. '8' → logprob: -3.128875255584717
    5. '12' → logprob: -3.503875255584717
    6. '5' → logprob: -3.503875255584717
    7. '10' → logprob: -4.878875255584717
    8. '4' → logprob: -6.378875255584717
    9. '11' → logprob: -6.503875255584717
    10. '3' → logprob: -6.753875255584717

Token 482: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.8486505746841431
    2. '6' → logprob: -1.223650574684143
    3. '7' → logprob: -2.4736504554748535
    4. '12' → logprob: -2.4736504554748535
    5. '8' → logprob: -2.9736504554748535
    6. '10' → logprob: -3.8486504554748535
    7. '5' → logprob: -3.9736504554748535
    8. '11' → logprob: -5.2236504554748535
    9. '15' → logprob: -5.4736504554748535
    10. '14' → logprob: -5.9736504554748535

Token 483: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8137429356575012
    2. '))' → logprob: -1.0637428760528564
    3. '))
' → logprob: -1.8137428760528564
    4. ' )' → logprob: -4.3137431144714355
    5. '6' → logprob: -5.3137431144714355
    6. '-' → logprob: -5.5637431144714355
    7. ')//' → logprob: -5.5637431144714355
    8. '   ' → logprob: -5.6887431144714355
    9. ' ))
' → logprob: -5.6887431144714355
    10. ' -' → logprob: -5.8137431144714355

Token 484: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.140769124031067
    2. '100' → logprob: -1.265769124031067
    3. 'res' → logprob: -1.390769124031067
    4. '5' → logprob: -3.2657690048217773
    5. '1' → logprob: -3.5157690048217773
    6. '6' → logprob: -3.6407690048217773
    7. '9' → logprob: -4.265769004821777
    8. '4' → logprob: -4.640769004821777
    9. '3' → logprob: -4.765769004821777
    10. 'int' → logprob: -5.515769004821777

Token 485: '1' (ID: 16)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.32719334959983826
    2. '10' → logprob: -2.702193260192871
    3. '9' → logprob: -2.827193260192871
    4. '1' → logprob: -3.202193260192871
    5. '6' → logprob: -3.452193260192871
    6. '100' → logprob: -3.952193260192871
    7. 'int' → logprob: -4.202193260192871
    8. '5' → logprob: -4.452193260192871
    9. '(res' → logprob: -4.827193260192871
    10. '4' → logprob: -5.077193260192871

Token 486: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06362681835889816
    2. '))' → logprob: -3.063626766204834
    3. ')//' → logprob: -4.438626766204834
    4. '))
' → logprob: -6.188626766204834
    5. ' )' → logprob: -7.438626766204834
    6. ')>>' → logprob: -8.313627243041992
    7. 'res' → logprob: -9.813627243041992
    8. ')
' → logprob: -10.438627243041992
    9. '   ' → logprob: -10.563627243041992
    10. '0' → logprob: -10.563627243041992

Token 487: ' //' (ID: 602)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.006087815389037132
    2. ')' → logprob: -5.131087779998779
    3. ' )
' → logprob: -9.006088256835938
    4. 'res' → logprob: -11.631088256835938
    5. '       ' → logprob: -12.006088256835938
    6. '   ' → logprob: -12.131088256835938
    7. ')

' → logprob: -12.131088256835938
    8. ')
' → logprob: -12.756088256835938
    9. '//' → logprob: -13.256088256835938
    10. ' res' → logprob: -13.631088256835938

Token 488: ' val' (ID: 1459)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.01824464648962021
    2. 'val' → logprob: -4.643244743347168
    3. ' res' → logprob: -5.268244743347168
    4. '5' → logprob: -6.518244743347168
    5. '10' → logprob: -7.643244743347168
    6. '(res' → logprob: -8.143244743347168
    7. '100' → logprob: -8.268244743347168
    8. '   ' → logprob: -8.643244743347168
    9. 'n' → logprob: -9.018244743347168
    10. ' val' → logprob: -9.518244743347168

Token 489: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04334159195423126
    2. ')' → logprob: -3.168341636657715
    3. '       ' → logprob: -8.668341636657715
    4. ')+' → logprob: -9.418341636657715
    5. ' )
' → logprob: -9.793341636657715
    6. ')
' → logprob: -11.043341636657715
    7. '   ' → logprob: -12.168341636657715
    8. ')

' → logprob: -12.668341636657715
    9. '+' → logprob: -12.918341636657715
    10. ' )' → logprob: -13.043341636657715

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053630851209163666
    2. 'res' → logprob: -3.428630828857422
    3. ' res' → logprob: -3.928630828857422
    4. ',res' → logprob: -10.178630828857422
    5. '   ' → logprob: -10.303630828857422
    6. '	res' → logprob: -11.178630828857422
    7. '
' → logprob: -11.678630828857422
    8. '        
' → logprob: -12.553630828857422
    9. '(res' → logprob: -12.678630828857422
    10. '           ' → logprob: -13.053630828857422

Token 491: ' res' (ID: 694)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2466893345117569
    2. ' res' → logprob: -1.7466893196105957
    3. 'res' (adapté à ' res') → logprob: -3.1216893196105957
    4. '   ' → logprob: -9.246689796447754
    5. '	res' → logprob: -9.871689796447754
    6. ' ' → logprob: -10.996689796447754
    7. '
' → logprob: -12.121689796447754
    8. ' val' → logprob: -12.621689796447754
    9. ',res' → logprob: -13.121689796447754
    10. '      ' → logprob: -13.621689796447754

Token 492: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31337690353393555
    2. '=' → logprob: -1.3133769035339355
    3. '*=' → logprob: -9.563377380371094
    4. ' *=' → logprob: -10.563377380371094
    5. '+=' → logprob: -11.188377380371094
    6. ' +=' → logprob: -12.438377380371094
    7. '-=' → logprob: -14.188377380371094
    8. ' -=' → logprob: -16.063377380371094
    9. '.=' → logprob: -16.188377380371094
    10. ' ' → logprob: -16.188377380371094

Token 493: ' k' (ID: 372)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.05159661918878555
    2. ' val' → logprob: -3.4265966415405273
    3. 'k' → logprob: -4.051596641540527
    4. ' k' → logprob: -7.926596641540527
    5. '   ' → logprob: -11.301596641540527
    6. '(val' → logprob: -11.801596641540527
    7. ' ' → logprob: -12.551596641540527
    8. '  ' → logprob: -13.301596641540527
    9. '    ' → logprob: -13.551596641540527
    10. '(k' → logprob: -13.676596641540527

Token 494: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25192946195602417
    2. '*' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.50192928314209
    4. ' ' → logprob: -17.001930236816406
    5. 'val' → logprob: -17.001930236816406
    6. '[val' → logprob: -17.376930236816406
    7. '
' → logprob: -17.501930236816406
    8. '*(' → logprob: -17.876930236816406
    9. '```' → logprob: -19.126930236816406
    10. '**' → logprob: -19.126930236816406

Token 495: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0009114635176956654
    2. ' val' → logprob: -7.000911235809326
    3. '	val' → logprob: -18.500911712646484
    4. '[val' → logprob: -19.750911712646484
    5. '(val' → logprob: -20.125911712646484
    6. '_val' → logprob: -21.125911712646484
    7. 'v' → logprob: -21.375911712646484
    8. '   ' → logprob: -21.500911712646484
    9. ',val' → logprob: -21.750911712646484
    10. ' ' → logprob: -22.250911712646484

Token 496: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868778347969055
    2. ' +' → logprob: -1.1368777751922607
    3. '+
' → logprob: -13.13687801361084
    4. '   ' → logprob: -13.63687801361084
    5. '+x' → logprob: -13.76187801361084
    6. ' +
' → logprob: -14.01187801361084
    7. '       ' → logprob: -14.26187801361084
    8. ' plus' → logprob: -15.63687801361084
    9. '+k' → logprob: -16.136877059936523
    10. ' ' → logprob: -16.136877059936523

Token 497: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8802491215174086e-05
    2. ' ' → logprob: -10.500028610229492
    3. 'val' → logprob: -13.750028610229492
    4. 'random' → logprob: -16.625028610229492
    5. '0' → logprob: -17.875028610229492
    6. '(' → logprob: -18.000028610229492
    7. 'res' → logprob: -18.000028610229492
    8. ' random' → logprob: -18.500028610229492
    9. ' (' → logprob: -18.500028610229492
    10. ' val' → logprob: -18.625028610229492

Token 498: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. 'random' → logprob: -15.625
    4. 'val' → logprob: -17.75
    5. '<|end|>' → logprob: -18.375
    6. '(' → logprob: -18.875
    7. 'res' → logprob: -19.125
    8. 'a' → logprob: -20.0
    9. ' random' → logprob: -20.0
    10. '(random' → logprob: -20.25

Token 499: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027995076030492783
    2. '<|end|>' → logprob: -4.1529951095581055
    3. '
' → logprob: -4.9029951095581055
    4. '    
' → logprob: -5.9029951095581055
    5. '<|end|>' → logprob: -7.6529951095581055
    6. '  
' → logprob: -7.7779951095581055
    7. ' 
' → logprob: -8.152995109558105
    8. '       ' → logprob: -9.402995109558105
    9. '        
' → logprob: -9.527995109558105
    10. '[' → logprob: -9.527995109558105

Token 500: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1240568682551384
    2. '   ' → logprob: -2.624056816101074
    3. 'used' → logprob: -3.999056816101074
    4. ')' → logprob: -4.124056816101074
    5. ' a' → logprob: -5.499056816101074
    6. ' used' → logprob: -5.999056816101074
    7. '    
' → logprob: -6.374056816101074
    8. ')
' → logprob: -8.249056816101074
    9. ' 
' → logprob: -8.499056816101074
    10. 'res' → logprob: -8.624056816101074

Token 501: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.1608268916606903
    2. 'used' → logprob: -1.9108269214630127
    3. '   ' → logprob: -7.660826683044434
    4. ' used' → logprob: -9.410826683044434
    5. ' a' → logprob: -10.160826683044434
    6. 'res' → logprob: -11.660826683044434
    7. 'while' → logprob: -13.660826683044434
    8. 'print' → logprob: -14.285826683044434
    9. '    
' → logprob: -15.035826683044434
    10. 'val' → logprob: -16.16082763671875

Token 502: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.875
    3. '[' → logprob: -17.5
    4. '[j' → logprob: -19.0
    5. '[a' → logprob: -19.125
    6. '[I' → logprob: -19.625
    7. '```' → logprob: -20.125
    8. 'a' → logprob: -20.5
    9. '[n' → logprob: -21.25
    10. '[int' → logprob: -21.375

Token 503: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.6656825866666622e-05
    2. '[i' → logprob: -11.12502670288086
    3. ']' → logprob: -11.62502670288086
    4. '[j' → logprob: -13.87502670288086
    5. '[' → logprob: -14.25002670288086
    6. ' ][' → logprob: -14.50002670288086
    7. '"][' → logprob: -15.75002670288086
    8. '   ' → logprob: -16.12502670288086
    9. ''][' → logprob: -16.12502670288086
    10. 'i' → logprob: -16.62502670288086

Token 504: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.816093228830141e-06
    2. ' j' → logprob: -13.00000286102295
    3. '	j' → logprob: -15.62500286102295
    4. '   ' → logprob: -17.125001907348633
    5. '[j' → logprob: -17.125001907348633
    6. '```' → logprob: -17.500001907348633
    7. ',j' → logprob: -17.750001907348633
    8. ']' → logprob: -18.000001907348633
    9. ':j' → logprob: -18.250001907348633
    10. '$j' → logprob: -18.375001907348633

Token 505: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020435559563338757
    2. '=' → logprob: -6.627043724060059
    3. ']=' → logprob: -7.252043724060059
    4. ' =' → logprob: -11.752043724060059
    5. ' ]' → logprob: -14.877043724060059
    6. ')' → logprob: -15.002043724060059
    7. '[' → logprob: -18.127042770385742
    8. ')=' → logprob: -18.752042770385742
    9. '],' → logprob: -19.127042770385742
    10. ']
' → logprob: -19.252042770385742

Token 506: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. '＝' → logprob: -19.328889846801758
    4. '=
' → logprob: -19.453889846801758
    5. ' ' → logprob: -19.828889846801758
    6. '=a' → logprob: -20.578889846801758
    7. '   ' → logprob: -20.828889846801758
    8. '=

' → logprob: -20.828889846801758
    9. '.=' → logprob: -21.578889846801758
    10. ' =
' → logprob: -21.578889846801758

Token 507: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -7.493430894101039e-05
    2. ' res' → logprob: -9.500075340270996
    3. 'int' → logprob: -18.87507438659668
    4. '	res' → logprob: -19.50007438659668
    5. '(res' → logprob: -19.75007438659668
    6. '   ' → logprob: -20.12507438659668
    7. '$res' → logprob: -20.37507438659668
    8. 'val' → logprob: -22.12507438659668
    9. '_res' → logprob: -22.62507438659668
    10. ' ' → logprob: -22.62507438659668

Token 508: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03467816859483719
    2. 'used' → logprob: -3.5346782207489014
    3. ' used' → logprob: -5.909677982330322
    4. '<|end|>' → logprob: -6.784677982330322
    5. '
' → logprob: -6.909677982330322
    6. '    
' → logprob: -10.78467845916748
    7. '```' → logprob: -11.15967845916748
    8. '       ' → logprob: -11.53467845916748
    9. '  ' → logprob: -11.53467845916748
    10. ' ' → logprob: -12.78467845916748

Token 509: '   ' (ID: 271)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.10417113453149796
    2. '   ' → logprob: -2.35417103767395
    3. ' used' → logprob: -5.604171276092529
    4. 'print' → logprob: -8.854170799255371
    5. '<|end|>' → logprob: -9.229170799255371
    6. '       ' → logprob: -11.479170799255371
    7. '  ' → logprob: -12.229170799255371
    8. '    
' → logprob: -12.479170799255371
    9. '.used' → logprob: -12.479170799255371
    10. '```' → logprob: -12.854170799255371

Token 510: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.0006221305229701102
    2. '   ' → logprob: -7.500622272491455
    3. ' used' → logprob: -9.625621795654297
    4. 'while' → logprob: -13.375621795654297
    5. 'if' → logprob: -13.625621795654297
    6. 'print' → logprob: -14.875621795654297
    7. 'Used' → logprob: -17.250621795654297
    8. '.used' → logprob: -17.500621795654297
    9. '
' → logprob: -17.625621795654297
    10. 'assert' → logprob: -18.625621795654297

Token 511: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -9.627176768844947e-05
    2. '.' → logprob: -9.250096321105957
    3. ' .' → logprob: -15.625096321105957
    4. '.setdefault' → logprob: -18.12509536743164
    5. '.append' → logprob: -18.25009536743164
    6. 'add' → logprob: -18.25009536743164
    7. '.Add' → logprob: -18.25009536743164
    8. ').' → logprob: -18.75009536743164
    9. '.update' → logprob: -19.12509536743164
    10. '\.' → logprob: -19.50009536743164

Token 512: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0021208771504461765
    2. '(a' → logprob: -6.5021209716796875
    3. 'res' → logprob: -7.5021209716796875
    4. 'a' → logprob: -9.627120971679688
    5. ' res' → logprob: -15.002120971679688
    6. '(' → logprob: -16.127120971679688
    7. '	res' → logprob: -16.752120971679688
    8. '$res' → logprob: -17.877120971679688
    9. '=res' → logprob: -18.877120971679688
    10. ',res' → logprob: -18.877120971679688

Token 513: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.180258191714529e-06
    2. ')
' → logprob: -12.125008583068848
    3. '<|end|>' → logprob: -13.875008583068848
    4. ' )' → logprob: -14.625008583068848
    5. ')return' → logprob: -15.000008583068848
    6. ')

' → logprob: -15.500008583068848
    7. '}' → logprob: -15.500008583068848
    8. '   ' → logprob: -16.25000762939453
    9. ')a' → logprob: -16.25000762939453
    10. ')}' → logprob: -16.75000762939453

Token 514: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2761757969856262
    2. '<|end|>' → logprob: -1.7761757373809814
    3. 'for' → logprob: -2.9011757373809814
    4. '```' → logprob: -4.5261759757995605
    5. ')' → logprob: -5.4011759757995605
    6. '#' → logprob: -7.2761759757995605
    7. ']' → logprob: -7.7761759757995605
    8. '[' → logprob: -8.651175498962402
    9. '<|end|>' → logprob: -9.401175498962402
    10. ' for' → logprob: -9.526175498962402

Token 515: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.42931708693504333
    2. 'i' → logprob: -1.0543171167373657
    3. ' row' → logprob: -7.679316997528076
    4. 'row' → logprob: -9.554317474365234
    5. ' ' → logprob: -10.679317474365234
    6. '_i' → logprob: -10.804317474365234
    7. ' line' → logprob: -11.429317474365234
    8. '	i' → logprob: -11.429317474365234
    9. '_' → logprob: -11.679317474365234
    10. ' _' → logprob: -12.804317474365234

Token 516: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022292369976639748
    2. 'in' → logprob: -6.1272292137146
    3. ' range' → logprob: -11.377229690551758
    4. ' ' → logprob: -11.502229690551758
    5. 'range' → logprob: -11.627229690551758
    6. 'n' → logprob: -11.752229690551758
    7. ' n' → logprob: -13.752229690551758
    8. '_' → logprob: -14.002229690551758
    9. '  ' → logprob: -14.377229690551758
    10. '0' → logprob: -14.502229690551758

Token 517: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002476016292348504
    2. ' range' → logprob: -6.002476215362549
    3. ' ' → logprob: -15.75247573852539
    4. 'a' → logprob: -15.75247573852539
    5. '(range' → logprob: -18.12747573852539
    6. '  ' → logprob: -18.12747573852539
    7. ')' → logprob: -18.25247573852539
    8. '   ' → logprob: -18.25247573852539
    9. '```' → logprob: -18.87747573852539
    10. 'n' → logprob: -19.62747573852539

Token 518: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019475567387416959
    2. 'n' → logprob: -6.251947402954102
    3. '(' → logprob: -10.876947402954102
    4. '(len' → logprob: -16.8769474029541
    5. '(
' → logprob: -17.2519474029541
    6. ' (' → logprob: -17.8769474029541
    7. ' n' → logprob: -18.1269474029541
    8. '   ' → logprob: -18.7519474029541
    9. '	n' → logprob: -18.7519474029541
    10. 'a' → logprob: -18.8769474029541

Token 519: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014177493751049042
    2. '):
' → logprob: -4.264177322387695
    3. ':' → logprob: -11.889177322387695
    4. '):
' → logprob: -12.764177322387695
    5. ']:' → logprob: -13.514177322387695
    6. '():' → logprob: -14.139177322387695
    7. '}:' → logprob: -14.514177322387695
    8. ' ):' → logprob: -14.764177322387695
    9. '+' → logprob: -15.139177322387695
    10. '   ' → logprob: -15.139177322387695

Token 520: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007787373848259449
    2. ' print' → logprob: -5.257787227630615
    3. 'print' → logprob: -6.007787227630615
    4. ' for' → logprob: -10.132787704467773
    5. '	print' → logprob: -10.632787704467773
    6. 'for' → logprob: -10.882787704467773
    7. '       ' → logprob: -12.507787704467773
    8. ' ' → logprob: -14.007787704467773
    9. '```' → logprob: -14.132787704467773
    10. '    ' → logprob: -14.507787704467773

Token 521: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03817082196474075
    2. '   ' → logprob: -3.53817081451416
    3. ' print' → logprob: -4.78817081451416
    4. 'for' → logprob: -9.78817081451416
    5. ' for' → logprob: -14.28817081451416
    6. '	print' → logprob: -14.91317081451416
    7. ' ' → logprob: -16.788171768188477
    8. '    
' → logprob: -16.913171768188477
    9. '    ' → logprob: -17.163171768188477
    10. '       ' → logprob: -17.288171768188477

Token 522: '("' (ID: 568)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.2652979791164398
    2. '('' → logprob: -1.5152980089187622
    3. '(' → logprob: -5.015297889709473
    4. '("' → logprob: -5.015297889709473
    5. '*' → logprob: -13.015297889709473
    6. '()' → logprob: -13.140297889709473
    7. '(*)' → logprob: -13.390297889709473
    8. '(*(' → logprob: -13.765297889709473
    9. '"' → logprob: -14.265297889709473
    10. '(
' → logprob: -14.640297889709473

Token 523: ' ".' (ID: 11730)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5993187427520752
    2. '"' → logprob: -0.8493187427520752
    3. ''' → logprob: -3.849318742752075
    4. '*a' → logprob: -6.599318504333496
    5. ' *' → logprob: -8.349318504333496
    6. '"a' → logprob: -10.099318504333496
    7. ' "' → logprob: -10.349318504333496
    8. '*"' → logprob: -10.474318504333496
    9. ''a' → logprob: -10.849318504333496
    10. '"*' → logprob: -10.849318504333496

Token 524: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.173704271830502e-06
    2. ' join' → logprob: -12.75000286102295
    3. 'j' → logprob: -16.500003814697266
    4. 'print' → logprob: -16.500003814697266
    5. 'jo' → logprob: -17.500003814697266
    6. '.join' → logprob: -19.000003814697266
    7. '.' → logprob: -19.500003814697266
    8. '(join' → logprob: -19.875003814697266
    9. '```' → logprob: -21.000003814697266
    10. ').' → logprob: -21.125003814697266

Token 525: '(map' (ID: 16946)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.37015867233276367
    2. '(str' → logprob: -1.3701586723327637
    3. 'map' → logprob: -3.6201586723327637
    4. '[str' → logprob: -3.8701586723327637
    5. '(map' → logprob: -4.870158672332764
    6. ' str' → logprob: -13.370159149169922
    7. '	str' → logprob: -14.745159149169922
    8. ' map' → logprob: -14.745159149169922
    9. '=str' → logprob: -15.495159149169922
    10. '[' → logprob: -15.745159149169922

Token 526: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -5.860340752406046e-05
    2. 'str' → logprob: -9.7500581741333
    3. '(' → logprob: -15.5000581741333
    4. ' str' → logprob: -17.125059127807617
    5. '[str' → logprob: -17.500059127807617
    6. '=str' → logprob: -17.750059127807617
    7. '   ' → logprob: -18.500059127807617
    8. '(
' → logprob: -18.750059127807617
    9. '```' → logprob: -18.750059127807617
    10. ' (' → logprob: -19.250059127807617

Token 527: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.2961512513575144e-05
    2. 'a' → logprob: -11.250022888183594
    3. ',a' → logprob: -12.375022888183594
    4. ',' → logprob: -12.500022888183594
    5. '(' → logprob: -13.875022888183594
    6. ' a' → logprob: -14.875022888183594
    7. ' (' → logprob: -14.875022888183594
    8. ')a' → logprob: -16.375022888183594
    9. '(
' → logprob: -16.500022888183594
    10. '	a' → logprob: -16.625022888183594

Token 528: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007117166533134878
    2. ' a' → logprob: -7.250711917877197
    3. '(a' → logprob: -13.375711441040039
    4. '	a' → logprob: -15.875711441040039
    5. '[a' → logprob: -16.00071144104004
    6. '   ' → logprob: -19.00071144104004
    7. ')a' → logprob: -19.12571144104004
    8. ',a' → logprob: -20.37571144104004
    9. '
' → logprob: -20.75071144104004
    10. '#a' → logprob: -21.12571144104004

Token 529: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[n' → logprob: -15.875
    3. '[a' → logprob: -17.625
    4. '[' → logprob: -19.625
    5. ' [' → logprob: -19.75
    6. '[j' → logprob: -21.625
    7. '[
' → logprob: -21.625
    8. '[o' → logprob: -21.75
    9. '[[' → logprob: -22.25
    10. ')[' → logprob: -22.75

Token 530: '])))' (ID: 196150)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.007580835837870836
    2. '[i' → logprob: -5.132580757141113
    3. ']))' → logprob: -6.632580757141113
    4. '])))' → logprob: -9.257580757141113
    5. ' ' → logprob: -9.757580757141113
    6. '))))' → logprob: -10.007580757141113
    7. ']' → logprob: -10.132580757141113
    8. '))' → logprob: -10.382580757141113
    9. ')' → logprob: -10.507580757141113
    10. '[' → logprob: -10.757580757141113


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 528
Tokens correctement prédits (1ère position, stricte): 187
Tokens correctement prédits (1ère position, avec adaptation): 202
Tokens correctement prédits (top 10): 423
Précision stricte (1ère position): 35.42%
Précision adaptée (1ère position): 38.26%
Précision (top 10): 80.11%
================================================================================
