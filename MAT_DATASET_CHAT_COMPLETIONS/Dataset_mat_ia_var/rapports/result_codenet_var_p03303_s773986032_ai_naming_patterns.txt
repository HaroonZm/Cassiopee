================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_string = input()
step_width = int(input())
current_index = 0
result_string = ""
while current_index < len(input_string):
    result_string += input_string[current_index]
    current_index += step_width
print(result_string)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_string' (ID: 8609)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.024985339492559433
    2. ''' → logprob: -3.8999853134155273
    3. ' ' → logprob: -6.149985313415527
    4. ' "' → logprob: -6.399985313415527
    5. '""' → logprob: -8.399985313415527
    6. '"""' → logprob: -8.774985313415527
    7. '"user' → logprob: -9.524985313415527
    8. ' '' → logprob: -9.899985313415527
    9. 'input' → logprob: -10.274985313415527
    10. '```' → logprob: -10.774985313415527

Token 4: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005510857328772545
    2. ''' → logprob: -5.5055108070373535
    3. '"' → logprob: -8.130511283874512
    4. '('' → logprob: -8.130511283874512
    5. '```' → logprob: -8.130511283874512
    6. '`' → logprob: -8.755511283874512
    7. '(
' → logprob: -8.880511283874512
    8. ')' → logprob: -9.630511283874512
    9. '()' → logprob: -10.255511283874512
    10. '[' → logprob: -10.630511283874512

Token 5: 'step' (ID: 17509)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.019220639020204544
    2. '.strip' → logprob: -4.26922082901001
    3. '.lower' → logprob: -6.76922082901001
    4. '```' → logprob: -7.26922082901001
    5. '\n' → logprob: -7.64422082901001
    6. '.split' → logprob: -7.76922082901001
    7. '=' → logprob: -8.019220352172852
    8. 'if' → logprob: -8.394220352172852
    9. 'print' → logprob: -8.644220352172852
    10. ':' → logprob: -8.769220352172852

Token 6: '_width' (ID: 17595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.537752628326416
    2. 's' → logprob: -1.162752628326416
    3. '(' → logprob: -3.162752628326416
    4. '=' → logprob: -3.662752628326416
    5. '_size' → logprob: -4.162752628326416
    6. ' =' → logprob: -5.037752628326416
    7. ')' → logprob: -5.162752628326416
    8. '[' → logprob: -6.287752628326416
    9. '_s' → logprob: -6.662752628326416
    10. '(s' → logprob: -7.037752628326416

Token 7: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3646581470966339
    2. '=' → logprob: -1.6146581172943115
    3. ' =' → logprob: -3.2396581172943115
    4. '[' → logprob: -3.6146581172943115
    5. ')' → logprob: -3.9896581172943115
    6. '+' → logprob: -5.114658355712891
    7. ' ' → logprob: -5.239658355712891
    8. '.' → logprob: -5.489658355712891
    9. '```' → logprob: -6.489658355712891
    10. '[:]' → logprob: -7.364658355712891

Token 8: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02211681194603443
    2. '1' → logprob: -3.8971168994903564
    3. ' int' → logprob: -7.397116661071777
    4. '4' → logprob: -8.022116661071777
    5. '2' → logprob: -8.397116661071777
    6. 'int' → logprob: -8.647116661071777
    7. '5' → logprob: -9.647116661071777
    8. '10' → logprob: -10.147116661071777
    9. '3' → logprob: -10.397116661071777
    10. ' input' → logprob: -10.647116661071777

Token 9: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05329137668013573
    2. '(input' → logprob: -3.4282913208007812
    3. '(step' → logprob: -4.553291320800781
    4. '('' → logprob: -4.803291320800781
    5. '()' → logprob: -8.303291320800781
    6. 'input' → logprob: -9.053291320800781
    7. ' (' → logprob: -9.928291320800781
    8. ' ' → logprob: -10.053291320800781
    9. '(open' → logprob: -10.053291320800781
    10. ')' → logprob: -10.428291320800781

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1767754852771759
    2. '())' → logprob: -2.4267754554748535
    3. '()' → logprob: -2.6767754554748535
    4. '(' → logprob: -5.6767754554748535
    5. '_' → logprob: -7.4267754554748535
    6. ')_' → logprob: -8.301775932312012
    7. '_)' → logprob: -8.551775932312012
    8. ' )' → logprob: -9.426775932312012
    9. '")' → logprob: -9.551775932312012
    10. '))' → logprob: -9.676775932312012

Token 11: 'current' (ID: 5804)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6549758911132812
    2. 'result' → logprob: -1.1549758911132812
    3. 'n' → logprob: -3.2799758911132812
    4. 's' → logprob: -3.7799758911132812
    5. 'i' → logprob: -4.029975891113281
    6. '[' → logprob: -4.154975891113281
    7. 'output' → logprob: -4.404975891113281
    8. 'if' → logprob: -4.529975891113281
    9. '\n' → logprob: -4.654975891113281
    10. 'length' → logprob: -5.529975891113281

Token 12: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0016937461914494634
    2. '_space' → logprob: -7.1266937255859375
    3. '_token' → logprob: -8.126693725585938
    4. ' _' → logprob: -8.626693725585938
    5. '_index' → logprob: -9.251693725585938
    6. '_char' → logprob: -9.251693725585938
    7. '_character' → logprob: -10.126693725585938
    8. '_line' → logprob: -10.251693725585938
    9. '_position' → logprob: -11.001693725585938
    10. '_step' → logprob: -11.251693725585938

Token 13: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02580610103905201
    2. '[' → logprob: -4.650805950164795
    3. '=' → logprob: -5.400805950164795
    4. ' +' → logprob: -5.400805950164795
    5. ' +=' → logprob: -5.775805950164795
    6. ' ' → logprob: -6.775805950164795
    7. ' =' → logprob: -7.150805950164795
    8. '+=' → logprob: -7.400805950164795
    9. '```' → logprob: -8.150806427001953
    10. '[]' → logprob: -8.275806427001953

Token 14: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6932041049003601
    2. ' ' → logprob: -0.6932041049003601
    3. ' current' → logprob: -10.568203926086426
    4. 'current' → logprob: -10.568203926086426
    5. ' step' → logprob: -12.568203926086426
    6. ' ' → logprob: -14.693203926086426
    7. 'step' → logprob: -15.068203926086426
    8. '1' → logprob: -15.193203926086426
    9. ' `' → logprob: -15.755703926086426
    10. '```' → logprob: -16.005704879760742

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001450187264708802
    2. ' ' → logprob: -9.625144958496094
    3. 'current' → logprob: -10.000144958496094
    4. 'step' → logprob: -10.375144958496094
    5. ' step' → logprob: -13.875144958496094
    6. ' current' → logprob: -15.000144958496094
    7. '```' → logprob: -15.250144958496094
    8. '1' → logprob: -15.625144958496094
    9. '`' → logprob: -16.250144958496094
    10. '(step' → logprob: -16.687644958496094

Token 16: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.125889852643013
    2. ':' → logprob: -2.750889778137207
    3. ' ' → logprob: -4.625889778137207
    4. '#' → logprob: -5.250889778137207
    5. '[' → logprob: -5.250889778137207
    6. '*' → logprob: -5.375889778137207
    7. '<|end|>' → logprob: -5.375889778137207
    8. ',' → logprob: -5.750889778137207
    9. ' while' → logprob: -5.875889778137207
    10. '.' → logprob: -6.000889778137207

Token 17: 'result' (ID: 2521)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.31358426809310913
    2. '+' → logprob: -1.813584327697754
    3. ':' → logprob: -2.813584327697754
    4. 'w' → logprob: -3.938584327697754
    5. ' while' → logprob: -4.188584327697754
    6. ',' → logprob: -6.063584327697754
    7. '*' → logprob: -6.063584327697754
    8. '=' → logprob: -6.438584327697754
    9. '#' → logprob: -7.063584327697754
    10. '```' → logprob: -7.313584327697754

Token 18: '_string' (ID: 8609)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25741228461265564
    2. '+' → logprob: -1.632412314414978
    3. '[]' → logprob: -4.757412433624268
    4. ' +=' → logprob: -4.757412433624268
    5. '=' → logprob: -5.132412433624268
    6. '.append' → logprob: -6.007412433624268
    7. ' =' → logprob: -6.257412433624268
    8. '+=' → logprob: -6.507412433624268
    9. 's' → logprob: -7.757412433624268
    10. '.' → logprob: -7.757412433624268

Token 19: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1283016204833984
    2. ' +=' → logprob: -1.2533016204833984
    3. ' =' → logprob: -1.6283016204833984
    4. '=' → logprob: -2.2533016204833984
    5. '[' → logprob: -2.6283016204833984
    6. '+=' → logprob: -4.628301620483398
    7. ' +' → logprob: -6.003301620483398
    8. '[]' → logprob: -6.128301620483398
    9. ' ' → logprob: -7.128301620483398
    10. '.append' → logprob: -8.003301620483398

Token 20: ' ""
' (ID: 18061)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1655617952346802
    2. ' ""' → logprob: -1.7905617952346802
    3. '""' → logprob: -1.9155617952346802
    4. ''' → logprob: -2.0405616760253906
    5. '''' → logprob: -2.2905616760253906
    6. ' ''' → logprob: -2.6655616760253906
    7. ' ' → logprob: -2.6655616760253906
    8. ' "' → logprob: -6.040561676025391
    9. ' '' → logprob: -6.790561676025391
    10. '"""' → logprob: -9.41556167602539

Token 21: 'while' (ID: 7032)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.19335833191871643
    2. 'while' → logprob: -1.818358302116394
    3. ' while' → logprob: -5.193358421325684
    4. '[' → logprob: -5.943358421325684
    5. ' ' → logprob: -7.068358421325684
    6. 'i' → logprob: -7.193358421325684
    7. '+' → logprob: -7.568358421325684
    8. '#' → logprob: -7.568358421325684
    9. '=' → logprob: -7.693358421325684
    10. '.' → logprob: -8.068358421325684

Token 22: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.016675032675266266
    2. ' ' → logprob: -4.141674995422363
    3. 'current' → logprob: -7.391674995422363
    4. ' input' → logprob: -11.641674995422363
    5. ' ' → logprob: -12.141674995422363
    6. ' step' → logprob: -12.891674995422363
    7. ' user' → logprob: -13.516674995422363
    8. '  ' → logprob: -13.766674995422363
    9. ' not' → logprob: -13.766674995422363
    10. ' (' → logprob: -14.391674995422363

Token 23: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.22682376205921173
    2. '_' → logprob: -1.6018238067626953
    3. ' _' → logprob: -7.351823806762695
    4. '_token' → logprob: -9.351823806762695
    5. '_indices' → logprob: -9.601823806762695
    6. '_indexes' → logprob: -9.851823806762695
    7. '._' → logprob: -10.226823806762695
    8. '_i' → logprob: -10.226823806762695
    9. '_string' → logprob: -10.226823806762695
    10. '_s' → logprob: -10.226823806762695

Token 24: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0022907331585884094
    2. '<' → logprob: -6.252290725708008
    3. ' ' → logprob: -8.002290725708008
    4. ' <=' → logprob: -10.752290725708008
    5. ' >=' → logprob: -13.502290725708008
    6. '<len' → logprob: -13.752290725708008
    7. '  ' → logprob: -14.252290725708008
    8. '+' → logprob: -14.502290725708008
    9. '   ' → logprob: -15.127290725708008
    10. ' <",' → logprob: -15.127290725708008

Token 25: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0015030752401798964
    2. 'len' → logprob: -6.501502990722656
    3. ' ' → logprob: -14.626502990722656
    4. '(len' → logprob: -16.376502990722656
    5. ' input' → logprob: -17.126502990722656
    6. '=len' → logprob: -17.251502990722656
    7. ' step' → logprob: -18.501502990722656
    8. '	len' → logprob: -18.626502990722656
    9. ' ' → logprob: -19.001502990722656
    10. '<len' → logprob: -19.126502990722656

Token 26: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.038053084164857864
    2. '(' → logprob: -3.288053035736084
    3. '(current' → logprob: -12.788053512573242
    4. '(
' → logprob: -12.788053512573242
    5. ' (' → logprob: -13.288053512573242
    6. '(output' → logprob: -13.663053512573242
    7. '(in' → logprob: -13.663053512573242
    8. '(

' → logprob: -14.038053512573242
    9. '(step' → logprob: -15.538053512573242
    10. '(result' → logprob: -15.538053512573242

Token 27: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0031964892987161875
    2. '_' → logprob: -6.878196716308594
    3. '(' → logprob: -7.128196716308594
    4. '(_' → logprob: -7.628196716308594
    5. '(input' → logprob: -7.753196716308594
    6. '_input' → logprob: -8.378196716308594
    7. '_)' → logprob: -9.628196716308594
    8. ')' → logprob: -9.753196716308594
    9. 'string' → logprob: -10.878196716308594
    10. '_s' → logprob: -11.003196716308594

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.031392764300107956
    2. ')' → logprob: -3.531392812728882
    3. ':' → logprob: -6.781392574310303
    4. '+' → logprob: -8.406393051147461
    5. ' and' → logprob: -9.531393051147461
    6. '):
' → logprob: -9.781393051147461
    7. ']:' → logprob: -10.281393051147461
    8. ')+' → logprob: -10.531393051147461
    9. ' ):' → logprob: -10.531393051147461
    10. ']' → logprob: -11.156393051147461

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2411729097366333
    2. ' result' → logprob: -1.8661729097366333
    3. 'result' → logprob: -2.8661727905273438
    4. '    
' → logprob: -6.866172790527344
    5. ' current' → logprob: -7.991172790527344
    6. ' ' → logprob: -8.366172790527344
    7. '    ' → logprob: -8.366172790527344
    8. '```' → logprob: -8.366172790527344
    9. '	result' → logprob: -8.616172790527344
    10. ' 
' → logprob: -9.241172790527344

Token 30: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6932031512260437
    2. 'result' (adapté à ' result') → logprob: -0.6932031512260437
    3. ' current' → logprob: -11.56820297241211
    4. '   ' → logprob: -11.56820297241211
    5. '```' → logprob: -11.81820297241211
    6. ' ' → logprob: -11.94320297241211
    7. '[result' → logprob: -11.94320297241211
    8. '	result' → logprob: -12.69320297241211
    9. ' ```' → logprob: -12.94320297241211
    10. ' 
' → logprob: -13.56820297241211

Token 31: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -2.558399319241289e-05
    2. '_' → logprob: -10.875025749206543
    3. '_str' → logprob: -13.000025749206543
    4. '_s' → logprob: -13.625025749206543
    5. '_String' → logprob: -14.125025749206543
    6. '```' → logprob: -14.625025749206543
    7. 'string' → logprob: -15.000025749206543
    8. '_append' → logprob: -15.250025749206543
    9. '_strings' → logprob: -15.250025749206543
    10. 'String' → logprob: -15.375025749206543

Token 32: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1919487863779068
    2. '+=' → logprob: -1.8169487714767456
    3. '+' → logprob: -4.441948890686035
    4. ' +' → logprob: -8.691948890686035
    5. '+='' → logprob: -9.316948890686035
    6. '+="' → logprob: -9.566948890686035
    7. '[' → logprob: -11.191948890686035
    8. '.append' → logprob: -11.566948890686035
    9. '=' → logprob: -13.316948890686035
    10. '   ' → logprob: -13.566948890686035

Token 33: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20142453908920288
    2. ' input' → logprob: -1.7014245986938477
    3. ' ' → logprob: -12.201424598693848
    4. '(input' → logprob: -13.076424598693848
    5. 'step' → logprob: -14.326424598693848
    6. '<input' → logprob: -14.576424598693848
    7. ' current' → logprob: -14.951424598693848
    8. 'int' → logprob: -15.076424598693848
    9. 'current' → logprob: -15.076424598693848
    10. ' step' → logprob: -15.201424598693848

Token 34: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -6.869017852295656e-06
    2. 'string' → logprob: -12.875006675720215
    3. '_' → logprob: -13.500006675720215
    4. '```' → logprob: -13.750006675720215
    5. 'String' → logprob: -14.750006675720215
    6. '_STRING' → logprob: -15.125006675720215
    7. '_strings' → logprob: -15.750006675720215
    8. '_str' → logprob: -15.875006675720215
    9. '_token' → logprob: -15.875006675720215
    10. '_s' → logprob: -15.875006675720215

Token 35: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.0013588056899607182
    2. '[' → logprob: -6.626358985900879
    3. 'current' → logprob: -10.876358985900879
    4. '   ' → logprob: -12.501358985900879
    5. '[start' → logprob: -12.876358985900879
    6. '```' → logprob: -12.876358985900879
    7. '[
' → logprob: -14.001358985900879
    8. '[next' → logprob: -14.501358985900879
    9. '[cur' → logprob: -14.626358985900879
    10. '[min' → logprob: -14.751358985900879

Token 36: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.0020742492051795e-05
    2. 'index' → logprob: -10.125049591064453
    3. '+' → logprob: -11.875049591064453
    4. 'Index' → logprob: -13.750049591064453
    5. 'nd' → logprob: -15.375049591064453
    6. ']' → logprob: -15.500049591064453
    7. '_' → logprob: -15.625049591064453
    8. '_INDEX' → logprob: -15.625049591064453
    9. ' _' → logprob: -16.000049591064453
    10. '```' → logprob: -16.250049591064453

Token 37: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6006044149398804
    2. '+' → logprob: -0.8506044149398804
    3. ' +' → logprob: -4.10060453414917
    4. ':' → logprob: -4.97560453414917
    5. '   ' → logprob: -8.475604057312012
    6. ' ]' → logprob: -8.850604057312012
    7. '```' → logprob: -9.350604057312012
    8. ']+' → logprob: -9.725604057312012
    9. 'current' → logprob: -9.725604057312012
    10. ' :' → logprob: -10.100604057312012

Token 38: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20376674830913544
    2. '+
' → logprob: -1.8287667036056519
    3. '   ' → logprob: -4.828766822814941
    4. 'current' → logprob: -5.078766822814941
    5. '```' → logprob: -5.828766822814941
    6. '    
' → logprob: -6.078766822814941
    7. '   
' → logprob: -7.078766822814941
    8. ' current' → logprob: -7.453766822814941
    9. '[current' → logprob: -7.453766822814941
    10. '[' → logprob: -8.203766822814941

Token 39: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.08668085932731628
    2. ' current' → logprob: -3.0866808891296387
    3. '+' → logprob: -3.4616808891296387
    4. ' +=' → logprob: -6.711680889129639
    5. '+=' → logprob: -6.711680889129639
    6. '+
' → logprob: -6.961680889129639
    7. ' ' → logprob: -7.086680889129639
    8. '   ' → logprob: -7.836680889129639
    9. '```' → logprob: -8.21168041229248
    10. '    ' → logprob: -8.58668041229248

Token 40: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0013548793504014611
    2. '_' → logprob: -6.626354694366455
    3. ' _' → logprob: -11.626355171203613
    4. '_idx' → logprob: -12.126355171203613
    5. '+' → logprob: -12.626355171203613
    6. '_indices' → logprob: -13.376355171203613
    7. '_token' → logprob: -13.751355171203613
    8. '_step' → logprob: -14.001355171203613
    9. '__' → logprob: -14.126355171203613
    10. '_x' → logprob: -14.251355171203613

Token 41: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013810974545776844
    2. ' +' → logprob: -4.638811111450195
    3. ' +=' → logprob: -5.513811111450195
    4. '+=' → logprob: -11.138811111450195
    5. ' ' → logprob: -13.763811111450195
    6. ' plus' → logprob: -15.638811111450195
    7. '+='' → logprob: -16.263811111450195
    8. '<|end|>' → logprob: -16.763811111450195
    9. '+++' → logprob: -16.888811111450195
    10. ' ﻿' → logprob: -17.013811111450195

Token 42: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.1602245420217514
    2. ' step' → logprob: -1.9102245569229126
    3. '(step' → logprob: -15.285224914550781
    4. '1' → logprob: -16.28522491455078
    5. '	step' → logprob: -17.16022491455078
    6. ' ' → logprob: -18.16022491455078
    7. '.step' → logprob: -19.03522491455078
    8. '_step' → logprob: -19.28522491455078
    9. 'tep' → logprob: -19.66022491455078
    10. 'ste' → logprob: -19.78522491455078

Token 43: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.0025168005377054214
    2. '_w' → logprob: -6.627516746520996
    3. '_' → logprob: -6.752516746520996
    4. ' _' → logprob: -12.002516746520996
    5. '_size' → logprob: -12.127516746520996
    6. '_length' → logprob: -12.752516746520996
    7. '_height' → logprob: -13.127516746520996
    8. '_step' → logprob: -13.752516746520996
    9. ')_' → logprob: -14.627516746520996
    10. '_depth' → logprob: -14.752516746520996

Token 44: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013401498086750507
    2. '
' → logprob: -5.013401508331299
    3. '<|end|>' → logprob: -5.388401508331299
    4. '\n' → logprob: -7.013401508331299
    5. '#' → logprob: -8.26340103149414
    6. ')' → logprob: -8.51340103149414
    7. ' print' → logprob: -8.51340103149414
    8. '```' → logprob: -9.01340103149414
    9. '  
' → logprob: -9.51340103149414
    10. ' 
' → logprob: -9.76340103149414

Token 45: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018251233268529177
    2. '
' → logprob: -7.251825332641602
    3. '<|end|>' → logprob: -7.751825332641602
    4. '#' → logprob: -8.626825332641602
    5. '```' → logprob: -9.001825332641602
    6. '\n' → logprob: -9.501825332641602
    7. 'result' → logprob: -9.626825332641602
    8. ')' → logprob: -9.751825332641602
    9. ' print' → logprob: -10.376825332641602
    10. 'return' → logprob: -10.751825332641602

Token 46: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004420624580234289
    2. '("("' → logprob: -5.504420757293701
    3. '('' → logprob: -8.129420280456543
    4. '(result' → logprob: -10.254420280456543
    5. '()' → logprob: -12.254420280456543
    6. '((' → logprob: -13.629420280456543
    7. '("' → logprob: -13.879420280456543
    8. '(input' → logprob: -14.129420280456543
    9. '("""' → logprob: -14.129420280456543
    10. '("")' → logprob: -14.254420280456543

Token 47: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0038821424823254347
    2. '_' → logprob: -5.878881931304932
    3. '_s' → logprob: -8.00388240814209
    4. '_str' → logprob: -8.12888240814209
    5. ')_' → logprob: -8.25388240814209
    6. '_strings' → logprob: -10.12888240814209
    7. ' _' → logprob: -10.25388240814209
    8. ')' → logprob: -10.87888240814209
    9. '_)' → logprob: -11.00388240814209
    10. '_String' → logprob: -11.62888240814209

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '))' → logprob: -14.250001907348633
    3. ' )' → logprob: -15.000001907348633
    4. '`)' → logprob: -15.375001907348633
    5. '')' → logprob: -15.750001907348633
    6. ')`' → logprob: -16.125001907348633
    7. '(' → logprob: -16.500001907348633
    8. '[' → logprob: -16.625001907348633
    9. '#' → logprob: -16.875001907348633
    10. '()' → logprob: -17.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 46
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 35
Précision stricte (1ère position): 41.30%
Précision adaptée (1ère position): 43.48%
Précision (top 10): 76.09%
================================================================================
