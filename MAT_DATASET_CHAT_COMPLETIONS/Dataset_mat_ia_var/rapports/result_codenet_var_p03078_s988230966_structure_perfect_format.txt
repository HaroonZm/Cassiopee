================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/env python
import numpy as np

X, Y, Z, K = map(int, input().split())
A = list(map(int, input().split()))
B = list(map(int, input().split()))
C = list(map(int, input().split()))
D = []

A.sort(reverse=True)
B.sort(reverse=True)
C.sort(reverse=True)

for i in range(min(K, X)):
    for j in range(min(K // (i + 1), Y)):
        for k in range(min((K // (i + 1) + 1) // (j + 1), Z)):
            D.append(A[i] + B[j] + C[k])

D.sort(reverse=True)

for i in range(K):
    print(int(D[i]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4815027713775635
    2. '/env' → logprob: -1.2315027713775635
    3. '/python' → logprob: -2.4815027713775635
    4. '/bash' → logprob: -5.231502532958984
    5. '/bin' → logprob: -6.731502532958984
    6. 'python' → logprob: -9.481502532958984
    7. '#!/' → logprob: -11.106502532958984
    8. 'env' → logprob: -11.481502532958984
    9. '/b' → logprob: -11.481502532958984
    10. '/per' → logprob: -12.481502532958984

Token 4: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.10040108114480972
    2. ' python' → logprob: -2.3504011631011963
    3. 'bash' → logprob: -8.725400924682617
    4. ' bash' → logprob: -10.475400924682617
    5. 'py' → logprob: -13.850400924682617
    6. '/python' → logprob: -14.850400924682617
    7. '```' → logprob: -14.850400924682617
    8. 'node' → logprob: -15.100400924682617
    9. 'ruby' → logprob: -15.100400924682617
    10. 'perl' → logprob: -15.100400924682617

Token 5: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7710385322570801
    2. '\n' → logprob: -1.39603853225708
    3. '3' → logprob: -1.64603853225708
    4. '```' → logprob: -2.64603853225708
    5. '\' → logprob: -4.39603853225708
    6. '  
' → logprob: -5.64603853225708
    7. ' import' → logprob: -6.02103853225708
    8. ' 
' → logprob: -6.27103853225708
    9. '
' → logprob: -7.27103853225708
    10. '[' → logprob: -7.52103853225708

Token 6: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5418024659156799
    2. '\n' → logprob: -1.5418024063110352
    3. '-' → logprob: -1.9168024063110352
    4. '```' → logprob: -3.666802406311035
    5. '-import' → logprob: -4.416802406311035
    6. '3' → logprob: -5.291802406311035
    7. '\' → logprob: -5.916802406311035
    8. '#' → logprob: -6.416802406311035
    9. '
' → logprob: -6.791802406311035
    10. 'python' → logprob: -6.791802406311035

Token 7: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.23883195221424103
    2. ' ' → logprob: -1.6138319969177246
    3. ' requests' → logprob: -5.863831996917725
    4. ' sys' → logprob: -5.988831996917725
    5. ' json' → logprob: -6.988831996917725
    6. ' pandas' → logprob: -6.988831996917725
    7. ' python' → logprob: -7.238831996917725
    8. ' math' → logprob: -7.238831996917725
    9. ' space' → logprob: -7.488831996917725
    10. '<|end|>' → logprob: -7.488831996917725

Token 8: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004531707614660263
    2. '<|end|>' → logprob: -5.5045318603515625
    3. '```' → logprob: -9.004531860351562
    4. '.ndarray' → logprob: -9.504531860351562
    5. ' .' → logprob: -9.754531860351562
    6. ' as' → logprob: -9.879531860351562
    7. '<|end|>' → logprob: -10.254531860351562
    8. '[' → logprob: -11.129531860351562
    9. '.random' → logprob: -11.754531860351562
    10. '.`' → logprob: -11.754531860351562

Token 9: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.10725380480289459
    2. 'np' → logprob: -2.6072537899017334
    3. ' ' → logprob: -3.6072537899017334
    4. ' ' → logprob: -7.8572540283203125
    5. ' numpy' → logprob: -8.982254028320312
    6. '_numpy' → logprob: -9.732254028320312
    7. 'numpy' → logprob: -9.982254028320312
    8. '_np' → logprob: -9.982254028320312
    9. '_' → logprob: -10.232254028320312
    10. ' nd' → logprob: -10.732254028320312

Token 10: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 11: 'X' (ID: 55)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9859294295310974
    2. '<|end|>' → logprob: -1.4859294891357422
    3. '```' → logprob: -1.9859294891357422
    4. 'print' → logprob: -2.860929489135742
    5. '#' → logprob: -3.110929489135742
    6. 'def' → logprob: -3.235929489135742
    7. 'x' → logprob: -3.735929489135742
    8. '\n' → logprob: -3.860929489135742
    9. '\' → logprob: -4.110929489135742
    10. 'a' → logprob: -4.860929489135742

Token 12: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00980472844094038
    2. '[' → logprob: -5.509804725646973
    3. ' =' → logprob: -5.759804725646973
    4. '=' → logprob: -6.884804725646973
    5. '.shape' → logprob: -7.009804725646973
    6. ',' → logprob: -9.134804725646973
    7. ')' → logprob: -9.259804725646973
    8. '[:]' → logprob: -9.384804725646973
    9. ' .' → logprob: -9.634804725646973
    10. '.=' → logprob: -10.259804725646973

Token 13: ' Y' (ID: 865)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5653826594352722
    2. ' y' → logprob: -0.9403826594352722
    3. ' Y' → logprob: -3.690382719039917
    4. 'Y' → logprob: -4.440382480621338
    5. ' ' → logprob: -5.940382480621338
    6. ' =' → logprob: -6.940382480621338
    7. '<|end|>' → logprob: -7.315382480621338
    8. '=' → logprob: -8.690382957458496
    9. ' np' → logprob: -10.440382957458496
    10. '_y' → logprob: -10.690382957458496

Token 14: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03809954971075058
    2. '=' → logprob: -3.288099527359009
    3. '=np' → logprob: -10.78809928894043
    4. ',' → logprob: -10.91309928894043
    5. ')' → logprob: -11.78809928894043
    6. ' ' → logprob: -12.41309928894043
    7. '<|end|>' → logprob: -12.66309928894043
    8. ' =
' → logprob: -13.78809928894043
    9. '.' → logprob: -14.41309928894043
    10. ' ,' → logprob: -14.78809928894043

Token 15: ' Z' (ID: 1489)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07927530258893967
    2. '=' → logprob: -3.329275369644165
    3. ' Z' → logprob: -3.579275369644165
    4. ' ' → logprob: -4.579275131225586
    5. 'Z' → logprob: -6.454275131225586
    6. ' np' → logprob: -8.079275131225586
    7. '=np' → logprob: -9.329275131225586
    8. ' and' → logprob: -9.454275131225586
    9. '  ' → logprob: -11.016775131225586
    10. 'import' → logprob: -11.391775131225586

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001959678716957569
    2. '=' → logprob: -6.251959800720215
    3. ',' → logprob: -10.876959800720215
    4. '=np' → logprob: -12.376959800720215
    5. ')' → logprob: -12.876959800720215
    6. ' ' → logprob: -13.501959800720215
    7. ' =
' → logprob: -14.001959800720215
    8. ' ,' → logprob: -14.126959800720215
    9. '  ' → logprob: -14.376959800720215
    10. '<|end|>' → logprob: -14.751959800720215

Token 17: ' K' (ID: 658)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012023674324154854
    2. '=' → logprob: -4.762023448944092
    3. ' ' → logprob: -5.762023448944092
    4. '=np' → logprob: -9.01202392578125
    5. ' np' → logprob: -9.51202392578125
    6. ',' → logprob: -10.88702392578125
    7. '  ' → logprob: -11.38702392578125
    8. ' W' → logprob: -11.88702392578125
    9. 'W' → logprob: -13.26202392578125
    10. ' T' → logprob: -13.44952392578125

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08085048943758011
    2. '=' → logprob: -2.580850601196289
    3. ',' → logprob: -6.330850601196289
    4. '=np' → logprob: -9.455850601196289
    5. ')' → logprob: -10.080850601196289
    6. ' ' → logprob: -10.955850601196289
    7. '_' → logprob: -11.705850601196289
    8. '.' → logprob: -11.830850601196289
    9. '[' → logprob: -12.205850601196289
    10. ' ,' → logprob: -12.455850601196289

Token 19: ' map' (ID: 4014)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.4839491844177246
    2. 'np' → logprob: -1.4839491844177246
    3. ' ' → logprob: -2.1089491844177246
    4. '10' → logprob: -3.9839491844177246
    5. '100' → logprob: -5.358949184417725
    6. '5' → logprob: -5.733949184417725
    7. '0' → logprob: -6.108949184417725
    8. '1' → logprob: -6.358949184417725
    9. '(np' → logprob: -6.483949184417725
    10. '4' → logprob: -7.483949184417725

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05691804736852646
    2. '(' → logprob: -2.931918144226074
    3. '(lambda' → logprob: -6.556918144226074
    4. 'int' → logprob: -8.806918144226074
    5. '(str' → logprob: -8.806918144226074
    6. '(np' → logprob: -9.306918144226074
    7. '(list' → logprob: -9.431918144226074
    8. '(
' → logprob: -9.806918144226074
    9. 'list' → logprob: -10.931918144226074
    10. '(float' → logprob: -11.056918144226074

Token 21: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28919821977615356
    2. '(input' → logprob: -1.9141981601715088
    3. '(' → logprob: -2.414198160171509
    4. 'input' → logprob: -4.914198398590088
    5. '('' → logprob: -6.039198398590088
    6. '<|end|>' → logprob: -6.289198398590088
    7. '```' → logprob: -7.789198398590088
    8. '()' → logprob: -7.914198398590088
    9. ')(' → logprob: -8.53919792175293
    10. '(raw' → logprob: -8.91419792175293

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47434842586517334
    2. ' input' → logprob: -0.9743484258651733
    3. ')' → logprob: -8.474348068237305
    4. '(input' → logprob: -10.349348068237305
    5. ' ' → logprob: -11.224348068237305
    6. ' )' → logprob: -11.724348068237305
    7. ',input' → logprob: -12.224348068237305
    8. '=input' → logprob: -13.599348068237305
    9. '	input' → logprob: -14.099348068237305
    10. '  ' → logprob: -14.974348068237305

Token 23: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7308088541030884
    2. '())' → logprob: -1.1058088541030884
    3. '().' → logprob: -1.8558088541030884
    4. '('' → logprob: -4.730808734893799
    5. ')' → logprob: -4.855808734893799
    6. '(' → logprob: -4.855808734893799
    7. '());' → logprob: -5.480808734893799
    8. '(()' → logprob: -7.480808734893799
    9. '();)' → logprob: -7.855808734893799
    10. '(""))' → logprob: -8.605809211730957

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000713266315869987
    2. 'strip' → logprob: -7.250713348388672
    3. 'rstrip' → logprob: -13.125713348388672
    4. ' split' → logprob: -13.750713348388672
    5. ')' → logprob: -15.875713348388672
    6. '(split' → logprob: -16.625713348388672
    7. 'spl' → logprob: -17.000713348388672
    8. 'read' → logprob: -17.125713348388672
    9. 's' → logprob: -17.875713348388672
    10. '```' → logprob: -18.250713348388672

Token 25: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013200351968407631
    2. '))' → logprob: -4.638200283050537
    3. '())' → logprob: -5.763200283050537
    4. '()' → logprob: -9.013200759887695
    5. '('' → logprob: -9.638200759887695
    6. '(' → logprob: -10.013200759887695
    7. '()))' → logprob: -11.263200759887695
    8. '`)' → logprob: -11.513200759887695
    9. '')' → logprob: -12.013200759887695
    10. ')`' → logprob: -12.013200759887695

Token 26: 'A' (ID: 32)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6162355542182922
    2. '\n' → logprob: -1.7412354946136475
    3. ':' → logprob: -2.2412354946136475
    4. ')' → logprob: -2.6162354946136475
    5. '<|end|>' → logprob: -3.3662354946136475
    6. '#' → logprob: -4.491235733032227
    7. ',' → logprob: -4.741235733032227
    8. '```' → logprob: -4.741235733032227
    9. '\' → logprob: -5.241235733032227
    10. 'print' → logprob: -5.366235733032227

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6461058259010315
    2. '[' → logprob: -1.0211057662963867
    3. '.' → logprob: -3.0211057662963867
    4. '=' → logprob: -3.5211057662963867
    5. ',' → logprob: -4.896105766296387
    6. ' ' → logprob: -5.146105766296387
    7. '[]' → logprob: -5.646105766296387
    8. '[:]' → logprob: -5.646105766296387
    9. 'rray' → logprob: -5.896105766296387
    10. 's' → logprob: -6.271105766296387

Token 28: ' list' (ID: 1562)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.1270340532064438
    2. 'np' → logprob: -2.1270339488983154
    3. '[np' → logprob: -10.377034187316895
    4. ' []' → logprob: -10.627034187316895
    5. '(np' → logprob: -11.377034187316895
    6. '[]' → logprob: -11.502034187316895
    7. ' list' → logprob: -12.002034187316895
    8. ' ' → logprob: -12.252034187316895
    9. ' [' → logprob: -12.502034187316895
    10. '[' → logprob: -12.752034187316895

Token 29: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27039945125579834
    2. '(map' → logprob: -1.5203994512557983
    3. '(np' → logprob: -4.520399570465088
    4. '(int' → logprob: -5.020399570465088
    5. '(range' → logprob: -8.02039909362793
    6. '()' → logprob: -8.14539909362793
    7. '(input' → logprob: -9.39539909362793
    8. '(eval' → logprob: -10.64539909362793
    9. '(float' → logprob: -10.89539909362793
    10. '(

' → logprob: -11.02039909362793

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010555570479482412
    2. '(' → logprob: -6.876055717468262
    3. '<int' → logprob: -11.376055717468262
    4. '(str' → logprob: -12.751055717468262
    5. 'int' → logprob: -13.001055717468262
    6. '[int' → logprob: -13.376055717468262
    7. '(np' → logprob: -13.876055717468262
    8. '(float' → logprob: -14.001055717468262
    9. '=int' → logprob: -14.126055717468262
    10. ',int' → logprob: -15.251055717468262

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6615813374519348
    2. ',input' → logprob: -0.7865813374519348
    3. '(input' → logprob: -3.66158127784729
    4. '(' → logprob: -5.911581516265869
    5. 'input' → logprob: -9.911581039428711
    6. ' ,' → logprob: -10.286581039428711
    7. '(),' → logprob: -10.536581039428711
    8. ',int' → logprob: -10.536581039428711
    9. ')' → logprob: -11.536581039428711
    10. ',(' → logprob: -12.036581039428711

Token 32: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5231332778930664
    2. 'input' → logprob: -0.8981332778930664
    3. ' ' → logprob: -12.523133277893066
    4. '(input' → logprob: -13.148133277893066
    5. ',input' → logprob: -13.398133277893066
    6. '=input' → logprob: -13.773133277893066
    7. '	input' → logprob: -14.273133277893066
    8. ')' → logprob: -15.148133277893066
    9. '<input' → logprob: -15.773133277893066
    10. 'list' → logprob: -15.898133277893066

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003503611544147134
    2. '()' → logprob: -5.753503799438477
    3. '()))' → logprob: -8.878503799438477
    4. '(' → logprob: -9.503503799438477
    5. '())' → logprob: -9.628503799438477
    6. ')' → logprob: -10.753503799438477
    7. '()));' → logprob: -12.503503799438477
    8. '()>' → logprob: -12.753503799438477
    9. '(.' → logprob: -13.003503799438477
    10. '))' → logprob: -13.128503799438477

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.2994620242971e-06
    2. 'strip' → logprob: -11.750008583068848
    3. '(split' → logprob: -15.625008583068848
    4. ' split' → logprob: -15.625008583068848
    5. 'rstrip' → logprob: -17.75000762939453
    6. 'spl' → logprob: -18.12500762939453
    7. ')' → logprob: -18.87500762939453
    8. 'plit' → logprob: -20.00000762939453
    9. '.split' → logprob: -21.37500762939453
    10. 'read' → logprob: -21.50000762939453

Token 35: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5158411860466003
    2. '()))' → logprob: -1.5158412456512451
    3. ')' → logprob: -2.390841245651245
    4. '(' → logprob: -2.640841245651245
    5. '())' → logprob: -4.015841007232666
    6. '()' → logprob: -6.140841007232666
    7. '('' → logprob: -9.265841484069824
    8. '(
' → logprob: -10.015841484069824
    9. '()))
' → logprob: -10.265841484069824
    10. ''))' → logprob: -10.640841484069824

Token 36: 'B' (ID: 33)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1210213899612427
    2. 'a' → logprob: -1.8710213899612427
    3. 'n' → logprob: -2.371021270751953
    4. 'A' → logprob: -3.121021270751953
    5. 'result' → logprob: -3.121021270751953
    6. 'M' → logprob: -3.371021270751953
    7. ')' → logprob: -3.496021270751953
    8. '\' → logprob: -3.496021270751953
    9. '\n' → logprob: -3.496021270751953
    10. '=' → logprob: -3.871021270751953

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048598047345876694
    2. '=' → logprob: -3.048598051071167
    3. ')' → logprob: -11.673598289489746
    4. ',' → logprob: -14.673598289489746
    5. '.' → logprob: -14.673598289489746
    6. ' =)' → logprob: -15.298598289489746
    7. ' )' → logprob: -16.04859733581543
    8. ')=' → logprob: -16.17359733581543
    9. '＝' → logprob: -16.17359733581543
    10. '[' → logprob: -16.29859733581543

Token 38: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.018153570592403412
    2. 'list' → logprob: -4.018153667449951
    3. ' np' → logprob: -13.268153190612793
    4. '[' → logprob: -15.018153190612793
    5. '(list' → logprob: -15.268153190612793
    6. 'np' → logprob: -15.393153190612793
    7. ' map' → logprob: -15.393153190612793
    8. ' ' → logprob: -15.643153190612793
    9. ' []' → logprob: -15.768153190612793
    10. '=list' → logprob: -15.893153190612793

Token 39: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006028342177160084
    2. '(int' → logprob: -7.750602722167969
    3. '(map' → logprob: -9.000602722167969
    4. '(np' → logprob: -10.500602722167969
    5. ' (' → logprob: -12.250602722167969
    6. '(list' → logprob: -12.625602722167969
    7. '(
' → logprob: -13.000602722167969
    8. '(lambda' → logprob: -13.625602722167969
    9. '(

' → logprob: -13.625602722167969
    10. '(s' → logprob: -13.750602722167969

Token 40: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.176947600673884e-05
    2. 'int' → logprob: -11.625021934509277
    3. '(' → logprob: -12.000021934509277
    4. '<int' → logprob: -12.500021934509277
    5. '=int' → logprob: -13.250021934509277
    6. ',int' → logprob: -14.875021934509277
    7. '[int' → logprob: -14.875021934509277
    8. ']int' → logprob: -15.750021934509277
    9. '```' → logprob: -16.00002098083496
    10. '(lambda' → logprob: -17.25002098083496

Token 41: ',' (ID: 11)
  Prédit: ',int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.7484336495399475
    2. ',' → logprob: -0.9984336495399475
    3. '(int' → logprob: -1.8734335899353027
    4. 'int' → logprob: -5.623433589935303
    5. ' ,' → logprob: -7.373433589935303
    6. '(' → logprob: -7.998433589935303
    7. '```' → logprob: -8.998434066772461
    8. '<int' → logprob: -9.498434066772461
    9. '[int' → logprob: -10.998434066772461
    10. '=int' → logprob: -11.123434066772461

Token 42: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009393315413035452
    2. ' int' → logprob: -7.00093936920166
    3. '(int' → logprob: -10.87593936920166
    4. 'input' → logprob: -12.00093936920166
    5. '[int' → logprob: -13.25093936920166
    6. '=int' → logprob: -15.12593936920166
    7. ',int' → logprob: -15.25093936920166
    8. '<int' → logprob: -15.62593936920166
    9. ' ' → logprob: -16.125938415527344
    10. '	int' → logprob: -16.625938415527344

Token 43: '().' (ID: 1454)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00844944640994072
    2. '(' → logprob: -4.883449554443359
    3. ')' → logprob: -8.25844955444336
    4. 'int' → logprob: -8.38344955444336
    5. ')(' → logprob: -9.00844955444336
    6. '=int' → logprob: -9.75844955444336
    7. '().' → logprob: -9.88344955444336
    8. '(str' → logprob: -10.38344955444336
    9. '```' → logprob: -10.63344955444336
    10. '()' → logprob: -11.13344955444336

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00018113377154804766
    2. 'int' → logprob: -8.625181198120117
    3. '(split' → logprob: -14.625181198120117
    4. 'strip' → logprob: -14.750181198120117
    5. 'plit' → logprob: -15.125181198120117
    6. 'spl' → logprob: -15.500181198120117
    7. ' split' → logprob: -16.125181198120117
    8. '(int' → logprob: -16.625181198120117
    9. 'input' → logprob: -16.625181198120117
    10. ')' → logprob: -17.250181198120117

Token 45: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.15523742139339447
    2. ')' → logprob: -2.0302374362945557
    3. '()))' → logprob: -4.780237197875977
    4. '()' → logprob: -5.905237197875977
    5. '())' → logprob: -6.655237197875977
    6. '(' → logprob: -9.655237197875977
    7. ')))' → logprob: -12.655237197875977
    8. '))
' → logprob: -13.155237197875977
    9. ' ))' → logprob: -13.155237197875977
    10. ''))' → logprob: -13.780237197875977

Token 46: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7660821080207825
    2. 'dp' → logprob: -2.0160820484161377
    3. 'result' → logprob: -2.1410820484161377
    4. 'A' → logprob: -2.1410820484161377
    5. 'answer' → logprob: -3.6410820484161377
    6. 'for' → logprob: -3.6410820484161377
    7. 'c' → logprob: -4.141082286834717
    8. 'ans' → logprob: -4.141082286834717
    9. 'res' → logprob: -4.641082286834717
    10. 'answers' → logprob: -4.641082286834717

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287930428981781
    2. '=' → logprob: -1.0537930727005005
    3. ',' → logprob: -10.178792953491211
    4. ')' → logprob: -10.678792953491211
    5. '_' → logprob: -10.928792953491211
    6. ' =
' → logprob: -12.428792953491211
    7. 's' → logprob: -13.178792953491211
    8. '=
' → logprob: -13.178792953491211
    9. '.' → logprob: -13.678792953491211
    10. '[' → logprob: -13.928792953491211

Token 48: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.07449117302894592
    2. ' np' → logprob: -3.574491262435913
    3. ' []' → logprob: -3.949491262435913
    4. ' [' → logprob: -4.449491024017334
    5. 'list' → logprob: -4.824491024017334
    6. '[]' → logprob: -6.699491024017334
    7. 'np' → logprob: -6.824491024017334
    8. ' A' → logprob: -6.949491024017334
    9. '[' → logprob: -7.324491024017334
    10. ' ' → logprob: -8.324491500854492

Token 49: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021237824112176895
    2. '(int' → logprob: -4.396237850189209
    3. '(map' → logprob: -4.771237850189209
    4. '(
' → logprob: -9.02123737335205
    5. '(list' → logprob: -10.27123737335205
    6. '(

' → logprob: -10.64623737335205
    7. '(np' → logprob: -11.27123737335205
    8. '(set' → logprob: -12.02123737335205
    9. ' (' → logprob: -12.27123737335205
    10. '(float' → logprob: -12.39623737335205

Token 50: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.253090865968261e-06
    2. 'int' → logprob: -12.125009536743164
    3. '(' → logprob: -12.875009536743164
    4. '=int' → logprob: -14.125009536743164
    5. '<int' → logprob: -15.000009536743164
    6. '[int' → logprob: -16.125009536743164
    7. ',int' → logprob: -16.250009536743164
    8. '(in' → logprob: -17.625009536743164
    9. ']int' → logprob: -17.625009536743164
    10. '(
' → logprob: -18.125009536743164

Token 51: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20032157003879547
    2. ',' → logprob: -1.9503215551376343
    3. ',int' → logprob: -3.325321674346924
    4. 'int' → logprob: -6.200321674346924
    5. '(' → logprob: -6.950321674346924
    6. '=int' → logprob: -9.075321197509766
    7. '(input' → logprob: -9.450321197509766
    8. '```' → logprob: -9.575321197509766
    9. ',input' → logprob: -10.700321197509766
    10. '<int' → logprob: -10.700321197509766

Token 52: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00028576893964782357
    2. 'input' → logprob: -8.750286102294922
    3. ' int' → logprob: -9.375286102294922
    4. '(int' → logprob: -10.125286102294922
    5. '[int' → logprob: -13.875286102294922
    6. ')' → logprob: -14.625286102294922
    7. ' input' → logprob: -15.375286102294922
    8. '=int' → logprob: -15.500286102294922
    9. ',int' → logprob: -15.875286102294922
    10. '<int' → logprob: -16.125286102294922

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0014058287488296628
    2. '(int' → logprob: -7.376405715942383
    3. '(' → logprob: -8.251405715942383
    4. '()' → logprob: -8.251405715942383
    5. '.' → logprob: -9.626405715942383
    6. ').' → logprob: -10.376405715942383
    7. ')(' → logprob: -10.376405715942383
    8. '(.' → logprob: -10.376405715942383
    9. '```' → logprob: -10.876405715942383
    10. '()(' → logprob: -11.001405715942383

Token 54: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.981667537620524e-06
    2. ' split' → logprob: -14.250001907348633
    3. 'spl' → logprob: -14.375001907348633
    4. 'strip' → logprob: -15.500001907348633
    5. '(split' → logprob: -15.750001907348633
    6. '```' → logprob: -16.250001907348633
    7. ')' → logprob: -16.250001907348633
    8. 'sp' → logprob: -16.375001907348633
    9. 's' → logprob: -16.625001907348633
    10. '.split' → logprob: -18.250001907348633

Token 55: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8925027251243591
    2. '()))' → logprob: -1.517502784729004
    3. ')' → logprob: -1.767502784729004
    4. '())' → logprob: -1.892502784729004
    5. '()' → logprob: -3.017502784729004
    6. '()))
' → logprob: -8.017502784729004
    7. '(' → logprob: -8.267502784729004
    8. '))
' → logprob: -9.892502784729004
    9. '())
' → logprob: -10.892502784729004
    10. '()));' → logprob: -11.142502784729004

Token 56: 'D' (ID: 35)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.5859371423721313
    2. 'D' → logprob: -1.7109371423721313
    3. 'dp' → logprob: -1.9609371423721313
    4. 'A' → logprob: -2.585937023162842
    5. 'ans' → logprob: -2.710937023162842
    6. 'answer' → logprob: -2.960937023162842
    7. 'scores' → logprob: -3.210937023162842
    8. 'answers' → logprob: -3.335937023162842
    9. 'res' → logprob: -3.585937023162842
    10. 'results' → logprob: -3.960937023162842

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489887297153473
    2. '=' → logprob: -2.929898977279663
    3. ' =
' → logprob: -12.554899215698242
    4. ',' → logprob: -12.804899215698242
    5. ' ' → logprob: -12.929899215698242
    6. '.' → logprob: -13.179899215698242
    7. '_' → logprob: -13.804899215698242
    8. '=
' → logprob: -13.929899215698242
    9. 's' → logprob: -14.179899215698242
    10. ')' → logprob: -14.304899215698242

Token 58: ' []

' (ID: 32833)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.47432342171669006
    2. 'list' → logprob: -0.9743233919143677
    3. '(list' → logprob: -8.349323272705078
    4. '=list' → logprob: -12.724323272705078
    5. ' np' → logprob: -13.724323272705078
    6. '(' → logprob: -13.849323272705078
    7. 'np' → logprob: -14.099323272705078
    8. '[]' → logprob: -14.474323272705078
    9. 'List' → logprob: -14.724323272705078
    10. ' C' → logprob: -14.974323272705078

Token 59: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.963691804325208e-05
    2. ' for' → logprob: -11.125029563903809
    3. 'from' → logprob: -11.875029563903809
    4. 'A' → logprob: -12.375029563903809
    5. '```' → logprob: -14.375029563903809
    6. 'import' → logprob: -14.500029563903809
    7. 'a' → logprob: -14.750029563903809
    8. 'i' → logprob: -15.000029563903809
    9. '#' → logprob: -15.375029563903809
    10. 'f' → logprob: -15.750029563903809

Token 60: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.15562193095684052
    2. '[' → logprob: -3.0306220054626465
    3. '.' → logprob: -3.1556220054626465
    4. ' =' → logprob: -3.6556220054626465
    5. '=' → logprob: -5.2806220054626465
    6. ',' → logprob: -5.4056220054626465
    7. '[:]' → logprob: -5.5306220054626465
    8. 'sort' → logprob: -5.7806220054626465
    9. '.append' → logprob: -5.7806220054626465
    10. '_sorted' → logprob: -6.4056220054626465

Token 61: '(reverse' (ID: 110806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011343471705913544
    2. '()
' → logprob: -4.511343479156494
    3. '(reverse' → logprob: -9.011343002319336
    4. 'for' → logprob: -10.136343002319336
    5. 'reverse' → logprob: -10.261343002319336
    6. '(' → logprob: -10.511343002319336
    7. 'A' → logprob: -10.511343002319336
    8. '()

' → logprob: -11.386343002319336
    9. '()\' → logprob: -12.261343002319336
    10. 'def' → logprob: -12.261343002319336

Token 62: '=True' (ID: 7827)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.38743624091148376
    2. '()' → logprob: -1.2624362707138062
    3. ')' → logprob: -3.5124361515045166
    4. '=True' → logprob: -4.887436389923096
    5. '(True' → logprob: -8.012435913085938
    6. '=' → logprob: -8.137435913085938
    7. '(' → logprob: -9.137435913085938
    8. '())
' → logprob: -9.637435913085938
    9. '()
' → logprob: -10.387435913085938
    10. 'True' → logprob: -12.012435913085938

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.049755782238208e-05
    2. ' )' → logprob: -10.37505054473877
    3. ')
' → logprob: -10.87505054473877
    4. ')

' → logprob: -16.250049591064453
    5. '()' → logprob: -17.000049591064453
    6. ')#' → logprob: -17.000049591064453
    7. '))' → logprob: -17.125049591064453
    8. '#' → logprob: -17.625049591064453
    9. ')
' → logprob: -17.875049591064453
    10. '),' → logprob: -18.000049591064453

Token 64: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5946466326713562
    2. 'for' → logprob: -0.8446466326713562
    3. ' for' → logprob: -4.094646453857422
    4. '<|end|>' → logprob: -6.969646453857422
    5. 'C' → logprob: -8.469646453857422
    6. ' B' → logprob: -8.719646453857422
    7. '```' → logprob: -8.719646453857422
    8. 'A' → logprob: -8.844646453857422
    9. ')' → logprob: -9.094646453857422
    10. '#' → logprob: -10.469646453857422

Token 65: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.001990255434066057
    2. '.' → logprob: -6.25199031829834
    3. ' .' → logprob: -9.87699031829834
    4. 'sort' → logprob: -12.25199031829834
    5. '.reverse' → logprob: -12.37699031829834
    6. '	sort' → logprob: -15.12699031829834
    7. '.s' → logprob: -15.12699031829834
    8. ' sort' → logprob: -16.376989364624023
    9. '.sorted' → logprob: -16.376989364624023
    10. '_sort' → logprob: -16.501989364624023

Token 66: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.16052499413490295
    2. '()' → logprob: -1.9105249643325806
    3. '(' → logprob: -8.66052532196045
    4. 'reverse' → logprob: -9.78552532196045
    5. '())' → logprob: -10.53552532196045
    6. '()(' → logprob: -11.03552532196045
    7. '()>' → logprob: -12.28552532196045
    8. ' ()' → logprob: -12.53552532196045
    9. '(True' → logprob: -13.03552532196045
    10. '()<' → logprob: -13.28552532196045

Token 67: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -3.8219583075260743e-05
    2. '(True' → logprob: -10.375038146972656
    3. '())' → logprob: -12.125038146972656
    4. '=' → logprob: -14.250038146972656
    5. '()' → logprob: -14.375038146972656
    6. ')' → logprob: -15.875038146972656
    7. '```' → logprob: -18.125038146972656
    8. 'True' → logprob: -18.250038146972656
    9. '=False' → logprob: -18.500038146972656
    10. '()==' → logprob: -18.750038146972656

Token 68: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005682834889739752
    2. ')
' → logprob: -7.500568389892578
    3. ' )' → logprob: -11.500568389892578
    4. ')

' → logprob: -12.625568389892578
    5. ')
' → logprob: -14.000568389892578
    6. '()' → logprob: -14.875568389892578
    7. '))' → logprob: -15.625568389892578
    8. '),' → logprob: -15.750568389892578
    9. '')' → logprob: -16.250568389892578
    10. ' )
' → logprob: -16.750568389892578

Token 69: 'C' (ID: 34)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6458640098571777
    2. 'C' → logprob: -0.7708640098571777
    3. ' for' → logprob: -4.395864009857178
    4. 'D' → logprob: -7.770864009857178
    5. '```' → logprob: -8.770864486694336
    6. '<|end|>' → logprob: -9.770864486694336
    7. 'E' → logprob: -10.145864486694336
    8. ' C' → logprob: -10.395864486694336
    9. 'while' → logprob: -10.520864486694336
    10. 'A' → logprob: -10.770864486694336

Token 70: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.003923449199646711
    2. '.' → logprob: -5.628923416137695
    3. ' .' → logprob: -8.128923416137695
    4. 'sort' → logprob: -11.503923416137695
    5. ' =' → logprob: -11.878923416137695
    6. '=' → logprob: -13.253923416137695
    7. '.s' → logprob: -13.253923416137695
    8. '.reverse' → logprob: -13.503923416137695
    9. '.reshape' → logprob: -14.503923416137695
    10. '	sort' → logprob: -14.628923416137695

Token 71: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.07037796825170517
    2. '()' → logprob: -2.695378065109253
    3. 'reverse' → logprob: -8.570378303527832
    4. '(' → logprob: -8.695378303527832
    5. '())' → logprob: -10.820378303527832
    6. '(True' → logprob: -11.070378303527832
    7. '()>' → logprob: -11.320378303527832
    8. '()
' → logprob: -11.820378303527832
    9. '()(' → logprob: -11.945378303527832
    10. '(False' → logprob: -12.070378303527832

Token 72: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0009227732080034912
    2. '(True' → logprob: -7.125922679901123
    3. '()' → logprob: -9.125923156738281
    4. '())' → logprob: -11.875923156738281
    5. '()
' → logprob: -14.000923156738281
    6. '=' → logprob: -14.375923156738281
    7. 'True' → logprob: -14.875923156738281
    8. '(' → logprob: -15.000923156738281
    9. ')' → logprob: -16.37592315673828
    10. '()==' → logprob: -17.12592315673828

Token 73: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001518907374702394
    2. ')
' → logprob: -6.501518726348877
    3. ')

' → logprob: -11.501519203186035
    4. ' )' → logprob: -12.376519203186035
    5. ')
' → logprob: -14.501519203186035
    6. '#' → logprob: -14.876519203186035
    7. '))' → logprob: -15.251519203186035
    8. '),' → logprob: -15.751519203186035
    9. '()' → logprob: -16.00151824951172
    10. '')' → logprob: -16.12651824951172

Token 74: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8670179997570813e-05
    2. ' for' → logprob: -11.000019073486328
    3. '```' → logprob: -14.000019073486328
    4. '<|end|>' → logprob: -14.125019073486328
    5. '
' → logprob: -15.750019073486328
    6. 'from' → logprob: -16.250019073486328
    7. '#' → logprob: -16.375019073486328
    8. '	for' → logprob: -17.000019073486328
    9. 'For' → logprob: -18.250019073486328
    10. 'fo' → logprob: -18.250019073486328

Token 75: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.17512357234954834
    2. ' i' → logprob: -1.9251235723495483
    3. 'a' → logprob: -4.300123691558838
    4. 'i' → logprob: -7.550123691558838
    5. ' x' → logprob: -7.675123691558838
    6. ' ' → logprob: -9.55012321472168
    7. ' ai' → logprob: -9.92512321472168
    8. ' A' → logprob: -10.42512321472168
    9. '_' → logprob: -11.17512321472168
    10. ' Ai' → logprob: -11.17512321472168

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04386015608906746
    2. 'in' → logprob: -3.1688601970672607
    3. ' ' → logprob: -7.168859958648682
    4. '  ' → logprob: -10.29386043548584
    5. ' i' → logprob: -11.29386043548584
    6. ',' → logprob: -11.41886043548584
    7. 'n' → logprob: -11.41886043548584
    8. '	in' → logprob: -12.54386043548584
    9. '0' → logprob: -12.79386043548584
    10. ' ,' → logprob: -13.04386043548584

Token 77: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04304748773574829
    2. 'range' → logprob: -3.1680474281311035
    3. ' A' → logprob: -10.418047904968262
    4. 'A' → logprob: -12.043047904968262
    5. '	range' → logprob: -12.293047904968262
    6. ' ' → logprob: -13.043047904968262
    7. ' xrange' → logprob: -13.168047904968262
    8. '(range' → logprob: -14.293047904968262
    9. ' X' → logprob: -14.418047904968262
    10. '  ' → logprob: -14.418047904968262

Token 78: '(min' (ID: 26035)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.31345027685165405
    2. '(' → logprob: -1.3134503364562988
    3. '(len' → logprob: -9.68844985961914
    4. '(A' → logprob: -10.43844985961914
    5. '(min' → logprob: -10.56344985961914
    6. ' (' → logprob: -10.93844985961914
    7. '(x' → logprob: -11.18844985961914
    8. '(Y' → logprob: -11.43844985961914
    9. '(K' → logprob: -11.43844985961914
    10. 'X' → logprob: -12.56344985961914

Token 79: '(K' (ID: 28797)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.012546030804514885
    2. '(' → logprob: -4.512546062469482
    3. '(len' → logprob: -6.762546062469482
    4. '(Y' → logprob: -8.637545585632324
    5. '(K' → logprob: -9.137545585632324
    6. '(A' → logprob: -10.262545585632324
    7. '(x' → logprob: -11.762545585632324
    8. '((' → logprob: -12.887545585632324
    9. '(
' → logprob: -13.262545585632324
    10. '(Z' → logprob: -13.262545585632324

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004118769429624081
    2. ',X' → logprob: -5.754118919372559
    3. ' ,' → logprob: -7.129118919372559
    4. '(X' → logprob: -9.379118919372559
    5. ',len' → logprob: -11.004118919372559
    6. '(' → logprob: -11.379118919372559
    7. ',
' → logprob: -12.504118919372559
    8. ',K' → logprob: -12.504118919372559
    9. ',A' → logprob: -12.629118919372559
    10. '),' → logprob: -12.754118919372559

Token 81: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.01481863483786583
    2. 'len' → logprob: -4.8898186683654785
    3. ' X' → logprob: -5.0148186683654785
    4. ' len' → logprob: -7.6398186683654785
    5. ' ' → logprob: -9.88981819152832
    6. 'Y' → logprob: -12.13981819152832
    7. '  ' → logprob: -13.38981819152832
    8. ')' → logprob: -13.38981819152832
    9. '(len' → logprob: -13.51481819152832
    10. '100' → logprob: -13.88981819152832

Token 82: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.024538997560739517
    2. '))' → logprob: -4.274538993835449
    3. '):' → logprob: -5.149538993835449
    4. ')' → logprob: -5.524538993835449
    5. ' ))' → logprob: -8.02453899383545
    6. ')):
' → logprob: -9.02453899383545
    7. ' ):' → logprob: -10.89953899383545
    8. '*' → logprob: -11.02453899383545
    9. ' ' → logprob: -11.14953899383545
    10. ')):
' → logprob: -12.14953899383545

Token 83: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08565260469913483
    2. '   ' → logprob: -2.7106525897979736
    3. ' ' → logprob: -5.335652828216553
    4. ' for' → logprob: -5.460652828216553
    5. '<|end|>' → logprob: -5.835652828216553
    6. ' :' → logprob: -7.210652828216553
    7. ':
' → logprob: -7.210652828216553
    8. '    ' → logprob: -7.835652828216553
    9. '  ' → logprob: -8.210652351379395
    10. ')' → logprob: -8.335652351379395

Token 84: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05241958424448967
    2. 'for' (adapté à ' for') → logprob: -3.052419662475586
    3. ' A' → logprob: -6.677419662475586
    4. ' a' → logprob: -7.052419662475586
    5. '   ' → logprob: -7.177419662475586
    6. ' ' → logprob: -7.427419662475586
    7. ' D' → logprob: -9.302419662475586
    8. '	for' → logprob: -9.427419662475586
    9. '    ' → logprob: -10.052419662475586
    10. 'A' → logprob: -10.677419662475586

Token 85: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.03225095197558403
    2. 'j' → logprob: -3.5322508811950684
    3. ' ' → logprob: -6.907250881195068
    4. ' range' → logprob: -7.782250881195068
    5. 'range' → logprob: -7.907250881195068
    6. '  ' → logprob: -8.407251358032227
    7. 'space' → logprob: -9.157251358032227
    8. '    ' → logprob: -9.407251358032227
    9. ' in' → logprob: -9.657251358032227
    10. '   ' → logprob: -10.032251358032227

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033667489886283875
    2. 'in' → logprob: -3.40866756439209
    3. ' ' → logprob: -11.03366756439209
    4. 'range' → logprob: -13.03366756439209
    5. '	in' → logprob: -13.78366756439209
    6. '<|end|>' → logprob: -14.40866756439209
    7. '    ' → logprob: -14.65866756439209
    8. '  ' → logprob: -15.90866756439209
    9. '   ' → logprob: -15.90866756439209
    10. '1' → logprob: -15.90866756439209

Token 87: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10035224258899689
    2. 'range' → logprob: -2.3503522872924805
    3. '(range' → logprob: -8.85035228729248
    4. '	range' → logprob: -13.22535228729248
    5. '_range' → logprob: -16.225351333618164
    6. '(' → logprob: -16.600351333618164
    7. ' xrange' → logprob: -16.975351333618164
    8. ' (' → logprob: -17.850351333618164
    9. '   ' → logprob: -17.850351333618164
    10. ' in' → logprob: -18.100351333618164

Token 88: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00023393364972434938
    2. '(' → logprob: -8.37523365020752
    3. '(range' → logprob: -13.25023365020752
    4. ' (' → logprob: -14.37523365020752
    5. ' min' → logprob: -15.12523365020752
    6. 'min' → logprob: -15.25023365020752
    7. '(m' → logprob: -15.37523365020752
    8. 'range' → logprob: -15.37523365020752
    9. ' range' → logprob: -17.250234603881836
    10. '=min' → logprob: -17.750234603881836

Token 89: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.02631678804755211
    2. '(' → logprob: -3.6513168811798096
    3. '(k' → logprob: -12.52631664276123
    4. ',K' → logprob: -12.90131664276123
    5. ',' → logprob: -13.27631664276123
    6. '(
' → logprob: -13.40131664276123
    7. '(B' → logprob: -13.40131664276123
    8. '(M' → logprob: -13.52631664276123
    9. '(J' → logprob: -14.27631664276123
    10. '((' → logprob: -14.27631664276123

Token 90: ' //' (ID: 602)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -7.398067828034982e-05
    2. ' ,' → logprob: -9.62507438659668
    3. ',Y' → logprob: -12.87507438659668
    4. ',K' → logprob: -13.62507438659668
    5. '`,' → logprob: -14.12507438659668
    6. '',' → logprob: -14.12507438659668
    7. ',
' → logprob: -14.25007438659668
    8. '),' → logprob: -15.00007438659668
    9. ',X' → logprob: -15.25007438659668
    10. ')' → logprob: -15.25007438659668

Token 91: ' (' (ID: 350)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0622359924018383
    2. ' Y' → logprob: -2.8122360706329346
    3. 'X' → logprob: -9.562235832214355
    4. '(Y' → logprob: -10.062235832214355
    5. ',' → logprob: -10.187235832214355
    6. 'j' → logprob: -11.187235832214355
    7. ' (' → logprob: -11.187235832214355
    8. ' ' → logprob: -11.187235832214355
    9. '	Y' → logprob: -11.562235832214355
    10. 'K' → logprob: -11.687235832214355

Token 92: 'i' (ID: 72)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.21236257255077362
    2. 'X' → logprob: -2.96236252784729
    3. '(X' → logprob: -3.08736252784729
    4. '(Y' → logprob: -3.33736252784729
    5. '1' → logprob: -3.96236252784729
    6. '(i' → logprob: -4.587362766265869
    7. 'max' → logprob: -4.962362766265869
    8. '(max' → logprob: -5.212362766265869
    9. '(' → logprob: -5.337362766265869
    10. 'i' → logprob: -5.837362766265869

Token 93: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011155937798321247
    2. ' +' → logprob: -4.51115608215332
    3. ' ' → logprob: -9.88615608215332
    4. '1' → logprob: -10.76115608215332
    5. ' if' → logprob: -10.88615608215332
    6. 'if' → logprob: -12.76115608215332
    7. ',' → logprob: -13.01115608215332
    8. '   ' → logprob: -13.38615608215332
    9. '),' → logprob: -13.76115608215332
    10. '2' → logprob: -13.76115608215332

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006731472443789244
    2. '+' → logprob: -5.3817315101623535
    3. ' ' → logprob: -6.2567315101623535
    4. ' +' → logprob: -8.881731033325195
    5. '   ' → logprob: -11.381731033325195
    6. ')' → logprob: -11.756731033325195
    7. '),' → logprob: -12.006731033325195
    8. ')+' → logprob: -12.256731033325195
    9. 'j' → logprob: -12.381731033325195
    10. ',' → logprob: -13.069231033325195

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003389190824236721
    2. ' ' → logprob: -8.125338554382324
    3. '+' → logprob: -10.750338554382324
    4. '   ' → logprob: -12.000338554382324
    5. ')' → logprob: -12.562838554382324
    6. 'i' → logprob: -13.000338554382324
    7. 'j' → logprob: -13.812838554382324
    8. '
' → logprob: -13.937838554382324
    9. '2' → logprob: -14.000338554382324
    10. '0' → logprob: -14.250338554382324

Token 96: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2705037593841553
    2. ',' → logprob: -1.5205037593841553
    3. '+' → logprob: -4.770503997802734
    4. ')' → logprob: -5.395503997802734
    5. ' +' → logprob: -6.145503997802734
    6. ')+' → logprob: -6.520503997802734
    7. ' ,' → logprob: -7.145503997802734
    8. ' ),' → logprob: -7.645503997802734
    9. ')),' → logprob: -8.895503997802734
    10. '   ' → logprob: -8.895503997802734

Token 97: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.7644492387771606
    2. ' Y' → logprob: -1.1394492387771606
    3. ' min' → logprob: -1.8894492387771606
    4. 'min' → logprob: -2.764449119567871
    5. ' ' → logprob: -9.264449119567871
    6. '(min' → logprob: -9.639449119567871
    7. '   ' → logprob: -11.014449119567871
    8. '	Y' → logprob: -11.326949119567871
    9. '[min' → logprob: -11.389449119567871
    10. ' ' → logprob: -11.764449119567871

Token 98: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.5802940726280212
    2. '):' → logprob: -0.8302940726280212
    3. ')):
' → logprob: -6.330294132232666
    4. '))' → logprob: -6.705294132232666
    5. ')' → logprob: -7.455294132232666
    6. '):
' → logprob: -7.830294132232666
    7. ' ):' → logprob: -8.455293655395508
    8. ')):
' → logprob: -9.955293655395508
    9. ':' → logprob: -10.330293655395508
    10. '   ' → logprob: -11.080293655395508

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0317843072116375
    2. '<|end|>' → logprob: -3.9067842960357666
    3. ' ' → logprob: -5.281784534454346
    4. '   ' → logprob: -6.406784534454346
    5. '    ' → logprob: -6.531784534454346
    6. '        ' → logprob: -7.031784534454346
    7. ' for' → logprob: -7.406784534454346
    8. '        
' → logprob: -8.281784057617188
    9. '     ' → logprob: -8.406784057617188
    10. '      ' → logprob: -8.531784057617188

Token 100: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4471542537212372
    2. ' for' → logprob: -1.5721542835235596
    3. '           ' → logprob: -2.6971542835235596
    4. ' D' → logprob: -2.9471542835235596
    5. '   ' → logprob: -4.5721540451049805
    6. ' if' → logprob: -4.8221540451049805
    7. '        ' → logprob: -5.4471540451049805
    8. 'for' (adapté à ' for') → logprob: -5.6971540451049805
    9. '    ' → logprob: -6.0721540451049805
    10. ' ' → logprob: -6.1971540451049805

Token 101: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6779822707176208
    2. 'k' → logprob: -1.1779823303222656
    3. ' range' → logprob: -2.0529823303222656
    4. 'range' → logprob: -3.8029823303222656
    5. ' min' → logprob: -4.302982330322266
    6. ' in' → logprob: -4.302982330322266
    7. 'min' → logprob: -5.052982330322266
    8. 'in' → logprob: -8.677982330322266
    9. '(range' → logprob: -10.552982330322266
    10. '```' → logprob: -10.927982330322266

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004624868277460337
    2. 'in' → logprob: -5.379624843597412
    3. 'range' → logprob: -13.00462532043457
    4. ' ' → logprob: -13.25462532043457
    5. '<|end|>' → logprob: -15.00462532043457
    6. ' range' → logprob: -15.50462532043457
    7. 'ine' → logprob: -16.87962532043457
    8. '	in' → logprob: -17.62962532043457
    9. '   ' → logprob: -17.62962532043457
    10. '  ' → logprob: -17.75462532043457

Token 103: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07890807837247849
    2. 'range' → logprob: -2.5789079666137695
    3. '(range' → logprob: -10.95390796661377
    4. 'min' → logprob: -15.32890796661377
    5. ' min' → logprob: -15.45390796661377
    6. '	range' → logprob: -15.95390796661377
    7. ' xrange' → logprob: -16.203908920288086
    8. '(' → logprob: -17.703908920288086
    9. ' ' → logprob: -17.703908920288086
    10. ' (' → logprob: -17.828908920288086

Token 104: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -3.404745439183898e-05
    2. '(' → logprob: -11.12503433227539
    3. ' min' → logprob: -11.75003433227539
    4. ' (' → logprob: -11.87503433227539
    5. 'min' → logprob: -12.62503433227539
    6. '[min' → logprob: -14.62503433227539
    7. '=min' → logprob: -14.75003433227539
    8. '(m' → logprob: -15.87503433227539
    9. ',min' → logprob: -17.37503433227539
    10. ':min' → logprob: -17.37503433227539

Token 105: '((' (ID: 2054)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.004371609538793564
    2. '(' → logprob: -5.504371643066406
    3. '(min' → logprob: -8.379371643066406
    4. '(k' → logprob: -10.379371643066406
    5. '((' → logprob: -10.754371643066406
    6. '(KERN' → logprob: -13.004371643066406
    7. '(M' → logprob: -13.004371643066406
    8. '(L' → logprob: -13.004371643066406
    9. '(C' → logprob: -13.504371643066406
    10. 'K' → logprob: -14.379371643066406

Token 106: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0037851084489375353
    2. ' K' → logprob: -5.878785133361816
    3. '(K' → logprob: -7.253785133361816
    4. 'min' → logprob: -8.878785133361816
    5. ' (' → logprob: -10.128785133361816
    6. '(' → logprob: -10.378785133361816
    7. ' min' → logprob: -10.503785133361816
    8. '(min' → logprob: -11.253785133361816
    9. 'max' → logprob: -11.753785133361816
    10. ' ' → logprob: -12.878785133361816

Token 107: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4743386209011078
    2. ' //' → logprob: -0.9743386507034302
    3. ' ' → logprob: -8.72433853149414
    4. '   ' → logprob: -10.97433853149414
    5. ' /' → logprob: -11.22433853149414
    6. '/' → logprob: -11.47433853149414
    7. '#' → logprob: -11.59933853149414
    8. '       ' → logprob: -11.97433853149414
    9. '  ' → logprob: -12.22433853149414
    10. '    ' → logprob: -12.47433853149414

Token 108: ' (' (ID: 350)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.01698940619826317
    2. ' ((' → logprob: -4.141989231109619
    3. ' (' → logprob: -8.391989707946777
    4. '(' → logprob: -8.641989707946777
    5. '(i' → logprob: -8.891989707946777
    6. '(j' → logprob: -9.141989707946777
    7. ' ' → logprob: -9.141989707946777
    8. '   ' → logprob: -9.266989707946777
    9. '(((' → logprob: -11.016989707946777
    10. '       ' → logprob: -11.141989707946777

Token 109: 'i' (ID: 72)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.019468391314148903
    2. '(j' → logprob: -4.519468307495117
    3. '(i' → logprob: -5.519468307495117
    4. ' ((' → logprob: -5.769468307495117
    5. ' (' → logprob: -6.894468307495117
    6. '(' → logprob: -9.144468307495117
    7. '   ' → logprob: -9.894468307495117
    8. ' ' → logprob: -10.269468307495117
    9. '(max' → logprob: -11.269468307495117
    10. '       ' → logprob: -12.269468307495117

Token 110: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2738218903541565
    2. '   ' → logprob: -2.3988218307495117
    3. '//' → logprob: -3.1488218307495117
    4. ' +' → logprob: -3.2738218307495117
    5. '       ' → logprob: -3.7738218307495117
    6. ' //' → logprob: -4.023821830749512
    7. '    ' → logprob: -4.898821830749512
    8. ' ' → logprob: -5.648821830749512
    9. '[j' → logprob: -5.898821830749512
    10. '     ' → logprob: -6.148821830749512

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002112886286340654
    2. ' ' → logprob: -8.500211715698242
    3. '2' → logprob: -12.500211715698242
    4. '   ' → logprob: -13.375211715698242
    5. '           ' → logprob: -14.875211715698242
    6. '       ' → logprob: -15.250211715698242
    7. 'k' → logprob: -15.250211715698242
    8. ')' → logprob: -15.250211715698242
    9. '+' → logprob: -15.375211715698242
    10. 'j' → logprob: -15.375211715698242

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04803340137004852
    2. '(j' → logprob: -3.4230334758758545
    3. '(k' → logprob: -4.423033237457275
    4. '(' → logprob: -6.923033237457275
    5. '+' → logprob: -7.673033237457275
    6. '   ' → logprob: -8.423033714294434
    7. 'j' → logprob: -8.548033714294434
    8. ' (' → logprob: -8.798033714294434
    9. ' ' → logprob: -9.673033714294434
    10. '       ' → logprob: -10.048033714294434

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025910532101988792
    2. '//' → logprob: -3.9009106159210205
    3. ' //' → logprob: -6.025910377502441
    4. ' )' → logprob: -6.275910377502441
    5. ')//' → logprob: -6.900910377502441
    6. ' ' → logprob: -10.525910377502441
    7. '),' → logprob: -11.775910377502441
    8. '   ' → logprob: -12.025910377502441
    9. ')
' → logprob: -13.150910377502441
    10. '+' → logprob: -13.775910377502441

Token 114: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.189977765083313
    2. '//' → logprob: -2.0649776458740234
    3. ' //' → logprob: -3.1899776458740234
    4. '),' → logprob: -5.814977645874023
    5. ' )' → logprob: -7.064977645874023
    6. ' ' → logprob: -7.689977645874023
    7. ')//' → logprob: -7.689977645874023
    8. ',' → logprob: -8.814977645874023
    9. '+' → logprob: -10.689977645874023
    10. ' ' → logprob: -10.939977645874023

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014762140810489655
    2. ' ' → logprob: -4.764761924743652
    3. '(k' → logprob: -6.014761924743652
    4. ' (' → logprob: -6.764761924743652
    5. ')' → logprob: -6.889761924743652
    6. 'k' → logprob: -7.514761924743652
    7. '(j' → logprob: -8.014761924743652
    8. 'j' → logprob: -8.264761924743652
    9. ' j' → logprob: -8.889761924743652
    10. ' k' → logprob: -9.014761924743652

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030629150569438934
    2. ' ' → logprob: -6.503062725067139
    3. '(k' → logprob: -7.753062725067139
    4. '2' → logprob: -8.003063201904297
    5. 'k' → logprob: -8.128063201904297
    6. ')' → logprob: -8.128063201904297
    7. ' (' → logprob: -9.878063201904297
    8. 'j' → logprob: -10.503063201904297
    9. '(j' → logprob: -10.753063201904297
    10. ' k' → logprob: -11.003063201904297

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010505681857466698
    2. '),' → logprob: -5.135505676269531
    3. ')//' → logprob: -6.135505676269531
    4. ' )' → logprob: -6.760505676269531
    5. '//' → logprob: -7.510505676269531
    6. ',' → logprob: -7.635505676269531
    7. ' //' → logprob: -8.635505676269531
    8. ' ),' → logprob: -11.260505676269531
    9. ' ' → logprob: -12.010505676269531
    10. ' ,' → logprob: -12.260505676269531

Token 118: ' //' (ID: 602)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022406408563256264
    2. '),' → logprob: -4.397406578063965
    3. ' ,' → logprob: -4.647406578063965
    4. '(),' → logprob: -9.397406578063965
    5. ',j' → logprob: -10.147406578063965
    6. ',k' → logprob: -10.147406578063965
    7. ' ),' → logprob: -10.522406578063965
    8. '),(' → logprob: -11.522406578063965
    9. '//' → logprob: -11.772406578063965
    10. ' ' → logprob: -11.897406578063965

Token 119: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.21152363717556
    2. '(k' → logprob: -2.0865235328674316
    3. ' (' → logprob: -2.7115235328674316
    4. '(' → logprob: -9.46152400970459
    5. ' ' → logprob: -12.08652400970459
    6. '(c' → logprob: -12.83652400970459
    7. '   ' → logprob: -13.33652400970459
    8. '(z' → logprob: -13.46152400970459
    9. '(C' → logprob: -14.08652400970459
    10. '(x' → logprob: -14.08652400970459

Token 120: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0007462600478902459
    2. '(k' → logprob: -7.875746250152588
    3. '(' → logprob: -8.250746726989746
    4. ' (' → logprob: -9.250746726989746
    5. '(max' → logprob: -12.625746726989746
    6. 'j' → logprob: -12.750746726989746
    7. '((' → logprob: -13.500746726989746
    8. '(
' → logprob: -15.125746726989746
    9. ')' → logprob: -15.250746726989746
    10. '[j' → logprob: -15.500746726989746

Token 121: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3133852779865265
    2. ' +' → logprob: -1.313385248184204
    3. '+k' → logprob: -9.813385009765625
    4. ' ' → logprob: -10.938385009765625
    5. '+j' → logprob: -11.188385009765625
    6. '(' → logprob: -12.313385009765625
    7. 'k' → logprob: -12.563385009765625
    8. '1' → logprob: -12.813385009765625
    9. '(k' → logprob: -12.813385009765625
    10. ' plus' → logprob: -12.813385009765625

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028851060778833926
    2. ' ' → logprob: -8.625288963317871
    3. '(' → logprob: -9.250288963317871
    4. ' (' → logprob: -11.875288963317871
    5. '(k' → logprob: -12.375288963317871
    6. '   ' → logprob: -14.500288963317871
    7. '```' → logprob: -15.125288963317871
    8. ')' → logprob: -15.125288963317871
    9. '+' → logprob: -15.250288963317871
    10. '(
' → logprob: -16.500288009643555

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035250463406555355
    2. ' ' → logprob: -8.62535285949707
    3. '(' → logprob: -8.75035285949707
    4. '(k' → logprob: -11.62535285949707
    5. '   ' → logprob: -13.12535285949707
    6. ' (' → logprob: -13.37535285949707
    7. '+' → logprob: -15.00035285949707
    8. '(
' → logprob: -15.00035285949707
    9. '
' → logprob: -15.62535285949707
    10. 'k' → logprob: -15.81285285949707

Token 124: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0012668977724388242
    2. ',' → logprob: -6.876266956329346
    3. ' ),' → logprob: -8.626266479492188
    4. ')' → logprob: -10.876266479492188
    5. ' ,' → logprob: -11.626266479492188
    6. ')),' → logprob: -11.751266479492188
    7. '),(' → logprob: -12.126266479492188
    8. ',),' → logprob: -12.251266479492188
    9. '),
' → logprob: -13.126266479492188
    10. '```' → logprob: -13.376266479492188

Token 125: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.42877131700515747
    2. ' Z' → logprob: -1.0537712574005127
    3. ' ' → logprob: -10.303771018981934
    4. '	Z' → logprob: -11.178771018981934
    5. ')' → logprob: -12.428771018981934
    6. '  ' → logprob: -12.678771018981934
    7. '   ' → logprob: -12.928771018981934
    8. 'min' → logprob: -13.178771018981934
    9. ' min' → logprob: -13.178771018981934
    10. 'C' → logprob: -13.678771018981934

Token 126: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.012638906016945839
    2. '):' → logprob: -4.762639045715332
    3. ')):
' → logprob: -6.012639045715332
    4. '))' → logprob: -6.512639045715332
    5. ':' → logprob: -10.887639045715332
    6. ')):
' → logprob: -11.012639045715332
    7. '+' → logprob: -11.262639045715332
    8. ')' → logprob: -11.512639045715332
    9. '):
' → logprob: -12.137639045715332
    10. ' ))' → logprob: -12.512639045715332

Token 127: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018634473904967308
    2. '   ' → logprob: -4.39363431930542
    3. ' D' → logprob: -5.51863431930542
    4. 'D' → logprob: -7.26863431930542
    5. '       ' → logprob: -7.26863431930542
    6. ' ' → logprob: -8.518634796142578
    7. '               ' → logprob: -9.268634796142578
    8. '            
' → logprob: -9.893634796142578
    9. '
' → logprob: -10.143634796142578
    10. '<|end|>' → logprob: -10.268634796142578

Token 128: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.6755847930908203
    2. 'D' (adapté à ' D') → logprob: -0.8005847930908203
    3. '               ' → logprob: -3.3005847930908203
    4. '   ' → logprob: -5.67558479309082
    5. ' if' → logprob: -7.17558479309082
    6. '           ' → logprob: -8.30058479309082
    7. ' ' → logprob: -8.30058479309082
    8. 'if' → logprob: -9.42558479309082
    9. '                   ' → logprob: -9.80058479309082
    10. '                
' → logprob: -9.80058479309082

Token 129: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001472960808314383
    2. '.' → logprob: -6.6264729499816895
    3. '.app' → logprob: -9.001473426818848
    4. '.ap' → logprob: -11.001473426818848
    5. 'append' → logprob: -12.751473426818848
    6. ' .' → logprob: -12.751473426818848
    7. '.extend' → logprob: -14.876473426818848
    8. '.Append' → logprob: -15.001473426818848
    9. '.push' → logprob: -15.251473426818848
    10. '.py' → logprob: -15.876473426818848

Token 130: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.005801755469292402
    2. '((' → logprob: -5.505801677703857
    3. '(' → logprob: -6.380801677703857
    4. 'A' → logprob: -11.505802154541016
    5. '(a' → logprob: -11.630802154541016
    6. '(
' → logprob: -12.130802154541016
    7. '(((' → logprob: -13.505802154541016
    8. '([' → logprob: -14.130802154541016
    9. ' (' → logprob: -15.505802154541016
    10. '(np' → logprob: -15.630802154541016

Token 131: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.219262624857947e-05
    2. '[' → logprob: -9.625072479248047
    3. ' [' → logprob: -12.750072479248047
    4. '[
' → logprob: -13.625072479248047
    5. ')' → logprob: -13.750072479248047
    6. '```' → logprob: -15.500072479248047
    7. 'i' → logprob: -15.625072479248047
    8. '[j' → logprob: -16.375072479248047
    9. '
' → logprob: -16.375072479248047
    10. ')[' → logprob: -16.875072479248047

Token 132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0026957436930388212
    2. ']+' → logprob: -6.127695560455322
    3. ' ]' → logprob: -8.25269603729248
    4. ']*' → logprob: -8.50269603729248
    5. ')' → logprob: -11.12769603729248
    6. '+' → logprob: -11.50269603729248
    7. '])' → logprob: -11.75269603729248
    8. '*' → logprob: -12.00269603729248
    9. ' ' → logprob: -13.00269603729248
    10. ' +' → logprob: -13.25269603729248

Token 133: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.21301768720149994
    2. '+' → logprob: -1.7130177021026611
    3. '+B' → logprob: -4.463017463684082
    4. ')' → logprob: -12.463017463684082
    5. '+b' → logprob: -13.338017463684082
    6. ')+' → logprob: -14.338017463684082
    7. '+C' → logprob: -14.588017463684082
    8. '+j' → logprob: -14.588017463684082
    9. ' +
' → logprob: -14.963017463684082
    10. ' B' → logprob: -14.963017463684082

Token 134: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6931540966033936
    2. ' B' → logprob: -0.6931540966033936
    3. '	B' → logprob: -12.943154335021973
    4. ' ' → logprob: -13.318154335021973
    5. '<|end|>' → logprob: -13.443154335021973
    6. ')' → logprob: -15.443154335021973
    7. ' ' → logprob: -15.693154335021973
    8. '+B' → logprob: -15.818154335021973
    9. '"B' → logprob: -15.943154335021973
    10. '(B' → logprob: -16.193153381347656

Token 135: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.248469718324486e-05
    2. '[' → logprob: -10.875022888183594
    3. ' [' → logprob: -12.750022888183594
    4. '[
' → logprob: -16.125022888183594
    5. '[i' → logprob: -16.625022888183594
    6. ' ' → logprob: -16.875022888183594
    7. '   ' → logprob: -16.875022888183594
    8. '[k' → logprob: -16.875022888183594
    9. ' j' → logprob: -17.125022888183594
    10. '```' → logprob: -17.625022888183594

Token 136: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10174781829118729
    2. '+' → logprob: -2.351747751235962
    3. ']' → logprob: -6.726747989654541
    4. ')' → logprob: -8.726747512817383
    5. ']+' → logprob: -9.601747512817383
    6. ' ' → logprob: -9.726747512817383
    7. ' ]' → logprob: -10.476747512817383
    8. '[' → logprob: -11.476747512817383
    9. '<|end|>' → logprob: -11.976747512817383
    10. ')+' → logprob: -13.101747512817383

Token 137: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018158020451664925
    2. '+' → logprob: -4.018157958984375
    3. '+C' → logprob: -12.268157958984375
    4. ' ' → logprob: -12.893157958984375
    5. ')' → logprob: -14.768157958984375
    6. ' +
' → logprob: -15.643157958984375
    7. 'C' → logprob: -16.018157958984375
    8. '<|end|>' → logprob: -16.518157958984375
    9. ' ' → logprob: -16.768157958984375
    10. '[' → logprob: -17.143157958984375

Token 138: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2811550199985504
    2. ' C' → logprob: -1.406154990196228
    3. ' ' → logprob: -12.90615463256836
    4. '<|end|>' → logprob: -14.03115463256836
    5. ')' → logprob: -15.40615463256836
    6. '	C' → logprob: -15.65615463256836
    7. '>C' → logprob: -15.90615463256836
    8. '```' → logprob: -16.03115463256836
    9. '   ' → logprob: -16.15615463256836
    10. '+C' → logprob: -16.40615463256836

Token 139: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.0948158382670954e-05
    2. 'k' → logprob: -11.125030517578125
    3. '[' → logprob: -11.750030517578125
    4. ' [' → logprob: -12.125030517578125
    5. '[
' → logprob: -14.375030517578125
    6. '[c' → logprob: -14.500030517578125
    7. '][' → logprob: -14.750030517578125
    8. '```' → logprob: -15.125030517578125
    9. ' k' → logprob: -15.500030517578125
    10. ')[' → logprob: -15.625030517578125

Token 140: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006114124786108732
    2. '])' → logprob: -5.2561140060424805
    3. '))' → logprob: -7.5061140060424805
    4. ' )' → logprob: -8.25611400604248
    5. ')
' → logprob: -10.25611400604248
    6. '})' → logprob: -11.38111400604248
    7. '）' → logprob: -11.63111400604248
    8. '`)' → logprob: -12.75611400604248
    9. ')])' → logprob: -13.00611400604248
    10. ' ])' → logprob: -13.38111400604248

Token 141: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0007236333331093192
    2. '
' → logprob: -7.250723838806152
    3. '            
' → logprob: -11.625723838806152
    4. '

' → logprob: -13.375723838806152
    5. '```' → logprob: -14.375723838806152
    6. ' D' → logprob: -14.625723838806152
    7. '    
' → logprob: -14.625723838806152
    8. ')' → logprob: -14.625723838806152
    9. ')
' → logprob: -15.000723838806152
    10. '        
' → logprob: -15.125723838806152

Token 142: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00207590963691473
    2. '.' → logprob: -6.252075672149658
    3. 'sort' → logprob: -9.627076148986816
    4. 'sorted' → logprob: -9.877076148986816
    5. '<|end|>' → logprob: -11.752076148986816
    6. '.sorted' → logprob: -12.002076148986816
    7. '_sorted' → logprob: -12.252076148986816
    8. '
' → logprob: -13.252076148986816
    9. ' =' → logprob: -13.502076148986816
    10. '  
' → logprob: -13.627076148986816

Token 143: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.0004833425919059664
    2. 'reverse' → logprob: -7.750483512878418
    3. '(' → logprob: -9.875483512878418
    4. '()' → logprob: -14.125483512878418
    5. ' reverse' → logprob: -15.375483512878418
    6. '(
' → logprob: -16.2504825592041
    7. '(re' → logprob: -16.3754825592041
    8. '.reverse' → logprob: -16.5004825592041
    9. '_reverse' → logprob: -17.5004825592041
    10. '(key' → logprob: -17.7504825592041

Token 144: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.046800125390291214
    2. '())' → logprob: -3.296800136566162
    3. '()' → logprob: -5.296800136566162
    4. '(True' → logprob: -5.796800136566162
    5. ')' → logprob: -7.421800136566162
    6. '=' → logprob: -10.171799659729004
    7. '()>' → logprob: -11.296799659729004
    8. '())
' → logprob: -11.671799659729004
    9. 'True' → logprob: -12.796799659729004
    10. '()
' → logprob: -12.796799659729004

Token 145: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.22617381811141968
    2. ')' → logprob: -1.6011738777160645
    3. '[:' → logprob: -7.7261738777160645
    4. '
' → logprob: -8.851173400878906
    5. ')

' → logprob: -9.726173400878906
    6. ')
' → logprob: -9.976173400878906
    7. ' )
' → logprob: -10.226173400878906
    8. ' )' → logprob: -11.726173400878906
    9. '[' → logprob: -11.976173400878906
    10. ',' → logprob: -12.726173400878906

Token 146: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007127894787117839
    2. 'print' → logprob: -7.250712871551514
    3. ' for' → logprob: -13.000712394714355
    4. 'D' → logprob: -15.250712394714355
    5. 'from' → logprob: -15.875712394714355
    6. 'result' → logprob: -16.125713348388672
    7. '```' → logprob: -16.750713348388672
    8. 'limit' → logprob: -18.000713348388672
    9. '#print' → logprob: -18.250713348388672
    10. '[' → logprob: -18.375713348388672

Token 147: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3203442692756653
    2. 'i' → logprob: -2.1953442096710205
    3. ' l' → logprob: -2.5703442096710205
    4. ' d' → logprob: -3.1953442096710205
    5. 'd' → logprob: -4.0703444480896
    6. 'l' → logprob: -4.1953444480896
    7. '_' → logprob: -6.1953444480896
    8. 'm' → logprob: -6.5703444480896
    9. ' ' → logprob: -6.5703444480896
    10. ' _' → logprob: -6.6953444480896

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020556485280394554
    2. 'in' → logprob: -3.8955564498901367
    3. ' ' → logprob: -11.520556449890137
    4. 'range' → logprob: -13.395556449890137
    5. '  ' → logprob: -13.895556449890137
    6. '   ' → logprob: -14.770556449890137
    7. ' i' → logprob: -15.270556449890137
    8. ',' → logprob: -15.395556449890137
    9. '<|end|>' → logprob: -15.395556449890137
    10. '	in' → logprob: -15.895556449890137

Token 149: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975141443312168
    2. ' range' → logprob: -3.5297513008117676
    3. '(range' → logprob: -15.154751777648926
    4. '	range' → logprob: -15.154751777648926
    5. 'D' → logprob: -15.654751777648926
    6. '   ' → logprob: -16.15475082397461
    7. 'rang' → logprob: -16.40475082397461
    8. ' ' → logprob: -16.65475082397461
    9. ' D' → logprob: -16.90475082397461
    10. '  ' → logprob: -17.77975082397461

Token 150: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.049988240003585815
    2. '(min' → logprob: -3.049988269805908
    3. 'K' → logprob: -7.299988269805908
    4. 'min' → logprob: -7.549988269805908
    5. '(' → logprob: -8.67498779296875
    6. '(k' → logprob: -11.17498779296875
    7. '(
' → logprob: -11.67498779296875
    8. ' min' → logprob: -13.29998779296875
    9. '(M' → logprob: -14.54998779296875
    10. ' K' → logprob: -14.79998779296875

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005240394733846188
    2. '):
' → logprob: -5.255240440368652
    3. '):
' → logprob: -13.005240440368652
    4. ' ):' → logprob: -13.005240440368652
    5. ':' → logprob: -13.505240440368652
    6. '}:' → logprob: -15.255240440368652
    7. ')' → logprob: -15.880240440368652
    8. '():' → logprob: -16.380239486694336
    9. '>:' → logprob: -16.505239486694336
    10. ']:' → logprob: -16.755239486694336

Token 152: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16061078011989594
    2. '   ' → logprob: -2.1606106758117676
    3. ' print' → logprob: -3.4106106758117676
    4. ' if' → logprob: -9.535611152648926
    5. 'if' → logprob: -10.910611152648926
    6. '	print' → logprob: -12.035611152648926
    7. '```' → logprob: -13.160611152648926
    8. '
' → logprob: -13.785611152648926
    9. '.print' → logprob: -15.160611152648926
    10. '    
' → logprob: -15.160611152648926

Token 153: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.019525913521647453
    2. ' print' → logprob: -4.01952600479126
    3. '   ' → logprob: -7.01952600479126
    4. 'if' → logprob: -7.89452600479126
    5. ' if' → logprob: -9.144525527954102
    6. '	print' → logprob: -14.644525527954102
    7. '```' → logprob: -14.644525527954102
    8. ' ' → logprob: -16.3945255279541
    9. '
' → logprob: -16.3945255279541
    10. 'try' → logprob: -16.7695255279541

Token 154: '(int' (ID: 2742)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -3.583550642360933e-05
    2. '(' → logprob: -10.625036239624023
    3. 'D' → logprob: -11.375036239624023
    4. '(
' → logprob: -16.875036239624023
    5. ' (' → logprob: -17.125036239624023
    6. ' D' → logprob: -18.125036239624023
    7. '(d' → logprob: -19.000036239624023
    8. '((' → logprob: -19.250036239624023
    9. '(int' → logprob: -19.750036239624023
    10. '()' → logprob: -20.250036239624023

Token 155: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0010471008718013763
    2. '(' → logprob: -6.876047134399414
    3. ')' → logprob: -11.876047134399414
    4. 'D' → logprob: -12.251047134399414
    5. ' (' → logprob: -14.001047134399414
    6. ' D' → logprob: -14.251047134399414
    7. '(
' → logprob: -14.376047134399414
    8. ')(' → logprob: -15.001047134399414
    9. '((' → logprob: -17.001047134399414
    10. '	D' → logprob: -17.126047134399414

Token 156: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.25000286102295
    3. ' [' → logprob: -15.00000286102295
    4. '[
' → logprob: -15.50000286102295
    5. ')' → logprob: -15.75000286102295
    6. ')[' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.000001907348633
    8. ')i' → logprob: -18.000001907348633
    9. '[I' → logprob: -18.375001907348633
    10. '```' → logprob: -19.125001907348633

Token 157: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3845389187335968
    2. ']))' → logprob: -1.2595388889312744
    3. '])' → logprob: -3.6345388889312744
    4. ')' → logprob: -5.1345391273498535
    5. ')])' → logprob: -6.1345391273498535
    6. ')))' → logprob: -7.5095391273498535
    7. ')]' → logprob: -8.634538650512695
    8. '),' → logprob: -9.009538650512695
    9. ']' → logprob: -9.634538650512695
    10. ' ))' → logprob: -10.384538650512695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 155
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 75
Tokens correctement prédits (top 10): 138
Précision stricte (1ère position): 47.74%
Précision adaptée (1ère position): 48.39%
Précision (top 10): 89.03%
================================================================================
