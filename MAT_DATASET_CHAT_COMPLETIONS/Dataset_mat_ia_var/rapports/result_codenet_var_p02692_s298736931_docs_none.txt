================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

N,A,B,C=map(int,input().split())
S=[input().strip() for i in range(N)]

ANS=[]
for i in range(N):
    s=S[i]
    if s=="AB":
        if A==B==1 and i<N-1:
            if S[i+1]=="AC":
                A+=1
                B-=1
                ANS.append("A")
            else:
                B+=1
                A-=1
                ANS.append("B")
        else:
            if min(A,B)==A:
                A+=1
                B-=1
                ANS.append("A")
            else:
                B+=1
                A-=1
                ANS.append("B")
    elif s=="BC":
        if B==C==1 and i<N-1:
            if S[i+1]=="AC":
                C+=1
                B-=1
                ANS.append("C")
            else:
                B+=1
                C-=1
                ANS.append("B")
        else:
            if min(B,C)==B:
                B+=1
                C-=1
                ANS.append("B")
            else:
                C+=1
                B-=1
                ANS.append("C")
    else:
        if A==C==1 and i<N-1:
            if S[i+1]=="AB":
                A+=1
                C-=1
                ANS.append("A")
            else:
                C+=1
                A-=1
                ANS.append("C")
        else:
            if min(A,C)==A:
                A+=1
                C-=1
                ANS.append("A")
            else:
                C+=1
                A-=1
                ANS.append("C")
    if min(A,B,C)<0:
        print("No")
        sys.exit()
print("Yes")
print("\n".join(ANS))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5936316251754761
    2. '.' → logprob: -0.9686316251754761
    3. 'import' → logprob: -3.8436317443847656
    4. 'newline' → logprob: -4.218631744384766
    5. '\' → logprob: -4.718631744384766
    6. '<|end|>' → logprob: -4.968631744384766
    7. '```' → logprob: -5.343631744384766
    8. '
' → logprob: -5.718631744384766
    9. '<|end|>' → logprob: -6.468631744384766
    10. '' → logprob: -6.468631744384766

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005573217757046223
    2. '.' → logprob: -5.255573272705078
    3. ' (' → logprob: -9.380573272705078
    4. '(
' → logprob: -9.505573272705078
    5. ')' → logprob: -9.880573272705078
    6. '()' → logprob: -10.130573272705078
    7. '[' → logprob: -11.130573272705078
    8. '('' → logprob: -11.255573272705078
    9. '=' → logprob: -11.755573272705078
    10. ' ' → logprob: -11.755573272705078

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16052936017513275
    2. 'sys' → logprob: -1.910529375076294
    3. ' input' → logprob: -8.785529136657715
    4. 'input' → logprob: -8.910529136657715
    5. '	sys' → logprob: -11.910529136657715
    6. '=sys' → logprob: -12.035529136657715
    7. '(sys' → logprob: -12.910529136657715
    8. ' ' → logprob: -13.535529136657715
    9. ' system' → logprob: -15.035529136657715
    10. '_sys' → logprob: -15.660529136657715

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0014295210130512714
    2. ' .' → logprob: -7.376429557800293
    3. '.stdin' → logprob: -7.626429557800293
    4. '.import' → logprob: -9.251429557800293
    5. '.readline' → logprob: -9.501429557800293
    6. '.
' → logprob: -10.126429557800293
    7. '.argv' → logprob: -10.376429557800293
    8. '.stdout' → logprob: -11.376429557800293
    9. '.input' → logprob: -11.376429557800293
    10. '.exit' → logprob: -11.876429557800293

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3011370599269867
    2. '.' → logprob: -1.426137089729309
    3. '.read' → logprob: -3.9261369705200195
    4. '.readlines' → logprob: -10.42613697052002
    5. '```' → logprob: -11.42613697052002
    6. '.Read' → logprob: -11.92613697052002
    7. '.buffer' → logprob: -12.67613697052002
    8. 'read' → logprob: -12.92613697052002
    9. '.write' → logprob: -13.05113697052002
    10. ' .' → logprob: -13.67613697052002

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5026307702064514
    2. '(' → logprob: -1.0026307106018066
    3. '(
' → logprob: -4.377630710601807
    4. '
' → logprob: -5.127630710601807
    5. '()
' → logprob: -5.127630710601807
    6. '\n' → logprob: -6.627630710601807
    7. '()

' → logprob: -7.252630710601807
    8. '(

' → logprob: -7.752630710601807
    9. '```' → logprob: -8.627631187438965
    10. '()\' → logprob: -8.752631187438965

Token 9: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31658273935317993
    2. '(' → logprob: -1.3165826797485352
    3. 'def' → logprob: -6.566582679748535
    4. '(n' → logprob: -7.316582679748535
    5. '(
' → logprob: -8.441582679748535
    6. '().' → logprob: -8.566582679748535
    7. 'for' → logprob: -8.691582679748535
    8. '()
' → logprob: -8.941582679748535
    9. '()\' → logprob: -9.441582679748535
    10. '#' → logprob: -9.941582679748535

Token 10: ',A' (ID: 59196)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8451301455497742
    2. ')' → logprob: -1.595130205154419
    3. ' =' → logprob: -1.845130205154419
    4. '=' → logprob: -1.845130205154419
    5. '[' → logprob: -4.47012996673584
    6. '>' → logprob: -4.97012996673584
    7. ' )' → logprob: -5.09512996673584
    8. '.' → logprob: -5.34512996673584
    9. '<|end|>' → logprob: -5.59512996673584
    10. '+' → logprob: -5.97012996673584

Token 11: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6521074175834656
    2. ' =' → logprob: -1.2771074771881104
    3. '=' → logprob: -1.6521074771881104
    4. ' ,' → logprob: -5.277107238769531
    5. ' ' → logprob: -6.152107238769531
    6. '[' → logprob: -7.402107238769531
    7. ')' → logprob: -8.902107238769531
    8. '_' → logprob: -9.277107238769531
    9. ',N' → logprob: -9.527107238769531
    10. ',B' → logprob: -9.777107238769531

Token 12: ',C' (ID: 26924)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07945819944143295
    2. ' =' → logprob: -2.579458236694336
    3. ',' → logprob: -7.579458236694336
    4. '=input' → logprob: -10.704458236694336
    5. '=int' → logprob: -10.954458236694336
    6. ' ' → logprob: -12.204458236694336
    7. '=

' → logprob: -12.329458236694336
    8. ' =
' → logprob: -13.204458236694336
    9. '=
' → logprob: -13.329458236694336
    10. ')' → logprob: -13.704458236694336

Token 13: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6220047473907471
    2. ' =' → logprob: -0.9970047473907471
    3. ',' → logprob: -2.372004747390747
    4. ',D' → logprob: -7.247004508972168
    5. ',d' → logprob: -10.497004508972168
    6. ' ,' → logprob: -10.997004508972168
    7. ' ' → logprob: -11.372004508972168
    8. ',E' → logprob: -11.372004508972168
    9. '=input' → logprob: -11.497004508972168
    10. ' =
' → logprob: -11.622004508972168

Token 14: 'map' (ID: 3726)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4750169515609741
    2. 'map' → logprob: -0.9750169515609741
    3. ' list' → logprob: -7.600017070770264
    4. 'list' → logprob: -8.475016593933105
    5. '0' → logprob: -8.975016593933105
    6. 'input' → logprob: -10.350016593933105
    7. ' input' → logprob: -10.600016593933105
    8. ' ' → logprob: -10.600016593933105
    9. '[' → logprob: -11.975016593933105
    10. ' [' → logprob: -12.225016593933105

Token 15: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3461832106113434
    2. '(int' → logprob: -1.346183180809021
    3. '(input' → logprob: -4.2211833000183105
    4. '(lambda' → logprob: -4.3461833000183105
    5. '(str' → logprob: -6.0961833000183105
    6. '(len' → logprob: -7.3461833000183105
    7. '(list' → logprob: -8.221182823181152
    8. '<|end|>' → logprob: -8.596182823181152
    9. '(
' → logprob: -8.721182823181152
    10. '(eval' → logprob: -8.846182823181152

Token 16: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.415086567401886
    2. ',' → logprob: -1.1650865077972412
    3. '(input' → logprob: -3.915086507797241
    4. '(' → logprob: -5.29008674621582
    5. ',int' → logprob: -6.79008674621582
    6. '(sys' → logprob: -6.91508674621582
    7. 'input' → logprob: -8.29008674621582
    8. ')' → logprob: -8.66508674621582
    9. '(','' → logprob: -10.29008674621582
    10. ',user' → logprob: -10.29008674621582

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.19756293296813965
    2. '())' → logprob: -1.9475629329681396
    3. '()' → logprob: -3.3225629329681396
    4. '(' → logprob: -8.947563171386719
    5. '()))' → logprob: -9.197563171386719
    6. '());' → logprob: -9.447563171386719
    7. ' ())' → logprob: -10.072563171386719
    8. '('' → logprob: -10.197563171386719
    9. '()>' → logprob: -10.322563171386719
    10. ')' → logprob: -10.322563171386719

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.029951108619570732
    2. 'strip' → logprob: -3.5299510955810547
    3. 'rstrip' → logprob: -8.529951095581055
    4. ' split' → logprob: -13.154951095581055
    5. ')' → logprob: -14.404951095581055
    6. '(split' → logprob: -14.904951095581055
    7. ' strip' → logprob: -15.779951095581055
    8. 'read' → logprob: -15.904951095581055
    9. '_split' → logprob: -17.404951095581055
    10. 'rs' → logprob: -18.279951095581055

Token 19: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024037064576987177
    2. '))' → logprob: -9.375240325927734
    3. '())' → logprob: -9.375240325927734
    4. '(' → logprob: -10.375240325927734
    5. '()' → logprob: -11.250240325927734
    6. '),' → logprob: -11.500240325927734
    7. '`)' → logprob: -12.000240325927734
    8. ')`' → logprob: -13.375240325927734
    9. ',' → logprob: -13.750240325927734
    10. ')))' → logprob: -14.000240325927734

Token 20: 'S' (ID: 50)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.9680608510971069
    2. 'l' → logprob: -2.2180609703063965
    3. 'd' → logprob: -2.3430609703063965
    4. 'length' → logprob: -2.3430609703063965
    5. 'lst' → logprob: -2.7180609703063965
    6. 'L' → logprob: -2.9680609703063965
    7. 'dp' → logprob: -3.5930609703063965
    8. 'a' → logprob: -3.8430609703063965
    9. 'sticks' → logprob: -4.2180609703063965
    10. 'nums' → logprob: -4.3430609703063965

Token 21: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015592016279697418
    2. ' =' → logprob: -4.265592098236084
    3. '=input' → logprob: -6.765592098236084
    4. '=list' → logprob: -8.515591621398926
    5. '=int' → logprob: -10.515591621398926
    6. '.' → logprob: -11.265591621398926
    7. '[:]' → logprob: -12.140591621398926
    8. '=[]' → logprob: -12.390591621398926
    9. '[' → logprob: -12.390591621398926
    10. '=len' → logprob: -12.890591621398926

Token 22: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06350186467170715
    2. 'int' → logprob: -2.8135018348693848
    3. 'list' → logprob: -6.813501834869385
    4. 'str' → logprob: -8.063502311706543
    5. ' input' → logprob: -9.188502311706543
    6. '(input' → logprob: -11.813502311706543
    7. '0' → logprob: -13.188502311706543
    8. '(int' → logprob: -13.188502311706543
    9. ' int' → logprob: -14.063502311706543
    10. '1' → logprob: -14.188502311706543

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0016146040288731456
    2. '()' → logprob: -6.501614570617676
    3. '())' → logprob: -9.251614570617676
    4. '()]' → logprob: -11.126614570617676
    5. '()[' → logprob: -14.376614570617676
    6. ' ().' → logprob: -15.001614570617676
    7. '()].' → logprob: -15.251614570617676
    8. '()-' → logprob: -16.376615524291992
    9. '()<' → logprob: -16.626615524291992
    10. '(' → logprob: -16.626615524291992

Token 24: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.12742431461811066
    2. 'rstrip' → logprob: -2.1274242401123047
    3. 'split' → logprob: -7.627424240112305
    4. 'read' → logprob: -11.752424240112305
    5. ' strip' → logprob: -14.877424240112305
    6. 'rs' → logprob: -15.002424240112305
    7. 'replace' → logprob: -15.252424240112305
    8. 'str' → logprob: -15.752424240112305
    9. '```' → logprob: -16.377424240112305
    10. '.rstrip' → logprob: -17.252424240112305

Token 25: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.10207702219486237
    2. '()' → logprob: -2.352077007293701
    3. '())' → logprob: -6.477077007293701
    4. '(' → logprob: -8.35207748413086
    5. '('' → logprob: -10.35207748413086
    6. ']()' → logprob: -11.22707748413086
    7. '()}' → logprob: -12.35207748413086
    8. '()\' → logprob: -12.47707748413086
    9. '()<' → logprob: -12.60207748413086
    10. '()))' → logprob: -12.60207748413086

Token 26: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16758674383163452
    2. 'for' → logprob: -2.2925868034362793
    3. ' for' → logprob: -3.4175868034362793
    4. ')' → logprob: -3.9175868034362793
    5. ']' → logprob: -8.417586326599121
    6. ' ' → logprob: -9.417586326599121
    7. '()]' → logprob: -9.542586326599121
    8. '(' → logprob: -10.042586326599121
    9. '	for' → logprob: -10.167586326599121
    10. ')]' → logprob: -10.292586326599121

Token 27: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.35718071460723877
    2. '_' → logprob: -1.2321807146072388
    3. ' _' → logprob: -4.857180595397949
    4. 'range' → logprob: -7.732180595397949
    5. '_range' → logprob: -7.982180595397949
    6. ' ' → logprob: -9.35718059539795
    7. ' in' → logprob: -10.73218059539795
    8. '	range' → logprob: -10.98218059539795
    9. '(range' → logprob: -11.23218059539795
    10. ' i' → logprob: -12.73218059539795

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07001890242099762
    2. 'in' → logprob: -2.695019006729126
    3. ' ' → logprob: -10.195018768310547
    4. 'range' → logprob: -10.570018768310547
    5. '	in' → logprob: -11.195018768310547
    6. ' range' → logprob: -13.695018768310547
    7. '  ' → logprob: -14.195018768310547
    8. '```' → logprob: -14.695018768310547
    9. '_' → logprob: -14.820018768310547
    10. 'In' → logprob: -15.132518768310547

Token 29: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.575941801071167
    2. ' range' → logprob: -0.825941801071167
    3. '	range' → logprob: -13.075942039489746
    4. '(range' → logprob: -15.325942039489746
    5. ' ' → logprob: -16.32594108581543
    6. '_range' → logprob: -17.32594108581543
    7. 'rang' → logprob: -17.82594108581543
    8. '.range' → logprob: -18.57594108581543
    9. 'ran' → logprob: -18.95094108581543
    10. ' xrange' → logprob: -19.20094108581543

Token 30: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0031846018973737955
    2. '(' → logprob: -5.753184795379639
    3. '(n' → logprob: -12.12818431854248
    4. ' (' → logprob: -15.00318431854248
    5. '(len' → logprob: -15.12818431854248
    6. '(
' → logprob: -15.37818431854248
    7. 'N' → logprob: -15.62818431854248
    8. '(int' → logprob: -15.62818431854248
    9. '(A' → logprob: -16.253185272216797
    10. '(

' → logprob: -16.628185272216797

Token 31: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004356179386377335
    2. ')' → logprob: -5.504356384277344
    3. ']' → logprob: -8.629356384277344
    4. '])' → logprob: -9.754356384277344
    5. ')])' → logprob: -10.629356384277344
    6. '])]' → logprob: -11.504356384277344
    7. '）' → logprob: -12.629356384277344
    8. ' )' → logprob: -13.754356384277344
    9. ')],' → logprob: -14.504356384277344
    10. '))' → logprob: -14.754356384277344

Token 32: 'ANS' (ID: 18850)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13024358451366425
    2. '
' → logprob: -2.6302435398101807
    3. 'from' → logprob: -4.75524377822876
    4. 'def' → logprob: -5.00524377822876
    5. 'dist' → logprob: -5.63024377822876
    6. 'm' → logprob: -5.63024377822876
    7. 'DP' → logprob: -5.88024377822876
    8. 'length' → logprob: -6.00524377822876
    9. '<|end|>' → logprob: -6.00524377822876
    10. 'import' → logprob: -6.38024377822876

Token 33: '=[]
' (ID: 63466)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03817988187074661
    2. '=' → logprob: -3.288179874420166
    3. '_' → logprob: -9.663180351257324
    4. '=[]' → logprob: -9.788180351257324
    5. ' ' → logprob: -12.663180351257324
    6. ' =[' → logprob: -12.913180351257324
    7. '=int' → logprob: -13.038180351257324
    8. '_=' → logprob: -13.038180351257324
    9. '={}' → logprob: -13.663180351257324
    10. 's' → logprob: -13.663180351257324

Token 34: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.056359220296144485
    2. 'def' → logprob: -3.05635929107666
    3. 'dp' → logprob: -5.68135929107666
    4. '(' → logprob: -6.18135929107666
    5. ' for' → logprob: -7.93135929107666
    6. '```' → logprob: -8.05635929107666
    7. 'd' → logprob: -8.43135929107666
    8. 'max' → logprob: -8.55635929107666
    9. ')' → logprob: -8.80635929107666
    10. 'score' → logprob: -8.93135929107666

Token 35: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11310137808322906
    2. 'i' → logprob: -2.2381014823913574
    3. '_' → logprob: -8.8631010055542
    4. ' ' → logprob: -10.2381010055542
    5. ' _' → logprob: -10.4881010055542
    6. '_i' → logprob: -11.2381010055542
    7. ' x' → logprob: -11.3631010055542
    8. ' s' → logprob: -11.7381010055542
    9. ' j' → logprob: -11.8631010055542
    10. '	i' → logprob: -12.2381010055542

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1017111986875534
    2. 'in' → logprob: -2.3517112731933594
    3. ' ' → logprob: -6.601711273193359
    4. 'n' → logprob: -9.22671127319336
    5. '	in' → logprob: -10.85171127319336
    6. ',' → logprob: -12.10171127319336
    7. '<|end|>' → logprob: -12.35171127319336
    8. 'range' → logprob: -12.85171127319336
    9. 's' → logprob: -12.85171127319336
    10. '  ' → logprob: -13.10171127319336

Token 37: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519354820251465
    2. ' range' → logprob: -1.5019354820251465
    3. '	range' → logprob: -13.126935958862305
    4. ' ' → logprob: -13.751935958862305
    5. '(range' → logprob: -14.001935958862305
    6. 'S' → logprob: -14.001935958862305
    7. ' S' → logprob: -14.626935958862305
    8. 'ran' → logprob: -15.376935958862305
    9. ' xrange' → logprob: -15.751935958862305
    10. 'r' → logprob: -16.001935958862305

Token 38: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.31334248185157776
    2. '(' → logprob: -1.3133424520492554
    3. '(len' → logprob: -10.188342094421387
    4. ' (' → logprob: -11.313342094421387
    5. '(n' → logprob: -11.688342094421387
    6. '(
' → logprob: -11.938342094421387
    7. '(range' → logprob: -12.313342094421387
    8. '(A' → logprob: -12.938342094421387
    9. ' ' → logprob: -13.063342094421387
    10. 'N' → logprob: -13.813342094421387

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008570837788283825
    2. ')' → logprob: -5.008570671081543
    3. '+' → logprob: -6.883570671081543
    4. ' ):' → logprob: -7.383570671081543
    5. '):
' → logprob: -8.633570671081543
    6. '-' → logprob: -11.133570671081543
    7. ':' → logprob: -12.258570671081543
    8. ' )' → logprob: -12.508570671081543
    9. '):
' → logprob: -14.008570671081543
    10. ' ' → logprob: -14.133570671081543

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2584756314754486
    2. ' if' → logprob: -2.2584755420684814
    3. '    ' → logprob: -3.1334755420684814
    4. ' ' → logprob: -3.1334755420684814
    5. ' for' → logprob: -3.7584755420684814
    6. '<|end|>' → logprob: -5.6334757804870605
    7. 'if' → logprob: -6.5084757804870605
    8. 'for' → logprob: -7.1334757804870605
    9. ' i' → logprob: -7.1334757804870605
    10. '    
' → logprob: -7.1334757804870605

Token 41: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6956955790519714
    2. ' if' → logprob: -1.3206956386566162
    3. 'for' → logprob: -2.070695638656616
    4. ' for' → logprob: -2.820695638656616
    5. '   ' → logprob: -3.445695638656616
    6. ' ' → logprob: -5.570695400238037
    7. 'ANS' → logprob: -6.320695400238037
    8. 'min' → logprob: -6.695695400238037
    9. ' AN' → logprob: -7.070695400238037
    10. 't' → logprob: -7.320695400238037

Token 42: '=S' (ID: 165586)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37677744030952454
    2. '=' → logprob: -1.2517774105072021
    3. 'len' → logprob: -4.251777648925781
    4. '=len' → logprob: -5.501777648925781
    5. ' ' → logprob: -5.626777648925781
    6. 's' → logprob: -6.751777648925781
    7. '_len' → logprob: -6.751777648925781
    8. '=S' → logprob: -7.126777648925781
    9. '=s' → logprob: -7.876777648925781
    10. '_' → logprob: -7.876777648925781

Token 43: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005607772618532181
    2. '[' → logprob: -7.500560760498047
    3. '[I' → logprob: -12.500560760498047
    4. '[s' → logprob: -13.500560760498047
    5. '[A' → logprob: -14.875560760498047
    6. ' [' → logprob: -14.875560760498047
    7. '[N' → logprob: -15.375560760498047
    8. '[j' → logprob: -15.500560760498047
    9. 'i' → logprob: -15.625560760498047
    10. '\[' → logprob: -15.875560760498047

Token 44: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2411508858203888
    2. '])' → logprob: -1.8661508560180664
    3. ']
' → logprob: -3.6161508560180664
    4. '][' → logprob: -3.9911508560180664
    5. '])
' → logprob: -4.991150856018066
    6. ')' → logprob: -5.616150856018066
    7. '[' → logprob: -6.116150856018066
    8. ')
' → logprob: -8.116150856018066
    9. ']
' → logprob: -8.116150856018066
    10. ')]' → logprob: -9.366150856018066

Token 45: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.768650233745575
    2. ' ' → logprob: -1.2686502933502197
    3. '   ' → logprob: -2.5186502933502197
    4. 'if' → logprob: -2.6436502933502197
    5. ' for' → logprob: -3.1436502933502197
    6. 'for' → logprob: -3.2686502933502197
    7. '    ' → logprob: -4.768650054931641
    8. '<|end|>' → logprob: -5.518650054931641
    9. '  ' → logprob: -5.893650054931641
    10. '[' → logprob: -6.643650054931641

Token 46: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32883140444755554
    2. 'if' (adapté à ' if') → logprob: -1.578831434249878
    3. ' for' → logprob: -3.453831434249878
    4. 'for' → logprob: -3.953831434249878
    5. ' ' → logprob: -4.703831195831299
    6. ' length' → logprob: -6.078831195831299
    7. 'length' → logprob: -6.453831195831299
    8. ' l' → logprob: -6.453831195831299
    9. 'l' → logprob: -6.703831195831299
    10. ' i' → logprob: -7.078831195831299

Token 47: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5446966290473938
    2. ' len' → logprob: -2.419696569442749
    3. ' '' → logprob: -2.544696569442749
    4. 's' → logprob: -2.669696569442749
    5. ' A' → logprob: -2.669696569442749
    6. ''' → logprob: -3.419696569442749
    7. 'len' → logprob: -3.919696569442749
    8. ' "' → logprob: -3.919696569442749
    9. 'A' → logprob: -4.169696807861328
    10. '"' → logprob: -4.669696807861328

Token 48: '=="' (ID: 24027)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16801361739635468
    2. ' ==' → logprob: -2.293013572692871
    3. '=="' → logprob: -3.668013572692871
    4. '=='' → logprob: -4.168013572692871
    5. ' in' → logprob: -4.918013572692871
    6. 'in' → logprob: -6.293013572692871
    7. '[' → logprob: -6.918013572692871
    8. ' =='' → logprob: -7.543013572692871
    9. '.startswith' → logprob: -7.668013572692871
    10. '!=' → logprob: -7.918013572692871

Token 49: 'AB' (ID: 2912)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05843760445713997
    2. 'a' → logprob: -3.0584375858306885
    3. 'B' → logprob: -5.933437824249268
    4. 'AB' → logprob: -6.183437824249268
    5. '"' → logprob: -7.308437824249268
    6. 'At' → logprob: -7.308437824249268
    7. 'ABC' → logprob: -7.308437824249268
    8. '"A' → logprob: -7.433437824249268
    9. '1' → logprob: -7.808437824249268
    10. 'AA' → logprob: -8.18343734741211

Token 50: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.31532248854637146
    2. '"' → logprob: -1.3153225183486938
    3. 'A' → logprob: -7.690322399139404
    4. '":
' → logprob: -7.940322399139404
    5. 'C' → logprob: -8.190322875976562
    6. ' or' → logprob: -8.565322875976562
    7. ':' → logprob: -8.940322875976562
    8. 'AB' → logprob: -9.190322875976562
    9. '"A' → logprob: -9.315322875976562
    10. '"C' → logprob: -9.815322875976562

Token 51: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1821211576461792
    2. ' or' → logprob: -2.0571212768554688
    3. ':
' → logprob: -4.432121276855469
    4. ' :' → logprob: -4.432121276855469
    5. ' and' → logprob: -5.557121276855469
    6. ' A' → logprob: -6.307121276855469
    7. '   ' → logprob: -6.432121276855469
    8. ' ' → logprob: -6.557121276855469
    9. 'A' → logprob: -6.682121276855469
    10. '       ' → logprob: -6.932121276855469

Token 52: ' if' (ID: 538)
  Prédit: ' AN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' AN' → logprob: -0.4422639012336731
    2. ' A' → logprob: -1.1922638416290283
    3. 'A' → logprob: -4.442264080047607
    4. 'ANS' → logprob: -4.567264080047607
    5. ' AB' → logprob: -5.067264080047607
    6. '   ' → logprob: -5.567264080047607
    7. 'AN' → logprob: -5.567264080047607
    8. ' ' → logprob: -5.692264080047607
    9. ' if' → logprob: -5.942264080047607
    10. ' print' → logprob: -6.067264080047607

Token 53: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.04399556294083595
    2. 'A' → logprob: -3.5439956188201904
    3. ' B' → logprob: -4.668995380401611
    4. ' C' → logprob: -6.168995380401611
    5. ' ' → logprob: -6.793995380401611
    6. 'B' → logprob: -7.293995380401611
    7. 'C' → logprob: -8.04399585723877
    8. ' len' → logprob: -8.29399585723877
    9. 'len' → logprob: -9.54399585723877
    10. '  ' → logprob: -9.79399585723877

Token 54: '==' (ID: 560)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.051842156797647476
    2. ' >' → logprob: -3.051842212677002
    3. '>=' → logprob: -7.051842212677002
    4. '>B' → logprob: -7.051842212677002
    5. '==' → logprob: -7.551842212677002
    6. '<' → logprob: -7.551842212677002
    7. '+' → logprob: -8.801841735839844
    8. ' and' → logprob: -9.426841735839844
    9. '<=' → logprob: -10.176841735839844
    10. ' <' → logprob: -10.426841735839844

Token 55: 'B' (ID: 33)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14564137160778046
    2. ' ' → logprob: -2.020641326904297
    3. ' B' → logprob: -6.645641326904297
    4. 'B' → logprob: -7.020641326904297
    5. '1' → logprob: -7.645641326904297
    6. '>' → logprob: -8.770641326904297
    7. '-' → logprob: -9.520641326904297
    8. '>B' → logprob: -11.020641326904297
    9. '">' → logprob: -12.083141326904297
    10. '2' → logprob: -12.270641326904297

Token 56: '==' (ID: 560)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5608485341072083
    2. ' and' → logprob: -1.0608484745025635
    3. ' >' → logprob: -2.6858484745025635
    4. 'and' → logprob: -4.685848712921143
    5. '0' → logprob: -5.685848712921143
    6. ':' → logprob: -6.810848712921143
    7. ' ' → logprob: -8.185848236083984
    8. '<' → logprob: -8.185848236083984
    9. '==' → logprob: -8.935848236083984
    10. ' or' → logprob: -9.310848236083984

Token 57: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021242721006274223
    2. ' ' → logprob: -4.021242618560791
    3. '1' → logprob: -5.896242618560791
    4. 'C' → logprob: -8.89624309539795
    5. '-' → logprob: -10.02124309539795
    6. '>' → logprob: -10.39624309539795
    7. '2' → logprob: -11.39624309539795
    8. 's' → logprob: -11.39624309539795
    9. '  ' → logprob: -11.52124309539795
    10. '   ' → logprob: -11.77124309539795

Token 58: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01274425070732832
    2. ' and' → logprob: -4.887744426727295
    3. ' :' → logprob: -5.512744426727295
    4. ' or' → logprob: -7.137744426727295
    5. 'and' → logprob: -8.887743949890137
    6. ' ' → logprob: -9.887743949890137
    7. '.' → logprob: -10.262743949890137
    8. ':
' → logprob: -10.387743949890137
    9. ',' → logprob: -10.887743949890137
    10. ':return' → logprob: -12.387743949890137

Token 59: ' i' (ID: 575)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -1.1009845733642578
    2. ' N' → logprob: -1.3509845733642578
    3. ' i' → logprob: -1.4759845733642578
    4. ' ' → logprob: -3.475984573364258
    5. ' len' → logprob: -3.475984573364258
    6. 'C' → logprob: -3.600984573364258
    7. ' A' → logprob: -4.100984573364258
    8. ' AN' → logprob: -4.225984573364258
    9. 'N' → logprob: -4.475984573364258
    10. 'len' → logprob: -4.600984573364258

Token 60: '<N' (ID: 60262)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1521957963705063
    2. ' ==' → logprob: -2.027195692062378
    3. '+' → logprob: -5.527195930480957
    4. '!=' → logprob: -6.152195930480957
    5. ' ' → logprob: -6.277195930480957
    6. ' !=' → logprob: -7.527195930480957
    7. '=' → logprob: -8.402195930480957
    8. '<' → logprob: -8.652195930480957
    9. '0' → logprob: -8.902195930480957
    10. '<len' → logprob: -9.402195930480957

Token 61: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001968649885384366
    2. ' -' → logprob: -9.00019645690918
    3. ':' → logprob: -10.50019645690918
    4. '1' → logprob: -10.75019645690918
    5. ' ' → logprob: -12.31269645690918
    6. '```' → logprob: -12.75019645690918
    7. ' and' → logprob: -13.00019645690918
    8. ':
' → logprob: -13.43769645690918
    9. '2' → logprob: -13.62519645690918
    10. 'and' → logprob: -13.81269645690918

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005093070212751627
    2. ' ' → logprob: -8.500509262084961
    3. '2' → logprob: -8.625509262084961
    4. '-' → logprob: -9.375509262084961
    5. '3' → logprob: -12.000509262084961
    6. '１' → logprob: -12.188009262084961
    7. '```' → logprob: -12.750509262084961
    8. '4' → logprob: -12.875509262084961
    9. '
' → logprob: -13.000509262084961
    10. '5' → logprob: -13.063009262084961

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09693096578121185
    2. ' and' → logprob: -2.471930980682373
    3. ' :' → logprob: -5.346930980682373
    4. 'and' → logprob: -5.846930980682373
    5. ' ' → logprob: -8.721930503845215
    6. ':
' → logprob: -9.596930503845215
    7. ',' → logprob: -10.471930503845215
    8. ':return' → logprob: -11.096930503845215
    9. '.' → logprob: -11.971930503845215
    10. '：' → logprob: -12.471930503845215

Token 64: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3899378776550293
    2. '   ' → logprob: -1.5149378776550293
    3. ' and' → logprob: -2.7649378776550293
    4. ' continue' → logprob: -4.889937877655029
    5. '       ' → logprob: -5.139937877655029
    6. ':
' → logprob: -5.139937877655029
    7. 'continue' → logprob: -5.264937877655029
    8. ' ' → logprob: -5.764937877655029
    9. ' :' → logprob: -5.889937877655029
    10. ',' → logprob: -6.014937877655029

Token 65: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6048282384872437
    2. ' print' → logprob: -2.354828357696533
    3. ' continue' → logprob: -2.354828357696533
    4. 'if' (adapté à ' if') → logprob: -2.479828357696533
    5. ' AN' → logprob: -2.729828357696533
    6. 'print' → logprob: -2.979828357696533
    7. 'ANS' → logprob: -3.604828357696533
    8. 'continue' → logprob: -3.854828357696533
    9. '   ' → logprob: -4.729828357696533
    10. ' ' → logprob: -6.479828357696533

Token 66: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.1123104840517044
    2. 'S' → logprob: -2.3623104095458984
    3. ' ' → logprob: -5.487310409545898
    4. ' s' → logprob: -5.987310409545898
    5. ' A' → logprob: -6.487310409545898
    6. ' C' → logprob: -6.862310409545898
    7. 's' → logprob: -6.862310409545898
    8. '"S' → logprob: -8.112310409545898
    9. ' N' → logprob: -8.237310409545898
    10. ' B' → logprob: -8.237310409545898

Token 67: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001037815964082256
    2. '[' → logprob: -9.250103950500488
    3. ' [' → logprob: -12.875103950500488
    4. '[I' → logprob: -13.250103950500488
    5. '[N' → logprob: -13.375103950500488
    6. '[j' → logprob: -14.625103950500488
    7. '[min' → logprob: -15.125103950500488
    8. '[next' → logprob: -15.500103950500488
    9. '```' → logprob: -16.000102996826172
    10. '[n' → logprob: -16.500102996826172

Token 68: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00038682064041495323
    2. '+i' → logprob: -8.625387191772461
    3. ']' → logprob: -9.875387191772461
    4. ' +' → logprob: -10.000387191772461
    5. '[i' → logprob: -10.125387191772461
    6. ']==' → logprob: -10.875387191772461
    7. '+"]' → logprob: -11.000387191772461
    8. '+]' → logprob: -12.250387191772461
    9. '-' → logprob: -12.375387191772461
    10. ']+' → logprob: -12.625387191772461

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023977462842594832
    2. ' ' → logprob: -8.750239372253418
    3. '2' → logprob: -10.875239372253418
    4. '+' → logprob: -11.125239372253418
    5. '```' → logprob: -11.625239372253418
    6. 'i' → logprob: -11.875239372253418
    7. '<|end|>' → logprob: -12.437739372253418
    8. '`' → logprob: -12.750239372253418
    9. '[' → logprob: -12.812739372253418
    10. '   ' → logprob: -12.875239372253418

Token 70: ']=="' (ID: 164578)
  Prédit: '=="'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=="' → logprob: -0.31447529792785645
    2. ']=="' → logprob: -1.5644752979278564
    3. ']' → logprob: -3.8144752979278564
    4. ' in' → logprob: -5.189475059509277
    5. 'in' → logprob: -5.189475059509277
    6. '!="' → logprob: -5.189475059509277
    7. '==' → logprob: -5.314475059509277
    8. ']=='' → logprob: -5.439475059509277
    9. ']==' → logprob: -5.439475059509277
    10. '[' → logprob: -5.564475059509277

Token 71: 'AC' (ID: 2436)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.28689563274383545
    2. 'BC' → logprob: -2.536895751953125
    3. 'AC' → logprob: -2.661895751953125
    4. ' AB' → logprob: -3.161895751953125
    5. '"' → logprob: -3.911895751953125
    6. 'BA' → logprob: -4.661895751953125
    7. ' BC' → logprob: -4.661895751953125
    8. ' AC' → logprob: -5.661895751953125
    9. 'C' → logprob: -5.786895751953125
    10. 'B' → logprob: -6.036895751953125

Token 72: '":
' (ID: 9213)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6332793831825256
    2. '":' → logprob: -0.7582793831825256
    3. '":
' → logprob: -7.883279323577881
    4. ' or' → logprob: -8.758279800415039
    5. '">' → logprob: -9.508279800415039
    6. ' "' → logprob: -11.008279800415039
    7. '":
' → logprob: -11.133279800415039
    8. ':' → logprob: -11.508279800415039
    9. '"]:' → logprob: -12.008279800415039
    10. '"):' → logprob: -12.133279800415039

Token 73: '               ' (ID: 506)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3297383785247803
    2. ':' → logprob: -1.8297383785247803
    3. ' and' → logprob: -2.9547383785247803
    4. '               ' → logprob: -3.3297383785247803
    5. ':
' → logprob: -3.5797383785247803
    6. 'and' → logprob: -6.704738616943359
    7. '           ' → logprob: -6.829738616943359
    8. '              ' → logprob: -7.579738616943359
    9. 'or' → logprob: -7.954738616943359
    10. ' ' → logprob: -8.45473861694336

Token 74: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.24655471742153168
    2. 'C' → logprob: -2.6215546131134033
    3. 'B' → logprob: -2.7465546131134033
    4. ' A' → logprob: -2.9965546131134033
    5. 'ANS' → logprob: -4.496554851531982
    6. 'AN' → logprob: -5.246554851531982
    7. '                   ' → logprob: -5.746554851531982
    8. ' C' → logprob: -5.746554851531982
    9. ' AN' → logprob: -6.121554851531982
    10. ' B' → logprob: -6.121554851531982

Token 75: '+=' (ID: 18287)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7632212042808533
    2. '+=' → logprob: -1.513221263885498
    3. '-=' → logprob: -1.638221263885498
    4. ' -=' → logprob: -2.888221263885498
    5. ' +=' → logprob: -3.388221263885498
    6. '-' → logprob: -4.763221263885498
    7. '>' → logprob: -4.888221263885498
    8. ' =' → logprob: -5.013221263885498
    9. ' >' → logprob: -6.263221263885498
    10. '==' → logprob: -6.763221263885498

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004570630379021168
    2. '-' → logprob: -5.629570484161377
    3. '2' → logprob: -7.754570484161377
    4. '0' → logprob: -8.254570960998535
    5. ' ' → logprob: -9.004570960998535
    6. '10' → logprob: -9.629570960998535
    7. 'C' → logprob: -10.504570960998535
    8. '3' → logprob: -11.379570960998535
    9. 'B' → logprob: -11.379570960998535
    10. '100' → logprob: -11.879570960998535

Token 77: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.829301655292511
    2. '               ' → logprob: -1.3293015956878662
    3. '
' → logprob: -1.9543015956878662
    4. 'else' → logprob: -2.829301595687866
    5. '       ' → logprob: -3.579301595687866
    6. 'elif' → logprob: -3.704301595687866
    7. ' else' → logprob: -4.329301834106445
    8. ' elif' → logprob: -4.704301834106445
    9. '<|end|>' → logprob: -4.704301834106445
    10. '-' → logprob: -5.704301834106445

Token 78: '               ' (ID: 506)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.0076818466186523
    2. '               ' → logprob: -1.5076818466186523
    3. '           ' → logprob: -1.6326818466186523
    4. 'elif' → logprob: -2.1326818466186523
    5. ' else' → logprob: -3.5076818466186523
    6. '
' → logprob: -3.7576818466186523
    7. '-' → logprob: -4.132681846618652
    8. ' elif' → logprob: -4.257681846618652
    9. '       ' → logprob: -4.507681846618652
    10. '                   ' → logprob: -6.257681846618652

Token 79: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.37500858306884766
    2. 'C' → logprob: -1.6250085830688477
    3. 'ANS' → logprob: -3.1250085830688477
    4. '-' → logprob: -4.000008583068848
    5. '0' → logprob: -4.000008583068848
    6. '1' → logprob: -4.750008583068848
    7. 'A' → logprob: -4.750008583068848
    8. ' B' → logprob: -5.500008583068848
    9. 'AN' → logprob: -5.625008583068848
    10. ' ' → logprob: -6.125008583068848

Token 80: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.47309690713882446
    2. '-' → logprob: -1.0980968475341797
    3. '+=' → logprob: -3.2230968475341797
    4. ' -=' → logprob: -5.84809684753418
    5. '+' → logprob: -7.72309684753418
    6. '=' → logprob: -9.09809684753418
    7. ' +=' → logprob: -9.34809684753418
    8. '<|end|>' → logprob: -10.34809684753418
    9. ' ' → logprob: -12.22309684753418
    10. ' -' → logprob: -12.22309684753418

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021188464597798884
    2. ' ' → logprob: -8.500211715698242
    3. '0' → logprob: -12.125211715698242
    4. '2' → logprob: -13.125211715698242
    5. '-' → logprob: -14.687711715698242
    6. '<|end|>' → logprob: -16.937711715698242
    7. '１' → logprob: -16.937711715698242
    8. '   ' → logprob: -17.062711715698242
    9. '3' → logprob: -17.125211715698242
    10. '  ' → logprob: -17.312711715698242

Token 82: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7922371625900269
    2. ' else' → logprob: -1.7922371625900269
    3. 'else' → logprob: -2.2922372817993164
    4. 'elif' → logprob: -2.4172372817993164
    5. ' elif' → logprob: -2.5422372817993164
    6. '
' → logprob: -2.9172372817993164
    7. '               ' → logprob: -3.2922372817993164
    8. '       ' → logprob: -5.292237281799316
    9. '<|end|>' → logprob: -5.417237281799316
    10. '            
' → logprob: -5.667237281799316

Token 83: '               ' (ID: 506)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.2115890979766846
    2. ' else' → logprob: -1.3365890979766846
    3. '
' → logprob: -1.9615890979766846
    4. 'elif' → logprob: -2.0865890979766846
    5. ' elif' → logprob: -2.3365890979766846
    6. '           ' → logprob: -3.4615890979766846
    7. ' 
' → logprob: -4.4615888595581055
    8. '\n' → logprob: -4.7115888595581055
    9. '               ' → logprob: -4.7115888595581055
    10. '<|end|>' → logprob: -5.3365888595581055

Token 84: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.00727578392252326
    2. 'C' → logprob: -5.882275581359863
    3. 'AN' (adapté à ' AN') → logprob: -6.382275581359863
    4. 'A' → logprob: -6.757275581359863
    5. 'AB' → logprob: -7.257275581359863
    6. ' AN' → logprob: -7.507275581359863
    7. 'ans' → logprob: -8.757275581359863
    8. 'B' → logprob: -9.507275581359863
    9. 'print' → logprob: -9.882275581359863
    10. ' ' → logprob: -11.757275581359863

Token 85: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.319370302458992e-06
    2. '[S' → logprob: -14.375005722045898
    3. '"S' → logprob: -14.937505722045898
    4. ' S' → logprob: -15.000005722045898
    5. '```' → logprob: -15.062505722045898
    6. 'Ѕ' → logprob: -15.312505722045898
    7. '
' → logprob: -15.437505722045898
    8. 'Ｓ' → logprob: -15.687505722045898
    9. '

' → logprob: -15.750005722045898
    10. 'SS' → logprob: -15.812505722045898

Token 86: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.027334583923220634
    2. 'P' → logprob: -3.902334690093994
    3. '.' → logprob: -5.277334690093994
    4. 'S' → logprob: -6.652334690093994
    5. 'append' → logprob: -9.277334213256836
    6. '+=' → logprob: -9.402334213256836
    7. '+' → logprob: -9.527334213256836
    8. 'PP' → logprob: -10.402334213256836
    9. '+.' → logprob: -10.902334213256836
    10. '```' → logprob: -11.402334213256836

Token 87: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.22974471747875214
    2. '('' → logprob: -2.3547446727752686
    3. '(i' → logprob: -3.1047446727752686
    4. '(' → logprob: -3.1047446727752686
    5. '"' → logprob: -4.104744911193848
    6. ''' → logprob: -6.729744911193848
    7. ' "' → logprob: -7.229744911193848
    8. ''i' → logprob: -7.479744911193848
    9. '"A' → logprob: -7.604744911193848
    10. ' ("' → logprob: -7.854744911193848

Token 88: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06334679573774338
    2. 'AB' → logprob: -3.3133468627929688
    3. 'B' → logprob: -3.8133468627929688
    4. '"A' → logprob: -6.563346862792969
    5. '"' → logprob: -7.438346862792969
    6. 'AC' → logprob: -7.813346862792969
    7. ''A' → logprob: -8.938346862792969
    8. '"B' → logprob: -9.063346862792969
    9. ' A' → logprob: -9.813346862792969
    10. 'BA' → logprob: -10.313346862792969

Token 89: '")
' (ID: 1896)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02080298773944378
    2. '")' → logprob: -4.020802974700928
    3. 'C' → logprob: -6.395802974700928
    4. '\n' → logprob: -7.645802974700928
    5. ' B' → logprob: -8.145803451538086
    6. ' ")' → logprob: -9.270803451538086
    7. ' ' → logprob: -10.895803451538086
    8. '+' → logprob: -11.020803451538086
    9. 'A' → logprob: -11.395803451538086
    10. '')' → logprob: -11.520803451538086

Token 90: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.0938818454742432
    2. 'elif' → logprob: -1.3438818454742432
    3. ' else' → logprob: -1.4688818454742432
    4. ' elif' → logprob: -2.468881845474243
    5. '
' → logprob: -3.218881845474243
    6. '\n' → logprob: -3.843881845474243
    7. ' 
' → logprob: -4.218881607055664
    8. '<|end|>' → logprob: -5.218881607055664
    9. '  
' → logprob: -5.343881607055664
    10. '    
' → logprob: -7.218881607055664

Token 91: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.48711130023002625
    2. ' else' → logprob: -0.9871113300323486
    3. 'elif' → logprob: -4.9871110916137695
    4. ' elif' → logprob: -5.4871110916137695
    5. '       ' → logprob: -7.1121110916137695
    6. '<|end|>' → logprob: -7.2371110916137695
    7. ' ' → logprob: -9.23711109161377
    8. ')' → logprob: -9.36211109161377
    9. '               ' → logprob: -9.48711109161377
    10. '           ' → logprob: -9.98711109161377

Token 92: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9387332201004028
    2. ':' → logprob: -1.0637332201004028
    3. 'if' → logprob: -1.9387332201004028
    4. ' if' → logprob: -3.0637331008911133
    5. '           ' → logprob: -3.8137331008911133
    6. ' ' → logprob: -4.438733100891113
    7. '               ' → logprob: -4.938733100891113
    8. 'B' → logprob: -5.063733100891113
    9. '   ' → logprob: -5.563733100891113
    10. '          ' → logprob: -5.563733100891113

Token 93: '               ' (ID: 506)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.46834203600883484
    2. 'B' → logprob: -1.7183420658111572
    3. ' A' → logprob: -2.3433420658111572
    4. 'A' → logprob: -3.3433420658111572
    5. '               ' → logprob: -3.4683420658111572
    6. ' C' → logprob: -4.343341827392578
    7. 'C' → logprob: -5.468341827392578
    8. '           ' → logprob: -5.843341827392578
    9. ' ' → logprob: -5.843341827392578
    10. ' if' → logprob: -5.968341827392578

Token 94: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.15997669100761414
    2. ' B' → logprob: -2.5349767208099365
    3. 'ANS' → logprob: -3.2849767208099365
    4. 'A' → logprob: -4.034976482391357
    5. ' AN' → logprob: -5.284976482391357
    6. 'AN' → logprob: -5.909976482391357
    7. ' A' → logprob: -6.159976482391357
    8. 'print' → logprob: -6.659976482391357
    9. ' ' → logprob: -7.659976482391357
    10. '               ' → logprob: -8.034976959228516

Token 95: '+=' (ID: 18287)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.12854169309139252
    2. '+=' → logprob: -2.1285417079925537
    3. '-' → logprob: -6.628541469573975
    4. ' -=' → logprob: -8.253541946411133
    5. ' +=' → logprob: -10.878541946411133
    6. '>' → logprob: -12.503541946411133
    7. '=' → logprob: -12.878541946411133
    8. '  ' → logprob: -13.753541946411133
    9. '   ' → logprob: -14.128541946411133
    10. ']+=' → logprob: -14.253541946411133

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003055904060602188
    2. '-' → logprob: -5.878056049346924
    3. ' ' → logprob: -8.378055572509766
    4. '0' → logprob: -11.503055572509766
    5. ' -' → logprob: -11.503055572509766
    6. '   ' → logprob: -14.628055572509766
    7. '  ' → logprob: -15.128055572509766
    8. '2' → logprob: -16.815555572509766
    9. '```' → logprob: -17.128055572509766
    10. ',' → logprob: -17.128055572509766

Token 97: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08062517642974854
    2. '<|end|>' → logprob: -2.705625057220459
    3. '
' → logprob: -5.330625057220459
    4. '              ' → logprob: -5.705625057220459
    5. '                
' → logprob: -7.205625057220459
    6. '           ' → logprob: -7.330625057220459
    7. '<|end|>' → logprob: -8.455625534057617
    8. '                ' → logprob: -8.455625534057617
    9. '       ' → logprob: -8.830625534057617
    10. '               
' → logprob: -9.455625534057617

Token 98: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.010686976835131645
    2. ' A' → logprob: -4.635686874389648
    3. '-' → logprob: -7.010686874389648
    4. '   ' → logprob: -12.135686874389648
    5. '-A' → logprob: -12.260686874389648
    6. '1' → logprob: -12.385686874389648
    7. 'C' → logprob: -12.885686874389648
    8. ' ' → logprob: -13.010686874389648
    9. ' -' → logprob: -13.010686874389648
    10. 'a' → logprob: -13.510686874389648

Token 100: '-=' (ID: 77519)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20155532658100128
    2. '-=' → logprob: -1.7015553712844849
    3. ' -=' → logprob: -8.951555252075195
    4. '<|end|>' → logprob: -11.951555252075195
    5. '--' → logprob: -12.951555252075195
    6. '–' → logprob: -13.826555252075195
    7. ' -' → logprob: -14.076555252075195
    8. '+=' → logprob: -14.326555252075195
    9. ')-' → logprob: -15.826555252075195
    10. '[-' → logprob: -16.076555252075195

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '<|end|>' → logprob: -15.375066757202148
    4. '0' → logprob: -16.87506675720215
    5. '2' → logprob: -17.75006675720215
    6. '<|end|>' → logprob: -19.25006675720215
    7. '   ' → logprob: -19.43756675720215
    8. 'B' → logprob: -19.56256675720215
    9. '```' → logprob: -19.81256675720215
    10. '１' → logprob: -20.12506675720215

Token 102: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013889270834624767
    2. '           ' → logprob: -5.263889312744141
    3. '<|end|>' → logprob: -5.263889312744141
    4. '       ' → logprob: -6.888889312744141
    5. ' ' → logprob: -6.888889312744141
    6. '              ' → logprob: -8.13888931274414
    7. '                
' → logprob: -8.13888931274414
    8. ' 
' → logprob: -8.51388931274414
    9. '  ' → logprob: -9.13888931274414
    10. ')' → logprob: -9.26388931274414

Token 103: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027396293357014656
    2. '           ' → logprob: -4.152396202087402
    3. '       ' → logprob: -5.402396202087402
    4. ')' → logprob: -5.902396202087402
    5. '<|end|>' → logprob: -6.527396202087402
    6. '              ' → logprob: -7.652396202087402
    7. ' ' → logprob: -7.652396202087402
    8. '   ' → logprob: -8.402396202087402
    9. '                
' → logprob: -8.402396202087402
    10. ' 
' → logprob: -9.152396202087402

Token 104: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.0027598219458013773
    2. 'AN' (adapté à ' AN') → logprob: -6.37775993347168
    3. ' AN' → logprob: -6.87775993347168
    4. 'A' → logprob: -11.62775993347168
    5. 'ANSWER' → logprob: -12.00275993347168
    6. ' ' → logprob: -12.50275993347168
    7. 'ans' → logprob: -13.50275993347168
    8. 'AB' → logprob: -13.75275993347168
    9. '   ' → logprob: -13.75275993347168
    10. '"' → logprob: -14.37775993347168

Token 105: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: 0.0
    2. '.append' → logprob: -18.5
    3. ' S' → logprob: -19.125
    4. '[' → logprob: -19.375
    5. 'SL' → logprob: -19.625
    6. '```' → logprob: -19.875
    7. 'SOR' → logprob: -20.25
    8. '[]' → logprob: -20.875
    9. 'SR' → logprob: -21.25
    10. 'Ｓ' → logprob: -21.625

Token 106: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005586316110566258
    2. '.' → logprob: -7.500558853149414
    3. 'append' → logprob: -13.000558853149414
    4. ' .' → logprob: -13.500558853149414
    5. '.extend' → logprob: -13.875558853149414
    6. '.app' → logprob: -15.250558853149414
    7. '.push' → logprob: -15.625558853149414
    8. '.Append' → logprob: -15.625558853149414
    9. '.ap' → logprob: -16.375558853149414
    10. '.add' → logprob: -16.625558853149414

Token 107: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.08188284188508987
    2. '(' → logprob: -2.581882953643799
    3. '("("' → logprob: -5.831882953643799
    4. '('' → logprob: -10.08188247680664
    5. '"' → logprob: -12.70688247680664
    6. '("")' → logprob: -12.83188247680664
    7. '("""' → logprob: -12.95688247680664
    8. '("'' → logprob: -13.20688247680664
    9. '("(' → logprob: -13.83188247680664
    10. '(""' → logprob: -13.95688247680664

Token 108: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004240685608237982
    2. '"B' → logprob: -5.5042405128479
    3. '"' → logprob: -9.254240989685059
    4. 'A' → logprob: -9.879240989685059
    5. ' B' → logprob: -11.629240989685059
    6. '"A' → logprob: -12.629240989685059
    7. ''' → logprob: -13.004240989685059
    8. '	B' → logprob: -15.629240989685059
    9. 'Ｂ' → logprob: -16.129240036010742
    10. '>B' → logprob: -16.254240036010742

Token 109: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.030526159331202507
    2. ')' → logprob: -3.5305261611938477
    3. ')")' → logprob: -7.280526161193848
    4. '")
' → logprob: -9.530526161193848
    5. ')
' → logprob: -12.280526161193848
    6. ' ")' → logprob: -13.030526161193848
    7. ')"' → logprob: -13.280526161193848
    8. '}")' → logprob: -13.530526161193848
    9. '"' → logprob: -13.905526161193848
    10. ')")
' → logprob: -14.155526161193848

Token 110: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.9791213274002075
    2. 'else' (adapté à ' else') → logprob: -1.1041213274002075
    3. '<|end|>' → logprob: -1.4791213274002075
    4. '   ' → logprob: -3.854121208190918
    5. 'elif' → logprob: -4.854121208190918
    6. '
' → logprob: -4.854121208190918
    7. '       ' → logprob: -5.604121208190918
    8. '	else' → logprob: -5.604121208190918
    9. '\n' → logprob: -5.854121208190918
    10. ' ' → logprob: -5.979121208190918

Token 112: ':
' (ID: 734)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37452924251556396
    2. 'if' → logprob: -2.3745293617248535
    3. '        ' → logprob: -2.8745293617248535
    4. '       ' → logprob: -2.9995293617248535
    5. ':' → logprob: -3.2495293617248535
    6. '           ' → logprob: -3.9995293617248535
    7. ' ' → logprob: -3.9995293617248535
    8. '            ' → logprob: -4.6245293617248535
    9. ' continue' → logprob: -5.2495293617248535
    10. '    ' → logprob: -5.4995293617248535

Token 113: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4359857141971588
    2. 'if' → logprob: -1.0609856843948364
    3. '           ' → logprob: -5.435985565185547
    4. '       ' → logprob: -6.310985565185547
    5. 'A' → logprob: -7.810985565185547
    6. ' A' → logprob: -8.560985565185547
    7. '        ' → logprob: -8.810985565185547
    8. '    ' → logprob: -9.685985565185547
    9. '               ' → logprob: -9.935985565185547
    10. '   ' → logprob: -10.185985565185547

Token 114: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25233376026153564
    2. ' if' → logprob: -1.5023337602615356
    3. 'A' → logprob: -8.252333641052246
    4. ' A' → logprob: -10.502333641052246
    5. '           ' → logprob: -10.752333641052246
    6. '   ' → logprob: -10.877333641052246
    7. '       ' → logprob: -10.877333641052246
    8. 'If' → logprob: -10.877333641052246
    9. 'B' → logprob: -11.002333641052246
    10. ' ' → logprob: -12.502333641052246

Token 115: ' min' (ID: 1349)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.05376630648970604
    2. 'A' → logprob: -3.0537662506103516
    3. ' B' → logprob: -5.428766250610352
    4. 'B' → logprob: -8.053766250610352
    5. ' ' → logprob: -8.053766250610352
    6. ' C' → logprob: -9.553766250610352
    7. '   ' → logprob: -10.928766250610352
    8. '  ' → logprob: -11.428766250610352
    9. ' a' → logprob: -11.553766250610352
    10. '	A' → logprob: -11.803766250610352

Token 116: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -5.3954463510308415e-05
    2. '(' → logprob: -10.250054359436035
    3. '((' → logprob: -11.500054359436035
    4. '(a' → logprob: -12.250054359436035
    5. '(
' → logprob: -13.375054359436035
    6. '(B' → logprob: -13.375054359436035
    7. 'A' → logprob: -15.125054359436035
    8. '(C' → logprob: -15.750054359436035
    9. '([' → logprob: -16.25005340576172
    10. '()' → logprob: -17.50005340576172

Token 117: ',B' (ID: 19853)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.43365997076034546
    2. ' >' → logprob: -1.9336600303649902
    3. '>B' → logprob: -2.3086600303649902
    4. ',' → logprob: -2.9336600303649902
    5. ',B' → logprob: -3.8086600303649902
    6. ')>' → logprob: -4.05866003036499
    7. ' ,' → logprob: -5.68366003036499
    8. '==' → logprob: -5.80866003036499
    9. '>A' → logprob: -6.05866003036499
    10. ')' → logprob: -6.80866003036499

Token 118: ')==' (ID: 35269)
  Prédit: ')>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')>' → logprob: -0.6351808905601501
    2. ')' → logprob: -0.7601808905601501
    3. ')==' → logprob: -6.760180950164795
    4. ' )' → logprob: -7.510180950164795
    5. ')>=' → logprob: -7.510180950164795
    6. '>' → logprob: -8.385180473327637
    7. ')!=' → logprob: -10.760180473327637
    8. ')>
' → logprob: -11.010180473327637
    9. ')<=' → logprob: -11.385180473327637
    10. ' >' → logprob: -11.510180473327637

Token 119: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0232770424336195
    2. '0' → logprob: -4.1482768058776855
    3. ' A' → logprob: -5.0232768058776855
    4. '1' → logprob: -8.273277282714844
    5. 'B' → logprob: -8.398277282714844
    6. ' ' → logprob: -9.148277282714844
    7. '=A' → logprob: -11.023277282714844
    8. 'min' → logprob: -11.773277282714844
    9. '	A' → logprob: -12.273277282714844
    10. 'max' → logprob: -12.398277282714844

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14387544989585876
    2. '>' → logprob: -2.3938753604888916
    3. ' >' → logprob: -3.6438753604888916
    4. '==' → logprob: -5.518875598907471
    5. '>:' → logprob: -5.518875598907471
    6. ' <' → logprob: -5.768875598907471
    7. '):' → logprob: -6.643875598907471
    8. ' and' → logprob: -6.893875598907471
    9. '+' → logprob: -7.393875598907471
    10. '<' → logprob: -7.518875598907471

Token 121: '               ' (ID: 506)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5333658456802368
    2. ' A' → logprob: -1.2833658456802368
    3. '           ' → logprob: -2.6583657264709473
    4. '               ' → logprob: -3.1583657264709473
    5. '+' → logprob: -5.158365726470947
    6. ' ' → logprob: -5.283365726470947
    7. 'B' → logprob: -5.658365726470947
    8. 'A' → logprob: -5.908365726470947
    9. '   ' → logprob: -6.658365726470947
    10. ':' → logprob: -7.033365726470947

Token 122: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.6966376900672913
    2. 'A' (adapté à ' A') → logprob: -0.8216376900672913
    3. 'ANS' → logprob: -3.5716376304626465
    4. ' AN' → logprob: -3.8216376304626465
    5. 'AN' → logprob: -4.8216376304626465
    6. 'B' → logprob: -6.6966376304626465
    7. '               ' → logprob: -7.0716376304626465
    8. ' B' → logprob: -7.1966376304626465
    9. '                   ' → logprob: -7.5716376304626465
    10. '   ' → logprob: -7.9466376304626465

Token 123: '+=' (ID: 18287)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.6056123375892639
    2. '+=' → logprob: -1.1056122779846191
    3. '-' → logprob: -2.230612277984619
    4. ' -=' → logprob: -4.480612277984619
    5. ' +=' → logprob: -5.855612277984619
    6. '+' → logprob: -6.480612277984619
    7. '+='' → logprob: -11.105612754821777
    8. '+-' → logprob: -11.230612754821777
    9. ']+=' → logprob: -12.105612754821777
    10. '+=(' → logprob: -12.230612754821777

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.463036435074173e-05
    2. '-' → logprob: -11.250024795532227
    3. ' ' → logprob: -11.375024795532227
    4. '0' → logprob: -16.875024795532227
    5. ' -' → logprob: -16.875024795532227
    6. '+' → logprob: -17.375024795532227
    7. '   ' → logprob: -17.750024795532227
    8. '
' → logprob: -18.250024795532227
    9. '```' → logprob: -18.250024795532227
    10. '１' → logprob: -18.375024795532227

Token 125: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.038057442754507065
    2. ' B' → logprob: -3.288057327270508
    3. ' ' → logprob: -12.413057327270508
    4. 'A' → logprob: -12.538057327270508
    5. '-' → logprob: -12.663057327270508
    6. '"B' → logprob: -13.288057327270508
    7. 'C' → logprob: -14.038057327270508
    8. '1' → logprob: -14.038057327270508
    9. 'b' → logprob: -14.788057327270508
    10. '   ' → logprob: -15.038057327270508

Token 128: '-=' (ID: 77519)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07893704622983932
    2. '-=' → logprob: -2.57893705368042
    3. ' -=' → logprob: -10.328936576843262
    4. ' -' → logprob: -12.578936576843262
    5. '```' → logprob: -12.953936576843262
    6. '<|end|>' → logprob: -13.453936576843262
    7. '-
' → logprob: -14.328936576843262
    8. '-remove' → logprob: -14.453936576843262
    9. '
' → logprob: -14.578936576843262
    10. '   ' → logprob: -14.703936576843262

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '0' → logprob: -18.625036239624023
    4. '１' → logprob: -20.312536239624023
    5. '```' → logprob: -20.625036239624023
    6. ' ' → logprob: -20.875036239624023
    7. '   ' → logprob: -21.062536239624023
    8. '' → logprob: -21.625036239624023
    9. '
' → logprob: -21.687536239624023
    10. '-' → logprob: -21.750036239624023

Token 130: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33841535449028015
    2. '<|end|>' → logprob: -1.7134153842926025
    3. '       ' → logprob: -2.7134153842926025
    4. '           ' → logprob: -3.4634153842926025
    5. '<|end|>' → logprob: -6.588415145874023
    6. ' ' → logprob: -6.838415145874023
    7. ')' → logprob: -7.088415145874023
    8. ' 
' → logprob: -7.213415145874023
    9. '                   ' → logprob: -7.338415145874023
    10. '   ' → logprob: -7.463415145874023

Token 131: '               ' (ID: 506)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.8921783566474915
    2. '<|end|>' → logprob: -1.1421782970428467
    3. '               ' → logprob: -1.6421782970428467
    4. ' ' → logprob: -3.3921782970428467
    5. 'A' → logprob: -4.017178535461426
    6. ' B' → logprob: -4.517178535461426
    7. ' "' → logprob: -5.517178535461426
    8. '           ' → logprob: -5.642178535461426
    9. '       ' → logprob: -6.517178535461426
    10. ')' → logprob: -6.642178535461426

Token 132: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.02416192553937435
    2. ' AN' → logprob: -3.7741618156433105
    3. 'AN' (adapté à ' AN') → logprob: -7.0241618156433105
    4. '"' → logprob: -11.149162292480469
    5. 'ANSWER' → logprob: -12.274162292480469
    6. 'Ans' → logprob: -12.774162292480469
    7. 'ans' → logprob: -13.774162292480469
    8. ' A' → logprob: -14.774162292480469
    9. ' ANSW' → logprob: -14.899162292480469
    10. ''' → logprob: -15.024162292480469

Token 133: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -6.704273118884885e-07
    2. '.append' → logprob: -15.375000953674316
    3. 'ANS' → logprob: -16.25
    4. 'SOR' → logprob: -16.625
    5. 'Ans' → logprob: -16.625
    6. 'N' → logprob: -17.375
    7. 'P' → logprob: -17.375
    8. ' S' → logprob: -17.625
    9. 'SR' → logprob: -17.625
    10. '[' → logprob: -18.125

Token 134: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00038598617538809776
    2. '.' → logprob: -7.875385761260986
    3. ' .' → logprob: -13.500386238098145
    4. '.extend' → logprob: -13.500386238098145
    5. '.Append' → logprob: -13.875386238098145
    6. '.setdefault' → logprob: -14.000386238098145
    7. 'append' → logprob: -14.375386238098145
    8. '.add' → logprob: -15.750386238098145
    9. '.app' → logprob: -15.750386238098145
    10. ').' → logprob: -15.875386238098145

Token 135: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00028266964363865554
    2. '(' → logprob: -8.250282287597656
    3. '('' → logprob: -11.250282287597656
    4. '"' → logprob: -12.250282287597656
    5. '("("' → logprob: -12.625282287597656
    6. '("(' → logprob: -15.750282287597656
    7. '("""' → logprob: -16.250282287597656
    8. ' ("' → logprob: -17.625282287597656
    9. '(""' → logprob: -18.375282287597656
    10. '("'' → logprob: -18.500282287597656

Token 136: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.006897831801325083
    2. '"A' → logprob: -5.006897926330566
    3. ' A' → logprob: -9.381897926330566
    4. '"' → logprob: -9.881897926330566
    5. 'B' → logprob: -10.631897926330566
    6. ''A' → logprob: -11.256897926330566
    7. '"B' → logprob: -12.131897926330566
    8. ' "' → logprob: -13.506897926330566
    9. '	A' → logprob: -14.381897926330566
    10. 'Ａ' → logprob: -14.506897926330566

Token 137: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003274087095633149
    2. '")' → logprob: -5.878273963928223
    3. ')
' → logprob: -7.753273963928223
    4. '')' → logprob: -11.003273963928223
    5. '<|end|>' → logprob: -12.128273963928223
    6. ' )' → logprob: -12.503273963928223
    7. '")
' → logprob: -12.628273963928223
    8. '       ' → logprob: -13.128273963928223
    9. '   ' → logprob: -13.628273963928223
    10. '           ' → logprob: -14.003273963928223

Token 138: '           ' (ID: 352)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.49748334288597107
    2. 'else' → logprob: -1.1224833726882935
    3. '       ' → logprob: -3.122483253479004
    4. '   ' → logprob: -4.622483253479004
    5. 'elif' → logprob: -5.372483253479004
    6. '           ' → logprob: -5.497483253479004
    7. '<|end|>' → logprob: -6.372483253479004
    8. ' elif' → logprob: -6.747483253479004
    9. '	else' → logprob: -7.872483253479004
    10. '```' → logprob: -8.872483253479004

Token 139: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5772681832313538
    2. ' else' → logprob: -0.8272681832313538
    3. '       ' → logprob: -7.077268123626709
    4. '           ' → logprob: -7.702268123626709
    5. '	else' → logprob: -11.202268600463867
    6. 'elif' → logprob: -11.702268600463867
    7. '   ' → logprob: -11.952268600463867
    8. ' elif' → logprob: -13.827268600463867
    9. '               ' → logprob: -14.202268600463867
    10. '
' → logprob: -15.327268600463867

Token 140: ':
' (ID: 734)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.32672595977783203
    2. '               ' → logprob: -1.326725959777832
    3. '<|end|>' → logprob: -4.951725959777832
    4. '           ' → logprob: -6.076725959777832
    5. 'B' → logprob: -6.326725959777832
    6. ' ' → logprob: -7.701725959777832
    7. '            ' → logprob: -8.076725959777832
    8. '                ' → logprob: -8.451725959777832
    9. '              ' → logprob: -8.576725959777832
    10. '(B' → logprob: -8.826725959777832

Token 141: '               ' (ID: 506)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.1613495796918869
    2. '               ' → logprob: -1.9113495349884033
    3. 'B' → logprob: -7.161349773406982
    4. ' ' → logprob: -9.411349296569824
    5. '                ' → logprob: -9.661349296569824
    6. '           ' → logprob: -10.161349296569824
    7. '                   ' → logprob: -10.286349296569824
    8. '   ' → logprob: -10.286349296569824
    9. ' ' → logprob: -10.786349296569824
    10. '              ' → logprob: -10.911349296569824

Token 142: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.07005436718463898
    2. 'B' (adapté à ' B') → logprob: -2.695054292678833
    3. ' ' → logprob: -9.570054054260254
    4. ' A' → logprob: -11.070054054260254
    5. ' ' → logprob: -11.445054054260254
    6. ' 
' → logprob: -12.320054054260254
    7. '<|end|>' → logprob: -12.320054054260254
    8. 'A' → logprob: -12.570054054260254
    9. '    ' → logprob: -13.320054054260254
    10. '```' → logprob: -13.820054054260254

Token 143: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0008403576212003827
    2. '+' → logprob: -7.375840187072754
    3. '-=' → logprob: -8.750840187072754
    4. ' +=' → logprob: -10.125840187072754
    5. ']+=' → logprob: -12.375840187072754
    6. '-' → logprob: -12.500840187072754
    7. '+="' → logprob: -13.125840187072754
    8. '+-' → logprob: -13.250840187072754
    9. '+='' → logprob: -13.375840187072754
    10. '+=(' → logprob: -14.125840187072754

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007102862582542002
    2. ' ' → logprob: -7.250710487365723
    3. '<|end|>' → logprob: -15.625710487365723
    4. '0' → logprob: -16.375709533691406
    5. '```' → logprob: -17.750709533691406
    6. '   ' → logprob: -18.125709533691406
    7. '  ' → logprob: -18.875709533691406
    8. '<|end|>' → logprob: -19.000709533691406
    9. ' ' → logprob: -19.750709533691406
    10. '2' → logprob: -20.250709533691406

Token 145: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02355734258890152
    2. ' ' → logprob: -3.773557424545288
    3. '<|end|>' → logprob: -8.273557662963867
    4. '0' → logprob: -10.398557662963867
    5. '```' → logprob: -11.273557662963867
    6. '   ' → logprob: -12.023557662963867
    7. '2' → logprob: -13.398557662963867
    8. '[' → logprob: -13.898557662963867
    9. '  ' → logprob: -14.023557662963867
    10. '-' → logprob: -14.273557662963867

Token 146: '               ' (ID: 506)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003352736122906208
    2. ' ' → logprob: -6.253352642059326
    3. '-' → logprob: -6.628352642059326
    4. '               ' → logprob: -9.628353118896484
    5. '0' → logprob: -11.378353118896484
    6. ' -' → logprob: -11.503353118896484
    7. '   ' → logprob: -11.878353118896484
    8. '<|end|>' → logprob: -12.878353118896484
    9. '                   ' → logprob: -13.878353118896484
    10. '```' → logprob: -14.128353118896484

Token 147: ' A' (ID: 355)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05549483746290207
    2. 'A' (adapté à ' A') → logprob: -2.930494785308838
    3. ' ' → logprob: -7.805494785308838
    4. ' A' → logprob: -8.930495262145996
    5. '<|end|>' → logprob: -9.680495262145996
    6. '```' → logprob: -11.805495262145996
    7. 'B' → logprob: -13.930495262145996
    8. '2' → logprob: -14.305495262145996
    9. '0' → logprob: -15.180495262145996
    10. '-' → logprob: -15.805495262145996

Token 148: '-=' (ID: 77519)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1002177745103836
    2. '-=' → logprob: -2.350217819213867
    3. ' -=' → logprob: -11.850217819213867
    4. '```' → logprob: -13.475217819213867
    5. ' -' → logprob: -14.225217819213867
    6. '   ' → logprob: -14.600217819213867
    7. '<|end|>' → logprob: -14.725217819213867
    8. '–' → logprob: -15.725217819213867
    9. '           ' → logprob: -15.850217819213867
    10. '-
' → logprob: -15.850217819213867

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -17.625001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '```' → logprob: -18.625001907348633
    6. '-' → logprob: -18.625001907348633
    7. '１' → logprob: -19.125001907348633
    8. '<|end|>' → logprob: -19.375001907348633
    9. '...' → logprob: -19.500001907348633
    10. 'B' → logprob: -20.000001907348633

Token 150: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001358328852802515
    2. '<|end|>' → logprob: -7.376358509063721
    3. '                ' → logprob: -8.251358032226562
    4. ' ' → logprob: -8.626358032226562
    5. '                
' → logprob: -9.001358032226562
    6. '              ' → logprob: -10.001358032226562
    7. '       ' → logprob: -10.376358032226562
    8. ' B' → logprob: -11.251358032226562
    9. '           ' → logprob: -11.251358032226562
    10. '```' → logprob: -11.626358032226562

Token 151: '               ' (ID: 506)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5271857976913452
    2. '               ' → logprob: -0.9021857976913452
    3. 'B' → logprob: -6.652185916900635
    4. ' ' → logprob: -7.277185916900635
    5. '```' → logprob: -7.402185916900635
    6. '                ' → logprob: -7.527185916900635
    7. ' A' → logprob: -8.527185440063477
    8. '<|end|>' → logprob: -8.902185440063477
    9. ' ' → logprob: -9.027185440063477
    10. '              ' → logprob: -9.152185440063477

Token 152: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.007903526537120342
    2. 'AN' (adapté à ' AN') → logprob: -4.882903575897217
    3. 'A' → logprob: -8.382903099060059
    4. 'B' → logprob: -10.007903099060059
    5. ' AN' → logprob: -11.132903099060059
    6. 'ans' → logprob: -12.382903099060059
    7. 'ANSWER' → logprob: -13.382903099060059
    8. 'ANN' → logprob: -14.007903099060059
    9. 'Ans' → logprob: -14.132903099060059
    10. 'AB' → logprob: -14.882903099060059

Token 153: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -4.961759259458631e-06
    2. 'Ans' → logprob: -14.000004768371582
    3. ' S' → logprob: -14.125004768371582
    4. '[' → logprob: -14.750004768371582
    5. 'SOR' → logprob: -15.000004768371582
    6. 'ANS' → logprob: -15.000004768371582
    7. '.append' → logprob: -15.250004768371582
    8. '```' → logprob: -15.625004768371582
    9. '`' → logprob: -16.0000057220459
    10. '
' → logprob: -16.1250057220459

Token 154: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00011677479778882116
    2. '.' → logprob: -9.125116348266602
    3. ' .' → logprob: -12.375116348266602
    4. '.extend' → logprob: -13.125116348266602
    5. 'append' → logprob: -14.500116348266602
    6. '.app' → logprob: -14.875116348266602
    7. '.ap' → logprob: -15.750116348266602
    8. '.Append' → logprob: -16.2501163482666
    9. ').' → logprob: -16.5001163482666
    10. '.add' → logprob: -16.6251163482666

Token 155: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.008635726757347584
    2. '(' → logprob: -4.758635520935059
    3. '('' → logprob: -11.383635520935059
    4. '("("' → logprob: -12.383635520935059
    5. '(
' → logprob: -12.883635520935059
    6. '"' → logprob: -13.008635520935059
    7. '("""' → logprob: -15.383635520935059
    8. '("")' → logprob: -15.508635520935059
    9. '(""' → logprob: -15.633635520935059
    10. ' ("' → logprob: -16.258636474609375

Token 156: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0030032580252736807
    2. '"B' → logprob: -5.878003120422363
    3. ''' → logprob: -8.753003120422363
    4. '"' → logprob: -10.628003120422363
    5. ' B' → logprob: -11.378003120422363
    6. 'A' → logprob: -13.378003120422363
    7. '`' → logprob: -14.628003120422363
    8. '	B' → logprob: -14.753003120422363
    9. '```' → logprob: -14.753003120422363
    10. '>B' → logprob: -14.878003120422363

Token 157: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01819196529686451
    2. ')
' → logprob: -4.143191814422607
    3. '")' → logprob: -6.268191814422607
    4. '```' → logprob: -9.768192291259766
    5. '<|end|>' → logprob: -10.143192291259766
    6. '   ' → logprob: -10.393192291259766
    7. '       ' → logprob: -10.518192291259766
    8. '')' → logprob: -10.643192291259766
    9. '")
' → logprob: -11.643192291259766
    10. '\n' → logprob: -11.643192291259766

Token 158: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0884256586432457
    2. ' elif' → logprob: -2.588425636291504
    3. '<|end|>' → logprob: -5.963425636291504
    4. 'else' → logprob: -6.213425636291504
    5. ' ' → logprob: -6.463425636291504
    6. '   ' → logprob: -6.588425636291504
    7. ' else' → logprob: -7.213425636291504
    8. ')' → logprob: -8.213425636291504
    9. '	elif' → logprob: -8.463425636291504
    10. '...' → logprob: -8.838425636291504

Token 160: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.10024312138557434
    2. 's' → logprob: -2.350243091583252
    3. 'S' → logprob: -11.60024356842041
    4. ' S' → logprob: -11.72524356842041
    5. '"s' → logprob: -12.35024356842041
    6. ' ' → logprob: -12.72524356842041
    7. 'A' → logprob: -12.72524356842041
    8. '"' → logprob: -12.97524356842041
    9. '(s' → logprob: -13.85024356842041
    10. ' A' → logprob: -13.91274356842041

Token 161: '=="' (ID: 24027)
  Prédit: '=="'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=="' → logprob: -0.06212206557393074
    2. '==' → logprob: -2.812122106552124
    3. ' ==' → logprob: -8.937122344970703
    4. '=='' → logprob: -11.437122344970703
    5. ' =="' → logprob: -12.062122344970703
    6. '==
' → logprob: -12.687122344970703
    7. '=' → logprob: -13.437122344970703
    8. '==="' → logprob: -13.812122344970703
    9. ']=="' → logprob: -15.437122344970703
    10. '="' → logprob: -15.437122344970703

Token 162: 'BC' (ID: 7551)
  Prédit: 'AC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.47414731979370117
    2. 'BC' → logprob: -0.9741473197937012
    3. '"' → logprob: -10.09914779663086
    4. 'AB' → logprob: -11.22414779663086
    5. 'BA' → logprob: -11.97414779663086
    6. '```' → logprob: -12.84914779663086
    7. 'ABC' → logprob: -13.34914779663086
    8. '`' → logprob: -13.84914779663086
    9. 'CA' → logprob: -13.97414779663086
    10. 'A' → logprob: -14.09914779663086

Token 163: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.20204606652259827
    2. '":
' → logprob: -1.7020460367202759
    3. '"' → logprob: -8.077046394348145
    4. ':' → logprob: -8.202046394348145
    5. '":
' → logprob: -11.077046394348145
    6. ':
' → logprob: -11.077046394348145
    7. '":

' → logprob: -11.202046394348145
    8. '```' → logprob: -14.202046394348145
    9. ' "' → logprob: -14.702046394348145
    10. ' ":' → logprob: -14.702046394348145

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020487580448389053
    2. '   ' → logprob: -4.0204877853393555
    3. 'if' → logprob: -6.8954877853393555
    4. ':
' → logprob: -7.3954877853393555
    5. '{
' → logprob: -7.8954877853393555
    6. ':' → logprob: -9.270487785339355
    7. ' if' → logprob: -9.645487785339355
    8. '<|end|>' → logprob: -9.770487785339355
    9. '```' → logprob: -10.395487785339355
    10. '        
' → logprob: -10.520487785339355

Token 165: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6102316975593567
    2. '       ' → logprob: -1.360231637954712
    3. ' if' → logprob: -1.610231637954712
    4. '   ' → logprob: -8.110231399536133
    5. '	if' → logprob: -11.485231399536133
    6. 'If' → logprob: -12.110231399536133
    7. ' ' → logprob: -12.360231399536133
    8. '<|end|>' → logprob: -12.735231399536133
    9. '    ' → logprob: -12.860231399536133
    10. '```' → logprob: -13.360231399536133

Token 166: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20313948392868042
    2. ' B' → logprob: -1.7031395435333252
    3. 'min' → logprob: -6.828139305114746
    4. ' min' → logprob: -7.828139305114746
    5. 'C' → logprob: -8.828139305114746
    6. ' C' → logprob: -9.828139305114746
    7. '   ' → logprob: -10.953139305114746
    8. ' ' → logprob: -11.203139305114746
    9. '  ' → logprob: -12.578139305114746
    10. 'A' → logprob: -13.515639305114746

Token 167: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0013821403263136744
    2. ' ==' → logprob: -6.626382350921631
    3. '>' → logprob: -11.001381874084473
    4. '>=' → logprob: -11.001381874084473
    5. '=' → logprob: -11.626381874084473
    6. '==
' → logprob: -12.001381874084473
    7. '<=' → logprob: -12.376381874084473
    8. '===' → logprob: -14.251381874084473
    9. '==-' → logprob: -14.751381874084473
    10. ']==' → logprob: -15.001381874084473

Token 168: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0011028258595615625
    2. '1' → logprob: -6.876102924346924
    3. ' C' → logprob: -9.876102447509766
    4. '0' → logprob: -11.626102447509766
    5. ' ' → logprob: -12.501102447509766
    6. 'A' → logprob: -13.251102447509766
    7. '=C' → logprob: -14.001102447509766
    8. '=' → logprob: -14.126102447509766
    9. '```' → logprob: -15.001102447509766
    10. '<C' → logprob: -15.001102447509766

Token 169: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0011480755638331175
    2. ' ==' → logprob: -6.876148223876953
    3. ' and' → logprob: -9.626148223876953
    4. 'and' → logprob: -10.876148223876953
    5. '==
' → logprob: -10.876148223876953
    6. '=' → logprob: -12.626148223876953
    7. '===' → logprob: -12.751148223876953
    8. '1' → logprob: -14.001148223876953
    9. '==-' → logprob: -14.001148223876953
    10. ']==' → logprob: -14.126148223876953

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '0' → logprob: -15.500004768371582
    4. '2' → logprob: -19.6250057220459
    5. '１' → logprob: -20.7500057220459
    6. '```' → logprob: -21.1250057220459
    7. '=' → logprob: -21.7500057220459
    8. '۱' → logprob: -21.7500057220459
    9. '<|end|>' → logprob: -22.0000057220459
    10. '<|end|>' → logprob: -22.0000057220459

Token 171: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0017451542662456632
    2. 'and' → logprob: -6.376745223999023
    3. ':
' → logprob: -10.376745223999023
    4. ':' → logprob: -11.501745223999023
    5. '       ' → logprob: -14.501745223999023
    6. '           ' → logprob: -14.626745223999023
    7. '	and' → logprob: -15.501745223999023
    8. ' ' → logprob: -15.876745223999023
    9. '   ' → logprob: -16.126745223999023
    10. ',' → logprob: -16.751745223999023

Token 172: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006716436706483364
    2. 'i' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.50671672821045
    4. '	i' → logprob: -15.25671672821045
    5. '   ' → logprob: -15.50671672821045
    6. ' ' → logprob: -16.631715774536133
    7. '(i' → logprob: -17.006715774536133
    8. ' (' → logprob: -17.131715774536133
    9. '  ' → logprob: -17.756715774536133
    10. '0' → logprob: -18.756715774536133

Token 173: '<N' (ID: 60262)
  Prédit: '<N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<N' → logprob: -0.002843271940946579
    2. '<' → logprob: -5.877843379974365
    3. '<C' → logprob: -10.877842903137207
    4. ' <' → logprob: -11.627842903137207
    5. '<n' → logprob: -11.877842903137207
    6. '<len' → logprob: -13.627842903137207
    7. '+' → logprob: -14.377842903137207
    8. ' ' → logprob: -14.877842903137207
    9. 'N' → logprob: -15.002842903137207
    10. '<S' → logprob: -15.502842903137207

Token 174: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.2994620242971e-06
    2. ' -' → logprob: -11.750008583068848
    3. '```' → logprob: -16.50000762939453
    4. '-
' → logprob: -16.62500762939453
    5. '+' → logprob: -17.12500762939453
    6. '<|end|>' → logprob: -17.37500762939453
    7. '<' → logprob: -17.56250762939453
    8. '   ' → logprob: -17.62500762939453
    9. '1' → logprob: -17.87500762939453
    10. '--' → logprob: -18.00000762939453

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.625016212463379
    3. '-' → logprob: -12.000016212463379
    4. '2' → logprob: -15.250016212463379
    5. '...' → logprob: -16.250015258789062
    6. '<|end|>' → logprob: -16.375015258789062
    7. '```' → logprob: -17.000015258789062
    8. '   ' → logprob: -17.000015258789062
    9. '<|end|>' → logprob: -17.812515258789062
    10. 'else' → logprob: -18.562515258789062

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4297749996185303
    2. ':
' → logprob: -1.0547749996185303
    3. ' and' → logprob: -7.429775238037109
    4. '       ' → logprob: -7.804775238037109
    5. 'and' → logprob: -11.17977523803711
    6. ':

' → logprob: -11.30477523803711
    7. '<|end|>' → logprob: -11.30477523803711
    8. ',' → logprob: -11.55477523803711
    9. '           ' → logprob: -11.80477523803711
    10. '):
' → logprob: -12.30477523803711

Token 177: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5408825278282166
    2. '           ' → logprob: -0.9158825278282166
    3. '<|end|>' → logprob: -4.290882587432861
    4. '               ' → logprob: -6.165882587432861
    5. '	       ' → logprob: -8.040882110595703
    6. '
' → logprob: -8.040882110595703
    7. '<|end|>' → logprob: -8.540882110595703
    8. ' if' → logprob: -8.665882110595703
    9. '```' → logprob: -8.790882110595703
    10. '        ' → logprob: -8.915882110595703

Token 178: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3673952519893646
    2. '               ' → logprob: -1.617395281791687
    3. ' if' → logprob: -2.8673951625823975
    4. 'if' (adapté à ' if') → logprob: -3.4923951625823975
    5. '<|end|>' → logprob: -4.492395401000977
    6. '       ' → logprob: -4.617395401000977
    7. '	       ' → logprob: -8.742395401000977
    8. ' ' → logprob: -9.117395401000977
    9. '   ' → logprob: -9.242395401000977
    10. 'If' → logprob: -9.492395401000977

Token 179: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1602482944726944
    2. ' S' → logprob: -1.9102482795715332
    3. ' ' → logprob: -11.410248756408691
    4. '   ' → logprob: -11.910248756408691
    5. '           ' → logprob: -13.160248756408691
    6. '	S' → logprob: -14.160248756408691
    7. 's' → logprob: -14.410248756408691
    8. '    ' → logprob: -14.535248756408691
    9. '"S' → logprob: -14.785248756408691
    10. '  ' → logprob: -14.785248756408691

Token 180: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[I' → logprob: -14.875000953674316
    3. '[' → logprob: -15.125000953674316
    4. ' [' → logprob: -15.375000953674316
    5. 'i' → logprob: -15.875000953674316
    6. '[user' → logprob: -16.875001907348633
    7. '```' → logprob: -16.875001907348633
    8. '[j' → logprob: -17.125001907348633
    9. '[
' → logprob: -17.750001907348633
    10. '[int' → logprob: -18.000001907348633

Token 181: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000476190383778885
    2. '[i' → logprob: -7.875476360321045
    3. '[' → logprob: -10.000475883483887
    4. '+i' → logprob: -10.000475883483887
    5. '+[' → logprob: -13.375475883483887
    6. '+
' → logprob: -13.500475883483887
    7. ' +' → logprob: -14.125475883483887
    8. 'i' → logprob: -15.250475883483887
    9. '[
' → logprob: -15.500475883483887
    10. '+]' → logprob: -16.125476837158203

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. '+' → logprob: -11.500019073486328
    3. ' ' → logprob: -11.875019073486328
    4. 'i' → logprob: -14.125019073486328
    5. '   ' → logprob: -14.875019073486328
    6. '-' → logprob: -15.125019073486328
    7. '{' → logprob: -15.750019073486328
    8. '```' → logprob: -15.750019073486328
    9. '2' → logprob: -16.250019073486328
    10. '[i' → logprob: -16.500019073486328

Token 183: ']=="' (ID: 164578)
  Prédit: '=="'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=="' → logprob: -7.52919222577475e-05
    2. '==' → logprob: -9.625075340270996
    3. '==
' → logprob: -12.750075340270996
    4. ']=="' → logprob: -12.875075340270996
    5. '=='' → logprob: -13.625075340270996
    6. ' ==' → logprob: -14.000075340270996
    7. ' =="' → logprob: -14.750075340270996
    8. '==="' → logprob: -15.000075340270996
    9. '="' → logprob: -15.250075340270996
    10. '[' → logprob: -15.250075340270996

Token 184: 'AC' (ID: 2436)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.0006945623317733407
    2. 'BA' → logprob: -7.375694751739502
    3. 'CA' → logprob: -9.875694274902344
    4. 'AC' → logprob: -11.750694274902344
    5. 'CB' → logprob: -13.000694274902344
    6. '"' → logprob: -13.250694274902344
    7. ' AB' → logprob: -13.500694274902344
    8. '
' → logprob: -14.250694274902344
    9. '```' → logprob: -14.500694274902344
    10. '_AB' → logprob: -14.875694274902344

Token 185: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.41613391041755676
    2. '":' → logprob: -1.1661338806152344
    3. '"' → logprob: -4.166133880615234
    4. ':
' → logprob: -4.791133880615234
    5. '"):
' → logprob: -6.666133880615234
    6. ':' → logprob: -6.666133880615234
    7. '"]:
' → logprob: -7.166133880615234
    8. '               ' → logprob: -7.416133880615234
    9. '":
' → logprob: -7.666133880615234
    10. '```' → logprob: -9.291133880615234

Token 186: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034874621778726578
    2. 'B' → logprob: -5.753487586975098
    3. ' B' → logprob: -9.128487586975098
    4. '           ' → logprob: -9.878487586975098
    5. '```' → logprob: -9.878487586975098
    6. 'C' → logprob: -10.253487586975098
    7. '                   ' → logprob: -10.878487586975098
    8. ':
' → logprob: -11.503487586975098
    9. '                
' → logprob: -11.878487586975098
    10. 'b' → logprob: -12.503487586975098

Token 187: ' C' (ID: 363)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10111654549837112
    2. 'C' (adapté à ' C') → logprob: -2.35111665725708
    3. '               ' → logprob: -7.60111665725708
    4. ' B' → logprob: -8.726116180419922
    5. '                   ' → logprob: -9.101116180419922
    6. 'A' → logprob: -9.476116180419922
    7. '           ' → logprob: -10.476116180419922
    8. ' C' → logprob: -11.101116180419922
    9. '                ' → logprob: -12.351116180419922
    10. '   ' → logprob: -13.226116180419922

Token 188: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005593256559222937
    2. '-=' → logprob: -5.255593299865723
    3. ' +=' → logprob: -8.130593299865723
    4. '+' → logprob: -10.755593299865723
    5. ']+=' → logprob: -11.380593299865723
    6. '-' → logprob: -11.505593299865723
    7. ' -=' → logprob: -12.005593299865723
    8. '>=' → logprob: -12.255593299865723
    9. '=' → logprob: -12.755593299865723
    10. '>' → logprob: -13.005593299865723

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.706686690449715e-05
    2. '-' → logprob: -9.625066757202148
    3. ' ' → logprob: -13.875066757202148
    4. '<|end|>' → logprob: -17.12506675720215
    5. '0' → logprob: -17.50006675720215
    6. ' -' → logprob: -18.75006675720215
    7. '   ' → logprob: -19.12506675720215
    8. '
' → logprob: -19.12506675720215
    9. '=' → logprob: -19.50006675720215
    10. '```' → logprob: -19.62506675720215

Token 190: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018747396534308791
    2. '<|end|>' → logprob: -7.001874923706055
    3. '                
' → logprob: -7.626874923706055
    4. '
' → logprob: -8.501874923706055
    5. 'B' → logprob: -9.251874923706055
    6. '\
' → logprob: -10.251874923706055
    7. ' B' → logprob: -10.501874923706055
    8. '                   ' → logprob: -10.501874923706055
    9. '           ' → logprob: -10.626874923706055
    10. '                ' → logprob: -11.376874923706055

Token 191: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020866614067927003
    2. '<|end|>' → logprob: -9.625208854675293
    3. '                
' → logprob: -10.000208854675293
    4. '                   ' → logprob: -10.250208854675293
    5. '
' → logprob: -10.625208854675293
    6. '              ' → logprob: -11.500208854675293
    7. '                ' → logprob: -11.500208854675293
    8. '           ' → logprob: -12.000208854675293
    9. 'B' → logprob: -12.750208854675293
    10. ' B' → logprob: -13.000208854675293

Token 192: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.009767187759280205
    2. ' B' → logprob: -4.634767055511475
    3. 'user' → logprob: -12.884767532348633
    4. '>B' → logprob: -13.634767532348633
    5. '   ' → logprob: -13.759767532348633
    6. '<|end|>' → logprob: -14.009767532348633
    7. 'b' → logprob: -14.259767532348633
    8. '#' → logprob: -14.384767532348633
    9. '"B' → logprob: -14.384767532348633
    10. '	B' → logprob: -14.384767532348633

Token 193: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0012286811834201217
    2. '-' → logprob: -6.7512288093566895
    3. '+=' → logprob: -9.876228332519531
    4. ' -=' → logprob: -12.001228332519531
    5. '```' → logprob: -14.501228332519531
    6. '[' → logprob: -16.62622833251953
    7. '   ' → logprob: -17.12622833251953
    8. '[-' → logprob: -17.12622833251953
    9. '=' → logprob: -17.12622833251953
    10. 'def' → logprob: -17.37622833251953

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '<|end|>' → logprob: -18.875
    4. '-' → logprob: -19.0
    5. '```' → logprob: -19.625
    6. '   ' → logprob: -20.0
    7. '0' → logprob: -20.4375
    8. '
' → logprob: -20.875
    9. '１' → logprob: -21.125
    10. '<|end|>' → logprob: -21.4375

Token 195: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008700020611286163
    2. '
' → logprob: -5.508699893951416
    3. '<|end|>' → logprob: -5.508699893951416
    4. '           ' → logprob: -7.883699893951416
    5. '<|end|>' → logprob: -9.758700370788574
    6. '                
' → logprob: -10.008700370788574
    7. '              ' → logprob: -10.758700370788574
    8. '       ' → logprob: -10.883700370788574
    9. '```' → logprob: -11.508700370788574
    10. '                   ' → logprob: -11.633700370788574

Token 196: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0021175467409193516
    2. '           ' → logprob: -7.00211763381958
    3. '<|end|>' → logprob: -7.87711763381958
    4. 'else' → logprob: -8.127117156982422
    5. ' else' → logprob: -8.627117156982422
    6. '                
' → logprob: -8.877117156982422
    7. '
' → logprob: -9.877117156982422
    8. '              ' → logprob: -10.002117156982422
    9. 'B' → logprob: -10.752117156982422
    10. '       ' → logprob: -11.127117156982422

Token 197: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.08375755697488785
    2. 'AN' (adapté à ' AN') → logprob: -2.7087576389312744
    3. ' AN' → logprob: -4.583757400512695
    4. 'B' → logprob: -5.833757400512695
    5. ' B' → logprob: -7.833757400512695
    6. 'A' → logprob: -9.583757400512695
    7. 'ANSWER' → logprob: -9.958757400512695
    8. 'C' → logprob: -10.333757400512695
    9. ' A' → logprob: -11.333757400512695
    10. 'ANN' → logprob: -12.333757400512695

Token 198: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -3.531315314830863e-06
    2. '```' → logprob: -14.625003814697266
    3. '[' → logprob: -14.750003814697266
    4. '.append' → logprob: -15.000003814697266
    5. 'ANS' → logprob: -15.625003814697266
    6. ' S' → logprob: -15.750003814697266
    7. '#' → logprob: -16.062503814697266
    8. 'Ans' → logprob: -16.187503814697266
    9. '           ' → logprob: -16.250003814697266
    10. '[
' → logprob: -16.437503814697266

Token 199: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.310693111619912e-05
    2. '.' → logprob: -10.250042915344238
    3. '.app' → logprob: -12.625042915344238
    4. ' .' → logprob: -13.125042915344238
    5. '.ap' → logprob: -13.875042915344238
    6. 'append' → logprob: -14.125042915344238
    7. '.Append' → logprob: -15.250042915344238
    8. '.extend' → logprob: -15.500042915344238
    9. '.setdefault' → logprob: -16.250043869018555
    10. '.add' → logprob: -17.375043869018555

Token 200: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0022900181356817484
    2. '"B' → logprob: -6.25229024887085
    3. '(' → logprob: -8.752289772033691
    4. '"C' → logprob: -9.002289772033691
    5. '"' → logprob: -9.502289772033691
    6. '('' → logprob: -12.877289772033691
    7. '"A' → logprob: -13.127289772033691
    8. '(
' → logprob: -14.502289772033691
    9. ' "' → logprob: -16.127290725708008
    10. '"I' → logprob: -16.752290725708008

Token 201: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00044032474397681653
    2. 'B' → logprob: -7.7504401206970215
    3. ''C' → logprob: -12.25044059753418
    4. '"C' → logprob: -12.50044059753418
    5. ' C' → logprob: -14.00044059753418
    6. '"' → logprob: -15.75044059753418
    7. ''' → logprob: -16.75044059753418
    8. 'A' → logprob: -16.87544059753418
    9. '"B' → logprob: -17.62544059753418
    10. '```' → logprob: -18.50044059753418

Token 202: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.644784688949585
    2. '")' → logprob: -0.894784688949585
    3. ')' → logprob: -3.144784688949585
    4. ')
' → logprob: -3.769784688949585
    5. '           ' → logprob: -8.519784927368164
    6. '"' → logprob: -9.144784927368164
    7. '")
' → logprob: -10.019784927368164
    8. ')")
' → logprob: -11.394784927368164
    9. '               ' → logprob: -11.519784927368164
    10. ' ")
' → logprob: -12.644784927368164

Token 203: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008832250721752644
    2. 'else' → logprob: -5.7588324546813965
    3. '<|end|>' → logprob: -5.7588324546813965
    4. '               ' → logprob: -6.2588324546813965
    5. ' else' → logprob: -7.7588324546813965
    6. '       ' → logprob: -9.633831977844238
    7. '```' → logprob: -10.008831977844238
    8. ')' → logprob: -11.633831977844238
    9. '<|end|>' → logprob: -11.883831977844238
    10. 'elif' → logprob: -12.258831977844238

Token 204: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4815189838409424
    2. ' else' → logprob: -0.9815189838409424
    3. '               ' → logprob: -5.106518745422363
    4. '           ' → logprob: -6.731518745422363
    5. '       ' → logprob: -9.106518745422363
    6. '	else' → logprob: -10.981518745422363
    7. '              ' → logprob: -11.856518745422363
    8. '          ' → logprob: -11.981518745422363
    9. 'elif' → logprob: -12.106518745422363
    10. '   ' → logprob: -12.356518745422363

Token 205: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029951741453260183
    2. '           ' → logprob: -6.627995014190674
    3. 'B' → logprob: -7.377995014190674
    4. ' B' → logprob: -7.877995014190674
    5. '```' → logprob: -8.752995491027832
    6. ':
' → logprob: -9.127995491027832
    7. '<|end|>' → logprob: -9.502995491027832
    8. '
' → logprob: -9.502995491027832
    9. '{
' → logprob: -10.127995491027832
    10. '                   ' → logprob: -10.252995491027832

Token 206: '               ' (ID: 506)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5081693530082703
    2. '               ' → logprob: -1.008169412612915
    3. ' B' → logprob: -3.508169412612915
    4. '           ' → logprob: -6.633169174194336
    5. '                   ' → logprob: -6.633169174194336
    6. '```' → logprob: -8.008169174194336
    7. 'C' → logprob: -8.258169174194336
    8. '                ' → logprob: -9.383169174194336
    9. '              ' → logprob: -9.883169174194336
    10. ' ' → logprob: -10.133169174194336

Token 207: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.0018148827366530895
    2. ' B' → logprob: -6.751814842224121
    3. 'C' → logprob: -7.501814842224121
    4. '   ' → logprob: -9.626814842224121
    5. '               ' → logprob: -11.126814842224121
    6. '       ' → logprob: -12.751814842224121
    7. '           ' → logprob: -12.876814842224121
    8. '	B' → logprob: -13.001814842224121
    9. 'A' → logprob: -13.876814842224121
    10. ' C' → logprob: -14.126814842224121

Token 208: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0004510493890848011
    2. '+' → logprob: -7.87545108795166
    3. '-=' → logprob: -10.12545108795166
    4. ' +=' → logprob: -11.25045108795166
    5. ']+=' → logprob: -11.50045108795166
    6. '-' → logprob: -13.62545108795166
    7. '```' → logprob: -13.62545108795166
    8. '+='' → logprob: -13.62545108795166
    9. '+="' → logprob: -13.75045108795166
    10. '+=(' → logprob: -14.12545108795166

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -10.875019073486328
    3. '0' → logprob: -14.750019073486328
    4. '-' → logprob: -15.750019073486328
    5. '<|end|>' → logprob: -18.000019073486328
    6. ' -' → logprob: -19.125019073486328
    7. '```' → logprob: -19.625019073486328
    8. '   ' → logprob: -20.500019073486328
    9. '１' → logprob: -20.500019073486328
    10. '	' → logprob: -20.625019073486328

Token 210: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10052108019590378
    2. '               ' → logprob: -2.9755210876464844
    3. ' ' → logprob: -3.4755210876464844
    4. '           ' → logprob: -4.975521087646484
    5. '       ' → logprob: -7.100521087646484
    6. '   ' → logprob: -7.475521087646484
    7. '                   ' → logprob: -7.600521087646484
    8. '              ' → logprob: -7.600521087646484
    9. '	       ' → logprob: -7.725521087646484
    10. '=' → logprob: -7.850521087646484

Token 211: '               ' (ID: 506)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012612078338861465
    2. ' ' → logprob: -4.8876118659973145
    3. '-' → logprob: -5.3876118659973145
    4. '               ' → logprob: -8.887612342834473
    5. '=' → logprob: -9.762612342834473
    6. '   ' → logprob: -10.137612342834473
    7. '[' → logprob: -10.262612342834473
    8. '```' → logprob: -10.887612342834473
    9. '-=' → logprob: -10.887612342834473
    10. ' -' → logprob: -11.012612342834473

Token 212: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.038307707756757736
    2. '1' → logprob: -3.2883076667785645
    3. 'A' → logprob: -9.163308143615723
    4. ' C' → logprob: -9.413308143615723
    5. '-' → logprob: -10.663308143615723
    6. '   ' → logprob: -10.788308143615723
    7. '```' → logprob: -11.413308143615723
    8. '<|end|>' → logprob: -11.538308143615723
    9. ' ' → logprob: -12.788308143615723
    10. 'c' → logprob: -12.913308143615723

Token 213: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.3868902921676636
    2. '-' → logprob: -1.1368902921676636
    3. '```' → logprob: -11.636890411376953
    4. ' -=' → logprob: -11.886890411376953
    5. '   ' → logprob: -13.636890411376953
    6. '+=' → logprob: -13.636890411376953
    7. '	' → logprob: -15.511890411376953
    8. '[' → logprob: -15.886890411376953
    9. '[-' → logprob: -16.011890411376953
    10. '  ' → logprob: -16.011890411376953

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -19.625
    4. '-' → logprob: -20.0
    5. '=' → logprob: -21.125
    6. '<|end|>' → logprob: -21.25
    7. '0' → logprob: -21.5
    8. '１' → logprob: -21.625
    9. '   ' → logprob: -21.625
    10. 'int' → logprob: -21.875

Token 215: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008145838975906372
    2. '                
' → logprob: -6.133145809173584
    3. ')' → logprob: -6.383145809173584
    4. '           ' → logprob: -6.883145809173584
    5. '<|end|>' → logprob: -7.008145809173584
    6. '```' → logprob: -7.758145809173584
    7. '              ' → logprob: -8.008146286010742
    8. 'B' → logprob: -8.258146286010742
    9. '       ' → logprob: -8.508146286010742
    10. '``' → logprob: -9.258146286010742

Token 216: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002460079500451684
    2. 'B' → logprob: -6.50246000289917
    3. '	B' → logprob: -8.877460479736328
    4. '"B' → logprob: -9.002460479736328
    5. '   ' → logprob: -9.502460479736328
    6. ')' → logprob: -9.502460479736328
    7. '              ' → logprob: -9.627460479736328
    8. '           ' → logprob: -9.627460479736328
    9. '			' → logprob: -9.877460479736328
    10. '<|end|>' → logprob: -9.877460479736328

Token 217: ' AN' (ID: 3473)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.017792247235774994
    2. '"B' → logprob: -4.267792224884033
    3. 'ANS' → logprob: -5.767792224884033
    4. '"' → logprob: -8.517792701721191
    5. ' B' → logprob: -8.892792701721191
    6. 'ans' → logprob: -10.017792701721191
    7. 'C' → logprob: -10.142792701721191
    8. ''' → logprob: -10.267792701721191
    9. 'AN' (adapté à ' AN') → logprob: -12.017792701721191
    10. '"C' → logprob: -12.267792701721191

Token 218: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -6.511406809295295e-06
    2. '[' → logprob: -13.625006675720215
    3. '.append' → logprob: -14.000006675720215
    4. '```' → logprob: -14.500006675720215
    5. 'Ans' → logprob: -14.750006675720215
    6. 'ANS' → logprob: -14.750006675720215
    7. 'append' → logprob: -15.125006675720215
    8. 'swer' → logprob: -15.312506675720215
    9. 'SOR' → logprob: -15.312506675720215
    10. ' S' → logprob: -15.500006675720215

Token 219: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.676981345459353e-06
    2. '.' → logprob: -12.500005722045898
    3. 'append' → logprob: -13.500005722045898
    4. ' .' → logprob: -14.750005722045898
    5. '.app' → logprob: -16.5000057220459
    6. '.extend' → logprob: -16.7500057220459
    7. 'appen' → logprob: -18.0000057220459
    8. '```' → logprob: -18.7500057220459
    9. ').' → logprob: -19.2500057220459
    10. '.Append' → logprob: -19.5000057220459

Token 220: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.003186743939295411
    2. '(' → logprob: -5.7531867027282715
    3. '('' → logprob: -12.50318717956543
    4. '("("' → logprob: -12.87818717956543
    5. '(
' → logprob: -13.87818717956543
    6. '"' → logprob: -14.25318717956543
    7. '("")' → logprob: -14.75318717956543
    8. '(">' → logprob: -15.37818717956543
    9. ')("' → logprob: -15.87818717956543
    10. '("""' → logprob: -16.25318717956543

Token 221: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.292907877039397e-06
    2. 'C' → logprob: -13.50000286102295
    3. '"B' → logprob: -13.75000286102295
    4. ' B' → logprob: -14.12500286102295
    5. ''' → logprob: -17.250003814697266
    6. '	B' → logprob: -17.750003814697266
    7. 'Ｂ' → logprob: -18.000003814697266
    8. '"' → logprob: -18.000003814697266
    9. '>B' → logprob: -18.375003814697266
    10. '_B' → logprob: -19.500003814697266

Token 222: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7329939603805542
    2. '")' → logprob: -0.9829939603805542
    3. ')
' → logprob: -2.3579940795898438
    4. '")
' → logprob: -2.9829940795898438
    5. '")
' → logprob: -11.357994079589844
    6. ')")
' → logprob: -11.482994079589844
    7. '"' → logprob: -11.607994079589844
    8. ')
' → logprob: -11.607994079589844
    9. '```' → logprob: -11.982994079589844
    10. '           ' → logprob: -11.982994079589844

Token 223: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020328497048467398
    2. '       ' → logprob: -7.75203275680542
    3. 'else' → logprob: -7.75203275680542
    4. ' else' → logprob: -7.87703275680542
    5. '    
' → logprob: -8.252033233642578
    6. 'elif' → logprob: -8.752033233642578
    7. '<|end|>' → logprob: -9.002033233642578
    8. '```' → logprob: -9.127033233642578
    9. ')' → logprob: -10.252033233642578
    10. ' elif' → logprob: -10.627033233642578

Token 224: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13489578664302826
    2. ' else' → logprob: -2.5098958015441895
    3. 'else' (adapté à ' else') → logprob: -3.1348958015441895
    4. '       ' → logprob: -7.2598958015441895
    5. '           ' → logprob: -8.009895324707031
    6. 'elif' → logprob: -9.134895324707031
    7. ' ' → logprob: -9.384895324707031
    8. '  ' → logprob: -9.509895324707031
    9. '	else' → logprob: -10.134895324707031
    10. ' elif' → logprob: -10.259895324707031

Token 225: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5890478491783142
    2. '           ' → logprob: -0.8390478491783142
    3. ':
' → logprob: -4.589047908782959
    4. '       ' → logprob: -6.714047908782959
    5. '```' → logprob: -7.089047908782959
    6. '{' → logprob: -7.839047908782959
    7. '               ' → logprob: -8.8390474319458
    8. '{
' → logprob: -9.5890474319458
    9. ' if' → logprob: -9.8390474319458
    10. 'if' → logprob: -10.5890474319458

Token 226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01698143407702446
    2. 'if' → logprob: -4.141981601715088
    3. ' if' → logprob: -7.766981601715088
    4. '       ' → logprob: -8.14198112487793
    5. '```' → logprob: -8.76698112487793
    6. '               ' → logprob: -9.89198112487793
    7. '          ' → logprob: -11.64198112487793
    8. '        ' → logprob: -12.26698112487793
    9. '         ' → logprob: -12.26698112487793
    10. '   ' → logprob: -13.14198112487793

Token 227: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.026809344068169594
    2. '           ' → logprob: -4.026809215545654
    3. ' if' → logprob: -4.776809215545654
    4. '       ' → logprob: -8.651809692382812
    5. '               ' → logprob: -11.151809692382812
    6. '   ' → logprob: -12.401809692382812
    7. '```' → logprob: -12.901809692382812
    8. '	if' → logprob: -14.401809692382812
    9. '            ' → logprob: -14.401809692382812
    10. '        ' → logprob: -14.526809692382812

Token 228: ' min' (ID: 1349)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8949917554855347
    2. 'min' → logprob: -1.3949917554855347
    3. ' min' → logprob: -1.6449917554855347
    4. ' B' → logprob: -1.8949917554855347
    5. 'max' → logprob: -9.769991874694824
    6. '(min' → logprob: -10.019991874694824
    7. ' max' → logprob: -10.769991874694824
    8. 'C' → logprob: -10.894991874694824
    9. 'b' → logprob: -11.019991874694824
    10. ' ' → logprob: -11.269991874694824

Token 229: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0005099030095152557
    2. '(' → logprob: -7.625509738922119
    3. '(
' → logprob: -11.000510215759277
    4. '(A' → logprob: -12.625510215759277
    5. ' (' → logprob: -13.750510215759277
    6. '(C' → logprob: -14.750510215759277
    7. '(

' → logprob: -16.37550926208496
    8. '((' → logprob: -16.50050926208496
    9. 'B' → logprob: -16.75050926208496
    10. '```' → logprob: -17.00050926208496

Token 230: ',C' (ID: 26924)
  Prédit: ',B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.006385772489011288
    2. ',' → logprob: -5.756385803222656
    3. ',C' → logprob: -6.381385803222656
    4. ' ,' → logprob: -7.006385803222656
    5. ',b' → logprob: -8.381385803222656
    6. ',A' → logprob: -8.506385803222656
    7. ')==' → logprob: -9.631385803222656
    8. '(B' → logprob: -10.006385803222656
    9. '==' → logprob: -10.506385803222656
    10. '<B' → logprob: -11.756385803222656

Token 231: ')==' (ID: 35269)
  Prédit: ')=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.003538417164236307
    2. '==' → logprob: -5.753538608551025
    3. ')' → logprob: -8.128538131713867
    4. ']==' → logprob: -10.253538131713867
    5. ' )' → logprob: -11.003538131713867
    6. '")==' → logprob: -12.253538131713867
    7. '()==' → logprob: -12.753538131713867
    8. ')=' → logprob: -13.253538131713867
    9. ' ==' → logprob: -13.628538131713867
    10. '==
' → logprob: -14.378538131713867

Token 232: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0021934446413069963
    2. ' B' → logprob: -6.127193450927734
    3. 'b' → logprob: -12.252193450927734
    4. '   ' → logprob: -13.002193450927734
    5. ' ' → logprob: -14.502193450927734
    6. '	B' → logprob: -14.627193450927734
    7. 'C' → logprob: -15.502193450927734
    8. '```' → logprob: -17.002193450927734
    9. '>B' → logprob: -17.377193450927734
    10. '  ' → logprob: -17.752193450927734

Token 233: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4330878257751465
    2. ':
' → logprob: -1.0580878257751465
    3. '               ' → logprob: -5.8080878257751465
    4. '           ' → logprob: -7.3080878257751465
    5. '+' → logprob: -8.058088302612305
    6. '{
' → logprob: -9.183088302612305
    7. '):
' → logprob: -9.808088302612305
    8. ' :
' → logprob: -10.433088302612305
    9. '{' → logprob: -10.558088302612305
    10. '       ' → logprob: -10.558088302612305

Token 234: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05104668810963631
    2. '           ' → logprob: -3.05104660987854
    3. ':
' → logprob: -7.551046848297119
    4. ':' → logprob: -7.801046848297119
    5. ' B' → logprob: -7.926046848297119
    6. ' C' → logprob: -7.926046848297119
    7. '```' → logprob: -8.176046371459961
    8. 'B' → logprob: -9.176046371459961
    9. '   ' → logprob: -9.301046371459961
    10. 'C' → logprob: -9.301046371459961

Token 235: ' B' (ID: 418)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3776583969593048
    2. '               ' → logprob: -1.3776583671569824
    3. 'B' (adapté à ' B') → logprob: -2.8776583671569824
    4. '           ' → logprob: -5.752658367156982
    5. ' C' → logprob: -6.002658367156982
    6. ' B' → logprob: -8.75265884399414
    7. '   ' → logprob: -9.37765884399414
    8. '              ' → logprob: -9.87765884399414
    9. '                   ' → logprob: -10.50265884399414
    10. ' ' → logprob: -10.62765884399414

Token 236: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -4.620622712536715e-05
    2. ' +=' → logprob: -10.375045776367188
    3. ']+=' → logprob: -12.000045776367188
    4. '+' → logprob: -12.250045776367188
    5. '   ' → logprob: -12.750045776367188
    6. '
' → logprob: -15.625045776367188
    7. '```' → logprob: -15.625045776367188
    8. '-=' → logprob: -15.750045776367188
    9. '>=' → logprob: -16.250045776367188
    10. '+
' → logprob: -16.375045776367188

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -17.50001335144043
    4. '   ' → logprob: -18.87501335144043
    5. '<|end|>' → logprob: -19.00001335144043
    6. '0' → logprob: -19.00001335144043
    7. '
' → logprob: -19.25001335144043
    8. '１' → logprob: -20.37501335144043
    9. 'space' → logprob: -20.37501335144043
    10. '  ' → logprob: -20.37501335144043

Token 238: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00028696097433567047
    2. '<|end|>' → logprob: -8.750287055969238
    3. '       ' → logprob: -9.750287055969238
    4. '
' → logprob: -10.125287055969238
    5. '           ' → logprob: -11.500287055969238
    6. '1' → logprob: -12.000287055969238
    7. '              ' → logprob: -12.500287055969238
    8. '                
' → logprob: -12.750287055969238
    9. '```' → logprob: -13.125287055969238
    10. '   ' → logprob: -13.625287055969238

Token 239: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5367956161499023
    2. '1' → logprob: -0.9117956161499023
    3. '       ' → logprob: -4.411795616149902
    4. '           ' → logprob: -7.786795616149902
    5. '<|end|>' → logprob: -8.411795616149902
    6. ' ' → logprob: -8.536795616149902
    7. '```' → logprob: -8.661795616149902
    8. '   ' → logprob: -8.661795616149902
    9. '
' → logprob: -9.036795616149902
    10. '              ' → logprob: -10.286795616149902

Token 240: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.11288204789161682
    2. ' C' → logprob: -2.237882137298584
    3. '1' → logprob: -9.987881660461426
    4. '   ' → logprob: -11.987881660461426
    5. '               ' → logprob: -12.862881660461426
    6. ' ' → logprob: -13.112881660461426
    7. 'A' → logprob: -13.737881660461426
    8. '```' → logprob: -14.487881660461426
    9. '
' → logprob: -14.737881660461426
    10. '	C' → logprob: -15.362881660461426

Token 241: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.01817300356924534
    2. '-' → logprob: -4.0181732177734375
    3. ' -=' → logprob: -10.893173217773438
    4. '```' → logprob: -12.393173217773438
    5. '   ' → logprob: -16.393173217773438
    6. '+=' → logprob: -16.518173217773438
    7. '−' → logprob: -16.768173217773438
    8. '-
' → logprob: -17.018173217773438
    9. '=' → logprob: -17.393173217773438
    10. ' -' → logprob: -17.893173217773438

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '<|end|>' → logprob: -17.125003814697266
    4. '```' → logprob: -18.625003814697266
    5. '   ' → logprob: -20.875003814697266
    6. '-' → logprob: -21.125003814697266
    7. '<|end|>' → logprob: -21.250003814697266
    8. '...' → logprob: -21.625003814697266
    9. '0' → logprob: -21.875003814697266
    10. '  ' → logprob: -22.000003814697266

Token 243: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006733550690114498
    2. '                
' → logprob: -7.875673294067383
    3. '           ' → logprob: -10.000673294067383
    4. '
' → logprob: -10.000673294067383
    5. '              ' → logprob: -10.250673294067383
    6. '       ' → logprob: -10.500673294067383
    7. '<|end|>' → logprob: -10.875673294067383
    8. '```' → logprob: -11.000673294067383
    9. '  
' → logprob: -11.125673294067383
    10. '                ' → logprob: -11.125673294067383

Token 244: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000397422380046919
    2. '           ' → logprob: -9.000397682189941
    3. '       ' → logprob: -9.500397682189941
    4. '```' → logprob: -9.750397682189941
    5. '   ' → logprob: -10.000397682189941
    6. '              ' → logprob: -10.500397682189941
    7. '			' → logprob: -11.500397682189941
    8. '                
' → logprob: -11.750397682189941
    9. 'ANS' → logprob: -11.750397682189941
    10. '[' → logprob: -11.750397682189941

Token 245: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.0005691178957931697
    2. ' AN' → logprob: -7.5005693435668945
    3. 'AN' (adapté à ' AN') → logprob: -11.250569343566895
    4. 'ANSWER' → logprob: -12.875569343566895
    5. 'ans' → logprob: -15.625569343566895
    6. '   ' → logprob: -16.500568389892578
    7. 'Ans' → logprob: -16.625568389892578
    8. 'ANTLR' → logprob: -16.875568389892578
    9. '_ans' → logprob: -17.000568389892578
    10. 'ANN' → logprob: -17.500568389892578

Token 246: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.0087516784551553e-05
    2. 'ANS' → logprob: -11.87501049041748
    3. '[' → logprob: -14.00001049041748
    4. 'Ans' → logprob: -14.37501049041748
    5. '.append' → logprob: -15.12501049041748
    6. ' S' → logprob: -15.50001049041748
    7. 'SS' → logprob: -15.87501049041748
    8. '```' → logprob: -15.87501049041748
    9. '[S' → logprob: -16.000009536743164
    10. 'SQ' → logprob: -16.375009536743164

Token 247: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.167648876318708e-05
    2. '.' → logprob: -10.125041961669922
    3. ' .' → logprob: -13.875041961669922
    4. '.app' → logprob: -14.500041961669922
    5. '.extend' → logprob: -16.000041961669922
    6. 'append' → logprob: -16.750041961669922
    7. '.ap' → logprob: -18.250041961669922
    8. '.Append' → logprob: -19.000041961669922
    9. '.add' → logprob: -20.000041961669922
    10. '..' → logprob: -20.750041961669922

Token 248: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -9.507972572464496e-05
    2. '(' → logprob: -9.50009536743164
    3. '"B' → logprob: -11.12509536743164
    4. '"' → logprob: -12.75009536743164
    5. '('' → logprob: -13.12509536743164
    6. '(
' → logprob: -15.00009536743164
    7. '"C' → logprob: -17.12509536743164
    8. '"A' → logprob: -17.37509536743164
    9. '()' → logprob: -17.87509536743164
    10. ' ("' → logprob: -18.12509536743164

Token 249: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07025417685508728
    2. 'C' → logprob: -2.69525408744812
    3. '"B' → logprob: -8.5702543258667
    4. '"' → logprob: -10.0702543258667
    5. '"C' → logprob: -10.0702543258667
    6. ''C' → logprob: -10.6952543258667
    7. ' B' → logprob: -11.5702543258667
    8. ''' → logprob: -12.0702543258667
    9. ' C' → logprob: -13.8202543258667
    10. 'A' → logprob: -14.5702543258667

Token 250: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29465699195861816
    2. '")' → logprob: -1.6696569919586182
    3. ')
' → logprob: -3.169656991958618
    4. '")
' → logprob: -4.294656753540039
    5. '           ' → logprob: -4.544656753540039
    6. '   ' → logprob: -8.169656753540039
    7. '       ' → logprob: -8.794656753540039
    8. '')' → logprob: -9.794656753540039
    9. '               ' → logprob: -10.169656753540039
    10. '"' → logprob: -11.169656753540039

Token 251: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6905430555343628
    2. '           ' → logprob: -0.8155430555343628
    3. '   ' → logprob: -3.0655431747436523
    4. ' else' → logprob: -4.940543174743652
    5. '       ' → logprob: -6.190543174743652
    6. '               ' → logprob: -8.815543174743652
    7. '```' → logprob: -8.815543174743652
    8. 'elif' → logprob: -9.940543174743652
    9. '<|end|>' → logprob: -10.315543174743652
    10. ' ' → logprob: -10.815543174743652

Token 252: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.09036223590373993
    2. ' else' → logprob: -2.590362310409546
    3. '           ' → logprob: -4.965362071990967
    4. '       ' → logprob: -5.465362071990967
    5. '   ' → logprob: -8.965362548828125
    6. '               ' → logprob: -10.465362548828125
    7. '	else' → logprob: -11.465362548828125
    8. ' ' → logprob: -11.965362548828125
    9. '```' → logprob: -12.215362548828125
    10. '          ' → logprob: -12.340362548828125

Token 253: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16584250330924988
    2. ' C' → logprob: -2.4158425331115723
    3. 'C' → logprob: -2.7908425331115723
    4. '           ' → logprob: -6.790842533111572
    5. '       ' → logprob: -8.165842056274414
    6. ':
' → logprob: -8.665842056274414
    7. '   ' → logprob: -9.540842056274414
    8. ':' → logprob: -9.540842056274414
    9. '              ' → logprob: -9.915842056274414
    10. '                   ' → logprob: -9.915842056274414

Token 254: '               ' (ID: 506)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.09333255887031555
    2. ' C' → logprob: -2.968332529067993
    3. '               ' → logprob: -3.343332529067993
    4. '   ' → logprob: -6.468332767486572
    5. '           ' → logprob: -8.593332290649414
    6. '       ' → logprob: -8.968332290649414
    7. ' ' → logprob: -8.968332290649414
    8. '	C' → logprob: -9.218332290649414
    9. '              ' → logprob: -9.468332290649414
    10. '                ' → logprob: -9.718332290649414

Token 255: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.0002912486088462174
    2. ' C' → logprob: -8.625290870666504
    3. '   ' → logprob: -9.500290870666504
    4. '               ' → logprob: -10.625290870666504
    5. '                   ' → logprob: -13.000290870666504
    6. '       ' → logprob: -13.125290870666504
    7. ' ' → logprob: -13.125290870666504
    8. '	C' → logprob: -13.375290870666504
    9. '           ' → logprob: -13.500290870666504
    10. '```' → logprob: -14.125290870666504

Token 256: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -7.465036105713807e-06
    2. '+' → logprob: -12.125007629394531
    3. ' +=' → logprob: -13.625007629394531
    4. ']+=' → logprob: -14.375007629394531
    5. '```' → logprob: -17.12500762939453
    6. '+="' → logprob: -17.50000762939453
    7. '   ' → logprob: -18.00000762939453
    8. '+
' → logprob: -18.00000762939453
    9. '+=(' → logprob: -18.12500762939453
    10. '+='' → logprob: -18.12500762939453

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.37504005432129
    4. '```' → logprob: -18.12504005432129
    5. '
' → logprob: -18.62504005432129
    6. '0' → logprob: -19.00004005432129
    7. '１' → logprob: -20.25004005432129
    8. ' 
' → logprob: -20.37504005432129
    9. '  ' → logprob: -20.50004005432129
    10. '	' → logprob: -20.62504005432129

Token 258: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002248746110126376
    2. ' ' → logprob: -6.252248764038086
    3. '               ' → logprob: -8.752248764038086
    4. '0' → logprob: -8.877248764038086
    5. '-' → logprob: -11.877248764038086
    6. '           ' → logprob: -12.252248764038086
    7. '```' → logprob: -12.502248764038086
    8. '   ' → logprob: -13.252248764038086
    9. '                   ' → logprob: -13.252248764038086
    10. '       ' → logprob: -13.877248764038086

Token 259: '               ' (ID: 506)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16208012402057648
    2. '               ' → logprob: -1.91208016872406
    3. '0' → logprob: -6.66208028793335
    4. '```' → logprob: -8.037079811096191
    5. '              ' → logprob: -10.037079811096191
    6. '
' → logprob: -10.037079811096191
    7. '-' → logprob: -10.162079811096191
    8. '           ' → logprob: -10.287079811096191
    9. ' ' → logprob: -10.662079811096191
    10. '+' → logprob: -11.162079811096191

Token 260: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.00023119196703191847
    2. ' B' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.25023078918457
    4. '```' → logprob: -16.25023078918457
    5. '-' → logprob: -16.50023078918457
    6. '<|end|>' → logprob: -16.87523078918457
    7. 'b' → logprob: -17.00023078918457
    8. '	B' → logprob: -17.12523078918457
    9. ' ' → logprob: -17.50023078918457
    10. '>B' → logprob: -17.87523078918457

Token 261: '-=' (ID: 77519)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03805044665932655
    2. '-=' → logprob: -3.288050413131714
    3. '+=' → logprob: -13.038050651550293
    4. '```' → logprob: -13.163050651550293
    5. '1' → logprob: -13.288050651550293
    6. ' -' → logprob: -13.788050651550293
    7. ' -=' → logprob: -14.038050651550293
    8. '   ' → logprob: -14.163050651550293
    9. '-
' → logprob: -15.538050651550293
    10. '−' → logprob: -16.163049697875977

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '-' → logprob: -17.875003814697266
    4. '   ' → logprob: -18.250003814697266
    5. 'C' → logprob: -19.125003814697266
    6. '0' → logprob: -19.250003814697266
    7. '+' → logprob: -19.312503814697266
    8. 'int' → logprob: -19.312503814697266
    9. '=' → logprob: -19.750003814697266
    10. '[' → logprob: -19.937503814697266

Token 263: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00033403540146537125
    2. '           ' → logprob: -8.875333786010742
    3. '       ' → logprob: -9.000333786010742
    4. '              ' → logprob: -10.750333786010742
    5. '   ' → logprob: -11.000333786010742
    6. '
' → logprob: -11.875333786010742
    7. '                
' → logprob: -12.500333786010742
    8. '             ' → logprob: -12.625333786010742
    9. '```' → logprob: -12.625333786010742
    10. '<|end|>' → logprob: -12.750333786010742

Token 264: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002796199405565858
    2. 'C' → logprob: -6.127796173095703
    3. ' C' → logprob: -8.377796173095703
    4. '   ' → logprob: -8.502796173095703
    5. '              ' → logprob: -10.002796173095703
    6. '```' → logprob: -10.127796173095703
    7. '           ' → logprob: -10.377796173095703
    8. '       ' → logprob: -11.252796173095703
    9. ' ' → logprob: -11.252796173095703
    10. 'A' → logprob: -11.377796173095703

Token 265: ' AN' (ID: 3473)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004983032122254372
    2. 'C' → logprob: -5.754982948303223
    3. 'ANS' → logprob: -6.379982948303223
    4. 'AN' (adapté à ' AN') → logprob: -10.379982948303223
    5. '"B' → logprob: -10.379982948303223
    6. ' B' → logprob: -11.129982948303223
    7. 'ans' → logprob: -11.754982948303223
    8. 'A' → logprob: -12.254982948303223
    9. '   ' → logprob: -12.504982948303223
    10. 'Ans' → logprob: -12.629982948303223

Token 266: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.4034345187828876e-05
    2. '.append' → logprob: -11.00002384185791
    3. 'append' → logprob: -13.62502384185791
    4. '[' → logprob: -13.75002384185791
    5. '```' → logprob: -13.87502384185791
    6. '[]' → logprob: -15.12502384185791
    7. '           ' → logprob: -15.25002384185791
    8. 'swer' → logprob: -15.25002384185791
    9. 'SOR' → logprob: -15.50002384185791
    10. 'Ans' → logprob: -15.68752384185791

Token 267: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.5107177862082608e-05
    2. '.' → logprob: -10.625024795532227
    3. ' .' → logprob: -15.250024795532227
    4. '.extend' → logprob: -15.625024795532227
    5. 'append' → logprob: -15.625024795532227
    6. '.app' → logprob: -16.125024795532227
    7. '```' → logprob: -17.500024795532227
    8. ').' → logprob: -18.375024795532227
    9. '.Append' → logprob: -19.000024795532227
    10. '].' → logprob: -19.125024795532227

Token 268: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0016426921356469393
    2. '(' → logprob: -7.00164270401001
    3. '("("' → logprob: -7.25164270401001
    4. '('' → logprob: -11.251642227172852
    5. '(
' → logprob: -12.251642227172852
    6. '"C' → logprob: -13.251642227172852
    7. '"' → logprob: -13.501642227172852
    8. '("")' → logprob: -14.876642227172852
    9. '(C' → logprob: -15.626642227172852
    10. '("(' → logprob: -16.37664222717285

Token 269: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -3.643152740551159e-05
    2. ''C' → logprob: -10.500036239624023
    3. '"C' → logprob: -12.750036239624023
    4. 'B' → logprob: -13.000036239624023
    5. ' C' → logprob: -13.375036239624023
    6. '"' → logprob: -14.875036239624023
    7. ''' → logprob: -14.875036239624023
    8. ')' → logprob: -15.375036239624023
    9. ' ' → logprob: -15.500036239624023
    10. 'c' → logprob: -15.625036239624023

Token 270: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06701517105102539
    2. ')
' → logprob: -3.4420151710510254
    3. '")' → logprob: -3.4420151710510254
    4. '")
' → logprob: -8.317014694213867
    5. '       ' → logprob: -8.692014694213867
    6. '')' → logprob: -9.192014694213867
    7. '   ' → logprob: -9.317014694213867
    8. '```' → logprob: -9.317014694213867
    9. ' )' → logprob: -10.442014694213867
    10. '           ' → logprob: -10.692014694213867

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018829426262527704
    2. 'elif' → logprob: -7.001883029937744
    3. '```' → logprob: -7.126883029937744
    4. ' elif' → logprob: -8.751882553100586
    5. 'else' → logprob: -12.001882553100586
    6. ' else' → logprob: -14.001882553100586
    7. '       ' → logprob: -14.376882553100586
    8. '``' → logprob: -14.751882553100586
    9. '    
' → logprob: -14.876882553100586
    10. ' ' → logprob: -15.001882553100586

Token 272: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2512032985687256
    2. 'elif' → logprob: -1.7512032985687256
    3. 'else' (adapté à ' else') → logprob: -3.2512032985687256
    4. ' elif' → logprob: -5.001203536987305
    5. ' else' → logprob: -6.126203536987305
    6. ' ' → logprob: -7.876203536987305
    7. '```' → logprob: -7.876203536987305
    8. '    
' → logprob: -9.251203536987305
    9. 'el' → logprob: -11.376203536987305
    10. '  ' → logprob: -11.626203536987305

Token 273: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005053721833974123
    2. ' :' → logprob: -5.755053520202637
    3. ':
' → logprob: -6.505053520202637
    4. ' ==' → logprob: -9.005053520202637
    5. '==' → logprob: -9.130053520202637
    6. '   ' → logprob: -9.380053520202637
    7. ' if' → logprob: -11.130053520202637
    8. ' :
' → logprob: -11.380053520202637
    9. 's' → logprob: -11.755053520202637
    10. 'if' → logprob: -11.880053520202637

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035726502537727356
    2. '   ' → logprob: -3.910726547241211
    3. ' if' → logprob: -4.910726547241211
    4. 'if' → logprob: -5.035726547241211
    5. '    ' → logprob: -7.660726547241211
    6. 'C' → logprob: -8.785726547241211
    7. '           ' → logprob: -8.910726547241211
    8. ' ' → logprob: -9.035726547241211
    9. ' C' → logprob: -9.785726547241211
    10. 'A' → logprob: -9.785726547241211

Token 275: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.056158747524023056
    2. '   ' → logprob: -2.9311587810516357
    3. ' if' → logprob: -6.931158542633057
    4. 'A' → logprob: -8.681159019470215
    5. 'C' → logprob: -9.556159019470215
    6. '       ' → logprob: -10.181159019470215
    7. ' ' → logprob: -12.181159019470215
    8. '  ' → logprob: -12.556159019470215
    9. '	if' → logprob: -12.556159019470215
    10. '#' → logprob: -13.056159019470215

Token 276: ' A' (ID: 355)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.021174095571041107
    2. ' min' → logprob: -4.14617395401001
    3. 'A' → logprob: -5.39617395401001
    4. 'C' → logprob: -7.89617395401001
    5. 'B' → logprob: -9.271174430847168
    6. ' A' → logprob: -9.396174430847168
    7. 'max' → logprob: -10.896174430847168
    8. ' C' → logprob: -12.146174430847168
    9. ' ' → logprob: -12.396174430847168
    10. '   ' → logprob: -12.521174430847168

Token 277: '==' (ID: 560)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3697577714920044
    2. '==' → logprob: -1.4947577714920044
    3. '>=' → logprob: -2.869757652282715
    4. '+=' → logprob: -4.244757652282715
    5. ' >' → logprob: -4.744757652282715
    6. '+' → logprob: -5.869757652282715
    7. '<' → logprob: -7.494757652282715
    8. ' ==' → logprob: -7.744757652282715
    9. '!=' → logprob: -7.994757652282715
    10. '<=' → logprob: -7.994757652282715

Token 278: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -4.978233846486546e-05
    2. 'B' → logprob: -10.125049591064453
    3. ' C' → logprob: -11.625049591064453
    4. ' ' → logprob: -14.750049591064453
    5. '   ' → logprob: -15.500049591064453
    6. '  ' → logprob: -16.625049591064453
    7. '<|end|>' → logprob: -17.750049591064453
    8. '	C' → logprob: -18.250049591064453
    9. '    ' → logprob: -18.375049591064453
    10. '```' → logprob: -18.875049591064453

Token 279: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00022165567497722805
    2. ' ==' → logprob: -8.500221252441406
    3. '==
' → logprob: -11.125221252441406
    4. '=' → logprob: -14.125221252441406
    5. ']==' → logprob: -14.125221252441406
    6. ')==' → logprob: -14.750221252441406
    7. '```' → logprob: -14.750221252441406
    8. '==-' → logprob: -14.750221252441406
    9. '===' → logprob: -15.125221252441406
    10. '()==' → logprob: -15.625221252441406

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. '0' → logprob: -14.625001907348633
    4. '   ' → logprob: -19.375001907348633
    5. '```' → logprob: -19.750001907348633
    6. '2' → logprob: -19.875001907348633
    7. '<|end|>' → logprob: -19.875001907348633
    8. 'C' → logprob: -20.000001907348633
    9. '=' → logprob: -20.625001907348633
    10. '１' → logprob: -21.125001907348633

Token 281: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7326818704605103
    2. ':
' → logprob: -0.7326818704605103
    3. ' and' → logprob: -3.6076817512512207
    4. '       ' → logprob: -4.482681751251221
    5. 'and' → logprob: -9.107682228088379
    6. '           ' → logprob: -9.357682228088379
    7. '<|end|>' → logprob: -10.482682228088379
    8. ',' → logprob: -10.982682228088379
    9. '        ' → logprob: -11.107682228088379
    10. '   ' → logprob: -11.107682228088379

Token 282: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.42981863021850586
    2. 'i' → logprob: -1.0548186302185059
    3. '   ' → logprob: -6.804818630218506
    4. '	i' → logprob: -12.429819107055664
    5. ' ' → logprob: -13.804819107055664
    6. '    ' → logprob: -13.929819107055664
    7. '  ' → logprob: -14.054819107055664
    8. '(i' → logprob: -14.429819107055664
    9. '       ' → logprob: -15.054819107055664
    10. '     ' → logprob: -15.304819107055664

Token 283: '<N' (ID: 60262)
  Prédit: '<N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<N' → logprob: -0.00011307948443572968
    2. '<' → logprob: -9.250113487243652
    3. ' <' → logprob: -11.125113487243652
    4. '<n' → logprob: -13.500113487243652
    5. '<C' → logprob: -14.500113487243652
    6. 'N' → logprob: -16.000112533569336
    7. '<len' → logprob: -16.250112533569336
    8. '==' → logprob: -16.750112533569336
    9. '<
' → logprob: -18.000112533569336
    10. ' ' → logprob: -18.000112533569336

Token 284: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.512236498361744e-07
    2. ' -' → logprob: -14.875000953674316
    3. '```' → logprob: -17.25
    4. '   ' → logprob: -17.375
    5. '-
' → logprob: -17.375
    6. '...' → logprob: -18.625
    7. '<' → logprob: -18.875
    8. '+' → logprob: -19.5
    9. ' ' → logprob: -19.5
    10. '       ' → logprob: -19.625

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.875003814697266
    3. '-' → logprob: -13.625003814697266
    4. '   ' → logprob: -17.000003814697266
    5. '```' → logprob: -17.000003814697266
    6. '2' → logprob: -17.875003814697266
    7. '...' → logprob: -18.625003814697266
    8. '
' → logprob: -19.062503814697266
    9. '  ' → logprob: -19.562503814697266
    10. '+' → logprob: -19.625003814697266

Token 286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11676595360040665
    2. ':
' → logprob: -2.3667659759521484
    3. '       ' → logprob: -4.366765975952148
    4. '           ' → logprob: -5.616765975952148
    5. '```' → logprob: -9.991765975952148
    6. '               ' → logprob: -11.741765975952148
    7. '<|end|>' → logprob: -12.116765975952148
    8. ' and' → logprob: -12.241765975952148
    9. '   ' → logprob: -12.241765975952148
    10. ',' → logprob: -12.366765975952148

Token 287: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35207444429397583
    2. '       ' → logprob: -1.227074384689331
    3. 'if' → logprob: -6.72707462310791
    4. '<|end|>' → logprob: -6.72707462310791
    5. '```' → logprob: -7.97707462310791
    6. '               ' → logprob: -7.97707462310791
    7. ' if' → logprob: -8.72707462310791
    8. '   ' → logprob: -8.97707462310791
    9. '#' → logprob: -9.72707462310791
    10. ' ' → logprob: -10.35207462310791

Token 288: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007188319228589535
    2. 'if' (adapté à ' if') → logprob: -5.007188320159912
    3. '       ' → logprob: -8.257187843322754
    4. ' if' → logprob: -9.382187843322754
    5. '               ' → logprob: -9.507187843322754
    6. '```' → logprob: -10.757187843322754
    7. '<|end|>' → logprob: -11.382187843322754
    8. '          ' → logprob: -11.632187843322754
    9. '		' → logprob: -12.507187843322754
    10. '   ' → logprob: -12.507187843322754

Token 289: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10021486133337021
    2. ' S' → logprob: -2.350214958190918
    3. '   ' → logprob: -12.600214958190918
    4. ' ' → logprob: -12.600214958190918
    5. '  ' → logprob: -15.225214958190918
    6. '    ' → logprob: -15.350214958190918
    7. '	S' → logprob: -15.725214958190918
    8. 'input' → logprob: -15.975214958190918
    9. 's' → logprob: -16.2252140045166
    10. '           ' → logprob: -16.3502140045166

Token 290: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -16.5
    3. 'i' → logprob: -16.625
    4. '[I' → logprob: -17.25
    5. '```' → logprob: -17.75
    6. '[' → logprob: -18.375
    7. ' [' → logprob: -18.75
    8. '[next' → logprob: -20.25
    9. '           ' → logprob: -20.5
    10. '(i' → logprob: -20.875

Token 291: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0076234228909015656
    2. '[i' → logprob: -4.882623195648193
    3. '+i' → logprob: -11.132623672485352
    4. ' +' → logprob: -13.882623672485352
    5. '+
' → logprob: -15.007623672485352
    6. '[' → logprob: -15.132623672485352
    7. 'i' → logprob: -15.757623672485352
    8. '[N' → logprob: -15.757623672485352
    9. '-' → logprob: -15.882623672485352
    10. '[I' → logprob: -16.25762367248535

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076081594452261925
    2. '+' → logprob: -4.882607936859131
    3. ' ' → logprob: -13.507608413696289
    4. '```' → logprob: -15.382608413696289
    5. '0' → logprob: -16.13260841369629
    6. '-' → logprob: -16.38260841369629
    7. '...' → logprob: -17.00760841369629
    8. '   ' → logprob: -17.00760841369629
    9. 'N' → logprob: -17.13260841369629
    10. '2' → logprob: -17.63260841369629

Token 293: ']=="' (ID: 164578)
  Prédit: '=="'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=="' → logprob: -0.00010533124441280961
    2. '==' → logprob: -9.750104904174805
    3. ']=="' → logprob: -10.125104904174805
    4. ' ==' → logprob: -13.500104904174805
    5. '==
' → logprob: -13.625104904174805
    6. '()=="' → logprob: -13.875104904174805
    7. ' =="' → logprob: -13.875104904174805
    8. '=='' → logprob: -14.125104904174805
    9. '==="' → logprob: -14.625104904174805
    10. '="' → logprob: -14.875104904174805

Token 294: 'AB' (ID: 2912)
  Prédit: 'AB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.07974706590175629
    2. 'AC' → logprob: -2.579746961593628
    3. 'BC' → logprob: -7.079747200012207
    4. '"' → logprob: -12.579747200012207
    5. 'A' → logprob: -12.704747200012207
    6. ' AB' → logprob: -13.204747200012207
    7. 'BA' → logprob: -13.704747200012207
    8. 'ABC' → logprob: -13.829747200012207
    9. 'B' → logprob: -13.954747200012207
    10. ' AC' → logprob: -14.079747200012207

Token 295: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.5418199300765991
    2. '":
' → logprob: -1.1668199300765991
    3. ':
' → logprob: -2.7918200492858887
    4. '               ' → logprob: -3.6668200492858887
    5. ':' → logprob: -4.416820049285889
    6. '"' → logprob: -5.041820049285889
    7. '```' → logprob: -7.916820049285889
    8. '":
' → logprob: -8.41681957244873
    9. '):
' → logprob: -8.54181957244873
    10. '"):
' → logprob: -9.04181957244873

Token 296: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00023810577113181353
    2. 'C' → logprob: -9.250238418579102
    3. '```' → logprob: -10.000238418579102
    4. 'A' → logprob: -10.500238418579102
    5. '           ' → logprob: -10.625238418579102
    6. '<|end|>' → logprob: -11.250238418579102
    7. ' C' → logprob: -11.750238418579102
    8. '                
' → logprob: -12.000238418579102
    9. '              ' → logprob: -12.125238418579102
    10. '                   ' → logprob: -12.875238418579102

Token 297: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0017869214061647654
    2. 'C' → logprob: -6.751786708831787
    3. '               ' → logprob: -8.251787185668945
    4. ' A' → logprob: -8.751787185668945
    5. '                   ' → logprob: -9.251787185668945
    6. '           ' → logprob: -9.376787185668945
    7. 'B' → logprob: -12.126787185668945
    8. '   ' → logprob: -12.251787185668945
    9. '
' → logprob: -12.876787185668945
    10. '```' → logprob: -13.626787185668945

Token 298: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00023798657639417797
    2. ' +=' → logprob: -8.875238418579102
    3. ']+=' → logprob: -9.500238418579102
    4. '+' → logprob: -10.875238418579102
    5. '+
' → logprob: -13.750238418579102
    6. '```' → logprob: -13.875238418579102
    7. '
' → logprob: -14.875238418579102
    8. '   ' → logprob: -15.250238418579102
    9. '+='' → logprob: -15.250238418579102
    10. '+="' → logprob: -15.375238418579102

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '0' → logprob: -18.125
    4. '```' → logprob: -19.0
    5. '   ' → logprob: -19.5
    6. '
' → logprob: -20.25
    7. '<|end|>' → logprob: -20.25
    8. '2' → logprob: -20.5
    9. '１' → logprob: -21.25
    10. '-' → logprob: -21.5

Token 300: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008632888086140156
    2. '                
' → logprob: -5.008632659912109
    3. '<|end|>' → logprob: -6.508632659912109
    4. '
' → logprob: -8.50863265991211
    5. '```' → logprob: -10.00863265991211
    6. '            
' → logprob: -10.25863265991211
    7. '\
' → logprob: -10.38363265991211
    8. '           ' → logprob: -10.75863265991211
    9. '  
' → logprob: -11.00863265991211
    10. '               
' → logprob: -11.38363265991211

Token 301: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000261216628132388
    2. '                
' → logprob: -8.625261306762695
    3. '
' → logprob: -10.875261306762695
    4. '<|end|>' → logprob: -10.875261306762695
    5. '           ' → logprob: -11.375261306762695
    6. '```' → logprob: -11.875261306762695
    7. '              ' → logprob: -12.125261306762695
    8. '\
' → logprob: -12.500261306762695
    9. 'C' → logprob: -12.500261306762695
    10. '               
' → logprob: -12.750261306762695

Token 302: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.018228257074952126
    2. ' C' → logprob: -4.018228054046631
    3. '               ' → logprob: -9.518228530883789
    4. '           ' → logprob: -12.893228530883789
    5. '   ' → logprob: -13.768228530883789
    6. '                   ' → logprob: -15.143228530883789
    7. '       ' → logprob: -15.268228530883789
    8. ' ' → logprob: -15.768228530883789
    9. '
' → logprob: -16.14322853088379
    10. '	C' → logprob: -16.51822853088379

Token 303: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.001518907374702394
    2. '-' → logprob: -6.501518726348877
    3. ' -=' → logprob: -11.751519203186035
    4. '```' → logprob: -12.126519203186035
    5. '+=' → logprob: -13.001519203186035
    6. '               ' → logprob: -15.376519203186035
    7. ')-' → logprob: -15.751519203186035
    8. '                   ' → logprob: -16.37651824951172
    9. '   ' → logprob: -16.62651824951172
    10. '
' → logprob: -16.75151824951172

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '<|end|>' → logprob: -18.0
    4. '<|end|>' → logprob: -20.875
    5. '```' → logprob: -21.125
    6. '１' → logprob: -21.625
    7. '   ' → logprob: -21.75
    8. '=' → logprob: -21.75
    9. '-' → logprob: -21.875
    10. '...' → logprob: -22.0

Token 305: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000805341056548059
    2. '                
' → logprob: -7.750805377960205
    3. '
' → logprob: -8.125804901123047
    4. '<|end|>' → logprob: -10.500804901123047
    5. '```' → logprob: -11.250804901123047
    6. '           ' → logprob: -11.250804901123047
    7. '              ' → logprob: -12.375804901123047
    8. '\
' → logprob: -12.500804901123047
    9. '               
' → logprob: -12.625804901123047
    10. '            
' → logprob: -13.000804901123047

Token 306: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.349075556499884e-05
    2. '
' → logprob: -10.6250638961792
    3. '                
' → logprob: -10.7500638961792
    4. '           ' → logprob: -11.8750638961792
    5. '```' → logprob: -12.8750638961792
    6. '              ' → logprob: -13.0000638961792
    7. '\
' → logprob: -13.2500638961792
    8. '			' → logprob: -13.5000638961792
    9. '<|end|>' → logprob: -14.1250638961792
    10. '                   ' → logprob: -14.5000638961792

Token 307: ' AN' (ID: 3473)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2701275050640106
    2. 'ANS' → logprob: -1.520127534866333
    3. ' AN' → logprob: -4.395127296447754
    4. '           ' → logprob: -6.020127296447754
    5. 'AN' (adapté à ' AN') → logprob: -6.645127296447754
    6. '   ' → logprob: -7.395127296447754
    7. '       ' → logprob: -7.645127296447754
    8. '
' → logprob: -8.020127296447754
    9. '                   ' → logprob: -8.520127296447754
    10. '              ' → logprob: -9.395127296447754

Token 308: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.3856492842023727e-06
    2. '.append' → logprob: -14.625000953674316
    3. 'SOR' → logprob: -15.125000953674316
    4. 'R' → logprob: -16.125001907348633
    5. 'SR' → logprob: -16.250001907348633
    6. 'append' → logprob: -16.375001907348633
    7. '[' → logprob: -16.625001907348633
    8. 'ANS' → logprob: -16.625001907348633
    9. 'Ans' → logprob: -17.000001907348633
    10. 'SL' → logprob: -17.625001907348633

Token 309: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00014358828775584698
    2. '.' → logprob: -8.875144004821777
    3. '.app' → logprob: -13.250144004821777
    4. ' .' → logprob: -13.500144004821777
    5. '.ap' → logprob: -15.875144004821777
    6. '.extend' → logprob: -15.875144004821777
    7. '.Append' → logprob: -15.875144004821777
    8. 'append' → logprob: -16.62514305114746
    9. '.setdefault' → logprob: -17.12514305114746
    10. 'Append' → logprob: -18.37514305114746

Token 310: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.125017166137695
    3. '"A' → logprob: -13.625017166137695
    4. '('' → logprob: -14.625017166137695
    5. '(
' → logprob: -15.125017166137695
    6. '"' → logprob: -15.500017166137695
    7. '("("' → logprob: -19.375017166137695
    8. '"B' → logprob: -19.500017166137695
    9. 'A' → logprob: -20.250017166137695
    10. '"O' → logprob: -20.375017166137695

Token 311: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.524203360080719
    2. '"A' → logprob: -0.899203360080719
    3. ''A' → logprob: -6.899203300476074
    4. ' A' → logprob: -10.649203300476074
    5. '"' → logprob: -11.149203300476074
    6. '`' → logprob: -12.399203300476074
    7. '"B' → logprob: -12.399203300476074
    8. '"C' → logprob: -12.899203300476074
    9. ' "' → logprob: -12.899203300476074
    10. 'B' → logprob: -13.024203300476074

Token 312: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.10098907351493835
    2. '")' → logprob: -2.3509891033172607
    3. ')
' → logprob: -8.35098934173584
    4. '           ' → logprob: -8.60098934173584
    5. '")
' → logprob: -8.60098934173584
    6. ')' → logprob: -9.47598934173584
    7. '               ' → logprob: -9.97598934173584
    8. '"' → logprob: -10.60098934173584
    9. ' ")
' → logprob: -11.22598934173584
    10. '       ' → logprob: -11.72598934173584

Token 313: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016785575076937675
    2. 'else' → logprob: -4.266785621643066
    3. '               ' → logprob: -6.516785621643066
    4. '       ' → logprob: -7.016785621643066
    5. ' else' → logprob: -8.766785621643066
    6. '```' → logprob: -10.141785621643066
    7. '\
' → logprob: -10.516785621643066
    8. '
' → logprob: -11.891785621643066
    9. 'elif' → logprob: -12.641785621643066
    10. '            
' → logprob: -13.266785621643066

Token 314: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3190957307815552
    2. '       ' → logprob: -1.9440957307815552
    3. '           ' → logprob: -2.5690956115722656
    4. ' else' → logprob: -2.9440956115722656
    5. '               ' → logprob: -7.194095611572266
    6. '   ' → logprob: -10.694095611572266
    7. '	else' → logprob: -11.444095611572266
    8. '\
' → logprob: -11.944095611572266
    9. '          ' → logprob: -12.069095611572266
    10. 'elif' → logprob: -12.319095611572266

Token 315: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026826607063412666
    2. '           ' → logprob: -6.377682685852051
    3. ':
' → logprob: -7.377682685852051
    4. ':' → logprob: -8.25268268585205
    5. '                   ' → logprob: -10.62768268585205
    6. ' C' → logprob: -11.12768268585205
    7. '              ' → logprob: -11.25268268585205
    8. '```' → logprob: -11.50268268585205
    9. '       ' → logprob: -11.75268268585205
    10. 'C' → logprob: -12.37768268585205

Token 316: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2936442494392395
    2. 'C' → logprob: -1.4186441898345947
    3. '           ' → logprob: -4.543644428253174
    4. '       ' → logprob: -6.918644428253174
    5. ' C' → logprob: -7.293644428253174
    6. '   ' → logprob: -9.918643951416016
    7. '
' → logprob: -11.168643951416016
    8. '```' → logprob: -11.418643951416016
    9. '                   ' → logprob: -11.543643951416016
    10. '              ' → logprob: -11.668643951416016

Token 317: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.0035170409828424454
    2. ' C' → logprob: -5.878517150878906
    3. '               ' → logprob: -7.378517150878906
    4. '   ' → logprob: -9.503517150878906
    5. '           ' → logprob: -12.253517150878906
    6. '       ' → logprob: -12.628517150878906
    7. ' ' → logprob: -13.753517150878906
    8. '```' → logprob: -14.003517150878906
    9. '	C' → logprob: -14.503517150878906
    10. '  ' → logprob: -14.753517150878906

Token 318: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -4.11996734328568e-05
    2. ' +=' → logprob: -10.375041007995605
    3. ']+=' → logprob: -12.250041007995605
    4. '+' → logprob: -13.000041007995605
    5. '```' → logprob: -13.250041007995605
    6. '-=' → logprob: -14.875041007995605
    7. '+='' → logprob: -15.125041007995605
    8. '   ' → logprob: -15.375041007995605
    9. '+="' → logprob: -16.125041961669922
    10. '+=(' → logprob: -16.875041961669922

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -17.250003814697266
    4. '<|end|>' → logprob: -17.875003814697266
    5. '0' → logprob: -18.375003814697266
    6. '   ' → logprob: -19.500003814697266
    7. '=' → logprob: -21.375003814697266
    8. '[' → logprob: -21.500003814697266
    9. '-' → logprob: -21.625003814697266
    10. '(' → logprob: -21.750003814697266

Token 320: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008217143826186657
    2. '           ' → logprob: -6.0082173347473145
    3. '              ' → logprob: -6.1332173347473145
    4. '1' → logprob: -6.1332173347473145
    5. '                
' → logprob: -8.133216857910156
    6. '```' → logprob: -8.258216857910156
    7. '             ' → logprob: -8.883216857910156
    8. '=' → logprob: -9.383216857910156
    9. '                   ' → logprob: -9.508216857910156
    10. '               
' → logprob: -9.633216857910156

Token 321: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006428572814911604
    2. '              ' → logprob: -8.000642776489258
    3. '```' → logprob: -9.000642776489258
    4. '1' → logprob: -9.250642776489258
    5. '                
' → logprob: -10.500642776489258
    6. '           ' → logprob: -10.500642776489258
    7. '
' → logprob: -11.500642776489258
    8. '             ' → logprob: -12.875642776489258
    9. '``' → logprob: -12.875642776489258
    10. '               
' → logprob: -13.000642776489258

Token 322: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.00016516048344783485
    2. ' A' → logprob: -9.125164985656738
    3. 'C' → logprob: -10.125164985656738
    4. '1' → logprob: -11.125164985656738
    5. '0' → logprob: -13.750164985656738
    6. '   ' → logprob: -16.000165939331055
    7. 'B' → logprob: -16.500165939331055
    8. '```' → logprob: -17.125165939331055
    9. ' ' → logprob: -17.500165939331055
    10. 'python' → logprob: -17.750165939331055

Token 323: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.005258779972791672
    2. '-' → logprob: -5.255258560180664
    3. ' -=' → logprob: -11.005258560180664
    4. '```' → logprob: -11.880258560180664
    5. '   ' → logprob: -14.630258560180664
    6. '	' → logprob: -15.380258560180664
    7. '+=' → logprob: -15.630258560180664
    8. '               ' → logprob: -16.005258560180664
    9. '  ' → logprob: -16.380258560180664
    10. '                   ' → logprob: -16.630258560180664

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -18.250001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '１' → logprob: -20.500001907348633
    6. '-' → logprob: -21.000001907348633
    7. '
' → logprob: -21.125001907348633
    8. '' → logprob: -21.250001907348633
    9. '0' → logprob: -21.250001907348633
    10. '	' → logprob: -21.812501907348633

Token 325: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.995397365652025e-05
    2. '
' → logprob: -11.000089645385742
    3. '                
' → logprob: -11.000089645385742
    4. '			' → logprob: -11.250089645385742
    5. '<|end|>' → logprob: -11.250089645385742
    6. '              ' → logprob: -11.500089645385742
    7. '```' → logprob: -11.625089645385742
    8. '           ' → logprob: -12.625089645385742
    9. '``' → logprob: -13.750089645385742
    10. '\' → logprob: -13.750089645385742

Token 326: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.613945101387799e-05
    2. '			' → logprob: -10.500085830688477
    3. '              ' → logprob: -11.000085830688477
    4. '           ' → logprob: -11.250085830688477
    5. '	' → logprob: -12.250085830688477
    6. '                
' → logprob: -12.500085830688477
    7. '       ' → logprob: -13.000085830688477
    8. '   ' → logprob: -13.125085830688477
    9. ' AN' → logprob: -13.375085830688477
    10. ' ' → logprob: -13.625085830688477

Token 327: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.004548084456473589
    2. 'C' → logprob: -6.129548072814941
    3. 'AN' (adapté à ' AN') → logprob: -6.129548072814941
    4. ' AN' → logprob: -8.879548072814941
    5. 'S' → logprob: -10.754548072814941
    6. ' C' → logprob: -11.379548072814941
    7. 'ans' → logprob: -12.629548072814941
    8. ' ' → logprob: -13.379548072814941
    9. 'ANSWER' → logprob: -13.379548072814941
    10. '"' → logprob: -13.504548072814941

Token 328: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.9153885558771435e-06
    2. '```' → logprob: -14.125005722045898
    3. '[' → logprob: -14.250005722045898
    4. ' S' → logprob: -14.625005722045898
    5. '
' → logprob: -15.375005722045898
    6. '           ' → logprob: -15.500005722045898
    7. 'SOR' → logprob: -15.562505722045898
    8. '`' → logprob: -15.562505722045898
    9. '...' → logprob: -15.625005722045898
    10. '[
' → logprob: -15.812505722045898

Token 329: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004779784067068249
    2. '.' → logprob: -7.7504777908325195
    3. ' .' → logprob: -10.50047779083252
    4. '.app' → logprob: -11.37547779083252
    5. '.extend' → logprob: -12.12547779083252
    6. '.ap' → logprob: -13.75047779083252
    7. 'append' → logprob: -14.87547779083252
    8. '.Append' → logprob: -15.00047779083252
    9. '.setdefault' → logprob: -15.25047779083252
    10. '.push' → logprob: -15.37547779083252

Token 330: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.000499297515489161
    2. '(' → logprob: -7.625499248504639
    3. '('' → logprob: -12.375499725341797
    4. '("("' → logprob: -12.500499725341797
    5. '(
' → logprob: -12.750499725341797
    6. '("")' → logprob: -15.875499725341797
    7. '"' → logprob: -16.125499725341797
    8. ' ("' → logprob: -16.625499725341797
    9. '("
' → logprob: -17.000499725341797
    10. '()' → logprob: -17.625499725341797

Token 331: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0019382734317332506
    2. ''C' → logprob: -6.376938343048096
    3. '"C' → logprob: -8.376937866210938
    4. ''' → logprob: -12.501937866210938
    5. ' C' → logprob: -13.626937866210938
    6. '"' → logprob: -15.251937866210938
    7. '>C' → logprob: -15.501937866210938
    8. '```' → logprob: -15.751937866210938
    9. '`' → logprob: -16.001937866210938
    10. ')' → logprob: -16.376937866210938

Token 332: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5814968347549438
    2. '")' → logprob: -0.8314968347549438
    3. ')
' → logprob: -5.581496715545654
    4. '       ' → logprob: -6.956496715545654
    5. '")
' → logprob: -7.456496715545654
    6. '           ' → logprob: -8.831497192382812
    7. '   ' → logprob: -9.831497192382812
    8. ' )' → logprob: -11.706497192382812
    9. '```' → logprob: -12.206497192382812
    10. '`)' → logprob: -12.206497192382812

Token 333: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6933867931365967
    2. '       ' → logprob: -0.6933867931365967
    3. 'else' → logprob: -8.943387031555176
    4. '           ' → logprob: -9.443387031555176
    5. '```' → logprob: -11.818387031555176
    6. ' else' → logprob: -11.943387031555176
    7. '	' → logprob: -12.193387031555176
    8. '	else' → logprob: -12.693387031555176
    9. 'elif' → logprob: -13.193387031555176
    10. '               ' → logprob: -13.818387031555176

Token 334: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026714403182268143
    2. 'else' (adapté à ' else') → logprob: -3.776714324951172
    3. '       ' → logprob: -5.901714324951172
    4. ' else' → logprob: -7.276714324951172
    5. '           ' → logprob: -10.526714324951172
    6. 'elif' → logprob: -12.151714324951172
    7. '```' → logprob: -13.026714324951172
    8. '	else' → logprob: -13.651714324951172
    9. ' ' → logprob: -15.026714324951172
    10. '  ' → logprob: -15.526714324951172

Token 335: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3226403295993805
    2. ':
' → logprob: -1.572640299797058
    3. '           ' → logprob: -2.6976404190063477
    4. '       ' → logprob: -7.072640419006348
    5. '```' → logprob: -10.197640419006348
    6. 'if' → logprob: -12.197640419006348
    7. '          ' → logprob: -12.947640419006348
    8. '               ' → logprob: -12.947640419006348
    9. '         ' → logprob: -13.322640419006348
    10. '        ' → logprob: -13.447640419006348

Token 336: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4889363944530487
    2. '       ' → logprob: -0.9889364242553711
    3. 'if' → logprob: -4.238936424255371
    4. '```' → logprob: -8.613936424255371
    5. ' if' → logprob: -8.988936424255371
    6. '        ' → logprob: -11.988936424255371
    7. '   ' → logprob: -12.488936424255371
    8. '          ' → logprob: -12.863936424255371
    9. '               ' → logprob: -12.988936424255371
    10. '         ' → logprob: -13.113936424255371

Token 337: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07941734790802002
    2. '           ' → logprob: -2.5794172286987305
    3. ' if' → logprob: -7.5794172286987305
    4. '```' → logprob: -11.32941722869873
    5. '       ' → logprob: -13.07941722869873
    6. 'If' → logprob: -14.20441722869873
    7. '               ' → logprob: -14.32941722869873
    8. '   ' → logprob: -14.57941722869873
    9. '          ' → logprob: -15.45441722869873
    10. 'python' → logprob: -16.329418182373047

Token 338: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.018166331574320793
    2. ' min' → logprob: -4.018166542053223
    3. 'A' → logprob: -11.143166542053223
    4. ' A' → logprob: -14.018166542053223
    5. '(min' → logprob: -15.018166542053223
    6. '	min' → logprob: -15.143166542053223
    7. 'max' → logprob: -15.268166542053223
    8. '   ' → logprob: -15.643166542053223
    9. '=min' → logprob: -16.893165588378906
    10. ' ' → logprob: -17.643165588378906

Token 339: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0004468772385735065
    2. '(' → logprob: -7.750446796417236
    3. '(
' → logprob: -11.625447273254395
    4. ' (' → logprob: -12.250447273254395
    5. '(C' → logprob: -13.375447273254395
    6. 'A' → logprob: -14.375447273254395
    7. '(a' → logprob: -15.750447273254395
    8. '(B' → logprob: -16.125446319580078
    9. '((' → logprob: -16.625446319580078
    10. '```' → logprob: -17.875446319580078

Token 340: ',C' (ID: 26924)
  Prédit: ',C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.4322839081287384
    2. ',A' → logprob: -1.057283878326416
    3. ',' → logprob: -6.307283878326416
    4. ',B' → logprob: -7.182283878326416
    5. '==' → logprob: -7.932283878326416
    6. ' ,' → logprob: -8.432284355163574
    7. ')==' → logprob: -8.682284355163574
    8. ',
' → logprob: -8.932284355163574
    9. ',c' → logprob: -10.682284355163574
    10. ',K' → logprob: -10.807284355163574

Token 341: ')==' (ID: 35269)
  Prédit: ')=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.0013882085913792253
    2. '==' → logprob: -6.751388072967529
    3. ')' → logprob: -8.501388549804688
    4. ']==' → logprob: -11.876388549804688
    5. '")==' → logprob: -13.001388549804688
    6. ')=' → logprob: -13.126388549804688
    7. '```' → logprob: -13.876388549804688
    8. '()==' → logprob: -14.376388549804688
    9. ')+' → logprob: -15.251388549804688
    10. ' ==' → logprob: -15.751388549804688

Token 342: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.000181372175575234
    2. ' A' → logprob: -8.625181198120117
    3. 'C' → logprob: -13.500181198120117
    4. '   ' → logprob: -15.500181198120117
    5. '	A' → logprob: -16.500181198120117
    6. '```' → logprob: -17.625181198120117
    7. 'a' → logprob: -18.375181198120117
    8. '=A' → logprob: -18.625181198120117
    9. 'B' → logprob: -19.000181198120117
    10. 'Ａ' → logprob: -19.125181198120117

Token 343: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.695588231086731
    2. ':
' → logprob: -0.695588231086731
    3. '               ' → logprob: -6.070588111877441
    4. '           ' → logprob: -9.570588111877441
    5. '```' → logprob: -10.320588111877441
    6. '):
' → logprob: -11.695588111877441
    7. '):' → logprob: -12.695588111877441
    8. '              ' → logprob: -12.945588111877441
    9. ':

' → logprob: -12.945588111877441
    10. ':
' → logprob: -13.820588111877441

Token 344: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004116076452191919
    2. '```' → logprob: -8.125411987304688
    3. '           ' → logprob: -9.375411987304688
    4. 'A' → logprob: -11.625411987304688
    5. '<|end|>' → logprob: -11.750411987304688
    6. '              ' → logprob: -12.625411987304688
    7. 'C' → logprob: -13.000411987304688
    8. ' A' → logprob: -13.125411987304688
    9. '                
' → logprob: -13.750411987304688
    10. ' C' → logprob: -14.125411987304688

Token 345: ' A' (ID: 355)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008046153001487255
    2. 'A' (adapté à ' A') → logprob: -5.0080461502075195
    3. ' A' → logprob: -7.0080461502075195
    4. '```' → logprob: -8.88304615020752
    5. '           ' → logprob: -9.00804615020752
    6. 'C' → logprob: -9.13304615020752
    7. '   ' → logprob: -10.75804615020752
    8. ' C' → logprob: -11.25804615020752
    9. '
' → logprob: -11.63304615020752
    10. '                   ' → logprob: -12.25804615020752

Token 346: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -3.702754474943504e-05
    2. ' +=' → logprob: -10.37503719329834
    3. '+' → logprob: -12.37503719329834
    4. ']+=' → logprob: -13.87503719329834
    5. '```' → logprob: -15.75003719329834
    6. '   ' → logprob: -15.87503719329834
    7. '+
' → logprob: -16.375036239624023
    8. '+="' → logprob: -16.875036239624023
    9. '       ' → logprob: -17.500036239624023
    10. '=' → logprob: -17.625036239624023

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.875019073486328
    4. '```' → logprob: -18.500019073486328
    5. '0' → logprob: -19.500019073486328
    6. '  ' → logprob: -20.000019073486328
    7. '１' → logprob: -20.500019073486328
    8. '2' → logprob: -20.937519073486328
    9. '<|end|>' → logprob: -20.937519073486328
    10. '       ' → logprob: -21.312519073486328

Token 348: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005119257839396596
    2. '
' → logprob: -8.50051212310791
    3. '<|end|>' → logprob: -8.50051212310791
    4. '                
' → logprob: -9.62551212310791
    5. '           ' → logprob: -10.87551212310791
    6. '```' → logprob: -12.12551212310791
    7. '              ' → logprob: -12.37551212310791
    8. '       ' → logprob: -12.87551212310791
    9. '\
' → logprob: -13.75051212310791
    10. '\' → logprob: -13.87551212310791

Token 349: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000526107382029295
    2. 'C' → logprob: -8.500526428222656
    3. '
' → logprob: -8.875526428222656
    4. ' C' → logprob: -9.000526428222656
    5. '       ' → logprob: -10.375526428222656
    6. '           ' → logprob: -11.125526428222656
    7. '```' → logprob: -12.375526428222656
    8. '<|end|>' → logprob: -12.750526428222656
    9. '              ' → logprob: -13.125526428222656
    10. '                
' → logprob: -13.250526428222656

Token 350: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.16022644937038422
    2. ' C' → logprob: -1.9102264642715454
    3. '               ' → logprob: -14.035226821899414
    4. ' ' → logprob: -14.160226821899414
    5. '   ' → logprob: -15.035226821899414
    6. '  ' → logprob: -15.910226821899414
    7. '```' → logprob: -15.910226821899414
    8. '
' → logprob: -16.035226821899414
    9. '           ' → logprob: -16.410226821899414
    10. '<|end|>' → logprob: -17.035226821899414

Token 351: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.07901768386363983
    2. '-' → logprob: -2.5790176391601562
    3. ' -=' → logprob: -9.329017639160156
    4. '```' → logprob: -10.454017639160156
    5. '               ' → logprob: -12.079017639160156
    6. '-
' → logprob: -14.329017639160156
    7. '                   ' → logprob: -14.454017639160156
    8. '           ' → logprob: -14.454017639160156
    9. '
' → logprob: -14.579017639160156
    10. '   ' → logprob: -14.704017639160156

Token 352: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '-' → logprob: -18.375
    4. '   ' → logprob: -19.125
    5. '```' → logprob: -19.625
    6. '<|end|>' → logprob: -20.125
    7. '' → logprob: -21.125
    8. '
' → logprob: -21.25
    9. '0' → logprob: -22.125
    10. 'def' → logprob: -22.25

Token 353: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004413975402712822
    2. '
' → logprob: -8.375441551208496
    3. '       ' → logprob: -10.000441551208496
    4. '                
' → logprob: -10.000441551208496
    5. '```' → logprob: -10.375441551208496
    6. 'ANS' → logprob: -10.625441551208496
    7. '           ' → logprob: -10.750441551208496
    8. ' AN' → logprob: -11.250441551208496
    9. 'AN' → logprob: -11.625441551208496
    10. '              ' → logprob: -12.375441551208496

Token 354: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.7610454708337784e-05
    2. '       ' → logprob: -11.000027656555176
    3. '           ' → logprob: -12.000027656555176
    4. '              ' → logprob: -13.250027656555176
    5. '```' → logprob: -14.000027656555176
    6. '   ' → logprob: -14.250027656555176
    7. '                
' → logprob: -15.250027656555176
    8. '
' → logprob: -15.250027656555176
    9. '			' → logprob: -15.500027656555176
    10. '             ' → logprob: -15.875027656555176

Token 355: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.010538602247834206
    2. ' AN' → logprob: -4.760538578033447
    3. 'AN' (adapté à ' AN') → logprob: -6.385538578033447
    4. '   ' → logprob: -8.635539054870605
    5. '               ' → logprob: -11.135539054870605
    6. '       ' → logprob: -11.135539054870605
    7. 'ANSWER' → logprob: -11.135539054870605
    8. '           ' → logprob: -12.385539054870605
    9. ' ' → logprob: -13.010539054870605
    10. 'A' → logprob: -13.135539054870605

Token 356: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -4.320199877838604e-07
    2. 'ANS' → logprob: -15.375
    3. ' S' → logprob: -17.0
    4. '```' → logprob: -17.5
    5. 'NS' → logprob: -17.75
    6. '
' → logprob: -18.125
    7. 'Ans' → logprob: -18.125
    8. '``' → logprob: -18.75
    9. 'N' → logprob: -18.875
    10. '[' → logprob: -19.125

Token 357: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.749814019713085e-06
    2. '.' → logprob: -12.000006675720215
    3. 'append' → logprob: -15.125006675720215
    4. ' .' → logprob: -15.500006675720215
    5. '.app' → logprob: -17.50000762939453
    6. '.extend' → logprob: -18.25000762939453
    7. '.Append' → logprob: -19.12500762939453
    8. '```' → logprob: -20.25000762939453
    9. '.ap' → logprob: -20.75000762939453
    10. '.add' → logprob: -20.75000762939453

Token 358: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.000689082604367286
    2. '(' → logprob: -8.000689506530762
    3. '"A' → logprob: -8.000689506530762
    4. '"' → logprob: -11.250689506530762
    5. '('' → logprob: -12.500689506530762
    6. '"B' → logprob: -14.250689506530762
    7. '(
' → logprob: -14.375689506530762
    8. '"C' → logprob: -16.375688552856445
    9. ' "' → logprob: -16.375688552856445
    10. '"I' → logprob: -17.000688552856445

Token 359: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.001850939355790615
    2. '"A' → logprob: -6.3768510818481445
    3. ''A' → logprob: -8.876851081848145
    4. ' A' → logprob: -11.876851081848145
    5. '"' → logprob: -14.251851081848145
    6. 'C' → logprob: -14.501851081848145
    7. ''' → logprob: -15.126851081848145
    8. '"C' → logprob: -15.376851081848145
    9. '	A' → logprob: -16.251850128173828
    10. 'Ａ' → logprob: -16.376850128173828

Token 360: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19060395658016205
    2. ')
' → logprob: -2.4406039714813232
    3. '           ' → logprob: -2.6906039714813232
    4. '               ' → logprob: -4.315603733062744
    5. '       ' → logprob: -5.815603733062744
    6. '")' → logprob: -6.440603733062744
    7. '")
' → logprob: -8.315604209899902
    8. '```' → logprob: -9.065604209899902
    9. 'else' → logprob: -9.440604209899902
    10. '   ' → logprob: -9.565604209899902

Token 361: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2129301130771637
    2. 'else' → logprob: -1.8379300832748413
    3. ' else' → logprob: -4.212930202484131
    4. '       ' → logprob: -4.462930202484131
    5. '               ' → logprob: -5.212930202484131
    6. '```' → logprob: -7.462930202484131
    7. '   ' → logprob: -8.587929725646973
    8. '<|end|>' → logprob: -9.837929725646973
    9. '          ' → logprob: -11.712929725646973
    10. ' ' → logprob: -12.212929725646973

Token 362: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04832342639565468
    2. ' else' → logprob: -3.298323392868042
    3. '           ' → logprob: -4.798323631286621
    4. '       ' → logprob: -6.298323631286621
    5. '               ' → logprob: -9.298323631286621
    6. '   ' → logprob: -10.548323631286621
    7. '```' → logprob: -10.798323631286621
    8. '	else' → logprob: -12.923323631286621
    9. '          ' → logprob: -14.173323631286621
    10. ' ' → logprob: -14.298323631286621

Token 363: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07171545922756195
    2. ' C' → logprob: -3.3217153549194336
    3. 'C' → logprob: -3.4467153549194336
    4. '           ' → logprob: -7.321715354919434
    5. '       ' → logprob: -9.071715354919434
    6. '   ' → logprob: -9.196715354919434
    7. '              ' → logprob: -9.321715354919434
    8. '```' → logprob: -9.571715354919434
    9. '                   ' → logprob: -9.821715354919434
    10. '                ' → logprob: -10.196715354919434

Token 364: '               ' (ID: 506)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008444602601230145
    2. ' C' → logprob: -5.383444786071777
    3. '   ' → logprob: -6.133444786071777
    4. '               ' → logprob: -6.508444786071777
    5. '       ' → logprob: -9.508444786071777
    6. '           ' → logprob: -10.258444786071777
    7. ' ' → logprob: -10.383444786071777
    8. '	C' → logprob: -11.883444786071777
    9. '```' → logprob: -12.133444786071777
    10. '  ' → logprob: -13.633444786071777

Token 365: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.00018387178715784103
    2. '   ' → logprob: -9.250184059143066
    3. ' C' → logprob: -9.375184059143066
    4. '	C' → logprob: -14.125184059143066
    5. '               ' → logprob: -14.125184059143066
    6. '```' → logprob: -14.750184059143066
    7. '
' → logprob: -14.875184059143066
    8. '       ' → logprob: -15.125184059143066
    9. '           ' → logprob: -16.25018310546875
    10. '>C' → logprob: -16.37518310546875

Token 366: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -6.630610641877865e-06
    2. '+' → logprob: -12.500006675720215
    3. ' +=' → logprob: -13.750006675720215
    4. ']+=' → logprob: -13.875006675720215
    5. '```' → logprob: -14.125006675720215
    6. '   ' → logprob: -15.875006675720215
    7. '+="' → logprob: -18.1250057220459
    8. '=' → logprob: -18.2500057220459
    9. '+=(' → logprob: -18.5000057220459
    10. '+='' → logprob: -18.6250057220459

Token 367: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -16.500001907348633
    4. '   ' → logprob: -18.375001907348633
    5. '１' → logprob: -20.125001907348633
    6. '
' → logprob: -20.625001907348633
    7. '<|end|>' → logprob: -21.500001907348633
    8. '``' → logprob: -21.625001907348633
    9. '  ' → logprob: -21.875001907348633
    10. '>' → logprob: -22.000001907348633

Token 368: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.750006675720215
    3. '               ' → logprob: -13.000006675720215
    4. '```' → logprob: -13.750006675720215
    5. '           ' → logprob: -16.1250057220459
    6. '       ' → logprob: -16.2500057220459
    7. '0' → logprob: -16.2500057220459
    8. '   ' → logprob: -16.8750057220459
    9. '                   ' → logprob: -17.3750057220459
    10. '              ' → logprob: -17.3750057220459

Token 369: '               ' (ID: 506)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '               ' → logprob: -15.250005722045898
    4. '```' → logprob: -16.6250057220459
    5. '   ' → logprob: -18.0000057220459
    6. '0' → logprob: -18.2500057220459
    7. '           ' → logprob: -19.1250057220459
    8. '１' → logprob: -19.7500057220459
    9. '                   ' → logprob: -19.8750057220459
    10. '       ' → logprob: -20.0000057220459

Token 370: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0031201988458633423
    2. '1' → logprob: -5.878120422363281
    3. 'C' → logprob: -8.753120422363281
    4. ' A' → logprob: -8.878120422363281
    5. '```' → logprob: -11.503120422363281
    6. 'B' → logprob: -12.003120422363281
    7. '   ' → logprob: -14.378120422363281
    8. '0' → logprob: -14.378120422363281
    9. ' ' → logprob: -14.878120422363281
    10. '`' → logprob: -17.12812042236328

Token 371: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.008625566959381104
    2. '-' → logprob: -4.758625507354736
    3. ' -=' → logprob: -11.633625984191895
    4. '```' → logprob: -13.258625984191895
    5. '+=' → logprob: -16.008625030517578
    6. '   ' → logprob: -16.758625030517578
    7. '-
' → logprob: -17.008625030517578
    8. ')-' → logprob: -17.258625030517578
    9. '[-' → logprob: -17.508625030517578
    10. ' -' → logprob: -17.758625030517578

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'C' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.750001907348633
    5. '```' → logprob: -17.250001907348633
    6. 'A' → logprob: -17.875001907348633
    7. '-' → logprob: -18.375001907348633
    8. '  ' → logprob: -19.000001907348633
    9. ' C' → logprob: -19.875001907348633
    10. '
' → logprob: -20.000001907348633

Token 373: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008546437602490187
    2. '              ' → logprob: -8.3758544921875
    3. '<|end|>' → logprob: -8.7508544921875
    4. '```' → logprob: -8.8758544921875
    5. '           ' → logprob: -9.2508544921875
    6. '       ' → logprob: -10.2508544921875
    7. '                ' → logprob: -10.3758544921875
    8. '             ' → logprob: -10.6258544921875
    9. '                
' → logprob: -10.6258544921875
    10. '   ' → logprob: -10.6258544921875

Token 374: '               ' (ID: 506)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.5820737481117249
    2. '               ' → logprob: -0.8320737481117249
    3. 'AN' → logprob: -5.70707368850708
    4. '           ' → logprob: -6.70707368850708
    5. '   ' → logprob: -7.20707368850708
    6. '       ' → logprob: -8.082074165344238
    7. ' AN' → logprob: -8.457074165344238
    8. 'ANSWER' → logprob: -8.957074165344238
    9. '              ' → logprob: -9.332074165344238
    10. '```' → logprob: -10.582074165344238

Token 375: ' AN' (ID: 3473)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0001093841710826382
    2. '"C' → logprob: -9.250109672546387
    3. 'ANS' → logprob: -11.500109672546387
    4. ' C' → logprob: -14.375109672546387
    5. ''C' → logprob: -14.500109672546387
    6. 'A' → logprob: -14.625109672546387
    7. '"' → logprob: -14.875109672546387
    8. 'AN' (adapté à ' AN') → logprob: -15.000109672546387
    9. 'ans' → logprob: -15.500109672546387
    10. 'c' → logprob: -16.37510871887207

Token 376: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.6100132496794686e-05
    2. '.append' → logprob: -10.250056266784668
    3. 'append' → logprob: -10.875056266784668
    4. '```' → logprob: -14.750056266784668
    5. '[' → logprob: -15.250056266784668
    6. '
' → logprob: -16.00005531311035
    7. ')' → logprob: -16.12505531311035
    8. 'Ans' → logprob: -16.37505531311035
    9. '[]' → logprob: -16.50005531311035
    10. 'ans' → logprob: -16.62505531311035

Token 377: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.13388703338569e-06
    2. '.' → logprob: -12.125009536743164
    3. ' .' → logprob: -13.375009536743164
    4. 'append' → logprob: -13.375009536743164
    5. '.app' → logprob: -15.250009536743164
    6. '.extend' → logprob: -16.375009536743164
    7. '```' → logprob: -16.375009536743164
    8. '.Append' → logprob: -17.125009536743164
    9. ').' → logprob: -17.250009536743164
    10. '_append' → logprob: -17.750009536743164

Token 378: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011751054553315043
    2. '(' → logprob: -6.7511749267578125
    3. '('' → logprob: -12.876174926757812
    4. '(
' → logprob: -13.126174926757812
    5. '("("' → logprob: -15.251174926757812
    6. '("")' → logprob: -17.376174926757812
    7. '()' → logprob: -17.501174926757812
    8. '("
' → logprob: -17.626174926757812
    9. '(""' → logprob: -17.751174926757812
    10. '("""' → logprob: -17.876174926757812

Token 379: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008885065093636513
    2. '"C' → logprob: -4.758884906768799
    3. ''C' → logprob: -8.258885383605957
    4. '"' → logprob: -12.133885383605957
    5. ' C' → logprob: -12.758885383605957
    6. '```' → logprob: -13.633885383605957
    7. ''' → logprob: -14.383885383605957
    8. '>C' → logprob: -15.133885383605957
    9. '`' → logprob: -15.258885383605957
    10. ')' → logprob: -15.633885383605957

Token 380: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0702211782336235
    2. '")' → logprob: -2.820221185684204
    3. ')
' → logprob: -4.820220947265625
    4. ')

' → logprob: -9.695220947265625
    5. '")
' → logprob: -10.695220947265625
    6. '   ' → logprob: -10.945220947265625
    7. '       ' → logprob: -11.445220947265625
    8. ' )' → logprob: -11.820220947265625
    9. '()' → logprob: -12.070220947265625
    10. ')"' → logprob: -12.070220947265625

Token 381: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7200003862380981
    2. 'print' → logprob: -0.7200003862380981
    3. 'for' → logprob: -3.7200002670288086
    4. '
' → logprob: -6.970000267028809
    5. '```' → logprob: -6.970000267028809
    6. '\n' → logprob: -8.845000267028809
    7. ' if' → logprob: -9.595000267028809
    8. '``' → logprob: -9.720000267028809
    9. '    
' → logprob: -10.470000267028809
    10. '  
' → logprob: -10.720000267028809

Token 382: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.036876335740089417
    2. ' if' → logprob: -3.9118764400482178
    3. '   ' → logprob: -4.411876201629639
    4. 'for' → logprob: -6.161876201629639
    5. '
' → logprob: -7.286876201629639
    6. 'print' → logprob: -7.661876201629639
    7. '    
' → logprob: -7.911876201629639
    8. ' 
' → logprob: -9.036876678466797
    9. ' for' → logprob: -9.411876678466797
    10. '#' → logprob: -9.786876678466797

Token 383: ' min' (ID: 1349)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.34787026047706604
    2. ' min' → logprob: -1.7228702306747437
    3. 'A' → logprob: -2.347870349884033
    4. 'min' → logprob: -3.972870349884033
    5. ' ' → logprob: -7.597870349884033
    6. ' max' → logprob: -9.222869873046875
    7. ' any' → logprob: -9.347869873046875
    8. '0' → logprob: -9.847869873046875
    9. 'max' → logprob: -9.972869873046875
    10. ' B' → logprob: -11.222869873046875

Token 384: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.007781245280057192
    2. '(' → logprob: -4.882781028747559
    3. '(
' → logprob: -9.007781028747559
    4. '((' → logprob: -11.007781028747559
    5. ' (' → logprob: -11.507781028747559
    6. '()' → logprob: -11.882781028747559
    7. '([' → logprob: -12.132781028747559
    8. 'A' → logprob: -12.757781028747559
    9. '```' → logprob: -13.257781028747559
    10. '(a' → logprob: -13.507781028747559

Token 385: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13440868258476257
    2. ',A' → logprob: -2.634408712387085
    3. ',B' → logprob: -3.009408712387085
    4. ' ,' → logprob: -6.884408473968506
    5. ')==' → logprob: -6.884408473968506
    6. ')' → logprob: -7.384408473968506
    7. '0' → logprob: -7.759408473968506
    8. 'A' → logprob: -7.884408473968506
    9. ')<=' → logprob: -7.884408473968506
    10. ',<' → logprob: -8.384408950805664

Token 386: ',C' (ID: 26924)
  Prédit: ')=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.8814533948898315
    2. ')' → logprob: -1.1314533948898315
    3. ',' → logprob: -1.6314533948898315
    4. ',C' → logprob: -3.381453514099121
    5. ')>' → logprob: -4.506453514099121
    6. ')<=' → logprob: -4.631453514099121
    7. ')<' → logprob: -5.756453514099121
    8. ' or' → logprob: -6.381453514099121
    9. ' ,' → logprob: -6.381453514099121
    10. ',A' → logprob: -6.506453514099121

Token 387: ')<' (ID: 62287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7739831209182739
    2. ')<' → logprob: -1.148983120918274
    3. ')<=' → logprob: -1.648983120918274
    4. ')==' → logprob: -3.5239830017089844
    5. ')>' → logprob: -9.398983001708984
    6. ' )' → logprob: -11.273983001708984
    7. ')>=' → logprob: -11.273983001708984
    8. '<=' → logprob: -11.523983001708984
    9. '<' → logprob: -12.148983001708984
    10. ']<=' → logprob: -12.648983001708984

Token 388: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '=' → logprob: -16.000911712646484
    4. '０' → logprob: -17.000911712646484
    5. ' ' → logprob: -18.500911712646484
    6. '۰' → logprob: -18.750911712646484
    7. '   ' → logprob: -19.250911712646484
    8. '
' → logprob: -19.375911712646484
    9. '```' → logprob: -19.750911712646484
    10. '  ' → logprob: -20.125911712646484

Token 389: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5764642357826233
    2. ':
' → logprob: -0.8264642357826233
    3. ' or' → logprob: -8.201464653015137
    4. ' :
' → logprob: -9.951464653015137
    5. '):
' → logprob: -10.076464653015137
    6. ' :' → logprob: -10.201464653015137
    7. '():
' → logprob: -10.326464653015137
    8. '   ' → logprob: -10.576464653015137
    9. ':
' → logprob: -11.201464653015137
    10. '):' → logprob: -11.201464653015137

Token 390: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2460339218378067
    2. ' print' → logprob: -1.9960339069366455
    3. '       ' → logprob: -2.6210339069366455
    4. 'print' → logprob: -4.746034145355225
    5. ' break' → logprob: -8.496033668518066
    6. '    
' → logprob: -8.871033668518066
    7. '```' → logprob: -8.996033668518066
    8. '        
' → logprob: -9.246033668518066
    9. '
' → logprob: -9.621033668518066
    10. ' ' → logprob: -9.996033668518066

Token 391: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.003216095734387636
    2. '   ' → logprob: -5.87821626663208
    3. ' print' → logprob: -8.628215789794922
    4. '       ' → logprob: -8.628215789794922
    5. '    
' → logprob: -10.753215789794922
    6. '
' → logprob: -11.628215789794922
    7. '```' → logprob: -11.878215789794922
    8. '        
' → logprob: -12.378215789794922
    9. '``' → logprob: -12.628215789794922
    10. 'break' → logprob: -12.753215789794922

Token 392: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.02115354873239994
    2. '(' → logprob: -3.896153450012207
    3. '('' → logprob: -8.271153450012207
    4. '(
' → logprob: -9.271153450012207
    5. '(No' → logprob: -9.271153450012207
    6. 'No' → logprob: -9.646153450012207
    7. '(NO' → logprob: -10.021153450012207
    8. '()' → logprob: -11.271153450012207
    9. '(-' → logprob: -11.646153450012207
    10. ' ("' → logprob: -11.896153450012207

Token 393: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.000689082604367286
    2. '"No' → logprob: -7.3756890296936035
    3. '"' → logprob: -10.750689506530762
    4. 'NO' → logprob: -10.875689506530762
    5. '-No' → logprob: -11.750689506530762
    6. 'Impossible' → logprob: -11.750689506530762
    7. ' No' → logprob: -12.625689506530762
    8. '>No' → logprob: -13.625689506530762
    9. '-' → logprob: -14.875689506530762
    10. '``' → logprob: -15.375689506530762

Token 394: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.20158447325229645
    2. '")' → logprob: -1.7015844583511353
    3. '")
' → logprob: -9.201584815979004
    4. ' ")
' → logprob: -10.451584815979004
    5. ')
' → logprob: -11.326584815979004
    6. '"' → logprob: -11.826584815979004
    7. '
' → logprob: -11.951584815979004
    8. '\n' → logprob: -12.451584815979004
    9. ' ")' → logprob: -12.701584815979004
    10. ')' → logprob: -12.951584815979004

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019298245897516608
    2. '
' → logprob: -6.376929759979248
    3. '   ' → logprob: -9.251930236816406
    4. '        
' → logprob: -9.626930236816406
    5. '    
' → logprob: -10.126930236816406
    6. '  
' → logprob: -11.251930236816406
    7. '           ' → logprob: -12.751930236816406
    8. '```' → logprob: -13.251930236816406
    9. '<|end|>' → logprob: -13.501930236816406
    10. ')' → logprob: -13.751930236816406

Token 396: ' sys' (ID: 12228)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.7172301411628723
    2. '       ' → logprob: -1.2172300815582275
    3. 'break' → logprob: -2.2172300815582275
    4. '
' → logprob: -3.4672300815582275
    5. ' exit' → logprob: -3.5922300815582275
    6. '        
' → logprob: -3.9672300815582275
    7. '   ' → logprob: -4.592230319976807
    8. ' break' → logprob: -4.592230319976807
    9. '    
' → logprob: -5.092230319976807
    10. '```' → logprob: -7.342230319976807

Token 397: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.003004327416419983
    2. 'exit' → logprob: -6.003004550933838
    3. '.stdout' → logprob: -8.75300407409668
    4. '	exit' → logprob: -9.12800407409668
    5. ' exit' → logprob: -9.25300407409668
    6. '   ' → logprob: -9.87800407409668
    7. '_exit' → logprob: -10.37800407409668
    8. '```' → logprob: -10.62800407409668
    9. '.' → logprob: -10.75300407409668
    10. 'Exit' → logprob: -11.12800407409668

Token 398: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4740844964981079
    2. '(' → logprob: -0.9740844964981079
    3. '()(' → logprob: -12.849084854125977
    4. '()
' → logprob: -13.349084854125977
    5. '()\' → logprob: -13.849084854125977
    6. '()"' → logprob: -14.724084854125977
    7. ' ()' → logprob: -14.724084854125977
    8. '();' → logprob: -15.349084854125977
    9. '()`' → logprob: -15.349084854125977
    10. '0' → logprob: -15.599084854125977

Token 399: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06425885856151581
    2. '
' → logprob: -2.8142588138580322
    3. 'for' → logprob: -6.564259052276611
    4. '    
' → logprob: -8.314258575439453
    5. ' 
' → logprob: -8.689258575439453
    6. 'else' → logprob: -8.939258575439453
    7. '  
' → logprob: -9.189258575439453
    8. 'continue' → logprob: -9.189258575439453
    9. '```' → logprob: -9.939258575439453
    10. 'if' → logprob: -10.939258575439453

Token 400: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.05869314447045326
    2. '(' → logprob: -3.0586931705474854
    3. '("("' → logprob: -4.683692932128906
    4. '('' → logprob: -7.933692932128906
    5. '(*' → logprob: -7.933692932128906
    6. '()' → logprob: -10.183692932128906
    7. '(len' → logprob: -10.808692932128906
    8. '("")' → logprob: -11.183692932128906
    9. '("(' → logprob: -12.058692932128906
    10. '(
' → logprob: -12.058692932128906

Token 401: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -4.320199877838604e-07
    2. '"' → logprob: -15.5
    3. 'YES' → logprob: -16.125
    4. ' Yes' → logprob: -17.0
    5. 'Possible' → logprob: -17.5
    6. '
' → logprob: -18.5
    7. 'Ok' → logprob: -19.375
    8. 'Yeah' → logprob: -19.375
    9. '“Yes' → logprob: -19.5
    10. '```' → logprob: -19.75

Token 402: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.04892127960920334
    2. '")' → logprob: -3.0489213466644287
    3. ')
' → logprob: -8.048921585083008
    4. '")
' → logprob: -12.173921585083008
    5. '"' → logprob: -12.548921585083008
    6. ')' → logprob: -13.298921585083008
    7. '')
' → logprob: -13.423921585083008
    8. '"
' → logprob: -14.173921585083008
    9. '")

' → logprob: -14.173921585083008
    10. 'print' → logprob: -15.298921585083008

Token 403: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018164340406656265
    2. 'print' → logprob: -4.018164157867432
    3. ' for' → logprob: -11.51816463470459
    4. '
' → logprob: -13.26816463470459
    5. 'ANS' → logprob: -14.64316463470459
    6. '  
' → logprob: -14.76816463470459
    7. '\n' → logprob: -14.89316463470459
    8. '```' → logprob: -15.01816463470459
    9. '('\' → logprob: -15.14316463470459
    10. '    
' → logprob: -15.26816463470459

Token 404: '("\' (ID: 9730)
  Prédit: '("\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("\' → logprob: -0.02773468941450119
    2. '('\' → logprob: -4.277734756469727
    3. '(*' → logprob: -4.402734756469727
    4. '(' → logprob: -7.027734756469727
    5. '("' → logprob: -9.027734756469727
    6. '(
' → logprob: -9.527734756469727
    7. '("
' → logprob: -9.777734756469727
    8. '"\' → logprob: -10.027734756469727
    9. '()' → logprob: -11.027734756469727
    10. '('' → logprob: -11.152734756469727

Token 405: 'n' (ID: 77)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.045175421983003616
    2. '\n' → logprob: -3.295175313949585
    3. ''\' → logprob: -5.045175552368164
    4. '
' → logprob: -7.670175552368164
    5. '"' → logprob: -9.045175552368164
    6. 'n' → logprob: -10.545175552368164
    7. '"
' → logprob: -10.545175552368164
    8. '".' → logprob: -11.670175552368164
    9. '\
' → logprob: -12.045175552368164
    10. '
' → logprob: -12.045175552368164

Token 406: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -5.407366916188039e-05
    2. ''.' → logprob: -10.000054359436035
    3. '"' → logprob: -12.250054359436035
    4. '.join' → logprob: -13.500054359436035
    5. '''.' → logprob: -13.625054359436035
    6. 'join' → logprob: -14.625054359436035
    7. '.' → logprob: -14.625054359436035
    8. '").' → logprob: -15.500054359436035
    9. '`.' → logprob: -16.00005340576172
    10. '")' → logprob: -17.12505340576172

Token 407: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -4.320199877838604e-07
    2. 'j' → logprob: -15.875
    3. 'jo' → logprob: -15.875
    4. ' join' → logprob: -16.25
    5. '".' → logprob: -17.0
    6. '.join' → logprob: -17.125
    7. '.' → logprob: -17.875
    8. '```' → logprob: -18.75
    9. 'print' → logprob: -19.0
    10. '''.' → logprob: -21.25

Token 408: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. 'ANS' → logprob: -15.500000953674316
    3. '([' → logprob: -15.625000953674316
    4. '(ans' → logprob: -15.875000953674316
    5. '(str' → logprob: -16.5
    6. '((' → logprob: -16.75
    7. '(["' → logprob: -17.0
    8. '(map' → logprob: -17.125
    9. '(
' → logprob: -17.5
    10. '(list' → logprob: -18.75

Token 409: 'ANS' (ID: 18850)
  Prédit: 'ANS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -1.9361264946837764e-07
    2. 'AN' → logprob: -16.125
    3. 'ANSWER' → logprob: -17.0
    4. 'Ans' → logprob: -18.125
    5. 'ans' → logprob: -19.0
    6. ' AN' → logprob: -19.0
    7. '(ans' → logprob: -19.625
    8. '(' → logprob: -21.375
    9. 'ANN' → logprob: -21.5
    10. 'ANTS' → logprob: -22.75

Token 410: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2014157623052597
    2. ')' → logprob: -1.701415777206421
    3. '))
' → logprob: -13.701416015625
    4. ')))' → logprob: -14.826416015625
    5. ')
' → logprob: -15.201416015625
    6. '"))' → logprob: -15.826416015625
    7. '])' → logprob: -15.951416015625
    8. '())' → logprob: -16.076416015625
    9. '()))' → logprob: -16.076416015625
    10. '）' → logprob: -16.201416015625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 408
Tokens correctement prédits (1ère position, stricte): 201
Tokens correctement prédits (1ère position, avec adaptation): 233
Tokens correctement prédits (top 10): 369
Précision stricte (1ère position): 49.26%
Précision adaptée (1ère position): 57.11%
Précision (top 10): 90.44%
================================================================================
