================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect
import copy
import heapq
import math
import sys
from collections import *
from functools import lru_cache
from itertools import accumulate, combinations, permutations, product

def custom_input():
    return sys.stdin.readline()[:-1]

def ruiseki(lst):
    return [0] + list(accumulate(lst))

def celi(a, b):
    return -(-a // b)

def set_recursion():
    sys.setrecursionlimit(5000000)

def get_mod():
    return pow(10, 9) + 7

def generate_alphabet():
    return [chr(ord('a') + i) for i in range(26)]

def get_directions():
    return [[1, 0], [0, 1], [-1, 0], [0, -1]]

def read_n():
    return int(custom_input())

def read_a():
    return list(map(int, custom_input().split()))

def init_ans():
    return 0

def init_l():
    return 0

def init_r():
    return 0

def init_cnt():
    return 0

def init_xor():
    return 0

def process_element(i, l, r, cnt, xor, a, n):
    l = i
    if is_l_eq_r(l, r):
        cnt, xor, r = add_element(cnt, xor, a[i], r)
    return l, r, cnt, xor

def is_l_eq_r(l, r):
    return l == r

def add_element(cnt, xor, ai, r):
    cnt_updated = cnt + ai
    xor_updated = xor + ai
    r_updated = r + 1
    return cnt_updated, xor_updated, r_updated

def can_extend(r, n):
    return r + 1 <= n

def can_extend_while(xor, cnt, a, r):
    return xor ^ a[r] == cnt + a[r]

def extend_window(xor, cnt, ai):
    xor_updated = xor ^ ai
    cnt_updated = cnt + ai
    return xor_updated, cnt_updated

def remove_element(cnt, xor, ai):
    cnt_updated = cnt - ai
    xor_updated = xor - ai
    return cnt_updated, xor_updated

def update_ans(ans, r, l):
    return ans + (r - l)

def main():
    set_recursion()
    mod = get_mod()
    al = generate_alphabet()
    direction = get_directions()
    n = read_n()
    a = read_a()
    ans = init_ans()
    l = init_l()
    r = init_r()
    cnt = init_cnt()
    xor = init_xor()
    for i in range(n):
        l, r, cnt, xor = process_element(i, l, r, cnt, xor, a, n)
        while can_extend(r, n) and can_extend_while(xor, cnt, a, r):
            xor, cnt = extend_window(xor, cnt, a[r])
            r += 1
        cnt, xor = remove_element(cnt, xor, a[i])
        ans = update_ans(ans, r, l)
    print(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0002955399686470628
    2. '(' → logprob: -8.625295639038086
    3. '.b' → logprob: -10.500295639038086
    4. '\' → logprob: -11.125295639038086
    5. '\n' → logprob: -11.375295639038086
    6. '.\' → logprob: -11.875295639038086
    7. '

' → logprob: -12.000295639038086
    8. '
' → logprob: -12.125295639038086
    9. '.
' → logprob: -12.250295639038086
    10. '```' → logprob: -12.375295639038086

Token 4: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00028302724240347743
    2. '(' → logprob: -8.750283241271973
    3. '.
' → logprob: -10.750283241271973
    4. '.

' → logprob: -10.875283241271973
    5. '

' → logprob: -11.375283241271973
    6. '.b' → logprob: -11.625283241271973
    7. '\' → logprob: -11.625283241271973
    8. ',' → logprob: -11.750283241271973
    9. '' → logprob: -11.875283241271973
    10. '\n' → logprob: -12.000283241271973

Token 5: ' copy' (ID: 5150)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.18434125185012817
    2. ' math' → logprob: -1.9343411922454834
    3. 'sys' → logprob: -4.9343414306640625
    4. ' heap' → logprob: -5.0593414306640625
    5. ' collections' → logprob: -5.0593414306640625
    6. 'math' → logprob: -6.9343414306640625
    7. 'collections' → logprob: -7.0593414306640625
    8. ' itertools' → logprob: -7.0593414306640625
    9. ' os' → logprob: -7.4343414306640625
    10. 'heap' → logprob: -7.6843414306640625

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2353469282388687
    2. '
' → logprob: -2.110347032546997
    3. '

' → logprob: -3.235347032546997
    4. '(' → logprob: -4.610346794128418
    5. '\' → logprob: -4.735346794128418
    6. '\n' → logprob: -4.985346794128418
    7. '.

' → logprob: -5.485346794128418
    8. '.
' → logprob: -5.735346794128418
    9. ',' → logprob: -6.110346794128418
    10. 'import' → logprob: -6.110346794128418

Token 7: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14205552637577057
    2. '
' → logprob: -3.1420555114746094
    3. '

' → logprob: -3.5170555114746094
    4. '(' → logprob: -3.6420555114746094
    5. '.

' → logprob: -4.642055511474609
    6. '\' → logprob: -5.392055511474609
    7. '.
' → logprob: -5.767055511474609
    8. '(
' → logprob: -5.767055511474609
    9. ',' → logprob: -6.267055511474609
    10. '(

' → logprob: -6.267055511474609

Token 8: ' heap' (ID: 37237)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9257828593254089
    2. ' heap' → logprob: -1.0507829189300537
    3. ' collections' → logprob: -2.3007829189300537
    4. ' itertools' → logprob: -2.6757829189300537
    5. 'heap' → logprob: -3.5507829189300537
    6. ' sys' → logprob: -3.6757829189300537
    7. 'collections' → logprob: -4.175782680511475
    8. ' os' → logprob: -5.300782680511475
    9. 'math' → logprob: -5.425782680511475
    10. ' threading' → logprob: -6.550782680511475

Token 9: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.2246291337069124e-05
    2. '#' → logprob: -12.250021934509277
    3. '.' → logprob: -12.875021934509277
    4. 'u' → logprob: -13.000021934509277
    5. '<|end|>' → logprob: -13.000021934509277
    6. 'queue' → logprob: -13.500021934509277
    7. 't' → logprob: -13.625021934509277
    8. 'i' → logprob: -13.875021934509277
    9. 's' → logprob: -14.000021934509277
    10. 'space' → logprob: -14.250021934509277

Token 10: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.020105717703700066
    2. 'import' → logprob: -5.145105838775635
    3. '\' → logprob: -5.395105838775635
    4. '<|end|>' → logprob: -6.020105838775635
    5. '
' → logprob: -6.395105838775635
    6. ',' → logprob: -6.770105838775635
    7. '#' → logprob: -6.895105838775635
    8. '\n' → logprob: -7.145105838775635
    9. '.
' → logprob: -7.770105838775635
    10. '

' → logprob: -7.895105838775635

Token 11: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4364888668060303
    2. '
' → logprob: -2.1864888668060303
    3. 'import' → logprob: -2.1864888668060303
    4. '

' → logprob: -2.8114888668060303
    5. '#' → logprob: -4.436489105224609
    6. 'def' → logprob: -4.561489105224609
    7. ',' → logprob: -4.686489105224609
    8. '' → logprob: -4.811489105224609
    9. '.

' → logprob: -5.436489105224609
    10. 'from' → logprob: -5.686489105224609

Token 12: ' math' (ID: 13324)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.029257318004965782
    2. ' math' → logprob: -3.654257297515869
    3. 'math' → logprob: -6.654257297515869
    4. ' io' → logprob: -7.029257297515869
    5. ' collections' → logprob: -8.279257774353027
    6. 'it' → logprob: -8.404257774353027
    7. 'io' → logprob: -9.279257774353027
    8. 'collections' → logprob: -9.404257774353027
    9. ' threading' → logprob: -10.154257774353027
    10. ' json' → logprob: -10.529257774353027

Token 13: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3431692123413086
    2. '
' → logprob: -1.4681692123413086
    3. '```' → logprob: -1.8431692123413086
    4. '\' → logprob: -2.0931692123413086
    5. '

' → logprob: -2.5931692123413086
    6. '.' → logprob: -3.0931692123413086
    7. '\n' → logprob: -3.0931692123413086
    8. ',' → logprob: -3.8431692123413086
    9. '#' → logprob: -4.968169212341309
    10. '<|end|>' → logprob: -4.968169212341309

Token 14: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.06941241025924683
    2. '
' → logprob: -3.5694124698638916
    3. '```' → logprob: -4.6944122314453125
    4. '\n' → logprob: -5.1944122314453125
    5. '\' → logprob: -5.3194122314453125
    6. ',' → logprob: -5.4444122314453125
    7. 'from' → logprob: -5.5694122314453125
    8. '.' → logprob: -6.0694122314453125
    9. 'def' → logprob: -6.1944122314453125
    10. '

' → logprob: -6.3194122314453125

Token 15: ' sys' (ID: 12228)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.28442132472991943
    2. ' random' → logprob: -1.9094213247299194
    3. 'collections' → logprob: -3.659421443939209
    4. 'operator' → logprob: -4.284421443939209
    5. 'sys' → logprob: -4.409421443939209
    6. ' collections' → logprob: -4.659421443939209
    7. ' operator' → logprob: -4.659421443939209
    8. ' sys' → logprob: -4.784421443939209
    9. 'os' → logprob: -5.159421443939209
    10. ' os' → logprob: -5.284421443939209

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4280724823474884
    2. 'import' → logprob: -2.053072452545166
    3. '\n' → logprob: -2.553072452545166
    4. '

' → logprob: -2.678072452545166
    5. '<|end|>' → logprob: -3.553072452545166
    6. '```' → logprob: -3.803072452545166
    7. '\' → logprob: -4.803072452545166
    8. '#' → logprob: -5.303072452545166
    9. '.' → logprob: -6.053072452545166
    10. '<|end|>' → logprob: -6.428072452545166

Token 17: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7819058895111084
    2. 'import' → logprob: -0.9069058895111084
    3. '\n' → logprob: -2.6569058895111084
    4. '

' → logprob: -3.7819058895111084
    5. 'def' → logprob: -5.0319061279296875
    6. '#' → logprob: -5.0319061279296875
    7. '```' → logprob: -5.1569061279296875
    8. 'from' → logprob: -5.1569061279296875
    9. '' → logprob: -5.4069061279296875
    10. '<|end|>' → logprob: -5.4069061279296875

Token 18: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.12615469098091125
    2. 'collections' → logprob: -2.376154661178589
    3. ' typing' → logprob: -4.126154899597168
    4. ' itertools' → logprob: -5.001154899597168
    5. ' functools' → logprob: -7.501154899597168
    6. '_' → logprob: -7.626154899597168
    7. 'typing' → logprob: -7.626154899597168
    8. ' ' → logprob: -7.876154899597168
    9. ' io' → logprob: -8.251154899597168
    10. ' os' → logprob: -8.751154899597168

Token 19: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3490644097328186
    2. 'import' → logprob: -1.2240643501281738
    3. 'collections' → logprob: -8.974064826965332
    4. 'abc' → logprob: -9.224064826965332
    5. ' collections' → logprob: -9.349064826965332
    6. '.' → logprob: -9.474064826965332
    7. 'from' → logprob: -9.724064826965332
    8. ' ' → logprob: -10.349064826965332
    9. '_import' → logprob: -10.724064826965332
    10. '	import' → logprob: -10.849064826965332

Token 20: ' *
' (ID: 2099)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.7453044652938843
    2. ' abc' → logprob: -0.9953044652938843
    3. ' deque' → logprob: -1.9953044652938843
    4. 'deque' → logprob: -4.120304584503174
    5. 'abc' → logprob: -5.745304584503174
    6. ' collections' → logprob: -8.870304107666016
    7. ' named' → logprob: -9.745304107666016
    8. ' itertools' → logprob: -9.745304107666016
    9. 'collections' → logprob: -9.995304107666016
    10. ' functools' → logprob: -10.870304107666016

Token 21: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0293212179094553
    2. 'from' → logprob: -4.154321193695068
    3. ' import' → logprob: -5.779321193695068
    4. '<|end|>' → logprob: -5.904321193695068
    5. '```' → logprob: -6.154321193695068
    6. ' ' → logprob: -6.154321193695068
    7. ' 
' → logprob: -7.404321193695068
    8. '\n' → logprob: -7.904321193695068
    9. '
' → logprob: -8.029321670532227
    10. '<|end|>' → logprob: -8.029321670532227

Token 22: ' functools' (ID: 142636)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.5680487751960754
    2. ' typing' → logprob: -0.9430487751960754
    3. 'typing' → logprob: -3.5680487155914307
    4. ' functools' → logprob: -5.19304895401001
    5. ' operator' → logprob: -6.19304895401001
    6. '_' → logprob: -6.69304895401001
    7. ' dat' → logprob: -6.81804895401001
    8. ' heap' → logprob: -6.94304895401001
    9. ' queue' → logprob: -7.06804895401001
    10. 'operator' → logprob: -7.06804895401001

Token 23: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10030447691679001
    2. 'import' → logprob: -2.350304365158081
    3. '_import' → logprob: -10.47530460357666
    4. ' ' → logprob: -10.60030460357666
    5. '<|end|>' → logprob: -10.72530460357666
    6. '	import' → logprob: -11.85030460357666
    7. ' ' → logprob: -12.60030460357666
    8. '_' → logprob: -12.97530460357666
    9. ' _' → logprob: -13.35030460357666
    10. '.' → logprob: -13.47530460357666

Token 24: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017571009695529938
    2. ' l' → logprob: -4.142570972442627
    3. ' wraps' → logprob: -6.767570972442627
    4. ' reduce' → logprob: -8.392571449279785
    5. ' cmp' → logprob: -10.392571449279785
    6. ' partial' → logprob: -10.517571449279785
    7. 'l' → logprob: -10.767571449279785
    8. '32' → logprob: -10.767571449279785
    9. ' ' → logprob: -10.892571449279785
    10. 'wrap' → logprob: -11.267571449279785

Token 25: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -2.1888679839321412e-05
    2. 'r' → logprob: -10.875021934509277
    3. 'ruz' → logprob: -13.750021934509277
    4. 'ambda' → logprob: -15.000021934509277
    5. 'fu' → logprob: -15.250021934509277
    6. 'z' → logprob: -15.250021934509277
    7. 'a' → logprob: -15.500021934509277
    8. 'azy' → logprob: -15.875021934509277
    9. 'ruh' → logprob: -15.875021934509277
    10. '_ru' → logprob: -15.875021934509277

Token 26: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.058913782238960266
    2. 'cache' → logprob: -2.9339137077331543
    3. 'ru' → logprob: -5.558913707733154
    4. 'ut' → logprob: -10.433914184570312
    5. 'fu' → logprob: -10.558914184570312
    6. 'RU' → logprob: -11.058914184570312
    7. 'import' → logprob: -11.308914184570312
    8. 'r' → logprob: -11.308914184570312
    9. 'ac' → logprob: -11.308914184570312
    10. '_cached' → logprob: -11.308914184570312

Token 27: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5665417313575745
    2. '<|end|>' → logprob: -1.0665416717529297
    3. '
' → logprob: -3.4415416717529297
    4. '\n' → logprob: -4.31654167175293
    5. 'from' → logprob: -4.44154167175293
    6. '

' → logprob: -4.56654167175293
    7. ',' → logprob: -4.94154167175293
    8. '<|end|>' → logprob: -5.44154167175293
    9. 'def' → logprob: -6.44154167175293
    10. '```' → logprob: -6.56654167175293

Token 28: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9678565263748169
    2. '
' → logprob: -1.467856526374817
    3. '#' → logprob: -2.2178564071655273
    4. '<|end|>' → logprob: -2.7178564071655273
    5. 'from' → logprob: -3.2178564071655273
    6. '

' → logprob: -3.2178564071655273
    7. '\n' → logprob: -3.3428564071655273
    8. 'class' → logprob: -3.7178564071655273
    9. '```' → logprob: -4.217856407165527
    10. ',' → logprob: -4.467856407165527

Token 29: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.053123194724321365
    2. ' typing' → logprob: -3.1781232357025146
    3. ' operator' → logprob: -4.8031229972839355
    4. ' math' → logprob: -7.6781229972839355
    5. 'operator' → logprob: -8.053123474121094
    6. ' ' → logprob: -8.053123474121094
    7. 'it' → logprob: -8.428123474121094
    8. ' io' → logprob: -8.553123474121094
    9. 'typing' → logprob: -8.678123474121094
    10. ' heap' → logprob: -9.553123474121094

Token 30: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.038107242435216904
    2. 'import' → logprob: -3.28810715675354
    3. '	import' → logprob: -10.163106918334961
    4. ' ' → logprob: -10.913106918334961
    5. '_import' → logprob: -12.663106918334961
    6. '.' → logprob: -13.288106918334961
    7. '<|end|>' → logprob: -13.413106918334961
    8. '.import' → logprob: -14.788106918334961
    9. ' ' → logprob: -14.913106918334961
    10. ' importar' → logprob: -15.288106918334961

Token 31: ' accumulate' (ID: 74226)
  Prédit: ' accumulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.9713637828826904
    2. ' combinations' → logprob: -1.4713637828826904
    3. 'com' → logprob: -1.5963637828826904
    4. ' permutations' → logprob: -2.7213637828826904
    5. ' product' → logprob: -3.4713637828826904
    6. ' ' → logprob: -3.4713637828826904
    7. '*' → logprob: -3.9713637828826904
    8. 'acc' → logprob: -4.5963640213012695
    9. ' chain' → logprob: -4.7213640213012695
    10. ' group' → logprob: -5.4713640213012695

Token 32: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3346634805202484
    2. '<|end|>' → logprob: -2.4596633911132812
    3. '
' → logprob: -2.5846633911132812
    4. ',' → logprob: -2.5846633911132812
    5. 'from' → logprob: -4.334663391113281
    6. '\n' → logprob: -4.459663391113281
    7. '

' → logprob: -4.834663391113281
    8. '<|end|>' → logprob: -5.209663391113281
    9. 'def' → logprob: -6.334663391113281
    10. ',
' → logprob: -6.459663391113281

Token 33: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.0222134590148926
    2. 'chain' → logprob: -1.1472134590148926
    3. ' chain' → logprob: -1.7722134590148926
    4. 'group' → logprob: -3.2722134590148926
    5. ' group' → logprob: -3.5222134590148926
    6. 'product' → logprob: -3.8972134590148926
    7. ' product' → logprob: -4.272213459014893
    8. 'cycle' → logprob: -4.522213459014893
    9. ' ' → logprob: -4.897213459014893
    10. ' permutations' → logprob: -4.897213459014893

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006728872191160917
    2. 'import' → logprob: -5.631728649139404
    3. '<|end|>' → logprob: -6.506728649139404
    4. 'from' → logprob: -7.131728649139404
    5. ',
' → logprob: -7.631728649139404
    6. '```' → logprob: -9.756729125976562
    7. ' ,' → logprob: -9.756729125976562
    8. '<|end|>' → logprob: -10.006729125976562
    9. 'def' → logprob: -10.131729125976562
    10. ',n' → logprob: -11.006729125976562

Token 35: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.25373852252960205
    2. 'com' → logprob: -2.7537384033203125
    3. 'per' → logprob: -3.1287384033203125
    4. 'product' → logprob: -3.2537384033203125
    5. ' product' → logprob: -3.7537384033203125
    6. 'compress' → logprob: -3.8787384033203125
    7. ' compress' → logprob: -4.5037384033203125
    8. 'count' → logprob: -4.6287384033203125
    9. 'group' → logprob: -5.7537384033203125
    10. 'cycle' → logprob: -6.1287384033203125

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024614136666059494
    2. 'import' → logprob: -4.899614334106445
    3. '<|end|>' → logprob: -4.899614334106445
    4. 'from' → logprob: -5.649614334106445
    5. ',
' → logprob: -6.149614334106445
    6. '\n' → logprob: -6.399614334106445
    7. '
' → logprob: -6.649614334106445
    8. '<|end|>' → logprob: -8.274614334106445
    9. ' ,' → logprob: -9.024614334106445
    10. ',n' → logprob: -9.274614334106445

Token 37: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.4763367474079132
    2. ' product' → logprob: -0.9763367176055908
    3. ' group' → logprob: -7.47633695602417
    4. ' chain' → logprob: -7.72633695602417
    5. 'group' → logprob: -8.101336479187012
    6. 'chain' → logprob: -8.226336479187012
    7. 'count' → logprob: -8.726336479187012
    8. 'com' → logprob: -9.101336479187012
    9. 'cycle' → logprob: -9.226336479187012
    10. '```' → logprob: -9.226336479187012

Token 38: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3758173882961273
    2. '<|end|>' → logprob: -1.2508174180984497
    3. 'import' → logprob: -4.75081729888916
    4. '
' → logprob: -4.75081729888916
    5. '<|end|>' → logprob: -5.75081729888916
    6. '\n' → logprob: -6.12581729888916
    7. 'from' → logprob: -7.12581729888916
    8. '```' → logprob: -7.37581729888916
    9. ' ' → logprob: -7.62581729888916
    10. '

' → logprob: -7.87581729888916

Token 39: 'def' (ID: 1314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6585344076156616
    2. 'import' → logprob: -1.9085344076156616
    3. '
' → logprob: -2.283534526824951
    4. '#' → logprob: -2.908534526824951
    5. '

' → logprob: -3.033534526824951
    6. '\n' → logprob: -3.283534526824951
    7. 'def' → logprob: -3.783534526824951
    8. ',
' → logprob: -3.908534526824951
    9. 'class' → logprob: -4.408534526824951
    10. 'from' → logprob: -4.533534526824951

Token 40: ' custom' (ID: 2602)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33604204654693604
    2. '_' → logprob: -2.0860419273376465
    3. ' _' → logprob: -2.9610419273376465
    4. ' main' → logprob: -2.9610419273376465
    5. ' solve' → logprob: -3.8360419273376465
    6. ' binary' → logprob: -4.8360419273376465
    7. ' s' → logprob: -5.2110419273376465
    8. ' dfs' → logprob: -5.2110419273376465
    9. ' max' → logprob: -5.3360419273376465
    10. ' longest' → logprob: -6.9610419273376465

Token 41: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02252531237900257
    2. '_function' → logprob: -4.272525310516357
    3. '_sort' → logprob: -5.772525310516357
    4. ' _' → logprob: -5.897525310516357
    5. '_filter' → logprob: -7.147525310516357
    6. '_split' → logprob: -8.022525787353516
    7. '_search' → logprob: -8.522525787353516
    8. '_de' → logprob: -9.272525787353516
    9. '_sum' → logprob: -9.397525787353516
    10. '_range' → logprob: -9.772525787353516

Token 42: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.12031959742307663
    2. '(' → logprob: -2.2453196048736572
    3. '(prompt' → logprob: -5.245319366455078
    4. '()' → logprob: -6.245319366455078
    5. ' ():' → logprob: -8.745319366455078
    6. '(:' → logprob: -10.370319366455078
    7. '():
' → logprob: -11.245319366455078
    8. '(":' → logprob: -12.245319366455078
    9. '("("' → logprob: -12.245319366455078
    10. ' (' → logprob: -12.370319366455078

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42203837633132935
    2. '()' → logprob: -1.4220383167266846
    3. ' return' → logprob: -3.4220383167266846
    4. '(' → logprob: -3.7970383167266846
    5. 'return' → logprob: -3.7970383167266846
    6. '():' → logprob: -5.047038555145264
    7. '    ' → logprob: -5.172038555145264
    8. '    
' → logprob: -5.797038555145264
    9. ' ' → logprob: -6.172038555145264
    10. '()\' → logprob: -6.422038555145264

Token 44: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.24211445450782776
    2. 'return' (adapté à ' return') → logprob: -1.6171144247055054
    3. '   ' → logprob: -4.117114543914795
    4. '    ' → logprob: -9.867114067077637
    5. ' ' → logprob: -9.992114067077637
    6. ' try' → logprob: -9.992114067077637
    7. ' input' → logprob: -10.617114067077637
    8. 'try' → logprob: -11.117114067077637
    9. ' pass' → logprob: -11.242114067077637
    10. 'input' → logprob: -11.367114067077637

Token 45: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07546684145927429
    2. ' sys' → logprob: -3.2004668712615967
    3. 'input' → logprob: -3.4504668712615967
    4. 'sys' → logprob: -8.700467109680176
    5. ' ' → logprob: -9.950467109680176
    6. ' ' → logprob: -15.325467109680176
    7. ' list' → logprob: -15.700467109680176
    8. '_input' → logprob: -15.825467109680176
    9. ' int' → logprob: -15.950467109680176
    10. '	input' → logprob: -16.20046615600586

Token 46: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.125210297293961e-05
    2. '.stdout' → logprob: -9.500081062316895
    3. 'stdin' → logprob: -12.375081062316895
    4. '.' → logprob: -13.375081062316895
    5. '.std' → logprob: -15.250081062316895
    6. '.stderr' → logprob: -15.875081062316895
    7. '.argv' → logprob: -16.12508201599121
    8. '.readline' → logprob: -16.37508201599121
    9. '(stdin' → logprob: -17.12508201599121
    10. '.st' → logprob: -17.25008201599121

Token 47: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00019221604452468455
    2. '.read' → logprob: -8.750192642211914
    3. '.' → logprob: -10.500192642211914
    4. 'read' → logprob: -12.625192642211914
    5. '.readlines' → logprob: -12.875192642211914
    6. ' readline' → logprob: -16.375192642211914
    7. '.buffer' → logprob: -16.500192642211914
    8. '_read' → logprob: -16.875192642211914
    9. '().' → logprob: -17.750192642211914
    10. 'buffer' → logprob: -18.125192642211914

Token 48: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06197720766067505
    2. '()' → logprob: -2.8119771480560303
    3. '()\' → logprob: -12.68697738647461
    4. '(' → logprob: -13.18697738647461
    5. '()

' → logprob: -13.43697738647461
    6. '()
' → logprob: -14.06197738647461
    7. '().__' → logprob: -15.06197738647461
    8. '.strip' → logprob: -15.18697738647461
    9. '()<' → logprob: -15.18697738647461
    10. '())' → logprob: -15.56197738647461

Token 49: '[:-' (ID: 63556)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25780653953552246
    2. '().' → logprob: -1.5078065395355225
    3. 'def' → logprob: -6.007806777954102
    4. '()
' → logprob: -7.257806777954102
    5. '.strip' → logprob: -7.257806777954102
    6. '()\' → logprob: -7.507806777954102
    7. '()

' → logprob: -7.632806777954102
    8. '(' → logprob: -7.757806777954102
    9. '<|end|>' → logprob: -8.632806777954102
    10. '
' → logprob: -9.132806777954102

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -17.25
    4. '2' → logprob: -17.75
    5. 'newline' → logprob: -18.25
    6. '\' → logprob: -18.75
    7. '   ' → logprob: -19.0
    8. '\n' → logprob: -19.25
    9. '``' → logprob: -19.75
    10. '１' → logprob: -19.875

Token 51: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.759734732331708e-05
    2. ']' → logprob: -11.250017166137695
    3. ')
' → logprob: -13.250017166137695
    4. '）' → logprob: -13.750017166137695
    5. ' )' → logprob: -14.500017166137695
    6. '')' → logprob: -15.625017166137695
    7. '`)' → logprob: -15.625017166137695
    8. ')]' → logprob: -15.750017166137695
    9. '])' → logprob: -15.750017166137695
    10. '))' → logprob: -16.250017166137695

Token 52: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004939254838973284
    2. 'class' → logprob: -5.504939079284668
    3. '#' → logprob: -8.004939079284668
    4. '
' → logprob: -8.379939079284668
    5. 'd' → logprob: -9.504939079284668
    6. '\' → logprob: -10.379939079284668
    7. 'de' → logprob: -10.629939079284668
    8. '```' → logprob: -10.879939079284668
    9. 'import' → logprob: -11.129939079284668
    10. 'deque' → logprob: -11.254939079284668

Token 53: ' r' (ID: 428)
  Prédit: ' custom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' custom' → logprob: -0.3656685948371887
    2. ' main' → logprob: -1.240668535232544
    3. 'custom' → logprob: -4.740668773651123
    4. ' binary' → logprob: -5.990668773651123
    5. ' solve' → logprob: -6.740668773651123
    6. ' factorial' → logprob: -6.990668773651123
    7. 'main' → logprob: -7.365668773651123
    8. ' max' → logprob: -7.615668773651123
    9. ' input' → logprob: -7.990668773651123
    10. ' pow' → logprob: -8.115668296813965

Token 54: 'uis' (ID: 4560)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.084682822227478
    2. 'ange' → logprob: -1.209682822227478
    3. 'ead' → logprob: -1.334682822227478
    4. 'andom' → logprob: -2.7096829414367676
    5. 'ef' → logprob: -3.9596829414367676
    6. 'ight' → logprob: -5.459682941436768
    7. 'aw' → logprob: -5.709682941436768
    8. 'ec' → logprob: -6.209682941436768
    9. 'e' → logprob: -6.334682941436768
    10. 'int' → logprob: -6.584682941436768

Token 55: 'eki' (ID: 30639)
  Prédit: 'eki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eki' → logprob: -1.2509461641311646
    2. 'uke' → logprob: -1.7509461641311646
    3. '```' → logprob: -1.7509461641311646
    4. 'k' → logprob: -2.000946044921875
    5. 'uku' → logprob: -3.250946044921875
    6. 'u' → logprob: -3.500946044921875
    7. ' uk' → logprob: -3.750946044921875
    8. 'e' → logprob: -3.875946044921875
    9. ' uke' → logprob: -4.125946044921875
    10. 'uki' → logprob: -4.250946044921875

Token 56: '(lst' (ID: 95688)
  Prédit: 'wa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wa' → logprob: -0.22998304665088654
    2. 'w' → logprob: -1.7299830913543701
    3. 'wai' → logprob: -4.604982852935791
    4. 'wan' → logprob: -5.479982852935791
    5. '```' → logprob: -6.104982852935791
    6. 'wari' → logprob: -6.229982852935791
    7. '_w' → logprob: -6.854982852935791
    8. 'was' → logprob: -6.979982852935791
    9. 'waka' → logprob: -6.979982852935791
    10. 'wak' → logprob: -7.104982852935791

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016323324525728822
    2. ' ):' → logprob: -7.376632213592529
    3. ')' → logprob: -7.501632213592529
    4. '):
' → logprob: -7.876632213592529
    5. 'm' → logprob: -10.626632690429688
    6. ')：' → logprob: -11.626632690429688
    7. '=' → logprob: -11.876632690429688
    8. '）：' → logprob: -12.126632690429688
    9. ')=' → logprob: -12.501632690429688
    10. 'u' → logprob: -12.751632690429688

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00440483633428812
    2. ':' → logprob: -5.6294050216674805
    3. 'acc' → logprob: -7.7544050216674805
    4. ':
' → logprob: -9.50440502166748
    5. '[' → logprob: -10.12940502166748
    6. 'return' → logprob: -10.25440502166748
    7. ',' → logprob: -10.25440502166748
    8. ' =' → logprob: -10.37940502166748
    9. '=' → logprob: -10.50440502166748
    10. ' ' → logprob: -11.00440502166748

Token 59: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8724216222763062
    2. 'acc' → logprob: -0.8724216222763062
    3. 'res' → logprob: -2.7474217414855957
    4. 'result' → logprob: -3.1224217414855957
    5. ' res' → logprob: -3.9974217414855957
    6. 'return' (adapté à ' return') → logprob: -4.372421741485596
    7. 's' → logprob: -4.622421741485596
    8. 'ret' → logprob: -5.247421741485596
    9. ' acc' → logprob: -5.497421741485596
    10. 'ans' → logprob: -6.622421741485596

Token 60: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6220983862876892
    2. 'list' → logprob: -0.8720983862876892
    3. '[list' → logprob: -3.122098445892334
    4. 'acc' → logprob: -7.872098445892334
    5. ' [' → logprob: -8.122097969055176
    6. ' list' → logprob: -8.372097969055176
    7. '[len' → logprob: -10.372097969055176
    8. '(list' → logprob: -10.997097969055176
    9. '[it' → logprob: -11.372097969055176
    10. '[(' → logprob: -11.372097969055176

Token 61: '0' (ID: 15)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.7283400893211365
    2. '0' → logprob: -0.8533400893211365
    3. 'sum' → logprob: -2.6033401489257812
    4. 'x' → logprob: -4.478340148925781
    5. 'acc' → logprob: -5.228340148925781
    6. 'a' → logprob: -8.853340148925781
    7. 'list' → logprob: -9.103340148925781
    8. '(lst' → logprob: -9.228340148925781
    9. '(' → logprob: -10.103340148925781
    10. 's' → logprob: -10.228340148925781

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20144110918045044
    2. ']+' → logprob: -1.7014410495758057
    3. ']+=' → logprob: -11.076440811157227
    4. ',' → logprob: -11.576440811157227
    5. ']*(' → logprob: -13.576440811157227
    6. '+]' → logprob: -14.701440811157227
    7. ' ]' → logprob: -14.951440811157227
    8. '+' → logprob: -15.326440811157227
    9. ']+\' → logprob: -15.451440811157227
    10. '`]' → logprob: -16.076440811157227

Token 63: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3179318606853485
    2. '+[' → logprob: -1.317931890487671
    3. ' +' → logprob: -5.442931652069092
    4. '[' → logprob: -8.31793212890625
    5. ']+' → logprob: -11.31793212890625
    6. '<|end|>' → logprob: -11.31793212890625
    7. '+b' → logprob: -11.44293212890625
    8. '+B' → logprob: -12.31793212890625
    9. '+c' → logprob: -12.44293212890625
    10. '+-' → logprob: -12.44293212890625

Token 64: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004713261034339666
    2. ' list' → logprob: -6.00471305847168
    3. '[list' → logprob: -6.12971305847168
    4. '[' → logprob: -10.00471305847168
    5. 'acc' → logprob: -11.87971305847168
    6. ' [' → logprob: -13.00471305847168
    7. 'lst' → logprob: -13.50471305847168
    8. '(list' → logprob: -13.75471305847168
    9. '	list' → logprob: -14.87971305847168
    10. '=list' → logprob: -15.50471305847168

Token 65: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.00012809180771000683
    2. 'acc' → logprob: -9.000127792358398
    3. '(' → logprob: -12.625127792358398
    4. '	acc' → logprob: -14.625127792358398
    5. ' accumulate' → logprob: -14.750127792358398
    6. '(ac' → logprob: -15.125127792358398
    7. '(it' → logprob: -15.625127792358398
    8. '.acc' → logprob: -16.8751277923584
    9. ''acc' → logprob: -17.3751277923584
    10. '_acc' → logprob: -17.6251277923584

Token 66: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -3.1782583391759545e-05
    2. 'um' → logprob: -11.500031471252441
    3. 'umul' → logprob: -12.000031471252441
    4. 'ulate' → logprob: -12.750031471252441
    5. '
' → logprob: -13.250031471252441
    6. 'umulative' → logprob: -13.500031471252441
    7. 'uminate' → logprob: -13.625031471252441
    8. '   ' → logprob: -13.750031471252441
    9. '```' → logprob: -13.750031471252441
    10. 'uml' → logprob: -14.000031471252441

Token 67: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0005600620643235743
    2. '(' → logprob: -7.500560283660889
    3. ')' → logprob: -13.00055980682373
    4. 'lst' → logprob: -13.37555980682373
    5. ')(' → logprob: -13.50055980682373
    6. '(
' → logprob: -14.62555980682373
    7. ' (' → logprob: -14.87555980682373
    8. '(l' → logprob: -15.00055980682373
    9. '(ls' → logprob: -15.75055980682373
    10. '(lhs' → logprob: -16.000560760498047

Token 68: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7182924151420593
    2. ')]' → logprob: -0.7182924151420593
    3. ')])' → logprob: -3.843292474746704
    4. ')' → logprob: -6.718292236328125
    5. '()))' → logprob: -6.843292236328125
    6. '])]' → logprob: -7.593292236328125
    7. '())' → logprob: -7.718292236328125
    8. '])' → logprob: -9.593292236328125
    9. ')))' → logprob: -10.468292236328125
    10. ' ))' → logprob: -10.593292236328125

Token 69: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005444108974188566
    2. '
' → logprob: -6.255444049835205
    3. '<|end|>' → logprob: -6.255444049835205
    4. 'class' → logprob: -7.005444049835205
    5. '<|end|>' → logprob: -8.380444526672363
    6. '#' → logprob: -8.880444526672363
    7. '\' → logprob: -9.005444526672363
    8. '

' → logprob: -9.630444526672363
    9. '```' → logprob: -10.130444526672363
    10. '\n' → logprob: -10.255444526672363

Token 70: ' c' (ID: 274)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4047667980194092
    2. ' custom' → logprob: -1.9047667980194092
    3. ' solve' → logprob: -2.904766798019409
    4. ' binary' → logprob: -3.404766798019409
    5. ' bis' → logprob: -5.029767036437988
    6. ' dfs' → logprob: -5.029767036437988
    7. ' is' → logprob: -5.029767036437988
    8. ' l' → logprob: -5.154767036437988
    9. 'main' → logprob: -5.154767036437988
    10. 'custom' → logprob: -5.404767036437988

Token 71: 'eli' (ID: 6039)
  Prédit: 'omb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'omb' → logprob: -0.3084178864955902
    2. 'umsum' → logprob: -2.433417797088623
    3. 'ounter' → logprob: -2.808417797088623
    4. 'ustom' → logprob: -3.433417797088623
    5. 'um' → logprob: -4.058417797088623
    6. 'ount' → logprob: -4.308417797088623
    7. 'umulative' → logprob: -4.308417797088623
    8. 'om' → logprob: -4.308417797088623
    9. 'ho' → logprob: -5.183417797088623
    10. 'h' → logprob: -5.808417797088623

Token 72: '(a' (ID: 6271)
  Prédit: 'ng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ng' → logprob: -9.662937372922897e-05
    2. 'n' → logprob: -9.625096321105957
    3. 'ngi' → logprob: -11.125096321105957
    4. 'nge' → logprob: -11.625096321105957
    5. 'nger' → logprob: -13.500096321105957
    6. 'l' → logprob: -13.750096321105957
    7. 'ling' → logprob: -13.875096321105957
    8. '_ng' → logprob: -14.125096321105957
    9. 'ngr' → logprob: -14.500096321105957
    10. 'нг' → logprob: -14.875096321105957

Token 73: ',' (ID: 11)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.18981300294399261
    2. 't' → logprob: -2.3148128986358643
    3. 'div' → logprob: -3.3148128986358643
    4. 'f' → logprob: -4.814813137054443
    5. 'te' → logprob: -5.189813137054443
    6. '):' → logprob: -5.189813137054443
    7. ')' → logprob: -5.439813137054443
    8. '_div' → logprob: -5.564813137054443
    9. 'r' → logprob: -6.314813137054443
    10. '):
' → logprob: -6.564813137054443

Token 74: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4740866422653198
    2. ' b' → logprob: -0.9740866422653198
    3. ' ' → logprob: -11.84908676147461
    4. 'n' → logprob: -14.47408676147461
    5. '   ' → logprob: -15.22408676147461
    6. '  ' → logprob: -15.22408676147461
    7. ' n' → logprob: -15.22408676147461
    8. ')' → logprob: -15.22408676147461
    9. ')b' → logprob: -15.47408676147461
    10. '    ' → logprob: -15.72408676147461

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.543733904138207e-05
    2. '):
' → logprob: -9.50009536743164
    3. ')' → logprob: -11.00009536743164
    4. '):
' → logprob: -13.37509536743164
    5. ')：' → logprob: -14.12509536743164
    6. ' ):' → logprob: -14.25009536743164
    7. '=' → logprob: -15.12509536743164
    8. ':' → logprob: -15.62509536743164
    9. ')=' → logprob: -15.75009536743164
    10. '   ' → logprob: -16.12509536743164

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014947241172194481
    2. ':' → logprob: -5.139947414398193
    3. ' return' → logprob: -5.389947414398193
    4. '(a' → logprob: -6.764947414398193
    5. 'return' → logprob: -6.889947414398193
    6. ' (' → logprob: -7.264947414398193
    7. '  ' → logprob: -7.764947414398193
    8. ':return' → logprob: -8.514946937561035
    9. ' ' → logprob: -8.639946937561035
    10. '(' → logprob: -8.764946937561035

Token 77: ' return' (ID: 622)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03514912724494934
    2. ' return' → logprob: -3.910149097442627
    3. ' (' → logprob: -4.410149097442627
    4. 'return' (adapté à ' return') → logprob: -6.660149097442627
    5. '   ' → logprob: -7.660149097442627
    6. '(' → logprob: -8.160149574279785
    7. '-' → logprob: -8.910149574279785
    8. 'a' → logprob: -10.410149574279785
    9. ' a' → logprob: -10.535149574279785
    10. '(return' → logprob: -10.785149574279785

Token 78: ' -' (ID: 533)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5779462456703186
    2. ' (' → logprob: -0.8279462456703186
    3. ' -' → logprob: -6.577946186065674
    4. '-' → logprob: -8.077946662902832
    5. ' ' → logprob: -9.077946662902832
    6. '   ' → logprob: -9.452946662902832
    7. '-(' → logprob: -9.702946662902832
    8. '((' → logprob: -11.577946662902832
    9. '(A' → logprob: -11.827946662902832
    10. '(-' → logprob: -12.077946662902832

Token 79: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0054390160366892815
    2. '(' → logprob: -5.505438804626465
    3. '(a' → logprob: -7.380438804626465
    4. 'a' → logprob: -7.380438804626465
    5. '((-' → logprob: -9.630438804626465
    6. '(-(' → logprob: -10.005438804626465
    7. '-' → logprob: -14.005438804626465
    8. '((' → logprob: -14.380438804626465
    9. '-(' → logprob: -15.005438804626465
    10. '-a' → logprob: -15.255438804626465

Token 80: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.896309739408025e-07
    2. ' a' → logprob: -14.250000953674316
    3. 'int' → logprob: -18.625
    4. '	a' → logprob: -20.125
    5. '(a' → logprob: -20.5
    6. '   ' → logprob: -21.0
    7. 'а' → logprob: -22.125
    8. ' ' → logprob: -22.125
    9. 'b' → logprob: -22.75
    10. ')a' → logprob: -23.75

Token 81: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4287536144256592
    2. ' //' → logprob: -1.0537536144256592
    3. 'b' → logprob: -10.803753852844238
    4. ' ' → logprob: -11.428753852844238
    5. ' b' → logprob: -11.553753852844238
    6. '```' → logprob: -12.678753852844238
    7. ' ' → logprob: -13.178753852844238
    8. 'a' → logprob: -13.303753852844238
    9. '//=' → logprob: -13.928753852844238
    10. '...' → logprob: -14.178753852844238

Token 82: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.5491004129871726e-05
    2. ' b' → logprob: -10.000045776367188
    3. '   ' → logprob: -21.000045776367188
    4. '	b' → logprob: -21.125045776367188
    5. ')b' → logprob: -21.125045776367188
    6. ' ' → logprob: -21.500045776367188
    7. '  ' → logprob: -23.375045776367188
    8. '>b' → logprob: -24.625045776367188
    9. '_b' → logprob: -25.375045776367188
    10. '%b' → logprob: -25.750045776367188

Token 83: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.875000953674316
    3. '))' → logprob: -16.5
    4. ' )' → logprob: -16.75
    5. ')return' → logprob: -17.25
    6. ')`' → logprob: -18.0
    7. ')#' → logprob: -18.0
    8. ')

' → logprob: -18.375
    9. '<|end|>' → logprob: -18.75
    10. ')}' → logprob: -18.875

Token 84: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011302133789286017
    2. 'class' → logprob: -7.376130104064941
    3. '#' → logprob: -8.251130104064941
    4. '
' → logprob: -9.501130104064941
    5. '\' → logprob: -9.626130104064941
    6. ')' → logprob: -10.751130104064941
    7. 'd' → logprob: -11.501130104064941
    8. ' def' → logprob: -11.501130104064941
    9. ' ' → logprob: -12.251130104064941
    10. '    
' → logprob: -12.376130104064941

Token 85: ' set' (ID: 920)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.050464045256376266
    2. ' main' → logprob: -4.050464153289795
    3. 'g' → logprob: -4.550464153289795
    4. 'pow' → logprob: -4.800464153289795
    5. 'ceil' → logprob: -5.800464153289795
    6. 'custom' → logprob: -6.050464153289795
    7. 'is' → logprob: -6.425464153289795
    8. 'binary' → logprob: -6.675464153289795
    9. 'solve' → logprob: -6.925464153289795
    10. 's' → logprob: -7.050464153289795

Token 86: '_rec' (ID: 35314)
  Prédit: 'uptools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uptools' → logprob: -1.0676296949386597
    2. '()' → logprob: -1.1926296949386597
    3. 's' → logprob: -2.442629814147949
    4. '(' → logprob: -2.942629814147949
    5. '<|end|>' → logprob: -2.942629814147949
    6. 'default' → logprob: -2.942629814147949
    7. '<|end|>' → logprob: -3.567629814147949
    8. 'attr' → logprob: -4.317629814147949
    9. 'def' → logprob: -4.317629814147949
    10. 'tlement' → logprob: -4.692629814147949

Token 87: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.5451140403747559
    2. 'ursive' → logprob: -1.5451140403747559
    3. 'ursor' → logprob: -1.6701140403747559
    4. 't' → logprob: -4.420114040374756
    5. '(' → logprob: -6.045114040374756
    6. 'ur' → logprob: -7.295114040374756
    7. 'urrent' → logprob: -7.545114040374756
    8. '_' → logprob: -8.045114517211914
    9. '(rs' → logprob: -8.295114517211914
    10. 'urs' → logprob: -8.295114517211914

Token 88: '():
' (ID: 8595)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.00071386230411008
    2. '_limit' → logprob: -7.25071382522583
    3. ' limit' → logprob: -13.125714302062988
    4. '(limit' → logprob: -14.500714302062988
    5. '-limit' → logprob: -14.750714302062988
    6. 'Limit' → logprob: -15.125714302062988
    7. 'depth' → logprob: -15.125714302062988
    8. 'error' → logprob: -15.750714302062988
    9. 'lim' → logprob: -15.875714302062988
    10. '_depth' → logprob: -16.250713348388672

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08560805767774582
    2. 'sys' → logprob: -2.7106080055236816
    3. 'import' → logprob: -4.210608005523682
    4. ' sys' → logprob: -8.21060848236084
    5. '	sys' → logprob: -8.46060848236084
    6. '(sys' → logprob: -9.08560848236084
    7. '=sys' → logprob: -9.33560848236084
    8. '```' → logprob: -11.33560848236084
    9. '  ' → logprob: -12.33560848236084
    10. '_sys' → logprob: -12.96060848236084

Token 90: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.00018780550453811884
    2. 'import' → logprob: -9.250187873840332
    3. ' sys' → logprob: -9.500187873840332
    4. '   ' → logprob: -11.000187873840332
    5. '	sys' → logprob: -16.000186920166016
    6. '  ' → logprob: -18.250186920166016
    7. ' ' → logprob: -18.375186920166016
    8. '=sys' → logprob: -18.750186920166016
    9. '(sys' → logprob: -19.750186920166016
    10. '_sys' → logprob: -20.375186920166016

Token 91: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.0001855406299000606
    2. '.setdefault' → logprob: -8.6251859664917
    3. '#set' → logprob: -12.7501859664917
    4. 'set' → logprob: -13.6251859664917
    5. '.' → logprob: -13.7501859664917
    6. ':set' → logprob: -14.7501859664917
    7. '   ' → logprob: -16.000185012817383
    8. '.stdin' → logprob: -16.375185012817383
    9. ' ' → logprob: -16.750185012817383
    10. '=set' → logprob: -16.875185012817383

Token 92: 'rec' (ID: 9285)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.1997700333595276
    2. 'rec' → logprob: -1.8247699737548828
    3. '_rec' → logprob: -4.324769973754883
    4. '_limit' → logprob: -5.949769973754883
    5. '_' → logprob: -6.199769973754883
    6. '_max' → logprob: -6.699769973754883
    7. ' recursion' → logprob: -8.199769973754883
    8. '_depth' → logprob: -9.449769973754883
    9. 'limit' → logprob: -9.574769973754883
    10. 'ecution' → logprob: -9.949769973754883

Token 93: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -3.941161776310764e-05
    2. 'urs' → logprob: -10.250039100646973
    3. 'ursive' → logprob: -14.000039100646973
    4. 'ur' → logprob: -14.000039100646973
    5. '_' → logprob: -14.500039100646973
    6. 'c' → logprob: -14.625039100646973
    7. 'limit' → logprob: -14.875039100646973
    8. '_limit' → logprob: -15.625039100646973
    9. 'cur' → logprob: -16.25004005432129
    10. 'urse' → logprob: -16.62504005432129

Token 94: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.00012606535165105015
    2. 'lim' → logprob: -9.625125885009766
    3. 'depth' → logprob: -11.250125885009766
    4. 'ursion' → logprob: -11.250125885009766
    5. '_limit' → logprob: -11.375125885009766
    6. 'al' → logprob: -11.625125885009766
    7. ' limit' → logprob: -12.375125885009766
    8. 'alc' → logprob: -13.125125885009766
    9. 'imit' → logprob: -13.125125885009766
    10. 'ault' → logprob: -13.875125885009766

Token 95: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.537180211627856e-05
    2. ' (' → logprob: -10.125045776367188
    3. '((' → logprob: -12.625045776367188
    4. '(
' → logprob: -14.250045776367188
    5. '(int' → logprob: -15.125045776367188
    6. '<|end|>' → logprob: -15.375045776367188
    7. '(

' → logprob: -15.625045776367188
    8. '()' → logprob: -16.375045776367188
    9. '100' → logprob: -16.375045776367188
    10. '  ' → logprob: -16.625045776367188

Token 96: '500' (ID: 3234)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.011390617117285728
    2. '100' → logprob: -4.511390686035156
    3. ' ' → logprob: -8.011390686035156
    4. '500' → logprob: -12.761390686035156
    5. '300' → logprob: -13.011390686035156
    6. '200' → logprob: -13.511390686035156
    7. '400' → logprob: -14.011390686035156
    8. 'int' → logprob: -14.136390686035156
    9. 'pow' → logprob: -14.136390686035156
    10. '1' → logprob: -14.511390686035156

Token 97: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.5807965397834778
    2. '0' → logprob: -0.8307965397834778
    3. '00' → logprob: -5.330796718597412
    4. '_' → logprob: -13.080796241760254
    5. '050' → logprob: -14.205796241760254
    6. '007' → logprob: -14.455796241760254
    7. ')' → logprob: -14.830796241760254
    8. '006' → logprob: -15.205796241760254
    9. '001' → logprob: -15.455796241760254
    10. '010' → logprob: -15.580796241760254

Token 98: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -14.125001907348633
    3. '))' → logprob: -14.500001907348633
    4. '()' → logprob: -14.875001907348633
    5. ')
' → logprob: -15.125001907348633
    6. '0' → logprob: -17.750001907348633
    7. ')

' → logprob: -17.750001907348633
    8. '())' → logprob: -17.875001907348633
    9. '`)' → logprob: -18.250001907348633
    10. '）' → logprob: -18.625001907348633

Token 99: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')
' → logprob: -15.125000953674316
    4. '))' → logprob: -15.625000953674316
    5. '()' → logprob: -17.25
    6. ')

' → logprob: -17.625
    7. ')`' → logprob: -18.625
    8. ')}' → logprob: -18.875
    9. '),' → logprob: -19.0
    10. ')set' → logprob: -20.125

Token 100: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06517646461725235
    2. 'def' → logprob: -3.315176486968994
    3. '<|end|>' → logprob: -4.065176486968994
    4. '<|end|>' → logprob: -5.815176486968994
    5. '

' → logprob: -5.940176486968994
    6. '#' → logprob: -6.565176486968994
    7. '\n' → logprob: -6.815176486968994
    8. '\' → logprob: -7.315176486968994
    9. '
' → logprob: -8.440176010131836
    10. '```' → logprob: -8.815176010131836

Token 101: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.025077305734157562
    2. ' solve' → logprob: -4.7750773429870605
    3. ' dfs' → logprob: -5.1500773429870605
    4. ' custom' → logprob: -5.5250773429870605
    5. ' binary' → logprob: -5.6500773429870605
    6. ' bfs' → logprob: -7.4000773429870605
    7. ' factorial' → logprob: -7.4000773429870605
    8. '_' → logprob: -7.9000773429870605
    9. 'main' → logprob: -8.275076866149902
    10. '_main' → logprob: -8.775076866149902

Token 102: '_mod' (ID: 15325)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.11312000453472137
    2. '_' → logprob: -2.9881200790405273
    3. '_max' → logprob: -3.6131200790405273
    4. '_data' → logprob: -5.988120079040527
    5. '_answer' → logprob: -6.238120079040527
    6. '_line' → logprob: -6.238120079040527
    7. '_user' → logprob: -6.238120079040527
    8. '_value' → logprob: -6.488120079040527
    9. '_sum' → logprob: -6.488120079040527
    10. '_int' → logprob: -6.863120079040527

Token 103: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007592313922941685
    2. '():
' → logprob: -5.75759220123291
    3. '(a' → logprob: -7.00759220123291
    4. '_' → logprob: -7.50759220123291
    5. 'ulus' → logprob: -7.63259220123291
    6. '_value' → logprob: -8.00759220123291
    7. 'ulo' → logprob: -8.38259220123291
    8. '()(' → logprob: -8.38259220123291
    9. 'ULO' → logprob: -8.88259220123291
    10. '_factor' → logprob: -9.00759220123291

Token 104: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.16097477078437805
    2. '   ' → logprob: -2.0359747409820557
    3. '():
' → logprob: -4.160974979400635
    4. '()' → logprob: -6.410974979400635
    5. ':' → logprob: -7.785974979400635
    6. ' ():' → logprob: -8.285974502563477
    7. '(' → logprob: -8.785974502563477
    8. ' :' → logprob: -11.410974502563477
    9. ':
' → logprob: -11.660974502563477
    10. '):' → logprob: -11.785974502563477

Token 105: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4389914870262146
    2. 'return' (adapté à ' return') → logprob: -2.0639915466308594
    3. ' ' → logprob: -2.1889915466308594
    4. '   ' → logprob: -2.3139915466308594
    5. '10' → logprob: -5.563991546630859
    6. '409' → logprob: -6.063991546630859
    7. '1' → logprob: -6.313991546630859
    8. '20' → logprob: -6.813991546630859
    9. '100' → logprob: -6.938991546630859
    10. '46' → logprob: -7.063991546630859

Token 106: ' pow' (ID: 9779)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.7754698991775513
    2. ' ' → logprob: -0.9004698991775513
    3. '10' → logprob: -2.0254697799682617
    4. '(' → logprob: -7.650469779968262
    5. '1' → logprob: -8.150469779968262
    6. ' (' → logprob: -8.400469779968262
    7. '998' → logprob: -9.150469779968262
    8. 'int' → logprob: -10.525469779968262
    9. 'pow' → logprob: -10.525469779968262
    10. ' int' → logprob: -11.775469779968262

Token 107: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.145893394947052
    2. '<|end|>' → logprob: -2.0208933353424072
    3. '(pow' → logprob: -6.645893573760986
    4. '(
' → logprob: -6.895893573760986
    5. '<|end|>' → logprob: -7.270893573760986
    6. '10' → logprob: -10.020893096923828
    7. ')' → logprob: -10.895893096923828
    8. '(base' → logprob: -11.020893096923828
    9. '```' → logprob: -11.270893096923828
    10. '()' → logprob: -11.395893096923828

Token 108: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0720236599445343
    2. '10' → logprob: -3.447023630142212
    3. '(' → logprob: -3.822023630142212
    4. ')' → logprob: -4.197023868560791
    5. '(
' → logprob: -9.072023391723633
    6. '<|end|>' → logprob: -9.197023391723633
    7. '1' → logprob: -9.322023391723633
    8. '100' → logprob: -9.697023391723633
    9. '3' → logprob: -10.197023391723633
    10. '7' → logprob: -10.197023391723633

Token 109: ',' (ID: 11)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -7.111979357432574e-05
    2. '09' → logprob: -10.12507152557373
    3. '**' → logprob: -10.62507152557373
    4. '```' → logprob: -12.50007152557373
    5. '+' → logprob: -13.62507152557373
    6. ' ' → logprob: -13.75007152557373
    7. '009' → logprob: -15.87507152557373
    8. '   ' → logprob: -16.250070571899414
    9. '000' → logprob: -16.750070571899414
    10. '}' → logprob: -16.875070571899414

Token 110: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.500001907348633
    4. '```' → logprob: -20.000001907348633
    5. '09' → logprob: -20.375001907348633
    6. ')' → logprob: -21.125001907348633
    7. '
' → logprob: -21.375001907348633
    8. '  ' → logprob: -22.000001907348633
    9. '10' → logprob: -22.500001907348633
    10. '９' → logprob: -22.500001907348633

Token 111: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '```' → logprob: -19.0
    3. '09' → logprob: -19.375
    4. ' ' → logprob: -19.5
    5. '９' → logprob: -21.5
    6. '   ' → logprob: -21.625
    7. '
' → logprob: -21.75
    8. '10' → logprob: -22.125
    9. '}' → logprob: -22.5
    10. '+' → logprob: -22.5

Token 112: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007687712204642594
    2. ')' → logprob: -7.375768661499023
    3. ' +' → logprob: -9.250768661499023
    4. ')+' → logprob: -10.250768661499023
    5. ',' → logprob: -12.375768661499023
    6. '7' → logprob: -12.750768661499023
    7. ' plus' → logprob: -13.375768661499023
    8. 'plus' → logprob: -14.125768661499023
    9. '+)' → logprob: -14.500768661499023
    10. '+
' → logprob: -15.375768661499023

Token 113: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010072427801787853
    2. '7' → logprob: -4.635072231292725
    3. ' +' → logprob: -8.135072708129883
    4. '+
' → logprob: -12.260072708129883
    5. 'plus' → logprob: -12.385072708129883
    6. '37' → logprob: -12.760072708129883
    7. ' plus' → logprob: -13.135072708129883
    8. '9' → logprob: -14.135072708129883
    9. '6' → logprob: -14.135072708129883
    10. '20' → logprob: -14.260072708129883

Token 114: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.0
    3. ' ' → logprob: -18.875
    4. '

' → logprob: -20.25
    5. '```' → logprob: -20.25
    6. '
' → logprob: -20.875
    7. '   ' → logprob: -21.625
    8. '７' → logprob: -22.125
    9. '' → logprob: -22.5
    10. '9' → logprob: -22.625

Token 115: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -20.875
    3. ' ' → logprob: -20.875
    4. '```' → logprob: -21.125
    5. '   ' → logprob: -21.5
    6. '７' → logprob: -21.75
    7. '

' → logprob: -23.0
    8. '​' → logprob: -23.75
    9. '07' → logprob: -24.0
    10. '' → logprob: -24.375

Token 116: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.834019660949707
    2. ')' → logprob: -0.959019660949707
    3. '<|end|>' → logprob: -2.334019660949707
    4. '#' → logprob: -3.334019660949707
    5. ':' → logprob: -3.834019660949707
    6. '*' → logprob: -4.584019660949707
    7. '.' → logprob: -5.084019660949707
    8. '(' → logprob: -6.084019660949707
    9. '
' → logprob: -6.209019660949707
    10. '\' → logprob: -6.334019660949707

Token 117: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08043961971998215
    2. '_' → logprob: -3.705439567565918
    3. '#' → logprob: -4.080439567565918
    4. 'd' → logprob: -4.205439567565918
    5. '
' → logprob: -4.955439567565918
    6. '\' → logprob: -5.580439567565918
    7. '<|end|>' → logprob: -5.705439567565918
    8. 'M' → logprob: -6.955439567565918
    9. '```' → logprob: -7.205439567565918
    10. '

' → logprob: -7.705439567565918

Token 118: ' generate' (ID: 10419)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.019162867218255997
    2. ' solve' → logprob: -4.269162654876709
    3. 'main' → logprob: -6.144162654876709
    4. ' mod' → logprob: -7.019162654876709
    5. ' max' → logprob: -7.769162654876709
    6. ' factorial' → logprob: -7.769162654876709
    7. 'solve' → logprob: -8.019163131713867
    8. ' gcd' → logprob: -8.894163131713867
    9. ' is' → logprob: -9.269163131713867
    10. ' pow' → logprob: -9.269163131713867

Token 119: '_al' (ID: 18493)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5751795172691345
    2. '_array' → logprob: -0.9501795172691345
    3. '_list' → logprob: -4.075179576873779
    4. '_numbers' → logprob: -4.450179576873779
    5. '_sequence' → logprob: -5.575179576873779
    6. '_parent' → logprob: -5.950179576873779
    7. '_code' → logprob: -6.450179576873779
    8. '_pal' → logprob: -6.450179576873779
    9. '_prefix' → logprob: -6.950179576873779
    10. '_per' → logprob: -6.950179576873779

Token 120: 'phabet' (ID: 29466)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.22778289020061493
    2. 'phabet' → logprob: -1.8527828454971313
    3. 'ph' → logprob: -3.352782964706421
    4. 'pha' → logprob: -5.352782726287842
    5. 'p' → logprob: -5.477782726287842
    6. 'lst' → logprob: -6.352782726287842
    7. 'phanumeric' → logprob: -8.477783203125
    8. 'ls' → logprob: -8.602783203125
    9. 'lf' → logprob: -9.102783203125
    10. 'g' → logprob: -9.102783203125

Token 121: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005087109748274088
    2. '()' → logprob: -8.125508308410645
    3. '():
' → logprob: -9.250508308410645
    4. ' ():' → logprob: -9.375508308410645
    5. '_lower' → logprob: -11.875508308410645
    6. '_list' → logprob: -12.625508308410645
    7. 's' → logprob: -12.750508308410645
    8. '_string' → logprob: -12.875508308410645
    9. '(lower' → logprob: -13.000508308410645
    10. '_upper' → logprob: -13.000508308410645

Token 122: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1285983920097351
    2. '():
' → logprob: -2.12859845161438
    3. '()' → logprob: -6.878598213195801
    4. ' ():' → logprob: -8.1285982131958
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.2535982131958
    6. '   ' → logprob: -9.3785982131958
    7. ':' → logprob: -9.6285982131958
    8. '():
' → logprob: -10.2535982131958
    9. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -10.7535982131958
    10. ' ()' → logprob: -11.8785982131958

Token 123: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6719263792037964
    2. 'return' (adapté à ' return') → logprob: -0.7969263792037964
    3. 'import' → logprob: -3.546926498413086
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.171926498413086
    5. '"' → logprob: -6.546926498413086
    6. '   ' → logprob: -7.546926498413086
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -7.546926498413086
    8. ' import' → logprob: -7.546926498413086
    9. ' [' → logprob: -8.046926498413086
    10. '[' → logprob: -8.796926498413086

Token 124: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3115140497684479
    2. ' list' → logprob: -1.6865140199661255
    3. '[' → logprob: -3.061514139175415
    4. '[list' → logprob: -4.436513900756836
    5. 'list' → logprob: -5.061513900756836
    6. ' '' → logprob: -5.186513900756836
    7. ''' → logprob: -5.311513900756836
    8. '['' → logprob: -5.561513900756836
    9. '[string' → logprob: -6.936513900756836
    10. '"' → logprob: -7.436513900756836

Token 125: 'chr' (ID: 33902)
  Prédit: 'chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.002479581395164132
    2. ' chr' → logprob: -6.002479553222656
    3. '(chr' → logprob: -12.502479553222656
    4. '_chr' → logprob: -16.377479553222656
    5. 'c' → logprob: -17.377479553222656
    6. ' ' → logprob: -17.752479553222656
    7. 'ch' → logprob: -19.502479553222656
    8. 'char' → logprob: -20.252479553222656
    9. '   ' → logprob: -20.877479553222656
    10. 'Chr' → logprob: -21.127479553222656

Token 126: '(ord' (ID: 199585)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7931933403015137
    2. '(i' → logprob: -0.9181933403015137
    3. '(ord' → logprob: -1.9181933403015137
    4. '(x' → logprob: -6.668193340301514
    5. '(o' → logprob: -9.918193817138672
    6. '(code' → logprob: -10.168193817138672
    7. '((' → logprob: -10.793193817138672
    8. '(k' → logprob: -10.793193817138672
    9. '(n' → logprob: -11.293193817138672
    10. '(a' → logprob: -11.793193817138672

Token 127: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -5.991464786347933e-05
    2. '("' → logprob: -10.250060081481934
    3. '(' → logprob: -10.625060081481934
    4. ' ('' → logprob: -15.625060081481934
    5. 'a' → logprob: -16.750059127807617
    6. '(('' → logprob: -17.500059127807617
    7. ''a' → logprob: -18.750059127807617
    8. '(a' → logprob: -19.125059127807617
    9. '(
' → logprob: -19.500059127807617
    10. '(\'' → logprob: -20.250059127807617

Token 128: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.491498531133402e-06
    2. 'A' → logprob: -11.875009536743164
    3. ''a' → logprob: -13.500009536743164
    4. 'а' → logprob: -14.375009536743164
    5. ' a' → logprob: -15.000009536743164
    6. '`' → logprob: -16.250009536743164
    7. 'z' → logprob: -17.000009536743164
    8. '_a' → logprob: -17.625009536743164
    9. '```' → logprob: -17.875009536743164
    10. '(a' → logprob: -18.500009536743164

Token 129: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0001963881659321487
    2. ')' → logprob: -8.62519645690918
    3. ')+' → logprob: -11.37519645690918
    4. '")' → logprob: -13.12519645690918
    5. ''' → logprob: -14.00019645690918
    6. '")+' → logprob: -14.37519645690918
    7. 'a' → logprob: -14.50019645690918
    8. '+')' → logprob: -14.62519645690918
    9. ''+' → logprob: -15.37519645690918
    10. '`)' → logprob: -15.75019645690918

Token 130: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.405967116355896
    2. '+i' → logprob: -1.280967116355896
    3. ')' → logprob: -3.5309672355651855
    4. ' +' → logprob: -3.6559672355651855
    5. ')+' → logprob: -8.155966758728027
    6. '+x' → logprob: -8.530966758728027
    7. '+j' → logprob: -8.905966758728027
    8. '+k' → logprob: -9.280966758728027
    9. '),' → logprob: -10.780966758728027
    10. ' ' → logprob: -11.155966758728027

Token 131: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004078758880496025
    2. ' i' → logprob: -5.5040788650512695
    3. ' ' → logprob: -16.379077911376953
    4. 'x' → logprob: -16.504077911376953
    5. '	i' → logprob: -17.129077911376953
    6. '   ' → logprob: -18.129077911376953
    7. ')' → logprob: -18.254077911376953
    8. '(i' → logprob: -19.004077911376953
    9. '_)' → logprob: -19.254077911376953
    10. '_i' → logprob: -19.379077911376953

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ' )' → logprob: -11.750008583068848
    3. 'for' → logprob: -14.500008583068848
    4. ' for' → logprob: -15.250008583068848
    5. ')]' → logprob: -16.250009536743164
    6. ' ' → logprob: -17.625009536743164
    7. ')
' → logprob: -18.125009536743164
    8. '))' → logprob: -18.250009536743164
    9. '）' → logprob: -18.500009536743164
    10. '')' → logprob: -18.625009536743164

Token 133: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005979277193546295
    2. 'for' → logprob: -5.130979061126709
    3. ')' → logprob: -10.630979537963867
    4. '	for' → logprob: -10.755979537963867
    5. ' ' → logprob: -12.755979537963867
    6. '   ' → logprob: -13.005979537963867
    7. ' )' → logprob: -16.880979537963867
    8. '  ' → logprob: -17.255979537963867
    9. ' ' → logprob: -17.255979537963867
    10. ' fo' → logprob: -17.880979537963867

Token 134: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0015337858349084854
    2. 'range' → logprob: -6.5015339851379395
    3. ' i' → logprob: -10.501533508300781
    4. ' xrange' → logprob: -13.001533508300781
    5. '	range' → logprob: -14.126533508300781
    6. '_range' → logprob: -14.626533508300781
    7. ' in' → logprob: -15.126533508300781
    8. '(range' → logprob: -15.876533508300781
    9. ' ' → logprob: -16.62653350830078
    10. 'i' → logprob: -17.00153350830078

Token 135: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006820747163146734
    2. 'in' → logprob: -5.0068206787109375
    3. ' range' → logprob: -10.006820678710938
    4. 'n' → logprob: -10.756820678710938
    5. 'range' → logprob: -10.756820678710938
    6. ' ' → logprob: -11.381820678710938
    7. ' n' → logprob: -12.381820678710938
    8. ' i' → logprob: -13.756820678710938
    9. ',' → logprob: -15.131820678710938
    10. ')' → logprob: -15.756820678710938

Token 136: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022422909736633
    2. ' range' → logprob: -1.910224199295044
    3. ' ' → logprob: -16.78522491455078
    4. '	range' → logprob: -17.16022491455078
    5. '(range' → logprob: -18.03522491455078
    6. ' xrange' → logprob: -18.41022491455078
    7. '_range' → logprob: -20.03522491455078
    8. '   ' → logprob: -20.16022491455078
    9. 'rang' → logprob: -20.78522491455078
    10. '.range' → logprob: -21.16022491455078

Token 137: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000627014203928411
    2. '26' → logprob: -7.375627040863037
    3. ' (' → logprob: -14.625626564025879
    4. '(ord' → logprob: -17.750627517700195
    5. '(
' → logprob: -18.000627517700195
    6. '25' → logprob: -18.750627517700195
    7. ' ' → logprob: -19.625627517700195
    8. '('' → logprob: -19.750627517700195
    9. '```' → logprob: -20.625627517700195
    10. '((' → logprob: -20.875627517700195

Token 138: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '(' → logprob: -16.25000762939453
    4. '   ' → logprob: -17.75000762939453
    5. '27' → logprob: -17.87500762939453
    6. '25' → logprob: -18.00000762939453
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -19.87500762939453
    8. '```' → logprob: -20.12500762939453
    9. '
' → logprob: -20.37500762939453
    10. 'alphabet' → logprob: -20.37500762939453

Token 139: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.5577775128767826e-06
    2. ')' → logprob: -12.625005722045898
    3. ']' → logprob: -13.750005722045898
    4. ' )' → logprob: -13.875005722045898
    5. ')]
' → logprob: -15.875005722045898
    6. ')}' → logprob: -17.1250057220459
    7. ')])' → logprob: -17.8750057220459
    8. '])]' → logprob: -17.8750057220459
    9. '))' → logprob: -18.1250057220459
    10. ' ]' → logprob: -18.1250057220459

Token 140: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11444901674985886
    2. '
' → logprob: -2.7394490242004395
    3. '<|end|>' → logprob: -4.2394490242004395
    4. '\' → logprob: -4.6144490242004395
    5. '#' → logprob: -4.7394490242004395
    6. '\n' → logprob: -5.3644490242004395
    7. '_' → logprob: -6.3644490242004395
    8. '

' → logprob: -7.2394490242004395
    9. '<|end|>' → logprob: -7.2394490242004395
    10. 'class' → logprob: -7.4894490242004395

Token 141: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2606739103794098
    2. ' generate' → logprob: -2.010673999786377
    3. 'main' → logprob: -3.010673999786377
    4. 'generate' → logprob: -4.260673999786377
    5. ' gcd' → logprob: -4.635673999786377
    6. ' is' → logprob: -4.885673999786377
    7. ' custom' → logprob: -6.010673999786377
    8. ' reverse' → logprob: -6.385673999786377
    9. 'is' → logprob: -6.760673999786377
    10. ' solve' → logprob: -6.885673999786377

Token 142: '_d' (ID: 1565)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.017165658995509148
    2. '_max' → logprob: -4.517165660858154
    3. '_input' → logprob: -5.392165660858154
    4. '_' → logprob: -8.017165184020996
    5. '_sum' → logprob: -8.517165184020996
    6. '_version' → logprob: -8.767165184020996
    7. '_prime' → logprob: -9.142165184020996
    8. '_mode' → logprob: -9.392165184020996
    9. '_pow' → logprob: -10.017165184020996
    10. 'input' → logprob: -10.142165184020996

Token 143: 'irections' (ID: 119283)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.14520516991615295
    2. 'irection' → logprob: -3.27020525932312
    3. 'irections' → logprob: -3.52020525932312
    4. 'efs' → logprob: -3.89520525932312
    5. 'istance' → logprob: -4.020205020904541
    6. 'elta' → logprob: -4.645205020904541
    7. 'e' → logprob: -5.270205020904541
    8. 'ay' → logprob: -5.645205020904541
    9. 'ir' → logprob: -5.895205020904541
    10. 'eep' → logprob: -6.770205020904541

Token 144: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006333283381536603
    2. '():
' → logprob: -7.500633239746094
    3. ' ():' → logprob: -9.500633239746094
    4. '()' → logprob: -12.250633239746094
    5. '():
' → logprob: -14.375633239746094
    6. ' ()' → logprob: -16.625633239746094
    7. '():

' → logprob: -17.000633239746094
    8. '(' → logprob: -17.625633239746094
    9. 'def' → logprob: -18.125633239746094
    10. '_' → logprob: -18.125633239746094

Token 145: '   ' (ID: 271)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.05697479099035263
    2. '():' → logprob: -2.9319748878479004
    3. '   ' → logprob: -6.3069748878479
    4. '()' → logprob: -8.556974411010742
    5. '():
' → logprob: -10.306974411010742
    6. '):
' → logprob: -10.931974411010742
    7. ':
' → logprob: -11.556974411010742
    8. 'return' → logprob: -12.806974411010742
    9. '()
' → logprob: -12.931974411010742
    10. ' return' → logprob: -13.306974411010742

Token 146: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3143472373485565
    2. ' return' → logprob: -1.314347267150879
    3. '   ' → logprob: -7.439347267150879
    4. '[
' → logprob: -8.189347267150879
    5. '[(' → logprob: -8.689347267150879
    6. '[' → logprob: -10.814347267150879
    7. '	return' → logprob: -11.314347267150879
    8. ' [(' → logprob: -11.939347267150879
    9. '
' → logprob: -12.064347267150879
    10. ' [' → logprob: -13.189347267150879

Token 147: ' [[' (ID: 9237)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0005966392927803099
    2. ' [(' → logprob: -7.500596523284912
    3. '[' → logprob: -10.25059700012207
    4. '[[' → logprob: -11.75059700012207
    5. '[((' → logprob: -15.50059700012207
    6. ' [' → logprob: -16.12559700012207
    7. '((' → logprob: -16.62559700012207
    8. ' ' → logprob: -17.12559700012207
    9. '[-' → logprob: -17.87559700012207
    10. '[
' → logprob: -17.87559700012207

Token 148: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5515798926353455
    2. '-' → logprob: -1.5515799522399902
    3. '1' → logprob: -1.5515799522399902
    4. ' ' → logprob: -9.051579475402832
    5. ' -' → logprob: -11.926579475402832
    6. '(' → logprob: -11.926579475402832
    7. '(-' → logprob: -13.176579475402832
    8. '[-' → logprob: -13.551579475402832
    9. '[' → logprob: -13.801579475402832
    10. '   ' → logprob: -15.176579475402832

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.318681188422488e-05
    2. ' ,' → logprob: -11.87501335144043
    3. '0' → logprob: -12.00001335144043
    4. ',
' → logprob: -18.75001335144043
    5. ' ' → logprob: -20.12501335144043
    6. '   ' → logprob: -20.87501335144043
    7. '],' → logprob: -21.12501335144043
    8. ',-' → logprob: -21.37501335144043
    9. '，' → logprob: -22.12501335144043
    10. '  ' → logprob: -22.62501335144043

Token 150: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. '  ' → logprob: -17.255233764648438
    4. '   ' → logprob: -18.255233764648438
    5. ' ' → logprob: -19.130233764648438
    6. '	' → logprob: -20.880233764648438
    7. '
' → logprob: -21.380233764648438
    8. '    ' → logprob: -21.755233764648438
    9. ',' → logprob: -22.130233764648438
    10. '０' → logprob: -22.130233764648438

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.250036239624023
    4. '  ' → logprob: -18.375036239624023
    5. '-' → logprob: -19.125036239624023
    6. '
' → logprob: -20.000036239624023
    7. '1' → logprob: -20.125036239624023
    8. ' ' → logprob: -20.875036239624023
    9. '０' → logprob: -20.875036239624023
    10. '﻿' → logprob: -21.062536239624023

Token 152: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0016040096525102854
    2. '],
' → logprob: -6.751604080200195
    3. '],[' → logprob: -7.751604080200195
    4. ' ],' → logprob: -13.626604080200195
    5. '],

' → logprob: -13.626604080200195
    6. ']' → logprob: -13.751604080200195
    7. '],
' → logprob: -16.001604080200195
    8. ',' → logprob: -16.501604080200195
    9. '),' → logprob: -17.626604080200195
    10. '},' → logprob: -17.626604080200195

Token 153: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0407421700656414
    2. ' [' → logprob: -3.5407421588897705
    3. '[-' → logprob: -4.54074239730835
    4. ' [-' → logprob: -8.415741920471191
    5. '0' → logprob: -10.540741920471191
    6. ' ' → logprob: -11.290741920471191
    7. '   ' → logprob: -12.165741920471191
    8. '  ' → logprob: -15.665741920471191
    9. ' ' → logprob: -16.040742874145508
    10. '    ' → logprob: -16.290742874145508

Token 154: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03804333135485649
    2. '0' → logprob: -3.288043260574341
    3. ' -' → logprob: -13.538043022155762
    4. ' ' → logprob: -14.538043022155762
    5. '   ' → logprob: -18.663043975830078
    6. '−' → logprob: -18.788043975830078
    7. '```' → logprob: -18.913043975830078
    8. '[' → logprob: -19.038043975830078
    9. '﻿' → logprob: -19.788043975830078
    10. '1' → logprob: -20.288043975830078

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2020991056924686e-05
    2. '1' → logprob: -10.500032424926758
    3. ' ,' → logprob: -12.500032424926758
    4. '-' → logprob: -14.750032424926758
    5. ',-' → logprob: -15.625032424926758
    6. ',
' → logprob: -16.625032424926758
    7. ' ' → logprob: -17.125032424926758
    8. '],' → logprob: -18.000032424926758
    9. ' -' → logprob: -18.500032424926758
    10. '[' → logprob: -19.375032424926758

Token 156: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011063620448112488
    2. '-' → logprob: -4.511063575744629
    3. ' ' → logprob: -11.136063575744629
    4. ' -' → logprob: -13.636063575744629
    5. '   ' → logprob: -18.136064529418945
    6. '１' → logprob: -20.011064529418945
    7. '−' → logprob: -20.136064529418945
    8. '
' → logprob: -20.386064529418945
    9. '  ' → logprob: -20.511064529418945
    10. '﻿' → logprob: -20.761064529418945

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011717714369297028
    2. '-' → logprob: -6.751171588897705
    3. ' ' → logprob: -13.376172065734863
    4. ' -' → logprob: -17.376171112060547
    5. '
' → logprob: -19.001171112060547
    6. ']' → logprob: -19.126171112060547
    7. '```' → logprob: -19.376171112060547
    8. '１' → logprob: -19.501171112060547
    9. '  ' → logprob: -20.626171112060547
    10. '   ' → logprob: -20.751171112060547

Token 158: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -2.0339031834737398e-05
    2. ']' → logprob: -11.875020027160645
    3. '],[' → logprob: -12.125020027160645
    4. ' ],' → logprob: -12.250020027160645
    5. '],
' → logprob: -13.000020027160645
    6. ']]' → logprob: -14.500020027160645
    7. '},' → logprob: -15.125020027160645
    8. ',' → logprob: -16.62502098083496
    9. '],

' → logprob: -17.12502098083496
    10. ''],' → logprob: -17.87502098083496

Token 159: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0005891331238672137
    2. ' [-' → logprob: -7.750589370727539
    3. '[' → logprob: -8.750589370727539
    4. '   ' → logprob: -16.87558937072754
    5. ' [' → logprob: -17.00058937072754
    6. '-' → logprob: -18.25058937072754
    7. ' ' → logprob: -18.25058937072754
    8. '	' → logprob: -20.37558937072754
    9. '  ' → logprob: -20.50058937072754
    10. '{-' → logprob: -20.75058937072754

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '-' → logprob: -17.9375
    4. '１' → logprob: -18.1875
    5. '

' → logprob: -18.5
    6. '
' → logprob: -18.5
    7. '```' → logprob: -18.625
    8. '১' → logprob: -19.1875
    9. '१' → logprob: -19.375
    10. ']' → logprob: -19.6875

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008299979381263256
    2. ' ,' → logprob: -7.625830173492432
    3. '0' → logprob: -8.000829696655273
    4. ' ' → logprob: -12.000829696655273
    5. '1' → logprob: -15.625829696655273
    6. '[' → logprob: -15.875829696655273
    7. '   ' → logprob: -16.125829696655273
    8. ',
' → logprob: -16.375829696655273
    9. '<|end|>' → logprob: -16.875829696655273
    10. '],' → logprob: -17.313329696655273

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029750484973192215
    2. ' ' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.77975082397461
    4. ',' → logprob: -17.71725082397461
    5. '   ' → logprob: -18.27975082397461
    6. '1' → logprob: -18.34225082397461
    7. '  ' → logprob: -18.52975082397461
    8. '```' → logprob: -18.77975082397461
    9. '
' → logprob: -19.02975082397461
    10. '۰' → logprob: -19.09225082397461

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002966127940453589
    2. ' ' → logprob: -8.125296592712402
    3. ',' → logprob: -15.000296592712402
    4. ' ' → logprob: -17.25029754638672
    5. '۰' → logprob: -17.37529754638672
    6. '   ' → logprob: -17.43779754638672
    7. '
' → logprob: -17.75029754638672
    8. '```' → logprob: -18.00029754638672
    9. '1' → logprob: -18.37529754638672
    10. '０' → logprob: -18.37529754638672

Token 164: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.003225010121241212
    2. ',' → logprob: -5.753224849700928
    3. ' ],' → logprob: -10.753225326538086
    4. ']' → logprob: -11.253225326538086
    5. '],[' → logprob: -11.628225326538086
    6. ' ,' → logprob: -13.753225326538086
    7. '],
' → logprob: -14.003225326538086
    8. '[' → logprob: -14.628225326538086
    9. '},' → logprob: -14.753225326538086
    10. '),' → logprob: -14.753225326538086

Token 165: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06257153302431107
    2. ' [' → logprob: -2.8125715255737305
    3. '0' → logprob: -7.4375715255737305
    4. ' ' → logprob: -11.18757152557373
    5. ',' → logprob: -14.06257152557373
    6. ' ' → logprob: -16.437572479248047
    7. ']' → logprob: -16.437572479248047
    8. '[
' → logprob: -16.937572479248047
    9. '[-' → logprob: -16.937572479248047
    10. '	' → logprob: -17.312572479248047

Token 166: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018029935017693788
    2. ' ' → logprob: -8.6251802444458
    3. '[' → logprob: -15.1251802444458
    4. ',' → logprob: -15.1251802444458
    5. '   ' → logprob: -15.8751802444458
    6. '
' → logprob: -16.750181198120117
    7. '  ' → logprob: -18.125181198120117
    8. '۰' → logprob: -18.375181198120117
    9. '    ' → logprob: -18.625181198120117
    10. '```' → logprob: -19.000181198120117

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006591808632947505
    2. '-' → logprob: -7.875658988952637
    3. ',-' → logprob: -8.250658988952637
    4. '   ' → logprob: -11.875658988952637
    5. ' ,' → logprob: -12.125658988952637
    6. ' -' → logprob: -13.125658988952637
    7. ',
' → logprob: -13.125658988952637
    8. '1' → logprob: -14.750658988952637
    9. ' ,-' → logprob: -15.125658988952637
    10. '
' → logprob: -15.875658988952637

Token 168: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. ' -' → logprob: -15.75
    3. '1' → logprob: -19.125
    4. '```' → logprob: -21.25
    5. ']-' → logprob: -22.25
    6. '−' → logprob: -22.375
    7. ']' → logprob: -22.375
    8. '   ' → logprob: -22.5
    9. '‑' → logprob: -22.625
    10. '-def' → logprob: -22.75

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. ']]' → logprob: -16.125
    4. '   ' → logprob: -18.375
    5. ']' → logprob: -18.625
    6. '１' → logprob: -19.625
    7. ']]
' → logprob: -20.0
    8. '```' → logprob: -20.375
    9. '-' → logprob: -20.875
    10. '
' → logprob: -21.125

Token 170: ']]

' (ID: 84024)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.06203053891658783
    2. ']' → logprob: -2.812030553817749
    3. '],' → logprob: -10.687030792236328
    4. ']}' → logprob: -10.937030792236328
    5. '}]' → logprob: -11.937030792236328
    6. ' ]]' → logprob: -12.437030792236328
    7. ']]]' → logprob: -12.437030792236328
    8. ')]' → logprob: -12.812030792236328
    9. '']]' → logprob: -13.312030792236328
    10. '   ' → logprob: -14.437030792236328

Token 171: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.078839502763003e-05
    2. '#' → logprob: -10.375090599060059
    3. '<|end|>' → logprob: -10.500090599060059
    4. 'class' → logprob: -11.000090599060059
    5. '
' → logprob: -12.250090599060059
    6. '\' → logprob: -12.625090599060059
    7. '[' → logprob: -13.875090599060059
    8. '\n' → logprob: -14.125090599060059
    9. '<|end|>' → logprob: -14.250090599060059
    10. '```' → logprob: -14.375090599060059

Token 172: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.36984774470329285
    2. 'main' → logprob: -1.2448477745056152
    3. ' is' → logprob: -4.494847774505615
    4. 'is' → logprob: -5.369847774505615
    5. ' solve' → logprob: -6.494847774505615
    6. 'solve' → logprob: -7.119847774505615
    7. ' gcd' → logprob: -7.369847774505615
    8. 'binary' → logprob: -7.994847774505615
    9. ' binary' → logprob: -8.119847297668457
    10. 'pow' → logprob: -8.244847297668457

Token 173: '_n' (ID: 2170)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.08760596066713333
    2. '()' → logprob: -3.4626059532165527
    3. 'line' → logprob: -3.5876059532165527
    4. '_input' → logprob: -4.087605953216553
    5. '_int' → logprob: -5.587605953216553
    6. '_' → logprob: -6.587605953216553
    7. 'int' → logprob: -7.337605953216553
    8. '_list' → logprob: -7.712605953216553
    9. '():
' → logprob: -7.962605953216553
    10. '_string' → logprob: -8.212606430053711

Token 174: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.275154709815979
    2. 'umber' → logprob: -2.0251545906066895
    3. 'um' → logprob: -2.7751545906066895
    4. 'umbers' → logprob: -4.0251545906066895
    5. '():
' → logprob: -4.9001545906066895
    6. '():' → logprob: -5.2751545906066895
    7. '_lines' → logprob: -5.7751545906066895
    8. 'def' → logprob: -5.7751545906066895
    9. 'ame' → logprob: -6.9001545906066895
    10. 'ext' → logprob: -7.2751545906066895

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00271952198818326
    2. ' return' → logprob: -6.502719402313232
    3. 'return' → logprob: -7.127719402313232
    4. '()' → logprob: -8.12771987915039
    5. '():' → logprob: -9.25271987915039
    6. '   ' → logprob: -11.87771987915039
    7. ' ()' → logprob: -12.12771987915039
    8. '	return' → logprob: -12.37771987915039
    9. '():
' → logprob: -13.25271987915039
    10. ':' → logprob: -13.62771987915039

Token 176: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.33638155460357666
    2. ' return' → logprob: -1.3363815546035767
    3. '   ' → logprob: -3.961381435394287
    4. 'int' → logprob: -5.586381435394287
    5. ' int' → logprob: -9.836381912231445
    6. '	return' → logprob: -11.461381912231445
    7. '
' → logprob: -13.336381912231445
    8. ' ' → logprob: -14.086381912231445
    9. '   ' → logprob: -14.461381912231445
    10. 'import' → logprob: -15.086381912231445

Token 177: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0006413076189346611
    2. ' int' → logprob: -7.375641345977783
    3. 'list' → logprob: -12.125640869140625
    4. '[int' → logprob: -12.625640869140625
    5. 'map' → logprob: -13.125640869140625
    6. '   ' → logprob: -14.125640869140625
    7. '(int' → logprob: -14.250640869140625
    8. 'in' → logprob: -14.375640869140625
    9. '	int' → logprob: -14.500640869140625
    10. 'ints' → logprob: -14.750640869140625

Token 178: '(custom' (ID: 97881)
  Prédit: '(custom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(custom' → logprob: -0.0024264329113066196
    2. '(input' → logprob: -6.252426624298096
    3. '(sys' → logprob: -8.252426147460938
    4. '(' → logprob: -8.877426147460938
    5. '()' → logprob: -9.877426147460938
    6. 'custom' → logprob: -10.002426147460938
    7. '(c' → logprob: -15.502426147460938
    8. '	custom' → logprob: -15.752426147460938
    9. '(Custom' → logprob: -15.752426147460938
    10. '(system' → logprob: -16.127426147460938

Token 179: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0006217729533091187
    2. '()' → logprob: -8.000621795654297
    3. 'input' → logprob: -8.250621795654297
    4. '_' → logprob: -11.625621795654297
    5. 'Input' → logprob: -12.000621795654297
    6. '())' → logprob: -12.750621795654297
    7. ' input' → logprob: -13.250621795654297
    8. ')' → logprob: -13.625621795654297
    9. '```' → logprob: -13.625621795654297
    10. '()
' → logprob: -14.000621795654297

Token 180: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00020520923135336488
    2. '()' → logprob: -8.500205039978027
    3. '())
' → logprob: -14.125205039978027
    4. '().' → logprob: -14.875205039978027
    5. ' ())' → logprob: -15.375205039978027
    6. ')' → logprob: -15.500205039978027
    7. '()))' → logprob: -16.375205993652344
    8. '();)' → logprob: -16.750205993652344
    9. '()]' → logprob: -17.500205993652344
    10. '()
' → logprob: -17.625205993652344

Token 181: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.847109812544659e-05
    2. '<|end|>' → logprob: -10.000048637390137
    3. '
' → logprob: -13.750048637390137
    4. '#' → logprob: -14.250048637390137
    5. '```' → logprob: -14.875048637390137
    6. ')' → logprob: -15.000048637390137
    7. '<|end|>' → logprob: -15.500048637390137
    8. ' def' → logprob: -15.500048637390137
    9. 'ndef' → logprob: -17.00004768371582
    10. 'de' → logprob: -17.12504768371582

Token 182: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.03824000433087349
    2. ' read' → logprob: -3.2882399559020996
    3. 'custom' → logprob: -9.038240432739258
    4. 'r' → logprob: -11.288240432739258
    5. ' custom' → logprob: -11.288240432739258
    6. 'reads' → logprob: -11.663240432739258
    7. 'list' → logprob: -11.913240432739258
    8. 'map' → logprob: -12.163240432739258
    9. ' reads' → logprob: -12.288240432739258
    10. ' map' → logprob: -12.413240432739258

Token 183: '_a' (ID: 10852)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.738709032535553
    2. '_n' → logprob: -1.1137089729309082
    3. '_' → logprob: -2.488708972930908
    4. '()' → logprob: -2.738708972930908
    5. '_s' → logprob: -4.113708972930908
    6. '_line' → logprob: -4.863708972930908
    7. '_l' → logprob: -5.238708972930908
    8. '_int' → logprob: -5.863708972930908
    9. '_lst' → logprob: -5.988708972930908
    10. '_t' → logprob: -6.488708972930908

Token 184: '():
' (ID: 8595)
  Prédit: 'rray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rray' → logprob: -0.7044001817703247
    2. '()' → logprob: -0.9544001817703247
    3. '():' → logprob: -2.454400062561035
    4. 'rr' → logprob: -4.329400062561035
    5. 'list' → logprob: -4.829400062561035
    6. 'line' → logprob: -5.204400062561035
    7. 'r' → logprob: -6.204400062561035
    8. 'll' → logprob: -6.454400062561035
    9. '():
' → logprob: -6.829400062561035
    10. '_list' → logprob: -7.454400062561035

Token 185: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2508404552936554
    2. 'list' → logprob: -2.000840425491333
    3. '()' → logprob: -3.250840425491333
    4. '():' → logprob: -4.125840663909912
    5. ' return' → logprob: -4.500840663909912
    6. 'map' → logprob: -5.000840663909912
    7. '():
' → logprob: -5.500840663909912
    8. ' list' → logprob: -5.875840663909912
    9. '()[' → logprob: -6.125840663909912
    10. '=list' → logprob: -6.750840663909912

Token 186: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.000122608442325145
    2. 'return' (adapté à ' return') → logprob: -9.750123023986816
    3. 'map' → logprob: -9.750123023986816
    4. ' list' → logprob: -12.125123023986816
    5. 'def' → logprob: -15.125123023986816
    6. 'lambda' → logprob: -15.875123023986816
    7. '   ' → logprob: -16.2501220703125
    8. 'lst' → logprob: -17.5001220703125
    9. 'l' → logprob: -18.7501220703125
    10. '=list' → logprob: -19.1251220703125

Token 187: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -9.968312951968983e-06
    2. ' list' → logprob: -11.750009536743164
    3. 'map' → logprob: -13.250009536743164
    4. '[list' → logprob: -15.500009536743164
    5. '[' → logprob: -18.125009536743164
    6. '(list' → logprob: -18.625009536743164
    7. '	list' → logprob: -19.125009536743164
    8. 'tuple' → logprob: -19.250009536743164
    9. 'l' → logprob: -20.250009536743164
    10. 'lst' → logprob: -20.750009536743164

Token 188: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.666993507067673e-05
    2. '(' → logprob: -10.250036239624023
    3. 'map' → logprob: -13.750036239624023
    4. ' map' → logprob: -16.500036239624023
    5. '	map' → logprob: -17.625036239624023
    6. '(
' → logprob: -17.750036239624023
    7. '()' → logprob: -18.500036239624023
    8. '_map' → logprob: -19.125036239624023
    9. ',map' → logprob: -19.375036239624023
    10. '.map' → logprob: -20.375036239624023

Token 189: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007672171574085951
    2. 'int' → logprob: -4.882672309875488
    3. ',int' → logprob: -10.132672309875488
    4. '<int' → logprob: -11.757672309875488
    5. ' int' → logprob: -12.007672309875488
    6. ']int' → logprob: -12.632672309875488
    7. '=int' → logprob: -12.757672309875488
    8. '[int' → logprob: -13.007672309875488
    9. '(' → logprob: -13.757672309875488
    10. '	int' → logprob: -14.132672309875488

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6980220079421997
    2. '(custom' → logprob: -0.6980220079421997
    3. 'custom' → logprob: -5.44802188873291
    4. ' ,' → logprob: -8.44802188873291
    5. '(' → logprob: -8.57302188873291
    6. ')' → logprob: -9.69802188873291
    7. ' (' → logprob: -10.32302188873291
    8. '	custom' → logprob: -11.19802188873291
    9. ' custom' → logprob: -11.69802188873291
    10. ' ' → logprob: -11.82302188873291

Token 191: ' custom' (ID: 2602)
  Prédit: 'custom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'custom' → logprob: -0.0052386182360351086
    2. ' custom' → logprob: -5.2552385330200195
    3. '	custom' → logprob: -12.75523853302002
    4. '(custom' → logprob: -13.75523853302002
    5. '   ' → logprob: -14.75523853302002
    6. ' ' → logprob: -15.38023853302002
    7. 'input' → logprob: -17.380239486694336
    8. 'sys' → logprob: -17.755239486694336
    9. '
' → logprob: -17.880239486694336
    10. '_custom' → logprob: -18.005239486694336

Token 192: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.5822400857578032e-05
    2. 'input' → logprob: -11.875025749206543
    3. '_' → logprob: -12.000025749206543
    4. ')_' → logprob: -12.125025749206543
    5. '_inputs' → logprob: -13.000025749206543
    6. '(_' → logprob: -13.750025749206543
    7. ')' → logprob: -13.875025749206543
    8. '_output' → logprob: -14.500025749206543
    9. ' _' → logprob: -15.000025749206543
    10. '()' → logprob: -15.125025749206543

Token 193: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.896309739408025e-07
    2. '()' → logprob: -14.750000953674316
    3. ' ().' → logprob: -15.125000953674316
    4. '.' → logprob: -17.375
    5. '   ' → logprob: -18.25
    6. ')' → logprob: -18.625
    7. '(' → logprob: -19.0
    8. '.split' → logprob: -20.0
    9. '))' → logprob: -20.0
    10. '()))' → logprob: -20.5

Token 194: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006717386189848185
    2. 'strip' → logprob: -5.006717205047607
    3. 'rstrip' → logprob: -13.256717681884766
    4. ' split' → logprob: -15.881717681884766
    5. '.split' → logprob: -16.381717681884766
    6. '(split' → logprob: -16.881717681884766
    7. 'spl' → logprob: -17.256717681884766
    8. '.strip' → logprob: -17.756717681884766
    9. ' strip' → logprob: -18.881717681884766
    10. '_split' → logprob: -19.506717681884766

Token 195: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6958436369895935
    2. '()))' → logprob: -0.6958436369895935
    3. '()' → logprob: -5.945843696594238
    4. '())' → logprob: -10.320843696594238
    5. '(' → logprob: -11.320843696594238
    6. '()))
' → logprob: -11.320843696594238
    7. ')' → logprob: -11.320843696594238
    8. ')))' → logprob: -12.695843696594238
    9. ' ))' → logprob: -13.570843696594238
    10. '))
' → logprob: -14.320843696594238

Token 196: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.553032628493384e-05
    2. 'class' → logprob: -9.750075340270996
    3. '
' → logprob: -11.625075340270996
    4. '\' → logprob: -12.250075340270996
    5. '#' → logprob: -13.250075340270996
    6. '```' → logprob: -13.875075340270996
    7. '\n' → logprob: -16.000076293945312
    8. '

' → logprob: -16.250076293945312
    9. 'ndef' → logprob: -16.375076293945312
    10. 'from' → logprob: -16.500076293945312

Token 197: ' init' (ID: 6327)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.23408928513526917
    2. ' read' → logprob: -1.6090892553329468
    3. ' main' → logprob: -5.359089374542236
    4. 'main' → logprob: -5.609089374542236
    5. 'write' → logprob: -9.734088897705078
    6. 'def' → logprob: -10.359088897705078
    7. 'print' → logprob: -10.734088897705078
    8. ' readline' → logprob: -10.734088897705078
    9. 'custom' → logprob: -10.984088897705078
    10. ' write' → logprob: -11.109088897705078

Token 198: '_ans' (ID: 146254)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.282514750957489
    2. '_' → logprob: -2.157514810562134
    3. '()' → logprob: -3.157514810562134
    4. '_data' → logprob: -3.407514810562134
    5. '_array' → logprob: -3.407514810562134
    6. '_cache' → logprob: -5.282514572143555
    7. '_stack' → logprob: -5.782514572143555
    8. '_dp' → logprob: -5.907514572143555
    9. '_map' → logprob: -6.032514572143555
    10. '_graph' → logprob: -6.782514572143555

Token 199: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.030078712850809097
    2. '()' → logprob: -4.155078887939453
    3. '():
' → logprob: -4.280078887939453
    4. ' ():' → logprob: -10.280078887939453
    5. '():
' → logprob: -10.780078887939453
    6. ' ()' → logprob: -11.780078887939453
    7. '():

' → logprob: -11.780078887939453
    8. 's' → logprob: -12.030078887939453
    9. '()?' → logprob: -12.155078887939453
    10. 'or' → logprob: -12.655078887939453

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034523867070674896
    2. 'return' → logprob: -3.4095239639282227
    3. '[]' → logprob: -7.784523963928223
    4. ' return' → logprob: -7.784523963928223
    5. 'def' → logprob: -10.659523963928223
    6. '	return' → logprob: -11.659523963928223
    7. '{}' → logprob: -12.034523963928223
    8. '  ' → logprob: -13.284523963928223
    9. '{return' → logprob: -13.659523963928223
    10. '    ' → logprob: -14.159523963928223

Token 201: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15950797498226166
    2. '[]' → logprob: -2.159507989883423
    3. '   ' → logprob: -4.534507751464844
    4. 'def' → logprob: -4.659507751464844
    5. ' return' → logprob: -4.784507751464844
    6. '[' → logprob: -6.659507751464844
    7. '{}' → logprob: -7.284507751464844
    8. '0' → logprob: -7.534507751464844
    9. ' []' → logprob: -8.034507751464844
    10. 'default' → logprob: -8.659507751464844

Token 202: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.036491815000772476
    2. '[' → logprob: -4.286491870880127
    3. '{}' → logprob: -4.536491870880127
    4. '0' → logprob: -4.911491870880127
    5. 'float' → logprob: -5.661491870880127
    6. 'None' → logprob: -9.411491394042969
    7. ' []' → logprob: -9.411491394042969
    8. '{' → logprob: -9.536491394042969
    9. '-' → logprob: -9.536491394042969
    10. '[-' → logprob: -9.661491394042969

Token 203: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.019307635724544525
    2. 'float' → logprob: -5.019307613372803
    3. '[' → logprob: -5.144307613372803
    4. '0' → logprob: -5.644307613372803
    5. '{}' → logprob: -6.144307613372803
    6. '-' → logprob: -7.769307613372803
    7. '[-' → logprob: -8.769308090209961
    8. 'default' → logprob: -9.019308090209961
    9. '[int' → logprob: -9.644308090209961
    10. 'None' → logprob: -9.769308090209961

Token 204: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011547120288014412
    2. '<|end|>' → logprob: -4.511547088623047
    3. '
' → logprob: -7.886547088623047
    4. '<|end|>' → logprob: -9.886547088623047
    5. '#' → logprob: -10.761547088623047
    6. ' def' → logprob: -10.886547088623047
    7. '

' → logprob: -12.386547088623047
    8. '\' → logprob: -12.761547088623047
    9. ')' → logprob: -12.761547088623047
    10. '```' → logprob: -13.136547088623047

Token 205: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.919942486798391e-05
    2. 'class' → logprob: -9.750059127807617
    3. '#' → logprob: -15.250059127807617
    4. 'ndef' → logprob: -15.750059127807617
    5. '
' → logprob: -15.875059127807617
    6. ' def' → logprob: -16.250059127807617
    7. '<|end|>' → logprob: -16.625059127807617
    8. '\' → logprob: -17.125059127807617
    9. 'from' → logprob: -17.125059127807617
    10. '@' → logprob: -17.750059127807617

Token 206: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.24779978394508362
    2. 'main' → logprob: -1.6227997541427612
    3. ' solve' → logprob: -4.497799873352051
    4. 'solve' → logprob: -5.122799873352051
    5. 'init' → logprob: -6.247799873352051
    6. ' init' → logprob: -6.497799873352051
    7. '_main' → logprob: -8.24779987335205
    8. ' read' → logprob: -8.49779987335205
    9. ' update' → logprob: -8.62279987335205
    10. 'is' → logprob: -8.99779987335205

Token 207: '_l' (ID: 1478)
  Prédit: '_ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.3866978585720062
    2. '_' → logprob: -2.261697769165039
    3. '_a' → logprob: -2.511697769165039
    4. '_answer' → logprob: -3.136697769165039
    5. '_val' → logprob: -3.511697769165039
    6. '_array' → logprob: -4.511697769165039
    7. '_list' → logprob: -4.886697769165039
    8. '_stack' → logprob: -5.511697769165039
    9. '()' → logprob: -5.636697769165039
    10. '_var' → logprob: -5.761697769165039

Token 208: '():
' (ID: 8595)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.0693681463599205
    2. 'eft' → logprob: -3.5693681240081787
    3. 'en' → logprob: -3.6943681240081787
    4. 'st' → logprob: -4.944368362426758
    5. 'ength' → logprob: -5.694368362426758
    6. 'e' → logprob: -6.819368362426758
    7. 'ast' → logprob: -7.069368362426758
    8. 'ists' → logprob: -8.194368362426758
    9. '()' → logprob: -8.819368362426758
    10. 'azy' → logprob: -8.944368362426758

Token 209: '   ' (ID: 271)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0027001395355910063
    2. '[]
' → logprob: -6.627700328826904
    3. '0' → logprob: -7.127700328826904
    4. 'return' → logprob: -8.127699851989746
    5. 'def' → logprob: -9.127699851989746
    6. ' []' → logprob: -9.752699851989746
    7. '{}' → logprob: -10.627699851989746
    8. '[' → logprob: -11.252699851989746
    9. '()' → logprob: -11.377699851989746
    10. 'int' → logprob: -11.502699851989746

Token 210: ' return' (ID: 622)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004712311085313559
    2. '0' → logprob: -5.629712104797363
    3. '[' → logprob: -8.129712104797363
    4. '[]
' → logprob: -8.254712104797363
    5. 'float' → logprob: -8.629712104797363
    6. '-' → logprob: -9.129712104797363
    7. 'def' → logprob: -9.379712104797363
    8. ' []' → logprob: -9.629712104797363
    9. 'return' (adapté à ' return') → logprob: -10.004712104797363
    10. '[int' → logprob: -11.129712104797363

Token 211: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0027427079621702433
    2. ' []' → logprob: -6.877742767333984
    3. '-' → logprob: -7.377742767333984
    4. 'float' → logprob: -7.502742767333984
    5. '0' → logprob: -8.002742767333984
    6. '[' → logprob: -9.127742767333984
    7. '[]
' → logprob: -10.127742767333984
    8. 'int' → logprob: -11.502742767333984
    9. '[int' → logprob: -11.502742767333984
    10. '[-' → logprob: -11.502742767333984

Token 212: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0007740125292912126
    2. '[' → logprob: -8.125774383544922
    3. '0' → logprob: -8.875774383544922
    4. 'float' → logprob: -8.875774383544922
    5. '[]
' → logprob: -9.125774383544922
    6. '[int' → logprob: -10.375774383544922
    7. '{}' → logprob: -10.750774383544922
    8. '[]}' → logprob: -11.625774383544922
    9. ' []' → logprob: -11.750774383544922
    10. '[]

' → logprob: -12.500774383544922

Token 213: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16067230701446533
    2. '<|end|>' → logprob: -1.9106723070144653
    3. '
' → logprob: -8.285672187805176
    4. '<|end|>' → logprob: -8.910672187805176
    5. '#' → logprob: -11.035672187805176
    6. '```' → logprob: -11.160672187805176
    7. ' def' → logprob: -11.660672187805176
    8. '  
' → logprob: -12.535672187805176
    9. ')' → logprob: -12.660672187805176
    10. '0' → logprob: -12.910672187805176

Token 214: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.4153549020411447e-05
    2. 'class' → logprob: -10.87502384185791
    3. '#' → logprob: -13.00002384185791
    4. '\' → logprob: -14.12502384185791
    5. 'ndef' → logprob: -15.00002384185791
    6. 'd' → logprob: -15.25002384185791
    7. ' def' → logprob: -15.37502384185791
    8. 'n' → logprob: -15.75002384185791
    9. 'l' → logprob: -15.87502384185791
    10. '.' → logprob: -16.000024795532227

Token 215: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0312771797180176
    2. ' init' → logprob: -1.0312771797180176
    3. ' main' → logprob: -1.9062771797180176
    4. 'main' → logprob: -2.1562771797180176
    5. 'read' → logprob: -5.031277179718018
    6. ' read' → logprob: -5.281277179718018
    7. 'n' → logprob: -6.281277179718018
    8. 'def' → logprob: -6.781277179718018
    9. 'solve' → logprob: -6.906277179718018
    10. ' solve' → logprob: -7.156277179718018

Token 216: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.06347154080867767
    2. '_a' → logprob: -3.938471555709839
    3. '_d' → logprob: -4.93847131729126
    4. '_s' → logprob: -5.18847131729126
    5. '_ans' → logprob: -5.43847131729126
    6. '_h' → logprob: -5.56347131729126
    7. '_l' → logprob: -5.56347131729126
    8. '_' → logprob: -5.56347131729126
    9. '()' → logprob: -6.06347131729126
    10. '_n' → logprob: -6.43847131729126

Token 217: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00023369524569716305
    2. '():
' → logprob: -8.37523365020752
    3. '()' → logprob: -13.12523365020752
    4. ' ():' → logprob: -14.12523365020752
    5. 'def' → logprob: -14.87523365020752
    6. '():

' → logprob: -17.000234603881836
    7. ':' → logprob: -17.875234603881836
    8. '():
' → logprob: -18.000234603881836
    9. '):' → logprob: -18.500234603881836
    10. '(' → logprob: -18.875234603881836

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039974600076675415
    2. '0' → logprob: -3.9149746894836426
    3. 'return' → logprob: -4.164974689483643
    4. 'def' → logprob: -6.539974689483643
    5. '100' → logprob: -7.164974689483643
    6. '10' → logprob: -7.414974689483643
    7. ' return' → logprob: -7.664974689483643
    8. '1' → logprob: -8.789974212646484
    9. ' ' → logprob: -8.914974212646484
    10. 'int' → logprob: -10.539974212646484

Token 219: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034612301737070084
    2. '10' → logprob: -3.6596124172210693
    3. 'int' → logprob: -5.53461217880249
    4. 'float' → logprob: -6.90961217880249
    5. '100' → logprob: -7.03461217880249
    6. 'return' (adapté à ' return') → logprob: -7.15961217880249
    7. '-' → logprob: -7.53461217880249
    8. '1' → logprob: -8.159612655639648
    9. 'lambda' → logprob: -8.659612655639648
    10. '   ' → logprob: -9.034612655639648

Token 220: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6233838796615601
    2. '10' → logprob: -0.8733838796615601
    3. 'int' → logprob: -3.7483839988708496
    4. 'float' → logprob: -4.49838399887085
    5. '-' → logprob: -5.12338399887085
    6. ' ' → logprob: -5.99838399887085
    7. '1' → logprob: -6.99838399887085
    8. 'math' → logprob: -6.99838399887085
    9. '100' → logprob: -7.62338399887085
    10. '(' → logprob: -8.373383522033691

Token 221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.367684006690979
    2. '10' → logprob: -1.242684006690979
    3. 'int' → logprob: -4.2426838874816895
    4. '1' → logprob: -6.2426838874816895
    5. 'float' → logprob: -6.4926838874816895
    6. '(' → logprob: -7.4926838874816895
    7. '100' → logprob: -7.8676838874816895
    8. '-' → logprob: -8.992684364318848
    9. 'pow' → logprob: -10.242684364318848
    10. 'sys' → logprob: -10.367684364318848

Token 222: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6457001566886902
    2. '<|end|>' → logprob: -0.7707001566886902
    3. '
' → logprob: -4.520699977874756
    4. '<|end|>' → logprob: -7.145699977874756
    5. '```' → logprob: -7.270699977874756
    6. '#' → logprob: -8.020700454711914
    7. '\' → logprob: -9.520700454711914
    8. '\n' → logprob: -9.770700454711914
    9. '0' → logprob: -10.395700454711914
    10. ' def' → logprob: -10.770700454711914

Token 223: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010211274639004841
    2. 'class' → logprob: -9.250102043151855
    3. '#' → logprob: -12.750102043151855
    4. '
' → logprob: -13.500102043151855
    5. 'ndef' → logprob: -15.250102043151855
    6. ' def' → logprob: -15.375102043151855
    7. '\' → logprob: -15.500102043151855
    8. 'n' → logprob: -15.625102043151855
    9. '<|end|>' → logprob: -15.875102043151855
    10. 'from' → logprob: -15.875102043151855

Token 224: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5593070983886719
    2. 'main' → logprob: -1.0593070983886719
    3. 'init' → logprob: -3.309307098388672
    4. ' init' → logprob: -3.559307098388672
    5. 'solve' → logprob: -5.059307098388672
    6. ' solve' → logprob: -5.309307098388672
    7. 'read' → logprob: -6.684307098388672
    8. ' binary' → logprob: -7.309307098388672
    9. ' read' → logprob: -7.434307098388672
    10. 'binary' → logprob: -7.559307098388672

Token 225: '_cnt' (ID: 35412)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.6506475210189819
    2. '_l' → logprob: -2.1506476402282715
    3. '_v' → logprob: -2.7756476402282715
    4. '():' → logprob: -2.7756476402282715
    5. '()' → logprob: -2.9006476402282715
    6. '_s' → logprob: -3.9006476402282715
    7. '_p' → logprob: -4.0256476402282715
    8. '_ans' → logprob: -4.0256476402282715
    9. '_d' → logprob: -4.4006476402282715
    10. '_' → logprob: -4.4006476402282715

Token 226: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03804803267121315
    2. '():
' → logprob: -3.288048028945923
    3. 'def' → logprob: -12.538047790527344
    4. ' ():' → logprob: -13.663047790527344
    5. '()' → logprob: -13.788047790527344
    6. '():
' → logprob: -14.538047790527344
    7. '():

' → logprob: -15.038047790527344
    8. '(' → logprob: -17.038047790527344
    9. '):' → logprob: -18.288047790527344
    10. '()):
' → logprob: -18.413047790527344

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00942182820290327
    2. '0' → logprob: -4.7594218254089355
    3. 'return' → logprob: -7.1344218254089355
    4. 'def' → logprob: -12.384422302246094
    5. ' return' → logprob: -12.884422302246094
    6. '():' → logprob: -13.884422302246094
    7. '():
' → logprob: -14.009422302246094
    8. '()' → logprob: -14.259422302246094
    9. '	return' → logprob: -15.759422302246094
    10. ' ' → logprob: -16.134422302246094

Token 228: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05781347677111626
    2. 'return' (adapté à ' return') → logprob: -2.9328134059906006
    3. '   ' → logprob: -5.93281364440918
    4. '{}' → logprob: -8.80781364440918
    5. ' return' → logprob: -9.68281364440918
    6. ' ' → logprob: -10.05781364440918
    7. 'def' → logprob: -11.43281364440918
    8. '{' → logprob: -12.68281364440918
    9. '[]' → logprob: -13.30781364440918
    10. '{}
' → logprob: -13.43281364440918

Token 229: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38836362957954407
    2. '{}' → logprob: -1.1383635997772217
    3. 'default' → logprob: -6.763363838195801
    4. ' defaultdict' → logprob: -9.1383638381958
    5. 'dict' → logprob: -9.6383638381958
    6. ' ' → logprob: -9.6383638381958
    7. '[]' → logprob: -10.1383638381958
    8. '{' → logprob: -10.2633638381958
    9. '{}
' → logprob: -11.6383638381958
    10. ' {}' → logprob: -11.8883638381958

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07412697374820709
    2. '{}' → logprob: -2.824126958847046
    3. 'default' → logprob: -4.449127197265625
    4. 'dict' → logprob: -8.699127197265625
    5. '[]' → logprob: -9.324127197265625
    6. '{' → logprob: -9.574127197265625
    7. ' defaultdict' → logprob: -10.199127197265625
    8. 'collections' → logprob: -11.699127197265625
    9. '[' → logprob: -11.824127197265625
    10. ' ' → logprob: -12.074127197265625

Token 231: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06457751989364624
    2. '<|end|>' → logprob: -2.814577579498291
    3. '
' → logprob: -6.064577579498291
    4. '```' → logprob: -9.189577102661133
    5. '<|end|>' → logprob: -10.064577102661133
    6. '#' → logprob: -10.064577102661133
    7. '\n' → logprob: -10.314577102661133
    8. '\' → logprob: -10.439577102661133
    9. '

' → logprob: -11.689577102661133
    10. ' def' → logprob: -12.439577102661133

Token 232: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.135819760151207e-05
    2. 'class' → logprob: -10.12507152557373
    3. '<|end|>' → logprob: -11.50007152557373
    4. '#' → logprob: -11.75007152557373
    5. '
' → logprob: -12.25007152557373
    6. '\' → logprob: -12.75007152557373
    7. '\n' → logprob: -13.37507152557373
    8. '<|end|>' → logprob: -13.75007152557373
    9. 'ndef' → logprob: -14.25007152557373
    10. ' def' → logprob: -14.62507152557373

Token 233: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.2670876085758209
    2. 'main' → logprob: -1.5170875787734985
    3. 'solve' → logprob: -5.392087459564209
    4. 'def' → logprob: -5.892087459564209
    5. 'update' → logprob: -6.642087459564209
    6. 'is' → logprob: -7.017087459564209
    7. 'read' → logprob: -7.267087459564209
    8. 'merge' → logprob: -7.392087459564209
    9. 'custom' → logprob: -7.392087459564209
    10. 'max' → logprob: -7.517087459564209

Token 234: '_x' (ID: 7054)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.8332090377807617
    2. '_stack' → logprob: -2.0832090377807617
    3. '_dp' → logprob: -2.0832090377807617
    4. '_ans' → logprob: -2.0832090377807617
    5. '_m' → logprob: -2.8332090377807617
    6. '_sum' → logprob: -2.9582090377807617
    7. '_map' → logprob: -3.2082090377807617
    8. '_val' → logprob: -3.2082090377807617
    9. '_l' → logprob: -3.4582090377807617
    10. '_d' → logprob: -3.5832090377807617

Token 235: 'or' (ID: 267)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01105878408998251
    2. '():
' → logprob: -4.511058807373047
    3. '()' → logprob: -12.261058807373047
    4. 'def' → logprob: -12.511058807373047
    5. ' ():' → logprob: -13.636058807373047
    6. '():

' → logprob: -13.886058807373047
    7. '():
' → logprob: -15.011058807373047
    8. '(' → logprob: -17.136058807373047
    9. '()):
' → logprob: -18.011058807373047
    10. '):' → logprob: -18.136058807373047

Token 236: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005246568005532026
    2. '():
' → logprob: -5.255246639251709
    3. '()' → logprob: -12.00524616241455
    4. 'def' → logprob: -12.50524616241455
    5. ' ():' → logprob: -13.13024616241455
    6. '(' → logprob: -15.00524616241455
    7. '():

' → logprob: -15.00524616241455
    8. '():
' → logprob: -15.38024616241455
    9. '):' → logprob: -16.255247116088867
    10. '()):
' → logprob: -18.255247116088867

Token 237: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5188164710998535
    2. '():
' → logprob: -1.2688164710998535
    3. 'return' → logprob: -2.5188164710998535
    4. '():' → logprob: -3.5188164710998535
    5. '   ' → logprob: -5.1438164710998535
    6. 'def' → logprob: -5.3938164710998535
    7. '()' → logprob: -5.8938164710998535
    8. ' return' → logprob: -9.018815994262695
    9. '()
' → logprob: -9.268815994262695
    10. '):
' → logprob: -10.768815994262695

Token 238: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6992291212081909
    2. 'return' (adapté à ' return') → logprob: -0.6992291212081909
    3. '   ' → logprob: -5.3242292404174805
    4. ' return' → logprob: -6.8242292404174805
    5. 'def' → logprob: -9.82422924041748
    6. ' ' → logprob: -10.07422924041748
    7. '()' → logprob: -12.82422924041748
    8. '()
' → logprob: -13.32422924041748
    9. '
' → logprob: -13.69922924041748
    10. '  ' → logprob: -14.44922924041748

Token 239: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.250139236450195
    4. '  ' → logprob: -19.625139236450195
    5. '(' → logprob: -20.750139236450195
    6. '０' → logprob: -21.750139236450195
    7. ' ' → logprob: -22.000139236450195
    8. '
' → logprob: -22.000139236450195
    9. '00' → logprob: -22.500139236450195
    10. 'def' → logprob: -22.625139236450195

Token 240: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '０' → logprob: -20.5
    4. '۰' → logprob: -20.75
    5. 'a' → logprob: -21.25
    6. '-' → logprob: -21.25
    7. '   ' → logprob: -21.375
    8. 'int' → logprob: -21.5
    9. '=' → logprob: -21.5
    10. '(' → logprob: -21.75

Token 241: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08025811612606049
    2. '<|end|>' → logprob: -3.2052581310272217
    3. '
' → logprob: -3.3302581310272217
    4. '#' → logprob: -8.0802583694458
    5. '\n' → logprob: -9.3302583694458
    6. '\' → logprob: -9.4552583694458
    7. '<|end|>' → logprob: -9.4552583694458
    8. '

' → logprob: -9.8302583694458
    9. '_' → logprob: -9.9552583694458
    10. '```' → logprob: -10.2052583694458

Token 242: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015951994573697448
    2. 'd' → logprob: -6.8765950202941895
    3. '#' → logprob: -7.8765950202941895
    4. '\' → logprob: -9.501595497131348
    5. 'class' → logprob: -10.376595497131348
    6. '_' → logprob: -11.126595497131348
    7. 'a' → logprob: -11.376595497131348
    8. '
' → logprob: -11.501595497131348
    9. 'n' → logprob: -11.626595497131348
    10. 'de' → logprob: -12.376595497131348

Token 243: ' process' (ID: 2273)
  Prédit: ' init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' init' → logprob: -0.5526503920555115
    2. ' main' → logprob: -1.6776504516601562
    3. 'init' → logprob: -1.6776504516601562
    4. 'main' → logprob: -3.1776504516601562
    5. ' is' → logprob: -7.177650451660156
    6. ' custom' → logprob: -7.302650451660156
    7. 'def' → logprob: -7.302650451660156
    8. ' max' → logprob: -7.302650451660156
    9. ' gcd' → logprob: -7.302650451660156
    10. 'pow' → logprob: -7.427650451660156

Token 244: '_element' (ID: 21131)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.766137957572937
    2. '_data' → logprob: -1.266137957572937
    3. '():' → logprob: -2.1411380767822266
    4. '(' → logprob: -3.1411380767822266
    5. '_' → logprob: -3.5161380767822266
    6. '(data' → logprob: -4.391138076782227
    7. '()' → logprob: -4.516138076782227
    8. '(a' → logprob: -4.891138076782227
    9. '_list' → logprob: -5.141138076782227
    10. '_line' → logprob: -5.516138076782227

Token 245: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13669353723526
    2. '(element' → logprob: -2.6366934776306152
    3. '():' → logprob: -3.5116934776306152
    4. '(elem' → logprob: -5.011693477630615
    5. '(a' → logprob: -5.511693477630615
    6. '(ele' → logprob: -5.511693477630615
    7. '(e' → logprob: -5.636693477630615
    8. '(x' → logprob: -5.886693477630615
    9. '()' → logprob: -7.261693477630615
    10. '(lst' → logprob: -7.636693477630615

Token 246: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004117223434150219
    2. ',' → logprob: -6.504117012023926
    3. '):
' → logprob: -6.504117012023926
    4. ')' → logprob: -6.879117012023926
    5. ' ):' → logprob: -9.754117012023926
    6. ':' → logprob: -11.004117012023926
    7. ' ,' → logprob: -13.379117012023926
    8. '):

' → logprob: -13.504117012023926
    9. 'n' → logprob: -14.004117012023926
    10. ',
' → logprob: -14.129117012023926

Token 247: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6431808471679688
    2. 'arr' → logprob: -2.1431808471679688
    3. 'val' → logprob: -2.5181808471679688
    4. 'lst' → logprob: -2.7681808471679688
    5. ' val' → logprob: -3.1431808471679688
    6. ' x' → logprob: -3.2681808471679688
    7. 'elem' → logprob: -3.6431808471679688
    8. 'element' → logprob: -3.6431808471679688
    9. ' lst' → logprob: -4.018180847167969
    10. 'j' → logprob: -4.518180847167969

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43922165036201477
    2. '):' → logprob: -1.0642216205596924
    3. '):
' → logprob: -4.8142218589782715
    4. ')' → logprob: -7.0642218589782715
    5. ' ,' → logprob: -7.0642218589782715
    6. ' ):' → logprob: -8.064221382141113
    7. '=' → logprob: -9.064221382141113
    8. ',
' → logprob: -9.689221382141113
    9. '_' → logprob: -10.939221382141113
    10. ':' → logprob: -11.189221382141113

Token 249: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.015029440633952618
    2. ' r' → logprob: -4.265029430389404
    3. 'cnt' → logprob: -7.765029430389404
    4. 'x' → logprob: -8.765029907226562
    5. ')' → logprob: -8.765029907226562
    6. 'ans' → logprob: -10.640029907226562
    7. ' cnt' → logprob: -10.765029907226562
    8. '   ' → logprob: -11.515029907226562
    9. 'a' → logprob: -11.827529907226562
    10. '```' → logprob: -12.452529907226562

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5242785215377808
    2. '):' → logprob: -0.8992785215377808
    3. ')' → logprob: -7.02427864074707
    4. '):
' → logprob: -8.77427864074707
    5. ' ,' → logprob: -9.64927864074707
    6. ',
' → logprob: -11.02427864074707
    7. ' ):' → logprob: -11.39927864074707
    8. '):

' → logprob: -13.27427864074707
    9. '=' → logprob: -13.39927864074707
    10. '_,' → logprob: -13.64927864074707

Token 251: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.09391236305236816
    2. ' cnt' → logprob: -2.593912363052368
    3. 'x' → logprob: -4.593912124633789
    4. 'ans' → logprob: -6.843912124633789
    5. ' x' → logprob: -7.218912124633789
    6. ')' → logprob: -7.468912124633789
    7. 'arr' → logprob: -7.718912124633789
    8. 'c' → logprob: -7.843912124633789
    9. 'count' → logprob: -7.843912124633789
    10. 'val' → logprob: -8.468912124633789

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12985484302043915
    2. '):' → logprob: -2.129854917526245
    3. '):
' → logprob: -6.004854679107666
    4. ')' → logprob: -8.004855155944824
    5. ' ,' → logprob: -9.754855155944824
    6. ',
' → logprob: -10.629855155944824
    7. ' ):' → logprob: -11.379855155944824
    8. '):

' → logprob: -12.004855155944824
    9. ',x' → logprob: -12.254855155944824
    10. '_,' → logprob: -12.879855155944824

Token 253: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.003040101146325469
    2. ' xor' → logprob: -6.003040313720703
    3. 'x' → logprob: -7.628040313720703
    4. ')' → logprob: -10.753040313720703
    5. ' ' → logprob: -11.628040313720703
    6. 'ans' → logprob: -12.003040313720703
    7. 'xo' → logprob: -12.128040313720703
    8. ' x' → logprob: -12.378040313720703
    9. 'xr' → logprob: -12.628040313720703
    10. '   ' → logprob: -12.753040313720703

Token 254: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021524053066968918
    2. '):
' → logprob: -4.521523952484131
    3. '_' → logprob: -4.646523952484131
    4. '_value' → logprob: -8.146524429321289
    5. '_val' → logprob: -8.271524429321289
    6. ' ):' → logprob: -8.896524429321289
    7. ')' → logprob: -9.896524429321289
    8. 'v' → logprob: -10.021524429321289
    9. ',' → logprob: -11.521524429321289
    10. '):
' → logprob: -11.896524429321289

Token 255: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16164980828762054
    2. 'a' → logprob: -3.036649703979492
    3. 'ans' → logprob: -3.661649703979492
    4. ' x' → logprob: -3.661649703979492
    5. '):' → logprob: -4.286649703979492
    6. 'val' → logprob: -4.786649703979492
    7. 'element' → logprob: -5.161649703979492
    8. 'arr' → logprob: -5.411649703979492
    9. 'elem' → logprob: -5.411649703979492
    10. ')' → logprob: -5.536649703979492

Token 256: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018594112247228622
    2. '):
' → logprob: -4.643594264984131
    3. '[i' → logprob: -5.268594264984131
    4. ',' → logprob: -6.018594264984131
    5. '[' → logprob: -7.768594264984131
    6. 's' → logprob: -8.768593788146973
    7. '[]):' → logprob: -8.893593788146973
    8. '_list' → logprob: -9.143593788146973
    9. 'i' → logprob: -9.518593788146973
    10. ')' → logprob: -9.643593788146973

Token 257: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38003507256507874
    2. ' n' → logprob: -2.755035161972046
    3. 'x' → logprob: -3.130035161972046
    4. ')' → logprob: -3.255035161972046
    5. '):' → logprob: -3.255035161972046
    6. 'b' → logprob: -3.630035161972046
    7. 'i' → logprob: -3.755035161972046
    8. 'lst' → logprob: -4.005034923553467
    9. '):
' → logprob: -4.630034923553467
    10. 'idx' → logprob: -4.880034923553467

Token 258: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020144060254096985
    2. ',' → logprob: -7.127014636993408
    3. '):
' → logprob: -7.127014636993408
    4. ')' → logprob: -7.877014636993408
    5. ' ):' → logprob: -11.12701416015625
    6. ':' → logprob: -13.25201416015625
    7. '=' → logprob: -13.25201416015625
    8. '):
' → logprob: -13.62701416015625
    9. 's' → logprob: -14.37701416015625
    10. '[' → logprob: -14.50201416015625

Token 259: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024417554959654808
    2. '   ' → logprob: -3.7744176387786865
    3. '):' → logprob: -7.774417400360107
    4. ':
' → logprob: -7.899417400360107
    5. ',' → logprob: -8.774417877197266
    6. ':return' → logprob: -9.524417877197266
    7. ')' → logprob: -9.774417877197266
    8. ' :' → logprob: -9.899417877197266
    9. ' ' → logprob: -11.399417877197266
    10. '  ' → logprob: -12.274417877197266

Token 260: ' l' (ID: 305)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5010169148445129
    2. ' if' → logprob: -1.3760168552398682
    3. '   ' → logprob: -2.001016855239868
    4. 'return' → logprob: -6.251017093658447
    5. ' return' → logprob: -6.626017093658447
    6. ' i' → logprob: -7.376017093658447
    7. 'i' → logprob: -7.876017093658447
    8. 'for' → logprob: -7.876017093658447
    9. 'l' (adapté à ' l') → logprob: -8.001016616821289
    10. ' l' → logprob: -8.501016616821289

Token 261: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7741769552230835
    2. '=' → logprob: -1.5241769552230835
    3. ' =' → logprob: -1.7741769552230835
    4. ' +=' → logprob: -2.524177074432373
    5. '+=' → logprob: -2.774177074432373
    6. '+' → logprob: -5.274177074432373
    7. ' ,' → logprob: -6.024177074432373
    8. ' +' → logprob: -7.899177074432373
    9. '<=' → logprob: -8.399176597595215
    10. ' <=' → logprob: -8.524176597595215

Token 262: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1039978638291359
    2. 'min' → logprob: -2.9789979457855225
    3. 'max' → logprob: -3.7289979457855225
    4. ' i' → logprob: -4.353997707366943
    5. ' min' → logprob: -5.728997707366943
    6. '0' → logprob: -5.728997707366943
    7. 'l' → logprob: -6.228997707366943
    8. ' max' → logprob: -6.478997707366943
    9. 'r' → logprob: -7.103997707366943
    10. 'a' → logprob: -9.603998184204102

Token 263: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7080957889556885
    2. '<|end|>' → logprob: -1.0830957889556885
    3. ' +' → logprob: -2.3330957889556885
    4. '
' → logprob: -3.2080957889556885
    5. '-' → logprob: -4.208095550537109
    6. ' -' → logprob: -5.083095550537109
    7. '<|end|>' → logprob: -5.458095550537109
    8. ' ' → logprob: -5.833095550537109
    9. ';' → logprob: -7.333095550537109
    10. 'def' → logprob: -7.708095550537109

Token 264: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5922439098358154
    2. '   ' → logprob: -1.0922439098358154
    3. '
' → logprob: -2.5922439098358154
    4. ' r' → logprob: -4.0922441482543945
    5. '<|end|>' → logprob: -4.5922441482543945
    6. ',' → logprob: -6.0922441482543945
    7. 'return' → logprob: -6.8422441482543945
    8. ' ' → logprob: -6.9672441482543945
    9. '+' → logprob: -6.9672441482543945
    10. '    
' → logprob: -7.0922441482543945

Token 265: ' if' (ID: 538)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.024649154394865036
    2. ' r' → logprob: -3.774649143218994
    3. '   ' → logprob: -7.774649143218994
    4. 'return' → logprob: -8.024649620056152
    5. 'cnt' → logprob: -8.149649620056152
    6. ' if' → logprob: -9.024649620056152
    7. 'if' (adapté à ' if') → logprob: -9.524649620056152
    8. ' return' → logprob: -10.149649620056152
    9. ' ' → logprob: -10.649649620056152
    10. 'while' → logprob: -11.024649620056152

Token 266: ' is' (ID: 382)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9418570399284363
    2. ' r' → logprob: -0.9418570399284363
    3. 'r' → logprob: -2.691857099533081
    4. ' i' → logprob: -2.816857099533081
    5. ' a' → logprob: -2.941857099533081
    6. 'l' → logprob: -3.566857099533081
    7. 'a' → logprob: -4.941856861114502
    8. 'i' → logprob: -5.816856861114502
    9. ' ' → logprob: -7.816856861114502
    10. ' n' → logprob: -8.06685733795166

Token 267: '_l' (ID: 1478)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4838113784790039
    2. 'r' → logprob: -1.233811378479004
    3. '_valid' → logprob: -3.733811378479004
    4. ' l' → logprob: -4.858811378479004
    5. 'valid' → logprob: -4.983811378479004
    6. '_' → logprob: -5.233811378479004
    7. 'in' → logprob: -5.358811378479004
    8. '_r' → logprob: -5.358811378479004
    9. 'lice' → logprob: -5.358811378479004
    10. 'i' → logprob: -5.358811378479004

Token 268: '_eq' (ID: 28373)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9121701121330261
    2. ' <=' → logprob: -1.412170171737671
    3. 'ess' → logprob: -1.912170171737671
    4. '==' → logprob: -2.912170171737671
    5. '>=' → logprob: -3.787170171737671
    6. ' <' → logprob: -3.912170171737671
    7. ' >=' → logprob: -4.037169933319092
    8. ' ==' → logprob: -4.412169933319092
    9. '(i' → logprob: -4.412169933319092
    10. '[i' → logprob: -4.787169933319092

Token 269: '_r' (ID: 3442)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.25227290391921997
    2. 'l' → logprob: -1.7522728443145752
    3. 'u' → logprob: -4.377273082733154
    4. '_r' → logprob: -4.752273082733154
    5. 'ual' → logprob: -4.752273082733154
    6. 'i' → logprob: -5.002273082733154
    7. '=r' → logprob: -5.877273082733154
    8. '_l' → logprob: -6.377273082733154
    9. '```' → logprob: -6.877273082733154
    10. '(r' → logprob: -7.002273082733154

Token 270: '(l' (ID: 4179)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.26016464829444885
    2. '(l' → logprob: -1.8851646184921265
    3. '():' → logprob: -3.260164737701416
    4. ':' → logprob: -3.385164737701416
    5. '(' → logprob: -7.010164737701416
    6. '(r' → logprob: -7.260164737701416
    7. '():
' → logprob: -7.385164737701416
    8. '(u' → logprob: -7.635164737701416
    9. '(a' → logprob: -7.760164737701416
    10. 'l' → logprob: -8.135164260864258

Token 271: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7710543870925903
    2. ',' → logprob: -1.0210543870925903
    3. ')' → logprob: -2.771054267883301
    4. '==' → logprob: -3.021054267883301
    5. ' ==' → logprob: -3.021054267883301
    6. ' ,' → logprob: -5.146054267883301
    7. '=' → logprob: -5.271054267883301
    8. ' ):' → logprob: -6.146054267883301
    9. ')==' → logprob: -6.896054267883301
    10. '):
' → logprob: -6.896054267883301

Token 272: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0011945136357098818
    2. ' r' → logprob: -6.876194477081299
    3. 'i' → logprob: -9.001194953918457
    4. 'l' → logprob: -11.251194953918457
    5. ')' → logprob: -11.251194953918457
    6. ' ' → logprob: -13.126194953918457
    7. '   ' → logprob: -13.126194953918457
    8. 'n' → logprob: -13.251194953918457
    9. '
' → logprob: -14.126194953918457
    10. ' i' → logprob: -14.188694953918457

Token 273: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0066824560053646564
    2. ')' → logprob: -5.131682395935059
    3. '):
' → logprob: -7.506682395935059
    4. ' ):' → logprob: -9.006682395935059
    5. ',' → logprob: -10.881682395935059
    6. '==' → logprob: -11.131682395935059
    7. ':' → logprob: -11.256682395935059
    8. '=' → logprob: -11.506682395935059
    9. ')==' → logprob: -11.506682395935059
    10. 'and' → logprob: -13.256682395935059

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08241992443799973
    2. ':' → logprob: -2.5824198722839355
    3. ':
' → logprob: -6.8324198722839355
    4. '<|end|>' → logprob: -6.9574198722839355
    5. ':return' → logprob: -8.332420349121094
    6. '   ' → logprob: -8.332420349121094
    7. ',' → logprob: -8.582420349121094
    8. ' and' → logprob: -8.832420349121094
    9. '():' → logprob: -9.332420349121094
    10. ' :' → logprob: -9.457420349121094

Token 275: ' cnt' (ID: 27340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07940194010734558
    2. ' return' → logprob: -3.329401969909668
    3. 'return' → logprob: -3.829401969909668
    4. 'r' → logprob: -4.954401969909668
    5. ' r' → logprob: -5.329401969909668
    6. '   ' → logprob: -6.079401969909668
    7. ' cnt' → logprob: -6.829401969909668
    8. 'cnt' (adapté à ' cnt') → logprob: -6.829401969909668
    9. '           ' → logprob: -6.954401969909668
    10. ' pass' → logprob: -7.704401969909668

Token 276: ',' (ID: 11)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08875775337219238
    2. '+=' → logprob: -2.5887577533721924
    3. ' =' → logprob: -4.963757514953613
    4. ' +' → logprob: -6.713757514953613
    5. '=' → logprob: -7.088757514953613
    6. '+' → logprob: -7.213757514953613
    7. '   ' → logprob: -10.588757514953613
    8. ' -=' → logprob: -12.463757514953613
    9. ',' → logprob: -12.588757514953613
    10. '<|end|>' → logprob: -12.713757514953613

Token 277: ' xor' (ID: 106402)
  Prédit: ' xor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xor' → logprob: -0.16564978659152985
    2. 'xor' → logprob: -1.9156497716903687
    3. ' cnt' → logprob: -5.665649890899658
    4. ' ' → logprob: -7.790649890899658
    5. ' l' → logprob: -8.0406494140625
    6. ' a' → logprob: -8.1656494140625
    7. 'cnt' → logprob: -8.7906494140625
    8. 'l' → logprob: -9.2906494140625
    9. '0' → logprob: -9.2906494140625
    10. ' r' → logprob: -9.4156494140625

Token 278: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.695166289806366
    2. ' =' → logprob: -0.695166289806366
    3. ',' → logprob: -6.445166110992432
    4. ' +=' → logprob: -8.82016658782959
    5. '<|end|>' → logprob: -9.32016658782959
    6. '+=' → logprob: -9.94516658782959
    7. '[' → logprob: -10.19516658782959
    8. ' ' → logprob: -10.44516658782959
    9. '+' → logprob: -10.82016658782959
    10. '<|end|>' → logprob: -11.57016658782959

Token 279: ' r' (ID: 428)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.618331253528595
    2. 'l' → logprob: -2.49333119392395
    3. 'r' → logprob: -2.61833119392395
    4. 'cnt' → logprob: -2.61833119392395
    5. ' a' → logprob: -2.74333119392395
    6. ' cnt' → logprob: -3.49333119392395
    7. ' l' → logprob: -3.61833119392395
    8. 'x' → logprob: -3.86833119392395
    9. 'init' → logprob: -4.118331432342529
    10. 'xor' → logprob: -4.118331432342529

Token 280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3254481256008148
    2. '=' → logprob: -1.3254481554031372
    3. ' +=' → logprob: -4.950448036193848
    4. '+' → logprob: -6.200448036193848
    5. '+=' → logprob: -6.325448036193848
    6. ',' → logprob: -7.200448036193848
    7. ' +' → logprob: -8.825448036193848
    8. ' ' → logprob: -8.950448036193848
    9. '<|end|>' → logprob: -9.950448036193848
    10. ')' → logprob: -10.450448036193848

Token 281: ' add' (ID: 1147)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.280394196510315
    2. ' init' → logprob: -1.905394196510315
    3. ' update' → logprob: -2.2803940773010254
    4. ' cnt' → logprob: -2.4053940773010254
    5. 'update' → logprob: -2.6553940773010254
    6. '0' → logprob: -2.7803940773010254
    7. 'cnt' → logprob: -2.9053940773010254
    8. 'process' → logprob: -3.5303940773010254
    9. ' ' → logprob: -3.9053940773010254
    10. ' process' → logprob: -4.030394077301025

Token 282: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.027170324698090553
    2. '_one' → logprob: -4.152170181274414
    3. '_cnt' → logprob: -5.777170181274414
    4. '_elem' → logprob: -6.027170181274414
    5. '(cnt' → logprob: -6.152170181274414
    6. '_count' → logprob: -6.777170181274414
    7. '_' → logprob: -7.902170181274414
    8. '(c' → logprob: -8.277170181274414
    9. '_elements' → logprob: -8.527170181274414
    10. '_to' → logprob: -8.777170181274414

Token 283: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.1509440392255783
    2. '(i' → logprob: -2.5259439945220947
    3. '(' → logprob: -3.4009439945220947
    4. '(a' → logprob: -4.150944232940674
    5. '(c' → logprob: -5.400944232940674
    6. '(r' → logprob: -5.900944232940674
    7. '(l' → logprob: -6.400944232940674
    8. '(count' → logprob: -7.150944232940674
    9. '(
' → logprob: -7.900944232940674
    10. '(lst' → logprob: -8.400943756103516

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018506382184568793
    2. ' ,' → logprob: -9.375185012817383
    3. ',r' → logprob: -10.000185012817383
    4. '<|end|>' → logprob: -10.875185012817383
    5. ',
' → logprob: -11.000185012817383
    6. ')' → logprob: -12.125185012817383
    7. 'r' → logprob: -12.500185012817383
    8. ',x' → logprob: -13.125185012817383
    9. ',

' → logprob: -13.125185012817383
    10. '),' → logprob: -13.125185012817383

Token 285: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.36804184317588806
    2. 'a' → logprob: -1.9930418729782104
    3. ' xor' → logprob: -2.368041753768921
    4. 'r' → logprob: -2.993041753768921
    5. ' a' → logprob: -4.1180419921875
    6. 'x' → logprob: -5.1180419921875
    7. ' r' → logprob: -5.7430419921875
    8. ')' → logprob: -7.2430419921875
    9. ' x' → logprob: -7.8680419921875
    10. 'i' → logprob: -8.2430419921875

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012916464766021818
    2. ' ,' → logprob: -9.500128746032715
    3. ')' → logprob: -10.625128746032715
    4. ',r' → logprob: -11.750128746032715
    5. '),' → logprob: -12.375128746032715
    6. ',
' → logprob: -12.500128746032715
    7. '<|end|>' → logprob: -12.500128746032715
    8. 'r' → logprob: -12.750128746032715
    9. 'a' → logprob: -13.500128746032715
    10. '   ' → logprob: -13.875128746032715

Token 287: ' a' (ID: 261)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3539995849132538
    2. 'a' → logprob: -1.2289996147155762
    3. 'i' → logprob: -6.103999614715576
    4. ' r' → logprob: -6.353999614715576
    5. ' a' → logprob: -7.103999614715576
    6. 'n' → logprob: -8.353999137878418
    7. 'l' → logprob: -8.478999137878418
    8. '   ' → logprob: -8.728999137878418
    9. ')' → logprob: -9.478999137878418
    10. ' i' → logprob: -11.103999137878418

Token 288: '[i' (ID: 1768)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.04983070492744446
    2. ',' → logprob: -3.924830675125122
    3. '[i' → logprob: -3.924830675125122
    4. '[l' → logprob: -5.174830913543701
    5. '[' → logprob: -5.924830913543701
    6. ',r' → logprob: -8.299830436706543
    7. 'r' → logprob: -8.674830436706543
    8. '[a' → logprob: -9.549830436706543
    9. '[
' → logprob: -9.674830436706543
    10. '```' → logprob: -10.549830436706543

Token 289: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.03390569984912872
    2. '])' → logprob: -3.4089057445526123
    3. ']' → logprob: -8.658905982971191
    4. ' ],' → logprob: -10.408905982971191
    5. '])
' → logprob: -11.033905982971191
    6. ']),' → logprob: -11.533905982971191
    7. '],
' → logprob: -11.783905982971191
    8. '),' → logprob: -12.158905982971191
    9. ':],' → logprob: -12.658905982971191
    10. ']))' → logprob: -13.283905982971191

Token 290: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5864242315292358
    2. 'r' → logprob: -1.0864242315292358
    3. ' n' → logprob: -2.5864243507385254
    4. 'n' → logprob: -3.8364243507385254
    5. ' i' → logprob: -5.586424350738525
    6. '   ' → logprob: -6.211424350738525
    7. 'i' → logprob: -6.336424350738525
    8. ' ' → logprob: -7.086424350738525
    9. ' l' → logprob: -7.961424350738525
    10. 'l' → logprob: -8.711423873901367

Token 291: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009395137429237366
    2. '+' → logprob: -5.259395122528076
    3. ')
' → logprob: -5.759395122528076
    4. ' +' → logprob: -7.134395122528076
    5. ',' → logprob: -9.384395599365234
    6. ' )' → logprob: -9.634395599365234
    7. ')

' → logprob: -11.384395599365234
    8. ')+' → logprob: -12.009395599365234
    9. ')return' → logprob: -12.009395599365234
    10. '),' → logprob: -12.259395599365234

Token 292: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4298083186149597
    2. ' else' → logprob: -1.8048083782196045
    3. 'else' → logprob: -2.8048083782196045
    4. 'return' (adapté à ' return') → logprob: -3.5548083782196045
    5. '<|end|>' → logprob: -3.5548083782196045
    6. ' ' → logprob: -3.9298083782196045
    7. ' return' → logprob: -4.679808139801025
    8. '	return' → logprob: -4.929808139801025
    9. 'elif' → logprob: -5.429808139801025
    10. '
' → logprob: -5.554808139801025

Token 294: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.38695424795150757
    2. 'l' → logprob: -1.1369543075561523
    3. ' ' → logprob: -10.261954307556152
    4. ' (' → logprob: -11.011954307556152
    5. '(' → logprob: -11.636954307556152
    6. '(l' → logprob: -12.011954307556152
    7. ' ' → logprob: -12.261954307556152
    8. '	l' → logprob: -12.511954307556152
    9. 'cnt' → logprob: -12.636954307556152
    10. 'None' → logprob: -14.011954307556152

Token 295: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 296: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16022422909736633
    2. ' r' → logprob: -1.910224199295044
    3. '	r' → logprob: -17.28522491455078
    4. ' ' → logprob: -17.28522491455078
    5. '
' → logprob: -18.78522491455078
    6. ',r' → logprob: -19.53522491455078
    7. ' ' → logprob: -19.66022491455078
    8. '(r' → logprob: -19.66022491455078
    9. '_r' → logprob: -19.78522491455078
    10. '<|end|>' → logprob: -20.53522491455078

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11355947703123093
    2. '<|end|>' → logprob: -2.2385594844818115
    3. 'def' → logprob: -7.988559246063232
    4. '<|end|>' → logprob: -9.11355972290039
    5. ',
' → logprob: -9.61355972290039
    6. ',c' → logprob: -9.73855972290039
    7. ',r' → logprob: -10.23855972290039
    8. '
' → logprob: -10.73855972290039
    9. ',n' → logprob: -10.98855972290039
    10. ')' → logprob: -11.36355972290039

Token 298: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.03365572914481163
    2. ' cnt' → logprob: -3.4086556434631348
    3. 'count' → logprob: -12.283656120300293
    4. '	cnt' → logprob: -12.783656120300293
    5. ' ' → logprob: -14.033656120300293
    6. '(cnt' → logprob: -14.283656120300293
    7. 'ct' → logprob: -15.533656120300293
    8. 'c' → logprob: -15.658656120300293
    9. 'cn' → logprob: -15.783656120300293
    10. '_cnt' → logprob: -16.033655166625977

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4021237802808173e-05
    2. ' ,' → logprob: -12.000014305114746
    3. ',x' → logprob: -12.625014305114746
    4. '<|end|>' → logprob: -12.875014305114746
    5. ',
' → logprob: -14.125014305114746
    6. 'xor' → logprob: -15.875014305114746
    7. '```' → logprob: -16.00001335144043
    8. ' ' → logprob: -16.25001335144043
    9. ',r' → logprob: -16.37501335144043
    10. '‌,' → logprob: -16.37501335144043

Token 300: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.02054445445537567
    2. ' xor' → logprob: -3.8955445289611816
    3. ' ' → logprob: -14.020544052124023
    4. 'xo' → logprob: -14.520544052124023
    5. 'x' → logprob: -14.645544052124023
    6. 'xer' → logprob: -16.020544052124023
    7. ' XOR' → logprob: -16.020544052124023
    8. 'xr' → logprob: -16.145544052124023
    9. ' xo' → logprob: -16.520544052124023
    10. 'ox' → logprob: -16.770544052124023

Token 301: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012231077067553997
    2. '<|end|>' → logprob: -4.88723087310791
    3. ',' → logprob: -5.88723087310791
    4. ')' → logprob: -6.88723087310791
    5. '   ' → logprob: -8.26223087310791
    6. ' def' → logprob: -9.01223087310791
    7. '_' → logprob: -9.63723087310791
    8. '
' → logprob: -9.63723087310791
    9. ' ' → logprob: -10.26223087310791
    10. '#' → logprob: -10.38723087310791

Token 302: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06580707430839539
    2. ',' → logprob: -3.0658071041107178
    3. ')' → logprob: -4.940806865692139
    4. '_' → logprob: -5.440806865692139
    5. '<|end|>' → logprob: -6.440806865692139
    6. ' def' → logprob: -6.815806865692139
    7. '
' → logprob: -7.565806865692139
    8. ':' → logprob: -7.565806865692139
    9. 'd' → logprob: -7.690806865692139
    10. '#' → logprob: -7.940806865692139

Token 303: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.33846697211265564
    2. ' is' → logprob: -1.713467001914978
    3. 'process' → logprob: -2.9634668827056885
    4. 'add' → logprob: -3.3384668827056885
    5. ' process' → logprob: -4.713467121124268
    6. ' add' → logprob: -5.088467121124268
    7. 'def' → logprob: -6.338467121124268
    8. 'main' → logprob: -7.338467121124268
    9. ' main' → logprob: -7.963467121124268
    10. 'set' → logprob: -8.58846664428711

Token 304: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: 0.0
    2. '_' → logprob: -18.125
    3. '_ls' → logprob: -19.5
    4. ' _' → logprob: -19.875
    5. 'l' → logprob: -21.125
    6. '_is' → logprob: -21.5
    7. '_i' → logprob: -21.625
    8. '_r' → logprob: -21.75
    9. '_le' → logprob: -21.75
    10. '_lr' → logprob: -22.125

Token 305: '_eq' (ID: 28373)
  Prédit: '_eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eq' → logprob: -1.6240566083070007e-06
    2. 'eq' → logprob: -14.250001907348633
    3. '_equ' → logprob: -14.375001907348633
    4. '_equal' → logprob: -15.875001907348633
    5. '_le' → logprob: -16.375001907348633
    6. '_e' → logprob: -16.625001907348633
    7. '_equals' → logprob: -16.875001907348633
    8. '_' → logprob: -17.625001907348633
    9. '__' → logprob: -18.000001907348633
    10. '_EQ' → logprob: -18.500001907348633

Token 306: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -1.5094070477061905e-05
    2. 'r' → logprob: -11.125015258789062
    3. '(r' → logprob: -15.375015258789062
    4. '_' → logprob: -17.125015258789062
    5. '(_' → logprob: -17.250015258789062
    6. '_l' → logprob: -17.875015258789062
    7. '	r' → logprob: -18.625015258789062
    8. ' _' → logprob: -19.125015258789062
    9. '```' → logprob: -19.125015258789062
    10. '_R' → logprob: -19.625015258789062

Token 307: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.011067395098507404
    2. '(' → logprob: -4.5110673904418945
    3. '(r' → logprob: -11.511067390441895
    4. ' (' → logprob: -11.761067390441895
    5. '(
' → logprob: -14.636067390441895
    6. '(a' → logprob: -15.011067390441895
    7. '(i' → logprob: -15.386067390441895
    8. '(lhs' → logprob: -15.886067390441895
    9. '((' → logprob: -16.01106834411621
    10. '(lst' → logprob: -16.26106834411621

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014270214596763253
    2. ',r' → logprob: -7.251427173614502
    3. '):' → logprob: -7.751427173614502
    4. ' ,' → logprob: -8.376426696777344
    5. ',
' → logprob: -11.001426696777344
    6. ')' → logprob: -11.126426696777344
    7. ',l' → logprob: -11.126426696777344
    8. '==' → logprob: -12.876426696777344
    9. '(r' → logprob: -13.251426696777344
    10. '=' → logprob: -13.626426696777344

Token 309: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006717743817716837
    2. ' r' → logprob: -5.006717681884766
    3. '0' → logprob: -14.131717681884766
    4. ')' → logprob: -15.006717681884766
    5. 'None' → logprob: -15.256717681884766
    6. '   ' → logprob: -15.381717681884766
    7. '
' → logprob: -15.756717681884766
    8. ' ' → logprob: -15.756717681884766
    9. 'def' → logprob: -16.256717681884766
    10. '	r' → logprob: -16.631717681884766

Token 310: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004417655523866415
    2. '):
' → logprob: -5.504417419433594
    3. ')' → logprob: -8.004417419433594
    4. '=' → logprob: -13.254417419433594
    5. ' ):' → logprob: -13.629417419433594
    6. '):
' → logprob: -14.004417419433594
    7. ':' → logprob: -14.504417419433594
    8. '):

' → logprob: -15.379417419433594
    9. '   ' → logprob: -15.754417419433594
    10. '():' → logprob: -16.129417419433594

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14304119348526
    2. 'return' → logprob: -2.1430411338806152
    3. ' return' → logprob: -4.143041133880615
    4. '	return' → logprob: -9.393041610717773
    5. 'l' → logprob: -11.268041610717773
    6. ' l' → logprob: -12.143041610717773
    7. '
' → logprob: -12.643041610717773
    8. '    ' → logprob: -13.393041610717773
    9. 'def' → logprob: -14.643041610717773
    10. '  ' → logprob: -14.643041610717773

Token 312: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024406036362051964
    2. '   ' → logprob: -3.7744059562683105
    3. ' return' → logprob: -6.7744059562683105
    4. '
' → logprob: -11.149406433105469
    5. '	return' → logprob: -13.274406433105469
    6. 'def' → logprob: -14.524406433105469
    7. 'l' → logprob: -15.024406433105469
    8. '    
' → logprob: -16.02440643310547
    9. ' ' → logprob: -16.27440643310547
    10. '  ' → logprob: -16.64940643310547

Token 313: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014165511354804039
    2. ' l' → logprob: -4.26416540145874
    3. '	l' → logprob: -13.389165878295898
    4. '(l' → logprob: -15.139165878295898
    5. '   ' → logprob: -15.514165878295898
    6. 'r' → logprob: -18.0141658782959
    7. ' ' → logprob: -18.0141658782959
    8. ' ' → logprob: -18.2641658782959
    9. '[l' → logprob: -18.2641658782959
    10. '_l' → logprob: -18.8891658782959

Token 314: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20183244347572327
    2. ' ==' → logprob: -1.7018324136734009
    3. '=' → logprob: -8.57683277130127
    4. '<=' → logprob: -8.70183277130127
    5. ' <=' → logprob: -10.20183277130127
    6. '>=' → logprob: -11.20183277130127
    7. '>' → logprob: -12.45183277130127
    8. ' >=' → logprob: -12.82683277130127
    9. '==
' → logprob: -13.07683277130127
    10. ')' → logprob: -13.32683277130127

Token 315: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014163628220558167
    2. ' r' → logprob: -4.264163494110107
    3. '	r' → logprob: -16.889163970947266
    4. '0' → logprob: -17.014163970947266
    5. '_r' → logprob: -18.139163970947266
    6. ' ' → logprob: -18.264163970947266
    7. ' ' → logprob: -18.639163970947266
    8. '
' → logprob: -18.639163970947266
    9. '   ' → logprob: -19.639163970947266
    10. '(r' → logprob: -19.639163970947266

Token 316: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.055151715874671936
    2. '<|end|>' → logprob: -2.9301517009735107
    3. '<|end|>' → logprob: -9.05515193939209
    4. ',' → logprob: -9.55515193939209
    5. ')' → logprob: -10.80515193939209
    6. '

' → logprob: -10.93015193939209
    7. '
' → logprob: -11.05515193939209
    8. '```' → logprob: -11.93015193939209
    9. ' def' → logprob: -12.05515193939209
    10. '#' → logprob: -12.68015193939209

Token 317: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5553392171859741
    2. '<|end|>' → logprob: -0.9303392171859741
    3. ')' → logprob: -3.9303393363952637
    4. '#' → logprob: -4.930339336395264
    5. '[' → logprob: -6.305339336395264
    6. ',' → logprob: -6.930339336395264
    7. '```' → logprob: -7.805339336395264
    8. ' def' → logprob: -8.055338859558105
    9. 'r' → logprob: -8.305338859558105
    10. '<|end|>' → logprob: -8.430338859558105

Token 318: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.023101281374692917
    2. ' add' → logprob: -3.898101329803467
    3. 'def' → logprob: -6.148101329803467
    4. 'remove' → logprob: -8.648100852966309
    5. 'is' → logprob: -9.148100852966309
    6. 'init' → logprob: -10.148100852966309
    7. ' def' → logprob: -10.898100852966309
    8. ' is' → logprob: -11.398100852966309
    9. 'get' → logprob: -11.648100852966309
    10. 'r' → logprob: -12.023100852966309

Token 319: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -8.673547563375905e-05
    2. '_' → logprob: -9.625086784362793
    3. '_elements' → logprob: -11.500086784362793
    4. '_elem' → logprob: -12.125086784362793
    5. '_ele' → logprob: -13.625086784362793
    6. ' _' → logprob: -13.750086784362793
    7. 'element' → logprob: -14.250086784362793
    8. '_ELEMENT' → logprob: -14.625086784362793
    9. '_Element' → logprob: -15.500086784362793
    10. '_item' → logprob: -15.500086784362793

Token 320: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.5764570832252502
    2. '(' → logprob: -0.8264570832252502
    3. '(count' → logprob: -7.7014570236206055
    4. '(c' → logprob: -9.951457023620605
    5. '(
' → logprob: -12.451457023620605
    6. ' (' → logprob: -12.826457023620605
    7. '(counter' → logprob: -13.326457023620605
    8. '_cnt' → logprob: -13.701457023620605
    9. '(cont' → logprob: -13.951457023620605
    10. '(ct' → logprob: -14.076457023620605

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.676292231422849e-05
    2. ' ,' → logprob: -11.250017166137695
    3. ',c' → logprob: -13.375017166137695
    4. ',count' → logprob: -14.250017166137695
    5. '<|end|>' → logprob: -14.250017166137695
    6. '‌,' → logprob: -15.750017166137695
    7. ',
' → logprob: -15.750017166137695
    8. ',int' → logprob: -17.000017166137695
    9. ',user' → logprob: -17.125017166137695
    10. '_,' → logprob: -17.250017166137695

Token 322: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.2014281451702118
    2. ' xor' → logprob: -1.7014281749725342
    3. ' ' → logprob: -11.701428413391113
    4. 'x' → logprob: -13.076428413391113
    5. '<|end|>' → logprob: -13.451428413391113
    6. ' XOR' → logprob: -13.701428413391113
    7. '```' → logprob: -14.701428413391113
    8. ' x' → logprob: -15.451428413391113
    9. ' xo' → logprob: -15.701428413391113
    10. '
' → logprob: -15.826428413391113

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5451681974809617e-05
    2. ' ,' → logprob: -11.125015258789062
    3. ',a' → logprob: -15.625015258789062
    4. ',
' → logprob: -15.750015258789062
    5. '_,' → logprob: -16.000015258789062
    6. ',int' → logprob: -16.750015258789062
    7. ',x' → logprob: -16.875015258789062
    8. ',n' → logprob: -17.125015258789062
    9. '‌,' → logprob: -17.375015258789062
    10. ',val' → logprob: -18.250015258789062

Token 324: ' ai' (ID: 8440)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22705508768558502
    2. ' a' → logprob: -1.6020550727844238
    3. 'r' → logprob: -7.602055072784424
    4. 'x' → logprob: -8.102055549621582
    5. ' r' → logprob: -8.602055549621582
    6. 'element' → logprob: -8.852055549621582
    7. 'value' → logprob: -8.852055549621582
    8. ' x' → logprob: -8.977055549621582
    9. 'val' → logprob: -9.727055549621582
    10. ' val' → logprob: -10.227055549621582

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.637786231702194e-05
    2. '):' → logprob: -10.125086784362793
    3. ' ,' → logprob: -10.750086784362793
    4. '_,' → logprob: -11.000086784362793
    5. 'a' → logprob: -13.375086784362793
    6. 's' → logprob: -13.750086784362793
    7. ',_' → logprob: -14.375086784362793
    8. ',i' → logprob: -14.500086784362793
    9. '):
' → logprob: -14.500086784362793
    10. 'i' → logprob: -14.500086784362793

Token 326: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5233460068702698
    2. 'r' → logprob: -0.8983460068702698
    3. ')' → logprob: -8.523345947265625
    4. '   ' → logprob: -12.273345947265625
    5. '):
' → logprob: -12.523345947265625
    6. ' ' → logprob: -12.773345947265625
    7. ' )' → logprob: -13.148345947265625
    8. '_r' → logprob: -13.148345947265625
    9. '	r' → logprob: -13.398345947265625
    10. '):' → logprob: -13.773345947265625

Token 327: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31335869431495667
    2. '):
' → logprob: -1.3133586645126343
    3. '):
' → logprob: -9.438358306884766
    4. ')' → logprob: -11.563358306884766
    5. '):

' → logprob: -12.563358306884766
    6. ',' → logprob: -12.938358306884766
    7. '   ' → logprob: -14.188358306884766
    8. ':' → logprob: -14.938358306884766
    9. ' ):' → logprob: -14.938358306884766
    10. '=' → logprob: -15.563358306884766

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005578556098043919
    2. ' cnt' → logprob: -5.380578517913818
    3. 'cnt' → logprob: -7.380578517913818
    4. ' r' → logprob: -8.380578994750977
    5. 'r' → logprob: -9.755578994750977
    6. '	cnt' → logprob: -10.755578994750977
    7. '+' → logprob: -12.005578994750977
    8. '   ' → logprob: -12.130578994750977
    9. ' return' → logprob: -12.755578994750977
    10. ' if' → logprob: -12.880578994750977

Token 329: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.42363232374191284
    2. '   ' → logprob: -1.1736323833465576
    3. 'r' → logprob: -3.5486323833465576
    4. 'return' → logprob: -5.6736321449279785
    5. ' cnt' → logprob: -5.6736321449279785
    6. ' r' → logprob: -9.048632621765137
    7. 'if' → logprob: -9.298632621765137
    8. ' return' → logprob: -9.673632621765137
    9. '	cnt' → logprob: -10.298632621765137
    10. 'count' → logprob: -10.298632621765137

Token 330: '_updated' (ID: 80508)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3151707053184509
    2. ' +=' → logprob: -1.3151707649230957
    3. '=' → logprob: -6.565170764923096
    4. '+' → logprob: -7.940170764923096
    5. ' =' → logprob: -9.315170288085938
    6. ',' → logprob: -9.940170288085938
    7. ' +' → logprob: -12.815170288085938
    8. '+,' → logprob: -14.690170288085938
    9. ']+=' → logprob: -15.315170288085938
    10. 'plus' → logprob: -15.690170288085938

Token 331: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36102423071861267
    2. ' =' → logprob: -1.236024260520935
    3. ',' → logprob: -5.486024379730225
    4. ' +=' → logprob: -5.486024379730225
    5. '+=' → logprob: -5.736024379730225
    6. '+' → logprob: -6.986024379730225
    7. ' +' → logprob: -9.861023902893066
    8. ' ,' → logprob: -12.986023902893066
    9. '=count' → logprob: -14.111023902893066
    10. '   ' → logprob: -14.736023902893066

Token 332: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.003178782993927598
    2. ' cnt' → logprob: -5.753178596496582
    3. '(cnt' → logprob: -14.628178596496582
    4. '	cnt' → logprob: -15.253178596496582
    5. 'ct' → logprob: -15.753178596496582
    6. 'count' → logprob: -16.0031795501709
    7. '   ' → logprob: -16.6281795501709
    8. '[cnt' → logprob: -17.8781795501709
    9. 'c' → logprob: -18.1281795501709
    10. 'counter' → logprob: -18.1281795501709

Token 333: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38694286346435547
    2. ' +' → logprob: -1.1369428634643555
    3. '<|end|>' → logprob: -10.261942863464355
    4. '+
' → logprob: -11.511942863464355
    5. ' +=' → logprob: -12.011942863464355
    6. '
' → logprob: -12.136942863464355
    7. '+=' → logprob: -12.136942863464355
    8. ' +
' → logprob: -12.386942863464355
    9. ',' → logprob: -12.761942863464355
    10. '<|end|>' → logprob: -13.636942863464355

Token 334: ' ai' (ID: 8440)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013977376511320472
    2. ' ' → logprob: -9.000140190124512
    3. 'ai' → logprob: -11.875140190124512
    4. '(' → logprob: -12.000140190124512
    5. '(ai' → logprob: -13.750140190124512
    6. ' (' → logprob: -14.500140190124512
    7. '
' → logprob: -14.625140190124512
    8. 'r' → logprob: -15.500140190124512
    9. 'int' → logprob: -15.875140190124512
    10. ' ai' → logprob: -16.000139236450195

Token 335: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19685612618923187
    2. '
' → logprob: -2.0718560218811035
    3. ' ' → logprob: -4.0718560218811035
    4. ' 
' → logprob: -4.3218560218811035
    5. '<|end|>' → logprob: -4.9468560218811035
    6. '   ' → logprob: -5.4468560218811035
    7. ',r' → logprob: -6.0718560218811035
    8. ',
' → logprob: -6.0718560218811035
    9. ' ,' → logprob: -6.1968560218811035
    10. ' return' → logprob: -6.1968560218811035

Token 336: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10417532175779343
    2. '   ' → logprob: -2.354175329208374
    3. ',r' → logprob: -6.229175090789795
    4. ' ,' → logprob: -6.979175090789795
    5. ' ' → logprob: -8.229175567626953
    6. ',
' → logprob: -8.729175567626953
    7. '<|end|>' → logprob: -8.854175567626953
    8. '
' → logprob: -8.979175567626953
    9. 'r' → logprob: -9.104175567626953
    10. '	r' → logprob: -9.854175567626953

Token 337: ' xor' (ID: 106402)
  Prédit: ' xor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xor' → logprob: -0.051960431039333344
    2. 'xor' (adapté à ' xor') → logprob: -3.0519604682922363
    3. ' r' → logprob: -6.426960468292236
    4. ' return' → logprob: -7.051960468292236
    5. 'r' → logprob: -7.551960468292236
    6. '   ' → logprob: -8.551959991455078
    7. 'return' → logprob: -9.301959991455078
    8. ' XOR' → logprob: -10.676959991455078
    9. ' if' → logprob: -11.051959991455078
    10. ' x' → logprob: -11.176959991455078

Token 338: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -0.0007151735480874777
    2. ' =' → logprob: -7.625715255737305
    3. ' ^=' → logprob: -8.625715255737305
    4. '=' → logprob: -10.625715255737305
    5. '^' → logprob: -12.375715255737305
    6. 'updated' → logprob: -12.500715255737305
    7. '_' → logprob: -12.625715255737305
    8. ' ^' → logprob: -13.000715255737305
    9. 'Updated' → logprob: -13.000715255737305
    10. 'xor' → logprob: -13.500715255737305

Token 339: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02202737145125866
    2. ',' → logprob: -4.522027492523193
    3. '=' → logprob: -4.522027492523193
    4. ' ,' → logprob: -10.522027015686035
    5. ')' → logprob: -12.022027015686035
    6. '<|end|>' → logprob: -12.147027015686035
    7. ' =
' → logprob: -12.272027015686035
    8. ' ' → logprob: -12.772027015686035
    9. '_' → logprob: -13.147027015686035
    10. ',
' → logprob: -14.022027015686035

Token 340: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.006756579037755728
    2. ' xor' → logprob: -5.006756782531738
    3. '(x' → logprob: -11.131756782531738
    4. '   ' → logprob: -11.381756782531738
    5. 'x' → logprob: -12.256756782531738
    6. ' ' → logprob: -12.381756782531738
    7. 'cnt' → logprob: -13.006756782531738
    8. '0' → logprob: -13.006756782531738
    9. ' (' → logprob: -14.506756782531738
    10. '  ' → logprob: -14.631756782531738

Token 341: ' +' (ID: 659)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.5759943127632141
    2. '^' → logprob: -0.8259943127632141
    3. ' ' → logprob: -10.200994491577148
    4. ' ' → logprob: -11.200994491577148
    5. ' ^=' → logprob: -13.575994491577148
    6. ' ^
' → logprob: -13.950994491577148
    7. ',' → logprob: -14.950994491577148
    8. '_^' → logprob: -15.200994491577148
    9. '1' → logprob: -15.825994491577148
    10. ')' → logprob: -15.825994491577148

Token 342: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.01657373644411564
    2. '(ai' → logprob: -4.391573905944824
    3. ' ai' → logprob: -5.891573905944824
    4. '(' → logprob: -6.891573905944824
    5. ' (' → logprob: -8.516573905944824
    6. 'r' → logprob: -10.391573905944824
    7. '(r' → logprob: -10.766573905944824
    8. ' ' → logprob: -12.016573905944824
    9. '1' → logprob: -12.016573905944824
    10. '
' → logprob: -12.766573905944824

Token 343: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07755622267723083
    2. '
' → logprob: -2.7025561332702637
    3. ',
' → logprob: -5.827556133270264
    4. '   ' → logprob: -6.452556133270264
    5. '+' → logprob: -6.952556133270264
    6. ' +' → logprob: -7.452556133270264
    7. ' ,' → logprob: -7.702556133270264
    8. '<|end|>' → logprob: -7.952556133270264
    9. ',r' → logprob: -8.577556610107422
    10. ' ' → logprob: -8.577556610107422

Token 344: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.26519280672073364
    2. '   ' → logprob: -2.515192747116089
    3. 'r' (adapté à ' r') → logprob: -2.890192747116089
    4. ' return' → logprob: -3.015192747116089
    5. ',' → logprob: -3.140192747116089
    6. ' ' → logprob: -6.140192985534668
    7. 'return' → logprob: -7.015192985534668
    8. ',r' → logprob: -7.390192985534668
    9. ' ,' → logprob: -9.265192985534668
    10. '    ' → logprob: -9.390192985534668

Token 346: '_updated' (ID: 80508)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16176724433898926
    2. ' +=' → logprob: -2.1617672443389893
    3. '=' → logprob: -3.6617672443389893
    4. '+' → logprob: -4.78676700592041
    5. ' +' → logprob: -9.03676700592041
    6. ' =' → logprob: -9.53676700592041
    7. '<|end|>' → logprob: -12.28676700592041
    8. '++' → logprob: -12.66176700592041
    9. '<|end|>' → logprob: -12.91176700592041
    10. 'return' → logprob: -13.16176700592041

Token 347: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4745110869407654
    2. '=' → logprob: -0.9745110869407654
    3. ' +=' → logprob: -8.22451114654541
    4. '+=' → logprob: -8.97451114654541
    5. '+' → logprob: -10.47451114654541
    6. ',' → logprob: -11.97451114654541
    7. ' +' → logprob: -12.97451114654541
    8. '=r' → logprob: -13.59951114654541
    9. ' ' → logprob: -14.34951114654541
    10. ')' → logprob: -15.22451114654541

Token 348: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01603648066520691
    2. ' r' → logprob: -4.141036510467529
    3. '   ' → logprob: -13.641036033630371
    4. ' ' → logprob: -14.891036033630371
    5. 'max' → logprob: -15.141036033630371
    6. '	r' → logprob: -15.641036033630371
    7. '(r' → logprob: -17.016036987304688
    8. '
' → logprob: -17.016036987304688
    9. ' max' → logprob: -17.078536987304688
    10. '  ' → logprob: -17.828536987304688

Token 349: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868815004825592
    2. ' +' → logprob: -1.1368814706802368
    3. ' +=' → logprob: -12.511881828308105
    4. '+=' → logprob: -12.636881828308105
    5. '+r' → logprob: -13.136881828308105
    6. '+
' → logprob: -14.261881828308105
    7. '<|end|>' → logprob: -14.636881828308105
    8. ' +
' → logprob: -14.761881828308105
    9. '＋' → logprob: -17.26188087463379
    10. '+++' → logprob: -17.76188087463379

Token 350: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.500096321105957
    4. '<|end|>' → logprob: -17.125097274780273
    5. '  ' → logprob: -18.375097274780273
    6. '```' → logprob: -18.750097274780273
    7. '
' → logprob: -19.250097274780273
    8. '0' → logprob: -19.625097274780273
    9. '[' → logprob: -20.625097274780273
    10. '+' → logprob: -20.937597274780273

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.7501802444458
    4. '  ' → logprob: -17.312679290771484
    5. '```' → logprob: -17.312679290771484
    6. '<|end|>' → logprob: -17.500179290771484
    7. '0' → logprob: -17.625179290771484
    8. 'ai' → logprob: -18.250179290771484
    9. '[' → logprob: -18.312679290771484
    10. '
' → logprob: -18.437679290771484

Token 352: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016883930657058954
    2. '<|end|>' → logprob: -6.626688480377197
    3. ' return' → logprob: -8.751688003540039
    4. '	return' → logprob: -8.876688003540039
    5. '
' → logprob: -10.876688003540039
    6. ',' → logprob: -10.876688003540039
    7. 'return' → logprob: -11.501688003540039
    8. ':return' → logprob: -12.376688003540039
    9. '<|end|>' → logprob: -12.501688003540039
    10. ')' → logprob: -12.876688003540039

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000850605487357825
    2. '	return' → logprob: -7.625850677490234
    3. ' return' → logprob: -8.125850677490234
    4. 'return' → logprob: -10.500850677490234
    5. '<|end|>' → logprob: -10.500850677490234
    6. '
' → logprob: -12.000850677490234
    7. ',' → logprob: -13.250850677490234
    8. ':return' → logprob: -13.625850677490234
    9. '    
' → logprob: -14.125850677490234
    10. '```' → logprob: -14.750850677490234

Token 354: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08503274619579315
    2. ' return' → logprob: -3.0850327014923096
    3. 'return' (adapté à ' return') → logprob: -3.3350327014923096
    4. '	return' → logprob: -8.83503246307373
    5. ':return' → logprob: -11.58503246307373
    6. ' ' → logprob: -11.71003246307373
    7. ',' → logprob: -12.33503246307373
    8. '  ' → logprob: -12.96003246307373
    9. '_return' → logprob: -13.46003246307373
    10. '<|end|>' → logprob: -13.96003246307373

Token 355: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00016861737822182477
    2. '(cnt' → logprob: -8.750168800354004
    3. ' cnt' → logprob: -11.500168800354004
    4. '[cnt' → logprob: -17.500167846679688
    5. '	cnt' → logprob: -18.375167846679688
    6. 'count' → logprob: -19.375167846679688
    7. 'cn' → logprob: -21.000167846679688
    8. '   ' → logprob: -21.750167846679688
    9. '(' → logprob: -21.750167846679688
    10. '_cnt' → logprob: -22.125167846679688

Token 356: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -0.3133132755756378
    2. ',' → logprob: -1.3133132457733154
    3. 'Updated' → logprob: -10.813313484191895
    4. ' ,' → logprob: -11.313313484191895
    5. '_UPDATED' → logprob: -11.438313484191895
    6. '_,' → logprob: -13.063313484191895
    7. ',_' → logprob: -13.563313484191895
    8. 'updated' → logprob: -13.688313484191895
    9. '```' → logprob: -14.313313484191895
    10. '_update' → logprob: -14.313313484191895

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7120533811976202e-05
    2. ' ,' → logprob: -11.250017166137695
    3. ',x' → logprob: -13.750017166137695
    4. '```' → logprob: -13.750017166137695
    5. 'xor' → logprob: -14.750017166137695
    6. ',
' → logprob: -14.875017166137695
    7. ' xor' → logprob: -15.000017166137695
    8. '`,' → logprob: -15.125017166137695
    9. '‌,' → logprob: -16.125017166137695
    10. 'x' → logprob: -16.375017166137695

Token 358: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.0010332842357456684
    2. ' xor' → logprob: -6.876033306121826
    3. ' ' → logprob: -15.501032829284668
    4. 'x' → logprob: -16.126033782958984
    5. '   ' → logprob: -16.751033782958984
    6. 'xo' → logprob: -16.751033782958984
    7. 'xr' → logprob: -17.876033782958984
    8. '0' → logprob: -17.876033782958984
    9. '```' → logprob: -17.876033782958984
    10. '  ' → logprob: -18.251033782958984

Token 359: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -0.0004058858612552285
    2. ',' → logprob: -7.875405788421631
    3. '_,' → logprob: -11.500406265258789
    4. '_' → logprob: -12.250406265258789
    5. '_UPDATED' → logprob: -12.750406265258789
    6. ' ,' → logprob: -13.000406265258789
    7. 'updated' → logprob: -13.125406265258789
    8. ',_' → logprob: -13.500406265258789
    9. 'Updated' → logprob: -13.750406265258789
    10. '_up' → logprob: -14.875406265258789

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.976922744186595e-05
    2. ' ,' → logprob: -11.000040054321289
    3. ',r' → logprob: -11.125040054321289
    4. 'r' → logprob: -11.750040054321289
    5. ' r' → logprob: -15.375040054321289
    6. ',
' → logprob: -16.50004005432129
    7. '```' → logprob: -16.75004005432129
    8. '‌,' → logprob: -17.37504005432129
    9. '   ' → logprob: -17.62504005432129
    10. ' ' → logprob: -17.75004005432129

Token 361: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007099286303855479
    2. ' r' → logprob: -7.2507100105285645
    3. ' ' → logprob: -19.875709533691406
    4. '	r' → logprob: -20.375709533691406
    5. ' ' → logprob: -21.375709533691406
    6. '   ' → logprob: -21.375709533691406
    7. '_r' → logprob: -21.375709533691406
    8. '```' → logprob: -21.375709533691406
    9. '
' → logprob: -22.000709533691406
    10. '(r' → logprob: -22.250709533691406

Token 362: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -3.15441757265944e-05
    2. '_' → logprob: -11.250031471252441
    3. 'updated' → logprob: -11.750031471252441
    4. 'Updated' → logprob: -12.500031471252441
    5. '_UPDATED' → logprob: -12.625031471252441
    6. 'r' → logprob: -13.000031471252441
    7. '+' → logprob: -14.875031471252441
    8. '_update' → logprob: -15.375031471252441
    9. '_up' → logprob: -15.500031471252441
    10. ' Updated' → logprob: -16.125032424926758

Token 363: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 364: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: ' can' (ID: 665)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03826536610722542
    2. ' process' → logprob: -4.163265228271484
    3. 'main' → logprob: -4.788265228271484
    4. ' solve' → logprob: -5.038265228271484
    5. ' custom' → logprob: -6.163265228271484
    6. 'process' → logprob: -6.788265228271484
    7. ' binary' → logprob: -7.288265228271484
    8. ' remove' → logprob: -7.538265228271484
    9. ' max' → logprob: -7.788265228271484
    10. ' is' → logprob: -8.288265228271484

Token 366: '_extend' (ID: 195756)
  Prédit: '_expand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expand' → logprob: -0.5684124231338501
    2. '_extend' → logprob: -1.56841242313385
    3. '_continue' → logprob: -2.4434123039245605
    4. '_add' → logprob: -2.5684123039245605
    5. '_' → logprob: -3.5684123039245605
    6. '_accept' → logprob: -5.0684123039245605
    7. '_use' → logprob: -5.3184123039245605
    8. '_append' → logprob: -5.4434123039245605
    9. '_apply' → logprob: -5.6934123039245605
    10. '_take' → logprob: -5.8184123039245605

Token 367: '(r' (ID: 4729)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.020837202668190002
    2. '(l' → logprob: -4.145837306976318
    3. '(' → logprob: -5.645837306976318
    4. '(r' → logprob: -6.770837306976318
    5. '(count' → logprob: -10.77083683013916
    6. '_cnt' → logprob: -10.77083683013916
    7. '(curr' → logprob: -10.89583683013916
    8. ' (' → logprob: -11.27083683013916
    9. '(lst' → logprob: -11.52083683013916
    10. '_l' → logprob: -12.14583683013916

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015096203424036503
    2. ' ,' → logprob: -7.001509666442871
    3. '):' → logprob: -7.876509666442871
    4. ',
' → logprob: -8.751509666442871
    5. '):
' → logprob: -10.751509666442871
    6. ')' → logprob: -11.751509666442871
    7. ',r' → logprob: -11.876509666442871
    8. '   ' → logprob: -12.376509666442871
    9. ',n' → logprob: -12.501509666442871
    10. ',l' → logprob: -13.439009666442871

Token 369: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16039502620697021
    2. ' n' → logprob: -1.9103950262069702
    3. 'a' → logprob: -9.160394668579102
    4. ' a' → logprob: -10.785394668579102
    5. ')' → logprob: -10.910394668579102
    6. '   ' → logprob: -11.660394668579102
    7. '	n' → logprob: -11.910394668579102
    8. 'r' → logprob: -12.660394668579102
    9. ')n' → logprob: -13.410394668579102
    10. '):
' → logprob: -13.785394668579102

Token 370: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07526464015245438
    2. ',' → logprob: -2.7002646923065186
    3. '):
' → logprob: -5.3252644538879395
    4. ')' → logprob: -7.8252644538879395
    5. ' ):' → logprob: -10.325264930725098
    6. '   ' → logprob: -12.825264930725098
    7. '):
' → logprob: -12.825264930725098
    8. ' ,' → logprob: -12.950264930725098
    9. '):

' → logprob: -13.075264930725098
    10. ',
' → logprob: -13.200264930725098

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03760036826133728
    2. ' return' → logprob: -3.66260027885437
    3. 'return' → logprob: -4.787600517272949
    4. ' r' → logprob: -6.287600517272949
    5. 'r' → logprob: -6.912600517272949
    6. '	return' → logprob: -10.66260051727295
    7. ' ' → logprob: -12.03760051727295
    8. '    ' → logprob: -12.16260051727295
    9. 'def' → logprob: -12.66260051727295
    10. '  ' → logprob: -12.91260051727295

Token 372: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5142889022827148
    2. ' return' → logprob: -1.0142889022827148
    3. '   ' → logprob: -3.264288902282715
    4. 'r' → logprob: -7.139288902282715
    5. ' r' → logprob: -7.889288902282715
    6. '
' → logprob: -11.014288902282715
    7. '	return' → logprob: -13.014288902282715
    8. '    
' → logprob: -13.639288902282715
    9. '    ' → logprob: -13.764288902282715
    10. 'eturn' → logprob: -15.264288902282715

Token 373: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04858805239200592
    2. ' r' → logprob: -3.0485880374908447
    3. '	r' → logprob: -15.048587799072266
    4. '(r' → logprob: -15.298587799072266
    5. '   ' → logprob: -16.173587799072266
    6. '_r' → logprob: -17.423587799072266
    7. ' ' → logprob: -19.298587799072266
    8. ' ' → logprob: -19.423587799072266
    9. '[r' → logprob: -19.423587799072266
    10. '
' → logprob: -19.798587799072266

Token 374: ' +' (ID: 659)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.45250797271728516
    2. '<' → logprob: -1.0775079727172852
    3. '+' → logprob: -4.327507972717285
    4. ' +' → logprob: -4.577507972717285
    5. '<n' → logprob: -10.577507972717285
    6. ' ' → logprob: -12.202507972717285
    7. ' ' → logprob: -12.577507972717285
    8. '[' → logprob: -12.952507972717285
    9. '<len' → logprob: -13.202507972717285
    10. '<size' → logprob: -13.452507972717285

Token 375: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043341092532500625
    2. ' ' → logprob: -7.750433444976807
    3. ' <' → logprob: -13.625432968139648
    4. '<' → logprob: -14.125432968139648
    5. '0' → logprob: -14.875432968139648
    6. '<|end|>' → logprob: -15.250432968139648
    7. '[' → logprob: -16.12543296813965
    8. '   ' → logprob: -16.25043296813965
    9. '+' → logprob: -16.62543296813965
    10. 'import' → logprob: -17.75043296813965

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '<|end|>' → logprob: -17.500011444091797
    4. '[' → logprob: -18.125011444091797
    5. '   ' → logprob: -19.000011444091797
    6. '0' → logprob: -19.500011444091797
    7. 'import' → logprob: -19.750011444091797
    8. '```' → logprob: -19.875011444091797
    9. 'def' → logprob: -20.250011444091797
    10. '+' → logprob: -20.375011444091797

Token 377: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06360936164855957
    2. ' <' → logprob: -2.8136093616485596
    3. '<n' → logprob: -6.5636091232299805
    4. '<=' → logprob: -8.56360912322998
    5. ' <=' → logprob: -10.18860912322998
    6. ' ' → logprob: -14.56360912322998
    7. '<num' → logprob: -15.18860912322998
    8. ' n' → logprob: -17.063610076904297
    9. '<size' → logprob: -17.063610076904297
    10. ' ' → logprob: -17.188610076904297

Token 378: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20141352713108063
    2. ' n' → logprob: -1.7014135122299194
    3. '	n' → logprob: -15.57641315460205
    4. '(n' → logprob: -17.576414108276367
    5. ' ' → logprob: -18.826414108276367
    6. ')n' → logprob: -18.951414108276367
    7. '<|end|>' → logprob: -19.326414108276367
    8. '_n' → logprob: -19.701414108276367
    9. '   ' → logprob: -20.076414108276367
    10. '<n' → logprob: -20.701414108276367

Token 379: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07122036069631577
    2. '<|end|>' → logprob: -2.6962203979492188
    3. '
' → logprob: -7.196220397949219
    4. '#' → logprob: -8.321220397949219
    5. '<|end|>' → logprob: -9.196220397949219
    6. '```' → logprob: -10.071220397949219
    7. '\' → logprob: -10.321220397949219
    8. ' def' → logprob: -10.821220397949219
    9. ')' → logprob: -11.071220397949219
    10. '\n' → logprob: -11.321220397949219

Token 381: ' can' (ID: 665)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.6553977131843567
    2. ' main' → logprob: -1.280397653579712
    3. 'process' → logprob: -2.780397653579712
    4. ' custom' → logprob: -3.405397653579712
    5. ' extend' → logprob: -3.780397653579712
    6. 'main' → logprob: -4.280397891998291
    7. ' can' → logprob: -4.405397891998291
    8. 'extend' → logprob: -4.530397891998291
    9. ' expand' → logprob: -4.905397891998291
    10. 'expand' → logprob: -4.905397891998291

Token 382: '_extend' (ID: 195756)
  Prédit: '_extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_extend' → logprob: -0.0005014431662857533
    2. '_expand' → logprob: -8.75050163269043
    3. '_continue' → logprob: -9.00050163269043
    4. '_add' → logprob: -9.25050163269043
    5. 'extend' → logprob: -10.00050163269043
    6. '_ext' → logprob: -10.25050163269043
    7. ' extend' → logprob: -11.25050163269043
    8. '_extension' → logprob: -11.62550163269043
    9. '_append' → logprob: -11.87550163269043
    10. '_apply' → logprob: -13.25050163269043

Token 383: '_' (ID: 62)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.016566932201385498
    2. '(' → logprob: -4.141566753387451
    3. ' (' → logprob: -8.01656723022461
    4. '_r' → logprob: -9.51656723022461
    5. '(l' → logprob: -9.89156723022461
    6. '_' → logprob: -10.51656723022461
    7. 'r' → logprob: -11.26656723022461
    8. 'def' → logprob: -11.89156723022461
    9. '(_' → logprob: -12.01656723022461
    10. '(
' → logprob: -12.01656723022461

Token 384: 'while' (ID: 7032)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.5647016167640686
    2. 'r' → logprob: -0.9397016167640686
    3. 'l' → logprob: -3.564701557159424
    4. '(l' → logprob: -4.439701557159424
    5. '(' → logprob: -8.189702033996582
    6. 'def' → logprob: -9.564702033996582
    7. '_l' → logprob: -9.814702033996582
    8. '_r' → logprob: -10.189702033996582
    9. ')' → logprob: -11.064702033996582
    10. 'a' → logprob: -11.939702033996582

Token 385: '(x' (ID: 4061)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.15080246329307556
    2. ' (' → logprob: -2.1508023738861084
    3. '(' → logprob: -3.7758023738861084
    4. 'r' → logprob: -8.275802612304688
    5. '(can' → logprob: -8.525802612304688
    6. ' r' → logprob: -9.900802612304688
    7. '(lambda' → logprob: -10.275802612304688
    8. '_' → logprob: -10.400802612304688
    9. ' can' → logprob: -10.650802612304688
    10. '_r' → logprob: -11.150802612304688

Token 386: 'or' (ID: 267)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3473375737667084
    2. '=' → logprob: -2.222337484359741
    3. '(r' → logprob: -2.222337484359741
    4. ')' → logprob: -3.472337484359741
    5. ',' → logprob: -4.59733772277832
    6. '_r' → logprob: -4.97233772277832
    7. '==' → logprob: -5.22233772277832
    8. 'def' → logprob: -5.22233772277832
    9. 'or' → logprob: -5.84733772277832
    10. '_' → logprob: -6.09733772277832

Token 387: ',' (ID: 11)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6760989427566528
    2. ',' → logprob: -1.4260989427566528
    3. ' +' → logprob: -1.9260989427566528
    4. ' ,' → logprob: -3.1760988235473633
    5. ' !=' → logprob: -3.9260988235473633
    6. '+' → logprob: -4.426098823547363
    7. '<' → logprob: -4.676098823547363
    8. ' <=' → logprob: -5.176098823547363
    9. ')' → logprob: -5.301098823547363
    10. ' ^' → logprob: -6.176098823547363

Token 388: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.25747615098953247
    2. 'r' → logprob: -2.1324760913848877
    3. 'n' → logprob: -2.7574760913848877
    4. ' cnt' → logprob: -3.5074760913848877
    5. ')' → logprob: -5.382476329803467
    6. ' n' → logprob: -5.882476329803467
    7. '0' → logprob: -6.382476329803467
    8. ' r' → logprob: -6.507476329803467
    9. 'xor' → logprob: -6.882476329803467
    10. '<|end|>' → logprob: -7.007476329803467

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025330718606710434
    2. '):' → logprob: -4.150330543518066
    3. ' <' → logprob: -5.900330543518066
    4. ' +' → logprob: -6.275330543518066
    5. ' ,' → logprob: -6.400330543518066
    6. '<' → logprob: -7.025330543518066
    7. '+' → logprob: -7.150330543518066
    8. ' <=' → logprob: -8.025330543518066
    9. ')' → logprob: -8.275330543518066
    10. '   ' → logprob: -8.525330543518066

Token 390: ' a' (ID: 261)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04495538771152496
    2. 'n' → logprob: -3.7949554920196533
    3. ' r' → logprob: -4.294955253601074
    4. ' n' → logprob: -6.169955253601074
    5. 'a' → logprob: -6.669955253601074
    6. ')' → logprob: -6.919955253601074
    7. 'cnt' → logprob: -6.919955253601074
    8. 'can' → logprob: -7.294955253601074
    9. 'xor' → logprob: -7.544955253601074
    10. '0' → logprob: -8.419955253601074

Token 391: ',' (ID: 11)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.4802311658859253
    2. ',' → logprob: -1.2302311658859253
    3. '):' → logprob: -2.730231285095215
    4. '):
' → logprob: -4.230231285095215
    5. ',r' → logprob: -5.855231285095215
    6. '[' → logprob: -5.980231285095215
    7. ')' → logprob: -6.605231285095215
    8. 'r' → logprob: -6.730231285095215
    9. '   ' → logprob: -7.730231285095215
    10. ',
' → logprob: -9.355231285095215

Token 392: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0023297439329326153
    2. 'n' → logprob: -6.3773298263549805
    3. 'can' → logprob: -8.25232982635498
    4. ')' → logprob: -8.62732982635498
    5. ' r' → logprob: -9.00232982635498
    6. 'len' → logprob: -11.00232982635498
    7. ',' → logprob: -11.50232982635498
    8. 'a' → logprob: -12.37732982635498
    9. ' can' → logprob: -12.75232982635498
    10. '   ' → logprob: -12.75232982635498

Token 393: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0057167774066329
    2. '):' → logprob: -5.505716800689697
    3. '):
' → logprob: -7.005716800689697
    4. ',n' → logprob: -8.255716323852539
    5. '   ' → logprob: -8.380716323852539
    6. ')' → logprob: -9.630716323852539
    7. '+' → logprob: -9.755716323852539
    8. ' ,' → logprob: -10.005716323852539
    9. ',r' → logprob: -10.880716323852539
    10. 'n' → logprob: -11.880716323852539

Token 394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01518325787037611
    2. ' r' → logprob: -5.140183448791504
    3. ' return' → logprob: -5.265183448791504
    4. ' while' → logprob: -6.265183448791504
    5. 'r' → logprob: -6.765183448791504
    6. ' if' → logprob: -8.140183448791504
    7. ' and' → logprob: -8.890183448791504
    8. 'return' → logprob: -8.890183448791504
    9. 'while' → logprob: -8.890183448791504
    10. ' xor' → logprob: -9.265183448791504

Token 395: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2524621486663818
    2. ' return' → logprob: -1.3774621486663818
    3. ' r' → logprob: -1.8774621486663818
    4. 'return' (adapté à ' return') → logprob: -2.002462148666382
    5. 'can' → logprob: -2.877462148666382
    6. ' can' → logprob: -3.502462148666382
    7. ' xor' → logprob: -3.502462148666382
    8. '   ' → logprob: -3.627462148666382
    9. 'xor' → logprob: -3.752462148666382
    10. ' a' → logprob: -6.502462387084961

Token 396: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.7636849880218506
    2. 'r' → logprob: -1.3886849880218506
    3. ' xor' → logprob: -2.0136849880218506
    4. '(r' → logprob: -3.0136849880218506
    5. '(x' → logprob: -3.3886849880218506
    6. ' (' → logprob: -4.01368522644043
    7. ' r' → logprob: -4.38868522644043
    8. 'can' → logprob: -4.38868522644043
    9. 'a' → logprob: -5.26368522644043
    10. '(can' → logprob: -5.63868522644043

Token 397: ' ^' (ID: 7602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7214745879173279
    2. '<' → logprob: -1.5964746475219727
    3. '^' → logprob: -1.8464746475219727
    4. ' ^' → logprob: -2.8464746475219727
    5. '<=' → logprob: -3.3464746475219727
    6. ' +' → logprob: -3.4714746475219727
    7. ' <' → logprob: -4.221474647521973
    8. '!=' → logprob: -5.096474647521973
    9. ' <=' → logprob: -5.721474647521973
    10. ' !=' → logprob: -6.721474647521973

Token 398: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.3464544432936236e-05
    2. ' a' → logprob: -10.125043869018555
    3. 'ai' → logprob: -14.000043869018555
    4. '   ' → logprob: -14.375043869018555
    5. '[' → logprob: -14.500043869018555
    6. '[a' → logprob: -14.500043869018555
    7. '<|end|>' → logprob: -15.250043869018555
    8. '0' → logprob: -15.500043869018555
    9. '(a' → logprob: -15.875043869018555
    10. '(' → logprob: -16.500043869018555

Token 399: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -3.643152740551159e-05
    2. '[' → logprob: -10.875036239624023
    3. 'r' → logprob: -11.000036239624023
    4. '[
' → logprob: -14.750036239624023
    5. '(r' → logprob: -15.875036239624023
    6. '```' → logprob: -16.250036239624023
    7. ' [' → logprob: -17.375036239624023
    8. '[a' → logprob: -17.625036239624023
    9. '	r' → logprob: -18.125036239624023
    10. '
' → logprob: -18.625036239624023

Token 400: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04679500311613083
    2. '[r' → logprob: -3.171794891357422
    3. '[' → logprob: -5.796794891357422
    4. ']==' → logprob: -8.421794891357422
    5. ' ]' → logprob: -8.546794891357422
    6. '<|end|>' → logprob: -9.421794891357422
    7. '']' → logprob: -9.921794891357422
    8. '   ' → logprob: -10.171794891357422
    9. '])' → logprob: -10.671794891357422
    10. 'r' → logprob: -11.046794891357422

Token 401: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9648159742355347
    2. '==' → logprob: -1.0898159742355347
    3. '<' → logprob: -2.214816093444824
    4. ' <' → logprob: -2.214816093444824
    5. ' !=' → logprob: -3.839816093444824
    6. ' <=' → logprob: -4.339816093444824
    7. '<=' → logprob: -4.339816093444824
    8. '!=' → logprob: -4.464816093444824
    9. ' and' → logprob: -6.964816093444824
    10. '>' → logprob: -6.964816093444824

Token 402: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.020726284012198448
    2. '(cnt' → logprob: -4.520726203918457
    3. '0' → logprob: -4.895726203918457
    4. ' cnt' → logprob: -6.270726203918457
    5. 'a' → logprob: -9.770726203918457
    6. ' ' → logprob: -10.020726203918457
    7. ' (' → logprob: -10.270726203918457
    8. '	cnt' → logprob: -10.645726203918457
    9. '[cnt' → logprob: -10.895726203918457
    10. '(a' → logprob: -11.020726203918457

Token 403: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 404: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0263078510761261
    2. ' a' → logprob: -3.6513078212738037
    3. ' ' → logprob: -12.401308059692383
    4. '1' → logprob: -13.776308059692383
    5. '[a' → logprob: -14.401308059692383
    6. '	a' → logprob: -14.526308059692383
    7. '   ' → logprob: -14.776308059692383
    8. '_a' → logprob: -15.776308059692383
    9. 'ai' → logprob: -15.776308059692383
    10. '  ' → logprob: -16.026308059692383

Token 405: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00018161057960242033
    2. 'r' → logprob: -8.625181198120117
    3. '[' → logprob: -13.375181198120117
    4. ' r' → logprob: -15.750181198120117
    5. ' [' → logprob: -16.500181198120117
    6. '	r' → logprob: -17.000181198120117
    7. '```' → logprob: -17.250181198120117
    8. '(r' → logprob: -17.375181198120117
    9. '[i' → logprob: -17.500181198120117
    10. '_r' → logprob: -17.625181198120117

Token 406: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46749529242515564
    2. '<|end|>' → logprob: -1.092495322227478
    3. '<|end|>' → logprob: -3.7174952030181885
    4. ' and' → logprob: -4.717495441436768
    5. ']' → logprob: -5.967495441436768
    6. ' )' → logprob: -7.842495441436768
    7. '}' → logprob: -7.967495441436768
    8. '[' → logprob: -8.21749496459961
    9. '   ' → logprob: -8.34249496459961
    10. ' ' → logprob: -8.84249496459961

Token 407: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: ' extend' (ID: 20239)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.0887136459350586
    2. 'process' → logprob: -1.4637136459350586
    3. 'custom' → logprob: -1.9637136459350586
    4. 'extend' → logprob: -1.9637136459350586
    5. 'def' → logprob: -3.0887136459350586
    6. ' process' → logprob: -3.4637136459350586
    7. ' can' → logprob: -4.463713645935059
    8. ' custom' → logprob: -4.588713645935059
    9. 'lambda' → logprob: -4.588713645935059
    10. 'expand' → logprob: -4.588713645935059

Token 409: '_window' (ID: 28463)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.4986409544944763
    2. '(' → logprob: -1.498641014099121
    3. '_' → logprob: -1.873641014099121
    4. '_(' → logprob: -4.998641014099121
    5. '(_' → logprob: -5.498641014099121
    6. '_r' → logprob: -5.498641014099121
    7. ' (' → logprob: -8.873641014099121
    8. '(
' → logprob: -8.873641014099121
    9. '(_)' → logprob: -9.498641014099121
    10. ' _' → logprob: -9.623641014099121

Token 410: '(x' (ID: 4061)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.2821621596813202
    2. '(' → logprob: -1.4071621894836426
    3. '(cnt' → logprob: -7.282162189483643
    4. ' (' → logprob: -9.157161712646484
    5. ':' → logprob: -9.407161712646484
    6. '(:' → logprob: -9.657161712646484
    7. '(
' → logprob: -11.157161712646484
    8. '(:,' → logprob: -12.032161712646484
    9. '(_,' → logprob: -12.032161712646484
    10. '(n' → logprob: -12.282161712646484

Token 411: 'or' (ID: 267)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0885118618607521
    2. '_' → logprob: -3.3385119438171387
    3. '(' → logprob: -4.088511943817139
    4. ',' → logprob: -4.213511943817139
    5. '(r' → logprob: -5.088511943817139
    6. '_r' → logprob: -5.338511943817139
    7. 'or' → logprob: -5.713511943817139
    8. ')' → logprob: -6.463511943817139
    9. '```' → logprob: -7.588511943817139
    10. 'def' → logprob: -7.963511943817139

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004719545599073172
    2. ' ,' → logprob: -5.7547197341918945
    3. ',r' → logprob: -6.5047197341918945
    4. ')' → logprob: -10.879719734191895
    5. '   ' → logprob: -11.754719734191895
    6. ',
' → logprob: -12.379719734191895
    7. '_,' → logprob: -13.254719734191895
    8. 'r' → logprob: -13.254719734191895
    9. ',c' → logprob: -13.379719734191895
    10. '(r' → logprob: -13.754719734191895

Token 413: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.04860395938158035
    2. ' cnt' → logprob: -3.0486040115356445
    3. 'a' → logprob: -11.548604011535645
    4. '	cnt' → logprob: -12.798604011535645
    5. '(cnt' → logprob: -13.923604011535645
    6. 'count' → logprob: -13.923604011535645
    7. 'r' → logprob: -14.423604011535645
    8. ' a' → logprob: -14.673604011535645
    9. ' ' → logprob: -14.673604011535645
    10. '[cnt' → logprob: -15.048604011535645

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005866335122846067
    2. ' ,' → logprob: -7.75058650970459
    3. ',a' → logprob: -9.00058650970459
    4. 'a' → logprob: -11.25058650970459
    5. ')' → logprob: -12.12558650970459
    6. ',r' → logprob: -12.25058650970459
    7. ',
' → logprob: -13.12558650970459
    8. '   ' → logprob: -13.62558650970459
    9. ' a' → logprob: -13.75058650970459
    10. '),' → logprob: -14.12558650970459

Token 415: ' ai' (ID: 8440)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.038770873099565506
    2. ' a' → logprob: -3.288770914077759
    3. 'r' → logprob: -7.28877067565918
    4. ' r' → logprob: -10.41377067565918
    5. '	a' → logprob: -12.66377067565918
    6. ')' → logprob: -12.66377067565918
    7. '   ' → logprob: -13.16377067565918
    8. ' ' → logprob: -13.53877067565918
    9. ')a' → logprob: -13.78877067565918
    10. '[a' → logprob: -14.10127067565918

Token 416: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4140441635390744e-05
    2. ' ,' → logprob: -11.875014305114746
    3. '):' → logprob: -12.250014305114746
    4. '):
' → logprob: -13.375014305114746
    5. '_,' → logprob: -15.375014305114746
    6. 'r' → logprob: -15.500014305114746
    7. ',r' → logprob: -15.500014305114746
    8. ',
' → logprob: -16.87501335144043
    9. ')' → logprob: -17.00001335144043
    10. '   ' → logprob: -18.12501335144043

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13893522322177887
    2. ',' → logprob: -2.7639353275299072
    3. ' =' → logprob: -3.3889353275299072
    4. '=' → logprob: -4.263935089111328
    5. 'xor' → logprob: -4.638935089111328
    6. ':' → logprob: -5.888935089111328
    7. ' ^=' → logprob: -6.013935089111328
    8. ' xor' → logprob: -6.513935089111328
    9. ' ,' → logprob: -7.888935089111328
    10. ' ' → logprob: -8.013935089111328

Token 418: ' xor' (ID: 106402)
  Prédit: ' xor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xor' → logprob: -0.8541749715805054
    2. ' return' → logprob: -1.3541749715805054
    3. 'xor' (adapté à ' xor') → logprob: -1.9791749715805054
    4. '   ' → logprob: -2.229175090789795
    5. 'return' → logprob: -2.729175090789795
    6. ' x' → logprob: -6.729175090789795
    7. ' cnt' → logprob: -6.979175090789795
    8. 'cnt' → logprob: -7.104175090789795
    9. ' =' → logprob: -8.104174613952637
    10. ',' → logprob: -8.229174613952637

Token 419: '_updated' (ID: 80508)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.5279479622840881
    2. '^' → logprob: -1.2779479026794434
    3. '=' → logprob: -2.1529479026794434
    4. ' ^' → logprob: -4.527947902679443
    5. ' =' → logprob: -5.402947902679443
    6. ' ' → logprob: -9.777948379516602
    7. ',' → logprob: -10.777948379516602
    8. '   ' → logprob: -11.277948379516602
    9. '_^' → logprob: -11.652948379516602
    10. '_' → logprob: -12.652948379516602

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133208751678467
    2. ' =' → logprob: -1.3133208751678467
    3. ' ^=' → logprob: -10.188321113586426
    4. ',' → logprob: -11.938321113586426
    5. '^' → logprob: -12.063321113586426
    6. ' ^' → logprob: -12.313321113586426
    7. ' ' → logprob: -12.813321113586426
    8. 'xor' → logprob: -14.688321113586426
    9. ' ,' → logprob: -15.188321113586426
    10. ')' → logprob: -15.313321113586426

Token 421: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.004085997585207224
    2. ' xor' → logprob: -5.504086017608643
    3. 'x' → logprob: -12.004085540771484
    4. '(x' → logprob: -14.379085540771484
    5. '   ' → logprob: -14.504085540771484
    6. ' ' → logprob: -15.504085540771484
    7. '0' → logprob: -16.504085540771484
    8. 'xo' → logprob: -17.254085540771484
    9. '```' → logprob: -17.504085540771484
    10. ' ' → logprob: -17.879085540771484

Token 422: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.47410017251968384
    2. ' ^' → logprob: -0.9741001725196838
    3. ' ^=' → logprob: -11.349100112915039
    4. ' xor' → logprob: -12.474100112915039
    5. ' ' → logprob: -13.599100112915039
    6. '
' → logprob: -13.849100112915039
    7. 'xor' → logprob: -13.974100112915039
    8. ' ^
' → logprob: -14.099100112915039
    9. ' ' → logprob: -14.349100112915039
    10. '^)' → logprob: -14.474100112915039

Token 423: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.02975824475288391
    2. ' ai' → logprob: -3.5297582149505615
    3. '(ai' → logprob: -12.15475845336914
    4. 'a' → logprob: -13.90475845336914
    5. '_ai' → logprob: -13.90475845336914
    6. ' ' → logprob: -15.02975845336914
    7. '-ai' → logprob: -16.65475845336914
    8. '   ' → logprob: -16.90475845336914
    9. '(' → logprob: -17.27975845336914
    10. '.ai' → logprob: -17.40475845336914

Token 424: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013398789800703526
    2. '   ' → logprob: -5.26339864730835
    3. 'cnt' → logprob: -5.88839864730835
    4. '<|end|>' → logprob: -5.88839864730835
    5. ' 
' → logprob: -7.13839864730835
    6. ',' → logprob: -7.26339864730835
    7. ' cnt' → logprob: -8.388399124145508
    8. '    
' → logprob: -8.638399124145508
    9. ' ' → logprob: -8.638399124145508
    10. '  
' → logprob: -8.888399124145508

Token 425: '   ' (ID: 271)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.9213969707489014
    2. 'cnt' → logprob: -1.0463969707489014
    3. '   ' → logprob: -1.4213969707489014
    4. '+' → logprob: -5.6713972091674805
    5. '
' → logprob: -6.0463972091674805
    6. ' +' → logprob: -6.1713972091674805
    7. '	cnt' → logprob: -6.9213972091674805
    8. '    
' → logprob: -8.54639720916748
    9. ',' → logprob: -9.54639720916748
    10. ' return' → logprob: -9.79639720916748

Token 426: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0067248414270579815
    2. ' cnt' → logprob: -5.006724834442139
    3. '   ' → logprob: -11.631725311279297
    4. '	cnt' → logprob: -14.881725311279297
    5. 'count' → logprob: -16.381725311279297
    6. '(cnt' → logprob: -17.631725311279297
    7. ' ' → logprob: -17.756725311279297
    8. 'cn' → logprob: -18.631725311279297
    9. '  ' → logprob: -18.756725311279297
    10. 'counter' → logprob: -19.256725311279297

Token 427: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -0.05282799154520035
    2. ' +=' → logprob: -3.802828073501587
    3. '+=' → logprob: -4.052827835083008
    4. '+' → logprob: -4.927827835083008
    5. '_' → logprob: -6.177827835083008
    6. '=' → logprob: -6.677827835083008
    7. ' +' → logprob: -7.677827835083008
    8. 'updated' → logprob: -8.177827835083008
    9. ' =' → logprob: -8.302827835083008
    10. 'Updated' → logprob: -9.927827835083008

Token 428: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869381546974182
    2. '=' → logprob: -1.1369380950927734
    3. ' +=' → logprob: -9.761938095092773
    4. '+=' → logprob: -11.636938095092773
    5. ',' → logprob: -14.761938095092773
    6. ' ' → logprob: -16.011938095092773
    7. ' =
' → logprob: -16.136938095092773
    8. '+' → logprob: -16.636938095092773
    9. '=
' → logprob: -17.886938095092773
    10. ')' → logprob: -18.136938095092773

Token 429: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.011050417087972164
    2. ' cnt' → logprob: -4.511050224304199
    3. '	cnt' → logprob: -13.1360502243042
    4. '(cnt' → logprob: -14.3860502243042
    5. '[cnt' → logprob: -17.136051177978516
    6. 'count' → logprob: -17.636051177978516
    7. ' ' → logprob: -19.011051177978516
    8. '_cnt' → logprob: -19.136051177978516
    9. 'ct' → logprob: -19.261051177978516
    10. '   ' → logprob: -19.761051177978516

Token 430: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020915418863297
    2. '+' → logprob: -2.3502092361450195
    3. ' +=' → logprob: -14.22520923614502
    4. ' ' → logprob: -14.47520923614502
    5. ' +
' → logprob: -14.60020923614502
    6. ' plus' → logprob: -14.72520923614502
    7. '+=' → logprob: -16.475208282470703
    8. ' ' → logprob: -16.600208282470703
    9. '<|end|>' → logprob: -16.600208282470703
    10. ' +
' → logprob: -16.725208282470703

Token 431: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.2519327998161316
    2. ' ai' → logprob: -1.5019328594207764
    3. '_ai' → logprob: -13.251933097839355
    4. '(ai' → logprob: -13.751933097839355
    5. 'a' → logprob: -14.626933097839355
    6. '.ai' → logprob: -15.001933097839355
    7. '-ai' → logprob: -16.37693214416504
    8. ' ' → logprob: -17.75193214416504
    9. ' ' → logprob: -18.25193214416504
    10. 'i' → logprob: -19.00193214416504

Token 432: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038405898958444595
    2. '<|end|>' → logprob: -3.5384058952331543
    3. ' return' → logprob: -5.163405895233154
    4. '	return' → logprob: -6.163405895233154
    5. ',' → logprob: -8.038406372070312
    6. 'return' → logprob: -9.288406372070312
    7. '<|end|>' → logprob: -9.413406372070312
    8. '
' → logprob: -9.538406372070312
    9. ' ' → logprob: -9.788406372070312
    10. '  ' → logprob: -10.038406372070312

Token 433: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042251357808709145
    2. ' return' → logprob: -5.504225254058838
    3. 'return' → logprob: -9.12922477722168
    4. '	return' → logprob: -10.25422477722168
    5. '   ' → logprob: -13.50422477722168
    6. ',' → logprob: -14.62922477722168
    7. '  ' → logprob: -15.00422477722168
    8. ' ' → logprob: -16.00422477722168
    9. '       ' → logprob: -16.00422477722168
    10. '    ' → logprob: -16.50422477722168

Token 434: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.49876707792282104
    2. ' return' → logprob: -1.2487671375274658
    3. '   ' → logprob: -2.248767137527466
    4. 'r' → logprob: -8.248766899108887
    5. ' r' → logprob: -10.873766899108887
    6. '	return' → logprob: -11.123766899108887
    7. ' ' → logprob: -11.123766899108887
    8. 'cnt' → logprob: -11.373766899108887
    9. 'xor' → logprob: -12.248766899108887
    10. '  ' → logprob: -12.498766899108887

Token 435: ' xor' (ID: 106402)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0032233449164777994
    2. ' cnt' → logprob: -5.753223419189453
    3. '(cnt' → logprob: -10.003223419189453
    4. '	cnt' → logprob: -15.003223419189453
    5. '[cnt' → logprob: -17.628223419189453
    6. 'xor' → logprob: -17.753223419189453
    7. '   ' → logprob: -18.503223419189453
    8. 'count' → logprob: -18.753223419189453
    9. '_cnt' → logprob: -18.753223419189453
    10. 'ctr' → logprob: -19.753223419189453

Token 436: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -6.504040356958285e-05
    2. ',' → logprob: -9.875064849853516
    3. '_,' → logprob: -12.500064849853516
    4. '_UPDATED' → logprob: -12.750064849853516
    5. '_' → logprob: -13.000064849853516
    6. 'Updated' → logprob: -13.000064849853516
    7. 'updated' → logprob: -13.875064849853516
    8. ' ,' → logprob: -14.375064849853516
    9. ',_' → logprob: -15.125064849853516
    10. ' Updated' → logprob: -15.625064849853516

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.636475493200123e-05
    2. ' ,' → logprob: -9.500076293945312
    3. ',c' → logprob: -13.875076293945312
    4. ',
' → logprob: -15.250076293945312
    5. '‌,' → logprob: -16.375076293945312
    6. ',count' → logprob: -16.625076293945312
    7. ' cnt' → logprob: -17.500076293945312
    8. '<|end|>' → logprob: -17.500076293945312
    9. '   ' → logprob: -17.625076293945312
    10. ',int' → logprob: -18.250076293945312

Token 438: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.061967913061380386
    2. ' cnt' → logprob: -2.8119678497314453
    3. '	cnt' → logprob: -16.061967849731445
    4. 'count' → logprob: -16.186967849731445
    5. '(cnt' → logprob: -17.061967849731445
    6. ' ' → logprob: -18.436967849731445
    7. 'ct' → logprob: -18.561967849731445
    8. '[cnt' → logprob: -18.936967849731445
    9. '_cnt' → logprob: -19.686967849731445
    10. 'cn' → logprob: -20.061967849731445

Token 439: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -0.008578404784202576
    2. '+' → logprob: -4.883578300476074
    3. '_' → logprob: -8.383578300476074
    4. '<|end|>' → logprob: -8.383578300476074
    5. 'updated' → logprob: -8.633578300476074
    6. ' +' → logprob: -8.633578300476074
    7. 'Updated' → logprob: -9.508578300476074
    8. '_UPDATED' → logprob: -10.383578300476074
    9. '   ' → logprob: -10.633578300476074
    10. ',' → logprob: -11.633578300476074

Token 440: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3208635151386261
    2. '<|end|>' → logprob: -1.3208634853363037
    3. '
' → logprob: -4.945863723754883
    4. '<|end|>' → logprob: -8.195863723754883
    5. '```' → logprob: -10.070863723754883
    6. '#' → logprob: -10.570863723754883
    7. ' def' → logprob: -10.570863723754883
    8. '

' → logprob: -11.070863723754883
    9. '\n' → logprob: -11.320863723754883
    10. '  
' → logprob: -11.320863723754883

Token 441: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.620622712536715e-05
    2. '<|end|>' → logprob: -10.625045776367188
    3. '#' → logprob: -11.375045776367188
    4. '```' → logprob: -12.250045776367188
    5. ' def' → logprob: -13.000045776367188
    6. ')' → logprob: -14.250045776367188
    7. 'for' → logprob: -14.250045776367188
    8. '.' → logprob: -14.750045776367188
    9. 'class' → logprob: -15.125045776367188
    10. '
' → logprob: -15.125045776367188

Token 442: ' remove' (ID: 6234)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.19188247621059418
    2. ' main' → logprob: -2.441882371902466
    3. 'process' → logprob: -2.941882371902466
    4. 'custom' → logprob: -4.816882610321045
    5. 'sl' → logprob: -4.941882610321045
    6. 'solve' → logprob: -5.191882610321045
    7. 'expand' → logprob: -6.066882610321045
    8. ' process' → logprob: -6.191882610321045
    9. 'def' → logprob: -6.316882610321045
    10. ' sliding' → logprob: -6.441882610321045

Token 443: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.051436178386211395
    2. '_' → logprob: -3.176436185836792
    3. '_token' → logprob: -4.801435947418213
    4. ' _' → logprob: -9.801436424255371
    5. 'element' → logprob: -10.801436424255371
    6. '_space' → logprob: -10.926436424255371
    7. '_Element' → logprob: -11.551436424255371
    8. ')_' → logprob: -11.676436424255371
    9. '_ELEMENT' → logprob: -11.676436424255371
    10. '_elem' → logprob: -11.801436424255371

Token 444: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.00388736161403358
    2. '(' → logprob: -6.253887176513672
    3. '(count' → logprob: -6.378887176513672
    4. '(x' → logprob: -9.003887176513672
    5. ' (' → logprob: -9.378887176513672
    6. '(counter' → logprob: -10.253887176513672
    7. '()' → logprob: -12.128887176513672
    8. '(ct' → logprob: -13.003887176513672
    9. '(
' → logprob: -13.378887176513672
    10. '(cost' → logprob: -13.753887176513672

Token 445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.036524842376821e-05
    2. ' ,' → logprob: -10.375040054321289
    3. ')' → logprob: -12.500040054321289
    4. '<|end|>' → logprob: -13.000040054321289
    5. ',
' → logprob: -14.000040054321289
    6. '_,' → logprob: -14.875040054321289
    7. ',x' → logprob: -14.875040054321289
    8. '‌,' → logprob: -15.125040054321289
    9. ',count' → logprob: -15.250040054321289
    10. '   ' → logprob: -16.37504005432129

Token 446: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.3133063316345215
    2. ' xor' → logprob: -1.3133063316345215
    3. 'cnt' → logprob: -10.68830680847168
    4. ' cnt' → logprob: -11.81330680847168
    5. ' ' → logprob: -11.93830680847168
    6. 'x' → logprob: -13.31330680847168
    7. ')' → logprob: -13.93830680847168
    8. 'remove' → logprob: -13.93830680847168
    9. ' XOR' → logprob: -14.06330680847168
    10. 'r' → logprob: -14.18830680847168

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002678920282050967
    2. ' ,' → logprob: -8.25026798248291
    3. '_,' → logprob: -12.25026798248291
    4. ',
' → logprob: -15.00026798248291
    5. '‌,' → logprob: -15.00026798248291
    6. ',count' → logprob: -15.25026798248291
    7. ')' → logprob: -15.75026798248291
    8. '   ' → logprob: -16.000267028808594
    9. 'def' → logprob: -16.750267028808594
    10. ',int' → logprob: -17.250267028808594

Token 448: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.16051970422267914
    2. ' ai' → logprob: -1.9105197191238403
    3. ')' → logprob: -8.53551959991455
    4. '_ai' → logprob: -10.41051959991455
    5. ' ' → logprob: -11.66051959991455
    6. 'cnt' → logprob: -11.66051959991455
    7. '<|end|>' → logprob: -11.66051959991455
    8. ',' → logprob: -11.66051959991455
    9. '(ai' → logprob: -12.16051959991455
    10. '   ' → logprob: -12.41051959991455

Token 449: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002514539286494255
    2. '):' → logprob: -6.252514362335205
    3. '):
' → logprob: -7.502514362335205
    4. ' ,' → logprob: -10.877514839172363
    5. ')' → logprob: -11.877514839172363
    6. '):

' → logprob: -13.002514839172363
    7. '):
' → logprob: -13.502514839172363
    8. '   ' → logprob: -13.627514839172363
    9. ',
' → logprob: -14.252514839172363
    10. ',r' → logprob: -14.627514839172363

Token 450: '   ' (ID: 271)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.38889357447624207
    2. '   ' → logprob: -1.2638936042785645
    3. 'cnt' → logprob: -3.2638936042785645
    4. ' xor' → logprob: -7.1388936042785645
    5. ' return' → logprob: -7.8888936042785645
    6. '	cnt' → logprob: -9.138893127441406
    7. 'xor' → logprob: -9.638893127441406
    8. ' counter' → logprob: -11.013893127441406
    9. 'return' → logprob: -11.013893127441406
    10. '    ' → logprob: -11.763893127441406

Token 451: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.004569322802126408
    2. ' cnt' → logprob: -6.1295695304870605
    3. 'return' → logprob: -6.2545695304870605
    4. '   ' → logprob: -7.7545695304870605
    5. ' return' → logprob: -10.754569053649902
    6. 'count' → logprob: -12.504569053649902
    7. '	cnt' → logprob: -12.879569053649902
    8. 'xor' → logprob: -14.004569053649902
    9. ' ' → logprob: -14.254569053649902
    10. 'counter' → logprob: -14.504569053649902

Token 452: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -0.5056219100952148
    2. ',' → logprob: -1.1306219100952148
    3. '=' → logprob: -3.005621910095215
    4. ' -=' → logprob: -5.130621910095215
    5. ' =' → logprob: -5.255621910095215
    6. '-' → logprob: -5.255621910095215
    7. '_,' → logprob: -6.130621910095215
    8. '_' → logprob: -6.755621910095215
    9. '-=' → logprob: -6.755621910095215
    10. 'Updated' → logprob: -6.880621910095215

Token 453: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25263258814811707
    2. ',' → logprob: -1.6276326179504395
    3. ' =' → logprob: -3.6276326179504395
    4. ' ,' → logprob: -8.627632141113281
    5. '-' → logprob: -9.877632141113281
    6. '-=' → logprob: -11.252632141113281
    7. ' -=' → logprob: -11.377632141113281
    8. '   ' → logprob: -11.627632141113281
    9. ' -' → logprob: -13.252632141113281
    10. ')' → logprob: -13.377632141113281

Token 454: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.06197362765669823
    2. ' cnt' → logprob: -2.8119735717773438
    3. '	cnt' → logprob: -12.811973571777344
    4. '(cnt' → logprob: -13.186973571777344
    5. '   ' → logprob: -14.061973571777344
    6. ' ' → logprob: -15.061973571777344
    7. '[cnt' → logprob: -15.561973571777344
    8. 'count' → logprob: -17.061973571777344
    9. 'ct' → logprob: -17.311973571777344
    10. 'max' → logprob: -17.436973571777344

Token 455: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009766003116965294
    2. '-' → logprob: -4.634766101837158
    3. ' ' → logprob: -12.134765625
    4. ' ' → logprob: -13.259765625
    5. '+' → logprob: -14.009765625
    6. ' +' → logprob: -14.134765625
    7. '_updated' → logprob: -14.384765625
    8. '_' → logprob: -15.134765625
    9. '   ' → logprob: -15.384765625
    10. ' Updated' → logprob: -16.884765625

Token 456: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.2519338130950928
    2. ' ai' → logprob: -1.5019338130950928
    3. 'a' → logprob: -13.126934051513672
    4. '(ai' → logprob: -13.501934051513672
    5. '_ai' → logprob: -14.626934051513672
    6. '   ' → logprob: -15.001934051513672
    7. '1' → logprob: -15.751934051513672
    8. '.ai' → logprob: -15.751934051513672
    9. ' ' → logprob: -16.376934051513672
    10. 'ui' → logprob: -16.876934051513672

Token 457: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008916025049984455
    2. ',
' → logprob: -4.758915901184082
    3. '   ' → logprob: -8.508915901184082
    4. '
' → logprob: -10.508915901184082
    5. ' ,' → logprob: -10.883915901184082
    6. '<|end|>' → logprob: -11.133915901184082
    7. 'xor' → logprob: -11.383915901184082
    8. ' xor' → logprob: -11.508915901184082
    9. '```' → logprob: -12.383915901184082
    10. ',x' → logprob: -12.508915901184082

Token 458: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14613084495067596
    2. '   ' → logprob: -2.5211308002471924
    3. 'xor' → logprob: -3.0211308002471924
    4. ',
' → logprob: -5.1461310386657715
    5. ' xor' → logprob: -7.8961310386657715
    6. ' ' → logprob: -8.521130561828613
    7. '
' → logprob: -8.521130561828613
    8. ' ,' → logprob: -9.146130561828613
    9. ',x' → logprob: -10.021130561828613
    10. '```' → logprob: -10.146130561828613

Token 459: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' (adapté à ' xor') → logprob: -0.0067176250740885735
    2. ' xor' → logprob: -5.006717681884766
    3. '   ' → logprob: -13.506717681884766
    4. ' ' → logprob: -14.756717681884766
    5. '```' → logprob: -15.381717681884766
    6. 'xo' → logprob: -16.006717681884766
    7. '
' → logprob: -17.131717681884766
    8. '  ' → logprob: -17.631717681884766
    9. 'x' → logprob: -17.881717681884766
    10. 'return' → logprob: -17.881717681884766

Token 460: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -5.200166469876422e-06
    2. '_UPDATED' → logprob: -12.625004768371582
    3. '_' → logprob: -14.375004768371582
    4. 'updated' → logprob: -14.625004768371582
    5. 'Updated' → logprob: -15.125004768371582
    6. ',' → logprob: -15.750004768371582
    7. ' Updated' → logprob: -16.6250057220459
    8. '_removed' → logprob: -16.7500057220459
    9. ' updated' → logprob: -17.0000057220459
    10. '_completed' → logprob: -17.1250057220459

Token 461: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759411454200745
    2. '=' → logprob: -0.8259411454200745
    3. ',' → logprob: -13.57594108581543
    4. ' =
' → logprob: -16.07594108581543
    5. '_' → logprob: -16.32594108581543
    6. '=
' → logprob: -16.57594108581543
    7. ' ' → logprob: -16.57594108581543
    8. ')' → logprob: -16.82594108581543
    9. '   ' → logprob: -18.07594108581543
    10. ':' → logprob: -18.07594108581543

Token 462: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.11283549666404724
    2. ' xor' → logprob: -2.23783540725708
    3. 'cnt' → logprob: -11.737835884094238
    4. ' ' → logprob: -13.362835884094238
    5. '0' → logprob: -13.612835884094238
    6. ' cnt' → logprob: -14.362835884094238
    7. 'x' → logprob: -14.487835884094238
    8. '   ' → logprob: -14.487835884094238
    9. '(x' → logprob: -16.112834930419922
    10. '  ' → logprob: -16.862834930419922

Token 463: ' -' (ID: 533)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.28123682737350464
    2. ' ^' → logprob: -1.4062368869781494
    3. '-' → logprob: -10.03123664855957
    4. ' -' → logprob: -10.90623664855957
    5. ' ' → logprob: -11.78123664855957
    6. ' ' → logprob: -12.40623664855957
    7. ' xor' → logprob: -12.65623664855957
    8. '_^' → logprob: -13.78123664855957
    9. 'xor' → logprob: -13.90623664855957
    10. '_' → logprob: -13.90623664855957

Token 464: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.023247575387358665
    2. ' ai' → logprob: -3.773247480392456
    3. '(ai' → logprob: -13.773247718811035
    4. '_ai' → logprob: -14.023247718811035
    5. '.ai' → logprob: -15.898247718811035
    6. 'a' → logprob: -16.52324676513672
    7. '-ai' → logprob: -16.64824676513672
    8. '   ' → logprob: -18.39824676513672
    9. ' ' → logprob: -18.64824676513672
    10. 'api' → logprob: -19.77324676513672

Token 465: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011603388702496886
    2. '<|end|>' → logprob: -7.251160144805908
    3. ' return' → logprob: -8.751160621643066
    4. '	return' → logprob: -9.251160621643066
    5. '
' → logprob: -9.376160621643066
    6. ',' → logprob: -10.751160621643066
    7. 'return' → logprob: -10.751160621643066
    8. '  ' → logprob: -11.126160621643066
    9. ' ' → logprob: -11.251160621643066
    10. ')' → logprob: -11.251160621643066

Token 466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012156049720942974
    2. ' return' → logprob: -4.762156009674072
    3. 'return' → logprob: -5.762156009674072
    4. '	return' → logprob: -7.887156009674072
    5. '
' → logprob: -12.76215648651123
    6. ',' → logprob: -12.88715648651123
    7. ' ' → logprob: -13.13715648651123
    8. '  ' → logprob: -13.26215648651123
    9. ':return' → logprob: -13.26215648651123
    10. '<|end|>' → logprob: -13.76215648651123

Token 467: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20482982695102692
    2. '   ' → logprob: -1.7048298120498657
    3. ' return' → logprob: -5.704829692840576
    4. 'r' → logprob: -9.579830169677734
    5. '	return' → logprob: -11.579830169677734
    6. ' r' → logprob: -14.079830169677734
    7. ' ' → logprob: -14.204830169677734
    8. '  ' → logprob: -15.329830169677734
    9. '   ' → logprob: -15.704830169677734
    10. ':return' → logprob: -16.204830169677734

Token 468: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0007101670489646494
    2. ' cnt' → logprob: -7.2507100105285645
    3. '(cnt' → logprob: -15.375710487365723
    4. '	cnt' → logprob: -17.875709533691406
    5. 'count' → logprob: -18.375709533691406
    6. '[cnt' → logprob: -21.000709533691406
    7. '_cnt' → logprob: -22.125709533691406
    8. 'ct' → logprob: -22.250709533691406
    9. 'c' → logprob: -22.625709533691406
    10. 'counter' → logprob: -23.625709533691406

Token 469: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -0.0005962816649116576
    2. ',' → logprob: -7.500596046447754
    3. 'Updated' → logprob: -11.000596046447754
    4. '_UPDATED' → logprob: -11.500596046447754
    5. '_,' → logprob: -11.750596046447754
    6. 'updated' → logprob: -11.875596046447754
    7. ',_' → logprob: -14.250596046447754
    8. ' Updated' → logprob: -15.625596046447754
    9. ' ,' → logprob: -15.750596046447754
    10. '```' → logprob: -16.00059700012207

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.292907877039397e-06
    2. ' ,' → logprob: -12.87500286102295
    3. ',
' → logprob: -14.75000286102295
    4. ',x' → logprob: -15.87500286102295
    5. ' xor' → logprob: -16.750003814697266
    6. '‌,' → logprob: -17.500003814697266
    7. '<|end|>' → logprob: -18.000003814697266
    8. 'xor' → logprob: -18.750003814697266
    9. '```' → logprob: -19.000003814697266
    10. ' ' → logprob: -19.625003814697266

Token 471: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.001170460251159966
    2. ' xor' → logprob: -6.751170635223389
    3. 'xo' → logprob: -16.251171112060547
    4. 'x' → logprob: -16.251171112060547
    5. ' ' → logprob: -17.126171112060547
    6. '0' → logprob: -17.501171112060547
    7. ' xo' → logprob: -18.751171112060547
    8. 'xer' → logprob: -19.001171112060547
    9. '   ' → logprob: -19.126171112060547
    10. 'ox' → logprob: -19.501171112060547

Token 472: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -0.00030936390976421535
    2. 'updated' → logprob: -8.500308990478516
    3. '_' → logprob: -10.250308990478516
    4. '<|end|>' → logprob: -10.500308990478516
    5. 'Updated' → logprob: -11.000308990478516
    6. 'xor' → logprob: -11.750308990478516
    7. '_UPDATED' → logprob: -12.000308990478516
    8. '_removed' → logprob: -13.125308990478516
    9. '-' → logprob: -13.375308990478516
    10. '+' → logprob: -13.750308990478516

Token 473: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34127140045166016
    2. '<|end|>' → logprob: -1.3412714004516602
    3. ')' → logprob: -4.09127140045166
    4. '```' → logprob: -5.59127140045166
    5. 'r' → logprob: -6.34127140045166
    6. '#' → logprob: -6.96627140045166
    7. ',' → logprob: -7.09127140045166
    8. 'a' → logprob: -7.09127140045166
    9. '[' → logprob: -7.34127140045166
    10. '
' → logprob: -7.59127140045166

Token 474: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011435531778261065
    2. '#' → logprob: -8.501143455505371
    3. 'n' → logprob: -8.501143455505371
    4. ')' → logprob: -8.751143455505371
    5. 'r' → logprob: -8.876143455505371
    6. 'a' → logprob: -9.126143455505371
    7. 'for' → logprob: -9.251143455505371
    8. '<|end|>' → logprob: -9.626143455505371
    9. '.' → logprob: -10.001143455505371
    10. 'x' → logprob: -10.751143455505371

Token 475: ' update' (ID: 4027)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.023298002779483795
    2. 'sl' → logprob: -4.6482977867126465
    3. 'two' → logprob: -5.0232977867126465
    4. 'solve' → logprob: -5.3982977867126465
    5. ' main' → logprob: -6.8982977867126465
    6. 'count' → logprob: -8.148298263549805
    7. 'process' → logprob: -8.273298263549805
    8. 'find' → logprob: -8.273298263549805
    9. 'max' → logprob: -8.773298263549805
    10. 'expand' → logprob: -8.898298263549805

Token 476: '_ans' (ID: 146254)
  Prédit: '_window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_window' → logprob: -0.13327628374099731
    2. '_answer' → logprob: -3.1332762241363525
    3. '_ans' → logprob: -3.2582762241363525
    4. '(l' → logprob: -5.383276462554932
    5. '_range' → logprob: -5.383276462554932
    6. '_l' → logprob: -5.633276462554932
    7. '_' → logprob: -5.633276462554932
    8. '_counter' → logprob: -5.758276462554932
    9. '_cnt' → logprob: -6.008276462554932
    10. '_state' → logprob: -6.133276462554932

Token 477: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0009051493834704161
    2. '(' → logprob: -7.1259050369262695
    3. '():' → logprob: -10.37590503692627
    4. '(answer' → logprob: -10.50090503692627
    5. '(cnt' → logprob: -11.00090503692627
    6. ' (' → logprob: -11.50090503692627
    7. '(a' → logprob: -12.37590503692627
    8. '(prev' → logprob: -13.00090503692627
    9. '(acc' → logprob: -13.25090503692627
    10. '(current' → logprob: -13.25090503692627

Token 478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020926215802319348
    2. '):' → logprob: -9.375208854675293
    3. ' ,' → logprob: -10.000208854675293
    4. '(cnt' → logprob: -10.625208854675293
    5. '(ans' → logprob: -11.250208854675293
    6. '   ' → logprob: -11.500208854675293
    7. '):
' → logprob: -12.500208854675293
    8. ')' → logprob: -12.500208854675293
    9. '(),' → logprob: -12.625208854675293
    10. 'def' → logprob: -12.875208854675293

Token 479: ' r' (ID: 428)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4256812036037445
    2. 'cnt' → logprob: -1.425681233406067
    3. 'candidate' → logprob: -3.4256811141967773
    4. 'new' → logprob: -3.9256811141967773
    5. ' l' → logprob: -4.300681114196777
    6. 'value' → logprob: -4.425681114196777
    7. ' cnt' → logprob: -4.800681114196777
    8. 'val' → logprob: -5.050681114196777
    9. ' new' → logprob: -5.925681114196777
    10. 'cand' → logprob: -6.175681114196777

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4594045877456665
    2. '):' → logprob: -1.0844045877456665
    3. '):
' → logprob: -3.834404468536377
    4. ' -' → logprob: -5.334404468536377
    5. '+' → logprob: -5.834404468536377
    6. ' +' → logprob: -7.959404468536377
    7. ')' → logprob: -8.709404945373535
    8. '-' → logprob: -9.209404945373535
    9. '):
' → logprob: -9.709404945373535
    10. '):

' → logprob: -9.834404945373535

Token 481: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7696600556373596
    2. 'l' → logprob: -1.7696599960327148
    3. ' cnt' → logprob: -2.394659996032715
    4. ' i' → logprob: -3.144659996032715
    5. 'cnt' → logprob: -3.144659996032715
    6. ' n' → logprob: -3.144659996032715
    7. 'n' → logprob: -3.519659996032715
    8. ')' → logprob: -3.519659996032715
    9. 'i' → logprob: -3.894659996032715
    10. ' a' → logprob: -4.394659996032715

Token 482: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5197415947914124
    2. '):
' → logprob: -1.0197415351867676
    3. ',' → logprob: -3.1447415351867676
    4. '):
' → logprob: -6.644741535186768
    5. ')' → logprob: -9.019742012023926
    6. '):

' → logprob: -9.769742012023926
    7. 'r' → logprob: -11.019742012023926
    8. '-' → logprob: -11.394742012023926
    9. '   ' → logprob: -11.644742012023926
    10. ' ):' → logprob: -11.894742012023926

Token 483: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.864272967912257e-05
    2. 'return' → logprob: -9.625088691711426
    3. ':' → logprob: -11.125088691711426
    4. ' return' → logprob: -12.250088691711426
    5. ':return' → logprob: -14.375088691711426
    6. 'def' → logprob: -14.625088691711426
    7. '	return' → logprob: -14.625088691711426
    8. '   ' → logprob: -14.750088691711426
    9. '):' → logprob: -15.500088691711426
    10. '       ' → logprob: -15.625088691711426

Token 484: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0632578432559967
    2. '   ' → logprob: -2.813257932662964
    3. ' return' → logprob: -6.688257694244385
    4. 'if' → logprob: -10.688258171081543
    5. 'max' → logprob: -11.688258171081543
    6. 'ans' → logprob: -11.938258171081543
    7. '	return' → logprob: -13.063258171081543
    8. 'def' → logprob: -13.313258171081543
    9. '  ' → logprob: -14.563258171081543
    10. ' ' → logprob: -14.688258171081543

Token 485: ' ans' (ID: 3345)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00067323591792956
    2. 'ans' → logprob: -7.625673294067383
    3. ' max' → logprob: -8.625673294067383
    4. 'r' → logprob: -13.250673294067383
    5. 'min' → logprob: -13.375673294067383
    6. '(max' → logprob: -13.375673294067383
    7. '	max' → logprob: -15.375673294067383
    8. '   ' → logprob: -15.625673294067383
    9. '
' → logprob: -16.000673294067383
    10. ' ans' → logprob: -16.125673294067383

Token 486: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 487: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20229031145572662
    2. '(r' → logprob: -1.7022902965545654
    3. ' (' → logprob: -8.077290534973145
    4. ' r' → logprob: -8.327290534973145
    5. '(max' → logprob: -8.702290534973145
    6. '(' → logprob: -9.327290534973145
    7. 'max' → logprob: -10.327290534973145
    8. '(c' → logprob: -10.827290534973145
    9. 'c' → logprob: -12.827290534973145
    10. '   ' → logprob: -13.202290534973145

Token 488: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003221150254830718
    2. ' r' → logprob: -8.500322341918945
    3. '(r' → logprob: -9.125322341918945
    4. ')' → logprob: -12.125322341918945
    5. '[r' → logprob: -13.500322341918945
    6. '_r' → logprob: -14.250322341918945
    7. '	r' → logprob: -14.375322341918945
    8. ' (' → logprob: -14.500322341918945
    9. '   ' → logprob: -15.500322341918945
    10. '1' → logprob: -15.625322341918945

Token 489: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07889463007450104
    2. '-' → logprob: -2.57889461517334
    3. ' ' → logprob: -13.20389461517334
    4. ')' → logprob: -14.07889461517334
    5. '-l' → logprob: -14.57889461517334
    6. '   ' → logprob: -14.82889461517334
    7. '+' → logprob: -15.20389461517334
    8. ',' → logprob: -15.57889461517334
    9. '<|end|>' → logprob: -15.70389461517334
    10. ' -
' → logprob: -15.95389461517334

Token 490: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.005929393693804741
    2. ' l' → logprob: -5.130929470062256
    3. '1' → logprob: -14.505928993225098
    4. '	l' → logprob: -16.005929946899414
    5. '   ' → logprob: -16.880929946899414
    6. ' ' → logprob: -17.005929946899414
    7. '<|end|>' → logprob: -17.505929946899414
    8. '  ' → logprob: -18.255929946899414
    9. '(l' → logprob: -18.505929946899414
    10. ')' → logprob: -18.755929946899414

Token 491: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07628528773784637
    2. '+' → logprob: -2.8262853622436523
    3. ' +' → logprob: -4.326285362243652
    4. ' )' → logprob: -7.451285362243652
    5. '<|end|>' → logprob: -8.951285362243652
    6. '+)' → logprob: -9.076285362243652
    7. ')+' → logprob: -9.076285362243652
    8. ')
' → logprob: -11.076285362243652
    9. '```' → logprob: -11.326285362243652
    10. '1' → logprob: -12.076285362243652

Token 492: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.8219583075260743e-05
    2. '<|end|>' → logprob: -10.375038146972656
    3. ')' → logprob: -12.750038146972656
    4. '.' → logprob: -13.500038146972656
    5. '#' → logprob: -13.875038146972656
    6. '```' → logprob: -14.625038146972656
    7. ' def' → logprob: -14.750038146972656
    8. '<|end|>' → logprob: -14.875038146972656
    9. '
' → logprob: -15.500038146972656
    10. 'for' → logprob: -16.625038146972656

Token 493: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.05327363312244415
    2. 'def' → logprob: -3.0532736778259277
    3. ' main' → logprob: -6.178273677825928
    4. 'solve' → logprob: -6.553273677825928
    5. 'custom' → logprob: -7.303273677825928
    6. 'process' → logprob: -8.05327320098877
    7. '__' → logprob: -9.17827320098877
    8. ' def' → logprob: -10.42827320098877
    9. 'lambda' → logprob: -10.80327320098877
    10. '_main' → logprob: -11.67827320098877

Token 494: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.9186317482963204e-05
    2. '()' → logprob: -10.375049591064453
    3. '():
' → logprob: -11.125049591064453
    4. '(' → logprob: -13.000049591064453
    5. ' ():' → logprob: -14.125049591064453
    6. 'def' → logprob: -16.500049591064453
    7. '():
' → logprob: -17.125049591064453
    8. ':' → logprob: -17.750049591064453
    9. '_' → logprob: -18.000049591064453
    10. '();' → logprob: -18.250049591064453

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03390754386782646
    2. 'n' → logprob: -3.408907651901245
    3. ' n' → logprob: -8.908907890319824
    4. '	n' → logprob: -9.533907890319824
    5. 'def' → logprob: -10.658907890319824
    6. 'ans' → logprob: -11.908907890319824
    7. ' ' → logprob: -12.033907890319824
    8. '_n' → logprob: -12.283907890319824
    9. '(n' → logprob: -13.033907890319824
    10. '	ans' → logprob: -13.033907890319824

Token 496: ' set' (ID: 920)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004810661543160677
    2. '   ' → logprob: -5.504810810089111
    3. ' n' → logprob: -7.254810810089111
    4. 'import' → logprob: -11.254810333251953
    5. '	n' → logprob: -11.754810333251953
    6. ' ' → logprob: -13.004810333251953
    7. 'sys' → logprob: -14.504810333251953
    8. 'N' → logprob: -15.129810333251953
    9. '```' → logprob: -15.129810333251953
    10. 't' → logprob: -15.254810333251953

Token 497: '_rec' (ID: 35314)
  Prédit: '_rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.003216214943677187
    2. '_' → logprob: -5.75321626663208
    3. '_recursive' → logprob: -11.128215789794922
    4. '(' → logprob: -12.628215789794922
    5. '_system' → logprob: -12.753215789794922
    6. 'rec' → logprob: -13.003215789794922
    7. '_def' → logprob: -13.128215789794922
    8. '_re' → logprob: -13.128215789794922
    9. '_rest' → logprob: -13.253215789794922
    10. '_set' → logprob: -14.003215789794922

Token 498: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -2.5776860184123507e-06
    2. 'urs' → logprob: -13.00000286102295
    3. 'ursive' → logprob: -16.375001907348633
    4. 'ursor' → logprob: -16.625001907348633
    5. 'ersion' → logprob: -17.500001907348633
    6. '   ' → logprob: -18.000001907348633
    7. 'ur' → logprob: -18.125001907348633
    8. '```' → logprob: -18.250001907348633
    9. ' recursion' → logprob: -19.000001907348633
    10. 'usion' → logprob: -19.000001907348633

Token 499: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009341640397906303
    2. '_limit' → logprob: -5.384341716766357
    3. 'limit' → logprob: -5.384341716766357
    4. '()
' → logprob: -9.1343412399292
    5. 'limits' → logprob: -12.6343412399292
    6. '_limits' → logprob: -13.0093412399292
    7. '())' → logprob: -13.3843412399292
    8. 'lim' → logprob: -13.6343412399292
    9. 'Limit' → logprob: -13.7593412399292
    10. '()>' → logprob: -14.1343412399292

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010922614485025406
    2. 'n' → logprob: -4.760922431945801
    3. ' n' → logprob: -6.135922431945801
    4. 'a' → logprob: -10.5109224319458
    5. '    
' → logprob: -10.5109224319458
    6. '	n' → logprob: -11.0109224319458
    7. ' ans' → logprob: -11.1359224319458
    8. '```' → logprob: -11.5109224319458
    9. ' ' → logprob: -11.6359224319458
    10. '
' → logprob: -11.6359224319458

Token 501: ' mod' (ID: 1812)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0030031390488147736
    2. 'ans' → logprob: -5.878003120422363
    3. '   ' → logprob: -8.753003120422363
    4. 'a' → logprob: -10.878003120422363
    5. 'mod' (adapté à ' mod') → logprob: -12.253003120422363
    6. '#' → logprob: -12.628003120422363
    7. ' n' → logprob: -12.753003120422363
    8. 'N' → logprob: -13.128003120422363
    9. '```' → logprob: -13.128003120422363
    10. 't' → logprob: -13.628003120422363

Token 502: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693744897842407
    2. '=' → logprob: -2.1269373893737793
    3. ',' → logprob: -12.126937866210938
    4. '_' → logprob: -13.126937866210938
    5. '=int' → logprob: -14.501937866210938
    6. ' ' → logprob: -15.001937866210938
    7. ' =)' → logprob: -15.376937866210938
    8. ')' → logprob: -16.001937866210938
    9. ' =
' → logprob: -16.126937866210938
    10. '   ' → logprob: -16.126937866210938

Token 503: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.011210155673325062
    2. ' get' → logprob: -4.511209964752197
    3. '10' → logprob: -9.011210441589355
    4. 'pow' → logprob: -10.261210441589355
    5. '100' → logprob: -12.386210441589355
    6. ' ' → logprob: -13.886210441589355
    7. ' pow' → logprob: -16.63620948791504
    8. '(get' → logprob: -16.76120948791504
    9. '	get' → logprob: -16.76120948791504
    10. '   ' → logprob: -17.38620948791504

Token 504: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -6.2729995988775045e-06
    2. 'mod' → logprob: -12.000006675720215
    3. '_mode' → logprob: -17.3750057220459
    4. '_MOD' → logprob: -17.7500057220459
    5. '_' → logprob: -18.0000057220459
    6. ' mod' → logprob: -19.1250057220459
    7. '\' → logprob: -19.7500057220459
    8. '	mod' → logprob: -19.8750057220459
    9. '-mod' → logprob: -19.8750057220459
    10. 'Mod' → logprob: -20.0000057220459

Token 505: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7727823257446289
    2. '()' → logprob: -1.647782325744629
    3. '
' → logprob: -1.897782325744629
    4. '<|end|>' → logprob: -2.272782325744629
    5. '()
' → logprob: -3.772782325744629
    6. ',' → logprob: -3.772782325744629
    7. '    
' → logprob: -4.022782325744629
    8. '<|end|>' → logprob: -4.772782325744629
    9. ')' → logprob: -4.897782325744629
    10. 'def' → logprob: -5.147782325744629

Token 506: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006838391534984112
    2. '```' → logprob: -6.006838321685791
    3. '    ' → logprob: -6.756838321685791
    4. 'n' → logprob: -7.006838321685791
    5. ' n' → logprob: -7.381838321685791
    6. ' ' → logprob: -8.00683879852295
    7. '<|end|>' → logprob: -8.13183879852295
    8. '...' → logprob: -8.13183879852295
    9. ' ans' → logprob: -9.00683879852295
    10. '#' → logprob: -9.13183879852295

Token 507: ' al' (ID: 434)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00010211274639004841
    2. '   ' → logprob: -9.250102043151855
    3. 't' → logprob: -12.625102043151855
    4. '#' → logprob: -13.875102043151855
    5. ' n' → logprob: -14.125102043151855
    6. 'N' → logprob: -14.250102043151855
    7. '
' → logprob: -15.875102043151855
    8. '    
' → logprob: -16.500102996826172
    9. 'T' → logprob: -16.875102996826172
    10. '	n' → logprob: -17.000102996826172

Token 508: ' =' (ID: 314)
  Prédit: 'phabet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'phabet' → logprob: -0.4981406629085541
    2. 'pha' → logprob: -1.2481406927108765
    3. 'ph' → logprob: -2.623140573501587
    4. 'l' → logprob: -3.998140573501587
    5. 'p' → logprob: -4.498140811920166
    6. '```' → logprob: -6.998140811920166
    7. 'lst' → logprob: -7.123140811920166
    8. 'ist' → logprob: -8.123140335083008
    9. '   ' → logprob: -8.373140335083008
    10. 'a' → logprob: -8.498140335083008

Token 509: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.46884992718696594
    2. 'read' → logprob: -1.2188498973846436
    3. 'list' → logprob: -2.7188498973846436
    4. 'l' → logprob: -5.343850135803223
    5. 'ist' → logprob: -5.593850135803223
    6. 'custom' → logprob: -6.718850135803223
    7. ' generate' → logprob: -6.718850135803223
    8. ' read' → logprob: -7.468850135803223
    9. 'lst' → logprob: -8.218850135803223
    10. 'input' → logprob: -8.843850135803223

Token 510: '_al' (ID: 18493)
  Prédit: '_al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -8.77627644513268e-06
    2. 'alphabet' → logprob: -11.750008583068848
    3. 'phabet' → logprob: -14.625008583068848
    4. '(al' → logprob: -15.875008583068848
    5. 'al' → logprob: -16.500009536743164
    6. '_' → logprob: -16.625009536743164
    7. '_alpha' → logprob: -17.625009536743164
    8. 't' → logprob: -18.250009536743164
    9. ''al' → logprob: -18.250009536743164
    10. '_a' → logprob: -18.250009536743164

Token 511: 'phabet' (ID: 29466)
  Prédit: 'phabet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phabet' → logprob: -0.0005216968129388988
    2. 'ph' → logprob: -7.875521659851074
    3. 'p' → logprob: -10.000521659851074
    4. 'alphabet' → logprob: -10.500521659851074
    5. '[' → logprob: -10.625521659851074
    6. 'pha' → logprob: -11.625521659851074
    7. '```' → logprob: -11.750521659851074
    8. 'h' → logprob: -11.750521659851074
    9. '['' → logprob: -13.500521659851074
    10. 'aph' → logprob: -13.625521659851074

Token 512: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0060295225121080875
    2. '()
' → logprob: -5.1310296058654785
    3. '   ' → logprob: -9.50602912902832
    4. ')' → logprob: -11.75602912902832
    5. '<|end|>' → logprob: -12.50602912902832
    6. '()\' → logprob: -12.75602912902832
    7. '()[' → logprob: -13.00602912902832
    8. '()

' → logprob: -13.13102912902832
    9. '())' → logprob: -13.38102912902832
    10. '[]' → logprob: -13.75602912902832

Token 513: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5193557143211365
    2. '   ' → logprob: -1.0193557739257812
    3. ' n' → logprob: -3.1443557739257812
    4. '	n' → logprob: -7.394355773925781
    5. 'a' → logprob: -8.769355773925781
    6. '
' → logprob: -9.019355773925781
    7. '```' → logprob: -9.519355773925781
    8. ' ' → logprob: -10.269355773925781
    9. '#' → logprob: -10.519355773925781
    10. '_n' → logprob: -10.519355773925781

Token 514: ' direction' (ID: 9262)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00012190054985694587
    2. '   ' → logprob: -9.6251220703125
    3. 't' → logprob: -10.0001220703125
    4. ' n' → logprob: -12.3751220703125
    5. '#' → logprob: -13.0001220703125
    6. 'N' → logprob: -13.5001220703125
    7. 'T' → logprob: -14.2501220703125
    8. 'for' → logprob: -14.7501220703125
    9. '```' → logprob: -14.8751220703125
    10. '    
' → logprob: -15.7501220703125

Token 515: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.722539834911004e-05
    2. ' =' → logprob: -10.125097274780273
    3. '=' → logprob: -10.375097274780273
    4. ' s' → logprob: -10.750097274780273
    5. '=s' → logprob: -12.750097274780273
    6. '_s' → logprob: -14.750097274780273
    7. 'ions' → logprob: -15.625097274780273
    8. '   ' → logprob: -15.875097274780273
    9. '	s' → logprob: -16.250097274780273
    10. ',' → logprob: -16.625097274780273

Token 516: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.001173917087726295
    2. ' get' → logprob: -6.751173973083496
    3. '[get' → logprob: -12.501173973083496
    4. '[[' → logprob: -17.87617301940918
    5. '[' → logprob: -18.37617301940918
    6. '	get' → logprob: -18.50117301940918
    7. '(get' → logprob: -19.12617301940918
    8. '=get' → logprob: -19.75117301940918
    9. ' ' → logprob: -20.50117301940918
    10. '.get' → logprob: -21.00117301940918

Token 517: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.2664456789934775e-06
    2. 'dire' → logprob: -13.750000953674316
    3. 'd' → logprob: -16.500001907348633
    4. '_direction' → logprob: -17.875001907348633
    5. 'Directions' → logprob: -17.875001907348633
    6. '
' → logprob: -18.250001907348633
    7. '_dimensions' → logprob: -18.750001907348633
    8. '```' → logprob: -19.125001907348633
    9. ' directions' → logprob: -19.250001907348633
    10. '_' → logprob: -19.500001907348633

Token 518: 'irections' (ID: 119283)
  Prédit: 'irections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irections' → logprob: -4.320199877838604e-07
    2. 'dire' → logprob: -15.625
    3. 'ir' → logprob: -16.125
    4. 'irect' → logprob: -16.375
    5. 'irection' → logprob: -17.375
    6. 'ire' → logprob: -17.375
    7. ' directions' → logprob: -18.5
    8. 'Directions' → logprob: -19.375
    9. '[' → logprob: -19.375
    10. 'i' → logprob: -19.75

Token 519: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04867854714393616
    2. '()
' → logprob: -3.0486786365509033
    3. '   ' → logprob: -9.423678398132324
    4. '()\' → logprob: -12.423678398132324
    5. '()

' → logprob: -13.173678398132324
    6. '()
' → logprob: -13.173678398132324
    7. '()[' → logprob: -14.423678398132324
    8. '();' → logprob: -14.673678398132324
    9. '(),' → logprob: -15.173678398132324
    10. ')' → logprob: -15.423678398132324

Token 520: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2853486239910126
    2. 'n' → logprob: -1.410348653793335
    3. ' n' → logprob: -5.535348415374756
    4. '
' → logprob: -9.285348892211914
    5. '```' → logprob: -9.410348892211914
    6. '	n' → logprob: -10.160348892211914
    7. '    
' → logprob: -10.910348892211914
    8. ' ' → logprob: -13.160348892211914
    9. '<|end|>' → logprob: -13.285348892211914
    10. '  ' → logprob: -13.285348892211914

Token 521: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00010115911572938785
    2. '   ' → logprob: -9.500101089477539
    3. 't' → logprob: -11.125101089477539
    4. '#' → logprob: -12.625101089477539
    5. 'N' → logprob: -12.875101089477539
    6. ' n' → logprob: -12.875101089477539
    7. 'for' → logprob: -13.750101089477539
    8. '```' → logprob: -14.500101089477539
    9. '    
' → logprob: -15.125101089477539
    10. 'T' → logprob: -15.125101089477539

Token 522: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11608612537384033
    2. '=' → logprob: -2.241086006164551
    3. ',' → logprob: -5.741086006164551
    4. ' ' → logprob: -10.86608600616455
    5. '=int' → logprob: -10.99108600616455
    6. ' ,' → logprob: -12.86608600616455
    7. ')' → logprob: -12.99108600616455
    8. ' =)' → logprob: -13.24108600616455
    9. ' =
' → logprob: -13.86608600616455
    10. ' =
' → logprob: -14.49108600616455

Token 523: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0032764605712145567
    2. ' read' → logprob: -5.753276348114014
    3. 'int' → logprob: -9.253276824951172
    4. ' int' → logprob: -12.753276824951172
    5. '	read' → logprob: -18.128276824951172
    6. '  ' → logprob: -18.628276824951172
    7. '   ' → logprob: -19.378276824951172
    8. 'r' → logprob: -19.378276824951172
    9. ' ' → logprob: -19.628276824951172
    10. '(read' → logprob: -19.753276824951172

Token 524: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -8.2994620242971e-06
    2. '_a' → logprob: -12.000008583068848
    3. '_' → logprob: -13.875008583068848
    4. 'int' → logprob: -14.125008583068848
    5. 'n' → logprob: -15.375008583068848
    6. '_int' → logprob: -16.12500762939453
    7. '_i' → logprob: -17.25000762939453
    8. '
' → logprob: -17.87500762939453
    9. '()' → logprob: -18.00000762939453
    10. '_
' → logprob: -18.37500762939453

Token 525: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34574857354164124
    2. '
' → logprob: -1.3457485437393188
    3. 'a' → logprob: -3.4707486629486084
    4. '    
' → logprob: -7.845748424530029
    5. 'n' → logprob: -9.470748901367188
    6. '<|end|>' → logprob: -9.470748901367188
    7. '```' → logprob: -9.720748901367188
    8. ',' → logprob: -9.720748901367188
    9. '
' → logprob: -10.470748901367188
    10. '  
' → logprob: -10.720748901367188

Token 526: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16023966670036316
    2. '   ' → logprob: -1.9102396965026855
    3. ' a' → logprob: -11.910239219665527
    4. '	a' → logprob: -12.285239219665527
    5. '```' → logprob: -13.410239219665527
    6. 'n' → logprob: -14.035239219665527
    7. ' ' → logprob: -15.035239219665527
    8. '       ' → logprob: -15.285239219665527
    9. '_a' → logprob: -15.535239219665527
    10. '  ' → logprob: -15.660239219665527

Token 527: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -3.173704271830502e-06
    2. '   ' → logprob: -12.75000286102295
    3. ' a' → logprob: -15.87500286102295
    4. '```' → logprob: -19.250003814697266
    5. '    
' → logprob: -19.750003814697266
    6. 'ans' → logprob: -19.750003814697266
    7. '
' → logprob: -19.750003814697266
    8. '  ' → logprob: -20.000003814697266
    9. '_a' → logprob: -20.000003814697266
    10. ' ' → logprob: -20.000003814697266

Token 528: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759416222572327
    2. '=' → logprob: -0.8259416222572327
    3. ',' → logprob: -13.950942039489746
    4. ' ' → logprob: -14.325942039489746
    5. ')' → logprob: -15.825942039489746
    6. ' =
' → logprob: -15.825942039489746
    7. '[' → logprob: -16.07594108581543
    8. '=[]' → logprob: -16.32594108581543
    9. 'a' → logprob: -16.95094108581543
    10. ' ' → logprob: -17.20094108581543

Token 529: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.12692810595035553
    2. ' read' → logprob: -2.1269280910491943
    3. '	read' → logprob: -17.251928329467773
    4. '(read' → logprob: -19.876928329467773
    5. '
' → logprob: -20.126928329467773
    6. 'r' → logprob: -20.251928329467773
    7. 're' → logprob: -20.251928329467773
    8. '.read' → logprob: -21.001928329467773
    9. 'list' → logprob: -21.251928329467773
    10. '_read' → logprob: -21.376928329467773

Token 530: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.5
    3. 'a' → logprob: -16.875
    4. '()' → logprob: -18.5
    5. '_n' → logprob: -18.75
    6. ' _' → logprob: -19.25
    7. '_x' → logprob: -20.0
    8. '_s' → logprob: -20.125
    9. '```' → logprob: -20.5
    10. '_list' → logprob: -20.75

Token 531: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20242400467395782
    2. '
' → logprob: -1.7024240493774414
    3. '    
' → logprob: -7.077424049377441
    4. '
' → logprob: -9.702424049377441
    5. '```' → logprob: -10.577424049377441
    6. '  
' → logprob: -10.952424049377441
    7. '	ans' → logprob: -11.077424049377441
    8. '   
' → logprob: -11.202424049377441
    9. ' ans' → logprob: -11.702424049377441
    10. '(ans' → logprob: -11.702424049377441

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008846574346534908
    2. 'ans' → logprob: -7.125884532928467
    3. ' ans' → logprob: -9.875885009765625
    4. '	ans' → logprob: -11.375885009765625
    5. '```' → logprob: -11.750885009765625
    6. 'a' → logprob: -12.500885009765625
    7. '(ans' → logprob: -13.500885009765625
    8. '
' → logprob: -13.625885009765625
    9. 'def' → logprob: -14.375885009765625
    10. 'n' → logprob: -14.500885009765625

Token 533: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.002842675894498825
    2. 'l' → logprob: -5.877842903137207
    3. ' ans' → logprob: -11.002842903137207
    4. '   ' → logprob: -11.377842903137207
    5. 'answer' → logprob: -12.127842903137207
    6. '```' → logprob: -13.877842903137207
    7. 'r' → logprob: -14.002842903137207
    8. 'cnt' → logprob: -14.252842903137207
    9. '	ans' → logprob: -14.377842903137207
    10. '
' → logprob: -15.002842903137207

Token 534: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023254794999957085
    2. '=' → logprob: -3.773254871368408
    3. ',' → logprob: -12.02325439453125
    4. ' ' → logprob: -12.77325439453125
    5. '  ' → logprob: -15.52325439453125
    6. ' =
' → logprob: -16.64825439453125
    7. ' =)' → logprob: -16.64825439453125
    8. ')' → logprob: -16.77325439453125
    9. '   ' → logprob: -16.77325439453125
    10. ' ,' → logprob: -17.14825439453125

Token 535: ' init' (ID: 6327)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002497767563909292
    2. ' ' → logprob: -8.375249862670898
    3. 'init' → logprob: -10.875249862670898
    4. '   ' → logprob: -15.375249862670898
    5. ' init' → logprob: -17.1252498626709
    6. '  ' → logprob: -17.8752498626709
    7. 'initialize' → logprob: -18.7502498626709
    8. '۰' → logprob: -19.2502498626709
    9. '```' → logprob: -19.6252498626709
    10. '_init' → logprob: -19.6252498626709

Token 536: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.0031986311078071594
    2. 'ans' → logprob: -5.753198623657227
    3. '0' → logprob: -11.003198623657227
    4. '_cnt' → logprob: -13.253198623657227
    5. 'Ans' → logprob: -13.878198623657227
    6. 'a' → logprob: -14.503198623657227
    7. '_' → logprob: -14.503198623657227
    8. '(ans' → logprob: -15.253198623657227
    9. '_a' → logprob: -15.628198623657227
    10. 'cnt' → logprob: -15.878198623657227

Token 537: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0072458419017493725
    2. '()
' → logprob: -5.257246017456055
    3. '   ' → logprob: -6.632246017456055
    4. '
' → logprob: -8.757246017456055
    5. '<|end|>' → logprob: -8.757246017456055
    6. '(' → logprob: -9.132246017456055
    7. ')' → logprob: -9.757246017456055
    8. ',' → logprob: -10.007246017456055
    9. ':' → logprob: -10.132246017456055
    10. '(n' → logprob: -10.882246017456055

Token 538: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.020890329033136368
    2. '   ' → logprob: -3.895890235900879
    3. ' l' → logprob: -8.645890235900879
    4. '```' → logprob: -9.520890235900879
    5. 'r' → logprob: -10.020890235900879
    6. '	l' → logprob: -10.770890235900879
    7. '  ' → logprob: -11.770890235900879
    8. ' ' → logprob: -11.895890235900879
    9. 'for' → logprob: -12.645890235900879
    10. 'i' → logprob: -13.020890235900879

Token 539: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.00045128780766390264
    2. 'cnt' → logprob: -8.12545108795166
    3. 'r' → logprob: -9.12545108795166
    4. 'for' → logprob: -10.50045108795166
    5. '   ' → logprob: -11.75045108795166
    6. ' l' → logprob: -12.62545108795166
    7. '```' → logprob: -13.12545108795166
    8. 'ans' → logprob: -13.50045108795166
    9. 'i' → logprob: -14.25045108795166
    10. '0' → logprob: -14.62545108795166

Token 540: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5839375853538513
    2. ' =' → logprob: -0.8339375853538513
    3. ',' → logprob: -4.833937644958496
    4. '   ' → logprob: -12.583937644958496
    5. ' ,' → logprob: -12.583937644958496
    6. ' ' → logprob: -13.833937644958496
    7. '<|end|>' → logprob: -14.208937644958496
    8. ' =
' → logprob: -14.708937644958496
    9. '=
' → logprob: -15.208937644958496
    10. ',n' → logprob: -15.333937644958496

Token 541: ' init' (ID: 6327)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030733743915334344
    2. 'init' → logprob: -8.250307083129883
    3. ' ' → logprob: -10.000307083129883
    4. ' init' → logprob: -15.125307083129883
    5. '   ' → logprob: -16.250307083129883
    6. '  ' → logprob: -16.625307083129883
    7. '_init' → logprob: -17.250307083129883
    8. '(init' → logprob: -18.250307083129883
    9. '```' → logprob: -18.625307083129883
    10. '۰' → logprob: -18.812807083129883

Token 542: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.6259152889251709
    2. 'l' → logprob: -0.8759152889251709
    3. '0' → logprob: -3.750915288925171
    4. '_r' → logprob: -4.37591552734375
    5. 'r' → logprob: -4.37591552734375
    6. '_' → logprob: -10.50091552734375
    7. '(' → logprob: -10.87591552734375
    8. '(l' → logprob: -11.62591552734375
    9. 'a' → logprob: -11.75091552734375
    10. 'x' → logprob: -12.00091552734375

Token 543: '()
' (ID: 1234)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0109320878982544
    2. '   ' → logprob: -1.0109320878982544
    3. ',' → logprob: -2.010931968688965
    4. ' r' → logprob: -2.885931968688965
    5. '
' → logprob: -3.010931968688965
    6. ',r' → logprob: -3.635931968688965
    7. '=' → logprob: -6.135931968688965
    8. ' ' → logprob: -6.885931968688965
    9. ' 
' → logprob: -7.510931968688965
    10. ' =' → logprob: -7.635931968688965

Token 544: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0032166880555450916
    2. '   ' → logprob: -5.753216743469238
    3. ' r' → logprob: -10.253216743469238
    4. 'for' → logprob: -13.878216743469238
    5. 'def' → logprob: -13.878216743469238
    6. '```' → logprob: -13.878216743469238
    7. '  ' → logprob: -15.378216743469238
    8. ' ' → logprob: -16.003215789794922
    9. '	r' → logprob: -16.253215789794922
    10. '
' → logprob: -16.378215789794922

Token 545: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -1.7432603272027336e-06
    2. 'ans' → logprob: -14.500001907348633
    3. '0' → logprob: -15.000001907348633
    4. 'for' → logprob: -15.250001907348633
    5. 'def' → logprob: -15.250001907348633
    6. '   ' → logprob: -15.625001907348633
    7. ' r' → logprob: -15.750001907348633
    8. '```' → logprob: -17.250001907348633
    9. 'cnt' → logprob: -18.250001907348633
    10. 'rans' → logprob: -18.375001907348633

Token 546: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022889316082
    2. ' =' → logprob: -1.9102288484573364
    3. '   ' → logprob: -13.285228729248047
    4. ',' → logprob: -13.285228729248047
    5. ' ' → logprob: -14.285228729248047
    6. '0' → logprob: -15.785228729248047
    7. '<|end|>' → logprob: -15.785228729248047
    8. '=int' → logprob: -16.410228729248047
    9. '=
' → logprob: -16.660228729248047
    10. '  ' → logprob: -16.660228729248047

Token 547: ' init' (ID: 6327)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08922188729047775
    2. 'init' → logprob: -2.589221954345703
    3. '-' → logprob: -4.589221954345703
    4. 'l' → logprob: -10.464221954345703
    5. '-init' → logprob: -10.464221954345703
    6. ' ' → logprob: -10.964221954345703
    7. ' init' → logprob: -11.839221954345703
    8. ' -' → logprob: -11.839221954345703
    9. '(init' → logprob: -12.214221954345703
    10. '_init' → logprob: -12.714221954345703

Token 548: '_r' (ID: 3442)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4937160015106201
    2. '0' → logprob: -1.2437160015106201
    3. 'l' → logprob: -2.36871600151062
    4. '-' → logprob: -5.743716239929199
    5. '_r' → logprob: -5.743716239929199
    6. '_l' → logprob: -7.743716239929199
    7. '(' → logprob: -8.6187162399292
    8. 's' → logprob: -8.7437162399292
    9. '_' → logprob: -8.9937162399292
    10. '(r' → logprob: -9.4937162399292

Token 549: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11819491535425186
    2. '
' → logprob: -2.868194818496704
    3. '<|end|>' → logprob: -2.993194818496704
    4. '    
' → logprob: -5.868195056915283
    5. '<|end|>' → logprob: -6.868195056915283
    6. '  
' → logprob: -8.618194580078125
    7. '```' → logprob: -8.868194580078125
    8. '	
' → logprob: -9.368194580078125
    9. '	while' → logprob: -10.243194580078125
    10. ' 
' → logprob: -10.368194580078125

Token 550: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007647183374501765
    2. 'cnt' → logprob: -7.250764846801758
    3. 'while' → logprob: -10.000764846801758
    4. '<|end|>' → logprob: -13.000764846801758
    5. '```' → logprob: -13.625764846801758
    6. ' while' → logprob: -13.625764846801758
    7. '  ' → logprob: -13.875764846801758
    8. ' cnt' → logprob: -14.250764846801758
    9. '	cnt' → logprob: -14.250764846801758
    10. '       ' → logprob: -14.500764846801758

Token 551: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0004527182609308511
    2. 'while' → logprob: -8.125452995300293
    3. 'for' → logprob: -9.500452995300293
    4. '   ' → logprob: -9.750452995300293
    5. ' cnt' → logprob: -11.125452995300293
    6. 'xor' → logprob: -12.500452995300293
    7. 'n' → logprob: -13.375452995300293
    8. 'count' → logprob: -14.250452995300293
    9. 'ans' → logprob: -14.375452995300293
    10. 'c' → logprob: -15.000452995300293

Token 552: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2572169005870819
    2. '=' → logprob: -2.0072169303894043
    3. ' =' → logprob: -2.3822169303894043
    4. ' ,' → logprob: -9.632216453552246
    5. '   ' → logprob: -11.882216453552246
    6. '<|end|>' → logprob: -12.382216453552246
    7. ' ' → logprob: -12.507216453552246
    8. '	' → logprob: -13.507216453552246
    9. ')' → logprob: -14.132216453552246
    10. '  ' → logprob: -14.257216453552246

Token 553: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.14274635910987854
    2. '0' → logprob: -2.0177464485168457
    3. ' init' → logprob: -9.767745971679688
    4. ' ' → logprob: -11.892745971679688
    5. '	init' → logprob: -13.392745971679688
    6. '_init' → logprob: -13.642745971679688
    7. 'inite' → logprob: -13.892745971679688
    8. '(init' → logprob: -14.017745971679688
    9. '<|end|>' → logprob: -14.392745971679688
    10. '   ' → logprob: -14.517745971679688

Token 554: '_cnt' (ID: 35412)
  Prédit: '_cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -0.004803545773029327
    2. 'cnt' → logprob: -5.504803657531738
    3. '0' → logprob: -7.504803657531738
    4. '_' → logprob: -8.754803657531738
    5. '(cnt' → logprob: -12.504803657531738
    6. '	cnt' → logprob: -12.629803657531738
    7. ' cnt' → logprob: -13.254803657531738
    8. '_ans' → logprob: -13.254803657531738
    9. '_init' → logprob: -14.004803657531738
    10. '_count' → logprob: -14.254803657531738

Token 555: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15138031542301178
    2. ',' → logprob: -2.0263803005218506
    3. '<|end|>' → logprob: -5.90138053894043
    4. '
' → logprob: -6.02638053894043
    5. ',
' → logprob: -6.52638053894043
    6. 'xor' → logprob: -7.65138053894043
    7. ' ' → logprob: -7.77638053894043
    8. '    
' → logprob: -8.02638053894043
    9. '<|end|>' → logprob: -8.65138053894043
    10. '  ' → logprob: -9.02638053894043

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006695353891700506
    2. 'xor' → logprob: -5.13169527053833
    3. ' xor' → logprob: -7.25669527053833
    4. ',' → logprob: -11.381695747375488
    5. '  ' → logprob: -11.756695747375488
    6. '```' → logprob: -11.881695747375488
    7. '
' → logprob: -12.256695747375488
    8. 'x' → logprob: -12.256695747375488
    9. ' ' → logprob: -12.506695747375488
    10. '<|end|>' → logprob: -12.756695747375488

Token 557: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' (adapté à ' xor') → logprob: -2.1008713702030946e-06
    2. ' xor' → logprob: -13.375001907348633
    3. '   ' → logprob: -14.875001907348633
    4. '0' → logprob: -15.750001907348633
    5. '```' → logprob: -17.375001907348633
    6. 'xo' → logprob: -17.875001907348633
    7. '
' → logprob: -19.125001907348633
    8. 'x' → logprob: -19.250001907348633
    9. ' ' → logprob: -19.250001907348633
    10. 'import' → logprob: -19.375001907348633

Token 558: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34847134351730347
    2. ' =' → logprob: -1.2234714031219482
    3. '_' → logprob: -11.848471641540527
    4. ',' → logprob: -11.848471641540527
    5. '_=' → logprob: -12.223471641540527
    6. '<|end|>' → logprob: -12.473471641540527
    7. '   ' → logprob: -13.973471641540527
    8. ' ' → logprob: -14.098471641540527
    9. ')' → logprob: -14.473471641540527
    10. '<|end|>' → logprob: -14.848471641540527

Token 559: ' init' (ID: 6327)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11319059133529663
    2. 'init' → logprob: -2.3631906509399414
    3. ' init' → logprob: -4.738190650939941
    4. ' ' → logprob: -5.488190650939941
    5. '_init' → logprob: -12.238190650939941
    6. '(init' → logprob: -13.113190650939941
    7. '	init' → logprob: -13.988190650939941
    8. '.init' → logprob: -14.363190650939941
    9. '/init' → logprob: -15.113190650939941
    10. '   ' → logprob: -15.238190650939941

Token 560: '_x' (ID: 7054)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7647482752799988
    2. '0' → logprob: -0.8897482752799988
    3. '_x' → logprob: -2.6397483348846436
    4. 'xor' → logprob: -3.2647483348846436
    5. '_input' → logprob: -4.6397480964660645
    6. '_cnt' → logprob: -6.0147480964660645
    7. 'cnt' → logprob: -6.5147480964660645
    8. 'x' → logprob: -8.639748573303223
    9. '(' → logprob: -9.514748573303223
    10. '(cnt' → logprob: -9.889748573303223

Token 561: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.24398447573184967
    2. 'xor' → logprob: -1.6189844608306885
    3. '_' → logprob: -4.243984699249268
    4. '0' → logprob: -6.243984699249268
    5. ' xor' → logprob: -7.618984699249268
    6. 'o' → logprob: -7.868984699249268
    7. 'ored' → logprob: -8.11898422241211
    8. 'orr' → logprob: -8.74398422241211
    9. 'ort' → logprob: -9.24398422241211
    10. ')' → logprob: -9.49398422241211

Token 562: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03564390167593956
    2. '<|end|>' → logprob: -3.7856438159942627
    3. '   ' → logprob: -4.535644054412842
    4. '    
' → logprob: -7.660644054412842
    5. '<|end|>' → logprob: -7.785644054412842
    6. '```' → logprob: -8.035643577575684
    7. '  
' → logprob: -8.660643577575684
    8. ',
' → logprob: -10.285643577575684
    9. ' for' → logprob: -10.785643577575684
    10. '\n' → logprob: -10.785643577575684

Token 563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00031508569372817874
    2. ' for' → logprob: -9.000314712524414
    3. '<|end|>' → logprob: -9.250314712524414
    4. 'for' → logprob: -10.000314712524414
    5. '```' → logprob: -10.625314712524414
    6. '
' → logprob: -11.375314712524414
    7. '    
' → logprob: -11.625314712524414
    8. ' while' → logprob: -14.000314712524414
    9. 'while' → logprob: -14.125314712524414
    10. '<|end|>' → logprob: -14.500314712524414

Token 564: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.39063429832458496
    2. 'for' (adapté à ' for') → logprob: -1.140634298324585
    3. '   ' → logprob: -5.640634536743164
    4. ' while' → logprob: -9.015634536743164
    5. ' for' → logprob: -9.515634536743164
    6. 'i' → logprob: -12.265634536743164
    7. 'r' → logprob: -12.765634536743164
    8. '	while' → logprob: -13.390634536743164
    9. '```' → logprob: -14.265634536743164
    10. '	for' → logprob: -15.015634536743164

Token 565: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.003838667646050453
    2. 'i' → logprob: -6.628838539123535
    3. ' l' → logprob: -7.253838539123535
    4. ' _' → logprob: -7.628838539123535
    5. ' r' → logprob: -8.003838539123535
    6. ' in' → logprob: -8.003838539123535
    7. ' ' → logprob: -8.128838539123535
    8. '	i' → logprob: -9.003838539123535
    9. '_' → logprob: -9.128838539123535
    10. 'l' → logprob: -11.128838539123535

Token 566: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05708266794681549
    2. 'in' → logprob: -2.9320826530456543
    3. ' ' → logprob: -6.182082653045654
    4. '	in' → logprob: -10.182083129882812
    5. '_' → logprob: -11.182083129882812
    6. ' ' → logprob: -11.682083129882812
    7. '  ' → logprob: -11.682083129882812
    8. ',' → logprob: -11.932083129882812
    9. 'space' → logprob: -12.057083129882812
    10. '    ' → logprob: -12.182083129882812

Token 567: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020947456359863
    2. ' range' → logprob: -2.3502094745635986
    3. '(range' → logprob: -13.47520923614502
    4. '	range' → logprob: -14.60020923614502
    5. ' ' → logprob: -14.85020923614502
    6. 'in' → logprob: -15.10020923614502
    7. '   ' → logprob: -16.100210189819336
    8. ')' → logprob: -16.725210189819336
    9. ' xrange' → logprob: -16.850210189819336
    10. ' in' → logprob: -16.975210189819336

Token 568: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006940854946151376
    2. '(' → logprob: -7.625694274902344
    3. 'n' → logprob: -8.500694274902344
    4. ')n' → logprob: -13.625694274902344
    5. '(
' → logprob: -13.875694274902344
    6. ')' → logprob: -15.750694274902344
    7. '(len' → logprob: -16.250694274902344
    8. '	n' → logprob: -16.500694274902344
    9. ' n' → logprob: -16.500694274902344
    10. ',n' → logprob: -16.750694274902344

Token 569: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011823695385828614
    2. '):
' → logprob: -7.251182556152344
    3. ' ):' → logprob: -8.126182556152344
    4. ',' → logprob: -9.376182556152344
    5. ')' → logprob: -9.876182556152344
    6. '   ' → logprob: -11.126182556152344
    7. ':' → logprob: -11.251182556152344
    8. '+' → logprob: -12.376182556152344
    9. '():' → logprob: -12.501182556152344
    10. ']:' → logprob: -13.626182556152344

Token 570: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06984950602054596
    2. '<|end|>' → logprob: -3.1948494911193848
    3. ',l' → logprob: -4.694849491119385
    4. ',' → logprob: -4.944849491119385
    5. '	l' → logprob: -6.194849491119385
    6. '   ' → logprob: -6.194849491119385
    7. ' l' → logprob: -6.444849491119385
    8. '	   ' → logprob: -6.694849491119385
    9. ' ' → logprob: -6.944849491119385
    10. '    ' → logprob: -7.069849491119385

Token 571: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -1.118241548538208
    2. ' l' → logprob: -1.118241548538208
    3. '       ' → logprob: -1.118241548538208
    4. '   ' → logprob: -4.118241310119629
    5. '    ' → logprob: -7.243241310119629
    6. ',l' → logprob: -7.368241310119629
    7. '	l' → logprob: -7.743241310119629
    8. ' if' → logprob: -8.118241310119629
    9. 'r' → logprob: -8.368241310119629
    10. ',' → logprob: -8.493241310119629

Token 572: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03211936727166176
    2. '=' → logprob: -3.6571192741394043
    3. ' =' → logprob: -5.407119274139404
    4. ',r' → logprob: -7.032119274139404
    5. '=r' → logprob: -8.907119750976562
    6. ',i' → logprob: -9.282119750976562
    7. ',l' → logprob: -9.657119750976562
    8. ' ,' → logprob: -9.907119750976562
    9. '=i' → logprob: -10.157119750976562
    10. ',
' → logprob: -11.532119750976562

Token 573: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6934336423873901
    2. ' r' → logprob: -0.6934336423873901
    3. '<|end|>' → logprob: -8.19343376159668
    4. ' ' → logprob: -12.94343376159668
    5. '_r' → logprob: -14.06843376159668
    6. '	r' → logprob: -14.06843376159668
    7. ',r' → logprob: -14.19343376159668
    8. '<|end|>' → logprob: -14.19343376159668
    9. '   ' → logprob: -14.31843376159668
    10. '(r' → logprob: -14.44343376159668

Token 574: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020691128447651863
    2. '=' → logprob: -3.895691156387329
    3. ' =' → logprob: -8.89569091796875
    4. ' ,' → logprob: -12.02069091796875
    5. '<|end|>' → logprob: -13.64569091796875
    6. '   ' → logprob: -13.77069091796875
    7. ')' → logprob: -14.27069091796875
    8. ',user' → logprob: -14.39569091796875
    9. ',
' → logprob: -14.52069091796875
    10. '‌,' → logprob: -15.14569091796875

Token 575: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0011736786691471934
    2. ' cnt' → logprob: -6.751173496246338
    3. 'count' → logprob: -13.626173973083496
    4. '	cnt' → logprob: -13.626173973083496
    5. '(cnt' → logprob: -14.626173973083496
    6. '[cnt' → logprob: -15.126173973083496
    7. 'ct' → logprob: -16.00117301940918
    8. '_cnt' → logprob: -16.50117301940918
    9. '
' → logprob: -17.00117301940918
    10. ',' → logprob: -17.00117301940918

Token 576: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010555570479482412
    2. '=' → logprob: -7.501055717468262
    3. ' =' → logprob: -7.626055717468262
    4. '<|end|>' → logprob: -11.751055717468262
    5. ' ,' → logprob: -12.376055717468262
    6. '   ' → logprob: -14.126055717468262
    7. '<|end|>' → logprob: -14.876055717468262
    8. ',user' → logprob: -15.251055717468262
    9. ',
' → logprob: -15.251055717468262
    10. '‌,' → logprob: -16.188554763793945

Token 577: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.0009132515988312662
    2. ' xor' → logprob: -7.000913143157959
    3. ' ' → logprob: -14.250913619995117
    4. 'xo' → logprob: -14.500913619995117
    5. '   ' → logprob: -16.000913619995117
    6. '
' → logprob: -16.000913619995117
    7. 'xr' → logprob: -16.750913619995117
    8. 'x' → logprob: -17.000913619995117
    9. '```' → logprob: -17.000913619995117
    10. '  ' → logprob: -17.375913619995117

Token 578: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575998067855835
    2. '=' → logprob: -0.825998067855835
    3. ',' → logprob: -9.950998306274414
    4. '<|end|>' → logprob: -12.575998306274414
    5. '   ' → logprob: -12.700998306274414
    6. ')' → logprob: -12.950998306274414
    7. ' =
' → logprob: -14.450998306274414
    8. ' ' → logprob: -15.325998306274414
    9. ' =)' → logprob: -15.325998306274414
    10. '=
' → logprob: -15.575998306274414

Token 579: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.061974067240953445
    2. ' process' → logprob: -2.811974048614502
    3. 'i' → logprob: -12.43697452545166
    4. 'proces' → logprob: -14.31197452545166
    5. ' i' → logprob: -14.43697452545166
    6. '   ' → logprob: -14.56197452545166
    7. '_process' → logprob: -15.56197452545166
    8. ' proces' → logprob: -15.56197452545166
    9. 'copy' → logprob: -15.68697452545166
    10. '(process' → logprob: -15.81197452545166

Token 580: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -1.5048530030981055e-06
    2. 'element' → logprob: -13.500001907348633
    3. '(i' → logprob: -17.000001907348633
    4. '_' → logprob: -17.625001907348633
    5. 'Element' → logprob: -17.625001907348633
    6. '_elements' → logprob: -17.625001907348633
    7. '_ELEMENT' → logprob: -17.750001907348633
    8. '_Element' → logprob: -17.875001907348633
    9. '_elem' → logprob: -18.375001907348633
    10. '(element' → logprob: -18.625001907348633

Token 581: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.02975395694375038
    2. '(' → logprob: -3.5297539234161377
    3. '(
' → logprob: -13.154753684997559
    4. ' (' → logprob: -14.029753684997559
    5. '((' → logprob: -15.154753684997559
    6. '(ii' → logprob: -16.404754638671875
    7. '(I' → logprob: -16.529754638671875
    8. '```' → logprob: -16.654754638671875
    9. '(l' → logprob: -16.904754638671875
    10. '(None' → logprob: -17.654754638671875

Token 582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.481510692741722e-05
    2. ' ,' → logprob: -9.62507438659668
    3. ',l' → logprob: -11.75007438659668
    4. ',
' → logprob: -14.75007438659668
    5. ')' → logprob: -15.75007438659668
    6. ',r' → logprob: -16.37507438659668
    7. '   ' → logprob: -16.62507438659668
    8. '=' → logprob: -16.75007438659668
    9. ',n' → logprob: -17.12507438659668
    10. '‌,' → logprob: -17.75007438659668

Token 583: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0011708177626132965
    2. ' l' → logprob: -6.751170635223389
    3. 'r' → logprob: -15.251171112060547
    4. '<|end|>' → logprob: -15.751171112060547
    5. '	l' → logprob: -16.376171112060547
    6. '   ' → logprob: -17.751171112060547
    7. ' ' → logprob: -17.876171112060547
    8. '0' → logprob: -18.001171112060547
    9. '_l' → logprob: -18.376171112060547
    10. 'll' → logprob: -19.126171112060547

Token 584: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000851201475597918
    2. ',r' → logprob: -7.125851154327393
    3. ' ,' → logprob: -10.00085163116455
    4. ',
' → logprob: -13.87585163116455
    5. 'r' → logprob: -15.62585163116455
    6. ' r' → logprob: -16.500850677490234
    7. '<|end|>' → logprob: -16.875850677490234
    8. '   ' → logprob: -17.500850677490234
    9. '```' → logprob: -17.875850677490234
    10. ')' → logprob: -17.875850677490234

Token 585: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -8.494741632603109e-05
    2. ' r' → logprob: -9.37508487701416
    3. '<|end|>' → logprob: -16.500085830688477
    4. ' ' → logprob: -19.000085830688477
    5. '
' → logprob: -19.000085830688477
    6. '   ' → logprob: -19.375085830688477
    7. '	r' → logprob: -19.875085830688477
    8. ')' → logprob: -20.000085830688477
    9. ',r' → logprob: -20.750085830688477
    10. '...' → logprob: -20.750085830688477

Token 586: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ' ,' → logprob: -13.250001907348633
    3. ',c' → logprob: -15.750001907348633
    4. ',
' → logprob: -17.625001907348633
    5. '```' → logprob: -19.125001907348633
    6. 'cnt' → logprob: -19.375001907348633
    7. ',count' → logprob: -19.625001907348633
    8. ')' → logprob: -20.500001907348633
    9. '   ' → logprob: -20.500001907348633
    10. '`,' → logprob: -20.875001907348633

Token 587: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -6.2729995988775045e-06
    2. ' cnt' → logprob: -12.000006675720215
    3. '	cnt' → logprob: -17.8750057220459
    4. 'count' → logprob: -18.7500057220459
    5. '(cnt' → logprob: -19.8750057220459
    6. '   ' → logprob: -19.8750057220459
    7. 'cn' → logprob: -20.6250057220459
    8. '
' → logprob: -21.5000057220459
    9. '_cnt' → logprob: -21.5000057220459
    10. '[cnt' → logprob: -21.5000057220459

Token 588: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8670179997570813e-05
    2. ' ,' → logprob: -11.375019073486328
    3. ',x' → logprob: -12.125019073486328
    4. ')' → logprob: -14.000019073486328
    5. ',y' → logprob: -15.625019073486328
    6. ',
' → logprob: -15.750019073486328
    7. ',r' → logprob: -15.875019073486328
    8. ' xor' → logprob: -16.125019073486328
    9. 'xor' → logprob: -16.250019073486328
    10. '```' → logprob: -16.750019073486328

Token 589: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -1.676292231422849e-05
    2. ' xor' → logprob: -11.000017166137695
    3. 'r' → logprob: -17.375017166137695
    4. '   ' → logprob: -17.750017166137695
    5. ' ' → logprob: -18.625017166137695
    6. 'xo' → logprob: -18.750017166137695
    7. '```' → logprob: -19.375017166137695
    8. 'xr' → logprob: -19.750017166137695
    9. '0' → logprob: -19.875017166137695
    10. 'x' → logprob: -20.000017166137695

Token 590: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.052377623040229e-05
    2. ',a' → logprob: -10.375070571899414
    3. ' ,' → logprob: -10.625070571899414
    4. '   ' → logprob: -11.250070571899414
    5. 'a' → logprob: -14.250070571899414
    6. '```' → logprob: -14.750070571899414
    7. ')' → logprob: -14.875070571899414
    8. '       ' → logprob: -15.500070571899414
    9. ' a' → logprob: -16.375070571899414
    10. ',
' → logprob: -16.750070571899414

Token 591: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007100477814674377
    2. ' a' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.375709533691406
    4. '	a' → logprob: -18.250709533691406
    5. '
' → logprob: -19.125709533691406
    6. '[a' → logprob: -20.000709533691406
    7. ' ' → logprob: -20.500709533691406
    8. '    ' → logprob: -20.750709533691406
    9. '       ' → logprob: -20.875709533691406
    10. ')a' → logprob: -21.125709533691406

Token 592: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004081724211573601
    2. ',n' → logprob: -5.504081726074219
    3. ' ,' → logprob: -13.504081726074219
    4. ',i' → logprob: -13.629081726074219
    5. ')' → logprob: -16.00408172607422
    6. ',r' → logprob: -16.12908172607422
    7. '```' → logprob: -16.25408172607422
    8. ',
' → logprob: -16.37908172607422
    9. 'n' → logprob: -16.62908172607422
    10. ',N' → logprob: -17.00408172607422

Token 593: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.627176768844947e-05
    2. ' n' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.12509536743164
    4. '	n' → logprob: -18.50009536743164
    5. ')n' → logprob: -20.87509536743164
    6. ')' → logprob: -21.25009536743164
    7. '_n' → logprob: -21.75009536743164
    8. '  ' → logprob: -21.75009536743164
    9. '
' → logprob: -21.87509536743164
    10. '    ' → logprob: -21.87509536743164

Token 594: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008378617349080741
    2. ')
' → logprob: -7.125837802886963
    3. '   ' → logprob: -10.375838279724121
    4. ' )' → logprob: -14.500838279724121
    5. ')return' → logprob: -15.375838279724121
    6. ')

' → logprob: -15.375838279724121
    7. '       ' → logprob: -15.625838279724121
    8. ')#' → logprob: -15.875838279724121
    9. ')
' → logprob: -16.125837326049805
    10. '<|end|>' → logprob: -16.250837326049805

Token 595: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0393403097987175
    2. '   ' → logprob: -4.164340496063232
    3. 'while' → logprob: -4.414340496063232
    4. ' while' → logprob: -4.914340496063232
    5. '<|end|>' → logprob: -6.289340496063232
    6. '	while' → logprob: -6.914340496063232
    7. '```' → logprob: -7.539340496063232
    8. '	   ' → logprob: -9.664340019226074
    9. '	' → logprob: -10.289340019226074
    10. '           ' → logprob: -10.664340019226074

Token 596: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5870074033737183
    2. 'while' (adapté à ' while') → logprob: -1.0870074033737183
    3. '   ' → logprob: -2.712007522583008
    4. ' while' → logprob: -3.212007522583008
    5. '	while' → logprob: -9.212007522583008
    6. 'While' → logprob: -13.212007522583008
    7. '        
' → logprob: -13.712007522583008
    8. '    ' → logprob: -14.212007522583008
    9. '	   ' → logprob: -14.462007522583008
    10. ' ' → logprob: -14.462007522583008

Token 597: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.011151928454637527
    2. 'can' → logprob: -4.5111517906188965
    3. ' r' → logprob: -9.886152267456055
    4. 'r' → logprob: -10.386152267456055
    5. '(can' → logprob: -11.761152267456055
    6. '	can' → logprob: -11.761152267456055
    7. ' not' → logprob: -12.011152267456055
    8. '_can' → logprob: -16.011152267456055
    9. ' ' → logprob: -16.511152267456055
    10. ' c' → logprob: -16.636152267456055

Token 598: '_extend' (ID: 195756)
  Prédit: '_extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_extend' → logprob: -0.000340945553034544
    2. '_continue' → logprob: -8.625341415405273
    3. '_' → logprob: -9.125341415405273
    4. '_extended' → logprob: -11.375341415405273
    5. '_append' → logprob: -11.625341415405273
    6. '_expand' → logprob: -11.750341415405273
    7. ' _' → logprob: -11.750341415405273
    8. '_ext' → logprob: -12.000341415405273
    9. '_can' → logprob: -12.750341415405273
    10. '_extension' → logprob: -13.250341415405273

Token 599: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.15250802040100098
    2. '(' → logprob: -2.027508020401001
    3. '_' → logprob: -5.152507781982422
    4. ' (' → logprob: -5.902507781982422
    5. '(x' → logprob: -6.777507781982422
    6. 'r' → logprob: -10.902507781982422
    7. ')' → logprob: -11.027507781982422
    8. ' ' → logprob: -11.027507781982422
    9. '(_' → logprob: -11.402507781982422
    10. '(
' → logprob: -11.652507781982422

Token 600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00120475422590971
    2. ' ,' → logprob: -6.876204967498779
    3. ',a' → logprob: -8.876204490661621
    4. '   ' → logprob: -11.126204490661621
    5. ' and' → logprob: -12.126204490661621
    6. ',n' → logprob: -12.501204490661621
    7. ',
' → logprob: -13.126204490661621
    8. ')' → logprob: -13.501204490661621
    9. ',r' → logprob: -13.876204490661621
    10. '+' → logprob: -14.501204490661621

Token 601: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08896258473396301
    2. ' n' → logprob: -2.4639625549316406
    3. ')n' → logprob: -11.58896255493164
    4. ')' → logprob: -12.21396255493164
    5. '	n' → logprob: -12.46396255493164
    6. 'a' → logprob: -13.71396255493164
    7. ',n' → logprob: -14.46396255493164
    8. '_n' → logprob: -14.46396255493164
    9. ' ' → logprob: -14.71396255493164
    10. '   ' → logprob: -14.96396255493164

Token 602: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014727961272001266
    2. ' and' → logprob: -4.51472806930542
    3. 'and' → logprob: -6.26472806930542
    4. '):' → logprob: -7.26472806930542
    5. '):
' → logprob: -7.38972806930542
    6. ' )' → logprob: -7.76472806930542
    7. '   ' → logprob: -11.764727592468262
    8. '       ' → logprob: -11.764727592468262
    9. ' ' → logprob: -12.764727592468262
    10. ',' → logprob: -13.514727592468262

Token 603: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005978093016892672
    2. 'and' → logprob: -5.130978107452393
    3. ':' → logprob: -11.255977630615234
    4. '   ' → logprob: -11.505977630615234
    5. '	and' → logprob: -12.255977630615234
    6. ' ' → logprob: -12.380977630615234
    7. '       ' → logprob: -12.505977630615234
    8. ',' → logprob: -12.630977630615234
    9. ':
' → logprob: -12.755977630615234
    10. '      ' → logprob: -13.380977630615234

Token 604: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.06197473779320717
    2. ' can' → logprob: -2.8119747638702393
    3. '   ' → logprob: -12.81197452545166
    4. '(can' → logprob: -12.93697452545166
    5. '	can' → logprob: -13.56197452545166
    6. '       ' → logprob: -16.186975479125977
    7. ' ' → logprob: -16.186975479125977
    8. ' is' → logprob: -16.561975479125977
    9. ' not' → logprob: -16.561975479125977
    10. '  ' → logprob: -16.811975479125977

Token 605: '_extend' (ID: 195756)
  Prédit: '_extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_extend' → logprob: -3.7385154428193346e-05
    2. 'extend' → logprob: -10.50003719329834
    3. '_ext' → logprob: -12.62503719329834
    4. '_extended' → logprob: -13.87503719329834
    5. '_continue' → logprob: -13.87503719329834
    6. '_append' → logprob: -14.00003719329834
    7. '.extend' → logprob: -14.25003719329834
    8. '   ' → logprob: -14.50003719329834
    9. 'can' → logprob: -14.50003719329834
    10. 'Extend' → logprob: -15.00003719329834

Token 606: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.029970545321702957
    2. '(x' → logprob: -3.529970645904541
    3. 'while' → logprob: -8.904970169067383
    4. '_x' → logprob: -9.779970169067383
    5. 'xor' → logprob: -11.654970169067383
    6. '_(' → logprob: -12.029970169067383
    7. 'While' → logprob: -12.154970169067383
    8. '(r' → logprob: -12.654970169067383
    9. '(' → logprob: -13.154970169067383
    10. 'x' → logprob: -14.029970169067383

Token 607: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.004117223434150219
    2. '_' → logprob: -5.504117012023926
    3. 'While' → logprob: -10.504117012023926
    4. 'xor' → logprob: -12.629117012023926
    5. 'hile' → logprob: -13.254117012023926
    6. '(x' → logprob: -13.379117012023926
    7. ' while' → logprob: -13.504117012023926
    8. 'x' → logprob: -13.629117012023926
    9. 'r' → logprob: -13.629117012023926
    10. '
' → logprob: -14.879117012023926

Token 608: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00015955790877342224
    2. '(' → logprob: -8.75015926361084
    3. '(
' → logprob: -14.37515926361084
    4. 'xor' → logprob: -15.25015926361084
    5. ' (' → logprob: -15.37515926361084
    6. 'x' → logprob: -18.250160217285156
    7. '   ' → logprob: -18.625160217285156
    8. '(r' → logprob: -18.750160217285156
    9. '(q' → logprob: -18.875160217285156
    10. ')' → logprob: -19.125160217285156

Token 609: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.005971454083919525
    2. 'xor' → logprob: -5.755971431732178
    3. ',' → logprob: -6.005971431732178
    4. 'o' → logprob: -9.255971908569336
    5. 'r' → logprob: -9.755971908569336
    6. '[' → logprob: -10.005971908569336
    7. ' xor' → logprob: -10.255971908569336
    8. 'orr' → logprob: -10.630971908569336
    9. ',r' → logprob: -10.880971908569336
    10. '   ' → logprob: -11.130971908569336

Token 610: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017220141366124153
    2. ',a' → logprob: -4.1422200202941895
    3. 'a' → logprob: -7.5172200202941895
    4. ' ,' → logprob: -7.6422200202941895
    5. '(a' → logprob: -9.142220497131348
    6. ')' → logprob: -10.392220497131348
    7. ' a' → logprob: -12.267220497131348
    8. '   ' → logprob: -12.517220497131348
    9. ',
' → logprob: -13.017220497131348
    10. '(' → logprob: -13.142220497131348

Token 611: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -4.572941179503687e-05
    2. ' cnt' → logprob: -10.000045776367188
    3. 'count' → logprob: -16.125045776367188
    4. '(cnt' → logprob: -16.125045776367188
    5. '	cnt' → logprob: -16.875045776367188
    6. '[cnt' → logprob: -17.125045776367188
    7. 'cant' → logprob: -18.125045776367188
    8. 'r' → logprob: -19.000045776367188
    9. '_cnt' → logprob: -19.250045776367188
    10. 'ct' → logprob: -20.000045776367188

Token 612: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00174158182926476
    2. ',a' → logprob: -6.376741409301758
    3. ' ,' → logprob: -10.626741409301758
    4. 'a' → logprob: -11.251741409301758
    5. ' a' → logprob: -13.376741409301758
    6. ')' → logprob: -15.501741409301758
    7. ',
' → logprob: -16.376741409301758
    8. '   ' → logprob: -16.501741409301758
    9. '[a' → logprob: -16.626741409301758
    10. '```' → logprob: -16.751741409301758

Token 613: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0003357006062287837
    2. ' a' → logprob: -8.000335693359375
    3. ',a' → logprob: -16.125335693359375
    4. ')a' → logprob: -16.500335693359375
    5. '	a' → logprob: -17.000335693359375
    6. ')' → logprob: -17.500335693359375
    7. '```' → logprob: -17.875335693359375
    8. ',' → logprob: -18.125335693359375
    9. '(a' → logprob: -18.500335693359375
    10. '[a' → logprob: -18.500335693359375

Token 614: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05497899651527405
    2. ',r' → logprob: -2.929979085922241
    3. '[r' → logprob: -9.92997932434082
    4. ' ,' → logprob: -10.55497932434082
    5. 'r' → logprob: -11.05497932434082
    6. ',
' → logprob: -13.17997932434082
    7. '   ' → logprob: -14.30497932434082
    8. ',n' → logprob: -14.30497932434082
    9. '(r' → logprob: -14.92997932434082
    10. '```' → logprob: -14.92997932434082

Token 615: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007102862582542002
    2. ' r' → logprob: -7.250710487365723
    3. ')' → logprob: -15.875710487365723
    4. '   ' → logprob: -16.500709533691406
    5. '	r' → logprob: -16.875709533691406
    6. '_r' → logprob: -17.625709533691406
    7. '
' → logprob: -17.875709533691406
    8. '[r' → logprob: -18.000709533691406
    9. '```' → logprob: -18.500709533691406
    10. ',r' → logprob: -18.750709533691406

Token 616: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006901501677930355
    2. '):
' → logprob: -5.256901264190674
    3. '[r' → logprob: -6.631901264190674
    4. ')' → logprob: -8.631901741027832
    5. '   ' → logprob: -9.006901741027832
    6. '):
' → logprob: -11.506901741027832
    7. '[' → logprob: -11.756901741027832
    8. ' ):' → logprob: -11.881901741027832
    9. '       ' → logprob: -12.006901741027832
    10. ':' → logprob: -12.506901741027832

Token 617: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.081023208796978
    2. '       ' → logprob: -2.9560232162475586
    3. ',' → logprob: -4.206023216247559
    4. ' r' → logprob: -5.081023216247559
    5. 'r' → logprob: -5.706023216247559
    6. ' xor' → logprob: -8.581023216247559
    7. '```' → logprob: -8.706023216247559
    8. '   ' → logprob: -8.831023216247559
    9. '        
' → logprob: -9.331023216247559
    10. '         ' → logprob: -9.456023216247559

Token 618: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' (adapté à ' xor') → logprob: -0.044723208993673325
    2. '       ' → logprob: -3.6697232723236084
    3. '   ' → logprob: -4.669723033905029
    4. ' xor' → logprob: -5.544723033905029
    5. '           ' → logprob: -5.669723033905029
    6. 'r' → logprob: -6.544723033905029
    7. '               ' → logprob: -10.169723510742188
    8. 'x' → logprob: -10.544723510742188
    9. ' ' → logprob: -12.419723510742188
    10. '     ' → logprob: -12.669723510742188

Token 619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012023169983876869
    2. ',r' → logprob: -9.500120162963867
    3. ' ,' → logprob: -11.125120162963867
    4. ' ^=' → logprob: -11.125120162963867
    5. '^' → logprob: -11.500120162963867
    6. ',^' → logprob: -13.750120162963867
    7. ',x' → logprob: -13.875120162963867
    8. '_updated' → logprob: -14.125120162963867
    9. '_,' → logprob: -14.500120162963867
    10. ',n' → logprob: -14.750120162963867

Token 620: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0002614550176076591
    2. ' cnt' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.375261306762695
    4. '	cnt' → logprob: -17.750261306762695
    5. 'count' → logprob: -18.000261306762695
    6. ' ' → logprob: -19.750261306762695
    7. '(cnt' → logprob: -20.000261306762695
    8. 'ct' → logprob: -20.625261306762695
    9. '  ' → logprob: -20.750261306762695
    10. 'c' → logprob: -20.875261306762695

Token 621: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.378676176071167
    2. ',' → logprob: -1.628676176071167
    3. ' =' → logprob: -2.128676176071167
    4. ' ,' → logprob: -10.753676414489746
    5. ' +=' → logprob: -11.628676414489746
    6. '   ' → logprob: -12.003676414489746
    7. '+=' → logprob: -12.378676414489746
    8. '           ' → logprob: -13.003676414489746
    9. ')' → logprob: -14.128676414489746
    10. '    ' → logprob: -14.378676414489746

Token 622: ' extend' (ID: 20239)
  Prédit: 'extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extend' → logprob: -7.517272024415433e-05
    2. ' extend' → logprob: -9.500075340270996
    3. 'expand' → logprob: -15.750075340270996
    4. '   ' → logprob: -17.12507438659668
    5. ' ' → logprob: -20.00007438659668
    6. '  ' → logprob: -20.25007438659668
    7. 'update' → logprob: -20.50007438659668
    8. '.extend' → logprob: -20.75007438659668
    9. '_extend' → logprob: -20.75007438659668
    10. 'ext' → logprob: -21.00007438659668

Token 623: '_window' (ID: 28463)
  Prédit: '_window'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_window' → logprob: -0.0006657334160991013
    2. 'xor' → logprob: -7.375665664672852
    3. 'window' → logprob: -10.875665664672852
    4. '(x' → logprob: -11.625665664672852
    5. '_x' → logprob: -12.375665664672852
    6. '```' → logprob: -12.625665664672852
    7. '_' → logprob: -14.375665664672852
    8. 'x' → logprob: -14.625665664672852
    9. '_WINDOW' → logprob: -14.625665664672852
    10. '(window' → logprob: -14.625665664672852

Token 624: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.829823102336377e-05
    2. '(' → logprob: -9.25009822845459
    3. '(x' → logprob: -13.75009822845459
    4. '(
' → logprob: -14.62509822845459
    5. ',' → logprob: -15.62509822845459
    6. '(r' → logprob: -16.000099182128906
    7. ' (' → logprob: -16.000099182128906
    8. 'a' → logprob: -16.000099182128906
    9. ',a' → logprob: -17.875099182128906
    10. '(c' → logprob: -18.125099182128906

Token 625: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.5374735593795776
    2. 'r' → logprob: -1.5374735593795776
    3. '[r' → logprob: -2.662473678588867
    4. 'i' → logprob: -2.787473678588867
    5. ',' → logprob: -3.412473678588867
    6. '[i' → logprob: -3.912473678588867
    7. 'xor' → logprob: -5.287473678588867
    8. '[' → logprob: -6.037473678588867
    9. 'o' → logprob: -6.037473678588867
    10. 'a' → logprob: -6.412473678588867

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.338466093642637e-05
    2. ',a' → logprob: -10.250073432922363
    3. ' ,' → logprob: -10.250073432922363
    4. ',c' → logprob: -13.375073432922363
    5. 'a' → logprob: -14.500073432922363
    6. ')' → logprob: -16.500072479248047
    7. ',
' → logprob: -16.625072479248047
    8. '```' → logprob: -17.000072479248047
    9. ',n' → logprob: -17.250072479248047
    10. ',user' → logprob: -18.000072479248047

Token 627: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0007105246186256409
    2. ' cnt' → logprob: -7.250710487365723
    3. 'count' → logprob: -15.000710487365723
    4. '	cnt' → logprob: -16.37571144104004
    5. '(cnt' → logprob: -16.87571144104004
    6. '[cnt' → logprob: -17.87571144104004
    7. '_cnt' → logprob: -19.12571144104004
    8. 'ct' → logprob: -19.50071144104004
    9. '```' → logprob: -19.50071144104004
    10. 'c' → logprob: -19.62571144104004

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8789383830153383e-05
    2. ',a' → logprob: -11.125019073486328
    3. ' ,' → logprob: -12.500019073486328
    4. 'a' → logprob: -15.875019073486328
    5. '   ' → logprob: -18.000019073486328
    6. ',
' → logprob: -18.375019073486328
    7. ')' → logprob: -18.875019073486328
    8. ' a' → logprob: -19.875019073486328
    9. '```' → logprob: -19.875019073486328
    10. ',
' → logprob: -20.250019073486328

Token 629: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020354038861114532
    2. ' a' → logprob: -8.500203132629395
    3. '   ' → logprob: -16.37520408630371
    4. '	a' → logprob: -19.12520408630371
    5. ')a' → logprob: -21.87520408630371
    6. '       ' → logprob: -22.25020408630371
    7. '    ' → logprob: -22.75020408630371
    8. '  ' → logprob: -23.12520408630371
    9. '           ' → logprob: -23.25020408630371
    10. ' ' → logprob: -23.25020408630371

Token 630: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.000000953674316
    3. 'r' → logprob: -16.0
    4. '   ' → logprob: -18.75
    5. '```' → logprob: -20.375
    6. '	r' → logprob: -20.625
    7. '[
' → logprob: -20.875
    8. ' [' → logprob: -21.25
    9. '(r' → logprob: -22.25
    10. '[a' → logprob: -22.5

Token 631: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.01742260530591011
    2. ')' → logprob: -4.517422676086426
    3. '[r' → logprob: -5.142422676086426
    4. '[' → logprob: -8.892422676086426
    5. ')])' → logprob: -9.392422676086426
    6. ')]' → logprob: -9.642422676086426
    7. '])
' → logprob: -9.642422676086426
    8. '   ' → logprob: -9.767422676086426
    9. ' ])' → logprob: -10.392422676086426
    10. '))' → logprob: -10.892422676086426

Token 632: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19080118834972382
    2. '       ' → logprob: -1.9408011436462402
    3. '   ' → logprob: -3.9408011436462402
    4. 'r' → logprob: -4.56580114364624
    5. '               ' → logprob: -8.940801620483398
    6. '```' → logprob: -9.565801620483398
    7. ' r' → logprob: -10.565801620483398
    8. '		' → logprob: -11.690801620483398
    9. '        
' → logprob: -11.815801620483398
    10. '                   ' → logprob: -12.065801620483398

Token 633: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.2015216201543808
    2. ' r' → logprob: -1.701521635055542
    3. '           ' → logprob: -9.326521873474121
    4. '   ' → logprob: -11.326521873474121
    5. '       ' → logprob: -12.326521873474121
    6. ' ' → logprob: -14.451521873474121
    7. '	r' → logprob: -14.451521873474121
    8. '               ' → logprob: -14.576521873474121
    9. '    ' → logprob: -14.826521873474121
    10. '```' → logprob: -15.576521873474121

Token 634: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00868962612003088
    2. ' +=' → logprob: -4.7586894035339355
    3. '=' → logprob: -9.508689880371094
    4. '+' → logprob: -14.133689880371094
    5. '```' → logprob: -17.008689880371094
    6. ' =' → logprob: -17.258689880371094
    7. ']+=' → logprob: -17.508689880371094
    8. ')' → logprob: -18.008689880371094
    9. '   ' → logprob: -18.258689880371094
    10. ',' → logprob: -19.258689880371094

Token 635: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -21.125
    4. '```' → logprob: -21.375
    5. '１' → logprob: -22.25
    6. '۱' → logprob: -23.75
    7. '<|end|>' → logprob: -24.5
    8. '=' → logprob: -24.5
    9. '0' → logprob: -24.625
    10. '+' → logprob: -24.75

Token 636: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -18.5
    4. '   ' → logprob: -19.5
    5. '１' → logprob: -20.75
    6. '<|end|>' → logprob: -21.125
    7. '0' → logprob: -21.3125
    8. '۱' → logprob: -21.4375
    9. '+' → logprob: -21.9375
    10. '`' → logprob: -22.25

Token 637: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002030826872214675
    2. '   ' → logprob: -6.252030849456787
    3. '           ' → logprob: -9.252030372619629
    4. '<|end|>' → logprob: -12.627030372619629
    5. '```' → logprob: -13.377030372619629
    6. '      ' → logprob: -14.252030372619629
    7. ' ' → logprob: -15.377030372619629
    8. '     ' → logprob: -15.502030372619629
    9. '
' → logprob: -16.502031326293945
    10. '<|end|>' → logprob: -16.627031326293945

Token 638: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0153573676943779
    2. '   ' → logprob: -4.890357494354248
    3. '<|end|>' → logprob: -5.640357494354248
    4. '           ' → logprob: -6.140357494354248
    5. '```' → logprob: -6.265357494354248
    6. '<|end|>' → logprob: -10.26535701751709
    7. '
' → logprob: -11.14035701751709
    8. '               ' → logprob: -11.51535701751709
    9. '      ' → logprob: -12.14035701751709
    10. '``' → logprob: -12.14035701751709

Token 639: ' cnt' (ID: 27340)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4939331114292145
    2. 'ans' → logprob: -0.9939330816268921
    3. '       ' → logprob: -4.743933200836182
    4. 'if' → logprob: -4.743933200836182
    5. 'while' → logprob: -7.243933200836182
    6. ' ans' → logprob: -7.243933200836182
    7. '	ans' → logprob: -7.868933200836182
    8. ' if' → logprob: -8.493932723999023
    9. ' while' → logprob: -9.493932723999023
    10. '```' → logprob: -10.118932723999023

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3451433409936726e-05
    2. '=' → logprob: -11.000033378601074
    3. ' ,' → logprob: -11.500033378601074
    4. '_updated' → logprob: -13.000033378601074
    5. ' =' → logprob: -13.375033378601074
    6. 'Updated' → logprob: -13.750033378601074
    7. '_,' → logprob: -14.500033378601074
    8. ' -=' → logprob: -14.875033378601074
    9. 'updated' → logprob: -16.00003433227539
    10. ',r' → logprob: -16.25003433227539

Token 641: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -2.47495681833243e-05
    2. ' xor' → logprob: -10.625024795532227
    3. 'x' → logprob: -15.625024795532227
    4. ',' → logprob: -16.375024795532227
    5. '   ' → logprob: -17.125024795532227
    6. 'xo' → logprob: -17.500024795532227
    7. ' ' → logprob: -17.625024795532227
    8. 'xr' → logprob: -17.875024795532227
    9. '```' → logprob: -17.875024795532227
    10. '  ' → logprob: -18.250024795532227

Token 642: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.281485836254433e-05
    2. '=' → logprob: -9.750092506408691
    3. ',r' → logprob: -10.375092506408691
    4. ' =' → logprob: -13.375092506408691
    5. ' ,' → logprob: -13.500092506408691
    6. 'r' → logprob: -16.250093460083008
    7. '   ' → logprob: -16.875093460083008
    8. ',k' → logprob: -17.250093460083008
    9. '‌,' → logprob: -17.625093460083008
    10. '=r' → logprob: -17.625093460083008

Token 643: ' remove' (ID: 6234)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.0011946328449994326
    2. ' remove' → logprob: -6.751194477081299
    3. '   ' → logprob: -11.251194953918457
    4. '	remove' → logprob: -11.751194953918457
    5. 'add' → logprob: -12.876194953918457
    6. 'subtract' → logprob: -14.501194953918457
    7. '_remove' → logprob: -16.50119400024414
    8. '       ' → logprob: -16.87619400024414
    9. '(remove' → logprob: -17.00119400024414
    10. '  ' → logprob: -17.12619400024414

Token 644: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -7.576873758807778e-05
    2. 'element' → logprob: -10.625075340270996
    3. 'cnt' → logprob: -11.250075340270996
    4. 'Element' → logprob: -11.375075340270996
    5. ',' → logprob: -11.625075340270996
    6. '(cnt' → logprob: -12.875075340270996
    7. '_ELEMENT' → logprob: -12.875075340270996
    8. '_' → logprob: -12.875075340270996
    9. ')' → logprob: -13.750075340270996
    10. '_elem' → logprob: -13.875075340270996

Token 645: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -1.0325924449716695e-05
    2. '(count' → logprob: -12.50001049041748
    3. '[cnt' → logprob: -13.00001049041748
    4. 'cnt' → logprob: -13.12501049041748
    5. '(' → logprob: -13.75001049041748
    6. '(cont' → logprob: -14.12501049041748
    7. ' (' → logprob: -15.87501049041748
    8. '	cnt' → logprob: -16.250009536743164
    9. '(counter' → logprob: -16.625009536743164
    10. '(ct' → logprob: -16.875009536743164

Token 646: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3306015716807451e-05
    2. ' ,' → logprob: -11.50001335144043
    3. ',a' → logprob: -13.25001335144043
    4. ',x' → logprob: -14.00001335144043
    5. '   ' → logprob: -15.87501335144043
    6. 'a' → logprob: -16.37501335144043
    7. ',y' → logprob: -16.75001335144043
    8. ')' → logprob: -17.00001335144043
    9. ',c' → logprob: -17.50001335144043
    10. '<|end|>' → logprob: -17.62501335144043

Token 647: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.0006317823426797986
    2. ' xor' → logprob: -7.375631809234619
    3. 'x' → logprob: -13.000631332397461
    4. ' ' → logprob: -13.625631332397461
    5. '<|end|>' → logprob: -14.625631332397461
    6. 'r' → logprob: -15.500631332397461
    7. '```' → logprob: -15.500631332397461
    8. ',' → logprob: -15.625631332397461
    9. 'xo' → logprob: -15.875631332397461
    10. ')' → logprob: -16.00063133239746

Token 648: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041947141289711
    2. 'a' → logprob: -8.125419616699219
    3. ',a' → logprob: -9.125419616699219
    4. ' ,' → logprob: -11.750419616699219
    5. ' a' → logprob: -12.875419616699219
    6. '   ' → logprob: -13.125419616699219
    7. ')' → logprob: -14.125419616699219
    8. '       ' → logprob: -15.250419616699219
    9. '<|end|>' → logprob: -15.375419616699219
    10. '[' → logprob: -15.500419616699219

Token 649: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.190178904333152e-05
    2. ' a' → logprob: -10.625031471252441
    3. '   ' → logprob: -11.875031471252441
    4. '	a' → logprob: -15.250031471252441
    5. '       ' → logprob: -15.750031471252441
    6. '[a' → logprob: -16.250032424926758
    7. ')a' → logprob: -16.750032424926758
    8. '#a' → logprob: -17.500032424926758
    9. ''a' → logprob: -17.875032424926758
    10. '    ' → logprob: -17.875032424926758

Token 650: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6882331371307373
    2. 'i' → logprob: -1.0632331371307373
    3. 'l' → logprob: -2.0632331371307373
    4. '[l' → logprob: -3.6882331371307373
    5. '	l' → logprob: -10.688233375549316
    6. '[' → logprob: -10.813233375549316
    7. '   ' → logprob: -10.813233375549316
    8. '```' → logprob: -11.188233375549316
    9. ' i' → logprob: -11.438233375549316
    10. '`' → logprob: -11.938233375549316

Token 651: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07935237884521484
    2. '])' → logprob: -2.579352378845215
    3. ')
' → logprob: -8.204352378845215
    4. ')]' → logprob: -9.704352378845215
    5. '))' → logprob: -10.454352378845215
    6. ')])' → logprob: -10.704352378845215
    7. '[i' → logprob: -10.829352378845215
    8. '])
' → logprob: -11.704352378845215
    9. ']' → logprob: -11.954352378845215
    10. '[' → logprob: -12.079352378845215

Token 652: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6932130455970764
    2. '       ' → logprob: -0.6932130455970764
    3. ' ' → logprob: -10.56821346282959
    4. '  ' → logprob: -11.31821346282959
    5. '           ' → logprob: -12.06821346282959
    6. '     ' → logprob: -12.06821346282959
    7. '      ' → logprob: -12.31821346282959
    8. '<|end|>' → logprob: -12.56821346282959
    9. '```' → logprob: -12.56821346282959
    10. '    ' → logprob: -12.69321346282959

Token 653: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07153137773275375
    2. 'ans' (adapté à ' ans') → logprob: -2.821531295776367
    3. '       ' → logprob: -4.696531295776367
    4. 'print' → logprob: -8.571531295776367
    5. '	ans' → logprob: -8.946531295776367
    6. '  ' → logprob: -10.821531295776367
    7. ' ans' → logprob: -11.321531295776367
    8. 'answer' → logprob: -11.446531295776367
    9. ' ' → logprob: -11.446531295776367
    10. 'l' → logprob: -11.696531295776367

Token 654: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2676088809967041
    2. '=' → logprob: -1.767608880996704
    3. ' +=' → logprob: -2.767608880996704
    4. '+=' → logprob: -6.767608642578125
    5. ',' → logprob: -9.642608642578125
    6. ' ' → logprob: -11.142608642578125
    7. ' ,' → logprob: -12.642608642578125
    8. '+' → logprob: -12.767608642578125
    9. '[' → logprob: -14.392608642578125
    10. ')' → logprob: -14.517608642578125

Token 655: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.3868725001811981
    2. ' update' → logprob: -1.1368725299835205
    3. '(update' → logprob: -14.011872291564941
    4. '_update' → logprob: -15.261872291564941
    5. '	update' → logprob: -15.636872291564941
    6. '.update' → logprob: -16.011873245239258
    7. 'ans' → logprob: -17.386873245239258
    8. ' ans' → logprob: -17.511873245239258
    9. ' ' → logprob: -17.636873245239258
    10. '   ' → logprob: -18.011873245239258

Token 656: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -1.318681188422488e-05
    2. 'ans' → logprob: -11.62501335144043
    3. '(ans' → logprob: -13.00001335144043
    4. '(_' → logprob: -14.25001335144043
    5. '_answer' → logprob: -14.62501335144043
    6. ' _' → logprob: -15.50001335144043
    7. '_ant' → logprob: -16.12501335144043
    8. '_an' → logprob: -16.50001335144043
    9. '```' → logprob: -16.87501335144043
    10. 'Ans' → logprob: -17.12501335144043

Token 657: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -8.77627644513268e-06
    2. 'ans' → logprob: -12.125008583068848
    3. '(' → logprob: -12.875008583068848
    4. '(
' → logprob: -14.625008583068848
    5. '(answer' → logprob: -16.250009536743164
    6. '	ans' → logprob: -16.500009536743164
    7. '```' → logprob: -16.750009536743164
    8. ' (' → logprob: -16.875009536743164
    9. ' ans' → logprob: -17.625009536743164
    10. '_ans' → logprob: -17.750009536743164

Token 658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008653691969811916
    2. '(ans' → logprob: -4.75865364074707
    3. ' ans' → logprob: -11.00865364074707
    4. ')' → logprob: -11.25865364074707
    5. ' ,' → logprob: -12.50865364074707
    6. 'ans' → logprob: -12.88365364074707
    7. '(' → logprob: -13.75865364074707
    8. '	ans' → logprob: -14.13365364074707
    9. '```' → logprob: -14.25865364074707
    10. '),' → logprob: -15.38365364074707

Token 659: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0004307884373702109
    2. ' r' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.500431060791016
    4. '	r' → logprob: -17.375431060791016
    5. 'ans' → logprob: -17.875431060791016
    6. '
' → logprob: -19.500431060791016
    7. '(r' → logprob: -20.250431060791016
    8. ' ans' → logprob: -20.500431060791016
    9. 'rans' → logprob: -20.750431060791016
    10. '    
' → logprob: -20.875431060791016

Token 660: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028255043434910476
    2. ' ,' → logprob: -8.250282287597656
    3. ',i' → logprob: -11.500282287597656
    4. ',l' → logprob: -11.500282287597656
    5. '   ' → logprob: -15.250282287597656
    6. ',r' → logprob: -15.625282287597656
    7. ',n' → logprob: -15.750282287597656
    8. ',
' → logprob: -16.375282287597656
    9. '```' → logprob: -16.750282287597656
    10. ')' → logprob: -17.000282287597656

Token 661: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.008761228993535042
    2. 'i' → logprob: -4.758761405944824
    3. ' l' → logprob: -8.883761405944824
    4. ' i' → logprob: -11.883761405944824
    5. '   ' → logprob: -14.758761405944824
    6. '```' → logprob: -14.883761405944824
    7. ')' → logprob: -15.633761405944824
    8. '	l' → logprob: -16.383760452270508
    9. '       ' → logprob: -16.758760452270508
    10. ' ' → logprob: -16.758760452270508

Token 662: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005364664364606142
    2. ',' → logprob: -5.255364894866943
    3. ')
' → logprob: -9.630364418029785
    4. '   ' → logprob: -10.630364418029785
    5. '+' → logprob: -10.880364418029785
    6. ',i' → logprob: -11.755364418029785
    7. ' )' → logprob: -12.630364418029785
    8. ')i' → logprob: -12.630364418029785
    9. '<|end|>' → logprob: -13.380364418029785
    10. '+i' → logprob: -13.755364418029785

Token 663: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03281118720769882
    2. '
' → logprob: -3.532811164855957
    3. '<|end|>' → logprob: -6.032811164855957
    4. 'return' → logprob: -8.532811164855957
    5. ' return' → logprob: -8.782811164855957
    6. '    
' → logprob: -8.907811164855957
    7. '	return' → logprob: -9.782811164855957
    8. '\n' → logprob: -10.282811164855957
    9. '```' → logprob: -10.407811164855957
    10. '<|end|>' → logprob: -12.157811164855957

Token 664: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014835550682619214
    2. 'return' → logprob: -6.75148344039917
    3. 'print' (adapté à ' print') → logprob: -8.501483917236328
    4. ' return' → logprob: -9.626483917236328
    5. '```' → logprob: -10.501483917236328
    6. '	return' → logprob: -11.751483917236328
    7. '    
' → logprob: -12.501483917236328
    8. ' print' → logprob: -14.001483917236328
    9. '<|end|>' → logprob: -14.001483917236328
    10. '
' → logprob: -14.126483917236328

Token 665: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.62500286102295
    3. 'ans' → logprob: -13.75000286102295
    4. '(
' → logprob: -14.62500286102295
    5. '(answer' → logprob: -17.750001907348633
    6. '()' → logprob: -19.000001907348633
    7. '	ans' → logprob: -19.500001907348633
    8. '(an' → logprob: -19.625001907348633
    9. '(abs' → logprob: -19.750001907348633
    10. ' (' → logprob: -19.875001907348633

Token 666: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -15.625000953674316
    4. ')`' → logprob: -16.250001907348633
    5. '()' → logprob: -16.500001907348633
    6. '())' → logprob: -17.500001907348633
    7. '')' → logprob: -18.000001907348633
    8. '))' → logprob: -18.750001907348633
    9. ')#' → logprob: -19.375001907348633
    10. '`)' → logprob: -19.375001907348633

Token 667: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011306697502732277
    2. '<|end|>' → logprob: -5.3863067626953125
    3. '
' → logprob: -5.7613067626953125
    4. '#' → logprob: -6.6363067626953125
    5. 'main' → logprob: -7.0113067626953125
    6. ' if' → logprob: -7.3863067626953125
    7. '```' → logprob: -8.011306762695312
    8. '[' → logprob: -9.136306762695312
    9. '<|end|>' → logprob: -9.636306762695312
    10. '_' → logprob: -10.511306762695312

Token 668: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 666
Tokens correctement prédits (1ère position, stricte): 258
Tokens correctement prédits (1ère position, avec adaptation): 281
Tokens correctement prédits (top 10): 562
Précision stricte (1ère position): 38.74%
Précision adaptée (1ère position): 42.19%
Précision (top 10): 84.38%
================================================================================
