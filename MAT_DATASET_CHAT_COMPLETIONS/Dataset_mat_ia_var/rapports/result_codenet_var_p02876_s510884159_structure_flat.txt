================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import heapq
import sys,random

input = sys.stdin.readline

N = int(input())
beam = [tuple(map(int, input().split())) for i in range(N)]
beam.sort(key=lambda x: x[1])
data = [min(0, beam[i][0] - beam[i][1]) for i in range(N)]
for i in range(N - 2, -1, -1):
    data[i] += data[i + 1]
cummin = [beam[i][1] for i in range(N)]
for i in range(N):
    if beam[i][0] - beam[i][1] > 0:
        cummin[i] = 10 ** 15
for i in range(N - 2, -1, -1):
    cummin[i] = min(cummin[i], cummin[i + 1])
ide_ele = 10 ** 15
def segfunc(x, y):
    return min(x, y)
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def SegTree_build(init_val, segfunc, ide_ele):
    n = len(init_val)
    num = 1 << (n - 1).bit_length()
    tree = [ide_ele] * 2 * num
    for i in range(n):
        tree[num + i] = init_val[i]
    for i in range(num - 1, 0, -1):
        tree[i] = segfunc(tree[2 * i], tree[2 * i + 1])
    return tree, num

def SegTree_update(tree, num, segfunc, k, x):
    k += num
    tree[k] = x
    while k > 1:
        tree[k >> 1] = segfunc(tree[k], tree[k ^ 1])
        k >>= 1

def SegTree_query(tree, num, segfunc, ide_ele, l, r):
    res = ide_ele
    l += num
    r += num
    while l < r:
        if l & 1:
            res = segfunc(res, tree[l])
            l += 1
        if r & 1:
            res = segfunc(res, tree[r - 1])
        l >>= 1
        r >>= 1
    return res

start = 0
end = N
while end - start > 1:
    m = (end + start) // 2
    if m == 0:
        if data[0] <= 0:
            start = m
        else:
            end = m
        continue
    que = []
    cnt = 0
    S = 0
    ok = False
    for i in range(N - 1):
        if cnt == m:
            test = -que[0]
            if beam[i][0] < test:
                heapq.heappop(que)
                heapq.heappush(que, -beam[i][0])
                S += beam[i][0] - test
        else:
            heapq.heappush(que, -beam[i][0])
            S += beam[i][0]
            cnt += 1
        if cnt == m:
            test2 = S + data[i + 1]
            if test2 <= 0:
                ok = True
                break
    if ok:
        start = m
    else:
        end = m

if data[0] > 0:
    print(0, 1)
    sys.exit()

m = start
ans = [0, 1]
que = []
cnt = 0
S = 0
if m != 0:
    for i in range(N - 1):
        if cnt == m:
            test = -que[0]
            if beam[i][0] < test:
                heapq.heappop(que)
                heapq.heappush(que, -beam[i][0])
                S += beam[i][0] - test
        else:
            heapq.heappush(que, -beam[i][0])
            S += beam[i][0]
            cnt += 1
        if cnt == m:
            test2 = S + data[i + 1]
            B = cummin[i + 1]
            if test2 <= 0:
                t = abs(test2)
                if B * ans[0] < ans[1] * t:
                    ans = [t, B]
    start_arr = [-1] * N
    end_arr = [-1] * N
    que = []
    trash = []
    cnt = 0
    S = 0
    data1 = [ide_ele] * N
    data2 = [ide_ele] * N
    for i in range(N):
        if cnt == m:
            val, idx = que[0]
            val = -val
            if val > beam[i][0]:
                heapq.heappop(que)
                heapq.heappush(trash, val)
                end_arr[idx] = i - 1
                heapq.heappush(que, (-beam[i][0], i))
                start_arr[i] = i
                S += beam[i][0] - val
            else:
                heapq.heappush(trash, beam[i][0])
        else:
            heapq.heappush(que, (-beam[i][0], i))
            start_arr[i] = i
            S += beam[i][0]
            cnt += 1
        if cnt == m:
            if i != N - 1:
                data1[i] = S + data[i + 1]
                if trash:
                    data2[i] = S + data[i + 1] + trash[0]
                else:
                    data2[i] = S + data[i + 1]
            else:
                data1[i] = S
                data2[i] = S + (trash[0] if trash else 0)
    for i in range(N):
        if start_arr[i] != -1 and end_arr[i] == -1:
            end_arr[i] = N - 1
    tree1, num1 = SegTree_build(data1, segfunc, ide_ele)
    tree2, num2 = SegTree_build(data2, segfunc, ide_ele)
    for i in range(m):
        if end_arr[i] == m - 1:
            temp = SegTree_query(tree1, num1, segfunc, ide_ele, m, N)
            temp += beam[i][0] - beam[i][1]
            if temp <= 0:
                temp2 = abs(temp)
                B = beam[i][1]
                if B * ans[0] < ans[1] * temp2:
                    ans = [temp2, B]
        else:
            L, R = m, end_arr[i]
            temp = SegTree_query(tree2, num2, segfunc, ide_ele, L, R + 1) - beam[i][0]
            temp += beam[i][0] - beam[i][1]
            if temp <= 0:
                temp2 = abs(temp)
                B = beam[i][1]
                if B * ans[0] < ans[1] * temp2:
                    ans = [temp2, B]
            temp = SegTree_query(tree1, num1, segfunc, ide_ele, R + 1, N)
            temp += beam[i][0] - beam[i][1]
            if temp <= 0:
                temp2 = abs(temp)
                B = beam[i][1]
                if B * ans[0] < ans[1] * temp2:
                    ans = [temp2, B]
    for i in range(m, N):
        if beam[i][0] - beam[i][1] <= 0:
            if start_arr[i] == -1:
                temp = SegTree_query(tree1, num1, segfunc, ide_ele, i, N)
                temp += beam[i][0] - beam[i][1]
                if temp <= 0:
                    temp2 = abs(temp)
                    B = beam[i][1]
                    if B * ans[0] < ans[1] * temp2:
                        ans = [temp2, B]
            else:
                L = start_arr[i]
                R = end_arr[i]
                temp = SegTree_query(tree2, num2, segfunc, ide_ele, L, R + 1) - beam[i][0]
                temp += beam[i][0] - beam[i][1]
                if temp <= 0:
                    temp2 = abs(temp)
                    B = beam[i][1]
                    if B * ans[0] < ans[1] * temp2:
                        ans = [temp2, B]
                temp = SegTree_query(tree1, num1, segfunc, ide_ele, R + 1, N)
                temp += beam[i][0] - beam[i][1]
                if temp <= 0:
                    temp2 = abs(temp)
                    B = beam[i][1]
                    if B * ans[0] < ans[1] * temp2:
                        ans = [temp2, B]
        else:
            if start_arr[i] == -1:
                temp = SegTree_query(tree1, num1, segfunc, ide_ele, m - 1, N)
                temp += beam[i][0] - beam[i][1]
                if temp <= 0:
                    temp2 = abs(temp)
                    B = beam[i][1]
                    if B * ans[0] < ans[1] * temp2:
                        ans = [temp2, B]
            else:
                L = start_arr[i]
                R = end_arr[i]
                temp = SegTree_query(tree2, num2, segfunc, ide_ele, L, R + 1) - beam[i][0]
                temp += beam[i][0] - beam[i][1]
                if temp <= 0:
                    temp2 = abs(temp)
                    B = beam[i][1]
                    if B * ans[0] < ans[1] * temp2:
                        ans = [temp2, B]
                temp = min(SegTree_query(tree1, num1, segfunc, ide_ele, R + 1, N), SegTree_query(tree1, num1, segfunc, ide_ele, m - 1, L))
                temp += beam[i][0] - beam[i][1]
                if temp <= 0:
                    temp2 = abs(temp)
                    B = beam[i][1]
                    if B * ans[0] < ans[1] * temp2:
                        ans = [temp2, B]
else:
    for i in range(N):
        test = data[i]
        B = cummin[i]
        if test <= 0:
            t = abs(test)
            if B * ans[0] < ans[1] * t:
                ans = [t, B]
    M = min(data)
    for i in range(N):
        if beam[i][0] - beam[i][1] > 0:
            temp = M + beam[i][0] - beam[i][1]
            if temp <= 0:
                temp2 = abs(temp)
                B = beam[i][1]
                if B * ans[0] < ans[1] * temp2:
                    ans = [temp2, B]
p, q = ans
res = [q * m + p, N * q]
g = gcd(res[0], res[1])
print(res[0] // g, res[1] // g)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -7.278864359250292e-05
    2. '(' → logprob: -10.250072479248047
    3. '.\' → logprob: -11.625072479248047
    4. '."""' → logprob: -11.750072479248047
    5. '```' → logprob: -12.875072479248047
    6. '\' → logprob: -12.875072479248047
    7. '.​' → logprob: -13.000072479248047
    8. ' .' → logprob: -13.250072479248047
    9. '.`' → logprob: -13.625072479248047
    10. '[' → logprob: -14.125072479248047

Token 4: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007606726721860468
    2. '\' → logprob: -8.125761032104492
    3. '(' → logprob: -8.625761032104492
    4. '<|end|>' → logprob: -9.750761032104492
    5. '```' → logprob: -10.000761032104492
    6. '.
' → logprob: -10.250761032104492
    7. '.

' → logprob: -10.625761032104492
    8. '\n' → logprob: -11.000761032104492
    9. '

' → logprob: -11.000761032104492
    10. '
' → logprob: -11.125761032104492

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.08531453460454941
    2. ' collections' → logprob: -3.2103145122528076
    3. ' math' → logprob: -3.7103145122528076
    4. ' itertools' → logprob: -4.335314750671387
    5. ' threading' → logprob: -6.335314750671387
    6. ' os' → logprob: -6.960314750671387
    7. 'sys' → logprob: -7.960314750671387
    8. ' re' → logprob: -7.960314750671387
    9. 'collections' → logprob: -8.835314750671387
    10. ' queue' → logprob: -9.585314750671387

Token 6: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6809743642807007
    2. '\n' → logprob: -1.3059743642807007
    3. '\' → logprob: -1.6809743642807007
    4. '
' → logprob: -3.8059744834899902
    5. '.
' → logprob: -5.55597448348999
    6. '```' → logprob: -5.55597448348999
    7. 'newline' → logprob: -6.43097448348999
    8. '[' → logprob: -6.43097448348999
    9. '

' → logprob: -7.30597448348999
    10. '.

' → logprob: -7.30597448348999

Token 7: 'random' (ID: 22568)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.09069010615348816
    2. ' os' → logprob: -2.4656901359558105
    3. 'collections' → logprob: -7.0906901359558105
    4. 'io' → logprob: -7.5906901359558105
    5. ' collections' → logprob: -8.965689659118652
    6. 'time' → logprob: -9.465689659118652
    7. 'math' → logprob: -10.090689659118652
    8. 'heap' → logprob: -10.090689659118652
    9. ' itertools' → logprob: -10.340689659118652
    10. ' getopt' → logprob: -10.715689659118652

Token 8: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3515680134296417
    2. '
' → logprob: -1.8515679836273193
    3. '\' → logprob: -2.7265679836273193
    4. '```' → logprob: -3.9765679836273193
    5. '' → logprob: -4.601568222045898
    6. 'newline' → logprob: -4.851568222045898
    7. '.' → logprob: -4.976568222045898
    8. '<|end|>' → logprob: -4.976568222045898
    9. '

' → logprob: -5.226568222045898
    10. ',' → logprob: -5.351568222045898

Token 9: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8873722553253174
    2. '\n' → logprob: -1.2623722553253174
    3. '\' → logprob: -2.0123722553253174
    4. 'def' → logprob: -2.6373722553253174
    5. '' → logprob: -3.7623722553253174
    6. '#' → logprob: -4.012372016906738
    7. '

' → logprob: -4.512372016906738
    8. 'data' → logprob: -5.012372016906738
    9. ',' → logprob: -5.387372016906738
    10. '
' → logprob: -5.637372016906738

Token 10: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07801038771867752
    2. '.' → logprob: -2.703010320663452
    3. '=' → logprob: -5.828010559082031
    4. ')' → logprob: -5.828010559082031
    5. '()' → logprob: -7.453010559082031
    6. '<|end|>' → logprob: -8.078010559082031
    7. '[' → logprob: -8.203010559082031
    8. '.readline' → logprob: -8.203010559082031
    9. ' =' → logprob: -8.703010559082031
    10. ' (' → logprob: -8.703010559082031

Token 11: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.03685932978987694
    2. 'sys' → logprob: -3.6618592739105225
    3. ' input' → logprob: -5.161859512329102
    4. 'input' → logprob: -5.411859512329102
    5. '(sys' → logprob: -9.286859512329102
    6. '	sys' → logprob: -9.286859512329102
    7. '=sys' → logprob: -10.286859512329102
    8. ' lambda' → logprob: -10.536859512329102
    9. ' ' → logprob: -10.911859512329102
    10. ' iter' → logprob: -10.911859512329102

Token 12: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.011183747090399265
    2. '.' → logprob: -5.011183738708496
    3. '.stdout' → logprob: -5.761183738708496
    4. ' .' → logprob: -7.261183738708496
    5. '.readline' → logprob: -8.136183738708496
    6. '.argv' → logprob: -9.386183738708496
    7. '.std' → logprob: -9.886183738708496
    8. '.input' → logprob: -10.011183738708496
    9. '.version' → logprob: -10.511183738708496
    10. '.next' → logprob: -10.636183738708496

Token 13: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00878237932920456
    2. '.' → logprob: -4.883782386779785
    3. '.read' → logprob: -6.758782386779785
    4. 'read' → logprob: -12.008782386779785
    5. '.readlines' → logprob: -12.258782386779785
    6. '.Read' → logprob: -13.758782386779785
    7. '.\' → logprob: -14.133782386779785
    8. '<|end|>' → logprob: -14.258782386779785
    9. ' readline' → logprob: -14.633782386779785
    10. '.buffer' → logprob: -14.633782386779785

Token 14: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4369928240776062
    2. '()' → logprob: -1.061992883682251
    3. '(
' → logprob: -5.561992645263672
    4. '()
' → logprob: -6.311992645263672
    5. ')' → logprob: -7.311992645263672
    6. 'random' → logprob: -8.061992645263672
    7. '()

' → logprob: -8.186992645263672
    8. '(n' → logprob: -8.811992645263672
    9. '
' → logprob: -9.061992645263672
    10. '()\' → logprob: -9.311992645263672

Token 15: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15410655736923218
    2. 'def' → logprob: -2.154106616973877
    3. 'class' → logprob: -4.779106616973877
    4. '(n' → logprob: -5.279106616973877
    5. '
' → logprob: -6.029106616973877
    6. 'random' → logprob: -6.029106616973877
    7. 'num' → logprob: -6.779106616973877
    8. '\n' → logprob: -6.779106616973877
    9. 'a' → logprob: -7.029106616973877
    10. 'data' → logprob: -7.154106616973877

Token 16: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6442205309867859
    2. ' =' → logprob: -0.8942205309867859
    3. '=' → logprob: -2.8942205905914307
    4. ',' → logprob: -5.394220352172852
    5. '<|end|>' → logprob: -6.519220352172852
    6. ')' → logprob: -6.644220352172852
    7. '  ' → logprob: -6.894220352172852
    8. ' ,' → logprob: -7.269220352172852
    9. ' )' → logprob: -7.519220352172852
    10. '>' → logprob: -8.269220352172852

Token 17: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2536175549030304
    2. 'int' → logprob: -1.503617525100708
    3. ' ' → logprob: -7.128617763519287
    4. '10' → logprob: -7.628617763519287
    5. ' random' → logprob: -9.003617286682129
    6. '20' → logprob: -9.128617286682129
    7. '=int' → logprob: -9.753617286682129
    8. 'random' → logprob: -9.878617286682129
    9. '0' → logprob: -11.128617286682129
    10. '5' → logprob: -11.628617286682129

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25240451097488403
    2. '(input' → logprob: -1.5024044513702393
    3. '('' → logprob: -8.12740421295166
    4. '(N' → logprob: -8.87740421295166
    5. 'input' → logprob: -11.12740421295166
    6. '()' → logprob: -12.37740421295166
    7. ' (' → logprob: -12.50240421295166
    8. '(`' → logprob: -12.50240421295166
    9. '("' → logprob: -12.87740421295166
    10. '(
' → logprob: -13.00240421295166

Token 19: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13369549810886383
    2. '()' → logprob: -2.508695602416992
    3. ')' → logprob: -3.133695602416992
    4. '(' → logprob: -8.758695602416992
    5. ' ())' → logprob: -10.508695602416992
    6. '())
' → logprob: -11.758695602416992
    7. '().' → logprob: -12.508695602416992
    8. '()))' → logprob: -12.758695602416992
    9. '()
' → logprob: -12.883695602416992
    10. ' )' → logprob: -13.383695602416992

Token 20: 'beam' (ID: 95917)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.6655052304267883
    2. 'arr' → logprob: -1.9155051708221436
    3. 'heap' → logprob: -2.6655051708221436
    4. 'numbers' → logprob: -2.6655051708221436
    5. 'result' → logprob: -3.5405051708221436
    6. 'items' → logprob: -4.540505409240723
    7. ' ' → logprob: -4.665505409240723
    8. 'a' → logprob: -4.665505409240723
    9. 'lst' → logprob: -4.790505409240723
    10. ')' → logprob: -4.790505409240723

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.042988695204257965
    2. '=' → logprob: -4.1679887771606445
    3. '_' → logprob: -4.5429887771606445
    4. ' ' → logprob: -5.1679887771606445
    5. '_size' → logprob: -5.4179887771606445
    6. 's' → logprob: -5.9179887771606445
    7. '=[]' → logprob: -5.9179887771606445
    8. '_s' → logprob: -8.917988777160645
    9. ' =[' → logprob: -9.417988777160645
    10. 'size' → logprob: -9.667988777160645

Token 22: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.16783522069454193
    2. '[]' → logprob: -2.042835235595703
    3. ' [' → logprob: -4.167835235595703
    4. ' [(' → logprob: -5.042835235595703
    5. '[(' → logprob: -6.542835235595703
    6. '[' → logprob: -6.667835235595703
    7. ' [[]' → logprob: -9.917835235595703
    8. ' [('' → logprob: -10.292835235595703
    9. ' [[' → logprob: -11.292835235595703
    10. ' ' → logprob: -11.417835235595703

Token 23: 'tuple' (ID: 52834)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13147620856761932
    2. '()]' → logprob: -2.6314761638641357
    3. '(random' → logprob: -3.5064761638641357
    4. ']' → logprob: -5.006476402282715
    5. '(input' → logprob: -5.631476402282715
    6. '([],' → logprob: -6.006476402282715
    7. '(int' → logprob: -6.631476402282715
    8. '()' → logprob: -6.881476402282715
    9. '(float' → logprob: -7.006476402282715
    10. '(tuple' → logprob: -7.256476402282715

Token 24: '(map' (ID: 16946)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.018971875309944153
    2. '(random' → logprob: -4.768971920013428
    3. '()' → logprob: -5.518971920013428
    4. '(range' → logprob: -5.893971920013428
    5. '([' → logprob: -6.018971920013428
    6. '(map' → logprob: -7.768971920013428
    7. ']' → logprob: -8.64397144317627
    8. '(input' → logprob: -9.01897144317627
    9. '(' → logprob: -9.39397144317627
    10. '(),' → logprob: -9.51897144317627

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004896434955298901
    2. '(' → logprob: -5.379896640777588
    3. '(str' → logprob: -9.37989616394043
    4. ',int' → logprob: -9.50489616394043
    5. ')' → logprob: -10.62989616394043
    6. '(input' → logprob: -10.87989616394043
    7. '(ord' → logprob: -11.25489616394043
    8. '<|end|>' → logprob: -11.50489616394043
    9. '<int' → logprob: -11.62989616394043
    10. '[int' → logprob: -11.75489616394043

Token 26: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10819464176893234
    2. ',input' → logprob: -2.608194589614868
    3. '(' → logprob: -3.983194589614868
    4. ',' → logprob: -4.733194828033447
    5. 'input' → logprob: -6.858194828033447
    6. ')' → logprob: -8.608194351196289
    7. '(),' → logprob: -9.733194351196289
    8. ',(' → logprob: -10.733194351196289
    9. ' input' → logprob: -10.983194351196289
    10. '=input' → logprob: -10.983194351196289

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31416580080986023
    2. ' input' → logprob: -1.3141658306121826
    3. ')' → logprob: -7.5641655921936035
    4. '(input' → logprob: -8.189166069030762
    5. ',input' → logprob: -9.939166069030762
    6. '))' → logprob: -11.439166069030762
    7. ' ' → logprob: -11.689166069030762
    8. '	input' → logprob: -11.939166069030762
    9. '[input' → logprob: -11.939166069030762
    10. ' )' → logprob: -11.939166069030762

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. ' ().' → logprob: -15.250000953674316
    3. '()))' → logprob: -15.375000953674316
    4. '()' → logprob: -16.125
    5. '.split' → logprob: -19.125
    6. '.' → logprob: -20.25
    7. 'split' → logprob: -20.75
    8. '(' → logprob: -20.75
    9. '()
' → logprob: -21.0
    10. '())' → logprob: -21.75

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.036285605281591415
    2. 'strip' → logprob: -3.536285638809204
    3. 'rstrip' → logprob: -5.036285400390625
    4. ' split' → logprob: -11.286285400390625
    5. '(split' → logprob: -13.911285400390625
    6. 'read' → logprob: -14.161285400390625
    7. 'rs' → logprob: -14.286285400390625
    8. ' ' → logprob: -14.911285400390625
    9. ' strip' → logprob: -15.661285400390625
    10. ')' → logprob: -15.786285400390625

Token 30: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.14649280905723572
    2. '))' → logprob: -2.0214927196502686
    3. '())' → logprob: -6.021492958068848
    4. '()' → logprob: -7.396492958068848
    5. '(' → logprob: -7.896492958068848
    6. ')' → logprob: -8.146492958068848
    7. '())))' → logprob: -10.146492958068848
    8. ')))' → logprob: -10.771492958068848
    9. '('' → logprob: -11.521492958068848
    10. '()),' → logprob: -11.771492958068848

Token 31: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.055060677230358124
    2. ')]' → logprob: -3.305060625076294
    3. ')' → logprob: -4.680060863494873
    4. ' for' → logprob: -5.805060863494873
    5. '()]' → logprob: -6.180060863494873
    6. 'for' → logprob: -6.555060863494873
    7. ',' → logprob: -7.805060863494873
    8. ' ]' → logprob: -8.055060386657715
    9. '`]' → logprob: -9.680060386657715
    10. ']
' → logprob: -9.805060386657715

Token 32: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7775614261627197
    2. ' range' → logprob: -0.7775614261627197
    3. 'range' → logprob: -2.5275614261627197
    4. ' _' → logprob: -7.402561187744141
    5. '_range' → logprob: -7.902561187744141
    6. '	range' → logprob: -10.02756118774414
    7. '(range' → logprob: -10.40256118774414
    8. ' ' → logprob: -10.65256118774414
    9. 'i' → logprob: -11.65256118774414
    10. ' i' → logprob: -12.52756118774414

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07904775440692902
    2. 'in' → logprob: -2.579047679901123
    3. 'range' → logprob: -9.204048156738281
    4. ' ' → logprob: -10.579048156738281
    5. ' range' → logprob: -10.579048156738281
    6. '  ' → logprob: -13.329048156738281
    7. '_' → logprob: -13.704048156738281
    8. '	in' → logprob: -14.329048156738281
    9. '(range' → logprob: -14.704048156738281
    10. '_in' → logprob: -14.829048156738281

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2014244645833969
    2. 'range' → logprob: -1.701424479484558
    3. '	range' → logprob: -11.576424598693848
    4. ' ' → logprob: -13.701424598693848
    5. '(range' → logprob: -15.201424598693848
    6. ' xrange' → logprob: -15.326424598693848
    7. '_range' → logprob: -17.20142364501953
    8. 'rang' → logprob: -17.32642364501953
    9. '.range' → logprob: -17.57642364501953
    10. '  ' → logprob: -17.57642364501953

Token 35: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0036023214925080538
    2. '(' → logprob: -5.628602504730225
    3. '(
' → logprob: -13.753602027893066
    4. '(n' → logprob: -14.003602027893066
    5. 'N' → logprob: -15.628602027893066
    6. ' (' → logprob: -16.753602981567383
    7. '(

' → logprob: -17.128602981567383
    8. ')' → logprob: -17.878602981567383
    9. '	N' → logprob: -18.253602981567383
    10. '(len' → logprob: -18.503602981567383

Token 36: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0013182159746065736
    2. ')' → logprob: -6.751317977905273
    3. ']' → logprob: -8.876317977905273
    4. ')])' → logprob: -13.126317977905273
    5. ')]
' → logprob: -13.626317977905273
    6. ')],' → logprob: -13.876317977905273
    7. '])]' → logprob: -13.876317977905273
    8. ' )' → logprob: -14.126317977905273
    9. '')]' → logprob: -14.751317977905273
    10. '))' → logprob: -14.751317977905273

Token 37: 'beam' (ID: 95917)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32162871956825256
    2. 'for' → logprob: -2.3216288089752197
    3. '' → logprob: -3.1966288089752197
    4. '\n' → logprob: -3.8216288089752197
    5. '#' → logprob: -3.9466288089752197
    6. 'beam' → logprob: -4.321628570556641
    7. '[' → logprob: -4.446628570556641
    8. 'max' → logprob: -4.446628570556641
    9. 'sorted' → logprob: -4.571628570556641
    10. '
' → logprob: -5.071628570556641

Token 38: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.039372287690639496
    2. '(' → logprob: -3.289372205734253
    3. '(reverse' → logprob: -7.414372444152832
    4. '(key' → logprob: -7.539372444152832
    5. '((' → logprob: -9.539372444152832
    6. '(()' → logprob: -10.039372444152832
    7. '()
' → logprob: -10.539372444152832
    8. ' ()' → logprob: -11.914372444152832
    9. '()]' → logprob: -12.289372444152832
    10. '())' → logprob: -12.414372444152832

Token 40: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.005234475247561932
    2. '=' → logprob: -5.255234241485596
    3. '=len' → logprob: -14.755234718322754
    4. 'lambda' → logprob: -16.630233764648438
    5. '=item' → logprob: -17.005233764648438
    6. '=l' → logprob: -17.130233764648438
    7. '=_' → logprob: -17.380233764648438
    8. '=int' → logprob: -17.505233764648438
    9. '=}' → logprob: -17.630233764648438
    10. '=str' → logprob: -17.755233764648438

Token 41: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.17978008091449738
    2. 'x' → logprob: -1.804780125617981
    3. ' s' → logprob: -11.679780006408691
    4. ' a' → logprob: -12.179780006408691
    5. ' lambda' → logprob: -12.304780006408691
    6. 'e' → logprob: -12.554780006408691
    7. 's' → logprob: -12.804780006408691
    8. 'a' → logprob: -13.179780006408691
    9. ' ' → logprob: -13.429780006408691
    10. ' b' → logprob: -13.554780006408691

Token 42: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030075587332248688
    2. ':x' → logprob: -3.5300755500793457
    3. ' :' → logprob: -8.280076026916504
    4. 'x' → logprob: -9.905076026916504
    5. ' x' → logprob: -11.905076026916504
    6. ':
' → logprob: -12.030076026916504
    7. ':int' → logprob: -13.405076026916504
    8. '=' → logprob: -14.030076026916504
    9. ' ' → logprob: -14.530076026916504
    10. ':return' → logprob: -14.530076026916504

Token 43: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2592954933643341
    2. ' x' → logprob: -1.5092954635620117
    3. '-x' → logprob: -5.884295463562012
    4. ' -' → logprob: -6.134295463562012
    5. '-' → logprob: -6.134295463562012
    6. ' lambda' → logprob: -9.259295463562012
    7. 'lambda' → logprob: -10.009295463562012
    8. ' (' → logprob: -10.759295463562012
    9. '-l' → logprob: -11.134295463562012
    10. '(x' → logprob: -11.134295463562012

Token 44: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0018430864438414574
    2. ')' → logprob: -6.876842975616455
    3. '.' → logprob: -7.376842975616455
    4. ':' → logprob: -8.876843452453613
    5. ' )' → logprob: -11.876843452453613
    6. '1' → logprob: -12.001843452453613
    7. ' [' → logprob: -12.126843452453613
    8. '0' → logprob: -12.251843452453613
    9. '[:' → logprob: -12.876843452453613
    10. '[::-' → logprob: -12.876843452453613

Token 45: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43101492524147034
    2. '1' → logprob: -1.056014895439148
    3. '-' → logprob: -6.4310150146484375
    4. ' ' → logprob: -7.3060150146484375
    5. ' -' → logprob: -11.431015014648438
    6. '2' → logprob: -11.806015014648438
    7. ':' → logprob: -12.556015014648438
    8. '[' → logprob: -13.056015014648438
    9. '
' → logprob: -14.493515014648438
    10. '   ' → logprob: -14.493515014648438

Token 46: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003320545656606555
    2. ',' → logprob: -6.003320693969727
    3. '))' → logprob: -7.878320693969727
    4. '])' → logprob: -8.503320693969727
    5. ' )' → logprob: -9.003320693969727
    6. '),' → logprob: -9.878320693969727
    7. ')])' → logprob: -10.503320693969727
    8. ')]' → logprob: -10.628320693969727
    9. ',)' → logprob: -11.378320693969727
    10. '})' → logprob: -11.503320693969727

Token 47: 'data' (ID: 1074)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7425106763839722
    2. 'for' → logprob: -1.1175106763839722
    3. ')' → logprob: -2.7425107955932617
    4. '\n' → logprob: -3.6175107955932617
    5. ',' → logprob: -3.8675107955932617
    6. '#' → logprob: -3.8675107955932617
    7. '' → logprob: -4.367510795593262
    8. 'n' → logprob: -4.617510795593262
    9. ':' → logprob: -4.617510795593262
    10. ' for' → logprob: -5.367510795593262

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.338253378868103
    2. '=' → logprob: -1.338253378868103
    3. '[' → logprob: -4.338253498077393
    4. '_' → logprob: -5.588253498077393
    5. 's' → logprob: -6.088253498077393
    6. ' ' → logprob: -6.088253498077393
    7. '[:]' → logprob: -6.838253498077393
    8. '=[]' → logprob: -7.588253498077393
    9. ',' → logprob: -7.838253498077393
    10. '.' → logprob: -8.088253021240234

Token 49: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06872931122779846
    2. ' []' → logprob: -2.8187294006347656
    3. '[' → logprob: -5.068729400634766
    4. '[]
' → logprob: -8.568729400634766
    5. ' [' → logprob: -9.568729400634766
    6. '{}' → logprob: -9.693729400634766
    7. '[]}' → logprob: -9.943729400634766
    8. ' ' → logprob: -10.318729400634766
    9. '[]

' → logprob: -11.818729400634766
    10. '[],' → logprob: -12.068729400634766

Token 50: 'min' (ID: 1493)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5464807152748108
    2. '[]' → logprob: -1.546480655670166
    3. ']' → logprob: -2.296480655670166
    4. '(' → logprob: -3.046480655670166
    5. '()]' → logprob: -3.671480655670166
    6. '[' → logprob: -4.046480655670166
    7. 'x' → logprob: -5.546480655670166
    8. 'beam' → logprob: -5.796480655670166
    9. '()' → logprob: -6.421480655670166
    10. 'float' → logprob: -6.671480655670166

Token 51: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22045205533504486
    2. '(x' → logprob: -1.845452070236206
    3. '(data' → logprob: -4.470451831817627
    4. '(b' → logprob: -5.095451831817627
    5. '([' → logprob: -5.220451831817627
    6. '(
' → logprob: -5.720451831817627
    7. '(a' → logprob: -5.970451831817627
    8. '(i' → logprob: -5.970451831817627
    9. ']' → logprob: -6.095451831817627
    10. '(be' → logprob: -7.095451831817627

Token 52: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9247668385505676
    2. 'beam' → logprob: -1.2997667789459229
    3. 'b' → logprob: -2.299766778945923
    4. '(' → logprob: -2.549766778945923
    5. 'a' → logprob: -3.549766778945923
    6. '(x' → logprob: -3.799766778945923
    7. ')' → logprob: -3.924766778945923
    8. '[' → logprob: -4.174767017364502
    9. '(b' → logprob: -4.549767017364502
    10. 'i' → logprob: -5.174767017364502

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00485883466899395
    2. ')]' → logprob: -6.25485897064209
    3. ',x' → logprob: -7.50485897064209
    4. ' ,' → logprob: -7.62985897064209
    5. ']' → logprob: -7.75485897064209
    6. ',data' → logprob: -7.87985897064209
    7. ',len' → logprob: -8.62985897064209
    8. ',
' → logprob: -9.12985897064209
    9. ',key' → logprob: -9.12985897064209
    10. ',min' → logprob: -9.12985897064209

Token 54: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.1642991453409195
    2. ' beam' → logprob: -2.289299249649048
    3. 'x' → logprob: -3.289299249649048
    4. 'b' → logprob: -5.164299011230469
    5. ' x' → logprob: -5.539299011230469
    6. ')' → logprob: -7.789299011230469
    7. 'data' → logprob: -7.789299011230469
    8. '-' → logprob: -8.039299011230469
    9. ' b' → logprob: -8.164299011230469
    10. '-be' → logprob: -8.539299011230469

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3872123956680298
    2. '[' → logprob: -1.1372123956680298
    3. '[-' → logprob: -8.137212753295898
    4. '[x' → logprob: -11.137212753295898
    5. '[n' → logprob: -12.137212753295898
    6. '[j' → logprob: -12.137212753295898
    7. '[idx' → logprob: -12.262212753295898
    8. '[k' → logprob: -13.012212753295898
    9. '[len' → logprob: -13.137212753295898
    10. '[][' → logprob: -13.262212753295898

Token 56: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.034292131662368774
    2. '[' → logprob: -3.409292221069336
    3. ')[' → logprob: -8.409292221069336
    4. '-' → logprob: -9.034292221069336
    5. ']' → logprob: -9.034292221069336
    6. ' ][' → logprob: -9.034292221069336
    7. '1' → logprob: -11.971792221069336
    8. '])' → logprob: -12.096792221069336
    9. ' -' → logprob: -12.221792221069336
    10. '0' → logprob: -12.346792221069336

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015722397714853287
    2. '1' → logprob: -4.265722274780273
    3. '2' → logprob: -6.515722274780273
    4. ' ' → logprob: -9.765722274780273
    5. '3' → logprob: -12.203222274780273
    6. ']' → logprob: -12.703222274780273
    7. '[' → logprob: -12.828222274780273
    8. '5' → logprob: -13.578222274780273
    9. '4' → logprob: -13.703222274780273
    10. ')' → logprob: -13.828222274780273

Token 58: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4556100368499756
    2. '])' → logprob: -1.5806100368499756
    3. ')]' → logprob: -1.8306100368499756
    4. '-' → logprob: -2.0806100368499756
    5. ')])' → logprob: -2.2056100368499756
    6. '])]' → logprob: -2.3306100368499756
    7. ' -' → logprob: -3.2056100368499756
    8. ']' → logprob: -4.205610275268555
    9. ' ])' → logprob: -5.580610275268555
    10. ' )' → logprob: -5.830610275268555

Token 59: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23005248606204987
    2. '-' → logprob: -1.9800524711608887
    3. ' -' → logprob: -3.1050524711608887
    4. ')]' → logprob: -4.355052471160889
    5. ' )' → logprob: -5.480052471160889
    6. '+' → logprob: -6.105052471160889
    7. ' ' → logprob: -7.105052471160889
    8. '-)' → logprob: -7.230052471160889
    9. ' +' → logprob: -8.230052947998047
    10. '),' → logprob: -8.230052947998047

Token 60: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.008942726999521255
    2. ' beam' → logprob: -4.758942604064941
    3. 'data' → logprob: -9.508942604064941
    4. 'i' → logprob: -9.883942604064941
    5. '(' → logprob: -10.008942604064941
    6. 'be' → logprob: -10.133942604064941
    7. '1' → logprob: -10.508942604064941
    8. ')' → logprob: -11.258942604064941
    9. ' ' → logprob: -11.258942604064941
    10. ' i' → logprob: -11.571442604064941

Token 61: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25201043486595154
    2. '[i' → logprob: -1.502010464668274
    3. ')' → logprob: -10.252010345458984
    4. 's' → logprob: -11.252010345458984
    5. '[]' → logprob: -12.252010345458984
    6. ' ' → logprob: -12.252010345458984
    7. ']' → logprob: -12.377010345458984
    8. 'i' → logprob: -12.627010345458984
    9. ' [' → logprob: -13.064510345458984
    10. '[][' → logprob: -13.439510345458984

Token 62: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06404387205839157
    2. '1' → logprob: -3.0640437602996826
    3. '-' → logprob: -4.439043998718262
    4. '[' → logprob: -6.189043998718262
    5. ']' → logprob: -7.189043998718262
    6. ' -' → logprob: -7.689043998718262
    7. ' ][' → logprob: -9.439043998718262
    8. '0' → logprob: -9.939043998718262
    9. ' ' → logprob: -10.251543998718262
    10. '+' → logprob: -11.001543998718262

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005043004639446735
    2. '0' → logprob: -7.875504493713379
    3. '[' → logprob: -10.000504493713379
    4. ' ' → logprob: -11.000504493713379
    5. '-' → logprob: -11.313004493713379
    6. ']' → logprob: -11.313004493713379
    7. '2' → logprob: -11.750504493713379
    8. '])' → logprob: -12.125504493713379
    9. '```' → logprob: -12.813004493713379
    10. 'i' → logprob: -12.938004493713379

Token 64: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008672957308590412
    2. ' )' → logprob: -5.258673191070557
    3. ')]' → logprob: -6.383673191070557
    4. '+' → logprob: -6.883673191070557
    5. ' +' → logprob: -8.633672714233398
    6. ' ' → logprob: -9.133672714233398
    7. ')])' → logprob: -9.258672714233398
    8. '-' → logprob: -9.383672714233398
    9. ' for' → logprob: -10.133672714233398
    10. '))' → logprob: -10.383672714233398

Token 65: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.395411878824234
    2. ' for' → logprob: -1.2704118490219116
    3. 'for' → logprob: -3.395411968231201
    4. ']' → logprob: -5.145411968231201
    5. ' )' → logprob: -5.770411968231201
    6. ',' → logprob: -6.770411968231201
    7. ')]' → logprob: -6.895411968231201
    8. ' ' → logprob: -7.270411968231201
    9. ' ]' → logprob: -8.145411491394043
    10. '])' → logprob: -10.020411491394043

Token 66: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04074708744883537
    2. ' i' → logprob: -3.2907471656799316
    3. 'range' → logprob: -6.040747165679932
    4. 'i' → logprob: -8.165746688842773
    5. ' ' → logprob: -10.665746688842773
    6. ' xrange' → logprob: -12.165746688842773
    7. '	range' → logprob: -12.290746688842773
    8. ' ' → logprob: -14.165746688842773
    9. '(range' → logprob: -14.165746688842773
    10. '<|end|>' → logprob: -14.165746688842773

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14509853720664978
    2. 'in' → logprob: -2.0200984477996826
    3. 'range' → logprob: -6.520098686218262
    4. ' range' → logprob: -7.270098686218262
    5. ' ' → logprob: -8.645098686218262
    6. ')' → logprob: -10.145098686218262
    7. '<|end|>' → logprob: -11.145098686218262
    8. '(range' → logprob: -11.645098686218262
    9. ']' → logprob: -13.270098686218262
    10. 'import' → logprob: -13.395098686218262

Token 68: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740855395793915
    2. 'range' → logprob: -0.9740855693817139
    3. '	range' → logprob: -12.349085807800293
    4. '(range' → logprob: -12.849085807800293
    5. ' xrange' → logprob: -13.849085807800293
    6. ' ' → logprob: -14.849085807800293
    7. ')' → logprob: -16.849084854125977
    8. '.range' → logprob: -16.974084854125977
    9. '_range' → logprob: -17.224084854125977
    10. 'Range' → logprob: -17.349084854125977

Token 69: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.11137306690216064
    2. '(range' → logprob: -2.611372947692871
    3. '(' → logprob: -3.611372947692871
    4. 'range' → logprob: -5.486372947692871
    5. ' range' → logprob: -7.361372947692871
    6. '(len' → logprob: -8.861372947692871
    7. ' (' → logprob: -11.486372947692871
    8. '(i' → logprob: -12.236372947692871
    9. '(n' → logprob: -12.486372947692871
    10. '(
' → logprob: -13.236372947692871

Token 70: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1740952432155609
    2. ')]' → logprob: -2.4240951538085938
    3. ']' → logprob: -2.6740951538085938
    4. '])' → logprob: -6.174095153808594
    5. ')])' → logprob: -9.174095153808594
    6. ' )' → logprob: -10.799095153808594
    7. '])]' → logprob: -11.049095153808594
    8. '))' → logprob: -11.424095153808594
    9. '）' → logprob: -11.674095153808594
    10. ')
' → logprob: -12.674095153808594

Token 71: 'for' (ID: 1938)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8924961686134338
    2. 'max' → logprob: -1.642496109008789
    3. ')' → logprob: -2.267496109008789
    4. 'for' → logprob: -2.392496109008789
    5. 'heap' → logprob: -3.392496109008789
    6. 'prev' → logprob: -3.892496109008789
    7. 'total' → logprob: -4.142496109008789
    8. 'sum' → logprob: -4.517496109008789
    9. ' for' → logprob: -4.517496109008789
    10. 'i' → logprob: -4.767496109008789

Token 72: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01130175031721592
    2. 'i' → logprob: -4.511301517486572
    3. ' ' → logprob: -8.38630199432373
    4. ' _' → logprob: -11.26130199432373
    5. ' ' → logprob: -12.26130199432373
    6. ' range' → logprob: -12.88630199432373
    7. '_' → logprob: -13.26130199432373
    8. '  ' → logprob: -13.88630199432373
    9. '_i' → logprob: -14.26130199432373
    10. ' in' → logprob: -14.38630199432373

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17420290410518646
    2. ' ' → logprob: -1.9242029190063477
    3. 'in' → logprob: -4.299202919006348
    4. '  ' → logprob: -8.799202919006348
    5. '	in' → logprob: -9.924202919006348
    6. ' range' → logprob: -10.424202919006348
    7. 'range' → logprob: -10.674202919006348
    8. ' ' → logprob: -11.424202919006348
    9. ' i' → logprob: -11.674202919006348
    10. '_' → logprob: -12.424202919006348

Token 74: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0788949653506279
    2. 'range' → logprob: -2.578894853591919
    3. ' ' → logprob: -12.82889461517334
    4. '	range' → logprob: -13.20389461517334
    5. ' xrange' → logprob: -15.20389461517334
    6. '(range' → logprob: -15.70389461517334
    7. ' ran' → logprob: -16.828895568847656
    8. ' ' → logprob: -17.078895568847656
    9. '  ' → logprob: -17.078895568847656
    10. '```' → logprob: -17.328895568847656

Token 75: '(N' (ID: 10564)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4770875573158264
    2. '(' → logprob: -1.2270874977111816
    3. '(N' → logprob: -3.4770874977111816
    4. '(range' → logprob: -3.6020874977111816
    5. ' (' → logprob: -3.7270874977111816
    6. 'range' → logprob: -6.102087497711182
    7. ' ' → logprob: -6.602087497711182
    8. ' N' → logprob: -7.977087497711182
    9. '(n' → logprob: -10.47708797454834
    10. 'Range' → logprob: -10.97708797454834

Token 76: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019314998760819435
    2. '+' → logprob: -4.519314765930176
    3. ' ):' → logprob: -5.644314765930176
    4. ')' → logprob: -5.894314765930176
    5. '-' → logprob: -6.394314765930176
    6. ' +' → logprob: -9.519314765930176
    7. ' -' → logprob: -9.894314765930176
    8. '):
' → logprob: -10.019314765930176
    9. ',' → logprob: -10.769314765930176
    10. ':' → logprob: -10.894314765930176

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00470044557005167
    2. ' ' → logprob: -5.379700660705566
    3. '2' → logprob: -9.504700660705566
    4. '-' → logprob: -13.379700660705566
    5. ')' → logprob: -14.192200660705566
    6. '3' → logprob: -14.254700660705566
    7. '  ' → logprob: -14.504700660705566
    8. '```' → logprob: -15.129700660705566
    9. '0' → logprob: -15.254700660705566
    10. '
' → logprob: -15.317200660705566

Token 78: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003017385315615684
    2. ' ' → logprob: -8.375301361083984
    3. '2' → logprob: -9.625301361083984
    4. '3' → logprob: -13.500301361083984
    5. '-' → logprob: -13.687801361083984
    6. '   ' → logprob: -14.437801361083984
    7. '  ' → logprob: -14.937801361083984
    8. '

' → logprob: -15.000301361083984
    9. '```' → logprob: -15.375301361083984
    10. ')' → logprob: -15.437801361083984

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24528685212135315
    2. ',-' → logprob: -1.7452868223190308
    3. ' ,' → logprob: -3.9952869415283203
    4. ' ,-' → logprob: -4.37028694152832
    5. '-' → logprob: -5.12028694152832
    6. ' -' → logprob: -5.62028694152832
    7. '):' → logprob: -6.62028694152832
    8. ')' → logprob: -7.49528694152832
    9. '):
' → logprob: -9.12028694152832
    10. '+' → logprob: -9.12028694152832

Token 80: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029752571135759354
    2. ' -' → logprob: -3.529752492904663
    3. ' ' → logprob: -13.654752731323242
    4. '-i' → logprob: -14.279752731323242
    5. '0' → logprob: -15.779752731323242
    6. '-re' → logprob: -17.029752731323242
    7. '	' → logprob: -17.279752731323242
    8. '-N' → logprob: -17.654752731323242
    9. '-M' → logprob: -18.404752731323242
    10. '1' → logprob: -18.654752731323242

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -15.62501335144043
    4. '2' → logprob: -16.12501335144043
    5. ' -' → logprob: -16.87501335144043
    6. '   ' → logprob: -17.50001335144043
    7. ':' → logprob: -17.81251335144043
    8. '-' → logprob: -17.93751335144043
    9. '
' → logprob: -18.18751335144043
    10. '0' → logprob: -18.43751335144043

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11399728059768677
    2. '-' → logprob: -2.363997220993042
    3. ',-' → logprob: -4.363997459411621
    4. ' ,' → logprob: -7.738997459411621
    5. ' -' → logprob: -7.863997459411621
    6. ' ,-' → logprob: -9.363997459411621
    7. '-,' → logprob: -10.113997459411621
    8. '```' → logprob: -11.238997459411621
    9. '   ' → logprob: -12.988997459411621
    10. ' ' → logprob: -12.988997459411621

Token 83: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759450793266296
    2. ' -' → logprob: -0.8259450793266296
    3. ' ' → logprob: -12.325944900512695
    4. '	' → logprob: -15.450944900512695
    5. ')' → logprob: -15.575944900512695
    6. '-step' → logprob: -15.950944900512695
    7. '   ' → logprob: -16.575944900512695
    8. ',-' → logprob: -16.575944900512695
    9. '-i' → logprob: -16.700944900512695
    10. '  ' → logprob: -16.700944900512695

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.35706390615087e-05
    2. ' ' → logprob: -10.375033378601074
    3. '-' → logprob: -13.375033378601074
    4. ' -' → logprob: -14.500033378601074
    5. ',' → logprob: -16.50003433227539
    6. ')' → logprob: -16.87503433227539
    7. '```' → logprob: -17.00003433227539
    8. '2' → logprob: -17.37503433227539
    9. ' ,' → logprob: -18.62503433227539
    10. '):
' → logprob: -18.75003433227539

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004438305273652077
    2. ' ):' → logprob: -6.254438400268555
    3. '):
' → logprob: -7.004438400268555
    4. ':' → logprob: -7.129438400268555
    5. ')' → logprob: -7.754438400268555
    6. ',' → logprob: -8.004438400268555
    7. ' :' → logprob: -11.254438400268555
    8. '-' → logprob: -12.504438400268555
    9. ' ):
' → logprob: -12.629438400268555
    10. '):
' → logprob: -12.879438400268555

Token 86: '   ' (ID: 271)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.5334829092025757
    2. '   ' → logprob: -0.9084829092025757
    3. 'data' → logprob: -5.158483028411865
    4. ' if' → logprob: -5.908483028411865
    5. '	data' → logprob: -6.783483028411865
    6. ' for' → logprob: -8.783482551574707
    7. '   ' → logprob: -9.283482551574707
    8. ' ' → logprob: -9.408482551574707
    9. '```' → logprob: -9.658482551574707
    10. ',' → logprob: -10.283482551574707

Token 87: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.4465941786766052
    2. 'data' (adapté à ' data') → logprob: -1.19659423828125
    3. ' if' → logprob: -3.57159423828125
    4. '   ' → logprob: -3.94659423828125
    5. 'if' → logprob: -4.69659423828125
    6. '       ' → logprob: -8.19659423828125
    7. ' for' → logprob: -8.82159423828125
    8. '	data' → logprob: -8.82159423828125
    9. ' ' → logprob: -8.94659423828125
    10. 's' → logprob: -9.63409423828125

Token 88: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01173058245331049
    2. '[' → logprob: -4.511730670928955
    3. '[max' → logprob: -8.761730194091797
    4. '[min' → logprob: -8.761730194091797
    5. ' [' → logprob: -9.261730194091797
    6. '=' → logprob: -9.386730194091797
    7. '[I' → logprob: -10.511730194091797
    8. '```' → logprob: -10.636730194091797
    9. ' =' → logprob: -11.011730194091797
    10. '   ' → logprob: -11.136730194091797

Token 89: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05782608315348625
    2. ']=' → logprob: -3.057826042175293
    3. ')' → logprob: -4.932826042175293
    4. '=' → logprob: -7.057826042175293
    5. ')=' → logprob: -7.057826042175293
    6. ']+=' → logprob: -8.932826042175293
    7. ' =' → logprob: -9.932826042175293
    8. ' ]' → logprob: -10.182826042175293
    9. '])' → logprob: -10.807826042175293
    10. '>' → logprob: -11.682826042175293

Token 90: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01908111199736595
    2. ' =' → logprob: -4.019081115722656
    3. '+=' → logprob: -7.144081115722656
    4. '=min' → logprob: -9.894081115722656
    5. '=max' → logprob: -9.894081115722656
    6. '-=' → logprob: -11.019081115722656
    7. ' +=' → logprob: -11.394081115722656
    8. '=

' → logprob: -12.394081115722656
    9. '>' → logprob: -13.769081115722656
    10. ' ' → logprob: -14.019081115722656

Token 91: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.04530052840709686
    2. 'max' → logprob: -3.7953004837036133
    3. ' data' → logprob: -3.9203004837036133
    4. ' max' → logprob: -6.670300483703613
    5. 'min' → logprob: -7.420300483703613
    6. ' min' → logprob: -9.795300483703613
    7. ' ' → logprob: -10.920300483703613
    8. 'beam' → logprob: -12.295300483703613
    9. '   ' → logprob: -12.420300483703613
    10. '<data' → logprob: -12.670300483703613

Token 92: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.908022285439074e-05
    2. '[' → logprob: -9.750059127807617
    3. '[I' → logprob: -14.875059127807617
    4. '```' → logprob: -15.750059127807617
    5. 'i' → logprob: -16.250059127807617
    6. '[
' → logprob: -16.500059127807617
    7. ' [' → logprob: -16.750059127807617
    8. '[data' → logprob: -17.625059127807617
    9. '1' → logprob: -18.125059127807617
    10. '   ' → logprob: -18.750059127807617

Token 93: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00976482592523098
    2. ' +' → logprob: -4.634764671325684
    3. '+i' → logprob: -11.884764671325684
    4. '[' → logprob: -14.759764671325684
    5. '+]' → logprob: -15.009764671325684
    6. '＋' → logprob: -15.134764671325684
    7. ' ' → logprob: -15.384764671325684
    8. ']+' → logprob: -15.759764671325684
    9. '+
' → logprob: -15.759764671325684
    10. '1' → logprob: -16.009765625

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.874882430769503e-05
    2. ' ' → logprob: -9.625079154968262
    3. '```' → logprob: -12.500079154968262
    4. '<|end|>' → logprob: -12.875079154968262
    5. '+' → logprob: -13.250079154968262
    6. '[' → logprob: -13.625079154968262
    7. ']' → logprob: -13.875079154968262
    8. '0' → logprob: -13.875079154968262
    9. '   ' → logprob: -14.625079154968262
    10. '  ' → logprob: -15.625079154968262

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '0' → logprob: -16.750019073486328
    4. '   ' → logprob: -17.500019073486328
    5. '<|end|>' → logprob: -17.625019073486328
    6. ']' → logprob: -17.625019073486328
    7. '  ' → logprob: -17.812519073486328
    8. '```' → logprob: -17.812519073486328
    9. '2' → logprob: -18.750019073486328
    10. 'i' → logprob: -19.000019073486328

Token 96: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05150739848613739
    2. '<|end|>' → logprob: -3.0515074729919434
    3. ')' → logprob: -6.176507472991943
    4. '<|end|>' → logprob: -7.551507472991943
    5. ' ]' → logprob: -8.926506996154785
    6. '[' → logprob: -9.426506996154785
    7. ' ' → logprob: -10.426506996154785
    8. '```' → logprob: -11.426506996154785
    9. '[i' → logprob: -11.551506996154785
    10. '
' → logprob: -11.676506996154785

Token 97: 'cum' (ID: 89165)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.592373013496399
    2. '+' → logprob: -1.592373013496399
    3. 'max' → logprob: -1.717373013496399
    4. 'print' → logprob: -2.0923728942871094
    5. 'if' → logprob: -2.7173728942871094
    6. 'for' → logprob: -3.3423728942871094
    7. 'i' → logprob: -3.7173728942871094
    8. '[' → logprob: -3.8423728942871094
    9. ' ' → logprob: -4.092372894287109
    10. 'data' → logprob: -4.092372894287109

Token 98: 'min' (ID: 1493)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.012111783027649
    2. 'ulative' → logprob: -1.262111783027649
    3. '_' → logprob: -1.387111783027649
    4. 'sum' → logprob: -3.5121116638183594
    5. '[' → logprob: -3.6371116638183594
    6. '_data' → logprob: -3.8871116638183594
    7. ' ' → logprob: -5.262111663818359
    8. '=' → logprob: -5.637111663818359
    9. '   ' → logprob: -6.137111663818359
    10. ' =' → logprob: -6.137111663818359

Token 99: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3456598222255707
    2. ' =' → logprob: -1.345659852027893
    3. '=' → logprob: -4.7206597328186035
    4. '_data' → logprob: -4.7206597328186035
    5. 's' → logprob: -5.0956597328186035
    6. '_val' → logprob: -6.0956597328186035
    7. '(' → logprob: -6.5956597328186035
    8. '_=' → logprob: -6.9706597328186035
    9. ' _' → logprob: -7.2206597328186035
    10. 'data' → logprob: -7.4706597328186035

Token 100: ' [' (ID: 723)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.298127293586731
    2. '[' → logprob: -1.548127293586731
    3. ' data' → logprob: -2.1731271743774414
    4. ' [' → logprob: -2.1731271743774414
    5. '0' → logprob: -2.4231271743774414
    6. 'min' → logprob: -2.6731271743774414
    7. '[min' → logprob: -2.9231271743774414
    8. ' min' → logprob: -3.0481271743774414
    9. '[data' → logprob: -4.673127174377441
    10. 'float' → logprob: -4.923127174377441

Token 101: 'beam' (ID: 95917)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06506085395812988
    2. 'data' → logprob: -2.94006085395813
    3. 'float' → logprob: -4.815060615539551
    4. ' ' → logprob: -7.315060615539551
    5. ' data' → logprob: -7.815060615539551
    6. '10' → logprob: -8.31506061553955
    7. '(' → logprob: -9.19006061553955
    8. ' float' → logprob: -9.44006061553955
    9. '100' → logprob: -9.44006061553955
    10. 'beam' → logprob: -9.44006061553955

Token 102: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5765147805213928
    2. '[i' → logprob: -0.8265147805213928
    3. ']' → logprob: -8.951515197753906
    4. '[j' → logprob: -9.076515197753906
    5. '[-' → logprob: -9.576515197753906
    6. '][' → logprob: -9.826515197753906
    7. '[I' → logprob: -10.076515197753906
    8. '[][' → logprob: -10.701515197753906
    9. '[x' → logprob: -10.826515197753906
    10. '[n' → logprob: -11.076515197753906

Token 103: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001805130043067038
    2. '[' → logprob: -6.501805305480957
    3. ']' → logprob: -8.876805305480957
    4. ' ][' → logprob: -9.376805305480957
    5. '-' → logprob: -11.001805305480957
    6. ')[' → logprob: -11.251805305480957
    7. '   ' → logprob: -11.689305305480957
    8. '1' → logprob: -11.876805305480957
    9. ']][' → logprob: -12.314305305480957
    10. '"][' → logprob: -12.564305305480957

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6326283812522888
    2. '0' → logprob: -0.7576283812522888
    3. ' ' → logprob: -12.070128440856934
    4. '
' → logprob: -12.632628440856934
    5. '[' → logprob: -13.070128440856934
    6. '   ' → logprob: -13.382628440856934
    7. '

' → logprob: -13.445128440856934
    8. '-' → logprob: -13.570128440856934
    9. ']' → logprob: -13.695128440856934
    10. '```' → logprob: -13.695128440856934

Token 105: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07992922514677048
    2. ' for' → logprob: -3.2049291133880615
    3. 'for' → logprob: -3.3299291133880615
    4. ' ]' → logprob: -9.20492935180664
    5. ']
' → logprob: -9.82992935180664
    6. '-' → logprob: -9.95492935180664
    7. ']]' → logprob: -9.95492935180664
    8. '	for' → logprob: -10.07992935180664
    9. ' ' → logprob: -10.57992935180664
    10. ' -' → logprob: -10.70492935180664

Token 106: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20285767316818237
    2. 'for' → logprob: -1.7028577327728271
    3. '	for' → logprob: -7.577857494354248
    4. '<|end|>' → logprob: -8.077857971191406
    5. ']' → logprob: -8.577857971191406
    6. ')' → logprob: -8.827857971191406
    7. ' ' → logprob: -9.202857971191406
    8. '-' → logprob: -10.202857971191406
    9. '+' → logprob: -10.327857971191406
    10. '
' → logprob: -10.452857971191406

Token 107: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6507381200790405
    2. 'range' → logprob: -0.9007381200790405
    3. 'i' → logprob: -2.65073823928833
    4. ' i' → logprob: -6.52573823928833
    5. ' in' → logprob: -13.275737762451172
    6. 'in' → logprob: -13.900737762451172
    7. ' ' → logprob: -14.275737762451172
    8. '	range' → logprob: -14.650737762451172
    9. '(range' → logprob: -14.775737762451172
    10. '_' → logprob: -15.150737762451172

Token 108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16093528270721436
    2. 'in' → logprob: -1.9109352827072144
    3. 'range' → logprob: -7.660935401916504
    4. ' range' → logprob: -8.410935401916504
    5. ' ' → logprob: -11.285935401916504
    6. '<|end|>' → logprob: -13.160935401916504
    7. ')' → logprob: -14.535935401916504
    8. 'import' → logprob: -14.660935401916504
    9. '  ' → logprob: -14.660935401916504
    10. 'i' → logprob: -15.035935401916504

Token 109: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078639671206474
    2. ' range' → logprob: -5.5040788650512695
    3. '(range' → logprob: -16.129077911376953
    4. '	range' → logprob: -16.129077911376953
    5. ' ' → logprob: -17.879077911376953
    6. '  ' → logprob: -19.004077911376953
    7. '0' → logprob: -19.004077911376953
    8. '   ' → logprob: -19.254077911376953
    9. 'ran' → logprob: -19.754077911376953
    10. ')' → logprob: -19.879077911376953

Token 110: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01828724890947342
    2. 'N' → logprob: -4.018287181854248
    3. '(' → logprob: -9.143287658691406
    4. '(len' → logprob: -11.018287658691406
    5. 'len' → logprob: -12.018287658691406
    6. ' N' → logprob: -12.143287658691406
    7. ')' → logprob: -14.143287658691406
    8. '(n' → logprob: -14.143287658691406
    9. ' (' → logprob: -14.643287658691406
    10. '(
' → logprob: -15.643287658691406

Token 111: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.2287074327468872
    2. ']' → logprob: -1.6037074327468872
    3. ')]
' → logprob: -6.728707313537598
    4. ')' → logprob: -6.728707313537598
    5. ']
' → logprob: -7.728707313537598
    6. '+' → logprob: -8.728707313537598
    7. ' ]' → logprob: -9.228707313537598
    8. '])' → logprob: -9.478707313537598
    9. ' )' → logprob: -10.353707313537598
    10. '])]' → logprob: -10.853707313537598

Token 112: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023487482219934464
    2. ' for' → logprob: -3.7734875679016113
    3. '
' → logprob: -9.273487091064453
    4. 'cum' → logprob: -10.023487091064453
    5. '<|end|>' → logprob: -10.148487091064453
    6. 'i' → logprob: -10.523487091064453
    7. '[' → logprob: -11.523487091064453
    8. ')' → logprob: -11.773487091064453
    9. '	for' → logprob: -12.648487091064453
    10. ',' → logprob: -12.898487091064453

Token 113: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.056854765862226486
    2. 'i' → logprob: -2.931854724884033
    3. ' range' → logprob: -6.556854724884033
    4. 'range' → logprob: -7.556854724884033
    5. ' ' → logprob: -11.556855201721191
    6. '	i' → logprob: -12.306855201721191
    7. ' _' → logprob: -13.056855201721191
    8. '(i' → logprob: -13.431855201721191
    9. '_' → logprob: -13.681855201721191
    10. 'int' → logprob: -13.806855201721191

Token 114: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0049005853943526745
    2. 'in' → logprob: -5.5049004554748535
    3. ' ' → logprob: -7.1299004554748535
    4. ' range' → logprob: -11.879900932312012
    5. ' i' → logprob: -12.504900932312012
    6. '<|end|>' → logprob: -12.629900932312012
    7. 'range' → logprob: -12.879900932312012
    8. '	in' → logprob: -13.004900932312012
    9. '  ' → logprob: -13.504900932312012
    10. '   ' → logprob: -15.004900932312012

Token 115: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141683518886566
    2. ' range' → logprob: -1.7014168500900269
    3. '(range' → logprob: -12.576416969299316
    4. '	range' → logprob: -16.701416015625
    5. ' ' → logprob: -16.951416015625
    6. 'ran' → logprob: -18.326416015625
    7. ' ran' → logprob: -18.951416015625
    8. 'rang' → logprob: -19.826416015625
    9. ' ' → logprob: -20.201416015625
    10. '  ' → logprob: -20.326416015625

Token 116: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01890765130519867
    2. '(' → logprob: -4.01890754699707
    3. '(range' → logprob: -7.64390754699707
    4. ' range' → logprob: -8.26890754699707
    5. 'range' → logprob: -11.64390754699707
    6. ' (' → logprob: -12.01890754699707
    7. '(len' → logprob: -12.26890754699707
    8. '(n' → logprob: -14.01890754699707
    9. ' ' → logprob: -14.51890754699707
    10. '((' → logprob: -15.26890754699707

Token 117: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11293411999940872
    2. ' -' → logprob: -2.237934112548828
    3. '):
' → logprob: -10.237934112548828
    4. ')' → logprob: -10.612934112548828
    5. '):' → logprob: -10.737934112548828
    6. ' ' → logprob: -10.862934112548828
    7. ')-' → logprob: -13.362934112548828
    8. '–' → logprob: -13.487934112548828
    9. '1' → logprob: -13.612934112548828
    10. '<|end|>' → logprob: -13.737934112548828

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04634613171219826
    2. ' if' → logprob: -3.9213461875915527
    3. 'cum' → logprob: -4.296346187591553
    4. ' for' → logprob: -5.296346187591553
    5. ' cum' → logprob: -5.671346187591553
    6. 'if' → logprob: -6.296346187591553
    7. 'for' → logprob: -6.671346187591553
    8. '<|end|>' → logprob: -9.796345710754395
    9. 'c' → logprob: -10.046345710754395
    10. '   ' → logprob: -10.546345710754395

Token 119: ' if' (ID: 538)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.45768898725509644
    2. 'if' (adapté à ' if') → logprob: -1.8326890468597412
    3. ' if' → logprob: -2.457689046859741
    4. '   ' → logprob: -2.957689046859741
    5. ' cum' → logprob: -2.957689046859741
    6. 'for' → logprob: -4.457688808441162
    7. ' for' → logprob: -5.207688808441162
    8. 'c' → logprob: -8.08268928527832
    9. 'import' → logprob: -9.20768928527832
    10. '```' → logprob: -10.39518928527832

Token 120: ' beam' (ID: 36650)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07059270888566971
    2. 'i' → logprob: -2.6955926418304443
    3. ' ' → logprob: -8.070592880249023
    4. ' not' → logprob: -9.195592880249023
    5. '(i' → logprob: -9.945592880249023
    6. ' data' → logprob: -10.195592880249023
    7. ' N' → logprob: -10.695592880249023
    8. ' beam' → logprob: -10.820592880249023
    9. 'data' → logprob: -11.070592880249023
    10. '  ' → logprob: -11.195592880249023

Token 121: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013742801966145635
    2. '[' → logprob: -6.626374244689941
    3. ' [' → logprob: -10.251374244689941
    4. '[I' → logprob: -12.626374244689941
    5. '```' → logprob: -12.876374244689941
    6. '[
' → logprob: -13.626374244689941
    7. '][' → logprob: -14.376374244689941
    8. '[][' → logprob: -14.376374244689941
    9. '\[' → logprob: -14.751374244689941
    10. ' ' → logprob: -14.751374244689941

Token 122: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0563029870390892
    2. '[' → logprob: -3.306303024291992
    3. ' ][' → logprob: -4.431303024291992
    4. ']' → logprob: -6.556303024291992
    5. '+' → logprob: -6.931303024291992
    6. ')[' → logprob: -7.181303024291992
    7. '-' → logprob: -7.431303024291992
    8. ')][' → logprob: -7.806303024291992
    9. ' ' → logprob: -8.056303024291992
    10. ')' → logprob: -8.556303024291992

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47640448808670044
    2. '1' → logprob: -0.9764044880867004
    3. ' ' → logprob: -6.101404666900635
    4. '
' → logprob: -10.851404190063477
    5. '-' → logprob: -11.788904190063477
    6. '[' → logprob: -12.288904190063477
    7. ']' → logprob: -12.351404190063477
    8. '2' → logprob: -12.476404190063477
    9. '...' → logprob: -12.538904190063477
    10. '

' → logprob: -12.663904190063477

Token 124: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.081933856010437
    2. ' >' → logprob: -1.331933856010437
    3. ' ' → logprob: -1.831933856010437
    4. ' <=' → logprob: -2.4569339752197266
    5. ']' → logprob: -2.8319339752197266
    6. '>' → logprob: -3.0819339752197266
    7. ' >=' → logprob: -3.9569339752197266
    8. ' ]' → logprob: -4.831933975219727
    9. '<' → logprob: -4.956933975219727
    10. '<=' → logprob: -5.706933975219727

Token 125: ' -' (ID: 533)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.35578083992004395
    2. '<' → logprob: -2.230780839920044
    3. ' <=' → logprob: -2.730780839920044
    4. ' >' → logprob: -2.730780839920044
    5. '>' → logprob: -3.105780839920044
    6. '<=' → logprob: -4.855780601501465
    7. ' >=' → logprob: -5.230780601501465
    8. '>=' → logprob: -6.480780601501465
    9. ' ' → logprob: -6.605780601501465
    10. '[' → logprob: -8.355780601501465

Token 126: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.05833572521805763
    2. ' beam' → logprob: -3.183335781097412
    3. 'cum' → logprob: -4.308335781097412
    4. '1' → logprob: -7.308335781097412
    5. ' cum' → logprob: -7.808335781097412
    6. 'data' → logprob: -8.433335304260254
    7. 'i' → logprob: -9.058335304260254
    8. ' ' → logprob: -9.558335304260254
    9. ' i' → logprob: -9.808335304260254
    10. 'heap' → logprob: -9.933335304260254

Token 127: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001454955490771681
    2. '[' → logprob: -8.87514591217041
    3. 'i' → logprob: -13.25014591217041
    4. ' [' → logprob: -14.00014591217041
    5. 's' → logprob: -14.12514591217041
    6. '(i' → logprob: -14.62514591217041
    7. '{i' → logprob: -15.12514591217041
    8. '1' → logprob: -15.37514591217041
    9. '[
' → logprob: -15.75014591217041
    10. '
' → logprob: -15.75014591217041

Token 128: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.30634805560112
    2. '[' → logprob: -1.5563480854034424
    3. '][' → logprob: -3.3063480854034424
    4. 'i' → logprob: -4.556347846984863
    5. '1' → logprob: -5.556347846984863
    6. '   ' → logprob: -7.806347846984863
    7. ']' → logprob: -7.931347846984863
    8. '(i' → logprob: -8.681347846984863
    9. '       ' → logprob: -9.056347846984863
    10. '0' → logprob: -9.431347846984863

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014910129830241203
    2. 'i' → logprob: -4.5149102210998535
    3. '[i' → logprob: -5.8899102210998535
    4. '0' → logprob: -7.1399102210998535
    5. '[' → logprob: -9.327409744262695
    6. ' i' → logprob: -9.514909744262695
    7. ' ' → logprob: -10.577409744262695
    8. '(i' → logprob: -11.139909744262695
    9. 's' → logprob: -11.264909744262695
    10. ']' → logprob: -11.889909744262695

Token 130: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17936936020851135
    2. ')' → logprob: -3.3043694496154785
    3. '>' → logprob: -3.3043694496154785
    4. ']>' → logprob: -3.3043694496154785
    5. '<' → logprob: -4.3043694496154785
    6. ']<' → logprob: -4.3043694496154785
    7. ' <' → logprob: -4.6793694496154785
    8. ']>=' → logprob: -5.5543694496154785
    9. ']<=' → logprob: -5.6793694496154785
    10. ' >' → logprob: -5.8043694496154785

Token 131: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6496181488037109
    2. '<' → logprob: -1.149618148803711
    3. '>' → logprob: -2.899618148803711
    4. ' >' → logprob: -3.024618148803711
    5. ' <=' → logprob: -3.524618148803711
    6. '<=' → logprob: -4.024618148803711
    7. ' >=' → logprob: -5.399618148803711
    8. '>=' → logprob: -5.399618148803711
    9. ' ' → logprob: -7.774618148803711
    10. '<data' → logprob: -8.774618148803711

Token 132: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5357918739318848
    2. 'cum' → logprob: -1.1607918739318848
    3. ' cum' → logprob: -3.1607918739318848
    4. ' ' → logprob: -3.1607918739318848
    5. 'data' → logprob: -4.785791873931885
    6. ' data' → logprob: -5.410791873931885
    7. 'beam' → logprob: -6.160791873931885
    8. '1' → logprob: -7.848291873931885
    9. ' beam' → logprob: -8.160791397094727
    10. '-' → logprob: -8.910791397094727

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1536369025707245
    2. 'data' → logprob: -2.653636932373047
    3. 'cum' → logprob: -2.903636932373047
    4. ' ' → logprob: -4.653636932373047
    5. 'beam' → logprob: -6.028636932373047
    6. ' data' → logprob: -6.403636932373047
    7. '1' → logprob: -7.028636932373047
    8. ' cum' → logprob: -7.028636932373047
    9. '-' → logprob: -8.278636932373047
    10. 'max' → logprob: -8.403636932373047

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008101018611341715
    2. ':
' → logprob: -7.625810146331787
    3. ' and' → logprob: -8.750809669494629
    4. ' :' → logprob: -9.125809669494629
    5. ',' → logprob: -10.750809669494629
    6. '):' → logprob: -11.125809669494629
    7. '   ' → logprob: -12.000809669494629
    8. ')' → logprob: -12.875809669494629
    9. 'and' → logprob: -13.125809669494629
    10. ' or' → logprob: -13.500809669494629

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027750570327043533
    2. ' cum' → logprob: -4.402750492095947
    3. ' heap' → logprob: -5.027750492095947
    4. '   ' → logprob: -5.902750492095947
    5. 'cum' → logprob: -5.902750492095947
    6. ',' → logprob: -7.277750492095947
    7. '        
' → logprob: -8.152750968933105
    8. 'heap' → logprob: -8.527750968933105
    9. '    ' → logprob: -8.777750968933105
    10. ' 
' → logprob: -9.027750968933105

Token 136: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' (adapté à ' cum') → logprob: -0.7539474964141846
    2. ' cum' → logprob: -1.1289474964141846
    3. '       ' → logprob: -2.1289474964141846
    4. '   ' → logprob: -3.1289474964141846
    5. ' heap' → logprob: -3.6289474964141846
    6. 'heap' → logprob: -4.7539472579956055
    7. ' break' → logprob: -6.2539472579956055
    8. ' for' → logprob: -7.1289472579956055
    9. ' if' → logprob: -7.3164472579956055
    10. 'break' → logprob: -7.3789472579956055

Token 137: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -5.512236498361744e-07
    2. 'for' → logprob: -15.875000953674316
    3. 'max' → logprob: -16.125
    4. 'cum' → logprob: -16.875
    5. 'imin' → logprob: -17.125
    6. '_min' → logprob: -17.25
    7. ' min' → logprob: -17.25
    8. 'm' → logprob: -17.375
    9. 'minimum' → logprob: -17.75
    10. 'in' → logprob: -18.375

Token 138: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017982310382649302
    2. ' =' → logprob: -6.751798152923584
    3. '=' → logprob: -8.001798629760742
    4. '[' → logprob: -8.376798629760742
    5. '=[' → logprob: -11.001798629760742
    6. ' [' → logprob: -11.126798629760742
    7. '=i' → logprob: -11.501798629760742
    8. '[:]' → logprob: -12.376798629760742
    9. '[min' → logprob: -12.751798629760742
    10. '[:' → logprob: -12.876798629760742

Token 139: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014723610132932663
    2. ' ]' → logprob: -4.764723777770996
    3. ']=' → logprob: -5.139723777770996
    4. '=' → logprob: -9.264723777770996
    5. ' =' → logprob: -9.889723777770996
    6. '-' → logprob: -10.514723777770996
    7. ']+=' → logprob: -10.889723777770996
    8. ')' → logprob: -11.514723777770996
    9. ' -' → logprob: -12.639723777770996
    10. '+' → logprob: -12.764723777770996

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.355739027261734
    2. ' =' → logprob: -1.2307389974594116
    3. '-=' → logprob: -5.730739116668701
    4. '+=' → logprob: -6.230739116668701
    5. '=min' → logprob: -6.730739116668701
    6. ' -=' → logprob: -7.355739116668701
    7. ' +=' → logprob: -8.980738639831543
    8. '=-' → logprob: -10.480738639831543
    9. '*=' → logprob: -11.105738639831543
    10. '=max' → logprob: -11.355738639831543

Token 141: ' ' (ID: 220)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.32443657517433167
    2. '0' → logprob: -1.5744365453720093
    3. ' beam' → logprob: -3.574436664581299
    4. 'min' → logprob: -4.324436664581299
    5. 'float' → logprob: -4.699436664581299
    6. ' ' → logprob: -5.574436664581299
    7. 'data' → logprob: -5.699436664581299
    8. ' min' → logprob: -5.949436664581299
    9. '-' → logprob: -6.074436664581299
    10. 'cum' → logprob: -6.199436664581299

Token 142: '10' (ID: 702)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.09344624727964401
    2. '0' → logprob: -2.7184462547302246
    3. 'min' → logprob: -5.218446254730225
    4. 'float' → logprob: -5.218446254730225
    5. ' beam' → logprob: -5.343446254730225
    6. '-' → logprob: -5.968446254730225
    7. 'data' → logprob: -6.593446254730225
    8. 'heap' → logprob: -6.843446254730225
    9. ' ' → logprob: -7.343446254730225
    10. 'max' → logprob: -7.343446254730225

Token 143: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.4211665689945221
    2. '**' → logprob: -1.1711665391921997
    3. '10' → logprob: -3.7961666584014893
    4. '7' → logprob: -4.92116641998291
    5. '6' → logprob: -6.29616641998291
    6. '8' → logprob: -7.17116641998291
    7. '18' → logprob: -7.54616641998291
    8. '15' → logprob: -8.29616641998291
    9. '09' → logprob: -9.04616641998291
    10. '12' → logprob: -9.29616641998291

Token 144: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.9016642570495605
    2. '15' → logprob: -1.2766642570495605
    3. '10' → logprob: -1.4016642570495605
    4. '18' → logprob: -3.1516642570495605
    5. '12' → logprob: -4.2766642570495605
    6. '20' → logprob: -5.2766642570495605
    7. '11' → logprob: -5.6516642570495605
    8. '16' → logprob: -6.6516642570495605
    9. '7' → logprob: -7.4016642570495605
    10. '13' → logprob: -7.5266642570495605

Token 145: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.9829750657081604
    2. '10' → logprob: -1.3579750061035156
    3. '15' → logprob: -1.3579750061035156
    4. '18' → logprob: -2.7329750061035156
    5. '12' → logprob: -3.9829750061035156
    6. '11' → logprob: -4.607975006103516
    7. '20' → logprob: -4.982975006103516
    8. '16' → logprob: -5.607975006103516
    9. '14' → logprob: -6.107975006103516
    10. '13' → logprob: -6.482975006103516

Token 146: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7248609662055969
    2. 'for' → logprob: -1.4748609066009521
    3. '   ' → logprob: -1.7248609066009521
    4. ' else' → logprob: -2.849860906600952
    5. 'else' → logprob: -3.099860906600952
    6. ' ' → logprob: -7.224861145019531
    7. 'elif' → logprob: -7.349861145019531
    8. ')' → logprob: -7.474861145019531
    9. ' if' → logprob: -7.724861145019531
    10. '       ' → logprob: -8.474861145019531

Token 148: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09257238358259201
    2. ' range' → logprob: -2.4675724506378174
    3. 'i' → logprob: -6.092572212219238
    4. 'range' → logprob: -6.967572212219238
    5. ' ' → logprob: -7.967572212219238
    6. '_' → logprob: -10.717572212219238
    7. ' _' → logprob: -10.842572212219238
    8. ' N' → logprob: -11.467572212219238
    9. '_range' → logprob: -12.592572212219238
    10. ' in' → logprob: -12.592572212219238

Token 149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009742982685565948
    2. 'in' → logprob: -4.7597432136535645
    3. ' range' → logprob: -7.2597432136535645
    4. 'range' → logprob: -8.259742736816406
    5. ' ' → logprob: -8.759742736816406
    6. '   ' → logprob: -12.509742736816406
    7. '+' → logprob: -12.884742736816406
    8. '1' → logprob: -14.634742736816406
    9. '  ' → logprob: -14.759742736816406
    10. '(range' → logprob: -14.884742736816406

Token 150: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868803381919861
    2. ' range' → logprob: -1.1368803977966309
    3. '   ' → logprob: -13.011879920959473
    4. 're' → logprob: -13.136879920959473
    5. '(range' → logprob: -13.136879920959473
    6. ' ' → logprob: -13.261879920959473
    7. ' reversed' → logprob: -14.261879920959473
    8. '	range' → logprob: -15.011879920959473
    9. '  ' → logprob: -15.386879920959473
    10. 'reverse' → logprob: -16.51188087463379

Token 151: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13080988824367523
    2. '(N' → logprob: -2.130809783935547
    3. '(range' → logprob: -5.630809783935547
    4. 'range' → logprob: -8.380809783935547
    5. ' range' → logprob: -10.005809783935547
    6. '(len' → logprob: -12.130809783935547
    7. '(i' → logprob: -12.630809783935547
    8. 'Range' → logprob: -13.630809783935547
    9. '(n' → logprob: -13.630809783935547
    10. '((' → logprob: -13.880809783935547

Token 152: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28115880489349365
    2. '-' → logprob: -1.4061588048934937
    3. ')' → logprob: -12.656158447265625
    4. '):' → logprob: -12.781158447265625
    5. ' ' → logprob: -14.031158447265625
    6. '):
' → logprob: -14.156158447265625
    7. ',' → logprob: -14.906158447265625
    8. ')-' → logprob: -15.531158447265625
    9. '+' → logprob: -16.031158447265625
    10. '   ' → logprob: -16.406158447265625

Token 153: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14315824210643768
    2. '1' → logprob: -2.018158197402954
    3. ' ' → logprob: -7.643158435821533
    4. '3' → logprob: -13.518157958984375
    5. '-' → logprob: -14.018157958984375
    6. '
' → logprob: -14.643157958984375
    7. ' -' → logprob: -15.580657958984375
    8. '   ' → logprob: -15.705657958984375
    9. ',' → logprob: -16.018157958984375
    10. '0' → logprob: -16.080657958984375

Token 154: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12694206833839417
    2. '1' → logprob: -2.1269421577453613
    3. '-' → logprob: -11.751941680908203
    4. ' ' → logprob: -12.751941680908203
    5. '3' → logprob: -13.001941680908203
    6. '```' → logprob: -15.126941680908203
    7. '
' → logprob: -15.439441680908203
    8. '0' → logprob: -16.501941680908203
    9. '   ' → logprob: -16.564441680908203
    10. '``' → logprob: -16.876941680908203

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010142285376787186
    2. ',-' → logprob: -4.6351423263549805
    3. ' ,' → logprob: -8.38514232635498
    4. '-' → logprob: -9.01014232635498
    5. ' ,-' → logprob: -11.26014232635498
    6. ',i' → logprob: -11.63514232635498
    7. ' -' → logprob: -11.76014232635498
    8. ',
' → logprob: -13.13514232635498
    9. '-,' → logprob: -14.13514232635498
    10. ',d' → logprob: -14.76014232635498

Token 156: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4741242229938507
    2. ' -' → logprob: -0.9741241931915283
    3. '-i' → logprob: -9.97412395477295
    4. ' ' → logprob: -15.47412395477295
    5. '   ' → logprob: -15.59912395477295
    6. '-re' → logprob: -17.099124908447266
    7. 'i' → logprob: -17.349124908447266
    8. '     ' → logprob: -17.474124908447266
    9. '  ' → logprob: -17.599124908447266
    10. '0' → logprob: -17.849124908447266

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.500001907348633
    3. '-' → logprob: -14.625001907348633
    4. '```' → logprob: -15.000001907348633
    5. '0' → logprob: -16.375001907348633
    6. ')' → logprob: -17.000001907348633
    7. ',' → logprob: -17.250001907348633
    8. '2' → logprob: -17.375001907348633
    9. ' -' → logprob: -17.750001907348633
    10. '   ' → logprob: -17.875001907348633

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020136944949626923
    2. '-' → logprob: -6.377013683319092
    3. ',-' → logprob: -8.25201416015625
    4. ' ,' → logprob: -10.25201416015625
    5. ' -' → logprob: -11.37701416015625
    6. '-,' → logprob: -13.37701416015625
    7. ',
' → logprob: -14.12701416015625
    8. '   ' → logprob: -14.62701416015625
    9. ' ,-' → logprob: -14.62701416015625
    10. '):' → logprob: -15.62701416015625

Token 159: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4740777015686035
    2. ' -' → logprob: -0.9740777015686035
    3. '   ' → logprob: -15.474077224731445
    4. '-i' → logprob: -15.849077224731445
    5. ' ' → logprob: -15.974077224731445
    6. ')' → logprob: -16.849077224731445
    7. ',' → logprob: -17.099077224731445
    8. '  ' → logprob: -18.099077224731445
    9. '```' → logprob: -18.974077224731445
    10. ')-' → logprob: -19.099077224731445

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.000006675720215
    3. '-' → logprob: -15.750006675720215
    4. '```' → logprob: -15.750006675720215
    5. ')' → logprob: -16.00000762939453
    6. '   ' → logprob: -16.50000762939453
    7. '
' → logprob: -16.75000762939453
    8. '2' → logprob: -17.12500762939453
    9. ',' → logprob: -17.81250762939453
    10. ' -' → logprob: -18.31250762939453

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03537801653146744
    2. '):
' → logprob: -3.4103779792785645
    3. ':' → logprob: -6.6603779792785645
    4. ')' → logprob: -8.410378456115723
    5. ',' → logprob: -9.035378456115723
    6. '):
' → logprob: -9.535378456115723
    7. ' ):' → logprob: -11.535378456115723
    8. ']:' → logprob: -12.035378456115723
    9. '):

' → logprob: -12.285378456115723
    10. '}:' → logprob: -12.410378456115723

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1130993664264679
    2. 'cum' → logprob: -2.3630993366241455
    3. ' cum' → logprob: -4.363099575042725
    4. ' if' → logprob: -10.613099098205566
    5. ' ' → logprob: -11.238099098205566
    6. 'if' → logprob: -11.363099098205566
    7. '       ' → logprob: -11.738099098205566
    8. '	c' → logprob: -12.113099098205566
    9. '  ' → logprob: -12.488099098205566
    10. '```' → logprob: -13.488099098205566

Token 163: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' (adapté à ' cum') → logprob: -0.0014124969020485878
    2. '   ' → logprob: -6.751412391662598
    3. ' cum' → logprob: -8.501412391662598
    4. 'if' → logprob: -10.251412391662598
    5. ' ' → logprob: -13.876412391662598
    6. '  ' → logprob: -14.001412391662598
    7. '       ' → logprob: -14.876412391662598
    8. 'import' → logprob: -15.376412391662598
    9. '	c' → logprob: -15.376412391662598
    10. 'cul' → logprob: -15.626412391662598

Token 164: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -17.25
    3. '[min' → logprob: -17.5
    4. '[i' → logprob: -18.125
    5. '_min' → logprob: -18.625
    6. '   ' → logprob: -19.125
    7. 'max' → logprob: -19.375
    8. ' min' → logprob: -19.5
    9. '```' → logprob: -20.125
    10. 'for' → logprob: -20.375

Token 165: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006496482528746128
    2. '[' → logprob: -7.375649452209473
    3. '[min' → logprob: -11.250649452209473
    4. '=' → logprob: -12.625649452209473
    5. '```' → logprob: -13.000649452209473
    6. ' [' → logprob: -13.875649452209473
    7. '\[' → logprob: -14.000649452209473
    8. '[I' → logprob: -14.375649452209473
    9. '[
' → logprob: -14.500649452209473
    10. '[j' → logprob: -14.625649452209473

Token 166: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12573270499706268
    2. ' =' → logprob: -3.125732660293579
    3. ']' → logprob: -3.500732660293579
    4. ']=' → logprob: -3.875732660293579
    5. '=min' → logprob: -4.125732898712158
    6. ')' → logprob: -5.500732898712158
    7. ')=' → logprob: -5.875732898712158
    8. '>' → logprob: -8.750732421875
    9. '<' → logprob: -10.000732421875
    10. '   ' → logprob: -10.625732421875

Token 167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002411565510556102
    2. '=min' → logprob: -6.377411365509033
    3. ' =' → logprob: -7.252411365509033
    4. 'min' → logprob: -15.002411842346191
    5. '<' → logprob: -15.627411842346191
    6. '=max' → logprob: -16.877410888671875
    7. '=

' → logprob: -16.877410888671875
    8. '```' → logprob: -16.877410888671875
    9. '.=' → logprob: -17.252410888671875
    10. '<=' → logprob: -17.627410888671875

Token 168: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0005535095697268844
    2. ' min' → logprob: -7.500553607940674
    3. 'cum' → logprob: -15.625553131103516
    4. '   ' → logprob: -15.750553131103516
    5. 'max' → logprob: -16.125553131103516
    6. '	min' → logprob: -16.375553131103516
    7. '[min' → logprob: -18.000553131103516
    8. '(min' → logprob: -18.000553131103516
    9. 'mini' → logprob: -18.375553131103516
    10. ' ' → logprob: -19.000553131103516

Token 169: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -8.506661833962426e-05
    2. '(' → logprob: -9.37508487701416
    3. '(
' → logprob: -16.000085830688477
    4. ' (' → logprob: -18.625085830688477
    5. '(C' → logprob: -19.125085830688477
    6. '((' → logprob: -19.250085830688477
    7. 'c' → logprob: -19.375085830688477
    8. '   ' → logprob: -19.625085830688477
    9. '	c' → logprob: -19.625085830688477
    10. '()' → logprob: -19.875085830688477

Token 170: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.01614052802324295
    2. 'cum' → logprob: -4.141140460968018
    3. 'c' → logprob: -9.766140937805176
    4. '(c' → logprob: -11.266140937805176
    5. '(' → logprob: -11.766140937805176
    6. 'kum' → logprob: -12.141140937805176
    7. 'u' → logprob: -12.516140937805176
    8. ' cum' → logprob: -12.891140937805176
    9. 'uc' → logprob: -12.891140937805176
    10. '   ' → logprob: -13.141140937805176

Token 171: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10044076293706894
    2. 'in' → logprob: -2.350440740585327
    3. '[i' → logprob: -8.600440979003906
    4. '[min' → logprob: -11.225440979003906
    5. '   ' → logprob: -11.475440979003906
    6. '[' → logprob: -12.475440979003906
    7. ')' → logprob: -12.725440979003906
    8. '(min' → logprob: -13.100440979003906
    9. 'for' → logprob: -13.225440979003906
    10. 'i' → logprob: -13.225440979003906

Token 172: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -12.500003814697266
    3. '[
' → logprob: -15.875003814697266
    4. 'i' → logprob: -16.750003814697266
    5. '```' → logprob: -16.750003814697266
    6. '[j' → logprob: -17.500003814697266
    7. ' [' → logprob: -17.500003814697266
    8. '[I' → logprob: -17.875003814697266
    9. ')' → logprob: -18.750003814697266
    10. '(i' → logprob: -18.875003814697266

Token 173: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.580940842628479
    2. '],' → logprob: -0.830940842628479
    3. '[i' → logprob: -5.8309407234191895
    4. ' +' → logprob: -6.3309407234191895
    5. ']' → logprob: -8.830941200256348
    6. ' ],' → logprob: -10.205941200256348
    7. '[' → logprob: -10.705941200256348
    8. '],
' → logprob: -10.955941200256348
    9. '   ' → logprob: -11.080941200256348
    10. '+i' → logprob: -11.455941200256348

Token 174: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.006730526220053434
    2. ' cum' → logprob: -5.006730556488037
    3. '   ' → logprob: -11.381730079650879
    4. ' ' → logprob: -12.756730079650879
    5. '	c' → logprob: -14.881730079650879
    6. 'c' → logprob: -15.381730079650879
    7. '  ' → logprob: -15.756730079650879
    8. '    ' → logprob: -17.256731033325195
    9. ' ' → logprob: -17.381731033325195
    10. 'cul' → logprob: -18.256731033325195

Token 175: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0019298245897516608
    2. 'in' → logprob: -6.251929759979248
    3. ' min' → logprob: -15.376930236816406
    4. '[min' → logprob: -15.376930236816406
    5. '[i' → logprob: -15.501930236816406
    6. 'max' → logprob: -16.001930236816406
    7. '   ' → logprob: -16.251930236816406
    8. '(min' → logprob: -16.876930236816406
    9. '	min' → logprob: -17.001930236816406
    10. 'un' → logprob: -17.126930236816406

Token 176: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -14.000000953674316
    3. '[' → logprob: -15.625000953674316
    4. '[I' → logprob: -18.250001907348633
    5. '[
' → logprob: -19.000001907348633
    6. '{i' → logprob: -20.125001907348633
    7. '(i' → logprob: -20.125001907348633
    8. ' [' → logprob: -20.375001907348633
    9. '[j' → logprob: -20.750001907348633
    10. 's' → logprob: -21.375001907348633

Token 177: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01818295195698738
    2. ' +' → logprob: -4.018182754516602
    3. '+i' → logprob: -10.393182754516602
    4. '[i' → logprob: -13.268182754516602
    5. ' ' → logprob: -14.768182754516602
    6. '[' → logprob: -16.3931827545166
    7. '   ' → logprob: -16.7681827545166
    8. 'i' → logprob: -17.1431827545166
    9. '+
' → logprob: -17.3931827545166
    10. '＋' → logprob: -18.2681827545166

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003461905289441347
    2. 'i' → logprob: -8.000346183776855
    3. '])' → logprob: -12.500346183776855
    4. ']' → logprob: -12.500346183776855
    5. ' ' → logprob: -13.625346183776855
    6. '```' → logprob: -14.375346183776855
    7. '(i' → logprob: -14.625346183776855
    8. ')' → logprob: -15.500346183776855
    9. '   ' → logprob: -16.000347137451172
    10. '
' → logprob: -16.125347137451172

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. 'i' → logprob: -10.500027656555176
    3. '```' → logprob: -16.75002670288086
    4. ' ' → logprob: -17.25002670288086
    5. '(i' → logprob: -18.00002670288086
    6. '0' → logprob: -18.25002670288086
    7. ']' → logprob: -18.50002670288086
    8. '[i' → logprob: -18.75002670288086
    9. '])' → logprob: -18.87502670288086
    10. ')' → logprob: -19.37502670288086

Token 180: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. ' )' → logprob: -12.875005722045898
    3. ')
' → logprob: -13.125005722045898
    4. '))' → logprob: -14.625005722045898
    5. '])' → logprob: -14.875005722045898
    6. ')`' → logprob: -15.500005722045898
    7. '[i' → logprob: -15.750005722045898
    8. '[' → logprob: -16.6250057220459
    9. ']' → logprob: -16.8750057220459
    10. '   ' → logprob: -17.0000057220459

Token 181: 'ide' (ID: 617)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.570660948753357
    2. 'answer' → logprob: -1.570660948753357
    3. 'dp' → logprob: -2.1956610679626465
    4. 'max' → logprob: -2.1956610679626465
    5. 'res' → logprob: -2.3206610679626465
    6. 'ans' → logprob: -2.5706610679626465
    7. 'result' → logprob: -2.8206610679626465
    8. 'heap' → logprob: -3.8206610679626465
    9. 'best' → logprob: -4.1956610679626465
    10. 'sum' → logprob: -5.0706610679626465

Token 182: '_ele' (ID: 154942)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.204720582696609e-05
    2. 'nt' → logprob: -10.250052452087402
    3. 'n' → logprob: -12.375052452087402
    4. '```' → logprob: -12.625052452087402
    5. 'f' → logprob: -13.000052452087402
    6. 'a' → logprob: -13.000052452087402
    7. 'xed' → logprob: -13.250052452087402
    8. '#' → logprob: -15.000052452087402
    9. 'def' → logprob: -15.500052452087402
    10. ' x' → logprob: -15.500052452087402

Token 183: ' =' (ID: 314)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.06568394601345062
    2. 'm' → logprob: -3.8156838417053223
    3. 'ments' → logprob: -4.315683841705322
    4. 'nt' → logprob: -4.690683841705322
    5. ' =' → logprob: -4.815683841705322
    6. 'ms' → logprob: -5.190683841705322
    7. '=' → logprob: -5.690683841705322
    8. 'mt' → logprob: -7.065683841705322
    9. 'mnt' → logprob: -7.815683841705322
    10. 's' → logprob: -9.06568431854248

Token 184: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0181885957717896
    2. '10' → logprob: -1.8931885957717896
    3. 'float' → logprob: -2.1431884765625
    4. '[]' → logprob: -2.2681884765625
    5. 'data' → logprob: -3.1431884765625
    6. '-' → logprob: -3.2681884765625
    7. 'beam' → logprob: -3.3931884765625
    8. ' ' → logprob: -3.6431884765625
    9. '(' → logprob: -3.6431884765625
    10. '[' → logprob: -3.7681884765625

Token 185: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.013836124911904335
    2. 'float' → logprob: -5.138835906982422
    3. '(' → logprob: -5.888835906982422
    4. '-' → logprob: -6.638835906982422
    5. '1' → logprob: -6.638835906982422
    6. '0' → logprob: -6.888835906982422
    7. '-(' → logprob: -7.888835906982422
    8. 'int' → logprob: -8.138835906982422
    9. '(float' → logprob: -8.388835906982422
    10. '100' → logprob: -8.888835906982422

Token 186: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3493601083755493
    2. '15' → logprob: -1.2243601083755493
    3. '```' → logprob: -7.47435998916626
    4. '5' → logprob: -9.224360466003418
    5. '9' → logprob: -9.599360466003418
    6. '6' → logprob: -9.599360466003418
    7. '0' → logprob: -10.724360466003418
    8. '-' → logprob: -11.224360466003418
    9. '*' → logprob: -11.349360466003418
    10. '7' → logprob: -11.474360466003418

Token 187: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.06290069967508316
    2. '16' → logprob: -3.1879007816314697
    3. '18' → logprob: -4.312900543212891
    4. '9' → logprob: -6.687900543212891
    5. '14' → logprob: -6.812900543212891
    6. '20' → logprob: -6.812900543212891
    7. '17' → logprob: -6.937900543212891
    8. '10' → logprob: -7.062900543212891
    9. '12' → logprob: -7.562900543212891
    10. '13' → logprob: -8.43790054321289

Token 188: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.1430164873600006
    2. '16' → logprob: -2.7680165767669678
    3. '18' → logprob: -3.1430165767669678
    4. '20' → logprob: -4.518016338348389
    5. '9' → logprob: -5.143016338348389
    6. '10' → logprob: -5.768016338348389
    7. '17' → logprob: -5.893016338348389
    8. '14' → logprob: -6.393016338348389
    9. '12' → logprob: -6.518016338348389
    10. '13' → logprob: -7.768016338348389

Token 189: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.062049388885498
    2. 'dp' → logprob: -1.687049388885498
    3. 'beam' → logprob: -1.687049388885498
    4. 'max' → logprob: -2.687049388885498
    5. '
' → logprob: -3.437049388885498
    6. 'for' → logprob: -3.687049388885498
    7. 'stack' → logprob: -4.062049388885498
    8. 'answer' → logprob: -4.187049388885498
    9. 'result' → logprob: -4.312049388885498
    10. 'res' → logprob: -4.312049388885498

Token 190: 'def' (ID: 1314)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.7829272150993347
    2. 'dp' → logprob: -1.4079272747039795
    3. 'ans' → logprob: -2.4079272747039795
    4. 'for' → logprob: -3.5329272747039795
    5. 'q' → logprob: -3.7829272747039795
    6. 'answer' → logprob: -3.9079272747039795
    7. 'que' → logprob: -3.9079272747039795
    8. 'queue' → logprob: -4.1579270362854
    9. 'hq' → logprob: -4.1579270362854
    10. 'res' → logprob: -4.4079270362854

Token 191: ' seg' (ID: 3055)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.4828782081604004
    2. ' check' → logprob: -2.3578782081604004
    3. ' main' → logprob: -2.7328782081604004
    4. ' dfs' → logprob: -2.9828782081604004
    5. ' beam' → logprob: -3.2328782081604004
    6. ' calculate' → logprob: -4.1078782081604
    7. ' calc' → logprob: -4.2328782081604
    8. ' can' → logprob: -4.8578782081604
    9. 'solve' → logprob: -4.8578782081604
    10. ' find' → logprob: -4.9828782081604

Token 192: 'func' (ID: 5652)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -9.007317567011341e-05
    2. 'ment' → logprob: -10.125089645385742
    3. 't' → logprob: -10.750089645385742
    4. '_tree' → logprob: -11.125089645385742
    5. 'tre' → logprob: -11.625089645385742
    6. ' tree' → logprob: -13.500089645385742
    7. 'mtree' → logprob: -14.000089645385742
    8. 'm' → logprob: -14.750089645385742
    9. 'seg' → logprob: -14.875089645385742
    10. 'trees' → logprob: -15.250089645385742

Token 193: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04347297176718712
    2. '(x' → logprob: -3.4184730052948
    3. '(' → logprob: -4.668472766876221
    4. '(left' → logprob: -8.168473243713379
    5. '(l' → logprob: -10.043473243713379
    6. '(min' → logprob: -10.418473243713379
    7. ' (' → logprob: -11.418473243713379
    8. '(lhs' → logprob: -11.668473243713379
    9. 'a' → logprob: -12.918473243713379
    10. '(data' → logprob: -13.168473243713379

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004499765345826745
    2. ',y' → logprob: -7.750450134277344
    3. ' ,' → logprob: -10.875450134277344
    4. ',
' → logprob: -15.500450134277344
    5. ',v' → logprob: -16.875450134277344
    6. ',x' → logprob: -17.000450134277344
    7. ',b' → logprob: -17.500450134277344
    8. 'y' → logprob: -17.625450134277344
    9. '1' → logprob: -17.625450134277344
    10. ',int' → logprob: -17.875450134277344

Token 195: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002614550176076591
    2. ' y' → logprob: -8.250261306762695
    3. ',y' → logprob: -16.500261306762695
    4. '	y' → logprob: -17.625261306762695
    5. '
' → logprob: -19.125261306762695
    6. 'a' → logprob: -19.125261306762695
    7. '   ' → logprob: -19.500261306762695
    8. ',' → logprob: -20.000261306762695
    9. 'v' → logprob: -20.375261306762695
    10. ' ' → logprob: -20.875261306762695

Token 196: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005426656571216881
    2. '):
' → logprob: -7.750542640686035
    3. ' ):' → logprob: -9.375542640686035
    4. ':' → logprob: -10.625542640686035
    5. ')' → logprob: -13.500542640686035
    6. '):
' → logprob: -15.125542640686035
    7. '=' → logprob: -15.250542640686035
    8. ',' → logprob: -15.375542640686035
    9. '}:' → logprob: -15.750542640686035
    10. '   ' → logprob: -16.00054359436035

Token 197: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.485554575920105
    2. ' return' → logprob: -0.985554575920105
    3. '   ' → logprob: -4.4855546951293945
    4. '	return' → logprob: -9.235554695129395
    5. ':return' → logprob: -10.235554695129395
    6. '{return' → logprob: -12.485554695129395
    7. '
' → logprob: -14.235554695129395
    8. '```' → logprob: -14.235554695129395
    9. ' ' → logprob: -14.735554695129395
    10. 'eturn' → logprob: -14.735554695129395

Token 198: ' return' (ID: 622)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.006991826929152012
    2. 'return' (adapté à ' return') → logprob: -5.006991863250732
    3. ' min' → logprob: -8.631991386413574
    4. '   ' → logprob: -10.131991386413574
    5. 'x' → logprob: -10.506991386413574
    6. 'max' → logprob: -10.756991386413574
    7. ' return' → logprob: -11.631991386413574
    8. '	min' → logprob: -16.00699234008789
    9. 'if' → logprob: -16.38199234008789
    10. '0' → logprob: -16.38199234008789

Token 199: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07108046859502792
    2. 'x' → logprob: -2.696080446243286
    3. 'max' → logprob: -7.321080684661865
    4. ' min' → logprob: -7.696080684661865
    5. ' x' → logprob: -11.071080207824707
    6. '	min' → logprob: -12.071080207824707
    7. '[min' → logprob: -13.446080207824707
    8. '(min' → logprob: -13.821080207824707
    9. 'xmin' → logprob: -14.196080207824707
    10. '0' → logprob: -14.946080207824707

Token 200: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.000676096766255796
    2. 'x' → logprob: -7.875676155090332
    3. '(' → logprob: -8.125676155090332
    4. ' (' → logprob: -17.000675201416016
    5. '(
' → logprob: -17.250675201416016
    6. '((' → logprob: -18.625675201416016
    7. ' x' → logprob: -19.000675201416016
    8. '```' → logprob: -19.500675201416016
    9. '	x' → logprob: -20.000675201416016
    10. 'a' → logprob: -20.125675201416016

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03991549462080002
    2. ',y' → logprob: -3.2899155616760254
    3. ' ,' → logprob: -6.289915561676025
    4. 'y' → logprob: -11.039915084838867
    5. ' y' → logprob: -13.664915084838867
    6. ',
' → logprob: -17.039915084838867
    7. '   ' → logprob: -19.414915084838867
    8. ' ,
' → logprob: -19.414915084838867
    9. ',x' → logprob: -19.414915084838867
    10. ',Y' → logprob: -19.414915084838867

Token 202: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0011703446507453918
    2. ' y' → logprob: -6.7511701583862305
    3. '   ' → logprob: -16.626171112060547
    4. ')y' → logprob: -18.126171112060547
    5. '	y' → logprob: -18.376171112060547
    6. ' ' → logprob: -19.751171112060547
    7. '<|end|>' → logprob: -19.751171112060547
    8. ')' → logprob: -20.001171112060547
    9. '    ' → logprob: -20.376171112060547
    10. '  ' → logprob: -21.126171112060547

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -12.500003814697266
    3. ')
' → logprob: -15.375003814697266
    4. '),' → logprob: -17.125003814697266
    5. '))' → logprob: -18.250003814697266
    6. ')return' → logprob: -18.875003814697266
    7. ')}' → logprob: -18.875003814697266
    8. '<|end|>' → logprob: -19.125003814697266
    9. ')

' → logprob: -19.250003814697266
    10. '}' → logprob: -19.750003814697266

Token 204: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6479775309562683
    2. 'size' → logprob: -1.397977590560913
    3. 'ide' → logprob: -2.022977590560913
    4. 'def' → logprob: -3.147977590560913
    5. 'identity' → logprob: -3.772977590560913
    6. 'unit' → logprob: -4.397977352142334
    7. 'inf' → logprob: -4.897977352142334
    8. 'INF' → logprob: -5.647977352142334
    9. 'import' → logprob: -6.522977352142334
    10. 'init' → logprob: -7.272977352142334

Token 205: ' gcd' (ID: 106918)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.526562511920929
    2. 'g' → logprob: -2.026562452316284
    3. 'seg' → logprob: -2.401562452316284
    4. 'update' → logprob: -2.651562452316284
    5. 'ide' → logprob: -2.776562452316284
    6. 'ini' → logprob: -4.651562690734863
    7. 'up' → logprob: -5.026562690734863
    8. 'op' → logprob: -5.276562690734863
    9. '
' → logprob: -5.526562690734863
    10. ' seg' → logprob: -5.776562690734863

Token 206: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6415945887565613
    2. '(' → logprob: -0.8915945887565613
    3. '(x' → logprob: -2.766594648361206
    4. '(n' → logprob: -9.016594886779785
    5. ' (' → logprob: -9.391594886779785
    6. '<|end|>' → logprob: -9.391594886779785
    7. '_' → logprob: -9.891594886779785
    8. 'def' → logprob: -9.891594886779785
    9. 'a' → logprob: -10.516594886779785
    10. '_div' → logprob: -10.641594886779785

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002939309924840927
    2. ',b' → logprob: -5.877939224243164
    3. ' ,' → logprob: -9.002939224243164
    4. 'b' → logprob: -11.752939224243164
    5. '_,' → logprob: -13.752939224243164
    6. ',a' → logprob: -14.252939224243164
    7. ',)' → logprob: -14.752939224243164
    8. ',
' → logprob: -15.127939224243164
    9. '，' → logprob: -15.502939224243164
    10. ',d' → logprob: -16.252939224243164

Token 208: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004078758880496025
    2. ' b' → logprob: -5.5040788650512695
    3. ' ' → logprob: -15.50407886505127
    4. '<|end|>' → logprob: -16.754077911376953
    5. ')b' → logprob: -17.129077911376953
    6. ')' → logprob: -17.629077911376953
    7. ',b' → logprob: -17.879077911376953
    8. 'def' → logprob: -18.504077911376953
    9. '>b' → logprob: -19.504077911376953
    10. '  ' → logprob: -19.879077911376953

Token 209: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017330136615782976
    2. '):
' → logprob: -6.37673282623291
    3. ':' → logprob: -10.87673282623291
    4. ' ):' → logprob: -11.62673282623291
    5. '):
' → logprob: -13.87673282623291
    6. ')' → logprob: -13.87673282623291
    7. '   ' → logprob: -14.50173282623291
    8. ',' → logprob: -15.00173282623291
    9. '):

' → logprob: -16.126733779907227
    10. '}:' → logprob: -16.501733779907227

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12209856510162354
    2. ' if' → logprob: -2.247098445892334
    3. ' return' → logprob: -5.497098445892334
    4. '    ' → logprob: -5.747098445892334
    5. ' a' → logprob: -6.747098445892334
    6. 'if' → logprob: -8.247098922729492
    7. 'a' → logprob: -8.872098922729492
    8. 'return' → logprob: -8.997098922729492
    9. ' while' → logprob: -9.872098922729492
    10. ' ' → logprob: -9.872098922729492

Token 211: ' while' (ID: 2049)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02759612165391445
    2. ' a' → logprob: -3.7775962352752686
    3. 'b' → logprob: -5.5275959968566895
    4. ' b' → logprob: -8.277596473693848
    5. ' return' → logprob: -10.652596473693848
    6. '   ' → logprob: -10.652596473693848
    7. 'return' → logprob: -10.902596473693848
    8. 'abs' → logprob: -11.027596473693848
    9. 'if' → logprob: -11.402596473693848
    10. 'while' (adapté à ' while') → logprob: -12.152596473693848

Token 212: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0028141476213932037
    2. ' b' → logprob: -5.877814292907715
    3. 'a' → logprob: -11.627814292907715
    4. '	b' → logprob: -15.627814292907715
    5. '(b' → logprob: -16.2528133392334
    6. '   ' → logprob: -16.5028133392334
    7. ' a' → logprob: -16.6278133392334
    8. ' ' → logprob: -17.3778133392334
    9. '_b' → logprob: -18.6278133392334
    10. '```' → logprob: -19.0028133392334

Token 213: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5422955751419067
    2. '!=' → logprob: -1.2922955751419067
    3. ':
' → logprob: -2.167295455932617
    4. ' !=' → logprob: -3.542295455932617
    5. '>' → logprob: -8.167295455932617
    6. '!==' → logprob: -9.792295455932617
    7. '%' → logprob: -10.292295455932617
    8. '!='' → logprob: -11.042295455932617
    9. '!="' → logprob: -11.167295455932617
    10. '!' → logprob: -11.292295455932617

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21643319725990295
    2. 'a' → logprob: -1.9664331674575806
    3. ' a' → logprob: -3.09143328666687
    4. '<|end|>' → logprob: -5.466433048248291
    5. '	a' → logprob: -6.341433048248291
    6. '   ' → logprob: -6.466433048248291
    7. ',a' → logprob: -7.466433048248291
    8. ',' → logprob: -7.966433048248291
    9. '	' → logprob: -8.59143352508545
    10. '<|end|>' → logprob: -9.34143352508545

Token 215: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.023248974233865738
    2. ' a' → logprob: -3.7732489109039307
    3. '	a' → logprob: -12.773248672485352
    4. '       ' → logprob: -14.898248672485352
    5. '   ' → logprob: -15.023248672485352
    6. '>a' → logprob: -16.77324867248535
    7. '```' → logprob: -17.52324867248535
    8. '
' → logprob: -18.39824867248535
    9. '_a' → logprob: -18.52324867248535
    10. ',a' → logprob: -18.64824867248535

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05202845111489296
    2. '%=' → logprob: -3.0520284175872803
    3. '%' → logprob: -6.427028656005859
    4. '%b' → logprob: -6.927028656005859
    5. ' %=' → logprob: -7.677028656005859
    6. ',b' → logprob: -8.17702865600586
    7. '%,' → logprob: -10.17702865600586
    8. ' ,' → logprob: -10.42702865600586
    9. '=' → logprob: -11.55202865600586
    10. 'a' → logprob: -12.55202865600586

Token 217: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005233763717114925
    2. ' b' → logprob: -5.2552337646484375
    3. '<|end|>' → logprob: -18.755233764648438
    4. '	b' → logprob: -19.130233764648438
    5. ' ' → logprob: -19.380233764648438
    6. '   ' → logprob: -20.505233764648438
    7. '>b' → logprob: -21.005233764648438
    8. '    ' → logprob: -21.255233764648438
    9. '=b' → logprob: -21.630233764648438
    10. ')b' → logprob: -21.630233764648438

Token 218: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804550692439079
    2. ' =' → logprob: -3.2880454063415527
    3. '=b' → logprob: -12.538045883178711
    4. '=a' → logprob: -16.16304588317871
    5. '=

' → logprob: -16.28804588317871
    6. 'b' → logprob: -16.41304588317871
    7. '=
' → logprob: -16.41304588317871
    8. '%=' → logprob: -17.28804588317871
    9. 'a' → logprob: -17.41304588317871
    10. ' ' → logprob: -17.78804588317871

Token 219: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06196768581867218
    2. ' b' → logprob: -2.811967611312866
    3. '	b' → logprob: -17.686967849731445
    4. '   ' → logprob: -18.811967849731445
    5. ' ' → logprob: -19.186967849731445
    6. '>b' → logprob: -20.436967849731445
    7. ')b' → logprob: -20.811967849731445
    8. '(b' → logprob: -20.936967849731445
    9. '_b' → logprob: -21.311967849731445
    10. '    ' → logprob: -21.936967849731445

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.661626634420827e-05
    2. ',b' → logprob: -10.375086784362793
    3. 'b' → logprob: -10.500086784362793
    4. ' ,' → logprob: -11.125086784362793
    5. 'a' → logprob: -11.625086784362793
    6. ' b' → logprob: -12.875086784362793
    7. ',a' → logprob: -14.375086784362793
    8. '%b' → logprob: -14.750086784362793
    9. '%' → logprob: -15.250086784362793
    10. ' ' → logprob: -15.750086784362793

Token 221: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00861456897109747
    2. ' a' → logprob: -4.758614540100098
    3. ' ' → logprob: -18.383615493774414
    4. '	a' → logprob: -19.008615493774414
    5. '>a' → logprob: -22.133615493774414
    6. '<|end|>' → logprob: -22.133615493774414
    7. '   ' → logprob: -22.383615493774414
    8. '```' → logprob: -23.133615493774414
    9. '(a' → logprob: -23.258615493774414
    10. '"a' → logprob: -23.258615493774414

Token 222: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.062145259231328964
    2. ' %' → logprob: -2.812145233154297
    3. 'a' → logprob: -8.937145233154297
    4. '%b' → logprob: -10.187145233154297
    5. ' a' → logprob: -12.187145233154297
    6. ' ' → logprob: -13.312145233154297
    7. '%i' → logprob: -14.562145233154297
    8. '%x' → logprob: -14.937145233154297
    9. '<|end|>' → logprob: -15.312145233154297
    10. '%A' → logprob: -15.437145233154297

Token 223: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.157039049663581e-05
    2. ' b' → logprob: -9.875051498413086
    3. ' ' → logprob: -20.625051498413086
    4. '	b' → logprob: -21.625051498413086
    5. '```' → logprob: -22.375051498413086
    6. '   ' → logprob: -23.125051498413086
    7. '<|end|>' → logprob: -23.125051498413086
    8. '_b' → logprob: -23.250051498413086
    9. '  ' → logprob: -23.625051498413086
    10. ')b' → logprob: -23.875051498413086

Token 224: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44302499294281006
    2. 'return' → logprob: -1.31802499294281
    3. ' return' → logprob: -2.5680251121520996
    4. 'def' → logprob: -5.3180251121521
    5. 'a' → logprob: -5.8180251121521
    6. ' ' → logprob: -7.0680251121521
    7. '
' → logprob: -7.0680251121521
    8. '       ' → logprob: -7.0680251121521
    9. ' a' → logprob: -7.1930251121521
    10. 'b' → logprob: -7.1930251121521

Token 226: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20157325267791748
    2. ' return' → logprob: -1.7015732526779175
    3. 'a' → logprob: -9.201573371887207
    4. '   ' → logprob: -10.076573371887207
    5. ' a' → logprob: -11.326573371887207
    6. ' ' → logprob: -12.451573371887207
    7. '	return' → logprob: -14.951573371887207
    8. '  ' → logprob: -15.076573371887207
    9. 'eturn' → logprob: -15.826573371887207
    10. '
' → logprob: -16.32657241821289

Token 227: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0206720617134124e-05
    2. ' a' → logprob: -11.50001049041748
    3. 'abs' → logprob: -18.250009536743164
    4. '   ' → logprob: -18.625009536743164
    5. ' ' → logprob: -19.125009536743164
    6. '	a' → logprob: -20.250009536743164
    7. '  ' → logprob: -21.125009536743164
    8. 'b' → logprob: -21.875009536743164
    9. 'а' → logprob: -21.875009536743164
    10. '0' → logprob: -22.500009536743164

Token 228: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31446573138237
    2. ')' → logprob: -1.9394657611846924
    3. '<|end|>' → logprob: -3.3144657611846924
    4. ',' → logprob: -3.6894657611846924
    5. ' ' → logprob: -4.314465522766113
    6. '_' → logprob: -4.939465522766113
    7. ' 
' → logprob: -5.064465522766113
    8. '0' → logprob: -5.439465522766113
    9. 'data' → logprob: -5.439465522766113
    10. '+' → logprob: -5.564465522766113

Token 229: 'def' (ID: 1314)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -1.2797263860702515
    2. 'INF' → logprob: -1.4047263860702515
    3. 'size' → logprob: -1.6547263860702515
    4. 'class' → logprob: -1.7797263860702515
    5. 'inf' → logprob: -3.904726505279541
    6. 'def' → logprob: -3.904726505279541
    7. 'ide' → logprob: -4.029726505279541
    8. 'mod' → logprob: -4.154726505279541
    9. 'max' → logprob: -5.029726505279541
    10. 'segment' → logprob: -5.654726505279541

Token 230: ' Seg' (ID: 13616)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3164180517196655
    2. ' seg' → logprob: -2.066418170928955
    3. 'main' → logprob: -2.441418170928955
    4. ' solve' → logprob: -4.316418170928955
    5. 'seg' → logprob: -4.691418170928955
    6. 'solve' → logprob: -5.191418170928955
    7. ' query' → logprob: -5.941418170928955
    8. ' segment' → logprob: -6.066418170928955
    9. ' update' → logprob: -6.316418170928955
    10. ' l' → logprob: -6.316418170928955

Token 231: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.5248987078666687
    2. 'tree' → logprob: -1.0248987674713135
    3. 'ment' → logprob: -3.0248987674713135
    4. 'ement' → logprob: -7.399898529052734
    5. 'mented' → logprob: -8.774898529052734
    6. 'mentation' → logprob: -9.899898529052734
    7. ' tree' → logprob: -10.399898529052734
    8. '_tree' → logprob: -10.399898529052734
    9. 'Ment' → logprob: -10.649898529052734
    10. '(tree' → logprob: -10.774898529052734

Token 232: '_build' (ID: 49774)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13815391063690186
    2. '(size' → logprob: -2.6381540298461914
    3. '():' → logprob: -3.0131540298461914
    4. '(' → logprob: -5.513154029846191
    5. '(init' → logprob: -6.388154029846191
    6. '(object' → logprob: -7.013154029846191
    7. ':
' → logprob: -7.638154029846191
    8. '(n' → logprob: -8.763154029846191
    9. '():
' → logprob: -8.763154029846191
    10. ' :' → logprob: -8.763154029846191

Token 233: '(init' (ID: 76539)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.04061294347047806
    2. '(size' → logprob: -3.7906129360198975
    3. '(n' → logprob: -4.540613174438477
    4. '(a' → logprob: -5.915613174438477
    5. '(array' → logprob: -6.790613174438477
    6. '(N' → logprob: -6.915613174438477
    7. '(lst' → logprob: -7.290613174438477
    8. '(data' → logprob: -7.790613174438477
    9. '(A' → logprob: -8.165613174438477
    10. '(l' → logprob: -9.040613174438477

Token 234: '_val' (ID: 13694)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6740913391113281
    2. 'data' → logprob: -1.7990913391113281
    3. '_data' → logprob: -2.049091339111328
    4. '_array' → logprob: -2.924091339111328
    5. 'array' → logprob: -3.174091339111328
    6. '_list' → logprob: -3.799091339111328
    7. '_arr' → logprob: -4.049091339111328
    8. '):
' → logprob: -4.299091339111328
    9. ',' → logprob: -4.299091339111328
    10. '_' → logprob: -4.549091339111328

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04014237970113754
    2. '):' → logprob: -3.290142297744751
    3. 's' → logprob: -7.29014253616333
    4. ' ,' → logprob: -7.41514253616333
    5. ',size' → logprob: -8.415142059326172
    6. '):
' → logprob: -8.665142059326172
    7. ',n' → logprob: -9.165142059326172
    8. '(init' → logprob: -9.665142059326172
    9. '(arr' → logprob: -9.915142059326172
    10. ')' → logprob: -10.790142059326172

Token 236: ' seg' (ID: 3055)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18084467947483063
    2. 'num' → logprob: -2.430844783782959
    3. 'seg' → logprob: -3.305844783782959
    4. 'N' → logprob: -4.055844783782959
    5. 'e' → logprob: -4.930844783782959
    6. 'init' → logprob: -5.180844783782959
    7. 'ide' → logprob: -5.805844783782959
    8. ' n' → logprob: -6.305844783782959
    9. ' ' → logprob: -6.680844783782959
    10. ' seg' → logprob: -6.930844783782959

Token 237: 'func' (ID: 5652)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.09653056412935257
    2. '_size' → logprob: -2.5965306758880615
    3. 'func' → logprob: -4.721530437469482
    4. 'size' → logprob: -5.721530437469482
    5. '_len' → logprob: -6.346530437469482
    6. '_tree' → logprob: -6.971530437469482
    7. '_' → logprob: -7.346530437469482
    8. '_num' → logprob: -7.721530437469482
    9. 'ment' → logprob: -8.09653091430664
    10. '_sz' → logprob: -8.22153091430664

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018960997462272644
    2. '):' → logprob: -4.018960952758789
    3. ' ,' → logprob: -7.268960952758789
    4. ')' → logprob: -10.643960952758789
    5. ' ):' → logprob: -10.643960952758789
    6. ',size' → logprob: -10.893960952758789
    7. '):
' → logprob: -11.393960952758789
    8. '=' → logprob: -12.518960952758789
    9. ',length' → logprob: -12.768960952758789
    10. 'def' → logprob: -12.768960952758789

Token 239: ' ide' (ID: 2750)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.03471789509057999
    2. 'init' → logprob: -3.6597177982330322
    3. 'num' → logprob: -5.534718036651611
    4. 'N' → logprob: -7.034718036651611
    5. '
' → logprob: -7.159718036651611
    6. 'n' → logprob: -7.284718036651611
    7. '   ' → logprob: -8.034717559814453
    8. 'identity' → logprob: -8.159717559814453
    9. 'e' → logprob: -8.284717559814453
    10. 'ele' → logprob: -8.784717559814453

Token 240: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.000700045726262033
    2. 'ele' → logprob: -7.375699996948242
    3. '_e' → logprob: -10.000699996948242
    4. ')' → logprob: -11.875699996948242
    5. '_elem' → logprob: -12.000699996948242
    6. 'Ele' → logprob: -12.000699996948242
    7. '_el' → logprob: -13.250699996948242
    8. 'e' → logprob: -13.375699996948242
    9. '_val' → logprob: -14.000699996948242
    10. '):
' → logprob: -14.250699996948242

Token 241: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006538204033859074
    2. '):
' → logprob: -8.000654220581055
    3. ',' → logprob: -8.625654220581055
    4. ')' → logprob: -9.625654220581055
    5. '=' → logprob: -10.375654220581055
    6. ' ):' → logprob: -10.500654220581055
    7. '):
' → logprob: -12.500654220581055
    8. ':' → logprob: -13.000654220581055
    9. '=None' → logprob: -13.500654220581055
    10. 'def' → logprob: -13.625654220581055

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0108968960121274
    2. 'n' → logprob: -5.010896682739258
    3. ':' → logprob: -6.135896682739258
    4. ':
' → logprob: -6.760896682739258
    5. '	n' → logprob: -8.635896682739258
    6. '):
' → logprob: -8.760896682739258
    7. '):' → logprob: -8.885896682739258
    8. ',' → logprob: -9.010896682739258
    9. '    
' → logprob: -9.635896682739258
    10. '
' → logprob: -10.135896682739258

Token 243: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.01111278124153614
    2. ' n' → logprob: -4.511112689971924
    3. 'N' → logprob: -10.261113166809082
    4. '   ' → logprob: -10.761113166809082
    5. '	n' → logprob: -12.261113166809082
    6. 'size' → logprob: -13.886113166809082
    7. 'length' → logprob: -13.886113166809082
    8. ' ' → logprob: -14.136113166809082
    9. 'num' → logprob: -14.136113166809082
    10. ' length' → logprob: -15.011113166809082

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1003023162484169
    2. '=' → logprob: -2.350302219390869
    3. '=len' → logprob: -9.850302696228027
    4. '=int' → logprob: -10.100302696228027
    5. '＝' → logprob: -14.600302696228027
    6. ' ' → logprob: -15.225302696228027
    7. '   ' → logprob: -15.350302696228027
    8. '=input' → logprob: -15.475302696228027
    9. '=n' → logprob: -16.10030174255371
    10. '	' → logprob: -16.60030174255371

Token 245: ' len' (ID: 4631)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014036978245712817
    2. 'len' → logprob: -8.875140190124512
    3. ' ' → logprob: -14.500140190124512
    4. '   ' → logprob: -18.250141143798828
    5. '2' → logprob: -18.375141143798828
    6. '
' → logprob: -18.500141143798828
    7. '１' → logprob: -19.500141143798828
    8. '```' → logprob: -19.625141143798828
    9. ' len' → logprob: -20.000141143798828
    10. '(len' → logprob: -20.500141143798828

Token 246: '(init' (ID: 76539)
  Prédit: '(init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(init' → logprob: -0.018150178715586662
    2. 'init' → logprob: -4.018150329589844
    3. ':init' → logprob: -16.393150329589844
    4. ' init' → logprob: -16.393150329589844
    5. ')init' → logprob: -16.518150329589844
    6. '_init' → logprob: -16.893150329589844
    7. '(' → logprob: -17.893150329589844
    8. '	init' → logprob: -18.018150329589844
    9. '```' → logprob: -18.018150329589844
    10. '.init' → logprob: -19.393150329589844

Token 247: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -4.961759259458631e-06
    2. 'val' → logprob: -12.250004768371582
    3. ')' → logprob: -16.7500057220459
    4. '_init' → logprob: -17.1250057220459
    5. '_' → logprob: -18.0000057220459
    6. '(val' → logprob: -18.1250057220459
    7. '```' → logprob: -18.6250057220459
    8. 'Val' → logprob: -18.7500057220459
    9. '_VAL' → logprob: -18.8750057220459
    10. ' _' → logprob: -19.3750057220459

Token 248: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2520604729652405
    2. ')' → logprob: -1.5020604133605957
    3. ' )
' → logprob: -9.627060890197754
    4. ' )' → logprob: -10.752060890197754
    5. ')
' → logprob: -11.377060890197754
    6. '
' → logprob: -12.002060890197754
    7. ')n' → logprob: -12.002060890197754
    8. ')*' → logprob: -12.252060890197754
    9. ')<<' → logprob: -12.752060890197754
    10. ')

' → logprob: -12.877060890197754

Token 249: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6605870127677917
    2. '   ' → logprob: -1.4105870723724365
    3. 'size' → logprob: -1.9105870723724365
    4. ' n' → logprob: -3.1605870723724365
    5. 'tree' → logprob: -4.160586833953857
    6. ' size' → logprob: -4.285586833953857
    7. 'sz' → logprob: -5.285586833953857
    8. 'k' → logprob: -5.910586833953857
    9. 'while' → logprob: -6.035586833953857
    10. 's' → logprob: -6.535586833953857

Token 250: ' num' (ID: 2269)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.01025026012212038
    2. 'n' → logprob: -5.760250091552734
    3. '_size' → logprob: -5.760250091552734
    4. 'sz' → logprob: -6.260250091552734
    5. 'seg' → logprob: -7.135250091552734
    6. 'num' (adapté à ' num') → logprob: -8.010250091552734
    7. 'siz' → logprob: -8.260250091552734
    8. 'N' → logprob: -8.385250091552734
    9. 'tree' → logprob: -9.010250091552734
    10. '   ' → logprob: -9.510250091552734

Token 251: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5690329074859619
    2. ' =' → logprob: -0.9440329074859619
    3. '_nodes' → logprob: -3.194032907485962
    4. '_tree' → logprob: -7.069032669067383
    5. '=int' → logprob: -7.319032669067383
    6. '=n' → logprob: -7.694032669067383
    7. '_elements' → logprob: -7.819032669067383
    8. '_node' → logprob: -8.819032669067383
    9. '=N' → logprob: -8.944032669067383
    10. '=[' → logprob: -9.069032669067383

Token 252: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.375
    3. '2' → logprob: -16.5
    4. '
' → logprob: -18.25
    5. '   ' → logprob: -18.375
    6. 'n' → logprob: -18.875
    7. '```' → logprob: -19.625
    8. '１' → logprob: -19.875
    9. '  ' → logprob: -22.25
    10. '(' → logprob: -22.625

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '2' → logprob: -13.750000953674316
    3. '
' → logprob: -18.125001907348633
    4. ' ' → logprob: -19.125001907348633
    5. '１' → logprob: -20.125001907348633
    6. '```' → logprob: -20.500001907348633
    7. 'n' → logprob: -20.625001907348633
    8. '(' → logprob: -21.000001907348633
    9. '   ' → logprob: -21.250001907348633
    10. '0' → logprob: -22.250001907348633

Token 254: ' <<' (ID: 2256)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0501655675470829
    2. '<<' → logprob: -3.0501656532287598
    3. '<<(' → logprob: -7.05016565322876
    4. ' <<' → logprob: -8.050165176391602
    5. 'while' → logprob: -8.800165176391602
    6. ' <<=' → logprob: -8.925165176391602
    7. '  
' → logprob: -10.800165176391602
    8. '
' → logprob: -10.925165176391602
    9. '    
' → logprob: -11.425165176391602
    10. '<<<' → logprob: -11.550165176391602

Token 255: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00025561772054061294
    2. ' (' → logprob: -8.625255584716797
    3. '(N' → logprob: -10.375255584716797
    4. 'n' → logprob: -10.625255584716797
    5. '(' → logprob: -11.000255584716797
    6. '((' → logprob: -12.625255584716797
    7. '
' → logprob: -14.625255584716797
    8. '(int' → logprob: -16.500255584716797
    9. '(len' → logprob: -17.500255584716797
    10. ' n' → logprob: -18.125255584716797

Token 256: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25195688009262085
    2. '(n' → logprob: -1.5019569396972656
    3. ' n' → logprob: -11.251956939697266
    4. ' (' → logprob: -11.751956939697266
    5. 'len' → logprob: -13.126956939697266
    6. '(N' → logprob: -13.626956939697266
    7. '(len' → logprob: -13.751956939697266
    8. '((' → logprob: -14.001956939697266
    9. '
' → logprob: -14.251956939697266
    10. '_n' → logprob: -14.751956939697266

Token 257: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0025037210434675217
    2. '.bit' → logprob: -6.252503871917725
    3. ' -' → logprob: -7.502503871917725
    4. ').' → logprob: -11.127503395080566
    5. '.' → logprob: -12.752503395080566
    6. 'n' → logprob: -13.127503395080566
    7. '-.' → logprob: -13.502503395080566
    8. 'bit' → logprob: -14.252503395080566
    9. '−' → logprob: -14.752503395080566
    10. '
' → logprob: -15.127503395080566

Token 258: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. '
' → logprob: -16.000003814697266
    4. '```' → logprob: -16.875003814697266
    5. '(' → logprob: -17.000003814697266
    6. '

' → logprob: -18.500003814697266
    7. '   ' → logprob: -18.937503814697266
    8. 'import' → logprob: -18.937503814697266
    9. ' (' → logprob: -19.187503814697266
    10. '-' → logprob: -19.187503814697266

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '
' → logprob: -16.625001907348633
    4. '```' → logprob: -17.875001907348633
    5. '(' → logprob: -18.375001907348633
    6. '   ' → logprob: -18.500001907348633
    7. '  ' → logprob: -19.250001907348633
    8. 'import' → logprob: -19.750001907348633
    9. '
' → logprob: -19.875001907348633
    10. 'bit' → logprob: -20.000001907348633

Token 260: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -2.2842308680992573e-05
    2. '.bit' → logprob: -11.375022888183594
    3. ' ).' → logprob: -12.875022888183594
    4. '.' → logprob: -13.000022888183594
    5. '].' → logprob: -13.000022888183594
    6. 'bit' → logprob: -13.375022888183594
    7. ')' → logprob: -14.000022888183594
    8. '```' → logprob: -14.750022888183594
    9. '}.' → logprob: -15.125022888183594
    10. '0' → logprob: -15.500022888183594

Token 261: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -5.512236498361744e-07
    2. '.bit' → logprob: -15.500000953674316
    3. '```' → logprob: -16.0
    4. ' bit' → logprob: -16.25
    5. 'b' → logprob: -17.375
    6. 'bits' → logprob: -18.25
    7. 'bi' → logprob: -19.25
    8. '_bit' → logprob: -19.5
    9. '**' → logprob: -19.625
    10. ' ' → logprob: -19.75

Token 262: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.2113979209971149e-05
    2. 'length' → logprob: -11.500012397766113
    3. 'ength' → logprob: -13.750012397766113
    4. '_LENGTH' → logprob: -15.500012397766113
    5. '```' → logprob: -15.875012397766113
    6. 'n' → logprob: -16.000011444091797
    7. 'len' → logprob: -16.500011444091797
    8. '_count' → logprob: -17.125011444091797
    9. 'l' → logprob: -17.500011444091797
    10. 'leng' → logprob: -17.500011444091797

Token 263: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00874292477965355
    2. '   ' → logprob: -6.133742809295654
    3. '*' → logprob: -6.258742809295654
    4. 'n' → logprob: -6.258742809295654
    5. ' ' → logprob: -7.633742809295654
    6. 'while' → logprob: -7.883742809295654
    7. '    
' → logprob: -8.008743286132812
    8. '#' → logprob: -8.133743286132812
    9. ' 
' → logprob: -8.133743286132812
    10. '<|end|>' → logprob: -8.633743286132812

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2514778971672058
    2. 'tree' → logprob: -2.6264779567718506
    3. ' seg' → logprob: -3.0014779567718506
    4. 'seg' → logprob: -3.0014779567718506
    5. ' tree' → logprob: -3.5014779567718506
    6. 'data' → logprob: -4.5014777183532715
    7. 'st' → logprob: -5.3764777183532715
    8. ' data' → logprob: -6.0014777183532715
    9. ' st' → logprob: -6.8764777183532715
    10. '	tree' → logprob: -7.3764777183532715

Token 265: ' tree' (ID: 8165)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.044224489480257034
    2. 'data' → logprob: -4.044224262237549
    3. 'tree' (adapté à ' tree') → logprob: -4.419224262237549
    4. ' seg' → logprob: -4.669224262237549
    5. 'dat' → logprob: -5.919224262237549
    6. 'st' → logprob: -6.669224262237549
    7. '   ' → logprob: -9.044224739074707
    8. 'Seg' → logprob: -9.419224739074707
    9. 'node' → logprob: -9.919224739074707
    10. ' dat' → logprob: -11.294224739074707

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141851902008057
    2. '=' → logprob: -1.7014185190200806
    3. '=[' → logprob: -13.07641887664795
    4. ' =[' → logprob: -13.07641887664795
    5. ' ' → logprob: -14.70141887664795
    6. '[' → logprob: -14.95141887664795
    7. '=[]' → logprob: -16.201417922973633
    8. '＝' → logprob: -16.576417922973633
    9. '```' → logprob: -16.826417922973633
    10. ' =
' → logprob: -17.451417922973633

Token 267: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001804415020160377
    2. ' [' → logprob: -6.376804351806641
    3. '[id' → logprob: -10.00180435180664
    4. '[num' → logprob: -11.25180435180664
    5. '[n' → logprob: -11.50180435180664
    6. '[i' → logprob: -11.87680435180664
    7. '[ip' → logprob: -12.50180435180664
    8. '[ind' → logprob: -12.75180435180664
    9. '[int' → logprob: -13.25180435180664
    10. '[e' → logprob: -13.75180435180664

Token 268: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -1.1279553291387856e-05
    2. ' ide' → logprob: -11.625011444091797
    3. 'ideo' → logprob: -13.375011444091797
    4. 'iden' → logprob: -15.125011444091797
    5. '   ' → logprob: -16.000011444091797
    6. 'idem' → logprob: -16.375011444091797
    7. 'idele' → logprob: -17.000011444091797
    8. '.ide' → logprob: -17.125011444091797
    9. '(' → logprob: -17.375011444091797
    10. 'ides' → logprob: -17.750011444091797

Token 269: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -7.517272024415433e-05
    2. 'ele' → logprob: -9.500075340270996
    3. '_e' → logprob: -16.25007438659668
    4. 'Ele' → logprob: -16.37507438659668
    5. '-ele' → logprob: -17.62507438659668
    6. '(ele' → logprob: -19.12507438659668
    7. 'ELE' → logprob: -20.25007438659668
    8. '_' → logprob: -21.00007438659668
    9. ' ele' → logprob: -21.37507438659668
    10. ' ' → logprob: -22.25007438659668

Token 270: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010020548506872728
    2. ']*(' → logprob: -9.500100135803223
    3. ']*' → logprob: -11.250100135803223
    4. ' ]' → logprob: -11.500100135803223
    5. ' for' → logprob: -13.125100135803223
    6. 'for' → logprob: -16.25010108947754
    7. ')' → logprob: -17.37510108947754
    8. '   ' → logprob: -18.12510108947754
    9. '](' → logprob: -18.25010108947754
    10. ' ' → logprob: -19.00010108947754

Token 271: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11764582991600037
    2. ']*(' → logprob: -2.617645740509033
    3. '*' → logprob: -3.867645740509033
    4. ']*' → logprob: -4.492645740509033
    5. ' for' → logprob: -5.992645740509033
    6. '*(' → logprob: -6.242645740509033
    7. ' *' → logprob: -6.867645740509033
    8. 'for' → logprob: -9.242646217346191
    9. ')' → logprob: -9.242646217346191
    10. '[' → logprob: -10.117646217346191

Token 272: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003395871492102742
    2. ' (' → logprob: -6.503396034240723
    3. '(num' → logprob: -6.753396034240723
    4. '2' → logprob: -7.253396034240723
    5. ' ' → logprob: -11.253396034240723
    6. '(n' → logprob: -13.378396034240723
    7. '((' → logprob: -13.628396034240723
    8. '   ' → logprob: -14.253396034240723
    9. 'num' → logprob: -15.003396034240723
    10. '
' → logprob: -15.253396034240723

Token 273: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006570079363882542
    2. '2' → logprob: -5.506569862365723
    3. '(num' → logprob: -6.006569862365723
    4. ' (' → logprob: -10.881569862365723
    5. ' ' → logprob: -12.756569862365723
    6. 'num' → logprob: -12.881569862365723
    7. '(n' → logprob: -14.631569862365723
    8. '   ' → logprob: -14.756569862365723
    9. '((' → logprob: -15.131569862365723
    10. '
' → logprob: -15.506569862365723

Token 274: ' *' (ID: 425)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.002661147154867649
    2. '*num' → logprob: -6.127661228179932
    3. '[num' → logprob: -8.752660751342773
    4. '(num' → logprob: -9.127660751342773
    5. ':num' → logprob: -9.377660751342773
    6. '<num' → logprob: -10.252660751342773
    7. ' num' → logprob: -10.377660751342773
    8. '
' → logprob: -10.752660751342773
    9. '=num' → logprob: -11.002660751342773
    10. '	num' → logprob: -11.502660751342773

Token 275: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -4.0484450437361374e-05
    2. ' num' → logprob: -10.125040054321289
    3. '	num' → logprob: -16.00004005432129
    4. 'n' → logprob: -16.75004005432129
    5. '(num' → logprob: -16.75004005432129
    6. ' ' → logprob: -18.12504005432129
    7. '<num' → logprob: -18.12504005432129
    8. '[num' → logprob: -18.75004005432129
    9. 'nu' → logprob: -18.87504005432129
    10. '   ' → logprob: -19.00004005432129

Token 276: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02330871857702732
    2. '  
' → logprob: -4.648308753967285
    3. ' 
' → logprob: -4.898308753967285
    4. '<|end|>' → logprob: -6.273308753967285
    5. '    
' → logprob: -6.898308753967285
    6. '
' → logprob: -7.023308753967285
    7. ' ' → logprob: -7.648308753967285
    8. '[' → logprob: -8.023308753967285
    9. '   
' → logprob: -8.023308753967285
    10. '\n' → logprob: -8.023308753967285

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03413822129368782
    2. '
' → logprob: -3.9091382026672363
    3. ' for' → logprob: -5.409138202667236
    4. '    
' → logprob: -5.659138202667236
    5. 'for' → logprob: -5.784138202667236
    6. '	for' → logprob: -6.659138202667236
    7. '<|end|>' → logprob: -7.159138202667236
    8. '  
' → logprob: -9.034138679504395
    9. ' 
' → logprob: -10.034138679504395
    10. '	
' → logprob: -10.159138679504395

Token 278: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.8117806911468506
    2. '   ' → logprob: -1.0617806911468506
    3. ' for' → logprob: -1.5617806911468506
    4. '	for' → logprob: -8.18678092956543
    5. 'tree' → logprob: -10.68678092956543
    6. '    
' → logprob: -11.81178092956543
    7. '  ' → logprob: -11.81178092956543
    8. ' ' → logprob: -11.93678092956543
    9. '
' → logprob: -12.43678092956543
    10. ' tree' → logprob: -13.81178092956543

Token 279: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04858827963471413
    2. ' i' → logprob: -3.048588275909424
    3. ' ' → logprob: -15.548588752746582
    4. '0' → logprob: -16.423587799072266
    5. 'k' → logprob: -16.548587799072266
    6. '	i' → logprob: -16.548587799072266
    7. 'I' → logprob: -16.673587799072266
    8. 'a' → logprob: -16.923587799072266
    9. 'x' → logprob: -16.923587799072266
    10. '(i' → logprob: -17.173587799072266

Token 280: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029945673421025276
    2. 'in' → logprob: -3.5299456119537354
    3. ',' → logprob: -8.654945373535156
    4. ' ' → logprob: -11.404945373535156
    5. 'range' → logprob: -12.654945373535156
    6. 'n' → logprob: -13.529945373535156
    7. ' range' → logprob: -13.654945373535156
    8. '  ' → logprob: -13.904945373535156
    9. ',n' → logprob: -14.529945373535156
    10. '<|end|>' → logprob: -14.654945373535156

Token 281: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078401252627373
    2. ' range' → logprob: -5.504078388214111
    3. '(range' → logprob: -17.379077911376953
    4. ' ' → logprob: -18.754077911376953
    5. '	range' → logprob: -19.004077911376953
    6. '
' → logprob: -19.129077911376953
    7. '```' → logprob: -20.629077911376953
    8. 'n' → logprob: -20.754077911376953
    9. '  ' → logprob: -20.754077911376953
    10. '   ' → logprob: -21.129077911376953

Token 282: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.31359177827835083
    2. 'n' → logprob: -1.313591718673706
    3. ' n' → logprob: -8.313591957092285
    4. '	n' → logprob: -9.563591957092285
    5. '(' → logprob: -11.688591957092285
    6. '
' → logprob: -13.563591957092285
    7. '   ' → logprob: -13.563591957092285
    8. '(len' → logprob: -13.688591957092285
    9. '<n' → logprob: -14.063591957092285
    10. '[n' → logprob: -15.063591957092285

Token 283: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25196170806884766
    2. '):' → logprob: -1.5019617080688477
    3. '):
' → logprob: -11.251961708068848
    4. ' ):
' → logprob: -11.501961708068848
    5. ' ):' → logprob: -11.626961708068848
    6. '
' → logprob: -15.751961708068848
    7. ')' → logprob: -15.751961708068848
    8. '):

' → logprob: -16.25196075439453
    9. ':' → logprob: -16.75196075439453
    10. '   ' → logprob: -17.12696075439453

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022887615486979485
    2. '   ' → logprob: -4.647887706756592
    3. ' tree' → logprob: -4.647887706756592
    4. '	tree' → logprob: -6.022887706756592
    5. 'tree' → logprob: -7.772887706756592
    6. '(tree' → logprob: -7.897887706756592
    7. '/tree' → logprob: -9.647887229919434
    8. '<|end|>' → logprob: -9.647887229919434
    9. '[' → logprob: -10.897887229919434
    10. '    ' → logprob: -11.147887229919434

Token 285: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.01914403587579727
    2. ' tree' → logprob: -4.019144058227539
    3. '   ' → logprob: -7.144144058227539
    4. '       ' → logprob: -8.769144058227539
    5. '	tree' → logprob: -10.019144058227539
    6. '(tree' → logprob: -13.144144058227539
    7. ' ' → logprob: -14.394144058227539
    8. '    ' → logprob: -15.019144058227539
    9. '.tree' → logprob: -15.144144058227539
    10. '  ' → logprob: -15.144144058227539

Token 286: '[num' (ID: 51359)
  Prédit: '[num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -0.00030161935137584805
    2. '[i' → logprob: -8.375301361083984
    3. '[' → logprob: -9.750301361083984
    4. '[n' → logprob: -11.750301361083984
    5. 'num' → logprob: -13.250301361083984
    6. ' [' → logprob: -13.625301361083984
    7. '   ' → logprob: -14.625301361083984
    8. '=num' → logprob: -14.625301361083984
    9. '(num' → logprob: -15.625301361083984
    10. '[size' → logprob: -16.000301361083984

Token 287: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6586417555809021
    2. ' +' → logprob: -0.9086417555809021
    3. '+i' → logprob: -2.533641815185547
    4. '[i' → logprob: -13.533641815185547
    5. '＋' → logprob: -13.783641815185547
    6. ' ' → logprob: -13.908641815185547
    7. ' plus' → logprob: -14.533641815185547
    8. '[' → logprob: -15.158641815185547
    9. '+
' → logprob: -15.283641815185547
    10. '   ' → logprob: -15.408641815185547

Token 288: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001234428636962548
    2. ' i' → logprob: -9.000123023986816
    3. '[i' → logprob: -17.875123977661133
    4. ' ' → logprob: -17.875123977661133
    5. '   ' → logprob: -18.375123977661133
    6. '	i' → logprob: -18.625123977661133
    7. '(i' → logprob: -19.875123977661133
    8. '  ' → logprob: -20.000123977661133
    9. '0' → logprob: -20.125123977661133
    10. '
' → logprob: -20.375123977661133

Token 289: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006723891478031874
    2. ']=' → logprob: -5.631723880767822
    3. '=' → logprob: -6.256723880767822
    4. ' ]' → logprob: -7.006723880767822
    5. ' =' → logprob: -8.13172435760498
    6. ')' → logprob: -14.50672435760498
    7. '[' → logprob: -14.75672435760498
    8. ']+=' → logprob: -15.25672435760498
    9. ']init' → logprob: -17.131723403930664
    10. ')=' → logprob: -17.256723403930664

Token 290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269349306821823
    2. ' =' → logprob: -2.1269350051879883
    3. ']=' → logprob: -12.251935005187988
    4. '=i' → logprob: -14.126935005187988
    5. ']' → logprob: -15.251935005187988
    6. '=data' → logprob: -15.751935005187988
    7. '=
' → logprob: -15.876935005187988
    8. '[' → logprob: -16.126934051513672
    9. '=int' → logprob: -16.376934051513672
    10. '=input' → logprob: -16.501934051513672

Token 291: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.023246407508850098
    2. ' init' → logprob: -3.7732462882995605
    3. '(init' → logprob: -15.148246765136719
    4. '_init' → logprob: -15.773246765136719
    5. 'initial' → logprob: -16.27324676513672
    6. 'input' → logprob: -16.39824676513672
    7. '	init' → logprob: -16.64824676513672
    8. 'int' → logprob: -16.77324676513672
    9. 'import' → logprob: -17.02324676513672
    10. ':init' → logprob: -17.39824676513672

Token 292: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.7835754988482222e-05
    2. 'val' → logprob: -11.000018119812012
    3. '[i' → logprob: -14.500018119812012
    4. '[val' → logprob: -15.375018119812012
    5. '_' → logprob: -16.625017166137695
    6. '   ' → logprob: -16.875017166137695
    7. '_VAL' → logprob: -17.125017166137695
    8. '	val' → logprob: -17.125017166137695
    9. '_ele' → logprob: -17.125017166137695
    10. 'Val' → logprob: -17.250017166137695

Token 293: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.750000953674316
    3. 'i' → logprob: -17.375001907348633
    4. ' [' → logprob: -17.875001907348633
    5. '[
' → logprob: -18.500001907348633
    6. '(i' → logprob: -19.000001907348633
    7. '[I' → logprob: -19.125001907348633
    8. ' i' → logprob: -19.625001907348633
    9. '[n' → logprob: -19.875001907348633
    10. '   ' → logprob: -20.125001907348633

Token 294: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1400369256734848
    2. ')' → logprob: -2.1400368213653564
    3. ']
' → logprob: -4.5150370597839355
    4. '   ' → logprob: -6.7650370597839355
    5. ')
' → logprob: -7.6400370597839355
    6. '<|end|>' → logprob: -8.640036582946777
    7. ')]' → logprob: -9.265036582946777
    8. ' ]' → logprob: -9.890036582946777
    9. '<|end|>' → logprob: -10.015036582946777
    10. ' ' → logprob: -10.765036582946777

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21569594740867615
    2. '
' → logprob: -2.215695858001709
    3. '<|end|>' → logprob: -3.090695858001709
    4. '    
' → logprob: -3.840695858001709
    5. ' 
' → logprob: -4.840695858001709
    6. '  
' → logprob: -4.965695858001709
    7. '<|end|>' → logprob: -7.590695858001709
    8. '\n' → logprob: -7.715695858001709
    9. '[' → logprob: -8.215696334838867
    10. '	
' → logprob: -8.215696334838867

Token 296: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.946869432926178
    2. ' for' → logprob: -1.0718693733215332
    3. '   ' → logprob: -1.3218693733215332
    4. '
' → logprob: -6.071869373321533
    5. '	for' → logprob: -8.321869850158691
    6. ' ' → logprob: -8.446869850158691
    7. '<|end|>' → logprob: -8.821869850158691
    8. '    
' → logprob: -9.696869850158691
    9. ' 
' → logprob: -11.321869850158691
    10. '  
' → logprob: -11.696869850158691

Token 297: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3870522975921631
    2. ' i' → logprob: -1.137052297592163
    3. 'j' → logprob: -8.887052536010742
    4. ' j' → logprob: -10.387052536010742
    5. ' ' → logprob: -11.762052536010742
    6. '   ' → logprob: -13.012052536010742
    7. 'num' → logprob: -14.387052536010742
    8. 'x' → logprob: -14.887052536010742
    9. '	i' → logprob: -14.887052536010742
    10. ' num' → logprob: -15.262052536010742

Token 298: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015111699467524886
    2. 'in' → logprob: -6.501511096954346
    3. 'num' → logprob: -12.751511573791504
    4. '[num' → logprob: -13.376511573791504
    5. '=num' → logprob: -13.876511573791504
    6. 'range' → logprob: -14.126511573791504
    7. '   ' → logprob: -14.251511573791504
    8. ' ' → logprob: -14.376511573791504
    9. ',num' → logprob: -14.751511573791504
    10. ' num' → logprob: -14.876511573791504

Token 299: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02217278443276882
    2. 'num' → logprob: -4.022172927856445
    3. ' range' → logprob: -5.522172927856445
    4. ' num' → logprob: -11.772172927856445
    5. 're' → logprob: -12.772172927856445
    6. '   ' → logprob: -13.022172927856445
    7. '(num' → logprob: -13.147172927856445
    8. '(range' → logprob: -13.647172927856445
    9. ' ' → logprob: -14.022172927856445
    10. '[num' → logprob: -14.772172927856445

Token 300: '(num' (ID: 15828)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0001317871210630983
    2. ' num' → logprob: -9.250131607055664
    3. '(num' → logprob: -10.375131607055664
    4. 'range' → logprob: -12.625131607055664
    5. ' ' → logprob: -14.750131607055664
    6. '   ' → logprob: -15.000131607055664
    7. ',num' → logprob: -16.125131607055664
    8. '	num' → logprob: -16.250131607055664
    9. '[num' → logprob: -16.875131607055664
    10. ' range' → logprob: -17.375131607055664

Token 301: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25199395418167114
    2. '-' → logprob: -1.5019938945770264
    3. '+' → logprob: -10.126994132995605
    4. ' ' → logprob: -10.876994132995605
    5. ' +' → logprob: -12.501994132995605
    6. '  ' → logprob: -14.376994132995605
    7. '
' → logprob: -14.876994132995605
    8. ' ' → logprob: -14.876994132995605
    9. '   ' → logprob: -15.001994132995605
    10. '-num' → logprob: -15.501994132995605

Token 302: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.286852345103398e-05
    2. '2' → logprob: -10.250042915344238
    3. ' ' → logprob: -11.875042915344238
    4. '   ' → logprob: -15.250042915344238
    5. '
' → logprob: -16.750041961669922
    6. '```' → logprob: -16.937541961669922
    7. '0' → logprob: -17.437541961669922
    8. '１' → logprob: -18.000041961669922
    9. '3' → logprob: -18.250041961669922
    10. '       ' → logprob: -18.625041961669922

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.125003814697266
    3. '2' → logprob: -13.500003814697266
    4. '
' → logprob: -16.500003814697266
    5. '   ' → logprob: -16.750003814697266
    6. '１' → logprob: -17.125003814697266
    7. '```' → logprob: -17.250003814697266
    8. '0' → logprob: -18.062503814697266
    9. '3' → logprob: -18.937503814697266
    10. '۱' → logprob: -19.062503814697266

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005164555623196065
    2. ' ,' → logprob: -7.625516414642334
    3. ',-' → logprob: -10.875516891479492
    4. '-' → logprob: -12.125516891479492
    5. ' -' → logprob: -13.375516891479492
    6. '   ' → logprob: -13.875516891479492
    7. '0' → logprob: -14.000516891479492
    8. ',
' → logprob: -15.375516891479492
    9. '1' → logprob: -15.875516891479492
    10. '```' → logprob: -15.875516891479492

Token 305: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.022943532094359398
    2. '0' → logprob: -4.022943496704102
    3. ' -' → logprob: -5.397943496704102
    4. ' ' → logprob: -8.272943496704102
    5. '   ' → logprob: -14.647943496704102
    6. '  ' → logprob: -15.772943496704102
    7. '    ' → logprob: -16.1479434967041
    8. ',' → logprob: -16.3979434967041
    9. '
' → logprob: -16.3979434967041
    10. '     ' → logprob: -18.3979434967041

Token 306: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.048671845346689224
    2. '0' → logprob: -3.0486719608306885
    3. ' -' → logprob: -9.42367172241211
    4. ' ' → logprob: -12.54867172241211
    5. '   ' → logprob: -16.92367172241211
    6. '
' → logprob: -18.17367172241211
    7. '−' → logprob: -18.42367172241211
    8. '```' → logprob: -19.04867172241211
    9. '  ' → logprob: -19.17367172241211
    10. '    ' → logprob: -20.04867172241211

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19755598902702332
    2. '-' → logprob: -1.8225560188293457
    3. ' -' → logprob: -4.322556018829346
    4. ' ,' → logprob: -5.947556018829346
    5. ',-' → logprob: -6.572556018829346
    6. '   ' → logprob: -8.322555541992188
    7. '-,' → logprob: -9.447555541992188
    8. ' ,-' → logprob: -10.947555541992188
    9. ',
' → logprob: -11.697555541992188
    10. '  ' → logprob: -11.697555541992188

Token 308: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0052354102954268456
    2. ' -' → logprob: -5.255235195159912
    3. '   ' → logprob: -14.13023567199707
    4. ' ' → logprob: -14.38023567199707
    5. '  ' → logprob: -15.63023567199707
    6. '0' → logprob: -16.50523567199707
    7. '```' → logprob: -16.50523567199707
    8. '-i' → logprob: -17.00523567199707
    9. '    ' → logprob: -18.38023567199707
    10. ',' → logprob: -18.75523567199707

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002318557118996978
    2. '-' → logprob: -6.127318382263184
    3. ' -' → logprob: -9.502318382263184
    4. 'i' → logprob: -9.877318382263184
    5. ' ' → logprob: -12.877318382263184
    6. ')' → logprob: -13.752318382263184
    7. '):
' → logprob: -13.752318382263184
    8. '   ' → logprob: -14.002318382263184
    9. ',' → logprob: -14.252318382263184
    10. '```' → logprob: -15.127318382263184

Token 310: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04128530994057655
    2. '):' → logprob: -3.291285276412964
    3. '-' → logprob: -6.041285514831543
    4. ',' → logprob: -8.291285514831543
    5. '   ' → logprob: -8.291285514831543
    6. ' ):
' → logprob: -8.416285514831543
    7. ':' → logprob: -10.416285514831543
    8. ' ):' → logprob: -10.666285514831543
    9. ' -' → logprob: -10.791285514831543
    10. '):
' → logprob: -10.916285514831543

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011745095252990723
    2. ' tree' → logprob: -7.501174449920654
    3. '   ' → logprob: -7.876174449920654
    4. '	tree' → logprob: -9.251174926757812
    5. 'tree' → logprob: -9.626174926757812
    6. '	' → logprob: -10.376174926757812
    7. '	   ' → logprob: -11.126174926757812
    8. '```' → logprob: -11.626174926757812
    9. '(tree' → logprob: -12.251174926757812
    10. '    ' → logprob: -12.501174926757812

Token 312: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.022583816200494766
    2. ' tree' → logprob: -3.8975837230682373
    3. '       ' → logprob: -6.647583961486816
    4. '   ' → logprob: -7.397583961486816
    5. '	tree' → logprob: -9.022583961486816
    6. ' ' → logprob: -13.022583961486816
    7. '           ' → logprob: -13.022583961486816
    8. '```' → logprob: -13.022583961486816
    9. '(tree' → logprob: -14.272583961486816
    10. '_tree' → logprob: -15.147583961486816

Token 313: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003288820618763566
    2. '[' → logprob: -5.753288745880127
    3. '=' → logprob: -9.878289222717285
    4. ' =' → logprob: -10.378289222717285
    5. '   ' → logprob: -11.128289222717285
    6. ' [' → logprob: -12.253289222717285
    7. '=[' → logprob: -12.753289222717285
    8. '```' → logprob: -13.753289222717285
    9. ' ' → logprob: -14.128289222717285
    10. '[num' → logprob: -14.378289222717285

Token 314: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005246329586952925
    2. ']=' → logprob: -6.255246162414551
    3. ' ]' → logprob: -6.505246162414551
    4. '=' → logprob: -7.005246162414551
    5. ' =' → logprob: -7.005246162414551
    6. ' ' → logprob: -14.25524616241455
    7. ')' → logprob: -14.25524616241455
    8. ',' → logprob: -15.00524616241455
    9. '```' → logprob: -15.13024616241455
    10. '[' → logprob: -15.63024616241455

Token 315: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0485873706638813
    2. ' =' → logprob: -3.0485873222351074
    3. '＝' → logprob: -18.423587799072266
    4. ' ' → logprob: -19.173587799072266
    5. '=

' → logprob: -19.548587799072266
    6. '=
' → logprob: -19.673587799072266
    7. ',' → logprob: -19.673587799072266
    8. ']' → logprob: -19.798587799072266
    9. '[' → logprob: -19.923587799072266
    10. ']=' → logprob: -19.923587799072266

Token 316: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.00317783304490149
    2. ' seg' → logprob: -5.753177642822266
    3. '(seg' → logprob: -16.628177642822266
    4. 'se' → logprob: -17.628177642822266
    5. 'Seg' → logprob: -18.003177642822266
    6. '   ' → logprob: -18.003177642822266
    7. 'segment' → logprob: -18.128177642822266
    8. 'sig' → logprob: -18.378177642822266
    9. 'sem' → logprob: -18.378177642822266
    10. 'sec' → logprob: -19.003177642822266

Token 317: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: 0.0
    2. 'function' → logprob: -17.25
    3. 'fun' → logprob: -18.25
    4. 'f' → logprob: -19.875
    5. '   ' → logprob: -20.125
    6. '_func' → logprob: -20.375
    7. 'for' → logprob: -20.5
    8. 'tree' → logprob: -20.5
    9. ' func' → logprob: -20.625
    10. '(func' → logprob: -21.125

Token 318: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.0020041766110807657
    2. 'tree' → logprob: -6.252004146575928
    3. '(' → logprob: -9.502004623413086
    4. '	tree' → logprob: -14.502004623413086
    5. ' tree' → logprob: -15.252004623413086
    6. '(
' → logprob: -16.502004623413086
    7. '(table' → logprob: -17.127004623413086
    8. '/tree' → logprob: -18.377004623413086
    9. '<Tree' → logprob: -18.377004623413086
    10. ' (' → logprob: -18.627004623413086

Token 319: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07262424379587173
    2. '[i' → logprob: -2.6976242065429688
    3. '2' → logprob: -5.947624206542969
    4. 'i' → logprob: -9.697624206542969
    5. '   ' → logprob: -12.697624206542969
    6. '[
' → logprob: -13.572624206542969
    7. ' ' → logprob: -13.697624206542969
    8. ',i' → logprob: -14.197624206542969
    9. ' i' → logprob: -14.447624206542969
    10. '<<' → logprob: -14.572624206542969

Token 320: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06268003582954407
    2. '2' → logprob: -2.8126800060272217
    3. ' i' → logprob: -7.312680244445801
    4. ' ' → logprob: -10.1876802444458
    5. '   ' → logprob: -12.8126802444458
    6. '*i' → logprob: -13.4376802444458
    7. '  ' → logprob: -13.6876802444458
    8. '(i' → logprob: -14.3126802444458
    9. '*' → logprob: -14.8126802444458
    10. '    ' → logprob: -15.1876802444458

Token 321: ' *' (ID: 425)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009402852156199515
    2. '*i' → logprob: -7.000940322875977
    3. ' i' → logprob: -10.500940322875977
    4. '   ' → logprob: -14.125940322875977
    5. '	i' → logprob: -14.875940322875977
    6. ' *' → logprob: -16.500940322875977
    7. '    ' → logprob: -16.875940322875977
    8. '
' → logprob: -17.000940322875977
    9. '```' → logprob: -17.000940322875977
    10. '[i' → logprob: -17.000940322875977

Token 322: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.860340752406046e-05
    2. ' i' → logprob: -9.7500581741333
    3. '	i' → logprob: -15.7500581741333
    4. '   ' → logprob: -16.625059127807617
    5. '*i' → logprob: -18.250059127807617
    6. ' ' → logprob: -19.000059127807617
    7. '  ' → logprob: -19.375059127807617
    8. '```' → logprob: -19.625059127807617
    9. 'I' → logprob: -20.375059127807617
    10. '    ' → logprob: -20.375059127807617

Token 323: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00023107275774236768
    2. ',' → logprob: -9.25023078918457
    3. ' ],' → logprob: -9.50023078918457
    4. ']' → logprob: -9.87523078918457
    5. '],
' → logprob: -12.00023078918457
    6. ' ' → logprob: -13.75023078918457
    7. ' ,' → logprob: -14.62523078918457
    8. '   ' → logprob: -15.00023078918457
    9. 'i' → logprob: -16.37523078918457
    10. '1' → logprob: -16.50023078918457

Token 324: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.023248272016644478
    2. ' tree' → logprob: -3.7732481956481934
    3. '   ' → logprob: -13.398248672485352
    4. '	tree' → logprob: -14.273248672485352
    5. '       ' → logprob: -15.273248672485352
    6. ' ' → logprob: -15.773248672485352
    7. '(tree' → logprob: -16.27324867248535
    8. '    ' → logprob: -16.39824867248535
    9. '  ' → logprob: -16.64824867248535
    10. '.tree' → logprob: -18.39824867248535

Token 325: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03877053037285805
    2. '[' → logprob: -3.2887704372406006
    3. '+' → logprob: -8.53877067565918
    4. ' +' → logprob: -8.91377067565918
    5. '   ' → logprob: -9.03877067565918
    6. '+i' → logprob: -9.16377067565918
    7. '[
' → logprob: -9.66377067565918
    8. 'i' → logprob: -9.91377067565918
    9. ']' → logprob: -10.78877067565918
    10. '*i' → logprob: -11.78877067565918

Token 326: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.873571692267433e-05
    2. ' ' → logprob: -9.625068664550781
    3. '   ' → logprob: -13.500068664550781
    4. '(' → logprob: -14.375068664550781
    5. '  ' → logprob: -14.375068664550781
    6. '1' → logprob: -16.75006866455078
    7. '    ' → logprob: -17.25006866455078
    8. 'i' → logprob: -17.62506866455078
    9. '
' → logprob: -18.00006866455078
    10. '21' → logprob: -18.12506866455078

Token 327: ' *' (ID: 425)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02262297458946705
    2. ' i' → logprob: -3.897623062133789
    3. '*i' → logprob: -6.522623062133789
    4. '   ' → logprob: -8.147623062133789
    5. '+' → logprob: -8.772623062133789
    6. '+i' → logprob: -10.272623062133789
    7. ' +' → logprob: -10.772623062133789
    8. '    ' → logprob: -11.022623062133789
    9. '  ' → logprob: -11.147623062133789
    10. '1' → logprob: -11.147623062133789

Token 328: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020413640595506877
    2. ' i' → logprob: -8.500204086303711
    3. '+i' → logprob: -15.500204086303711
    4. '   ' → logprob: -16.00020408630371
    5. '+' → logprob: -16.62520408630371
    6. '2' → logprob: -17.00020408630371
    7. ',i' → logprob: -17.12520408630371
    8. ')i' → logprob: -17.25020408630371
    9. '_i' → logprob: -17.37520408630371
    10. '	i' → logprob: -17.50020408630371

Token 329: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.028724748641252518
    2. ' +' → logprob: -3.6537246704101562
    3. '])' → logprob: -6.403724670410156
    4. '+i' → logprob: -7.278724670410156
    5. ' ' → logprob: -10.403724670410156
    6. '1' → logprob: -10.528724670410156
    7. '   ' → logprob: -11.528724670410156
    8. ']' → logprob: -12.403724670410156
    9. '  ' → logprob: -13.403724670410156
    10. ')' → logprob: -14.528724670410156

Token 330: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -18.50006675720215
    4. '0' → logprob: -19.12506675720215
    5. '  ' → logprob: -19.25006675720215
    6. '])' → logprob: -19.50006675720215
    7. '```' → logprob: -20.00006675720215
    8. '2' → logprob: -20.87506675720215
    9. 'i' → logprob: -21.75006675720215
    10. '    ' → logprob: -21.81256675720215

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. 'i' → logprob: -19.37500762939453
    4. '```' → logprob: -19.50000762939453
    5. '   ' → logprob: -19.87500762939453
    6. '0' → logprob: -20.25000762939453
    7. '１' → logprob: -20.50000762939453
    8. ']' → logprob: -20.75000762939453
    9. '2' → logprob: -20.87500762939453
    10. '۱' → logprob: -20.93750762939453

Token 332: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4741780161857605
    2. ')' → logprob: -0.9741780161857605
    3. ')
' → logprob: -10.474178314208984
    4. '))' → logprob: -10.599178314208984
    5. ')])' → logprob: -11.099178314208984
    6. ')]' → logprob: -11.599178314208984
    7. '])
' → logprob: -11.599178314208984
    8. ' )' → logprob: -12.599178314208984
    9. ''])' → logprob: -12.849178314208984
    10. '})' → logprob: -13.349178314208984

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03538458049297333
    2. ' return' → logprob: -3.6603846549987793
    3. 'return' → logprob: -5.410384654998779
    4. '    
' → logprob: -6.285384654998779
    5. '	return' → logprob: -6.535384654998779
    6. ' 
' → logprob: -7.910384654998779
    7. ' ' → logprob: -7.910384654998779
    8. '  
' → logprob: -8.660384178161621
    9. '<|end|>' → logprob: -9.035384178161621
    10. '[' → logprob: -10.285384178161621

Token 334: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05475949868559837
    2. ' return' → logprob: -3.1797595024108887
    3. 'return' (adapté à ' return') → logprob: -5.429759502410889
    4. '	return' → logprob: -6.179759502410889
    5. '    
' → logprob: -6.429759502410889
    6. '<|end|>' → logprob: -6.429759502410889
    7. ' ' → logprob: -6.679759502410889
    8. ' 
' → logprob: -7.929759502410889
    9. '    ' → logprob: -9.17975902557373
    10. '  
' → logprob: -9.55475902557373

Token 335: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0004377022560220212
    2. ' tree' → logprob: -7.7504377365112305
    3. ' Seg' → logprob: -12.50043773651123
    4. '(tree' → logprob: -13.25043773651123
    5. 'Seg' → logprob: -13.37543773651123
    6. 'num' → logprob: -17.625436782836914
    7. '	tree' → logprob: -17.875436782836914
    8. ' ' → logprob: -18.125436782836914
    9. '   ' → logprob: -18.625436782836914
    10. ' (' → logprob: -19.000436782836914

Token 336: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -9.65101717156358e-05
    2. ' num' → logprob: -9.250096321105957
    3. 'n' → logprob: -14.875096321105957
    4. '	num' → logprob: -19.625097274780273
    5. '(num' → logprob: -20.375097274780273
    6. '_num' → logprob: -20.625097274780273
    7. '[num' → logprob: -21.000097274780273
    8. '   ' → logprob: -21.125097274780273
    9. 'nu' → logprob: -21.750097274780273
    10. ',num' → logprob: -21.750097274780273

Token 338: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 339: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1477717161178589
    2. '<|end|>' → logprob: -2.1477718353271484
    3. '
' → logprob: -4.147771835327148
    4. '<|end|>' → logprob: -7.147771835327148
    5. '

' → logprob: -7.272771835327148
    6. ')' → logprob: -7.272771835327148
    7. ',' → logprob: -7.522771835327148
    8. '  
' → logprob: -7.522771835327148
    9. '_' → logprob: -7.647771835327148
    10. '```' → logprob: -8.147771835327148

Token 340: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.8106774091720581
    2. ' seg' → logprob: -1.560677409172058
    3. 'update' → logprob: -2.0606775283813477
    4. 'seg' → logprob: -2.5606775283813477
    5. ' update' → logprob: -2.9356775283813477
    6. ' Seg' → logprob: -3.3106775283813477
    7. 'query' → logprob: -3.8106775283813477
    8. ' query' → logprob: -4.310677528381348
    9. 'point' → logprob: -5.185677528381348
    10. ' point' → logprob: -5.560677528381348

Token 341: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -3.0590548703912646e-05
    2. 'tree' → logprob: -10.625030517578125
    3. '_tree' → logprob: -12.750030517578125
    4. ' Tree' → logprob: -14.000030517578125
    5. 'Tre' → logprob: -14.500030517578125
    6. 'ree' → logprob: -14.875030517578125
    7. 'Tr' → logprob: -15.125030517578125
    8. 'T' → logprob: -15.375030517578125
    9. 'Update' → logprob: -15.375030517578125
    10. 'update' → logprob: -16.000030517578125

Token 342: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.3033747375011444
    2. '_query' → logprob: -1.8033747673034668
    3. '_get' → logprob: -2.428374767303467
    4. '_set' → logprob: -4.803374767303467
    5. '_build' → logprob: -9.178374290466309
    6. '_point' → logprob: -9.428374290466309
    7. '_pro' → logprob: -9.553374290466309
    8. '_' → logprob: -9.678374290466309
    9. '_put' → logprob: -9.803374290466309
    10. '_init' → logprob: -10.928374290466309

Token 343: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.0007189844618551433
    2. '(i' → logprob: -7.62571907043457
    3. '(pos' → logprob: -9.12571907043457
    4. '(idx' → logprob: -9.87571907043457
    5. '(index' → logprob: -10.50071907043457
    6. '(t' → logprob: -10.75071907043457
    7. '(' → logprob: -12.00071907043457
    8. '(node' → logprob: -12.00071907043457
    9. ' (' → logprob: -12.12571907043457
    10. '(x' → logprob: -14.12571907043457

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010700009443098679
    2. ' ,' → logprob: -9.375106811523438
    3. ',i' → logprob: -11.500106811523438
    4. ',index' → logprob: -11.500106811523438
    5. ',pos' → logprob: -14.375106811523438
    6. 'index' → logprob: -14.625106811523438
    7. ',node' → logprob: -15.500106811523438
    8. ',
' → logprob: -15.750106811523438
    9. ',k' → logprob: -16.375106811523438
    10. '   ' → logprob: -16.875106811523438

Token 345: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.01850295066833496
    2. ' num' → logprob: -4.393503189086914
    3. 'pos' → logprob: -6.018503189086914
    4. 'idx' → logprob: -6.268503189086914
    5. 'index' → logprob: -6.893503189086914
    6. 'i' → logprob: -7.643503189086914
    7. ' idx' → logprob: -9.768503189086914
    8. ' pos' → logprob: -10.518503189086914
    9. 'k' → logprob: -10.643503189086914
    10. 'n' → logprob: -11.018503189086914

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001817297888919711
    2. ' ,' → logprob: -8.625182151794434
    3. ',i' → logprob: -14.250182151794434
    4. ',index' → logprob: -14.250182151794434
    5. 'index' → logprob: -14.500182151794434
    6. '   ' → logprob: -16.000181198120117
    7. 'i' → logprob: -16.500181198120117
    8. ',
' → logprob: -17.250181198120117
    9. ',pos' → logprob: -18.125181198120117
    10. 'def' → logprob: -18.625181198120117

Token 347: ' seg' (ID: 3055)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5540937185287476
    2. 'idx' → logprob: -1.5540937185287476
    3. 'index' → logprob: -2.179093837738037
    4. 'k' → logprob: -2.429093837738037
    5. 'pos' → logprob: -4.679093837738037
    6. ' i' → logprob: -5.929093837738037
    7. ' idx' → logprob: -8.179093360900879
    8. ' k' → logprob: -8.304093360900879
    9. ' index' → logprob: -8.429093360900879
    10. ' pos' → logprob: -10.679093360900879

Token 348: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -2.546478935983032e-05
    2. 'index' → logprob: -11.375025749206543
    3. '_func' → logprob: -11.875025749206543
    4. 'idx' → logprob: -12.125025749206543
    5. '_index' → logprob: -14.625025749206543
    6. 'function' → logprob: -15.125025749206543
    7. ' func' → logprob: -15.750025749206543
    8. 'def' → logprob: -16.125024795532227
    9. 'pos' → logprob: -16.250024795532227
    10. 'f' → logprob: -16.375024795532227

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.5649528298527e-05
    2. ' ,' → logprob: -9.500075340270996
    3. ',index' → logprob: -15.000075340270996
    4. ',i' → logprob: -15.375075340270996
    5. '   ' → logprob: -16.000076293945312
    6. 'index' → logprob: -16.375076293945312
    7. ',
' → logprob: -17.000076293945312
    8. ',pos' → logprob: -18.625076293945312
    9. ',node' → logprob: -18.875076293945312
    10. 'def' → logprob: -19.375076293945312

Token 350: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06691204756498337
    2. 'idx' → logprob: -3.5669119358062744
    3. 'k' → logprob: -4.0669121742248535
    4. ' i' → logprob: -4.4419121742248535
    5. 'index' → logprob: -5.0669121742248535
    6. ' idx' → logprob: -7.5669121742248535
    7. 'pos' → logprob: -7.9419121742248535
    8. ' k' → logprob: -8.191911697387695
    9. ' index' → logprob: -9.566911697387695
    10. ' ' → logprob: -11.316911697387695

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008061755215749145
    2. ' ,' → logprob: -7.1258063316345215
    3. ',value' → logprob: -14.375805854797363
    4. ',v' → logprob: -14.500805854797363
    5. ',k' → logprob: -15.375805854797363
    6. ',val' → logprob: -16.12580680847168
    7. 'value' → logprob: -16.62580680847168
    8. ',
' → logprob: -16.62580680847168
    9. '   ' → logprob: -16.62580680847168
    10. 'k' → logprob: -16.87580680847168

Token 352: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0010410251561552286
    2. 'a' → logprob: -7.626040935516357
    3. ' x' → logprob: -8.501041412353516
    4. 'v' → logprob: -8.751041412353516
    5. 'value' → logprob: -8.876041412353516
    6. 'val' → logprob: -10.376041412353516
    7. '   ' → logprob: -11.376041412353516
    8. ' ' → logprob: -12.001041412353516
    9. '```' → logprob: -14.376041412353516
    10. ' a' → logprob: -14.751041412353516

Token 353: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048620183020830154
    2. '):
' → logprob: -3.0486202239990234
    3. '):
' → logprob: -10.423620223999023
    4. '):

' → logprob: -13.423620223999023
    5. ')' → logprob: -13.923620223999023
    6. ' ):' → logprob: -14.423620223999023
    7. '   ' → logprob: -16.173620223999023
    8. ' ' → logprob: -17.298620223999023
    9. ':' → logprob: -17.548620223999023
    10. ',' → logprob: -17.798620223999023

Token 354: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6840047836303711
    2. '
' → logprob: -0.8090047836303711
    3. ':' → logprob: -4.184004783630371
    4. '):
' → logprob: -4.309004783630371
    5. ':
' → logprob: -5.309004783630371
    6. ')' → logprob: -5.559004783630371
    7. '):' → logprob: -5.684004783630371
    8. ' 
' → logprob: -5.934004783630371
    9. '  
' → logprob: -6.184004783630371
    10. '    
' → logprob: -6.559004783630371

Token 355: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.07979406416416168
    2. ' k' → logprob: -2.57979416847229
    3. '   ' → logprob: -7.079793930053711
    4. '	k' → logprob: -9.829793930053711
    5. '  ' → logprob: -12.829793930053711
    6. '    
' → logprob: -13.204793930053711
    7. ' ' → logprob: -13.329793930053711
    8. '    ' → logprob: -13.829793930053711
    9. ' 
' → logprob: -14.704793930053711
    10. '  
' → logprob: -15.954793930053711

Token 356: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018245115876197815
    2. ' +=' → logprob: -4.018245220184326
    3. '=' → logprob: -9.268244743347168
    4. ' =' → logprob: -15.143244743347168
    5. '+=(' → logprob: -15.393244743347168
    6. '+' → logprob: -15.643244743347168
    7. ']+=' → logprob: -16.518245697021484
    8. '+="' → logprob: -17.143245697021484
    9. '-=' → logprob: -17.268245697021484
    10. '+='' → logprob: -17.518245697021484

Token 357: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.00020354038861114532
    2. ' num' → logprob: -8.500203132629395
    3. '[num' → logprob: -18.50020408630371
    4. '	num' → logprob: -19.12520408630371
    5. '(num' → logprob: -20.12520408630371
    6. ',num' → logprob: -20.50020408630371
    7. '<num' → logprob: -20.75020408630371
    8. '1' → logprob: -21.00020408630371
    9. '   ' → logprob: -21.37520408630371
    10. '=num' → logprob: -21.62520408630371

Token 358: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0006389308837242424
    2. '
' → logprob: -8.250638961791992
    3. ' 
' → logprob: -9.000638961791992
    4. 'tree' → logprob: -9.750638961791992
    5. '  
' → logprob: -10.000638961791992
    6. '    
' → logprob: -10.375638961791992
    7. ' tree' → logprob: -10.500638961791992
    8. '   ' → logprob: -10.500638961791992
    9. '[' → logprob: -10.750638961791992
    10. 'x' → logprob: -11.125638961791992

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0423593521118164
    2. '
' → logprob: -1.1673593521118164
    3. 'tree' → logprob: -1.5423593521118164
    4. '	tree' → logprob: -2.4173593521118164
    5. ' tree' → logprob: -3.5423593521118164
    6. '    
' → logprob: -6.292359352111816
    7. '```' → logprob: -7.667359352111816
    8. '(tree' → logprob: -7.917359352111816
    9. ' 
' → logprob: -8.042359352111816
    10. '[' → logprob: -8.292359352111816

Token 360: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.0009181279456242919
    2. ' tree' → logprob: -7.000917911529541
    3. '   ' → logprob: -12.0009183883667
    4. '	tree' → logprob: -14.8759183883667
    5. '```' → logprob: -16.625917434692383
    6. ' ' → logprob: -17.000917434692383
    7. '    
' → logprob: -18.750917434692383
    8. '
' → logprob: -18.875917434692383
    9. '(tree' → logprob: -19.000917434692383
    10. '.tree' → logprob: -20.000917434692383

Token 361: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.875
    3. 'k' → logprob: -18.5
    4. '[key' → logprob: -20.125
    5. '[t' → logprob: -20.625
    6. '   ' → logprob: -20.625
    7. '[i' → logprob: -21.125
    8. ' [' → logprob: -21.125
    9. '	k' → logprob: -21.25
    10. '=k' → logprob: -21.625

Token 362: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4846903383731842
    2. ' =' → logprob: -1.3596903085708618
    3. ']' → logprob: -2.1096904277801514
    4. ']=' → logprob: -5.109690189361572
    5. ')' → logprob: -10.23469066619873
    6. ')=' → logprob: -11.73469066619873
    7. '<|end|>' → logprob: -11.98469066619873
    8. ' ]' → logprob: -12.35969066619873
    9. '[' → logprob: -14.10969066619873
    10. ' ' → logprob: -14.98469066619873

Token 363: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '＝' → logprob: -17.764163970947266
    4. '.=' → logprob: -18.514163970947266
    5. '[' → logprob: -20.639163970947266
    6. ' ' → logprob: -20.639163970947266
    7. '=x' → logprob: -21.139163970947266
    8. 'x' → logprob: -21.389163970947266
    9. '=
' → logprob: -21.514163970947266
    10. '=

' → logprob: -21.514163970947266

Token 364: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001234428636962548
    2. ' x' → logprob: -9.000123023986816
    3. '	x' → logprob: -20.625123977661133
    4. '"x' → logprob: -25.500123977661133
    5. ')x' → logprob: -25.875123977661133
    6. '(x' → logprob: -25.875123977661133
    7. '$x' → logprob: -26.000123977661133
    8. '   ' → logprob: -26.250123977661133
    9. '%x' → logprob: -26.250123977661133
    10. '_x' → logprob: -26.500123977661133

Token 365: '
' (ID: 198)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.21507373452186584
    2. '
' → logprob: -2.215073823928833
    3. 'k' → logprob: -3.715073823928833
    4. '	k' → logprob: -4.340073585510254
    5. '   ' → logprob: -4.465073585510254
    6. '  
' → logprob: -4.590073585510254
    7. ' while' → logprob: -4.965073585510254
    8. ',k' → logprob: -5.590073585510254
    9. 'while' → logprob: -5.715073585510254
    10. '<|end|>' → logprob: -6.090073585510254

Token 366: '   ' (ID: 271)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.06251419335603714
    2. 'k' → logprob: -2.937514305114746
    3. '	k' → logprob: -5.312514305114746
    4. '   ' → logprob: -6.437514305114746
    5. ',k' → logprob: -7.562514305114746
    6. '
' → logprob: -8.562514305114746
    7. ' while' → logprob: -9.562514305114746
    8. ';k' → logprob: -9.812514305114746
    9. '<|end|>' → logprob: -10.187514305114746
    10. '[k' → logprob: -10.437514305114746

Token 367: ' while' (ID: 2049)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.541112427134067e-05
    2. 'while' (adapté à ' while') → logprob: -9.625075340270996
    3. '   ' → logprob: -12.375075340270996
    4. ' k' → logprob: -12.375075340270996
    5. ' while' → logprob: -14.875075340270996
    6. '
' → logprob: -14.875075340270996
    7. '	k' → logprob: -16.750076293945312
    8. '    
' → logprob: -17.125076293945312
    9. '  ' → logprob: -17.875076293945312
    10. '```' → logprob: -18.750076293945312

Token 368: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12693461775779724
    2. ' k' → logprob: -2.12693452835083
    3. '	k' → logprob: -12.626935005187988
    4. '   ' → logprob: -14.376935005187988
    5. '(k' → logprob: -14.376935005187988
    6. ' ' → logprob: -14.501935005187988
    7. '1' → logprob: -15.001935005187988
    8. '_k' → logprob: -15.001935005187988
    9. 'True' → logprob: -15.126935005187988
    10. ' True' → logprob: -15.751935005187988

Token 369: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.028782781213521957
    2. '>>' → logprob: -3.653782844543457
    3. '//=' → logprob: -6.278782844543457
    4. '//' → logprob: -8.403782844543457
    5. ' ' → logprob: -8.778782844543457
    6. '   ' → logprob: -9.778782844543457
    7. ' >' → logprob: -9.903782844543457
    8. '＞' → logprob: -10.528782844543457
    9. '```' → logprob: -11.153782844543457
    10. ' >>=' → logprob: -11.278782844543457

Token 370: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.62501335144043
    4. '0' → logprob: -19.75001335144043
    5. '>' → logprob: -20.87501335144043
    6. '
' → logprob: -21.25001335144043
    7. '    ' → logprob: -21.62501335144043
    8. '１' → logprob: -21.62501335144043
    9. '  ' → logprob: -21.75001335144043
    10. '=' → logprob: -21.87501335144043

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '0' → logprob: -19.500001907348633
    4. '１' → logprob: -19.750001907348633
    5. '   ' → logprob: -19.750001907348633
    6. '
' → logprob: -20.625001907348633
    7. '۱' → logprob: -21.000001907348633
    8. '  ' → logprob: -21.875001907348633
    9. '```' → logprob: -22.125001907348633
    10. '१' → logprob: -22.375001907348633

Token 372: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13182564079761505
    2. ':' → logprob: -2.1318256855010986
    3. '   ' → logprob: -6.1318254470825195
    4. ' :
' → logprob: -6.6318254470825195
    5. '>>' → logprob: -7.3818254470825195
    6. ' k' → logprob: -9.25682544708252
    7. 'k' → logprob: -9.38182544708252
    8. ' :' → logprob: -9.50682544708252
    9. '=' → logprob: -9.50682544708252
    10. ' >>=' → logprob: -9.63182544708252

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08025877177715302
    2. ' k' → logprob: -2.955258846282959
    3. 'k' → logprob: -3.705258846282959
    4. '   ' → logprob: -8.8302583694458
    5. '	k' → logprob: -9.3302583694458
    6. ',k' → logprob: -10.0802583694458
    7. '<|end|>' → logprob: -10.0802583694458
    8. '	' → logprob: -10.2052583694458
    9. '```' → logprob: -10.3302583694458
    10. ',' → logprob: -10.8302583694458

Token 374: ' tree' (ID: 8165)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10057035833597183
    2. ' k' → logprob: -2.3505704402923584
    3. '       ' → logprob: -8.600570678710938
    4. '   ' → logprob: -8.725570678710938
    5. '	k' → logprob: -11.225570678710938
    6. '    ' → logprob: -12.975570678710938
    7. ' ' → logprob: -14.725570678710938
    8. '/k' → logprob: -15.225570678710938
    9. ',k' → logprob: -15.475570678710938
    10. '     ' → logprob: -15.850570678710938

Token 375: '[k' (ID: 14298)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.001749434508383274
    2. '>>' → logprob: -7.001749515533447
    3. '=' → logprob: -7.501749515533447
    4. ' //' → logprob: -8.626749038696289
    5. '//' → logprob: -9.501749038696289
    6. ' >>=' → logprob: -10.751749038696289
    7. '   ' → logprob: -11.751749038696289
    8. ' ' → logprob: -13.501749038696289
    9. '  ' → logprob: -15.751749038696289
    10. '/=' → logprob: -15.751749038696289

Token 376: ' >>' (ID: 6832)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.003573342226445675
    2. '>>' → logprob: -6.253573417663574
    3. '//' → logprob: -6.503573417663574
    4. '=' → logprob: -9.003573417663574
    5. ' //' → logprob: -11.378573417663574
    6. '   ' → logprob: -11.878573417663574
    7. ' >>=' → logprob: -13.253573417663574
    8. ']' → logprob: -14.128573417663574
    9. '```' → logprob: -15.003573417663574
    10. '#' → logprob: -15.003573417663574

Token 377: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -19.375
    4. '```' → logprob: -19.5
    5. 'k' → logprob: -19.625
    6. '１' → logprob: -20.5
    7. '=' → logprob: -21.375
    8. '2' → logprob: -22.5
    9. '0' → logprob: -22.5
    10. ' ' → logprob: -22.625

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -18.125
    4. '   ' → logprob: -18.5
    5. '１' → logprob: -19.625
    6. 'k' → logprob: -20.375
    7. '2' → logprob: -21.5625
    8. '0' → logprob: -21.6875
    9. '' → logprob: -21.875
    10. '
' → logprob: -21.875

Token 379: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.9385402993066236e-05
    2. ']=' → logprob: -10.875019073486328
    3. ' ]' → logprob: -14.750019073486328
    4. '=' → logprob: -16.875019073486328
    5. ']=(' → logprob: -19.250019073486328
    6. ')' → logprob: -19.375019073486328
    7. '   ' → logprob: -19.750019073486328
    8. ']
' → logprob: -19.750019073486328
    9. '']' → logprob: -19.875019073486328
    10. ']

' → logprob: -19.875019073486328

Token 380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02054760977625847
    2. ' =' → logprob: -3.89554762840271
    3. ']' → logprob: -12.395547866821289
    4. ']=' → logprob: -14.895547866821289
    5. '   ' → logprob: -14.895547866821289
    6. ',' → logprob: -15.645547866821289
    7. '>' → logprob: -16.14554786682129
    8. '=
' → logprob: -16.27054786682129
    9. ' ' → logprob: -16.64554786682129
    10. '=

' → logprob: -16.64554786682129

Token 381: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.009758212603628635
    2. ' seg' → logprob: -4.634757995605469
    3. '(seg' → logprob: -14.134757995605469
    4. 'se' → logprob: -14.759757995605469
    5. 'sem' → logprob: -14.884757995605469
    6. ' ' → logprob: -15.259757995605469
    7. 'sig' → logprob: -16.25975799560547
    8. 'Seg' → logprob: -16.38475799560547
    9. '  ' → logprob: -16.75975799560547
    10. '   ' → logprob: -16.75975799560547

Token 382: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: 0.0
    2. '[' → logprob: -16.875
    3. '(func' → logprob: -17.375
    4. ' func' → logprob: -17.5
    5. '   ' → logprob: -18.75
    6. 'fun' → logprob: -19.125
    7. '_func' → logprob: -19.25
    8. 'def' → logprob: -19.5
    9. 'tree' → logprob: -19.5
    10. 'f' → logprob: -19.75

Token 383: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -2.3795937522663735e-05
    2. 'tree' → logprob: -10.75002384185791
    3. '(' → logprob: -13.00002384185791
    4. '(
' → logprob: -18.125022888183594
    5. '	tree' → logprob: -18.125022888183594
    6. '(tr' → logprob: -19.375022888183594
    7. ' (' → logprob: -19.500022888183594
    8. ' tree' → logprob: -19.625022888183594
    9. '(Tree' → logprob: -20.500022888183594
    10. '/tree' → logprob: -20.750022888183594

Token 384: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0019694350194185972
    2. '[' → logprob: -6.251969337463379
    3. '[(' → logprob: -10.126969337463379
    4. 'k' → logprob: -14.501969337463379
    5. '(k' → logprob: -15.501969337463379
    6. '[
' → logprob: -16.251970291137695
    7. ' [' → logprob: -17.501970291137695
    8. ',k' → logprob: -18.001970291137695
    9. '   ' → logprob: -18.501970291137695
    10. '2' → logprob: -18.626970291137695

Token 385: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.005814436357468367
    2. ']' → logprob: -5.630814552307129
    3. '   ' → logprob: -6.880814552307129
    4. ' ' → logprob: -7.630814552307129
    5. '>>' → logprob: -8.255814552307129
    6. '][' → logprob: -8.630814552307129
    7. 'k' → logprob: -9.505814552307129
    8. '  ' → logprob: -10.255814552307129
    9. '    ' → logprob: -10.630814552307129
    10. ']
' → logprob: -10.755814552307129

Token 386: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0019288709154352546
    2. ' tree' → logprob: -6.251928806304932
    3. '	tree' → logprob: -16.126928329467773
    4. '   ' → logprob: -17.251928329467773
    5. '(tree' → logprob: -17.751928329467773
    6. '       ' → logprob: -17.876928329467773
    7. ' ' → logprob: -17.876928329467773
    8. 'Tree' → logprob: -19.126928329467773
    9. '-tree' → logprob: -19.126928329467773
    10. '  ' → logprob: -19.126928329467773

Token 387: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.2489553540945053
    2. 'k' → logprob: -1.7489553689956665
    3. '^' → logprob: -3.123955249786377
    4. ' ^' → logprob: -7.123955249786377
    5. ' k' → logprob: -7.623955249786377
    6. '    ' → logprob: -7.873955249786377
    7. '   ' → logprob: -8.623955726623535
    8. '[' → logprob: -8.748955726623535
    9. '     ' → logprob: -9.373955726623535
    10. ' ' → logprob: -9.748955726623535

Token 388: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.09917625039815903
    2. '>>' → logprob: -2.4741761684417725
    3. ' ^' → logprob: -4.599176406860352
    4. '[' → logprob: -10.349176406860352
    5. '^(' → logprob: -10.599176406860352
    6. '^^' → logprob: -11.349176406860352
    7. '<<' → logprob: -11.474176406860352
    8. '   ' → logprob: -11.724176406860352
    9. ' ' → logprob: -11.724176406860352
    10. '  ' → logprob: -11.849176406860352

Token 389: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -21.75
    4. '
' → logprob: -22.125
    5. '１' → logprob: -22.5
    6. '```' → logprob: -22.875
    7. '2' → logprob: -24.0
    8. '  ' → logprob: -24.375
    9. '0' → logprob: -25.0
    10. '-' → logprob: -25.0

Token 390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '2' → logprob: -19.0
    4. '   ' → logprob: -21.125
    5. '１' → logprob: -21.875
    6. '```' → logprob: -21.875
    7. '0' → logprob: -23.125
    8. '  ' → logprob: -23.25
    9. '    ' → logprob: -23.5
    10. '
' → logprob: -23.625

Token 391: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.11288471519947052
    2. '])
' → logprob: -2.237884759902954
    3. '])
' → logprob: -10.862884521484375
    4. '])

' → logprob: -11.362884521484375
    5. ' ])
' → logprob: -11.987884521484375
    6. ' ])' → logprob: -12.112884521484375
    7. ')' → logprob: -12.612884521484375
    8. '1' → logprob: -12.987884521484375
    9. ']' → logprob: -12.987884521484375
    10. '>>' → logprob: -12.987884521484375

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008430534973740578
    2. ' k' → logprob: -5.383430480957031
    3. 'k' → logprob: -5.758430480957031
    4. '   ' → logprob: -8.383430480957031
    5. ',k' → logprob: -8.508430480957031
    6. '	k' → logprob: -9.008430480957031
    7. '	' → logprob: -10.508430480957031
    8. '
' → logprob: -11.508430480957031
    9. '	   ' → logprob: -11.883430480957031
    10. ';k' → logprob: -11.883430480957031

Token 393: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.32050010561943054
    2. ' k' → logprob: -1.320500135421753
    3. '       ' → logprob: -4.945499897003174
    4. '	k' → logprob: -9.820500373840332
    5. '   ' → logprob: -10.195500373840332
    6. '    ' → logprob: -13.320500373840332
    7. '      ' → logprob: -13.820500373840332
    8. '     ' → logprob: -14.320500373840332
    9. '           ' → logprob: -14.570500373840332
    10. '        ' → logprob: -14.820500373840332

Token 394: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.0025996763724833727
    2. ' >>=' → logprob: -6.627599716186523
    3. '=' → logprob: -7.252599716186523
    4. '//=' → logprob: -7.502599716186523
    5. '>' → logprob: -11.627599716186523
    6. '   ' → logprob: -13.377599716186523
    7. '≫' → logprob: -14.377599716186523
    8. '/=' → logprob: -14.627599716186523
    9. ' ' → logprob: -14.877599716186523
    10. '	' → logprob: -15.127599716186523

Token 395: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -20.125
    5. '۱' → logprob: -21.25
    6. '１' → logprob: -21.5
    7. '0' → logprob: -21.875
    8. '2' → logprob: -22.0
    9. '१' → logprob: -22.3125
    10. '' → logprob: -22.5625

Token 396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -19.0
    4. '   ' → logprob: -20.375
    5. '2' → logprob: -21.5625
    6. '۱' → logprob: -21.8125
    7. '<|end|>' → logprob: -22.125
    8. '0' → logprob: -23.0
    9. '１' → logprob: -23.0625
    10. 'k' → logprob: -23.0625

Token 397: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.03119046241044998
    2. ' Seg' → logprob: -3.7811903953552246
    3. 'main' → logprob: -5.406190395355225
    4. ' main' → logprob: -6.156190395355225
    5. 'seg' → logprob: -7.031190395355225
    6. ' seg' → logprob: -8.156190872192383
    7. 'Segment' → logprob: -9.781190872192383
    8. 'query' → logprob: -11.156190872192383
    9. '_seg' → logprob: -11.156190872192383
    10. 'beam' → logprob: -11.656190872192383

Token 400: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -2.7848862373502925e-05
    2. 'Tre' → logprob: -11.000027656555176
    3. 'ree' → logprob: -12.000027656555176
    4. 'tree' → logprob: -13.375027656555176
    5. '_tree' → logprob: -14.125027656555176
    6. 'T' → logprob: -14.125027656555176
    7. ' Tree' → logprob: -14.375027656555176
    8. '	Tree' → logprob: -14.625027656555176
    9. 'def' → logprob: -15.000027656555176
    10. 'TREE' → logprob: -16.125028610229492

Token 401: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.01860428787767887
    2. '_get' → logprob: -4.018604278564453
    3. '_min' → logprob: -8.018604278564453
    4. '_Query' → logprob: -10.268604278564453
    5. '_update' → logprob: -10.518604278564453
    6. '_find' → logprob: -11.268604278564453
    7. '_search' → logprob: -11.518604278564453
    8. 'Query' → logprob: -11.893604278564453
    9. '_build' → logprob: -12.518604278564453
    10. 'query' → logprob: -12.643604278564453

Token 402: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.625003814697266
    3. '(Tree' → logprob: -16.875003814697266
    4. ' (' → logprob: -17.500003814697266
    5. '(t' → logprob: -17.625003814697266
    6. 'tree' → logprob: -18.500003814697266
    7. '	tree' → logprob: -18.625003814697266
    8. '<Tree' → logprob: -19.500003814697266
    9. '(heap' → logprob: -20.125003814697266
    10. '(table' → logprob: -20.125003814697266

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.064297824399546e-05
    2. ',num' → logprob: -9.625070571899414
    3. ' ,' → logprob: -12.750070571899414
    4. ',k' → logprob: -13.500070571899414
    5. ',n' → logprob: -16.125070571899414
    6. ',size' → logprob: -16.750070571899414
    7. ',user' → logprob: -17.375070571899414
    8. ',node' → logprob: -17.375070571899414
    9. ',int' → logprob: -17.500070571899414
    10. ',
' → logprob: -17.625070571899414

Token 404: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.25265631079673767
    2. ' num' → logprob: -1.50265634059906
    3. '1' → logprob: -7.25265645980835
    4. ' ' → logprob: -11.752655982971191
    5. '2' → logprob: -12.252655982971191
    6. ',num' → logprob: -13.377655982971191
    7. '0' → logprob: -13.502655982971191
    8. '   ' → logprob: -14.252655982971191
    9. '	num' → logprob: -14.377655982971191
    10. ',' → logprob: -15.127655982971191

Token 405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4259644558478612e-05
    2. ' ,' → logprob: -11.875014305114746
    3. ',k' → logprob: -12.125014305114746
    4. ',int' → logprob: -14.625014305114746
    5. ',l' → logprob: -14.750014305114746
    6. ',left' → logprob: -15.375014305114746
    7. 'def' → logprob: -15.625014305114746
    8. '   ' → logprob: -16.37501335144043
    9. ',x' → logprob: -16.50001335144043
    10. ',index' → logprob: -16.50001335144043

Token 406: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.00904078595340252
    2. ' seg' → logprob: -4.759040832519531
    3. 'l' → logprob: -8.134040832519531
    4. 'left' → logprob: -9.509040832519531
    5. '1' → logprob: -10.884040832519531
    6. ' l' → logprob: -11.384040832519531
    7. '0' → logprob: -11.884040832519531
    8. '   ' → logprob: -12.134040832519531
    9. ' left' → logprob: -12.509040832519531
    10. 'segment' → logprob: -12.759040832519531

Token 407: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -3.333223139634356e-05
    2. '   ' → logprob: -11.625033378601074
    3. '_func' → logprob: -11.625033378601074
    4. ',' → logprob: -12.750033378601074
    5. 'function' → logprob: -13.250033378601074
    6. ')' → logprob: -13.250033378601074
    7. 'f' → logprob: -13.250033378601074
    8. 'query' → logprob: -14.000033378601074
    9. 'fun' → logprob: -14.125033378601074
    10. 'def' → logprob: -14.375033378601074

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.951771421066951e-05
    2. ',k' → logprob: -10.500029563903809
    3. ' ,' → logprob: -13.250029563903809
    4. 'def' → logprob: -16.500028610229492
    5. ',l' → logprob: -16.750028610229492
    6. 'k' → logprob: -17.250028610229492
    7. '   ' → logprob: -17.750028610229492
    8. ',x' → logprob: -18.125028610229492
    9. ',start' → logprob: -18.375028610229492
    10. ',
' → logprob: -18.500028610229492

Token 409: ' ide' (ID: 2750)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0004889304982498288
    2. 'a' → logprob: -7.750488758087158
    3. 'left' → logprob: -9.875489234924316
    4. ' l' → logprob: -12.500489234924316
    5. 'L' → logprob: -13.000489234924316
    6. 's' → logprob: -14.500489234924316
    7. 'x' → logprob: -17.12548828125
    8. '
' → logprob: -17.25048828125
    9. 'k' → logprob: -17.37548828125
    10. '   ' → logprob: -17.62548828125

Token 410: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -2.0339031834737398e-05
    2. 'ele' → logprob: -11.000020027160645
    3. '_e' → logprob: -12.750020027160645
    4. 'Ele' → logprob: -14.500020027160645
    5. '-ele' → logprob: -16.12502098083496
    6. '_element' → logprob: -17.00002098083496
    7. '_ent' → logprob: -17.37502098083496
    8. '_elements' → logprob: -18.00002098083496
    9. ' ele' → logprob: -18.25002098083496
    10. '_' → logprob: -18.50002098083496

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.457669562427327e-05
    2. ' ,' → logprob: -9.75007438659668
    3. ',k' → logprob: -11.25007438659668
    4. 'def' → logprob: -13.62507438659668
    5. ',l' → logprob: -14.62507438659668
    6. '   ' → logprob: -15.12507438659668
    7. ',x' → logprob: -15.50007438659668
    8. '_,' → logprob: -15.87507438659668
    9. ',n' → logprob: -16.00007438659668
    10. ',
' → logprob: -16.12507438659668

Token 412: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0029275414999574423
    2. 'left' → logprob: -6.377927303314209
    3. 'a' → logprob: -6.752927303314209
    4. 'L' → logprob: -10.127927780151367
    5. ' l' → logprob: -11.502927780151367
    6. 's' → logprob: -12.627927780151367
    7. '
' → logprob: -14.002927780151367
    8. 'p' → logprob: -14.502927780151367
    9. 'x' → logprob: -15.127927780151367
    10. ' left' → logprob: -15.127927780151367

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.232493564719334e-05
    2. ' ,' → logprob: -9.625082015991211
    3. ',l' → logprob: -11.625082015991211
    4. ',r' → logprob: -12.375082015991211
    5. ',k' → logprob: -13.750082015991211
    6. ',
' → logprob: -14.375082015991211
    7. ',int' → logprob: -15.125082015991211
    8. ',n' → logprob: -15.125082015991211
    9. ',right' → logprob: -15.625082015991211
    10. ',b' → logprob: -16.25008201599121

Token 414: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01815134845674038
    2. ' r' → logprob: -4.01815128326416
    3. '   ' → logprob: -13.64315128326416
    4. '	r' → logprob: -16.393152236938477
    5. ' ' → logprob: -16.643152236938477
    6. '```' → logprob: -18.018152236938477
    7. 'u' → logprob: -18.268152236938477
    8. ' ' → logprob: -18.268152236938477
    9. '
' → logprob: -18.393152236938477
    10. 'h' → logprob: -18.643152236938477

Token 415: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005954633932560682
    2. '):
' → logprob: -5.130954742431641
    3. '):
' → logprob: -10.88095474243164
    4. ')' → logprob: -12.13095474243164
    5. ' ):' → logprob: -13.88095474243164
    6. '):

' → logprob: -14.63095474243164
    7. ':' → logprob: -15.63095474243164
    8. '   ' → logprob: -16.13095474243164
    9. ')：' → logprob: -16.88095474243164
    10. ',' → logprob: -17.50595474243164

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01133262924849987
    2. 'l' → logprob: -5.3863325119018555
    3. 'r' → logprob: -5.5113325119018555
    4. ' r' → logprob: -6.2613325119018555
    5. ' l' → logprob: -7.3863325119018555
    6. ' ' → logprob: -10.261332511901855
    7. '	l' → logprob: -10.761332511901855
    8. ' res' → logprob: -11.011332511901855
    9. '	r' → logprob: -11.386332511901855
    10. 'result' → logprob: -11.886332511901855

Token 417: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.05686342716217041
    2. 's' → logprob: -3.056863307952881
    3. 'l' → logprob: -4.931863307952881
    4. ' res' → logprob: -7.181863307952881
    5. '   ' → logprob: -8.556863784790039
    6. 'ret' → logprob: -10.681863784790039
    7. 'ans' → logprob: -11.431863784790039
    8. 'result' → logprob: -11.431863784790039
    9. 'sm' → logprob: -11.806863784790039
    10. '	res' → logprob: -11.806863784790039

Token 418: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038048841059207916
    2. '=' → logprob: -3.28804874420166
    3. ' ' → logprob: -12.53804874420166
    4. ',' → logprob: -12.66304874420166
    5. ' =
' → logprob: -15.03804874420166
    6. '  ' → logprob: -15.66304874420166
    7. ' ,' → logprob: -16.538049697875977
    8. '   ' → logprob: -16.913049697875977
    9. '＝' → logprob: -17.413049697875977
    10. 'space' → logprob: -17.788049697875977

Token 419: ' ide' (ID: 2750)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.0036055364180356264
    2. ' ide' → logprob: -5.628605365753174
    3. 'ideo' → logprob: -12.503605842590332
    4. 'iden' → logprob: -14.628605842590332
    5. ' ' → logprob: -14.753605842590332
    6. '.ide' → logprob: -15.003605842590332
    7. '   ' → logprob: -15.253605842590332
    8. 'ides' → logprob: -15.253605842590332
    9. 'ideal' → logprob: -17.128604888916016
    10. '10' → logprob: -17.128604888916016

Token 420: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.0015031944494694471
    2. 'ele' → logprob: -6.501502990722656
    3. '_e' → logprob: -14.876502990722656
    4. '-ele' → logprob: -15.001502990722656
    5. 'Ele' → logprob: -15.376502990722656
    6. '(ele' → logprob: -18.626502990722656
    7. ' ele' → logprob: -19.751502990722656
    8. 'hele' → logprob: -20.501502990722656
    9. 'pele' → logprob: -20.626502990722656
    10. '0' → logprob: -20.626502990722656

Token 421: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.044131193310022354
    2. '<|end|>' → logprob: -4.169131278991699
    3. '   ' → logprob: -4.294131278991699
    4. '    
' → logprob: -5.169131278991699
    5. ' 
' → logprob: -5.794131278991699
    6. '  
' → logprob: -5.794131278991699
    7. '<|end|>' → logprob: -6.794131278991699
    8. '
' → logprob: -8.4191312789917
    9. ' ' → logprob: -8.4191312789917
    10. '   
' → logprob: -8.5441312789917

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09565169364213943
    2. '
' → logprob: -2.595651626586914
    3. '    
' → logprob: -4.470651626586914
    4. ' 
' → logprob: -5.720651626586914
    5. '  
' → logprob: -7.095651626586914
    6. '   
' → logprob: -8.345651626586914
    7. ' while' → logprob: -8.470651626586914
    8. '' → logprob: -9.470651626586914
    9. '    ' → logprob: -9.720651626586914
    10. ' l' → logprob: -9.720651626586914

Token 423: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -1.5332478142227046e-05
    2. '   ' → logprob: -11.875015258789062
    3. 'while' → logprob: -11.875015258789062
    4. ' l' → logprob: -13.625015258789062
    5. '	l' → logprob: -16.500015258789062
    6. ' while' → logprob: -17.750015258789062
    7. '    
' → logprob: -18.500015258789062
    8. ' ' → logprob: -19.000015258789062
    9. '  ' → logprob: -20.625015258789062
    10. '    ' → logprob: -21.125015258789062

Token 424: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0017188541823998094
    2. ' +=' → logprob: -6.376718997955322
    3. '+' → logprob: -11.376718521118164
    4. '=' → logprob: -12.876718521118164
    5. '|' → logprob: -13.376718521118164
    6. ']+=' → logprob: -14.251718521118164
    7. ' +' → logprob: -16.126718521118164
    8. '+=(' → logprob: -16.376718521118164
    9. '   ' → logprob: -16.876718521118164
    10. ',' → logprob: -16.876718521118164

Token 425: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -9.615255839889869e-05
    2. ' num' → logprob: -9.250096321105957
    3. '	num' → logprob: -20.25009536743164
    4. 'n' → logprob: -20.50009536743164
    5. '[num' → logprob: -20.75009536743164
    6. '   ' → logprob: -21.62509536743164
    7. '(num' → logprob: -21.75009536743164
    8. ',num' → logprob: -22.12509536743164
    9. '<num' → logprob: -22.37509536743164
    10. '=num' → logprob: -22.62509536743164

Token 426: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7341445684432983
    2. 'r' → logprob: -0.8591445684432983
    3. ' r' → logprob: -2.609144687652588
    4. '```' → logprob: -4.984144687652588
    5. ' 
' → logprob: -5.234144687652588
    6. 'while' → logprob: -5.734144687652588
    7. ' while' → logprob: -6.359144687652588
    8. '    
' → logprob: -6.359144687652588
    9. '  
' → logprob: -6.609144687652588
    10. ' ' → logprob: -6.859144687652588

Token 428: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0004306692280806601
    2. ' r' → logprob: -7.750430583953857
    3. '   ' → logprob: -19.125431060791016
    4. '	r' → logprob: -20.250431060791016
    5. 'res' → logprob: -20.750431060791016
    6. '```' → logprob: -22.125431060791016
    7. '_r' → logprob: -22.250431060791016
    8. 'while' → logprob: -22.500431060791016
    9. '
' → logprob: -22.500431060791016
    10. 'rans' → logprob: -23.375431060791016

Token 429: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.26267844438552856
    2. '+' → logprob: -2.137678384780884
    3. '<|end|>' → logprob: -2.512678384780884
    4. ' +' → logprob: -4.262678623199463
    5. '<|end|>' → logprob: -4.762678623199463
    6. '+=' → logprob: -4.762678623199463
    7. ')' → logprob: -8.387678146362305
    8. ' ' → logprob: -8.512678146362305
    9. ' <<=' → logprob: -9.512678146362305
    10. '   ' → logprob: -10.137678146362305

Token 430: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.011048762127757072
    2. ' num' → logprob: -4.511048793792725
    3. '1' → logprob: -14.136048316955566
    4. '	num' → logprob: -16.136049270629883
    5. ' ' → logprob: -16.761049270629883
    6. '(num' → logprob: -17.261049270629883
    7. '[num' → logprob: -17.386049270629883
    8. '<num' → logprob: -17.636049270629883
    9. ',num' → logprob: -17.761049270629883
    10. '   ' → logprob: -18.136049270629883

Token 431: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6723647117614746
    2. '
' → logprob: -1.7973647117614746
    3. '<|end|>' → logprob: -2.2973647117614746
    4. '    
' → logprob: -2.4223647117614746
    5. ' 
' → logprob: -2.6723647117614746
    6. 'while' → logprob: -3.4223647117614746
    7. ' while' → logprob: -4.297364711761475
    8. '  
' → logprob: -4.797364711761475
    9. '   
' → logprob: -6.047364711761475
    10. '    ' → logprob: -6.297364711761475

Token 432: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08546306192874908
    2. '
' → logprob: -3.335463047027588
    3. '    
' → logprob: -4.460463047027588
    4. 'while' → logprob: -4.585463047027588
    5. ' 
' → logprob: -4.960463047027588
    6. ')' → logprob: -5.210463047027588
    7. ' while' → logprob: -6.210463047027588
    8. '    ' → logprob: -6.335463047027588
    9. '  
' → logprob: -6.835463047027588
    10. '>' → logprob: -6.835463047027588

Token 433: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.07905656844377518
    2. ' while' → logprob: -2.57905650138855
    3. 'While' → logprob: -9.954056739807129
    4. '
' → logprob: -10.079056739807129
    5. '   ' → logprob: -10.079056739807129
    6. ' 
' → logprob: -11.329056739807129
    7. '    
' → logprob: -11.704056739807129
    8. '	while' → logprob: -12.079056739807129
    9. '```' → logprob: -12.079056739807129
    10. '    ' → logprob: -13.829056739807129

Token 434: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6931473612785339
    2. ' l' → logprob: -0.6931473612785339
    3. '	l' → logprob: -16.443147659301758
    4. '   ' → logprob: -16.693147659301758
    5. ' ' → logprob: -17.568147659301758
    6. ' л' → logprob: -18.568147659301758
    7. '(l' → logprob: -18.818147659301758
    8. '```' → logprob: -18.943147659301758
    9. '$l' → logprob: -19.193147659301758
    10. '_l' → logprob: -19.193147659301758

Token 435: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0789036676287651
    2. ' <' → logprob: -2.5789036750793457
    3. ' ' → logprob: -12.328903198242188
    4. '[' → logprob: -13.328903198242188
    5. '<th' → logprob: -13.453903198242188
    6. '<n' → logprob: -13.578903198242188
    7. '<m' → logprob: -14.578903198242188
    8. '<int' → logprob: -14.703903198242188
    9. '<class' → logprob: -14.703903198242188
    10. '<=' → logprob: -14.703903198242188

Token 436: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019288709154352546
    2. ' r' → logprob: -6.251928806304932
    3. ' ' → logprob: -15.75192928314209
    4. '   ' → logprob: -16.126928329467773
    5. '	r' → logprob: -17.501928329467773
    6. '_r' → logprob: -18.251928329467773
    7. '<|end|>' → logprob: -18.251928329467773
    8. '=r' → logprob: -18.501928329467773
    9. '```' → logprob: -19.001928329467773
    10. ',' → logprob: -19.626928329467773

Token 437: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6330209374427795
    2. ':
' → logprob: -0.7580209374427795
    3. '       ' → logprob: -8.508021354675293
    4. '   ' → logprob: -9.258021354675293
    5. ' and' → logprob: -10.383021354675293
    6. '):
' → logprob: -10.633021354675293
    7. ' :
' → logprob: -10.883021354675293
    8. ':
' → logprob: -11.383021354675293
    9. '<|end|>' → logprob: -11.633021354675293
    10. ':

' → logprob: -11.883021354675293

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00500852894037962
    2. ' 
' → logprob: -6.130008697509766
    3. '    ' → logprob: -7.380008697509766
    4. '        
' → logprob: -7.630008697509766
    5. '        ' → logprob: -8.130008697509766
    6. ' ' → logprob: -8.130008697509766
    7. ' if' → logprob: -8.255008697509766
    8. '<|end|>' → logprob: -8.505008697509766
    9. '```' → logprob: -8.755008697509766
    10. '   ' → logprob: -9.130008697509766

Token 439: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2581183612346649
    2. '       ' → logprob: -1.7581183910369873
    3. '   ' → logprob: -3.1331183910369873
    4. ' if' → logprob: -5.133118152618408
    5. '           ' → logprob: -5.758118152618408
    6. ' ' → logprob: -6.758118152618408
    7. '
' → logprob: -7.383118152618408
    8. 'If' → logprob: -8.383118629455566
    9. '```' → logprob: -9.508118629455566
    10. '    ' → logprob: -9.508118629455566

Token 440: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014163863845169544
    2. ' l' → logprob: -4.264163970947266
    3. ' ' → logprob: -16.014163970947266
    4. '	l' → logprob: -16.139163970947266
    5. '   ' → logprob: -16.389163970947266
    6. '(l' → logprob: -16.764163970947266
    7. ' (' → logprob: -19.764163970947266
    8. '  ' → logprob: -20.639163970947266
    9. '1' → logprob: -20.764163970947266
    10. 'r' → logprob: -21.014163970947266

Token 441: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.2014257162809372
    2. ' &' → logprob: -1.7014256715774536
    3. '&
' → logprob: -12.576425552368164
    4. '＆' → logprob: -13.076425552368164
    5. '&amp' → logprob: -13.201425552368164
    6. '&p' → logprob: -13.826425552368164
    7. '&q' → logprob: -14.326425552368164
    8. '%' → logprob: -14.326425552368164
    9. ' &
' → logprob: -14.451425552368164
    10. '&B' → logprob: -14.576425552368164

Token 442: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '１' → logprob: -19.250003814697266
    4. '   ' → logprob: -21.750003814697266
    5. '۱' → logprob: -23.000003814697266
    6. '১' → logprob: -23.375003814697266
    7. '  ' → logprob: -23.625003814697266
    8. '१' → logprob: -23.750003814697266
    9. '```' → logprob: -24.250003814697266
    10. '01' → logprob: -24.250003814697266

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '１' → logprob: -19.375
    4. '01' → logprob: -22.25
    5. '   ' → logprob: -22.875
    6. '-' → logprob: -23.0
    7. '۱' → logprob: -23.125
    8. '১' → logprob: -23.25
    9. '#' → logprob: -23.75
    10. '१' → logprob: -23.875

Token 444: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2826800048351288
    2. ':' → logprob: -1.4076800346374512
    3. '==' → logprob: -6.657680034637451
    4. ' ==' → logprob: -8.907679557800293
    5. ' :
' → logprob: -10.157679557800293
    6. '=' → logprob: -10.532679557800293
    7. '==
' → logprob: -11.032679557800293
    8. ' :' → logprob: -11.532679557800293
    9. '):
' → logprob: -12.282679557800293
    10. ':
' → logprob: -12.657679557800293

Token 445: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39946475625038147
    2. 'res' → logprob: -1.149464726448059
    3. ' res' → logprob: -4.3994646072387695
    4. '           ' → logprob: -9.52446460723877
    5. '	res' → logprob: -9.64946460723877
    6. '   ' → logprob: -9.77446460723877
    7. ',res' → logprob: -11.77446460723877
    8. '```' → logprob: -12.14946460723877
    9. '$res' → logprob: -12.52446460723877
    10. '
' → logprob: -12.52446460723877

Token 446: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0001589618914294988
    2. ' res' → logprob: -8.75015926361084
    3. '
' → logprob: -15.37515926361084
    4. '   ' → logprob: -16.375158309936523
    5. '       ' → logprob: -16.750158309936523
    6. '	res' → logprob: -17.000158309936523
    7. '           ' → logprob: -17.750158309936523
    8. ' ' → logprob: -18.750158309936523
    9. '_res' → logprob: -19.375158309936523
    10. '  ' → logprob: -20.500158309936523

Token 447: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002068892121315
    2. ' =' → logprob: -2.3502068519592285
    3. '=
' → logprob: -15.850207328796387
    4. '＝' → logprob: -15.975207328796387
    5. '=

' → logprob: -17.47520637512207
    6. ' ' → logprob: -18.47520637512207
    7. '.=' → logprob: -19.60020637512207
    8. '   ' → logprob: -19.97520637512207
    9. '```' → logprob: -20.10020637512207
    10. ' =
' → logprob: -20.35020637512207

Token 448: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.0003357006062287837
    2. ' seg' → logprob: -8.000335693359375
    3. 'sem' → logprob: -15.375335693359375
    4. '(seg' → logprob: -17.250335693359375
    5. 'se' → logprob: -18.625335693359375
    6. 'sig' → logprob: -19.125335693359375
    7. 'Seg' → logprob: -19.750335693359375
    8. ' ' → logprob: -20.125335693359375
    9. 'segment' → logprob: -20.250335693359375
    10. '   ' → logprob: -20.250335693359375

Token 449: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -6.704273118884885e-07
    2. 'res' → logprob: -14.750000953674316
    3. 'fun' → logprob: -16.0
    4. 'function' → logprob: -17.625
    5. '(func' → logprob: -17.625
    6. '_func' → logprob: -17.75
    7. 'seg' → logprob: -18.375
    8. '   ' → logprob: -18.375
    9. 'ful' → logprob: -18.75
    10. 'f' → logprob: -18.875

Token 450: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -2.2200749754119897e-06
    2. 'res' → logprob: -13.375001907348633
    3. '(' → logprob: -14.625001907348633
    4. ',res' → logprob: -16.500001907348633
    5. ' (' → logprob: -17.125001907348633
    6. ' res' → logprob: -18.625001907348633
    7. '(tree' → logprob: -18.750001907348633
    8. ',' → logprob: -19.375001907348633
    9. '(
' → logprob: -19.625001907348633
    10. '=res' → logprob: -19.875001907348633

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5822400857578032e-05
    2. ' ,' → logprob: -10.625025749206543
    3. 'tree' → logprob: -14.000025749206543
    4. ',
' → logprob: -14.875025749206543
    5. '(tree' → logprob: -15.750025749206543
    6. '   ' → logprob: -16.87502670288086
    7. ' tree' → logprob: -17.75002670288086
    8. ')' → logprob: -18.50002670288086
    9. ',t' → logprob: -19.00002670288086
    10. '	tree' → logprob: -19.25002670288086

Token 452: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -2.176947600673884e-05
    2. ' tree' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.500021934509277
    4. ' ' → logprob: -17.50002098083496
    5. '	tree' → logprob: -18.00002098083496
    6. '(tree' → logprob: -18.12502098083496
    7. '  ' → logprob: -19.37502098083496
    8. 'table' → logprob: -19.62502098083496
    9. 'tre' → logprob: -20.12502098083496
    10. 'team' → logprob: -21.12502098083496

Token 453: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.8624639324116288e-06
    2. 'l' → logprob: -13.250001907348633
    3. '[' → logprob: -16.875001907348633
    4. '	l' → logprob: -18.500001907348633
    5. '   ' → logprob: -19.250001907348633
    6. '[
' → logprob: -19.500001907348633
    7. '```' → logprob: -19.500001907348633
    8. ',l' → logprob: -20.125001907348633
    9. ' [' → logprob: -20.500001907348633
    10. '
' → logprob: -20.750001907348633

Token 454: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5799998641014099
    2. ')' → logprob: -0.8299998641014099
    3. '])' → logprob: -6.079999923706055
    4. '])
' → logprob: -6.579999923706055
    5. ' )
' → logprob: -8.329999923706055
    6. ' )' → logprob: -9.204999923706055
    7. ')
' → logprob: -11.204999923706055
    8. ']' → logprob: -11.954999923706055
    9. ')

' → logprob: -13.079999923706055
    10. ')]' → logprob: -13.079999923706055

Token 455: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22163917124271393
    2. '       ' → logprob: -1.7216391563415527
    3. ' l' → logprob: -4.096639156341553
    4. '   ' → logprob: -6.721639156341553
    5. 'l' → logprob: -6.846639156341553
    6. ',l' → logprob: -7.721639156341553
    7. '	l' → logprob: -8.471639633178711
    8. ',' → logprob: -8.846639633178711
    9. '	       ' → logprob: -9.596639633178711
    10. '
' → logprob: -9.721639633178711

Token 456: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.023249903693795204
    2. ' l' → logprob: -3.773249864578247
    3. '           ' → logprob: -12.523249626159668
    4. '   ' → logprob: -14.398249626159668
    5. '       ' → logprob: -15.523249626159668
    6. '	l' → logprob: -17.148250579833984
    7. '```' → logprob: -17.523250579833984
    8. ',l' → logprob: -19.273250579833984
    9. ' ' → logprob: -20.023250579833984
    10. '
' → logprob: -20.023250579833984

Token 457: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02324605919420719
    2. ' +=' → logprob: -3.7732460498809814
    3. '+' → logprob: -15.023245811462402
    4. ']+=' → logprob: -15.648245811462402
    5. '=' → logprob: -16.77324676513672
    6. '```' → logprob: -19.02324676513672
    7. '+=(' → logprob: -19.89824676513672
    8. 'plus' → logprob: -20.14824676513672
    9. ' +' → logprob: -20.39824676513672
    10. '+="' → logprob: -20.64824676513672

Token 458: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -21.7500057220459
    4. '   ' → logprob: -22.3750057220459
    5. '۱' → logprob: -24.5000057220459
    6. '１' → logprob: -24.7500057220459
    7. '<|end|>' → logprob: -25.3750057220459
    8. '
' → logprob: -25.5000057220459
    9. '  ' → logprob: -25.6250057220459
    10. '१' → logprob: -26.5000057220459

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -20.875
    4. '   ' → logprob: -21.875
    5. '１' → logprob: -23.625
    6. '
' → logprob: -23.75
    7. '۱' → logprob: -24.125
    8. '<|end|>' → logprob: -24.625
    9. '  ' → logprob: -24.9375
    10. '१' → logprob: -25.3125

Token 460: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.774276774493046e-05
    2. '
' → logprob: -10.750038146972656
    3. '	' → logprob: -11.875038146972656
    4. '   ' → logprob: -12.500038146972656
    5. '<|end|>' → logprob: -13.750038146972656
    6. '        
' → logprob: -13.875038146972656
    7. '      ' → logprob: -14.000038146972656
    8. '\' → logprob: -14.875038146972656
    9. '​' → logprob: -15.125038146972656
    10. '        ' → logprob: -15.500038146972656

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001673061487963423
    2. '   ' → logprob: -9.250166893005371
    3. 'r' → logprob: -10.500166893005371
    4. '	' → logprob: -10.875166893005371
    5. ' r' → logprob: -11.125166893005371
    6. '```' → logprob: -12.875166893005371
    7. '           ' → logprob: -13.500166893005371
    8. '<|end|>' → logprob: -13.500166893005371
    9. ',' → logprob: -14.250166893005371
    10. '[' → logprob: -14.375166893005371

Token 462: ' if' (ID: 538)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.473126620054245
    2. 'if' (adapté à ' if') → logprob: -1.7231266498565674
    3. '       ' → logprob: -1.9731266498565674
    4. ' if' → logprob: -3.2231266498565674
    5. ' r' → logprob: -3.9731266498565674
    6. '   ' → logprob: -7.348126411437988
    7. '```' → logprob: -10.348126411437988
    8. ' ' → logprob: -11.223126411437988
    9. 'l' → logprob: -11.223126411437988
    10. '           ' → logprob: -11.348126411437988

Token 463: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10020752996206284
    2. ' r' → logprob: -2.350207567214966
    3. ' ' → logprob: -14.725207328796387
    4. '	r' → logprob: -15.225207328796387
    5. '   ' → logprob: -16.850208282470703
    6. '(r' → logprob: -16.850208282470703
    7. '
' → logprob: -17.100208282470703
    8. '  ' → logprob: -17.975208282470703
    9. ' not' → logprob: -18.350208282470703
    10. '_r' → logprob: -18.350208282470703

Token 464: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.018161997199058533
    2. '&' → logprob: -4.018161773681641
    3. ' &
' → logprob: -11.64316177368164
    4. ' &=' → logprob: -13.64316177368164
    5. '&
' → logprob: -14.51816177368164
    6. ' >' → logprob: -14.89316177368164
    7. '&amp' → logprob: -14.89316177368164
    8. '>' → logprob: -15.51816177368164
    9. '&gt' → logprob: -15.64316177368164
    10. ' ' → logprob: -16.26816177368164

Token 465: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04299931600689888
    2. ' ' → logprob: -3.167999267578125
    3. '-' → logprob: -16.292999267578125
    4. '
' → logprob: -17.792999267578125
    5. '#' → logprob: -17.917999267578125
    6. '   ' → logprob: -17.917999267578125
    7. '>' → logprob: -18.167999267578125
    8. '  ' → logprob: -18.292999267578125
    9. ' -' → logprob: -19.042999267578125
    10. '0' → logprob: -19.230499267578125

Token 466: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '-' → logprob: -16.37510871887207
    4. '   ' → logprob: -18.50010871887207
    5. '
' → logprob: -18.87510871887207
    6. '0' → logprob: -19.50010871887207
    7. '  ' → logprob: -20.00010871887207
    8. '```' → logprob: -20.37510871887207
    9. '~' → logprob: -20.43760871887207
    10. '#' → logprob: -20.50010871887207

Token 467: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5327861309051514
    2. ':' → logprob: -0.9077861309051514
    3. ' :' → logprob: -6.5327863693237305
    4. '-' → logprob: -6.5327863693237305
    5. ' :
' → logprob: -6.5327863693237305
    6. '==' → logprob: -6.6577863693237305
    7. '           ' → logprob: -6.6577863693237305
    8. '       ' → logprob: -6.9077863693237305
    9. ' ==' → logprob: -8.28278636932373
    10. ' -' → logprob: -8.40778636932373

Token 468: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02407802827656269
    2. '       ' → logprob: -4.149077892303467
    3. '   ' → logprob: -6.274077892303467
    4. ':
' → logprob: -6.274077892303467
    5. '          ' → logprob: -7.024077892303467
    6. ' r' → logprob: -7.024077892303467
    7. '0' → logprob: -7.524077892303467
    8. '```' → logprob: -7.774077892303467
    9. ' ' → logprob: -8.274078369140625
    10. ':' → logprob: -8.649078369140625

Token 469: ' res' (ID: 694)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00014537633978761733
    2. ' r' → logprob: -9.000144958496094
    3. 'res' (adapté à ' res') → logprob: -10.750144958496094
    4. '   ' → logprob: -15.375144958496094
    5. '       ' → logprob: -16.000144958496094
    6. ' res' → logprob: -16.125144958496094
    7. '           ' → logprob: -16.875144958496094
    8. '
' → logprob: -18.375144958496094
    9. '```' → logprob: -18.750144958496094
    10. '	r' → logprob: -19.125144958496094

Token 470: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.026209721341729164
    2. ' -=' → logprob: -3.901209831237793
    3. '-' → logprob: -5.401209831237793
    4. '           ' → logprob: -7.026209831237793
    5. '```' → logprob: -9.151209831237793
    6. '>' → logprob: -10.026209831237793
    7. '   ' → logprob: -10.026209831237793
    8. '=' → logprob: -11.026209831237793
    9. '       ' → logprob: -11.151209831237793
    10. '          ' → logprob: -11.901209831237793

Token 471: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.3132685124874115
    2. ' seg' → logprob: -1.3132685422897339
    3. '(seg' → logprob: -11.938268661499023
    4. 'se' → logprob: -16.938268661499023
    5. '.seg' → logprob: -17.688268661499023
    6. '_seg' → logprob: -18.188268661499023
    7. '```' → logprob: -18.313268661499023
    8. 'Seg' → logprob: -18.313268661499023
    9. ' ' → logprob: -18.438268661499023
    10. 'sem' → logprob: -19.063268661499023

Token 472: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -3.070975071750581e-05
    2. '(func' → logprob: -11.125030517578125
    3. 'seg' → logprob: -11.375030517578125
    4. ' func' → logprob: -13.500030517578125
    5. '   ' → logprob: -14.125030517578125
    6. '-' → logprob: -14.625030517578125
    7. '```' → logprob: -15.125030517578125
    8. '[' → logprob: -15.375030517578125
    9. '_func' → logprob: -15.750030517578125
    10. ' ' → logprob: -15.875030517578125

Token 473: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.1875571544806007e-05
    2. ' (' → logprob: -11.625011444091797
    3. '(
' → logprob: -14.250011444091797
    4. '(' → logprob: -14.250011444091797
    5. 'res' → logprob: -14.375011444091797
    6. '   ' → logprob: -14.750011444091797
    7. '(r' → logprob: -15.125011444091797
    8. ',res' → logprob: -15.500011444091797
    9. ',' → logprob: -17.000011444091797
    10. ' res' → logprob: -17.125011444091797

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08776627480983734
    2. '-' → logprob: -2.587766170501709
    3. ' -' → logprob: -5.337766170501709
    4. ' ,' → logprob: -5.837766170501709
    5. ',res' → logprob: -7.837766170501709
    6. 'res' → logprob: -8.087766647338867
    7. '   ' → logprob: -9.212766647338867
    8. ' ' → logprob: -9.837766647338867
    9. '(res' → logprob: -10.087766647338867
    10. '1' → logprob: -10.462766647338867

Token 475: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.016123050823807716
    2. 'r' → logprob: -4.266122817993164
    3. ' tree' → logprob: -6.266122817993164
    4. 'res' → logprob: -10.141122817993164
    5. '   ' → logprob: -11.516122817993164
    6. ' r' → logprob: -12.016122817993164
    7. '(tree' → logprob: -13.516122817993164
    8. '	tree' → logprob: -14.766122817993164
    9. ' ' → logprob: -15.391122817993164
    10. '       ' → logprob: -15.516122817993164

Token 476: '[r' (ID: 33265)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029786715283989906
    2. ' -' → logprob: -3.5297868251800537
    3. '1' → logprob: -11.279787063598633
    4. '[' → logprob: -11.279787063598633
    5. '[-' → logprob: -11.904787063598633
    6. ' ' → logprob: -13.654787063598633
    7. ')' → logprob: -13.779787063598633
    8. '   ' → logprob: -14.029787063598633
    9. ')-' → logprob: -15.279787063598633
    10. '[l' → logprob: -15.779787063598633

Token 477: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3868974447250366
    2. ' -' → logprob: -1.1368974447250366
    3. ')' → logprob: -10.886897087097168
    4. '   ' → logprob: -12.761897087097168
    5. ' ' → logprob: -13.136897087097168
    6. '1' → logprob: -13.761897087097168
    7. ' ' → logprob: -14.511897087097168
    8. '           ' → logprob: -14.886897087097168
    9. '–' → logprob: -15.761897087097168
    10. '       ' → logprob: -15.761897087097168

Token 478: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.125001907348633
    4. '<|end|>' → logprob: -18.250001907348633
    5. '       ' → logprob: -19.500001907348633
    6. ')' → logprob: -19.750001907348633
    7. '```' → logprob: -19.875001907348633
    8. '  ' → logprob: -20.750001907348633
    9. '           ' → logprob: -21.000001907348633
    10. '    ' → logprob: -21.125001907348633

Token 479: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.625015258789062
    4. '```' → logprob: -17.750015258789062
    5. ')' → logprob: -18.500015258789062
    6. '       ' → logprob: -20.000015258789062
    7. '  ' → logprob: -20.062515258789062
    8. '<|end|>' → logprob: -20.187515258789062
    9. '0' → logprob: -20.500015258789062
    10. '
' → logprob: -20.812515258789062

Token 480: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2014353722333908
    2. ')' → logprob: -1.7014353275299072
    3. ')
' → logprob: -11.451435089111328
    4. '       ' → logprob: -12.451435089111328
    5. ' )
' → logprob: -12.701435089111328
    6. '           ' → logprob: -12.951435089111328
    7. '   ' → logprob: -14.326435089111328
    8. ' )' → logprob: -14.951435089111328
    9. ')

' → logprob: -15.451435089111328
    10. ')`
' → logprob: -15.576435089111328

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12410561740398407
    2. '           ' → logprob: -2.24910569190979
    3. '   ' → logprob: -5.499105453491211
    4. 'r' → logprob: -5.499105453491211
    5. ' r' → logprob: -5.874105453491211
    6. '```' → logprob: -9.374105453491211
    7. ',r' → logprob: -9.624105453491211
    8. '               ' → logprob: -11.624105453491211
    9. '	r' → logprob: -11.874105453491211
    10. '
' → logprob: -12.124105453491211

Token 482: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0008746589301154017
    2. ' r' → logprob: -7.2508745193481445
    3. '   ' → logprob: -8.750874519348145
    4. '       ' → logprob: -12.250874519348145
    5. '           ' → logprob: -14.000874519348145
    6. ' ' → logprob: -14.500874519348145
    7. '  ' → logprob: -15.875874519348145
    8. '	r' → logprob: -16.00087547302246
    9. '     ' → logprob: -16.87587547302246
    10. '```' → logprob: -17.00087547302246

Token 483: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.1322294920682907
    2. ' >>=' → logprob: -2.2572295665740967
    3. '+=' → logprob: -4.007229328155518
    4. ' +=' → logprob: -7.257229328155518
    5. '```' → logprob: -9.132229804992676
    6. '   ' → logprob: -9.632229804992676
    7. '=' → logprob: -9.882229804992676
    8. '>>>' → logprob: -10.007229804992676
    9. '//=' → logprob: -11.007229804992676
    10. ',' → logprob: -11.507229804992676

Token 484: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. '0' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.500028610229492
    4. ' ' → logprob: -16.750028610229492
    5. '       ' → logprob: -20.000028610229492
    6. '```' → logprob: -20.250028610229492
    7. '
' → logprob: -20.750028610229492
    8. '           ' → logprob: -21.875028610229492
    9. '    ' → logprob: -22.125028610229492
    10. 'shift' → logprob: -22.687528610229492

Token 485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -17.875
    3. ' ' → logprob: -18.875
    4. '   ' → logprob: -19.25
    5. '```' → logprob: -19.5
    6. '１' → logprob: -21.9375
    7. '
' → logprob: -22.5625
    8. '' → logprob: -22.8125
    9. '       ' → logprob: -22.8125
    10. '۱' → logprob: -23.25

Token 486: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016948189586400986
    2. '   ' → logprob: -7.251694679260254
    3. ',' → logprob: -8.376694679260254
    4. 'r' → logprob: -8.626694679260254
    5. ',r' → logprob: -8.876694679260254
    6. '```' → logprob: -9.126694679260254
    7. '           ' → logprob: -9.251694679260254
    8. '<|end|>' → logprob: -9.501694679260254
    9. ' r' → logprob: -10.376694679260254
    10. '        
' → logprob: -11.001694679260254

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27599284052848816
    2. ' r' → logprob: -2.0259928703308105
    3. 'r' → logprob: -3.0259928703308105
    4. '   ' → logprob: -3.4009928703308105
    5. ',' → logprob: -4.4009928703308105
    6. ',r' → logprob: -4.4009928703308105
    7. '	r' → logprob: -6.7759928703308105
    8. '```' → logprob: -7.2759928703308105
    9. ' ' → logprob: -8.150992393493652
    10. '<|end|>' → logprob: -8.275992393493652

Token 488: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.00012356207298580557
    2. ' r' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.500123977661133
    4. '	r' → logprob: -17.875123977661133
    5. '    ' → logprob: -19.500123977661133
    6. '       ' → logprob: -20.375123977661133
    7. '  ' → logprob: -21.250123977661133
    8. ' ' → logprob: -22.000123977661133
    9. 'res' → logprob: -22.625123977661133
    10. '     ' → logprob: -22.625123977661133

Token 489: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.014183365739881992
    2. ' >>=' → logprob: -4.264183521270752
    3. '>>>' → logprob: -11.389183044433594
    4. '=' → logprob: -12.014183044433594
    5. ' >>' → logprob: -14.514183044433594
    6. '   ' → logprob: -14.639183044433594
    7. ')>>' → logprob: -15.139183044433594
    8. '//=' → logprob: -15.389183044433594
    9. '	' → logprob: -15.514183044433594
    10. ' ' → logprob: -15.639183044433594

Token 490: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '0' → logprob: -16.25004005432129
    4. '   ' → logprob: -18.00004005432129
    5. '```' → logprob: -18.00004005432129
    6. '<|end|>' → logprob: -20.75004005432129
    7. 'One' → logprob: -20.81254005432129
    8. '  ' → logprob: -21.00004005432129
    9. '  
' → logprob: -21.12504005432129
    10. '	' → logprob: -21.18754005432129

Token 491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.750000953674316
    3. '0' → logprob: -15.500000953674316
    4. '```' → logprob: -16.75
    5. '   ' → logprob: -18.625
    6. '2' → logprob: -18.8125
    7. '<|end|>' → logprob: -18.875
    8. 's' → logprob: -19.625
    9. 'One' → logprob: -19.875
    10. '
' → logprob: -19.9375

Token 492: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27107301354408264
    2. '<|end|>' → logprob: -1.7710729837417603
    3. '       ' → logprob: -2.77107310295105
    4. ',' → logprob: -7.021072864532471
    5. '<|end|>' → logprob: -7.146072864532471
    6. ')' → logprob: -8.021073341369629
    7. '[' → logprob: -8.146073341369629
    8. '```' → logprob: -8.396073341369629
    9. ' return' → logprob: -8.646073341369629
    10. '    ' → logprob: -8.646073341369629

Token 493: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2983039617538452
    2. '   ' → logprob: -1.9233039617538452
    3. 'r' → logprob: -2.5483040809631348
    4. ' r' → logprob: -3.4233040809631348
    5. ',r' → logprob: -8.298303604125977
    6. ' ' → logprob: -8.548303604125977
    7. '           ' → logprob: -8.673303604125977
    8. '	r' → logprob: -9.048303604125977
    9. ',' → logprob: -9.548303604125977
    10. '```' → logprob: -9.673303604125977

Token 494: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12531527876853943
    2. '   ' → logprob: -2.6253151893615723
    3. 'return' (adapté à ' return') → logprob: -3.1253151893615723
    4. '       ' → logprob: -7.125315189361572
    5. ' r' → logprob: -7.625315189361572
    6. ' ' → logprob: -10.62531566619873
    7. ' return' → logprob: -10.62531566619873
    8. '           ' → logprob: -10.75031566619873
    9. 'res' → logprob: -10.75031566619873
    10. '```' → logprob: -11.62531566619873

Token 495: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.15310683415737e-05
    2. ' res' → logprob: -10.750021934509277
    3. '(res' → logprob: -20.12502098083496
    4. '	res' → logprob: -21.25002098083496
    5. 'r' → logprob: -21.50002098083496
    6. 're' → logprob: -23.00002098083496
    7. '_res' → logprob: -23.50002098083496
    8. '$res' → logprob: -23.62502098083496
    9. 'result' → logprob: -23.87502098083496
    10. 'return' → logprob: -24.37502098083496

Token 496: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06331054121255875
    2. '<|end|>' → logprob: -3.0633106231689453
    3. ',' → logprob: -5.188310623168945
    4. '```' → logprob: -5.938310623168945
    5. '   ' → logprob: -6.063310623168945
    6. ']' → logprob: -6.438310623168945
    7. ':' → logprob: -7.563310623168945
    8. '}' → logprob: -8.313310623168945
    9. '<|end|>' → logprob: -8.313310623168945
    10. '[' → logprob: -8.438310623168945

Token 497: 'start' (ID: 5236)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0405879020690918
    2. ')' → logprob: -1.2905879020690918
    3. ',' → logprob: -1.7905879020690918
    4. '<|end|>' → logprob: -2.040587902069092
    5. '[' → logprob: -4.290587902069092
    6. '```' → logprob: -4.415587902069092
    7. '       ' → logprob: -4.540587902069092
    8. ':' → logprob: -4.790587902069092
    9. 'r' → logprob: -4.915587902069092
    10. ',r' → logprob: -5.290587902069092

Token 498: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.281507968902588
    2. '=' → logprob: -1.281507968902588
    3. '_' → logprob: -1.531507968902588
    4. ' =' → logprob: -1.656507968902588
    5. '[' → logprob: -4.281507968902588
    6. '_idx' → logprob: -5.031507968902588
    7. '_index' → logprob: -5.531507968902588
    8. ':' → logprob: -6.156507968902588
    9. ')' → logprob: -6.406507968902588
    10. 'index' → logprob: -7.156507968902588

Token 499: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14464187622070312
    2. 'beam' → logprob: -2.144641876220703
    3. ' ' → logprob: -4.769641876220703
    4. 'data' → logprob: -5.894641876220703
    5. ' beam' → logprob: -6.644641876220703
    6. 'cum' → logprob: -7.144641876220703
    7. '10' → logprob: -7.144641876220703
    8. '(' → logprob: -7.394641876220703
    9. 'max' → logprob: -7.519641876220703
    10. '-' → logprob: -7.644641876220703

Token 500: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19106267392635345
    2. 'beam' → logprob: -1.8160626888275146
    3. 'data' → logprob: -5.9410624504089355
    4. '-' → logprob: -5.9410624504089355
    5. 'heap' → logprob: -6.5660624504089355
    6. '10' → logprob: -7.0660624504089355
    7. 'max' → logprob: -7.3160624504089355
    8. 'random' → logprob: -7.5660624504089355
    9. 'N' → logprob: -7.8160624504089355
    10. '(' → logprob: -8.191062927246094

Token 501: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008122904226183891
    2. '<|end|>' → logprob: -5.50812292098999
    3. 'for' → logprob: -5.75812292098999
    4. 'while' → logprob: -8.633122444152832
    5. 'if' → logprob: -9.508122444152832
    6. '<|end|>' → logprob: -9.758122444152832
    7. ' 
' → logprob: -9.883122444152832
    8. ' for' → logprob: -10.008122444152832
    9. 'beam' → logprob: -10.133122444152832
    10. '+' → logprob: -10.133122444152832

Token 502: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.42787057161331177
    2. 'for' → logprob: -1.802870512008667
    3. ' end' → logprob: -3.052870512008667
    4. 'while' → logprob: -3.677870512008667
    5. 'max' → logprob: -3.677870512008667
    6. ' for' → logprob: -3.927870512008667
    7. 'idx' → logprob: -4.302870750427246
    8. 'ans' → logprob: -4.927870750427246
    9. 'result' → logprob: -5.177870750427246
    10. 'import' → logprob: -5.552870750427246

Token 503: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03368962183594704
    2. '=' → logprob: -3.4086897373199463
    3. '+' → logprob: -10.658689498901367
    4. ' +' → logprob: -11.033689498901367
    5. ' ' → logprob: -13.158689498901367
    6. ' +=' → logprob: -14.408689498901367
    7. ' =
' → logprob: -14.658689498901367
    8. ',' → logprob: -15.033689498901367
    9. '=N' → logprob: -15.158689498901367
    10. ' N' → logprob: -15.783689498901367

Token 504: ' N' (ID: 478)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.15445831418037415
    2. 'N' → logprob: -2.4044582843780518
    3. ' ' → logprob: -3.1544582843780518
    4. ' N' → logprob: -5.654458522796631
    5. 'max' → logprob: -5.779458522796631
    6. '100' → logprob: -6.529458522796631
    7. '1' → logprob: -7.654458522796631
    8. 'len' → logprob: -7.654458522796631
    9. 'beam' → logprob: -7.779458522796631
    10. ' max' → logprob: -8.904458045959473

Token 505: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008320469409227371
    2. '+' → logprob: -5.383320331573486
    3. 'while' → logprob: -6.383320331573486
    4. '<|end|>' → logprob: -7.133320331573486
    5. '```' → logprob: -8.383320808410645
    6. ' while' → logprob: -8.383320808410645
    7. ' 
' → logprob: -8.633320808410645
    8. '

' → logprob: -8.758320808410645
    9. '
' → logprob: -8.883320808410645
    10. '+
' → logprob: -9.633320808410645

Token 506: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01893244870007038
    2. 'mid' → logprob: -5.143932342529297
    3. 'ans' → logprob: -5.643932342529297
    4. 'res' → logprob: -5.643932342529297
    5. 'for' → logprob: -6.393932342529297
    6. 'answer' → logprob: -6.768932342529297
    7. ' while' → logprob: -6.893932342529297
    8. 'result' → logprob: -7.268932342529297
    9. 'max' → logprob: -7.643932342529297
    10. 'best' → logprob: -8.143932342529297

Token 507: ' end' (ID: 1268)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.31354060769081116
    2. 'start' → logprob: -1.3135405778884888
    3. ' end' → logprob: -8.6885404586792
    4. 'end' → logprob: -9.3135404586792
    5. '(start' → logprob: -11.6885404586792
    6. ' ' → logprob: -12.3135404586792
    7. ' True' → logprob: -12.5635404586792
    8. 'True' → logprob: -13.3135404586792
    9. '	start' → logprob: -14.0635404586792
    10. ' not' → logprob: -14.5635404586792

Token 508: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13109736144542694
    2. ' -' → logprob: -2.3810973167419434
    3. '-start' → logprob: -3.5060973167419434
    4. '>' → logprob: -7.881097316741943
    5. ' >' → logprob: -11.006097793579102
    6. '=' → logprob: -12.631097793579102
    7. '<' → logprob: -13.631097793579102
    8. '-end' → logprob: -14.631097793579102
    9. '-current' → logprob: -14.631097793579102
    10. '-l' → logprob: -15.131097793579102

Token 509: ' start' (ID: 1604)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31364744901657104
    2. 'start' → logprob: -1.3136475086212158
    3. ' start' → logprob: -8.563647270202637
    4. '>' → logprob: -9.063647270202637
    5. ' ' → logprob: -9.563647270202637
    6. ' >' → logprob: -11.938647270202637
    7. '(start' → logprob: -14.313647270202637
    8. '   ' → logprob: -15.188647270202637
    9. '
' → logprob: -15.563647270202637
    10. ':start' → logprob: -15.563647270202637

Token 510: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.01815064437687397
    2. ' >' → logprob: -4.018150806427002
    3. '＞' → logprob: -14.518150329589844
    4. '()>' → logprob: -16.018150329589844
    5. ' ' → logprob: -17.643150329589844
    6. '&gt' → logprob: -17.768150329589844
    7. '1' → logprob: -17.893150329589844
    8. '>b' → logprob: -18.018150329589844
    9. '">' → logprob: -18.143150329589844
    10. ')>' → logprob: -18.518150329589844

Token 511: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003815756645053625
    2. ' ' → logprob: -7.8753814697265625
    3. '0' → logprob: -14.000381469726562
    4. '>' → logprob: -14.625381469726562
    5. '   ' → logprob: -15.875381469726562
    6. '
' → logprob: -17.500381469726562
    7. '=' → logprob: -17.500381469726562
    8. '```' → logprob: -17.875381469726562
    9. ' >' → logprob: -18.750381469726562
    10. '  ' → logprob: -19.812881469726562

Token 512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001519325451226905
    2. ' ' → logprob: -8.875151634216309
    3. '0' → logprob: -11.625151634216309
    4. '   ' → logprob: -13.125151634216309
    5. '>' → logprob: -15.000151634216309
    6. '2' → logprob: -15.500151634216309
    7. '```' → logprob: -16.750152587890625
    8. '100' → logprob: -16.875152587890625
    9. '  ' → logprob: -16.937652587890625
    10. '3' → logprob: -17.000152587890625

Token 513: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10024570673704147
    2. ':
' → logprob: -2.350245714187622
    3. '   ' → logprob: -11.100245475769043
    4. ' :
' → logprob: -11.725245475769043
    5. ' :' → logprob: -12.100245475769043
    6. ' and' → logprob: -12.975245475769043
    7. ':

' → logprob: -12.975245475769043
    8. ':
' → logprob: -13.350245475769043
    9. '):
' → logprob: -13.475245475769043
    10. ':start' → logprob: -14.225245475769043

Token 514: '   ' (ID: 271)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.032863788306713104
    2. '   ' → logprob: -4.157863616943359
    3. 'mid' → logprob: -4.157863616943359
    4. '[mid' → logprob: -8.40786361694336
    5. ' midpoint' → logprob: -8.40786361694336
    6. '<|end|>' → logprob: -9.15786361694336
    7. ' middle' → logprob: -9.40786361694336
    8. '_mid' → logprob: -9.40786361694336
    9. 'm' → logprob: -9.78286361694336
    10. '```' → logprob: -9.78286361694336

Token 515: ' m' (ID: 284)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.03838444873690605
    2. ' mid' → logprob: -3.288384437561035
    3. '   ' → logprob: -8.413384437561035
    4. 'm' (adapté à ' m') → logprob: -9.163384437561035
    5. 'middle' → logprob: -11.538384437561035
    6. 'med' → logprob: -13.038384437561035
    7. ' ' → logprob: -13.288384437561035
    8. '[mid' → logprob: -14.413384437561035
    9. 'c' → logprob: -14.913384437561035
    10. 'mi' → logprob: -15.538384437561035

Token 516: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8404651284217834
    2. ' =' → logprob: -0.8404651284217834
    3. 'id' → logprob: -2.0904650688171387
    4. 'iddle' → logprob: -4.340465068817139
    5. '=(' → logprob: -9.090465545654297
    6. '=id' → logprob: -9.090465545654297
    7. '=int' → logprob: -10.590465545654297
    8. 'idd' → logprob: -10.715465545654297
    9. '＝' → logprob: -11.590465545654297
    10. '=((' → logprob: -12.340465545654297

Token 517: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.03840968385338783
    2. ' (' → logprob: -3.28840970993042
    3. '(end' → logprob: -7.91340970993042
    4. '[start' → logprob: -13.788409233093262
    5. 'start' → logprob: -15.163409233093262
    6. '   ' → logprob: -15.163409233093262
    7. '(st' → logprob: -15.288409233093262
    8. ' ' → logprob: -15.913409233093262
    9. '(begin' → logprob: -16.163410186767578
    10. '(' → logprob: -16.413410186767578

Token 518: 'end' (ID: 419)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00012356207298580557
    2. ' start' → logprob: -9.000123977661133
    3. 'end' → logprob: -16.125123977661133
    4. 'star' → logprob: -19.625123977661133
    5. '	start' → logprob: -19.750123977661133
    6. '(start' → logprob: -20.250123977661133
    7. ' ' → logprob: -20.500123977661133
    8. '   ' → logprob: -21.250123977661133
    9. ')' → logprob: -22.125123977661133
    10. 'st' → logprob: -22.625123977661133

Token 519: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132626414299011
    2. ' +' → logprob: -1.313262701034546
    3. '+m' → logprob: -14.688262939453125
    4. ' ' → logprob: -15.938262939453125
    5. 'start' → logprob: -16.188262939453125
    6. '＋' → logprob: -16.438262939453125
    7. ' +
' → logprob: -16.813262939453125
    8. '+
' → logprob: -17.188262939453125
    9. '+b' → logprob: -17.688262939453125
    10. '+s' → logprob: -17.688262939453125

Token 520: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0019286326132714748
    2. ' start' → logprob: -6.251928806304932
    3. ' ' → logprob: -17.126928329467773
    4. '[start' → logprob: -17.126928329467773
    5. '(start' → logprob: -18.376928329467773
    6. 'm' → logprob: -19.876928329467773
    7. '  ' → logprob: -20.501928329467773
    8. '	start' → logprob: -20.501928329467773
    9. '=start' → logprob: -20.751928329467773
    10. '   ' → logprob: -20.876928329467773

Token 521: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014585316239390522
    2. ')//' → logprob: -9.00014591217041
    3. ')>>' → logprob: -10.75014591217041
    4. ' )' → logprob: -14.00014591217041
    5. ')
' → logprob: -17.250144958496094
    6. '）' → logprob: -17.750144958496094
    7. '>>' → logprob: -19.000144958496094
    8. '   ' → logprob: -20.125144958496094
    9. '//' → logprob: -20.500144958496094
    10. ' ' → logprob: -20.500144958496094

Token 522: ' //' (ID: 602)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.4202805161476135
    2. '//' → logprob: -1.7952804565429688
    3. ' //' → logprob: -1.7952804565429688
    4. ' >>' → logprob: -4.545280456542969
    5. '   ' → logprob: -9.045280456542969
    6. ' ' → logprob: -9.545280456542969
    7. ' ' → logprob: -10.045280456542969
    8. '```' → logprob: -10.045280456542969
    9. ')' → logprob: -10.545280456542969
    10. '	' → logprob: -11.795280456542969

Token 523: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '```' → logprob: -20.75020408630371
    4. '   ' → logprob: -20.87520408630371
    5. '=' → logprob: -22.00020408630371
    6. '۲' → logprob: -22.12520408630371
    7. '  ' → logprob: -22.37520408630371
    8. '２' → logprob: -22.50020408630371
    9. 'm' → logprob: -23.00020408630371
    10. '২' → logprob: -23.12520408630371

Token 524: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -22.000001907348633
    4. '   ' → logprob: -22.750001907348633
    5. '２' → logprob: -23.375001907348633
    6. '۲' → logprob: -23.750001907348633
    7. '  ' → logprob: -24.750001907348633
    8. '
' → logprob: -25.125001907348633
    9. '``' → logprob: -25.250001907348633
    10. '२' → logprob: -25.250001907348633

Token 525: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008783210068941116
    2. '<|end|>' → logprob: -5.383783340454102
    3. '  
' → logprob: -6.758783340454102
    4. ' if' → logprob: -7.258783340454102
    5. ' 
' → logprob: -7.258783340454102
    6. 'if' → logprob: -7.508783340454102
    7. '    
' → logprob: -7.883783340454102
    8. '
' → logprob: -8.258783340454102
    9. 'start' → logprob: -9.258783340454102
    10. '<|end|>' → logprob: -10.008783340454102

Token 526: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18649017810821533
    2. '
' → logprob: -2.186490058898926
    3. 'if' → logprob: -3.436490058898926
    4. ' if' → logprob: -4.186490058898926
    5. 'res' → logprob: -5.061490058898926
    6. '    
' → logprob: -6.186490058898926
    7. ' res' → logprob: -6.936490058898926
    8. 'mid' → logprob: -8.186490058898926
    9. 'min' → logprob: -8.561490058898926
    10. 'val' → logprob: -9.186490058898926

Token 527: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1342305839061737
    2. 'res' → logprob: -2.509230613708496
    3. 'min' → logprob: -4.009230613708496
    4. 'val' → logprob: -5.259230613708496
    5. 'left' → logprob: -5.509230613708496
    6. 'ok' → logprob: -5.884230613708496
    7. 'l' → logprob: -6.009230613708496
    8. 'mid' → logprob: -6.009230613708496
    9. 'idx' → logprob: -6.384230613708496
    10. ' if' → logprob: -6.509230613708496

Token 528: ' m' (ID: 284)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.33061546087265015
    2. 'Seg' → logprob: -1.455615520477295
    3. 'data' → logprob: -4.080615520477295
    4. ' cum' → logprob: -4.330615520477295
    5. 'seg' → logprob: -4.580615520477295
    6. ' Seg' → logprob: -5.580615520477295
    7. ' data' → logprob: -7.205615520477295
    8. ' seg' → logprob: -7.205615520477295
    9. 'Cum' → logprob: -7.205615520477295
    10. 'Segment' → logprob: -7.455615520477295

Token 529: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2597609758377075
    2. '==' → logprob: -1.8847609758377075
    3. ' <' → logprob: -3.509760856628418
    4. ' <=' → logprob: -4.009760856628418
    5. ' >' → logprob: -4.509760856628418
    6. ' >=' → logprob: -5.009760856628418
    7. '<=' → logprob: -6.009760856628418
    8. '>=' → logprob: -6.509760856628418
    9. '>' → logprob: -6.634760856628418
    10. ' *' → logprob: -6.759760856628418

Token 530: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.605963945388794
    2. 'start' → logprob: -1.105963945388794
    3. 'N' → logprob: -2.105963945388794
    4. ' ' → logprob: -7.230963706970215
    5. 'end' → logprob: -7.355963706970215
    6. ' start' → logprob: -8.605963706970215
    7. '1' → logprob: -8.730963706970215
    8. ' N' → logprob: -9.855963706970215
    9. 'm' → logprob: -10.105963706970215
    10. 'len' → logprob: -12.355963706970215

Token 531: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06461451202630997
    2. 'N' → logprob: -3.0646145343780518
    3. 'start' → logprob: -4.189614295959473
    4. ' ' → logprob: -7.439614295959473
    5. 'end' → logprob: -9.564614295959473
    6. '1' → logprob: -10.189614295959473
    7. ' N' → logprob: -11.189614295959473
    8. ' start' → logprob: -11.439614295959473
    9. 'm' → logprob: -11.689614295959473
    10. 'len' → logprob: -12.064614295959473

Token 532: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5165638327598572
    2. ':
' → logprob: -1.141563892364502
    3. ' or' → logprob: -2.516563892364502
    4. '       ' → logprob: -6.141563892364502
    5. ':return' → logprob: -7.766563892364502
    6. 'or' → logprob: -7.891563892364502
    7. '   ' → logprob: -7.891563892364502
    8. ' :' → logprob: -11.766563415527344
    9. ' :
' → logprob: -12.016563415527344
    10. ':
' → logprob: -12.141563415527344

Token 533: '       ' (ID: 309)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6086939573287964
    2. '       ' → logprob: -0.9836939573287964
    3. '   ' → logprob: -3.358694076538086
    4. 'start' → logprob: -3.733694076538086
    5. 'or' → logprob: -5.358694076538086
    6. 'print' → logprob: -5.483694076538086
    7. ':' → logprob: -5.608694076538086
    8. 'm' → logprob: -5.858694076538086
    9. ':
' → logprob: -6.733694076538086
    10. ' start' → logprob: -7.233694076538086

Token 534: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.49465927481651306
    2. 'start' → logprob: -1.7446593046188354
    3. '   ' → logprob: -2.369659185409546
    4. 'break' → logprob: -2.869659185409546
    5. 'continue' → logprob: -4.369659423828125
    6. 'm' → logprob: -4.494659423828125
    7. ' print' → logprob: -4.494659423828125
    8. ' break' → logprob: -5.244659423828125
    9. ' start' → logprob: -5.244659423828125
    10. 'res' → logprob: -5.369659423828125

Token 535: ' data' (ID: 1238)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.7179715633392334
    2. ' cum' → logprob: -1.5929715633392334
    3. 'beam' → logprob: -1.8429715633392334
    4. ' beam' → logprob: -2.5929715633392334
    5. ' data' → logprob: -3.2179715633392334
    6. 'data' → logprob: -3.7179715633392334
    7. ' seg' → logprob: -6.0929718017578125
    8. 'seg' → logprob: -6.8429718017578125
    9. '0' → logprob: -6.9679718017578125
    10. 'Seg' → logprob: -6.9679718017578125

Token 536: '[' (ID: 58)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.002242204500362277
    2. '[' → logprob: -6.127242088317871
    3. '[start' → logprob: -11.002242088317871
    4. '[N' → logprob: -11.252242088317871
    5. 'm' → logprob: -12.002242088317871
    6. ' [' → logprob: -12.002242088317871
    7. '[-' → logprob: -12.627242088317871
    8. ' ' → logprob: -12.877242088317871
    9. '[end' → logprob: -14.127242088317871
    10. '[len' → logprob: -14.252242088317871

Token 537: '0' (ID: 15)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03397899121046066
    2. '0' → logprob: -3.4089789390563965
    3. 'N' → logprob: -9.158979415893555
    4. ' m' → logprob: -9.158979415893555
    5. '[m' → logprob: -9.408979415893555
    6. 'start' → logprob: -11.158979415893555
    7. ' ' → logprob: -12.658979415893555
    8. '[' → logprob: -12.783979415893555
    9. '(m' → logprob: -12.783979415893555
    10. ']' → logprob: -13.408979415893555

Token 538: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04659181460738182
    2. ']<=' → logprob: -3.6715917587280273
    3. ']>=' → logprob: -4.796591758728027
    4. '<=' → logprob: -5.546591758728027
    5. '[' → logprob: -5.671591758728027
    6. ' ]' → logprob: -6.296591758728027
    7. ' <=' → logprob: -6.921591758728027
    8. ']<' → logprob: -7.671591758728027
    9. '   ' → logprob: -7.796591758728027
    10. ']>' → logprob: -8.421591758728027

Token 539: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3708697557449341
    2. ' <=' → logprob: -1.870869755744934
    3. '>=' → logprob: -2.1208696365356445
    4. ' >=' → logprob: -3.8708696365356445
    5. '<' → logprob: -5.1208696365356445
    6. '>' → logprob: -6.2458696365356445
    7. ' <' → logprob: -6.3708696365356445
    8. '+' → logprob: -6.4958696365356445
    9. ' +' → logprob: -6.4958696365356445
    10. '[' → logprob: -6.6208696365356445

Token 540: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.036658354103565216
    2. 'beam' → logprob: -4.03665828704834
    3. 'cum' → logprob: -4.53665828704834
    4. ' ' → logprob: -5.41165828704834
    5. '10' → logprob: -6.53665828704834
    6. 'm' → logprob: -7.28665828704834
    7. '-' → logprob: -8.28665828704834
    8. ' cum' → logprob: -8.41165828704834
    9. ' beam' → logprob: -9.16165828704834
    10. '   ' → logprob: -9.41165828704834

Token 541: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05316750332713127
    2. 'beam' → logprob: -3.6781675815582275
    3. 'cum' → logprob: -3.8031675815582275
    4. '10' → logprob: -6.428167343139648
    5. ' ' → logprob: -6.678167343139648
    6. 'm' → logprob: -7.678167343139648
    7. '-' → logprob: -8.178167343139648
    8. '   ' → logprob: -9.615667343139648
    9. ' cum' → logprob: -9.615667343139648
    10. 'start' → logprob: -9.928167343139648

Token 542: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5791135430335999
    2. ':' → logprob: -0.8291135430335999
    3. '   ' → logprob: -6.829113483428955
    4. '       ' → logprob: -7.329113483428955
    5. ' and' → logprob: -7.454113483428955
    6. ':return' → logprob: -8.204113960266113
    7. ' :
' → logprob: -8.204113960266113
    8. ' :' → logprob: -9.204113960266113
    9. ':
' → logprob: -9.829113960266113
    10. '           ' → logprob: -10.204113960266113

Token 543: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029139799997210503
    2. ' end' → logprob: -4.654139995574951
    3. 'end' → logprob: -4.654139995574951
    4. '       ' → logprob: -5.279139995574951
    5. ':' → logprob: -6.279139995574951
    6. ':
' → logprob: -7.029139995574951
    7. ' start' → logprob: -7.904139995574951
    8. 'start' → logprob: -8.154139518737793
    9. '   ' → logprob: -8.654139518737793
    10. '          ' → logprob: -9.279139518737793

Token 544: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.3258759081363678
    2. 'end' → logprob: -1.5758758783340454
    3. ' start' → logprob: -3.075875997543335
    4. ' end' → logprob: -3.950875997543335
    5. '               ' → logprob: -5.325875759124756
    6. '           ' → logprob: -7.700875759124756
    7. 'break' → logprob: -8.575876235961914
    8. '   ' → logprob: -8.700876235961914
    9. ' break' → logprob: -9.450876235961914
    10. 'print' → logprob: -10.075876235961914

Token 545: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023848712444305
    2. '=' → logprob: -2.350238561630249
    3. ' +=' → logprob: -11.100238800048828
    4. ',' → logprob: -11.600238800048828
    5. '+=' → logprob: -11.975238800048828
    6. '=m' → logprob: -14.475238800048828
    7. ' ' → logprob: -14.600238800048828
    8. ' ,' → logprob: -16.975238800048828
    9. ' |=' → logprob: -17.975238800048828
    10. ' =
' → logprob: -17.975238800048828

Token 546: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.018046455457806587
    2. '0' → logprob: -4.6430463790893555
    3. ' m' → logprob: -4.8930463790893555
    4. '1' → logprob: -7.2680463790893555
    5. ' ' → logprob: -9.768046379089355
    6. '   ' → logprob: -13.643046379089355
    7. 'end' → logprob: -14.768046379089355
    8. 'max' → logprob: -15.330546379089355
    9. 'start' → logprob: -15.393046379089355
    10. 'mid' → logprob: -15.768046379089355

Token 547: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34186235070228577
    2. 'else' → logprob: -1.7168623208999634
    3. ' else' → logprob: -3.091862440109253
    4. '       ' → logprob: -3.216862440109253
    5. '
' → logprob: -3.841862440109253
    6. '    
' → logprob: -6.091862201690674
    7. '           ' → logprob: -8.216862678527832
    8. '        
' → logprob: -8.966862678527832
    9. ' 
' → logprob: -9.591862678527832
    10. '            
' → logprob: -9.841862678527832

Token 548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1080312579870224
    2. '   ' → logprob: -2.4830312728881836
    3. 'else' → logprob: -4.233031272888184
    4. ' else' → logprob: -5.733031272888184
    5. '
' → logprob: -7.108031272888184
    6. '    
' → logprob: -8.483031272888184
    7. '           ' → logprob: -9.733031272888184
    8. '        
' → logprob: -10.858031272888184
    9. ' 
' → logprob: -11.108031272888184
    10. '    ' → logprob: -11.358031272888184

Token 549: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10393758118152618
    2. '   ' → logprob: -2.8539376258850098
    3. '       ' → logprob: -3.3539376258850098
    4. ' else' → logprob: -5.10393762588501
    5. '           ' → logprob: -9.603937149047852
    6. '    ' → logprob: -12.353937149047852
    7. '
' → logprob: -12.978937149047852
    8. 'elif' → logprob: -13.228937149047852
    9. '     ' → logprob: -13.353937149047852
    10. 'break' → logprob: -13.978937149047852

Token 550: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35451996326446533
    2. ':
' → logprob: -1.4795199632644653
    3. ':' → logprob: -2.854519844055176
    4. 'end' → logprob: -4.479519844055176
    5. '       ' → logprob: -7.104519844055176
    6. ':end' → logprob: -8.229519844055176
    7. '          ' → logprob: -8.354519844055176
    8. ' end' → logprob: -8.604519844055176
    9. '   ' → logprob: -9.229519844055176
    10. '         ' → logprob: -10.229519844055176

Token 551: '           ' (ID: 352)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.19699347019195557
    2. '           ' → logprob: -2.196993350982666
    3. ' end' → logprob: -2.696993350982666
    4. '   ' → logprob: -8.821993827819824
    5. '       ' → logprob: -9.571993827819824
    6. '	end' → logprob: -11.446993827819824
    7. '          ' → logprob: -12.071993827819824
    8. ',end' → logprob: -12.821993827819824
    9. 'break' → logprob: -12.946993827819824
    10. '
' → logprob: -13.071993827819824

Token 552: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.0003874166286550462
    2. ' end' → logprob: -7.875387191772461
    3. 'break' → logprob: -12.375387191772461
    4. 'start' → logprob: -12.875387191772461
    5. '           ' → logprob: -15.125387191772461
    6. '       ' → logprob: -16.62538719177246
    7. '	end' → logprob: -17.37538719177246
    8. 'print' → logprob: -18.12538719177246
    9. ' break' → logprob: -18.25038719177246
    10. '   ' → logprob: -18.37538719177246

Token 553: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. '=m' → logprob: -16.438261032104492
    4. ' ' → logprob: -17.188261032104492
    5. '   ' → logprob: -17.188261032104492
    6. '    ' → logprob: -18.438261032104492
    7. '＝' → logprob: -19.063261032104492
    8. 'm' → logprob: -20.063261032104492
    9. '  ' → logprob: -20.188261032104492
    10. ')' → logprob: -20.313261032104492

Token 554: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02324547804892063
    2. ' m' → logprob: -3.7732455730438232
    3. '   ' → logprob: -18.148244857788086
    4. ' ' → logprob: -18.148244857788086
    5. 'start' → logprob: -18.523244857788086
    6. '	m' → logprob: -19.273244857788086
    7. '    ' → logprob: -19.773244857788086
    8. '0' → logprob: -19.773244857788086
    9. '  ' → logprob: -20.273244857788086
    10. ' start' → logprob: -20.898244857788086

Token 555: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1011139526963234
    2. 'else' → logprob: -2.60111403465271
    3. ' else' → logprob: -3.85111403465271
    4. '       ' → logprob: -7.351113796234131
    5. '	else' → logprob: -10.351114273071289
    6. '           ' → logprob: -10.851114273071289
    7. 'elif' → logprob: -11.601114273071289
    8. '+' → logprob: -12.726114273071289
    9. '
' → logprob: -12.726114273071289
    10. '```' → logprob: -13.101114273071289

Token 556: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01957770623266697
    2. 'else' → logprob: -4.019577503204346
    3. ' else' → logprob: -6.644577503204346
    4. '       ' → logprob: -9.144577980041504
    5. '```' → logprob: -12.394577980041504
    6. '	else' → logprob: -12.769577980041504
    7. 'elif' → logprob: -12.894577980041504
    8. '<|end|>' → logprob: -12.894577980041504
    9. ',' → logprob: -13.519577980041504
    10. '           ' → logprob: -13.644577980041504

Token 557: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11578910052776337
    2. 'else' → logprob: -2.4907891750335693
    3. '       ' → logprob: -3.7407891750335693
    4. ' else' → logprob: -6.24078893661499
    5. 'continue' (adapté à ' continue') → logprob: -7.49078893661499
    6. '           ' → logprob: -8.990789413452148
    7. 'break' → logprob: -10.240789413452148
    8. ' continue' → logprob: -10.365789413452148
    9. 'elif' → logprob: -11.615789413452148
    10. 'm' → logprob: -11.740789413452148

Token 558: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008304981514811516
    2. 'if' → logprob: -5.633305072784424
    3. ' if' → logprob: -6.008305072784424
    4. 'm' → logprob: -6.758305072784424
    5. 'else' → logprob: -8.258304595947266
    6. 'l' → logprob: -8.633304595947266
    7. ' m' → logprob: -9.258304595947266
    8. ' l' → logprob: -9.633304595947266
    9. ' res' → logprob: -9.633304595947266
    10. '```' → logprob: -9.883304595947266

Token 559: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02477964386343956
    2. 'if' → logprob: -4.399779796600342
    3. ' if' → logprob: -4.524779796600342
    4. ' res' → logprob: -8.024779319763184
    5. 'm' → logprob: -8.149779319763184
    6. '```' → logprob: -8.649779319763184
    7. 'res' → logprob: -9.274779319763184
    8. 'else' → logprob: -9.649779319763184
    9. 'l' → logprob: -9.899779319763184
    10. '       ' → logprob: -9.899779319763184

Token 560: ' que' (ID: 661)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10613981634378433
    2. 'res' → logprob: -3.731139898300171
    3. 'val' → logprob: -3.731139898300171
    4. 'mid' → logprob: -3.731139898300171
    5. '   ' → logprob: -4.356139659881592
    6. ' if' → logprob: -4.981139659881592
    7. 'm' → logprob: -5.731139659881592
    8. 'min' → logprob: -6.606139659881592
    9. 'l' → logprob: -7.106139659881592
    10. 'left' → logprob: -7.606139659881592

Token 561: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07257013767957687
    2. '=' → logprob: -2.6975700855255127
    3. 'ry' → logprob: -6.822570323944092
    4. 'ue' → logprob: -6.947570323944092
    5. 'y' → logprob: -8.322569847106934
    6. 'u' → logprob: -8.822569847106934
    7. '   ' → logprob: -10.322569847106934
    8. ' ' → logprob: -10.697569847106934
    9. 'q' → logprob: -10.822569847106934
    10. '=[]' → logprob: -10.822569847106934

Token 562: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01608363911509514
    2. '[(' → logprob: -4.391083717346191
    3. ' []' → logprob: -6.141083717346191
    4. '[' → logprob: -7.141083717346191
    5. '[]
' → logprob: -7.516083717346191
    6. ' [(' → logprob: -10.516083717346191
    7. 'heap' → logprob: -11.016083717346191
    8. '[-' → logprob: -11.641083717346191
    9. ' [' → logprob: -12.016083717346191
    10. '[]

' → logprob: -12.641083717346191

Token 563: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.27945438027381897
    2. '   ' → logprob: -2.529454469680786
    3. ' heap' → logprob: -2.654454469680786
    4. ' for' → logprob: -2.904454469680786
    5. 'for' → logprob: -3.404454469680786
    6. 'he' → logprob: -6.154454231262207
    7. '0' → logprob: -7.279454231262207
    8. 'import' → logprob: -7.904454231262207
    9. '-' → logprob: -8.029454231262207
    10. ' Seg' → logprob: -8.279454231262207

Token 564: ' cnt' (ID: 27340)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0614541657269001
    2. 'for' → logprob: -3.0614540576934814
    3. ' heap' → logprob: -5.1864542961120605
    4. ' for' → logprob: -6.0614542961120605
    5. 'flag' → logprob: -7.6864542961120605
    6. 'pos' → logprob: -8.061453819274902
    7. 'seg' → logprob: -8.061453819274902
    8. 'ans' → logprob: -8.311453819274902
    9. 'import' → logprob: -8.311453819274902
    10. 'cnt' (adapté à ' cnt') → logprob: -8.311453819274902

Token 565: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03375300392508507
    2. '=' → logprob: -3.408752918243408
    3. '    ' → logprob: -10.533753395080566
    4. ',' → logprob: -10.783753395080566
    5. '   ' → logprob: -11.033753395080566
    6. '<|end|>' → logprob: -11.533753395080566
    7. ' ' → logprob: -11.658753395080566
    8. 'import' → logprob: -11.658753395080566
    9. ' +=' → logprob: -12.533753395080566
    10. ' =
' → logprob: -13.158753395080566

Token 566: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023462560027837753
    2. ' ' → logprob: -3.7734625339508057
    3. '1' → logprob: -9.273462295532227
    4. 'm' → logprob: -9.648462295532227
    5. ' m' → logprob: -10.023462295532227
    6. '   ' → logprob: -13.023462295532227
    7. ' N' → logprob: -13.210962295532227
    8. 'heap' → logprob: -13.710962295532227
    9. 'beam' → logprob: -13.960962295532227
    10. 'N' → logprob: -14.023462295532227

Token 567: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001628956088097766
    2. '1' → logprob: -9.125163078308105
    3. ' ' → logprob: -11.250163078308105
    4. 'm' → logprob: -11.750163078308105
    5. '{}' → logprob: -12.000163078308105
    6. '[' → logprob: -12.000163078308105
    7. 'N' → logprob: -12.125163078308105
    8. '[]' → logprob: -12.125163078308105
    9. 'heap' → logprob: -13.375163078308105
    10. 'len' → logprob: -13.625163078308105

Token 568: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 569: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 570: ' S' (ID: 336)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3476346731185913
    2. 'heap' → logprob: -1.7226346731185913
    3. ' for' → logprob: -2.847634792327881
    4. 'Seg' → logprob: -3.722634792327881
    5. 'while' → logprob: -4.972634792327881
    6. 'seg' → logprob: -5.222634792327881
    7. 'idx' → logprob: -5.597634792327881
    8. 'tree' → logprob: -6.097634792327881
    9. 'i' → logprob: -6.222634792327881
    10. ' Seg' → logprob: -6.222634792327881

Token 571: ' =' (ID: 314)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.43227627873420715
    2. ' =' → logprob: -1.5572762489318848
    3. 't' → logprob: -2.4322762489318848
    4. '=' → logprob: -3.3072762489318848
    5. 'egment' → logprob: -5.307276248931885
    6. 'g' → logprob: -5.932276248931885
    7. 'EG' → logprob: -6.307276248931885
    8. '.append' → logprob: -6.807276248931885
    9. 'e' → logprob: -7.557276248931885
    10. 'tree' → logprob: -7.932276248931885

Token 572: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0794314444065094
    2. '[]' → logprob: -3.4544315338134766
    3. '[' → logprob: -3.9544315338134766
    4. ' ' → logprob: -4.079431533813477
    5. 'beam' → logprob: -6.204431533813477
    6. ' []' → logprob: -6.704431533813477
    7. 'heap' → logprob: -6.829431533813477
    8. ' [' → logprob: -6.954431533813477
    9. 'Seg' → logprob: -7.329431533813477
    10. '10' → logprob: -7.829431533813477

Token 573: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4922085106372833
    2. '[' → logprob: -1.742208480834961
    3. '[]' → logprob: -2.242208480834961
    4. 'Seg' → logprob: -2.992208480834961
    5. '[]
' → logprob: -3.992208480834961
    6. 'heap' → logprob: -4.367208480834961
    7. 'set' → logprob: -4.992208480834961
    8. '[(' → logprob: -5.242208480834961
    9. 'beam' → logprob: -6.117208480834961
    10. '{' → logprob: -6.617208480834961

Token 574: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 575: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 576: ' ok' (ID: 4763)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8049824237823486
    2. 'for' → logprob: -1.3049824237823486
    3. 'while' → logprob: -2.5549824237823486
    4. ' while' → logprob: -2.6799824237823486
    5. 'heap' → logprob: -2.8049824237823486
    6. '   ' → logprob: -3.3049824237823486
    7. '<|end|>' → logprob: -4.9299821853637695
    8. 'm' → logprob: -5.1799821853637695
    9. ' heap' → logprob: -5.8049821853637695
    10. 'S' → logprob: -5.8049821853637695

Token 577: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06319461017847061
    2. '=' → logprob: -2.813194513320923
    3. ' ' → logprob: -7.313194751739502
    4. '<|end|>' → logprob: -8.563194274902344
    5. '=True' → logprob: -9.063194274902344
    6. ',' → logprob: -9.063194274902344
    7. ')' → logprob: -10.438194274902344
    8. '[' → logprob: -10.938194274902344
    9. '=False' → logprob: -10.938194274902344
    10. 'ay' → logprob: -11.063194274902344

Token 578: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1953878104686737
    2. ' True' → logprob: -1.945387840270996
    3. 'False' → logprob: -3.445387840270996
    4. ' False' → logprob: -5.945387840270996
    5. '0' → logprob: -10.320387840270996
    6. '1' → logprob: -11.945387840270996
    7. '   ' → logprob: -13.445387840270996
    8. ' ' → logprob: -14.320387840270996
    9. '(True' → logprob: -14.570387840270996
    10. '=True' → logprob: -15.945387840270996

Token 579: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39965763688087463
    2. ' for' → logprob: -2.149657726287842
    3. '<|end|>' → logprob: -2.149657726287842
    4. 'for' → logprob: -2.524657726287842
    5. 'while' → logprob: -4.649657726287842
    6. ' while' → logprob: -5.774657726287842
    7. '       ' → logprob: -7.274657726287842
    8. '    ' → logprob: -7.649657726287842
    9. '	for' → logprob: -7.649657726287842
    10. ' ' → logprob: -7.774657726287842

Token 581: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.8611996173858643
    2. 'tree' → logprob: -0.9861996173858643
    3. 'seg' → logprob: -2.1111996173858643
    4. ' for' → logprob: -3.1111996173858643
    5. 'st' → logprob: -4.736199378967285
    6. '   ' → logprob: -4.736199378967285
    7. ' seg' → logprob: -5.236199378967285
    8. 'while' → logprob: -5.361199378967285
    9. ' tree' → logprob: -5.611199378967285
    10. 'heap' → logprob: -6.611199378967285

Token 582: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09137022495269775
    2. ' i' → logprob: -2.466370105743408
    3. 'x' → logprob: -7.466370105743408
    4. 'beam' → logprob: -7.716370105743408
    5. 'j' → logprob: -7.841370105743408
    6. ' beam' → logprob: -8.716370582580566
    7. '_i' → logprob: -8.841370582580566
    8. 'v' → logprob: -9.216370582580566
    9. '_' → logprob: -9.466370582580566
    10. ' j' → logprob: -9.841370582580566

Token 583: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029779773205518723
    2. 'in' → logprob: -3.5297796726226807
    3. ' ' → logprob: -11.904779434204102
    4. '   ' → logprob: -11.904779434204102
    5. ',' → logprob: -12.779779434204102
    6. '	in' → logprob: -12.779779434204102
    7. '    ' → logprob: -13.029779434204102
    8. '=' → logprob: -13.529779434204102
    9. ' i' → logprob: -14.029779434204102
    10. 'In' → logprob: -14.029779434204102

Token 584: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020990669727325
    2. ' range' → logprob: -2.350209951400757
    3. '   ' → logprob: -14.475210189819336
    4. '(range' → logprob: -14.475210189819336
    5. ' ' → logprob: -15.100210189819336
    6. ')' → logprob: -15.225210189819336
    7. '0' → logprob: -15.225210189819336
    8. 'm' → logprob: -15.350210189819336
    9. '	range' → logprob: -15.475210189819336
    10. 'in' → logprob: -15.975210189819336

Token 585: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5940327644348145
    2. 'm' → logprob: -0.8440327644348145
    3. '(N' → logprob: -5.0940327644348145
    4. '(m' → logprob: -5.3440327644348145
    5. ' N' → logprob: -5.4690327644348145
    6. ' m' → logprob: -6.8440327644348145
    7. 'start' → logprob: -6.8440327644348145
    8. '(' → logprob: -8.469032287597656
    9. 'n' → logprob: -9.344032287597656
    10. 'end' → logprob: -9.469032287597656

Token 586: ' -' (ID: 533)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6345710754394531
    2. '):' → logprob: -0.7595710754394531
    3. ',' → logprob: -7.384571075439453
    4. ':' → logprob: -7.634571075439453
    5. '   ' → logprob: -7.759571075439453
    6. ')' → logprob: -9.384571075439453
    7. '+' → logprob: -9.634571075439453
    8. '-' → logprob: -9.634571075439453
    9. '):
' → logprob: -9.759571075439453
    10. '       ' → logprob: -10.009571075439453

Token 587: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3521808385848999
    2. 'm' → logprob: -1.2271808385849
    3. ' m' → logprob: -5.8521809577941895
    4. ' ' → logprob: -7.2271809577941895
    5. '(m' → logprob: -10.227180480957031
    6. '2' → logprob: -10.602180480957031
    7. '   ' → logprob: -11.227180480957031
    8. '(' → logprob: -11.477180480957031
    9. '       ' → logprob: -12.602180480957031
    10. '           ' → logprob: -12.914680480957031

Token 588: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3486805558204651
    2. 'm' → logprob: -1.2236804962158203
    3. '(m' → logprob: -9.22368049621582
    4. '(' → logprob: -9.84868049621582
    5. ' m' → logprob: -10.47368049621582
    6. 'start' → logprob: -10.97368049621582
    7. ' ' → logprob: -11.34868049621582
    8. '2' → logprob: -11.59868049621582
    9. '
' → logprob: -13.03618049621582
    10. '3' → logprob: -13.16118049621582

Token 589: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00908910483121872
    2. ',-' → logprob: -5.38408899307251
    3. ' ,' → logprob: -6.38408899307251
    4. '):
' → logprob: -7.13408899307251
    5. '-' → logprob: -7.25908899307251
    6. ' -' → logprob: -7.63408899307251
    7. '+' → logprob: -8.509089469909668
    8. '   ' → logprob: -8.634089469909668
    9. '):' → logprob: -9.009089469909668
    10. ',m' → logprob: -9.134089469909668

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24136462807655334
    2. '<|end|>' → logprob: -2.1163647174835205
    3. ',' → logprob: -3.2413647174835205
    4. ':' → logprob: -3.6163647174835205
    5. ' ' → logprob: -4.241364479064941
    6. '   ' → logprob: -5.866364479064941
    7. '    ' → logprob: -6.116364479064941
    8. ' if' → logprob: -6.616364479064941
    9. ':
' → logprob: -6.991364479064941
    10. '<|end|>' → logprob: -7.241364479064941

Token 591: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1976267248392105
    2. 'if' (adapté à ' if') → logprob: -2.572626829147339
    3. 'S' → logprob: -3.072626829147339
    4. '       ' → logprob: -3.947626829147339
    5. ' S' → logprob: -4.57262659072876
    6. ' s' → logprob: -5.19762659072876
    7. '   ' → logprob: -5.57262659072876
    8. '    ' → logprob: -5.94762659072876
    9. '<|end|>' → logprob: -6.07262659072876
    10. '        ' → logprob: -6.19762659072876

Token 592: ' cnt' (ID: 27340)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.027205832302570343
    2. 'cum' → logprob: -4.402205944061279
    3. ' beam' → logprob: -5.152205944061279
    4. 'i' → logprob: -5.527205944061279
    5. 'data' → logprob: -5.902205944061279
    6. 'cnt' → logprob: -8.027205467224121
    7. 'S' → logprob: -8.152205467224121
    8. ' i' → logprob: -8.277205467224121
    9. '(' → logprob: -8.277205467224121
    10. ' data' → logprob: -8.902205467224121

Token 593: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10218185931444168
    2. '==' → logprob: -2.977181911468506
    3. ' <' → logprob: -3.477181911468506
    4. ' >' → logprob: -4.727181911468506
    5. ' >=' → logprob: -6.727181911468506
    6. ' +' → logprob: -6.977181911468506
    7. '>' → logprob: -7.102181911468506
    8. ' or' → logprob: -7.477181911468506
    9. ' ' → logprob: -7.602181911468506
    10. '<' → logprob: -7.727181911468506

Token 594: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03235702961683273
    2. ' m' → logprob: -3.6573569774627686
    3. '0' → logprob: -5.157357215881348
    4. ' ' → logprob: -9.157357215881348
    5. 'i' → logprob: -9.657357215881348
    6. '<|end|>' → logprob: -9.657357215881348
    7. ' i' → logprob: -10.782357215881348
    8. '    ' → logprob: -12.657357215881348
    9. '<m' → logprob: -12.907357215881348
    10. 'n' → logprob: -12.907357215881348

Token 595: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.23576560616493225
    2. ' or' → logprob: -2.2357656955718994
    3. ':' → logprob: -2.9857656955718994
    4. 'and' → logprob: -3.2357656955718994
    5. ':
' → logprob: -4.61076545715332
    6. '   ' → logprob: -6.73576545715332
    7. 'or' → logprob: -7.11076545715332
    8. '       ' → logprob: -7.61076545715332
    9. '<|end|>' → logprob: -8.48576545715332
    10. '           ' → logprob: -9.23576545715332

Token 596: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1445484161376953
    2. ':
' → logprob: -3.0195484161376953
    3. ':' → logprob: -3.1445484161376953
    4. ' and' → logprob: -3.8945484161376953
    5. '       ' → logprob: -4.769548416137695
    6. ',' → logprob: -5.144548416137695
    7. ' continue' → logprob: -6.144548416137695
    8. '<|end|>' → logprob: -6.269548416137695
    9. ' or' → logprob: -6.894548416137695
    10. '               ' → logprob: -7.519548416137695

Token 597: ' test' (ID: 1746)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.39247584342956543
    2. '       ' → logprob: -1.7674758434295654
    3. ' break' → logprob: -2.1424758434295654
    4. '           ' → logprob: -4.3924760818481445
    5. 'if' → logprob: -4.7674760818481445
    6. 'S' → logprob: -5.3924760818481445
    7. ' if' → logprob: -5.5174760818481445
    8. 'heap' → logprob: -5.8924760818481445
    9. ' S' → logprob: -6.8924760818481445
    10. ' heap' → logprob: -7.1424760818481445

Token 598: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10696730762720108
    2. '=' → logprob: -2.8569672107696533
    3. ' ' → logprob: -4.981967449188232
    4. '_val' → logprob: -5.606967449188232
    5. ' if' → logprob: -5.606967449188232
    6. 'heap' → logprob: -5.606967449188232
    7. '
' → logprob: -6.106967449188232
    8. 'break' → logprob: -6.231967449188232
    9. '_idx' → logprob: -6.356967449188232
    10. '_heap' → logprob: -6.481967449188232

Token 599: ' -' (ID: 533)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.0059030055999756
    2. 'cum' → logprob: -1.1309030055999756
    3. 'heap' → logprob: -1.8809030055999756
    4. 'data' → logprob: -2.2559030055999756
    5. 'beam' → logprob: -4.255903244018555
    6. ' S' → logprob: -5.005903244018555
    7. '0' → logprob: -5.005903244018555
    8. 'min' → logprob: -5.130903244018555
    9. ' cum' → logprob: -5.505903244018555
    10. 'seg' → logprob: -5.630903244018555

Token 600: 'que' (ID: 1126)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.17417865991592407
    2. 'data' → logprob: -3.2991786003112793
    3. 'cum' → logprob: -3.4241786003112793
    4. 'que' → logprob: -3.4241786003112793
    5. 'S' → logprob: -3.7991786003112793
    6. 'Seg' → logprob: -4.049178600311279
    7. 'tree' → logprob: -4.924178600311279
    8. 'seg' → logprob: -5.174178600311279
    9. 'queue' → logprob: -6.424178600311279
    10. '1' → logprob: -7.049178600311279

Token 601: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002444125711917877
    2. 'q' → logprob: -8.875244140625
    3. '0' → logprob: -9.250244140625
    4. 'heap' → logprob: -12.750244140625
    5. '```' → logprob: -13.875244140625
    6. 'a' → logprob: -14.250244140625
    7. '
' → logprob: -14.250244140625
    8. '   ' → logprob: -14.375244140625
    9. ' ' → logprob: -14.750244140625
    10. ' [' → logprob: -14.750244140625

Token 602: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020551931113004684
    2. '[' → logprob: -4.645552158355713
    3. 'heap' → logprob: -5.145552158355713
    4. 'q' → logprob: -5.395552158355713
    5. 'que' → logprob: -9.020551681518555
    6. '1' → logprob: -10.270551681518555
    7. ' ' → logprob: -10.645551681518555
    8. 'data' → logprob: -10.895551681518555
    9. '

' → logprob: -11.020551681518555
    10. '
' → logprob: -11.145551681518555

Token 603: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003831252979580313
    2. '[' → logprob: -8.750383377075195
    3. ']' → logprob: -9.125383377075195
    4. '0' → logprob: -9.875383377075195
    5. 'q' → logprob: -10.500383377075195
    6. ']
' → logprob: -11.375383377075195
    7. 'import' → logprob: -12.875383377075195
    8. '
' → logprob: -13.000383377075195
    9. 'heap' → logprob: -13.000383377075195
    10. ' ][' → logprob: -13.250383377075195

Token 604: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 605: ' if' (ID: 538)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6861500144004822
    2. ' heap' → logprob: -1.311150074005127
    3. '       ' → logprob: -2.936150074005127
    4. 'S' → logprob: -3.061150074005127
    5. '           ' → logprob: -3.061150074005127
    6. ' if' → logprob: -3.811150074005127
    7. 'if' (adapté à ' if') → logprob: -3.811150074005127
    8. ' S' → logprob: -4.186150074005127
    9. 'import' → logprob: -4.811150074005127
    10. '   ' → logprob: -5.561150074005127

Token 606: ' beam' (ID: 36650)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.21645201742649078
    2. ' test' → logprob: -1.7164520025253296
    3. 'S' → logprob: -5.341452121734619
    4. 'data' → logprob: -5.716452121734619
    5. ' data' → logprob: -6.466452121734619
    6. 'cum' → logprob: -6.466452121734619
    7. ' S' → logprob: -6.841452121734619
    8. 'beam' → logprob: -7.341452121734619
    9. ' cum' → logprob: -7.841452121734619
    10. 'Seg' → logprob: -8.216451644897461

Token 607: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005028736195527017
    2. '[' → logprob: -8.000502586364746
    3. '[m' → logprob: -9.250502586364746
    4. '[q' → logprob: -10.125502586364746
    5. '[cnt' → logprob: -11.000502586364746
    6. ' [' → logprob: -12.750502586364746
    7. 's' → logprob: -13.875502586364746
    8. '[j' → logprob: -14.000502586364746
    9. '[count' → logprob: -14.000502586364746
    10. '   ' → logprob: -14.250502586364746

Token 608: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.47509583830833435
    2. '[' → logprob: -0.9750958681106567
    3. ']' → logprob: -8.225095748901367
    4. ' [' → logprob: -8.725095748901367
    5. '0' → logprob: -8.975095748901367
    6. '>[' → logprob: -9.475095748901367
    7. ')[' → logprob: -9.725095748901367
    8. '```' → logprob: -10.100095748901367
    9. ' ][' → logprob: -10.225095748901367
    10. '   ' → logprob: -10.662595748901367

Token 609: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1604848951101303
    2. '0' → logprob: -1.9104849100112915
    3. '2' → logprob: -8.78548526763916
    4. '
' → logprob: -9.66048526763916
    5. '```' → logprob: -11.53548526763916
    6. '[' → logprob: -12.09798526763916
    7. '   ' → logprob: -12.66048526763916
    8. ' ' → logprob: -12.72298526763916
    9. '-' → logprob: -13.16048526763916
    10. '

' → logprob: -13.34798526763916

Token 610: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9999907612800598
    2. '][' → logprob: -1.749990701675415
    3. ' -' → logprob: -1.999990701675415
    4. '-' → logprob: -1.999990701675415
    5. '[' → logprob: -2.249990701675415
    6. ']>' → logprob: -2.999990701675415
    7. '>' → logprob: -4.999990940093994
    8. ' >' → logprob: -5.249990940093994
    9. ']>=' → logprob: -5.624990940093994
    10. '<|end|>' → logprob: -5.749990940093994

Token 611: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -1.1653426885604858
    2. '<' → logprob: -1.7903426885604858
    3. ' -' → logprob: -1.7903426885604858
    4. ' >=' → logprob: -2.0403428077697754
    5. ' <' → logprob: -2.5403428077697754
    6. '-' → logprob: -2.5403428077697754
    7. '>' → logprob: -3.9153428077697754
    8. '<=' → logprob: -4.040342807769775
    9. ' >' → logprob: -4.540342807769775
    10. ' <=' → logprob: -4.665342807769775

Token 612: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.0012474933173507452
    2. ' test' → logprob: -6.751247406005859
    3. 'beam' → logprob: -10.37624740600586
    4. 'S' → logprob: -11.50124740600586
    5. 'data' → logprob: -11.75124740600586
    6. 'cum' → logprob: -12.62624740600586
    7. '   ' → logprob: -12.75124740600586
    8. '
' → logprob: -12.87624740600586
    9. 'heap' → logprob: -13.56374740600586
    10. 'tes' → logprob: -13.62624740600586

Token 613: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6982382535934448
    2. ':' → logprob: -0.9482382535934448
    3. ' or' → logprob: -2.6982383728027344
    4. ' and' → logprob: -3.3232383728027344
    5. '           ' → logprob: -5.698238372802734
    6. '       ' → logprob: -5.948238372802734
    7. ':return' → logprob: -6.448238372802734
    8. '   ' → logprob: -6.948238372802734
    9. '):
' → logprob: -7.448238372802734
    10. ')' → logprob: -7.448238372802734

Token 614: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6951941847801208
    2. '               ' → logprob: -0.8201941847801208
    3. ':' → logprob: -3.8201942443847656
    4. ',' → logprob: -5.070194244384766
    5. ')' → logprob: -5.570194244384766
    6. '<|end|>' → logprob: -5.695194244384766
    7. '       ' → logprob: -5.820194244384766
    8. ':
' → logprob: -5.945194244384766
    9. '              ' → logprob: -5.945194244384766
    10. ' heap' → logprob: -6.070194244384766

Token 615: ' heap' (ID: 37237)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4412626624107361
    2. ' break' → logprob: -2.191262722015381
    3. ' heap' → logprob: -2.191262722015381
    4. 'heap' (adapté à ' heap') → logprob: -3.316262722015381
    5. ' cnt' → logprob: -3.816262722015381
    6. 'cnt' → logprob: -4.066262722015381
    7. '               ' → logprob: -4.066262722015381
    8. 'break' → logprob: -4.691262722015381
    9. 'import' → logprob: -5.066262722015381
    10. ' continue' → logprob: -5.066262722015381

Token 616: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.710618905955926e-05
    2. 'replace' → logprob: -9.250097274780273
    3. '

' → logprob: -15.750097274780273
    4. 'ify' → logprob: -15.875097274780273
    5. 'push' → logprob: -15.875097274780273
    6. '
' → logprob: -16.000097274780273
    7. '.replace' → logprob: -16.375097274780273
    8. 'op' → logprob: -16.500097274780273
    9. 'Replace' → logprob: -17.000097274780273
    10. '```' → logprob: -17.000097274780273

Token 617: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.15563733875751495
    2. '.heap' → logprob: -2.030637264251709
    3. 'q' → logprob: -4.530637264251709
    4. 'heap' → logprob: -7.155637264251709
    5. 'replace' → logprob: -7.280637264251709
    6. 'he' → logprob: -7.655637264251709
    7. '.' → logprob: -9.780637741088867
    8. '.replace' → logprob: -10.280637741088867
    9. 'op' → logprob: -11.405637741088867
    10. '```' → logprob: -11.655637741088867

Token 618: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.000758884591050446
    2. 'pp' → logprob: -7.250758647918701
    3. 'push' → logprob: -10.37575912475586
    4. 'q' → logprob: -12.12575912475586
    5. 'replace' → logprob: -12.25075912475586
    6. 'p' → logprob: -13.00075912475586
    7. 'ap' → logprob: -13.25075912475586
    8. '[' → logprob: -13.62575912475586
    9. 'append' → logprob: -14.25075912475586
    10. 'pop' → logprob: -14.62575912475586

Token 619: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.32687729597091675
    2. 'ush' → logprob: -1.3268773555755615
    3. 'app' → logprob: -5.076877117156982
    4. 'p' → logprob: -5.076877117156982
    5. 'pp' → logprob: -7.951877117156982
    6. 'push' → logprob: -7.951877117156982
    7. 'q' → logprob: -9.07687759399414
    8. 'ap' → logprob: -9.32687759399414
    9. 'pop' → logprob: -9.57687759399414
    10. 'e' → logprob: -10.45187759399414

Token 620: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. '(
' → logprob: -15.375
    3. 'q' → logprob: -17.75
    4. '(

' → logprob: -18.0
    5. 'que' → logprob: -18.375
    6. '(queue' → logprob: -18.5
    7. '(q' → logprob: -19.5
    8. '```' → logprob: -19.5
    9. 's' → logprob: -19.625
    10. 'a' → logprob: -19.75

Token 621: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -4.961759259458631e-06
    2. ' que' → logprob: -12.750004768371582
    3. 'q' → logprob: -14.250004768371582
    4. 'qu' → logprob: -14.250004768371582
    5. 'queue' → logprob: -15.125004768371582
    6. 'ques' → logprob: -15.500004768371582
    7. 'qui' → logprob: -16.8750057220459
    8. '```' → logprob: -17.0000057220459
    9. ')' → logprob: -17.2500057220459
    10. '
' → logprob: -17.2500057220459

Token 622: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1289547234773636
    2. ')' → logprob: -2.1289546489715576
    3. '               ' → logprob: -7.128954887390137
    4. ')
' → logprob: -7.378954887390137
    5. '           ' → logprob: -7.628954887390137
    6. ' )
' → logprob: -10.003954887390137
    7. ')

' → logprob: -10.878954887390137
    8. '())
' → logprob: -11.628954887390137
    9. '       ' → logprob: -11.878954887390137
    10. '                   ' → logprob: -12.253954887390137

Token 623: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.040786340832710266
    2. '<|end|>' → logprob: -3.5407862663269043
    3. '       ' → logprob: -5.290786266326904
    4. ')' → logprob: -5.540786266326904
    5. '           ' → logprob: -7.415786266326904
    6. ',' → logprob: -7.665786266326904
    7. '
' → logprob: -9.165786743164062
    8. '```' → logprob: -9.290786743164062
    9. '<|end|>' → logprob: -9.290786743164062
    10. ')
' → logprob: -9.290786743164062

Token 624: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.018935607746243477
    2. 'cnt' → logprob: -4.768935680389404
    3. ' heap' → logprob: -4.893935680389404
    4. '           ' → logprob: -6.893935680389404
    5. '       ' → logprob: -7.143935680389404
    6. '   ' → logprob: -7.768935680389404
    7. 'S' → logprob: -8.518935203552246
    8. '               ' → logprob: -9.393935203552246
    9. ' cnt' → logprob: -9.643935203552246
    10. 'he' → logprob: -10.268935203552246

Token 625: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1875571544806007e-05
    2. '.he' → logprob: -12.000011444091797
    3. '```' → logprob: -13.625011444091797
    4. 'app' → logprob: -14.000011444091797
    5. 'push' → logprob: -14.250011444091797
    6. '[' → logprob: -14.375011444091797
    7. 'replace' → logprob: -14.500011444091797
    8. '_push' → logprob: -14.875011444091797
    9. 'p' → logprob: -15.125011444091797
    10. 'he' → logprob: -15.375011444091797

Token 626: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.07533904910087585
    2. 'he' → logprob: -3.3253390789031982
    3. 'ush' → logprob: -3.7003390789031982
    4. 'q' → logprob: -4.700338840484619
    5. 'push' → logprob: -6.700338840484619
    6. 'app' → logprob: -7.450338840484619
    7. 'p' → logprob: -7.825338840484619
    8. '```' → logprob: -8.325339317321777
    9. 'heap' → logprob: -9.075339317321777
    10. '.heap' → logprob: -9.075339317321777

Token 627: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.002391587011516094
    2. 'pp' → logprob: -6.502391815185547
    3. 'p' → logprob: -7.377391815185547
    4. 'op' → logprob: -9.127391815185547
    5. 'q' → logprob: -9.877391815185547
    6. 'ap' → logprob: -10.252391815185547
    7. 'ush' → logprob: -10.502391815185547
    8. 'push' → logprob: -11.002391815185547
    9. '```' → logprob: -11.877391815185547
    10. '[' → logprob: -12.502391815185547

Token 628: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.20926697552204132
    2. 'op' → logprob: -1.959267020225525
    3. 'app' → logprob: -3.0842669010162354
    4. 'push' → logprob: -6.5842671394348145
    5. 'pp' → logprob: -8.209266662597656
    6. 'p' → logprob: -8.709266662597656
    7. 'pop' → logprob: -9.584266662597656
    8. '```' → logprob: -9.959266662597656
    9. '[' → logprob: -10.084266662597656
    10. 'he' → logprob: -10.209266662597656

Token 629: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '(
' → logprob: -17.0
    3. ' (' → logprob: -17.5
    4. 'import' → logprob: -17.875
    5. 'def' → logprob: -18.875
    6. '```' → logprob: -19.375
    7. '   ' → logprob: -19.625
    8. '  ' → logprob: -19.875
    9. 'a' → logprob: -20.375
    10. '((' → logprob: -20.5

Token 630: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.00010700009443098679
    2. '(' → logprob: -9.250106811523438
    3. ' que' → logprob: -11.625106811523438
    4. 'queue' → logprob: -14.000106811523438
    5. 'q' → logprob: -14.375106811523438
    6. 'ques' → logprob: -15.375106811523438
    7. '```' → logprob: -16.000106811523438
    8. 'qui' → logprob: -16.250106811523438
    9. 'quee' → logprob: -17.000106811523438
    10. '
' → logprob: -17.000106811523438

Token 631: ',' (ID: 11)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0039999233558773994
    2. ',' → logprob: -6.253999710083008
    3. '(test' → logprob: -6.753999710083008
    4. '(' → logprob: -7.128999710083008
    5. '(-(' → logprob: -10.128999710083008
    6. ',-' → logprob: -11.503999710083008
    7. ',test' → logprob: -11.628999710083008
    8. '   ' → logprob: -11.628999710083008
    9. '((-' → logprob: -12.003999710083008
    10. ' (-' → logprob: -12.128999710083008

Token 632: ' -' (ID: 533)
  Prédit: '-test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-test' → logprob: -0.19939960539340973
    2. '-' → logprob: -1.9493995904922485
    3. ' -' → logprob: -3.824399709701538
    4. '-be' → logprob: -5.824399471282959
    5. '-value' → logprob: -5.949399471282959
    6. '-max' → logprob: -6.074399471282959
    7. '-data' → logprob: -6.199399471282959
    8. '-input' → logprob: -7.199399471282959
    9. '-int' → logprob: -7.199399471282959
    10. '-code' → logprob: -7.574399471282959

Token 633: 'beam' (ID: 95917)
  Prédit: 'beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -7.886803359724581e-05
    2. ' beam' → logprob: -9.875079154968262
    3. 'data' → logprob: -11.375079154968262
    4. '(' → logprob: -12.125079154968262
    5. 'test' → logprob: -12.500079154968262
    6. 'S' → logprob: -13.000079154968262
    7. '   ' → logprob: -13.500079154968262
    8. 'heap' → logprob: -13.875079154968262
    9. 'max' → logprob: -14.750079154968262
    10. 'beat' → logprob: -15.250079154968262

Token 634: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4881879400927573e-05
    2. '[' → logprob: -11.000035285949707
    3. 'i' → logprob: -11.250035285949707
    4. '[m' → logprob: -13.375035285949707
    5. '```' → logprob: -14.125035285949707
    6. '[
' → logprob: -14.750035285949707
    7. ')' → logprob: -14.875035285949707
    8. '
' → logprob: -15.125035285949707
    9. '[j' → logprob: -15.125035285949707
    10. '   ' → logprob: -15.625035285949707

Token 635: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1079309955239296
    2. '[i' → logprob: -2.857930898666382
    3. '[' → logprob: -3.107930898666382
    4. '[][' → logprob: -9.232931137084961
    5. ' ][' → logprob: -10.232931137084961
    6. ']' → logprob: -10.482931137084961
    7. ')[' → logprob: -11.482931137084961
    8. '0' → logprob: -11.607931137084961
    9. '```' → logprob: -12.357931137084961
    10. '"][' → logprob: -12.482931137084961

Token 636: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011079652234911919
    2. '1' → logprob: -4.511079788208008
    3. '[' → logprob: -11.136079788208008
    4. 'i' → logprob: -12.011079788208008
    5. ' ' → logprob: -12.261079788208008
    6. '[i' → logprob: -12.886079788208008
    7. '   ' → logprob: -13.948579788208008
    8. '
' → logprob: -14.073579788208008
    9. '```' → logprob: -14.136079788208008
    10. '2' → logprob: -15.323579788208008

Token 637: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005906827282160521
    2. ')
' → logprob: -7.625590801239014
    3. ' )' → logprob: -9.625590324401855
    4. '))' → logprob: -10.500590324401855
    5. '       ' → logprob: -12.625590324401855
    6. '])' → logprob: -13.750590324401855
    7. '   ' → logprob: -14.250590324401855
    8. '<|end|>' → logprob: -14.250590324401855
    9. '           ' → logprob: -14.875590324401855
    10. '`)' → logprob: -15.125590324401855

Token 638: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006658061407506466
    2. '       ' → logprob: -5.63165807723999
    3. '           ' → logprob: -6.25665807723999
    4. '              ' → logprob: -7.63165807723999
    5. '<|end|>' → logprob: -8.131657600402832
    6. '                
' → logprob: -9.256657600402832
    7. '               
' → logprob: -10.006657600402832
    8. ',' → logprob: -10.131657600402832
    9. '   ' → logprob: -10.381657600402832
    10. ')' → logprob: -10.881657600402832

Token 639: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.07181677222251892
    2. '       ' → logprob: -2.9468166828155518
    3. '           ' → logprob: -5.071816921234131
    4. '               ' → logprob: -5.321816921234131
    5. '   ' → logprob: -5.696816921234131
    6. 'else' → logprob: -6.946816921234131
    7. ' S' → logprob: -7.696816921234131
    8. 'continue' → logprob: -8.071816444396973
    9. 'while' → logprob: -9.321816444396973
    10. 'if' → logprob: -9.446816444396973

Token 640: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.18690656125545502
    2. ' +=' → logprob: -2.061906576156616
    3. '=' → logprob: -3.936906576156616
    4. '-=' → logprob: -4.311906337738037
    5. ' -=' → logprob: -4.686906337738037
    6. ' =' → logprob: -6.936906337738037
    7. '+' → logprob: -9.311906814575195
    8. '-' → logprob: -10.936906814575195
    9. ']+=' → logprob: -11.061906814575195
    10. '<|end|>' → logprob: -11.811906814575195

Token 641: ' beam' (ID: 36650)
  Prédit: '-be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-be' → logprob: -0.07731560617685318
    2. 'beam' → logprob: -2.95231556892395
    3. '-' → logprob: -4.452315807342529
    4. ' beam' → logprob: -5.202315807342529
    5. ' -' → logprob: -5.452315807342529
    6. '-test' → logprob: -7.452315807342529
    7. '(-' → logprob: -9.827315330505371
    8. '-Be' → logprob: -10.827315330505371
    9. ' ' → logprob: -11.702315330505371
    10. '0' → logprob: -11.952315330505371

Token 642: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.537868779967539e-06
    2. '[' → logprob: -12.000008583068848
    3. 'i' → logprob: -13.750008583068848
    4. ' [' → logprob: -14.375008583068848
    5. '```' → logprob: -15.125008583068848
    6. '[
' → logprob: -17.00000762939453
    7. '(i' → logprob: -17.00000762939453
    8. '`' → logprob: -17.25000762939453
    9. '{i' → logprob: -17.50000762939453
    10. '
' → logprob: -17.62500762939453

Token 643: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020062008872628212
    2. '][' → logprob: -4.14506196975708
    3. '[i' → logprob: -5.64506196975708
    4. '0' → logprob: -7.89506196975708
    5. ' [' → logprob: -10.645062446594238
    6. 'i' → logprob: -11.020062446594238
    7. '-' → logprob: -11.395062446594238
    8. ')[' → logprob: -11.645062446594238
    9. '```' → logprob: -12.020062446594238
    10. ' ][' → logprob: -12.145062446594238

Token 644: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5928495486150496e-05
    2. 'i' → logprob: -12.250016212463379
    3. ' ' → logprob: -12.250016212463379
    4. '1' → logprob: -12.500016212463379
    5. '(i' → logprob: -14.375016212463379
    6. '-' → logprob: -14.500016212463379
    7. '[i' → logprob: -14.750016212463379
    8. '   ' → logprob: -15.250016212463379
    9. '
' → logprob: -15.312516212463379
    10. '[' → logprob: -15.750016212463379

Token 645: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09107141196727753
    2. '-' → logprob: -2.966071367263794
    3. ')' → logprob: -3.466071367263794
    4. '<|end|>' → logprob: -5.966071605682373
    5. ' )' → logprob: -6.591071605682373
    6. '-)' → logprob: -8.841071128845215
    7. ')-' → logprob: -9.716071128845215
    8. ' -
' → logprob: -10.966071128845215
    9. ' ' → logprob: -10.966071128845215
    10. ')
' → logprob: -11.091071128845215

Token 646: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.24921154975891113
    2. '-' → logprob: -1.8742115497589111
    3. '<|end|>' → logprob: -3.124211549758911
    4. '       ' → logprob: -4.374211311340332
    5. '               ' → logprob: -5.749211311340332
    6. '
' → logprob: -6.249211311340332
    7. '           ' → logprob: -6.749211311340332
    8. '   ' → logprob: -7.624211311340332
    9. ' 
' → logprob: -7.624211311340332
    10. '+' → logprob: -7.624211311340332

Token 647: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.002199263544753194
    2. ' test' → logprob: -6.127199172973633
    3. '-test' → logprob: -12.377199172973633
    4. '   ' → logprob: -13.252199172973633
    5. 'heap' → logprob: -13.377199172973633
    6. ')test' → logprob: -13.627199172973633
    7. '(test' → logprob: -13.752199172973633
    8. '
' → logprob: -14.127199172973633
    9. '  ' → logprob: -14.377199172973633
    10. 'abs' → logprob: -14.502199172973633

Token 648: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07778818905353546
    2. '               ' → logprob: -3.2027881145477295
    3. '           ' → logprob: -3.8277881145477295
    4. '<|end|>' → logprob: -4.827788352966309
    5. ')' → logprob: -6.577788352966309
    6. '   ' → logprob: -7.577788352966309
    7. '              ' → logprob: -7.702788352966309
    8. '        
' → logprob: -7.952788352966309
    9. '      ' → logprob: -8.202788352966309
    10. '	' → logprob: -8.702788352966309

Token 650: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021227426826953888
    2. ' else' → logprob: -4.6462273597717285
    3. 'else' (adapté à ' else') → logprob: -5.2712273597717285
    4. '           ' → logprob: -6.0212273597717285
    5. '   ' → logprob: -6.3962273597717285
    6. 'elif' → logprob: -8.146227836608887
    7. '<|end|>' → logprob: -8.271227836608887
    8. '               ' → logprob: -8.396227836608887
    9. ' ' → logprob: -8.396227836608887
    10. '        ' → logprob: -8.521227836608887

Token 651: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3109970688819885
    2. '   ' → logprob: -1.6859970092773438
    3. ':' → logprob: -3.1859970092773438
    4. ':
' → logprob: -3.6859970092773438
    5. '           ' → logprob: -5.435997009277344
    6. ' if' → logprob: -5.810997009277344
    7. '        ' → logprob: -6.685997009277344
    8. '[' → logprob: -6.685997009277344
    9. '    ' → logprob: -6.935997009277344
    10. '```' → logprob: -7.310997009277344

Token 652: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17817024886608124
    2. '           ' → logprob: -2.4281702041625977
    3. ' heap' → logprob: -3.0531702041625977
    4. 'heap' → logprob: -4.178170204162598
    5. '   ' → logprob: -4.678170204162598
    6. '```' → logprob: -5.928170204162598
    7. ' if' → logprob: -8.928170204162598
    8. '``' → logprob: -9.428170204162598
    9. '               ' → logprob: -10.178170204162598
    10. '	   ' → logprob: -10.303170204162598

Token 653: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0029964817222207785
    2. ' heap' → logprob: -5.877996444702148
    3. 'cnt' → logprob: -9.002996444702148
    4. '   ' → logprob: -9.627996444702148
    5. ' cnt' → logprob: -14.627996444702148
    6. 'import' → logprob: -14.752996444702148
    7. '```' → logprob: -14.877996444702148
    8. 'he' → logprob: -15.127996444702148
    9. 'queue' → logprob: -15.877996444702148
    10. 'if' → logprob: -15.877996444702148

Token 654: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1472419600977446e-06
    2. '.he' → logprob: -14.500000953674316
    3. 'he' → logprob: -15.625000953674316
    4. 'push' → logprob: -15.875000953674316
    5. 'heap' → logprob: -16.125001907348633
    6. 'app' → logprob: -16.750001907348633
    7. '```' → logprob: -17.000001907348633
    8. 'h' → logprob: -17.500001907348633
    9. '   ' → logprob: -18.000001907348633
    10. '.' → logprob: -18.125001907348633

Token 655: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0011414075270295143
    2. 'q' → logprob: -6.876141548156738
    3. 'he' → logprob: -10.251141548156738
    4. '.' → logprob: -10.376141548156738
    5. '.heap' → logprob: -10.501141548156738
    6. '.push' → logprob: -11.626141548156738
    7. '```' → logprob: -13.501141548156738
    8. '   ' → logprob: -13.501141548156738
    9. 'ush' → logprob: -13.876141548156738
    10. ' he' → logprob: -14.251141548156738

Token 656: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.005903553683310747
    2. 'pp' → logprob: -5.255903720855713
    3. 'push' → logprob: -8.130903244018555
    4. 'ush' → logprob: -8.255903244018555
    5. 'he' → logprob: -9.630903244018555
    6. 'p' → logprob: -10.755903244018555
    7. 'e' → logprob: -11.880903244018555
    8. '```' → logprob: -12.005903244018555
    9. '[' → logprob: -12.505903244018555
    10. 'ap' → logprob: -13.380903244018555

Token 657: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.005101645365357399
    2. 'app' → logprob: -5.505101680755615
    3. 'push' → logprob: -7.005101680755615
    4. 'he' → logprob: -9.880101203918457
    5. 'pp' → logprob: -9.880101203918457
    6. 'p' → logprob: -12.130101203918457
    7. '.he' → logprob: -13.755101203918457
    8. 'sh' → logprob: -13.880101203918457
    9. '```' → logprob: -13.880101203918457
    10. '[' → logprob: -14.255101203918457

Token 658: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. '(
' → logprob: -15.875
    3. '<|end|>' → logprob: -16.625
    4. '(queue' → logprob: -17.5
    5. ' (' → logprob: -18.375
    6. '       ' → logprob: -18.875
    7. '```' → logprob: -19.25
    8. 'import' → logprob: -19.375
    9. '(heap' → logprob: -19.375
    10. '   ' → logprob: -19.5

Token 659: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0011022298131138086
    2. '(' → logprob: -7.001102447509766
    3. ' que' → logprob: -9.126102447509766
    4. 'queue' → logprob: -9.501102447509766
    5. 'ques' → logprob: -13.126102447509766
    6. 'q' → logprob: -13.251102447509766
    7. '```' → logprob: -14.126102447509766
    8. 'quee' → logprob: -14.626102447509766
    9. ')' → logprob: -15.126102447509766
    10. '
' → logprob: -15.251102447509766

Token 660: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037230034358799458
    2. '(' → logprob: -6.00372314453125
    3. '(-' → logprob: -6.75372314453125
    4. ' ,' → logprob: -10.37872314453125
    5. ',-' → logprob: -10.62872314453125
    6. '       ' → logprob: -12.00372314453125
    7. '(
' → logprob: -12.00372314453125
    8. '           ' → logprob: -12.62872314453125
    9. ',
' → logprob: -12.62872314453125
    10. ')' → logprob: -13.37872314453125

Token 661: ' -' (ID: 533)
  Prédit: '-be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-be' → logprob: -0.6717543601989746
    2. '-' → logprob: -0.9217543601989746
    3. ' -' → logprob: -2.4217543601989746
    4. '-code' → logprob: -7.421754360198975
    5. '-B' → logprob: -7.546754360198975
    6. '-br' → logprob: -8.546754837036133
    7. '-bit' → logprob: -9.421754837036133
    8. '-bed' → logprob: -9.546754837036133
    9. '-stop' → logprob: -9.546754837036133
    10. '   ' → logprob: -9.671754837036133

Token 662: 'beam' (ID: 95917)
  Prédit: 'beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -6.034592388459714e-06
    2. ' beam' → logprob: -12.125005722045898
    3. 'heap' → logprob: -15.000005722045898
    4. 'beat' → logprob: -16.2500057220459
    5. '   ' → logprob: -16.6250057220459
    6. '(' → logprob: -16.7500057220459
    7. 'be' → logprob: -18.5000057220459
    8. 'bee' → logprob: -18.5000057220459
    9. 'random' → logprob: -18.6250057220459
    10. 'Beam' → logprob: -19.2500057220459

Token 663: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. 'i' → logprob: -13.37500286102295
    3. '[' → logprob: -13.62500286102295
    4. '[
' → logprob: -16.000003814697266
    5. ' [' → logprob: -16.000003814697266
    6. '   ' → logprob: -17.000003814697266
    7. '```' → logprob: -17.625003814697266
    8. '
' → logprob: -18.000003814697266
    9. '(i' → logprob: -18.125003814697266
    10. '[I' → logprob: -18.125003814697266

Token 664: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.18364150822162628
    2. '[' → logprob: -1.8086415529251099
    3. '[i' → logprob: -6.05864143371582
    4. ')[' → logprob: -6.80864143371582
    5. '   ' → logprob: -9.30864143371582
    6. ' ][' → logprob: -9.43364143371582
    7. '[][' → logprob: -9.55864143371582
    8. '0' → logprob: -9.93364143371582
    9. ']' → logprob: -10.05864143371582
    10. '       ' → logprob: -11.55864143371582

Token 665: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002543558832257986
    2. 'beam' → logprob: -6.3775434494018555
    3. '[' → logprob: -7.1275434494018555
    4. '1' → logprob: -12.002543449401855
    5. '   ' → logprob: -12.127543449401855
    6. ' beam' → logprob: -12.252543449401855
    7. ' ' → logprob: -12.377543449401855
    8. '
' → logprob: -12.877543449401855
    9. ')' → logprob: -12.877543449401855
    10. '```' → logprob: -13.002543449401855

Token 666: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03807729855179787
    2. ')' → logprob: -3.2880773544311523
    3. ' )
' → logprob: -11.163077354431152
    4. ')
' → logprob: -11.288077354431152
    5. '       ' → logprob: -12.038077354431152
    6. '           ' → logprob: -13.663077354431152
    7. '   ' → logprob: -13.913077354431152
    8. ')

' → logprob: -14.413077354431152
    9. ' )' → logprob: -15.038077354431152
    10. '<|end|>' → logprob: -16.288076400756836

Token 667: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17981992661952972
    2. '       ' → logprob: -2.1798198223114014
    3. '           ' → logprob: -3.0548198223114014
    4. '    
' → logprob: -6.9298200607299805
    5. '    ' → logprob: -7.1798200607299805
    6. '
' → logprob: -7.3048200607299805
    7. '	   ' → logprob: -7.6798200607299805
    8. 'S' → logprob: -8.55482006072998
    9. ' S' → logprob: -8.67982006072998
    10. '        
' → logprob: -8.92982006072998

Token 668: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.22677500545978546
    2. 'cnt' → logprob: -1.601775050163269
    3. ' S' → logprob: -7.101775169372559
    4. ' cnt' → logprob: -7.851775169372559
    5. '   ' → logprob: -9.476775169372559
    6. '       ' → logprob: -10.351775169372559
    7. '           ' → logprob: -10.601775169372559
    8. '	cnt' → logprob: -12.476775169372559
    9. '    ' → logprob: -13.476775169372559
    10. '
' → logprob: -13.601775169372559

Token 669: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759552121162415
    2. '+=' → logprob: -0.8259552121162415
    3. '=' → logprob: -11.950955390930176
    4. '   ' → logprob: -12.325955390930176
    5. ']+=' → logprob: -13.200955390930176
    6. '    ' → logprob: -13.825955390930176
    7. '+' → logprob: -14.075955390930176
    8. '<|end|>' → logprob: -15.075955390930176
    9. ' =' → logprob: -15.450955390930176
    10. '+='' → logprob: -15.950955390930176

Token 670: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0005558936391025782
    2. ' beam' → logprob: -7.500555992126465
    3. '   ' → logprob: -13.000555992126465
    4. 'be' → logprob: -16.00055503845215
    5. ' ' → logprob: -16.00055503845215
    6. 'heap' → logprob: -16.12555503845215
    7. '  ' → logprob: -16.37555503845215
    8. 'beat' → logprob: -16.37555503845215
    9. 'Beam' → logprob: -17.75055503845215
    10. 'bean' → logprob: -18.62555503845215

Token 671: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3319124011322856e-05
    2. ' [' → logprob: -11.375022888183594
    3. '[' → logprob: -11.625022888183594
    4. 'i' → logprob: -13.500022888183594
    5. '   ' → logprob: -14.500022888183594
    6. '```' → logprob: -14.875022888183594
    7. '           ' → logprob: -16.250022888183594
    8. '       ' → logprob: -16.750022888183594
    9. '`' → logprob: -16.750022888183594
    10. '(i' → logprob: -16.875022888183594

Token 672: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3155895471572876
    2. '[i' → logprob: -1.3155895471572876
    3. '][' → logprob: -6.440589427947998
    4. ' [' → logprob: -8.190589904785156
    5. ')[' → logprob: -8.315589904785156
    6. '0' → logprob: -9.190589904785156
    7. '   ' → logprob: -10.440589904785156
    8. 'i' → logprob: -10.690589904785156
    9. ')' → logprob: -11.940589904785156
    10. '```' → logprob: -12.190589904785156

Token 673: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002368870424106717
    2. '[i' → logprob: -6.502368927001953
    3. 'i' → logprob: -7.252368927001953
    4. ' ' → logprob: -9.627368927001953
    5. 'beam' → logprob: -10.502368927001953
    6. '[' → logprob: -10.877368927001953
    7. '   ' → logprob: -10.877368927001953
    8. ' i' → logprob: -11.877368927001953
    9. '```' → logprob: -12.127368927001953
    10. '(i' → logprob: -12.252368927001953

Token 674: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7468805313110352
    2. '<|end|>' → logprob: -0.9968805313110352
    3. ' 
' → logprob: -2.621880531311035
    4. ')' → logprob: -3.621880531311035
    5. '  
' → logprob: -3.746880531311035
    6. '           ' → logprob: -4.996880531311035
    7. '    
' → logprob: -4.996880531311035
    8. ')
' → logprob: -5.371880531311035
    9. '<|end|>' → logprob: -5.496880531311035
    10. '   
' → logprob: -6.121880531311035

Token 675: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10226979106664658
    2. '           ' → logprob: -2.8522698879241943
    3. '       ' → logprob: -3.6022698879241943
    4. 'cnt' → logprob: -5.227269649505615
    5. '	cnt' → logprob: -5.727269649505615
    6. '	   ' → logprob: -6.227269649505615
    7. '    ' → logprob: -7.977269649505615
    8. '+' → logprob: -8.227270126342773
    9. '		' → logprob: -8.352270126342773
    10. '     ' → logprob: -8.727270126342773

Token 676: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0007018264150246978
    2. '   ' → logprob: -7.500701904296875
    3. '       ' → logprob: -9.500701904296875
    4. '           ' → logprob: -10.000701904296875
    5. ' cnt' → logprob: -10.500701904296875
    6. '	cnt' → logprob: -14.250701904296875
    7. 'count' → logprob: -15.250701904296875
    8. ' ' → logprob: -16.875701904296875
    9. '  ' → logprob: -17.000701904296875
    10. '    ' → logprob: -17.375701904296875

Token 677: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.474127858877182
    2. ' +=' → logprob: -0.9741278886795044
    3. '=' → logprob: -10.849127769470215
    4. '<|end|>' → logprob: -10.974127769470215
    5. '   ' → logprob: -11.974127769470215
    6. '+' → logprob: -13.099127769470215
    7. ']+=' → logprob: -13.349127769470215
    8. '+='' → logprob: -13.974127769470215
    9. '    ' → logprob: -14.099127769470215
    10. '++' → logprob: -14.349127769470215

Token 678: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '```' → logprob: -18.625085830688477
    4. '<|end|>' → logprob: -19.250085830688477
    5. '   ' → logprob: -19.625085830688477
    6. '۱' → logprob: -20.625085830688477
    7. '１' → logprob: -21.000085830688477
    8. '+' → logprob: -21.000085830688477
    9. ' ' → logprob: -21.687585830688477
    10. '  ' → logprob: -21.875085830688477

Token 679: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -19.500003814697266
    4. '   ' → logprob: -19.625003814697266
    5. '１' → logprob: -21.375003814697266
    6. '<|end|>' → logprob: -21.875003814697266
    7. '۱' → logprob: -22.000003814697266
    8. '+' → logprob: -22.875003814697266
    9. '  ' → logprob: -22.937503814697266
    10. '0' → logprob: -23.062503814697266

Token 680: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 681: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15669359266757965
    2. '<|end|>' → logprob: -2.031693696975708
    3. ' ' → logprob: -5.156693458557129
    4. ')' → logprob: -5.906693458557129
    5. '       ' → logprob: -6.031693458557129
    6. '    ' → logprob: -7.281693458557129
    7. '  ' → logprob: -8.156693458557129
    8. '```' → logprob: -8.156693458557129
    9. '<|end|>' → logprob: -8.281693458557129
    10. ' continue' → logprob: -8.531693458557129

Token 682: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20132386684417725
    2. ' if' → logprob: -2.951323986053467
    3. ' i' → logprob: -3.076323986053467
    4. ' ' → logprob: -4.326323986053467
    5. ' l' → logprob: -4.326323986053467
    6. '    ' → logprob: -4.451323986053467
    7. '       ' → logprob: -4.951323986053467
    8. 'if' (adapté à ' if') → logprob: -4.951323986053467
    9. ' S' → logprob: -4.951323986053467
    10. 'i' → logprob: -5.326323986053467

Token 683: ' cnt' (ID: 27340)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cum' → logprob: -1.2108803987503052
    2. ' cum' → logprob: -1.5858803987503052
    3. 'S' → logprob: -1.8358803987503052
    4. ' data' → logprob: -2.3358802795410156
    5. ' S' → logprob: -2.4608802795410156
    6. 'data' → logprob: -2.7108802795410156
    7. 'beam' → logprob: -4.085880279541016
    8. 'i' → logprob: -4.335880279541016
    9. ' i' → logprob: -4.335880279541016
    10. ' beam' → logprob: -4.460880279541016

Token 684: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011112428270280361
    2. '==' → logprob: -4.511112213134766
    3. ' >=' → logprob: -10.636112213134766
    4. '<|end|>' → logprob: -11.261112213134766
    5. ' <=' → logprob: -12.011112213134766
    6. ' ' → logprob: -12.136112213134766
    7. ' <' → logprob: -13.011112213134766
    8. '[' → logprob: -13.136112213134766
    9. ' ==
' → logprob: -13.136112213134766
    10. '   ' → logprob: -13.636112213134766

Token 685: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1602371335029602
    2. ' m' → logprob: -1.9102370738983154
    3. '<|end|>' → logprob: -12.285237312316895
    4. ' ' → logprob: -13.160237312316895
    5. '   ' → logprob: -13.410237312316895
    6. '0' → logprob: -13.535237312316895
    7. '	m' → logprob: -14.035237312316895
    8. '  ' → logprob: -15.035237312316895
    9. '<m' → logprob: -15.160237312316895
    10. ')m' → logprob: -15.660237312316895

Token 686: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06982593238353729
    2. 'and' → logprob: -2.8198258876800537
    3. ':
' → logprob: -5.444826126098633
    4. ':' → logprob: -5.944826126098633
    5. '   ' → logprob: -7.319826126098633
    6. '       ' → logprob: -8.694826126098633
    7. ' ' → logprob: -11.194826126098633
    8. '	and' → logprob: -11.444826126098633
    9. '  ' → logprob: -11.694826126098633
    10. '           ' → logprob: -11.944826126098633

Token 687: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03655652701854706
    2. ':
' → logprob: -3.7865564823150635
    3. ':' → logprob: -4.911556720733643
    4. '       ' → logprob: -5.661556720733643
    5. '   ' → logprob: -6.786556720733643
    6. 'and' → logprob: -8.161556243896484
    7. '```' → logprob: -8.411556243896484
    8. ' ' → logprob: -9.161556243896484
    9. '<|end|>' → logprob: -9.286556243896484
    10. '           ' → logprob: -9.286556243896484

Token 688: ' test' (ID: 1746)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21769455075263977
    2. ' if' → logprob: -1.9676945209503174
    3. '   ' → logprob: -3.0926945209503174
    4. '```' → logprob: -5.2176947593688965
    5. '
' → logprob: -5.8426947593688965
    6. 'x' → logprob: -7.9676947593688965
    7. 'min' → logprob: -8.092694282531738
    8. '    
' → logprob: -8.092694282531738
    9. 'res' → logprob: -8.467694282531738
    10. '           ' → logprob: -8.842694282531738

Token 689: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16042853891849518
    2. '=' → logprob: -1.910428524017334
    3. '   ' → logprob: -9.910429000854492
    4. '=S' → logprob: -10.785429000854492
    5. ' ' → logprob: -10.910429000854492
    6. '=min' → logprob: -11.035429000854492
    7. 'min' → logprob: -11.410429000854492
    8. ',' → logprob: -11.535429000854492
    9. 'if' → logprob: -12.035429000854492
    10. ' +=' → logprob: -12.222929000854492

Token 690: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006744150537997484
    2. '=' → logprob: -5.006744384765625
    3. '   ' → logprob: -11.631744384765625
    4. ',' → logprob: -12.131744384765625
    5. ' ' → logprob: -12.131744384765625
    6. '=S' → logprob: -13.506744384765625
    7. '  ' → logprob: -13.756744384765625
    8. '=min' → logprob: -14.006744384765625
    9. '    ' → logprob: -14.131744384765625
    10. '<|end|>' → logprob: -14.131744384765625

Token 691: ' S' (ID: 336)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.4097417891025543
    2. 'S' → logprob: -2.5347418785095215
    3. ' cum' → logprob: -2.6597418785095215
    4. 'data' → logprob: -2.9097418785095215
    5. 'beam' → logprob: -3.1597418785095215
    6. 'min' → logprob: -3.2847418785095215
    7. ' S' → logprob: -4.2847418785095215
    8. ' data' → logprob: -4.4097418785095215
    9. ' min' → logprob: -4.7847418785095215
    10. ' beam' → logprob: -5.4097418785095215

Token 692: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0567755699157715
    2. ' -' → logprob: -1.1817755699157715
    3. '-' → logprob: -1.4317755699157715
    4. ' +' → logprob: -2.8067755699157715
    5. '=' → logprob: -3.5567755699157715
    6. ' =' → logprob: -5.8067755699157715
    7. '<=' → logprob: -5.8067755699157715
    8. '+=' → logprob: -5.9317755699157715
    9. '-min' → logprob: -6.1817755699157715
    10. '   ' → logprob: -6.6817755699157715

Token 693: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3608147203922272
    2. 'cum' → logprob: -1.3608146905899048
    3. ' data' → logprob: -3.7358148097991943
    4. ' cum' → logprob: -4.360814571380615
    5. 'min' → logprob: -4.985814571380615
    6. '(data' → logprob: -7.235814571380615
    7. 'beam' → logprob: -7.798314571380615
    8. 'max' → logprob: -8.360815048217773
    9. ' min' → logprob: -8.423315048217773
    10. '(' → logprob: -8.485815048217773

Token 694: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.580929347255733e-05
    2. '[' → logprob: -11.875016212463379
    3. 'i' → logprob: -12.375016212463379
    4. '[m' → logprob: -13.125016212463379
    5. '   ' → logprob: -13.250016212463379
    6. '[N' → logprob: -15.375016212463379
    7. '       ' → logprob: -15.875016212463379
    8. '(i' → logprob: -16.250015258789062
    9. '           ' → logprob: -16.500015258789062
    10. '[
' → logprob: -16.625015258789062

Token 695: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09122725576162338
    2. ' +' → logprob: -2.4662272930145264
    3. ']' → logprob: -6.091227054595947
    4. '   ' → logprob: -12.466227531433105
    5. '1' → logprob: -12.716227531433105
    6. '<|end|>' → logprob: -13.091227531433105
    7. '<|end|>' → logprob: -13.091227531433105
    8. '[' → logprob: -13.341227531433105
    9. '+i' → logprob: -13.466227531433105
    10. ']+' → logprob: -13.841227531433105

Token 696: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.750008583068848
    3. '2' → logprob: -14.000008583068848
    4. '   ' → logprob: -16.250009536743164
    5. '```' → logprob: -16.250009536743164
    6. '           ' → logprob: -18.000009536743164
    7. '
' → logprob: -18.250009536743164
    8. '  ' → logprob: -19.062509536743164
    9. '`' → logprob: -19.562509536743164
    10. '１' → logprob: -19.687509536743164

Token 697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '2' → logprob: -12.625004768371582
    3. ' ' → logprob: -13.500004768371582
    4. '```' → logprob: -15.875004768371582
    5. '
' → logprob: -16.8125057220459
    6. '   ' → logprob: -17.3125057220459
    7. '１' → logprob: -17.7500057220459
    8. '۱' → logprob: -18.4375057220459
    9. '``' → logprob: -19.1250057220459
    10. '0' → logprob: -19.3750057220459

Token 698: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.031777262687683
    2. '<=' → logprob: -1.406777262687683
    3. ')<=' → logprob: -2.4067773818969727
    4. '
' → logprob: -2.5317773818969727
    5. '   ' → logprob: -2.9067773818969727
    6. ' <=' → logprob: -3.1567773818969727
    7. ']<=' → logprob: -3.1567773818969727
    8. '           ' → logprob: -3.6567773818969727
    9. ']' → logprob: -3.9067773818969727
    10. ')
' → logprob: -4.031777381896973

Token 699: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8125680685043335
    2. ' <=' → logprob: -0.8125680685043335
    3. '<=' → logprob: -2.687568187713623
    4. ' and' → logprob: -4.312568187713623
    5. ' >=' → logprob: -4.687568187713623
    6. '
' → logprob: -5.312568187713623
    7. '   ' → logprob: -5.312568187713623
    8. '>=' → logprob: -5.437568187713623
    9. 'and' → logprob: -6.312568187713623
    10. '       ' → logprob: -6.812568187713623

Token 700: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17530696094036102
    2. '           ' → logprob: -2.050307035446167
    3. ' if' → logprob: -3.550307035446167
    4. '   ' → logprob: -6.175306797027588
    5. '       ' → logprob: -6.675306797027588
    6. '	if' → logprob: -11.300307273864746
    7. ' ' → logprob: -11.300307273864746
    8. 'heap' → logprob: -12.425307273864746
    9. 'import' → logprob: -12.800307273864746
    10. '  ' → logprob: -12.925307273864746

Token 701: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.1436372697353363
    2. ' test' → logprob: -2.018637180328369
    3. 'cum' → logprob: -7.268637180328369
    4. ' cum' → logprob: -9.393637657165527
    5. 'seg' → logprob: -10.268637657165527
    6. 'not' → logprob: -10.518637657165527
    7. ' seg' → logprob: -10.768637657165527
    8. 'beam' → logprob: -11.018637657165527
    9. ' not' → logprob: -11.518637657165527
    10. '(test' → logprob: -11.518637657165527

Token 702: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.77627644513268e-06
    2. ' <=' → logprob: -13.250008583068848
    3. '<=' → logprob: -13.312508583068848
    4. '```' → logprob: -14.062508583068848
    5. '[' → logprob: -14.125008583068848
    6. ' ' → logprob: -14.375008583068848
    7. '   ' → logprob: -14.437508583068848
    8. '
' → logprob: -15.125008583068848
    9. '

' → logprob: -15.375008583068848
    10. '>=' → logprob: -15.562508583068848

Token 703: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2812688648700714
    2. ' <=' → logprob: -1.406268835067749
    3. '>=' → logprob: -9.656269073486328
    4. '<' → logprob: -10.406269073486328
    5. ' >=' → logprob: -11.406269073486328
    6. ' <' → logprob: -12.656269073486328
    7. ' ' → logprob: -12.906269073486328
    8. '   ' → logprob: -13.531269073486328
    9. '[' → logprob: -13.656269073486328
    10. '==' → logprob: -13.656269073486328

Token 704: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002805110299959779
    2. ' ' → logprob: -6.002805233001709
    3. 'beam' → logprob: -8.50280475616455
    4. '10' → logprob: -9.50280475616455
    5. '   ' → logprob: -11.12780475616455
    6. 'm' → logprob: -11.75280475616455
    7. 'cum' → logprob: -11.75280475616455
    8. ' beam' → logprob: -12.37780475616455
    9. '  ' → logprob: -12.69030475616455
    10. '1' → logprob: -14.00280475616455

Token 705: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06511346250772476
    2. 'beam' → logprob: -2.8151135444641113
    3. 'cum' → logprob: -5.940113544464111
    4. ' ' → logprob: -8.940113067626953
    5. '10' → logprob: -9.315113067626953
    6. 'start' → logprob: -10.127613067626953
    7. 'm' → logprob: -10.440113067626953
    8. 'be' → logprob: -10.440113067626953
    9. ' beam' → logprob: -10.752613067626953
    10. '   ' → logprob: -11.002613067626953

Token 706: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35026413202285767
    2. ':
' → logprob: -1.225264072418213
    3. ' and' → logprob: -6.475264072418213
    4. '           ' → logprob: -9.350264549255371
    5. '       ' → logprob: -9.350264549255371
    6. ' or' → logprob: -10.600264549255371
    7. 'and' → logprob: -10.850264549255371
    8. '):
' → logprob: -11.725264549255371
    9. ':
' → logprob: -11.725264549255371
    10. '<|end|>' → logprob: -11.850264549255371

Token 707: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4899141788482666
    2. ':' → logprob: -1.8649141788482666
    3. '           ' → logprob: -2.1149141788482666
    4. ':
' → logprob: -2.3649141788482666
    5. ' and' → logprob: -4.1149139404296875
    6. ' or' → logprob: -7.4899139404296875
    7. ',' → logprob: -8.739913940429688
    8. '):
' → logprob: -8.739913940429688
    9. '<|end|>' → logprob: -9.114913940429688
    10. ' :' → logprob: -9.239913940429688

Token 708: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.790320634841919
    2. '               ' → logprob: -1.290320634841919
    3. '           ' → logprob: -1.665320634841919
    4. 'ok' (adapté à ' ok') → logprob: -2.790320634841919
    5. '
' → logprob: -4.04032039642334
    6. ' break' → logprob: -7.54032039642334
    7. '   ' → logprob: -7.54032039642334
    8. 'break' → logprob: -7.66532039642334
    9. '       ' → logprob: -8.29032039642334
    10. '                   ' → logprob: -8.41532039642334

Token 709: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5768611431121826
    2. '=' → logprob: -0.8268611431121826
    3. '=True' → logprob: -7.076861381530762
    4. ':' → logprob: -9.576861381530762
    5. '==' → logprob: -13.451861381530762
    6. '=False' → logprob: -13.576861381530762
    7. '   ' → logprob: -13.951861381530762
    8. '           ' → logprob: -14.076861381530762
    9. '       ' → logprob: -14.201861381530762
    10. '               ' → logprob: -14.701861381530762

Token 710: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001170225441455841
    2. ' True' → logprob: -6.7511701583862305
    3. '   ' → logprob: -19.126171112060547
    4. 'true' → logprob: -20.001171112060547
    5. '(True' → logprob: -20.001171112060547
    6. '=True' → logprob: -20.751171112060547
    7. '1' → logprob: -20.751171112060547
    8. '       ' → logprob: -21.001171112060547
    9. 'False' → logprob: -22.501171112060547
    10. '           ' → logprob: -22.751171112060547

Token 711: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06999045610427856
    2. '<|end|>' → logprob: -3.319990396499634
    3. '           ' → logprob: -4.444990634918213
    4. '   ' → logprob: -4.944990634918213
    5. '
' → logprob: -5.319990634918213
    6. '       ' → logprob: -5.819990634918213
    7. '                
' → logprob: -6.944990634918213
    8. '    
' → logprob: -7.319990634918213
    9. '                   ' → logprob: -7.444990634918213
    10. ')' → logprob: -7.819990634918213

Token 712: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011249768547713757
    2. '           ' → logprob: -4.886249542236328
    3. '   ' → logprob: -6.511249542236328
    4. '       ' → logprob: -6.636249542236328
    5. '<|end|>' → logprob: -8.011249542236328
    6. '              ' → logprob: -8.761249542236328
    7. '                   ' → logprob: -9.511249542236328
    8. '                ' → logprob: -9.886249542236328
    9. '                
' → logprob: -10.261249542236328
    10. ' break' → logprob: -10.386249542236328

Token 713: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7750674486160278
    2. 'break' (adapté à ' break') → logprob: -0.7750674486160278
    3. '       ' → logprob: -2.6500673294067383
    4. '               ' → logprob: -5.525067329406738
    5. '           ' → logprob: -5.775067329406738
    6. '   ' → logprob: -7.150067329406738
    7. '	break' → logprob: -9.025067329406738
    8. 'start' → logprob: -12.525067329406738
    9. ' ' → logprob: -13.400067329406738
    10. '                   ' → logprob: -13.900067329406738

Token 714: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 715: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00971762090921402
    2. '       ' → logprob: -5.6347174644470215
    3. 'if' → logprob: -6.3847174644470215
    4. 'r' → logprob: -6.8847174644470215
    5. '           ' → logprob: -7.1347174644470215
    6. ' if' → logprob: -7.1347174644470215
    7. ')' → logprob: -7.2597174644470215
    8. ' r' → logprob: -8.38471794128418
    9. '    ' → logprob: -8.50971794128418
    10. 'while' → logprob: -9.50971794128418

Token 716: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6939219832420349
    2. 'if' (adapté à ' if') → logprob: -0.9439219832420349
    3. ')' → logprob: -2.8189220428466797
    4. 'end' → logprob: -3.5689220428466797
    5. ' if' → logprob: -4.19392204284668
    6. 'start' → logprob: -6.69392204284668
    7. 'else' → logprob: -7.19392204284668
    8. '    ' → logprob: -7.31892204284668
    9. ' )' → logprob: -7.44392204284668
    10. '  ' → logprob: -7.56892204284668

Token 717: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.7057899832725525
    2. ' ok' → logprob: -0.7057899832725525
    3. ' not' → logprob: -4.705790042877197
    4. 'not' → logprob: -5.705790042877197
    5. '   ' → logprob: -9.830789566040039
    6. 'data' → logprob: -10.455789566040039
    7. '    ' → logprob: -11.205789566040039
    8. '  ' → logprob: -11.330789566040039
    9. '(ok' → logprob: -11.330789566040039
    10. ' ' → logprob: -11.455789566040039

Token 718: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08957792818546295
    2. ':
' → logprob: -2.4645779132843018
    3. '==' → logprob: -7.839578151702881
    4. '       ' → logprob: -9.089577674865723
    5. '   ' → logprob: -9.089577674865723
    6. '=' → logprob: -12.089577674865723
    7. ' ==' → logprob: -12.589577674865723
    8. '):
' → logprob: -12.589577674865723
    9. ':
' → logprob: -13.339577674865723
    10. '):' → logprob: -13.714577674865723

Token 719: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7242695093154907
    2. ' start' → logprob: -0.7242695093154907
    3. 'start' → logprob: -3.849269390106201
    4. '       ' → logprob: -4.724269390106201
    5. ' end' → logprob: -8.47426986694336
    6. '	start' → logprob: -9.47426986694336
    7. 'end' → logprob: -9.72426986694336
    8. '```' → logprob: -9.97426986694336
    9. '[start' → logprob: -10.22426986694336
    10. ',start' → logprob: -10.84926986694336

Token 720: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.0002625278721097857
    2. ' start' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.125262260437012
    4. 'end' → logprob: -15.125262260437012
    5. '       ' → logprob: -15.500262260437012
    6. '	start' → logprob: -18.500263214111328
    7. '
' → logprob: -18.500263214111328
    8. '[start' → logprob: -18.875263214111328
    9. '```' → logprob: -19.750263214111328
    10. '           ' → logprob: -21.500263214111328

Token 721: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868820369243622
    2. ' =' → logprob: -1.1368820667266846
    3. '=m' → logprob: -11.511881828308105
    4. '＝' → logprob: -14.761881828308105
    5. '<|end|>' → logprob: -15.386881828308105
    6. ' ' → logprob: -16.261882781982422
    7. '+=' → logprob: -16.511882781982422
    8. '=end' → logprob: -17.386882781982422
    9. '=
' → logprob: -17.636882781982422
    10. '=}' → logprob: -17.636882781982422

Token 722: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12692831456661224
    2. ' m' → logprob: -2.1269283294677734
    3. '	m' → logprob: -15.251928329467773
    4. '   ' → logprob: -17.751928329467773
    5. ')m' → logprob: -19.751928329467773
    6. 'end' → logprob: -19.876928329467773
    7. ' ' → logprob: -20.126928329467773
    8. '$m' → logprob: -20.376928329467773
    9. 'mid' → logprob: -20.751928329467773
    10. ' м' → logprob: -20.751928329467773

Token 723: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1032879576086998
    2. 'else' → logprob: -2.853287935256958
    3. ' else' → logprob: -3.228287935256958
    4. '
' → logprob: -7.728288173675537
    5. '<|end|>' → logprob: -8.353287696838379
    6. 'end' → logprob: -9.603287696838379
    7. '```' → logprob: -10.728287696838379
    8. '[end' → logprob: -10.853287696838379
    9. '    
' → logprob: -11.603287696838379
    10. ' end' → logprob: -11.603287696838379

Token 724: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.063080795109272
    2. '   ' → logprob: -2.8130807876586914
    3. ' else' → logprob: -6.813080787658691
    4. 'end' → logprob: -12.063080787658691
    5. '```' → logprob: -12.563080787658691
    6. '	else' → logprob: -12.813080787658691
    7. 'elif' → logprob: -14.563080787658691
    8. '}else' → logprob: -15.813080787658691
    9. '_else' → logprob: -15.938080787658691
    10. '       ' → logprob: -16.688081741333008

Token 725: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.00012368128227535635
    2. ' else' → logprob: -9.000123977661133
    3. '```' → logprob: -15.375123977661133
    4. '   ' → logprob: -16.500123977661133
    5. 'elif' → logprob: -19.000123977661133
    6. '	else' → logprob: -19.375123977661133
    7. 'end' → logprob: -20.250123977661133
    8. '#else' → logprob: -20.750123977661133
    9. '_else' → logprob: -20.750123977661133
    10. '``' → logprob: -21.750123977661133

Token 726: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3878113329410553
    2. ':
' → logprob: -1.512811303138733
    3. ':' → logprob: -2.3878114223480225
    4. '   ' → logprob: -5.512811183929443
    5. 'end' → logprob: -6.012811183929443
    6. '```' → logprob: -7.387811183929443
    7. '<|end|>' → logprob: -7.387811183929443
    8. ' end' → logprob: -7.762811183929443
    9. '           ' → logprob: -8.512811660766602
    10. '=end' → logprob: -9.262811660766602

Token 727: '       ' (ID: 309)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.09004320204257965
    2. ' end' → logprob: -2.840043306350708
    3. '   ' → logprob: -3.590043306350708
    4. '       ' → logprob: -9.840043067932129
    5. '	end' → logprob: -11.215043067932129
    6. '[end' → logprob: -11.465043067932129
    7. '```' → logprob: -12.340043067932129
    8. '=end' → logprob: -13.340043067932129
    9. '(end' → logprob: -13.590043067932129
    10. ',end' → logprob: -13.715043067932129

Token 728: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.0002613358374219388
    2. ' end' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.625261306762695
    4. '=end' → logprob: -20.250261306762695
    5. '_end' → logprob: -20.375261306762695
    6. '[end' → logprob: -21.000261306762695
    7. '(end' → logprob: -21.250261306762695
    8. '	end' → logprob: -21.250261306762695
    9. ',end' → logprob: -22.125261306762695
    10. 'start' → logprob: -22.125261306762695

Token 729: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20145094394683838
    2. ' =' → logprob: -1.7014509439468384
    3. '=m' → logprob: -10.201451301574707
    4. '<|end|>' → logprob: -15.451451301574707
    5. '＝' → logprob: -15.701451301574707
    6. '=
' → logprob: -16.45145034790039
    7. 'm' → logprob: -17.45145034790039
    8. ')' → logprob: -17.57645034790039
    9. '=end' → logprob: -18.32645034790039
    10. ' =
' → logprob: -18.32645034790039

Token 730: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06196768581867218
    2. ' m' → logprob: -2.811967611312866
    3. '	m' → logprob: -17.686967849731445
    4. ' м' → logprob: -19.561967849731445
    5. '<|end|>' → logprob: -20.561967849731445
    6. '<m' → logprob: -20.811967849731445
    7. 'ｍ' → logprob: -20.811967849731445
    8. '```' → logprob: -20.811967849731445
    9. ' ' → logprob: -21.186967849731445
    10. ' ' → logprob: -21.436967849731445

Token 731: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 732: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4701346158981323
    2. '<|end|>' → logprob: -1.0951346158981323
    3. '
' → logprob: -3.845134735107422
    4. ')' → logprob: -5.220134735107422
    5. 'start' → logprob: -5.595134735107422
    6. '```' → logprob: -5.970134735107422
    7. ' ' → logprob: -6.720134735107422
    8. '#' → logprob: -6.845134735107422
    9. 'return' → logprob: -6.970134735107422
    10. 'if' → logprob: -7.095134735107422

Token 733: ' data' (ID: 1238)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.01611953228712082
    2. 'start' → logprob: -4.141119480133057
    3. ' ' → logprob: -10.516119956970215
    4. ' __' → logprob: -10.641119956970215
    5. ' data' → logprob: -11.516119956970215
    6. ' end' → logprob: -11.766119956970215
    7. '__' → logprob: -12.141119956970215
    8. ' N' → logprob: -12.891119956970215
    9. ' m' → logprob: -13.016119956970215
    10. ' not' → logprob: -13.516119956970215

Token 734: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013299405574798584
    2. '[-' → logprob: -4.513299465179443
    3. '[start' → logprob: -6.263299465179443
    4. '==' → logprob: -9.388298988342285
    5. '0' → logprob: -9.763298988342285
    6. '[len' → logprob: -9.888298988342285
    7. '[N' → logprob: -10.013298988342285
    8. '[end' → logprob: -10.013298988342285
    9. '```' → logprob: -10.513298988342285
    10. ' ==' → logprob: -12.513298988342285

Token 735: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10715077817440033
    2. 'N' → logprob: -2.9821507930755615
    3. '-' → logprob: -3.1071507930755615
    4. 'start' → logprob: -5.357150554656982
    5. ' ' → logprob: -6.982150554656982
    6. '-N' → logprob: -8.60715103149414
    7. ' -' → logprob: -9.48215103149414
    8. ' N' → logprob: -9.73215103149414
    9. 'end' → logprob: -9.98215103149414
    10. '   ' → logprob: -10.35715103149414

Token 736: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17216266691684723
    2. '[' → logprob: -2.9221627712249756
    3. ']>' → logprob: -3.0471627712249756
    4. ']==' → logprob: -3.6721627712249756
    5. '>' → logprob: -4.0471625328063965
    6. '==' → logprob: -5.1721625328063965
    7. ']<=' → logprob: -6.1721625328063965
    8. ']>=' → logprob: -6.2971625328063965
    9. '<=' → logprob: -7.0471625328063965
    10. ' ]' → logprob: -7.6721625328063965

Token 737: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3643181622028351
    2. ' <=' → logprob: -1.2393181324005127
    3. '[' → logprob: -5.239318370819092
    4. '>' → logprob: -5.989318370819092
    5. '<' → logprob: -6.114318370819092
    6. '==' → logprob: -6.239318370819092
    7. ' <' → logprob: -6.239318370819092
    8. ' ==' → logprob: -7.364318370819092
    9. ' >' → logprob: -7.489318370819092
    10. '>=' → logprob: -7.864318370819092

Token 738: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1269514262676239
    2. ' ' → logprob: -2.1269514560699463
    3. '   ' → logprob: -11.251951217651367
    4. '=' → logprob: -12.876951217651367
    5. 'start' → logprob: -13.126951217651367
    6. '  ' → logprob: -13.876951217651367
    7. '```' → logprob: -13.876951217651367
    8. ' start' → logprob: -14.376951217651367
    9. ' ' → logprob: -14.501951217651367
    10. '
' → logprob: -14.876951217651367

Token 739: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000632139970548451
    2. ' ' → logprob: -7.375632286071777
    3. 'start' → logprob: -13.000632286071777
    4. '   ' → logprob: -13.625632286071777
    5. '-' → logprob: -14.375632286071777
    6. '  ' → logprob: -15.125632286071777
    7. '[' → logprob: -16.12563133239746
    8. '```' → logprob: -16.18813133239746
    9. '    ' → logprob: -16.25063133239746
    10. '
' → logprob: -16.31313133239746

Token 740: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07058526575565338
    2. ':
' → logprob: -2.695585250854492
    3. ':return' → logprob: -7.945585250854492
    4. '   ' → logprob: -8.945585250854492
    5. ' or' → logprob: -9.195585250854492
    6. ' and' → logprob: -10.195585250854492
    7. ':
' → logprob: -12.195585250854492
    8. '==' → logprob: -12.570585250854492
    9. '.' → logprob: -12.695585250854492
    10. ' :' → logprob: -12.945585250854492

Token 741: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15161554515361786
    2. ' print' → logprob: -2.276615619659424
    3. '   ' → logprob: -3.276615619659424
    4. '```' → logprob: -8.276615142822266
    5. '``' → logprob: -10.776615142822266
    6. '	print' → logprob: -12.401615142822266
    7. ' ' → logprob: -12.651615142822266
    8. '
' → logprob: -12.776615142822266
    9. '`' → logprob: -13.401615142822266
    10. '.print' → logprob: -13.776615142822266

Token 742: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006124787032604218
    2. ' print' → logprob: -7.500612258911133
    3. '```' → logprob: -10.250612258911133
    4. '   ' → logprob: -11.250612258911133
    5. 'start' → logprob: -11.875612258911133
    6. '``' → logprob: -13.125612258911133
    7. 'end' → logprob: -14.000612258911133
    8. '
' → logprob: -14.500612258911133
    9. '0' → logprob: -15.375612258911133
    10. '`' → logprob: -16.250612258911133

Token 743: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007195804500952363
    2. '-' → logprob: -7.2507195472717285
    3. ' ' → logprob: -12.625720024108887
    4. '(' → logprob: -12.875720024108887
    5. '`' → logprob: -13.875720024108887
    6. '1' → logprob: -14.250720024108887
    7. '"' → logprob: -14.500720024108887
    8. ' -' → logprob: -15.375720024108887
    9. '```' → logprob: -15.375720024108887
    10. 'N' → logprob: -15.500720024108887

Token 744: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013035668234806508
    2. '-' → logprob: -9.375130653381348
    3. 'N' → logprob: -10.750130653381348
    4. ' ' → logprob: -11.500130653381348
    5. '"' → logprob: -12.250130653381348
    6. '1' → logprob: -12.500130653381348
    7. 'start' → logprob: -13.250130653381348
    8. '`' → logprob: -13.625130653381348
    9. ''' → logprob: -14.500130653381348
    10. '   ' → logprob: -14.500130653381348

Token 745: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759840607643127
    2. ')
' → logprob: -0.8259840607643127
    3. ')
' → logprob: -10.325984001159668
    4. '   ' → logprob: -12.575984001159668
    5. ')return' → logprob: -12.950984001159668
    6. ' )' → logprob: -13.450984001159668
    7. 'else' → logprob: -13.450984001159668
    8. ' )
' → logprob: -13.450984001159668
    9. ')`
' → logprob: -14.325984001159668
    10. '```' → logprob: -15.325984001159668

Token 746: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19836799800395966
    2. ')' → logprob: -2.8233680725097656
    3. 'end' → logprob: -2.9483680725097656
    4. 'N' → logprob: -3.4483680725097656
    5. 'beam' → logprob: -3.9483680725097656
    6. 'data' → logprob: -5.323368072509766
    7. 'sep' → logprob: -5.573368072509766
    8. '"' → logprob: -6.323368072509766
    9. 'flush' → logprob: -6.823368072509766
    10. 'start' → logprob: -7.073368072509766

Token 747: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9059373736381531
    2. 'end' → logprob: -1.2809374332427979
    3. ')' → logprob: -1.4059374332427979
    4. 'beam' → logprob: -3.405937433242798
    5. 'N' → logprob: -4.030937194824219
    6. 'data' → logprob: -4.905937194824219
    7. 'sep' → logprob: -4.905937194824219
    8. '"' → logprob: -6.655937194824219
    9. 'flush' → logprob: -6.780937194824219
    10. ''' → logprob: -7.405937194824219

Token 748: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25210633873939514
    2. ')
' → logprob: -1.5021063089370728
    3. ')
' → logprob: -9.252106666564941
    4. '0' → logprob: -9.752106666564941
    5. ' )' → logprob: -12.127106666564941
    6. ',' → logprob: -12.377106666564941
    7. ' )
' → logprob: -12.502106666564941
    8. '   ' → logprob: -13.002106666564941
    9. ' ' → logprob: -13.252106666564941
    10. '+' → logprob: -14.127106666564941

Token 749: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.002552592661231756
    2. 'elif' → logprob: -6.377552509307861
    3. 'exit' → logprob: -7.752552509307861
    4. '   ' → logprob: -8.25255298614502
    5. '
' → logprob: -9.37755298614502
    6. '    
' → logprob: -10.87755298614502
    7. ' else' → logprob: -11.12755298614502
    8. ')' → logprob: -11.37755298614502
    9. 'print' → logprob: -11.62755298614502
    10. '```' → logprob: -12.12755298614502

Token 750: ' sys' (ID: 12228)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.006709686014801264
    2. 'else' → logprob: -5.756709575653076
    3. 'sys' (adapté à ' sys') → logprob: -6.756709575653076
    4. ' exit' → logprob: -6.756709575653076
    5. '
' → logprob: -7.881709575653076
    6. '   ' → logprob: -8.381710052490234
    7. 'print' → logprob: -8.881710052490234
    8. 'elif' → logprob: -8.881710052490234
    9. '```' → logprob: -9.131710052490234
    10. '	exit' → logprob: -9.881710052490234

Token 751: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -5.2166411478538066e-05
    2. 'exit' → logprob: -10.625052452087402
    3. '.stdout' → logprob: -10.625052452087402
    4. '.' → logprob: -13.625052452087402
    5. '.stderr' → logprob: -14.375052452087402
    6. '	exit' → logprob: -14.625052452087402
    7. '_exit' → logprob: -14.750052452087402
    8. 'Exit' → logprob: -15.125052452087402
    9. '   ' → logprob: -16.250051498413086
    10. ' exit' → logprob: -16.500051498413086

Token 752: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0793684646487236
    2. '(' → logprob: -2.5793683528900146
    3. '0' → logprob: -8.079368591308594
    4. '()
' → logprob: -8.704368591308594
    5. '()

' → logprob: -13.829368591308594
    6. '()`' → logprob: -14.079368591308594
    7. ' ()' → logprob: -14.954368591308594
    8. '(
' → logprob: -16.079368591308594
    9. '()\' → logprob: -16.079368591308594
    10. '())' → logprob: -16.204368591308594

Token 753: 'm' (ID: 76)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006747855222783983
    2. 'for' → logprob: -7.500674724578857
    3. 'm' → logprob: -10.375675201416016
    4. 'while' → logprob: -10.500675201416016
    5. 'start' → logprob: -11.125675201416016
    6. 'result' → logprob: -11.500675201416016
    7. '
' → logprob: -11.875675201416016
    8. 'if' → logprob: -12.000675201416016
    9. 'pr' → logprob: -12.375675201416016
    10. 'else' → logprob: -12.750675201416016

Token 754: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.9354127645492554
    2. '+' → logprob: -1.8104127645492554
    3. ' +=' → logprob: -1.9354127645492554
    4. '=' → logprob: -2.185412883758545
    5. ' =' → logprob: -2.435412883758545
    6. ',' → logprob: -2.560412883758545
    7. '<|end|>' → logprob: -4.685412883758545
    8. ' +' → logprob: -5.185412883758545
    9. 'print' → logprob: -6.810412883758545
    10. ')' → logprob: -6.810412883758545

Token 755: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0629197359085083
    2. ' start' → logprob: -3.5629196166992188
    3. 'N' → logprob: -3.8129196166992188
    4. 'end' → logprob: -5.187919616699219
    5. '0' → logprob: -5.687919616699219
    6. ' N' → logprob: -6.937919616699219
    7. ' ' → logprob: -8.312919616699219
    8. ' end' → logprob: -9.062919616699219
    9. '(start' → logprob: -9.187919616699219
    10. '[start' → logprob: -10.687919616699219

Token 756: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4727323055267334
    2. ',' → logprob: -1.7227323055267334
    3. 'print' → logprob: -1.8477323055267334
    4. ' print' → logprob: -5.3477325439453125
    5. 'for' → logprob: -5.7227325439453125
    6. 'result' → logprob: -5.8477325439453125
    7. 'while' → logprob: -5.9727325439453125
    8. 'res' → logprob: -6.0977325439453125
    9. 'idx' → logprob: -6.3477325439453125
    10. 'cnt' → logprob: -6.5977325439453125

Token 757: 'ans' (ID: 616)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.2783187925815582
    2. 'seg' → logprob: -3.2783188819885254
    3. 'print' → logprob: -3.4033188819885254
    4. 'st' → logprob: -3.9033188819885254
    5. 'ans' → logprob: -4.028318881988525
    6. 'que' → logprob: -4.028318881988525
    7. 'res' → logprob: -4.153318881988525
    8. 'left' → logprob: -4.403318881988525
    9. 'if' → logprob: -4.653318881988525
    10. 'dp' → logprob: -5.028318881988525

Token 758: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15021122992038727
    2. '=' → logprob: -2.0252113342285156
    3. ',' → logprob: -4.900211334228516
    4. ' ,' → logprob: -10.900211334228516
    5. ' =[' → logprob: -12.025211334228516
    6. '=[' → logprob: -12.275211334228516
    7. ',m' → logprob: -12.275211334228516
    8. 's' → logprob: -12.900211334228516
    9. '[' → logprob: -13.025211334228516
    10. '1' → logprob: -13.150211334228516

Token 759: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2974138259887695
    2. '(' → logprob: -1.4224138259887695
    3. '[' → logprob: -1.7974138259887695
    4. '[]' → logprob: -1.9224138259887695
    5. 'N' → logprob: -3.0474138259887695
    6. '1' → logprob: -3.6724138259887695
    7. '10' → logprob: -3.6724138259887695
    8. 'None' → logprob: -4.0474138259887695
    9. 'float' → logprob: -4.7974138259887695
    10. '(N' → logprob: -4.9224138259887695

Token 760: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13948628306388855
    2. 'm' → logprob: -3.014486312866211
    3. ']' → logprob: -3.264486312866211
    4. '-' → logprob: -4.014486312866211
    5. 'False' → logprob: -5.139486312866211
    6. 'beam' → logprob: -5.389486312866211
    7. 'N' → logprob: -6.139486312866211
    8. '1' → logprob: -6.139486312866211
    9. 'float' → logprob: -6.139486312866211
    10. '(' → logprob: -6.264486312866211

Token 761: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007142752408981323
    2. ']*' → logprob: -5.257142543792725
    3. 'for' → logprob: -7.007142543792725
    4. ']*(' → logprob: -7.882142543792725
    5. ' for' → logprob: -8.507143020629883
    6. ',' → logprob: -8.757143020629883
    7. ']
' → logprob: -8.757143020629883
    8. ']+' → logprob: -10.632143020629883
    9. ' ]' → logprob: -11.132143020629883
    10. ',m' → logprob: -11.507143020629883

Token 762: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9357313513755798
    2. '0' → logprob: -1.0607314109802246
    3. 'N' → logprob: -1.5607314109802246
    4. 'm' → logprob: -3.4357314109802246
    5. 'float' → logprob: -4.435731410980225
    6. ' ' → logprob: -6.060731410980225
    7. '1' → logprob: -6.435731410980225
    8. 'start' → logprob: -7.310731410980225
    9. ' N' → logprob: -7.435731410980225
    10. '-' → logprob: -7.435731410980225

Token 763: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.26879361271858215
    2. '0' → logprob: -1.7687935829162598
    3. 'N' → logprob: -3.5187935829162598
    4. 'm' → logprob: -4.14379358291626
    5. '1' → logprob: -5.01879358291626
    6. 'beam' → logprob: -5.14379358291626
    7. 'start' → logprob: -6.51879358291626
    8. 'int' → logprob: -6.64379358291626
    9. 'float' → logprob: -6.64379358291626
    10. '-' → logprob: -6.89379358291626

Token 764: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.09019678831100464
    2. ']' → logprob: -2.4651968479156494
    3. ']
' → logprob: -7.09019660949707
    4. ']

' → logprob: -7.84019660949707
    5. ' ]
' → logprob: -11.59019660949707
    6. ')
' → logprob: -11.71519660949707
    7. '
' → logprob: -13.09019660949707
    8. '0' → logprob: -13.09019660949707
    9. ')' → logprob: -13.34019660949707
    10. ']

' → logprob: -13.46519660949707

Token 765: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.18458281457424164
    2. 'for' → logprob: -2.1845827102661133
    3. 'S' → logprob: -3.6845827102661133
    4. 'queue' → logprob: -5.559582710266113
    5. 'tree' → logprob: -5.684582710266113
    6. 'cnt' → logprob: -5.684582710266113
    7. 'q' → logprob: -5.934582710266113
    8. 'import' → logprob: -6.184582710266113
    9. 'left' → logprob: -6.434582710266113
    10. 'ans' → logprob: -6.684582710266113

Token 766: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38769853115081787
    2. ' =' → logprob: -1.1376985311508179
    3. '=[]' → logprob: -7.137698650360107
    4. ',' → logprob: -10.51269817352295
    5. '=[]
' → logprob: -13.51269817352295
    6. '[]' → logprob: -13.76269817352295
    7. ']' → logprob: -14.51269817352295
    8. '<|end|>' → logprob: -15.13769817352295
    9. '[:]' → logprob: -15.38769817352295
    10. ')' → logprob: -15.38769817352295

Token 767: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0005536287208087742
    2. '[]
' → logprob: -7.500553607940674
    3. '[]}' → logprob: -15.500554084777832
    4. ' []' → logprob: -16.125553131103516
    5. '[]>' → logprob: -16.125553131103516
    6. '[]

' → logprob: -16.125553131103516
    7. '[],' → logprob: -16.375553131103516
    8. '=[]' → logprob: -18.125553131103516
    9. '[' → logprob: -18.125553131103516
    10. '[])' → logprob: -18.500553131103516

Token 768: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.008784156292676926
    2. 'S' → logprob: -4.758784294128418
    3. 'for' → logprob: -9.383784294128418
    4. 'count' → logprob: -10.633784294128418
    5. 'import' → logprob: -11.008784294128418
    6. '0' → logprob: -11.008784294128418
    7. '   ' → logprob: -11.758784294128418
    8. 'sum' → logprob: -11.883784294128418
    9. ' cnt' → logprob: -12.008784294128418
    10. '```' → logprob: -12.883784294128418

Token 769: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014198750257492
    2. ' =' → logprob: -1.7014198303222656
    3. '   ' → logprob: -12.826419830322266
    4. '<|end|>' → logprob: -13.326419830322266
    5. ',' → logprob: -13.576419830322266
    6. ' ' → logprob: -15.701419830322266
    7. '＝' → logprob: -15.826419830322266
    8. '=
' → logprob: -15.951419830322266
    9. '0' → logprob: -16.201419830322266
    10. '==' → logprob: -16.451419830322266

Token 770: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'm' → logprob: -18.625009536743164
    4. '=' → logprob: -19.375009536743164
    5. '   ' → logprob: -19.500009536743164
    6. '<|end|>' → logprob: -19.500009536743164
    7. '```' → logprob: -19.500009536743164
    8. '۰' → logprob: -19.875009536743164
    9. '000' → logprob: -21.000009536743164
    10. ' ' → logprob: -21.375009536743164

Token 771: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. 'm' → logprob: -16.750003814697266
    4. '```' → logprob: -18.500003814697266
    5. 'start' → logprob: -19.375003814697266
    6. '   ' → logprob: -19.500003814697266
    7. '=' → logprob: -19.750003814697266
    8. '۰' → logprob: -19.875003814697266
    9. '000' → logprob: -20.125003814697266
    10. 's' → logprob: -20.375003814697266

Token 772: '
' (ID: 198)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.005491179879754782
    2. 'for' → logprob: -5.255491256713867
    3. 'start' → logprob: -9.630491256713867
    4. 'import' → logprob: -9.630491256713867
    5. '   ' → logprob: -10.630491256713867
    6. 'idx' → logprob: -10.755491256713867
    7. ' S' → logprob: -11.380491256713867
    8. 'sum' → logprob: -11.505491256713867
    9. 'from' → logprob: -11.755491256713867
    10. '```' → logprob: -12.005491256713867

Token 773: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.11358597874641418
    2. 'for' → logprob: -2.238585948944092
    3. 'import' → logprob: -8.23858642578125
    4. 'start' → logprob: -8.61358642578125
    5. 'idx' → logprob: -9.73858642578125
    6. 'print' → logprob: -10.23858642578125
    7. 'result' → logprob: -10.23858642578125
    8. 'i' → logprob: -10.61358642578125
    9. '   ' → logprob: -10.61358642578125
    10. 'sum' → logprob: -10.86358642578125

Token 774: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410327196121216
    2. '=' → logprob: -0.9741032719612122
    3. ' +=' → logprob: -10.974102973937988
    4. '+=' → logprob: -12.224102973937988
    5. '<|end|>' → logprob: -13.349102973937988
    6. ' ' → logprob: -14.099102973937988
    7. '＝' → logprob: -15.349102973937988
    8. '  ' → logprob: -15.474102973937988
    9. ',' → logprob: -15.474102973937988
    10. ')' → logprob: -15.599102973937988

Token 775: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '=' → logprob: -17.750017166137695
    4. '<|end|>' → logprob: -20.625017166137695
    5. '۰' → logprob: -21.625017166137695
    6. '00' → logprob: -22.750017166137695
    7. '```' → logprob: -22.750017166137695
    8. ' ' → logprob: -23.125017166137695
    9. '  ' → logprob: -23.375017166137695
    10. '+' → logprob: -23.500017166137695

Token 776: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '=' → logprob: -19.375003814697266
    4. '   ' → logprob: -19.875003814697266
    5. '۰' → logprob: -20.375003814697266
    6. '000' → logprob: -21.000003814697266
    7. '00' → logprob: -21.125003814697266
    8. 's' → logprob: -21.875003814697266
    9. '<|end|>' → logprob: -21.875003814697266
    10. '  ' → logprob: -21.875003814697266

Token 777: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08559482544660568
    2. ' for' → logprob: -3.085594892501831
    3. '<|end|>' → logprob: -3.960594892501831
    4. '
' → logprob: -4.460594654083252
    5. '   ' → logprob: -5.585594654083252
    6. '	for' → logprob: -7.585594654083252
    7. ' 
' → logprob: -7.835594654083252
    8. 'while' → logprob: -8.21059513092041
    9. 'i' → logprob: -8.71059513092041
    10. '[' → logprob: -8.83559513092041

Token 778: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.421908958349377e-05
    2. ' for' → logprob: -9.87507438659668
    3. 'idx' → logprob: -11.75007438659668
    4. 'i' → logprob: -11.87507438659668
    5. 'result' → logprob: -12.50007438659668
    6. 'print' → logprob: -13.37507438659668
    7. 'res' → logprob: -14.50007438659668
    8. 'index' → logprob: -14.62507438659668
    9. 'heap' → logprob: -14.87507438659668
    10. 'ans' → logprob: -16.00007438659668

Token 779: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6990270018577576
    2. ' m' → logprob: -0.8240270018577576
    3. ' cnt' → logprob: -3.9490270614624023
    4. 'cnt' → logprob: -4.074027061462402
    5. 'N' → logprob: -4.324027061462402
    6. ' N' → logprob: -4.699027061462402
    7. ' len' → logprob: -6.824027061462402
    8. '0' → logprob: -6.949027061462402
    9. ' beam' → logprob: -7.574027061462402
    10. ' ' → logprob: -7.824027061462402

Token 780: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6111594438552856
    2. '>' → logprob: -0.8611594438552856
    3. ' ==' → logprob: -3.736159324645996
    4. '==' → logprob: -4.736159324645996
    5. ':' → logprob: -7.111159324645996
    6. ' !=' → logprob: -7.986159324645996
    7. '   ' → logprob: -8.236159324645996
    8. ' <' → logprob: -8.361159324645996
    9. '!=' → logprob: -8.861159324645996
    10. '=' → logprob: -9.486159324645996

Token 781: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006791155785322189
    2. ' ' → logprob: -5.006791114807129
    3. 'N' → logprob: -9.756791114807129
    4. ' N' → logprob: -11.381791114807129
    5. '1' → logprob: -13.006791114807129
    6. '   ' → logprob: -13.006791114807129
    7. '  ' → logprob: -14.006791114807129
    8. '```' → logprob: -15.631791114807129
    9. 'm' → logprob: -15.881791114807129
    10. '=' → logprob: -15.944291114807129

Token 782: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000585918256547302
    2. ' ' → logprob: -7.750586032867432
    3. 'N' → logprob: -9.000585556030273
    4. '   ' → logprob: -11.250585556030273
    5. '1' → logprob: -11.625585556030273
    6. '  ' → logprob: -13.125585556030273
    7. 'm' → logprob: -13.625585556030273
    8. 'start' → logprob: -13.875585556030273
    9. ' N' → logprob: -14.125585556030273
    10. '    ' → logprob: -14.500585556030273

Token 783: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2519392669200897
    2. ':
' → logprob: -1.501939296722412
    3. '   ' → logprob: -11.751938819885254
    4. ':
' → logprob: -14.126938819885254
    5. ':

' → logprob: -14.376938819885254
    6. ' :' → logprob: -14.876938819885254
    7. ' :
' → logprob: -14.876938819885254
    8. ' and' → logprob: -16.75193977355957
    9. '[' → logprob: -17.37693977355957
    10. '       ' → logprob: -17.37693977355957

Token 784: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6536185145378113
    2. ' for' → logprob: -0.7786185145378113
    3. 'for' → logprob: -4.278618335723877
    4. '	for' → logprob: -5.028618335723877
    5. '```' → logprob: -8.153618812561035
    6. ' heap' → logprob: -10.153618812561035
    7. '       ' → logprob: -11.028618812561035
    8. '   ' → logprob: -11.403618812561035
    9. '
' → logprob: -12.028618812561035
    10. 'heap' → logprob: -12.278618812561035

Token 785: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.306998610496521
    2. ' for' → logprob: -1.431998610496521
    3. '   ' → logprob: -3.6819987297058105
    4. 'print' → logprob: -9.181998252868652
    5. 'heap' → logprob: -9.556998252868652
    6. ' heap' → logprob: -10.056998252868652
    7. '	for' → logprob: -10.556998252868652
    8. '```' → logprob: -10.681998252868652
    9. ' print' → logprob: -11.181998252868652
    10. 'while' → logprob: -11.306998252868652

Token 786: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004158295225352049
    2. ' i' → logprob: -5.5041584968566895
    3. 'beam' → logprob: -11.004158020019531
    4. 'j' → logprob: -11.504158020019531
    5. '_i' → logprob: -11.504158020019531
    6. '   ' → logprob: -11.629158020019531
    7. 'x' → logprob: -12.004158020019531
    8. 'v' → logprob: -12.254158020019531
    9. '_' → logprob: -13.004158020019531
    10. ' ' → logprob: -13.004158020019531

Token 787: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06207580119371414
    2. 'in' → logprob: -2.8120758533477783
    3. '   ' → logprob: -10.0620756149292
    4. 'range' → logprob: -10.8120756149292
    5. '0' → logprob: -11.6870756149292
    6. 'import' → logprob: -12.4370756149292
    7. 'm' → logprob: -12.4370756149292
    8. ' ' → logprob: -12.5620756149292
    9. '```' → logprob: -12.5620756149292
    10. 'In' → logprob: -12.8120756149292

Token 788: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023265395313501358
    2. ' range' → logprob: -3.7732653617858887
    3. '   ' → logprob: -11.898265838623047
    4. 'in' → logprob: -12.273265838623047
    5. '(range' → logprob: -12.898265838623047
    6. '0' → logprob: -13.648265838623047
    7. ' in' → logprob: -14.023265838623047
    8. ' ' → logprob: -14.273265838623047
    9. '	range' → logprob: -14.648265838623047
    10. '```' → logprob: -14.773265838623047

Token 789: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2701685428619385
    2. 'm' → logprob: -2.2701685428619385
    3. '(N' → logprob: -2.3951685428619385
    4. 'range' → logprob: -3.6451685428619385
    5. '(m' → logprob: -5.270168304443359
    6. ' range' → logprob: -5.645168304443359
    7. ' N' → logprob: -5.895168304443359
    8. '   ' → logprob: -6.520168304443359
    9. '(' → logprob: -6.895168304443359
    10. '0' → logprob: -7.020168304443359

Token 790: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6911918520927429
    2. ' -' → logprob: -1.5661919116973877
    3. '-' → logprob: -1.8161919116973877
    4. '):
' → logprob: -2.5661919116973877
    5. '   ' → logprob: -3.0661919116973877
    6. '       ' → logprob: -5.941191673278809
    7. ':' → logprob: -7.566191673278809
    8. ')' → logprob: -7.941191673278809
    9. ' ):' → logprob: -9.191191673278809
    10. ' ' → logprob: -9.816191673278809

Token 791: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007818726007826626
    2. ' ' → logprob: -7.625782012939453
    3. '0' → logprob: -8.875782012939453
    4. 'm' → logprob: -9.500782012939453
    5. '-' → logprob: -10.250782012939453
    6. '   ' → logprob: -10.875782012939453
    7. '2' → logprob: -11.375782012939453
    8. '```' → logprob: -12.875782012939453
    9. ' m' → logprob: -13.000782012939453
    10. '       ' → logprob: -13.250782012939453

Token 792: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.424530435353518e-05
    2. 'm' → logprob: -9.875094413757324
    3. ' ' → logprob: -10.625094413757324
    4. '0' → logprob: -11.500094413757324
    5. '2' → logprob: -12.125094413757324
    6. '   ' → logprob: -13.875094413757324
    7. '(' → logprob: -14.500094413757324
    8. '-' → logprob: -15.250094413757324
    9. '(m' → logprob: -15.562594413757324
    10. '```' → logprob: -15.937594413757324

Token 793: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8398400545120239
    2. ':' → logprob: -1.089840054512024
    3. ':
' → logprob: -2.4648399353027344
    4. '):' → logprob: -2.7148399353027344
    5. '   ' → logprob: -2.8398399353027344
    6. '       ' → logprob: -3.8398399353027344
    7. '+' → logprob: -8.964839935302734
    8. ')' → logprob: -8.964839935302734
    9. ' :' → logprob: -9.464839935302734
    10. '():
' → logprob: -9.589839935302734

Token 794: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017651435919106007
    2. ' if' → logprob: -7.626765251159668
    3. '   ' → logprob: -7.751765251159668
    4. '<|end|>' → logprob: -8.376765251159668
    5. '	   ' → logprob: -9.126765251159668
    6. '	' → logprob: -9.126765251159668
    7. '    ' → logprob: -9.251765251159668
    8. ' ' → logprob: -10.251765251159668
    9. '```' → logprob: -10.251765251159668
    10. '[' → logprob: -10.251765251159668

Token 795: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22628743946552277
    2. '       ' → logprob: -1.9762874841690063
    3. ' if' → logprob: -3.226287364959717
    4. 'if' (adapté à ' if') → logprob: -3.726287364959717
    5. '	if' → logprob: -9.351287841796875
    6. '```' → logprob: -10.726287841796875
    7. '           ' → logprob: -10.851287841796875
    8. '	   ' → logprob: -12.226287841796875
    9. '    ' → logprob: -12.851287841796875
    10. ' ' → logprob: -13.476287841796875

Token 796: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.1603049486875534
    2. ' cnt' → logprob: -1.9103049039840698
    3. '   ' → logprob: -10.66030502319336
    4. '	cnt' → logprob: -11.03530502319336
    5. '(cnt' → logprob: -11.16030502319336
    6. 'count' → logprob: -12.16030502319336
    7. '       ' → logprob: -12.41030502319336
    8. 'i' → logprob: -12.53530502319336
    9. 'm' → logprob: -12.91030502319336
    10. 'len' → logprob: -13.16030502319336

Token 797: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.051942888647317886
    2. '==' → logprob: -3.051942825317383
    3. ' <' → logprob: -5.801942825317383
    4. '<' → logprob: -8.676942825317383
    5. ' !=' → logprob: -9.551942825317383
    6. ' ' → logprob: -10.801942825317383
    7. '=' → logprob: -11.551942825317383
    8. '   ' → logprob: -11.551942825317383
    9. '!=' → logprob: -11.676942825317383
    10. ' =' → logprob: -11.801942825317383

Token 798: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004621422383934259
    2. ' m' → logprob: -5.379621505737305
    3. '0' → logprob: -13.879621505737305
    4. ' ' → logprob: -16.504621505737305
    5. '<|end|>' → logprob: -17.004621505737305
    6. '	m' → logprob: -17.129621505737305
    7. '<m' → logprob: -18.004621505737305
    8. '   ' → logprob: -18.004621505737305
    9. '  ' → logprob: -19.754621505737305
    10. '[m' → logprob: -19.879621505737305

Token 799: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16108842194080353
    2. ':
' → logprob: -1.911088466644287
    3. '           ' → logprob: -7.286088466644287
    4. '   ' → logprob: -9.786087989807129
    5. '       ' → logprob: -10.036087989807129
    6. '<|end|>' → logprob: -11.286087989807129
    7. ':

' → logprob: -11.411087989807129
    8. ' :
' → logprob: -11.661087989807129
    9. ' :' → logprob: -11.786087989807129
    10. ',' → logprob: -11.911087989807129

Token 800: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003322792239487171
    2. ':' → logprob: -6.378322601318359
    3. ':
' → logprob: -7.003322601318359
    4. '       ' → logprob: -8.62832260131836
    5. '   ' → logprob: -9.00332260131836
    6. '```' → logprob: -9.00332260131836
    7. '{
' → logprob: -9.25332260131836
    8. '               ' → logprob: -10.12832260131836
    9. '<|end|>' → logprob: -10.37832260131836
    10. '          ' → logprob: -10.62832260131836

Token 801: ' test' (ID: 1746)
  Prédit: ' test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.21160456538200378
    2. 'test' (adapté à ' test') → logprob: -1.7116045951843262
    3. '           ' → logprob: -5.211604595184326
    4. '       ' → logprob: -5.586604595184326
    5. '   ' → logprob: -7.086604595184326
    6. '	test' → logprob: -10.336604118347168
    7. 'token' → logprob: -11.086604118347168
    8. '               ' → logprob: -11.461604118347168
    9. ' ' → logprob: -11.836604118347168
    10. '```' → logprob: -11.961604118347168

Token 802: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0003365350130479783
    2. '=' → logprob: -8.000336647033691
    3. '   ' → logprob: -15.125336647033691
    4. ' ' → logprob: -15.625336647033691
    5. ' ==' → logprob: -16.125335693359375
    6. ',' → logprob: -16.375335693359375
    7. '=-' → logprob: -17.000335693359375
    8. '2' → logprob: -17.125335693359375
    9. '           ' → logprob: -17.250335693359375
    10. ')' → logprob: -17.250335693359375

Token 803: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759618878364563
    2. '-' → logprob: -0.8259618878364563
    3. '-max' → logprob: -12.45096206665039
    4. '-he' → logprob: -12.57596206665039
    5. '   ' → logprob: -13.70096206665039
    6. '-q' → logprob: -13.82596206665039
    7. '-p' → logprob: -14.07596206665039
    8. ' ' → logprob: -14.07596206665039
    9. ' heap' → logprob: -14.07596206665039
    10. '-qu' → logprob: -14.32596206665039

Token 804: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -1.9361264946837764e-07
    2. 'heap' → logprob: -16.5
    3. 'queue' → logprob: -16.875
    4. ' que' → logprob: -18.125
    5. '```' → logprob: -19.0
    6. 'qu' → logprob: -19.375
    7. '`' → logprob: -21.25
    8. 'queued' → logprob: -21.375
    9. '   ' → logprob: -21.5
    10. 'quee' → logprob: -21.5

Token 805: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '0' → logprob: -13.500001907348633
    3. '```' → logprob: -14.750001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '.pop' → logprob: -17.500001907348633
    6. '[-' → logprob: -17.750001907348633
    7. 'heap' → logprob: -19.125001907348633
    8. '1' → logprob: -19.125001907348633
    9. '.' → logprob: -19.500001907348633
    10. '`' → logprob: -19.625001907348633

Token 806: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.0
    3. '[' → logprob: -16.25
    4. '```' → logprob: -18.625
    5. '   ' → logprob: -19.5
    6. '
' → logprob: -20.5
    7. 'heap' → logprob: -20.875
    8. '       ' → logprob: -21.625
    9. '  ' → logprob: -22.1875
    10. '``' → logprob: -22.375

Token 807: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4258703589439392
    2. ')
' → logprob: -1.175870418548584
    3. ']' → logprob: -3.925870418548584
    4. ']
' → logprob: -4.800870418548584
    5. '           ' → logprob: -5.050870418548584
    6. '<|end|>' → logprob: -6.175870418548584
    7. '       ' → logprob: -6.925870418548584
    8. '```' → logprob: -8.675869941711426
    9. '])' → logprob: -9.050869941711426
    10. '])
' → logprob: -9.800869941711426

Token 808: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033292002975940704
    2. '               ' → logprob: -3.533292055130005
    3. 'heap' → logprob: -6.158291816711426
    4. '<|end|>' → logprob: -6.783291816711426
    5. '```' → logprob: -9.283291816711426
    6. '(heap' → logprob: -10.158291816711426
    7. ' heap' → logprob: -10.658291816711426
    8. '                   ' → logprob: -11.158291816711426
    9. '            
' → logprob: -11.158291816711426
    10. '          ' → logprob: -11.408291816711426

Token 809: ' if' (ID: 538)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.11726561933755875
    2. '           ' → logprob: -2.6172657012939453
    3. '               ' → logprob: -3.4922657012939453
    4. ' heap' → logprob: -4.992265701293945
    5. 'if' (adapté à ' if') → logprob: -8.992265701293945
    6. '            ' → logprob: -9.867265701293945
    7. '(heap' → logprob: -10.117265701293945
    8. ' if' → logprob: -10.367265701293945
    9. '                   ' → logprob: -10.492265701293945
    10. '   ' → logprob: -10.492265701293945

Token 810: ' beam' (ID: 36650)
  Prédit: ' beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beam' → logprob: -0.6931529641151428
    2. 'beam' → logprob: -0.6931529641151428
    3. '   ' → logprob: -12.443153381347656
    4. 'heap' → logprob: -14.943153381347656
    5. ' ' → logprob: -15.068153381347656
    6. 'Beam' → logprob: -15.568153381347656
    7. '    ' → logprob: -15.693153381347656
    8. 'be' → logprob: -15.693153381347656
    9. '```' → logprob: -15.818153381347656
    10. ' beams' → logprob: -15.818153381347656

Token 811: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.988221684878226e-06
    2. 'i' → logprob: -12.500006675720215
    3. '       ' → logprob: -13.875006675720215
    4. '```' → logprob: -14.250006675720215
    5. '[' → logprob: -14.375006675720215
    6. '   ' → logprob: -15.125006675720215
    7. '           ' → logprob: -15.500006675720215
    8. ' [' → logprob: -15.625006675720215
    9. '(i' → logprob: -16.00000762939453
    10. '`' → logprob: -16.87500762939453

Token 812: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06218211352825165
    2. '[' → logprob: -2.8121821880340576
    3. '0' → logprob: -9.187182426452637
    4. '           ' → logprob: -9.937182426452637
    5. ')[' → logprob: -10.562182426452637
    6. ' ][' → logprob: -11.687182426452637
    7. '>[' → logprob: -12.062182426452637
    8. '       ' → logprob: -12.187182426452637
    9. '   ' → logprob: -12.562182426452637
    10. '```' → logprob: -12.812182426452637

Token 813: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.888114098226652e-05
    2. '[' → logprob: -9.375088691711426
    3. ' ' → logprob: -13.500088691711426
    4. '```' → logprob: -13.875088691711426
    5. '][' → logprob: -14.750088691711426
    6. '   ' → logprob: -14.937588691711426
    7. '
' → logprob: -15.375088691711426
    8. '1' → logprob: -15.625088691711426
    9. '``' → logprob: -16.000089645385742
    10. '`' → logprob: -16.125089645385742

Token 814: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3951820433139801
    2. '<' → logprob: -1.1451820135116577
    3. ')' → logprob: -5.645182132720947
    4. ']' → logprob: -6.520182132720947
    5. ')<' → logprob: -6.770182132720947
    6. ']<' → logprob: -6.895182132720947
    7. '[' → logprob: -7.270182132720947
    8. '>' → logprob: -9.145181655883789
    9. '<int' → logprob: -10.020181655883789
    10. '           ' → logprob: -10.270181655883789

Token 815: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2254183143377304
    2. '<' → logprob: -1.6004183292388916
    3. '<Test' → logprob: -13.350418090820312
    4. '<int' → logprob: -13.975418090820312
    5. ' ' → logprob: -15.100418090820312
    6. '<class' → logprob: -15.100418090820312
    7. '<size' → logprob: -15.350418090820312
    8. '[' → logprob: -15.475418090820312
    9. ' >' → logprob: -15.475418090820312
    10. '[test' → logprob: -15.475418090820312

Token 816: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.061967797577381134
    2. ' test' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.811967849731445
    4. '	test' → logprob: -17.561967849731445
    5. '(test' → logprob: -18.061967849731445
    6. 'heap' → logprob: -18.436967849731445
    7. '   ' → logprob: -18.436967849731445
    8. ')test' → logprob: -18.936967849731445
    9. '
' → logprob: -19.811967849731445
    10. '-' → logprob: -19.811967849731445

Token 817: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10824695229530334
    2. '               ' → logprob: -2.3582470417022705
    3. ':' → logprob: -5.108246803283691
    4. '):
' → logprob: -6.483246803283691
    5. '           ' → logprob: -8.233246803283691
    6. '):' → logprob: -10.233246803283691
    7. 'heap' → logprob: -10.733246803283691
    8. '():
' → logprob: -10.983246803283691
    9. ':

' → logprob: -10.983246803283691
    10. '              ' → logprob: -11.358246803283691

Token 818: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024086644873023033
    2. 'heap' → logprob: -3.7740867137908936
    3. ' heap' → logprob: -7.5240864753723145
    4. '(heap' → logprob: -8.649086952209473
    5. '           ' → logprob: -10.399086952209473
    6. '{
' → logprob: -11.024086952209473
    7. '```' → logprob: -11.274086952209473
    8. '.heap' → logprob: -11.524086952209473
    9. ':
' → logprob: -11.649086952209473
    10. '   ' → logprob: -11.774086952209473

Token 819: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.02703561633825302
    2. ' heap' → logprob: -3.902035713195801
    3. '               ' → logprob: -5.527035713195801
    4. '                   ' → logprob: -6.027035713195801
    5. '           ' → logprob: -9.9020357131958
    6. '```' → logprob: -11.6520357131958
    7. '   ' → logprob: -12.5270357131958
    8. '(heap' → logprob: -12.7770357131958
    9. '                       ' → logprob: -12.9020357131958
    10. '.heap' → logprob: -12.9020357131958

Token 820: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.704273118884885e-07
    2. 'replace' → logprob: -14.500000953674316
    3. '```' → logprob: -16.875
    4. 'heap' → logprob: -17.625
    5. 'app' → logprob: -17.75
    6. 'he' → logprob: -18.125
    7. '   ' → logprob: -18.375
    8. '
' → logprob: -18.625
    9. '.he' → logprob: -18.75
    10. '.heap' → logprob: -18.75

Token 821: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0008596502593718469
    2. '.heap' → logprob: -7.25085973739624
    3. 'q' → logprob: -9.000859260559082
    4. 'he' → logprob: -11.000859260559082
    5. 'heap' → logprob: -11.750859260559082
    6. ' he' → logprob: -14.375859260559082
    7. '_he' → logprob: -15.000859260559082
    8. '.' → logprob: -15.125859260559082
    9. '```' → logprob: -15.250859260559082
    10. '(heap' → logprob: -16.1258602142334

Token 822: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.009896447882056236
    2. 'he' → logprob: -4.759896278381348
    3. 'op' → logprob: -7.134896278381348
    4. 'pop' → logprob: -8.009896278381348
    5. '.he' → logprob: -9.759896278381348
    6. 'p' → logprob: -10.634896278381348
    7. 'pp' → logprob: -11.009896278381348
    8. 'ap' → logprob: -11.384896278381348
    9. '```' → logprob: -11.884896278381348
    10. 'q' → logprob: -12.009896278381348

Token 823: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.4049648940563202
    2. 'op' → logprob: -1.4049649238586426
    3. 'app' → logprob: -2.6549649238586426
    4. 'pop' → logprob: -4.904964923858643
    5. 'he' → logprob: -6.029964923858643
    6. 'opp' → logprob: -6.154964923858643
    7. 'push' → logprob: -6.154964923858643
    8. 'pp' → logprob: -6.404964923858643
    9. 'p' → logprob: -6.904964923858643
    10. 'ap' → logprob: -9.279964447021484

Token 824: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023166877508629113
    2. 'que' → logprob: -8.375231742858887
    3. 'queue' → logprob: -14.750231742858887
    4. '(queue' → logprob: -15.125231742858887
    5. '<|end|>' → logprob: -16.37523078918457
    6. '```' → logprob: -16.50023078918457
    7. '(
' → logprob: -17.12523078918457
    8. ' que' → logprob: -17.12523078918457
    9. 'ques' → logprob: -17.25023078918457
    10. ' (' → logprob: -17.50023078918457

Token 825: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -1.9361264946837764e-07
    2. 'queue' → logprob: -16.125
    3. ' que' → logprob: -16.75
    4. '```' → logprob: -19.125
    5. 'qu' → logprob: -19.5
    6. 'q' → logprob: -20.125
    7. 'ques' → logprob: -20.375
    8. 'qui' → logprob: -20.375
    9. 'ue' → logprob: -21.25
    10. 'Que' → logprob: -21.375

Token 826: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.014233557507395744
    2. '               ' → logprob: -4.389233589172363
    3. ')' → logprob: -6.389233589172363
    4. ')
' → logprob: -10.889233589172363
    5. '(' → logprob: -11.764233589172363
    6. '())
' → logprob: -12.139233589172363
    7. '           ' → logprob: -13.139233589172363
    8. 'heap' → logprob: -13.264233589172363
    9. '[' → logprob: -13.639233589172363
    10. ')

' → logprob: -13.889233589172363

Token 827: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0213149506598711
    2. 'heap' → logprob: -4.771315097808838
    3. '```' → logprob: -4.896315097808838
    4. '                
' → logprob: -5.521315097808838
    5. ')' → logprob: -7.896315097808838
    6. ')
' → logprob: -8.77131462097168
    7. '(heap' → logprob: -8.77131462097168
    8. '              ' → logprob: -9.27131462097168
    9. '<|end|>' → logprob: -9.64631462097168
    10. '               
' → logprob: -9.77131462097168

Token 828: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0020042958203703165
    2. ' heap' → logprob: -6.252004146575928
    3. '               ' → logprob: -9.502004623413086
    4. '           ' → logprob: -15.127004623413086
    5. '(heap' → logprob: -15.502004623413086
    6. '.heap' → logprob: -15.502004623413086
    7. '                   ' → logprob: -16.127004623413086
    8. '_heap' → logprob: -17.252004623413086
    9. '```' → logprob: -17.377004623413086
    10. 'beam' → logprob: -17.502004623413086

Token 829: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.6240566083070007e-06
    2. '```' → logprob: -14.875001907348633
    3. 'he' → logprob: -15.375001907348633
    4. 'heap' → logprob: -15.500001907348633
    5. 'p' → logprob: -15.875001907348633
    6. '.he' → logprob: -15.875001907348633
    7. 'k' → logprob: -16.125001907348633
    8. 'i' → logprob: -16.625001907348633
    9. '.heap' → logprob: -16.625001907348633
    10. 'h' → logprob: -17.000001907348633

Token 830: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0009226576657965779
    2. '.heap' → logprob: -7.625922679901123
    3. 'he' → logprob: -7.875922679901123
    4. 'q' → logprob: -10.000922203063965
    5. 'heap' → logprob: -11.875922203063965
    6. 'ush' → logprob: -13.375922203063965
    7. '```' → logprob: -15.250922203063965
    8. '_he' → logprob: -15.375922203063965
    9. ' he' → logprob: -16.37592315673828
    10. '/he' → logprob: -16.37592315673828

Token 831: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.02061278000473976
    2. 'he' → logprob: -4.645612716674805
    3. 'ush' → logprob: -5.145612716674805
    4. '.he' → logprob: -5.895612716674805
    5. 'push' → logprob: -7.020612716674805
    6. 'ap' → logprob: -7.770612716674805
    7. 'pp' → logprob: -8.020612716674805
    8. 'p' → logprob: -8.645612716674805
    9. 'q' → logprob: -9.020612716674805
    10. '[' → logprob: -9.520612716674805

Token 832: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.004323541186749935
    2. 'push' → logprob: -6.254323482513428
    3. 'he' → logprob: -6.504323482513428
    4. 'app' → logprob: -7.379323482513428
    5. 'op' → logprob: -9.504323959350586
    6. 'pp' → logprob: -9.504323959350586
    7. '```' → logprob: -10.254323959350586
    8. '.he' → logprob: -10.629323959350586
    9. 'p' → logprob: -10.879323959350586
    10. '[' → logprob: -12.254323959350586

Token 833: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.5649528298527e-05
    2. 'que' → logprob: -9.500075340270996
    3. 'queue' → logprob: -15.250075340270996
    4. '(
' → logprob: -16.000076293945312
    5. '```' → logprob: -16.000076293945312
    6. ' que' → logprob: -16.250076293945312
    7. ' (' → logprob: -16.875076293945312
    8. '0' → logprob: -17.750076293945312
    9. 'ques' → logprob: -17.875076293945312
    10. '(queue' → logprob: -17.875076293945312

Token 834: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0011309286346659064
    2. '-' → logprob: -7.126131057739258
    3. 'queue' → logprob: -8.626131057739258
    4. '(' → logprob: -9.126131057739258
    5. '(-' → logprob: -11.001131057739258
    6. 'beam' → logprob: -11.501131057739258
    7. ' que' → logprob: -12.751131057739258
    8. 'ques' → logprob: -13.376131057739258
    9. 'qu' → logprob: -13.626131057739258
    10. '-be' → logprob: -13.876131057739258

Token 835: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013497571926563978
    2. '(' → logprob: -6.626349925994873
    3. ' ,' → logprob: -11.376349449157715
    4. '           ' → logprob: -12.251349449157715
    5. '       ' → logprob: -12.876349449157715
    6. '[' → logprob: -13.876349449157715
    7. ')' → logprob: -14.001349449157715
    8. ',-' → logprob: -14.376349449157715
    9. '         ' → logprob: -14.626349449157715
    10. '               ' → logprob: -14.876349449157715

Token 836: ' -' (ID: 533)
  Prédit: '-be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-be' → logprob: -0.1676933914422989
    2. '-' → logprob: -1.9176933765411377
    3. ' -' → logprob: -4.917693614959717
    4. '-Be' → logprob: -11.167693138122559
    5. '-bo' → logprob: -11.417693138122559
    6. '-run' → logprob: -11.542693138122559
    7. '-token' → logprob: -11.667693138122559
    8. '-code' → logprob: -12.042693138122559
    9. '-benef' → logprob: -12.042693138122559
    10. '-user' → logprob: -12.167693138122559

Token 837: 'beam' (ID: 95917)
  Prédit: 'beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -1.6240566083070007e-06
    2. ' beam' → logprob: -13.375001907348633
    3. 'heap' → logprob: -18.000001907348633
    4. '   ' → logprob: -20.125001907348633
    5. 'beat' → logprob: -20.250001907348633
    6. '```' → logprob: -20.375001907348633
    7. 'Beam' → logprob: -20.625001907348633
    8. '(' → logprob: -21.625001907348633
    9. '`' → logprob: -21.875001907348633
    10. 'be' → logprob: -22.000001907348633

Token 838: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. 'i' → logprob: -14.000000953674316
    3. '[' → logprob: -16.250001907348633
    4. '```' → logprob: -16.625001907348633
    5. '{i' → logprob: -17.875001907348633
    6. '(i' → logprob: -18.750001907348633
    7. '   ' → logprob: -18.875001907348633
    8. '           ' → logprob: -19.125001907348633
    9. '[
' → logprob: -20.375001907348633
    10. '     ' → logprob: -20.875001907348633

Token 839: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.747814349073451e-05
    2. 'i' → logprob: -11.375017166137695
    3. '[' → logprob: -12.375017166137695
    4. '```' → logprob: -14.250017166137695
    5. '{i' → logprob: -15.375017166137695
    6. '][' → logprob: -15.750017166137695
    7. '
' → logprob: -16.125017166137695
    8. '(i' → logprob: -16.125017166137695
    9. ')' → logprob: -16.125017166137695
    10. '[
' → logprob: -16.625017166137695

Token 840: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03852405399084091
    2. 'i' → logprob: -3.6635241508483887
    3. '[i' → logprob: -4.413524150848389
    4. '[' → logprob: -11.28852367401123
    5. '
' → logprob: -12.28852367401123
    6. '```' → logprob: -12.41352367401123
    7. '   ' → logprob: -12.53852367401123
    8. ' i' → logprob: -12.66352367401123
    9. '(i' → logprob: -13.16352367401123
    10. '{i' → logprob: -13.28852367401123

Token 841: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47431012988090515
    2. ')' → logprob: -0.9743101596832275
    3. '               ' → logprob: -8.849309921264648
    4. ' )
' → logprob: -10.474309921264648
    5. '       ' → logprob: -10.724309921264648
    6. '           ' → logprob: -10.724309921264648
    7. ')
' → logprob: -11.849309921264648
    8. ' )' → logprob: -12.974309921264648
    9. ')

' → logprob: -13.224309921264648
    10. ')`
' → logprob: -13.224309921264648

Token 842: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016166195273399353
    2. 'S' → logprob: -7.126616477966309
    3. '       ' → logprob: -7.376616477966309
    4. '			' → logprob: -10.251616477966309
    5. '<|end|>' → logprob: -10.626616477966309
    6. '	       ' → logprob: -10.751616477966309
    7. '		       ' → logprob: -10.751616477966309
    8. '           ' → logprob: -11.001616477966309
    9. '              ' → logprob: -11.251616477966309
    10. '```' → logprob: -12.126616477966309

Token 843: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.00044151677866466343
    2. ' S' → logprob: -8.000441551208496
    3. '               ' → logprob: -9.250441551208496
    4. '                   ' → logprob: -12.375441551208496
    5. '           ' → logprob: -12.500441551208496
    6. '   ' → logprob: -13.625441551208496
    7. ' ' → logprob: -14.875441551208496
    8. '       ' → logprob: -15.750441551208496
    9. '                ' → logprob: -16.75044059753418
    10. '                       ' → logprob: -16.87544059753418

Token 844: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.21210871636867523
    2. ' +=' → logprob: -1.7121087312698364
    3. '-=' → logprob: -5.462108612060547
    4. '=' → logprob: -5.587108612060547
    5. ' -=' → logprob: -5.962108612060547
    6. ' =' → logprob: -9.962108612060547
    7. '           ' → logprob: -12.587108612060547
    8. '<|end|>' → logprob: -12.587108612060547
    9. ']+=' → logprob: -12.837108612060547
    10. '    ' → logprob: -12.837108612060547

Token 845: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.011050059460103512
    2. ' beam' → logprob: -4.511050224304199
    3. '(' → logprob: -14.6360502243042
    4. '   ' → logprob: -14.7610502243042
    5. '-' → logprob: -14.8860502243042
    6. ' ' → logprob: -15.6360502243042
    7. 'be' → logprob: -16.011049270629883
    8. '0' → logprob: -16.011049270629883
    9. '  ' → logprob: -16.386049270629883
    10. 'b' → logprob: -16.511049270629883

Token 846: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. 'i' → logprob: -12.625003814697266
    3. '[' → logprob: -15.875003814697266
    4. ' [' → logprob: -16.500003814697266
    5. '{i' → logprob: -16.500003814697266
    6. '```' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.875003814697266
    8. ' i' → logprob: -17.875003814697266
    9. '(i' → logprob: -18.375003814697266
    10. ' ' → logprob: -19.000003814697266

Token 847: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007629226893186569
    2. '[' → logprob: -4.88262939453125
    3. '0' → logprob: -11.50762939453125
    4. 'i' → logprob: -12.25762939453125
    5. '][' → logprob: -12.88262939453125
    6. '```' → logprob: -13.38262939453125
    7. '   ' → logprob: -13.75762939453125
    8. ' [' → logprob: -13.88262939453125
    9. '{i' → logprob: -14.38262939453125
    10. '           ' → logprob: -15.88262939453125

Token 848: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '[' → logprob: -15.625000953674316
    5. '```' → logprob: -16.5
    6. '[i' → logprob: -17.0
    7. '   ' → logprob: -17.125
    8. '
' → logprob: -17.5
    9. '-' → logprob: -17.5
    10. '1' → logprob: -17.875

Token 849: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10025250166654587
    2. '-' → logprob: -2.350252389907837
    3. '-test' → logprob: -10.100252151489258
    4. '           ' → logprob: -13.725252151489258
    5. ' ' → logprob: -13.850252151489258
    6. '   ' → logprob: -14.100252151489258
    7. '          ' → logprob: -14.725252151489258
    8. '```' → logprob: -15.350252151489258
    9. '-token' → logprob: -15.725252151489258
    10. '        ' → logprob: -15.975252151489258

Token 850: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4740850329399109
    2. '-' → logprob: -0.9740850329399109
    3. '-test' → logprob: -12.224084854125977
    4. ' ' → logprob: -14.099084854125977
    5. '```' → logprob: -14.349084854125977
    6. '-token' → logprob: -14.849084854125977
    7. '           ' → logprob: -15.224084854125977
    8. '   ' → logprob: -15.349084854125977
    9. '       ' → logprob: -15.599084854125977
    10. '
' → logprob: -16.474084854125977

Token 851: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.006715370807796717
    2. ' test' → logprob: -5.006715297698975
    3. '(test' → logprob: -18.881715774536133
    4. '	test' → logprob: -19.756715774536133
    5. ' ' → logprob: -20.631715774536133
    6. ')test' → logprob: -20.756715774536133
    7. '```' → logprob: -21.256715774536133
    8. '[test' → logprob: -22.006715774536133
    9. '   ' → logprob: -22.131715774536133
    10. '=test' → logprob: -22.381715774536133

Token 852: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20692816376686096
    2. '               ' → logprob: -1.7069281339645386
    3. '<|end|>' → logprob: -5.456928253173828
    4. '           ' → logprob: -7.956928253173828
    5. '	' → logprob: -8.706928253173828
    6. '   ' → logprob: -9.206928253173828
    7. '              ' → logprob: -9.331928253173828
    8. '      ' → logprob: -9.831928253173828
    9. '<|end|>' → logprob: -9.831928253173828
    10. ' ' → logprob: -9.956928253173828

Token 853: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0243843961507082
    2. '           ' → logprob: -4.024384498596191
    3. '        ' → logprob: -6.899384498596191
    4. '   ' → logprob: -6.899384498596191
    5. '               ' → logprob: -7.524384498596191
    6. '    ' → logprob: -7.524384498596191
    7. '<|end|>' → logprob: -7.524384498596191
    8. '	' → logprob: -7.774384498596191
    9. '      ' → logprob: -8.274384498596191
    10. ' ' → logprob: -8.274384498596191

Token 854: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013245263835415244
    2. '           ' → logprob: -7.001324653625488
    3. '	' → logprob: -8.376324653625488
    4. '               ' → logprob: -9.501324653625488
    5. '	       ' → logprob: -10.501324653625488
    6. 'k' → logprob: -10.876324653625488
    7. '   ' → logprob: -11.626324653625488
    8. ' k' → logprob: -11.626324653625488
    9. '```' → logprob: -12.001324653625488
    10. '	   ' → logprob: -12.376324653625488

Token 855: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023167727049440145
    2. '```' → logprob: -6.502316951751709
    3. 'heap' → logprob: -8.50231647491455
    4. ' heap' → logprob: -8.62731647491455
    5. '[' → logprob: -9.25231647491455
    6. '(heap' → logprob: -9.50231647491455
    7. ':
' → logprob: -9.62731647491455
    8. '{
' → logprob: -9.87731647491455
    9. '          ' → logprob: -10.00231647491455
    10. '            
' → logprob: -10.75231647491455

Token 856: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08993969857692719
    2. 'heap' → logprob: -2.464939594268799
    3. ' heap' → logprob: -7.214939594268799
    4. '```' → logprob: -8.464940071105957
    5. '   ' → logprob: -10.964940071105957
    6. '               ' → logprob: -11.339940071105957
    7. '       ' → logprob: -12.089940071105957
    8. '		' → logprob: -12.589940071105957
    9. '``' → logprob: -12.839940071105957
    10. '(heap' → logprob: -12.964940071105957

Token 857: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.011624195612967014
    2. ' heap' → logprob: -4.886624336242676
    3. '           ' → logprob: -5.636624336242676
    4. '   ' → logprob: -8.511624336242676
    5. '```' → logprob: -9.011624336242676
    6. '       ' → logprob: -9.511624336242676
    7. '               ' → logprob: -10.886624336242676
    8. ' ' → logprob: -12.136624336242676
    9. '``' → logprob: -12.511624336242676
    10. '
' → logprob: -13.136624336242676

Token 858: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'he' → logprob: -17.0
    3. '```' → logprob: -17.625
    4. '       ' → logprob: -18.125
    5. '.he' → logprob: -18.75
    6. '   ' → logprob: -18.75
    7. 'heap' → logprob: -19.375
    8. 'push' → logprob: -19.625
    9. 'h' → logprob: -19.75
    10. '[' → logprob: -19.75

Token 859: '.he' (ID: 67786)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.029857169836759567
    2. 'he' → logprob: -4.029857158660889
    3. '.he' → logprob: -4.529857158660889
    4. 'heap' → logprob: -7.779857158660889
    5. '.heap' → logprob: -7.779857158660889
    6. 'h' → logprob: -12.529857635498047
    7. ' he' → logprob: -12.654857635498047
    8. 'ush' → logprob: -12.654857635498047
    9. 'op' → logprob: -12.779857635498047
    10. '```' → logprob: -13.029857635498047

Token 860: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.030637500807642937
    2. 'ush' → logprob: -4.405637264251709
    3. 'push' → logprob: -4.905637264251709
    4. 'q' → logprob: -5.030637264251709
    5. 'he' → logprob: -6.280637264251709
    6. 'op' → logprob: -7.030637264251709
    7. 'p' → logprob: -7.155637264251709
    8. 'pp' → logprob: -7.905637264251709
    9. '```' → logprob: -10.280637741088867
    10. 'ap' → logprob: -10.655637741088867

Token 861: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.0325924449716695e-05
    2. 'push' → logprob: -12.37501049041748
    3. 'op' → logprob: -13.25001049041748
    4. 'he' → logprob: -13.37501049041748
    5. 'app' → logprob: -13.37501049041748
    6. 'q' → logprob: -14.37501049041748
    7. '.he' → logprob: -15.75001049041748
    8. 'us' → logprob: -16.375009536743164
    9. 'ushed' → logprob: -16.625009536743164
    10. 'p' → logprob: -17.250009536743164

Token 862: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. 'que' → logprob: -15.5
    3. '(
' → logprob: -19.375
    4. ' (' → logprob: -19.375
    5. '[' → logprob: -19.5
    6. '```' → logprob: -20.0
    7. '​' → logprob: -20.375
    8. '(queue' → logprob: -20.625
    9. '`' → logprob: -20.75
    10. '﻿' → logprob: -21.0

Token 863: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -2.339278580620885e-06
    2. ' que' → logprob: -13.250001907348633
    3. 'qu' → logprob: -15.375001907348633
    4. 'queue' → logprob: -15.500001907348633
    5. 'ques' → logprob: -18.500001907348633
    6. 'quee' → logprob: -19.375001907348633
    7. '```' → logprob: -19.500001907348633
    8. 'q' → logprob: -19.625001907348633
    9. '	' → logprob: -19.875001907348633
    10. 'qui' → logprob: -20.125001907348633

Token 864: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02209652215242386
    2. '(' → logprob: -3.897096633911133
    3. 'que' → logprob: -6.647096633911133
    4. ' ,' → logprob: -9.397096633911133
    5. ')' → logprob: -9.522096633911133
    6. '       ' → logprob: -11.022096633911133
    7. '```' → logprob: -11.022096633911133
    8. '=' → logprob: -11.272096633911133
    9. ' que' → logprob: -11.397096633911133
    10. '[' → logprob: -11.522096633911133

Token 865: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04645959287881851
    2. '-be' → logprob: -3.296459674835205
    3. ' -' → logprob: -4.796459674835205
    4. '-user' → logprob: -9.671459197998047
    5. '-code' → logprob: -10.921459197998047
    6. '-care' → logprob: -12.046459197998047
    7. '-run' → logprob: -12.671459197998047
    8. '-ce' → logprob: -13.546459197998047
    9. '-query' → logprob: -13.671459197998047
    10. '-ray' → logprob: -13.796459197998047

Token 866: 'beam' (ID: 95917)
  Prédit: 'beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -7.896309739408025e-07
    2. ' beam' → logprob: -14.125000953674316
    3. 'heap' → logprob: -17.875
    4. '   ' → logprob: -21.875
    5. 'Beam' → logprob: -22.375
    6. 'be' → logprob: -22.625
    7. '```' → logprob: -22.625
    8. 'beat' → logprob: -23.0
    9. '(' → logprob: -23.125
    10. 'boat' → logprob: -23.625

Token 867: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.613945101387799e-05
    2. 'i' → logprob: -9.375085830688477
    3. '[' → logprob: -14.250085830688477
    4. '{i' → logprob: -14.875085830688477
    5. '```' → logprob: -16.375085830688477
    6. '   ' → logprob: -16.500085830688477
    7. '           ' → logprob: -16.500085830688477
    8. '(i' → logprob: -17.000085830688477
    9. ' i' → logprob: -17.500085830688477
    10. '       ' → logprob: -18.125085830688477

Token 868: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008795381523668766
    2. '[' → logprob: -4.758795261383057
    3. 'i' → logprob: -9.258795738220215
    4. '0' → logprob: -9.508795738220215
    5. '][' → logprob: -12.133795738220215
    6. ' [' → logprob: -13.758795738220215
    7. '   ' → logprob: -13.883795738220215
    8. ')[' → logprob: -14.508795738220215
    9. '(i' → logprob: -14.633795738220215
    10. '```' → logprob: -14.758795738220215

Token 869: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005175283877179027
    2. 'i' → logprob: -7.75051736831665
    3. ' ' → logprob: -9.750517845153809
    4. '[i' → logprob: -11.250517845153809
    5. '   ' → logprob: -12.000517845153809
    6. ' i' → logprob: -13.250517845153809
    7. '       ' → logprob: -13.250517845153809
    8. '```' → logprob: -13.500517845153809
    9. '           ' → logprob: -14.250517845153809
    10. '         ' → logprob: -14.250517845153809

Token 870: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12708160281181335
    2. ')' → logprob: -2.1270816326141357
    3. '       ' → logprob: -9.377081871032715
    4. '           ' → logprob: -10.127081871032715
    5. ')
' → logprob: -11.127081871032715
    6. ' )
' → logprob: -11.627081871032715
    7. '   ' → logprob: -13.002081871032715
    8. ')

' → logprob: -13.627081871032715
    9. ' )' → logprob: -14.877081871032715
    10. ')\
' → logprob: -15.252081871032715

Token 871: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18687810003757477
    2. 'S' → logprob: -2.311878204345703
    3. '       ' → logprob: -2.811878204345703
    4. '   ' → logprob: -5.311878204345703
    5. ' S' → logprob: -5.811878204345703
    6. ' ' → logprob: -7.436878204345703
    7. '	       ' → logprob: -7.561878204345703
    8. '
' → logprob: -7.811878204345703
    9. '		' → logprob: -7.811878204345703
    10. '	   ' → logprob: -8.186878204345703

Token 872: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.15595470368862152
    2. ' S' → logprob: -2.030954599380493
    3. 'cnt' → logprob: -5.155954837799072
    4. '           ' → logprob: -5.655954837799072
    5. ' cnt' → logprob: -6.405954837799072
    6. '   ' → logprob: -6.530954837799072
    7. '    ' → logprob: -8.405954360961914
    8. '	S' → logprob: -8.655954360961914
    9. ' ' → logprob: -9.280954360961914
    10. '            ' → logprob: -9.530954360961914

Token 873: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3869040608406067
    2. '+=' → logprob: -1.136904001235962
    3. '   ' → logprob: -11.261903762817383
    4. '    ' → logprob: -11.761903762817383
    5. ']+=' → logprob: -12.011903762817383
    6. '=' → logprob: -13.136903762817383
    7. '```' → logprob: -13.636903762817383
    8. '+='' → logprob: -14.261903762817383
    9. ' ' → logprob: -14.636903762817383
    10. '+' → logprob: -14.886903762817383

Token 874: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.12692862749099731
    2. ' beam' → logprob: -2.1269285678863525
    3. 'be' → logprob: -15.376928329467773
    4. '   ' → logprob: -16.501928329467773
    5. 'Beam' → logprob: -16.876928329467773
    6. '```' → logprob: -17.251928329467773
    7. 'heap' → logprob: -17.251928329467773
    8. '`' → logprob: -17.626928329467773
    9. ' beams' → logprob: -17.626928329467773
    10. ' ' → logprob: -17.626928329467773

Token 875: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009151478880085051
    2. '[' → logprob: -7.000915050506592
    3. '```' → logprob: -14.12591552734375
    4. 'i' → logprob: -14.25091552734375
    5. '[-' → logprob: -15.25091552734375
    6. '   ' → logprob: -15.37591552734375
    7. '       ' → logprob: -15.50091552734375
    8. '[
' → logprob: -15.50091552734375
    9. ' [' → logprob: -15.62591552734375
    10. '0' → logprob: -15.75091552734375

Token 876: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00035238542477600276
    2. '[i' → logprob: -8.50035285949707
    3. '0' → logprob: -9.62535285949707
    4. '][' → logprob: -10.00035285949707
    5. ' [' → logprob: -10.37535285949707
    6. '```' → logprob: -13.50035285949707
    7. ')[' → logprob: -13.87535285949707
    8. 'i' → logprob: -14.50035285949707
    9. '       ' → logprob: -14.50035285949707
    10. '   ' → logprob: -14.50035285949707

Token 877: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -12.250011444091797
    3. '[i' → logprob: -12.625011444091797
    4. 'i' → logprob: -13.375011444091797
    5. '[' → logprob: -14.500011444091797
    6. '   ' → logprob: -14.937511444091797
    7. '```' → logprob: -15.437511444091797
    8. '1' → logprob: -16.125011444091797
    9. '۰' → logprob: -16.312511444091797
    10. '(i' → logprob: -16.500011444091797

Token 878: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05560500919818878
    2. '<|end|>' → logprob: -3.680604934692383
    3. '
' → logprob: -4.555604934692383
    4. ',' → logprob: -5.430604934692383
    5. ' 
' → logprob: -5.555604934692383
    6. '               ' → logprob: -6.305604934692383
    7. '       ' → logprob: -6.680604934692383
    8. ')' → logprob: -6.680604934692383
    9. '            
' → logprob: -6.805604934692383
    10. '  
' → logprob: -7.430604934692383

Token 879: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09905943274497986
    2. '       ' → logprob: -2.5990593433380127
    3. '   ' → logprob: -3.9740593433380127
    4. '```' → logprob: -6.974059581756592
    5. '	       ' → logprob: -9.099059104919434
    6. 'cnt' → logprob: -10.349059104919434
    7. '	   ' → logprob: -10.724059104919434
    8. '               ' → logprob: -10.849059104919434
    9. '		' → logprob: -11.099059104919434
    10. ' ' → logprob: -11.974059104919434

Token 880: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.08119391649961472
    2. ' cnt' → logprob: -2.5811939239501953
    3. '       ' → logprob: -6.706193923950195
    4. '           ' → logprob: -7.331193923950195
    5. '   ' → logprob: -8.456193923950195
    6. '	cnt' → logprob: -8.831193923950195
    7. 'count' → logprob: -9.831193923950195
    8. '```' → logprob: -12.706193923950195
    9. '(cnt' → logprob: -13.206193923950195
    10. '[cnt' → logprob: -13.956193923950195

Token 881: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07928576320409775
    2. ' +=' → logprob: -2.5792858600616455
    3. '=' → logprob: -7.954285621643066
    4. '```' → logprob: -10.454285621643066
    5. '   ' → logprob: -11.829285621643066
    6. '+' → logprob: -11.954285621643066
    7. ']+=' → logprob: -13.954285621643066
    8. '+="' → logprob: -15.204285621643066
    9. ' =' → logprob: -15.329285621643066
    10. '    ' → logprob: -15.454285621643066

Token 882: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1269323080778122
    2. ' ' → logprob: -2.126932382583618
    3. '```' → logprob: -13.126932144165039
    4. ' ' → logprob: -13.376932144165039
    5. '	' → logprob: -15.751932144165039
    6. '<|end|>' → logprob: -16.00193214416504
    7. '+' → logprob: -16.37693214416504
    8. '   ' → logprob: -16.62693214416504
    9. ' 
' → logprob: -16.75193214416504
    10. '0' → logprob: -17.37693214416504

Token 883: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '```' → logprob: -18.62506675720215
    4. '   ' → logprob: -18.87506675720215
    5. 'i' → logprob: -20.37506675720215
    6. '  ' → logprob: -20.50006675720215
    7. '	' → logprob: -20.68756675720215
    8. '0' → logprob: -21.06256675720215
    9. '۱' → logprob: -21.18756675720215
    10. '<|end|>' → logprob: -21.31256675720215

Token 884: '
' (ID: 198)
  Prédit: '	i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	i' → logprob: -0.7974832057952881
    2. '   ' → logprob: -1.172483205795288
    3. '       ' → logprob: -1.922483205795288
    4. 'i' → logprob: -3.172483205795288
    5. '```' → logprob: -4.547483444213867
    6. '<|end|>' → logprob: -4.672483444213867
    7. '	if' → logprob: -5.047483444213867
    8. '\t' → logprob: -5.297483444213867
    9. ' i' → logprob: -5.672483444213867
    10. '	while' → logprob: -6.047483444213867

Token 885: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6755279898643494
    2. 'i' → logprob: -1.1755280494689941
    3. '<|end|>' → logprob: -3.550528049468994
    4. ' ' → logprob: -3.675528049468994
    5. 'for' → logprob: -3.800528049468994
    6. ')' → logprob: -3.800528049468994
    7. 'print' → logprob: -4.300528049468994
    8. 'S' → logprob: -4.675528049468994
    9. '  ' → logprob: -4.800528049468994
    10. 'm' → logprob: -5.050528049468994

Token 886: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4781886041164398
    2. '   ' → logprob: -0.9781886339187622
    3. 'if' (adapté à ' if') → logprob: -5.853188514709473
    4. ' if' → logprob: -6.978188514709473
    5. '	if' → logprob: -8.603188514709473
    6. '```' → logprob: -9.978188514709473
    7. '           ' → logprob: -10.478188514709473
    8. ' ' → logprob: -11.978188514709473
    9. '	   ' → logprob: -12.353188514709473
    10. '	' → logprob: -12.478188514709473

Token 887: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.5768553018569946
    2. 'cnt' → logprob: -0.8268553018569946
    3. '(cnt' → logprob: -8.576855659484863
    4. '   ' → logprob: -8.701855659484863
    5. 'm' → logprob: -8.951855659484863
    6. 'S' → logprob: -9.076855659484863
    7. ' m' → logprob: -9.576855659484863
    8. '	cnt' → logprob: -10.076855659484863
    9. ' test' → logprob: -10.576855659484863
    10. ' S' → logprob: -10.701855659484863

Token 888: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018156031146645546
    2. '==' → logprob: -4.018156051635742
    3. '[' → logprob: -13.268156051635742
    4. ' =' → logprob: -13.893156051635742
    5. ' ==
' → logprob: -14.268156051635742
    6. '   ' → logprob: -14.518156051635742
    7. ' ' → logprob: -14.768156051635742
    8. '```' → logprob: -14.768156051635742
    9. '==
' → logprob: -14.893156051635742
    10. '=' → logprob: -15.143156051635742

Token 889: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08894122391939163
    2. ' m' → logprob: -2.4639413356781006
    3. '<|end|>' → logprob: -14.08894157409668
    4. '   ' → logprob: -15.21394157409668
    5. ' ' → logprob: -15.21394157409668
    6. '	m' → logprob: -15.96394157409668
    7. '    ' → logprob: -16.46394157409668
    8. '  ' → logprob: -16.58894157409668
    9. '```' → logprob: -16.83894157409668
    10. '0' → logprob: -17.71394157409668

Token 890: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6029537916183472
    2. ':
' → logprob: -1.7279537916183472
    3. ':' → logprob: -2.1029539108276367
    4. ' ==' → logprob: -2.6029539108276367
    5. '==' → logprob: -2.7279539108276367
    6. '       ' → logprob: -5.352953910827637
    7. '           ' → logprob: -5.852953910827637
    8. 'and' → logprob: -5.852953910827637
    9. '   ' → logprob: -5.977953910827637
    10. '=' → logprob: -8.352953910827637

Token 891: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.035101015120744705
    2. ':' → logprob: -4.285100936889648
    3. '       ' → logprob: -4.410100936889648
    4. ':
' → logprob: -5.410100936889648
    5. ' and' → logprob: -5.785100936889648
    6. '   ' → logprob: -8.410100936889648
    7. '<|end|>' → logprob: -8.910100936889648
    8. '```' → logprob: -9.535100936889648
    9. ',' → logprob: -9.660100936889648
    10. '               ' → logprob: -9.660100936889648

Token 892: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' (adapté à ' test') → logprob: -0.19492144882678986
    2. 'if' → logprob: -1.8199214935302734
    3. '   ' → logprob: -4.319921493530273
    4. 'break' → logprob: -7.694921493530273
    5. ' test' → logprob: -7.819921493530273
    6. '           ' → logprob: -8.444921493530273
    7. ' if' → logprob: -8.569921493530273
    8. 'print' → logprob: -8.944921493530273
    9. '       ' → logprob: -9.194921493530273
    10. 'idx' → logprob: -9.694921493530273

Token 893: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010581648908555508
    2. '=' → logprob: -4.7605814933776855
    3. ' =' → logprob: -6.5105814933776855
    4. '   ' → logprob: -7.8855814933776855
    5. '+=' → logprob: -10.635581970214844
    6. '    ' → logprob: -11.135581970214844
    7. ' ' → logprob: -11.510581970214844
    8. '       ' → logprob: -11.760581970214844
    9. '	' → logprob: -12.010581970214844
    10. '_' → logprob: -12.010581970214844

Token 894: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1433992236852646
    2. '=' → logprob: -2.018399238586426
    3. '   ' → logprob: -7.643399238586426
    4. ' ==' → logprob: -8.768399238586426
    5. '==' → logprob: -9.768399238586426
    6. '    ' → logprob: -11.643399238586426
    7. ' +=' → logprob: -11.768399238586426
    8. '=S' → logprob: -12.518399238586426
    9. '+=' → logprob: -13.143399238586426
    10. ' <=' → logprob: -13.268399238586426

Token 895: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.006719871424138546
    2. ' S' → logprob: -5.006720066070557
    3. '   ' → logprob: -12.381719589233398
    4. ' ' → logprob: -15.631719589233398
    5. '  ' → logprob: -16.7567195892334
    6. '       ' → logprob: -17.0067195892334
    7. '(S' → logprob: -17.3817195892334
    8. '	S' → logprob: -17.6317195892334
    9. '           ' → logprob: -17.7567195892334
    10. '    ' → logprob: -18.7567195892334

Token 896: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25410425662994385
    2. '+' → logprob: -1.5041042566299438
    3. ' =' → logprob: -7.629104137420654
    4. '=' → logprob: -7.629104137420654
    5. ' +=' → logprob: -8.004104614257812
    6. ' <=' → logprob: -8.129104614257812
    7. '   ' → logprob: -8.504104614257812
    8. '<=' → logprob: -8.754104614257812
    9. '+=' → logprob: -8.879104614257812
    10. '    ' → logprob: -10.754104614257812

Token 897: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.018150178715586662
    2. ' data' → logprob: -4.018150329589844
    3. ' ' → logprob: -16.518150329589844
    4. '   ' → logprob: -16.643150329589844
    5. '	data' → logprob: -16.893150329589844
    6. '
' → logprob: -17.518150329589844
    7. '(data' → logprob: -17.768150329589844
    8. '0' → logprob: -18.143150329589844
    9. '           ' → logprob: -18.268150329589844
    10. '       ' → logprob: -18.518150329589844

Token 898: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -15.875
    3. '(i' → logprob: -17.875
    4. '[' → logprob: -18.75
    5. '   ' → logprob: -20.0
    6. '[
' → logprob: -20.125
    7. '{i' → logprob: -21.0
    8. '```' → logprob: -21.5
    9. ' [' → logprob: -21.625
    10. '[I' → logprob: -22.375

Token 899: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002727793762460351
    2. ' +' → logprob: -8.250272750854492
    3. '[' → logprob: -11.500272750854492
    4. '+
' → logprob: -14.125272750854492
    5. '1' → logprob: -15.000272750854492
    6. '＋' → logprob: -16.375272750854492
    7. '```' → logprob: -16.625272750854492
    8. '+i' → logprob: -17.125272750854492
    9. '[next' → logprob: -17.625272750854492
    10. ''+' → logprob: -17.750272750854492

Token 900: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.456358823925257e-05
    2. ' ' → logprob: -9.750064849853516
    3. '```' → logprob: -12.750064849853516
    4. '           ' → logprob: -14.375064849853516
    5. '
' → logprob: -14.562564849853516
    6. '2' → logprob: -14.687564849853516
    7. '[' → logprob: -15.625064849853516
    8. '   ' → logprob: -15.687564849853516
    9. '+' → logprob: -15.812564849853516
    10. '                   ' → logprob: -15.937564849853516

Token 901: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -11.875009536743164
    3. '```' → logprob: -13.750009536743164
    4. '   ' → logprob: -14.812509536743164
    5. '
' → logprob: -15.312509536743164
    6. '           ' → logprob: -15.562509536743164
    7. '+' → logprob: -15.687509536743164
    8. '       ' → logprob: -16.312509536743164
    9. '``' → logprob: -16.812509536743164
    10. '[' → logprob: -16.875009536743164

Token 902: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.357216477394104
    2. '<=' → logprob: -1.357216477394104
    3. ' <=' → logprob: -3.2322163581848145
    4. ')<=' → logprob: -6.6072163581848145
    5. ')' → logprob: -7.4822163581848145
    6. '```' → logprob: -7.9822163581848145
    7. '       ' → logprob: -8.232216835021973
    8. '):
' → logprob: -8.357216835021973
    9. ')
' → logprob: -8.857216835021973
    10. '
' → logprob: -8.857216835021973

Token 903: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001474748714827001
    2. 'if' → logprob: -6.751474857330322
    3. ' if' → logprob: -9.001474380493164
    4. '<|end|>' → logprob: -9.126474380493164
    5. '       ' → logprob: -10.501474380493164
    6. '```' → logprob: -11.126474380493164
    7. '          ' → logprob: -11.626474380493164
    8. '<=' → logprob: -11.876474380493164
    9. '[' → logprob: -13.251474380493164
    10. '               ' → logprob: -13.251474380493164

Token 904: ' B' (ID: 418)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07124844938516617
    2. '           ' → logprob: -2.8212485313415527
    3. ' if' → logprob: -4.696248531341553
    4. '```' → logprob: -9.321248054504395
    5. '=' → logprob: -12.321248054504395
    6. '==' → logprob: -12.571248054504395
    7. '<=' → logprob: -12.571248054504395
    8. '       ' → logprob: -12.821248054504395
    9. '          ' → logprob: -13.821248054504395
    10. '``' → logprob: -14.321248054504395

Token 905: ' =' (ID: 314)
  Prédit: 'reak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reak' → logprob: -0.04887155070900917
    2. 'REAK' → logprob: -4.0488715171813965
    3. '           ' → logprob: -4.5488715171813965
    4. '=' → logprob: -4.7988715171813965
    5. '==' → logprob: -6.1738715171813965
    6. '[' → logprob: -6.2988715171813965
    7. '               ' → logprob: -6.4238715171813965
    8. ' =' → logprob: -6.7988715171813965
    9. '       ' → logprob: -6.9238715171813965
    10. '+=' → logprob: -7.2988715171813965

Token 906: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.5422835946083069
    2. 'beam' → logprob: -1.417283535003662
    3. 'i' → logprob: -2.042283535003662
    4. '[i' → logprob: -4.292283535003662
    5. 'heap' → logprob: -4.917283535003662
    6. ' cum' → logprob: -5.542283535003662
    7. 'm' → logprob: -5.667283535003662
    8. '[' → logprob: -5.792283535003662
    9. 'min' → logprob: -5.792283535003662
    10. '(i' → logprob: -5.917283535003662

Token 907: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -8.65707261255011e-06
    2. '[i' → logprob: -12.125008583068848
    3. 'i' → logprob: -12.875008583068848
    4. '[min' → logprob: -15.375008583068848
    5. 'max' → logprob: -15.500008583068848
    6. '[' → logprob: -16.125009536743164
    7. '_min' → logprob: -17.000009536743164
    8. '   ' → logprob: -17.375009536743164
    9. ' min' → logprob: -17.500009536743164
    10. 'm' → logprob: -18.625009536743164

Token 908: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013392893597483635
    2. '[m' → logprob: -7.126339435577393
    3. '[' → logprob: -7.876339435577393
    4. '[end' → logprob: -9.626338958740234
    5. '[start' → logprob: -10.501338958740234
    6. '   ' → logprob: -11.501338958740234
    7. '[min' → logprob: -11.501338958740234
    8. '[:' → logprob: -12.001338958740234
    9. '[B' → logprob: -12.876338958740234
    10. '[len' → logprob: -12.876338958740234

Token 909: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5313742160797119
    2. '+' → logprob: -0.9063742160797119
    3. ' +' → logprob: -5.906373977661133
    4. '+i' → logprob: -6.281373977661133
    5. ']>' → logprob: -6.656373977661133
    6. ']
' → logprob: -7.656373977661133
    7. ']==' → logprob: -8.031373977661133
    8. ']>=' → logprob: -8.281373977661133
    9. 'i' → logprob: -8.656373977661133
    10. '[i' → logprob: -8.656373977661133

Token 910: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2762428822461516e-05
    2. ' ' → logprob: -10.250052452087402
    3. '2' → logprob: -11.125052452087402
    4. '```' → logprob: -13.625052452087402
    5. '   ' → logprob: -14.000052452087402
    6. '`' → logprob: -17.00005340576172
    7. '``' → logprob: -17.12505340576172
    8. '       ' → logprob: -17.25005340576172
    9. '  ' → logprob: -17.31255340576172
    10. '１' → logprob: -17.37505340576172

Token 911: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3676733690081164e-05
    2. '2' → logprob: -11.12502384185791
    3. ' ' → logprob: -11.75002384185791
    4. '   ' → logprob: -15.12502384185791
    5. '```' → logprob: -15.12502384185791
    6. '１' → logprob: -17.312522888183594
    7. '       ' → logprob: -17.875022888183594
    8. '``' → logprob: -17.937522888183594
    9. '۱' → logprob: -18.062522888183594
    10. '0' → logprob: -18.062522888183594

Token 912: ']
' (ID: 1592)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5199463963508606
    2. 'if' → logprob: -1.8949463367462158
    3. '
' → logprob: -2.894946336746216
    4. ']' → logprob: -3.019946336746216
    5. ')' → logprob: -3.519946336746216
    6. '<|end|>' → logprob: -3.644946336746216
    7. '+' → logprob: -4.019946575164795
    8. '           ' → logprob: -4.144946575164795
    9. '   ' → logprob: -4.894946575164795
    10. '[' → logprob: -5.019946575164795

Token 913: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007419686880894005
    2. ' if' → logprob: -8.000741958618164
    3. '<|end|>' → logprob: -8.625741958618164
    4. 'if' → logprob: -8.750741958618164
    5. '       ' → logprob: -10.625741958618164
    6. '   ' → logprob: -11.000741958618164
    7. ')' → logprob: -12.375741958618164
    8. '               ' → logprob: -12.500741958618164
    9. '[' → logprob: -12.625741958618164
    10. ',' → logprob: -12.750741958618164

Token 914: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1998009979724884
    2. '           ' → logprob: -1.824800968170166
    3. '       ' → logprob: -4.699800968170166
    4. ' if' → logprob: -4.824800968170166
    5. '   ' → logprob: -5.949800968170166
    6. '```' → logprob: -10.199801445007324
    7. 'print' → logprob: -10.324801445007324
    8. '	if' → logprob: -11.324801445007324
    9. 'test' → logprob: -11.949801445007324
    10. 'for' → logprob: -12.574801445007324

Token 915: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.14277219772338867
    2. ' test' → logprob: -2.0177721977233887
    3. '(test' → logprob: -10.392772674560547
    4. 'B' → logprob: -11.267772674560547
    5. 'S' → logprob: -11.767772674560547
    6. 'seg' → logprob: -11.767772674560547
    7. 'not' → logprob: -12.267772674560547
    8. ' ' → logprob: -12.392772674560547
    9. '   ' → logprob: -12.642772674560547
    10. ' seg' → logprob: -12.892772674560547

Token 916: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007404190837405622
    2. ' <=' → logprob: -8.000740051269531
    3. '           ' → logprob: -8.625740051269531
    4. '<=' → logprob: -8.875740051269531
    5. '   ' → logprob: -10.250740051269531
    6. '               ' → logprob: -10.875740051269531
    7. '                   ' → logprob: -12.125740051269531
    8. '       ' → logprob: -12.875740051269531
    9. '```' → logprob: -13.000740051269531
    10. '		' → logprob: -13.250740051269531

Token 917: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2519608736038208
    2. '<=' → logprob: -1.5019608736038208
    3. '           ' → logprob: -11.626960754394531
    4. '   ' → logprob: -11.626960754394531
    5. '<' → logprob: -12.876960754394531
    6. '==' → logprob: -13.126960754394531
    7. ' ==' → logprob: -13.251960754394531
    8. ' <' → logprob: -13.501960754394531
    9. '          ' → logprob: -13.751960754394531
    10. '       ' → logprob: -13.876960754394531

Token 918: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01603648066520691
    2. ' ' → logprob: -4.141036510467529
    3. '   ' → logprob: -14.016036033630371
    4. '  ' → logprob: -15.266036033630371
    5. '    ' → logprob: -15.641036033630371
    6. 'B' → logprob: -15.891036033630371
    7. 'data' → logprob: -16.141036987304688
    8. '1' → logprob: -16.328536987304688
    9. '```' → logprob: -16.453536987304688
    10. '10' → logprob: -16.766036987304688

Token 919: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.37508487701416
    3. 'B' → logprob: -16.500085830688477
    4. '   ' → logprob: -16.500085830688477
    5. '```' → logprob: -16.750085830688477
    6. '  ' → logprob: -17.500085830688477
    7. '1' → logprob: -17.562585830688477
    8. '    ' → logprob: -17.875085830688477
    9. '10' → logprob: -18.062585830688477
    10. 'S' → logprob: -18.062585830688477

Token 920: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6677932739257812
    2. ' and' → logprob: -0.7927932739257812
    3. ':
' → logprob: -3.6677932739257812
    4. '           ' → logprob: -5.667793273925781
    5. '       ' → logprob: -6.167793273925781
    6. '<|end|>' → logprob: -6.292793273925781
    7. 'and' → logprob: -7.417793273925781
    8. '               ' → logprob: -7.667793273925781
    9. ',' → logprob: -8.417793273925781
    10. '   ' → logprob: -9.292793273925781

Token 921: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.025182751938700676
    2. '           ' → logprob: -4.150182723999023
    3. '               ' → logprob: -5.775182723999023
    4. '       ' → logprob: -6.400182723999023
    5. 'and' → logprob: -6.400182723999023
    6. ':' → logprob: -6.650182723999023
    7. ':
' → logprob: -6.775182723999023
    8. '   ' → logprob: -10.025182723999023
    9. '              ' → logprob: -10.025182723999023
    10. '          ' → logprob: -10.275182723999023

Token 922: ' t' (ID: 260)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5837824940681458
    2. 'ans' → logprob: -0.8337824940681458
    3. '           ' → logprob: -5.20878267288208
    4. 'print' → logprob: -6.70878267288208
    5. '	ans' → logprob: -7.33378267288208
    6. 'break' → logprob: -9.083782196044922
    7. '   ' → logprob: -9.458782196044922
    8. ' print' → logprob: -9.458782196044922
    9. '       ' → logprob: -9.708782196044922
    10. ' break' → logprob: -10.083782196044922

Token 923: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30407193303108215
    2. ' ans' → logprob: -2.8040719032287598
    3. '=' → logprob: -3.0540719032287598
    4. '           ' → logprob: -3.1790719032287598
    5. '       ' → logprob: -3.4290719032287598
    6. 'ans' → logprob: -4.17907190322876
    7. '        ' → logprob: -4.30407190322876
    8. 'r' → logprob: -4.92907190322876
    9. 'ab' → logprob: -5.05407190322876
    10. ' if' → logprob: -5.42907190322876

Token 924: ' abs' (ID: 8443)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03574995696544647
    2. '(i' → logprob: -4.410749912261963
    3. ' i' → logprob: -4.410749912261963
    4. 'beam' → logprob: -4.910749912261963
    5. '(' → logprob: -7.035749912261963
    6. '[i' → logprob: -7.660749912261963
    7. ' (' → logprob: -8.035750389099121
    8. '   ' → logprob: -8.410750389099121
    9. 'cum' → logprob: -8.410750389099121
    10. ' beam' → logprob: -8.535750389099121

Token 925: '(test' (ID: 16066)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5271594524383545
    2. '(B' → logprob: -1.2771594524383545
    3. '(test' → logprob: -2.7771594524383545
    4. '(S' → logprob: -3.4021594524383545
    5. '(data' → logprob: -3.9021594524383545
    6. '(c' → logprob: -5.277159690856934
    7. '(i' → logprob: -6.152159690856934
    8. 'B' → logprob: -6.402159690856934
    9. '(t' → logprob: -6.652159690856934
    10. '(min' → logprob: -6.777159690856934

Token 926: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.022975344210863113
    2. ')' → logprob: -4.272975444793701
    3. '[i' → logprob: -5.147975444793701
    4. ' -' → logprob: -7.272975444793701
    5. '[' → logprob: -7.397975444793701
    6. '(i' → logprob: -7.772975444793701
    7. ' =' → logprob: -8.272974967956543
    8. ']' → logprob: -8.647974967956543
    9. '-' → logprob: -9.272974967956543
    10. '   ' → logprob: -9.272974967956543

Token 927: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048878706991672516
    2. ')
' → logprob: -3.4238786697387695
    3. '+' → logprob: -4.7988786697387695
    4. ' +' → logprob: -5.6738786697387695
    5. '<|end|>' → logprob: -6.5488786697387695
    6. ')+' → logprob: -6.7988786697387695
    7. '               ' → logprob: -8.04887866973877
    8. '           ' → logprob: -9.42387866973877
    9. '                   ' → logprob: -9.92387866973877
    10. '-' → logprob: -9.92387866973877

Token 928: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5495544672012329
    2. '<|end|>' → logprob: -1.174554467201233
    3. '                   ' → logprob: -2.6745543479919434
    4. ')' → logprob: -3.5495543479919434
    5. '           ' → logprob: -5.799554347991943
    6. '                               ' → logprob: -6.174554347991943
    7. '<|end|>' → logprob: -6.299554347991943
    8. '                       ' → logprob: -6.674554347991943
    9. ',' → logprob: -7.049554347991943
    10. '```' → logprob: -7.049554347991943

Token 929: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7711244821548462
    2. ' if' → logprob: -0.7711244821548462
    3. 'if' (adapté à ' if') → logprob: -3.0211243629455566
    4. '           ' → logprob: -4.521124362945557
    5. 'print' → logprob: -6.271124362945557
    6. '<|end|>' → logprob: -6.271124362945557
    7. 'heap' → logprob: -6.271124362945557
    8. ' for' → logprob: -7.146124362945557
    9. '                   ' → logprob: -7.271124362945557
    10. ')' → logprob: -7.271124362945557

Token 930: ' B' (ID: 418)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.14530238509178162
    2. ' t' → logprob: -2.3953022956848145
    3. 'B' → logprob: -3.6453022956848145
    4. 'ans' → logprob: -5.2703022956848145
    5. '(t' → logprob: -6.0203022956848145
    6. 'S' → logprob: -6.0203022956848145
    7. ' B' → logprob: -6.3953022956848145
    8. ' ans' → logprob: -6.3953022956848145
    9. '(ans' → logprob: -6.5203022956848145
    10. 'test' → logprob: -7.3953022956848145

Token 931: ' *' (ID: 425)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7212663888931274
    2. '<' → logprob: -1.5962663888931274
    3. ' <=' → logprob: -2.221266269683838
    4. ' >=' → logprob: -2.721266269683838
    5. '<=' → logprob: -3.096266269683838
    6. '<t' → logprob: -3.096266269683838
    7. '>=' → logprob: -3.346266269683838
    8. ' >' → logprob: -5.471266269683838
    9. '>' → logprob: -5.596266269683838
    10. '[' → logprob: -7.471266269683838

Token 932: ' ans' (ID: 3345)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3499224781990051
    2. 't' → logprob: -1.4749224185943604
    3. ' m' → logprob: -3.7249224185943604
    4. 'm' → logprob: -3.9749224185943604
    5. ' (' → logprob: -4.7249226570129395
    6. '(t' → logprob: -5.3499226570129395
    7. '-' → logprob: -6.2249226570129395
    8. ' -' → logprob: -6.3499226570129395
    9. ' ' → logprob: -6.8499226570129395
    10. '(' → logprob: -6.9749226570129395

Token 933: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009576048702001572
    2. '[-' → logprob: -5.384575843811035
    3. '[t' → logprob: -6.009575843811035
    4. '[i' → logprob: -6.634575843811035
    5. '[m' → logprob: -7.134575843811035
    6. '[len' → logprob: -8.384575843811035
    7. '```' → logprob: -10.259575843811035
    8. '``' → logprob: -10.634575843811035
    9. '[min' → logprob: -10.759575843811035
    10. 't' → logprob: -10.759575843811035

Token 934: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020148009061813354
    2. '0' → logprob: -4.020147800445557
    3. '-' → logprob: -6.270147800445557
    4. '   ' → logprob: -10.145148277282715
    5. ' -' → logprob: -10.895148277282715
    6. '```' → logprob: -11.270148277282715
    7. ' ' → logprob: -11.395148277282715
    8. 'm' → logprob: -13.145148277282715
    9. '[' → logprob: -13.270148277282715
    10. '#' → logprob: -13.332648277282715

Token 935: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04305833578109741
    2. '[' → logprob: -3.543058395385742
    3. '<' → logprob: -5.293058395385742
    4. ' >' → logprob: -5.418058395385742
    5. '```' → logprob: -7.293058395385742
    6. '<t' → logprob: -7.418058395385742
    7. '+' → logprob: -7.418058395385742
    8. '>' → logprob: -7.918058395385742
    9. ' <=' → logprob: -8.168058395385742
    10. ' ' → logprob: -8.668058395385742

Token 936: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.45929959416389465
    2. '<' → logprob: -1.7092995643615723
    3. ' >' → logprob: -1.8342995643615723
    4. '>' → logprob: -4.334299564361572
    5. '<t' → logprob: -4.584299564361572
    6. ' <=' → logprob: -6.209299564361572
    7. '```' → logprob: -7.959299564361572
    8. '<=' → logprob: -8.33430004119873
    9. '[' → logprob: -8.33430004119873
    10. '<int' → logprob: -8.70930004119873

Token 937: ' ans' (ID: 3345)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10818074643611908
    2. 'm' → logprob: -2.4831807613372803
    3. 'ans' → logprob: -4.358180522918701
    4. 'B' → logprob: -5.358180522918701
    5. '(t' → logprob: -7.358180522918701
    6. '(ans' → logprob: -8.10818099975586
    7. 'b' → logprob: -8.35818099975586
    8. ' t' → logprob: -8.85818099975586
    9. '1' → logprob: -9.98318099975586
    10. ' ans' → logprob: -10.10818099975586

Token 938: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02266586571931839
    2. '[' → logprob: -3.8976659774780273
    3. '0' → logprob: -6.272665977478027
    4. '```' → logprob: -9.272665977478027
    5. ' ' → logprob: -9.772665977478027
    6. 't' → logprob: -10.022665977478027
    7. '   ' → logprob: -11.897665977478027
    8. '
' → logprob: -11.897665977478027
    9. '#' → logprob: -11.897665977478027
    10. 'm' → logprob: -12.272665977478027

Token 939: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16629473865032196
    2. '0' → logprob: -1.9162946939468384
    3. '2' → logprob: -6.166294574737549
    4. 'm' → logprob: -6.166294574737549
    5. '-' → logprob: -6.666294574737549
    6. 't' → logprob: -8.291295051574707
    7. 'i' → logprob: -8.541295051574707
    8. '[' → logprob: -9.791295051574707
    9. '```' → logprob: -11.103795051574707
    10. '   ' → logprob: -11.166295051574707

Token 940: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3955446779727936
    2. '*t' → logprob: -1.1455446481704712
    3. ':' → logprob: -5.895544528961182
    4. '*' → logprob: -6.020544528961182
    5. ',' → logprob: -6.145544528961182
    6. 't' → logprob: -7.645544528961182
    7. ':
' → logprob: -8.77054500579834
    8. ',t' → logprob: -8.89554500579834
    9. ':t' → logprob: -9.14554500579834
    10. ' and' → logprob: -9.27054500579834

Token 941: ' *' (ID: 425)
  Prédit: '*t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.8470885157585144
    2. ' *' → logprob: -1.2220885753631592
    3. '*' → logprob: -2.222088575363159
    4. ':' → logprob: -2.472088575363159
    5. ' and' → logprob: -3.347088575363159
    6. ' or' → logprob: -4.34708833694458
    7. 't' → logprob: -4.47208833694458
    8. '+' → logprob: -5.47208833694458
    9. ',' → logprob: -5.59708833694458
    10. 'and' → logprob: -6.09708833694458

Token 942: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0008667988586239517
    2. '(t' → logprob: -7.125866889953613
    3. ' t' → logprob: -9.875866889953613
    4. '(' → logprob: -12.125866889953613
    5. '`t' → logprob: -13.625866889953613
    6. 'B' → logprob: -13.750866889953613
    7. '   ' → logprob: -14.250866889953613
    8. 'm' → logprob: -14.750866889953613
    9. 'b' → logprob: -14.750866889953613
    10. ' (' → logprob: -15.125866889953613

Token 943: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10174158215522766
    2. ':
' → logprob: -2.3517415523529053
    3. '[' → logprob: -7.101741790771484
    4. '):' → logprob: -8.851741790771484
    5. '):
' → logprob: -9.226741790771484
    6. '=' → logprob: -9.476741790771484
    7. ' or' → logprob: -9.726741790771484
    8. '           ' → logprob: -9.851741790771484
    9. '       ' → logprob: -9.851741790771484
    10. '==' → logprob: -10.476741790771484

Token 944: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.1594353914260864
    2. '               ' → logprob: -1.5344353914260864
    3. 'ans' → logprob: -1.6594353914260864
    4. ' ans' → logprob: -1.6594353914260864
    5. '(ans' → logprob: -3.534435272216797
    6. '```' → logprob: -3.534435272216797
    7. '           ' → logprob: -4.409435272216797
    8. '                       ' → logprob: -4.784435272216797
    9. '[' → logprob: -6.284435272216797
    10. '                               ' → logprob: -6.409435272216797

Token 945: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.018158959224820137
    2. ' ans' → logprob: -4.018158912658691
    3. '                   ' → logprob: -12.268158912658691
    4. '	ans' → logprob: -13.018158912658691
    5. '(ans' → logprob: -13.768158912658691
    6. '_ans' → logprob: -14.143158912658691
    7. '```' → logprob: -15.143158912658691
    8. 'answer' → logprob: -17.768159866333008
    9. '                       ' → logprob: -17.893159866333008
    10. '   ' → logprob: -18.018159866333008

Token 946: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39929696917533875
    2. ' =' → logprob: -1.1492969989776611
    3. '=' → logprob: -4.399296760559082
    4. '=[' → logprob: -10.399296760559082
    5. ' [' → logprob: -10.649296760559082
    6. ' =[' → logprob: -11.899296760559082
    7. ',' → logprob: -13.524296760559082
    8. '```' → logprob: -15.149296760559082
    9. '＝' → logprob: -15.524296760559082
    10. '   ' → logprob: -15.899296760559082

Token 947: ' [' (ID: 723)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.002018451690673828
    2. '[' → logprob: -6.377018451690674
    3. '[m' → logprob: -8.502017974853516
    4. ' [' → logprob: -9.502017974853516
    5. '(t' → logprob: -10.877017974853516
    6. '[
' → logprob: -11.627017974853516
    7. '[(' → logprob: -12.752017974853516
    8. 't' → logprob: -13.627017974853516
    9. '   ' → logprob: -13.752017974853516
    10. '[c' → logprob: -13.877017974853516

Token 948: 't' (ID: 83)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.016096899285912514
    2. 't' → logprob: -4.391097068786621
    3. 'm' → logprob: -5.641097068786621
    4. '   ' → logprob: -11.641097068786621
    5. ' B' → logprob: -12.016097068786621
    6. 'ans' → logprob: -12.141097068786621
    7. 'test' → logprob: -12.891097068786621
    8. 'b' → logprob: -13.266097068786621
    9. '1' → logprob: -13.391097068786621
    10. '-B' → logprob: -14.016097068786621

Token 949: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001507405104348436
    2. ' ,' → logprob: -9.625150680541992
    3. ',
' → logprob: -10.500150680541992
    4. ',B' → logprob: -11.125150680541992
    5. ',m' → logprob: -11.375150680541992
    6. ',b' → logprob: -12.625150680541992
    7. ',int' → logprob: -12.625150680541992
    8. '           ' → logprob: -12.625150680541992
    9. '```' → logprob: -12.625150680541992
    10. '                   ' → logprob: -13.000150680541992

Token 950: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0006084367632865906
    2. 'm' → logprob: -7.750608444213867
    3. ' B' → logprob: -9.500608444213867
    4. '1' → logprob: -9.875608444213867
    5. '(' → logprob: -11.750608444213867
    6. '(B' → logprob: -12.000608444213867
    7. '   ' → logprob: -12.125608444213867
    8. 'ans' → logprob: -12.250608444213867
    9. 'beam' → logprob: -12.625608444213867
    10. 'b' → logprob: -13.000608444213867

Token 951: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007498288759961724
    2. ']
' → logprob: -7.3757500648498535
    3. ' ]' → logprob: -9.500749588012695
    4. '   ' → logprob: -11.250749588012695
    5. '               ' → logprob: -11.250749588012695
    6. '                   ' → logprob: -11.500749588012695
    7. '       ' → logprob: -12.375749588012695
    8. '           ' → logprob: -12.750749588012695
    9. '[' → logprob: -13.625749588012695
    10. ']

' → logprob: -14.125749588012695

Token 952: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3338319957256317
    2. '   ' → logprob: -1.583832025527954
    3. '       ' → logprob: -3.458832025527954
    4. '    ' → logprob: -4.083831787109375
    5. '<|end|>' → logprob: -4.208831787109375
    6. '           ' → logprob: -5.958831787109375
    7. 'print' → logprob: -6.458831787109375
    8. ' ' → logprob: -6.708831787109375
    9. '```' → logprob: -6.708831787109375
    10. '  ' → logprob: -6.958831787109375

Token 953: ' start' (ID: 1604)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1149565726518631
    2. '<|end|>' → logprob: -2.7399566173553467
    3. 'print' → logprob: -3.6149566173553467
    4. '   ' → logprob: -4.614956378936768
    5. '```' → logprob: -6.989956378936768
    6. '    ' → logprob: -7.114956378936768
    7. '       ' → logprob: -7.114956378936768
    8. ']' → logprob: -7.239956378936768
    9. 'return' → logprob: -7.739956378936768
    10. '+' → logprob: -7.739956378936768

Token 954: '_arr' (ID: 25121)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8183708190917969
    2. ' +=' → logprob: -1.1933708190917969
    3. '=' → logprob: -1.9433708190917969
    4. ' =' → logprob: -2.318370819091797
    5. ',' → logprob: -4.318370819091797
    6. '=end' → logprob: -8.818370819091797
    7. ',end' → logprob: -9.068370819091797
    8. '+' → logprob: -9.318370819091797
    9. '-=' → logprob: -9.318370819091797
    10. ' -=' → logprob: -9.443370819091797

Token 955: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4603346884250641
    2. '=' → logprob: -1.0853346586227417
    3. 'ay' → logprob: -3.8353347778320312
    4. ',' → logprob: -5.710334777832031
    5. 'y' → logprob: -6.085334777832031
    6. '=[]' → logprob: -6.335334777832031
    7. 'ays' → logprob: -7.460334777832031
    8. '[' → logprob: -7.710334777832031
    9. '[]' → logprob: -8.835334777832031
    10. 'a' → logprob: -9.335334777832031

Token 956: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.061055563390254974
    2. '0' → logprob: -3.6860556602478027
    3. '[]' → logprob: -3.8110556602478027
    4. '[start' → logprob: -5.686055660247803
    5. '[m' → logprob: -5.936055660247803
    6. '[N' → logprob: -6.561055660247803
    7. '[-' → logprob: -6.811055660247803
    8. '[end' → logprob: -6.811055660247803
    9. '[len' → logprob: -7.186055660247803
    10. '[i' → logprob: -8.436055183410645

Token 957: '1' (ID: 16)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.07746852934360504
    2. 'que' → logprob: -3.5774686336517334
    3. 'heap' → logprob: -4.077468395233154
    4. '10' → logprob: -4.952468395233154
    5. '1' → logprob: -5.077468395233154
    6. '100' → logprob: -5.327468395233154
    7. 'queue' → logprob: -5.577468395233154
    8. 'ans' → logprob: -6.827468395233154
    9. 'q' → logprob: -6.952468395233154
    10. '(' → logprob: -7.077468395233154

Token 958: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009836840443313122
    2. '<|end|>' → logprob: -5.509836673736572
    3. ',' → logprob: -5.884836673736572
    4. '+' → logprob: -7.009836673736572
    5. ' ]' → logprob: -7.759836673736572
    6. ' +' → logprob: -7.884836673736572
    7. ']+' → logprob: -8.13483715057373
    8. ']
' → logprob: -8.25983715057373
    9. '<|end|>' → logprob: -8.63483715057373
    10. '0' → logprob: -9.13483715057373

Token 959: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 960: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3217679560184479
    2. '(N' → logprob: -1.5717679262161255
    3. '(m' → logprob: -3.071768045425415
    4. 'm' → logprob: -4.321767807006836
    5. '(' → logprob: -4.946767807006836
    6. ' (' → logprob: -8.821767807006836
    7. '100' → logprob: -8.946767807006836
    8. '101' → logprob: -9.196767807006836
    9. '(n' → logprob: -9.571767807006836
    10. '   ' → logprob: -9.821767807006836

Token 961: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 962: '   ' (ID: 271)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3563351333141327
    2. 'for' → logprob: -2.606335163116455
    3. 'idx' → logprob: -2.606335163116455
    4. 'heap' → logprob: -3.356335163116455
    5. 'i' → logprob: -3.481335163116455
    6. '   ' → logprob: -3.731335163116455
    7. 'count' → logprob: -3.731335163116455
    8. 'pos' → logprob: -4.731335163116455
    9. 'k' → logprob: -4.981335163116455
    10. 'start' → logprob: -5.106335163116455

Token 963: ' end' (ID: 1268)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0671916007995605
    2. 'heap' → logprob: -1.6921916007995605
    3. 'for' → logprob: -2.1921916007995605
    4. 'cnt' → logprob: -2.4421916007995605
    5. 'idx' → logprob: -2.5671916007995605
    6. 'k' → logprob: -3.3171916007995605
    7. 'num' → logprob: -3.3171916007995605
    8. 'count' → logprob: -4.1921916007995605
    9. 'end' (adapté à ' end') → logprob: -4.1921916007995605
    10. '   ' → logprob: -4.3171916007995605

Token 964: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0003663212701212615
    2. '_' → logprob: -9.2503662109375
    3. 'arr' → logprob: -9.3753662109375
    4. ' =' → logprob: -9.8753662109375
    5. 'Arr' → logprob: -10.3753662109375
    6. '   ' → logprob: -10.6253662109375
    7. '=' → logprob: -10.8753662109375
    8. '[' → logprob: -11.2503662109375
    9. '_idx' → logprob: -11.6253662109375
    10. '```' → logprob: -12.0003662109375

Token 965: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759875178337097
    2. ' =' → logprob: -0.8259875178337097
    3. '=[' → logprob: -10.325987815856934
    4. '=[]' → logprob: -11.825987815856934
    5. '[' → logprob: -12.575987815856934
    6. ' =[' → logprob: -13.700987815856934
    7. '<|end|>' → logprob: -13.825987815856934
    8. '   ' → logprob: -14.950987815856934
    9. ',' → logprob: -15.200987815856934
    10. '=None' → logprob: -15.325987815856934

Token 966: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.07314346730709076
    2. '[' → logprob: -2.698143482208252
    3. ' [-' → logprob: -6.698143482208252
    4. '[N' → logprob: -6.698143482208252
    5. 'N' → logprob: -7.948143482208252
    6. ' [' → logprob: -8.198143005371094
    7. '[m' → logprob: -9.448143005371094
    8. ' N' → logprob: -11.698143005371094
    9. '   ' → logprob: -12.073143005371094
    10. '[start' → logprob: -12.948143005371094

Token 967: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002942287246696651
    2. 'N' → logprob: -9.00029468536377
    3. 'm' → logprob: -9.62529468536377
    4. '(' → logprob: -9.75029468536377
    5. '2' → logprob: -10.62529468536377
    6. '(m' → logprob: -12.25029468536377
    7. '0' → logprob: -12.62529468536377
    8. '(N' → logprob: -13.00029468536377
    9. ' ' → logprob: -13.25029468536377
    10. '(-' → logprob: -13.37529468536377

Token 968: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010130604729056358
    2. '*' → logprob: -5.510130405426025
    3. '   ' → logprob: -6.260130405426025
    4. ' *' → logprob: -6.510130405426025
    5. '[' → logprob: -7.635130405426025
    6. '*N' → logprob: -7.635130405426025
    7. '[]' → logprob: -8.260130882263184
    8. '[N' → logprob: -8.385130882263184
    9. '<|end|>' → logprob: -8.510130882263184
    10. ' ]' → logprob: -8.510130882263184

Token 969: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8087091445922852
    2. '[]' → logprob: -1.9337091445922852
    3. ' *' → logprob: -2.183709144592285
    4. '*' → logprob: -2.308709144592285
    5. '[N' → logprob: -2.683709144592285
    6. '   ' → logprob: -3.558709144592285
    7. 'N' → logprob: -3.808709144592285
    8. ' [' → logprob: -4.183709144592285
    9. '(N' → logprob: -4.683709144592285
    10. ' =' → logprob: -4.808709144592285

Token 970: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00022761584841646254
    2. '(' → logprob: -8.875227928161621
    3. '(N' → logprob: -9.625227928161621
    4. 'm' → logprob: -11.125227928161621
    5. ' N' → logprob: -12.875227928161621
    6. 'M' → logprob: -13.625227928161621
    7. '1' → logprob: -13.875227928161621
    8. '```' → logprob: -14.375227928161621
    9. '(m' → logprob: -14.750227928161621
    10. '   ' → logprob: -15.500227928161621

Token 971: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7370400428771973
    2. 'i' → logprob: -0.8620400428771973
    3. 'start' → logprob: -3.7370400428771973
    4. 'idx' → logprob: -4.487040042877197
    5. '```' → logprob: -4.612040042877197
    6. '<|end|>' → logprob: -4.737040042877197
    7. 'cnt' → logprob: -4.987040042877197
    8. '
' → logprob: -5.237040042877197
    9. ' for' → logprob: -5.487040042877197
    10. '   ' → logprob: -5.487040042877197

Token 972: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0792260691523552
    2. '```' → logprob: -3.079226016998291
    3. ' for' → logprob: -4.204226016998291
    4. 'for' → logprob: -4.829226016998291
    5. 'i' → logprob: -6.579226016998291
    6. '<|end|>' → logprob: -6.704226016998291
    7. '	for' → logprob: -6.829226016998291
    8. 'cnt' → logprob: -7.079226016998291
    9. '	cnt' → logprob: -7.579226016998291
    10. '[' → logprob: -7.954226016998291

Token 973: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3937716484069824
    2. 'for' → logprob: -1.7687716484069824
    3. 'i' → logprob: -2.0187716484069824
    4. 'cnt' → logprob: -5.143771648406982
    5. ' for' → logprob: -5.268771648406982
    6. 'k' → logprob: -5.518771648406982
    7. 'start' → logprob: -6.768771648406982
    8. 'idx' → logprob: -7.268771648406982
    9. ' i' → logprob: -7.268771648406982
    10. '       ' → logprob: -7.268771648406982

Token 974: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08645173162221909
    2. '=' → logprob: -2.586451768875122
    3. '.append' → logprob: -5.211451530456543
    4. ',' → logprob: -7.211451530456543
    5. '=[]' → logprob: -7.211451530456543
    6. '   ' → logprob: -8.836451530456543
    7. '[' → logprob: -9.336451530456543
    8. '.clear' → logprob: -9.711451530456543
    9. '.' → logprob: -9.836451530456543
    10. '.pop' → logprob: -10.211451530456543

Token 975: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0003464289184194058
    2. '[]
' → logprob: -8.125346183776855
    3. '[' → logprob: -10.000346183776855
    4. ' []' → logprob: -13.125346183776855
    5. 'heap' → logprob: -14.125346183776855
    6. '[]}' → logprob: -14.250346183776855
    7. '[]>' → logprob: -14.500346183776855
    8. '[],' → logprob: -14.750346183776855
    9. '[-' → logprob: -15.625346183776855
    10. '[]

' → logprob: -16.125347137451172

Token 976: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012528604827821255
    2. '<|end|>' → logprob: -5.262528419494629
    3. '```' → logprob: -6.137528419494629
    4. 'cnt' → logprob: -6.262528419494629
    5. '       ' → logprob: -7.012528419494629
    6. '  ' → logprob: -7.637528419494629
    7. '    ' → logprob: -7.887528419494629
    8. ' ' → logprob: -8.262528419494629
    9. '0' → logprob: -8.262528419494629
    10. '[' → logprob: -8.512528419494629

Token 977: ' trash' (ID: 26508)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.5206770300865173
    2. '   ' → logprob: -1.395677089691162
    3. 'for' → logprob: -2.270677089691162
    4. 'heap' → logprob: -3.270677089691162
    5. 'import' → logprob: -5.770677089691162
    6. 'count' → logprob: -5.895677089691162
    7. 'S' → logprob: -6.020677089691162
    8. '       ' → logprob: -6.520677089691162
    9. '0' → logprob: -6.895677089691162
    10. ' for' → logprob: -7.020677089691162

Token 978: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2858085334300995
    2. '=' → logprob: -1.5358085632324219
    3. '=[]' → logprob: -3.410808563232422
    4. '=[]
' → logprob: -9.660808563232422
    5. '[]' → logprob: -10.160808563232422
    6. 'heap' → logprob: -10.285808563232422
    7. ',' → logprob: -10.410808563232422
    8. '[' → logprob: -10.535808563232422
    9. '   ' → logprob: -10.785808563232422
    10. ' ' → logprob: -11.160808563232422

Token 979: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01412096619606018
    2. '0' → logprob: -4.764121055603027
    3. '[' → logprob: -5.639121055603027
    4. '{}' → logprob: -6.889121055603027
    5. '[]
' → logprob: -7.264121055603027
    6. 'set' → logprob: -9.639121055603027
    7. '[]}' → logprob: -9.639121055603027
    8. 'heap' → logprob: -10.514121055603027
    9. ' []' → logprob: -10.639121055603027
    10. '[]>' → logprob: -11.639121055603027

Token 980: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44844573736190796
    2. '	for' → logprob: -1.8234457969665527
    3. 'for' → logprob: -2.0734457969665527
    4. ' for' → logprob: -3.5734457969665527
    5. '	while' → logprob: -4.323445796966553
    6. '       ' → logprob: -4.448445796966553
    7. 'while' → logprob: -5.323445796966553
    8. '	' → logprob: -5.448445796966553
    9. '[' → logprob: -5.823445796966553
    10. '	   ' → logprob: -6.073445796966553

Token 981: ' cnt' (ID: 27340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14739878475666046
    2. '   ' → logprob: -2.7723987102508545
    3. 'cnt' (adapté à ' cnt') → logprob: -3.0223987102508545
    4. 'while' → logprob: -4.272398948669434
    5. 'heap' → logprob: -5.897398948669434
    6. 'i' → logprob: -5.897398948669434
    7. '	for' → logprob: -6.647398948669434
    8. ' for' → logprob: -6.772398948669434
    9. '       ' → logprob: -6.772398948669434
    10. 'start' → logprob: -7.397398948669434

Token 982: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519473433494568
    2. '=' → logprob: -1.5019474029541016
    3. '   ' → logprob: -11.626947402954102
    4. '	' → logprob: -12.751947402954102
    5. ',' → logprob: -13.376947402954102
    6. '<|end|>' → logprob: -13.376947402954102
    7. ' +=' → logprob: -13.626947402954102
    8. ' ' → logprob: -14.376947402954102
    9. '    ' → logprob: -15.001947402954102
    10. '+=' → logprob: -15.126947402954102

Token 983: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.65101717156358e-05
    2. ' ' → logprob: -9.250096321105957
    3. 'm' → logprob: -15.375096321105957
    4. '   ' → logprob: -16.625097274780273
    5. '<|end|>' → logprob: -17.375097274780273
    6. '1' → logprob: -17.750097274780273
    7. '[' → logprob: -18.500097274780273
    8. '```' → logprob: -18.625097274780273
    9. '000' → logprob: -18.750097274780273
    10. '00' → logprob: -18.937597274780273

Token 984: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018494461255613714
    2. 'm' → logprob: -8.750185012817383
    3. ' ' → logprob: -10.625185012817383
    4. '1' → logprob: -13.750185012817383
    5. '-' → logprob: -15.625185012817383
    6. ' m' → logprob: -15.750185012817383
    7. 'start' → logprob: -15.875185012817383
    8. '[' → logprob: -16.687685012817383
    9. 'N' → logprob: -16.750185012817383
    10. '10' → logprob: -16.937685012817383

Token 985: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06738656014204025
    2. '<|end|>' → logprob: -3.6923866271972656
    3. '	for' → logprob: -4.317386627197266
    4. '```' → logprob: -4.567386627197266
    5. '[' → logprob: -5.442386627197266
    6. 'for' → logprob: -5.567386627197266
    7. '\t' → logprob: -5.817386627197266
    8. ' for' → logprob: -6.942386627197266
    9. '	while' → logprob: -7.817386627197266
    10. '[]' → logprob: -7.817386627197266

Token 986: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01624702848494053
    2. '	for' → logprob: -4.641246795654297
    3. ' for' → logprob: -6.141246795654297
    4. '	while' → logprob: -6.766246795654297
    5. '```' → logprob: -7.391246795654297
    6. 'for' → logprob: -7.516246795654297
    7. '[' → logprob: -7.641246795654297
    8. '       ' → logprob: -7.891246795654297
    9. '	i' → logprob: -8.641246795654297
    10. '    ' → logprob: -9.016246795654297

Token 987: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.5925240516662598
    2. 'for' → logprob: -0.8425240516662598
    3. 'i' → logprob: -4.34252405166626
    4. 'idx' → logprob: -6.71752405166626
    5. 'start' → logprob: -7.71752405166626
    6. 'pos' → logprob: -7.84252405166626
    7. 'heap' → logprob: -8.217523574829102
    8. 'k' → logprob: -8.217523574829102
    9. 'import' → logprob: -8.342523574829102
    10. '   ' → logprob: -9.092523574829102

Token 988: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759482979774475
    2. ' =' → logprob: -0.8259482979774475
    3. ' +=' → logprob: -12.700948715209961
    4. '+=' → logprob: -13.075948715209961
    5. '   ' → logprob: -13.950948715209961
    6. ',' → logprob: -14.200948715209961
    7. '<|end|>' → logprob: -14.200948715209961
    8. ' ' → logprob: -15.575948715209961
    9. '=
' → logprob: -15.575948715209961
    10. ' =
' → logprob: -15.950948715209961

Token 989: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014163863845169544
    2. ' ' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.264163970947266
    4. ' ' → logprob: -16.764163970947266
    5. '+' → logprob: -17.639163970947266
    6. '=' → logprob: -17.764163970947266
    7. '	' → logprob: -18.014163970947266
    8. 'S' → logprob: -18.139163970947266
    9. '<|end|>' → logprob: -18.264163970947266
    10. '۰' → logprob: -18.576663970947266

Token 990: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.625028610229492
    4. '-' → logprob: -17.750028610229492
    5. 'beam' → logprob: -18.000028610229492
    6. '000' → logprob: -18.375028610229492
    7. 'S' → logprob: -18.500028610229492
    8. '=' → logprob: -18.625028610229492
    9. '00' → logprob: -18.875028610229492
    10. '<|end|>' → logprob: -19.000028610229492

Token 991: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5663976073265076
    2. 'for' → logprob: -0.9413976073265076
    3. ' for' → logprob: -3.6913976669311523
    4. '	for' → logprob: -4.566397666931152
    5. '<|end|>' → logprob: -5.066397666931152
    6. 'i' → logprob: -8.566397666931152
    7. 'while' → logprob: -8.691397666931152
    8. '[' → logprob: -9.316397666931152
    9. '```' → logprob: -9.691397666931152
    10. '	while' → logprob: -9.941397666931152

Token 992: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0584355853497982
    2. '   ' → logprob: -3.4334356784820557
    3. '	for' → logprob: -4.308435440063477
    4. ' for' → logprob: -4.558435440063477
    5. '```' → logprob: -7.933435440063477
    6. '       ' → logprob: -9.183435440063477
    7. 'i' → logprob: -10.058435440063477
    8. 'while' → logprob: -10.558435440063477
    9. '	while' → logprob: -12.058435440063477
    10. '[' → logprob: -12.683435440063477

Token 993: ' data' (ID: 1238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006133131100796163
    2. 'i' → logprob: -8.00061321258545
    3. '   ' → logprob: -8.87561321258545
    4. ' for' → logprob: -9.37561321258545
    5. 'while' → logprob: -10.50061321258545
    6. 'm' → logprob: -11.75061321258545
    7. '       ' → logprob: -12.00061321258545
    8. '```' → logprob: -12.25061321258545
    9. 'idx' → logprob: -13.75061321258545
    10. '           ' → logprob: -13.75061321258545

Token 994: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5503568649291992
    2. '=' → logprob: -1.5503568649291992
    3. '=[]' → logprob: -2.800356864929199
    4. '[' → logprob: -3.175356864929199
    5. '_idx' → logprob: -3.550356864929199
    6. '_index' → logprob: -4.925356864929199
    7. '[]' → logprob: -4.925356864929199
    8. '   ' → logprob: -5.175356864929199
    9. 'idx' → logprob: -5.300356864929199
    10. ',' → logprob: -5.425356864929199

Token 995: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14702405035495758
    2. '=' → logprob: -2.022024154663086
    3. '=[]' → logprob: -5.897024154663086
    4. '[' → logprob: -7.897024154663086
    5. '_' → logprob: -8.147024154663086
    6. ',' → logprob: -8.147024154663086
    7. '[]' → logprob: -9.022024154663086
    8. ']' → logprob: -9.147024154663086
    9. '1' → logprob: -9.272024154663086
    10. '   ' → logprob: -9.397024154663086

Token 996: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09373404085636139
    2. ' [' → logprob: -2.8437340259552
    3. '[data' → logprob: -4.468734264373779
    4. 'data' → logprob: -5.343734264373779
    5. '[]' → logprob: -5.593734264373779
    6. '[min' → logprob: -5.593734264373779
    7. '[-' → logprob: -5.718734264373779
    8. ' data' → logprob: -7.218734264373779
    9. '[start' → logprob: -7.593734264373779
    10. 'beam' → logprob: -7.843734264373779

Token 997: 'ide' (ID: 617)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043088026344776154
    2. '10' → logprob: -3.918087959289551
    3. 'float' → logprob: -5.168087959289551
    4. '-' → logprob: -5.543087959289551
    5. '(' → logprob: -5.918087959289551
    6. 'beam' → logprob: -5.918087959289551
    7. '[]' → logprob: -6.168087959289551
    8. '[' → logprob: -6.918087959289551
    9. 'None' → logprob: -7.418087959289551
    10. '(float' → logprob: -7.668087959289551

Token 998: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.05549686774611473
    2. 'ele' → logprob: -2.93049693107605
    3. '15' → logprob: -8.555497169494629
    4. 'Ele' → logprob: -9.430497169494629
    5. ' ele' → logprob: -9.430497169494629
    6. '**' → logprob: -9.680497169494629
    7. '
' → logprob: -10.180497169494629
    8. '```' → logprob: -10.680497169494629
    9. '-ele' → logprob: -11.180497169494629
    10. '_e' → logprob: -11.180497169494629

Token 999: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018743762746453285
    2. ' for' → logprob: -4.143743991851807
    3. ']*' → logprob: -7.518743991851807
    4. '[:]' → logprob: -7.518743991851807
    5. 'for' → logprob: -7.643743991851807
    6. '<|end|>' → logprob: -8.143743515014648
    7. ',' → logprob: -8.518743515014648
    8. ' ]' → logprob: -8.518743515014648
    9. ' *' → logprob: -8.768743515014648
    10. '   ' → logprob: -9.268743515014648

Token 1000: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7178253531455994
    2. '<|end|>' → logprob: -1.8428254127502441
    3. ' *' → logprob: -2.342825412750244
    4. '*' → logprob: -2.592825412750244
    5. 'for' → logprob: -2.592825412750244
    6. ',' → logprob: -3.092825412750244
    7. ']' → logprob: -3.342825412750244
    8. '
' → logprob: -5.092825412750244
    9. ')' → logprob: -5.717825412750244
    10. '+' → logprob: -5.842825412750244

Token 1001: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006069340277463198
    2. '(N' → logprob: -5.256069183349609
    3. '(' → logprob: -7.131069183349609
    4. ' (' → logprob: -11.25606918334961
    5. '2' → logprob: -12.00606918334961
    6. ' N' → logprob: -12.25606918334961
    7. '   ' → logprob: -12.38106918334961
    8. '(n' → logprob: -13.63106918334961
    9. '
' → logprob: -13.63106918334961
    10. '(len' → logprob: -13.88106918334961

Token 1002: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25899192690849304
    2. 'for' → logprob: -2.0089919567108154
    3. '[' → logprob: -3.2589919567108154
    4. '```' → logprob: -3.5089919567108154
    5. ' for' → logprob: -4.508991718292236
    6. '
' → logprob: -4.633991718292236
    7. '	for' → logprob: -6.258991718292236
    8. 'data' → logprob: -6.758991718292236
    9. '    
' → logprob: -7.883991718292236
    10. '\t' → logprob: -8.383992195129395

Token 1003: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16242048144340515
    2. 'for' → logprob: -2.0374205112457275
    3. ' for' → logprob: -4.912420272827148
    4. '	for' → logprob: -5.412420272827148
    5. 'i' → logprob: -5.662420272827148
    6. '```' → logprob: -5.662420272827148
    7. '[' → logprob: -8.537420272827148
    8. 'cnt' → logprob: -8.787420272827148
    9. '	i' → logprob: -9.162420272827148
    10. '       ' → logprob: -9.412420272827148

Token 1004: ' data' (ID: 1238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012451844289898872
    2. '   ' → logprob: -4.512451648712158
    3. ' for' → logprob: -7.387451648712158
    4. 'i' → logprob: -8.012452125549316
    5. 'while' → logprob: -8.887452125549316
    6. '```' → logprob: -9.262452125549316
    7. '       ' → logprob: -9.387452125549316
    8. '	for' → logprob: -10.012452125549316
    9. 'k' → logprob: -10.887452125549316
    10. 'data' (adapté à ' data') → logprob: -11.012452125549316

Token 1005: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3063693940639496
    2. '[' → logprob: -2.3063693046569824
    3. '<|end|>' → logprob: -3.6813693046569824
    4. '_' → logprob: -3.8063693046569824
    5. ' =' → logprob: -3.8063693046569824
    6. '   ' → logprob: -3.9313693046569824
    7. '=' → logprob: -3.9313693046569824
    8. ',' → logprob: -4.806369304656982
    9. 'import' → logprob: -4.931369304656982
    10. '2' → logprob: -5.306369304656982

Token 1006: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025742888450623
    2. '=' → logprob: -1.9102574586868286
    3. '=[' → logprob: -11.285257339477539
    4. ' =[' → logprob: -12.035257339477539
    5. '[' → logprob: -12.535257339477539
    6. ',' → logprob: -12.535257339477539
    7. '   ' → logprob: -12.910257339477539
    8. '=[]' → logprob: -13.160257339477539
    9. '<|end|>' → logprob: -13.910257339477539
    10. ')' → logprob: -14.160257339477539

Token 1007: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0023769615218043327
    2. ' [' → logprob: -6.502377033233643
    3. '[-' → logprob: -7.877377033233643
    4. '[N' → logprob: -8.627376556396484
    5. '   ' → logprob: -9.252376556396484
    6. '[data' → logprob: -9.502376556396484
    7. 'data' → logprob: -10.002376556396484
    8. '[len' → logprob: -10.377376556396484
    9. '[m' → logprob: -11.252376556396484
    10. '[S' → logprob: -11.877376556396484

Token 1008: 'ide' (ID: 617)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4242471754550934
    2. 'ide' → logprob: -1.674247145652771
    3. '(N' → logprob: -3.1742472648620605
    4. '[N' → logprob: -3.4242472648620605
    5. 'm' → logprob: -3.5492472648620605
    6. '[' → logprob: -4.0492472648620605
    7. '(' → logprob: -4.0492472648620605
    8. '0' → logprob: -4.7992472648620605
    9. 'cnt' → logprob: -6.2992472648620605
    10. '[m' → logprob: -6.9242472648620605

Token 1009: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.10033692419528961
    2. 'ele' → logprob: -2.350337028503418
    3. 'ide' → logprob: -10.225337028503418
    4. '**' → logprob: -10.725337028503418
    5. '*' → logprob: -10.850337028503418
    6. 'ile' → logprob: -11.225337028503418
    7. '_' → logprob: -11.350337028503418
    8. '`' → logprob: -12.600337028503418
    9. '_e' → logprob: -12.725337028503418
    10. ']' → logprob: -12.725337028503418

Token 1010: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5029875636100769
    2. ' *' → logprob: -1.2529876232147217
    3. '*' → logprob: -2.2529876232147217
    4. '*N' → logprob: -6.252987384796143
    5. ']*' → logprob: -6.627987384796143
    6. ' ]' → logprob: -7.377987384796143
    7. 'N' → logprob: -8.7529878616333
    8. '   ' → logprob: -9.2529878616333
    9. ')' → logprob: -9.2529878616333
    10. '#' → logprob: -9.5029878616333

Token 1011: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06446698307991028
    2. ' *' → logprob: -2.814466953277588
    3. '*N' → logprob: -7.064466953277588
    4. ')' → logprob: -7.564466953277588
    5. ']' → logprob: -7.814466953277588
    6. '<|end|>' → logprob: -8.189467430114746
    7. '[' → logprob: -8.689467430114746
    8. '**' → logprob: -9.814467430114746
    9. 'N' → logprob: -10.064467430114746
    10. '=' → logprob: -10.064467430114746

Token 1012: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.897412822581828e-05
    2. '(N' → logprob: -10.125068664550781
    3. '(' → logprob: -10.875068664550781
    4. ' N' → logprob: -12.875068664550781
    5. '2' → logprob: -13.625068664550781
    6. 'm' → logprob: -14.000068664550781
    7. '   ' → logprob: -14.500068664550781
    8. '
' → logprob: -14.500068664550781
    9. 'n' → logprob: -14.625068664550781
    10. 'len' → logprob: -14.750068664550781

Token 1013: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22697435319423676
    2. '
' → logprob: -2.1019742488861084
    3. 'for' → logprob: -2.9769742488861084
    4. '    
' → logprob: -4.3519744873046875
    5. ' for' → logprob: -4.7269744873046875
    6. '[' → logprob: -6.6019744873046875
    7. '```' → logprob: -6.6019744873046875
    8. '<|end|>' → logprob: -6.7269744873046875
    9. '	for' → logprob: -7.3519744873046875
    10. '  
' → logprob: -7.4769744873046875

Token 1014: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1675303727388382
    2. '   ' → logprob: -2.0425302982330322
    3. ' for' → logprob: -3.9175302982330322
    4. '```' → logprob: -5.917530536651611
    5. '	for' → logprob: -6.417530536651611
    6. 'i' → logprob: -8.667530059814453
    7. 'while' → logprob: -9.417530059814453
    8. '       ' → logprob: -9.792530059814453
    9. '``' → logprob: -12.292530059814453
    10. '\t' → logprob: -13.042530059814453

Token 1015: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011125932214781642
    2. '   ' → logprob: -7.501112461090088
    3. 'i' → logprob: -8.001112937927246
    4. ' for' → logprob: -9.251112937927246
    5. 'k' → logprob: -10.001112937927246
    6. 'while' → logprob: -10.251112937927246
    7. 'heap' → logprob: -10.626112937927246
    8. 'm' → logprob: -11.876112937927246
    9. 'idx' → logprob: -12.751112937927246
    10. 'cnt' → logprob: -12.876112937927246

Token 1016: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0028723925352096558
    2. ' i' → logprob: -5.877872467041016
    3. 'j' → logprob: -11.002872467041016
    4. 'x' → logprob: -11.252872467041016
    5. '_i' → logprob: -12.002872467041016
    6. 'k' → logprob: -12.502872467041016
    7. 'beam' → logprob: -12.752872467041016
    8. '(i' → logprob: -13.127872467041016
    9. 'start' → logprob: -13.252872467041016
    10. 'v' → logprob: -13.377872467041016

Token 1017: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014215807430446148
    2. 'in' → logprob: -4.26421594619751
    3. ' i' → logprob: -10.889215469360352
    4. '   ' → logprob: -11.264215469360352
    5. ' ' → logprob: -12.264215469360352
    6. ',' → logprob: -12.764215469360352
    7. '    ' → logprob: -12.889215469360352
    8. '	in' → logprob: -13.139215469360352
    9. 'i' → logprob: -13.389215469360352
    10. 'range' → logprob: -13.639215469360352

Token 1018: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14301204681396484
    2. ' range' → logprob: -2.018012046813965
    3. '0' → logprob: -8.268012046813965
    4. 'N' → logprob: -10.143012046813965
    5. '(range' → logprob: -11.268012046813965
    6. 'in' → logprob: -11.518012046813965
    7. '_' → logprob: -12.643012046813965
    8. ' in' → logprob: -12.768012046813965
    9. 're' → logprob: -13.268012046813965
    10. '   ' → logprob: -13.393012046813965

Token 1019: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08331136405467987
    2. '(N' → logprob: -2.8333113193511963
    3. 'range' → logprob: -3.9583113193511963
    4. '   ' → logprob: -7.583311557769775
    5. ' range' → logprob: -7.958311557769775
    6. '0' → logprob: -8.333311080932617
    7. 'm' → logprob: -8.583311080932617
    8. '(' → logprob: -8.583311080932617
    9. '1' → logprob: -8.708311080932617
    10. 'start' → logprob: -9.208311080932617

Token 1020: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2789701819419861
    2. ' -' → logprob: -1.5289702415466309
    3. '):
' → logprob: -3.778970241546631
    4. '   ' → logprob: -6.278970241546631
    5. '):' → logprob: -6.403970241546631
    6. '+' → logprob: -9.153969764709473
    7. ',' → logprob: -9.653969764709473
    8. '
' → logprob: -9.903969764709473
    9. '       ' → logprob: -10.653969764709473
    10. ' ' → logprob: -11.653969764709473

Token 1021: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18752709031105042
    2. '   ' → logprob: -1.812527060508728
    3. ' if' → logprob: -5.562527179718018
    4. '	if' → logprob: -6.937527179718018
    5. '```' → logprob: -7.062527179718018
    6. '	   ' → logprob: -7.187527179718018
    7. '	' → logprob: -7.562527179718018
    8. '<|end|>' → logprob: -7.687527179718018
    9. '    ' → logprob: -9.81252670288086
    10. '[' → logprob: -10.06252670288086

Token 1022: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44925224781036377
    2. ' if' → logprob: -1.1992522478103638
    3. 'if' (adapté à ' if') → logprob: -3.074252128601074
    4. '   ' → logprob: -4.824252128601074
    5. '```' → logprob: -5.324252128601074
    6. '	if' → logprob: -7.574252128601074
    7. ' while' → logprob: -8.699252128601074
    8. '           ' → logprob: -8.824252128601074
    9. '	   ' → logprob: -8.949252128601074
    10. '	' → logprob: -9.074252128601074

Token 1023: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.4759041368961334
    2. ' cnt' → logprob: -0.975904107093811
    3. 'i' → logprob: -6.9759039878845215
    4. '   ' → logprob: -7.9759039878845215
    5. ' i' → logprob: -8.35090446472168
    6. '	cnt' → logprob: -9.85090446472168
    7. '       ' → logprob: -10.22590446472168
    8. '           ' → logprob: -10.47590446472168
    9. 'count' → logprob: -10.47590446472168
    10. '(cnt' → logprob: -10.47590446472168

Token 1024: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.44253453612327576
    2. '==' → logprob: -1.3175345659255981
    3. ' <' → logprob: -2.8175344467163086
    4. '<' → logprob: -3.8175344467163086
    5. '<m' → logprob: -5.442534446716309
    6. '   ' → logprob: -6.692534446716309
    7. '<int' → logprob: -7.192534446716309
    8. '[' → logprob: -8.692534446716309
    9. ' !=' → logprob: -8.692534446716309
    10. '<|end|>' → logprob: -8.692534446716309

Token 1025: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015174767468124628
    2. ' m' → logprob: -6.501517295837402
    3. '0' → logprob: -11.376517295837402
    4. '<|end|>' → logprob: -12.876517295837402
    5. ' ' → logprob: -14.626517295837402
    6. '	m' → logprob: -16.37651824951172
    7. '<|end|>' → logprob: -16.37651824951172
    8. ')' → logprob: -16.50151824951172
    9. '    ' → logprob: -16.75151824951172
    10. '
' → logprob: -16.87651824951172

Token 1026: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1871994286775589
    2. ':
' → logprob: -1.8121994733810425
    3. '           ' → logprob: -5.437199592590332
    4. '       ' → logprob: -6.312199592590332
    5. '```' → logprob: -7.562199592590332
    6. '   ' → logprob: -7.812199592590332
    7. '[' → logprob: -8.812199592590332
    8. '{' → logprob: -10.562199592590332
    9. '{
' → logprob: -11.062199592590332
    10. '-' → logprob: -11.187199592590332

Token 1027: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031430765986442566
    2. '```' → logprob: -3.531430721282959
    3. '       ' → logprob: -8.281431198120117
    4. '[' → logprob: -8.406431198120117
    5. '<|end|>' → logprob: -8.906431198120117
    6. '            ' → logprob: -9.156431198120117
    7. '		' → logprob: -9.281431198120117
    8. '               ' → logprob: -9.406431198120117
    9. ':' → logprob: -9.406431198120117
    10. '``' → logprob: -9.531431198120117

Token 1028: ' val' (ID: 1459)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9300796389579773
    2. '           ' → logprob: -1.430079698562622
    3. ' heap' → logprob: -1.555079698562622
    4. ' test' → logprob: -2.305079698562622
    5. 'heap' → logprob: -3.930079698562622
    6. '   ' → logprob: -4.180079460144043
    7. '```' → logprob: -4.555079460144043
    8. ' if' → logprob: -6.055079460144043
    9. 'test' → logprob: -6.305079460144043
    10. '               ' → logprob: -7.305079460144043

Token 1029: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01845894753932953
    2. '=' → logprob: -4.268458843231201
    3. ' ==' → logprob: -6.018458843231201
    4. '   ' → logprob: -7.518458843231201
    5. ' +=' → logprob: -8.64345932006836
    6. ' &' → logprob: -9.14345932006836
    7. '[' → logprob: -9.39345932006836
    8. ',' → logprob: -9.39345932006836
    9. ' &=' → logprob: -9.39345932006836
    10. '==' → logprob: -9.51845932006836

Token 1030: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.46347475051879883
    2. ' idx' → logprob: -1.4634747505187988
    3. '0' → logprob: -3.338474750518799
    4. '=' → logprob: -4.463474750518799
    5. '_' → logprob: -4.463474750518799
    6. ' _' → logprob: -4.463474750518799
    7. 'index' → logprob: -4.588474750518799
    8. 'heap' → logprob: -4.588474750518799
    9. ' test' → logprob: -4.713474750518799
    10. ' =' → logprob: -4.713474750518799

Token 1031: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28116223216056824
    2. ' =' → logprob: -1.4061622619628906
    3. '   ' → logprob: -12.15616226196289
    4. '```' → logprob: -13.15616226196289
    5. ' ' → logprob: -14.03116226196289
    6. '=user' → logprob: -14.28116226196289
    7. '(heap' → logprob: -15.28116226196289
    8. '=line' → logprob: -15.40616226196289
    9. '=
' → logprob: -15.53116226196289
    10. '=item' → logprob: -15.53116226196289

Token 1032: ' que' (ID: 661)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.04016265645623207
    2. ' heap' → logprob: -3.2901625633239746
    3. '-' → logprob: -6.915162563323975
    4. '   ' → logprob: -7.290162563323975
    5. ' -' → logprob: -8.290163040161133
    6. '0' → logprob: -10.040163040161133
    7. 'he' → logprob: -10.290163040161133
    8. '(-' → logprob: -10.415163040161133
    9. '(heap' → logprob: -10.540163040161133
    10. '       ' → logprob: -11.290163040161133

Token 1033: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9204095005989075
    2. '[' → logprob: -0.9204095005989075
    3. ' =' → logprob: -1.7954094409942627
    4. '.pop' → logprob: -3.6704094409942627
    5. '0' → logprob: -5.545409679412842
    6. 'pop' → logprob: -5.920409679412842
    7. 'import' → logprob: -6.170409679412842
    8. '   ' → logprob: -7.420409679412842
    9. '.he' → logprob: -7.795409679412842
    10. ',' → logprob: -8.045409202575684

Token 1034: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.739826181321405e-05
    2. ' ' → logprob: -11.25004768371582
    3. '-' → logprob: -11.87504768371582
    4. '[' → logprob: -12.00004768371582
    5. '
' → logprob: -12.00004768371582
    6. '```' → logprob: -12.37504768371582
    7. '1' → logprob: -13.00004768371582
    8. '(' → logprob: -13.31254768371582
    9. '﻿' → logprob: -14.12504768371582
    10. '#' → logprob: -14.56254768371582

Token 1035: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011178798973560333
    2. ']
' → logprob: -5.636178970336914
    3. '()]' → logprob: -5.636178970336914
    4. '][' → logprob: -6.261178970336914
    5. '[' → logprob: -7.511178970336914
    6. ']=' → logprob: -7.761178970336914
    7. ']()' → logprob: -8.136178970336914
    8. '],' → logprob: -8.636178970336914
    9. '()' → logprob: -9.136178970336914
    10. '<|end|>' → logprob: -9.136178970336914

Token 1036: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.14402379095554352
    2. '[' → logprob: -2.894023895263672
    3. ',' → logprob: -3.394023895263672
    4. '<|end|>' → logprob: -3.894023895263672
    5. '           ' → logprob: -4.894023895263672
    6. '``' → logprob: -5.144023895263672
    7. ')' → logprob: -6.394023895263672
    8. '       ' → logprob: -6.519023895263672
    9. '`' → logprob: -7.144023895263672
    10. ':
' → logprob: -7.269023895263672

Token 1037: ' val' (ID: 1459)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5510042309761047
    2. 'heap' → logprob: -1.17600417137146
    3. ' heap' → logprob: -2.67600417137146
    4. '               ' → logprob: -3.55100417137146
    5. '```' → logprob: -4.176004409790039
    6. '   ' → logprob: -7.926004409790039
    7. '``' → logprob: -7.926004409790039
    8. 'val' (adapté à ' val') → logprob: -8.176004409790039
    9. '                   ' → logprob: -8.551004409790039
    10. '       ' → logprob: -8.801004409790039

Token 1038: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6562137007713318
    2. '=' → logprob: -1.0312137603759766
    3. ' =' → logprob: -2.4062137603759766
    4. '[' → logprob: -4.531213760375977
    5. ' ,' → logprob: -4.906213760375977
    6. '<|end|>' → logprob: -5.781213760375977
    7. ',val' → logprob: -5.906213760375977
    8. '.pop' → logprob: -5.906213760375977
    9. ',
' → logprob: -6.531213760375977
    10. '```' → logprob: -6.531213760375977

Token 1039: ' -' (ID: 533)
  Prédit: '-val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-val' → logprob: -0.07124445587396622
    2. '-' → logprob: -3.071244478225708
    3. 'val' → logprob: -3.946244478225708
    4. ' -' → logprob: -5.946244239807129
    5. ' val' → logprob: -9.321244239807129
    6. '-s' → logprob: -9.821244239807129
    7. '-Val' → logprob: -10.696244239807129
    8. '-v' → logprob: -11.071244239807129
    9. '```' → logprob: -11.071244239807129
    10. '-data' → logprob: -11.071244239807129

Token 1040: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -3.173704271830502e-06
    2. 'heap' → logprob: -13.37500286102295
    3. ' val' → logprob: -14.12500286102295
    4. '	val' → logprob: -15.37500286102295
    5. '
' → logprob: -15.50000286102295
    6. '<|end|>' → logprob: -16.125003814697266
    7. '   ' → logprob: -16.375003814697266
    8. '_val' → logprob: -16.625003814697266
    9. '(val' → logprob: -17.000003814697266
    10. '
' → logprob: -17.250003814697266

Token 1041: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12460914254188538
    2. ',' → logprob: -2.3746092319488525
    3. '<|end|>' → logprob: -3.8746092319488525
    4. ',
' → logprob: -7.124608993530273
    5. '```' → logprob: -7.374608993530273
    6. '		' → logprob: -7.624608993530273
    7. '<|end|>' → logprob: -8.499608993530273
    8. ',val' → logprob: -8.499608993530273
    9. '[' → logprob: -8.624608993530273
    10. ')' → logprob: -8.999608993530273

Token 1042: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4081437587738037
    2. '```' → logprob: -1.1581437587738037
    3. '		' → logprob: -4.908143997192383
    4. ',' → logprob: -4.908143997192383
    5. '<|end|>' → logprob: -5.783143997192383
    6. '[' → logprob: -7.158143997192383
    7. '``' → logprob: -7.408143997192383
    8. '       ' → logprob: -8.033143997192383
    9. '	       ' → logprob: -8.158143997192383
    10. '   ' → logprob: -8.408143997192383

Token 1043: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21639421582221985
    2. '           ' → logprob: -2.3413941860198975
    3. '```' → logprob: -3.3413941860198975
    4. '       ' → logprob: -4.341394424438477
    5. '<|end|>' → logprob: -4.341394424438477
    6. ',' → logprob: -4.591394424438477
    7. '[' → logprob: -5.091394424438477
    8. ' val' → logprob: -5.591394424438477
    9. '               ' → logprob: -5.966394424438477
    10. ' ' → logprob: -6.216394424438477

Token 1044: ' val' (ID: 1459)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.056165728718042374
    2. ' beam' → logprob: -2.9311656951904297
    3. 'val' → logprob: -6.93116569519043
    4. '   ' → logprob: -9.43116569519043
    5. 'idx' → logprob: -10.43116569519043
    6. ' val' → logprob: -10.55616569519043
    7. 'queue' → logprob: -10.68116569519043
    8. 'heap' → logprob: -10.68116569519043
    9. 'data' → logprob: -10.80616569519043
    10. '           ' → logprob: -10.93116569519043

Token 1045: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.29209980368614197
    2. '>' → logprob: -1.9170998334884644
    3. ' <' → logprob: -2.417099714279175
    4. '[' → logprob: -4.542099952697754
    5. '<' → logprob: -5.792099952697754
    6. '```' → logprob: -6.542099952697754
    7. ',' → logprob: -8.292099952697754
    8. '>[' → logprob: -8.417099952697754
    9. '<|end|>' → logprob: -8.417099952697754
    10. '           ' → logprob: -8.792099952697754

Token 1046: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0011633152607828379
    2. ' beam' → logprob: -7.001163482666016
    3. 'heap' → logprob: -9.376163482666016
    4. 'queue' → logprob: -9.501163482666016
    5. '   ' → logprob: -10.501163482666016
    6. 'que' → logprob: -11.251163482666016
    7. '```' → logprob: -11.376163482666016
    8. 'test' → logprob: -12.376163482666016
    9. '`' → logprob: -12.376163482666016
    10. '
' → logprob: -12.626163482666016

Token 1047: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11301418393850327
    2. '[idx' → logprob: -2.2380142211914062
    3. 'i' → logprob: -9.363014221191406
    4. 'idx' → logprob: -10.238014221191406
    5. '```' → logprob: -10.363014221191406
    6. '[' → logprob: -10.738014221191406
    7. '`' → logprob: -13.363014221191406
    8. 's' → logprob: -13.738014221191406
    9. '(idx' → logprob: -14.113014221191406
    10. '[index' → logprob: -14.113014221191406

Token 1048: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06226971000432968
    2. '][' → logprob: -2.937269687652588
    3. '0' → logprob: -4.937269687652588
    4. '```' → logprob: -9.437270164489746
    5. ''][' → logprob: -11.437270164489746
    6. '   ' → logprob: -11.562270164489746
    7. ')[' → logprob: -11.812270164489746
    8. '"][' → logprob: -11.812270164489746
    9. '(' → logprob: -12.124770164489746
    10. '`' → logprob: -12.187270164489746

Token 1049: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004182517994195223
    2. '1' → logprob: -5.5041823387146
    3. '[' → logprob: -10.004182815551758
    4. 'i' → logprob: -11.004182815551758
    5. ' ' → logprob: -11.379182815551758
    6. '```' → logprob: -11.754182815551758
    7. '2' → logprob: -12.504182815551758
    8. '
' → logprob: -12.629182815551758
    9. '   ' → logprob: -13.504182815551758
    10. '][' → logprob: -13.879182815551758

Token 1050: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6145020127296448
    2. ':' → logprob: -1.614501953125
    3. ']:
' → logprob: -2.489501953125
    4. '):
' → logprob: -2.864501953125
    5. '       ' → logprob: -3.114501953125
    6. ']:' → logprob: -3.864501953125
    7. ',' → logprob: -4.364501953125
    8. '           ' → logprob: -4.364501953125
    9. '               ' → logprob: -4.739501953125
    10. '):' → logprob: -5.239501953125

Token 1051: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.15860632061958313
    2. '               ' → logprob: -2.5336062908172607
    3. '           ' → logprob: -3.2836062908172607
    4. '<|end|>' → logprob: -4.53360652923584
    5. '[' → logprob: -4.78360652923584
    6. '``' → logprob: -4.90860652923584
    7. '`' → logprob: -7.15860652923584
    8. '       ' → logprob: -7.90860652923584
    9. ',' → logprob: -8.40860652923584
    10. '[
' → logprob: -8.78360652923584

Token 1052: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.8449479937553406
    2. 'heap' (adapté à ' heap') → logprob: -1.0949480533599854
    3. '               ' → logprob: -1.9699480533599854
    4. '```' → logprob: -2.7199480533599854
    5. '                   ' → logprob: -3.7199480533599854
    6. '           ' → logprob: -6.844947814941406
    7. '(heap' → logprob: -6.969947814941406
    8. '                ' → logprob: -7.219947814941406
    9. ' val' → logprob: -7.344947814941406
    10. '``' → logprob: -7.719947814941406

Token 1053: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0009323021513409913
    2. 'replace' → logprob: -7.000932216644287
    3. '[' → logprob: -11.500932693481445
    4. '```' → logprob: -12.000932693481445
    5. '       ' → logprob: -13.875932693481445
    6. '   ' → logprob: -14.125932693481445
    7. 'ify' → logprob: -14.500932693481445
    8. 'heap' → logprob: -14.875932693481445
    9. '``' → logprob: -15.000932693481445
    10. 'push' → logprob: -15.250932693481445

Token 1054: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.23704586923122406
    2. '.heap' → logprob: -1.8620458841323853
    3. 'heap' → logprob: -3.7370457649230957
    4. 'he' → logprob: -3.8620457649230957
    5. 'q' → logprob: -4.737045764923096
    6. '```' → logprob: -6.612045764923096
    7. 'replace' → logprob: -7.487045764923096
    8. ' he' → logprob: -9.487046241760254
    9. '   ' → logprob: -10.612046241760254
    10. '(heap' → logprob: -11.237046241760254

Token 1055: 'app' (ID: 903)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.9854317307472229
    2. 'app' → logprob: -0.9854317307472229
    3. 'he' → logprob: -2.360431671142578
    4. 'pop' → logprob: -2.735431671142578
    5. 'pp' → logprob: -2.860431671142578
    6. 'opp' → logprob: -3.985431671142578
    7. 'e' → logprob: -5.360431671142578
    8. '```' → logprob: -5.735431671142578
    9. 'q' → logprob: -5.860431671142578
    10. 'p' → logprob: -5.985431671142578

Token 1056: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.009087922982871532
    2. 'ush' → logprob: -5.009088039398193
    3. 'app' → logprob: -6.634088039398193
    4. 'pop' → logprob: -7.134088039398193
    5. 'opp' → logprob: -9.009087562561035
    6. 'pp' → logprob: -9.884087562561035
    7. '```' → logprob: -9.884087562561035
    8. 'p' → logprob: -11.259087562561035
    9. '   ' → logprob: -12.759087562561035
    10. 'ap' → logprob: -12.884087562561035

Token 1057: '(' (ID: 7)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.18820174038410187
    2. '(' → logprob: -1.8132017850875854
    3. '(tr' → logprob: -4.813201904296875
    4. 'trash' → logprob: -9.188201904296875
    5. 'ques' → logprob: -9.438201904296875
    6. ' que' → logprob: -10.188201904296875
    7. 'queue' → logprob: -10.438201904296875
    8. '(queue' → logprob: -10.938201904296875
    9. '```' → logprob: -11.688201904296875
    10. 'tr' → logprob: -12.438201904296875

Token 1058: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0002889874158427119
    2. 'trash' → logprob: -8.375288963317871
    3. 'queue' → logprob: -10.750288963317871
    4. '(' → logprob: -11.375288963317871
    5. 'ques' → logprob: -11.500288963317871
    6. ' que' → logprob: -11.875288963317871
    7. '```' → logprob: -13.750288963317871
    8. 'qu' → logprob: -13.875288963317871
    9. 'quee' → logprob: -14.250288963317871
    10. 'quer' → logprob: -14.250288963317871

Token 1059: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.22778525948524475
    2. ')' → logprob: -1.6027852296829224
    3. '               ' → logprob: -6.102785110473633
    4. ')
' → logprob: -10.477785110473633
    5. '[' → logprob: -10.977785110473633
    6. '```' → logprob: -10.977785110473633
    7. '                   ' → logprob: -11.352785110473633
    8. ')

' → logprob: -11.602785110473633
    9. '              ' → logprob: -11.977785110473633
    10. '),' → logprob: -12.227785110473633

Token 1060: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.0930958166718483
    2. '               ' → logprob: -2.4680957794189453
    3. '``' → logprob: -6.093095779418945
    4. '                   ' → logprob: -7.718095779418945
    5. '<|end|>' → logprob: -8.093095779418945
    6. '                
' → logprob: -8.468095779418945
    7. '                ' → logprob: -8.718095779418945
    8. '`' → logprob: -8.843095779418945
    9. ')' → logprob: -9.093095779418945
    10. '[' → logprob: -9.343095779418945

Token 1061: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.01199599914252758
    2. '```' → logprob: -4.761995792388916
    3. '               ' → logprob: -5.761995792388916
    4. 'S' → logprob: -9.636996269226074
    5. '``' → logprob: -9.761996269226074
    6. '           ' → logprob: -9.886996269226074
    7. '                   ' → logprob: -10.636996269226074
    8. '              ' → logprob: -11.136996269226074
    9. ' heap' → logprob: -12.386996269226074
    10. '             ' → logprob: -12.636996269226074

Token 1062: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.012325981631875038
    2. 'he' → logprob: -4.637325763702393
    3. '.he' → logprob: -7.012325763702393
    4. '```' → logprob: -7.387325763702393
    5. 'ush' → logprob: -7.762325763702393
    6. 'heap' → logprob: -8.38732624053955
    7. '[' → logprob: -9.01232624053955
    8. 'app' → logprob: -9.51232624053955
    9. '   ' → logprob: -10.13732624053955
    10. '.heap' → logprob: -10.63732624053955

Token 1063: '.he' (ID: 67786)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.13533589243888855
    2. '.he' → logprob: -2.260335922241211
    3. 'ush' → logprob: -4.385335922241211
    4. '```' → logprob: -5.510335922241211
    5. 'heap' → logprob: -6.635335922241211
    6. ' he' → logprob: -6.760335922241211
    7. '   ' → logprob: -6.885335922241211
    8. 'app' → logprob: -7.135335922241211
    9. 'push' → logprob: -7.385335922241211
    10. '.heap' → logprob: -8.510335922241211

Token 1064: 'app' (ID: 903)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.023220552131533623
    2. 'app' → logprob: -4.148220539093018
    3. 'push' → logprob: -5.023220539093018
    4. 'pp' → logprob: -7.648220539093018
    5. 'he' → logprob: -10.648221015930176
    6. 'op' → logprob: -10.648221015930176
    7. '```' → logprob: -10.773221015930176
    8. 'p' → logprob: -12.398221015930176
    9. 'us' → logprob: -12.523221015930176
    10. '[' → logprob: -12.523221015930176

Token 1065: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0004779784067068249
    2. 'push' → logprob: -8.00047779083252
    3. 'op' → logprob: -9.12547779083252
    4. 'app' → logprob: -10.37547779083252
    5. 'ushed' → logprob: -14.50047779083252
    6. 'p' → logprob: -14.87547779083252
    7. '```' → logprob: -15.25047779083252
    8. 'pop' → logprob: -15.37547779083252
    9. 'pp' → logprob: -15.37547779083252
    10. '...' → logprob: -15.75047779083252

Token 1066: '(tr' (ID: 14363)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011290781199932098
    2. 'que' → logprob: -4.511290550231934
    3. '(tr' → logprob: -8.636290550231934
    4. 'trash' → logprob: -10.261290550231934
    5. '```' → logprob: -10.636290550231934
    6. '(queue' → logprob: -12.636290550231934
    7. 'ques' → logprob: -13.636290550231934
    8. 'queue' → logprob: -14.636290550231934
    9. '``' → logprob: -15.386290550231934
    10. '(t' → logprob: -16.13629150390625

Token 1067: 'ash' (ID: 1229)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.005754937417805195
    2. '[' → logprob: -5.6307549476623535
    3. 'qu' → logprob: -7.1307549476623535
    4. 'ue' → logprob: -7.3807549476623535
    5. 'q' → logprob: -7.6307549476623535
    6. '[i' → logprob: -9.005754470825195
    7. 'ou' → logprob: -10.380754470825195
    8. 'queue' → logprob: -11.380754470825195
    9. '[user' → logprob: -11.505754470825195
    10. 'i' → logprob: -11.880754470825195

Token 1068: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14613299071788788
    2. '(tr' → logprob: -2.1461329460144043
    3. '(' → logprob: -4.521132946014404
    4. ')' → logprob: -5.646132946014404
    5. ',tr' → logprob: -6.021132946014404
    6. '),' → logprob: -7.146132946014404
    7. '```' → logprob: -7.646132946014404
    8. '<|end|>' → logprob: -7.896132946014404
    9. 'que' → logprob: -9.146133422851562
    10. ',
' → logprob: -9.521133422851562

Token 1069: ' val' (ID: 1459)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1644071787595749
    2. '(-' → logprob: -2.539407253265381
    3. '0' → logprob: -3.164407253265381
    4. 'que' → logprob: -4.789407253265381
    5. 'val' → logprob: -4.914407253265381
    6. ' (' → logprob: -5.664407253265381
    7. 'heap' → logprob: -5.914407253265381
    8. '(tr' → logprob: -6.039407253265381
    9. '-' → logprob: -6.039407253265381
    10. ' ' → logprob: -7.039407253265381

Token 1070: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20927780866622925
    2. ')' → logprob: -2.709277868270874
    3. '[' → logprob: -2.834277868270874
    4. ')
' → logprob: -3.459277868270874
    5. '-' → logprob: -3.959277868270874
    6. '```' → logprob: -6.084277629852295
    7. '               ' → logprob: -6.584277629852295
    8. ',-' → logprob: -6.584277629852295
    9. '),' → logprob: -6.834277629852295
    10. ' -' → logprob: -6.834277629852295

Token 1071: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3127001225948334
    2. '               ' → logprob: -2.437700033187866
    3. '       ' → logprob: -2.562700033187866
    4. '[' → logprob: -3.562700033187866
    5. ')' → logprob: -4.062700271606445
    6. '			' → logprob: -4.562700271606445
    7. '<|end|>' → logprob: -4.812700271606445
    8. '           ' → logprob: -4.937700271606445
    9. '	' → logprob: -5.562700271606445
    10. '		' → logprob: -5.562700271606445

Token 1072: ' end' (ID: 1268)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5737773180007935
    2. 'heap' → logprob: -1.0737773180007935
    3. '```' → logprob: -3.198777198791504
    4. 'i' → logprob: -4.448777198791504
    5. '                   ' → logprob: -4.948777198791504
    6. '              ' → logprob: -4.948777198791504
    7. 'S' → logprob: -5.198777198791504
    8. 'cnt' → logprob: -5.448777198791504
    9. '       ' → logprob: -5.823777198791504
    10. '           ' → logprob: -5.948777198791504

Token 1073: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.012826991267502308
    2. '[' → logprob: -4.762826919555664
    3. '_idx' → logprob: -6.262826919555664
    4. '_indices' → logprob: -7.137826919555664
    5. '[i' → logprob: -8.137826919555664
    6. '[arr' → logprob: -8.262826919555664
    7. 'arr' → logprob: -8.262826919555664
    8. '_' → logprob: -8.637826919555664
    9. '_idxs' → logprob: -9.012826919555664
    10. '_indexes' → logprob: -9.637826919555664

Token 1074: '[idx' (ID: 25582)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.013459719717502594
    2. '[' → logprob: -4.5134596824646
    3. '[idx' → logprob: -6.2634596824646
    4. '```' → logprob: -8.263460159301758
    5. '[index' → logprob: -10.138460159301758
    6. '[-' → logprob: -10.388460159301758
    7. '[val' → logprob: -10.638460159301758
    8. '[end' → logprob: -10.638460159301758
    9. '[ind' → logprob: -11.013460159301758
    10. '[user' → logprob: -11.013460159301758

Token 1075: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028885848820209503
    2. '=' → logprob: -3.778885841369629
    3. ']=' → logprob: -5.403885841369629
    4. '<|end|>' → logprob: -7.903885841369629
    5. ')' → logprob: -8.653885841369629
    6. ' =' → logprob: -8.903885841369629
    7. ']==' → logprob: -9.028885841369629
    8. '       ' → logprob: -9.903885841369629
    9. ']=-' → logprob: -9.903885841369629
    10. '   ' → logprob: -10.028885841369629

Token 1076: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0037315457593649626
    2. ' =' → logprob: -5.628731727600098
    3. '+=' → logprob: -9.003731727600098
    4. ' +=' → logprob: -12.503731727600098
    5. '=
' → logprob: -14.128731727600098
    6. '=i' → logprob: -14.253731727600098
    7. ')' → logprob: -14.378731727600098
    8. '<|end|>' → logprob: -14.628731727600098
    9. '-=' → logprob: -14.878731727600098
    10. '=-' → logprob: -15.253731727600098

Token 1077: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.074907287256792e-05
    2. ' i' → logprob: -9.75006103515625
    3. 'beam' → logprob: -14.00006103515625
    4. '   ' → logprob: -14.37506103515625
    5. '```' → logprob: -14.37506103515625
    6. '`' → logprob: -15.75006103515625
    7. '
' → logprob: -15.87506103515625
    8. '	i' → logprob: -17.50006103515625
    9. ' ' → logprob: -17.50006103515625
    10. ' beam' → logprob: -17.62506103515625

Token 1078: ' -' (ID: 533)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9030890464782715
    2. ')' → logprob: -1.4030890464782715
    3. '<|end|>' → logprob: -1.4030890464782715
    4. '
' → logprob: -3.1530890464782715
    5. '               ' → logprob: -3.9030890464782715
    6. '       ' → logprob: -4.2780890464782715
    7. '           ' → logprob: -5.1530890464782715
    8. '``' → logprob: -5.4030890464782715
    9. ')
' → logprob: -6.0280890464782715
    10. '[' → logprob: -6.4030890464782715

Token 1079: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'start' → logprob: -18.125
    4. '   ' → logprob: -18.625
    5. '
' → logprob: -18.75
    6. '<|end|>' → logprob: -19.0
    7. '```' → logprob: -19.625
    8. 'import' → logprob: -20.1875
    9. '2' → logprob: -20.9375
    10. 'from' → logprob: -21.4375

Token 1080: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '<|end|>' → logprob: -20.125
    4. '2' → logprob: -20.625
    5. 'start' → logprob: -20.625
    6. '
' → logprob: -21.125
    7. '```' → logprob: -21.25
    8. '   ' → logprob: -22.5625
    9. '۱' → logprob: -22.5625
    10. '-' → logprob: -22.6875

Token 1081: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7470420002937317
    2. '<|end|>' → logprob: -1.747041940689087
    3. '               ' → logprob: -1.997041940689087
    4. '
' → logprob: -2.372041940689087
    5. ')' → logprob: -2.997041940689087
    6. '       ' → logprob: -4.247042179107666
    7. '[' → logprob: -4.622042179107666
    8. '           ' → logprob: -4.747042179107666
    9. '``' → logprob: -4.747042179107666
    10. ')
' → logprob: -5.497042179107666

Token 1082: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7257154583930969
    2. '               ' → logprob: -0.9757154583930969
    3. '       ' → logprob: -3.225715398788452
    4. '           ' → logprob: -3.350715398788452
    5. '<|end|>' → logprob: -3.850715398788452
    6. ')' → logprob: -4.225715637207031
    7. '                   ' → logprob: -4.725715637207031
    8. '              ' → logprob: -5.100715637207031
    9. '``' → logprob: -6.100715637207031
    10. '                               ' → logprob: -6.350715637207031

Token 1083: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.4104584753513336
    2. '           ' → logprob: -1.9104584455490112
    3. '```' → logprob: -2.535458564758301
    4. '               ' → logprob: -2.910458564758301
    5. '                   ' → logprob: -3.785458564758301
    6. '       ' → logprob: -3.910458564758301
    7. ' heap' → logprob: -6.660458564758301
    8. '   ' → logprob: -6.785458564758301
    9. '              ' → logprob: -6.910458564758301
    10. 'while' → logprob: -7.160458564758301

Token 1084: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.4034345187828876e-05
    2. '[' → logprob: -11.37502384185791
    3. '```' → logprob: -11.62502384185791
    4. 'replace' → logprob: -13.62502384185791
    5. '[q' → logprob: -14.12502384185791
    6. 'app' → logprob: -15.50002384185791
    7. '       ' → logprob: -15.62502384185791
    8. 'push' → logprob: -15.87502384185791
    9. '.pop' → logprob: -16.000024795532227
    10. 'ify' → logprob: -16.125024795532227

Token 1085: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.025490986183285713
    2. 'he' → logprob: -4.150490760803223
    3. 'q' → logprob: -4.900490760803223
    4. '.heap' → logprob: -7.150490760803223
    5. 'push' → logprob: -7.400490760803223
    6. 'ush' → logprob: -8.275490760803223
    7. '```' → logprob: -9.525490760803223
    8. 'replace' → logprob: -9.650490760803223
    9. 'app' → logprob: -9.900490760803223
    10. ' he' → logprob: -10.400490760803223

Token 1086: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.551647961139679
    2. 'q' → logprob: -0.926647961139679
    3. 'pop' → logprob: -4.801648139953613
    4. 'pp' → logprob: -5.051648139953613
    5. 'op' → logprob: -5.176648139953613
    6. 'p' → logprob: -5.176648139953613
    7. 'ap' → logprob: -6.926648139953613
    8. '```' → logprob: -7.926648139953613
    9. '...' → logprob: -8.551648139953613
    10. 'pl' → logprob: -8.926648139953613

Token 1087: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.4304644763469696
    2. 'op' → logprob: -1.055464506149292
    3. 'app' → logprob: -6.680464267730713
    4. 'pp' → logprob: -8.805464744567871
    5. 'opp' → logprob: -8.805464744567871
    6. 'pop' → logprob: -9.055464744567871
    7. 'p' → logprob: -10.555464744567871
    8. '```' → logprob: -10.680464744567871
    9. 'push' → logprob: -12.180464744567871
    10. 'e' → logprob: -12.180464744567871

Token 1088: '(' (ID: 7)
  Prédit: '(tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.05894333869218826
    2. '(' → logprob: -2.933943271636963
    3. 'que' → logprob: -5.808943271636963
    4. 'trash' → logprob: -7.308943271636963
    5. 'tr' → logprob: -8.183943748474121
    6. '(queue' → logprob: -9.558943748474121
    7. '```' → logprob: -11.558943748474121
    8. 'ques' → logprob: -12.683943748474121
    9. '((' → logprob: -12.933943748474121
    10. 'queue' → logprob: -12.933943748474121

Token 1089: 'que' (ID: 1126)
  Prédit: 'trash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trash' → logprob: -0.17254413664340973
    2. 'que' → logprob: -2.047544240951538
    3. '(tr' → logprob: -3.797544240951538
    4. 'tr' → logprob: -5.797544002532959
    5. '(' → logprob: -6.047544002532959
    6. 'queue' → logprob: -7.922544002532959
    7. 'tras' → logprob: -7.922544002532959
    8. 'ques' → logprob: -8.297544479370117
    9. 'trap' → logprob: -9.172544479370117
    10. '```' → logprob: -10.297544479370117

Token 1090: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0761062353849411
    2. '(' → logprob: -2.826106309890747
    3. '[' → logprob: -5.201106071472168
    4. ',(' → logprob: -5.451106071472168
    5. '[(' → logprob: -6.826106071472168
    6. '```' → logprob: -7.326106071472168
    7. '((' → logprob: -7.951106071472168
    8. ',i' → logprob: -8.076106071472168
    9. ')' → logprob: -8.201106071472168
    10. '<|end|>' → logprob: -8.576106071472168

Token 1091: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0003676324849948287
    2. '((-' → logprob: -9.125367164611816
    3. '(-(' → logprob: -9.250367164611816
    4. '(' → logprob: -9.375367164611816
    5. '(val' → logprob: -9.875367164611816
    6. ' (-' → logprob: -11.000367164611816
    7. '((' → logprob: -12.625367164611816
    8. '(heap' → logprob: -13.875367164611816
    9. '[-' → logprob: -14.125367164611816
    10. '-(' → logprob: -14.125367164611816

Token 1092: 'beam' (ID: 95917)
  Prédit: 'beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -2.935296834039036e-06
    2. ' beam' → logprob: -13.25000286102295
    3. '(' → logprob: -14.37500286102295
    4. 'heap' → logprob: -15.12500286102295
    5. '   ' → logprob: -16.000003814697266
    6. ')' → logprob: -17.250003814697266
    7. 'be' → logprob: -17.375003814697266
    8. 'queue' → logprob: -17.625003814697266
    9. 'data' → logprob: -17.750003814697266
    10. '```' → logprob: -18.000003814697266

Token 1093: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08897806704044342
    2. 'i' → logprob: -2.4639780521392822
    3. '[' → logprob: -10.963977813720703
    4. ' i' → logprob: -12.338977813720703
    5. '```' → logprob: -12.463977813720703
    6. '[
' → logprob: -12.588977813720703
    7. '(i' → logprob: -12.963977813720703
    8. '<|end|>' → logprob: -13.338977813720703
    9. '{i' → logprob: -13.588977813720703
    10. '_i' → logprob: -13.963977813720703

Token 1094: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006489329971373081
    2. '0' → logprob: -7.5006489753723145
    3. '[i' → logprob: -9.375648498535156
    4. '][' → logprob: -11.625648498535156
    5. '[
' → logprob: -14.375648498535156
    6. ' ' → logprob: -15.125648498535156
    7. ')' → logprob: -15.375648498535156
    8. '[][' → logprob: -15.500648498535156
    9. '```' → logprob: -15.500648498535156
    10. ']' → logprob: -15.625648498535156

Token 1095: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. '[i' → logprob: -12.875005722045898
    3. 'i' → logprob: -13.000005722045898
    4. '[' → logprob: -14.250005722045898
    5. '   ' → logprob: -17.5000057220459
    6. '1' → logprob: -17.6250057220459
    7. '(i' → logprob: -17.6250057220459
    8. ' ' → logprob: -17.8750057220459
    9. '۰' → logprob: -17.8750057220459
    10. '```' → logprob: -17.8750057220459

Token 1096: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005044196150265634
    2. '),' → logprob: -8.000504493713379
    3. ',i' → logprob: -8.875504493713379
    4. ' ,' → logprob: -10.875504493713379
    5. ',index' → logprob: -12.875504493713379
    6. '   ' → logprob: -13.250504493713379
    7. '‌,' → logprob: -13.750504493713379
    8. ',),' → logprob: -14.125504493713379
    9. '`,' → logprob: -14.375504493713379
    10. '],' → logprob: -14.500504493713379

Token 1097: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03819859400391579
    2. 'idx' → logprob: -3.413198709487915
    3. ' i' → logprob: -5.538198471069336
    4. ' idx' → logprob: -7.413198471069336
    5. '(i' → logprob: -13.663198471069336
    6. '   ' → logprob: -13.788198471069336
    7. 'beam' → logprob: -13.788198471069336
    8. 'index' → logprob: -14.663198471069336
    9. '(' → logprob: -15.038198471069336
    10. ' ' → logprob: -15.163198471069336

Token 1098: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5765965580940247
    2. '))
' → logprob: -0.8265965580940247
    3. ')' → logprob: -7.576596736907959
    4. ')
' → logprob: -9.4515962600708
    5. '))
' → logprob: -10.2015962600708
    6. '))

' → logprob: -11.8265962600708
    7. '       ' → logprob: -12.0765962600708
    8. ' ))
' → logprob: -12.2015962600708
    9. '   ' → logprob: -12.5765962600708
    10. '           ' → logprob: -12.9515962600708

Token 1099: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7567676901817322
    2. '<|end|>' → logprob: -1.381767749786377
    3. '```' → logprob: -2.381767749786377
    4. ' 
' → logprob: -3.506767749786377
    5. '           ' → logprob: -3.881767749786377
    6. '
' → logprob: -3.881767749786377
    7. '       ' → logprob: -3.881767749786377
    8. '               ' → logprob: -4.381767749786377
    9. ',' → logprob: -4.631767749786377
    10. '[' → logprob: -4.881767749786377

Token 1100: ' start' (ID: 1604)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.001114616054110229
    2. 'heap' → logprob: -7.001114845275879
    3. ' S' → logprob: -10.001114845275879
    4. 'end' → logprob: -10.501114845275879
    5. 'val' → logprob: -10.501114845275879
    6. 'cnt' → logprob: -11.001114845275879
    7. 'trash' → logprob: -11.126114845275879
    8. '               ' → logprob: -11.251114845275879
    9. '           ' → logprob: -11.376114845275879
    10. 'start' (adapté à ' start') → logprob: -11.751114845275879

Token 1101: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0075520859099924564
    2. '<|end|>' → logprob: -5.632552146911621
    3. '[arr' → logprob: -5.882552146911621
    4. '[' → logprob: -7.882552146911621
    5. 'arr' → logprob: -7.882552146911621
    6. '	arr' → logprob: -9.257552146911621
    7. '[i' → logprob: -9.882552146911621
    8. '_array' → logprob: -10.007552146911621
    9. '<|end|>' → logprob: -10.257552146911621
    10. '[index' → logprob: -10.632552146911621

Token 1102: '[i' (ID: 1768)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00015276329941116273
    2. '[' → logprob: -9.375152587890625
    3. '[i' → logprob: -10.125152587890625
    4. '[val' → logprob: -11.875152587890625
    5. 'idx' → logprob: -12.375152587890625
    6. '[index' → logprob: -12.750152587890625
    7. '[ind' → logprob: -12.750152587890625
    8. '```' → logprob: -13.125152587890625
    9. '<|end|>' → logprob: -13.375152587890625
    10. '[arr' → logprob: -13.500152587890625

Token 1103: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04882081225514412
    2. ' =' → logprob: -3.173820734024048
    3. ']' → logprob: -5.298820972442627
    4. ')' → logprob: -7.798820972442627
    5. ']=' → logprob: -8.048820495605469
    6. '=i' → logprob: -9.923820495605469
    7. ')=' → logprob: -10.923820495605469
    8. ',' → logprob: -13.048820495605469
    9. '<|end|>' → logprob: -13.173820495605469
    10. '   ' → logprob: -13.548820495605469

Token 1104: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00013500562636181712
    2. ' =' → logprob: -9.00013542175293
    3. '=i' → logprob: -11.37513542175293
    4. '＝' → logprob: -17.25013542175293
    5. '=
' → logprob: -18.00013542175293
    6. '=k' → logprob: -18.00013542175293
    7. '=int' → logprob: -18.37513542175293
    8. ')=' → logprob: -19.12513542175293
    9. '=n' → logprob: -19.12513542175293
    10. '=

' → logprob: -20.00013542175293

Token 1105: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00021093101531732827
    2. ' i' → logprob: -8.500210762023926
    3. '   ' → logprob: -12.000210762023926
    4. '0' → logprob: -14.750210762023926
    5. '	i' → logprob: -14.750210762023926
    6. ' ' → logprob: -16.000211715698242
    7. '-' → logprob: -16.500211715698242
    8. 'idx' → logprob: -17.375211715698242
    9. '_i' → logprob: -17.500211715698242
    10. 'N' → logprob: -17.625211715698242

Token 1106: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1107: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1108: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.015948263928294182
    2. 'cnt' → logprob: -4.640948295593262
    3. ' S' → logprob: -6.140948295593262
    4. '           ' → logprob: -6.265948295593262
    5. 'continue' → logprob: -6.765948295593262
    6. '               ' → logprob: -7.765948295593262
    7. 'i' → logprob: -8.890948295593262
    8. ' cnt' → logprob: -9.640948295593262
    9. '       ' → logprob: -10.140948295593262
    10. '```' → logprob: -10.390948295593262

Token 1109: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.17083066701889038
    2. ' +=' → logprob: -1.9208307266235352
    3. '-=' → logprob: -5.420830726623535
    4. ' -=' → logprob: -5.670830726623535
    5. '=' → logprob: -6.295830726623535
    6. '<|end|>' → logprob: -7.545830726623535
    7. '+' → logprob: -9.295830726623535
    8. '-' → logprob: -9.545830726623535
    9. ' =' → logprob: -10.045830726623535
    10. '```' → logprob: -10.420830726623535

Token 1110: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.001340123824775219
    2. ' beam' → logprob: -6.626339912414551
    3. '-' → logprob: -11.62633991241455
    4. '-be' → logprob: -13.00133991241455
    5. ' -' → logprob: -14.25133991241455
    6. '(' → logprob: -14.25133991241455
    7. 'be' → logprob: -14.75133991241455
    8. '   ' → logprob: -15.12633991241455
    9. '(-' → logprob: -15.62633991241455
    10. ' ' → logprob: -15.87633991241455

Token 1111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.534558552724775e-05
    2. '[' → logprob: -10.750025749206543
    3. 'i' → logprob: -13.000025749206543
    4. '```' → logprob: -14.375025749206543
    5. ' [' → logprob: -14.625025749206543
    6. '[
' → logprob: -15.000025749206543
    7. '   ' → logprob: -15.875025749206543
    8. '(i' → logprob: -16.500024795532227
    9. '[I' → logprob: -17.125024795532227
    10. '	i' → logprob: -18.000024795532227

Token 1112: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4760265052318573
    2. '[' → logprob: -0.9760265350341797
    3. '][' → logprob: -6.60102653503418
    4. 'i' → logprob: -8.47602653503418
    5. '```' → logprob: -8.97602653503418
    6. '[
' → logprob: -9.97602653503418
    7. '[][' → logprob: -9.97602653503418
    8. '>[' → logprob: -10.60102653503418
    9. '<|end|>' → logprob: -10.72602653503418
    10. '[token' → logprob: -10.97602653503418

Token 1113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.12500286102295
    3. '```' → logprob: -15.75000286102295
    4. '   ' → logprob: -16.125001907348633
    5. '[' → logprob: -16.375001907348633
    6. '
' → logprob: -16.750001907348633
    7. '[i' → logprob: -17.312501907348633
    8. 'i' → logprob: -17.312501907348633
    9. '1' → logprob: -18.187501907348633
    10. '  ' → logprob: -18.375001907348633

Token 1114: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012533196248114109
    2. '-' → logprob: -4.387533187866211
    3. '-S' → logprob: -12.637533187866211
    4. ' ' → logprob: -12.887533187866211
    5. '<|end|>' → logprob: -12.887533187866211
    6. '   ' → logprob: -13.012533187866211
    7. '-token' → logprob: -13.137533187866211
    8. '-val' → logprob: -13.137533187866211
    9. ')' → logprob: -14.012533187866211
    10. '-s' → logprob: -14.262533187866211

Token 1115: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03832731023430824
    2. '-' → logprob: -3.288327217102051
    3. '<|end|>' → logprob: -8.91332721710205
    4. '-S' → logprob: -9.78832721710205
    5. '-token' → logprob: -10.03832721710205
    6. '-val' → logprob: -12.03832721710205
    7. '           ' → logprob: -12.16332721710205
    8. ' -
' → logprob: -12.28832721710205
    9. '```' → logprob: -12.41332721710205
    10. '-s' → logprob: -12.53832721710205

Token 1116: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.08896083384752274
    2. ' val' → logprob: -2.463960886001587
    3. 'heap' → logprob: -10.963960647583008
    4. 'test' → logprob: -12.838960647583008
    5. ' heap' → logprob: -14.838960647583008
    6. '	val' → logprob: -15.088960647583008
    7. ' test' → logprob: -15.713960647583008
    8. '(val' → logprob: -15.713960647583008
    9. '_val' → logprob: -15.963960647583008
    10. '-val' → logprob: -16.963960647583008

Token 1117: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1118: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7350987792015076
    2. '```' → logprob: -1.1100988388061523
    3. '           ' → logprob: -2.6100988388061523
    4. '<|end|>' → logprob: -2.8600988388061523
    5. ')' → logprob: -4.235098838806152
    6. '               ' → logprob: -4.360098838806152
    7. 'i' → logprob: -4.735098838806152
    8. '   ' → logprob: -5.610098838806152
    9. '                   ' → logprob: -5.860098838806152
    10. '[' → logprob: -5.860098838806152

Token 1119: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7757826447486877
    2. 'i' → logprob: -1.525782585144043
    3. '<|end|>' → logprob: -1.900782585144043
    4. '           ' → logprob: -3.025782585144043
    5. '	i' → logprob: -4.275782585144043
    6. ')' → logprob: -4.275782585144043
    7. ' i' → logprob: -4.400782585144043
    8. '               ' → logprob: -4.650782585144043
    9. '    ' → logprob: -4.900782585144043
    10. '   ' → logprob: -5.025782585144043

Token 1120: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12211322784423828
    2. '           ' → logprob: -3.1221132278442383
    3. ' continue' → logprob: -3.7471132278442383
    4. 'continue' → logprob: -3.8721132278442383
    5. ':' → logprob: -4.747113227844238
    6. '       ' → logprob: -4.747113227844238
    7. ':
' → logprob: -5.372113227844238
    8. '```' → logprob: -6.247113227844238
    9. '              ' → logprob: -7.372113227844238
    10. '<|end|>' → logprob: -7.997113227844238

Token 1121: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3816685974597931
    2. '           ' → logprob: -1.3816685676574707
    3. '```' → logprob: -3.0066685676574707
    4. '       ' → logprob: -5.131668567657471
    5. 'heap' → logprob: -5.506668567657471
    6. '              ' → logprob: -6.881668567657471
    7. ' ' → logprob: -7.006668567657471
    8. '            ' → logprob: -7.506668567657471
    9. ' heap' → logprob: -7.506668567657471
    10. '   ' → logprob: -7.631668567657471

Token 1122: ' heap' (ID: 37237)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.0365551710128784
    2. 'i' → logprob: -1.7865551710128784
    3. 'start' → logprob: -1.7865551710128784
    4. 'heap' (adapté à ' heap') → logprob: -1.9115551710128784
    5. 'continue' → logprob: -2.911555290222168
    6. '           ' → logprob: -3.411555290222168
    7. '               ' → logprob: -3.786555290222168
    8. 'pass' → logprob: -4.161555290222168
    9. '```' → logprob: -4.536555290222168
    10. 'for' → logprob: -5.411555290222168

Token 1123: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.869017852295656e-06
    2. 'app' → logprob: -12.875006675720215
    3. '       ' → logprob: -13.125006675720215
    4. '           ' → logprob: -14.625006675720215
    5. '   ' → logprob: -14.875006675720215
    6. 'op' → logprob: -15.000006675720215
    7. '[' → logprob: -15.375006675720215
    8. '               ' → logprob: -15.750006675720215
    9. 'k' → logprob: -16.00000762939453
    10. 'push' → logprob: -16.00000762939453

Token 1124: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0023486497811973095
    2. 'q' → logprob: -6.50234842300415
    3. 'he' → logprob: -7.37734842300415
    4. 'push' → logprob: -9.377348899841309
    5. '.heap' → logprob: -9.377348899841309
    6. ' he' → logprob: -11.252348899841309
    7. '.push' → logprob: -11.502348899841309
    8. '       ' → logprob: -12.127348899841309
    9. 'heap' → logprob: -12.252348899841309
    10. 'app' → logprob: -12.502348899841309

Token 1125: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00042531240615062416
    2. 'ap' → logprob: -8.375425338745117
    3. '```' → logprob: -9.875425338745117
    4. 'he' → logprob: -10.500425338745117
    5. 'pp' → logprob: -10.750425338745117
    6. 'op' → logprob: -10.875425338745117
    7. 'sp' → logprob: -11.250425338745117
    8. 'pop' → logprob: -11.250425338745117
    9. 'push' → logprob: -12.000425338745117
    10. 'q' → logprob: -12.000425338745117

Token 1126: 'ush' (ID: 1776)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.018994327634572983
    2. 'app' → logprob: -4.268994331359863
    3. 'ush' → logprob: -5.518994331359863
    4. 'he' → logprob: -8.143994331359863
    5. 'ap' → logprob: -8.643994331359863
    6. 'pop' → logprob: -8.893994331359863
    7. 'q' → logprob: -9.768994331359863
    8. '```' → logprob: -9.893994331359863
    9. '.he' → logprob: -10.393994331359863
    10. 'p' → logprob: -11.143994331359863

Token 1127: '(tr' (ID: 14363)
  Prédit: '(tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.014760497026145458
    2. '(' → logprob: -4.264760494232178
    3. 'que' → logprob: -8.139760971069336
    4. 'trash' → logprob: -8.389760971069336
    5. '(queue' → logprob: -9.889760971069336
    6. 'tr' → logprob: -11.139760971069336
    7. '(qu' → logprob: -12.889760971069336
    8. '(q' → logprob: -13.014760971069336
    9. 'q' → logprob: -13.514760971069336
    10. 'queue' → logprob: -13.889760971069336

Token 1128: 'ash' (ID: 1229)
  Prédit: 'trash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trash' → logprob: -1.0548748970031738
    2. 'i' → logprob: -1.4298748970031738
    3. 'que' → logprob: -1.6798748970031738
    4. '(tr' → logprob: -2.804874897003174
    5. 'tr' → logprob: -3.054874897003174
    6. 'ash' → logprob: -3.179874897003174
    7. '[i' → logprob: -3.554874897003174
    8. 'rash' → logprob: -4.179874897003174
    9. 'ush' → logprob: -4.929874897003174
    10. 'r' → logprob: -5.554874897003174

Token 1129: ',' (ID: 11)
  Prédit: '(tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.30509433150291443
    2. ',' → logprob: -1.4300943613052368
    3. '(' → logprob: -4.055094242095947
    4. '(-' → logprob: -5.680094242095947
    5. ',tr' → logprob: -6.055094242095947
    6. '```' → logprob: -8.805094718933105
    7. ',val' → logprob: -9.430094718933105
    8. ',(' → logprob: -9.805094718933105
    9. 'tr' → logprob: -9.930094718933105
    10. ')' → logprob: -10.055094718933105

Token 1130: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.8875988125801086
    2. '-' → logprob: -1.0125987529754639
    3. '-be' → logprob: -1.8875987529754639
    4. 'val' → logprob: -3.637598752975464
    5. '-val' → logprob: -4.637598991394043
    6. 'que' → logprob: -4.637598991394043
    7. 'heap' → logprob: -5.137598991394043
    8. '-end' → logprob: -5.387598991394043
    9. '-b' → logprob: -5.387598991394043
    10. '-tr' → logprob: -6.012598991394043

Token 1131: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.327856630785391e-05
    2. 'i' → logprob: -9.500082969665527
    3. '[' → logprob: -12.125082969665527
    4. '(i' → logprob: -14.500082969665527
    5. '```' → logprob: -14.750082969665527
    6. '   ' → logprob: -14.875082969665527
    7. 'tr' → logprob: -15.250082969665527
    8. '{i' → logprob: -15.625082969665527
    9. '
' → logprob: -15.750082969665527
    10. ')' → logprob: -16.000083923339844

Token 1132: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007141007808968425
    2. '[' → logprob: -7.250714302062988
    3. 'i' → logprob: -13.750714302062988
    4. ' [' → logprob: -14.000714302062988
    5. '   ' → logprob: -14.375714302062988
    6. '(i' → logprob: -14.625714302062988
    7. '][' → logprob: -14.875714302062988
    8. ')' → logprob: -15.500714302062988
    9. ')[' → logprob: -15.500714302062988
    10. ',i' → logprob: -15.500714302062988

Token 1133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005444537382572889
    2. '[i' → logprob: -8.250544548034668
    3. 'i' → logprob: -8.750544548034668
    4. '[' → logprob: -9.250544548034668
    5. '1' → logprob: -10.625544548034668
    6. '(i' → logprob: -13.250544548034668
    7. '```' → logprob: -14.125544548034668
    8. '
' → logprob: -14.750544548034668
    9. ' ' → logprob: -15.563044548034668
    10. '``' → logprob: -15.750544548034668

Token 1134: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14779116213321686
    2. ')
' → logprob: -2.0227911472320557
    3. ',' → logprob: -5.772791385650635
    4. '           ' → logprob: -6.647791385650635
    5. '[' → logprob: -8.272790908813477
    6. '       ' → logprob: -9.272790908813477
    7. '```' → logprob: -9.647790908813477
    8. '               ' → logprob: -9.897790908813477
    9. '   ' → logprob: -10.272790908813477
    10. ' )' → logprob: -10.647790908813477

Token 1135: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1136: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.557952880859375
    2. 'else' (adapté à ' else') → logprob: -1.557952880859375
    3. '```' → logprob: -2.807952880859375
    4. ' 
' → logprob: -3.057952880859375
    5. ' else' → logprob: -3.182952880859375
    6. '           ' → logprob: -3.432952880859375
    7. '
' → logprob: -4.807952880859375
    8. '   ' → logprob: -5.057952880859375
    9. '\n' → logprob: -5.307952880859375
    10. '        
' → logprob: -5.932952880859375

Token 1137: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07057993859052658
    2. '       ' → logprob: -3.070580005645752
    3. '```' → logprob: -4.070580005645752
    4. '		' → logprob: -5.695580005645752
    5. '   ' → logprob: -8.570579528808594
    6. '	       ' → logprob: -8.820579528808594
    7. '{
' → logprob: -8.945579528808594
    8. '``' → logprob: -9.070579528808594
    9. ':
' → logprob: -9.320579528808594
    10. '[' → logprob: -9.445579528808594

Token 1138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07376595586538315
    2. '```' → logprob: -2.948765993118286
    3. 'heap' → logprob: -4.573765754699707
    4. '		' → logprob: -5.573765754699707
    5. '       ' → logprob: -6.073765754699707
    6. ' heap' → logprob: -6.323765754699707
    7. '``' → logprob: -8.823765754699707
    8. '   ' → logprob: -9.323765754699707
    9. '(heap' → logprob: -9.823765754699707
    10. '	       ' → logprob: -10.198765754699707

Token 1139: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.04515252262353897
    2. '           ' → logprob: -3.795152425765991
    3. '```' → logprob: -4.29515266418457
    4. '		' → logprob: -5.04515266418457
    5. '       ' → logprob: -7.54515266418457
    6. ' heap' → logprob: -7.79515266418457
    7. '	' → logprob: -8.29515266418457
    8. '   ' → logprob: -8.79515266418457
    9. '``' → logprob: -8.92015266418457
    10. '               ' → logprob: -10.42015266418457

Token 1140: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.4849443838757e-06
    2. '```' → logprob: -12.750004768371582
    3. '       ' → logprob: -14.000004768371582
    4. '``' → logprob: -15.000004768371582
    5. 'que' → logprob: -15.750004768371582
    6. 'heap' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.375003814697266
    8. 'push' → logprob: -17.375003814697266
    9. 'k' → logprob: -17.625003814697266
    10. 'qu' → logprob: -17.875003814697266

Token 1141: '.he' (ID: 67786)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.8710312247276306
    2. 'he' → logprob: -1.2460312843322754
    3. '.he' → logprob: -1.2460312843322754
    4. 'heap' → logprob: -6.121031284332275
    5. '.heap' → logprob: -6.246031284332275
    6. 'ush' → logprob: -7.371031284332275
    7. ' he' → logprob: -7.621031284332275
    8. '.push' → logprob: -8.246030807495117
    9. 'push' → logprob: -8.246030807495117
    10. '```' → logprob: -8.746030807495117

Token 1142: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -6.988221684878226e-06
    2. 'ap' → logprob: -12.375006675720215
    3. 'ush' → logprob: -13.625006675720215
    4. 'sp' → logprob: -14.750006675720215
    5. 'push' → logprob: -14.750006675720215
    6. 'pp' → logprob: -14.875006675720215
    7. 'q' → logprob: -15.875006675720215
    8. 'aps' → logprob: -16.37500762939453
    9. '```' → logprob: -17.37500762939453
    10. '.app' → logprob: -17.75000762939453

Token 1143: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00027420982951298356
    2. 'op' → logprob: -8.250274658203125
    3. 'app' → logprob: -11.625274658203125
    4. 'push' → logprob: -13.875274658203125
    5. '```' → logprob: -14.375274658203125
    6. 'q' → logprob: -14.375274658203125
    7. 'us' → logprob: -14.875274658203125
    8. 'sh' → logprob: -15.875274658203125
    9. 'ushed' → logprob: -15.875274658203125
    10. 'u' → logprob: -16.000274658203125

Token 1144: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16054224967956543
    2. 'que' → logprob: -1.9105422496795654
    3. '(tr' → logprob: -8.160542488098145
    4. 'tr' → logprob: -11.160542488098145
    5. ' que' → logprob: -11.410542488098145
    6. '   ' → logprob: -13.035542488098145
    7. ' (' → logprob: -13.660542488098145
    8. 'queue' → logprob: -13.910542488098145
    9. '(queue' → logprob: -14.035542488098145
    10. '  ' → logprob: -14.660542488098145

Token 1145: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.009952515363693237
    2. '(' → logprob: -4.634952545166016
    3. ' que' → logprob: -8.884952545166016
    4. 'queue' → logprob: -11.009952545166016
    5. '(tr' → logprob: -11.259952545166016
    6. '(-' → logprob: -11.884952545166016
    7. 'ques' → logprob: -11.884952545166016
    8. 'qu' → logprob: -12.134952545166016
    9. 'tr' → logprob: -13.259952545166016
    10. '```' → logprob: -13.509952545166016

Token 1146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3062313199043274
    2. '((-' → logprob: -2.0562312602996826
    3. '(-' → logprob: -2.0562312602996826
    4. '(' → logprob: -5.056231498718262
    5. '((' → logprob: -7.056231498718262
    6. '       ' → logprob: -8.181231498718262
    7. '   ' → logprob: -8.431231498718262
    8. ' (-' → logprob: -9.806231498718262
    9. '=(-' → logprob: -10.306231498718262
    10. '```' → logprob: -10.806231498718262

Token 1147: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.008618354797363281
    2. ' (-' → logprob: -4.758618354797363
    3. '(' → logprob: -12.758618354797363
    4. '   ' → logprob: -14.383618354797363
    5. ' ' → logprob: -15.758618354797363
    6. '(-(' → logprob: -16.258617401123047
    7. '((-' → logprob: -17.133617401123047
    8. ' (' → logprob: -18.133617401123047
    9. '=(-' → logprob: -18.758617401123047
    10. '```' → logprob: -19.758617401123047

Token 1148: 'beam' (ID: 95917)
  Prédit: 'beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -5.512236498361744e-07
    2. ' beam' → logprob: -14.625000953674316
    3. 'heap' → logprob: -16.75
    4. 'Beam' → logprob: -21.0
    5. 'beat' → logprob: -21.375
    6. '```' → logprob: -21.625
    7. 'queue' → logprob: -22.5
    8. 'bee' → logprob: -22.5
    9. 'boat' → logprob: -22.5
    10. 'batch' → logprob: -22.75

Token 1149: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000555416801944375
    2. 'i' → logprob: -7.500555515289307
    3. '(i' → logprob: -13.750555038452148
    4. '{i' → logprob: -14.625555038452148
    5. ',i' → logprob: -14.625555038452148
    6. '```' → logprob: -16.00055503845215
    7. '[' → logprob: -16.25055503845215
    8. ',' → logprob: -16.37555503845215
    9. ' i' → logprob: -16.50055503845215
    10. ')i' → logprob: -18.00055503845215

Token 1150: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11325009167194366
    2. '[' → logprob: -2.2382500171661377
    3. '][' → logprob: -8.613249778747559
    4. 'i' → logprob: -8.988249778747559
    5. ')[' → logprob: -9.363249778747559
    6. '0' → logprob: -10.863249778747559
    7. ')' → logprob: -13.238249778747559
    8. ' [' → logprob: -13.363249778747559
    9. '[][' → logprob: -13.613249778747559
    10. '(i' → logprob: -13.738249778747559

Token 1151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.875000953674316
    3. '[' → logprob: -15.000000953674316
    4. 'i' → logprob: -15.125000953674316
    5. '[i' → logprob: -16.000001907348633
    6. '```' → logprob: -16.875001907348633
    7. '(i' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.250001907348633
    9. 'int' → logprob: -18.250001907348633
    10. '1' → logprob: -18.500001907348633

Token 1152: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000145137935760431
    2. ',i' → logprob: -9.250144958496094
    3. ' ,' → logprob: -10.750144958496094
    4. '   ' → logprob: -12.250144958496094
    5. ',k' → logprob: -12.250144958496094
    6. '),' → logprob: -12.500144958496094
    7. ',n' → logprob: -12.750144958496094
    8. ',index' → logprob: -12.875144958496094
    9. ',user' → logprob: -14.000144958496094
    10. '           ' → logprob: -14.000144958496094

Token 1153: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20141352713108063
    2. ' i' → logprob: -1.7014135122299194
    3. ' ' → logprob: -16.576414108276367
    4. '   ' → logprob: -16.826414108276367
    5. '(i' → logprob: -16.951414108276367
    6. ' (' → logprob: -17.201414108276367
    7. '	i' → logprob: -18.076414108276367
    8. '  ' → logprob: -20.951414108276367
    9. ',i' → logprob: -21.326414108276367
    10. '_i' → logprob: -21.451414108276367

Token 1154: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.004791446030139923
    2. ')' → logprob: -5.629791259765625
    3. '           ' → logprob: -6.754791259765625
    4. '       ' → logprob: -11.504791259765625
    5. ')
' → logprob: -11.504791259765625
    6. '```' → logprob: -13.254791259765625
    7. '   ' → logprob: -13.504791259765625
    8. '))
' → logprob: -14.379791259765625
    9. '``' → logprob: -14.754791259765625
    10. '               ' → logprob: -15.129791259765625

Token 1155: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1421026736497879
    2. '```' → logprob: -2.1421027183532715
    3. '       ' → logprob: -4.6421027183532715
    4. '   ' → logprob: -6.1421027183532715
    5. '``' → logprob: -6.2671027183532715
    6. 'S' → logprob: -7.6421027183532715
    7. ' ' → logprob: -8.517102241516113
    8. '
' → logprob: -9.142102241516113
    9. '          ' → logprob: -9.267102241516113
    10. '               ' → logprob: -9.642102241516113

Token 1156: ' start' (ID: 1604)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.004962389823049307
    2. ' S' → logprob: -5.75496244430542
    3. '	S' → logprob: -6.75496244430542
    4. '   ' → logprob: -8.254961967468262
    5. '```' → logprob: -8.254961967468262
    6. 'cnt' → logprob: -9.879961967468262
    7. '``' → logprob: -11.129961967468262
    8. '_S' → logprob: -11.879961967468262
    9. '       ' → logprob: -12.129961967468262
    10. '           ' → logprob: -12.629961967468262

Token 1157: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -6.313314952421933e-05
    2. 'arr' → logprob: -10.375062942504883
    3. '   ' → logprob: -11.250062942504883
    4. '	arr' → logprob: -12.250062942504883
    5. '```' → logprob: -12.375062942504883
    6. '[i' → logprob: -12.625062942504883
    7. '_' → logprob: -13.250062942504883
    8. ' +=' → logprob: -14.500062942504883
    9. 'Arr' → logprob: -14.500062942504883
    10. ' =' → logprob: -14.875062942504883

Token 1158: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01562616415321827
    2. 'i' → logprob: -4.890625953674316
    3. '+=' → logprob: -5.640625953674316
    4. '=' → logprob: -6.765625953674316
    5. '=i' → logprob: -6.765625953674316
    6. ' +=' → logprob: -6.890625953674316
    7. ' i' → logprob: -7.515625953674316
    8. '   ' → logprob: -8.765625953674316
    9. '	i' → logprob: -8.765625953674316
    10. ' =' → logprob: -9.640625953674316

Token 1159: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08548856526613235
    2. '+=' → logprob: -3.3354885578155518
    3. ' =' → logprob: -3.4604885578155518
    4. ' +=' → logprob: -4.210488796234131
    5. ')' → logprob: -10.210488319396973
    6. '   ' → logprob: -10.460488319396973
    7. ']+=' → logprob: -11.210488319396973
    8. '```' → logprob: -13.460488319396973
    9. ' ' → logprob: -13.585488319396973
    10. ')=' → logprob: -14.085488319396973

Token 1160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06986606866121292
    2. '+=' → logprob: -2.819866180419922
    3. ' +=' → logprob: -5.319866180419922
    4. ' =' → logprob: -5.819866180419922
    5. '   ' → logprob: -12.694866180419922
    6. ']+=' → logprob: -13.569866180419922
    7. '```' → logprob: -14.694866180419922
    8. '       ' → logprob: -15.194866180419922
    9. ' ' → logprob: -15.694866180419922
    10. '=
' → logprob: -15.944866180419922

Token 1161: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003357006062287837
    2. ' i' → logprob: -8.000335693359375
    3. '	i' → logprob: -15.750335693359375
    4. '   ' → logprob: -17.000335693359375
    5. '0' → logprob: -17.500335693359375
    6. ' ' → logprob: -18.750335693359375
    7. '_i' → logprob: -20.375335693359375
    8. '```' → logprob: -20.500335693359375
    9. '1' → logprob: -20.625335693359375
    10. '           ' → logprob: -20.875335693359375

Token 1162: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16746272146701813
    2. '```' → logprob: -2.1674628257751465
    3. '       ' → logprob: -4.4174628257751465
    4. '
' → logprob: -4.6674628257751465
    5. '``' → logprob: -5.1674628257751465
    6. '   ' → logprob: -5.5424628257751465
    7. '		' → logprob: -6.0424628257751465
    8. 'S' → logprob: -6.2924628257751465
    9. '<|end|>' → logprob: -7.0424628257751465
    10. ' S' → logprob: -7.6674628257751465

Token 1163: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.04238351434469223
    2. '``' → logprob: -4.667383670806885
    3. '       ' → logprob: -4.792383670806885
    4. 'S' → logprob: -5.042383670806885
    5. '
' → logprob: -5.792383670806885
    6. '\n' → logprob: -6.042383670806885
    7. '           ' → logprob: -6.167383670806885
    8. ' 
' → logprob: -6.292383670806885
    9. ' S' → logprob: -6.542383670806885
    10. '<|end|>' → logprob: -7.042383670806885

Token 1164: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.001277853618375957
    2. '```' → logprob: -6.876277923583984
    3. '   ' → logprob: -9.251277923583984
    4. ' S' → logprob: -9.876277923583984
    5. '``' → logprob: -10.126277923583984
    6. '           ' → logprob: -10.376277923583984
    7. '       ' → logprob: -11.251277923583984
    8. 'cnt' → logprob: -11.751277923583984
    9. '
' → logprob: -12.876277923583984
    10. ' ' → logprob: -14.001277923583984

Token 1165: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5763700008392334
    2. ' +=' → logprob: -0.8263700008392334
    3. '```' → logprob: -7.8263702392578125
    4. '+' → logprob: -11.576370239257812
    5. '   ' → logprob: -11.951370239257812
    6. '           ' → logprob: -12.201370239257812
    7. ']+=' → logprob: -12.326370239257812
    8. '=' → logprob: -13.201370239257812
    9. '``' → logprob: -13.826370239257812
    10. '+=(' → logprob: -14.326370239257812

Token 1166: ' beam' (ID: 36650)
  Prédit: ' beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beam' → logprob: -0.5759466886520386
    2. 'beam' → logprob: -0.8259466886520386
    3. ' ' → logprob: -13.450946807861328
    4. ' ' → logprob: -13.575946807861328
    5. '+' → logprob: -13.700946807861328
    6. '```' → logprob: -13.825946807861328
    7. ' +' → logprob: -13.950946807861328
    8. '   ' → logprob: -14.700946807861328
    9. '           ' → logprob: -15.700946807861328
    10. '`' → logprob: -15.950946807861328

Token 1167: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021105022460687906
    2. '[' → logprob: -8.500210762023926
    3. ' [' → logprob: -12.375210762023926
    4. '```' → logprob: -13.250210762023926
    5. 'i' → logprob: -13.625210762023926
    6. '[
' → logprob: -15.875210762023926
    7. '   ' → logprob: -16.625211715698242
    8. '`' → logprob: -16.875211715698242
    9. '(i' → logprob: -18.000211715698242
    10. ' ' → logprob: -18.750211715698242

Token 1168: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25233766436576843
    2. '][' → logprob: -1.5023376941680908
    3. '0' → logprob: -8.627337455749512
    4. '[i' → logprob: -9.127337455749512
    5. ']' → logprob: -10.002337455749512
    6. ' [' → logprob: -10.502337455749512
    7. ')[' → logprob: -11.252337455749512
    8. '```' → logprob: -11.752337455749512
    9. ' ][' → logprob: -11.877337455749512
    10. '[
' → logprob: -12.252337455749512

Token 1169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.625001907348633
    3. 'i' → logprob: -14.625001907348633
    4. '[i' → logprob: -16.250001907348633
    5. '```' → logprob: -16.375001907348633
    6. '1' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.375001907348633
    8. '(i' → logprob: -17.625001907348633
    9. '[' → logprob: -18.000001907348633
    10. '``' → logprob: -19.062501907348633

Token 1170: ']
' (ID: 1592)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07213746756315231
    2. '-' → logprob: -3.3221373558044434
    3. ')' → logprob: -3.8221373558044434
    4. ']' → logprob: -4.572137355804443
    5. '```' → logprob: -8.072137832641602
    6. '           ' → logprob: -8.447137832641602
    7. '<|end|>' → logprob: -8.447137832641602
    8. ']-' → logprob: -9.072137832641602
    9. ')-' → logprob: -9.322137832641602
    10. '+' → logprob: -9.572137832641602

Token 1171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24189162254333496
    2. '```' → logprob: -2.241891622543335
    3. '       ' → logprob: -2.991891622543335
    4. 'cnt' → logprob: -3.241891622543335
    5. '   ' → logprob: -4.866891860961914
    6. '	cnt' → logprob: -5.366891860961914
    7. '<|end|>' → logprob: -6.241891860961914
    8. '		' → logprob: -6.991891860961914
    9. '``' → logprob: -7.116891860961914
    10. '	       ' → logprob: -7.366891860961914

Token 1172: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.16177009046077728
    2. '           ' → logprob: -2.4117701053619385
    3. '```' → logprob: -3.4117701053619385
    4. '   ' → logprob: -4.286769866943359
    5. '       ' → logprob: -4.536769866943359
    6. 'count' → logprob: -6.536769866943359
    7. '``' → logprob: -7.911769866943359
    8. ' cnt' → logprob: -8.53676986694336
    9. '	cnt' → logprob: -9.03676986694336
    10. ' ' → logprob: -10.03676986694336

Token 1173: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.17255719006061554
    2. ' +=' → logprob: -2.0475571155548096
    3. '```' → logprob: -3.5475571155548096
    4. '   ' → logprob: -8.04755687713623
    5. '=' → logprob: -8.54755687713623
    6. '+' → logprob: -9.92255687713623
    7. '``' → logprob: -10.54755687713623
    8. '==' → logprob: -10.79755687713623
    9. '       ' → logprob: -11.67255687713623
    10. '++' → logprob: -12.29755687713623

Token 1174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '```' → logprob: -17.50006675720215
    4. '	' → logprob: -17.75006675720215
    5. '   ' → logprob: -17.75006675720215
    6. '+' → logprob: -20.37506675720215
    7. '۱' → logprob: -21.50006675720215
    8. ' ' → logprob: -21.75006675720215
    9. '１' → logprob: -22.00006675720215
    10. '``' → logprob: -22.12506675720215

Token 1175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.25
    4. '```' → logprob: -18.75
    5. '+' → logprob: -22.5
    6. '	' → logprob: -23.375
    7. '``' → logprob: -23.5
    8. '0' → logprob: -23.625
    9. '１' → logprob: -24.0
    10. '۱' → logprob: -24.125

Token 1176: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.006124783772975206
    2. '\n' → logprob: -5.506124973297119
    3. '
' → logprob: -7.381124973297119
    4. '   ' → logprob: -7.756124973297119
    5. '``' → logprob: -7.756124973297119
    6. ' 
' → logprob: -8.881124496459961
    7. '    
' → logprob: -9.131124496459961
    8. '\' → logprob: -9.631124496459961
    9. '\t' → logprob: -10.256124496459961
    10. ')' → logprob: -10.381124496459961

Token 1177: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6832394599914551
    2. '   ' → logprob: -0.9332394599914551
    3. '       ' → logprob: -2.308239459991455
    4. '
' → logprob: -6.933239459991455
    5. '           ' → logprob: -7.558239459991455
    6. '``' → logprob: -8.433238983154297
    7. 'for' → logprob: -9.183238983154297
    8. '    
' → logprob: -9.683238983154297
    9. '\t' → logprob: -9.933238983154297
    10. ' for' → logprob: -10.058238983154297

Token 1178: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4474934935569763
    2. '   ' → logprob: -1.697493553161621
    3. '       ' → logprob: -3.197493553161621
    4. 'for' → logprob: -3.197493553161621
    5. 'if' (adapté à ' if') → logprob: -3.322493553161621
    6. '```' → logprob: -3.697493553161621
    7. 'while' → logprob: -3.947493553161621
    8. 'data' → logprob: -4.947493553161621
    9. 'continue' → logprob: -5.697493553161621
    10. ' i' → logprob: -5.822493553161621

Token 1179: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.525973379611969
    2. 'cnt' → logprob: -0.900973379611969
    3. '   ' → logprob: -6.150973320007324
    4. '(cnt' → logprob: -9.025973320007324
    5. '       ' → logprob: -9.150973320007324
    6. 'i' → logprob: -9.150973320007324
    7. ' ' → logprob: -9.400973320007324
    8. 'S' → logprob: -9.900973320007324
    9. '	cnt' → logprob: -9.900973320007324
    10. ' i' → logprob: -10.025973320007324

Token 1180: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07893242686986923
    2. '==' → logprob: -2.578932523727417
    3. '```' → logprob: -10.328932762145996
    4. '[i' → logprob: -12.578932762145996
    5. '[' → logprob: -12.703932762145996
    6. '==
' → logprob: -13.578932762145996
    7. '   ' → logprob: -14.328932762145996
    8. ' ==
' → logprob: -14.953932762145996
    9. '       ' → logprob: -15.078932762145996
    10. '=' → logprob: -15.578932762145996

Token 1181: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04069283604621887
    2. 'i' → logprob: -3.2906928062438965
    3. ' m' → logprob: -6.1656928062438965
    4. ' i' → logprob: -7.6656928062438965
    5. 'N' → logprob: -10.415693283081055
    6. '   ' → logprob: -10.790693283081055
    7. '0' → logprob: -11.915693283081055
    8. '(i' → logprob: -12.040693283081055
    9. ' ' → logprob: -12.540693283081055
    10. '           ' → logprob: -12.915693283081055

Token 1182: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.256762832403183
    2. ':
' → logprob: -2.006762742996216
    3. '```' → logprob: -3.006762742996216
    4. '       ' → logprob: -3.381762742996216
    5. ' and' → logprob: -5.506762981414795
    6. '           ' → logprob: -5.881762981414795
    7. '   ' → logprob: -6.881762981414795
    8. '[' → logprob: -8.881762504577637
    9. '==' → logprob: -9.381762504577637
    10. '``' → logprob: -9.506762504577637

Token 1183: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3006514310836792
    2. '       ' → logprob: -1.4256514310836792
    3. '``' → logprob: -5.300651550292969
    4. '<|end|>' → logprob: -5.300651550292969
    5. '        
' → logprob: -5.800651550292969
    6. '
' → logprob: -5.925651550292969
    7. '   ' → logprob: -6.675651550292969
    8. '[' → logprob: -8.050651550292969
    9. '<|end|>' → logprob: -8.050651550292969
    10. '    
' → logprob: -8.550651550292969

Token 1184: ' if' (ID: 538)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.004492073319852352
    2. '   ' → logprob: -6.129492282867432
    3. 'val' → logprob: -7.129492282867432
    4. '           ' → logprob: -7.504492282867432
    5. 'S' → logprob: -8.504491806030273
    6. 't' → logprob: -8.629491806030273
    7. 'if' (adapté à ' if') → logprob: -8.754491806030273
    8. '```' → logprob: -9.379491806030273
    9. 'data' → logprob: -9.504491806030273
    10. '       ' → logprob: -9.504491806030273

Token 1185: ' i' (ID: 575)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.4726904332637787
    2. ' S' → logprob: -1.472690463066101
    3. ' test' → logprob: -2.8476903438568115
    4. 'test' → logprob: -2.9726903438568115
    5. ' data' → logprob: -4.347690582275391
    6. 'data' → logprob: -4.472690582275391
    7. 'start' → logprob: -5.347690582275391
    8. '   ' → logprob: -5.847690582275391
    9. ' start' → logprob: -6.222690582275391
    10. '       ' → logprob: -7.222690582275391

Token 1186: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6058990955352783
    2. ' +' → logprob: -1.9808990955352783
    3. '==' → logprob: -2.1058990955352783
    4. ' >=' → logprob: -2.3558990955352783
    5. '+' → logprob: -2.4808990955352783
    6. '>=' → logprob: -4.230898857116699
    7. '```' → logprob: -7.855898857116699
    8. '   ' → logprob: -7.855898857116699
    9. ' <' → logprob: -8.9808988571167
    10. ' +=' → logprob: -9.2308988571167

Token 1187: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004633995704352856
    2. 'm' → logprob: -5.879633903503418
    3. '0' → logprob: -6.629633903503418
    4. ' N' → logprob: -8.379633903503418
    5. '(N' → logprob: -8.754633903503418
    6. 'i' → logprob: -10.254633903503418
    7. '   ' → logprob: -10.504633903503418
    8. '           ' → logprob: -11.879633903503418
    9. '```' → logprob: -12.004633903503418
    10. '<N' → logprob: -12.254633903503418

Token 1188: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5772040486335754
    2. ' -' → logprob: -0.8272040486335754
    3. '```' → logprob: -6.82720422744751
    4. '+' → logprob: -9.952203750610352
    5. '<|end|>' → logprob: -10.827203750610352
    6. '       ' → logprob: -10.952203750610352
    7. '1' → logprob: -11.327203750610352
    8. '   ' → logprob: -11.327203750610352
    9. '[' → logprob: -11.702203750610352
    10. '``' → logprob: -11.702203750610352

Token 1189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. '2' → logprob: -11.750015258789062
    3. ' ' → logprob: -12.500015258789062
    4. '```' → logprob: -12.875015258789062
    5. '<|end|>' → logprob: -15.000015258789062
    6. '   ' → logprob: -15.000015258789062
    7. '<|end|>' → logprob: -16.750015258789062
    8. '           ' → logprob: -16.875015258789062
    9. '       ' → logprob: -17.187515258789062
    10. '``' → logprob: -17.812515258789062

Token 1190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. '2' → logprob: -11.750012397766113
    3. '```' → logprob: -13.125012397766113
    4. ' ' → logprob: -13.375012397766113
    5. '   ' → logprob: -16.000011444091797
    6. '
' → logprob: -16.125011444091797
    7. '``' → logprob: -17.000011444091797
    8. '3' → logprob: -17.062511444091797
    9. '<|end|>' → logprob: -17.125011444091797
    10. '       ' → logprob: -17.625011444091797

Token 1191: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8548994660377502
    2. ':
' → logprob: -1.4798994064331055
    3. ':' → logprob: -1.6048994064331055
    4. '               ' → logprob: -2.3548994064331055
    5. '```' → logprob: -4.1048994064331055
    6. '<|end|>' → logprob: -4.3548994064331055
    7. '           ' → logprob: -4.4798994064331055
    8. '       ' → logprob: -6.1048994064331055
    9. 'and' → logprob: -6.1048994064331055
    10. ',' → logprob: -6.8548994064331055

Token 1192: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3610507845878601
    2. '```' → logprob: -1.2360508441925049
    3. '           ' → logprob: -4.486050605773926
    4. '``' → logprob: -7.736050605773926
    5. '
' → logprob: -8.111050605773926
    6. ':
' → logprob: -8.361050605773926
    7. ',' → logprob: -9.861050605773926
    8. '<|end|>' → logprob: -10.111050605773926
    9. '       ' → logprob: -10.236050605773926
    10. '):
' → logprob: -10.361050605773926

Token 1193: ' data' (ID: 1238)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.2606286108493805
    2. 't' → logprob: -2.8856287002563477
    3. 'data' (adapté à ' data') → logprob: -2.8856287002563477
    4. 'val' → logprob: -3.1356287002563477
    5. '           ' → logprob: -3.7606287002563477
    6. 'S' → logprob: -3.7606287002563477
    7. '               ' → logprob: -4.885628700256348
    8. 'if' → logprob: -5.010628700256348
    9. 'for' → logprob: -6.260628700256348
    10. 'min' → logprob: -6.260628700256348

Token 1194: '1' (ID: 16)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02898070029914379
    2. '2' → logprob: -4.153980731964111
    3. '1' → logprob: -4.778980731964111
    4. '[' → logprob: -6.278980731964111
    5. 'i' → logprob: -7.653980731964111
    6. ' =' → logprob: -7.653980731964111
    7. '```' → logprob: -7.653980731964111
    8. '[S' → logprob: -8.028980255126953
    9. '=' → logprob: -8.153980255126953
    10. '   ' → logprob: -9.278980255126953

Token 1195: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0020580694545060396
    2. ' =' → logprob: -7.127058029174805
    3. '[min' → logprob: -7.377058029174805
    4. '[' → logprob: -8.252058029174805
    5. '=' → logprob: -8.502058029174805
    6. ' [' → logprob: -10.377058029174805
    7. '[idx' → logprob: -11.127058029174805
    8. '[max' → logprob: -11.252058029174805
    9. '.append' → logprob: -11.252058029174805
    10. '=[' → logprob: -11.252058029174805

Token 1196: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08995549380779266
    2. ']=' → logprob: -3.2149555683135986
    3. ' =' → logprob: -3.8399555683135986
    4. ']+=' → logprob: -5.0899553298950195
    5. '=' → logprob: -5.3399553298950195
    6. '+' → logprob: -5.5899553298950195
    7. ' ]' → logprob: -6.2149553298950195
    8. '],' → logprob: -6.3399553298950195
    9. ' +=' → logprob: -6.7149553298950195
    10. '[' → logprob: -6.8399553298950195

Token 1197: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.349359929561615
    2. ' =' → logprob: -1.2243599891662598
    3. '=min' → logprob: -7.09935998916626
    4. '=S' → logprob: -9.849359512329102
    5. 'min' → logprob: -10.974359512329102
    6. '=max' → logprob: -11.974359512329102
    7. '   ' → logprob: -12.474359512329102
    8. ',' → logprob: -12.724359512329102
    9. '=
' → logprob: -14.099359512329102
    10. '```' → logprob: -14.349359512329102

Token 1198: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.012674334459006786
    2. 'min' → logprob: -4.387674331665039
    3. 'max' → logprob: -9.762674331665039
    4. 'abs' → logprob: -10.262674331665039
    5. 'start' → logprob: -10.262674331665039
    6. 'ans' → logprob: -11.262674331665039
    7. ' S' → logprob: -12.262674331665039
    8. 'm' → logprob: -12.762674331665039
    9. '-' → logprob: -12.887674331665039
    10. ' min' → logprob: -13.012674331665039

Token 1199: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1200: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.00048763392260298133
    2. ' data' → logprob: -7.875487804412842
    3. 'min' → logprob: -9.250487327575684
    4. 'max' → logprob: -12.625487327575684
    5. 'cum' → logprob: -12.875487327575684
    6. 'beam' → logprob: -12.875487327575684
    7. '   ' → logprob: -14.500487327575684
    8. '(data' → logprob: -15.125487327575684
    9. ' ' → logprob: -15.125487327575684
    10. '
' → logprob: -15.250487327575684

Token 1201: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008691861294209957
    2. 'i' → logprob: -4.758691787719727
    3. '[' → logprob: -10.133691787719727
    4. '```' → logprob: -11.383691787719727
    5. '+' → logprob: -11.633691787719727
    6. ' i' → logprob: -12.383691787719727
    7. '[
' → logprob: -12.758691787719727
    8. '(i' → logprob: -12.883691787719727
    9. '+i' → logprob: -13.508691787719727
    10. '`' → logprob: -13.758691787719727

Token 1202: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.138441237155348e-05
    2. ' +' → logprob: -9.625091552734375
    3. '1' → logprob: -10.750091552734375
    4. '+i' → logprob: -12.750091552734375
    5. '[' → logprob: -14.750091552734375
    6. ']' → logprob: -16.250091552734375
    7. ']+' → logprob: -16.250091552734375
    8. '+
' → logprob: -16.250091552734375
    9. '＋' → logprob: -16.375091552734375
    10. '```' → logprob: -16.375091552734375

Token 1203: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.875001907348633
    3. '```' → logprob: -14.250001907348633
    4. '   ' → logprob: -15.750001907348633
    5. '
' → logprob: -16.000001907348633
    6. '           ' → logprob: -16.875001907348633
    7. '2' → logprob: -16.875001907348633
    8. '``' → logprob: -17.062501907348633
    9. '0' → logprob: -17.500001907348633
    10. '       ' → logprob: -18.187501907348633

Token 1204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '
' → logprob: -16.7500057220459
    4. '   ' → logprob: -17.2500057220459
    5. '```' → logprob: -17.2500057220459
    6. '0' → logprob: -18.5625057220459
    7. '           ' → logprob: -19.0000057220459
    8. '2' → logprob: -19.0625057220459
    9. '       ' → logprob: -19.8750057220459
    10. '１' → logprob: -20.3125057220459

Token 1205: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1206: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5896048545837402
    2. '```' → logprob: -1.4646048545837402
    3. '               ' → logprob: -1.9646048545837402
    4. '<|end|>' → logprob: -2.7146048545837402
    5. '       ' → logprob: -5.71460485458374
    6. '
' → logprob: -6.46460485458374
    7. '                   ' → logprob: -6.46460485458374
    8. '		' → logprob: -8.339605331420898
    9. '   ' → logprob: -8.464605331420898
    10. '<|end|>' → logprob: -8.464605331420898

Token 1207: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1362324953079224
    2. 'data' → logprob: -1.1362324953079224
    3. 'end' → logprob: -1.7612324953079224
    4. 'start' → logprob: -2.761232376098633
    5. 'heap' → logprob: -3.261232376098633
    6. 'S' → logprob: -3.636232376098633
    7. '```' → logprob: -4.261232376098633
    8. '   ' → logprob: -4.886232376098633
    9. ' data' → logprob: -5.011232376098633
    10. ' i' → logprob: -5.011232376098633

Token 1208: ' trash' (ID: 26508)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.17536479234695435
    2. 'B' → logprob: -2.8003647327423096
    3. 'data' → logprob: -3.4253647327423096
    4. 'end' → logprob: -3.6753647327423096
    5. 'beam' → logprob: -3.6753647327423096
    6. 'start' → logprob: -5.050364971160889
    7. ' cum' → logprob: -6.175364971160889
    8. 'i' → logprob: -6.675364971160889
    9. 'S' → logprob: -6.800364971160889
    10. 'ans' → logprob: -6.925364971160889

Token 1209: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.7405529022216797
    2. ':' → logprob: -1.1155529022216797
    3. ':
' → logprob: -2.3655529022216797
    4. ' and' → logprob: -2.4905529022216797
    5. '[' → logprob: -4.36555290222168
    6. '```' → logprob: -6.86555290222168
    7. '=' → logprob: -6.99055290222168
    8. 'q' → logprob: -7.36555290222168
    9. '.pop' → logprob: -7.61555290222168
    10. ')' → logprob: -7.74055290222168

Token 1210: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5245005488395691
    2. '```' → logprob: -0.8995005488395691
    3. '``' → logprob: -7.399500370025635
    4. '           ' → logprob: -8.274500846862793
    5. '               ' → logprob: -8.524500846862793
    6. '                       ' → logprob: -9.399500846862793
    7. '                  ' → logprob: -10.399500846862793
    8. ' ```' → logprob: -10.899500846862793
    9. ',' → logprob: -11.024500846862793
    10. '[' → logprob: -11.149500846862793

Token 1211: ' data' (ID: 1238)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.61240154504776
    2. 'val' → logprob: -1.3624014854431152
    3. 'S' → logprob: -2.1124014854431152
    4. '```' → logprob: -2.8624014854431152
    5. 't' → logprob: -5.112401485443115
    6. 'while' → logprob: -5.487401485443115
    7. 'test' → logprob: -6.112401485443115
    8. '``' → logprob: -6.237401485443115
    9. '   ' → logprob: -6.612401485443115
    10. ' heap' → logprob: -6.737401485443115

Token 1212: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043470580130815506
    2. '[i' → logprob: -3.168470621109009
    3. '2' → logprob: -9.04347038269043
    4. '
' → logprob: -9.29347038269043
    5. '[' → logprob: -9.66847038269043
    6. 'min' → logprob: -10.04347038269043
    7. '[min' → logprob: -10.16847038269043
    8. 'i' → logprob: -10.79347038269043
    9. '```' → logprob: -11.29347038269043
    10. '[idx' → logprob: -11.66847038269043

Token 1213: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003678932785987854
    2. '=' → logprob: -7.378678798675537
    3. '[' → logprob: -7.503678798675537
    4. '_val' → logprob: -7.628678798675537
    5. ' =' → logprob: -7.753678798675537
    6. '.append' → logprob: -7.878678798675537
    7. '   ' → logprob: -8.378679275512695
    8. '[-' → logprob: -9.003679275512695
    9. 'i' → logprob: -9.128679275512695
    10. '```' → logprob: -9.378679275512695

Token 1214: ']' (ID: 60)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.06681570410728455
    2. '.append' → logprob: -3.4418156147003174
    3. '=' → logprob: -4.5668158531188965
    4. ']' → logprob: -5.1918158531188965
    5. ' =' → logprob: -5.1918158531188965
    6. '[' → logprob: -5.6918158531188965
    7. '```' → logprob: -6.0668158531188965
    8. '.pop' → logprob: -6.6918158531188965
    9. ']=' → logprob: -6.8168158531188965
    10. ')' → logprob: -6.8168158531188965

Token 1215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023002147674560547
    2. ' =' → logprob: -3.8980021476745605
    3. '[' → logprob: -6.6480021476745605
    4. '[-' → logprob: -6.8980021476745605
    5. '   ' → logprob: -10.148002624511719
    6. '=min' → logprob: -10.398002624511719
    7. '```' → logprob: -11.023002624511719
    8. '.append' → logprob: -11.023002624511719
    9. '[min' → logprob: -11.398002624511719
    10. 'min' → logprob: -11.773002624511719

Token 1216: ' S' (ID: 336)
  Prédit: 'trash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trash' → logprob: -0.074434295296669
    2. '-trash' → logprob: -2.824434280395508
    3. '-tr' → logprob: -5.324434280395508
    4. '-' → logprob: -6.199434280395508
    5. 'heap' → logprob: -6.699434280395508
    6. 'min' → logprob: -6.699434280395508
    7. ' trash' → logprob: -7.199434280395508
    8. 'tr' → logprob: -7.449434280395508
    9. 'tras' → logprob: -7.574434280395508
    10. ' -' → logprob: -7.949434280395508

Token 1217: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8820233941078186
    2. ' +' → logprob: -1.0070233345031738
    3. '-' → logprob: -2.257023334503174
    4. '+' → logprob: -2.382023334503174
    5. '[-' → logprob: -4.507023334503174
    6. '[' → logprob: -6.007023334503174
    7. 'max' → logprob: -6.132023334503174
    8. ')' → logprob: -6.257023334503174
    9. '-max' → logprob: -6.257023334503174
    10. '-trash' → logprob: -7.382023334503174

Token 1218: ' data' (ID: 1238)
  Prédit: '-trash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-trash' → logprob: -0.5716930627822876
    2. '-tr' → logprob: -1.8216930627822876
    3. 'trash' → logprob: -1.9466930627822876
    4. '-' → logprob: -2.946692943572998
    5. '-min' → logprob: -3.821692943572998
    6. '-max' → logprob: -4.071692943572998
    7. 'max' → logprob: -4.446692943572998
    8. 'heap' → logprob: -4.571692943572998
    9. 'min' → logprob: -4.821692943572998
    10. '(-' → logprob: -5.821692943572998

Token 1219: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.25737616419792175
    2. '[' → logprob: -2.007376194000244
    3. '2' → logprob: -2.507376194000244
    4. '1' → logprob: -5.257376194000244
    5. 'i' → logprob: -5.632376194000244
    6. '```' → logprob: -7.382376194000244
    7. '[N' → logprob: -8.257375717163086
    8. '
' → logprob: -8.632375717163086
    9. '`' → logprob: -8.632375717163086
    10. '[len' → logprob: -9.007375717163086

Token 1220: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15202072262763977
    2. '[i' → logprob: -2.5270206928253174
    3. 'i' → logprob: -4.0270209312438965
    4. '2' → logprob: -4.1520209312438965
    5. '1' → logprob: -4.1520209312438965
    6. '```' → logprob: -5.4020209312438965
    7. '(i' → logprob: -5.6520209312438965
    8. '[' → logprob: -7.0270209312438965
    9. '-' → logprob: -7.4020209312438965
    10. ']' → logprob: -7.9020209312438965

Token 1221: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.625004768371582
    3. '
' → logprob: -14.125004768371582
    4. '0' → logprob: -16.187503814697266
    5. '   ' → logprob: -16.562503814697266
    6. '2' → logprob: -16.750003814697266
    7. '```' → logprob: -16.812503814697266
    8. 'len' → logprob: -16.875003814697266
    9. '-' → logprob: -17.375003814697266
    10. '１' → logprob: -18.500003814697266

Token 1222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. '0' → logprob: -13.000008583068848
    3. '
' → logprob: -13.375008583068848
    4. ' ' → logprob: -13.562508583068848
    5. '2' → logprob: -13.687508583068848
    6. '```' → logprob: -14.937508583068848
    7. 'i' → logprob: -15.500008583068848
    8. 'len' → logprob: -15.562508583068848
    9. '-' → logprob: -15.687508583068848
    10. '   ' → logprob: -15.750008583068848

Token 1223: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.24320140480995178
    2. '-' → logprob: -2.118201494216919
    3. ' +' → logprob: -3.118201494216919
    4. '                   ' → logprob: -3.743201494216919
    5. '+' → logprob: -4.74320125579834
    6. '               ' → logprob: -5.24320125579834
    7. '           ' → logprob: -5.49320125579834
    8. '```' → logprob: -5.86820125579834
    9. '<|end|>' → logprob: -6.36820125579834
    10. ')' → logprob: -6.99320125579834

Token 1224: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1225: ' trash' (ID: 26508)
  Prédit: 'trash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trash' → logprob: -0.49960848689079285
    2. 'heap' → logprob: -1.3746085166931152
    3. 'max' → logprob: -2.6246085166931152
    4. '-trash' → logprob: -3.9996085166931152
    5. '-' → logprob: -4.249608516693115
    6. 'min' → logprob: -4.499608516693115
    7. '-tr' → logprob: -4.999608516693115
    8. '(-' → logprob: -4.999608516693115
    9. '(tr' → logprob: -6.249608516693115
    10. '(max' → logprob: -6.749608516693115

Token 1226: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005277872551232576
    2. 'q' → logprob: -5.50527811050415
    3. '[-' → logprob: -7.00527811050415
    4. '```' → logprob: -9.380277633666992
    5. 'heap' → logprob: -10.005277633666992
    6. 'Q' → logprob: -10.505277633666992
    7. '.heap' → logprob: -11.005277633666992
    8. '
' → logprob: -11.130277633666992
    9. '   ' → logprob: -11.380277633666992
    10. 'size' → logprob: -11.630277633666992

Token 1227: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.978233846486546e-05
    2. ' ' → logprob: -11.000049591064453
    3. '-' → logprob: -11.125049591064453
    4. 'q' → logprob: -12.250049591064453
    5. '[' → logprob: -12.500049591064453
    6. '```' → logprob: -12.500049591064453
    7. '   ' → logprob: -12.750049591064453
    8. '``' → logprob: -14.437549591064453
    9. '
' → logprob: -14.500049591064453
    10. '  ' → logprob: -15.187549591064453

Token 1228: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20488092303276062
    2. '<|end|>' → logprob: -1.954880952835083
    3. '[' → logprob: -3.954880952835083
    4. ')' → logprob: -4.579880714416504
    5. '])' → logprob: -5.579880714416504
    6. ']
' → logprob: -6.079880714416504
    7. '```' → logprob: -6.079880714416504
    8. '<|end|>' → logprob: -6.329880714416504
    9. ']()' → logprob: -7.704880714416504
    10. '][' → logprob: -7.829880714416504

Token 1229: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8022909760475159
    2. '<|end|>' → logprob: -1.302290916442871
    3. '               ' → logprob: -2.052290916442871
    4. '```' → logprob: -2.427290916442871
    5. '                   ' → logprob: -3.677290916442871
    6. '       ' → logprob: -4.052290916442871
    7. ')' → logprob: -4.552290916442871
    8. '[' → logprob: -6.302290916442871
    9. '   ' → logprob: -6.927290916442871
    10. '<|end|>' → logprob: -6.927290916442871

Token 1230: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1231: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17949070036411285
    2. '                   ' → logprob: -2.054490804672241
    3. ':' → logprob: -3.429490804672241
    4. '   ' → logprob: -6.304490566253662
    5. '               ' → logprob: -7.429490566253662
    6. '           ' → logprob: -7.804490566253662
    7. '                  ' → logprob: -8.55449104309082
    8. '                       ' → logprob: -9.17949104309082
    9. '                    ' → logprob: -9.42949104309082
    10. ' :
' → logprob: -9.80449104309082

Token 1232: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05513490363955498
    2. '   ' → logprob: -4.3051347732543945
    3. '               ' → logprob: -4.3051347732543945
    4. '0' → logprob: -4.4301347732543945
    5. 'data' → logprob: -4.5551347732543945
    6. 'S' → logprob: -6.9301347732543945
    7. 'None' → logprob: -7.0551347732543945
    8. ' data' → logprob: -7.5551347732543945
    9. '           ' → logprob: -7.6801347732543945
    10. 'pass' → logprob: -7.9301347732543945

Token 1233: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.1233121007680893
    2. 'None' → logprob: -2.998311996459961
    3. 'ide' → logprob: -3.623311996459961
    4. '0' → logprob: -4.248311996459961
    5. ' data' → logprob: -4.623311996459961
    6. '                   ' → logprob: -5.498311996459961
    7. '   ' → logprob: -5.873311996459961
    8. '10' → logprob: -7.123311996459961
    9. 'IDE' → logprob: -7.248311996459961
    10. 'S' → logprob: -7.498311996459961

Token 1234: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.007317567011341e-05
    2. '```' → logprob: -10.000089645385742
    3. '   ' → logprob: -11.375089645385742
    4. '[' → logprob: -11.625089645385742
    5. '[-' → logprob: -12.625089645385742
    6. ' =' → logprob: -12.625089645385742
    7. '[i' → logprob: -12.875089645385742
    8. '       ' → logprob: -12.875089645385742
    9. '.append' → logprob: -13.000089645385742
    10. '=' → logprob: -13.125089645385742

Token 1235: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01941426284611225
    2. '[i' → logprob: -4.01941442489624
    3. ' =' → logprob: -7.51941442489624
    4. '.append' → logprob: -7.76941442489624
    5. '[' → logprob: -9.394413948059082
    6. '[:]' → logprob: -9.769413948059082
    7. '```' → logprob: -10.019413948059082
    8. '   ' → logprob: -10.019413948059082
    9. '[-' → logprob: -10.769413948059082
    10. '[]' → logprob: -11.769413948059082

Token 1236: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001995846861973405
    2. ' =' → logprob: -7.001996040344238
    3. '.append' → logprob: -7.626996040344238
    4. '```' → logprob: -8.626996040344238
    5. '[:]' → logprob: -8.751996040344238
    6. '[i' → logprob: -8.751996040344238
    7. '+=' → logprob: -10.251996040344238
    8. '=
' → logprob: -11.376996040344238
    9. ']' → logprob: -11.626996040344238
    10. ')' → logprob: -11.626996040344238

Token 1237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015719952061772346
    2. ' =' → logprob: -6.501572132110596
    3. '[i' → logprob: -9.876571655273438
    4. '[' → logprob: -11.126571655273438
    5. '[:]' → logprob: -13.126571655273438
    6. '   ' → logprob: -13.626571655273438
    7. '=i' → logprob: -16.501571655273438
    8. '[-' → logprob: -16.626571655273438
    9. '```' → logprob: -16.876571655273438
    10. '.append' → logprob: -16.876571655273438

Token 1238: ' S' (ID: 336)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.13641659915447235
    2. 'S' → logprob: -2.1364166736602783
    3. '10' → logprob: -5.511416435241699
    4. '-' → logprob: -7.011416435241699
    5. '   ' → logprob: -7.386416435241699
    6. 'float' → logprob: -7.636416435241699
    7. ' ide' → logprob: -7.636416435241699
    8. 'data' → logprob: -7.761416435241699
    9. '0' → logprob: -8.0114164352417
    10. ' S' → logprob: -8.2614164352417

Token 1239: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7929482460021973
    2. '<|end|>' → logprob: -1.0429482460021973
    3. ' +' → logprob: -1.6679482460021973
    4. '<|end|>' → logprob: -5.417948246002197
    5. ')' → logprob: -7.167948246002197
    6. '```' → logprob: -8.292947769165039
    7. '[' → logprob: -8.542947769165039
    8. 'import' → logprob: -9.542947769165039
    9. '-' → logprob: -9.792947769165039
    10. '           ' → logprob: -10.292947769165039

Token 1240: ' data' (ID: 1238)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.7233970761299133
    2. '0' → logprob: -1.3483970165252686
    3. 'data' → logprob: -1.4733970165252686
    4. 'test' → logprob: -4.723397254943848
    5. '10' → logprob: -5.473397254943848
    6. 'heap' → logprob: -6.223397254943848
    7. '(' → logprob: -6.598397254943848
    8. '100' → logprob: -6.723397254943848
    9. 'sys' → logprob: -7.223397254943848
    10. 'S' → logprob: -7.223397254943848

Token 1241: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3604673743247986
    2. '[i' → logprob: -1.2354674339294434
    3. '2' → logprob: -4.985467433929443
    4. '```' → logprob: -6.235467433929443
    5. '1' → logprob: -6.360467433929443
    6. '[-' → logprob: -7.360467433929443
    7. 'i' → logprob: -8.360466957092285
    8. '0' → logprob: -8.610466957092285
    9. '[N' → logprob: -9.110466957092285
    10. '``' → logprob: -9.485466957092285

Token 1242: ' +' (ID: 659)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10189057886600494
    2. '0' → logprob: -2.6018905639648438
    3. '2' → logprob: -3.9768905639648438
    4. '```' → logprob: -6.351890563964844
    5. '1' → logprob: -8.226890563964844
    6. ']' → logprob: -8.476890563964844
    7. ')' → logprob: -8.601890563964844
    8. '           ' → logprob: -8.726890563964844
    9. ':' → logprob: -8.726890563964844
    10. '   ' → logprob: -8.851890563964844

Token 1243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012047011114191264
    2. '0' → logprob: -9.875120162963867
    3. ' ' → logprob: -10.375120162963867
    4. '2' → logprob: -10.750120162963867
    5. '   ' → logprob: -12.750120162963867
    6. '
' → logprob: -12.937620162963867
    7. '```' → logprob: -13.187620162963867
    8. 'import' → logprob: -14.375120162963867
    9. '10' → logprob: -14.562620162963867
    10. '15' → logprob: -14.562620162963867

Token 1244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002229594625532627
    2. '0' → logprob: -6.127229690551758
    3. '2' → logprob: -10.752229690551758
    4. ' ' → logprob: -12.252229690551758
    5. '
' → logprob: -12.439729690551758
    6. '```' → logprob: -13.002229690551758
    7. '-' → logprob: -13.189729690551758
    8. '   ' → logprob: -13.564729690551758
    9. 'import' → logprob: -13.752229690551758
    10. '[' → logprob: -14.314729690551758

Token 1245: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1246: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7310219407081604
    2. '<|end|>' → logprob: -1.1060218811035156
    3. '           ' → logprob: -2.3560218811035156
    4. '   ' → logprob: -3.1060218811035156
    5. '       ' → logprob: -3.3560218811035156
    6. '``' → logprob: -6.106021881103516
    7. ')' → logprob: -6.106021881103516
    8. '
' → logprob: -6.356021881103516
    9. '               ' → logprob: -6.481021881103516
    10. '<|end|>' → logprob: -6.856021881103516

Token 1247: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7944951057434082
    2. '```' → logprob: -1.0444951057434082
    3. '       ' → logprob: -2.169495105743408
    4. '<|end|>' → logprob: -3.419495105743408
    5. 'continue' → logprob: -3.919495105743408
    6. '   ' → logprob: -4.544495105743408
    7. ')' → logprob: -5.544495105743408
    8. ' continue' → logprob: -5.794495105743408
    9. '	continue' → logprob: -6.544495105743408
    10. 'heap' → logprob: -6.669495105743408

Token 1248: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5600783228874207
    2. ':' → logprob: -1.0600783824920654
    3. '               ' → logprob: -2.8100783824920654
    4. '       ' → logprob: -4.685078144073486
    5. '=' → logprob: -5.310078144073486
    6. '           ' → logprob: -5.560078144073486
    7. ' =' → logprob: -6.935078144073486
    8. '   ' → logprob: -7.060078144073486
    9. '```' → logprob: -7.810078144073486
    10. '):
' → logprob: -8.060078620910645

Token 1249: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8428094983100891
    2. '               ' → logprob: -1.2178094387054443
    3. '   ' → logprob: -1.7178094387054443
    4. '           ' → logprob: -3.0928094387054443
    5. ' break' → logprob: -3.5928094387054443
    6. 'break' → logprob: -4.842809677124023
    7. 'data' → logprob: -5.467809677124023
    8. ' data' → logprob: -6.092809677124023
    9. ' pass' → logprob: -6.217809677124023
    10. ' for' → logprob: -7.092809677124023

Token 1250: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.04247892275452614
    2. 'pass' → logprob: -3.7924790382385254
    3. 'break' → logprob: -5.042479038238525
    4. 'for' → logprob: -5.167479038238525
    5. '   ' → logprob: -5.542479038238525
    6. 'S' → logprob: -7.292479038238525
    7. '```' → logprob: -7.542479038238525
    8. 'start' → logprob: -7.542479038238525
    9. 'continue' → logprob: -7.667479038238525
    10. ' data' → logprob: -8.792478561401367

Token 1251: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01590743474662304
    2. '1' → logprob: -5.265907287597656
    3. '[i' → logprob: -5.890907287597656
    4. '[' → logprob: -6.015907287597656
    5. '.append' → logprob: -6.140907287597656
    6. '   ' → logprob: -7.265907287597656
    7. '```' → logprob: -7.765907287597656
    8. '=' → logprob: -7.890907287597656
    9. ' =' → logprob: -8.140907287597656
    10. '.' → logprob: -8.265907287597656

Token 1252: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6736884713172913
    2. '=' → logprob: -1.1736884117126465
    3. '.append' → logprob: -3.0486884117126465
    4. ' =' → logprob: -3.5486884117126465
    5. '   ' → logprob: -3.5486884117126465
    6. ',' → logprob: -4.0486884117126465
    7. '```' → logprob: -4.1736884117126465
    8. '[' → logprob: -4.4236884117126465
    9. '[]' → logprob: -4.9236884117126465
    10. '[:]' → logprob: -5.1736884117126465

Token 1253: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2178802639245987
    2. ']' → logprob: -1.8428802490234375
    3. ' =' → logprob: -3.7178802490234375
    4. '[i' → logprob: -4.9678802490234375
    5. ']=' → logprob: -5.9678802490234375
    6. ')' → logprob: -6.4678802490234375
    7. '[' → logprob: -7.2178802490234375
    8. '-' → logprob: -7.8428802490234375
    9. '   ' → logprob: -8.092880249023438
    10. '```' → logprob: -8.842880249023438

Token 1254: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005938755348324776
    2. ' =' → logprob: -5.130938529968262
    3. '=S' → logprob: -12.005938529968262
    4. '=
' → logprob: -13.630938529968262
    5. '   ' → logprob: -14.255938529968262
    6. ')' → logprob: -14.380938529968262
    7. '+=' → logprob: -14.505938529968262
    8. ',' → logprob: -14.755938529968262
    9. '=data' → logprob: -15.380938529968262
    10. '```' → logprob: -15.755938529968262

Token 1255: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0028108209371566772
    2. '0' → logprob: -6.002810955047607
    3. '-' → logprob: -9.12781047821045
    4. ' S' → logprob: -9.25281047821045
    5. '10' → logprob: -9.75281047821045
    6. 'min' → logprob: -10.87781047821045
    7. ' ' → logprob: -11.25281047821045
    8. 'ide' → logprob: -11.62781047821045
    9. 'float' → logprob: -11.62781047821045
    10. '999' → logprob: -12.37781047821045

Token 1256: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1257: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.528009295463562
    2. '<|end|>' → logprob: -1.403009295463562
    3. '```' → logprob: -2.6530094146728516
    4. '       ' → logprob: -3.0280094146728516
    5. ')' → logprob: -3.6530094146728516
    6. '           ' → logprob: -4.278009414672852
    7. '<|end|>' → logprob: -6.653009414672852
    8. '               ' → logprob: -7.403009414672852
    9. ',' → logprob: -7.403009414672852
    10. '.' → logprob: -7.903009414672852

Token 1258: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.3538365364074707
    2. '               ' → logprob: -1.6038365364074707
    3. '```' → logprob: -2.4788365364074707
    4. '           ' → logprob: -5.353836536407471
    5. '                   ' → logprob: -5.978836536407471
    6. '   ' → logprob: -6.103836536407471
    7. '       ' → logprob: -6.228836536407471
    8. ' data' → logprob: -6.978836536407471
    9. '``' → logprob: -8.228836059570312
    10. '              ' → logprob: -8.853836059570312

Token 1259: '2' (ID: 17)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12397672235965729
    2. '2' → logprob: -2.248976707458496
    3. '[' → logprob: -4.873976707458496
    4. '```' → logprob: -5.998976707458496
    5. 'i' → logprob: -7.998976707458496
    6. '[-' → logprob: -8.998976707458496
    7. '[
' → logprob: -9.498976707458496
    8. '1' → logprob: -9.498976707458496
    9. '   ' → logprob: -9.998976707458496
    10. ')' → logprob: -10.373976707458496

Token 1260: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001322639436693862
    2. '```' → logprob: -9.62513256072998
    3. '[' → logprob: -10.87513256072998
    4. '   ' → logprob: -11.50013256072998
    5. ' =' → logprob: -11.50013256072998
    6. '=' → logprob: -11.87513256072998
    7. '[-' → logprob: -12.62513256072998
    8. ' [' → logprob: -13.12513256072998
    9. '[
' → logprob: -13.25013256072998
    10. ' +=' → logprob: -13.25013256072998

Token 1261: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005568840075284243
    2. ']' → logprob: -5.880568981170654
    3. '=' → logprob: -6.255568981170654
    4. '[' → logprob: -8.755568504333496
    5. '+=' → logprob: -8.755568504333496
    6. '[
' → logprob: -9.005568504333496
    7. ' =' → logprob: -9.130568504333496
    8. '   ' → logprob: -9.755568504333496
    9. '+' → logprob: -9.880568504333496
    10. ']=' → logprob: -10.255568504333496

Token 1262: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028194548562169075
    2. ' =' → logprob: -3.9031946659088135
    3. '+=' → logprob: -5.528194427490234
    4. '+' → logprob: -5.903194427490234
    5. ' +=' → logprob: -7.278194427490234
    6. ' +' → logprob: -9.028194427490234
    7. '<|end|>' → logprob: -9.528194427490234
    8. '[' → logprob: -11.903194427490234
    9. ')' → logprob: -12.028194427490234
    10. '=
' → logprob: -12.153194427490234

Token 1263: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.007010174915194511
    2. 'ide' → logprob: -5.007009983062744
    3. ' S' → logprob: -8.882010459899902
    4. 'float' → logprob: -10.132010459899902
    5. 'min' → logprob: -10.757010459899902
    6. '10' → logprob: -10.882010459899902
    7. '999' → logprob: -11.132010459899902
    8. '0' → logprob: -11.632010459899902
    9. 'data' → logprob: -11.757010459899902
    10. 'max' → logprob: -12.007010459899902

Token 1264: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6168228387832642
    2. '<|end|>' → logprob: -1.6168228387832642
    3. '```' → logprob: -2.2418227195739746
    4. '   ' → logprob: -2.9918227195739746
    5. '       ' → logprob: -3.3668227195739746
    6. ',' → logprob: -3.6168227195739746
    7. '               ' → logprob: -4.366822719573975
    8. '[' → logprob: -4.616822719573975
    9. '[i' → logprob: -5.741822719573975
    10. ')' → logprob: -5.866822719573975

Token 1265: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5457398891448975
    2. 'trash' → logprob: -1.0457398891448975
    3. 'test' → logprob: -3.2957398891448975
    4. ' ' → logprob: -4.670740127563477
    5. ' trash' → logprob: -5.045740127563477
    6. 'que' → logprob: -5.795740127563477
    7. ' test' → logprob: -6.045740127563477
    8. '-' → logprob: -6.170740127563477
    9. 'heap' → logprob: -6.295740127563477
    10. '10' → logprob: -6.545740127563477

Token 1266: 'trash' (ID: 154724)
  Prédit: 'trash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trash' → logprob: -0.3418339192867279
    2. '0' → logprob: -1.3418339490890503
    3. ' trash' → logprob: -4.46683406829834
    4. ' ' → logprob: -4.84183406829834
    5. 'heap' → logprob: -6.21683406829834
    6. '-' → logprob: -6.21683406829834
    7. '-trash' → logprob: -6.46683406829834
    8. 'que' → logprob: -7.34183406829834
    9. '10' → logprob: -8.09183406829834
    10. ' -' → logprob: -8.27933406829834

Token 1267: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00036775172338820994
    2. '```' → logprob: -8.500368118286133
    3. '0' → logprob: -8.875368118286133
    4. '[
' → logprob: -11.375368118286133
    5. ')' → logprob: -12.000368118286133
    6. '<|end|>' → logprob: -13.500368118286133
    7. '[-' → logprob: -13.750368118286133
    8. '
' → logprob: -14.500368118286133
    9. 'and' → logprob: -14.500368118286133
    10. '   ' → logprob: -14.500368118286133

Token 1268: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007630534935742617
    2. '0' → logprob: -4.882630348205566
    3. '```' → logprob: -11.757630348205566
    4. '[
' → logprob: -12.257630348205566
    5. ' and' → logprob: -12.382630348205566
    6. '   ' → logprob: -12.882630348205566
    7. 'and' → logprob: -12.882630348205566
    8. '
' → logprob: -13.882630348205566
    9. ' ' → logprob: -14.257630348205566
    10. '``' → logprob: -15.257630348205566

Token 1269: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03043827973306179
    2. ')' → logprob: -3.905438184738159
    3. '])' → logprob: -5.530438423156738
    4. ']' → logprob: -5.530438423156738
    5. 'if' → logprob: -6.405438423156738
    6. ')
' → logprob: -9.780438423156738
    7. ')]' → logprob: -9.780438423156738
    8. ' )' → logprob: -10.405438423156738
    9. '])
' → logprob: -10.530438423156738
    10. '()' → logprob: -10.530438423156738

Token 1270: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3200530707836151
    2. ' if' → logprob: -1.8200531005859375
    3. ']' → logprob: -3.1950531005859375
    4. '])' → logprob: -3.3200531005859375
    5. 'if' → logprob: -3.4450531005859375
    6. ')]' → logprob: -6.9450531005859375
    7. ')])' → logprob: -7.8200531005859375
    8. ')
' → logprob: -8.070053100585938
    9. '```' → logprob: -8.695053100585938
    10. '*' → logprob: -9.070053100585938

Token 1271: ' trash' (ID: 26508)
  Prédit: 'trash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trash' → logprob: -0.00014406509581021965
    2. 'len' → logprob: -9.375144004821777
    3. 'tr' → logprob: -10.250144004821777
    4. ' trash' → logprob: -10.875144004821777
    5. '0' → logprob: -13.000144004821777
    6. 'tras' → logprob: -14.125144004821777
    7. '(tr' → logprob: -14.750144004821777
    8. '   ' → logprob: -14.875144004821777
    9. '
' → logprob: -15.000144004821777
    10. ' ' → logprob: -15.000144004821777

Token 1272: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.05290917307138443
    2. ' else' → logprob: -3.0529091358184814
    3. '[' → logprob: -6.4279093742370605
    4. ')' → logprob: -6.9279093742370605
    5. '```' → logprob: -6.9279093742370605
    6. '   ' → logprob: -8.677908897399902
    7. '       ' → logprob: -8.927908897399902
    8. '!=' → logprob: -9.177908897399902
    9. ':' → logprob: -9.552908897399902
    10. 'if' → logprob: -9.677908897399902

Token 1273: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004487844998948276
    2. ' ' → logprob: -7.750448703765869
    3. '   ' → logprob: -11.750449180603027
    4. 'ide' → logprob: -12.625449180603027
    5. 'None' → logprob: -12.750449180603027
    6. '10' → logprob: -13.875449180603027
    7. ')' → logprob: -14.250449180603027
    8. 'float' → logprob: -14.500449180603027
    9. '  ' → logprob: -15.125449180603027
    10. '-' → logprob: -15.500449180603027

Token 1274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016504127415828407
    2. 'ide' → logprob: -9.750164985656738
    3. '10' → logprob: -10.000164985656738
    4. ' ' → logprob: -10.250164985656738
    5. '   ' → logprob: -11.250164985656738
    6. 'None' → logprob: -12.500164985656738
    7. 'float' → logprob: -13.125164985656738
    8. '100' → logprob: -13.375164985656738
    9. 'ideo' → logprob: -14.125164985656738
    10. '(' → logprob: -14.625164985656738

Token 1275: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041028582490980625
    2. ')
' → logprob: -5.50410270690918
    3. '               ' → logprob: -12.00410270690918
    4. '           ' → logprob: -12.12910270690918
    5. '   ' → logprob: -12.87910270690918
    6. '       ' → logprob: -12.87910270690918
    7. ' )' → logprob: -13.37910270690918
    8. ')]' → logprob: -13.37910270690918
    9. '])' → logprob: -14.00410270690918
    10. ')

' → logprob: -14.00410270690918

Token 1276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09206369519233704
    2. 'for' → logprob: -2.9670636653900146
    3. 'i' → logprob: -4.217063903808594
    4. 'while' → logprob: -4.842063903808594
    5. '       ' → logprob: -5.467063903808594
    6. '<|end|>' → logprob: -5.967063903808594
    7. ')' → logprob: -6.342063903808594
    8. 'print' → logprob: -6.967063903808594
    9. 'k' → logprob: -6.967063903808594
    10. '```' → logprob: -7.342063903808594

Token 1277: ' for' (ID: 395)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0047477916814386845
    2. 'seg' → logprob: -6.3797478675842285
    3. ')' → logprob: -7.1297478675842285
    4. ' tree' → logprob: -7.2547478675842285
    5. 'Seg' → logprob: -7.7547478675842285
    6. '   ' → logprob: -7.8797478675842285
    7. 'data' → logprob: -8.87974739074707
    8. ',' → logprob: -9.12974739074707
    9. '```' → logprob: -9.37974739074707
    10. 'for' (adapté à ' for') → logprob: -9.62974739074707

Token 1278: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08998697996139526
    2. ' i' → logprob: -2.46498703956604
    3. 'j' → logprob: -7.839986801147461
    4. '_i' → logprob: -8.589986801147461
    5. 'x' → logprob: -9.464986801147461
    6. ' j' → logprob: -9.464986801147461
    7. 'k' → logprob: -9.464986801147461
    8. '_' → logprob: -9.589986801147461
    9. ' _' → logprob: -11.089986801147461
    10. '(i' → logprob: -11.214986801147461

Token 1279: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.576031506061554
    2. ' in' → logprob: -0.826031506061554
    3. ',' → logprob: -10.076031684875488
    4. 'i' → logprob: -11.701031684875488
    5. '```' → logprob: -11.701031684875488
    6. 'range' → logprob: -12.326031684875488
    7. '   ' → logprob: -12.451031684875488
    8. 'from' → logprob: -12.701031684875488
    9. ' ' → logprob: -12.951031684875488
    10. '
' → logprob: -13.451031684875488

Token 1280: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.3213025744771585e-05
    2. ' range' → logprob: -10.500033378601074
    3. 're' → logprob: -13.000033378601074
    4. '(range' → logprob: -13.125033378601074
    5. 'reverse' → logprob: -15.000033378601074
    6. 'r' → logprob: -15.500033378601074
    7. 'data' → logprob: -15.500033378601074
    8. 'rang' → logprob: -15.625033378601074
    9. 'N' → logprob: -15.750033378601074
    10. '
' → logprob: -16.500032424926758

Token 1281: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2826022803783417
    2. '(N' → logprob: -1.407602310180664
    3. '(' → logprob: -7.782602310180664
    4. 'range' → logprob: -8.532602310180664
    5. 'm' → logprob: -8.782602310180664
    6. '   ' → logprob: -8.907602310180664
    7. '(m' → logprob: -9.282602310180664
    8. '1' → logprob: -9.282602310180664
    9. '(len' → logprob: -9.532602310180664
    10. 'start' → logprob: -9.532602310180664

Token 1282: '):
' (ID: 1883)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6329221725463867
    2. '-' → logprob: -0.7579221725463867
    3. '   ' → logprob: -9.257922172546387
    4. '
' → logprob: -9.507922172546387
    5. '):
' → logprob: -9.632922172546387
    6. ',' → logprob: -10.132922172546387
    7. ' ' → logprob: -11.382922172546387
    8. ')' → logprob: -11.507922172546387
    9. '1' → logprob: -12.132922172546387
    10. '):' → logprob: -12.132922172546387

Token 1283: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041251346468925476
    2. '       ' → logprob: -3.4162514209747314
    3. ' if' → logprob: -5.291251182556152
    4. '	if' → logprob: -6.416251182556152
    5. '```' → logprob: -7.666251182556152
    6. '<|end|>' → logprob: -9.541251182556152
    7. ' for' → logprob: -9.791251182556152
    8. '	for' → logprob: -10.041251182556152
    9. '	' → logprob: -10.166251182556152
    10. ',' → logprob: -10.291251182556152

Token 1284: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06732126325368881
    2. 'if' (adapté à ' if') → logprob: -3.067321300506592
    3. ' if' → logprob: -4.442321300506592
    4. 'data' → logprob: -5.442321300506592
    5. '```' → logprob: -7.442321300506592
    6. 'for' → logprob: -7.817321300506592
    7. '       ' → logprob: -7.817321300506592
    8. ' data' → logprob: -8.067320823669434
    9. 'Seg' → logprob: -8.067320823669434
    10. 'import' → logprob: -9.442320823669434

Token 1285: ' start' (ID: 1604)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.1853695958852768
    2. ' data' → logprob: -1.810369610786438
    3. 'que' → logprob: -6.435369491577148
    4. '   ' → logprob: -7.060369491577148
    5. 'start' → logprob: -7.060369491577148
    6. 'ans' → logprob: -8.060369491577148
    7. 'cnt' → logprob: -8.185369491577148
    8. 'm' → logprob: -8.185369491577148
    9. 'not' → logprob: -8.310369491577148
    10. ' ans' → logprob: -8.685369491577148

Token 1286: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.20187394320964813
    2. '[i' → logprob: -1.7018738985061646
    3. 'arr' → logprob: -9.076873779296875
    4. '<arr' → logprob: -9.201873779296875
    5. '   ' → logprob: -9.826873779296875
    6. '[arr' → logprob: -10.326873779296875
    7. '+' → logprob: -10.576873779296875
    8. '[' → logprob: -10.826873779296875
    9. ' ==' → logprob: -11.076873779296875
    10. '```' → logprob: -11.201873779296875

Token 1287: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.759734732331708e-05
    2. '```' → logprob: -11.375017166137695
    3. '[' → logprob: -13.125017166137695
    4. 'i' → logprob: -13.875017166137695
    5. '\[' → logprob: -14.000017166137695
    6. '[
' → logprob: -14.500017166137695
    7. '!=' → logprob: -14.875017166137695
    8. '
' → logprob: -15.375017166137695
    9. '[start' → logprob: -16.000017166137695
    10. '   ' → logprob: -16.000017166137695

Token 1288: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2234225869178772
    2. ']==' → logprob: -2.4734225273132324
    3. '==' → logprob: -2.9734225273132324
    4. '==-' → logprob: -3.5984225273132324
    5. ' ==' → logprob: -3.9734225273132324
    6. ']!=' → logprob: -4.848422527313232
    7. '!=' → logprob: -5.348422527313232
    8. ')' → logprob: -6.473422527313232
    9. '!=-' → logprob: -6.598422527313232
    10. '[' → logprob: -6.723422527313232

Token 1289: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3240949213504791
    2. ' ==' → logprob: -1.6990948915481567
    3. '!=' → logprob: -3.1990950107574463
    4. '==-' → logprob: -3.5740950107574463
    5. ' !=' → logprob: -4.699094772338867
    6. ' is' → logprob: -4.824094772338867
    7. '!=-' → logprob: -5.949094772338867
    8. 'is' → logprob: -6.574094772338867
    9. '```' → logprob: -6.949094772338867
    10. '>=' → logprob: -7.074094772338867

Token 1290: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.088346359931165e-07
    2. ' -' → logprob: -14.625000953674316
    3. '-i' → logprob: -15.375000953674316
    4. '-data' → logprob: -16.125
    5. '-start' → logprob: -17.125
    6. '```' → logprob: -17.5
    7. '   ' → logprob: -18.25
    8. '0' → logprob: -18.375
    9. '-end' → logprob: -18.625
    10. 'm' → logprob: -18.75

Token 1291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '```' → logprob: -13.62500286102295
    3. ' ' → logprob: -14.12500286102295
    4. 'i' → logprob: -14.87500286102295
    5. '<|end|>' → logprob: -16.250001907348633
    6. '-' → logprob: -17.750001907348633
    7. ',' → logprob: -18.125001907348633
    8. '(i' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.750001907348633
    10. '``' → logprob: -18.812501907348633

Token 1292: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.23050926625728607
    2. ':
' → logprob: -2.3555092811584473
    3. ':' → logprob: -2.7305092811584473
    4. '       ' → logprob: -3.3555092811584473
    5. 'and' → logprob: -5.480509281158447
    6. '           ' → logprob: -5.855509281158447
    7. '   ' → logprob: -6.480509281158447
    8. '<|end|>' → logprob: -7.480509281158447
    9. ',' → logprob: -7.980509281158447
    10. '```' → logprob: -8.105508804321289

Token 1293: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.25837334990501404
    2. ' end' → logprob: -2.258373260498047
    3. 'data' → logprob: -2.758373260498047
    4. ' data' → logprob: -3.383373260498047
    5. 'start' → logprob: -4.758373260498047
    6. 'cum' → logprob: -6.008373260498047
    7. '(end' → logprob: -6.133373260498047
    8. '   ' → logprob: -6.258373260498047
    9. 'trash' → logprob: -6.258373260498047
    10. 'heap' → logprob: -6.508373260498047

Token 1294: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0005035852082073689
    2. '[i' → logprob: -8.000503540039062
    3. 'arr' → logprob: -9.375503540039062
    4. '```' → logprob: -10.875503540039062
    5. '	arr' → logprob: -11.250503540039062
    6. '<arr' → logprob: -11.500503540039062
    7. '[arr' → logprob: -12.250503540039062
    8. '[' → logprob: -12.500503540039062
    9. '>' → logprob: -12.750503540039062
    10. '\' → logprob: -12.750503540039062

Token 1295: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08112159371376038
    2. '[end' → logprob: -2.7061216831207275
    3. '[start' → logprob: -4.581121444702148
    4. '[' → logprob: -7.706121444702148
    5. '```' → logprob: -7.956121444702148
    6. 'i' → logprob: -11.081121444702148
    7. '[j' → logprob: -11.331121444702148
    8. '   ' → logprob: -11.956121444702148
    9. ']' → logprob: -11.956121444702148
    10. '       ' → logprob: -12.081121444702148

Token 1296: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020379772409796715
    2. ']==' → logprob: -4.395379543304443
    3. '[i' → logprob: -5.520379543304443
    4. ']!=' → logprob: -5.770379543304443
    5. '==-' → logprob: -8.520380020141602
    6. '[' → logprob: -8.895380020141602
    7. '==' → logprob: -9.020380020141602
    8. ' ==' → logprob: -9.895380020141602
    9. '!=' → logprob: -10.020380020141602
    10. '!=-' → logprob: -10.395380020141602

Token 1297: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.38534191250801086
    2. '!=' → logprob: -1.6353418827056885
    3. ' ==' → logprob: -3.2603418827056885
    4. '==' → logprob: -3.2603418827056885
    5. '!=-' → logprob: -3.6353418827056885
    6. '+' → logprob: -4.385342121124268
    7. '==-' → logprob: -5.760342121124268
    8. '```' → logprob: -6.135342121124268
    9. ']' → logprob: -6.885342121124268
    10. ' +' → logprob: -7.385342121124268

Token 1298: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6606590747833252
    2. 'i' → logprob: -0.9106590747833252
    3. 'N' → logprob: -2.535659074783325
    4. '-N' → logprob: -7.035658836364746
    5. 'start' → logprob: -7.160658836364746
    6. ' -' → logprob: -8.785658836364746
    7. '-i' → logprob: -9.785658836364746
    8. '```' → logprob: -10.035658836364746
    9. '-start' → logprob: -10.285658836364746
    10. ' i' → logprob: -10.410658836364746

Token 1299: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07038330286741257
    2. 'i' → logprob: -2.945383310317993
    3. 'N' → logprob: -4.195383071899414
    4. '-N' → logprob: -9.070383071899414
    5. '0' → logprob: -9.570383071899414
    6. '1' → logprob: -10.320383071899414
    7. ' -' → logprob: -10.445383071899414
    8. '-i' → logprob: -10.570383071899414
    9. 'float' → logprob: -11.070383071899414
    10. 'sys' → logprob: -11.695383071899414

Token 1300: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5717447400093079
    2. ':' → logprob: -1.321744680404663
    3. '       ' → logprob: -2.696744680404663
    4. ' =' → logprob: -2.821744680404663
    5. ' and' → logprob: -3.446744680404663
    6. '=' → logprob: -5.196744918823242
    7. '   ' → logprob: -6.821744918823242
    8. '           ' → logprob: -6.946744918823242
    9. '):
' → logprob: -7.571744918823242
    10. 'and' → logprob: -7.571744918823242

Token 1301: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.313353031873703
    2. '```' → logprob: -1.4383530616760254
    3. ' end' → logprob: -4.438353061676025
    4. '           ' → logprob: -5.188353061676025
    5. '[end' → logprob: -5.313353061676025
    6. '   ' → logprob: -5.313353061676025
    7. '=end' → logprob: -6.813353061676025
    8. 'end' → logprob: -7.063353061676025
    9. ' for' → logprob: -7.688353061676025
    10. ':
' → logprob: -8.313352584838867

Token 1302: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.0015752100152894855
    2. ' end' → logprob: -6.501574993133545
    3. '           ' → logprob: -10.251575469970703
    4. '   ' → logprob: -11.001575469970703
    5. '```' → logprob: -11.626575469970703
    6. '       ' → logprob: -11.876575469970703
    7. '=end' → logprob: -13.376575469970703
    8. '(end' → logprob: -14.001575469970703
    9. '[end' → logprob: -14.001575469970703
    10. '               ' → logprob: -14.876575469970703

Token 1303: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0003612065047491342
    2. '[i' → logprob: -8.000361442565918
    3. 'arr' → logprob: -10.750361442565918
    4. '```' → logprob: -13.250361442565918
    5. '[arr' → logprob: -14.125361442565918
    6. 'Arr' → logprob: -14.375361442565918
    7. '_array' → logprob: -15.125361442565918
    8. '	arr' → logprob: -15.125361442565918
    9. '[_' → logprob: -15.125361442565918
    10. '=' → logprob: -16.2503604888916

Token 1304: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.286852345103398e-05
    2. '=' → logprob: -10.125042915344238
    3. '[-' → logprob: -13.125042915344238
    4. '[' → logprob: -14.625042915344238
    5. '=i' → logprob: -16.000041961669922
    6. '```' → logprob: -16.125041961669922
    7. '[N' → logprob: -17.125041961669922
    8. ' =' → logprob: -17.375041961669922
    9. 'i' → logprob: -17.375041961669922
    10. '\[' → logprob: -17.875041961669922

Token 1305: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048623017966747284
    2. ' =' → logprob: -3.0486230850219727
    3. '=i' → logprob: -10.423623085021973
    4. ']' → logprob: -12.798623085021973
    5. ']=' → logprob: -13.423623085021973
    6. '=N' → logprob: -14.048623085021973
    7. ')' → logprob: -15.673623085021973
    8. '   ' → logprob: -15.798623085021973
    9. '=
' → logprob: -15.923623085021973
    10. '=n' → logprob: -16.298622131347656

Token 1306: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002929174806922674
    2. ' =' → logprob: -8.250292778015137
    3. '=i' → logprob: -10.375292778015137
    4. '=N' → logprob: -14.875292778015137
    5. '=n' → logprob: -17.375293731689453
    6. '=int' → logprob: -17.875293731689453
    7. '=len' → logprob: -18.125293731689453
    8. '=
' → logprob: -18.250293731689453
    9. '=end' → logprob: -18.625293731689453
    10. '=data' → logprob: -19.875293731689453

Token 1307: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.4498052223643754e-05
    2. ' N' → logprob: -11.500014305114746
    3. '   ' → logprob: -12.375014305114746
    4. ' ' → logprob: -16.875015258789062
    5. '  ' → logprob: -17.125015258789062
    6. '    ' → logprob: -18.125015258789062
    7. 'i' → logprob: -18.250015258789062
    8. '
' → logprob: -18.250015258789062
    9. 'n' → logprob: -18.500015258789062
    10. '`' → logprob: -18.875015258789062

Token 1308: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012523902580142021
    2. ' -' → logprob: -4.387524127960205
    3. '<|end|>' → logprob: -11.637523651123047
    4. '```' → logprob: -12.887523651123047
    5. '1' → logprob: -13.262523651123047
    6. '   ' → logprob: -15.262523651123047
    7. '       ' → logprob: -15.262523651123047
    8. '<|end|>' → logprob: -15.762523651123047
    9. '–' → logprob: -16.137523651123047
    10. '
' → logprob: -16.262523651123047

Token 1309: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.625003814697266
    3. '2' → logprob: -14.250003814697266
    4. '   ' → logprob: -16.750003814697266
    5. '```' → logprob: -17.750003814697266
    6. '
' → logprob: -18.250003814697266
    7. '<|end|>' → logprob: -20.625003814697266
    8. '       ' → logprob: -20.750003814697266
    9. '-' → logprob: -21.000003814697266
    10. '3' → logprob: -21.062503814697266

Token 1310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. '2' → logprob: -13.000004768371582
    3. ' ' → logprob: -13.000004768371582
    4. '
' → logprob: -16.6250057220459
    5. '   ' → logprob: -17.2500057220459
    6. '```' → logprob: -17.3750057220459
    7. '-' → logprob: -19.0000057220459
    8. '3' → logprob: -19.9375057220459
    9. '  ' → logprob: -20.2500057220459
    10. '4' → logprob: -20.2500057220459

Token 1311: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9348876476287842
    2. '<|end|>' → logprob: -1.1848876476287842
    3. '       ' → logprob: -2.059887647628784
    4. '           ' → logprob: -2.559887647628784
    5. '```' → logprob: -2.684887647628784
    6. 'for' → logprob: -4.059887886047363
    7. ')' → logprob: -5.809887886047363
    8. ' for' → logprob: -6.309887886047363
    9. 'continue' → logprob: -6.434887886047363
    10. '...' → logprob: -7.059887886047363

Token 1312: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7990192174911499
    2. '<|end|>' → logprob: -1.04901921749115
    3. '   ' → logprob: -1.67401921749115
    4. '       ' → logprob: -5.4240193367004395
    5. ')' → logprob: -6.1740193367004395
    6. '           ' → logprob: -6.9240193367004395
    7. ' for' → logprob: -7.0490193367004395
    8. ' continue' → logprob: -7.4240193367004395
    9. 'for' → logprob: -7.5490193367004395
    10. '...' → logprob: -7.5490193367004395

Token 1313: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.5361607670783997
    2. 'seg' → logprob: -1.1611607074737549
    3. 'st' → logprob: -2.911160707473755
    4. 'for' → logprob: -4.161160945892334
    5. 'Seg' → logprob: -5.161160945892334
    6. 'import' → logprob: -5.161160945892334
    7. 'from' → logprob: -5.411160945892334
    8. 'idx' → logprob: -6.286160945892334
    9. '```' → logprob: -6.661160945892334
    10. 'num' → logprob: -6.786160945892334

Token 1314: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14133906364440918
    2. ' =' → logprob: -2.516339063644409
    3. '=' → logprob: -4.266339302062988
    4. ',num' → logprob: -4.766339302062988
    5. '_num' → logprob: -4.891339302062988
    6. '_size' → logprob: -5.016339302062988
    7. '1' → logprob: -5.391339302062988
    8. '[' → logprob: -6.016339302062988
    9. '[num' → logprob: -6.266339302062988
    10. '_' → logprob: -6.266339302062988

Token 1315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008861202746629715
    2. '=' → logprob: -5.258861064910889
    3. ' =' → logprob: -5.758861064910889
    4. ',num' → logprob: -8.383861541748047
    5. '[' → logprob: -9.133861541748047
    6. '```' → logprob: -10.133861541748047
    7. ',node' → logprob: -10.883861541748047
    8. ',k' → logprob: -11.383861541748047
    9. ',t' → logprob: -11.758861541748047
    10. ' ,' → logprob: -11.758861541748047

Token 1316: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.09274014830589294
    2. ' num' → logprob: -2.717740058898926
    3. 'Seg' → logprob: -4.467740058898926
    4. ' =' → logprob: -6.342740058898926
    5. ' Seg' → logprob: -6.592740058898926
    6. '*num' → logprob: -6.592740058898926
    7. '[num' → logprob: -6.717740058898926
    8. 'n' → logprob: -7.092740058898926
    9. 'len' → logprob: -7.342740058898926
    10. '```' → logprob: -7.342740058898926

Token 1317: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31368881464004517
    2. ' =' → logprob: -1.3136887550354004
    3. ',' → logprob: -8.563689231872559
    4. '<|end|>' → logprob: -9.188689231872559
    5. '=
' → logprob: -10.563689231872559
    6. '=int' → logprob: -11.688689231872559
    7. '_tokens' → logprob: -11.688689231872559
    8. '=create' → logprob: -11.688689231872559
    9. '_token' → logprob: -12.063689231872559
    10. '```' → logprob: -12.188689231872559

Token 1318: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003205400425940752
    2. ' =' → logprob: -5.753205299377441
    3. ',' → logprob: -11.128205299377441
    4. '=
' → logprob: -11.628205299377441
    5. '<|end|>' → logprob: -14.253205299377441
    6. '[' → logprob: -14.378205299377441
    7. '=create' → logprob: -14.753205299377441
    8. ')=' → logprob: -15.878205299377441
    9. '＝' → logprob: -15.878205299377441
    10. '|=
' → logprob: -15.878205299377441

Token 1319: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -9.014684110297821e-06
    2. ' Seg' → logprob: -11.625008583068848
    3. 'Segment' → logprob: -16.875009536743164
    4. 'seg' → logprob: -19.250009536743164
    5. 'Segments' → logprob: -19.250009536743164
    6. '_S' → logprob: -19.750009536743164
    7. '_seg' → logprob: -20.250009536743164
    8. '(S' → logprob: -20.500009536743164
    9. 'Sig' → logprob: -20.750009536743164
    10. 'Sent' → logprob: -21.250009536743164

Token 1320: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -5.512236498361744e-07
    2. '_tree' → logprob: -14.750000953674316
    3. '_T' → logprob: -17.5
    4. 'Tre' → logprob: -18.375
    5. '	Tree' → logprob: -18.625
    6. 'tree' → logprob: -18.75
    7. ' Tree' → logprob: -18.875
    8. 'ree' → logprob: -19.125
    9. '_TREE' → logprob: -19.5
    10. 'T' → logprob: -19.5

Token 1321: '_build' (ID: 49774)
  Prédit: '_build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.0007104054093360901
    2. 'build' → logprob: -7.250710487365723
    3. '_tree' → logprob: -16.250709533691406
    4. 'Build' → logprob: -16.375709533691406
    5. '```' → logprob: -17.125709533691406
    6. '_update' → logprob: -17.375709533691406
    7. '(build' → logprob: -17.375709533691406
    8. '1' → logprob: -17.875709533691406
    9. '_BUILD' → logprob: -18.125709533691406
    10. '	build' → logprob: -18.250709533691406

Token 1322: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -2.9160102712921798e-05
    2. 'data' → logprob: -10.500029563903809
    3. ',data' → logprob: -14.250029563903809
    4. '[data' → logprob: -14.500029563903809
    5. '(' → logprob: -15.750029563903809
    6. '```' → logprob: -16.875028610229492
    7. ' (' → logprob: -17.125028610229492
    8. '=data' → logprob: -17.500028610229492
    9. '<data' → logprob: -17.750028610229492
    10. '([' → logprob: -18.500028610229492

Token 1323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1080467781284824e-05
    2. ',' → logprob: -10.750041007995605
    3. 'data' → logprob: -11.375041007995605
    4. '2' → logprob: -12.625041007995605
    5. '   ' → logprob: -13.500041007995605
    6. ',data' → logprob: -13.750041007995605
    7. '(data' → logprob: -14.375041007995605
    8. '```' → logprob: -14.750041007995605
    9. '[data' → logprob: -15.500041007995605
    10. ')' → logprob: -15.750041007995605

Token 1324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.286852345103398e-05
    2. ',data' → logprob: -10.375042915344238
    3. ' ,' → logprob: -11.750042915344238
    4. 'def' → logprob: -14.125042915344238
    5. ',
' → logprob: -14.250042915344238
    6. 'data' → logprob: -14.250042915344238
    7. '   ' → logprob: -14.875042915344238
    8. ',se' → logprob: -15.125042915344238
    9. ',[' → logprob: -15.750042915344238
    10. '[' → logprob: -16.125041961669922

Token 1325: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.049367643892765045
    2. 'min' → logprob: -3.049367666244507
    3. ' seg' → logprob: -7.174367427825928
    4. ' min' → logprob: -11.549367904663086
    5. 'se' → logprob: -13.174367904663086
    6. '(seg' → logprob: -13.674367904663086
    7. '```' → logprob: -14.424367904663086
    8. 'Seg' → logprob: -15.424367904663086
    9. 'sem' → logprob: -15.799367904663086
    10. 'lambda' → logprob: -16.174367904663086

Token 1326: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: 0.0
    2. ' func' → logprob: -19.875
    3. 'min' → logprob: -20.375
    4. 'fun' → logprob: -21.125
    5. 'function' → logprob: -21.375
    6. 'def' → logprob: -21.625
    7. 'f' → logprob: -21.875
    8. '(func' → logprob: -21.875
    9. '_func' → logprob: -22.5
    10. '1' → logprob: -22.5

Token 1327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7697225252486533e-06
    2. ' ,' → logprob: -13.625003814697266
    3. ',data' → logprob: -14.000003814697266
    4. ',
' → logprob: -14.625003814697266
    5. ',min' → logprob: -15.375003814697266
    6. ',int' → logprob: -15.375003814697266
    7. ',num' → logprob: -15.625003814697266
    8. '```' → logprob: -15.750003814697266
    9. ',end' → logprob: -16.500003814697266
    10. ',start' → logprob: -16.875003814697266

Token 1328: ' ide' (ID: 2750)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -1.6240566083070007e-06
    2. '10' → logprob: -14.000001907348633
    3. ' ide' → logprob: -14.625001907348633
    4. 'ideo' → logprob: -15.375001907348633
    5. '100' → logprob: -18.875001907348633
    6. '```' → logprob: -19.000001907348633
    7. '`' → logprob: -19.375001907348633
    8. 'ides' → logprob: -19.500001907348633
    9. 'ideal' → logprob: -19.625001907348633
    10. 'idi' → logprob: -19.875001907348633

Token 1329: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.06196914613246918
    2. 'ele' → logprob: -2.811969041824341
    3. 'Ele' → logprob: -14.436968803405762
    4. '-ele' → logprob: -14.561968803405762
    5. '_e' → logprob: -15.061968803405762
    6. '
' → logprob: -17.186969757080078
    7. 'ELE' → logprob: -17.561969757080078
    8. '```' → logprob: -17.686969757080078
    9. '(ele' → logprob: -17.811969757080078
    10. '`' → logprob: -18.311969757080078

Token 1330: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009120595059357584
    2. ')
' → logprob: -7.000912189483643
    3. ')

' → logprob: -15.750911712646484
    4. ')`' → logprob: -15.750911712646484
    5. ')#' → logprob: -16.750911712646484
    6. ')
' → logprob: -17.375911712646484
    7. ')data' → logprob: -17.375911712646484
    8. ' )' → logprob: -17.500911712646484
    9. ')`
' → logprob: -18.250911712646484
    10. '),' → logprob: -18.375911712646484

Token 1331: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.38842108845710754
    2. 'tree' → logprob: -1.2634210586547852
    3. '(tree' → logprob: -4.888421058654785
    4. '
' → logprob: -5.013421058654785
    5. '	tree' → logprob: -5.388421058654785
    6. '.tree' → logprob: -5.388421058654785
    7. ' tree' → logprob: -5.388421058654785
    8. '[' → logprob: -5.388421058654785
    9. '/tree' → logprob: -7.013421058654785
    10. 'Seg' → logprob: -7.013421058654785

Token 1332: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -1.8670179997570813e-05
    2. 'for' → logprob: -11.250019073486328
    3. ' tree' → logprob: -13.500019073486328
    4. '```' → logprob: -13.500019073486328
    5. '   ' → logprob: -14.000019073486328
    6. 'num' → logprob: -14.500019073486328
    7. '
' → logprob: -14.875019073486328
    8. 'def' → logprob: -15.500019073486328
    9. '	tree' → logprob: -15.500019073486328
    10. 'data' → logprob: -15.625019073486328

Token 1333: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0060769254341721535
    2. '1' → logprob: -5.256076812744141
    3. ',' → logprob: -7.131076812744141
    4. '```' → logprob: -11.00607681274414
    5. '_,' → logprob: -11.25607681274414
    6. '_' → logprob: -12.50607681274414
    7. '=' → logprob: -14.00607681274414
    8. '₂' → logprob: -14.00607681274414
    9. '[' → logprob: -14.13107681274414
    10. 's' → logprob: -14.25607681274414

Token 1334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6550729419104755e-05
    2. ',num' → logprob: -10.625036239624023
    3. '=' → logprob: -11.625036239624023
    4. ',data' → logprob: -13.125036239624023
    5. ' ,' → logprob: -14.250036239624023
    6. ' =' → logprob: -15.500036239624023
    7. ',
' → logprob: -15.875036239624023
    8. ',user' → logprob: -16.875036239624023
    9. '```' → logprob: -17.875036239624023
    10. ',size' → logprob: -18.125036239624023

Token 1335: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.16022644937038422
    2. ' num' → logprob: -1.9102264642715454
    3. '(num' → logprob: -14.035226821899414
    4. ',num' → logprob: -14.660226821899414
    5. ' ' → logprob: -14.785226821899414
    6. '[num' → logprob: -14.910226821899414
    7. '=num' → logprob: -16.410226821899414
    8. '	num' → logprob: -16.660226821899414
    9. '*num' → logprob: -16.660226821899414
    10. '_num' → logprob: -16.785226821899414

Token 1336: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009080836549401283
    2. '1' → logprob: -4.88408088684082
    3. '```' → logprob: -6.75908088684082
    4. '=' → logprob: -9.25908088684082
    5. ' =' → logprob: -9.50908088684082
    6. '[' → logprob: -10.50908088684082
    7. '_size' → logprob: -11.13408088684082
    8. '_' → logprob: -11.13408088684082
    9. ',' → logprob: -11.25908088684082
    10. '   ' → logprob: -11.38408088684082

Token 1337: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931481957435608
    2. ' =' → logprob: -0.6931481957435608
    3. '```' → logprob: -14.943148612976074
    4. ',' → logprob: -15.068148612976074
    5. '   ' → logprob: -16.318147659301758
    6. ' ' → logprob: -16.318147659301758
    7. '=
' → logprob: -16.443147659301758
    8. ' =
' → logprob: -17.193147659301758
    9. '＝' → logprob: -17.443147659301758
    10. ')' → logprob: -17.818147659301758

Token 1338: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.00038229089113883674
    2. ' Seg' → logprob: -7.875382423400879
    3. 'seg' → logprob: -14.250382423400879
    4. '   ' → logprob: -14.625382423400879
    5. 'Segment' → logprob: -15.125382423400879
    6. 'Segments' → logprob: -15.250382423400879
    7. ' ' → logprob: -16.000381469726562
    8. 'len' → logprob: -16.125381469726562
    9. '
' → logprob: -16.250381469726562
    10. '```' → logprob: -16.625381469726562

Token 1339: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -3.750436007976532e-05
    2. 'Seg' → logprob: -10.37503719329834
    3. 'ree' → logprob: -12.87503719329834
    4. '_tree' → logprob: -13.25003719329834
    5. '2' → logprob: -14.75003719329834
    6. '1' → logprob: -15.12503719329834
    7. '_T' → logprob: -15.50003719329834
    8. 'build' → logprob: -15.62503719329834
    9. 'Tre' → logprob: -16.000038146972656
    10. 'tree' → logprob: -16.125038146972656

Token 1340: '_build' (ID: 49774)
  Prédit: '_build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.004718010779470205
    2. 'build' → logprob: -5.504717826843262
    3. '_update' → logprob: -7.504717826843262
    4. '1' → logprob: -9.629717826843262
    5. '2' → logprob: -11.504717826843262
    6. 'Build' → logprob: -12.379717826843262
    7. 'update' → logprob: -12.504717826843262
    8. '```' → logprob: -14.004717826843262
    9. ' build' → logprob: -14.254717826843262
    10. '_query' → logprob: -15.004717826843262

Token 1341: '(data' (ID: 4819)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.03008148819208145
    2. '(data' → logprob: -3.5300815105438232
    3. ' data' → logprob: -8.030081748962402
    4. '[data' → logprob: -12.280081748962402
    5. '<data' → logprob: -15.030081748962402
    6. '```' → logprob: -15.780081748962402
    7. '   ' → logprob: -16.280080795288086
    8. '(' → logprob: -16.530080795288086
    9. '	data' → logprob: -16.780080795288086
    10. '`' → logprob: -17.405080795288086

Token 1342: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00409656623378396
    2. 'data' → logprob: -5.629096508026123
    3. '(data' → logprob: -8.754096984863281
    4. '```' → logprob: -9.004096984863281
    5. '1' → logprob: -9.379096984863281
    6. '_' → logprob: -10.629096984863281
    7. '[data' → logprob: -10.754096984863281
    8. '_data' → logprob: -10.879096984863281
    9. '_,' → logprob: -11.379096984863281
    10. '_build' → logprob: -11.504096984863281

Token 1343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.828512363834307e-05
    2. ',data' → logprob: -9.625088691711426
    3. 'data' → logprob: -12.125088691711426
    4. ' ,' → logprob: -12.250088691711426
    5. 'def' → logprob: -12.875088691711426
    6. '```' → logprob: -12.875088691711426
    7. '(seg' → logprob: -13.625088691711426
    8. 'seg' → logprob: -13.750088691711426
    9. '[' → logprob: -13.875088691711426
    10. '   ' → logprob: -13.875088691711426

Token 1344: ' seg' (ID: 3055)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.017505532130599022
    2. 'seg' → logprob: -4.142505645751953
    3. ' ide' → logprob: -6.767505645751953
    4. ' seg' → logprob: -8.392505645751953
    5. '   ' → logprob: -10.017505645751953
    6. '2' → logprob: -11.017505645751953
    7. 'ideo' → logprob: -12.017505645751953
    8. '[' → logprob: -12.142505645751953
    9. 'iden' → logprob: -12.892505645751953
    10. ' ' → logprob: -13.142505645751953

Token 1345: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.803012490272522
    2. '_func' → logprob: -1.553012490272522
    3. '_ele' → logprob: -1.928012490272522
    4. '1' → logprob: -2.1780123710632324
    5. '2' → logprob: -2.8030123710632324
    6. '```' → logprob: -4.928012371063232
    7. '_num' → logprob: -5.553012371063232
    8. 'ele' → logprob: -5.678012371063232
    9. 'num' → logprob: -5.678012371063232
    10. '_size' → logprob: -6.928012371063232

Token 1346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. ' ,' → logprob: -13.000004768371582
    3. '   ' → logprob: -14.625004768371582
    4. '(' → logprob: -14.625004768371582
    5. '```' → logprob: -15.000004768371582
    6. '(tree' → logprob: -15.250004768371582
    7. ',
' → logprob: -15.375004768371582
    8. '[' → logprob: -15.625004768371582
    9. ')' → logprob: -16.750003814697266
    10. '(seg' → logprob: -16.875003814697266

Token 1347: ' ide' (ID: 2750)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.0006342819542624056
    2. ' ide' → logprob: -7.37563419342041
    3. 'ideo' → logprob: -12.62563419342041
    4. '   ' → logprob: -13.00063419342041
    5. 'seg' → logprob: -13.87563419342041
    6. ' ' → logprob: -14.62563419342041
    7. '  ' → logprob: -15.50063419342041
    8. 'ideal' → logprob: -16.125635147094727
    9. '2' → logprob: -16.250635147094727
    10. 'num' → logprob: -16.250635147094727

Token 1348: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.0009142052149400115
    2. 'ele' → logprob: -7.000914096832275
    3. '_le' → logprob: -13.750914573669434
    4. 'Ele' → logprob: -14.250914573669434
    5. '_e' → logprob: -15.000914573669434
    6. 'le' → logprob: -15.125914573669434
    7. '`' → logprob: -16.000913619995117
    8. '1' → logprob: -16.500913619995117
    9. '-ele' → logprob: -16.500913619995117
    10. '```' → logprob: -16.500913619995117

Token 1349: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006279678200371563
    2. ')
' → logprob: -7.3756279945373535
    3. '   ' → logprob: -14.250627517700195
    4. ')`' → logprob: -15.875627517700195
    5. ')

' → logprob: -16.000627517700195
    6. '```' → logprob: -16.500627517700195
    7. ' )' → logprob: -16.625627517700195
    8. ')
' → logprob: -16.875627517700195
    9. ',' → logprob: -16.875627517700195
    10. ')`
' → logprob: -17.000627517700195

Token 1350: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09111756086349487
    2. 'def' → logprob: -3.8411176204681396
    3. '   ' → logprob: -3.9661176204681396
    4. 'while' → logprob: -3.9661176204681396
    5. 'i' → logprob: -4.4661173820495605
    6. '```' → logprob: -4.9661173820495605
    7. 'm' → logprob: -6.3411173820495605
    8. ' for' → logprob: -6.3411173820495605
    9. '[' → logprob: -6.8411173820495605
    10. ')' → logprob: -6.9661173820495605

Token 1351: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002813909435644746
    2. 'i' → logprob: -6.252813816070557
    3. 'def' → logprob: -8.127814292907715
    4. '```' → logprob: -8.877814292907715
    5. 'l' → logprob: -9.127814292907715
    6. 'start' → logprob: -9.127814292907715
    7. ' for' → logprob: -9.627814292907715
    8. '#' → logprob: -10.252814292907715
    9. 'max' → logprob: -10.627814292907715
    10. '   ' → logprob: -10.877814292907715

Token 1352: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1146315485239029
    2. ' i' → logprob: -2.2396316528320312
    3. 'j' → logprob: -7.364631652832031
    4. 'k' → logprob: -8.614631652832031
    5. ' j' → logprob: -8.614631652832031
    6. 'x' → logprob: -8.614631652832031
    7. '_' → logprob: -8.989631652832031
    8. '_i' → logprob: -9.239631652832031
    9. 'l' → logprob: -9.614631652832031
    10. ' _' → logprob: -9.989631652832031

Token 1353: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11380495131015778
    2. 'in' → logprob: -2.238805055618286
    3. ',' → logprob: -7.238804817199707
    4. '   ' → logprob: -8.988804817199707
    5. '(' → logprob: -11.113804817199707
    6. 'range' → logprob: -11.238804817199707
    7. 'start' → logprob: -11.363804817199707
    8. ' ' → logprob: -11.613804817199707
    9. ' =' → logprob: -11.863804817199707
    10. '1' → logprob: -11.988804817199707

Token 1354: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0016626816941425204
    2. ' range' → logprob: -6.501662731170654
    3. '(range' → logprob: -9.001662254333496
    4. 'start' → logprob: -10.626662254333496
    5. 'in' → logprob: -12.751662254333496
    6. 'num' → logprob: -12.876662254333496
    7. 'end' → logprob: -13.501662254333496
    8. 'data' → logprob: -14.376662254333496
    9. '(' → logprob: -14.751662254333496
    10. 'N' → logprob: -14.876662254333496

Token 1355: '(m' (ID: 2145)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2796578109264374
    2. '(range' → logprob: -1.6546578407287598
    3. '(start' → logprob: -4.27965784072876
    4. '(m' → logprob: -4.27965784072876
    5. '(num' → logprob: -4.40465784072876
    6. '(' → logprob: -4.90465784072876
    7. '(tree' → logprob: -6.77965784072876
    8. '(end' → logprob: -6.90465784072876
    9. '(data' → logprob: -7.15465784072876
    10. '((' → logprob: -7.65465784072876

Token 1356: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3451303541660309
    2. '):
' → logprob: -1.7201303243637085
    3. ' -' → logprob: -2.970130443572998
    4. '   ' → logprob: -3.845130443572998
    5. '-' → logprob: -4.220130443572998
    6. ' ,' → logprob: -4.845130443572998
    7. ' +' → logprob: -5.220130443572998
    8. '):' → logprob: -5.345130443572998
    9. '+' → logprob: -5.595130443572998
    10. '       ' → logprob: -6.970130443572998

Token 1357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8088775277137756
    2. '<|end|>' → logprob: -1.3088774681091309
    3. '   ' → logprob: -1.6838774681091309
    4. '	' → logprob: -2.808877468109131
    5. '	   ' → logprob: -4.808877468109131
    6. '    ' → logprob: -5.683877468109131
    7. '	i' → logprob: -6.183877468109131
    8. '	continue' → logprob: -6.183877468109131
    9. '```' → logprob: -6.183877468109131
    10. '	while' → logprob: -6.433877468109131

Token 1358: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11789914965629578
    2. 'Seg' → logprob: -2.367899179458618
    3. ' Seg' → logprob: -4.242898941040039
    4. '```' → logprob: -6.492898941040039
    5. 'start' → logprob: -7.617898941040039
    6. '       ' → logprob: -8.242898941040039
    7. 'heap' → logprob: -8.992898941040039
    8. 'print' → logprob: -9.242898941040039
    9. 'for' → logprob: -9.242898941040039
    10. 'tree' → logprob: -9.492898941040039

Token 1359: ' end' (ID: 1268)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5241535902023315
    2. 'i' → logprob: -1.0241535902023315
    3. '   ' → logprob: -4.524153709411621
    4. '       ' → logprob: -4.774153709411621
    5. 'start' → logprob: -4.774153709411621
    6. 'end' → logprob: -5.149153709411621
    7. ' start' → logprob: -6.149153709411621
    8. 'data' → logprob: -6.524153709411621
    9. 'tree' → logprob: -6.649153709411621
    10. ' end' → logprob: -6.899153709411621

Token 1360: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0007341049495153129
    2. 'arr' → logprob: -8.875734329223633
    3. '   ' → logprob: -9.125734329223633
    4. '_' → logprob: -9.250734329223633
    5. '_idx' → logprob: -9.500734329223633
    6. ' =' → logprob: -9.750734329223633
    7. '[i' → logprob: -10.125734329223633
    8. '```' → logprob: -10.125734329223633
    9. 'Arr' → logprob: -10.250734329223633
    10. '_i' → logprob: -10.750734329223633

Token 1361: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004916008096188307
    2. '[' → logprob: -6.129916191101074
    3. 'i' → logprob: -6.629916191101074
    4. ')' → logprob: -8.004916191101074
    5. '[end' → logprob: -8.629916191101074
    6. '   ' → logprob: -8.754916191101074
    7. '[start' → logprob: -9.129916191101074
    8. '>' → logprob: -9.379916191101074
    9. ' i' → logprob: -9.504916191101074
    10. '[j' → logprob: -9.879916191101074

Token 1362: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0847637951374054
    2. ' ==' → logprob: -3.584763765335083
    3. '==' → logprob: -4.334764003753662
    4. ' !=' → logprob: -4.834764003753662
    5. '[i' → logprob: -4.834764003753662
    6. '>' → logprob: -5.584764003753662
    7. ']==' → logprob: -5.709764003753662
    8. '==-' → logprob: -5.709764003753662
    9. ')' → logprob: -6.084764003753662
    10. '!=' → logprob: -6.334764003753662

Token 1363: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1439355611801147
    2. ' ==' → logprob: -1.3939355611801147
    3. '<' → logprob: -1.8939355611801147
    4. '=' → logprob: -2.5189356803894043
    5. ' !=' → logprob: -2.7689356803894043
    6. '==-' → logprob: -3.2689356803894043
    7. '!=' → logprob: -3.3939356803894043
    8. ' <' → logprob: -4.018935680389404
    9. '>' → logprob: -4.268935680389404
    10. '!=-' → logprob: -4.643935680389404

Token 1364: ' m' (ID: 284)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2264394313097
    2. 'N' → logprob: -1.6014394760131836
    3. 'i' → logprob: -7.601439476013184
    4. ' -' → logprob: -8.601439476013184
    5. '-N' → logprob: -8.726439476013184
    6. '   ' → logprob: -9.101439476013184
    7. 'm' → logprob: -10.976439476013184
    8. 'start' → logprob: -11.351439476013184
    9. ' N' → logprob: -11.601439476013184
    10. '-i' → logprob: -11.726439476013184

Token 1365: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6000003814697266
    2. ':' → logprob: -1.7250003814697266
    3. '):
' → logprob: -2.7250003814697266
    4. ':
' → logprob: -2.8500003814697266
    5. '       ' → logprob: -3.4750003814697266
    6. ' -' → logprob: -3.4750003814697266
    7. ')' → logprob: -3.8500003814697266
    8. '[i' → logprob: -3.9750003814697266
    9. '):' → logprob: -4.100000381469727
    10. '<|end|>' → logprob: -4.725000381469727

Token 1366: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0802738870552275e-05
    2. 'i' → logprob: -11.62501049041748
    3. ' ' → logprob: -13.87501049041748
    4. '```' → logprob: -14.25001049041748
    5. '<|end|>' → logprob: -15.87501049041748
    6. '   ' → logprob: -16.625011444091797
    7. '0' → logprob: -16.875011444091797
    8. '2' → logprob: -17.125011444091797
    9. '       ' → logprob: -17.625011444091797
    10. '[i' → logprob: -17.750011444091797

Token 1367: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. 'i' → logprob: -14.500001907348633
    3. '```' → logprob: -14.500001907348633
    4. '<|end|>' → logprob: -14.875001907348633
    5. '2' → logprob: -15.000001907348633
    6. ' ' → logprob: -15.250001907348633
    7. '...' → logprob: -16.125001907348633
    8. '   ' → logprob: -17.125001907348633
    9. '       ' → logprob: -17.375001907348633
    10. '<|end|>' → logprob: -18.625001907348633

Token 1368: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18576498329639435
    2. ':
' → logprob: -2.060765027999878
    3. '<|end|>' → logprob: -4.185764789581299
    4. '       ' → logprob: -4.435764789581299
    5. '):
' → logprob: -5.435764789581299
    6. ' =' → logprob: -5.810764789581299
    7. '   ' → logprob: -5.935764789581299
    8. '):' → logprob: -6.560764789581299
    9. ',' → logprob: -7.185764789581299
    10. '=' → logprob: -7.310764789581299

Token 1369: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053686439990997314
    2. '```' → logprob: -3.0536863803863525
    3. '<|end|>' → logprob: -5.928686618804932
    4. '   ' → logprob: -6.678686618804932
    5. '           ' → logprob: -7.678686618804932
    6. '[' → logprob: -8.303686141967773
    7. ',' → logprob: -9.428686141967773
    8. '``' → logprob: -10.303686141967773
    9. '(tree' → logprob: -10.553686141967773
    10. '#' → logprob: -10.678686141967773

Token 1370: ' temp' (ID: 5484)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.6365584135055542
    2. '   ' → logprob: -1.3865584135055542
    3. ' Seg' → logprob: -2.1365585327148438
    4. '       ' → logprob: -2.3865585327148438
    5. '           ' → logprob: -4.886558532714844
    6. '```' → logprob: -6.136558532714844
    7. 'tree' → logprob: -8.511558532714844
    8. '``' → logprob: -8.636558532714844
    9. 'start' → logprob: -9.136558532714844
    10. 'for' → logprob: -9.636558532714844

Token 1371: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030252093449234962
    2. '=' → logprob: -3.655251979827881
    3. ',' → logprob: -6.155251979827881
    4. '=query' → logprob: -7.655251979827881
    5. '```' → logprob: -8.155252456665039
    6. '   ' → logprob: -8.155252456665039
    7. '_idx' → logprob: -9.405252456665039
    8. '=int' → logprob: -9.530252456665039
    9. '_query' → logprob: -9.530252456665039
    10. ')' → logprob: -9.905252456665039

Token 1372: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.04282583296298981
    2. 'min' → logprob: -3.292825937271118
    3. ' Seg' → logprob: -5.792825698852539
    4. 'max' → logprob: -7.167825698852539
    5. ' min' → logprob: -7.292825698852539
    6. 'seg' → logprob: -8.792825698852539
    7. ' seg' → logprob: -11.042825698852539
    8. '-S' → logprob: -11.417825698852539
    9. ' max' → logprob: -11.542825698852539
    10. 'tree' → logprob: -11.542825698852539

Token 1373: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.9361264946837764e-07
    2. 'ree' → logprob: -16.25
    3. 'tree' → logprob: -16.875
    4. 'Query' → logprob: -18.375
    5. 'Tre' → logprob: -19.5
    6. '	Tree' → logprob: -19.75
    7. 'TREE' → logprob: -20.375
    8. ' Tree' → logprob: -20.375
    9. '<Tree' → logprob: -20.5
    10. '_tree' → logprob: -20.625

Token 1374: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -3.292907877039397e-06
    2. '_update' → logprob: -13.12500286102295
    3. 'query' → logprob: -13.75000286102295
    4. '=query' → logprob: -16.125003814697266
    5. '.query' → logprob: -17.250003814697266
    6. '1' → logprob: -17.875003814697266
    7. '```' → logprob: -17.875003814697266
    8. 'Query' → logprob: -18.875003814697266
    9. '	query' → logprob: -19.000003814697266
    10. '_QUERY' → logprob: -19.000003814697266

Token 1375: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.250001907348633
    3. 'tree' → logprob: -16.250001907348633
    4. '(
' → logprob: -18.000001907348633
    5. '	tree' → logprob: -18.250001907348633
    6. '```' → logprob: -18.250001907348633
    7. ' (' → logprob: -19.250001907348633
    8. ' tree' → logprob: -21.125001907348633
    9. '(Tree' → logprob: -21.125001907348633
    10. '(team' → logprob: -21.125001907348633

Token 1376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6229243278503418
    2. ',' → logprob: -0.8729243278503418
    3. 'tree' → logprob: -3.247924327850342
    4. '(tree' → logprob: -5.122924327850342
    5. '```' → logprob: -7.747924327850342
    6. '2' → logprob: -8.4979248046875
    7. ',num' → logprob: -8.6229248046875
    8. 'num' → logprob: -8.9979248046875
    9. ' ,' → logprob: -9.4979248046875
    10. ',
' → logprob: -10.9979248046875

Token 1377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06898914277553558
    2. '(tree' → logprob: -2.9439890384674072
    3. ',num' → logprob: -4.318989276885986
    4. '(' → logprob: -8.443988800048828
    5. '```' → logprob: -8.568988800048828
    6. '(num' → logprob: -8.943988800048828
    7. ',temp' → logprob: -9.568988800048828
    8. 'num' → logprob: -10.943988800048828
    9. '(temp' → logprob: -11.443988800048828
    10. ')' → logprob: -11.568988800048828

Token 1378: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0002613358374219388
    2. ' num' → logprob: -8.250261306762695
    3. '	num' → logprob: -20.625261306762695
    4. ',num' → logprob: -21.250261306762695
    5. '   ' → logprob: -22.125261306762695
    6. ' ' → logprob: -22.500261306762695
    7. '(num' → logprob: -23.000261306762695
    8. '[num' → logprob: -23.000261306762695
    9. '<num' → logprob: -23.625261306762695
    10. '=num' → logprob: -23.875261306762695

Token 1379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012023169983876869
    2. '2' → logprob: -9.125120162963867
    3. '```' → logprob: -11.875120162963867
    4. ',' → logprob: -13.250120162963867
    5. 'num' → logprob: -13.250120162963867
    6. '``' → logprob: -16.000120162963867
    7. 'build' → logprob: -16.500120162963867
    8. '   ' → logprob: -16.750120162963867
    9. ')' → logprob: -16.812620162963867
    10. '_build' → logprob: -17.062620162963867

Token 1380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038169484469108284
    2. ',temp' → logprob: -8.375381469726562
    3. ',i' → logprob: -9.000381469726562
    4. ' ,' → logprob: -11.625381469726562
    5. ',user' → logprob: -12.750381469726562
    6. ',start' → logprob: -12.750381469726562
    7. ',t' → logprob: -13.125381469726562
    8. ',end' → logprob: -13.125381469726562
    9. ',num' → logprob: -13.875381469726562
    10. ',x' → logprob: -14.125381469726562

Token 1381: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -3.650518920039758e-06
    2. ' seg' → logprob: -12.625003814697266
    3. '(seg' → logprob: -15.125003814697266
    4. 'Seg' → logprob: -18.125003814697266
    5. '```' → logprob: -19.000003814697266
    6. 'sec' → logprob: -20.125003814697266
    7. 'sg' → logprob: -20.375003814697266
    8. 'sem' → logprob: -20.375003814697266
    9. 'min' → logprob: -20.500003814697266
    10. 'segment' → logprob: -21.125003814697266

Token 1382: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -2.2200749754119897e-06
    2. '```' → logprob: -14.375001907348633
    3. 'tree' → logprob: -14.625001907348633
    4. '1' → logprob: -15.750001907348633
    5. 'f' → logprob: -15.750001907348633
    6. '_func' → logprob: -15.750001907348633
    7. '[' → logprob: -15.750001907348633
    8. 'function' → logprob: -16.000001907348633
    9. '2' → logprob: -16.250001907348633
    10. ' func' → logprob: -16.625001907348633

Token 1383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8312570318812504e-05
    2. '```' → logprob: -11.875018119812012
    3. ' ,' → logprob: -13.125018119812012
    4. '(tree' → logprob: -13.375018119812012
    5. ',None' → logprob: -13.625018119812012
    6. ',num' → logprob: -14.250018119812012
    7. ',user' → logprob: -14.250018119812012
    8. ',start' → logprob: -14.750018119812012
    9. ',data' → logprob: -14.750018119812012
    10. '(' → logprob: -14.875018119812012

Token 1384: ' ide' (ID: 2750)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -1.676292231422849e-05
    2. ' ide' → logprob: -11.000017166137695
    3. 'ideo' → logprob: -17.125017166137695
    4. '10' → logprob: -18.625017166137695
    5. ' ' → logprob: -18.750017166137695
    6. 'ideal' → logprob: -19.250017166137695
    7. '```' → logprob: -20.375017166137695
    8. 'ides' → logprob: -20.750017166137695
    9. '   ' → logprob: -20.875017166137695
    10. 'idi' → logprob: -20.875017166137695

Token 1385: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.0020791208371520042
    2. 'ele' → logprob: -6.252079010009766
    3. 'le' → logprob: -8.877079010009766
    4. 'Ele' → logprob: -11.752079010009766
    5. '_le' → logprob: -13.877079010009766
    6. 'lef' → logprob: -13.877079010009766
    7. '_e' → logprob: -14.627079010009766
    8. 'lec' → logprob: -15.252079010009766
    9. '-ele' → logprob: -15.877079010009766
    10. 'e' → logprob: -16.377079010009766

Token 1386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.762356209335849e-05
    2. ',end' → logprob: -11.12503719329834
    3. ',temp' → logprob: -11.50003719329834
    4. ',start' → logprob: -12.50003719329834
    5. ' ,' → logprob: -12.62503719329834
    6. '           ' → logprob: -13.12503719329834
    7. ')' → logprob: -13.87503719329834
    8. ',
' → logprob: -14.00003719329834
    9. '   ' → logprob: -14.50003719329834
    10. ',user' → logprob: -15.00003719329834

Token 1387: ' m' (ID: 284)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4576234519481659
    2. '0' → logprob: -1.2076234817504883
    3. 'end' → logprob: -3.5826234817504883
    4. 'start' → logprob: -3.7076234817504883
    5. 'm' → logprob: -4.207623481750488
    6. '       ' → logprob: -7.707623481750488
    7. 'num' → logprob: -8.582623481750488
    8. 'cnt' → logprob: -9.332623481750488
    9. '   ' → logprob: -9.707623481750488
    10. ' i' → logprob: -9.707623481750488

Token 1388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07692030817270279
    2. '+' → logprob: -2.7019202709198
    3. ' +' → logprob: -5.451920509338379
    4. '   ' → logprob: -7.201920509338379
    5. '-' → logprob: -7.451920509338379
    6. ',num' → logprob: -7.951920509338379
    7. ',m' → logprob: -7.951920509338379
    8. ' -' → logprob: -8.451920509338379
    9. ' ,' → logprob: -9.076920509338379
    10. ',end' → logprob: -9.576920509338379

Token 1389: ' N' (ID: 478)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4367065131664276
    2. 'N' → logprob: -1.06170654296875
    3. 'num' → logprob: -5.18670654296875
    4. '   ' → logprob: -7.06170654296875
    5. 'start' → logprob: -7.43670654296875
    6. ' end' → logprob: -8.18670654296875
    7. ' N' → logprob: -8.68670654296875
    8. 'm' → logprob: -8.81170654296875
    9. '       ' → logprob: -9.18670654296875
    10. '           ' → logprob: -9.93670654296875

Token 1390: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001613459608051926
    2. ')
' → logprob: -9.375161170959473
    3. '+' → logprob: -11.125161170959473
    4. '-' → logprob: -11.750161170959473
    5. '<|end|>' → logprob: -11.750161170959473
    6. '```' → logprob: -12.000161170959473
    7. ')+' → logprob: -12.375161170959473
    8. ',' → logprob: -12.500161170959473
    9. ');' → logprob: -13.000161170959473
    10. '   ' → logprob: -13.250161170959473

Token 1391: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1392: ' temp' (ID: 5484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6702356338500977
    2. '```' → logprob: -1.5452356338500977
    3. ' if' → logprob: -2.1702356338500977
    4. '       ' → logprob: -3.0452356338500977
    5. 'temp' (adapté à ' temp') → logprob: -3.1702356338500977
    6. 'if' → logprob: -3.6702356338500977
    7. '<|end|>' → logprob: -3.7952356338500977
    8. ' temp' → logprob: -5.295235633850098
    9. '   ' → logprob: -5.420235633850098
    10. ')' → logprob: -5.545235633850098

Token 1393: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28352200984954834
    2. ' =' → logprob: -1.4085220098495483
    3. '=min' → logprob: -7.158522129058838
    4. '   ' → logprob: -8.15852165222168
    5. ' -=' → logprob: -8.28352165222168
    6. '-=' → logprob: -8.78352165222168
    7. '>' → logprob: -9.03352165222168
    8. 'temp' → logprob: -9.03352165222168
    9. '+=' → logprob: -9.53352165222168
    10. 'min' → logprob: -9.78352165222168

Token 1394: ' beam' (ID: 36650)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3524024784564972
    2. 'data' → logprob: -1.3524024486541748
    3. ' S' → logprob: -4.727402687072754
    4. ' data' → logprob: -4.852402687072754
    5. 'start' → logprob: -5.102402687072754
    6. 'beam' → logprob: -5.727402687072754
    7. '-' → logprob: -5.977402687072754
    8. 'ans' → logprob: -6.352402687072754
    9. '0' → logprob: -6.602402687072754
    10. 'heap' → logprob: -7.227402687072754

Token 1395: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004911953583359718
    2. '[end' → logprob: -8.50049114227295
    3. '[m' → logprob: -8.62549114227295
    4. '[start' → logprob: -10.37549114227295
    5. '[' → logprob: -10.37549114227295
    6. '```' → logprob: -11.12549114227295
    7. '[temp' → logprob: -11.37549114227295
    8. '[
' → logprob: -12.00049114227295
    9. '[j' → logprob: -13.50049114227295
    10. '   ' → logprob: -13.75049114227295

Token 1396: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03334873542189598
    2. ')[' → logprob: -3.908348798751831
    3. '[' → logprob: -4.408348560333252
    4. '0' → logprob: -8.78334903717041
    5. '```' → logprob: -10.03334903717041
    6. '[i' → logprob: -10.15834903717041
    7. ']' → logprob: -10.40834903717041
    8. '>[' → logprob: -10.40834903717041
    9. ' ][' → logprob: -10.53334903717041
    10. '"][' → logprob: -10.53334903717041

Token 1397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011723674833774567
    2. '1' → logprob: -6.7511725425720215
    3. ' ' → logprob: -13.751172065734863
    4. '```' → logprob: -15.126172065734863
    5. '   ' → logprob: -15.376172065734863
    6. '[' → logprob: -15.688672065734863
    7. '
' → logprob: -16.06367301940918
    8. '][' → logprob: -16.93867301940918
    9. '`' → logprob: -17.18867301940918
    10. '2' → logprob: -17.43867301940918

Token 1398: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18722376227378845
    2. ')' → logprob: -2.1872236728668213
    3. '-' → logprob: -2.9372236728668213
    4. ')
' → logprob: -6.0622239112854
    5. ')-' → logprob: -7.4372239112854
    6. '*' → logprob: -7.9372239112854
    7. '           ' → logprob: -7.9372239112854
    8. '   ' → logprob: -8.062223434448242
    9. '```' → logprob: -8.312223434448242
    10. ' *' → logprob: -9.062223434448242

Token 1399: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28399524092674255
    2. '-' → logprob: -1.783995270729065
    3. ' -' → logprob: -3.2839951515197754
    4. '
' → logprob: -3.9089951515197754
    5. '<|end|>' → logprob: -4.408995151519775
    6. '           ' → logprob: -5.533995151519775
    7. ' if' → logprob: -6.783995151519775
    8. ')' → logprob: -7.033995151519775
    9. ' ' → logprob: -7.283995151519775
    10. '       ' → logprob: -7.283995151519775

Token 1400: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -1.1566334962844849
    2. '-' → logprob: -1.9066334962844849
    3. 'que' → logprob: -1.9066334962844849
    4. 'heap' → logprob: -2.1566333770751953
    5. 'queue' → logprob: -3.1566333770751953
    6. '(-' → logprob: -3.2816333770751953
    7. '-be' → logprob: -3.4066333770751953
    8. 'tree' → logprob: -3.5316333770751953
    9. 'max' → logprob: -3.9066333770751953
    10. 'data' → logprob: -3.9066333770751953

Token 1401: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00967581570148468
    2. 'i' → logprob: -5.384675979614258
    3. '[m' → logprob: -5.384675979614258
    4. 'm' → logprob: -7.884675979614258
    5. '```' → logprob: -10.134675979614258
    6. '[' → logprob: -10.759675979614258
    7. '[
' → logprob: -12.259675979614258
    8. '[end' → logprob: -12.384675979614258
    9. ' i' → logprob: -13.259675979614258
    10. '[start' → logprob: -13.259675979614258

Token 1402: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0694049596786499
    2. '[m' → logprob: -3.3194050788879395
    3. '[i' → logprob: -3.6944050788879395
    4. '[' → logprob: -5.1944050788879395
    5. 'm' → logprob: -7.8194050788879395
    6. '```' → logprob: -10.944404602050781
    7. '[][' → logprob: -12.069404602050781
    8. '   ' → logprob: -12.569404602050781
    9. '-' → logprob: -12.694404602050781
    10. '``' → logprob: -12.819404602050781

Token 1403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22962333261966705
    2. 'm' → logprob: -1.6046233177185059
    3. 'i' → logprob: -5.479623317718506
    4. '```' → logprob: -11.729623794555664
    5. '   ' → logprob: -12.354623794555664
    6. '[m' → logprob: -12.479623794555664
    7. '(m' → logprob: -12.729623794555664
    8. ' m' → logprob: -13.104623794555664
    9. '(i' → logprob: -13.354623794555664
    10. ' ' → logprob: -13.604623794555664

Token 1404: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.192311093211174
    2. ')
' → logprob: -1.8173110485076904
    3. '   ' → logprob: -4.5673112869262695
    4. '<|end|>' → logprob: -7.0673112869262695
    5. '       ' → logprob: -8.19231128692627
    6. ']' → logprob: -8.44231128692627
    7. '           ' → logprob: -8.69231128692627
    8. '
' → logprob: -9.19231128692627
    9. '```' → logprob: -9.19231128692627
    10. '[' → logprob: -9.19231128692627

Token 1405: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1406: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19575700163841248
    2. ' if' → logprob: -1.8207570314407349
    3. '   ' → logprob: -4.445756912231445
    4. '           ' → logprob: -6.820756912231445
    5. 'temp' → logprob: -7.070756912231445
    6. 'tree' → logprob: -7.445756912231445
    7. 'for' → logprob: -8.320756912231445
    8. '       ' → logprob: -8.320756912231445
    9. '```' → logprob: -8.445756912231445
    10. '	if' → logprob: -8.445756912231445

Token 1407: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.010103697888553143
    2. ' temp' → logprob: -4.635103702545166
    3. 'ans' → logprob: -8.135103225708008
    4. 'beam' → logprob: -10.385103225708008
    5. ' ans' → logprob: -11.385103225708008
    6. 'end' → logprob: -12.760103225708008
    7. 'tree' → logprob: -12.885103225708008
    8. ' beam' → logprob: -13.385103225708008
    9. '(temp' → logprob: -13.635103225708008
    10. 'tmp' → logprob: -13.885103225708008

Token 1408: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03545165807008743
    2. '<=' → logprob: -3.785451650619507
    3. ' <' → logprob: -4.535451889038086
    4. '<' → logprob: -7.410451889038086
    5. '   ' → logprob: -8.035451889038086
    6. '[' → logprob: -9.410451889038086
    7. '```' → logprob: -9.410451889038086
    8. '=' → logprob: -9.535451889038086
    9. ' *' → logprob: -9.910451889038086
    10. ' ' → logprob: -10.160451889038086

Token 1409: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '```' → logprob: -16.375295639038086
    4. '   ' → logprob: -16.500295639038086
    5. '           ' → logprob: -18.750295639038086
    6. '       ' → logprob: -18.875295639038086
    7. '<|end|>' → logprob: -18.875295639038086
    8. '  ' → logprob: -19.375295639038086
    9. '۰' → logprob: -19.375295639038086
    10. '1' → logprob: -19.625295639038086

Token 1410: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.75002098083496
    4. '  ' → logprob: -19.37502098083496
    5. '10' → logprob: -19.37502098083496
    6. '```' → logprob: -19.37502098083496
    7. '1' → logprob: -19.75002098083496
    8. '       ' → logprob: -20.37502098083496
    9. '
' → logprob: -20.68752098083496
    10. '     ' → logprob: -20.87502098083496

Token 1411: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44929713010787964
    2. ':
' → logprob: -1.0742971897125244
    3. ' and' → logprob: -3.9492971897125244
    4. '       ' → logprob: -7.449296951293945
    5. '           ' → logprob: -8.949296951293945
    6. '   ' → logprob: -9.699296951293945
    7. '               ' → logprob: -9.699296951293945
    8. '):
' → logprob: -9.824296951293945
    9. '<|end|>' → logprob: -9.949296951293945
    10. ',' → logprob: -10.074296951293945

Token 1412: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07909908145666122
    2. '```' → logprob: -3.704099178314209
    3. ':
' → logprob: -4.079099178314209
    4. '           ' → logprob: -4.329099178314209
    5. ':' → logprob: -4.829099178314209
    6. ' and' → logprob: -5.704099178314209
    7. '<|end|>' → logprob: -6.079099178314209
    8. '):
' → logprob: -6.329099178314209
    9. '                               ' → logprob: -6.454099178314209
    10. '       ' → logprob: -6.454099178314209

Token 1413: ' temp' (ID: 5484)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.9036434888839722
    2. 'ans' → logprob: -1.4036434888839722
    3. '       ' → logprob: -2.1536436080932617
    4. 'start' → logprob: -2.7786436080932617
    5. '           ' → logprob: -3.0286436080932617
    6. '```' → logprob: -3.1536436080932617
    7. ' start' → logprob: -4.028643608093262
    8. 'break' → logprob: -4.528643608093262
    9. 'end' → logprob: -4.903643608093262
    10. 'print' → logprob: -5.153643608093262

Token 1414: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4755772650241852
    2. '=' → logprob: -0.9755772352218628
    3. ':' → logprob: -8.225577354431152
    4. '   ' → logprob: -8.350577354431152
    5. ' +=' → logprob: -9.100577354431152
    6. ',' → logprob: -9.475577354431152
    7. ':
' → logprob: -9.725577354431152
    8. '           ' → logprob: -9.725577354431152
    9. '+=' → logprob: -9.725577354431152
    10. ' <' → logprob: -9.975577354431152

Token 1415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020854828879237175
    2. '=' → logprob: -3.8958547115325928
    3. ',' → logprob: -8.520854949951172
    4. ')' → logprob: -10.520854949951172
    5. '<|end|>' → logprob: -10.645854949951172
    6. ' ' → logprob: -11.020854949951172
    7. '   ' → logprob: -11.395854949951172
    8. ' +=' → logprob: -11.895854949951172
    9. ' =
' → logprob: -12.020854949951172
    10. '    ' → logprob: -12.645854949951172

Token 1416: ' abs' (ID: 8443)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.7048460245132446
    2. 'beam' → logprob: -1.5798460245132446
    3. 'ans' → logprob: -2.329845905303955
    4. 'seg' → logprob: -3.079845905303955
    5. 'data' → logprob: -3.329845905303955
    6. 'abs' → logprob: -3.954845905303955
    7. 'max' → logprob: -4.204845905303955
    8. 'cum' → logprob: -4.704845905303955
    9. ' Seg' → logprob: -4.829845905303955
    10. 'temp' → logprob: -4.954845905303955

Token 1417: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.009620082564651966
    2. 'temp' → logprob: -4.759620189666748
    3. '(' → logprob: -7.634620189666748
    4. '(test' → logprob: -7.634620189666748
    5. '(data' → logprob: -11.75961971282959
    6. '((' → logprob: -12.13461971282959
    7. '(ans' → logprob: -12.25961971282959
    8. '(t' → logprob: -12.38461971282959
    9. '(tmp' → logprob: -12.75961971282959
    10. '(
' → logprob: -12.88461971282959

Token 1418: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007200982421636581
    2. ')
' → logprob: -5.007201194763184
    3. '[' → logprob: -9.132201194763184
    4. '       ' → logprob: -9.382201194763184
    5. '*' → logprob: -10.007201194763184
    6. '           ' → logprob: -10.007201194763184
    7. ')*' → logprob: -10.007201194763184
    8. '   ' → logprob: -10.257201194763184
    9. '<|end|>' → logprob: -10.757201194763184
    10. '               ' → logprob: -10.882201194763184

Token 1419: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.234607458114624
    2. '<|end|>' → logprob: -1.359607458114624
    3. '[' → logprob: -1.984607458114624
    4. '               ' → logprob: -2.609607458114624
    5. '                   ' → logprob: -2.734607458114624
    6. '           ' → logprob: -2.984607458114624
    7. '       ' → logprob: -3.359607458114624
    8. '   ' → logprob: -3.984607458114624
    9. '```' → logprob: -4.109607696533203
    10. '                               ' → logprob: -4.984607696533203

Token 1420: ' B' (ID: 418)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06577447801828384
    2. '           ' → logprob: -3.315774440765381
    3. ' if' → logprob: -4.315774440765381
    4. '   ' → logprob: -5.440774440765381
    5. '       ' → logprob: -5.815774440765381
    6. 'ans' → logprob: -6.315774440765381
    7. 'for' → logprob: -6.315774440765381
    8. 'tree' → logprob: -6.815774440765381
    9. 'temp' → logprob: -7.190774440765381
    10. '```' → logprob: -7.815774440765381

Token 1421: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4522534906864166
    2. ',' → logprob: -2.077253580093384
    3. '[' → logprob: -2.202253580093384
    4. '=' → logprob: -2.202253580093384
    5. '<|end|>' → logprob: -4.827253341674805
    6. ' *' → logprob: -5.577253341674805
    7. '*' → logprob: -6.077253341674805
    8. ')' → logprob: -6.577253341674805
    9. '   ' → logprob: -7.952253341674805
    10. ' *=' → logprob: -8.327253341674805

Token 1422: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.033278629183769226
    2. 'cum' → logprob: -4.033278465270996
    3. ' beam' → logprob: -4.658278465270996
    4. 'ans' → logprob: -5.283278465270996
    5. ' cum' → logprob: -8.033278465270996
    6. ' ans' → logprob: -9.783278465270996
    7. '   ' → logprob: -11.408278465270996
    8. 'abs' → logprob: -11.783278465270996
    9. '```' → logprob: -11.908278465270996
    10. 'heap' → logprob: -12.033278465270996

Token 1423: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2113979209971149e-05
    2. '```' → logprob: -12.250012397766113
    3. '[' → logprob: -12.500012397766113
    4. 'i' → logprob: -13.125012397766113
    5. '[
' → logprob: -14.625012397766113
    6. '<|end|>' → logprob: -15.250012397766113
    7. '[m' → logprob: -15.750012397766113
    8. '(i' → logprob: -16.125011444091797
    9. '[end' → logprob: -16.375011444091797
    10. ']' → logprob: -16.500011444091797

Token 1424: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2827625870704651
    2. '[' → logprob: -1.4077625274658203
    3. ')[' → logprob: -7.03276252746582
    4. '```' → logprob: -7.90776252746582
    5. '>[' → logprob: -8.78276252746582
    6. ']' → logprob: -9.65776252746582
    7. ')][' → logprob: -11.28276252746582
    8. '}[' → logprob: -11.40776252746582
    9. ']][' → logprob: -11.53276252746582
    10. ' ][' → logprob: -11.65776252746582

Token 1425: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.011373155459296e-05
    2. '0' → logprob: -10.750030517578125
    3. '
' → logprob: -12.625030517578125
    4. '```' → logprob: -12.875030517578125
    5. '[' → logprob: -14.000030517578125
    6. '][' → logprob: -15.062530517578125
    7. ' ' → logprob: -15.062530517578125
    8. ']' → logprob: -15.250030517578125
    9. '``' → logprob: -15.375030517578125
    10. '   ' → logprob: -15.562530517578125

Token 1426: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5101104378700256
    2. '<|end|>' → logprob: -1.2601103782653809
    3. ')
' → logprob: -2.760110378265381
    4. '[' → logprob: -3.635110378265381
    5. '<|end|>' → logprob: -5.135110378265381
    6. ']' → logprob: -5.510110378265381
    7. '```' → logprob: -5.635110378265381
    8. '
' → logprob: -6.135110378265381
    9. '*' → logprob: -6.260110378265381
    10. ',' → logprob: -6.635110378265381

Token 1427: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1428: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05727327615022659
    2. '                   ' → logprob: -3.5572733879089355
    3. ' if' → logprob: -3.8072733879089355
    4. '               ' → logprob: -5.5572733879089355
    5. 'for' → logprob: -7.6822733879089355
    6. '           ' → logprob: -7.6822733879089355
    7. '```' → logprob: -10.182272911071777
    8. '   ' → logprob: -10.307272911071777
    9. '                       ' → logprob: -10.557272911071777
    10. '       ' → logprob: -10.807272911071777

Token 1429: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.01105878408998251
    2. ' B' → logprob: -4.511058807373047
    3. 'temp' → logprob: -12.386058807373047
    4. 'ans' → logprob: -13.011058807373047
    5. '   ' → logprob: -13.136058807373047
    6. ' ans' → logprob: -13.761058807373047
    7. ' ' → logprob: -14.386058807373047
    8. '  ' → logprob: -15.136058807373047
    9. '`' → logprob: -15.386058807373047
    10. '	B' → logprob: -16.386058807373047

Token 1430: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2015519142150879
    2. '*' → logprob: -1.701551914215088
    3. ' >' → logprob: -10.20155143737793
    4. '>' → logprob: -10.32655143737793
    5. '```' → logprob: -10.95155143737793
    6. '   ' → logprob: -11.20155143737793
    7. ',' → logprob: -11.32655143737793
    8. '*[' → logprob: -12.45155143737793
    9. '[' → logprob: -12.57655143737793
    10. ' ' → logprob: -12.95155143737793

Token 1431: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0040862360037863255
    2. ' ans' → logprob: -5.504086017608643
    3. '(ans' → logprob: -12.2540864944458
    4. 'temp' → logprob: -12.7540864944458
    5. '	ans' → logprob: -16.004085540771484
    6. '_ans' → logprob: -16.504085540771484
    7. 'Ans' → logprob: -18.379085540771484
    8. 'answer' → logprob: -18.379085540771484
    9. ' temp' → logprob: -18.504085540771484
    10. 'start' → logprob: -18.754085540771484

Token 1432: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00017982252757064998
    2. '```' → logprob: -9.1251802444458
    3. '0' → logprob: -9.6251802444458
    4. '1' → logprob: -12.7501802444458
    5. '``' → logprob: -14.8751802444458
    6. 'ans' → logprob: -15.0001802444458
    7. '[
' → logprob: -15.1251802444458
    8. '#' → logprob: -16.000179290771484
    9. '
' → logprob: -16.000179290771484
    10. '`' → logprob: -16.125179290771484

Token 1433: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324839122593403
    2. '1' → logprob: -3.7732484340667725
    3. '[' → logprob: -13.023248672485352
    4. '```' → logprob: -14.648248672485352
    5. '   ' → logprob: -16.14824867248535
    6. ' ' → logprob: -16.77324867248535
    7. '
' → logprob: -17.27324867248535
    8. '-' → logprob: -18.14824867248535
    9. '#' → logprob: -18.27324867248535
    10. '4' → logprob: -18.39824867248535

Token 1434: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3746876120567322
    2. ' <' → logprob: -1.374687671661377
    3. '>' → logprob: -3.249687671661377
    4. ' >' → logprob: -3.874687671661377
    5. '[' → logprob: -11.874687194824219
    6. '<|end|>' → logprob: -11.874687194824219
    7. '```' → logprob: -12.874687194824219
    8. '><' → logprob: -13.249687194824219
    9. '<class' → logprob: -13.374687194824219
    10. ' ' → logprob: -13.499687194824219

Token 1435: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.09581504762172699
    2. ' <' → logprob: -2.4708149433135986
    3. '>' → logprob: -5.220815181732178
    4. ' >' → logprob: -6.595815181732178
    5. '[' → logprob: -10.47081470489502
    6. '<int' → logprob: -10.47081470489502
    7. '```' → logprob: -11.59581470489502
    8. '<
' → logprob: -13.34581470489502
    9. '<size' → logprob: -13.72081470489502
    10. '<class' → logprob: -14.09581470489502

Token 1436: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10024064034223557
    2. ' ans' → logprob: -2.350240707397461
    3. '(ans' → logprob: -10.850240707397461
    4. '	ans' → logprob: -11.850240707397461
    5. 'temp' → logprob: -12.725240707397461
    6. '```' → logprob: -13.475240707397461
    7. 'B' → logprob: -13.725240707397461
    8. '_ans' → logprob: -14.600240707397461
    9. '   ' → logprob: -15.100240707397461
    10. '           ' → logprob: -15.975240707397461

Token 1437: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.9875325708417222e-05
    2. '[i' → logprob: -10.875029563903809
    3. '```' → logprob: -11.500029563903809
    4. 'ans' → logprob: -14.750029563903809
    5. '1' → logprob: -16.000030517578125
    6. '``' → logprob: -16.750030517578125
    7. '   ' → logprob: -17.000030517578125
    8. '0' → logprob: -17.500030517578125
    9. 'i' → logprob: -17.500030517578125
    10. ' [' → logprob: -17.875030517578125

Token 1438: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -16.0
    3. '```' → logprob: -16.625
    4. '0' → logprob: -16.75
    5. ' ' → logprob: -16.875
    6. '[' → logprob: -17.0
    7. '
' → logprob: -17.25
    8. '-' → logprob: -18.875
    9. '  ' → logprob: -19.25
    10. '``' → logprob: -19.5

Token 1439: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.043015290051698685
    2. '*' → logprob: -3.168015241622925
    3. '```' → logprob: -12.668015480041504
    4. '               ' → logprob: -13.293015480041504
    5. '           ' → logprob: -13.668015480041504
    6. '*t' → logprob: -13.668015480041504
    7. ' ' → logprob: -13.793015480041504
    8. '                   ' → logprob: -14.043015480041504
    9. '        ' → logprob: -14.168015480041504
    10. '          ' → logprob: -14.293015480041504

Token 1440: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04867740720510483
    2. '*' → logprob: -3.048677444458008
    3. '```' → logprob: -10.548677444458008
    4. '*t' → logprob: -11.298677444458008
    5. '[i' → logprob: -11.548677444458008
    6. '*i' → logprob: -11.673677444458008
    7. ':' → logprob: -12.048677444458008
    8. '[' → logprob: -12.298677444458008
    9. ',' → logprob: -12.423677444458008
    10. '*[' → logprob: -12.423677444458008

Token 1441: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -5.860340752406046e-05
    2. ' temp' → logprob: -9.7500581741333
    3. 't' → logprob: -16.625059127807617
    4. 'abs' → logprob: -17.250059127807617
    5. 'tmp' → logprob: -17.250059127807617
    6. '	temp' → logprob: -18.875059127807617
    7. '(temp' → logprob: -19.250059127807617
    8. '_temp' → logprob: -19.750059127807617
    9. '$temp' → logprob: -19.875059127807617
    10. 'tem' → logprob: -20.125059127807617

Token 1442: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2791931629180908
    2. ':' → logprob: -1.9041931629180908
    3. '[' → logprob: -2.904193162918091
    4. ':
' → logprob: -4.654192924499512
    5. '+' → logprob: -5.154192924499512
    6. '```' → logprob: -5.279192924499512
    7. '<|end|>' → logprob: -5.529192924499512
    8. '[temp' → logprob: -6.029192924499512
    9. '*' → logprob: -6.404192924499512
    10. '       ' → logprob: -6.654192924499512

Token 1443: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08925002068281174
    2. '                   ' → logprob: -3.089250087738037
    3. ':' → logprob: -3.464250087738037
    4. '               ' → logprob: -5.339250087738037
    5. '                       ' → logprob: -5.839250087738037
    6. '           ' → logprob: -7.839250087738037
    7. '[' → logprob: -9.464249610900879
    8. '=' → logprob: -9.589249610900879
    9. '):
' → logprob: -9.589249610900879
    10. '                  ' → logprob: -9.964249610900879

Token 1444: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.19847983121871948
    2. '                   ' → logprob: -2.5734798908233643
    3. '                               ' → logprob: -2.8234798908233643
    4. '               ' → logprob: -3.9484798908233643
    5. '                       ' → logprob: -4.948479652404785
    6. '                           ' → logprob: -5.198479652404785
    7. '                                           ' → logprob: -5.823479652404785
    8. '``' → logprob: -6.073479652404785
    9. '                                   ' → logprob: -6.073479652404785
    10. '                                       ' → logprob: -6.573479652404785

Token 1445: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0007104054093360901
    2. ' ans' → logprob: -7.250710487365723
    3. '	ans' → logprob: -15.125710487365723
    4. '```' → logprob: -16.375709533691406
    5. '(ans' → logprob: -16.500709533691406
    6. '   ' → logprob: -17.125709533691406
    7. '                   ' → logprob: -17.625709533691406
    8. 'answer' → logprob: -18.000709533691406
    9. '
' → logprob: -18.625709533691406
    10. '``' → logprob: -18.625709533691406

Token 1446: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520257234573364
    2. '=' → logprob: -1.5020257234573364
    3. '[' → logprob: -9.377025604248047
    4. '=[' → logprob: -11.627025604248047
    5. '=
' → logprob: -14.002025604248047
    6. '＝' → logprob: -14.252025604248047
    7. ' =[' → logprob: -14.627025604248047
    8. '```' → logprob: -15.002025604248047
    9. ',' → logprob: -15.252025604248047
    10. '   ' → logprob: -15.877025604248047

Token 1447: ' [' (ID: 723)
  Prédit: '[temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[temp' → logprob: -0.17007200419902802
    2. ' [' → logprob: -1.9200719594955444
    3. '[B' → logprob: -5.045072078704834
    4. '[' → logprob: -6.045072078704834
    5. '[t' → logprob: -7.045072078704834
    6. '[tmp' → logprob: -9.670071601867676
    7. '[token' → logprob: -10.670071601867676
    8. '[val' → logprob: -11.920071601867676
    9. '[test' → logprob: -12.170071601867676
    10. '[T' → logprob: -13.045071601867676

Token 1448: 'temp' (ID: 7340)
  Prédit: 'temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -3.5716304410016164e-05
    2. ' temp' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.375035285949707
    4. '(temp' → logprob: -16.875036239624023
    5. 'tmp' → logprob: -17.000036239624023
    6. 'abs' → logprob: -17.000036239624023
    7. '[temp' → logprob: -17.375036239624023
    8. '	temp' → logprob: -17.875036239624023
    9. 't' → logprob: -19.250036239624023
    10. '$temp' → logprob: -19.500036239624023

Token 1449: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005633997498080134
    2. ',' → logprob: -7.500563621520996
    3. '0' → logprob: -12.125563621520996
    4. '[' → logprob: -13.250563621520996
    5. '```' → logprob: -13.500563621520996
    6. '   ' → logprob: -14.375563621520996
    7. ',
' → logprob: -15.125563621520996
    8. ' ,' → logprob: -15.250563621520996
    9. ' ' → logprob: -15.500563621520996
    10. '_' → logprob: -16.00056266784668

Token 1450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.484132169745862e-05
    2. ',B' → logprob: -9.750094413757324
    3. ' ,' → logprob: -10.750094413757324
    4. '                   ' → logprob: -11.875094413757324
    5. ',
' → logprob: -12.875094413757324
    6. '           ' → logprob: -13.625094413757324
    7. '               ' → logprob: -13.750094413757324
    8. ',b' → logprob: -13.875094413757324
    9. '```' → logprob: -14.750094413757324
    10. 'B' → logprob: -15.375094413757324

Token 1451: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00523719098418951
    2. ' B' → logprob: -5.255237102508545
    3. 'beam' → logprob: -13.380237579345703
    4. '   ' → logprob: -14.130237579345703
    5. '           ' → logprob: -15.130237579345703
    6. '               ' → logprob: -15.380237579345703
    7. '                   ' → logprob: -15.505237579345703
    8. '       ' → logprob: -16.130237579345703
    9. ' beam' → logprob: -16.255237579345703
    10. '```' → logprob: -16.755237579345703

Token 1452: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012832103529945016
    2. '               ' → logprob: -7.501283168792725
    3. '                   ' → logprob: -8.001283645629883
    4. ']
' → logprob: -8.376283645629883
    5. '           ' → logprob: -9.376283645629883
    6. '       ' → logprob: -10.626283645629883
    7. ')' → logprob: -10.751283645629883
    8. ')]' → logprob: -11.126283645629883
    9. '   ' → logprob: -12.126283645629883
    10. '<|end|>' → logprob: -12.626283645629883

Token 1453: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05508888512849808
    2. '   ' → logprob: -3.555088996887207
    3. '       ' → logprob: -5.055088996887207
    4. '[' → logprob: -5.430088996887207
    5. '(' → logprob: -5.555088996887207
    6. '```' → logprob: -6.180088996887207
    7. '#' → logprob: -6.555088996887207
    8. '    ' → logprob: -6.805088996887207
    9. '<|end|>' → logprob: -6.805088996887207
    10. '	' → logprob: -7.555088996887207

Token 1454: ' else' (ID: 1203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4237314760684967
    2. '   ' → logprob: -1.7987314462661743
    3. '       ' → logprob: -2.173731565475464
    4. ' for' → logprob: -3.923731565475464
    5. '<|end|>' → logprob: -3.923731565475464
    6. 'while' → logprob: -5.048731327056885
    7. 'i' → logprob: -5.423731327056885
    8. '           ' → logprob: -5.673731327056885
    9. 'continue' → logprob: -6.173731327056885
    10. 'if' → logprob: -6.423731327056885

Token 1455: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013263520784676075
    2. '       ' → logprob: -4.513263702392578
    3. '   ' → logprob: -6.888263702392578
    4. '```' → logprob: -7.763263702392578
    5. ':
' → logprob: -8.013263702392578
    6. ' for' → logprob: -8.638263702392578
    7. ':' → logprob: -9.138263702392578
    8. ' if' → logprob: -9.513263702392578
    9. '               ' → logprob: -11.138263702392578
    10. '        ' → logprob: -11.513263702392578

Token 1456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08817116916179657
    2. ' for' → logprob: -3.3381712436676025
    3. '       ' → logprob: -3.7131712436676025
    4. '```' → logprob: -4.213171005249023
    5. 'for' → logprob: -5.088171005249023
    6. '   ' → logprob: -5.713171005249023
    7. '``' → logprob: -9.963171005249023
    8. '	for' → logprob: -10.213171005249023
    9. '               ' → logprob: -10.338171005249023
    10. '        ' → logprob: -10.463171005249023

Token 1457: ' L' (ID: 451)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.024599365890026093
    2. 'for' → logprob: -4.524599552154541
    3. 'if' → logprob: -5.274599552154541
    4. ' temp' → logprob: -5.524599552154541
    5. '           ' → logprob: -5.774599552154541
    6. 'l' → logprob: -8.024599075317383
    7. ' for' → logprob: -8.524599075317383
    8. '   ' → logprob: -8.524599075317383
    9. 'left' → logprob: -9.274599075317383
    10. '	temp' → logprob: -9.274599075317383

Token 1458: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39845195412635803
    2. ' =' → logprob: -1.1484519243240356
    3. '=end' → logprob: -4.523451805114746
    4. '           ' → logprob: -7.898451805114746
    5. '=start' → logprob: -9.273451805114746
    6. ',' → logprob: -9.773451805114746
    7. ',end' → logprob: -9.773451805114746
    8. '            ' → logprob: -10.273451805114746
    9. '        ' → logprob: -11.648451805114746
    10. '[end' → logprob: -11.648451805114746

Token 1459: ' R' (ID: 460)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.06705284863710403
    2. ' end' → logprob: -3.1920528411865234
    3. 'start' → logprob: -4.192052841186523
    4. 'i' → logprob: -5.442052841186523
    5. '0' → logprob: -6.067052841186523
    6. ' start' → logprob: -7.317052841186523
    7. ' i' → logprob: -7.817052841186523
    8. '=' → logprob: -8.567052841186523
    9. '   ' → logprob: -8.692052841186523
    10. ' =' → logprob: -9.067052841186523

Token 1460: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47413668036460876
    2. '=' → logprob: -0.9741367101669312
    3. ',' → logprob: -10.474136352539062
    4. '=L' → logprob: -10.849136352539062
    5. '   ' → logprob: -12.474136352539062
    6. '           ' → logprob: -13.349136352539062
    7. '=i' → logprob: -13.349136352539062
    8. '=end' → logprob: -13.474136352539062
    9. '```' → logprob: -13.974136352539062
    10. '=
' → logprob: -14.849136352539062

Token 1461: ' m' (ID: 284)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.011271221563220024
    2. 'start' → logprob: -5.261270999908447
    3. ' end' → logprob: -5.761270999908447
    4. 'i' → logprob: -6.386270999908447
    5. '(end' → logprob: -7.386270999908447
    6. '   ' → logprob: -8.011271476745605
    7. 'm' → logprob: -10.011271476745605
    8. '(i' → logprob: -10.136271476745605
    9. ' start' → logprob: -10.761271476745605
    10. '       ' → logprob: -11.136271476745605

Token 1462: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9562187194824219
    2. ',' → logprob: -1.0812187194824219
    3. '=end' → logprob: -2.206218719482422
    4. '[end' → logprob: -2.456218719482422
    5. ' =' → logprob: -2.831218719482422
    6. ',end' → logprob: -4.081218719482422
    7. '+' → logprob: -6.456218719482422
    8. '[i' → logprob: -6.581218719482422
    9. 'end' → logprob: -7.581218719482422
    10. '[' → logprob: -7.706218719482422

Token 1463: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.01610592193901539
    2. ' end' → logprob: -4.141106128692627
    3. '   ' → logprob: -10.391105651855469
    4. '           ' → logprob: -10.641105651855469
    5. '       ' → logprob: -11.891105651855469
    6. 'start' → logprob: -12.016105651855469
    7. '(end' → logprob: -14.391105651855469
    8. '    ' → logprob: -14.641105651855469
    9. '               ' → logprob: -14.891105651855469
    10. ' ' → logprob: -14.891105651855469

Token 1464: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.00012201975914649665
    2. 'arr' → logprob: -9.1251220703125
    3. '+' → logprob: -12.1251220703125
    4. 'Arr' → logprob: -12.3751220703125
    5. '[i' → logprob: -13.8751220703125
    6. '```' → logprob: -14.3751220703125
    7. '[arr' → logprob: -14.3751220703125
    8. '_idx' → logprob: -14.8751220703125
    9. '`' → logprob: -16.1251220703125
    10. '$arr' → logprob: -16.1251220703125

Token 1465: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01557769812643528
    2. 'i' → logprob: -4.640577793121338
    3. '[end' → logprob: -5.765577793121338
    4. '[R' → logprob: -7.015577793121338
    5. 'R' → logprob: -7.515577793121338
    6. '```' → logprob: -7.765577793121338
    7. '[' → logprob: -8.26557731628418
    8. '[L' → logprob: -8.26557731628418
    9. 'end' → logprob: -9.26557731628418
    10. 'L' → logprob: -10.64057731628418

Token 1466: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07421363890171051
    2. ' +' → logprob: -2.824213743209839
    3. '[i' → logprob: -4.57421350479126
    4. ']+' → logprob: -6.82421350479126
    5. ']' → logprob: -7.82421350479126
    6. ')+' → logprob: -9.199213981628418
    7. ')' → logprob: -9.574213981628418
    8. '<|end|>' → logprob: -9.574213981628418
    9. 'i' → logprob: -9.949213981628418
    10. '[' → logprob: -10.449213981628418

Token 1467: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.02502313256263733
    2. '   ' → logprob: -4.400022983551025
    3. '[' → logprob: -4.900022983551025
    4. '``' → logprob: -6.775022983551025
    5. '<|end|>' → logprob: -7.025022983551025
    6. '           ' → logprob: -7.150022983551025
    7. ',' → logprob: -7.275022983551025
    8. '       ' → logprob: -7.400022983551025
    9. '[i' → logprob: -9.275023460388184
    10. ' for' → logprob: -9.400023460388184

Token 1468: ' temp' (ID: 5484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5822640061378479
    2. '   ' → logprob: -1.9572639465332031
    3. 'while' → logprob: -1.9572639465332031
    4. '```' → logprob: -1.9572639465332031
    5. 'Seg' → logprob: -5.082263946533203
    6. 'tree' → logprob: -5.207263946533203
    7. ' for' → logprob: -6.082263946533203
    8. '``' → logprob: -6.832263946533203
    9. ' while' → logprob: -7.332263946533203
    10. 'L' → logprob: -7.582263946533203

Token 1469: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693923711776733
    2. '=' → logprob: -2.126939296722412
    3. '   ' → logprob: -12.501938819885254
    4. '```' → logprob: -12.876938819885254
    5. ',' → logprob: -13.251938819885254
    6. '=
' → logprob: -14.501938819885254
    7. '    ' → logprob: -14.876938819885254
    8. '=temp' → logprob: -15.126938819885254
    9. ' =
' → logprob: -15.751938819885254
    10. ' ' → logprob: -15.876938819885254

Token 1470: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.0005899675306864083
    2. 'min' → logprob: -8.000590324401855
    3. ' Seg' → logprob: -8.375590324401855
    4. 'max' → logprob: -11.625590324401855
    5. 'seg' → logprob: -11.625590324401855
    6. 'Segment' → logprob: -12.500590324401855
    7. ' min' → logprob: -14.125590324401855
    8. 'Min' → logprob: -14.500590324401855
    9. '   ' → logprob: -14.750590324401855
    10. '_seg' → logprob: -16.00058937072754

Token 1471: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.9361264946837764e-07
    2. 'tree' → logprob: -16.25
    3. '_tree' → logprob: -17.125
    4. 'ree' → logprob: -17.625
    5. ' Tree' → logprob: -18.375
    6. 'Trees' → logprob: -19.0
    7. '	Tree' → logprob: -19.0
    8. 'TREE' → logprob: -19.375
    9. 'Thread' → logprob: -19.5
    10. 'Tre' → logprob: -19.625

Token 1472: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -2.339278580620885e-06
    2. 'query' → logprob: -13.000001907348633
    3. '1' → logprob: -18.125001907348633
    4. '```' → logprob: -19.000001907348633
    5. 'Query' → logprob: -19.250001907348633
    6. '$query' → logprob: -19.375001907348633
    7. ' query' → logprob: -19.625001907348633
    8. '_Query' → logprob: -19.750001907348633
    9. '=query' → logprob: -19.875001907348633
    10. '_QUERY' → logprob: -19.875001907348633

Token 1473: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -12.625007629394531
    3. 'tree' → logprob: -12.875007629394531
    4. '```' → logprob: -14.000007629394531
    5. '	tree' → logprob: -14.875007629394531
    6. '(
' → logprob: -14.875007629394531
    7. '<Tree' → logprob: -18.75000762939453
    8. ' (' → logprob: -18.75000762939453
    9. ' tree' → logprob: -18.87500762939453
    10. '(tile' → logprob: -18.87500762939453

Token 1474: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3502633273601532
    2. '2' → logprob: -1.3502633571624756
    3. 'tree' → logprob: -3.6002633571624756
    4. '```' → logprob: -4.8502631187438965
    5. ',' → logprob: -7.7252631187438965
    6. '(tree' → logprob: -8.225263595581055
    7. '   ' → logprob: -8.350263595581055
    8. '``' → logprob: -9.225263595581055
    9. '`' → logprob: -10.475263595581055
    10. ' tree' → logprob: -10.725263595581055

Token 1475: ',' (ID: 11)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.008642347529530525
    2. ',' → logprob: -5.258642196655273
    3. 'tree' → logprob: -5.758642196655273
    4. '(' → logprob: -9.133642196655273
    5. '```' → logprob: -9.508642196655273
    6. '[' → logprob: -10.758642196655273
    7. '	tree' → logprob: -11.133642196655273
    8. '(
' → logprob: -11.383642196655273
    9. ',
' → logprob: -12.508642196655273
    10. ' tree' → logprob: -12.508642196655273

Token 1476: ' num' (ID: 2269)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.00029685118352063
    2. ' tree' → logprob: -8.250296592712402
    3. 'num' → logprob: -10.250296592712402
    4. ' num' → logprob: -16.50029754638672
    5. '   ' → logprob: -17.12529754638672
    6. '	tree' → logprob: -18.00029754638672
    7. ' ' → logprob: -18.25029754638672
    8. '    ' → logprob: -18.50029754638672
    9. '(tree' → logprob: -18.62529754638672
    10. '       ' → logprob: -19.00029754638672

Token 1477: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23635134100914001
    2. '1' → logprob: -1.7363513708114624
    3. 'num' → logprob: -3.486351251602173
    4. ',' → logprob: -5.986351490020752
    5. '   ' → logprob: -8.236351013183594
    6. '_num' → logprob: -8.486351013183594
    7. '_,' → logprob: -9.236351013183594
    8. '```' → logprob: -9.236351013183594
    9. ',num' → logprob: -9.236351013183594
    10. '           ' → logprob: -9.361351013183594

Token 1478: ',' (ID: 11)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.34871187806129456
    2. ',' → logprob: -1.2237118482589722
    3. '```' → logprob: -9.098711967468262
    4. ' (' → logprob: -10.223711967468262
    5. ' tree' → logprob: -10.348711967468262
    6. '(' → logprob: -10.473711967468262
    7. ' ,' → logprob: -10.848711967468262
    8. 'tree' → logprob: -11.473711967468262
    9. '	tree' → logprob: -11.848711967468262
    10. ')' → logprob: -12.223711967468262

Token 1479: ' seg' (ID: 3055)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.006715728435665369
    2. ' num' → logprob: -5.006715774536133
    3. '0' → logprob: -15.131715774536133
    4. '```' → logprob: -17.131715774536133
    5. 'len' → logprob: -17.381715774536133
    6. '(num' → logprob: -17.506715774536133
    7. '1' → logprob: -17.881715774536133
    8. ',num' → logprob: -19.006715774536133
    9. '[num' → logprob: -19.131715774536133
    10. '	num' → logprob: -19.631715774536133

Token 1480: 'func' (ID: 5652)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17979790270328522
    2. 'L' → logprob: -2.054797887802124
    3. '2' → logprob: -3.554797887802124
    4. 'i' → logprob: -5.554798126220703
    5. '   ' → logprob: -6.554798126220703
    6. 'l' → logprob: -7.679798126220703
    7. '```' → logprob: -8.054798126220703
    8. 'func' → logprob: -8.304798126220703
    9. '_left' → logprob: -8.804798126220703
    10. 'f' → logprob: -8.804798126220703

Token 1481: ',' (ID: 11)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.21240700781345367
    2. ',' → logprob: -1.9624069929122925
    3. ' tree' → logprob: -3.212407112121582
    4. 'tree' → logprob: -4.712407112121582
    5. '```' → logprob: -6.587407112121582
    6. '	tree' → logprob: -9.087407112121582
    7. ')' → logprob: -10.462407112121582
    8. '/tree' → logprob: -10.462407112121582
    9. '(' → logprob: -11.337407112121582
    10. ' ,' → logprob: -11.587407112121582

Token 1482: ' ide' (ID: 2750)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.20144061744213104
    2. ' ide' → logprob: -1.7014405727386475
    3. 'ideo' → logprob: -11.451440811157227
    4. '0' → logprob: -11.951440811157227
    5. '   ' → logprob: -12.701440811157227
    6. ' ' → logprob: -13.951440811157227
    7. '    ' → logprob: -14.326440811157227
    8. '1' → logprob: -14.326440811157227
    9. '       ' → logprob: -14.451440811157227
    10. '     ' → logprob: -14.576440811157227

Token 1483: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.001205946202389896
    2. 'le' → logprob: -7.751205921173096
    3. 'lec' → logprob: -8.251206398010254
    4. 'l' → logprob: -8.751206398010254
    5. 'Ele' → logprob: -8.876206398010254
    6. 'ele' → logprob: -9.251206398010254
    7. '_le' → logprob: -9.626206398010254
    8. 'lef' → logprob: -10.626206398010254
    9. 'c' → logprob: -12.126206398010254
    10. 'let' → logprob: -12.126206398010254

Token 1484: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003402524860575795
    2. ',L' → logprob: -5.7534027099609375
    3. ' ,' → logprob: -8.753402709960938
    4. ' L' → logprob: -10.628402709960938
    5. ',l' → logprob: -11.378402709960938
    6. '           ' → logprob: -11.503402709960938
    7. '```' → logprob: -11.878402709960938
    8. 'L' → logprob: -12.128402709960938
    9. '   ' → logprob: -13.003402709960938
    10. ')' → logprob: -13.628402709960938

Token 1485: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.008084116503596306
    2. ' L' → logprob: -5.133084297180176
    3. 'm' → logprob: -6.383084297180176
    4. 'R' → logprob: -8.258084297180176
    5. '           ' → logprob: -9.508084297180176
    6. 'end' → logprob: -10.383084297180176
    7. ' m' → logprob: -11.133084297180176
    8. 'i' → logprob: -11.133084297180176
    9. '   ' → logprob: -11.258084297180176
    10. 'temp' → logprob: -11.758084297180176

Token 1486: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002499794587492943
    2. ',R' → logprob: -7.002499580383301
    3. '+' → logprob: -7.127499580383301
    4. ' +' → logprob: -8.1274995803833
    5. ' ,' → logprob: -8.2524995803833
    6. '           ' → logprob: -8.8774995803833
    7. ',
' → logprob: -10.3774995803833
    8. ',L' → logprob: -11.5024995803833
    9. '```' → logprob: -11.7524995803833
    10. '                   ' → logprob: -11.8774995803833

Token 1487: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0004319804720580578
    2. ' R' → logprob: -7.750432014465332
    3. '   ' → logprob: -14.250432014465332
    4. 'L' → logprob: -15.750432014465332
    5. '           ' → logprob: -15.875432014465332
    6. '    ' → logprob: -16.250431060791016
    7. ' ' → logprob: -16.625431060791016
    8. '  ' → logprob: -17.250431060791016
    9. '       ' → logprob: -17.500431060791016
    10. '          ' → logprob: -17.750431060791016

Token 1488: ' +' (ID: 659)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6404567360877991
    2. ')' → logprob: -0.7654567360877991
    3. '           ' → logprob: -5.390456676483154
    4. '```' → logprob: -6.765456676483154
    5. '       ' → logprob: -7.015456676483154
    6. '+' → logprob: -7.640456676483154
    7. '   ' → logprob: -7.890456676483154
    8. '[' → logprob: -9.515457153320312
    9. ' +' → logprob: -9.515457153320312
    10. '               ' → logprob: -9.765457153320312

Token 1489: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.000000953674316
    3. '+' → logprob: -16.375001907348633
    4. '2' → logprob: -16.500001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '           ' → logprob: -17.500001907348633
    7. '```' → logprob: -18.250001907348633
    8. '
' → logprob: -19.312501907348633
    9. ')' → logprob: -19.625001907348633
    10. '                   ' → logprob: -19.812501907348633

Token 1490: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. '2' → logprob: -15.375001907348633
    4. '   ' → logprob: -17.000001907348633
    5. '```' → logprob: -17.250001907348633
    6. '+' → logprob: -17.750001907348633
    7. '
' → logprob: -17.875001907348633
    8. '0' → logprob: -19.562501907348633
    9. '``' → logprob: -19.750001907348633
    10. ')' → logprob: -19.750001907348633

Token 1491: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47481203079223633
    2. ')
' → logprob: -0.9748120307922363
    3. '           ' → logprob: -7.349812030792236
    4. ')
' → logprob: -9.974811553955078
    5. '               ' → logprob: -11.349811553955078
    6. '       ' → logprob: -11.849811553955078
    7. '   ' → logprob: -11.974811553955078
    8. '                   ' → logprob: -12.099811553955078
    9. '          ' → logprob: -13.099811553955078
    10. '```' → logprob: -13.099811553955078

Token 1492: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025172637775540352
    2. '<|end|>' → logprob: -4.650172710418701
    3. '
' → logprob: -5.025172710418701
    4. '   ' → logprob: -6.150172710418701
    5. '          ' → logprob: -6.525172710418701
    6. '       ' → logprob: -6.900172710418701
    7. ')' → logprob: -7.150172710418701
    8. '            ' → logprob: -7.400172710418701
    9. '                   ' → logprob: -7.525172710418701
    10. '               ' → logprob: -7.650172710418701

Token 1493: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.22982695698738098
    2. ' beam' → logprob: -2.2298269271850586
    3. '(' → logprob: -2.4798269271850586
    4. ' (' → logprob: -4.479826927185059
    5. 'cum' → logprob: -7.979826927185059
    6. '           ' → logprob: -8.104826927185059
    7. '(be' → logprob: -8.104826927185059
    8. '   ' → logprob: -8.479826927185059
    9. '(B' → logprob: -8.479826927185059
    10. '(c' → logprob: -8.729826927185059

Token 1494: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014776040916331112
    2. '[' → logprob: -9.375147819519043
    3. '```' → logprob: -9.875147819519043
    4. 'i' → logprob: -11.875147819519043
    5. '(i' → logprob: -13.875147819519043
    6. '[
' → logprob: -13.875147819519043
    7. '``' → logprob: -14.750147819519043
    8. '`' → logprob: -14.875147819519043
    9. ' [' → logprob: -15.250147819519043
    10. '   ' → logprob: -15.750147819519043

Token 1495: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.050192780792713165
    2. '][' → logprob: -3.0501928329467773
    3. '```' → logprob: -6.675192832946777
    4. ')[' → logprob: -9.550192832946777
    5. '>[' → logprob: -9.925192832946777
    6. '``' → logprob: -10.925192832946777
    7. '[i' → logprob: -11.050192832946777
    8. '`' → logprob: -11.175192832946777
    9. '"][' → logprob: -11.175192832946777
    10. ' ][' → logprob: -11.175192832946777

Token 1496: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004932218580506742
    2. '0' → logprob: -7.625493049621582
    3. '[' → logprob: -12.750493049621582
    4. '```' → logprob: -14.250493049621582
    5. '
' → logprob: -14.500493049621582
    6. ' ' → logprob: -15.125493049621582
    7. '   ' → logprob: -15.812993049621582
    8. ']' → logprob: -16.1879940032959
    9. '[i' → logprob: -16.3129940032959
    10. 'i' → logprob: -16.5629940032959

Token 1497: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5521496534347534
    2. ' +' → logprob: -1.3021496534347534
    3. '+' → logprob: -2.177149772644043
    4. '           ' → logprob: -4.677149772644043
    5. '   ' → logprob: -4.802149772644043
    6. ']' → logprob: -5.427149772644043
    7. '       ' → logprob: -5.802149772644043
    8. ',' → logprob: -5.927149772644043
    9. '<|end|>' → logprob: -6.052149772644043
    10. ')
' → logprob: -6.177149772644043

Token 1498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3231242299079895
    2. '```' → logprob: -1.3231241703033447
    3. '<|end|>' → logprob: -5.073124408721924
    4. '[' → logprob: -6.698124408721924
    5. '   ' → logprob: -7.323124408721924
    6. '``' → logprob: -8.198123931884766
    7. '          ' → logprob: -8.448123931884766
    8. ')' → logprob: -8.823123931884766
    9. '       ' → logprob: -8.948123931884766
    10. ',' → logprob: -8.948123931884766

Token 1499: ' temp' (ID: 5484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032736197113990784
    2. ' L' → logprob: -4.282736301422119
    3. 'L' → logprob: -5.407736301422119
    4. '```' → logprob: -5.407736301422119
    5. '   ' → logprob: -5.532736301422119
    6. '       ' → logprob: -6.407736301422119
    7. '          ' → logprob: -7.157736301422119
    8. ' temp' → logprob: -7.282736301422119
    9. 'temp' (adapté à ' temp') → logprob: -7.532736301422119
    10. 'i' → logprob: -7.907736301422119

Token 1500: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20538797974586487
    2. ' =' → logprob: -1.7053879499435425
    3. ' <<=' → logprob: -6.580388069152832
    4. '+=' → logprob: -7.330388069152832
    5. ' >>=' → logprob: -7.830388069152832
    6. '*=' → logprob: -7.830388069152832
    7. ' +=' → logprob: -7.830388069152832
    8. ' -=' → logprob: -8.205388069152832
    9. '   ' → logprob: -9.080388069152832
    10. '-=' → logprob: -9.455388069152832

Token 1501: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0006865793839097023
    2. '(' → logprob: -8.000686645507812
    3. ' beam' → logprob: -8.000686645507812
    4. 'data' → logprob: -12.125686645507812
    5. '-' → logprob: -12.875686645507812
    6. '   ' → logprob: -13.250686645507812
    7. '  ' → logprob: -14.000686645507812
    8. '-be' → logprob: -14.250686645507812
    9. ' ' → logprob: -14.375686645507812
    10. 'be' → logprob: -14.375686645507812

Token 1502: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.895480277715251e-06
    2. 'i' → logprob: -12.375008583068848
    3. '[' → logprob: -12.875008583068848
    4. '```' → logprob: -13.375008583068848
    5. '(i' → logprob: -16.375009536743164
    6. '[end' → logprob: -16.500009536743164
    7. ',i' → logprob: -16.875009536743164
    8. '`' → logprob: -16.875009536743164
    9. '[
' → logprob: -17.000009536743164
    10. '
' → logprob: -17.250009536743164

Token 1503: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32378053665161133
    2. '][' → logprob: -1.3237805366516113
    3. '[i' → logprob: -5.073780536651611
    4. '```' → logprob: -5.948780536651611
    5. '>[' → logprob: -7.198780536651611
    6. '`' → logprob: -8.323780059814453
    7. ')[' → logprob: -8.698780059814453
    8. '``' → logprob: -9.948780059814453
    9. '}[' → logprob: -9.948780059814453
    10. '   ' → logprob: -10.323780059814453

Token 1504: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3485141098499298
    2. '0' → logprob: -1.2235140800476074
    3. '-' → logprob: -10.598514556884766
    4. '[' → logprob: -10.848514556884766
    5. '```' → logprob: -11.598514556884766
    6. '
' → logprob: -12.473514556884766
    7. 'i' → logprob: -12.723514556884766
    8. ' ' → logprob: -13.098514556884766
    9. '   ' → logprob: -13.536014556884766
    10. '[i' → logprob: -13.786014556884766

Token 1505: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008637970313429832
    2. '-' → logprob: -4.75863790512085
    3. '   ' → logprob: -11.633638381958008
    4. '```' → logprob: -12.383638381958008
    5. ' ' → logprob: -12.633638381958008
    6. '           ' → logprob: -13.133638381958008
    7. ' ' → logprob: -13.633638381958008
    8. '[' → logprob: -13.758638381958008
    9. ' -
' → logprob: -13.883638381958008
    10. ',' → logprob: -14.258638381958008

Token 1506: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11296191066503525
    2. '-' → logprob: -2.237962007522583
    3. '   ' → logprob: -9.487961769104004
    4. '```' → logprob: -9.987961769104004
    5. '           ' → logprob: -12.112961769104004
    6. '       ' → logprob: -12.987961769104004
    7. ',' → logprob: -12.987961769104004
    8. ' ' → logprob: -13.487961769104004
    9. ')' → logprob: -14.237961769104004
    10. '
' → logprob: -14.487961769104004

Token 1507: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -6.76628842484206e-05
    2. ' beam' → logprob: -9.625067710876465
    3. '   ' → logprob: -14.000067710876465
    4. '```' → logprob: -14.250067710876465
    5. '           ' → logprob: -17.37506675720215
    6. '       ' → logprob: -17.50006675720215
    7. '``' → logprob: -17.50006675720215
    8. ' ' → logprob: -18.00006675720215
    9. 'beat' → logprob: -18.00006675720215
    10. '`' → logprob: -18.12506675720215

Token 1508: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.096126576769166e-05
    2. '[' → logprob: -10.125041007995605
    3. 'i' → logprob: -14.250041007995605
    4. '```' → logprob: -16.62504005432129
    5. '[
' → logprob: -17.37504005432129
    6. '{i' → logprob: -17.62504005432129
    7. '1' → logprob: -18.12504005432129
    8. '(i' → logprob: -18.62504005432129
    9. '``' → logprob: -18.75004005432129
    10. '[user' → logprob: -19.00004005432129

Token 1509: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.13299371302127838
    2. '[' → logprob: -2.132993698120117
    3. '[i' → logprob: -5.132993698120117
    4. '1' → logprob: -10.257993698120117
    5. '```' → logprob: -10.257993698120117
    6. '   ' → logprob: -11.382993698120117
    7. '-' → logprob: -11.757993698120117
    8. 'i' → logprob: -12.007993698120117
    9. '       ' → logprob: -12.007993698120117
    10. ''][' → logprob: -12.257993698120117

Token 1510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.750004768371582
    3. '```' → logprob: -14.000004768371582
    4. '[' → logprob: -14.375004768371582
    5. 'beam' → logprob: -15.375004768371582
    6. '0' → logprob: -15.937504768371582
    7. '   ' → logprob: -15.937504768371582
    8. '
' → logprob: -16.1250057220459
    9. '[i' → logprob: -16.5000057220459
    10. '[
' → logprob: -17.4375057220459

Token 1511: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20721551775932312
    2. ')
' → logprob: -1.7072155475616455
    3. '   ' → logprob: -5.457215309143066
    4. '       ' → logprob: -7.582215309143066
    5. '           ' → logprob: -8.082215309143066
    6. '```' → logprob: -8.457215309143066
    7. ']' → logprob: -8.707215309143066
    8. '<|end|>' → logprob: -9.082215309143066
    9. ']
' → logprob: -9.707215309143066
    10. ')
' → logprob: -10.207215309143066

Token 1512: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03996371105313301
    2. '       ' → logprob: -3.914963722229004
    3. '```' → logprob: -5.039963722229004
    4. '   ' → logprob: -5.789963722229004
    5. '<|end|>' → logprob: -5.789963722229004
    6. '               ' → logprob: -6.164963722229004
    7. '[' → logprob: -6.664963722229004
    8. '          ' → logprob: -7.289963722229004
    9. '                   ' → logprob: -7.289963722229004
    10. '		' → logprob: -7.539963722229004

Token 1513: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5805162191390991
    2. '       ' → logprob: -1.7055162191390991
    3. ')' → logprob: -2.4555163383483887
    4. '           ' → logprob: -2.5805163383483887
    5. '    ' → logprob: -3.3305163383483887
    6. '\t' → logprob: -3.9555163383483887
    7. '               ' → logprob: -4.830516338348389
    8. '                   ' → logprob: -5.080516338348389
    9. ' ' → logprob: -5.205516338348389
    10. '     ' → logprob: -6.205516338348389

Token 1514: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.11282677948474884
    2. ' temp' → logprob: -2.2378268241882324
    3. '   ' → logprob: -13.362826347351074
    4. '(temp' → logprob: -13.737826347351074
    5. '           ' → logprob: -14.862826347351074
    6. '	temp' → logprob: -15.237826347351074
    7. ' ' → logprob: -15.362826347351074
    8. '       ' → logprob: -15.362826347351074
    9. 'tem' → logprob: -16.11282730102539
    10. '$temp' → logprob: -16.61282730102539

Token 1515: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04876619949936867
    2. '<=' → logprob: -3.0487661361694336
    3. '```' → logprob: -8.923766136169434
    4. '           ' → logprob: -10.673766136169434
    5. '   ' → logprob: -12.423766136169434
    6. '[' → logprob: -13.048766136169434
    7. ' =' → logprob: -13.048766136169434
    8. '          ' → logprob: -13.048766136169434
    9. '=' → logprob: -13.423766136169434
    10. '       ' → logprob: -13.423766136169434

Token 1516: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012510471045970917
    2. ' ' → logprob: -4.387510299682617
    3. '   ' → logprob: -14.512510299682617
    4. '```' → logprob: -15.637510299682617
    5. '       ' → logprob: -16.887510299682617
    6. '  ' → logprob: -17.262510299682617
    7. '           ' → logprob: -17.387510299682617
    8. '
' → logprob: -17.887510299682617
    9. ' ' → logprob: -18.262510299682617
    10. '``' → logprob: -18.387510299682617

Token 1517: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.00020408630371
    4. '           ' → logprob: -16.50020408630371
    5. '1' → logprob: -17.25020408630371
    6. '```' → logprob: -17.37520408630371
    7. '       ' → logprob: -17.50020408630371
    8. '               ' → logprob: -18.87520408630371
    9. '
' → logprob: -19.50020408630371
    10. '``' → logprob: -19.75020408630371

Token 1518: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16847564280033112
    2. ':' → logprob: -2.16847562789917
    3. '               ' → logprob: -3.29347562789917
    4. '           ' → logprob: -5.79347562789917
    5. '       ' → logprob: -8.668476104736328
    6. '):
' → logprob: -8.668476104736328
    7. '```' → logprob: -9.918476104736328
    8. ' and' → logprob: -10.293476104736328
    9. '                   ' → logprob: -10.543476104736328
    10. '              ' → logprob: -11.168476104736328

Token 1519: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009413579828105867
    2. '```' → logprob: -7.125941276550293
    3. '           ' → logprob: -10.500941276550293
    4. ':
' → logprob: -10.625941276550293
    5. '              ' → logprob: -10.875941276550293
    6. 't' → logprob: -11.250941276550293
    7. '``' → logprob: -11.250941276550293
    8. ':' → logprob: -11.500941276550293
    9. '                   ' → logprob: -11.625941276550293
    10. '{
' → logprob: -12.000941276550293

Token 1520: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.05741240456700325
    2. ' temp' → logprob: -3.0574123859405518
    3. '               ' → logprob: -4.807412624359131
    4. '           ' → logprob: -7.432412624359131
    5. 't' → logprob: -11.932412147521973
    6. '   ' → logprob: -12.057412147521973
    7. 'tmp' → logprob: -12.307412147521973
    8. '	temp' → logprob: -13.182412147521973
    9. '                   ' → logprob: -13.682412147521973
    10. ' ' → logprob: -14.057412147521973

Token 1521: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7648912072181702
    2. '=' → logprob: -0.8898912072181702
    3. ' =' → logprob: -2.1398911476135254
    4. '       ' → logprob: -6.514891147613525
    5. '+=' → logprob: -6.764891147613525
    6. '   ' → logprob: -7.139891147613525
    7. '           ' → logprob: -7.389891147613525
    8. '-=' → logprob: -7.639891147613525
    9. ' +=' → logprob: -7.889891147613525
    10. '```' → logprob: -8.389891624450684

Token 1522: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804550692439079
    2. '=' → logprob: -3.2880454063415527
    3. ',' → logprob: -13.663045883178711
    4. '```' → logprob: -14.538045883178711
    5. '   ' → logprob: -14.913045883178711
    6. 'tokens' → logprob: -15.163045883178711
    7. ' ' → logprob: -15.413045883178711
    8. 'token' → logprob: -15.413045883178711
    9. '=temp' → logprob: -15.788045883178711
    10. ':' → logprob: -15.913045883178711

Token 1523: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.38687849044799805
    2. ' abs' → logprob: -1.136878490447998
    3. '(abs' → logprob: -11.886878967285156
    4. '.abs' → logprob: -15.511878967285156
    5. '_abs' → logprob: -15.761878967285156
    6. 'beam' → logprob: -17.136878967285156
    7. 'Abs' → logprob: -17.261878967285156
    8. '           ' → logprob: -17.386878967285156
    9. ' beam' → logprob: -17.886878967285156
    10. '   ' → logprob: -17.886878967285156

Token 1524: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.0003357006062287837
    2. 'temp' → logprob: -8.000335693359375
    3. '(' → logprob: -15.875335693359375
    4. '[temp' → logprob: -16.125335693359375
    5. '(
' → logprob: -17.250335693359375
    6. '(tmp' → logprob: -17.500335693359375
    7. '$temp' → logprob: -18.125335693359375
    8. ',temp' → logprob: -18.875335693359375
    9. ' temp' → logprob: -19.000335693359375
    10. '	temp' → logprob: -19.625335693359375

Token 1525: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47447749972343445
    2. ')
' → logprob: -0.9744775295257568
    3. '               ' → logprob: -8.224477767944336
    4. '           ' → logprob: -9.849477767944336
    5. '):
' → logprob: -9.974477767944336
    6. ')
' → logprob: -11.349477767944336
    7. '       ' → logprob: -11.599477767944336
    8. '                   ' → logprob: -12.224477767944336
    9. '<|end|>' → logprob: -13.724477767944336
    10. '   ' → logprob: -14.474477767944336

Token 1526: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5888663530349731
    2. '```' → logprob: -1.0888663530349731
    3. '                   ' → logprob: -2.5888662338256836
    4. '``' → logprob: -4.088866233825684
    5. '           ' → logprob: -5.463866233825684
    6. '[' → logprob: -6.338866233825684
    7. '                       ' → logprob: -6.338866233825684
    8. ' if' → logprob: -6.463866233825684
    9. '                               ' → logprob: -6.838866233825684
    10. '<|end|>' → logprob: -6.963866233825684

Token 1527: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.0001495484757469967
    2. 'if' → logprob: -8.875149726867676
    3. '               ' → logprob: -12.750149726867676
    4. ' B' → logprob: -12.875149726867676
    5. 'for' → logprob: -13.500149726867676
    6. '```' → logprob: -13.750149726867676
    7. '                   ' → logprob: -14.000149726867676
    8. '           ' → logprob: -14.125149726867676
    9. ' if' → logprob: -15.750149726867676
    10. '   ' → logprob: -17.25014877319336

Token 1528: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326597929000854
    2. '=' → logprob: -1.3132660388946533
    3. '           ' → logprob: -13.813265800476074
    4. '   ' → logprob: -13.813265800476074
    5. ',' → logprob: -14.438265800476074
    6. '               ' → logprob: -14.813265800476074
    7. '          ' → logprob: -15.063265800476074
    8. '       ' → logprob: -15.438265800476074
    9. '        ' → logprob: -15.438265800476074
    10. '```' → logprob: -15.688265800476074

Token 1529: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.002806656062602997
    2. ' beam' → logprob: -5.877806663513184
    3. '   ' → logprob: -14.002806663513184
    4. 'ans' → logprob: -14.627806663513184
    5. 'be' → logprob: -15.252806663513184
    6. ' ' → logprob: -16.627805709838867
    7. '  ' → logprob: -17.127805709838867
    8. 'beat' → logprob: -18.002805709838867
    9. 'Beam' → logprob: -18.127805709838867
    10. 'b' → logprob: -18.127805709838867

Token 1530: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8550976164988242e-05
    2. 'i' → logprob: -11.000018119812012
    3. '```' → logprob: -13.375018119812012
    4. '[' → logprob: -15.125018119812012
    5. '(i' → logprob: -18.250019073486328
    6. '   ' → logprob: -18.375019073486328
    7. '``' → logprob: -18.625019073486328
    8. ' i' → logprob: -18.875019073486328
    9. '`' → logprob: -18.875019073486328
    10. '[
' → logprob: -19.375019073486328

Token 1531: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001176893594674766
    2. '[' → logprob: -7.001176834106445
    3. '][' → logprob: -8.251176834106445
    4. '```' → logprob: -12.626176834106445
    5. 'i' → logprob: -15.376176834106445
    6. '           ' → logprob: -15.376176834106445
    7. ')[' → logprob: -15.376176834106445
    8. '       ' → logprob: -15.751176834106445
    9. '`' → logprob: -16.376176834106445
    10. '   ' → logprob: -16.376176834106445

Token 1532: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4153549020411447e-05
    2. 'i' → logprob: -11.37502384185791
    3. '```' → logprob: -11.50002384185791
    4. '[' → logprob: -14.25002384185791
    5. '[i' → logprob: -14.25002384185791
    6. '
' → logprob: -14.62502384185791
    7. '0' → logprob: -15.12502384185791
    8. '   ' → logprob: -16.000024795532227
    9. ' ' → logprob: -16.250024795532227
    10. '`' → logprob: -16.750024795532227

Token 1533: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10746356099843979
    2. ']' → logprob: -3.4824635982513428
    3. ')' → logprob: -3.6074635982513428
    4. '                   ' → logprob: -3.7324635982513428
    5. '           ' → logprob: -4.607463359832764
    6. ']
' → logprob: -5.982463359832764
    7. ')
' → logprob: -6.732463359832764
    8. '<|end|>' → logprob: -6.732463359832764
    9. '```' → logprob: -6.982463359832764
    10. '                       ' → logprob: -7.232463359832764

Token 1534: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9970349669456482
    2. '                   ' → logprob: -1.122035026550293
    3. ' if' → logprob: -1.872035026550293
    4. 'if' → logprob: -2.372035026550293
    5. '               ' → logprob: -3.247035026550293
    6. '                               ' → logprob: -5.122035026550293
    7. '                       ' → logprob: -5.622035026550293
    8. '                           ' → logprob: -6.497035026550293
    9. '                                           ' → logprob: -6.622035026550293
    10. '           ' → logprob: -6.622035026550293

Token 1535: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17353416979312897
    2. '               ' → logprob: -1.9235341548919678
    3. ' if' → logprob: -4.798534393310547
    4. '                   ' → logprob: -5.423534393310547
    5. '           ' → logprob: -8.048534393310547
    6. '```' → logprob: -8.548534393310547
    7. '                       ' → logprob: -10.798534393310547
    8. '       ' → logprob: -11.298534393310547
    9. '   ' → logprob: -12.298534393310547
    10. '              ' → logprob: -12.423534393310547

Token 1536: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02975129522383213
    2. ' B' → logprob: -3.5297513008117676
    3. '   ' → logprob: -14.90475082397461
    4. 'ans' → logprob: -15.77975082397461
    5. ' ans' → logprob: -16.27975082397461
    6. ' ' → logprob: -16.40475082397461
    7. '  ' → logprob: -16.90475082397461
    8. '	B' → logprob: -17.52975082397461
    9. '    ' → logprob: -17.90475082397461
    10. '`' → logprob: -18.02975082397461

Token 1537: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03382043167948723
    2. '*' → logprob: -3.408820390701294
    3. '```' → logprob: -9.408820152282715
    4. '[' → logprob: -10.158820152282715
    5. '   ' → logprob: -10.908820152282715
    6. '*[' → logprob: -10.908820152282715
    7. '           ' → logprob: -12.783820152282715
    8. ' ' → logprob: -13.283820152282715
    9. '       ' → logprob: -13.533820152282715
    10. '          ' → logprob: -13.658820152282715

Token 1538: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.029751067981123924
    2. ' ans' → logprob: -3.5297510623931885
    3. '(ans' → logprob: -14.77975082397461
    4. '	ans' → logprob: -15.65475082397461
    5. 'ann' → logprob: -18.90475082397461
    6. '_ans' → logprob: -19.15475082397461
    7. '           ' → logprob: -19.40475082397461
    8. '   ' → logprob: -19.40475082397461
    9. ' ' → logprob: -19.52975082397461
    10. 'answer' → logprob: -20.15475082397461

Token 1539: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4894986785948277e-05
    2. '0' → logprob: -10.500044822692871
    3. '```' → logprob: -11.250044822692871
    4. 'ans' → logprob: -13.250044822692871
    5. '   ' → logprob: -14.125044822692871
    6. ' ans' → logprob: -15.125044822692871
    7. '[-' → logprob: -15.250044822692871
    8. '[
' → logprob: -15.375044822692871
    9. '``' → logprob: -15.500044822692871
    10. '<' → logprob: -15.750044822692871

Token 1540: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000563042180147022
    2. '[' → logprob: -7.500563144683838
    3. '1' → logprob: -11.75056266784668
    4. '   ' → logprob: -13.75056266784668
    5. ' ' → logprob: -14.50056266784668
    6. '```' → logprob: -15.25056266784668
    7. '
' → logprob: -16.75056266784668
    8. '  ' → logprob: -17.12556266784668
    9. '``' → logprob: -17.56306266784668
    10. '-' → logprob: -17.68806266784668

Token 1541: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20154675841331482
    2. '<' → logprob: -1.7015467882156372
    3. '[' → logprob: -9.826546669006348
    4. '```' → logprob: -10.201546669006348
    5. '<int' → logprob: -11.451546669006348
    6. ' <=' → logprob: -11.951546669006348
    7. '<class' → logprob: -12.826546669006348
    8. '<=' → logprob: -13.076546669006348
    9. '<p' → logprob: -13.201546669006348
    10. '<th' → logprob: -13.326546669006348

Token 1542: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.25248387455940247
    2. ' <' → logprob: -1.50248384475708
    3. '>' → logprob: -7.87748384475708
    4. ' >' → logprob: -9.252484321594238
    5. '```' → logprob: -10.377484321594238
    6. '[' → logprob: -11.377484321594238
    7. '<int' → logprob: -11.502484321594238
    8. ' <=' → logprob: -12.377484321594238
    9. '<=' → logprob: -12.502484321594238
    10. '>=' → logprob: -13.127484321594238

Token 1543: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3868900537490845
    2. ' ans' → logprob: -1.1368900537490845
    3. '(ans' → logprob: -11.011890411376953
    4. '	ans' → logprob: -13.761890411376953
    5. '```' → logprob: -13.761890411376953
    6. '_ans' → logprob: -16.261890411376953
    7. '           ' → logprob: -16.261890411376953
    8. '   ' → logprob: -16.886890411376953
    9. '``' → logprob: -17.636890411376953
    10. 'B' → logprob: -17.761890411376953

Token 1544: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. '```' → logprob: -13.37500286102295
    3. '1' → logprob: -14.25000286102295
    4. '   ' → logprob: -15.00000286102295
    5. 'ans' → logprob: -15.75000286102295
    6. '``' → logprob: -16.875001907348633
    7. '[
' → logprob: -17.000001907348633
    8. '
' → logprob: -17.625001907348633
    9. ' ans' → logprob: -18.125001907348633
    10. '       ' → logprob: -18.375001907348633

Token 1545: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -15.875000953674316
    3. '   ' → logprob: -15.875000953674316
    4. 'ans' → logprob: -15.875000953674316
    5. ' ' → logprob: -17.125
    6. '-' → logprob: -17.5
    7. '
' → logprob: -17.75
    8. '```' → logprob: -18.5
    9. '[' → logprob: -19.25
    10. '           ' → logprob: -19.875

Token 1546: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.012572398409247398
    2. '*' → logprob: -4.387572288513184
    3. '                   ' → logprob: -10.637572288513184
    4. '               ' → logprob: -11.012572288513184
    5. '```' → logprob: -12.387572288513184
    6. '                ' → logprob: -12.512572288513184
    7. ':' → logprob: -13.387572288513184
    8. ' ' → logprob: -13.387572288513184
    9. '*t' → logprob: -13.387572288513184
    10. '                    ' → logprob: -13.512572288513184

Token 1547: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03104105032980442
    2. '*' → logprob: -3.531041145324707
    3. ' <' → logprob: -6.781041145324707
    4. '<' → logprob: -8.906041145324707
    5. '```' → logprob: -12.031041145324707
    6. ' ' → logprob: -12.281041145324707
    7. '[' → logprob: -13.031041145324707
    8. '   ' → logprob: -13.906041145324707
    9. 'import' → logprob: -14.031041145324707
    10. 'def' → logprob: -14.156041145324707

Token 1548: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.15200567245483398
    2. 'beam' → logprob: -2.402005672454834
    3. 'ans' → logprob: -3.652005672454834
    4. ' temp' → logprob: -3.902005672454834
    5. ' beam' → logprob: -5.652005672454834
    6. ' ans' → logprob: -7.402005672454834
    7. 'tmp' → logprob: -9.527006149291992
    8. 'B' → logprob: -10.277006149291992
    9. '   ' → logprob: -10.652006149291992
    10. 'tem' → logprob: -10.652006149291992

Token 1549: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008321180939674377
    2. '[' → logprob: -5.258321285247803
    3. '[i' → logprob: -6.133321285247803
    4. '   ' → logprob: -7.508321285247803
    5. '0' → logprob: -8.633320808410645
    6. '```' → logprob: -9.383320808410645
    7. '       ' → logprob: -9.758320808410645
    8. ' ' → logprob: -11.758320808410645
    9. '           ' → logprob: -12.133320808410645
    10. 'temp' → logprob: -12.258320808410645

Token 1550: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.552975594997406
    2. ':
' → logprob: -1.1779756546020508
    3. ':' → logprob: -3.052975654602051
    4. '                       ' → logprob: -3.177975654602051
    5. '               ' → logprob: -4.052975654602051
    6. '```' → logprob: -5.927975654602051
    7. '           ' → logprob: -6.052975654602051
    8. '=' → logprob: -6.927975654602051
    9. '                  ' → logprob: -7.177975654602051
    10. '[' → logprob: -7.302975654602051

Token 1551: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08814868330955505
    2. '                       ' → logprob: -2.713148593902588
    3. '```' → logprob: -4.213148593902588
    4. '               ' → logprob: -6.088148593902588
    5. '                           ' → logprob: -8.213149070739746
    6. '                               ' → logprob: -8.588149070739746
    7. '                  ' → logprob: -8.963149070739746
    8. '``' → logprob: -9.213149070739746
    9. '           ' → logprob: -9.338149070739746
    10. '                      ' → logprob: -10.338149070739746

Token 1552: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.10021961480379105
    2. ' ans' → logprob: -2.3502197265625
    3. '```' → logprob: -12.3502197265625
    4. '                   ' → logprob: -12.7252197265625
    5. '	ans' → logprob: -12.8502197265625
    6. '   ' → logprob: -13.8502197265625
    7. '``' → logprob: -14.4752197265625
    8. '(ans' → logprob: -14.6002197265625
    9. '           ' → logprob: -14.9752197265625
    10. '               ' → logprob: -15.3502197265625

Token 1553: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759409070014954
    2. '=' → logprob: -0.8259409070014954
    3. '=[' → logprob: -14.70094108581543
    4. '[' → logprob: -14.95094108581543
    5. '   ' → logprob: -15.45094108581543
    6. '```' → logprob: -15.82594108581543
    7. '＝' → logprob: -15.95094108581543
    8. ' =[' → logprob: -16.20094108581543
    9. '=
' → logprob: -16.57594108581543
    10. ' ' → logprob: -17.57594108581543

Token 1554: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.783670961856842
    2. '[t' → logprob: -0.783670961856842
    3. '[' → logprob: -2.5336709022521973
    4. '[B' → logprob: -5.033670902252197
    5. '[temp' → logprob: -8.158671379089355
    6. '[b' → logprob: -8.158671379089355
    7. '[test' → logprob: -10.033671379089355
    8. '[target' → logprob: -11.783671379089355
    9. '[int' → logprob: -11.783671379089355
    10. '[val' → logprob: -12.158671379089355

Token 1555: 'temp' (ID: 7340)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.41451361775398254
    2. 'beam' → logprob: -1.1645135879516602
    3. 'temp' → logprob: -3.66451358795166
    4. ' B' → logprob: -7.41451358795166
    5. 'ans' → logprob: -7.78951358795166
    6. ' beam' → logprob: -7.78951358795166
    7. '   ' → logprob: -9.66451358795166
    8. 'b' → logprob: -10.66451358795166
    9. 'Beam' → logprob: -10.66451358795166
    10. ' temp' → logprob: -11.16451358795166

Token 1556: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010792064480483532
    2. '2' → logprob: -4.635792255401611
    3. '1' → logprob: -7.135792255401611
    4. '0' → logprob: -8.885791778564453
    5. '```' → logprob: -9.385791778564453
    6. '[
' → logprob: -12.260791778564453
    7. '``' → logprob: -12.635791778564453
    8. 'def' → logprob: -13.510791778564453
    9. '-' → logprob: -13.635791778564453
    10. '][' → logprob: -13.760791778564453

Token 1557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006048606592230499
    2. ',B' → logprob: -7.500604629516602
    3. '                   ' → logprob: -10.625604629516602
    4. '               ' → logprob: -11.875604629516602
    5. ',b' → logprob: -12.000604629516602
    6. ' ,' → logprob: -12.000604629516602
    7. '           ' → logprob: -12.750604629516602
    8. '                       ' → logprob: -13.750604629516602
    9. '```' → logprob: -13.875604629516602
    10. ',
' → logprob: -14.375604629516602

Token 1558: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3072980046272278
    2. 'beam' → logprob: -1.432297945022583
    3. ' B' → logprob: -4.182298183441162
    4. ' beam' → logprob: -4.557298183441162
    5. '   ' → logprob: -10.557297706604004
    6. '           ' → logprob: -12.057297706604004
    7. 'Beam' → logprob: -12.307297706604004
    8. '       ' → logprob: -12.557297706604004
    9. '```' → logprob: -13.182297706604004
    10. ' ' → logprob: -13.307297706604004

Token 1559: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10313765704631805
    2. '       ' → logprob: -3.478137731552124
    3. '               ' → logprob: -3.478137731552124
    4. '           ' → logprob: -4.353137493133545
    5. ')' → logprob: -4.853137493133545
    6. '<|end|>' → logprob: -4.853137493133545
    7. '                   ' → logprob: -5.603137493133545
    8. '   ' → logprob: -6.978137493133545
    9. '```' → logprob: -7.103137493133545
    10. ']
' → logprob: -7.228137493133545

Token 1560: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.546478935983032e-05
    2. '```' → logprob: -11.500025749206543
    3. ' print' → logprob: -11.625025749206543
    4. 'for' → logprob: -12.625025749206543
    5. '   ' → logprob: -13.500025749206543
    6. ')' → logprob: -13.625025749206543
    7. '<|end|>' → logprob: -15.250025749206543
    8. '``' → logprob: -17.375024795532227
    9. '#print' → logprob: -17.875024795532227
    10. '#' → logprob: -18.000024795532227

Token 1561: ' temp' (ID: 5484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1308562755584717
    2. 'print' → logprob: -1.2558562755584717
    3. 'i' → logprob: -2.2558562755584717
    4. '       ' → logprob: -2.2558562755584717
    5. '           ' → logprob: -2.7558562755584717
    6. '```' → logprob: -3.1308562755584717
    7. '<|end|>' → logprob: -3.2558562755584717
    8. ')' → logprob: -4.880856513977051
    9. 'for' → logprob: -5.130856513977051
    10. '#' → logprob: -5.630856513977051

Token 1562: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871128559112549
    2. '=' → logprob: -1.1371128559112549
    3. ' +=' → logprob: -9.762112617492676
    4. '   ' → logprob: -10.012112617492676
    5. '+=' → logprob: -10.387112617492676
    6. ' -=' → logprob: -10.637112617492676
    7. ',' → logprob: -10.637112617492676
    8. ' ' → logprob: -11.762112617492676
    9. '    ' → logprob: -11.762112617492676
    10. '```' → logprob: -12.137112617492676

Token 1563: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.0007392307161353528
    2. ' Seg' → logprob: -7.375739097595215
    3. 'Segment' → logprob: -10.000739097595215
    4. 'max' → logprob: -10.250739097595215
    5. 'seg' → logprob: -11.125739097595215
    6. 'min' → logprob: -12.375739097595215
    7. '   ' → logprob: -12.750739097595215
    8. 'temp' → logprob: -13.000739097595215
    9. 'Tree' → logprob: -13.000739097595215
    10. 'tree' → logprob: -13.750739097595215

Token 1564: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.7432603272027336e-06
    2. 'tree' → logprob: -14.250001907348633
    3. 'Tre' → logprob: -15.000001907348633
    4. 'ree' → logprob: -15.125001907348633
    5. 'ST' → logprob: -15.250001907348633
    6. '_tree' → logprob: -16.625001907348633
    7. '1' → logprob: -16.625001907348633
    8. 'T' → logprob: -17.625001907348633
    9. 'Segment' → logprob: -17.875001907348633
    10. 'Query' → logprob: -18.250001907348633

Token 1565: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -9.729906196298543e-06
    2. 'query' → logprob: -11.750009536743164
    3. '1' → logprob: -14.125009536743164
    4. 'Query' → logprob: -14.875009536743164
    5. '_tree' → logprob: -16.125009536743164
    6. '$query' → logprob: -16.125009536743164
    7. '```' → logprob: -16.375009536743164
    8. 'QUERY' → logprob: -16.750009536743164
    9. '-query' → logprob: -16.750009536743164
    10. '_QUERY' → logprob: -17.375009536743164

Token 1566: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -2.816093228830141e-06
    2. 'tree' → logprob: -12.87500286102295
    3. '```' → logprob: -16.625001907348633
    4. '(' → logprob: -17.125001907348633
    5. '	tree' → logprob: -17.250001907348633
    6. '(
' → logprob: -19.625001907348633
    7. ' (' → logprob: -19.750001907348633
    8. '   ' → logprob: -19.875001907348633
    9. '(heap' → logprob: -20.875001907348633
    10. '(Tree' → logprob: -20.875001907348633

Token 1567: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1132313534617424
    2. '2' → logprob: -2.2382314205169678
    3. 'tree' → logprob: -8.613231658935547
    4. '(tree' → logprob: -8.863231658935547
    5. '```' → logprob: -10.238231658935547
    6. ',' → logprob: -10.363231658935547
    7. '   ' → logprob: -11.738231658935547
    8. '(' → logprob: -12.613231658935547
    9. '``' → logprob: -14.238231658935547
    10. ' ' → logprob: -14.363231658935547

Token 1568: ',' (ID: 11)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.0008218993316404521
    2. ',' → logprob: -7.250822067260742
    3. '(' → logprob: -9.625822067260742
    4. 'tree' → logprob: -11.250822067260742
    5. '```' → logprob: -11.250822067260742
    6. '[' → logprob: -11.625822067260742
    7. '	tree' → logprob: -12.500822067260742
    8. '/tree' → logprob: -13.000822067260742
    9. '(
' → logprob: -14.000822067260742
    10. '<Tree' → logprob: -14.625822067260742

Token 1569: ' num' (ID: 2269)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.4918273985385895
    2. 'num' → logprob: -0.9918273687362671
    3. ' num' → logprob: -4.616827487945557
    4. ' tree' → logprob: -4.866827487945557
    5. '```' → logprob: -12.866827011108398
    6. 'number' → logprob: -13.116827011108398
    7. 'start' → logprob: -13.366827011108398
    8. ',' → logprob: -13.991827011108398
    9. '(tree' → logprob: -14.491827011108398
    10. 'token' → logprob: -14.866827011108398

Token 1570: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5688464641571045
    2. 'num' → logprob: -0.9438464641571045
    3. '2' → logprob: -3.1938464641571045
    4. ',' → logprob: -6.443846702575684
    5. '   ' → logprob: -7.568846702575684
    6. ',num' → logprob: -7.818846702575684
    7. 'end' → logprob: -8.068846702575684
    8. '```' → logprob: -8.568846702575684
    9. '(num' → logprob: -8.818846702575684
    10. ' num' → logprob: -9.318846702575684

Token 1571: ',' (ID: 11)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.016122346743941307
    2. ',' → logprob: -4.141122341156006
    3. '(' → logprob: -10.266122817993164
    4. '```' → logprob: -10.891122817993164
    5. 'tree' → logprob: -11.141122817993164
    6. '(num' → logprob: -11.891122817993164
    7. ',num' → logprob: -12.891122817993164
    8. '	tree' → logprob: -13.016122817993164
    9. '/tree' → logprob: -13.016122817993164
    10. ' tree' → logprob: -13.141122817993164

Token 1572: ' seg' (ID: 3055)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.25192928314208984
    2. ' num' → logprob: -1.5019292831420898
    3. ',num' → logprob: -16.251930236816406
    4. ',' → logprob: -17.876930236816406
    5. '(num' → logprob: -18.876930236816406
    6. '	num' → logprob: -19.876930236816406
    7. '   ' → logprob: -20.001930236816406
    8. ' ' → logprob: -20.126930236816406
    9. '```' → logprob: -20.501930236816406
    10. 'n' → logprob: -20.751930236816406

Token 1573: 'func' (ID: 5652)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.6018252372741699
    2. '2' → logprob: -0.8518252372741699
    3. '1' → logprob: -4.22682523727417
    4. ',' → logprob: -5.10182523727417
    5. ',num' → logprob: -6.22682523727417
    6. '   ' → logprob: -6.97682523727417
    7. '(num' → logprob: -7.22682523727417
    8. '       ' → logprob: -8.226825714111328
    9. ' num' → logprob: -8.601825714111328
    10. '      ' → logprob: -9.101825714111328

Token 1574: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004893111996352673
    2. ',num' → logprob: -5.6298933029174805
    3. ' num' → logprob: -6.7548933029174805
    4. 'num' → logprob: -9.00489330291748
    5. ' ,' → logprob: -12.62989330291748
    6. '   ' → logprob: -14.62989330291748
    7. '```' → logprob: -15.12989330291748
    8. '[num' → logprob: -16.379892349243164
    9. '<num' → logprob: -16.879892349243164
    10. '(num' → logprob: -16.879892349243164

Token 1575: ' ide' (ID: 2750)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.5759396553039551
    2. 'num' → logprob: -0.8259396553039551
    3. '(num' → logprob: -16.075939178466797
    4. ' ' → logprob: -16.950939178466797
    5. ',num' → logprob: -17.075939178466797
    6. '[num' → logprob: -17.700939178466797
    7. '   ' → logprob: -17.700939178466797
    8. 'n' → logprob: -17.825939178466797
    9. 'm' → logprob: -18.200939178466797
    10. '0' → logprob: -18.575939178466797

Token 1576: '_ele' (ID: 154942)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.048364777117967606
    2. 'num' → logprob: -3.2983648777008057
    3. '1' → logprob: -5.298364639282227
    4. '   ' → logprob: -6.423364639282227
    5. '```' → logprob: -7.798364639282227
    6. '       ' → logprob: -8.048364639282227
    7. 'um' → logprob: -8.298364639282227
    8. ',' → logprob: -8.298364639282227
    9. 'check' → logprob: -8.298364639282227
    10. 'size' → logprob: -8.423364639282227

Token 1577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.153795766294934e-06
    2. ',num' → logprob: -12.250005722045898
    3. ' ,' → logprob: -14.500005722045898
    4. '(tree' → logprob: -14.750005722045898
    5. ',temp' → logprob: -15.625005722045898
    6. '   ' → logprob: -15.875005722045898
    7. '```' → logprob: -17.3750057220459
    8. '           ' → logprob: -17.3750057220459
    9. '(' → logprob: -17.6250057220459
    10. ',
' → logprob: -18.3750057220459

Token 1578: ' R' (ID: 460)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.016386590898036957
    2. 'L' → logprob: -4.76638650894165
    3. 'R' → logprob: -5.39138650894165
    4. ' end' → logprob: -6.51638650894165
    5. 'm' → logprob: -6.64138650894165
    6. 'temp' → logprob: -9.391386985778809
    7. ' L' → logprob: -9.641386985778809
    8. 'start' → logprob: -9.766386985778809
    9. '   ' → logprob: -10.016386985778809
    10. ' R' → logprob: -10.516386985778809

Token 1579: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42871177196502686
    2. ' +' → logprob: -1.0537117719650269
    3. '[' → logprob: -12.428711891174316
    4. '   ' → logprob: -13.428711891174316
    5. ',' → logprob: -13.803711891174316
    6. '```' → logprob: -13.928711891174316
    7. '＋' → logprob: -13.928711891174316
    8. '+,' → logprob: -14.553711891174316
    9. ' ' → logprob: -14.928711891174316
    10. '+
' → logprob: -14.928711891174316

Token 1580: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -11.250014305114746
    3. '   ' → logprob: -15.500014305114746
    4. '```' → logprob: -15.625014305114746
    5. '2' → logprob: -15.937514305114746
    6. ',' → logprob: -15.937514305114746
    7. '           ' → logprob: -16.18751335144043
    8. '       ' → logprob: -17.06251335144043
    9. '
' → logprob: -17.31251335144043
    10. '+' → logprob: -17.37501335144043

Token 1581: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.625003814697266
    3. '2' → logprob: -15.375003814697266
    4. '
' → logprob: -16.125003814697266
    5. '   ' → logprob: -16.375003814697266
    6. '```' → logprob: -18.500003814697266
    7. '+' → logprob: -19.062503814697266
    8. '１' → logprob: -19.125003814697266
    9. '       ' → logprob: -19.312503814697266
    10. '0' → logprob: -19.500003814697266

Token 1582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002204497577622533
    2. ',num' → logprob: -6.252204418182373
    3. '   ' → logprob: -8.627204895019531
    4. '```' → logprob: -10.002204895019531
    5. ')' → logprob: -10.627204895019531
    6. ' ,' → logprob: -11.752204895019531
    7. ' +' → logprob: -12.502204895019531
    8. '       ' → logprob: -12.627204895019531
    9. '+' → logprob: -13.002204895019531
    10. ',
' → logprob: -13.127204895019531

Token 1583: ' N' (ID: 478)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.014170913025736809
    2. ' num' → logprob: -4.264171123504639
    3. 'N' → logprob: -11.88917064666748
    4. ' N' → logprob: -15.26417064666748
    5. 'Num' → logprob: -15.63917064666748
    6. 'NUM' → logprob: -16.764171600341797
    7. '_num' → logprob: -17.139171600341797
    8. 'n' → logprob: -17.514171600341797
    9. '   ' → logprob: -17.639171600341797
    10. '    ' → logprob: -18.014171600341797

Token 1584: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10027480870485306
    2. ')
' → logprob: -2.3502748012542725
    3. '   ' → logprob: -9.850275039672852
    4. ')
' → logprob: -11.725275039672852
    5. '       ' → logprob: -13.225275039672852
    6. '```' → logprob: -13.725275039672852
    7. '           ' → logprob: -14.225275039672852
    8. ' )' → logprob: -14.725275039672852
    9. ',' → logprob: -14.975275039672852
    10. ')`
' → logprob: -15.225275039672852

Token 1585: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.05324120447039604
    2. '   ' → logprob: -4.30324125289917
    3. '           ' → logprob: -4.30324125289917
    4. '       ' → logprob: -5.05324125289917
    5. '[' → logprob: -5.30324125289917
    6. '``' → logprob: -5.67824125289917
    7. ' +=' → logprob: -6.17824125289917
    8. ')' → logprob: -6.55324125289917
    9. '+' → logprob: -6.67824125289917
    10. '<|end|>' → logprob: -6.80324125289917

Token 1586: ' temp' (ID: 5484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03755340352654457
    2. 'temp' (adapté à ' temp') → logprob: -3.662553310394287
    3. '```' → logprob: -4.537553310394287
    4. '+' → logprob: -8.537553787231445
    5. '``' → logprob: -9.412553787231445
    6. ' temp' → logprob: -9.912553787231445
    7. '          ' → logprob: -10.162553787231445
    8. '       ' → logprob: -10.662553787231445
    9. '               ' → logprob: -10.787553787231445
    10. '+=' → logprob: -10.912553787231445

Token 1587: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023278091102838516
    2. ' +=' → logprob: -3.773277997970581
    3. '=' → logprob: -10.89827823638916
    4. '+' → logprob: -12.14827823638916
    5. '   ' → logprob: -13.14827823638916
    6. '-=' → logprob: -13.27327823638916
    7. '+=(' → logprob: -13.39827823638916
    8. ']+=' → logprob: -13.52327823638916
    9. ' =' → logprob: -14.39827823638916
    10. '+='' → logprob: -14.52327823638916

Token 1588: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0004324573092162609
    2. ' beam' → logprob: -7.75043249130249
    3. '   ' → logprob: -13.750432014465332
    4. ' ' → logprob: -15.375432014465332
    5. '  ' → logprob: -16.62543296813965
    6. '           ' → logprob: -16.62543296813965
    7. 'be' → logprob: -16.62543296813965
    8. '       ' → logprob: -17.00043296813965
    9. '(' → logprob: -17.12543296813965
    10. '-' → logprob: -17.37543296813965

Token 1589: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -13.875000953674316
    3. '```' → logprob: -17.375001907348633
    4. '(i' → logprob: -17.500001907348633
    5. '[' → logprob: -18.375001907348633
    6. '           ' → logprob: -19.000001907348633
    7. '{i' → logprob: -19.125001907348633
    8. '[
' → logprob: -19.125001907348633
    9. '   ' → logprob: -19.500001907348633
    10. '
' → logprob: -19.500001907348633

Token 1590: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010599602246657014
    2. '[i' → logprob: -7.0010600090026855
    3. '```' → logprob: -9.251059532165527
    4. '][' → logprob: -11.001059532165527
    5. '`' → logprob: -11.126059532165527
    6. ''[' → logprob: -11.501059532165527
    7. ')[' → logprob: -12.501059532165527
    8. '>[' → logprob: -13.126059532165527
    9. '``' → logprob: -14.251059532165527
    10. '"[' → logprob: -14.251059532165527

Token 1591: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.893480243277736e-05
    2. '[' → logprob: -10.375039100646973
    3. '1' → logprob: -12.750039100646973
    4. '```' → logprob: -12.875039100646973
    5. ' ' → logprob: -13.875039100646973
    6. '   ' → logprob: -15.125039100646973
    7. '-' → logprob: -15.125039100646973
    8. '(' → logprob: -15.500039100646973
    9. '2' → logprob: -16.375038146972656
    10. '
' → logprob: -16.437538146972656

Token 1592: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0031840058509260416
    2. '-' → logprob: -5.753183841705322
    3. '   ' → logprob: -13.12818431854248
    4. ' ' → logprob: -13.50318431854248
    5. '```' → logprob: -14.00318431854248
    6. '           ' → logprob: -14.50318431854248
    7. ' -
' → logprob: -14.50318431854248
    8. ' ' → logprob: -15.37818431854248
    9. ',' → logprob: -15.62818431854248
    10. '[' → logprob: -15.62818431854248

Token 1593: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06197642162442207
    2. '-' → logprob: -2.811976432800293
    3. '   ' → logprob: -12.561976432800293
    4. '```' → logprob: -13.061976432800293
    5. ' ' → logprob: -13.311976432800293
    6. '           ' → logprob: -14.311976432800293
    7. '       ' → logprob: -15.436976432800293
    8. ' ' → logprob: -15.561976432800293
    9. '          ' → logprob: -16.561975479125977
    10. ' -
' → logprob: -16.686975479125977

Token 1594: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0003370118502061814
    2. ' beam' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.125336647033691
    4. '       ' → logprob: -15.125336647033691
    5. '           ' → logprob: -15.500336647033691
    6. 'be' → logprob: -15.750336647033691
    7. 'beat' → logprob: -16.750337600708008
    8. ' ' → logprob: -16.750337600708008
    9. '```' → logprob: -17.125337600708008
    10. 'b' → logprob: -17.625337600708008

Token 1595: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002636006975080818
    2. '[' → logprob: -8.500263214111328
    3. 'i' → logprob: -9.750263214111328
    4. '1' → logprob: -14.250263214111328
    5. '(i' → logprob: -15.000263214111328
    6. '[
' → logprob: -15.125263214111328
    7. '```' → logprob: -15.250263214111328
    8. '{i' → logprob: -15.500263214111328
    9. '   ' → logprob: -15.875263214111328
    10. ' [' → logprob: -17.125263214111328

Token 1596: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004409228917211294
    2. '[i' → logprob: -5.504409313201904
    3. '1' → logprob: -8.379408836364746
    4. '][' → logprob: -10.004408836364746
    5. '```' → logprob: -11.004408836364746
    6. 'i' → logprob: -11.129408836364746
    7. '[
' → logprob: -12.254408836364746
    8. '-' → logprob: -12.254408836364746
    9. '   ' → logprob: -12.879408836364746
    10. '>[' → logprob: -13.379408836364746

Token 1597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.47495681833243e-05
    2. 'i' → logprob: -11.125024795532227
    3. '[i' → logprob: -11.750024795532227
    4. ' ' → logprob: -14.500024795532227
    5. 'beam' → logprob: -15.125024795532227
    6. '[' → logprob: -15.250024795532227
    7. '<|end|>' → logprob: -15.250024795532227
    8. '```' → logprob: -15.375024795532227
    9. '
' → logprob: -15.500024795532227
    10. '   ' → logprob: -15.750024795532227

Token 1598: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2495235800743103
    2. ')
' → logprob: -1.999523639678955
    3. '       ' → logprob: -3.624523639678955
    4. ')' → logprob: -4.249523639678955
    5. '
' → logprob: -4.374523639678955
    6. ']
' → logprob: -4.624523639678955
    7. '```' → logprob: -4.749523639678955
    8. '<|end|>' → logprob: -4.999523639678955
    9. '   ' → logprob: -5.999523639678955
    10. ']' → logprob: -6.249523639678955

Token 1599: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0077852471731603146
    2. '```' → logprob: -4.882785320281982
    3. '               ' → logprob: -9.757784843444824
    4. '``' → logprob: -10.382784843444824
    5. '       ' → logprob: -10.632784843444824
    6. '<|end|>' → logprob: -10.632784843444824
    7. '          ' → logprob: -11.382784843444824
    8. '		' → logprob: -11.882784843444824
    9. '   ' → logprob: -12.132784843444824
    10. ' if' → logprob: -12.257784843444824

Token 1600: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01840732805430889
    2. 'if' (adapté à ' if') → logprob: -4.018407344818115
    3. ' if' → logprob: -8.768406867980957
    4. '```' → logprob: -9.393406867980957
    5. '               ' → logprob: -11.268406867980957
    6. '       ' → logprob: -13.643406867980957
    7. 'for' → logprob: -13.643406867980957
    8. '		' → logprob: -13.768406867980957
    9. '   ' → logprob: -14.018406867980957
    10. '``' → logprob: -14.518406867980957

Token 1601: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.38687485456466675
    2. ' temp' → logprob: -1.1368749141693115
    3. '(temp' → logprob: -13.01187515258789
    4. '   ' → logprob: -15.13687515258789
    5. '	temp' → logprob: -15.13687515258789
    6. ' ' → logprob: -15.76187515258789
    7. '           ' → logprob: -15.76187515258789
    8. '[temp' → logprob: -15.76187515258789
    9. 'tem' → logprob: -16.13687515258789
    10. '```' → logprob: -16.26187515258789

Token 1602: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.018236683681607246
    2. '<=' → logprob: -4.0182366371154785
    3. '           ' → logprob: -9.643237113952637
    4. '```' → logprob: -11.768237113952637
    5. '   ' → logprob: -11.893237113952637
    6. '       ' → logprob: -12.893237113952637
    7. '               ' → logprob: -13.518237113952637
    8. ' >' → logprob: -14.018237113952637
    9. '          ' → logprob: -14.018237113952637
    10. '>' → logprob: -14.518237113952637

Token 1603: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25195688009262085
    2. ' ' → logprob: -1.5019569396972656
    3. '   ' → logprob: -11.126956939697266
    4. '```' → logprob: -12.751956939697266
    5. '1' → logprob: -12.876956939697266
    6. '  ' → logprob: -13.501956939697266
    7. '       ' → logprob: -14.064456939697266
    8. '           ' → logprob: -14.251956939697266
    9. '=' → logprob: -14.314456939697266
    10. '    ' → logprob: -14.689456939697266

Token 1604: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018232580623589456
    2. ' ' → logprob: -8.625182151794434
    3. '   ' → logprob: -14.375182151794434
    4. '```' → logprob: -14.625182151794434
    5. '<=' → logprob: -14.812682151794434
    6. '1' → logprob: -14.937682151794434
    7. '
' → logprob: -15.437682151794434
    8. '<|end|>' → logprob: -16.06268310546875
    9. '       ' → logprob: -16.68768310546875
    10. '  ' → logprob: -16.87518310546875

Token 1605: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3218931555747986
    2. ':
' → logprob: -1.6968932151794434
    3. ':' → logprob: -2.4468932151794434
    4. '           ' → logprob: -5.571893215179443
    5. '```' → logprob: -7.571893215179443
    6. '       ' → logprob: -7.946893215179443
    7. '                   ' → logprob: -8.446892738342285
    8. '              ' → logprob: -8.571892738342285
    9. '):
' → logprob: -9.071892738342285
    10. '                       ' → logprob: -9.571892738342285

Token 1606: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014608138240873814
    2. '```' → logprob: -4.264607906341553
    3. ':
' → logprob: -9.264608383178711
    4. '{
' → logprob: -9.764608383178711
    5. '           ' → logprob: -9.889608383178711
    6. '              ' → logprob: -10.139608383178711
    7. '                   ' → logprob: -10.139608383178711
    8. ':' → logprob: -10.139608383178711
    9. '``' → logprob: -10.139608383178711
    10. '                       ' → logprob: -11.139608383178711

Token 1607: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.020563025027513504
    2. '               ' → logprob: -4.520563125610352
    3. ' temp' → logprob: -5.020563125610352
    4. '                   ' → logprob: -6.020563125610352
    5. '           ' → logprob: -8.395563125610352
    6. '   ' → logprob: -8.645563125610352
    7. '                       ' → logprob: -11.145563125610352
    8. 'for' → logprob: -11.395563125610352
    9. '       ' → logprob: -12.895563125610352
    10. ' ' → logprob: -13.270563125610352

Token 1608: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006022418383508921
    2. '=' → logprob: -8.000601768493652
    3. ' =' → logprob: -8.625601768493652
    4. '+=' → logprob: -10.500601768493652
    5. '   ' → logprob: -10.750601768493652
    6. ' +=' → logprob: -11.125601768493652
    7. ' ' → logprob: -11.875601768493652
    8. '       ' → logprob: -12.125601768493652
    9. '    ' → logprob: -13.000601768493652
    10. '>' → logprob: -13.500601768493652

Token 1609: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804229199886322
    2. '=' → logprob: -3.2880423069000244
    3. '```' → logprob: -14.288042068481445
    4. '   ' → logprob: -16.413042068481445
    5. ' ' → logprob: -17.538042068481445
    6. ':' → logprob: -17.538042068481445
    7. '2' → logprob: -17.663042068481445
    8. '	' → logprob: -18.163042068481445
    9. '       ' → logprob: -18.288042068481445
    10. ')' → logprob: -18.413042068481445

Token 1610: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.07890047132968903
    2. ' abs' → logprob: -2.5789005756378174
    3. 'beam' → logprob: -12.078900337219238
    4. '(abs' → logprob: -12.703900337219238
    5. ' beam' → logprob: -13.578900337219238
    6. 'ans' → logprob: -15.078900337219238
    7. '_abs' → logprob: -16.328901290893555
    8. '.abs' → logprob: -16.703901290893555
    9. '0' → logprob: -17.578901290893555
    10. ' ans' → logprob: -17.703901290893555

Token 1611: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.014169031754136086
    2. 'temp' → logprob: -4.264169216156006
    3. '[temp' → logprob: -12.389168739318848
    4. '$temp' → logprob: -14.514168739318848
    5. ' temp' → logprob: -14.764168739318848
    6. '=temp' → logprob: -15.389168739318848
    7. '	temp' → logprob: -16.139169692993164
    8. ',temp' → logprob: -16.389169692993164
    9. '(tmp' → logprob: -16.514169692993164
    10. '_temp' → logprob: -18.389169692993164

Token 1612: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01043738890439272
    2. ')
' → logprob: -4.760437488555908
    3. '):
' → logprob: -6.885437488555908
    4. '```' → logprob: -7.760437488555908
    5. '[' → logprob: -9.38543701171875
    6. '<|end|>' → logprob: -10.26043701171875
    7. '):' → logprob: -10.38543701171875
    8. '               ' → logprob: -10.38543701171875
    9. '       ' → logprob: -10.51043701171875
    10. '           ' → logprob: -10.63543701171875

Token 1613: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20259088277816772
    2. '               ' → logprob: -2.3275909423828125
    3. '```' → logprob: -2.9525909423828125
    4. '[' → logprob: -4.2025909423828125
    5. '                       ' → logprob: -4.9525909423828125
    6. '           ' → logprob: -5.8275909423828125
    7. '=' → logprob: -6.5775909423828125
    8. '       ' → logprob: -6.8275909423828125
    9. '                  ' → logprob: -6.9525909423828125
    10. '``' → logprob: -7.4525909423828125

Token 1614: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.0020096488296985626
    2. ' B' → logprob: -6.252009868621826
    3. '               ' → logprob: -9.627009391784668
    4. '                   ' → logprob: -11.127009391784668
    5. '           ' → logprob: -15.502009391784668
    6. '                ' → logprob: -17.002010345458984
    7. '   ' → logprob: -17.127010345458984
    8. 'b' → logprob: -17.377010345458984
    9. '```' → logprob: -17.627010345458984
    10. '                       ' → logprob: -18.502010345458984

Token 1615: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2524697184562683
    2. '=' → logprob: -1.502469778060913
    3. '               ' → logprob: -8.127470016479492
    4. '[' → logprob: -9.127470016479492
    5. '                   ' → logprob: -9.877470016479492
    6. '                ' → logprob: -10.627470016479492
    7. '           ' → logprob: -10.627470016479492
    8. '```' → logprob: -11.752470016479492
    9. '[i' → logprob: -12.752470016479492
    10. '              ' → logprob: -12.752470016479492

Token 1616: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.033676475286483765
    2. ' beam' → logprob: -3.4086763858795166
    3. 'ans' → logprob: -10.658676147460938
    4. '   ' → logprob: -12.783676147460938
    5. ' ans' → logprob: -12.908676147460938
    6. 'be' → logprob: -14.158676147460938
    7. ' ' → logprob: -14.908676147460938
    8. '           ' → logprob: -16.033676147460938
    9. '```' → logprob: -16.158676147460938
    10. '  ' → logprob: -16.408676147460938

Token 1617: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.036524842376821e-05
    2. 'i' → logprob: -10.125040054321289
    3. '[' → logprob: -16.12504005432129
    4. '```' → logprob: -16.75004005432129
    5. '(i' → logprob: -17.87504005432129
    6. '   ' → logprob: -18.12504005432129
    7. '           ' → logprob: -18.25004005432129
    8. ',i' → logprob: -18.75004005432129
    9. '`' → logprob: -19.37504005432129
    10. ' i' → logprob: -19.50004005432129

Token 1618: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. 'i' → logprob: -13.00000286102295
    3. '```' → logprob: -15.62500286102295
    4. '[' → logprob: -16.375001907348633
    5. '(i' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.500001907348633
    7. '`' → logprob: -18.750001907348633
    8. '
' → logprob: -18.875001907348633
    9. '           ' → logprob: -19.000001907348633
    10. '{i' → logprob: -19.250001907348633

Token 1619: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026486311107873917
    2. '1' → logprob: -3.651486396789551
    3. '[i' → logprob: -8.77648639678955
    4. ' i' → logprob: -11.52648639678955
    5. '```' → logprob: -11.52648639678955
    6. '   ' → logprob: -12.77648639678955
    7. '(i' → logprob: -12.90148639678955
    8. '[' → logprob: -13.27648639678955
    9. '	i' → logprob: -13.52648639678955
    10. '
' → logprob: -13.52648639678955

Token 1620: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021081648766994476
    2. '```' → logprob: -5.021081447601318
    3. ']' → logprob: -5.396081447601318
    4. '           ' → logprob: -5.896081447601318
    5. ']
' → logprob: -6.146081447601318
    6. ':
' → logprob: -6.521081447601318
    7. '                   ' → logprob: -6.521081447601318
    8. '[' → logprob: -6.896081447601318
    9. ']:
' → logprob: -8.021081924438477
    10. '                ' → logprob: -9.271081924438477

Token 1621: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8965622782707214
    2. 'if' → logprob: -1.3965623378753662
    3. ' if' → logprob: -1.7715623378753662
    4. '                   ' → logprob: -2.146562337875366
    5. '```' → logprob: -2.896562337875366
    6. '                       ' → logprob: -6.896562099456787
    7. '                ' → logprob: -7.521562099456787
    8. '``' → logprob: -9.146562576293945
    9. '[' → logprob: -9.271562576293945
    10. '           ' → logprob: -9.271562576293945

Token 1622: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.026237942278385162
    2. ' if' → logprob: -3.776237964630127
    3. '               ' → logprob: -6.026237964630127
    4. '                   ' → logprob: -7.651237964630127
    5. '```' → logprob: -9.651237487792969
    6. '                ' → logprob: -11.151237487792969
    7. '                       ' → logprob: -12.401237487792969
    8. 'for' → logprob: -12.776237487792969
    9. '           ' → logprob: -12.776237487792969
    10. '                 ' → logprob: -12.901237487792969

Token 1623: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5759430527687073
    2. ' B' → logprob: -0.8259430527687073
    3. '   ' → logprob: -13.450942993164062
    4. ' ' → logprob: -14.200942993164062
    5. '(B' → logprob: -15.200942993164062
    6. '`' → logprob: -15.575942993164062
    7. '(' → logprob: -15.700942993164062
    8. '           ' → logprob: -15.825942993164062
    9. '    ' → logprob: -16.200942993164062
    10. '  ' → logprob: -16.200942993164062

Token 1624: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02979491837322712
    2. '*' → logprob: -3.529794931411743
    3. '```' → logprob: -10.654794692993164
    4. '[' → logprob: -11.654794692993164
    5. '*[' → logprob: -12.654794692993164
    6. '               ' → logprob: -12.904794692993164
    7. '   ' → logprob: -13.404794692993164
    8. '           ' → logprob: -13.404794692993164
    9. ' ' → logprob: -13.779794692993164
    10. '``' → logprob: -14.404794692993164

Token 1625: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20141470432281494
    2. ' ans' → logprob: -1.701414704322815
    3. '(ans' → logprob: -14.326415061950684
    4. '	ans' → logprob: -14.451415061950684
    5. '_ans' → logprob: -16.076414108276367
    6. '
' → logprob: -16.951414108276367
    7. '```' → logprob: -18.076414108276367
    8. ' ' → logprob: -18.201414108276367
    9. '[' → logprob: -18.576414108276367
    10. '`' → logprob: -18.826414108276367

Token 1626: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.941850526549388e-06
    2. '```' → logprob: -12.500007629394531
    3. ' [' → logprob: -13.500007629394531
    4. '*' → logprob: -14.250007629394531
    5. ' *' → logprob: -14.375007629394531
    6. '   ' → logprob: -15.250007629394531
    7. '``' → logprob: -15.250007629394531
    8. '*[' → logprob: -15.500007629394531
    9. '[
' → logprob: -15.750007629394531
    10. '
' → logprob: -15.750007629394531

Token 1627: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. '[' → logprob: -10.500051498413086
    3. '
' → logprob: -11.750051498413086
    4. '   ' → logprob: -12.125051498413086
    5. ' ' → logprob: -12.250051498413086
    6. '1' → logprob: -13.000051498413086
    7. '  ' → logprob: -14.437551498413086
    8. '-' → logprob: -14.562551498413086
    9. '```' → logprob: -14.625051498413086
    10. '    ' → logprob: -15.125051498413086

Token 1628: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.016051849350333214
    2. '<' → logprob: -4.141051769256592
    3. '```' → logprob: -11.51605224609375
    4. '                   ' → logprob: -13.64105224609375
    5. '[' → logprob: -14.14105224609375
    6. '   ' → logprob: -14.14105224609375
    7. '               ' → logprob: -14.51605224609375
    8. ' >' → logprob: -14.76605224609375
    9. '          ' → logprob: -14.76605224609375
    10. '<p' → logprob: -14.76605224609375

Token 1629: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6932847499847412
    2. ' <' → logprob: -0.6932847499847412
    3. '```' → logprob: -9.94328498840332
    4. '                   ' → logprob: -10.94328498840332
    5. '=' → logprob: -11.31828498840332
    6. '                       ' → logprob: -11.94328498840332
    7. '[' → logprob: -11.94328498840332
    8. '               ' → logprob: -12.06828498840332
    9. '<int' → logprob: -12.31828498840332
    10. '                    ' → logprob: -12.94328498840332

Token 1630: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5759451985359192
    2. 'ans' → logprob: -0.8259451985359192
    3. '(ans' → logprob: -12.200944900512695
    4. '	ans' → logprob: -14.575944900512695
    5. '_ans' → logprob: -15.325944900512695
    6. 'Ans' → logprob: -17.075944900512695
    7. 'B' → logprob: -17.575944900512695
    8. '           ' → logprob: -18.450944900512695
    9. 'ANS' → logprob: -19.075944900512695
    10. ' ' → logprob: -19.325944900512695

Token 1631: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10124377906322479
    2. '1' → logprob: -2.351243734359741
    3. 'ans' → logprob: -7.22624397277832
    4. '   ' → logprob: -8.97624397277832
    5. '```' → logprob: -9.60124397277832
    6. '0' → logprob: -10.35124397277832
    7. ' ans' → logprob: -10.85124397277832
    8. '[i' → logprob: -11.22624397277832
    9. '           ' → logprob: -11.47624397277832
    10. '       ' → logprob: -11.47624397277832

Token 1632: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022642093244940042
    2. '0' → logprob: -6.127264022827148
    3. '[' → logprob: -10.377264022827148
    4. '   ' → logprob: -10.752264022827148
    5. '```' → logprob: -11.627264022827148
    6. '-' → logprob: -12.252264022827148
    7. ' ' → logprob: -12.627264022827148
    8. 'ans' → logprob: -13.252264022827148
    9. '
' → logprob: -13.502264022827148
    10. '2' → logprob: -13.627264022827148

Token 1633: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5242105722427368
    2. '*' → logprob: -0.8992105722427368
    3. '               ' → logprob: -7.024210453033447
    4. '```' → logprob: -9.524210929870605
    5. '                   ' → logprob: -9.774210929870605
    6. '                ' → logprob: -11.274210929870605
    7. '              ' → logprob: -11.524210929870605
    8. '           ' → logprob: -11.899210929870605
    9. '[' → logprob: -12.524210929870605
    10. '>' → logprob: -12.774210929870605

Token 1634: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22932425141334534
    2. '*' → logprob: -1.604324221611023
    3. '                   ' → logprob: -5.8543243408203125
    4. '               ' → logprob: -7.1043243408203125
    5. '                       ' → logprob: -9.979324340820312
    6. '                ' → logprob: -10.229324340820312
    7. '```' → logprob: -10.479324340820312
    8. '                    ' → logprob: -10.604324340820312
    9. '                  ' → logprob: -10.979324340820312
    10. '*t' → logprob: -11.479324340820312

Token 1635: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.03475071117281914
    2. ' temp' → logprob: -3.4097506999969482
    3. 'B' → logprob: -7.284750938415527
    4. 'beam' → logprob: -8.534750938415527
    5. '(temp' → logprob: -9.659750938415527
    6. '   ' → logprob: -10.159750938415527
    7. 'ans' → logprob: -10.534750938415527
    8. ' B' → logprob: -10.534750938415527
    9. ' beam' → logprob: -11.034750938415527
    10. '[temp' → logprob: -11.284750938415527

Token 1636: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24178220331668854
    2. '2' → logprob: -2.9917821884155273
    3. '               ' → logprob: -2.9917821884155273
    4. '                   ' → logprob: -3.2417821884155273
    5. '[i' → logprob: -3.4917821884155273
    6. '           ' → logprob: -4.241782188415527
    7. '```' → logprob: -4.616782188415527
    8. '       ' → logprob: -4.866782188415527
    9. '   ' → logprob: -5.866782188415527
    10. '                       ' → logprob: -5.991782188415527

Token 1637: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7279272079467773
    2. ':
' → logprob: -0.8529272079467773
    3. ':' → logprob: -2.7279272079467773
    4. '                       ' → logprob: -4.102927207946777
    5. '               ' → logprob: -5.102927207946777
    6. '                  ' → logprob: -7.352927207946777
    7. '```' → logprob: -7.602927207946777
    8. '                    ' → logprob: -8.102927207946777
    9. '           ' → logprob: -8.477927207946777
    10. '                           ' → logprob: -8.602927207946777

Token 1638: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18488655984401703
    2. '                       ' → logprob: -2.1848864555358887
    3. ':
' → logprob: -3.0598864555358887
    4. ':' → logprob: -5.434886455535889
    5. '```' → logprob: -6.309886455535889
    6. '               ' → logprob: -6.434886455535889
    7. '                  ' → logprob: -7.434886455535889
    8. '                      ' → logprob: -8.184886932373047
    9. '                    ' → logprob: -8.684886932373047
    10. '                           ' → logprob: -9.059886932373047

Token 1639: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.011063262820243835
    2. ' ans' → logprob: -4.511063098907471
    3. '(ans' → logprob: -12.386063575744629
    4. '```' → logprob: -12.386063575744629
    5. '                   ' → logprob: -12.761063575744629
    6. '	ans' → logprob: -13.511063575744629
    7. '   ' → logprob: -14.511063575744629
    8. '                           ' → logprob: -14.636063575744629
    9. '                       ' → logprob: -14.761063575744629
    10. '``' → logprob: -14.886063575744629

Token 1640: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1807372123003006
    2. '[' → logprob: -2.680737257003784
    3. ' =' → logprob: -2.805737257003784
    4. '+=' → logprob: -3.805737257003784
    5. ' +=' → logprob: -4.930737018585205
    6. '```' → logprob: -6.180737018585205
    7. '.append' → logprob: -6.680737018585205
    8. '[
' → logprob: -6.680737018585205
    9. ')' → logprob: -7.805737018585205
    10. '[-' → logprob: -8.430737495422363

Token 1641: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1427403688430786
    2. ' [' → logprob: -2.017740249633789
    3. '[B' → logprob: -11.017740249633789
    4. '```' → logprob: -11.517740249633789
    5. '[t' → logprob: -11.767740249633789
    6. '   ' → logprob: -11.767740249633789
    7. ' `[' → logprob: -12.392740249633789
    8. '[i' → logprob: -12.517740249633789
    9. 'beam' → logprob: -12.892740249633789
    10. '[b' → logprob: -13.017740249633789

Token 1642: 'temp' (ID: 7340)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.16701847314834595
    2. 'temp' → logprob: -2.292018413543701
    3. '[temp' → logprob: -3.042018413543701
    4. '[' → logprob: -5.917018413543701
    5. '[B' → logprob: -7.042018413543701
    6. '[t' → logprob: -7.542018413543701
    7. ' B' → logprob: -7.917018413543701
    8. 'beam' → logprob: -8.41701889038086
    9. ' temp' → logprob: -9.16701889038086
    10. 't' → logprob: -9.29201889038086

Token 1643: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4559382200241089
    2. '0' → logprob: -1.5809382200241089
    3. '2' → logprob: -1.8309382200241089
    4. '```' → logprob: -10.330938339233398
    5. '1' → logprob: -10.455938339233398
    6. '   ' → logprob: -11.205938339233398
    7. ' ' → logprob: -12.205938339233398
    8. '[
' → logprob: -12.330938339233398
    9. '
' → logprob: -12.955938339233398
    10. '][' → logprob: -13.080938339233398

Token 1644: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034809779026545584
    2. '                   ' → logprob: -9.000348091125488
    3. ',B' → logprob: -9.250348091125488
    4. '               ' → logprob: -10.000348091125488
    5. ' ,' → logprob: -10.250348091125488
    6. '           ' → logprob: -11.125348091125488
    7. ',b' → logprob: -11.750348091125488
    8. '```' → logprob: -12.375348091125488
    9. ',i' → logprob: -12.500348091125488
    10. '[' → logprob: -12.500348091125488

Token 1645: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4012834131717682
    2. ' B' → logprob: -1.7762833833694458
    3. 'beam' → logprob: -2.0262835025787354
    4. ' beam' → logprob: -3.5262835025787354
    5. 'ans' → logprob: -11.401283264160156
    6. '_B' → logprob: -12.651283264160156
    7. ' ans' → logprob: -12.776283264160156
    8. '               ' → logprob: -12.901283264160156
    9. '   ' → logprob: -13.026283264160156
    10. '           ' → logprob: -13.026283264160156

Token 1646: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5625300407409668
    2. ')' → logprob: -1.8125300407409668
    3. '               ' → logprob: -2.062530040740967
    4. '           ' → logprob: -2.812530040740967
    5. '       ' → logprob: -3.312530040740967
    6. '                   ' → logprob: -3.687530040740967
    7. '<|end|>' → logprob: -5.312530040740967
    8. '   ' → logprob: -5.562530040740967
    9. '```' → logprob: -5.687530040740967
    10. ')]' → logprob: -6.562530040740967

Token 1647: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.988221684878226e-06
    2. '```' → logprob: -12.250006675720215
    3. ' print' → logprob: -13.375006675720215
    4. ')' → logprob: -15.125006675720215
    5. 'for' → logprob: -15.625006675720215
    6. '
' → logprob: -16.62500762939453
    7. ')
' → logprob: -17.00000762939453
    8. '   ' → logprob: -17.37500762939453
    9. '``' → logprob: -17.37500762939453
    10. '<|end|>' → logprob: -19.12500762939453

Token 1648: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.319370302458992e-06
    2. '```' → logprob: -12.625005722045898
    3. ')' → logprob: -14.125005722045898
    4. ' print' → logprob: -14.250005722045898
    5. 'for' (adapté à ' for') → logprob: -14.875005722045898
    6. ')
' → logprob: -16.0000057220459
    7. '``' → logprob: -17.1250057220459
    8. '   ' → logprob: -17.2500057220459
    9. ']' → logprob: -19.0000057220459
    10. 'if' → logprob: -19.6250057220459

Token 1649: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07283185422420502
    2. ' i' → logprob: -2.697831869125366
    3. 'x' → logprob: -6.947831630706787
    4. 'j' → logprob: -7.447831630706787
    5. 'val' → logprob: -7.947831630706787
    6. 'v' → logprob: -8.822832107543945
    7. 'k' → logprob: -9.072832107543945
    8. 'idx' → logprob: -9.322832107543945
    9. ' j' → logprob: -9.447832107543945
    10. ' val' → logprob: -9.572832107543945

Token 1650: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38726606965065
    2. 'in' → logprob: -1.1372660398483276
    3. ',' → logprob: -8.887266159057617
    4. '   ' → logprob: -9.137266159057617
    5. 'range' → logprob: -10.262266159057617
    6. '(' → logprob: -10.637266159057617
    7. ' ' → logprob: -10.762266159057617
    8. '```' → logprob: -11.012266159057617
    9. '_' → logprob: -11.387266159057617
    10. '[' → logprob: -11.637266159057617

Token 1651: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003608386032283306
    2. ' range' → logprob: -5.628608226776123
    3. '(range' → logprob: -12.753608703613281
    4. 'm' → logprob: -13.503608703613281
    5. 're' → logprob: -13.628608703613281
    6. 'in' → logprob: -14.628608703613281
    7. 'r' → logprob: -14.628608703613281
    8. 'ra' → logprob: -15.128608703613281
    9. 'start' → logprob: -15.378608703613281
    10. '[' → logprob: -15.503608703613281

Token 1652: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08594351261854172
    2. '(m' → logprob: -3.2109434604644775
    3. 'range' → logprob: -4.085943698883057
    4. 'N' → logprob: -4.210943698883057
    5. '(N' → logprob: -4.710943698883057
    6. 'start' → logprob: -7.585943698883057
    7. '(' → logprob: -7.960943698883057
    8. '1' → logprob: -8.960943222045898
    9. '(range' → logprob: -9.585943222045898
    10. '0' → logprob: -9.710943222045898

Token 1653: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34602341055870056
    2. '):
' → logprob: -1.721023440361023
    3. '):' → logprob: -2.7210233211517334
    4. '-' → logprob: -3.9710233211517334
    5. '   ' → logprob: -3.9710233211517334
    6. ' -' → logprob: -6.3460235595703125
    7. '       ' → logprob: -6.7210235595703125
    8. ' ,' → logprob: -6.7210235595703125
    9. ',N' → logprob: -6.7210235595703125
    10. '```' → logprob: -6.8460235595703125

Token 1654: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.146429223008454e-05
    2. ' N' → logprob: -9.75006103515625
    3. '   ' → logprob: -13.25006103515625
    4. '0' → logprob: -14.75006103515625
    5. '       ' → logprob: -15.50006103515625
    6. '-' → logprob: -15.62506103515625
    7. '  ' → logprob: -16.12506103515625
    8. ' ' → logprob: -16.25006103515625
    9. '
' → logprob: -16.50006103515625
    10. ' -' → logprob: -16.87506103515625

Token 1655: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3165194094181061
    2. '):
' → logprob: -1.3165193796157837
    3. ':' → logprob: -5.941519260406494
    4. '   ' → logprob: -8.191519737243652
    5. ')' → logprob: -8.566519737243652
    6. ':
' → logprob: -9.816519737243652
    7. '```' → logprob: -10.691519737243652
    8. '):
' → logprob: -11.441519737243652
    9. ']:' → logprob: -11.566519737243652
    10. ',' → logprob: -12.191519737243652

Token 1656: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056684575974941254
    2. '```' → logprob: -2.9316844940185547
    3. '   ' → logprob: -6.681684494018555
    4. ' if' → logprob: -8.806684494018555
    5. '<|end|>' → logprob: -8.806684494018555
    6. '[' → logprob: -9.431684494018555
    7. '``' → logprob: -10.306684494018555
    8. 'if' → logprob: -10.931684494018555
    9. '        ' → logprob: -11.431684494018555
    10. '{
' → logprob: -11.431684494018555

Token 1657: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.035720400512218475
    2. '   ' → logprob: -4.160720348358154
    3. 'start' → logprob: -4.660720348358154
    4. 'val' → logprob: -5.785720348358154
    5. 'temp' → logprob: -6.035720348358154
    6. '       ' → logprob: -6.285720348358154
    7. '```' → logprob: -7.535720348358154
    8. 'for' → logprob: -7.660720348358154
    9. 'ans' → logprob: -7.785720348358154
    10. ' if' → logprob: -8.160720825195312

Token 1658: ' beam' (ID: 36650)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2661426067352295
    2. 'end' → logprob: -1.5161426067352295
    3. ' start' → logprob: -5.391142845153809
    4. 'data' → logprob: -5.891142845153809
    5. 'ans' → logprob: -5.891142845153809
    6. 'beam' → logprob: -6.391142845153809
    7. ' end' → logprob: -6.891142845153809
    8. 'cum' → logprob: -7.141142845153809
    9. '   ' → logprob: -8.641142845153809
    10. ' data' → logprob: -10.141142845153809

Token 1659: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.228561349213123e-05
    2. '```' → logprob: -10.625052452087402
    3. '][' → logprob: -11.000052452087402
    4. '[' → logprob: -12.250052452087402
    5. '``' → logprob: -12.750052452087402
    6. ')[' → logprob: -14.250052452087402
    7. ' [' → logprob: -14.250052452087402
    8. '`' → logprob: -14.375052452087402
    9. '   ' → logprob: -14.625052452087402
    10. 'i' → logprob: -14.625052452087402

Token 1660: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6332036852836609
    2. '[' → logprob: -0.7582036852836609
    3. '0' → logprob: -8.633203506469727
    4. '```' → logprob: -9.133203506469727
    5. ')[' → logprob: -9.383203506469727
    6. '>[' → logprob: -10.133203506469727
    7. '   ' → logprob: -10.383203506469727
    8. ']' → logprob: -10.633203506469727
    9. ''[' → logprob: -10.883203506469727
    10. '[i' → logprob: -11.383203506469727

Token 1661: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3869369328022003
    2. '1' → logprob: -1.136936902999878
    3. '[' → logprob: -10.386937141418457
    4. '2' → logprob: -11.886937141418457
    5. '```' → logprob: -12.136937141418457
    6. '...' → logprob: -12.511937141418457
    7. '][' → logprob: -12.511937141418457
    8. ' ' → logprob: -12.636937141418457
    9. '-' → logprob: -12.886937141418457
    10. '   ' → logprob: -13.511937141418457

Token 1662: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003976054955273867
    2. '[' → logprob: -5.628975868225098
    3. ']' → logprob: -8.878975868225098
    4. '   ' → logprob: -9.628975868225098
    5. '[i' → logprob: -10.628975868225098
    6. '```' → logprob: -10.628975868225098
    7. ']][' → logprob: -11.253975868225098
    8. '       ' → logprob: -11.253975868225098
    9. ' ][' → logprob: -11.378975868225098
    10. '()][' → logprob: -11.378975868225098

Token 1663: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1281309872865677
    2. '-' → logprob: -2.6281309127807617
    3. '>' → logprob: -4.628130912780762
    4. '<' → logprob: -4.628130912780762
    5. ' <' → logprob: -5.003130912780762
    6. ' -' → logprob: -5.128130912780762
    7. '```' → logprob: -5.378130912780762
    8. '][' → logprob: -5.503130912780762
    9. '   ' → logprob: -6.503130912780762
    10. '==' → logprob: -6.628130912780762

Token 1664: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0002371521550230682
    2. ' beam' → logprob: -8.375237464904785
    3. '1' → logprob: -13.125237464904785
    4. '0' → logprob: -13.375237464904785
    5. 'i' → logprob: -13.750237464904785
    6. '```' → logprob: -14.250237464904785
    7. '   ' → logprob: -14.750237464904785
    8. ' ' → logprob: -14.875237464904785
    9. 'be' → logprob: -16.25023651123047
    10. '[' → logprob: -16.50023651123047

Token 1665: '[i' (ID: 1768)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.06363039463758469
    2. '[i' → logprob: -3.3136303424835205
    3. '[' → logprob: -3.8136303424835205
    4. '1' → logprob: -5.9386305809021
    5. ' beam' → logprob: -8.188630104064941
    6. 'i' → logprob: -8.688630104064941
    7. '```' → logprob: -9.688630104064941
    8. '[
' → logprob: -10.938630104064941
    9. '``' → logprob: -11.938630104064941
    10. '(i' → logprob: -12.438630104064941

Token 1666: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17394167184829712
    2. '][' → logprob: -1.9239416122436523
    3. '1' → logprob: -4.298941612243652
    4. '```' → logprob: -11.298941612243652
    5. ']' → logprob: -11.548941612243652
    6. '>[' → logprob: -11.923941612243652
    7. ')[' → logprob: -12.423941612243652
    8. ' [' → logprob: -14.048941612243652
    9. '-' → logprob: -14.173941612243652
    10. ''][' → logprob: -14.298941612243652

Token 1667: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. 'i' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.750000953674316
    4. 'beam' → logprob: -16.875
    5. '```' → logprob: -16.875
    6. '[' → logprob: -17.125
    7. '<|end|>' → logprob: -17.375
    8. '0' → logprob: -17.375
    9. '<|end|>' → logprob: -17.875
    10. '   ' → logprob: -18.0

Token 1668: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007094219792634249
    2. '>' → logprob: -6.132094383239746
    3. ' >' → logprob: -6.382094383239746
    4. ']>' → logprob: -7.257094383239746
    5. ']==' → logprob: -7.382094383239746
    6. ' <=' → logprob: -7.507094383239746
    7. ' ]' → logprob: -8.007094383239746
    8. ' <' → logprob: -8.632094383239746
    9. ' ==' → logprob: -9.007094383239746
    10. ']<=' → logprob: -9.132094383239746

Token 1669: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6416372060775757
    2. '<=' → logprob: -1.0166372060775757
    3. '>' → logprob: -2.5166373252868652
    4. ' >' → logprob: -3.7666373252868652
    5. ' ==' → logprob: -5.891637325286865
    6. '==' → logprob: -6.016637325286865
    7. '<' → logprob: -7.016637325286865
    8. ' <' → logprob: -7.141637325286865
    9. '```' → logprob: -7.766637325286865
    10. '>=' → logprob: -8.141636848449707

Token 1670: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804516792297363
    2. ' ' → logprob: -3.2880451679229736
    3. '10' → logprob: -13.163044929504395
    4. '   ' → logprob: -14.288044929504395
    5. '1' → logprob: -15.038044929504395
    6. ' -' → logprob: -15.788044929504395
    7. 'm' → logprob: -15.913044929504395
    8. '  ' → logprob: -16.10054588317871
    9. '    ' → logprob: -17.03804588317871
    10. ' ' → logprob: -17.22554588317871

Token 1671: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.750045776367188
    4. '10' → logprob: -16.875045776367188
    5. '```' → logprob: -17.125045776367188
    6. '
' → logprob: -17.312545776367188
    7. '-' → logprob: -17.500045776367188
    8. '1' → logprob: -18.187545776367188
    9. '  ' → logprob: -18.562545776367188
    10. ' ' → logprob: -19.562545776367188

Token 1672: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14830660820007324
    2. ':' → logprob: -2.2733066082000732
    3. ' and' → logprob: -3.6483066082000732
    4. '       ' → logprob: -4.898306846618652
    5. '   ' → logprob: -7.398306846618652
    6. '           ' → logprob: -7.648306846618652
    7. 'and' → logprob: -9.648306846618652
    8. '):
' → logprob: -9.773306846618652
    9. '```' → logprob: -9.898306846618652
    10. ' or' → logprob: -10.648306846618652

Token 1673: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11586352437734604
    2. '           ' → logprob: -3.115863561630249
    3. '```' → logprob: -3.490863561630249
    4. ':
' → logprob: -3.990863561630249
    5. ':' → logprob: -4.61586332321167
    6. '   ' → logprob: -5.61586332321167
    7. ' and' → logprob: -6.74086332321167
    8. '``' → logprob: -7.86586332321167
    9. '[' → logprob: -8.365863800048828
    10. ',' → logprob: -8.490863800048828

Token 1674: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8512226939201355
    2. ' ans' → logprob: -1.3512227535247803
    3. 'print' → logprob: -2.2262227535247803
    4. 'ans' → logprob: -2.8512227535247803
    5. '       ' → logprob: -3.3512227535247803
    6. ' if' → logprob: -3.4762227535247803
    7. '   ' → logprob: -3.7262227535247803
    8. ' print' → logprob: -3.7262227535247803
    9. 'if' (adapté à ' if') → logprob: -4.351222515106201
    10. 'break' → logprob: -5.226222515106201

Token 1675: ' start' (ID: 1604)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.4511546194553375
    2. 'ans' → logprob: -1.7011545896530151
    3. ' beam' → logprob: -2.2011547088623047
    4. ' ans' → logprob: -2.8261547088623047
    5. 'B' → logprob: -5.326154708862305
    6. '(' → logprob: -6.576154708862305
    7. '(ans' → logprob: -7.076154708862305
    8. '[' → logprob: -7.451154708862305
    9. '1' → logprob: -7.576154708862305
    10. 'cum' → logprob: -7.701154708862305

Token 1676: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.01172610092908144
    2. '[i' → logprob: -4.761725902557373
    3. 'arr' → logprob: -5.886725902557373
    4. '[' → logprob: -8.261726379394531
    5. '```' → logprob: -10.761726379394531
    6. '[arr' → logprob: -11.136726379394531
    7. '   ' → logprob: -12.011726379394531
    8. 'i' → logprob: -12.386726379394531
    9. '_array' → logprob: -12.386726379394531
    10. '	arr' → logprob: -12.511726379394531

Token 1677: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.842555426876061e-06
    2. 'i' → logprob: -12.375004768371582
    3. '==' → logprob: -15.250004768371582
    4. '[' → logprob: -15.750004768371582
    5. '```' → logprob: -15.750004768371582
    6. ' ==' → logprob: -18.3750057220459
    7. '(i' → logprob: -18.5000057220459
    8. '[j' → logprob: -18.6250057220459
    9. ' i' → logprob: -18.7500057220459
    10. ' [' → logprob: -19.0000057220459

Token 1678: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.9555866122245789
    2. ' ==' → logprob: -1.2055866718292236
    3. ']' → logprob: -2.0805866718292236
    4. '==' → logprob: -2.5805866718292236
    5. '!=' → logprob: -2.8305866718292236
    6. '==-' → logprob: -3.9555866718292236
    7. ']==' → logprob: -4.2055864334106445
    8. '!=-' → logprob: -4.3305864334106445
    9. ']!=' → logprob: -4.8305864334106445
    10. '[' → logprob: -7.9555864334106445

Token 1679: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.19789834320545197
    2. '!=' → logprob: -2.0728983879089355
    3. ' ==' → logprob: -3.3228983879089355
    4. ' !=' → logprob: -4.5728983879089355
    5. '==-' → logprob: -5.4478983879089355
    6. '!=-' → logprob: -6.3228983879089355
    7. ']==' → logprob: -7.9478983879089355
    8. ']' → logprob: -8.572897911071777
    9. '```' → logprob: -8.572897911071777
    10. ' is' → logprob: -8.947897911071777

Token 1680: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11947263777256012
    2. 'i' → logprob: -2.2444727420806885
    3. '0' → logprob: -6.244472503662109
    4. ' -' → logprob: -6.244472503662109
    5. '-i' → logprob: -6.369472503662109
    6. ' i' → logprob: -7.744472503662109
    7. 'm' → logprob: -7.744472503662109
    8. '-m' → logprob: -9.86947250366211
    9. '   ' → logprob: -10.24447250366211
    10. ' ' → logprob: -10.61947250366211

Token 1681: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03610888868570328
    2. '-' → logprob: -3.41110897064209
    3. 'i' → logprob: -6.03610897064209
    4. ' -' → logprob: -10.66110897064209
    5. 'm' → logprob: -10.91110897064209
    6. '-i' → logprob: -11.03610897064209
    7. '```' → logprob: -12.66110897064209
    8. '(i' → logprob: -13.16110897064209
    9. '2' → logprob: -14.16110897064209
    10. '(-' → logprob: -14.78610897064209

Token 1682: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17944855988025665
    2. ' ==' → logprob: -2.9294486045837402
    3. ' and' → logprob: -3.3044486045837402
    4. '==' → logprob: -3.9294486045837402
    5. ':' → logprob: -4.05444860458374
    6. '               ' → logprob: -4.17944860458374
    7. '           ' → logprob: -4.80444860458374
    8. ' or' → logprob: -5.42944860458374
    9. '=' → logprob: -5.80444860458374
    10. ' =' → logprob: -6.42944860458374

Token 1683: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2737646996974945
    2. '               ' → logprob: -1.773764729499817
    3. '       ' → logprob: -3.8987646102905273
    4. '[' → logprob: -4.273764610290527
    5. '           ' → logprob: -4.523764610290527
    6. '   ' → logprob: -5.148764610290527
    7. ':
' → logprob: -5.523764610290527
    8. '[
' → logprob: -6.023764610290527
    9. '                               ' → logprob: -6.148764610290527
    10. '``' → logprob: -6.398764610290527

Token 1684: ' temp' (ID: 5484)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4447929263114929
    2. ' start' → logprob: -1.0697929859161377
    3. '```' → logprob: -4.944792747497559
    4. 'continue' → logprob: -5.819792747497559
    5. ' continue' → logprob: -6.069792747497559
    6. '           ' → logprob: -6.319792747497559
    7. '               ' → logprob: -6.944792747497559
    8. 'heap' → logprob: -8.819792747497559
    9. '                   ' → logprob: -8.944792747497559
    10. '       ' → logprob: -9.069792747497559

Token 1685: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2524009943008423
    2. '=' → logprob: -1.5024009943008423
    3. ' +=' → logprob: -8.752401351928711
    4. '   ' → logprob: -9.627401351928711
    5. '+=' → logprob: -9.752401351928711
    6. '           ' → logprob: -10.252401351928711
    7. '```' → logprob: -10.627401351928711
    8. ')' → logprob: -11.127401351928711
    9. '               ' → logprob: -11.127401351928711
    10. '                   ' → logprob: -11.127401351928711

Token 1686: ' Seg' (ID: 13616)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.34016892313957214
    2. '0' → logprob: -2.7151689529418945
    3. 'data' → logprob: -2.7151689529418945
    4. 'abs' → logprob: -3.0901689529418945
    5. ' beam' → logprob: -3.2151689529418945
    6. 'S' → logprob: -3.3401689529418945
    7. ' data' → logprob: -4.7151689529418945
    8. 'ans' → logprob: -5.2151689529418945
    9. '-' → logprob: -5.4651689529418945
    10. ' S' → logprob: -5.8401689529418945

Token 1687: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.2664456789934775e-06
    2. 'tree' → logprob: -13.750000953674316
    3. ' Tree' → logprob: -16.750001907348633
    4. '_tree' → logprob: -17.125001907348633
    5. '[' → logprob: -17.625001907348633
    6. '```' → logprob: -17.625001907348633
    7. '	Tree' → logprob: -17.875001907348633
    8. 'Tre' → logprob: -17.875001907348633
    9. '<Tree' → logprob: -18.375001907348633
    10. 'TREE' → logprob: -18.625001907348633

Token 1688: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.024981627240777016
    2. 'query' → logprob: -3.774981737136841
    3. '1' → logprob: -6.649981498718262
    4. '2' → logprob: -7.899981498718262
    5. '```' → logprob: -10.399981498718262
    6. '_tree' → logprob: -11.399981498718262
    7. 'i' → logprob: -11.649981498718262
    8. 'Query' → logprob: -11.774981498718262
    9. 'Tree' → logprob: -12.649981498718262
    10. '.query' → logprob: -13.274981498718262

Token 1689: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.875001907348633
    3. '```' → logprob: -15.000001907348633
    4. 'tree' → logprob: -15.375001907348633
    5. '(
' → logprob: -16.375001907348633
    6. '	tree' → logprob: -17.750001907348633
    7. '(heap' → logprob: -18.125001907348633
    8. '(t' → logprob: -18.125001907348633
    9. '(Tree' → logprob: -18.875001907348633
    10. '(trace' → logprob: -19.000001907348633

Token 1690: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011826365254819393
    2. ',' → logprob: -5.511826515197754
    3. '2' → logprob: -5.511826515197754
    4. 'tree' → logprob: -6.011826515197754
    5. '```' → logprob: -6.761826515197754
    6. '_,' → logprob: -11.136826515197754
    7. '``' → logprob: -11.386826515197754
    8. '(tree' → logprob: -11.386826515197754
    9. 'i' → logprob: -12.011826515197754
    10. 'data' → logprob: -12.261826515197754

Token 1691: ',' (ID: 11)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.003407516749575734
    2. ',' → logprob: -6.2534074783325195
    3. 'tree' → logprob: -6.7534074783325195
    4. '(' → logprob: -8.12840747833252
    5. '```' → logprob: -11.75340747833252
    6. '	tree' → logprob: -12.87840747833252
    7. ' tree' → logprob: -13.25340747833252
    8. '/tree' → logprob: -13.87840747833252
    9. '(
' → logprob: -14.25340747833252
    10. '[' → logprob: -14.75340747833252

Token 1692: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.023245712742209435
    2. ' num' → logprob: -3.7732458114624023
    3. 'start' → logprob: -16.148244857788086
    4. 'number' → logprob: -16.898244857788086
    5. '1' → logprob: -17.023244857788086
    6. '```' → logprob: -17.273244857788086
    7. 'tree' → logprob: -17.773244857788086
    8. ' ' → logprob: -17.898244857788086
    9. '[num' → logprob: -17.898244857788086
    10. '(num' → logprob: -18.148244857788086

Token 1693: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.49255597591400146
    2. ',' → logprob: -1.1175559759140015
    3. '1' → logprob: -3.492556095123291
    4. 'i' → logprob: -4.242556095123291
    5. '```' → logprob: -4.242556095123291
    6. ',i' → logprob: -6.742556095123291
    7. '_,' → logprob: -7.117556095123291
    8. '``' → logprob: -8.117555618286133
    9. ')' → logprob: -9.117555618286133
    10. '   ' → logprob: -9.992555618286133

Token 1694: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12718091905117035
    2. '(tree' → logprob: -2.127180814743042
    3. '```' → logprob: -9.002181053161621
    4. '(' → logprob: -9.252181053161621
    5. ',
' → logprob: -11.252181053161621
    6. ' ,' → logprob: -11.752181053161621
    7. ')' → logprob: -12.752181053161621
    8. 'tree' → logprob: -12.877181053161621
    9. '_,' → logprob: -13.877181053161621
    10. '/tree' → logprob: -14.002181053161621

Token 1695: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.16022992134094238
    2. ' seg' → logprob: -1.9102299213409424
    3. '(seg' → logprob: -12.410229682922363
    4. 'ide' → logprob: -14.285229682922363
    5. '```' → logprob: -14.410229682922363
    6. '0' → logprob: -15.285229682922363
    7. 'sec' → logprob: -16.66023063659668
    8. 'segment' → logprob: -17.41023063659668
    9. 'Seg' → logprob: -17.78523063659668
    10. 'start' → logprob: -17.91023063659668

Token 1696: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -2.975612187583465e-05
    2. ',' → logprob: -11.875029563903809
    3. 'function' → logprob: -12.250029563903809
    4. ' func' → logprob: -12.875029563903809
    5. '_func' → logprob: -13.125029563903809
    6. 'seg' → logprob: -13.250029563903809
    7. 'fun' → logprob: -13.375029563903809
    8. 'def' → logprob: -13.375029563903809
    9. '```' → logprob: -13.750029563903809
    10. '(func' → logprob: -14.125029563903809

Token 1697: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ' ,' → logprob: -13.750001907348633
    3. '```' → logprob: -14.500001907348633
    4. ',num' → logprob: -16.125001907348633
    5. ',start' → logprob: -17.375001907348633
    6. 'Seg' → logprob: -17.625001907348633
    7. ',user' → logprob: -17.875001907348633
    8. '1' → logprob: -17.875001907348633
    9. 'import' → logprob: -17.875001907348633
    10. '       ' → logprob: -18.000001907348633

Token 1698: ' ide' (ID: 2750)
  Prédit: ' seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seg' → logprob: -0.534042239189148
    2. 'seg' → logprob: -1.659042239189148
    3. 'ide' → logprob: -2.1590423583984375
    4. 'num' → logprob: -2.4090423583984375
    5. ' ide' → logprob: -4.2840423583984375
    6. ' num' → logprob: -5.5340423583984375
    7. '0' → logprob: -8.534042358398438
    8. '```' → logprob: -9.534042358398438
    9. '(seg' → logprob: -10.909042358398438
    10. '2' → logprob: -11.159042358398438

Token 1699: '_ele' (ID: 154942)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6500314474105835
    2. 'ide' → logprob: -1.1500314474105835
    3. '_ele' → logprob: -2.025031566619873
    4. 'ele' → logprob: -4.275031566619873
    5. 'ile' → logprob: -5.400031566619873
    6. '_le' → logprob: -5.775031566619873
    7. '(' → logprob: -6.150031566619873
    8. '_' → logprob: -6.650031566619873
    9. '_num' → logprob: -7.775031566619873
    10. 'or' → logprob: -7.775031566619873

Token 1700: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6656825866666622e-05
    2. '```' → logprob: -11.12502670288086
    3. ' ,' → logprob: -12.00002670288086
    4. '           ' → logprob: -13.50002670288086
    5. '(tree' → logprob: -14.12502670288086
    6. ',start' → logprob: -14.75002670288086
    7. ',num' → logprob: -15.12502670288086
    8. '   ' → logprob: -15.25002670288086
    9. '       ' → logprob: -15.37502670288086
    10. '<|end|>' → logprob: -15.37502670288086

Token 1701: ' i' (ID: 575)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1754511147737503
    2. 'i' → logprob: -2.1754510402679443
    3. '0' → logprob: -3.8004510402679443
    4. 'num' → logprob: -4.300451278686523
    5. 'start' → logprob: -4.550451278686523
    6. 'beam' → logprob: -8.175451278686523
    7. ' m' → logprob: -8.300451278686523
    8. ' i' → logprob: -8.550451278686523
    9. '   ' → logprob: -10.300451278686523
    10. ' start' → logprob: -11.175451278686523

Token 1702: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002607048721984029
    2. '+' → logprob: -6.6276068687438965
    3. ',i' → logprob: -7.3776068687438965
    4. '```' → logprob: -8.502607345581055
    5. ' ,' → logprob: -8.752607345581055
    6. '   ' → logprob: -9.127607345581055
    7. ' +' → logprob: -10.002607345581055
    8. '           ' → logprob: -10.502607345581055
    9. ',
' → logprob: -10.627607345581055
    10. '       ' → logprob: -10.627607345581055

Token 1703: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.17432276904582977
    2. ' N' → logprob: -2.7993228435516357
    3. 'num' → logprob: -2.7993228435516357
    4. 'i' → logprob: -3.5493228435516357
    5. ' num' → logprob: -5.299322605133057
    6. ' i' → logprob: -5.549322605133057
    7. 'm' → logprob: -7.799322605133057
    8. 'n' → logprob: -9.424323081970215
    9. ' m' → logprob: -10.424323081970215
    10. '```' → logprob: -11.174323081970215

Token 1704: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0206151120364666
    2. ')
' → logprob: -3.8956151008605957
    3. ')+' → logprob: -10.645615577697754
    4. '```' → logprob: -11.645615577697754
    5. '           ' → logprob: -11.770615577697754
    6. ')
' → logprob: -11.895615577697754
    7. ',' → logprob: -12.395615577697754
    8. '-' → logprob: -12.770615577697754
    9. '   ' → logprob: -12.895615577697754
    10. ')#' → logprob: -12.895615577697754

Token 1705: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5809523463249207
    2. '<|end|>' → logprob: -2.4559524059295654
    3. '       ' → logprob: -2.7059524059295654
    4. ')' → logprob: -2.7059524059295654
    5. '               ' → logprob: -2.8309524059295654
    6. '+' → logprob: -3.2059524059295654
    7. '                   ' → logprob: -3.7059524059295654
    8. '          ' → logprob: -3.8309524059295654
    9. ' +' → logprob: -3.9559524059295654
    10. ',' → logprob: -4.205952167510986

Token 1706: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.5048247575759888
    2. '                   ' → logprob: -1.7548247575759888
    3. '           ' → logprob: -2.504824638366699
    4. '```' → logprob: -2.629824638366699
    5. '               ' → logprob: -3.379824638366699
    6. ' temp' → logprob: -4.004824638366699
    7. '``' → logprob: -6.004824638366699
    8. ')' → logprob: -6.004824638366699
    9. '                               ' → logprob: -6.379824638366699
    10. ' if' → logprob: -6.629824638366699

Token 1707: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1752341240644455
    2. ' +=' → logprob: -2.300234079360962
    3. '=' → logprob: -3.300234079360962
    4. ' -=' → logprob: -4.925234317779541
    5. '-=' → logprob: -4.925234317779541
    6. '<=' → logprob: -5.175234317779541
    7. ' =' → logprob: -6.175234317779541
    8. '```' → logprob: -8.050233840942383
    9. '   ' → logprob: -8.175233840942383
    10. '           ' → logprob: -8.425233840942383

Token 1708: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0010631787590682507
    2. ' beam' → logprob: -6.876063346862793
    3. 'be' → logprob: -11.501063346862793
    4. '(' → logprob: -11.751063346862793
    5. '-' → logprob: -12.751063346862793
    6. '0' → logprob: -13.251063346862793
    7. 'abs' → logprob: -13.376063346862793
    8. '-be' → logprob: -13.501063346862793
    9. '   ' → logprob: -13.751063346862793
    10. ' ' → logprob: -14.376063346862793

Token 1709: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2603901015827432e-05
    2. '[' → logprob: -11.625022888183594
    3. 'i' → logprob: -11.625022888183594
    4. '```' → logprob: -12.750022888183594
    5. '(i' → logprob: -14.375022888183594
    6. '`' → logprob: -14.625022888183594
    7. '
' → logprob: -16.125022888183594
    8. '{i' → logprob: -16.125022888183594
    9. '[
' → logprob: -16.125022888183594
    10. '   ' → logprob: -16.125022888183594

Token 1710: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03987574204802513
    2. '[' → logprob: -3.4148757457733154
    3. '[i' → logprob: -5.164875507354736
    4. '>[' → logprob: -8.539875984191895
    5. ')[' → logprob: -9.289875984191895
    6. '```' → logprob: -10.039875984191895
    7. '`' → logprob: -10.289875984191895
    8. ' ][' → logprob: -10.914875984191895
    9. '}[' → logprob: -11.039875984191895
    10. ''s' → logprob: -11.289875984191895

Token 1711: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5786490440368652
    2. 'i' → logprob: -0.8286490440368652
    3. '1' → logprob: -6.703649044036865
    4. '[i' → logprob: -6.703649044036865
    5. ' i' → logprob: -9.328649520874023
    6. '[' → logprob: -9.578649520874023
    7. '```' → logprob: -10.703649520874023
    8. '(i' → logprob: -10.953649520874023
    9. ' ' → logprob: -11.078649520874023
    10. '
' → logprob: -11.953649520874023

Token 1712: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.027110688388347626
    2. '-' → logprob: -3.6521105766296387
    3. '[' → logprob: -7.777110576629639
    4. ',' → logprob: -9.277111053466797
    5. ')' → logprob: -9.652111053466797
    6. '<|end|>' → logprob: -9.902111053466797
    7. '```' → logprob: -9.902111053466797
    8. '`' → logprob: -10.277111053466797
    9. ' ' → logprob: -10.402111053466797
    10. '   ' → logprob: -11.277111053466797

Token 1713: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020558586344122887
    2. '-' → logprob: -3.8955585956573486
    3. '```' → logprob: -11.89555835723877
    4. ' ' → logprob: -12.14555835723877
    5. ' ' → logprob: -13.77055835723877
    6. '[' → logprob: -13.89555835723877
    7. '<|end|>' → logprob: -14.27055835723877
    8. ',' → logprob: -14.27055835723877
    9. '   ' → logprob: -15.02055835723877
    10. '           ' → logprob: -15.77055835723877

Token 1714: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.001035787514410913
    2. ' beam' → logprob: -6.876035690307617
    3. '   ' → logprob: -14.126035690307617
    4. 'be' → logprob: -14.126035690307617
    5. '```' → logprob: -14.251035690307617
    6. 'beat' → logprob: -15.876035690307617
    7. ' ' → logprob: -16.126035690307617
    8. 'i' → logprob: -16.126035690307617
    9. '       ' → logprob: -16.501035690307617
    10. 'bee' → logprob: -16.626035690307617

Token 1715: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00023679454170633107
    2. 'i' → logprob: -9.000236511230469
    3. '[' → logprob: -9.125236511230469
    4. '```' → logprob: -13.375236511230469
    5. '(i' → logprob: -13.500236511230469
    6. '1' → logprob: -14.750236511230469
    7. '{i' → logprob: -15.000236511230469
    8. '[
' → logprob: -15.125236511230469
    9. '``' → logprob: -15.625236511230469
    10. '   ' → logprob: -16.12523651123047

Token 1716: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04206651449203491
    2. '[' → logprob: -3.2920665740966797
    3. '[i' → logprob: -5.66706657409668
    4. '1' → logprob: -7.66706657409668
    5. '-' → logprob: -10.29206657409668
    6. ']' → logprob: -11.54206657409668
    7. '>[' → logprob: -11.79206657409668
    8. '"][' → logprob: -11.91706657409668
    9. ''][' → logprob: -12.16706657409668
    10. 'i' → logprob: -12.29206657409668

Token 1717: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001487140398239717
    2. 'i' → logprob: -8.87514877319336
    3. '[i' → logprob: -12.25014877319336
    4. '[' → logprob: -13.12514877319336
    5. ' ' → logprob: -14.25014877319336
    6. '   ' → logprob: -14.75014877319336
    7. '<|end|>' → logprob: -15.00014877319336
    8. ' i' → logprob: -15.37514877319336
    9. '```' → logprob: -15.62514877319336
    10. '<|end|>' → logprob: -15.75014877319336

Token 1718: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2286115288734436
    2. ')' → logprob: -2.103611469268799
    3. '
' → logprob: -3.353611469268799
    4. '```' → logprob: -4.103611469268799
    5. '           ' → logprob: -4.603611469268799
    6. '               ' → logprob: -4.853611469268799
    7. '       ' → logprob: -4.978611469268799
    8. '<|end|>' → logprob: -6.103611469268799
    9. ']
' → logprob: -6.853611469268799
    10. '   ' → logprob: -7.103611469268799

Token 1719: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05906121805310249
    2. '```' → logprob: -3.434061288833618
    3. '                   ' → logprob: -4.934061050415039
    4. '           ' → logprob: -5.059061050415039
    5. '
' → logprob: -5.059061050415039
    6. '       ' → logprob: -6.434061050415039
    7. '<|end|>' → logprob: -6.934061050415039
    8. '                               ' → logprob: -7.559061050415039
    9. '                ' → logprob: -7.684061050415039
    10. '              ' → logprob: -8.059061050415039

Token 1720: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4265960156917572
    2. '               ' → logprob: -1.6765960454940796
    3. '                   ' → logprob: -2.42659592628479
    4. ' if' → logprob: -3.42659592628479
    5. '           ' → logprob: -4.051596164703369
    6. '```' → logprob: -4.801596164703369
    7. '
' → logprob: -6.176596164703369
    8. 'temp' → logprob: -6.301596164703369
    9. '                               ' → logprob: -6.426596164703369
    10. '       ' → logprob: -6.551596164703369

Token 1721: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0361211858689785
    2. ' temp' → logprob: -3.411121129989624
    3. 'ans' → logprob: -6.411121368408203
    4. 'beam' → logprob: -8.411121368408203
    5. ' ans' → logprob: -8.661121368408203
    6. 'B' → logprob: -9.036121368408203
    7. 'True' → logprob: -9.786121368408203
    8. '0' → logprob: -9.911121368408203
    9. '(temp' → logprob: -10.036121368408203
    10. 'test' → logprob: -10.411121368408203

Token 1722: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10027783364057541
    2. '<=' → logprob: -2.350277900695801
    3. '```' → logprob: -9.9752779006958
    4. '=' → logprob: -12.3502779006958
    5. '   ' → logprob: -12.6002779006958
    6. '[' → logprob: -12.7252779006958
    7. ' <' → logprob: -12.7252779006958
    8. ')' → logprob: -13.2252779006958
    9. '>' → logprob: -13.4752779006958
    10. ' ' → logprob: -13.4752779006958

Token 1723: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028049908578395844
    2. ' ' → logprob: -5.877804756164551
    3. '   ' → logprob: -16.502805709838867
    4. '```' → logprob: -17.502805709838867
    5. '           ' → logprob: -17.627805709838867
    6. '               ' → logprob: -17.752805709838867
    7. '       ' → logprob: -17.877805709838867
    8. '                   ' → logprob: -18.377805709838867
    9. '  ' → logprob: -18.627805709838867
    10. 'True' → logprob: -18.877805709838867

Token 1724: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.125003814697266
    4. '```' → logprob: -20.375003814697266
    5. '
' → logprob: -20.500003814697266
    6. '       ' → logprob: -21.125003814697266
    7. '           ' → logprob: -21.375003814697266
    8. '  ' → logprob: -21.375003814697266
    9. ' ' → logprob: -21.375003814697266
    10. '۰' → logprob: -21.750003814697266

Token 1725: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20893873274326324
    2. '                   ' → logprob: -2.0839388370513916
    3. ':' → logprob: -2.8339388370513916
    4. '               ' → logprob: -5.4589385986328125
    5. ' and' → logprob: -7.9589385986328125
    6. '```' → logprob: -8.458938598632812
    7. '                       ' → logprob: -8.708938598632812
    8. '           ' → logprob: -9.458938598632812
    9. '                  ' → logprob: -9.708938598632812
    10. '):
' → logprob: -9.833938598632812

Token 1726: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09948796778917313
    2. '```' → logprob: -2.8494880199432373
    3. '               ' → logprob: -3.5994880199432373
    4. '                       ' → logprob: -4.974487781524658
    5. '                               ' → logprob: -7.349487781524658
    6. '                  ' → logprob: -7.724487781524658
    7. '``' → logprob: -8.224488258361816
    8. '                           ' → logprob: -9.224488258361816
    9. ':
' → logprob: -9.224488258361816
    10. '{
' → logprob: -9.349488258361816

Token 1727: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.09712982177734375
    2. '                   ' → logprob: -2.9721298217773438
    3. '```' → logprob: -3.8471298217773438
    4. 't' → logprob: -5.347129821777344
    5. ' temp' → logprob: -5.597129821777344
    6. '               ' → logprob: -5.597129821777344
    7. 'for' → logprob: -5.722129821777344
    8. '                       ' → logprob: -6.222129821777344
    9. 'tmp' → logprob: -6.972129821777344
    10. '``' → logprob: -7.347129821777344

Token 1728: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4360901415348053
    2. ' =' → logprob: -1.686090111732483
    3. '2' → logprob: -1.811090111732483
    4. '   ' → logprob: -6.061089992523193
    5. '       ' → logprob: -7.311089992523193
    6. '+=' → logprob: -7.936089992523193
    7. ' ' → logprob: -8.186090469360352
    8. '```' → logprob: -8.311090469360352
    9. '    ' → logprob: -8.811090469360352
    10. '	' → logprob: -8.936090469360352

Token 1729: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6334348917007446
    2. '=' → logprob: -0.7584348917007446
    3. '                   ' → logprob: -8.133435249328613
    4. '               ' → logprob: -8.883435249328613
    5. ',' → logprob: -9.008435249328613
    6. '```' → logprob: -10.258435249328613
    7. '=
' → logprob: -10.508435249328613
    8. ':' → logprob: -10.508435249328613
    9. '<|end|>' → logprob: -10.508435249328613
    10. '[' → logprob: -10.758435249328613

Token 1730: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.07913333922624588
    2. ' abs' → logprob: -2.5791332721710205
    3. 'beam' → logprob: -8.579133033752441
    4. ' beam' → logprob: -9.954133033752441
    5. '(abs' → logprob: -12.329133033752441
    6. 'ans' → logprob: -13.579133033752441
    7. '.abs' → logprob: -15.329133033752441
    8. '_abs' → logprob: -15.329133033752441
    9. '0' → logprob: -15.579133033752441
    10. 'ab' → logprob: -15.891633033752441

Token 1731: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.048588961362838745
    2. 'temp' → logprob: -3.048588991165161
    3. '(
' → logprob: -14.298588752746582
    4. '[temp' → logprob: -14.798588752746582
    5. ' temp' → logprob: -15.798588752746582
    6. '(' → logprob: -15.923588752746582
    7. '$temp' → logprob: -16.1735897064209
    8. '	temp' → logprob: -16.9235897064209
    9. '_temp' → logprob: -17.4235897064209
    10. '=temp' → logprob: -17.5485897064209

Token 1732: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02069884166121483
    2. '                   ' → logprob: -4.2706990242004395
    3. ')' → logprob: -5.3956990242004395
    4. '```' → logprob: -6.8956990242004395
    5. '               ' → logprob: -7.7706990242004395
    6. '``' → logprob: -8.395698547363281
    7. '):
' → logprob: -8.770698547363281
    8. '                       ' → logprob: -9.895698547363281
    9. '[' → logprob: -10.770698547363281
    10. '           ' → logprob: -10.895698547363281

Token 1733: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.40658873319625854
    2. '```' → logprob: -1.1565887928009033
    3. '``' → logprob: -5.031588554382324
    4. '                       ' → logprob: -5.281588554382324
    5. 'if' → logprob: -5.656588554382324
    6. '               ' → logprob: -6.531588554382324
    7. '                               ' → logprob: -7.656588554382324
    8. '                  ' → logprob: -8.031588554382324
    9. '<|end|>' → logprob: -8.031588554382324
    10. ' if' → logprob: -8.156588554382324

Token 1734: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.001058890949934721
    2. 'if' → logprob: -7.626059055328369
    3. '```' → logprob: -8.501058578491211
    4. ' B' → logprob: -8.751058578491211
    5. 'for' → logprob: -9.626058578491211
    6. 'beam' → logprob: -10.251058578491211
    7. 'ans' → logprob: -10.501058578491211
    8. '                   ' → logprob: -10.626058578491211
    9. '``' → logprob: -10.876058578491211
    10. ' if' → logprob: -11.751058578491211

Token 1735: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2814139127731323
    2. ' =' → logprob: -1.4064139127731323
    3. ',' → logprob: -8.406414031982422
    4. '```' → logprob: -10.406414031982422
    5. ')' → logprob: -13.281414031982422
    6. '[' → logprob: -13.531414031982422
    7. '=
' → logprob: -13.781414031982422
    8. '=i' → logprob: -13.906414031982422
    9. '*' → logprob: -14.531414031982422
    10. '           ' → logprob: -14.781414031982422

Token 1736: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.018150994554162025
    2. ' beam' → logprob: -4.018150806427002
    3. 'be' → logprob: -14.39315128326416
    4. '```' → logprob: -15.01815128326416
    5. '   ' → logprob: -17.268150329589844
    6. 'heap' → logprob: -17.268150329589844
    7. 'Beam' → logprob: -17.393150329589844
    8. 'bee' → logprob: -17.643150329589844
    9. '`' → logprob: -17.768150329589844
    10. 'ans' → logprob: -17.768150329589844

Token 1737: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1888679839321412e-05
    2. '```' → logprob: -11.000021934509277
    3. 'i' → logprob: -12.375021934509277
    4. '[' → logprob: -14.000021934509277
    5. '``' → logprob: -17.00002098083496
    6. '`' → logprob: -17.25002098083496
    7. '[
' → logprob: -17.37502098083496
    8. '[I' → logprob: -17.37502098083496
    9. '(i' → logprob: -17.87502098083496
    10. '   ' → logprob: -17.87502098083496

Token 1738: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008872798644006252
    2. '[' → logprob: -7.500887393951416
    3. '```' → logprob: -8.500886917114258
    4. '][' → logprob: -9.125886917114258
    5. 'i' → logprob: -11.375886917114258
    6. ')[' → logprob: -12.500886917114258
    7. '[
' → logprob: -13.375886917114258
    8. '>[' → logprob: -13.750886917114258
    9. '   ' → logprob: -13.750886917114258
    10. '[I' → logprob: -14.500886917114258

Token 1739: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005286292172968388
    2. 'i' → logprob: -5.25528621673584
    3. '```' → logprob: -10.50528621673584
    4. '[i' → logprob: -10.88028621673584
    5. '
' → logprob: -13.25528621673584
    6. '[' → logprob: -13.50528621673584
    7. '(i' → logprob: -14.25528621673584
    8. '0' → logprob: -14.63028621673584
    9. '
' → logprob: -14.88028621673584
    10. '`' → logprob: -14.88028621673584

Token 1740: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00574889499694109
    2. '               ' → logprob: -5.880748748779297
    3. '```' → logprob: -6.755748748779297
    4. ')
' → logprob: -7.130748748779297
    5. '           ' → logprob: -8.130748748779297
    6. ')' → logprob: -8.505748748779297
    7. '                       ' → logprob: -9.255748748779297
    8. 'if' → logprob: -9.380748748779297
    9. '):
' → logprob: -9.505748748779297
    10. '                  ' → logprob: -10.005748748779297

Token 1741: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12861956655979156
    2. '```' → logprob: -2.12861967086792
    3. '               ' → logprob: -7.50361967086792
    4. '``' → logprob: -8.003619194030762
    5. '                       ' → logprob: -8.003619194030762
    6. '<|end|>' → logprob: -8.378619194030762
    7. '           ' → logprob: -9.503619194030762
    8. '                  ' → logprob: -10.003619194030762
    9. '       ' → logprob: -10.128619194030762
    10. 'if' → logprob: -11.378619194030762

Token 1742: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.013008450157940388
    2. '                   ' → logprob: -4.8880085945129395
    3. ' if' → logprob: -5.5130085945129395
    4. '```' → logprob: -6.7630085945129395
    5. '                       ' → logprob: -9.013008117675781
    6. '``' → logprob: -10.638008117675781
    7. '               ' → logprob: -11.263008117675781
    8. 'for' → logprob: -11.763008117675781
    9. '                           ' → logprob: -12.138008117675781
    10. '                    ' → logprob: -12.263008117675781

Token 1743: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3868744373321533
    2. ' B' → logprob: -1.1368744373321533
    3. '   ' → logprob: -13.511874198913574
    4. '                   ' → logprob: -14.386874198913574
    5. '    ' → logprob: -14.886874198913574
    6. ' ' → logprob: -15.511874198913574
    7. '	B' → logprob: -15.511874198913574
    8. '               ' → logprob: -15.886874198913574
    9. '```' → logprob: -15.886874198913574
    10. '           ' → logprob: -16.26187515258789

Token 1744: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10029077529907227
    2. '*' → logprob: -2.3502907752990723
    3. '```' → logprob: -9.600290298461914
    4. '   ' → logprob: -12.350290298461914
    5. '[' → logprob: -12.975290298461914
    6. '           ' → logprob: -13.350290298461914
    7. '               ' → logprob: -13.475290298461914
    8. '*[' → logprob: -13.975290298461914
    9. '                   ' → logprob: -14.100290298461914
    10. '``' → logprob: -14.225290298461914

Token 1745: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.002475777640938759
    2. ' ans' → logprob: -6.002475738525391
    3. '(ans' → logprob: -16.37747573852539
    4. '	ans' → logprob: -18.00247573852539
    5. '
' → logprob: -19.00247573852539
    6. ' ' → logprob: -19.50247573852539
    7. '0' → logprob: -19.62747573852539
    8. '           ' → logprob: -19.62747573852539
    9. '   ' → logprob: -19.62747573852539
    10. '_ans' → logprob: -21.00247573852539

Token 1746: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1279553291387856e-05
    2. '```' → logprob: -11.875011444091797
    3. '0' → logprob: -12.625011444091797
    4. '[
' → logprob: -14.375011444091797
    5. '
' → logprob: -16.125011444091797
    6. '`' → logprob: -16.875011444091797
    7. '   ' → logprob: -16.875011444091797
    8. '==' → logprob: -17.125011444091797
    9. ' [' → logprob: -17.625011444091797
    10. 'def' → logprob: -17.625011444091797

Token 1747: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -13.75000286102295
    3. ' ' → logprob: -14.62500286102295
    4. '   ' → logprob: -14.62500286102295
    5. '```' → logprob: -14.62500286102295
    6. '
' → logprob: -14.75000286102295
    7. '1' → logprob: -15.37500286102295
    8. '  ' → logprob: -16.875003814697266
    9. '-' → logprob: -17.625003814697266
    10. '    ' → logprob: -18.250003814697266

Token 1748: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3869033455848694
    2. '<' → logprob: -1.1369032859802246
    3. '```' → logprob: -11.636903762817383
    4. '<int' → logprob: -12.636903762817383
    5. '<n' → logprob: -13.136903762817383
    6. '<p' → logprob: -13.386903762817383
    7. '<class' → logprob: -13.386903762817383
    8. '[' → logprob: -13.386903762817383
    9. '<size' → logprob: -13.636903762817383
    10. '<B' → logprob: -14.011903762817383

Token 1749: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0181773342192173
    2. ' <' → logprob: -4.018177509307861
    3. '<int' → logprob: -11.518177032470703
    4. '```' → logprob: -12.393177032470703
    5. '<const' → logprob: -13.143177032470703
    6. '>' → logprob: -13.518177032470703
    7. '[' → logprob: -13.643177032470703
    8. '<=' → logprob: -13.643177032470703
    9. '<size' → logprob: -13.893177032470703
    10. '<n' → logprob: -14.018177032470703

Token 1750: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.47408437728881836
    2. 'ans' → logprob: -0.9740843772888184
    3. '(ans' → logprob: -11.974084854125977
    4. '	ans' → logprob: -14.099084854125977
    5. 'B' → logprob: -16.474084854125977
    6. '_ans' → logprob: -16.849084854125977
    7. '           ' → logprob: -17.599084854125977
    8. '0' → logprob: -17.599084854125977
    9. 'Ans' → logprob: -17.599084854125977
    10. '```' → logprob: -17.974084854125977

Token 1751: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001085497424355708
    2. '```' → logprob: -9.37510871887207
    3. '1' → logprob: -10.75010871887207
    4. '[i' → logprob: -13.62510871887207
    5. 'ans' → logprob: -14.37510871887207
    6. '[
' → logprob: -16.25010871887207
    7. '`' → logprob: -16.37510871887207
    8. '   ' → logprob: -16.50010871887207
    9. '...' → logprob: -16.75010871887207
    10. '``' → logprob: -16.87510871887207

Token 1752: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.625
    3. '```' → logprob: -16.75
    4. ' ' → logprob: -18.25
    5. '0' → logprob: -18.25
    6. '-' → logprob: -18.625
    7. '
' → logprob: -19.75
    8. '[' → logprob: -20.0
    9. 'ans' → logprob: -20.375
    10. '``' → logprob: -20.625

Token 1753: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.043671321123838425
    2. '*' → logprob: -3.1686713695526123
    3. '               ' → logprob: -8.418671607971191
    4. '                   ' → logprob: -8.418671607971191
    5. '```' → logprob: -8.793671607971191
    6. '                       ' → logprob: -10.918671607971191
    7. '           ' → logprob: -11.793671607971191
    8. '              ' → logprob: -11.918671607971191
    9. '                ' → logprob: -12.043671607971191
    10. ':' → logprob: -12.168671607971191

Token 1754: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.089021697640419
    2. '*' → logprob: -2.464021682739258
    3. '```' → logprob: -9.589021682739258
    4. '*t' → logprob: -12.339021682739258
    5. '*b' → logprob: -13.589021682739258
    6. '               ' → logprob: -13.589021682739258
    7. '                   ' → logprob: -13.589021682739258
    8. '*[' → logprob: -14.339021682739258
    9. '``' → logprob: -14.589021682739258
    10. '*object' → logprob: -14.589021682739258

Token 1755: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.008620958775281906
    2. ' temp' → logprob: -4.758620738983154
    3. 't' → logprob: -12.258621215820312
    4. 'i' → logprob: -14.258621215820312
    5. ' i' → logprob: -14.633621215820312
    6. 'tmp' → logprob: -14.883621215820312
    7. '   ' → logprob: -16.383621215820312
    8. '[temp' → logprob: -16.508621215820312
    9. '(temp' → logprob: -16.633621215820312
    10. '	temp' → logprob: -16.883621215820312

Token 1756: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008546437602490187
    2. '[' → logprob: -7.3758544921875
    3. '```' → logprob: -8.6258544921875
    4. '[i' → logprob: -10.7508544921875
    5. '   ' → logprob: -10.8758544921875
    6. '``' → logprob: -13.0008544921875
    7. '*' → logprob: -13.5008544921875
    8. '
' → logprob: -14.1258544921875
    9. ' ' → logprob: -14.1258544921875
    10. '       ' → logprob: -14.2508544921875

Token 1757: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10464117676019669
    2. ':' → logprob: -2.8546411991119385
    3. '                   ' → logprob: -3.7296411991119385
    4. '                       ' → logprob: -4.354640960693359
    5. '```' → logprob: -5.854640960693359
    6. '):
' → logprob: -7.229640960693359
    7. '[' → logprob: -7.729640960693359
    8. '=' → logprob: -8.10464096069336
    9. '               ' → logprob: -8.10464096069336
    10. '       ' → logprob: -9.85464096069336

Token 1758: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4519261121749878
    2. '                   ' → logprob: -1.0769261121749878
    3. '```' → logprob: -3.9519262313842773
    4. '               ' → logprob: -7.076926231384277
    5. '                           ' → logprob: -7.451926231384277
    6. '       ' → logprob: -7.576926231384277
    7. '                      ' → logprob: -7.701926231384277
    8. '                               ' → logprob: -7.951926231384277
    9. '                  ' → logprob: -8.201926231384277
    10. '           ' → logprob: -8.576926231384277

Token 1759: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -1.9623810658231378e-05
    2. ' ans' → logprob: -10.875020027160645
    3. '```' → logprob: -15.000020027160645
    4. '	ans' → logprob: -15.375020027160645
    5. '(ans' → logprob: -16.750019073486328
    6. 'answer' → logprob: -17.500019073486328
    7. '_ans' → logprob: -18.500019073486328
    8. '``' → logprob: -19.000019073486328
    9. '`' → logprob: -19.125019073486328
    10. 'anst' → logprob: -19.500019073486328

Token 1760: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004173491150140762
    2. ' =' → logprob: -5.504173278808594
    3. '=[' → logprob: -9.879173278808594
    4. '[' → logprob: -11.004173278808594
    5. '=[
' → logprob: -11.129173278808594
    6. '=
' → logprob: -12.504173278808594
    7. '+=' → logprob: -12.879173278808594
    8. '```' → logprob: -12.879173278808594
    9. '[
' → logprob: -13.754173278808594
    10. ')' → logprob: -14.379173278808594

Token 1761: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5282189846038818
    2. ' [' → logprob: -1.2782189846038818
    3. '[t' → logprob: -2.028218984603882
    4. '[i' → logprob: -8.653219223022461
    5. '[b' → logprob: -10.653219223022461
    6. '[B' → logprob: -10.903219223022461
    7. '[temp' → logprob: -11.653219223022461
    8. '[test' → logprob: -12.403219223022461
    9. '[data' → logprob: -13.403219223022461
    10. '[start' → logprob: -13.528219223022461

Token 1762: 'temp' (ID: 7340)
  Prédit: 'temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.001989778596907854
    2. 'beam' → logprob: -6.376989841461182
    3. 't' → logprob: -9.126989364624023
    4. '0' → logprob: -9.126989364624023
    5. 'tmp' → logprob: -10.751989364624023
    6. ' temp' → logprob: -11.126989364624023
    7. 'ans' → logprob: -11.876989364624023
    8. '(temp' → logprob: -12.251989364624023
    9. '[temp' → logprob: -12.376989364624023
    10. '   ' → logprob: -12.376989364624023

Token 1763: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8117607831954956
    2. '2' → logprob: -1.0617607831954956
    3. '0' → logprob: -1.5617607831954956
    4. '```' → logprob: -8.686760902404785
    5. '   ' → logprob: -9.311760902404785
    6. '``' → logprob: -11.811760902404785
    7. '1' → logprob: -12.061760902404785
    8. '*' → logprob: -12.061760902404785
    9. '
' → logprob: -12.311760902404785
    10. '[
' → logprob: -12.311760902404785

Token 1764: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.297462171758525e-05
    2. ' ,' → logprob: -11.375033378601074
    3. ',b' → logprob: -12.250033378601074
    4. '                           ' → logprob: -12.250033378601074
    5. '                       ' → logprob: -13.000033378601074
    6. '               ' → logprob: -13.125033378601074
    7. '```' → logprob: -13.125033378601074
    8. ',B' → logprob: -13.500033378601074
    9. '                   ' → logprob: -13.625033378601074
    10. '           ' → logprob: -13.625033378601074

Token 1765: ' B' (ID: 418)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.672204852104187
    2. 'beam' → logprob: -1.922204852104187
    3. ' ans' → logprob: -2.0472049713134766
    4. 'B' → logprob: -2.0472049713134766
    5. ' beam' → logprob: -3.0472049713134766
    6. ' B' → logprob: -3.2972049713134766
    7. '                   ' → logprob: -9.797204971313477
    8. '```' → logprob: -9.922204971313477
    9. '               ' → logprob: -10.172204971313477
    10. '(ans' → logprob: -10.422204971313477

Token 1766: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0983281284570694
    2. '                   ' → logprob: -2.973328113555908
    3. '               ' → logprob: -3.973328113555908
    4. '                       ' → logprob: -4.598328113555908
    5. '           ' → logprob: -5.098328113555908
    6. '       ' → logprob: -6.098328113555908
    7. '```' → logprob: -6.348328113555908
    8. ']
' → logprob: -6.598328113555908
    9. '                           ' → logprob: -6.723328113555908
    10. '   ' → logprob: -7.223328113555908

Token 1767: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012749579036608338
    2. ')' → logprob: -9.625127792358398
    3. '```' → logprob: -10.375127792358398
    4. ' print' → logprob: -10.875127792358398
    5. '<|end|>' → logprob: -11.875127792358398
    6. ')
' → logprob: -13.625127792358398
    7. '
' → logprob: -14.250127792358398
    8. '``' → logprob: -14.250127792358398
    9. '   ' → logprob: -14.625127792358398
    10. '       ' → logprob: -16.1251277923584

Token 1768: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04588818550109863
    2. '   ' → logprob: -3.7958881855010986
    3. '       ' → logprob: -4.7958879470825195
    4. ')' → logprob: -4.9208879470825195
    5. '<|end|>' → logprob: -6.0458879470825195
    6. ' print' → logprob: -6.5458879470825195
    7. '```' → logprob: -6.7958879470825195
    8. 'else' (adapté à ' else') → logprob: -7.6708879470825195
    9. '           ' → logprob: -7.9208879470825195
    10. '    ' → logprob: -9.17088794708252

Token 1769: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27278390526771545
    2. '           ' → logprob: -1.772783875465393
    3. ':
' → logprob: -3.6477839946746826
    4. '```' → logprob: -3.6477839946746826
    5. ':' → logprob: -4.7727837562561035
    6. '                   ' → logprob: -5.5227837562561035
    7. '                       ' → logprob: -5.8977837562561035
    8. '       ' → logprob: -8.272784233093262
    9. '              ' → logprob: -8.522784233093262
    10. '            ' → logprob: -8.772784233093262

Token 1770: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8775456547737122
    2. '               ' → logprob: -1.1275455951690674
    3. '           ' → logprob: -1.3775455951690674
    4. '                   ' → logprob: -6.1275458335876465
    5. '``' → logprob: -6.7525458335876465
    6. '   ' → logprob: -6.8775458335876465
    7. '       ' → logprob: -7.1275458335876465
    8. 'for' → logprob: -7.3775458335876465
    9. 'continue' → logprob: -7.3775458335876465
    10. '            ' → logprob: -7.7525458335876465

Token 1771: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.7466543912887573
    2. 'L' (adapté à ' L') → logprob: -2.246654510498047
    3. '           ' → logprob: -2.246654510498047
    4. '   ' → logprob: -2.746654510498047
    5. 'temp' → logprob: -2.871654510498047
    6. '```' → logprob: -3.121654510498047
    7. '               ' → logprob: -3.246654510498047
    8. ' for' → logprob: -3.371654510498047
    9. 'for' → logprob: -3.746654510498047
    10. ' temp' → logprob: -3.746654510498047

Token 1772: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7717337608337402
    2. '=' → logprob: -1.1467337608337402
    3. ' =' → logprob: -1.5217337608337402
    4. '=L' → logprob: -7.39673376083374
    5. '               ' → logprob: -8.271734237670898
    6. '                   ' → logprob: -8.521734237670898
    7. ',L' → logprob: -8.521734237670898
    8. '           ' → logprob: -8.521734237670898
    9. '```' → logprob: -8.646734237670898
    10. '   ' → logprob: -9.771734237670898

Token 1773: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.11544355005025864
    2. ' start' → logprob: -2.240443468093872
    3. 'end' → logprob: -6.365443706512451
    4. 'i' → logprob: -7.740443706512451
    5. ' end' → logprob: -8.615443229675293
    6. ' i' → logprob: -8.990443229675293
    7. 'm' → logprob: -9.990443229675293
    8. '0' → logprob: -9.990443229675293
    9. ' m' → logprob: -10.615443229675293
    10. 'beam' → logprob: -11.490443229675293

Token 1774: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -4.68022444692906e-05
    2. '[i' → logprob: -10.375046730041504
    3. '[L' → logprob: -11.250046730041504
    4. 'Arr' → logprob: -14.125046730041504
    5. 'arr' → logprob: -15.000046730041504
    6. '```' → logprob: -15.375046730041504
    7. '_[' → logprob: -15.500046730041504
    8. '[' → logprob: -15.750046730041504
    9. '[_' → logprob: -16.12504768371582
    10. '_i' → logprob: -16.25004768371582

Token 1775: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017278953455388546
    2. '[L' → logprob: -6.376728057861328
    3. 'i' → logprob: -11.376728057861328
    4. '```' → logprob: -11.501728057861328
    5. 'L' → logprob: -12.626728057861328
    6. '[' → logprob: -15.001728057861328
    7. '(i' → logprob: -16.001728057861328
    8. '[I' → logprob: -16.501728057861328
    9. '=L' → logprob: -16.626728057861328
    10. '=' → logprob: -16.751728057861328

Token 1776: ']
' (ID: 1592)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00036204091156832874
    2. '```' → logprob: -8.500362396240234
    3. ']' → logprob: -9.125362396240234
    4. ']
' → logprob: -11.750362396240234
    5. '               ' → logprob: -11.875362396240234
    6. '][' → logprob: -11.875362396240234
    7. '[' → logprob: -11.875362396240234
    8. '[
' → logprob: -12.375362396240234
    9. '[L' → logprob: -13.000362396240234
    10. 'i' → logprob: -13.125362396240234

Token 1777: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.10037974268198013
    2. '                   ' → logprob: -2.725379705429077
    3. ',' → logprob: -4.350379943847656
    4. '               ' → logprob: -4.850379943847656
    5. '``' → logprob: -5.600379943847656
    6. ',R' → logprob: -6.475379943847656
    7. '+' → logprob: -6.850379943847656
    8. '                       ' → logprob: -7.100379943847656
    9. 'R' → logprob: -7.600379943847656
    10. ' R' → logprob: -7.725379943847656

Token 1778: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.08923683315515518
    2. ' R' → logprob: -2.4642367362976074
    3. '```' → logprob: -8.964237213134766
    4. ',' → logprob: -9.339237213134766
    5. '                   ' → logprob: -10.089237213134766
    6. '               ' → logprob: -11.714237213134766
    7. '   ' → logprob: -12.089237213134766
    8. ',R' → logprob: -12.464237213134766
    9. 'for' → logprob: -12.589237213134766
    10. '`' → logprob: -12.714237213134766

Token 1779: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2326173186302185
    2. '[i' → logprob: -1.6076173782348633
    3. '=i' → logprob: -5.482617378234863
    4. ' =' → logprob: -6.357617378234863
    5. '```' → logprob: -7.107617378234863
    6. '[L' → logprob: -8.982617378234863
    7. '[R' → logprob: -9.482617378234863
    8. '[' → logprob: -9.607617378234863
    9. '=L' → logprob: -10.357617378234863
    10. '+=' → logprob: -10.357617378234863

Token 1780: ' end' (ID: 1268)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006122298073023558
    2. ' i' → logprob: -5.63112211227417
    3. 'end' → logprob: -6.00612211227417
    4. ' end' → logprob: -10.631122589111328
    5. 'm' → logprob: -11.756122589111328
    6. '```' → logprob: -12.006122589111328
    7. '   ' → logprob: -12.506122589111328
    8. 'beam' → logprob: -12.756122589111328
    9. '[i' → logprob: -12.881122589111328
    10. 'start' → logprob: -13.131122589111328

Token 1781: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.00038443657103925943
    2. '[i' → logprob: -8.000384330749512
    3. 'arr' → logprob: -10.000384330749512
    4. '```' → logprob: -13.250384330749512
    5. 'Arr' → logprob: -14.375384330749512
    6. '[arr' → logprob: -15.125384330749512
    7. '	arr' → logprob: -15.500384330749512
    8. '(i' → logprob: -15.625384330749512
    9. '_i' → logprob: -15.875384330749512
    10. '[_' → logprob: -15.875384330749512

Token 1782: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003115095605608076
    2. 'i' → logprob: -8.125311851501465
    3. '```' → logprob: -11.125311851501465
    4. '[' → logprob: -15.000311851501465
    5. '(i' → logprob: -15.750311851501465
    6. ' i' → logprob: -16.00031089782715
    7. '[L' → logprob: -16.50031089782715
    8. '_i' → logprob: -17.25031089782715
    9. '	i' → logprob: -17.25031089782715
    10. '{i' → logprob: -17.25031089782715

Token 1783: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34416982531547546
    2. '[i' → logprob: -1.3441698551177979
    3. ']
' → logprob: -4.219169616699219
    4. '```' → logprob: -4.969169616699219
    5. ']+' → logprob: -5.594169616699219
    6. '+' → logprob: -6.594169616699219
    7. '               ' → logprob: -6.719169616699219
    8. 'i' → logprob: -7.719169616699219
    9. '<|end|>' → logprob: -8.094169616699219
    10. '][' → logprob: -8.344169616699219

Token 1784: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.022193072363734245
    2. '   ' → logprob: -4.39719295501709
    3. '``' → logprob: -4.77219295501709
    4. '[' → logprob: -7.89719295501709
    5. '                   ' → logprob: -8.77219295501709
    6. '           ' → logprob: -9.14719295501709
    7. '       ' → logprob: -9.27219295501709
    8. '	temp' → logprob: -9.64719295501709
    9. '               ' → logprob: -9.89719295501709
    10. '	for' → logprob: -10.02219295501709

Token 1785: ' temp' (ID: 5484)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5843716859817505
    2. 'temp' (adapté à ' temp') → logprob: -1.3343716859817505
    3. '               ' → logprob: -2.084371566772461
    4. '                   ' → logprob: -4.084371566772461
    5. 'for' → logprob: -4.334371566772461
    6. '           ' → logprob: -4.709371566772461
    7. '   ' → logprob: -5.334371566772461
    8. '``' → logprob: -5.709371566772461
    9. ' temp' → logprob: -6.084371566772461
    10. ' for' → logprob: -6.334371566772461

Token 1786: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022381693124771
    2. '=' → logprob: -2.3502237796783447
    3. '```' → logprob: -11.100223541259766
    4. '   ' → logprob: -13.475223541259766
    5. '``' → logprob: -15.350223541259766
    6. '           ' → logprob: -15.725223541259766
    7. '       ' → logprob: -16.600223541259766
    8. '    ' → logprob: -16.975223541259766
    9. ' ' → logprob: -17.100223541259766
    10. '        ' → logprob: -17.225223541259766

Token 1787: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.000555416801944375
    2. ' Seg' → logprob: -7.500555515289307
    3. 'Segment' → logprob: -13.000555038452148
    4. '-S' → logprob: -16.50055503845215
    5. 'seg' → logprob: -16.62555503845215
    6. 'Segments' → logprob: -18.00055503845215
    7. '_seg' → logprob: -18.25055503845215
    8. ' seg' → logprob: -18.37555503845215
    9. '```' → logprob: -18.37555503845215
    10. 'Tree' → logprob: -18.62555503845215

Token 1788: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -5.5861724831629544e-05
    2. 'Seg' → logprob: -9.875056266784668
    3. '_tree' → logprob: -13.250056266784668
    4. 'Segment' → logprob: -14.375056266784668
    5. 'Tre' → logprob: -14.625056266784668
    6. 'ST' → logprob: -15.125056266784668
    7. 'tree' → logprob: -15.750056266784668
    8. 'Stack' → logprob: -15.750056266784668
    9. '	Tree' → logprob: -16.00005531311035
    10. '```' → logprob: -16.00005531311035

Token 1789: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.001973480684682727
    2. 'query' → logprob: -6.251973628997803
    3. '```' → logprob: -10.876973152160645
    4. 'Tree' → logprob: -11.376973152160645
    5. '_tree' → logprob: -11.751973152160645
    6. 'Query' → logprob: -12.751973152160645
    7. '.query' → logprob: -13.751973152160645
    8. '$query' → logprob: -14.501973152160645
    9. 'QUERY' → logprob: -14.751973152160645
    10. 'Seg' → logprob: -14.751973152160645

Token 1790: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -5.741137283621356e-05
    2. 'tree' → logprob: -9.875057220458984
    3. '```' → logprob: -12.125057220458984
    4. '	tree' → logprob: -15.000057220458984
    5. '(' → logprob: -16.375057220458984
    6. '(
' → logprob: -17.125057220458984
    7. ' tree' → logprob: -18.250057220458984
    8. '`' → logprob: -18.375057220458984
    9. '/tree' → logprob: -18.875057220458984
    10. '``' → logprob: -18.875057220458984

Token 1791: '2' (ID: 17)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.4790229797363281
    2. '2' → logprob: -0.9790229797363281
    3. '1' → logprob: -5.854022979736328
    4. '```' → logprob: -6.729022979736328
    5. ',' → logprob: -7.479022979736328
    6. '(tree' → logprob: -8.729022979736328
    7. ' tree' → logprob: -9.729022979736328
    8. '   ' → logprob: -10.229022979736328
    9. '``' → logprob: -10.479022979736328
    10. '[' → logprob: -12.854022979736328

Token 1792: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001992490579141304
    2. ',num' → logprob: -9.125199317932129
    3. 'tree' → logprob: -10.000199317932129
    4. '```' → logprob: -10.875199317932129
    5. ',user' → logprob: -11.750199317932129
    6. 'num' → logprob: -11.750199317932129
    7. '(tree' → logprob: -13.375199317932129
    8. '2' → logprob: -13.625199317932129
    9. ',t' → logprob: -13.750199317932129
    10. '   ' → logprob: -14.000199317932129

Token 1793: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.00924136396497488
    2. ' num' → logprob: -4.759241580963135
    3. 'tree' → logprob: -7.384241580963135
    4. ' tree' → logprob: -12.884241104125977
    5. 'temp' → logprob: -13.509241104125977
    6. 'number' → logprob: -14.259241104125977
    7. '```' → logprob: -15.009241104125977
    8. ' ' → logprob: -15.509241104125977
    9. '   ' → logprob: -16.384241104125977
    10. '1' → logprob: -16.384241104125977

Token 1794: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00832236185669899
    2. 'num' → logprob: -4.883322238922119
    3. ',' → logprob: -7.508322238922119
    4. ',num' → logprob: -9.633322715759277
    5. '   ' → logprob: -10.008322715759277
    6. '```' → logprob: -11.008322715759277
    7. 'i' → logprob: -11.633322715759277
    8. ' num' → logprob: -11.633322715759277
    9. ' ' → logprob: -12.633322715759277
    10. '       ' → logprob: -12.883322715759277

Token 1795: ',' (ID: 11)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.31287476420402527
    2. ',' → logprob: -1.6878747940063477
    3. 'tree' → logprob: -2.5628747940063477
    4. ' tree' → logprob: -5.062874794006348
    5. '```' → logprob: -8.937874794006348
    6. '	tree' → logprob: -9.312874794006348
    7. '(' → logprob: -10.562874794006348
    8. '/tree' → logprob: -10.937874794006348
    9. 'None' → logprob: -11.187874794006348
    10. ' ,' → logprob: -11.687874794006348

Token 1796: ' seg' (ID: 3055)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0005530327325686812
    2. ' num' → logprob: -7.500553131103516
    3. '```' → logprob: -20.750553131103516
    4. '0' → logprob: -21.250553131103516
    5. '(num' → logprob: -21.250553131103516
    6. 'number' → logprob: -21.375553131103516
    7. ' ' → logprob: -21.750553131103516
    8. '   ' → logprob: -21.750553131103516
    9. ',num' → logprob: -21.750553131103516
    10. '	num' → logprob: -21.875553131103516

Token 1797: 'func' (ID: 5652)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.012466208077967167
    2. ',num' → logprob: -5.0124664306640625
    3. ',' → logprob: -5.5124664306640625
    4. '2' → logprob: -6.8874664306640625
    5. '```' → logprob: -7.8874664306640625
    6. ' num' → logprob: -9.387466430664062
    7. '_num' → logprob: -9.762466430664062
    8. 'size' → logprob: -9.887466430664062
    9. '(num' → logprob: -10.262466430664062
    10. '[num' → logprob: -10.887466430664062

Token 1798: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011224760673940182
    2. ',num' → logprob: -7.12612247467041
    3. 'num' → logprob: -8.37612247467041
    4. ' num' → logprob: -10.12612247467041
    5. ',user' → logprob: -10.75112247467041
    6. '```' → logprob: -11.12612247467041
    7. ' ,' → logprob: -11.87612247467041
    8. 'user' → logprob: -13.25112247467041
    9. '[num' → logprob: -15.00112247467041
    10. 'tree' → logprob: -15.25112247467041

Token 1799: ' ide' (ID: 2750)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.21527022123336792
    2. ' num' → logprob: -1.7152702808380127
    3. 'ide' → logprob: -4.715270042419434
    4. ' ide' → logprob: -5.340270042419434
    5. '```' → logprob: -12.590270042419434
    6. '0' → logprob: -13.340270042419434
    7. '(num' → logprob: -14.215270042419434
    8. '	num' → logprob: -14.215270042419434
    9. '1' → logprob: -14.340270042419434
    10. ' ' → logprob: -14.465270042419434

Token 1800: '_ele' (ID: 154942)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1039271354675293
    2. '_num' → logprob: -1.4789271354675293
    3. '2' → logprob: -2.1039271354675293
    4. '0' → logprob: -2.4789271354675293
    5. 'num' → logprob: -2.6039271354675293
    6. ',' → logprob: -3.4789271354675293
    7. 'i' → logprob: -3.6039271354675293
    8. ' ' → logprob: -3.8539271354675293
    9. '[i' → logprob: -4.228927135467529
    10. '```' → logprob: -4.353927135467529

Token 1801: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4498052223643754e-05
    2. ',user' → logprob: -12.000014305114746
    3. '```' → logprob: -12.125014305114746
    4. ' ,' → logprob: -13.500014305114746
    5. ',num' → logprob: -14.750014305114746
    6. ',start' → logprob: -15.625014305114746
    7. ',temp' → logprob: -15.875014305114746
    8. 'user' → logprob: -15.875014305114746
    9. '                   ' → logprob: -16.125015258789062
    10. ',t' → logprob: -16.375015258789062

Token 1802: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.015781769528985023
    2. 'num' → logprob: -4.515781879425049
    3. ' L' → logprob: -5.390781879425049
    4. 'R' → logprob: -9.14078140258789
    5. ' num' → logprob: -10.39078140258789
    6. 'temp' → logprob: -11.26578140258789
    7. '   ' → logprob: -12.39078140258789
    8. 'start' → logprob: -12.39078140258789
    9. '	L' → logprob: -14.14078140258789
    10. 'max' → logprob: -14.26578140258789

Token 1803: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023655613767914474
    2. ' ,' → logprob: -8.625236511230469
    3. ',R' → logprob: -10.500236511230469
    4. '```' → logprob: -11.000236511230469
    5. ',user' → logprob: -12.500236511230469
    6. ',num' → logprob: -13.375236511230469
    7. ',
' → logprob: -13.625236511230469
    8. '       ' → logprob: -14.500236511230469
    9. ',r' → logprob: -14.625236511230469
    10. '                   ' → logprob: -14.625236511230469

Token 1804: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.014205113984644413
    2. ' R' → logprob: -4.264204978942871
    3. 'i' → logprob: -10.764204978942871
    4. '```' → logprob: -12.764204978942871
    5. 'num' → logprob: -12.889204978942871
    6. 'r' → logprob: -13.139204978942871
    7. 'temp' → logprob: -13.139204978942871
    8. '                   ' → logprob: -13.139204978942871
    9. '   ' → logprob: -13.264204978942871
    10. ' i' → logprob: -13.764204978942871

Token 1805: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07904213666915894
    2. ' +' → logprob: -2.5790421962738037
    3. ')' → logprob: -9.704042434692383
    4. '```' → logprob: -9.829042434692383
    5. '<|end|>' → logprob: -11.454042434692383
    6. ',' → logprob: -11.704042434692383
    7. ')+' → logprob: -12.704042434692383
    8. '   ' → logprob: -12.954042434692383
    9. '+)' → logprob: -12.954042434692383
    10. '       ' → logprob: -13.329042434692383

Token 1806: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '```' → logprob: -13.125003814697266
    3. ' ' → logprob: -13.500003814697266
    4. '+' → logprob: -17.750003814697266
    5. '   ' → logprob: -18.250003814697266
    6. '                   ' → logprob: -18.375003814697266
    7. '2' → logprob: -18.500003814697266
    8. '0' → logprob: -18.625003814697266
    9. '``' → logprob: -18.750003814697266
    10. '                               ' → logprob: -19.250003814697266

Token 1807: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. '```' → logprob: -12.750004768371582
    3. ' ' → logprob: -13.125004768371582
    4. '   ' → logprob: -16.2500057220459
    5. '2' → logprob: -17.3750057220459
    6. '+' → logprob: -17.3750057220459
    7. '``' → logprob: -18.3750057220459
    8. '-' → logprob: -19.1250057220459
    9. '       ' → logprob: -19.1875057220459
    10. '           ' → logprob: -19.7500057220459

Token 1808: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012474333867430687
    2. ')
' → logprob: -4.762474536895752
    3. '```' → logprob: -5.637474536895752
    4. '               ' → logprob: -9.512474060058594
    5. '   ' → logprob: -9.637474060058594
    6. '           ' → logprob: -10.012474060058594
    7. '-' → logprob: -10.387474060058594
    8. '``' → logprob: -10.637474060058594
    9. '                   ' → logprob: -10.887474060058594
    10. ')-' → logprob: -11.387474060058594

Token 1809: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5888752937316895
    2. ' -' → logprob: -1.3388752937316895
    3. '```' → logprob: -2.4638752937316895
    4. '           ' → logprob: -2.8388752937316895
    5. '               ' → logprob: -3.4638752937316895
    6. '                   ' → logprob: -5.2138752937316895
    7. '   ' → logprob: -7.4638752937316895
    8. '              ' → logprob: -8.088874816894531
    9. '          ' → logprob: -8.213874816894531
    10. '-k' → logprob: -8.463874816894531

Token 1810: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.22545981407165527
    2. ' beam' → logprob: -1.6004598140716553
    3. '```' → logprob: -10.850460052490234
    4. '           ' → logprob: -11.100460052490234
    5. 'be' → logprob: -12.475460052490234
    6. '   ' → logprob: -13.600460052490234
    7. '               ' → logprob: -13.850460052490234
    8. 'tree' → logprob: -14.225460052490234
    9. ' ' → logprob: -14.475460052490234
    10. 'Beam' → logprob: -14.475460052490234

Token 1811: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.513339445111342e-05
    2. '```' → logprob: -10.375044822692871
    3. '``' → logprob: -12.000044822692871
    4. '[' → logprob: -12.750044822692871
    5. '`' → logprob: -12.750044822692871
    6. 'i' → logprob: -13.500044822692871
    7. '   ' → logprob: -15.750044822692871
    8. '(i' → logprob: -16.250045776367188
    9. '[L' → logprob: -17.375045776367188
    10. ' [' → logprob: -17.375045776367188

Token 1812: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004417297895997763
    2. '][' → logprob: -5.504417419433594
    3. '```' → logprob: -8.129417419433594
    4. ')[' → logprob: -11.379417419433594
    5. '`' → logprob: -11.379417419433594
    6. '[i' → logprob: -12.754417419433594
    7. ''[' → logprob: -13.004417419433594
    8. ''s' → logprob: -13.004417419433594
    9. '``' → logprob: -13.129417419433594
    10. ''][' → logprob: -13.254417419433594

Token 1813: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.919942486798391e-05
    2. '1' → logprob: -9.875059127807617
    3. ' ' → logprob: -12.625059127807617
    4. '[' → logprob: -12.875059127807617
    5. 'i' → logprob: -14.125059127807617
    6. '```' → logprob: -14.625059127807617
    7. '۰' → logprob: -16.250059127807617
    8. '   ' → logprob: -16.437559127807617
    9. '<|end|>' → logprob: -16.500059127807617
    10. '[i' → logprob: -16.687559127807617

Token 1814: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46092310547828674
    2. ')' → logprob: -1.3359230756759644
    3. ')
' → logprob: -3.085923194885254
    4. '```' → logprob: -3.710923194885254
    5. '               ' → logprob: -4.085923194885254
    6. 'temp' → logprob: -5.335923194885254
    7. '   ' → logprob: -5.710923194885254
    8. '       ' → logprob: -5.960923194885254
    9. ',' → logprob: -6.335923194885254
    10. '<|end|>' → logprob: -6.585923194885254

Token 1815: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.06368588656187057
    2. '           ' → logprob: -3.438685894012451
    3. '``' → logprob: -4.188685894012451
    4. '               ' → logprob: -4.938685894012451
    5. '
' → logprob: -6.188685894012451
    6. '\n' → logprob: -7.063685894012451
    7. '                   ' → logprob: -7.188685894012451
    8. '​' → logprob: -7.313685894012451
    9. '<|end|>' → logprob: -7.438685894012451
    10. '\' → logprob: -7.813685894012451

Token 1816: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.029773982241749763
    2. ' temp' → logprob: -3.5297739505767822
    3. '               ' → logprob: -11.029773712158203
    4. '+' → logprob: -12.904773712158203
    5. '                   ' → logprob: -13.904773712158203
    6. '           ' → logprob: -13.904773712158203
    7. 'tmp' → logprob: -14.154773712158203
    8. '```' → logprob: -14.529773712158203
    9. '	temp' → logprob: -15.029773712158203
    10. '   ' → logprob: -15.029773712158203

Token 1817: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.14378048479557037
    2. ' +=' → logprob: -2.018780469894409
    3. '           ' → logprob: -7.893780708312988
    4. '   ' → logprob: -8.268780708312988
    5. '```' → logprob: -8.393780708312988
    6. '       ' → logprob: -9.268780708312988
    7. '          ' → logprob: -10.018780708312988
    8. '=' → logprob: -10.018780708312988
    9. '+' → logprob: -10.768780708312988
    10. '      ' → logprob: -11.643780708312988

Token 1818: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.14268071949481964
    2. ' beam' → logprob: -2.0176806449890137
    3. '0' → logprob: -13.267681121826172
    4. '   ' → logprob: -13.767681121826172
    5. ' ' → logprob: -13.892681121826172
    6. 'be' → logprob: -14.517681121826172
    7. '(' → logprob: -15.017681121826172
    8. 'b' → logprob: -15.267681121826172
    9. '
' → logprob: -16.142681121826172
    10. ' ' → logprob: -16.267681121826172

Token 1819: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. 'i' → logprob: -14.000000953674316
    3. '[' → logprob: -15.625000953674316
    4. '   ' → logprob: -17.000001907348633
    5. '```' → logprob: -17.000001907348633
    6. '(i' → logprob: -17.875001907348633
    7. ' [' → logprob: -18.250001907348633
    8. '{i' → logprob: -18.500001907348633
    9. '[
' → logprob: -18.750001907348633
    10. ' ' → logprob: -18.875001907348633

Token 1820: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.31520533561706543
    2. '][' → logprob: -1.3152053356170654
    3. '[' → logprob: -6.3152055740356445
    4. '```' → logprob: -9.565205574035645
    5. '`' → logprob: -10.690205574035645
    6. 'i' → logprob: -11.690205574035645
    7. '>[' → logprob: -11.815205574035645
    8. '   ' → logprob: -12.190205574035645
    9. ''s' → logprob: -12.440205574035645
    10. '"][' → logprob: -13.065205574035645

Token 1821: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3133018910884857
    2. '0' → logprob: -1.313301920890808
    3. '[i' → logprob: -11.063302040100098
    4. ' i' → logprob: -11.188302040100098
    5. '```' → logprob: -12.438302040100098
    6. '1' → logprob: -12.688302040100098
    7. '	i' → logprob: -14.063302040100098
    8. '   ' → logprob: -14.563302040100098
    9. '[' → logprob: -14.563302040100098
    10. '{i' → logprob: -14.938302040100098

Token 1822: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6437472701072693
    2. '-' → logprob: -0.7687472701072693
    3. '[' → logprob: -4.643747329711914
    4. '```' → logprob: -7.268747329711914
    5. '`' → logprob: -8.518747329711914
    6. ' ' → logprob: -8.643747329711914
    7. ',' → logprob: -9.268747329711914
    8. '       ' → logprob: -10.143747329711914
    9. '   ' → logprob: -10.268747329711914
    10. '>' → logprob: -10.268747329711914

Token 1823: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.061985500156879425
    2. '-' → logprob: -2.811985492706299
    3. '```' → logprob: -11.061985969543457
    4. ' ' → logprob: -13.811985969543457
    5. ' ' → logprob: -15.186985969543457
    6. '   ' → logprob: -15.436985969543457
    7. '``' → logprob: -15.686985969543457
    8. '[' → logprob: -15.936985969543457
    9. '       ' → logprob: -16.81198501586914
    10. '`' → logprob: -16.81198501586914

Token 1824: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0005566088366322219
    2. ' beam' → logprob: -7.500556468963623
    3. '```' → logprob: -13.625556945800781
    4. '   ' → logprob: -14.125556945800781
    5. 'i' → logprob: -14.750556945800781
    6. '           ' → logprob: -15.250556945800781
    7. '       ' → logprob: -15.375556945800781
    8. ' ' → logprob: -16.12555694580078
    9. 'bee' → logprob: -16.25055694580078
    10. '1' → logprob: -16.37555694580078

Token 1825: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4741418659687042
    2. '[' → logprob: -0.9741418361663818
    3. '```' → logprob: -9.849142074584961
    4. 'i' → logprob: -11.974142074584961
    5. '[
' → logprob: -13.224142074584961
    6. '1' → logprob: -13.724142074584961
    7. '   ' → logprob: -14.599142074584961
    8. '[user' → logprob: -14.849142074584961
    9. '`' → logprob: -15.099142074584961
    10. '<|end|>' → logprob: -15.599142074584961

Token 1826: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010093786753714085
    2. '][' → logprob: -4.885093688964844
    3. '1' → logprob: -6.635093688964844
    4. '[i' → logprob: -7.010093688964844
    5. '```' → logprob: -8.385093688964844
    6. '   ' → logprob: -11.760093688964844
    7. '-' → logprob: -12.135093688964844
    8. ')[' → logprob: -12.135093688964844
    9. 'i' → logprob: -12.510093688964844
    10. '>[' → logprob: -13.010093688964844

Token 1827: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -15.750000953674316
    4. '```' → logprob: -16.000001907348633
    5. '[' → logprob: -16.375001907348633
    6. '
' → logprob: -17.375001907348633
    7. '<|end|>' → logprob: -18.125001907348633
    8. '[i' → logprob: -18.125001907348633
    9. ']' → logprob: -18.937501907348633
    10. '[
' → logprob: -19.250001907348633

Token 1828: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9904887676239014
    2. '```' → logprob: -1.3654887676239014
    3. ')
' → logprob: -1.7404887676239014
    4. ']
' → logprob: -2.4904887676239014
    5. '           ' → logprob: -2.8654887676239014
    6. ')' → logprob: -4.1154890060424805
    7. '
' → logprob: -4.3654890060424805
    8. '       ' → logprob: -4.6154890060424805
    9. '                   ' → logprob: -4.9904890060424805
    10. ']' → logprob: -5.4904890060424805

Token 1829: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04818279668688774
    2. '                   ' → logprob: -3.798182725906372
    3. '```' → logprob: -4.548182964324951
    4. '           ' → logprob: -4.798182964324951
    5. '                       ' → logprob: -5.923182964324951
    6. '       ' → logprob: -6.673182964324951
    7. '\' → logprob: -8.048182487487793
    8. '``' → logprob: -8.423182487487793
    9. '<|end|>' → logprob: -8.423182487487793
    10. '                               ' → logprob: -8.548182487487793

Token 1830: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001499060745118186
    2. '           ' → logprob: -9.625149726867676
    3. '                   ' → logprob: -9.625149726867676
    4. '```' → logprob: -11.750149726867676
    5. '                       ' → logprob: -13.000149726867676
    6. 'if' (adapté à ' if') → logprob: -13.250149726867676
    7. '       ' → logprob: -13.500149726867676
    8. '              ' → logprob: -13.500149726867676
    9. '                ' → logprob: -13.750149726867676
    10. ' if' → logprob: -13.750149726867676

Token 1831: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.10021551698446274
    2. 'temp' → logprob: -2.350215435028076
    3. '(temp' → logprob: -12.100215911865234
    4. '   ' → logprob: -14.725215911865234
    5. '	temp' → logprob: -14.725215911865234
    6. '0' → logprob: -14.975215911865234
    7. 'B' → logprob: -15.350215911865234
    8. '               ' → logprob: -15.475215911865234
    9. '```' → logprob: -15.475215911865234
    10. '$temp' → logprob: -15.600215911865234

Token 1832: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03009316697716713
    2. '<=' → logprob: -3.530093193054199
    3. '               ' → logprob: -8.4050931930542
    4. '           ' → logprob: -10.0300931930542
    5. '```' → logprob: -10.9050931930542
    6. '                   ' → logprob: -10.9050931930542
    7. '              ' → logprob: -11.0300931930542
    8. '                  ' → logprob: -12.1550931930542
    9. '          ' → logprob: -12.4050931930542
    10. '   ' → logprob: -12.5300931930542

Token 1833: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47408103942871094
    2. '0' → logprob: -0.9740810394287109
    3. '   ' → logprob: -13.099081039428711
    4. '           ' → logprob: -14.599081039428711
    5. 'True' → logprob: -15.099081039428711
    6. '               ' → logprob: -15.474081039428711
    7. ' True' → logprob: -15.474081039428711
    8. '       ' → logprob: -15.599081039428711
    9. '  ' → logprob: -15.599081039428711
    10. '```' → logprob: -15.974081039428711

Token 1834: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019287518225610256
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.501928329467773
    4. '```' → logprob: -16.751928329467773
    5. '           ' → logprob: -18.501928329467773
    6. '  ' → logprob: -18.626928329467773
    7. '       ' → logprob: -19.126928329467773
    8. '1' → logprob: -19.251928329467773
    9. '
' → logprob: -19.876928329467773
    10. '``' → logprob: -20.126928329467773

Token 1835: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2989974617958069
    2. '                   ' → logprob: -1.548997402191162
    3. ':' → logprob: -3.298997402191162
    4. '               ' → logprob: -4.798997402191162
    5. '                       ' → logprob: -7.923997402191162
    6. '           ' → logprob: -9.04899787902832
    7. '```' → logprob: -9.29899787902832
    8. '                  ' → logprob: -9.42399787902832
    9. '):
' → logprob: -9.67399787902832
    10. '                 ' → logprob: -11.42399787902832

Token 1836: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1387198269367218
    2. '               ' → logprob: -2.1387197971343994
    3. '```' → logprob: -4.7637200355529785
    4. '                       ' → logprob: -6.2637200355529785
    5. '                  ' → logprob: -7.7637200355529785
    6. '                ' → logprob: -8.26371955871582
    7. '           ' → logprob: -8.63871955871582
    8. '                               ' → logprob: -9.26371955871582
    9. '                 ' → logprob: -9.63871955871582
    10. '              ' → logprob: -9.76371955871582

Token 1837: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.4797306954860687
    2. 'temp' (adapté à ' temp') → logprob: -0.9797307252883911
    3. '                   ' → logprob: -5.479730606079102
    4. '               ' → logprob: -6.604730606079102
    5. '                       ' → logprob: -10.104730606079102
    6. '```' → logprob: -10.854730606079102
    7. '                ' → logprob: -11.479730606079102
    8. '                               ' → logprob: -11.979730606079102
    9. '                    ' → logprob: -12.229730606079102
    10. 'token' → logprob: -12.229730606079102

Token 1838: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3977677822113037
    2. '=' → logprob: -1.6477677822113037
    3. '_' → logprob: -3.1477677822113037
    4. '```' → logprob: -3.2727677822113037
    5. '+=' → logprob: -3.5227677822113037
    6. ' =' → logprob: -4.647768020629883
    7. '[' → logprob: -5.147768020629883
    8. '_tokens' → logprob: -6.022768020629883
    9. '   ' → logprob: -6.522768020629883
    10. ' +=' → logprob: -6.647768020629883

Token 1839: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023248042911291122
    2. '=' → logprob: -3.7732479572296143
    3. '                   ' → logprob: -14.023247718811035
    4. '               ' → logprob: -14.148247718811035
    5. '           ' → logprob: -15.148247718811035
    6. '```' → logprob: -15.273247718811035
    7. '   ' → logprob: -15.523247718811035
    8. '                ' → logprob: -16.02324867248535
    9. '       ' → logprob: -17.02324867248535
    10. ' ' → logprob: -17.39824867248535

Token 1840: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.12692947685718536
    2. 'abs' → logprob: -2.126929521560669
    3. '(abs' → logprob: -13.62692928314209
    4. '.abs' → logprob: -16.126930236816406
    5. '_abs' → logprob: -16.376930236816406
    6. 'Abs' → logprob: -18.126930236816406
    7. ' ' → logprob: -18.751930236816406
    8. ' absorb' → logprob: -19.251930236816406
    9. '   ' → logprob: -19.626930236816406
    10. ' Abs' → logprob: -19.751930236816406

Token 1841: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.5759516358375549
    2. 'temp' → logprob: -0.8259516358375549
    3. '[temp' → logprob: -11.70095157623291
    4. ' temp' → logprob: -12.82595157623291
    5. '$temp' → logprob: -14.45095157623291
    6. ',temp' → logprob: -15.45095157623291
    7. '	temp' → logprob: -15.57595157623291
    8. '=temp' → logprob: -15.82595157623291
    9. 'tem' → logprob: -16.450952529907227
    10. '_temp' → logprob: -17.575952529907227

Token 1842: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14331400394439697
    2. ')
' → logprob: -2.0183138847351074
    3. '[' → logprob: -8.393314361572266
    4. ')[' → logprob: -8.768314361572266
    5. '```' → logprob: -9.393314361572266
    6. '[temp' → logprob: -10.518314361572266
    7. '2' → logprob: -10.768314361572266
    8. ')
' → logprob: -11.018314361572266
    9. '   ' → logprob: -11.393314361572266
    10. '[i' → logprob: -11.393314361572266

Token 1843: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7935534715652466
    2. 'B' → logprob: -1.5435534715652466
    3. '                   ' → logprob: -1.7935534715652466
    4. '[' → logprob: -2.668553352355957
    5. 'if' → logprob: -3.168553352355957
    6. '                       ' → logprob: -3.793553352355957
    7. ' B' → logprob: -4.668553352355957
    8. '``' → logprob: -5.168553352355957
    9. ' if' → logprob: -5.418553352355957
    10. 'beam' → logprob: -6.043553352355957

Token 1844: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.04869569092988968
    2. 'B' (adapté à ' B') → logprob: -3.0486958026885986
    3. '                   ' → logprob: -9.17369556427002
    4. '                    ' → logprob: -13.29869556427002
    5. '               ' → logprob: -13.92369556427002
    6. '           ' → logprob: -13.92369556427002
    7. '                ' → logprob: -14.92369556427002
    8. '```' → logprob: -15.29869556427002
    9. '                  ' → logprob: -15.54869556427002
    10. '            ' → logprob: -16.173696517944336

Token 1845: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1007872149348259
    2. ' =' → logprob: -2.3507871627807617
    3. '                   ' → logprob: -7.850787162780762
    4. ',' → logprob: -9.600787162780762
    5. '[' → logprob: -10.100787162780762
    6. '               ' → logprob: -10.350787162780762
    7. '           ' → logprob: -10.475787162780762
    8. '[i' → logprob: -12.100787162780762
    9. '   ' → logprob: -12.350787162780762
    10. '```' → logprob: -12.475787162780762

Token 1846: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.10020839422941208
    2. ' beam' → logprob: -2.350208282470703
    3. 'ans' → logprob: -14.475208282470703
    4. '   ' → logprob: -14.475208282470703
    5. 'be' → logprob: -15.225208282470703
    6. ' ' → logprob: -16.100208282470703
    7. ' ans' → logprob: -16.350208282470703
    8. 'b' → logprob: -17.100208282470703
    9. 'Beam' → logprob: -17.225208282470703
    10. '           ' → logprob: -17.475208282470703

Token 1847: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. '```' → logprob: -13.000004768371582
    3. 'i' → logprob: -13.250004768371582
    4. '[' → logprob: -15.500004768371582
    5. '   ' → logprob: -15.875004768371582
    6. '`' → logprob: -17.375003814697266
    7. '(i' → logprob: -18.375003814697266
    8. '
' → logprob: -19.000003814697266
    9. '``' → logprob: -19.000003814697266
    10. '\[' → logprob: -19.000003814697266

Token 1848: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.23917081207037e-05
    2. '][' → logprob: -10.625041961669922
    3. '[' → logprob: -11.125041961669922
    4. 'i' → logprob: -13.125041961669922
    5. '```' → logprob: -13.750041961669922
    6. '   ' → logprob: -16.750041961669922
    7. '(i' → logprob: -17.250041961669922
    8. ')[' → logprob: -17.375041961669922
    9. '
' → logprob: -18.000041961669922
    10. '`' → logprob: -18.000041961669922

Token 1849: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28134021162986755
    2. 'i' → logprob: -1.40634024143219
    3. '[i' → logprob: -9.531340599060059
    4. '```' → logprob: -9.781340599060059
    5. ' i' → logprob: -10.281340599060059
    6. '   ' → logprob: -12.156340599060059
    7. '
' → logprob: -12.281340599060059
    8. '	i' → logprob: -12.656340599060059
    9. ' ' → logprob: -13.281340599060059
    10. '(i' → logprob: -13.406340599060059

Token 1850: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03682565689086914
    2. '               ' → logprob: -3.411825656890869
    3. '```' → logprob: -6.786825656890869
    4. '           ' → logprob: -7.161825656890869
    5. '                       ' → logprob: -7.161825656890869
    6. ']
' → logprob: -8.911825180053711
    7. ':
' → logprob: -9.161825180053711
    8. ']' → logprob: -10.161825180053711
    9. '                  ' → logprob: -10.286825180053711
    10. '
' → logprob: -10.536825180053711

Token 1851: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.022096402943134308
    2. '```' → logprob: -4.272096633911133
    3. '                       ' → logprob: -5.272096633911133
    4. '               ' → logprob: -6.272096633911133
    5. 'if' → logprob: -7.772096633911133
    6. ' if' → logprob: -8.897096633911133
    7. '                  ' → logprob: -9.397096633911133
    8. '``' → logprob: -9.522096633911133
    9. '           ' → logprob: -9.772096633911133
    10. '                    ' → logprob: -10.147096633911133

Token 1852: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2192225158214569
    2. 'if' (adapté à ' if') → logprob: -1.7192225456237793
    3. ' if' → logprob: -4.219222545623779
    4. '                       ' → logprob: -6.594222545623779
    5. '```' → logprob: -6.719222545623779
    6. '               ' → logprob: -8.094222068786621
    7. '           ' → logprob: -10.969222068786621
    8. '                    ' → logprob: -11.219222068786621
    9. '                           ' → logprob: -11.844222068786621
    10. '                  ' → logprob: -11.969222068786621

Token 1853: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.47408443689346313
    2. ' B' → logprob: -0.9740844368934631
    3. ' ans' → logprob: -12.099084854125977
    4. '   ' → logprob: -14.224084854125977
    5. 'ans' → logprob: -14.224084854125977
    6. ' ' → logprob: -16.099084854125977
    7. '    ' → logprob: -16.349084854125977
    8. '                   ' → logprob: -16.849084854125977
    9. 'b' → logprob: -16.974084854125977
    10. '  ' → logprob: -16.974084854125977

Token 1854: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10323797911405563
    2. '*' → logprob: -2.3532378673553467
    3. '[' → logprob: -5.853238105773926
    4. '*[' → logprob: -9.853238105773926
    5. '```' → logprob: -9.978238105773926
    6. ' [' → logprob: -10.478238105773926
    7. ' ' → logprob: -11.603238105773926
    8. '   ' → logprob: -11.978238105773926
    9. '           ' → logprob: -13.103238105773926
    10. '``' → logprob: -13.103238105773926

Token 1855: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.16022655367851257
    2. 'ans' → logprob: -1.910226583480835
    3. '	ans' → logprob: -14.410226821899414
    4. '(ans' → logprob: -14.535226821899414
    5. '   ' → logprob: -14.910226821899414
    6. ' ' → logprob: -14.910226821899414
    7. '           ' → logprob: -15.535226821899414
    8. '  ' → logprob: -16.035226821899414
    9. '               ' → logprob: -16.535226821899414
    10. '_ans' → logprob: -16.660226821899414

Token 1856: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. '*' → logprob: -14.000001907348633
    3. '```' → logprob: -14.875001907348633
    4. '               ' → logprob: -15.000001907348633
    5. '   ' → logprob: -15.500001907348633
    6. '           ' → logprob: -15.500001907348633
    7. '``' → logprob: -16.375001907348633
    8. '                   ' → logprob: -16.500001907348633
    9. '0' → logprob: -16.875001907348633
    10. '       ' → logprob: -16.875001907348633

Token 1857: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.990154047845863e-05
    2. '[' → logprob: -10.750049591064453
    3. '1' → logprob: -10.875049591064453
    4. '
' → logprob: -12.375049591064453
    5. '   ' → logprob: -13.000049591064453
    6. ' ' → logprob: -13.750049591064453
    7. '```' → logprob: -14.250049591064453
    8. '...' → logprob: -15.437549591064453
    9. '2' → logprob: -15.875049591064453
    10. '  ' → logprob: -16.062549591064453

Token 1858: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11290121078491211
    2. '<' → logprob: -2.237901210784912
    3. '                       ' → logprob: -10.48790168762207
    4. '                   ' → logprob: -11.11290168762207
    5. '```' → logprob: -11.61290168762207
    6. '                        ' → logprob: -12.86290168762207
    7. '                    ' → logprob: -13.48790168762207
    8. '                      ' → logprob: -13.48790168762207
    9. '<int' → logprob: -13.61290168762207
    10. '[' → logprob: -13.73790168762207

Token 1859: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.47435998916625977
    2. '<' → logprob: -0.9743599891662598
    3. '                       ' → logprob: -9.599359512329102
    4. '   ' → logprob: -9.974359512329102
    5. '```' → logprob: -10.599359512329102
    6. '                   ' → logprob: -10.849359512329102
    7. '<int' → logprob: -11.224359512329102
    8. '               ' → logprob: -11.349359512329102
    9. '<n' → logprob: -11.474359512329102
    10. '  ' → logprob: -11.849359512329102

Token 1860: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.25193798542022705
    2. 'ans' → logprob: -1.501937985420227
    3. '(ans' → logprob: -11.876937866210938
    4. '	ans' → logprob: -13.876937866210938
    5. '_ans' → logprob: -14.751937866210938
    6. 'B' → logprob: -15.251937866210938
    7. 'Ans' → logprob: -15.751937866210938
    8. '0' → logprob: -16.501937866210938
    9. ' ' → logprob: -17.501937866210938
    10. 'ANS' → logprob: -17.626937866210938

Token 1861: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.541112427134067e-05
    2. '                   ' → logprob: -10.250075340270996
    3. 'ans' → logprob: -11.500075340270996
    4. '           ' → logprob: -11.875075340270996
    5. '               ' → logprob: -12.000075340270996
    6. '0' → logprob: -12.125075340270996
    7. '```' → logprob: -12.750075340270996
    8. '   ' → logprob: -12.875075340270996
    9. '       ' → logprob: -13.500075340270996
    10. '                       ' → logprob: -14.000075340270996

Token 1862: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10386581718921661
    2. '2' → logprob: -2.3538658618927
    3. '0' → logprob: -5.978865623474121
    4. '[' → logprob: -6.978865623474121
    5. '   ' → logprob: -9.228865623474121
    6. ' ' → logprob: -10.478865623474121
    7. '-' → logprob: -10.978865623474121
    8. '```' → logprob: -10.978865623474121
    9. '
' → logprob: -12.353865623474121
    10. '       ' → logprob: -12.478865623474121

Token 1863: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.008632768876850605
    2. '*' → logprob: -4.758632659912109
    3. '```' → logprob: -11.88363265991211
    4. '                   ' → logprob: -12.00863265991211
    5. '                       ' → logprob: -13.13363265991211
    6. '                    ' → logprob: -14.00863265991211
    7. '                        ' → logprob: -14.75863265991211
    8. ' ' → logprob: -15.00863265991211
    9. '                ' → logprob: -15.75863265991211
    10. '               ' → logprob: -16.13363265991211

Token 1864: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04308540001511574
    2. '*' → logprob: -3.1680853366851807
    3. '```' → logprob: -10.293085098266602
    4. '                   ' → logprob: -10.918085098266602
    5. '                       ' → logprob: -11.043085098266602
    6. '<' → logprob: -12.918085098266602
    7. ' <' → logprob: -13.168085098266602
    8. '                    ' → logprob: -13.293085098266602
    9. '                        ' → logprob: -13.418085098266602
    10. '*t' → logprob: -13.543085098266602

Token 1865: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0002099773846566677
    2. ' temp' → logprob: -8.50020980834961
    3. '[temp' → logprob: -13.00020980834961
    4. 'tmp' → logprob: -13.50020980834961
    5. 't' → logprob: -14.25020980834961
    6. '           ' → logprob: -15.25020980834961
    7. '$temp' → logprob: -15.25020980834961
    8. '   ' → logprob: -15.37520980834961
    9. 'tem' → logprob: -15.50020980834961
    10. '	temp' → logprob: -15.50020980834961

Token 1866: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0818599984049797
    2. '[' → logprob: -2.831860065460205
    3. '*' → logprob: -4.081860065460205
    4. '```' → logprob: -6.081860065460205
    5. '*[' → logprob: -8.831859588623047
    6. '   ' → logprob: -9.581859588623047
    7. '_' → logprob: -9.706859588623047
    8. ' *' → logprob: -9.956859588623047
    9. '``' → logprob: -10.206859588623047
    10. ' ' → logprob: -10.331859588623047

Token 1867: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.34674450755119324
    2. ':
' → logprob: -1.5967445373535156
    3. '                   ' → logprob: -2.9717445373535156
    4. ':' → logprob: -4.096744537353516
    5. '```' → logprob: -4.221744537353516
    6. '               ' → logprob: -5.346744537353516
    7. '=' → logprob: -7.596744537353516
    8. '*' → logprob: -7.596744537353516
    9. '[' → logprob: -8.221744537353516
    10. '-' → logprob: -8.346744537353516

Token 1868: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.014907663688063622
    2. '```' → logprob: -4.5149078369140625
    3. '                   ' → logprob: -5.7649078369140625
    4. '                           ' → logprob: -8.139907836914062
    5. '                               ' → logprob: -9.264907836914062
    6. '               ' → logprob: -9.389907836914062
    7. '                      ' → logprob: -9.514907836914062
    8. '``' → logprob: -9.514907836914062
    9. '                        ' → logprob: -10.264907836914062
    10. '           ' → logprob: -11.639907836914062

Token 1869: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.5759705305099487
    2. ' ans' → logprob: -0.8259705305099487
    3. '	ans' → logprob: -11.575970649719238
    4. '           ' → logprob: -12.450970649719238
    5. '                   ' → logprob: -12.575970649719238
    6. '```' → logprob: -12.825970649719238
    7. '                       ' → logprob: -12.950970649719238
    8. '(ans' → logprob: -12.950970649719238
    9. '   ' → logprob: -13.200970649719238
    10. '                           ' → logprob: -13.575970649719238

Token 1870: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25196364521980286
    2. '=' → logprob: -1.5019636154174805
    3. '=[' → logprob: -11.00196361541748
    4. '[' → logprob: -11.12696361541748
    5. '   ' → logprob: -13.37696361541748
    6. ' =[' → logprob: -13.87696361541748
    7. '```' → logprob: -16.001964569091797
    8. ' ' → logprob: -16.501964569091797
    9. '+=' → logprob: -16.751964569091797
    10. '           ' → logprob: -16.876964569091797

Token 1871: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.203267902135849
    2. '[' → logprob: -2.328267812728882
    3. '[t' → logprob: -2.453267812728882
    4. ' ans' → logprob: -8.828268051147461
    5. '[B' → logprob: -9.078268051147461
    6. '[temp' → logprob: -9.703268051147461
    7. 'ans' → logprob: -9.828268051147461
    8. '[b' → logprob: -11.078268051147461
    9. '[test' → logprob: -11.328268051147461
    10. '(ans' → logprob: -11.703268051147461

Token 1872: 'temp' (ID: 7340)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4057573080062866
    2. 'B' → logprob: -1.4057573080062866
    3. 'temp' → logprob: -2.655757427215576
    4. 'beam' → logprob: -4.405757427215576
    5. ' ans' → logprob: -5.780757427215576
    6. ' B' → logprob: -6.405757427215576
    7. '[' → logprob: -8.405756950378418
    8. '[B' → logprob: -8.530756950378418
    9. ' temp' → logprob: -8.655756950378418
    10. ' beam' → logprob: -8.780756950378418

Token 1873: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08903096616268158
    2. '0' → logprob: -2.4640309810638428
    3. '2' → logprob: -9.839031219482422
    4. '```' → logprob: -11.339031219482422
    5. '
' → logprob: -11.964031219482422
    6. '   ' → logprob: -11.964031219482422
    7. '``' → logprob: -13.214031219482422
    8. '       ' → logprob: -13.339031219482422
    9. '1' → logprob: -13.339031219482422
    10. ' [' → logprob: -13.464031219482422

Token 1874: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.947715832618997e-05
    2. '                       ' → logprob: -10.625089645385742
    3. '                           ' → logprob: -10.875089645385742
    4. ' ,' → logprob: -10.875089645385742
    5. '                   ' → logprob: -12.000089645385742
    6. '               ' → logprob: -12.375089645385742
    7. '*,' → logprob: -12.375089645385742
    8. ' *' → logprob: -12.875089645385742
    9. '           ' → logprob: -12.875089645385742
    10. '*' → logprob: -13.000089645385742

Token 1875: ' B' (ID: 418)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0272696018218994
    2. ' ans' → logprob: -1.1522696018218994
    3. 'B' → logprob: -1.4022696018218994
    4. ' B' → logprob: -2.5272696018218994
    5. 'beam' → logprob: -9.15226936340332
    6. ' beam' → logprob: -9.90226936340332
    7. '(ans' → logprob: -12.02726936340332
    8. '	ans' → logprob: -12.40226936340332
    9. '   ' → logprob: -13.02726936340332
    10. '_B' → logprob: -13.15226936340332

Token 1876: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1123542785644531
    2. '                   ' → logprob: -1.3623542785644531
    3. '               ' → logprob: -1.7373542785644531
    4. '           ' → logprob: -2.362354278564453
    5. ')' → logprob: -2.612354278564453
    6. '       ' → logprob: -3.612354278564453
    7. '                       ' → logprob: -3.737354278564453
    8. '   ' → logprob: -4.987354278564453
    9. '```' → logprob: -5.112354278564453
    10. '                           ' → logprob: -6.112354278564453

Token 1877: '               ' (ID: 506)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.484132169745862e-05
    2. '```' → logprob: -9.750094413757324
    3. '   ' → logprob: -11.000094413757324
    4. ' print' → logprob: -11.125094413757324
    5. '``' → logprob: -12.875094413757324
    6. '
' → logprob: -13.000094413757324
    7. '       ' → logprob: -16.37509536743164
    8. '           ' → logprob: -17.25009536743164
    9. '	print' → logprob: -18.00009536743164
    10. '#print' → logprob: -18.00009536743164

Token 1878: ' temp' (ID: 5484)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4740608334541321
    2. '                   ' → logprob: -1.7240607738494873
    3. '       ' → logprob: -2.9740607738494873
    4. '   ' → logprob: -3.2240607738494873
    5. '           ' → logprob: -3.3490607738494873
    6. 'print' → logprob: -3.5990607738494873
    7. 'i' → logprob: -3.8490607738494873
    8. '                       ' → logprob: -4.349061012268066
    9. 'break' → logprob: -5.349061012268066
    10. '                ' → logprob: -6.849061012268066

Token 1879: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4295175075531006
    2. '=' → logprob: -1.0545175075531006
    3. ' -=' → logprob: -8.17951774597168
    4. '-=' → logprob: -8.92951774597168
    5. ' +=' → logprob: -9.17951774597168
    6. '   ' → logprob: -9.30451774597168
    7. '+=' → logprob: -9.42951774597168
    8. '           ' → logprob: -10.55451774597168
    9. '                   ' → logprob: -10.80451774597168
    10. '               ' → logprob: -11.05451774597168

Token 1880: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.0015035520773380995
    2. ' Seg' → logprob: -6.5015034675598145
    3. 'Segment' → logprob: -13.751503944396973
    4. 'seg' → logprob: -16.126502990722656
    5. '   ' → logprob: -17.001502990722656
    6. 'Se' → logprob: -17.251502990722656
    7. '_seg' → logprob: -17.751502990722656
    8. '```' → logprob: -18.001502990722656
    9. ' seg' → logprob: -18.376502990722656
    10. 'Segments' → logprob: -18.376502990722656

Token 1881: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -4.320199877838604e-07
    2. 'tree' → logprob: -15.625
    3. 'Seg' → logprob: -16.75
    4. 'Tre' → logprob: -17.25
    5. 'ree' → logprob: -17.375
    6. 'Segment' → logprob: -17.375
    7. 'ST' → logprob: -18.0
    8. 'Query' → logprob: -18.125
    9. 'Thread' → logprob: -19.25
    10. '_tree' → logprob: -19.375

Token 1882: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.0006547740194946527
    2. 'query' → logprob: -7.375654697418213
    3. '1' → logprob: -11.500655174255371
    4. 'Seg' → logprob: -11.625655174255371
    5. 'Query' → logprob: -12.125655174255371
    6. '```' → logprob: -13.250655174255371
    7. '$query' → logprob: -14.000655174255371
    8. '_tree' → logprob: -15.750655174255371
    9. '[' → logprob: -15.750655174255371
    10. '.query' → logprob: -16.250654220581055

Token 1883: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -2.3199920178740285e-05
    2. 'tree' → logprob: -11.000022888183594
    3. '```' → logprob: -12.125022888183594
    4. '	tree' → logprob: -14.500022888183594
    5. '(' → logprob: -15.000022888183594
    6. '(
' → logprob: -16.375022888183594
    7. ' tree' → logprob: -17.500022888183594
    8. '/tree' → logprob: -18.000022888183594
    9. '(t' → logprob: -18.625022888183594
    10. '   ' → logprob: -18.625022888183594

Token 1884: '1' (ID: 16)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.03929273784160614
    2. '1' → logprob: -3.539292812347412
    3. '(tree' → logprob: -4.664292812347412
    4. ' tree' → logprob: -10.164292335510254
    5. '```' → logprob: -11.289292335510254
    6. '2' → logprob: -11.789292335510254
    7. '	tree' → logprob: -11.789292335510254
    8. ',' → logprob: -13.414292335510254
    9. '   ' → logprob: -13.414292335510254
    10. '/tree' → logprob: -14.789292335510254

Token 1885: ',' (ID: 11)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.0002135534887202084
    2. ',' → logprob: -8.500213623046875
    3. '```' → logprob: -12.125213623046875
    4. 'tree' → logprob: -12.875213623046875
    5. '(' → logprob: -13.875213623046875
    6. '/tree' → logprob: -14.125213623046875
    7. '	tree' → logprob: -15.375213623046875
    8. '   ' → logprob: -16.500213623046875
    9. ' tree' → logprob: -17.250213623046875
    10. '[' → logprob: -17.625213623046875

Token 1886: ' num' (ID: 2269)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.16722272336483002
    2. ' tree' → logprob: -1.9172227382659912
    3. 'num' → logprob: -5.167222499847412
    4. ' num' → logprob: -6.667222499847412
    5. '(tree' → logprob: -13.91722297668457
    6. '	tree' → logprob: -15.16722297668457
    7. '```' → logprob: -15.16722297668457
    8. 'user' → logprob: -17.04222297668457
    9. 'token' → logprob: -17.04222297668457
    10. 'team' → logprob: -17.29222297668457

Token 1887: '1' (ID: 16)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2532179355621338
    2. '1' → logprob: -1.5032179355621338
    3. '2' → logprob: -7.878217697143555
    4. ',' → logprob: -8.003217697143555
    5. '   ' → logprob: -8.628217697143555
    6. ',num' → logprob: -9.003217697143555
    7. 'i' → logprob: -10.003217697143555
    8. '       ' → logprob: -10.003217697143555
    9. '```' → logprob: -10.253217697143555
    10. 'size' → logprob: -10.503217697143555

Token 1888: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16051718592643738
    2. '(tree' → logprob: -1.9105172157287598
    3. 'tree' → logprob: -8.535516738891602
    4. '```' → logprob: -10.035516738891602
    5. ' tree' → logprob: -10.785516738891602
    6. ' ,' → logprob: -11.785516738891602
    7. '	tree' → logprob: -11.910516738891602
    8. '(' → logprob: -11.910516738891602
    9. '/tree' → logprob: -12.660516738891602
    10. '   ' → logprob: -13.410516738891602

Token 1889: ' seg' (ID: 3055)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.4740770161151886
    2. 'num' → logprob: -0.9740769863128662
    3. ',num' → logprob: -18.724077224731445
    4. 'n' → logprob: -19.224077224731445
    5. '(num' → logprob: -19.349077224731445
    6. '	num' → logprob: -20.349077224731445
    7. '_num' → logprob: -20.349077224731445
    8. '[num' → logprob: -20.474077224731445
    9. ' ' → logprob: -20.599077224731445
    10. 'Num' → logprob: -20.849077224731445

Token 1890: 'func' (ID: 5652)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0004107732092961669
    2. ',' → logprob: -8.750411033630371
    3. 'i' → logprob: -9.250411033630371
    4. ',num' → logprob: -9.375411033630371
    5. ' num' → logprob: -10.625411033630371
    6. '_num' → logprob: -10.625411033630371
    7. 'n' → logprob: -12.125411033630371
    8. '(num' → logprob: -12.875411033630371
    9. '   ' → logprob: -13.000411033630371
    10. '2' → logprob: -13.250411033630371

Token 1891: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011058665812015533
    2. ',num' → logprob: -4.511058807373047
    3. ' ,' → logprob: -11.886058807373047
    4. ' num' → logprob: -12.886058807373047
    5. 'num' → logprob: -13.511058807373047
    6. ',n' → logprob: -18.386058807373047
    7. ',user' → logprob: -18.636058807373047
    8. ',len' → logprob: -19.011058807373047
    9. '   ' → logprob: -19.386058807373047
    10. ',size' → logprob: -19.386058807373047

Token 1892: ' ide' (ID: 2750)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.25192907452583313
    2. 'num' → logprob: -1.5019290447235107
    3. ' ' → logprob: -17.626928329467773
    4. ',num' → logprob: -18.126928329467773
    5. 'n' → logprob: -18.251928329467773
    6. '(num' → logprob: -18.501928329467773
    7. '	num' → logprob: -18.626928329467773
    8. '   ' → logprob: -19.126928329467773
    9. 'Num' → logprob: -19.251928329467773
    10. '[num' → logprob: -19.626928329467773

Token 1893: '_ele' (ID: 154942)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2064211070537567
    2. 'num' → logprob: -1.956421136856079
    3. '_num' → logprob: -3.331421136856079
    4. '1' → logprob: -6.4564208984375
    5. '   ' → logprob: -6.4564208984375
    6. ',' → logprob: -6.5814208984375
    7. '  ' → logprob: -7.3314208984375
    8. 'func' → logprob: -7.3314208984375
    9. '       ' → logprob: -8.3314208984375
    10. ' ' → logprob: -8.3314208984375

Token 1894: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022988072305452079
    2. ',num' → logprob: -8.500229835510254
    3. ' ,' → logprob: -10.625229835510254
    4. ' num' → logprob: -13.500229835510254
    5. 'num' → logprob: -14.500229835510254
    6. '       ' → logprob: -17.50023078918457
    7. ',temp' → logprob: -17.87523078918457
    8. ',n' → logprob: -18.00023078918457
    9. '   ' → logprob: -18.12523078918457
    10. ',user' → logprob: -19.00023078918457

Token 1895: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.05106062442064285
    2. ' R' → logprob: -3.176060676574707
    3. 'i' → logprob: -4.926060676574707
    4. ' i' → logprob: -7.551060676574707
    5. 'num' → logprob: -9.551060676574707
    6. '   ' → logprob: -9.676060676574707
    7. 'start' → logprob: -10.551060676574707
    8. 'end' → logprob: -11.051060676574707
    9. 'temp' → logprob: -11.051060676574707
    10. ' ' → logprob: -11.801060676574707

Token 1896: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08899345248937607
    2. ' +' → logprob: -2.463993549346924
    3. '```' → logprob: -9.963993072509766
    4. '+,' → logprob: -12.963993072509766
    5. ',' → logprob: -13.588993072509766
    6. '`' → logprob: -14.463993072509766
    7. '＋' → logprob: -14.713993072509766
    8. '+
' → logprob: -15.213993072509766
    9. '   ' → logprob: -15.213993072509766
    10. '2' → logprob: -15.338993072509766

Token 1897: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -14.750021934509277
    4. '2' → logprob: -16.375022888183594
    5. '   ' → logprob: -16.500022888183594
    6. '
' → logprob: -17.250022888183594
    7. '       ' → logprob: -17.312522888183594
    8. '                       ' → logprob: -17.437522888183594
    9. '+' → logprob: -17.437522888183594
    10. '`' → logprob: -17.812522888183594

Token 1898: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '+' → logprob: -16.250001907348633
    4. '```' → logprob: -16.625001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '           ' → logprob: -18.125001907348633
    7. '`' → logprob: -18.562501907348633
    8. '
' → logprob: -19.062501907348633
    9. '                       ' → logprob: -19.125001907348633
    10. '2' → logprob: -19.125001907348633

Token 1899: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001337624154984951
    2. ',num' → logprob: -6.62633752822876
    3. ' ,' → logprob: -12.126338005065918
    4. '   ' → logprob: -12.501338005065918
    5. '       ' → logprob: -14.251338005065918
    6. ',n' → logprob: -14.626338005065918
    7. '```' → logprob: -14.751338005065918
    8. 'num' → logprob: -15.251338005065918
    9. '           ' → logprob: -15.626338005065918
    10. ',r' → logprob: -15.751338005065918

Token 1900: ' N' (ID: 478)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.06198897212743759
    2. ' num' → logprob: -2.8119890689849854
    3. 'N' → logprob: -10.811988830566406
    4. ' N' → logprob: -14.936988830566406
    5. 'n' → logprob: -15.061988830566406
    6. 'Num' → logprob: -15.186988830566406
    7. '   ' → logprob: -16.436988830566406
    8. '```' → logprob: -16.436988830566406
    9. 'NUM' → logprob: -16.936988830566406
    10. '    ' → logprob: -17.811988830566406

Token 1901: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16035644710063934
    2. ')' → logprob: -1.9103564023971558
    3. '```' → logprob: -9.660356521606445
    4. '   ' → logprob: -10.660356521606445
    5. ')
' → logprob: -11.035356521606445
    6. '           ' → logprob: -11.160356521606445
    7. '       ' → logprob: -12.035356521606445
    8. '               ' → logprob: -13.160356521606445
    9. ')`
' → logprob: -13.285356521606445
    10. '``' → logprob: -13.410356521606445

Token 1902: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6915791034698486
    2. '```' → logprob: -1.8165791034698486
    3. '               ' → logprob: -1.9415791034698486
    4. '       ' → logprob: -2.0665791034698486
    5. '<|end|>' → logprob: -4.1915788650512695
    6. '                   ' → logprob: -4.1915788650512695
    7. ')' → logprob: -4.4415788650512695
    8. '   ' → logprob: -4.6915788650512695
    9. ')
' → logprob: -6.1915788650512695
    10. '          ' → logprob: -6.3165788650512695

Token 1903: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.3943741023540497
    2. ' temp' → logprob: -1.144374132156372
    3. '               ' → logprob: -5.644373893737793
    4. '                   ' → logprob: -6.144373893737793
    5. '```' → logprob: -6.769373893737793
    6. '+' → logprob: -8.394373893737793
    7. '           ' → logprob: -8.394373893737793
    8. '``' → logprob: -9.269373893737793
    9. '                       ' → logprob: -10.144373893737793
    10. '(temp' → logprob: -11.394373893737793

Token 1904: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25336071848869324
    2. '+=' → logprob: -1.5033607482910156
    3. '           ' → logprob: -7.378360748291016
    4. '   ' → logprob: -8.503360748291016
    5. '       ' → logprob: -8.878360748291016
    6. '          ' → logprob: -9.378360748291016
    7. '=' → logprob: -9.378360748291016
    8. '                   ' → logprob: -9.378360748291016
    9. '               ' → logprob: -9.503360748291016
    10. '```' → logprob: -11.003360748291016

Token 1905: ' beam' (ID: 36650)
  Prédit: ' beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beam' → logprob: -0.16022798418998718
    2. 'beam' → logprob: -1.9102280139923096
    3. ' ' → logprob: -13.53522777557373
    4. ' ' → logprob: -13.66022777557373
    5. '   ' → logprob: -14.91022777557373
    6. 'be' → logprob: -15.16022777557373
    7. '0' → logprob: -15.28522777557373
    8. ' beams' → logprob: -16.660228729248047
    9. '```' → logprob: -16.660228729248047
    10. 'Beam' → logprob: -17.160228729248047

Token 1906: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.250000953674316
    3. 'i' → logprob: -15.000000953674316
    4. '   ' → logprob: -16.875001907348633
    5. '```' → logprob: -18.375001907348633
    6. '(i' → logprob: -18.500001907348633
    7. '[
' → logprob: -19.375001907348633
    8. ' ' → logprob: -19.500001907348633
    9. ' [' → logprob: -19.875001907348633
    10. '{i' → logprob: -20.000001907348633

Token 1907: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5736820697784424
    2. '[' → logprob: -0.9486820697784424
    3. '][' → logprob: -3.0736820697784424
    4. '`' → logprob: -7.073681831359863
    5. '```' → logprob: -7.073681831359863
    6. ')[' → logprob: -7.823681831359863
    7. '   ' → logprob: -8.323681831359863
    8. ' [' → logprob: -9.323681831359863
    9. '>[' → logprob: -9.448681831359863
    10. '       ' → logprob: -9.573681831359863

Token 1908: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021030367352068424
    2. 'i' → logprob: -6.377102851867676
    3. '[i' → logprob: -8.502102851867676
    4. '[' → logprob: -9.127102851867676
    5. '1' → logprob: -9.627102851867676
    6. ' ' → logprob: -11.377102851867676
    7. ' i' → logprob: -12.752102851867676
    8. '(i' → logprob: -12.877102851867676
    9. '   ' → logprob: -13.127102851867676
    10. '```' → logprob: -13.502102851867676

Token 1909: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5807299017906189
    2. ' -' → logprob: -0.9557299017906189
    3. '-' → logprob: -2.9557299613952637
    4. ' ' → logprob: -7.330729961395264
    5. ')' → logprob: -7.455729961395264
    6. ']' → logprob: -7.580729961395264
    7. '[i' → logprob: -7.705729961395264
    8. '```' → logprob: -7.830729961395264
    9. '`' → logprob: -8.080729484558105
    10. '   ' → logprob: -8.205729484558105

Token 1910: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011049704626202583
    2. '-' → logprob: -4.511049747467041
    3. '```' → logprob: -13.761049270629883
    4. ' ' → logprob: -14.386049270629883
    5. ' ' → logprob: -16.261049270629883
    6. '   ' → logprob: -16.636049270629883
    7. '           ' → logprob: -18.261049270629883
    8. '        ' → logprob: -18.386049270629883
    9. '``' → logprob: -18.386049270629883
    10. '[' → logprob: -18.386049270629883

Token 1911: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0002728985855355859
    2. ' beam' → logprob: -8.750272750854492
    3. 'i' → logprob: -9.250272750854492
    4. ' i' → logprob: -12.250272750854492
    5. '   ' → logprob: -12.375272750854492
    6. 'bee' → logprob: -13.000272750854492
    7. '```' → logprob: -13.625272750854492
    8. ' ' → logprob: -13.875272750854492
    9. '1' → logprob: -14.375272750854492
    10. '[i' → logprob: -14.500272750854492

Token 1912: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2217915952205658
    2. '[i' → logprob: -2.0967915058135986
    3. '1' → logprob: -2.5967915058135986
    4. '-' → logprob: -6.971791744232178
    5. 'i' → logprob: -8.34679126739502
    6. '```' → logprob: -8.34679126739502
    7. ' [' → logprob: -10.59679126739502
    8. '   ' → logprob: -10.59679126739502
    9. ' ' → logprob: -10.84679126739502
    10. '(i' → logprob: -11.09679126739502

Token 1913: '][' (ID: 2696)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.284705251455307
    2. '[' → logprob: -1.4097052812576294
    3. '[i' → logprob: -6.03470516204834
    4. '][' → logprob: -7.03470516204834
    5. '-' → logprob: -8.53470516204834
    6. ']' → logprob: -10.28470516204834
    7. '   ' → logprob: -11.40970516204834
    8. '```' → logprob: -11.65970516204834
    9. 'i' → logprob: -12.03470516204834
    10. ' ' → logprob: -13.15970516204834

Token 1914: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.37500286102295
    3. '   ' → logprob: -14.62500286102295
    4. '<|end|>' → logprob: -14.62500286102295
    5. '```' → logprob: -15.37500286102295
    6. '<|end|>' → logprob: -15.62500286102295
    7. 'i' → logprob: -16.250003814697266
    8. '[' → logprob: -17.375003814697266
    9. '
' → logprob: -18.250003814697266
    10. '۱' → logprob: -18.687503814697266

Token 1915: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1099927425384521
    2. '       ' → logprob: -1.7349927425384521
    3. ')' → logprob: -1.9849927425384521
    4. ')
' → logprob: -2.234992742538452
    5. '```' → logprob: -2.359992742538452
    6. '           ' → logprob: -2.484992742538452
    7. '<|end|>' → logprob: -3.359992742538452
    8. ']
' → logprob: -3.984992742538452
    9. ']' → logprob: -4.734992980957031
    10. '   ' → logprob: -5.984992980957031

Token 1916: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003052458167076111
    2. '                   ' → logprob: -6.503052234649658
    3. '           ' → logprob: -7.378052234649658
    4. '```' → logprob: -7.753052234649658
    5. '                       ' → logprob: -8.128052711486816
    6. ' if' → logprob: -9.878052711486816
    7. '                ' → logprob: -10.128052711486816
    8. '              ' → logprob: -10.128052711486816
    9. '       ' → logprob: -10.878052711486816
    10. 'if' → logprob: -11.253052711486816

Token 1917: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13500817120075226
    2. 'if' (adapté à ' if') → logprob: -2.1350080966949463
    3. '                   ' → logprob: -5.510008335113525
    4. ' if' → logprob: -7.135008335113525
    5. '                       ' → logprob: -7.135008335113525
    6. '           ' → logprob: -7.510008335113525
    7. '              ' → logprob: -7.760008335113525
    8. '```' → logprob: -7.760008335113525
    9. '                ' → logprob: -8.135007858276367
    10. 'k' → logprob: -8.385007858276367

Token 1918: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.07972770184278488
    2. 'temp' → logprob: -2.5797276496887207
    3. ' ans' → logprob: -7.704727649688721
    4. ' S' → logprob: -9.829728126525879
    5. '(temp' → logprob: -10.079728126525879
    6. ' ' → logprob: -10.454728126525879
    7. 'ans' → logprob: -10.454728126525879
    8. ' not' → logprob: -10.704728126525879
    9. ' test' → logprob: -10.704728126525879
    10. '                   ' → logprob: -11.079728126525879

Token 1919: ' <=' (ID: 5017)
  Prédit: ' >>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >>=' → logprob: -0.45018935203552246
    2. '+=' → logprob: -2.3251893520355225
    3. ' +=' → logprob: -2.4501893520355225
    4. '>>' → logprob: -2.7001893520355225
    5. '       ' → logprob: -3.2001893520355225
    6. ' <<=' → logprob: -3.3251893520355225
    7. '   ' → logprob: -4.075189590454102
    8. '        ' → logprob: -5.450189590454102
    9. '               ' → logprob: -6.200189590454102
    10. '```' → logprob: -6.450189590454102

Token 1920: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31326526403427124
    2. '0' → logprob: -1.313265323638916
    3. ' ' → logprob: -13.063264846801758
    4. '               ' → logprob: -14.938264846801758
    5. '   ' → logprob: -15.188264846801758
    6. '```' → logprob: -15.313264846801758
    7. '  ' → logprob: -15.938264846801758
    8. '                   ' → logprob: -15.938264846801758
    9. '1' → logprob: -16.563264846801758
    10. '           ' → logprob: -16.813264846801758

Token 1921: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018041854491457343
    2. ' ' → logprob: -8.8751802444458
    3. '1' → logprob: -10.1251802444458
    4. '   ' → logprob: -15.3751802444458
    5. '
' → logprob: -16.375181198120117
    6. '```' → logprob: -16.375181198120117
    7. '  ' → logprob: -17.375181198120117
    8. '       ' → logprob: -17.875181198120117
    9. '-' → logprob: -17.875181198120117
    10. '               ' → logprob: -18.125181198120117

Token 1922: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.025374770164489746
    2. ':
' → logprob: -4.400374889373779
    3. ':' → logprob: -5.025374889373779
    4. '               ' → logprob: -5.525374889373779
    5. '                       ' → logprob: -6.525374889373779
    6. '           ' → logprob: -7.900374889373779
    7. '```' → logprob: -9.025374412536621
    8. '                  ' → logprob: -9.150374412536621
    9. '                    ' → logprob: -10.400374412536621
    10. '       ' → logprob: -11.025374412536621

Token 1923: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005523175350390375
    2. '                       ' → logprob: -7.750552177429199
    3. '               ' → logprob: -9.2505521774292
    4. 'temp' → logprob: -12.1255521774292
    5. '                  ' → logprob: -12.2505521774292
    6. '                           ' → logprob: -12.2505521774292
    7. '```' → logprob: -12.5005521774292
    8. '                    ' → logprob: -12.7505521774292
    9. '                ' → logprob: -13.7505521774292
    10. '           ' → logprob: -14.3755521774292

Token 1924: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.13425621390342712
    2. ' temp' → logprob: -2.13425612449646
    3. '                   ' → logprob: -5.134256362915039
    4. '               ' → logprob: -7.009256362915039
    5. '                       ' → logprob: -9.009256362915039
    6. '```' → logprob: -9.009256362915039
    7. '                               ' → logprob: -9.259256362915039
    8. '                ' → logprob: -10.259256362915039
    9. '                    ' → logprob: -10.509256362915039
    10. '           ' → logprob: -10.759256362915039

Token 1925: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013053566217422485
    2. '_' → logprob: -7.50130558013916
    3. '_tokens' → logprob: -8.37630558013916
    4. '=' → logprob: -8.62630558013916
    5. '   ' → logprob: -8.87630558013916
    6. '+=' → logprob: -9.00130558013916
    7. ' +=' → logprob: -10.87630558013916
    8. ' =' → logprob: -11.25130558013916
    9. '[' → logprob: -11.75130558013916
    10. '_=' → logprob: -11.87630558013916

Token 1926: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25199782848358154
    2. '=' → logprob: -1.5019978284835815
    3. '                   ' → logprob: -9.876997947692871
    4. '                       ' → logprob: -12.126997947692871
    5. '               ' → logprob: -12.751997947692871
    6. '                    ' → logprob: -13.001997947692871
    7. '                ' → logprob: -13.251997947692871
    8. '           ' → logprob: -13.626997947692871
    9. '                        ' → logprob: -13.876997947692871
    10. '```' → logprob: -14.126997947692871

Token 1927: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.386898398399353
    2. 'abs' → logprob: -1.136898398399353
    3. ' ans' → logprob: -10.886898040771484
    4. '(abs' → logprob: -12.011898040771484
    5. 'ans' → logprob: -13.761898040771484
    6. '_abs' → logprob: -13.886898040771484
    7. '.abs' → logprob: -15.011898040771484
    8. ' ' → logprob: -15.886898040771484
    9. ' ' → logprob: -17.011898040771484
    10. '0' → logprob: -17.261898040771484

Token 1928: '(temp' (ID: 19094)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -4.9186317482963204e-05
    2. ' temp' → logprob: -10.500049591064453
    3. '(temp' → logprob: -10.750049591064453
    4. 'tmp' → logprob: -16.625049591064453
    5. 'abs' → logprob: -16.750049591064453
    6. '$temp' → logprob: -17.250049591064453
    7. 'tem' → logprob: -17.625049591064453
    8. '[temp' → logprob: -18.250049591064453
    9. 'test' → logprob: -18.375049591064453
    10. '_temp' → logprob: -18.625049591064453

Token 1929: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02237587235867977
    2. ')' → logprob: -3.8973758220672607
    3. '               ' → logprob: -6.64737606048584
    4. '                   ' → logprob: -8.27237606048584
    5. '):
' → logprob: -9.52237606048584
    6. ')
' → logprob: -10.02237606048584
    7. '                       ' → logprob: -10.14737606048584
    8. '           ' → logprob: -10.14737606048584
    9. '       ' → logprob: -11.02237606048584
    10. '   ' → logprob: -11.39737606048584

Token 1930: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5019516348838806
    2. '                       ' → logprob: -1.0019516944885254
    3. '                    ' → logprob: -5.126951694488525
    4. '               ' → logprob: -5.126951694488525
    5. '```' → logprob: -5.376951694488525
    6. '                      ' → logprob: -6.251951694488525
    7. '                        ' → logprob: -6.626951694488525
    8. '                  ' → logprob: -6.626951694488525
    9. '                     ' → logprob: -7.001951694488525
    10. 'ans' → logprob: -7.126951694488525

Token 1931: ' B' (ID: 418)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3094966411590576
    2. ' ans' → logprob: -1.8094966411590576
    3. 'B' (adapté à ' B') → logprob: -2.3094966411590576
    4. ' B' → logprob: -6.059496879577637
    5. '                   ' → logprob: -7.434496879577637
    6. '               ' → logprob: -10.309496879577637
    7. '                    ' → logprob: -10.434496879577637
    8. '(ans' → logprob: -10.684496879577637
    9. '	ans' → logprob: -10.809496879577637
    10. 'Ans' → logprob: -10.934496879577637

Token 1932: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0556500069797039
    2. '=' → logprob: -2.930649995803833
    3. '```' → logprob: -8.555649757385254
    4. ',' → logprob: -8.805649757385254
    5. '                   ' → logprob: -9.305649757385254
    6. '               ' → logprob: -9.680649757385254
    7. '           ' → logprob: -9.805649757385254
    8. '[' → logprob: -9.930649757385254
    9. ' *' → logprob: -10.555649757385254
    10. '   ' → logprob: -10.805649757385254

Token 1933: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.5783971548080444
    2. ' beam' → logprob: -0.8283971548080444
    3. ' ans' → logprob: -6.703397274017334
    4. 'ans' → logprob: -6.703397274017334
    5. 'be' → logprob: -14.453396797180176
    6. '           ' → logprob: -16.203397750854492
    7. ' code' → logprob: -16.703397750854492
    8. ' ' → logprob: -16.828397750854492
    9. '```' → logprob: -17.078397750854492
    10. ' ' → logprob: -17.078397750854492

Token 1934: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.392202976712724e-06
    2. 'i' → logprob: -12.250006675720215
    3. '[' → logprob: -13.875006675720215
    4. '```' → logprob: -14.875006675720215
    5. '(i' → logprob: -16.3750057220459
    6. '{i' → logprob: -16.6250057220459
    7. '[j' → logprob: -17.7500057220459
    8. '`' → logprob: -18.0000057220459
    9. '   ' → logprob: -18.2500057220459
    10. '[user' → logprob: -19.0000057220459

Token 1935: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.40998345613479614
    2. '[' → logprob: -1.1599833965301514
    3. '][' → logprob: -3.7849833965301514
    4. ')[' → logprob: -9.40998363494873
    5. '```' → logprob: -11.03498363494873
    6. '   ' → logprob: -11.40998363494873
    7. '}[' → logprob: -12.15998363494873
    8. 'i' → logprob: -12.40998363494873
    9. ']' → logprob: -12.90998363494873
    10. '[
' → logprob: -12.90998363494873

Token 1936: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025354712270200253
    2. 'i' → logprob: -6.002535343170166
    3. '[i' → logprob: -10.377535820007324
    4. '[' → logprob: -11.252535820007324
    5. '```' → logprob: -12.502535820007324
    6. '
' → logprob: -12.877535820007324
    7. '   ' → logprob: -13.252535820007324
    8. '0' → logprob: -14.190035820007324
    9. '(i' → logprob: -14.377535820007324
    10. ' i' → logprob: -14.440035820007324

Token 1937: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9378238916397095
    2. '                   ' → logprob: -1.4378238916397095
    3. ']:
' → logprob: -1.5628238916397095
    4. '               ' → logprob: -2.81282377243042
    5. '```' → logprob: -3.56282377243042
    6. ':
' → logprob: -3.68782377243042
    7. '[' → logprob: -4.18782377243042
    8. '][' → logprob: -5.43782377243042
    9. '                       ' → logprob: -5.81282377243042
    10. ']
' → logprob: -6.06282377243042

Token 1938: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.411446750164032
    2. '                       ' → logprob: -1.2864468097686768
    3. '```' → logprob: -2.9114468097686768
    4. '               ' → logprob: -5.661446571350098
    5. 'if' → logprob: -6.661446571350098
    6. '                    ' → logprob: -7.911446571350098
    7. '                        ' → logprob: -8.036446571350098
    8. ' if' → logprob: -8.286446571350098
    9. '                  ' → logprob: -8.536446571350098
    10. '                      ' → logprob: -8.536446571350098

Token 1939: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02855398692190647
    2. '                       ' → logprob: -4.0285539627075195
    3. ' if' → logprob: -5.2785539627075195
    4. '                   ' → logprob: -5.2785539627075195
    5. '```' → logprob: -9.15355396270752
    6. '                           ' → logprob: -10.77855396270752
    7. '               ' → logprob: -11.52855396270752
    8. '``' → logprob: -12.77855396270752
    9. '           ' → logprob: -12.90355396270752
    10. '                    ' → logprob: -12.90355396270752

Token 1940: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20141616463661194
    2. ' B' → logprob: -1.7014161348342896
    3. '   ' → logprob: -13.576416015625
    4. ' ' → logprob: -14.576416015625
    5. '  ' → logprob: -14.951416015625
    6. '    ' → logprob: -15.451416015625
    7. '(B' → logprob: -15.701416015625
    8. '(' → logprob: -16.701416015625
    9. '           ' → logprob: -16.826416015625
    10. '	B' → logprob: -17.201416015625

Token 1941: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07895951718091965
    2. '*' → logprob: -2.5789594650268555
    3. '[' → logprob: -10.328959465026855
    4. '               ' → logprob: -11.828959465026855
    5. '*[' → logprob: -12.203959465026855
    6. '           ' → logprob: -12.453959465026855
    7. '                   ' → logprob: -12.578959465026855
    8. '   ' → logprob: -12.578959465026855
    9. '```' → logprob: -12.703959465026855
    10. ' ' → logprob: -12.953959465026855

Token 1942: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3133394420146942
    2. 'ans' → logprob: -1.3133394718170166
    3. '(ans' → logprob: -9.563339233398438
    4. '	ans' → logprob: -12.688339233398438
    5. '_ans' → logprob: -13.563339233398438
    6. ' ' → logprob: -14.188339233398438
    7. '           ' → logprob: -14.438339233398438
    8. '               ' → logprob: -14.563339233398438
    9. '
' → logprob: -14.688339233398438
    10. '   ' → logprob: -15.313339233398438

Token 1943: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -13.875000953674316
    3. '0' → logprob: -15.750000953674316
    4. '``' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.875001907348633
    6. '==' → logprob: -18.375001907348633
    7. '*' → logprob: -18.500001907348633
    8. '[
' → logprob: -18.750001907348633
    9. '               ' → logprob: -18.875001907348633
    10. '           ' → logprob: -18.875001907348633

Token 1944: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001314295077463612
    2. '1' → logprob: -9.375131607055664
    3. '[' → logprob: -10.250131607055664
    4. '   ' → logprob: -12.250131607055664
    5. ' ' → logprob: -12.500131607055664
    6. '2' → logprob: -14.125131607055664
    7. '```' → logprob: -14.437631607055664
    8. '
' → logprob: -15.062631607055664
    9. '  ' → logprob: -15.125131607055664
    10. 'ans' → logprob: -16.000131607055664

Token 1945: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6932023763656616
    2. ' <' → logprob: -0.6932023763656616
    3. '<int' → logprob: -11.693202018737793
    4. '                       ' → logprob: -11.943202018737793
    5. '<class' → logprob: -12.318202018737793
    6. '                   ' → logprob: -12.693202018737793
    7. '<size' → logprob: -12.818202018737793
    8. '<th' → logprob: -13.068202018737793
    9. '```' → logprob: -13.193202018737793
    10. '   ' → logprob: -13.443202018737793

Token 1946: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5759640336036682
    2. '<' → logprob: -0.8259640336036682
    3. '   ' → logprob: -12.200963973999023
    4. '[' → logprob: -12.575963973999023
    5. '<size' → logprob: -13.200963973999023
    6. '<int' → logprob: -13.325963973999023
    7. '<n' → logprob: -13.325963973999023
    8. '<=' → logprob: -13.575963973999023
    9. '  ' → logprob: -13.700963973999023
    10. '<data' → logprob: -14.075963973999023

Token 1947: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005566088366322219
    2. ' ans' → logprob: -7.500556468963623
    3. '               ' → logprob: -13.750556945800781
    4. '           ' → logprob: -13.875556945800781
    5. '                   ' → logprob: -13.875556945800781
    6. '(ans' → logprob: -16.00055694580078
    7. '	ans' → logprob: -16.62555694580078
    8. '                       ' → logprob: -16.62555694580078
    9. '       ' → logprob: -16.75055694580078
    10. '   ' → logprob: -16.75055694580078

Token 1948: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007024224614724517
    2. '0' → logprob: -7.375702381134033
    3. '           ' → logprob: -11.000702857971191
    4. '   ' → logprob: -11.125702857971191
    5. '               ' → logprob: -11.250702857971191
    6. '                   ' → logprob: -11.625702857971191
    7. '       ' → logprob: -11.875702857971191
    8. '                       ' → logprob: -12.000702857971191
    9. '```' → logprob: -12.625702857971191
    10. '``' → logprob: -13.750702857971191

Token 1949: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06461607664823532
    2. '0' → logprob: -2.8146159648895264
    3. '[' → logprob: -6.5646162033081055
    4. 'ans' → logprob: -6.9396162033081055
    5. '   ' → logprob: -9.064616203308105
    6. ' ' → logprob: -10.439616203308105
    7. 'i' → logprob: -10.439616203308105
    8. '2' → logprob: -10.564616203308105
    9. '-' → logprob: -11.002116203308105
    10. '
' → logprob: -11.627116203308105

Token 1950: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.349797785282135
    2. ' *' → logprob: -1.2247977256774902
    3. '                   ' → logprob: -6.84979772567749
    4. '                       ' → logprob: -8.974798202514648
    5. '```' → logprob: -9.599798202514648
    6. '[' → logprob: -10.474798202514648
    7. '                    ' → logprob: -11.349798202514648
    8. '                     ' → logprob: -11.724798202514648
    9. ']' → logprob: -11.974798202514648
    10. ')' → logprob: -12.474798202514648

Token 1951: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47411012649536133
    2. ' *' → logprob: -0.9741101264953613
    3. '                       ' → logprob: -11.724109649658203
    4. '                   ' → logprob: -11.724109649658203
    5. '*t' → logprob: -12.099109649658203
    6. '                    ' → logprob: -13.224109649658203
    7. '```' → logprob: -13.224109649658203
    8. '                        ' → logprob: -13.599109649658203
    9. '*[' → logprob: -13.849109649658203
    10. ' ' → logprob: -14.349109649658203

Token 1952: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.02324780821800232
    2. ' temp' → logprob: -3.773247718811035
    3. 'tmp' → logprob: -14.148247718811035
    4. '[temp' → logprob: -14.648247718811035
    5. '(temp' → logprob: -14.898247718811035
    6. '$temp' → logprob: -15.648247718811035
    7. 'ans' → logprob: -15.773247718811035
    8. '_temp' → logprob: -16.02324867248535
    9. '	temp' → logprob: -16.14824867248535
    10. 'tem' → logprob: -16.52324867248535

Token 1953: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5261077880859375
    2. '2' → logprob: -0.9011077880859375
    3. '*' → logprob: -6.7761077880859375
    4. '0' → logprob: -7.1511077880859375
    5. '   ' → logprob: -7.7761077880859375
    6. '```' → logprob: -8.401107788085938
    7. '       ' → logprob: -8.651107788085938
    8. '                       ' → logprob: -9.776107788085938
    9. '*[' → logprob: -10.526107788085938
    10. '               ' → logprob: -10.526107788085938

Token 1954: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4372888207435608
    2. '*' → logprob: -1.437288761138916
    3. ' *' → logprob: -2.312288761138916
    4. '                   ' → logprob: -4.687288761138916
    5. ':' → logprob: -5.687288761138916
    6. ':
' → logprob: -6.437288761138916
    7. '                           ' → logprob: -6.812288761138916
    8. '               ' → logprob: -7.187288761138916
    9. '```' → logprob: -7.312288761138916
    10. ' and' → logprob: -8.437289237976074

Token 1955: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002889990573748946
    2. '                   ' → logprob: -6.252890110015869
    3. '                           ' → logprob: -7.627890110015869
    4. '```' → logprob: -8.127889633178711
    5. '                               ' → logprob: -9.752889633178711
    6. '               ' → logprob: -10.252889633178711
    7. '                        ' → logprob: -10.502889633178711
    8. '                      ' → logprob: -11.127889633178711
    9. '                     ' → logprob: -12.002889633178711
    10. 'print' → logprob: -12.002889633178711

Token 1956: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.008620485663414001
    2. ' ans' → logprob: -4.758620262145996
    3. '   ' → logprob: -13.258620262145996
    4. '                       ' → logprob: -13.508620262145996
    5. '                   ' → logprob: -13.758620262145996
    6. '	ans' → logprob: -14.258620262145996
    7. '                           ' → logprob: -14.883620262145996
    8. '           ' → logprob: -15.133620262145996
    9. '               ' → logprob: -15.633620262145996
    10. '(ans' → logprob: -16.258621215820312

Token 1957: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759442448616028
    2. '=' → logprob: -0.8259442448616028
    3. '=[' → logprob: -13.575943946838379
    4. '[' → logprob: -13.825943946838379
    5. '   ' → logprob: -14.575943946838379
    6. '                       ' → logprob: -14.700943946838379
    7. '           ' → logprob: -14.825943946838379
    8. '                   ' → logprob: -15.075943946838379
    9. '                           ' → logprob: -15.450943946838379
    10. '＝' → logprob: -16.075944900512695

Token 1958: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.39980271458625793
    2. '[t' → logprob: -1.3998026847839355
    3. '[' → logprob: -2.7748026847839355
    4. '[temp' → logprob: -4.0248026847839355
    5. '[i' → logprob: -6.6498026847839355
    6. '[test' → logprob: -7.6498026847839355
    7. '[start' → logprob: -8.274803161621094
    8. '[token' → logprob: -9.149803161621094
    9. '[val' → logprob: -9.274803161621094
    10. '[data' → logprob: -9.274803161621094

Token 1959: 'temp' (ID: 7340)
  Prédit: 'temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.2946656048297882
    2. 'ans' → logprob: -1.4196655750274658
    3. 'B' → logprob: -5.044665813446045
    4. '[' → logprob: -5.419665813446045
    5. '[temp' → logprob: -6.294665813446045
    6. '0' → logprob: -7.794665813446045
    7. ' ans' → logprob: -9.669665336608887
    8. 'tmp' → logprob: -10.044665336608887
    9. '[B' → logprob: -10.044665336608887
    10. '   ' → logprob: -10.419665336608887

Token 1960: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23713275790214539
    2. '[' → logprob: -1.6121327877044678
    3. '0' → logprob: -4.487132549285889
    4. '```' → logprob: -8.237133026123047
    5. '   ' → logprob: -9.237133026123047
    6. '...' → logprob: -11.737133026123047
    7. '``' → logprob: -12.112133026123047
    8. ',' → logprob: -12.612133026123047
    9. ' ' → logprob: -12.737133026123047
    10. '-' → logprob: -12.862133026123047

Token 1961: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.64708495605737e-05
    2. '                       ' → logprob: -10.625066757202148
    3. '                   ' → logprob: -11.125066757202148
    4. '               ' → logprob: -12.250066757202148
    5. '           ' → logprob: -12.250066757202148
    6. ' ,' → logprob: -12.375066757202148
    7. '                           ' → logprob: -12.500066757202148
    8. '[' → logprob: -12.500066757202148
    9. ',b' → logprob: -13.000066757202148
    10. ',B' → logprob: -14.250066757202148

Token 1962: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10020732134580612
    2. ' B' → logprob: -2.3502073287963867
    3. 'ans' → logprob: -15.975207328796387
    4. '	B' → logprob: -16.10020637512207
    5. 'beam' → logprob: -16.22520637512207
    6. '_B' → logprob: -16.47520637512207
    7. ' ans' → logprob: -16.47520637512207
    8. '>B' → logprob: -16.97520637512207
    9. 'Ｂ' → logprob: -16.97520637512207
    10. '   ' → logprob: -17.22520637512207

Token 1963: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.44471099972724915
    2. '                   ' → logprob: -2.0697109699249268
    3. '               ' → logprob: -2.1947109699249268
    4. '           ' → logprob: -3.0697109699249268
    5. '                       ' → logprob: -3.3197109699249268
    6. ']
' → logprob: -4.069711208343506
    7. '       ' → logprob: -4.944711208343506
    8. ')' → logprob: -5.444711208343506
    9. '   ' → logprob: -5.569711208343506
    10. '<|end|>' → logprob: -6.194711208343506

Token 1964: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013202552509028465
    2. '```' → logprob: -9.000131607055664
    3. '``' → logprob: -12.500131607055664
    4. ' print' → logprob: -12.750131607055664
    5. '   ' → logprob: -13.500131607055664
    6. '<|end|>' → logprob: -15.500131607055664
    7. ')' → logprob: -16.250131607055664
    8. 'for' → logprob: -16.500131607055664
    9. 'if' → logprob: -17.125131607055664
    10. ')
' → logprob: -17.375131607055664

Token 1965: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020652047533076257
    2. ' print' → logprob: -8.87520694732666
    3. ')' → logprob: -10.62520694732666
    4. '   ' → logprob: -10.62520694732666
    5. 'for' → logprob: -12.25020694732666
    6. '       ' → logprob: -12.62520694732666
    7. ')
' → logprob: -13.50020694732666
    8. '```' → logprob: -13.50020694732666
    9. '           ' → logprob: -13.62520694732666
    10. '
' → logprob: -13.75020694732666

Token 1966: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03766879439353943
    2. ':' → logprob: -3.6626687049865723
    3. ':
' → logprob: -4.787668704986572
    4. ' continue' → logprob: -6.912668704986572
    5. '               ' → logprob: -7.162668704986572
    6. 'continue' → logprob: -7.662668704986572
    7. '```' → logprob: -7.787668704986572
    8. '       ' → logprob: -8.53766918182373
    9. '   ' → logprob: -10.16266918182373
    10. '                   ' → logprob: -11.03766918182373

Token 1967: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10944902151823044
    2. '       ' → logprob: -3.3594489097595215
    3. '               ' → logprob: -3.4844489097595215
    4. '   ' → logprob: -4.3594489097595215
    5. ' pass' → logprob: -4.8594489097595215
    6. 'pass' → logprob: -5.2344489097595215
    7. 'continue' → logprob: -5.2344489097595215
    8. '                   ' → logprob: -6.2344489097595215
    9. 'break' → logprob: -6.8594489097595215
    10. ' break' → logprob: -6.8594489097595215

Token 1968: ' if' (ID: 538)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.8861902356147766
    2. 'break' → logprob: -1.0111901760101318
    3. '           ' → logprob: -2.261190176010132
    4. '               ' → logprob: -3.386190176010132
    5. 'continue' → logprob: -3.886190176010132
    6. '   ' → logprob: -4.136190414428711
    7. 'print' → logprob: -4.261190414428711
    8. '       ' → logprob: -4.636190414428711
    9. 'heap' → logprob: -5.261190414428711
    10. ' pass' → logprob: -5.386190414428711

Token 1969: ' start' (ID: 1604)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.7124285697937012
    2. 'cnt' → logprob: -1.3374285697937012
    3. ' beam' → logprob: -2.837428569793701
    4. ' start' → logprob: -3.212428569793701
    5. 'beam' → logprob: -3.837428569793701
    6. ' i' → logprob: -4.087428569793701
    7. ' m' → logprob: -4.337428569793701
    8. ' ans' → logprob: -4.462428569793701
    9. 'start' → logprob: -4.587428569793701
    10. ' S' → logprob: -4.712428569793701

Token 1970: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -6.301394023466855e-05
    2. 'arr' → logprob: -9.750062942504883
    3. '[i' → logprob: -12.750062942504883
    4. '```' → logprob: -14.000062942504883
    5. '[' → logprob: -15.375062942504883
    6. 'Arr' → logprob: -15.500062942504883
    7. '	arr' → logprob: -15.625062942504883
    8. '   ' → logprob: -16.125062942504883
    9. '[arr' → logprob: -17.000062942504883
    10. '_array' → logprob: -17.500062942504883

Token 1971: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4121114822482923e-06
    2. 'i' → logprob: -13.375003814697266
    3. '[' → logprob: -14.250003814697266
    4. '```' → logprob: -15.000003814697266
    5. '[start' → logprob: -15.500003814697266
    6. '[j' → logprob: -15.875003814697266
    7. '(i' → logprob: -16.250003814697266
    8. '[user' → logprob: -16.625003814697266
    9. '   ' → logprob: -17.250003814697266
    10. ']' → logprob: -17.375003814697266

Token 1972: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009127969853579998
    2. ']==' → logprob: -5.384128093719482
    3. '[i' → logprob: -5.509128093719482
    4. '==' → logprob: -8.634127616882324
    5. '[' → logprob: -9.134127616882324
    6. '```' → logprob: -10.259127616882324
    7. '][' → logprob: -10.509127616882324
    8. ' ==' → logprob: -10.634127616882324
    9. 'i' → logprob: -11.134127616882324
    10. ']!=' → logprob: -11.134127616882324

Token 1973: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7080132961273193
    2. ' ==' → logprob: -0.7080132961273193
    3. ']' → logprob: -4.833013534545898
    4. ']==' → logprob: -6.208013534545898
    5. '!=' → logprob: -6.708013534545898
    6. '[' → logprob: -7.083013534545898
    7. ' !=' → logprob: -7.208013534545898
    8. ' is' → logprob: -7.333013534545898
    9. '==-' → logprob: -7.333013534545898
    10. ')' → logprob: -8.458013534545898

Token 1974: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0012102338951081038
    2. ' -' → logprob: -7.0012102127075195
    3. 'm' → logprob: -8.62621021270752
    4. 'i' → logprob: -9.12621021270752
    5. ' m' → logprob: -12.62621021270752
    6. ' i' → logprob: -13.12621021270752
    7. '-i' → logprob: -13.25121021270752
    8. 'None' → logprob: -14.00121021270752
    9. '   ' → logprob: -14.37621021270752
    10. '-m' → logprob: -14.50121021270752

Token 1975: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23175811767578125
    2. '1' → logprob: -1.6067581176757812
    3. 'i' → logprob: -5.106758117675781
    4. 'm' → logprob: -8.481758117675781
    5. ' -' → logprob: -10.231758117675781
    6. '-i' → logprob: -11.731758117675781
    7. ' ' → logprob: -12.856758117675781
    8. '   ' → logprob: -12.981758117675781
    9. ' i' → logprob: -12.981758117675781
    10. 'None' → logprob: -13.106758117675781

Token 1976: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33611056208610535
    2. ':
' → logprob: -1.3361105918884277
    3. ':' → logprob: -4.211110591888428
    4. '           ' → logprob: -5.211110591888428
    5. '                   ' → logprob: -7.211110591888428
    6. '                       ' → logprob: -8.08611011505127
    7. '       ' → logprob: -8.21111011505127
    8. '              ' → logprob: -8.21111011505127
    9. ',' → logprob: -8.96111011505127
    10. '[' → logprob: -9.08611011505127

Token 1977: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20476028323173523
    2. '```' → logprob: -1.9547603130340576
    3. '           ' → logprob: -3.4547603130340576
    4. '                   ' → logprob: -5.9547600746154785
    5. 'heap' → logprob: -5.9547600746154785
    6. 'continue' → logprob: -6.2047600746154785
    7. 'temp' → logprob: -6.3297600746154785
    8. '``' → logprob: -6.7047600746154785
    9. '   ' → logprob: -6.8297600746154785
    10. 'for' → logprob: -8.704760551452637

Token 1978: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.07537387311458588
    2. '               ' → logprob: -3.700373888015747
    3. 'continue' → logprob: -4.075373649597168
    4. 'for' → logprob: -4.075373649597168
    5. '           ' → logprob: -5.575373649597168
    6. 'heap' → logprob: -6.075373649597168
    7. '```' → logprob: -6.200373649597168
    8. 'test' → logprob: -6.325373649597168
    9. '                   ' → logprob: -6.450373649597168
    10. '   ' → logprob: -7.950373649597168

Token 1979: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3502867519855499
    2. '=' → logprob: -1.2252867221832275
    3. ' >>=' → logprob: -6.975286960601807
    4. '>>' → logprob: -8.100286483764648
    5. ' <<=' → logprob: -8.100286483764648
    6. '   ' → logprob: -9.225286483764648
    7. ' ' → logprob: -10.100286483764648
    8. '```' → logprob: -10.100286483764648
    9. '+=' → logprob: -10.850286483764648
    10. ' +=' → logprob: -10.975286483764648

Token 1980: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.02631865069270134
    2. ' Seg' → logprob: -3.6513185501098633
    3. 'Segment' → logprob: -11.276318550109863
    4. 'heap' → logprob: -13.901318550109863
    5. '-S' → logprob: -14.026318550109863
    6. 'seg' → logprob: -14.026318550109863
    7. ' seg' → logprob: -14.526318550109863
    8. '0' → logprob: -14.651318550109863
    9. 'Segments' → logprob: -14.651318550109863
    10. '_seg' → logprob: -15.151318550109863

Token 1981: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -3.128163257315464e-07
    2. 'tree' → logprob: -15.375
    3. ' Tree' → logprob: -17.875
    4. '_tree' → logprob: -18.125
    5. 'Tre' → logprob: -18.25
    6. 'ree' → logprob: -19.125
    7. '	Tree' → logprob: -19.25
    8. '
' → logprob: -20.0
    9. '<Tree' → logprob: -20.375
    10. 'TREE' → logprob: -20.625

Token 1982: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.00043555660522542894
    2. 'query' → logprob: -7.7504353523254395
    3. '_tree' → logprob: -12.875435829162598
    4. ' query' → logprob: -14.500435829162598
    5. 'Query' → logprob: -14.625435829162598
    6. '```' → logprob: -14.750435829162598
    7. '[' → logprob: -15.625435829162598
    8. '$query' → logprob: -15.625435829162598
    9. '.query' → logprob: -16.12543487548828
    10. '(query' → logprob: -16.50043487548828

Token 1983: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.62500286102295
    3. '```' → logprob: -14.00000286102295
    4. 'tree' → logprob: -14.25000286102295
    5. '	tree' → logprob: -17.125003814697266
    6. '(
' → logprob: -17.375003814697266
    7. '(trace' → logprob: -18.500003814697266
    8. ' (' → logprob: -19.000003814697266
    9. '(table' → logprob: -19.250003814697266
    10. '/tree' → logprob: -19.375003814697266

Token 1984: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026872646412812173
    2. 'tree' → logprob: -8.625268936157227
    3. 'num' → logprob: -10.250268936157227
    4. ',' → logprob: -11.125268936157227
    5. '```' → logprob: -11.250268936157227
    6. '(tree' → logprob: -11.500268936157227
    7. '2' → logprob: -11.750268936157227
    8. 'start' → logprob: -12.250268936157227
    9. '(' → logprob: -13.875268936157227
    10. '[' → logprob: -14.625268936157227

Token 1985: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.541112427134067e-05
    2. ',num' → logprob: -9.500075340270996
    3. 'num' → logprob: -15.250075340270996
    4. ' ,' → logprob: -16.125076293945312
    5. '```' → logprob: -16.875076293945312
    6. ' num' → logprob: -17.500076293945312
    7. '(num' → logprob: -17.875076293945312
    8. 'Num' → logprob: -19.000076293945312
    9. ',user' → logprob: -19.000076293945312
    10. '       ' → logprob: -19.125076293945312

Token 1986: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.10020667314529419
    2. ' num' → logprob: -2.3502066135406494
    3. ',num' → logprob: -18.47520637512207
    4. '(num' → logprob: -18.72520637512207
    5. '```' → logprob: -18.72520637512207
    6. 'n' → logprob: -18.97520637512207
    7. 'number' → logprob: -19.10020637512207
    8. '	num' → logprob: -19.22520637512207
    9. 'Num' → logprob: -19.35020637512207
    10. '_num' → logprob: -19.85020637512207

Token 1987: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00838739238679409
    2. 'num' → logprob: -5.008387565612793
    3. ',' → logprob: -6.508387565612793
    4. ',num' → logprob: -9.008387565612793
    5. '```' → logprob: -10.258387565612793
    6. '   ' → logprob: -12.008387565612793
    7. '       ' → logprob: -12.758387565612793
    8. '(num' → logprob: -13.133387565612793
    9. '_,' → logprob: -13.633387565612793
    10. ' num' → logprob: -13.883387565612793

Token 1988: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004904801025986671
    2. ',num' → logprob: -7.625490665435791
    3. ' ,' → logprob: -13.875490188598633
    4. 'num' → logprob: -15.375490188598633
    5. '```' → logprob: -15.500490188598633
    6. '[num' → logprob: -15.750490188598633
    7. ' num' → logprob: -15.875490188598633
    8. '(num' → logprob: -16.125490188598633
    9. ',user' → logprob: -16.375490188598633
    10. '[' → logprob: -16.375490188598633

Token 1989: ' seg' (ID: 3055)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.01815006136894226
    2. ' num' → logprob: -4.0181498527526855
    3. '0' → logprob: -16.768150329589844
    4. 'n' → logprob: -18.518150329589844
    5. 'Num' → logprob: -18.518150329589844
    6. ' ' → logprob: -18.643150329589844
    7. '(num' → logprob: -19.018150329589844
    8. 'm' → logprob: -19.268150329589844
    9. '_num' → logprob: -19.268150329589844
    10. ',num' → logprob: -19.268150329589844

Token 1990: 'func' (ID: 5652)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013366802595555782
    2. 'num' → logprob: -4.63836669921875
    3. '```' → logprob: -6.88836669921875
    4. ',' → logprob: -7.01336669921875
    5. 'i' → logprob: -7.26336669921875
    6. '2' → logprob: -7.88836669921875
    7. '_num' → logprob: -9.38836669921875
    8. ')' → logprob: -9.63836669921875
    9. 'size' → logprob: -9.63836669921875
    10. '   ' → logprob: -9.76336669921875

Token 1991: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1782583391759545e-05
    2. ',num' → logprob: -10.375031471252441
    3. ' ,' → logprob: -15.250031471252441
    4. '```' → logprob: -16.625032424926758
    5. 'num' → logprob: -16.875032424926758
    6. ',end' → logprob: -17.375032424926758
    7. ',user' → logprob: -17.375032424926758
    8. ',n' → logprob: -17.500032424926758
    9. ' num' → logprob: -18.000032424926758
    10. ')' → logprob: -18.250032424926758

Token 1992: ' ide' (ID: 2750)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.006715370807796717
    2. ' num' → logprob: -5.006715297698975
    3. ' ' → logprob: -18.256715774536133
    4. '           ' → logprob: -18.256715774536133
    5. '        ' → logprob: -18.881715774536133
    6. '       ' → logprob: -18.881715774536133
    7. 'start' → logprob: -18.881715774536133
    8. '   ' → logprob: -19.131715774536133
    9. '               ' → logprob: -19.131715774536133
    10. '	num' → logprob: -19.131715774536133

Token 1993: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.14213164150714874
    2. 'ele' → logprob: -2.7671315670013428
    3. '_num' → logprob: -3.3921315670013428
    4. 'num' → logprob: -4.392131805419922
    5. '1' → logprob: -4.517131805419922
    6. 'ide' → logprob: -5.142131805419922
    7. '[num' → logprob: -5.767131805419922
    8. ',num' → logprob: -7.142131805419922
    9. 'el' → logprob: -7.517131805419922
    10. 'let' → logprob: -7.642131805419922

Token 1994: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.166338137816638e-05
    2. ',num' → logprob: -10.500031471252441
    3. ' ,' → logprob: -13.500031471252441
    4. ',end' → logprob: -14.375031471252441
    5. '       ' → logprob: -14.875031471252441
    6. 'num' → logprob: -15.125031471252441
    7. ',temp' → logprob: -15.375031471252441
    8. ',user' → logprob: -15.500031471252441
    9. '   ' → logprob: -15.875031471252441
    10. ',n' → logprob: -16.250032424926758

Token 1995: ' m' (ID: 284)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.613639235496521
    2. 'num' → logprob: -1.113639235496521
    3. ' i' → logprob: -2.8636393547058105
    4. ' num' → logprob: -3.2386393547058105
    5. 'm' → logprob: -3.4886393547058105
    6. ' m' → logprob: -5.8636393547058105
    7. 'temp' → logprob: -8.238638877868652
    8. 'start' → logprob: -9.113638877868652
    9. '0' → logprob: -9.988638877868652
    10. ' temp' → logprob: -10.238638877868652

Token 1996: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002892258344218135
    2. ' ,' → logprob: -9.500288963317871
    3. ',num' → logprob: -10.000288963317871
    4. '+' → logprob: -10.125288963317871
    5. '   ' → logprob: -10.375288963317871
    6. '```' → logprob: -11.375288963317871
    7. '       ' → logprob: -11.500288963317871
    8. '           ' → logprob: -11.500288963317871
    9. ',r' → logprob: -11.500288963317871
    10. ',i' → logprob: -11.750288963317871

Token 1997: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05066147446632385
    2. '0' → logprob: -3.050661563873291
    3. ' ' → logprob: -6.675661563873291
    4. 'i' → logprob: -8.050661087036133
    5. ',' → logprob: -8.800661087036133
    6. '```' → logprob: -9.300661087036133
    7. ')' → logprob: -9.675661087036133
    8. ' i' → logprob: -10.300661087036133
    9. '+' → logprob: -10.550661087036133
    10. '<|end|>' → logprob: -11.050661087036133

Token 1998: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011439072113716975
    2. ' ' → logprob: -9.125114440917969
    3. '0' → logprob: -12.625114440917969
    4. '2' → logprob: -13.875114440917969
    5. '```' → logprob: -14.937614440917969
    6. '(' → logprob: -16.25011444091797
    7. '   ' → logprob: -16.43761444091797
    8. '-' → logprob: -16.68761444091797
    9. '  ' → logprob: -16.68761444091797
    10. ',' → logprob: -16.87511444091797

Token 1999: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002405027626082301
    2. '   ' → logprob: -7.127405166625977
    3. ' ,' → logprob: -7.127405166625977
    4. '+' → logprob: -8.002405166625977
    5. ',num' → logprob: -9.127405166625977
    6. '-' → logprob: -9.377405166625977
    7. ' +' → logprob: -10.127405166625977
    8. '```' → logprob: -10.252405166625977
    9. ',r' → logprob: -10.502405166625977
    10. '+,' → logprob: -10.502405166625977

Token 2000: ' N' (ID: 478)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.07155512273311615
    2. 'temp' → logprob: -2.9465551376342773
    3. ' num' → logprob: -4.821555137634277
    4. 'm' → logprob: -5.321555137634277
    5. 'i' → logprob: -6.196555137634277
    6. ' temp' → logprob: -6.696555137634277
    7. ' m' → logprob: -8.946555137634277
    8. ' i' → logprob: -9.696555137634277
    9. 'N' → logprob: -9.821555137634277
    10. 'n' → logprob: -10.571555137634277

Token 2001: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4755112826824188
    2. ')' → logprob: -0.9755113124847412
    3. '       ' → logprob: -7.350511074066162
    4. '               ' → logprob: -8.85051155090332
    5. '   ' → logprob: -8.97551155090332
    6. '```' → logprob: -9.10051155090332
    7. ')
' → logprob: -9.22551155090332
    8. '           ' → logprob: -9.35051155090332
    9. '+' → logprob: -9.60051155090332
    10. ',' → logprob: -9.60051155090332

Token 2002: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26685309410095215
    2. '       ' → logprob: -2.266853094100952
    3. '```' → logprob: -2.391853094100952
    4. ')' → logprob: -4.516853332519531
    5. '           ' → logprob: -4.766853332519531
    6. '
' → logprob: -5.641853332519531
    7. ')
' → logprob: -6.016853332519531
    8. '                   ' → logprob: -6.016853332519531
    9. '<|end|>' → logprob: -6.266853332519531
    10. '+' → logprob: -6.266853332519531

Token 2003: ' temp' (ID: 5484)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.164683535695076
    2. '                ' → logprob: -2.9146835803985596
    3. '                   ' → logprob: -2.9146835803985596
    4. ' temp' → logprob: -4.2896833419799805
    5. ' l' → logprob: -4.5396833419799805
    6. 'temp' (adapté à ' temp') → logprob: -5.4146833419799805
    7. '```' → logprob: -5.7896833419799805
    8. '           ' → logprob: -5.9146833419799805
    9. '       ' → logprob: -6.4146833419799805
    10. '                    ' → logprob: -6.5396833419799805

Token 2004: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4659106731414795
    2. '+=' → logprob: -1.0909106731414795
    3. ' >>=' → logprob: -4.090910911560059
    4. '=' → logprob: -4.840910911560059
    5. ' -=' → logprob: -5.215910911560059
    6. ' =' → logprob: -6.340910911560059
    7. ' <<=' → logprob: -6.465910911560059
    8. ',' → logprob: -6.840910911560059
    9. '>>' → logprob: -7.090910911560059
    10. '-=' → logprob: -7.590910911560059

Token 2005: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.4291161298751831
    2. ' beam' → logprob: -1.054116129875183
    3. '-' → logprob: -8.429116249084473
    4. '-be' → logprob: -9.679116249084473
    5. ' -' → logprob: -9.929116249084473
    6. '0' → logprob: -10.554116249084473
    7. ' ' → logprob: -10.804116249084473
    8. ' ' → logprob: -11.554116249084473
    9. 'be' → logprob: -11.804116249084473
    10. '   ' → logprob: -12.804116249084473

Token 2006: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.750000953674316
    3. '[' → logprob: -15.000000953674316
    4. 'i' → logprob: -15.250000953674316
    5. '`' → logprob: -16.125001907348633
    6. '(i' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '\[' → logprob: -18.750001907348633
    9. '[I' → logprob: -19.000001907348633
    10. '[m' → logprob: -19.375001907348633

Token 2007: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03500755503773689
    2. '[i' → logprob: -3.4100074768066406
    3. '[' → logprob: -7.285007476806641
    4. ')[' → logprob: -8.28500747680664
    5. '>[' → logprob: -9.03500747680664
    6. '`' → logprob: -9.66000747680664
    7. '}[' → logprob: -9.91000747680664
    8. ']' → logprob: -10.03500747680664
    9. ' ][' → logprob: -10.66000747680664
    10. 'i' → logprob: -10.78500747680664

Token 2008: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.375000953674316
    3. '1' → logprob: -14.500000953674316
    4. '[' → logprob: -15.750000953674316
    5. '```' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '-' → logprob: -19.500001907348633
    8. '  ' → logprob: -19.500001907348633
    9. '۰' → logprob: -19.750001907348633
    10. '
' → logprob: -19.875001907348633

Token 2009: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07573586702346802
    2. '[' → logprob: -3.3257358074188232
    3. ' -' → logprob: -4.075736045837402
    4. ')' → logprob: -4.450736045837402
    5. '-' → logprob: -5.450736045837402
    6. '][' → logprob: -6.575736045837402
    7. '`' → logprob: -7.450736045837402
    8. ']-' → logprob: -7.700736045837402
    9. ' ' → logprob: -7.950736045837402
    10. '```' → logprob: -8.700736045837402

Token 2010: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16026048362255096
    2. '-' → logprob: -1.9102604389190674
    3. '[' → logprob: -11.410260200500488
    4. ' ' → logprob: -11.535260200500488
    5. '```' → logprob: -12.035260200500488
    6. '`' → logprob: -13.535260200500488
    7. ' ' → logprob: -13.535260200500488
    8. '
' → logprob: -13.910260200500488
    9. '   ' → logprob: -13.910260200500488
    10. ')' → logprob: -14.285260200500488

Token 2011: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0036045825108885765
    2. ' beam' → logprob: -5.628604412078857
    3. '```' → logprob: -13.253604888916016
    4. 'be' → logprob: -14.128604888916016
    5. '   ' → logprob: -14.378604888916016
    6. ' ' → logprob: -14.878604888916016
    7. '1' → logprob: -15.378604888916016
    8. 'beat' → logprob: -16.128604888916016
    9. '       ' → logprob: -16.253604888916016
    10. 'bee' → logprob: -16.253604888916016

Token 2012: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1007266417145729
    2. '[' → logprob: -2.35072660446167
    3. '1' → logprob: -7.85072660446167
    4. 'i' → logprob: -8.975727081298828
    5. '```' → logprob: -14.100727081298828
    6. '[
' → logprob: -14.350727081298828
    7. '(i' → logprob: -14.600727081298828
    8. '   ' → logprob: -14.725727081298828
    9. '{i' → logprob: -14.975727081298828
    10. ' [' → logprob: -15.350727081298828

Token 2013: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014474987983703613
    2. '1' → logprob: -6.626447677612305
    3. '[i' → logprob: -9.251447677612305
    4. '][' → logprob: -11.001447677612305
    5. '```' → logprob: -12.501447677612305
    6. '-' → logprob: -13.501447677612305
    7. ' [' → logprob: -13.626447677612305
    8. ' ' → logprob: -14.626447677612305
    9. ']' → logprob: -15.126447677612305
    10. 'i' → logprob: -15.501447677612305

Token 2014: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. 'beam' → logprob: -12.500007629394531
    3. 'i' → logprob: -13.125007629394531
    4. ' ' → logprob: -14.000007629394531
    5. '   ' → logprob: -15.750007629394531
    6. '```' → logprob: -15.875007629394531
    7. '<|end|>' → logprob: -16.37500762939453
    8. '<|end|>' → logprob: -16.81250762939453
    9. '１' → logprob: -17.68750762939453
    10. 'b' → logprob: -18.00000762939453

Token 2015: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5497665405273438
    2. ')' → logprob: -1.6747665405273438
    3. '               ' → logprob: -1.7997665405273438
    4. '       ' → logprob: -3.4247665405273438
    5. '           ' → logprob: -4.424766540527344
    6. '```' → logprob: -4.549766540527344
    7. '
' → logprob: -5.049766540527344
    8. '   ' → logprob: -6.049766540527344
    9. '                   ' → logprob: -6.299766540527344
    10. ']
' → logprob: -6.924766540527344

Token 2016: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015919883735477924
    2. '                   ' → logprob: -7.62659215927124
    3. '<|end|>' → logprob: -8.126591682434082
    4. '```' → logprob: -8.376591682434082
    5. '                       ' → logprob: -9.001591682434082
    6. '       ' → logprob: -9.501591682434082
    7. '                ' → logprob: -9.501591682434082
    8. '              ' → logprob: -9.626591682434082
    9. '
' → logprob: -9.876591682434082
    10. '           ' → logprob: -9.876591682434082

Token 2017: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022872237488627434
    2. '                   ' → logprob: -5.022872447967529
    3. 'temp' → logprob: -5.397872447967529
    4. '           ' → logprob: -5.897872447967529
    5. 'l' → logprob: -6.022872447967529
    6. ' l' → logprob: -6.522872447967529
    7. '              ' → logprob: -7.147872447967529
    8. ' temp' → logprob: -7.147872447967529
    9. '       ' → logprob: -7.147872447967529
    10. '                       ' → logprob: -7.397872447967529

Token 2018: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.4311201870441437
    2. ' temp' → logprob: -1.0561201572418213
    3. 'ans' → logprob: -6.8061203956604
    4. ' ans' → logprob: -6.8061203956604
    5. '0' → logprob: -9.806119918823242
    6. '(temp' → logprob: -9.931119918823242
    7. 'test' → logprob: -10.931119918823242
    8. ' test' → logprob: -11.681119918823242
    9. '(ans' → logprob: -11.806119918823242
    10. ' ' → logprob: -11.931119918823242

Token 2019: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1040198802947998
    2. '<=' → logprob: -2.3540198802948
    3. '```' → logprob: -5.854020118713379
    4. '   ' → logprob: -8.479020118713379
    5. ' +=' → logprob: -8.479020118713379
    6. ')' → logprob: -8.979020118713379
    7. '               ' → logprob: -10.104020118713379
    8. '[' → logprob: -10.229020118713379
    9. '           ' → logprob: -10.354020118713379
    10. '=' → logprob: -10.479020118713379

Token 2020: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011067510582506657
    2. ' ' → logprob: -4.5110673904418945
    3. '   ' → logprob: -11.761067390441895
    4. '```' → logprob: -12.636067390441895
    5. '           ' → logprob: -13.261067390441895
    6. '  ' → logprob: -13.886067390441895
    7. '               ' → logprob: -13.886067390441895
    8. '       ' → logprob: -13.886067390441895
    9. '                   ' → logprob: -14.261067390441895
    10. '``' → logprob: -14.386067390441895

Token 2021: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.625059127807617
    4. '
' → logprob: -17.375059127807617
    5. '```' → logprob: -18.000059127807617
    6. '       ' → logprob: -18.125059127807617
    7. '  ' → logprob: -18.375059127807617
    8. ' ' → logprob: -19.125059127807617
    9. '           ' → logprob: -19.375059127807617
    10. '               ' → logprob: -19.500059127807617

Token 2022: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23386427760124207
    2. ':
' → logprob: -1.8588643074035645
    3. ':' → logprob: -3.1088643074035645
    4. '               ' → logprob: -5.4838643074035645
    5. '                       ' → logprob: -5.9838643074035645
    6. '           ' → logprob: -7.8588643074035645
    7. '                  ' → logprob: -7.8588643074035645
    8. '```' → logprob: -8.733863830566406
    9. '                           ' → logprob: -9.358863830566406
    10. '):
' → logprob: -9.858863830566406

Token 2023: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0014801019569858909
    2. '                       ' → logprob: -7.3764801025390625
    3. '```' → logprob: -7.7514801025390625
    4. ':
' → logprob: -8.876480102539062
    5. '               ' → logprob: -8.876480102539062
    6. '                  ' → logprob: -10.126480102539062
    7. ':' → logprob: -10.251480102539062
    8. '           ' → logprob: -10.876480102539062
    9. '                           ' → logprob: -11.626480102539062
    10. '                    ' → logprob: -11.626480102539062

Token 2024: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.5314186811447144
    2. 'temp' (adapté à ' temp') → logprob: -0.9064186811447144
    3. '                               ' → logprob: -5.656418800354004
    4. '               ' → logprob: -6.781418800354004
    5. '                   ' → logprob: -6.781418800354004
    6. '                           ' → logprob: -7.656418800354004
    7. '           ' → logprob: -7.781418800354004
    8. '```' → logprob: -8.156418800354004
    9. '   ' → logprob: -8.406418800354004
    10. '                                   ' → logprob: -8.531418800354004

Token 2025: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08437436819076538
    2. '+=' → logprob: -3.08437442779541
    3. ' =' → logprob: -3.95937442779541
    4. '2' → logprob: -4.58437442779541
    5. ' +=' → logprob: -5.45937442779541
    6. '```' → logprob: -7.20937442779541
    7. '   ' → logprob: -7.95937442779541
    8. '-=' → logprob: -9.20937442779541
    9. '[' → logprob: -9.70937442779541
    10. '==' → logprob: -9.70937442779541

Token 2026: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3484651446342468
    2. '=' → logprob: -1.2234652042388916
    3. ')' → logprob: -11.848464965820312
    4. '<|end|>' → logprob: -11.973464965820312
    5. '```' → logprob: -13.223464965820312
    6. '=
' → logprob: -14.098464965820312
    7. ',' → logprob: -14.223464965820312
    8. ' +=' → logprob: -14.348464965820312
    9. '+=' → logprob: -14.348464965820312
    10. ' =
' → logprob: -14.723464965820312

Token 2027: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.20141372084617615
    2. ' abs' → logprob: -1.7014137506484985
    3. '(abs' → logprob: -15.076414108276367
    4. '.abs' → logprob: -16.701414108276367
    5. '_abs' → logprob: -16.826414108276367
    6. 'temp' → logprob: -16.951414108276367
    7. 'ans' → logprob: -18.826414108276367
    8. 'Abs' → logprob: -19.451414108276367
    9. ' ' → logprob: -19.826414108276367
    10. '
' → logprob: -20.076414108276367

Token 2028: '(temp' (ID: 19094)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.07891159504652023
    2. '(temp' → logprob: -2.578911542892456
    3. '(
' → logprob: -11.703911781311035
    4. '[temp' → logprob: -12.328911781311035
    5. '(' → logprob: -12.453911781311035
    6. '$temp' → logprob: -13.453911781311035
    7. ' temp' → logprob: -13.703911781311035
    8. '	temp' → logprob: -13.953911781311035
    9. '_temp' → logprob: -14.203911781311035
    10. 'tmp' → logprob: -14.953911781311035

Token 2029: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0036676526069641113
    2. ')' → logprob: -5.753667831420898
    3. '                   ' → logprob: -8.003667831420898
    4. '               ' → logprob: -9.128667831420898
    5. ')
' → logprob: -10.128667831420898
    6. '```' → logprob: -13.003667831420898
    7. '           ' → logprob: -13.378667831420898
    8. '                       ' → logprob: -13.503667831420898
    9. '``' → logprob: -14.878667831420898
    10. '                  ' → logprob: -15.378667831420898

Token 2030: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07162558287382126
    2. '                       ' → logprob: -3.0716254711151123
    3. '                    ' → logprob: -4.321625709533691
    4. ')' → logprob: -6.071625709533691
    5. '                  ' → logprob: -6.821625709533691
    6. '```' → logprob: -6.946625709533691
    7. '                        ' → logprob: -7.071625709533691
    8. '               ' → logprob: -7.321625709533691
    9. '                ' → logprob: -7.446625709533691
    10. '<|end|>' → logprob: -7.571625709533691

Token 2031: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.0142357824370265
    2. ' B' → logprob: -4.389235973358154
    3. ' ans' → logprob: -6.889235973358154
    4. 'ans' → logprob: -7.264235973358154
    5. '```' → logprob: -12.889235496520996
    6. 'beam' → logprob: -14.389235496520996
    7. '(ans' → logprob: -14.764235496520996
    8. '[' → logprob: -14.889235496520996
    9. '_B' → logprob: -15.014235496520996
    10. '`' → logprob: -15.139235496520996

Token 2032: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759539604187012
    2. ' =' → logprob: -0.8259539604187012
    3. ',' → logprob: -11.70095443725586
    4. '```' → logprob: -13.07595443725586
    5. '[' → logprob: -14.20095443725586
    6. '           ' → logprob: -14.20095443725586
    7. ')' → logprob: -14.70095443725586
    8. '                   ' → logprob: -14.82595443725586
    9. '   ' → logprob: -14.95095443725586
    10. '               ' → logprob: -14.95095443725586

Token 2033: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.07894442975521088
    2. ' beam' → logprob: -2.578944444656372
    3. 'ans' → logprob: -9.953944206237793
    4. ' ans' → logprob: -11.953944206237793
    5. 'be' → logprob: -15.953944206237793
    6. ' ' → logprob: -16.45394515991211
    7. 'Beam' → logprob: -16.57894515991211
    8. 'b' → logprob: -16.70394515991211
    9. ' ' → logprob: -16.70394515991211
    10. '```' → logprob: -17.07894515991211

Token 2034: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6047699318733066e-05
    2. 'i' → logprob: -11.125016212463379
    3. '[' → logprob: -13.875016212463379
    4. '(i' → logprob: -16.500015258789062
    5. '```' → logprob: -17.000015258789062
    6. '{i' → logprob: -17.375015258789062
    7. '   ' → logprob: -18.000015258789062
    8. ' i' → logprob: -19.250015258789062
    9. ',i' → logprob: -19.375015258789062
    10. '_i' → logprob: -19.500015258789062

Token 2035: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0803401842713356
    2. '][' → logprob: -2.7053401470184326
    3. '[' → logprob: -4.580340385437012
    4. ')[' → logprob: -10.455340385437012
    5. '```' → logprob: -11.080340385437012
    6. 'i' → logprob: -11.205340385437012
    7. '   ' → logprob: -11.580340385437012
    8. ' [' → logprob: -12.080340385437012
    9. '>[' → logprob: -12.330340385437012
    10. ']' → logprob: -12.705340385437012

Token 2036: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. 'i' → logprob: -10.500040054321289
    3. '```' → logprob: -11.750040054321289
    4. '[i' → logprob: -13.750040054321289
    5. ' ' → logprob: -14.125040054321289
    6. '[' → logprob: -14.125040054321289
    7. '
' → logprob: -14.375040054321289
    8. '   ' → logprob: -14.375040054321289
    9. '0' → logprob: -14.750040054321289
    10. '(i' → logprob: -16.12504005432129

Token 2037: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02442057430744171
    2. '               ' → logprob: -4.274420738220215
    3. ']
' → logprob: -5.899420738220215
    4. '                       ' → logprob: -5.899420738220215
    5. ')
' → logprob: -6.899420738220215
    6. '```' → logprob: -6.899420738220215
    7. ':
' → logprob: -7.024420738220215
    8. '           ' → logprob: -7.649420738220215
    9. ')' → logprob: -7.899420738220215
    10. ']' → logprob: -8.274420738220215

Token 2038: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2363741248846054
    2. '                       ' → logprob: -1.6113741397857666
    3. '               ' → logprob: -5.2363739013671875
    4. '```' → logprob: -5.6113739013671875
    5. '                           ' → logprob: -7.9863739013671875
    6. '           ' → logprob: -8.111373901367188
    7. '                  ' → logprob: -8.486373901367188
    8. '                    ' → logprob: -8.611373901367188
    9. '                      ' → logprob: -8.986373901367188
    10. '                               ' → logprob: -9.111373901367188

Token 2039: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06547193974256516
    2. ' if' → logprob: -2.815471887588501
    3. '                   ' → logprob: -6.06547212600708
    4. '                       ' → logprob: -6.81547212600708
    5. '```' → logprob: -10.065471649169922
    6. '               ' → logprob: -10.815471649169922
    7. '                           ' → logprob: -12.440471649169922
    8. '
' → logprob: -12.565471649169922
    9. '           ' → logprob: -13.315471649169922
    10. '                     ' → logprob: -13.690471649169922

Token 2040: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5783384442329407
    2. 'B' → logprob: -0.8283384442329407
    3. ' ans' → logprob: -6.078338623046875
    4. 'ans' → logprob: -9.203338623046875
    5. '(ans' → logprob: -13.328338623046875
    6. ' ' → logprob: -14.328338623046875
    7. '   ' → logprob: -15.578338623046875
    8. ' ' → logprob: -15.828338623046875
    9. 'temp' → logprob: -16.203338623046875
    10. '           ' → logprob: -16.578338623046875

Token 2041: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1798829436302185
    2. '*' → logprob: -1.8048830032348633
    3. '[' → logprob: -9.304883003234863
    4. '*[' → logprob: -10.679883003234863
    5. ' ' → logprob: -12.179883003234863
    6. '```' → logprob: -12.304883003234863
    7. ' [' → logprob: -13.054883003234863
    8. '   ' → logprob: -13.179883003234863
    9. '       ' → logprob: -13.429883003234863
    10. 'ans' → logprob: -13.429883003234863

Token 2042: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.31326285004615784
    2. ' ans' → logprob: -1.3132628202438354
    3. '(ans' → logprob: -14.438262939453125
    4. '	ans' → logprob: -14.688262939453125
    5. '_ans' → logprob: -15.813262939453125
    6. 'answer' → logprob: -18.063262939453125
    7. 'Ans' → logprob: -18.563262939453125
    8. ' ' → logprob: -18.938262939453125
    9. 'ann' → logprob: -19.813262939453125
    10. '
' → logprob: -19.813262939453125

Token 2043: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.27099974633893e-05
    2. '```' → logprob: -11.500012397766113
    3. '*' → logprob: -14.375012397766113
    4. ' [' → logprob: -14.625012397766113
    5. '           ' → logprob: -15.250012397766113
    6. '       ' → logprob: -15.500012397766113
    7. '   ' → logprob: -15.500012397766113
    8. '``' → logprob: -15.750012397766113
    9. '               ' → logprob: -16.25001335144043
    10. '`' → logprob: -16.50001335144043

Token 2044: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.37500286102295
    3. '   ' → logprob: -14.37500286102295
    4. '```' → logprob: -15.37500286102295
    5. '1' → logprob: -15.62500286102295
    6. '
' → logprob: -15.75000286102295
    7. '[' → logprob: -16.375003814697266
    8. '  ' → logprob: -16.750003814697266
    9. '       ' → logprob: -17.875003814697266
    10. '    ' → logprob: -18.125003814697266

Token 2045: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02635580487549305
    2. '<' → logprob: -3.651355743408203
    3. ']' → logprob: -11.026355743408203
    4. '                   ' → logprob: -11.401355743408203
    5. '[' → logprob: -11.651355743408203
    6. '                       ' → logprob: -12.401355743408203
    7. '```' → logprob: -13.026355743408203
    8. ']<' → logprob: -13.276355743408203
    9. '*' → logprob: -13.776355743408203
    10. '               ' → logprob: -13.901355743408203

Token 2046: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3869251310825348
    2. '<' → logprob: -1.1369251012802124
    3. '```' → logprob: -11.386924743652344
    4. ' *' → logprob: -11.761924743652344
    5. ' <=' → logprob: -12.011924743652344
    6. '<=' → logprob: -12.136924743652344
    7. '[' → logprob: -12.261924743652344
    8. '*' → logprob: -12.386924743652344
    9. '<int' → logprob: -12.386924743652344
    10. '   ' → logprob: -13.261924743652344

Token 2047: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.0002644351334311068
    2. 'ans' → logprob: -8.250264167785645
    3. '(ans' → logprob: -12.875264167785645
    4. '	ans' → logprob: -15.000264167785645
    5. '_ans' → logprob: -15.750264167785645
    6. 'Ans' → logprob: -16.12526512145996
    7. ' ast' → logprob: -17.00026512145996
    8. '```' → logprob: -17.62526512145996
    9. ' Ans' → logprob: -18.12526512145996
    10. '1' → logprob: -18.62526512145996

Token 2048: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.133198283147067e-05
    2. '```' → logprob: -10.375051498413086
    3. 'ans' → logprob: -11.750051498413086
    4. '           ' → logprob: -12.750051498413086
    5. '   ' → logprob: -13.250051498413086
    6. '1' → logprob: -13.625051498413086
    7. '`' → logprob: -13.750051498413086
    8. '                   ' → logprob: -14.000051498413086
    9. ' ans' → logprob: -14.625051498413086
    10. ' [' → logprob: -14.750051498413086

Token 2049: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. '0' → logprob: -12.125006675720215
    3. '   ' → logprob: -15.000006675720215
    4. ' ' → logprob: -15.125006675720215
    5. 'i' → logprob: -15.625006675720215
    6. '```' → logprob: -15.750006675720215
    7. '
' → logprob: -16.37500762939453
    8. '[' → logprob: -16.43750762939453
    9. '[i' → logprob: -16.93750762939453
    10. '-' → logprob: -16.93750762939453

Token 2050: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10029702633619308
    2. '*' → logprob: -2.350296974182129
    3. '                   ' → logprob: -10.100296974182129
    4. '```' → logprob: -11.100296974182129
    5. '                       ' → logprob: -11.225296974182129
    6. '                    ' → logprob: -12.100296974182129
    7. '               ' → logprob: -13.225296974182129
    8. ' ' → logprob: -13.475296974182129
    9. '                        ' → logprob: -13.600296974182129
    10. '                ' → logprob: -13.725296974182129

Token 2051: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03806421533226967
    2. '*' → logprob: -3.2880642414093018
    3. '               ' → logprob: -12.538064002990723
    4. '[' → logprob: -12.788064002990723
    5. '                   ' → logprob: -13.288064002990723
    6. '                       ' → logprob: -13.288064002990723
    7. '                        ' → logprob: -13.788064002990723
    8. '                    ' → logprob: -13.788064002990723
    9. '*t' → logprob: -13.913064002990723
    10. '                ' → logprob: -13.913064002990723

Token 2052: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.12891638278961182
    2. ' temp' → logprob: -2.1289162635803223
    3. 't' → logprob: -6.753916263580322
    4. 'beam' → logprob: -7.628916263580322
    5. ' beam' → logprob: -8.62891674041748
    6. 'ans' → logprob: -10.25391674041748
    7. ' t' → logprob: -10.50391674041748
    8. 'tmp' → logprob: -10.87891674041748
    9. 'tem' → logprob: -11.00391674041748
    10. ' ans' → logprob: -11.00391674041748

Token 2053: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004143692087382078
    2. '_' → logprob: -6.254143714904785
    3. '[' → logprob: -6.629143714904785
    4. '```' → logprob: -7.254143714904785
    5. ']' → logprob: -10.004143714904785
    6. '[
' → logprob: -10.504143714904785
    7. '``' → logprob: -10.879143714904785
    8. '-' → logprob: -11.254143714904785
    9. ')' → logprob: -11.254143714904785
    10. '   ' → logprob: -11.379143714904785

Token 2054: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08884654194116592
    2. '                       ' → logprob: -2.963846445083618
    3. ':' → logprob: -3.463846445083618
    4. '                   ' → logprob: -6.463846683502197
    5. '                           ' → logprob: -9.088846206665039
    6. '               ' → logprob: -9.838846206665039
    7. '):
' → logprob: -9.838846206665039
    8. '[' → logprob: -9.963846206665039
    9. '                      ' → logprob: -10.088846206665039
    10. ':
' → logprob: -10.338846206665039

Token 2055: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007070421241223812
    2. '                   ' → logprob: -5.882070541381836
    3. '                           ' → logprob: -6.257070541381836
    4. '```' → logprob: -7.132070541381836
    5. '                      ' → logprob: -7.382070541381836
    6. '                        ' → logprob: -8.132070541381836
    7. ':
' → logprob: -8.882070541381836
    8. '                               ' → logprob: -9.007070541381836
    9. ':' → logprob: -9.257070541381836
    10. '[' → logprob: -10.007070541381836

Token 2056: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.009774863719940186
    2. 'ans' (adapté à ' ans') → logprob: -4.634774684906006
    3. '	ans' → logprob: -12.134775161743164
    4. '                               ' → logprob: -12.134775161743164
    5. '(ans' → logprob: -13.384775161743164
    6. '```' → logprob: -13.384775161743164
    7. '                           ' → logprob: -13.884775161743164
    8. '           ' → logprob: -14.509775161743164
    9. '_ans' → logprob: -14.759775161743164
    10. '   ' → logprob: -14.759775161743164

Token 2057: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.252483606338501
    2. '=' → logprob: -1.502483606338501
    3. '[' → logprob: -7.627483367919922
    4. '=[' → logprob: -10.002483367919922
    5. ' =[' → logprob: -12.002483367919922
    6. '   ' → logprob: -12.127483367919922
    7. '```' → logprob: -12.502483367919922
    8. '+=' → logprob: -12.877483367919922
    9. ' +=' → logprob: -13.627483367919922
    10. ')' → logprob: -14.627483367919922

Token 2058: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.04874167963862419
    2. '[' → logprob: -3.048741579055786
    3. '[t' → logprob: -8.798741340637207
    4. ' t' → logprob: -13.673741340637207
    5. '[temp' → logprob: -14.798741340637207
    6. '[i' → logprob: -15.173741340637207
    7. '[token' → logprob: -15.298741340637207
    8. ' ' → logprob: -15.298741340637207
    9. ' ' → logprob: -15.673741340637207
    10. '[start' → logprob: -15.798741340637207

Token 2059: 'temp' (ID: 7340)
  Prédit: 'temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.005579267628490925
    2. 'B' → logprob: -6.130579471588135
    3. 'ans' → logprob: -6.130579471588135
    4. '0' → logprob: -7.630579471588135
    5. 't' → logprob: -8.005578994750977
    6. 'beam' → logprob: -8.505578994750977
    7. ' temp' → logprob: -9.130578994750977
    8. 'tmp' → logprob: -10.130578994750977
    9. '1' → logprob: -11.005578994750977
    10. '   ' → logprob: -12.255578994750977

Token 2060: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13928550481796265
    2. '2' → logprob: -2.5142855644226074
    3. '0' → logprob: -3.0142855644226074
    4. ',' → logprob: -12.51428508758545
    5. ' [' → logprob: -12.63928508758545
    6. ' ' → logprob: -12.76428508758545
    7. '```' → logprob: -12.88928508758545
    8. '
' → logprob: -13.13928508758545
    9. '   ' → logprob: -13.26428508758545
    10. '[
' → logprob: -14.13928508758545

Token 2061: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9040898880339228e-05
    2. ' ,' → logprob: -11.875028610229492
    3. '                       ' → logprob: -12.000028610229492
    4. '                   ' → logprob: -12.750028610229492
    5. '               ' → logprob: -13.000028610229492
    6. '[' → logprob: -13.000028610229492
    7. '                           ' → logprob: -13.125028610229492
    8. ',b' → logprob: -13.625028610229492
    9. ',B' → logprob: -14.000028610229492
    10. '           ' → logprob: -14.000028610229492

Token 2062: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.47455474734306335
    2. 'B' → logprob: -0.9745547771453857
    3. ' ans' → logprob: -8.099555015563965
    4. ' beam' → logprob: -9.474555015563965
    5. 'ans' → logprob: -9.599555015563965
    6. 'beam' → logprob: -10.474555015563965
    7. '_B' → logprob: -14.349555015563965
    8. ' ' → logprob: -16.22455406188965
    9. '	B' → logprob: -16.22455406188965
    10. 'Beam' → logprob: -16.22455406188965

Token 2063: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.943019688129425
    2. '                   ' → logprob: -1.3180196285247803
    3. ']' → logprob: -2.1930196285247803
    4. '           ' → logprob: -2.4430196285247803
    5. '   ' → logprob: -2.9430196285247803
    6. '               ' → logprob: -3.4430196285247803
    7. '                       ' → logprob: -3.9430196285247803
    8. ')
' → logprob: -4.068019866943359
    9. '       ' → logprob: -4.443019866943359
    10. '                           ' → logprob: -5.443019866943359

Token 2064: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019526848569512367
    2. '<|end|>' → logprob: -4.894526958465576
    3. '```' → logprob: -5.644526958465576
    4. 'print' → logprob: -5.644526958465576
    5. '
' → logprob: -6.019526958465576
    6. ']' → logprob: -7.519526958465576
    7. '   ' → logprob: -7.519526958465576
    8. ')
' → logprob: -8.019526481628418
    9. '[' → logprob: -8.019526481628418
    10. '#' → logprob: -9.269526481628418

Token 2065: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2727450728416443
    2. 'i' → logprob: -2.397745132446289
    3. '   ' → logprob: -2.397745132446289
    4. 'print' → logprob: -4.022745132446289
    5. '    ' → logprob: -5.022745132446289
    6. '       ' → logprob: -5.272745132446289
    7. '```' → logprob: -5.522745132446289
    8. '_' → logprob: -5.772745132446289
    9. ' ' → logprob: -6.022745132446289
    10. '#' → logprob: -6.022745132446289

Token 2066: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023691115900874138
    2. '```' → logprob: -4.398691177368164
    3. ':
' → logprob: -4.898691177368164
    4. '           ' → logprob: -6.398691177368164
    5. ':' → logprob: -7.273691177368164
    6. '                   ' → logprob: -7.523691177368164
    7. '                ' → logprob: -8.898691177368164
    8. '              ' → logprob: -9.148691177368164
    9. '``' → logprob: -9.148691177368164
    10. '            ' → logprob: -9.648691177368164

Token 2067: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011811869218945503
    2. '```' → logprob: -4.51181173324585
    3. '           ' → logprob: -7.76181173324585
    4. '``' → logprob: -9.261812210083008
    5. '                   ' → logprob: -9.636812210083008
    6. '   ' → logprob: -9.761812210083008
    7. '              ' → logprob: -10.636812210083008
    8. 'L' → logprob: -10.761812210083008
    9. ' L' → logprob: -10.886812210083008
    10. '                ' → logprob: -11.136812210083008

Token 2068: ' L' (ID: 451)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.49662020802497864
    2. 'L' (adapté à ' L') → logprob: -1.7466201782226562
    3. '	L' → logprob: -2.3716201782226562
    4. '                   ' → logprob: -2.9966201782226562
    5. ' L' → logprob: -3.4966201782226562
    6. '                ' → logprob: -4.746620178222656
    7. ' for' → logprob: -4.871620178222656
    8. '           ' → logprob: -5.246620178222656
    9. '   ' → logprob: -5.371620178222656
    10. 'for' → logprob: -5.496620178222656

Token 2069: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9440891146659851
    2. '=' → logprob: -1.0690891742706299
    3. ',' → logprob: -1.3190891742706299
    4. ' ,' → logprob: -8.81908893585205
    5. ',L' → logprob: -10.81908893585205
    6. '```' → logprob: -10.81908893585205
    7. '	' → logprob: -11.06908893585205
    8. '=L' → logprob: -11.19408893585205
    9. '               ' → logprob: -11.44408893585205
    10. '           ' → logprob: -12.19408893585205

Token 2070: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.005236479919403791
    2. ' start' → logprob: -5.255236625671387
    3. 'end' → logprob: -12.880236625671387
    4. '   ' → logprob: -17.00523567199707
    5. '	start' → logprob: -17.25523567199707
    6. '[start' → logprob: -17.88023567199707
    7. ' end' → logprob: -18.00523567199707
    8. '```' → logprob: -19.38023567199707
    9. '           ' → logprob: -20.00523567199707
    10. ' ' → logprob: -20.00523567199707

Token 2071: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -2.546478935983032e-05
    2. 'arr' → logprob: -10.625025749206543
    3. '[i' → logprob: -15.375025749206543
    4. '_' → logprob: -15.625025749206543
    5. 'Arr' → logprob: -15.875025749206543
    6. '           ' → logprob: -16.000024795532227
    7. '```' → logprob: -16.250024795532227
    8. '	arr' → logprob: -16.375024795532227
    9. '   ' → logprob: -16.500024795532227
    10. '[arr' → logprob: -17.500024795532227

Token 2072: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.125000953674316
    3. '               ' → logprob: -16.000001907348633
    4. '           ' → logprob: -16.000001907348633
    5. '[' → logprob: -17.375001907348633
    6. '       ' → logprob: -17.625001907348633
    7. ',i' → logprob: -17.750001907348633
    8. '(i' → logprob: -17.875001907348633
    9. ' [' → logprob: -17.875001907348633
    10. '                   ' → logprob: -18.000001907348633

Token 2073: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006031299941241741
    2. '           ' → logprob: -6.131031513214111
    3. '```' → logprob: -6.381031513214111
    4. '+' → logprob: -7.756031513214111
    5. ',' → logprob: -7.756031513214111
    6. '                   ' → logprob: -7.881031513214111
    7. '
' → logprob: -8.631031036376953
    8. '              ' → logprob: -8.756031036376953
    9. ']
' → logprob: -8.881031036376953
    10. '			' → logprob: -8.881031036376953

Token 2074: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00024882311117835343
    2. '```' → logprob: -8.625248908996582
    3. '           ' → logprob: -10.625248908996582
    4. '                   ' → logprob: -10.875248908996582
    5. 'R' → logprob: -11.250248908996582
    6. '``' → logprob: -11.875248908996582
    7. '
' → logprob: -13.250248908996582
    8. '       ' → logprob: -14.000248908996582
    9. ' R' → logprob: -14.125248908996582
    10. '   ' → logprob: -14.375248908996582

Token 2075: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.21316315233707428
    2. ' R' → logprob: -1.713163137435913
    3. '               ' → logprob: -4.463163375854492
    4. '                   ' → logprob: -8.963163375854492
    5. '           ' → logprob: -11.588163375854492
    6. '                ' → logprob: -11.713163375854492
    7. '                       ' → logprob: -13.213163375854492
    8. '       ' → logprob: -13.838163375854492
    9. '              ' → logprob: -13.838163375854492
    10. '                    ' → logprob: -14.088163375854492

Token 2076: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198841333389282
    2. '=' → logprob: -2.811988353729248
    3. '```' → logprob: -11.436988830566406
    4. '               ' → logprob: -12.061988830566406
    5. '=i' → logprob: -13.561988830566406
    6. '                   ' → logprob: -13.686988830566406
    7. '           ' → logprob: -14.811988830566406
    8. '                ' → logprob: -15.561988830566406
    9. '=
' → logprob: -15.686988830566406
    10. '   ' → logprob: -16.061988830566406

Token 2077: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.048587486147880554
    2. ' end' → logprob: -3.0485875606536865
    3. '           ' → logprob: -16.798587799072266
    4. 'i' → logprob: -17.798587799072266
    5. '[end' → logprob: -18.048587799072266
    6. '(end' → logprob: -19.173587799072266
    7. '=end' → logprob: -19.548587799072266
    8. '   ' → logprob: -19.798587799072266
    9. ' i' → logprob: -20.298587799072266
    10. '               ' → logprob: -20.423587799072266

Token 2078: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -6.110668618930504e-05
    2. 'arr' → logprob: -9.87506103515625
    3. '[i' → logprob: -11.75006103515625
    4. '```' → logprob: -14.50006103515625
    5. '[arr' → logprob: -14.87506103515625
    6. 'Arr' → logprob: -14.87506103515625
    7. '	arr' → logprob: -15.25006103515625
    8. '$arr' → logprob: -16.75006103515625
    9. '   ' → logprob: -16.87506103515625
    10. '(arr' → logprob: -17.25006103515625

Token 2079: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.375
    3. '```' → logprob: -15.625
    4. '[' → logprob: -17.0
    5. '(i' → logprob: -18.25
    6. '   ' → logprob: -19.875
    7. '{i' → logprob: -20.75
    8. ',i' → logprob: -20.75
    9. '[
' → logprob: -21.125
    10. '       ' → logprob: -21.25

Token 2080: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6655077934265137
    2. '               ' → logprob: -0.9155077934265137
    3. ']' → logprob: -2.5405077934265137
    4. '```' → logprob: -5.415507793426514
    5. '+' → logprob: -7.415507793426514
    6. '           ' → logprob: -7.540507793426514
    7. ']
' → logprob: -8.040508270263672
    8. ']+' → logprob: -8.665508270263672
    9. ']:
' → logprob: -9.040508270263672
    10. '][' → logprob: -9.165508270263672

Token 2081: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0652783140540123
    2. '```' → logprob: -2.8152782917022705
    3. '                   ' → logprob: -6.19027853012085
    4. '``' → logprob: -7.44027853012085
    5. '           ' → logprob: -7.94027853012085
    6. '                ' → logprob: -9.815278053283691
    7. '			' → logprob: -9.940278053283691
    8. '       ' → logprob: -10.065278053283691
    9. '              ' → logprob: -10.190278053283691
    10. '   ' → logprob: -10.565278053283691

Token 2082: ' temp' (ID: 5484)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17535586655139923
    2. '```' → logprob: -1.9253559112548828
    3. '``' → logprob: -4.925355911254883
    4. 'temp' (adapté à ' temp') → logprob: -5.425355911254883
    5. '           ' → logprob: -6.550355911254883
    6. '                   ' → logprob: -6.550355911254883
    7. '   ' → logprob: -8.675355911254883
    8. '                ' → logprob: -9.800355911254883
    9. '              ' → logprob: -9.925355911254883
    10. ' temp' → logprob: -10.050355911254883

Token 2083: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889209687709808
    2. '=' → logprob: -2.5788919925689697
    3. '```' → logprob: -13.20389175415039
    4. '   ' → logprob: -15.45389175415039
    5. '       ' → logprob: -16.95389175415039
    6. '           ' → logprob: -17.20389175415039
    7. '``' → logprob: -17.45389175415039
    8. ' ' → logprob: -17.45389175415039
    9. '        ' → logprob: -18.20389175415039
    10. '    ' → logprob: -18.45389175415039

Token 2084: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.004079828038811684
    2. ' Seg' → logprob: -5.504079818725586
    3. 'Segment' → logprob: -13.504079818725586
    4. 'seg' → logprob: -17.629079818725586
    5. '-S' → logprob: -18.379079818725586
    6. 'Segments' → logprob: -18.504079818725586
    7. '_seg' → logprob: -19.004079818725586
    8. '```' → logprob: -19.254079818725586
    9. ' seg' → logprob: -19.879079818725586
    10. '   ' → logprob: -19.879079818725586

Token 2085: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -2.7848862373502925e-05
    2. 'Seg' → logprob: -10.625027656555176
    3. '```' → logprob: -13.500027656555176
    4. 'St' → logprob: -14.250027656555176
    5. 'Stack' → logprob: -14.625027656555176
    6. '``' → logprob: -15.500027656555176
    7. 'tree' → logprob: -15.625027656555176
    8. '_tree' → logprob: -16.000028610229492
    9. 'ST' → logprob: -16.000028610229492
    10. '_S' → logprob: -16.375028610229492

Token 2086: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.00016623330884613097
    2. 'query' → logprob: -9.250165939331055
    3. '_tree' → logprob: -10.500165939331055
    4. '```' → logprob: -10.875165939331055
    5. 'Tree' → logprob: -11.375165939331055
    6. 'Query' → logprob: -12.000165939331055
    7. '[' → logprob: -13.500165939331055
    8. '$query' → logprob: -13.625165939331055
    9. '2' → logprob: -14.000165939331055
    10. '   ' → logprob: -14.750165939331055

Token 2087: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -6.988221684878226e-06
    2. 'tree' → logprob: -12.125006675720215
    3. '```' → logprob: -13.750006675720215
    4. '	tree' → logprob: -15.625006675720215
    5. '(' → logprob: -15.750006675720215
    6. '(
' → logprob: -17.12500762939453
    7. '/tree' → logprob: -17.50000762939453
    8. '   ' → logprob: -18.50000762939453
    9. '#' → logprob: -19.75000762939453
    10. '(thread' → logprob: -19.75000762939453

Token 2088: '2' (ID: 17)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.47535601258277893
    2. '2' → logprob: -0.9753559827804565
    3. '1' → logprob: -7.350356101989746
    4. '(tree' → logprob: -7.475356101989746
    5. '```' → logprob: -10.100356101989746
    6. ' tree' → logprob: -11.100356101989746
    7. ',' → logprob: -12.475356101989746
    8. '   ' → logprob: -12.850356101989746
    9. '	tree' → logprob: -12.850356101989746
    10. '``' → logprob: -14.475356101989746

Token 2089: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006916418671607971
    2. '(tree' → logprob: -5.256916522979736
    3. '```' → logprob: -7.006916522979736
    4. 'tree' → logprob: -7.256916522979736
    5. '[' → logprob: -11.256916046142578
    6. '   ' → logprob: -11.381916046142578
    7. ',user' → logprob: -11.881916046142578
    8. '	tree' → logprob: -11.881916046142578
    9. ',t' → logprob: -12.506916046142578
    10. 'The' → logprob: -12.756916046142578

Token 2090: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.011047935113310814
    2. ' num' → logprob: -4.511047840118408
    3. '```' → logprob: -16.76104736328125
    4. ',num' → logprob: -17.51104736328125
    5. 'user' → logprob: -17.76104736328125
    6. '[num' → logprob: -18.01104736328125
    7. 'number' → logprob: -18.26104736328125
    8. '	num' → logprob: -18.88604736328125
    9. '_num' → logprob: -19.26104736328125
    10. '<num' → logprob: -19.26104736328125

Token 2091: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014746055006980896
    2. ',' → logprob: -4.264746189117432
    3. '_,' → logprob: -8.514745712280273
    4. 'num' → logprob: -9.014745712280273
    5. '   ' → logprob: -9.264745712280273
    6. '```' → logprob: -10.139745712280273
    7. ' ,' → logprob: -10.764745712280273
    8. '       ' → logprob: -11.264745712280273
    9. ' ' → logprob: -11.264745712280273
    10. ',num' → logprob: -11.514745712280273

Token 2092: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4121114822482923e-06
    2. ',num' → logprob: -12.875003814697266
    3. ' ,' → logprob: -15.125003814697266
    4. '```' → logprob: -15.375003814697266
    5. ',user' → logprob: -16.125003814697266
    6. 'num' → logprob: -16.875003814697266
    7. '   ' → logprob: -18.250003814697266
    8. ',size' → logprob: -18.875003814697266
    9. ',
' → logprob: -19.000003814697266
    10. ',node' → logprob: -19.000003814697266

Token 2093: ' seg' (ID: 3055)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.005233882926404476
    2. ' num' → logprob: -5.2552337646484375
    3. ',num' → logprob: -18.505233764648438
    4. '(num' → logprob: -18.880233764648438
    5. 'number' → logprob: -19.130233764648438
    6. '[num' → logprob: -19.255233764648438
    7. '0' → logprob: -19.880233764648438
    8. '	num' → logprob: -20.130233764648438
    9. '```' → logprob: -20.130233764648438
    10. '<num' → logprob: -20.505233764648438

Token 2094: 'func' (ID: 5652)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2838050127029419
    2. ',' → logprob: -1.533805012702942
    3. ',num' → logprob: -3.5338048934936523
    4. '_num' → logprob: -6.283804893493652
    5. 'size' → logprob: -9.158804893493652
    6. '```' → logprob: -9.533804893493652
    7. '_,' → logprob: -10.283804893493652
    8. '1' → logprob: -10.908804893493652
    9. ' num' → logprob: -11.158804893493652
    10. 'Num' → logprob: -11.658804893493652

Token 2095: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3358446166384965e-05
    2. '(tree' → logprob: -10.125053405761719
    3. ' ,' → logprob: -11.750053405761719
    4. '```' → logprob: -12.625053405761719
    5. ',t' → logprob: -14.875053405761719
    6. '[' → logprob: -14.875053405761719
    7. 'tree' → logprob: -15.125053405761719
    8. '   ' → logprob: -15.250053405761719
    9. ',
' → logprob: -15.875053405761719
    10. '(' → logprob: -16.00005340576172

Token 2096: ' ide' (ID: 2750)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.023245595395565033
    2. ' num' → logprob: -3.7732455730438232
    3. '	num' → logprob: -18.023244857788086
    4. '(num' → logprob: -18.398244857788086
    5. ',num' → logprob: -18.648244857788086
    6. '[num' → logprob: -19.023244857788086
    7. '<num' → logprob: -19.398244857788086
    8. ' ' → logprob: -20.023244857788086
    9. '$num' → logprob: -20.023244857788086
    10. '```' → logprob: -20.023244857788086

Token 2097: '_ele' (ID: 154942)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.3264451026916504
    2. 'num' → logprob: -1.8264451026916504
    3. '_ele' → logprob: -2.2014451026916504
    4. '2' → logprob: -6.95144510269165
    5. '_arr' → logprob: -7.57644510269165
    6. '1' → logprob: -7.70144510269165
    7. ',num' → logprob: -7.70144510269165
    8. 'um' → logprob: -7.82644510269165
    9. '```' → logprob: -8.076444625854492
    10. '(i' → logprob: -8.201444625854492

Token 2098: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.842555426876061e-06
    2. ',num' → logprob: -12.625004768371582
    3. '```' → logprob: -14.000004768371582
    4. ' ,' → logprob: -14.625004768371582
    5. '   ' → logprob: -16.7500057220459
    6. ',user' → logprob: -16.8750057220459
    7. '       ' → logprob: -17.2500057220459
    8. ',n' → logprob: -17.5000057220459
    9. '           ' → logprob: -18.0000057220459
    10. 'Sorry' → logprob: -18.2500057220459

Token 2099: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.004108204040676355
    2. ' L' → logprob: -5.504108428955078
    3. 'num' → logprob: -10.504108428955078
    4. '   ' → logprob: -14.629108428955078
    5. ' num' → logprob: -15.129108428955078
    6. '    ' → logprob: -15.129108428955078
    7. '           ' → logprob: -15.379108428955078
    8. '                   ' → logprob: -15.379108428955078
    9. '	L' → logprob: -15.379108428955078
    10. '            ' → logprob: -15.629108428955078

Token 2100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010950337309623137
    2. ',num' → logprob: -9.250109672546387
    3. ' ,' → logprob: -12.375109672546387
    4. '           ' → logprob: -12.375109672546387
    5. '       ' → logprob: -13.500109672546387
    6. '```' → logprob: -13.500109672546387
    7. 'num' → logprob: -14.875109672546387
    8. ',temp' → logprob: -15.000109672546387
    9. '               ' → logprob: -15.125109672546387
    10. ',user' → logprob: -15.625109672546387

Token 2101: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.334573894739151
    2. 'num' → logprob: -2.084573984146118
    3. ' R' → logprob: -2.084573984146118
    4. ' num' → logprob: -3.334573984146118
    5. '```' → logprob: -12.834573745727539
    6. 'r' → logprob: -12.959573745727539
    7. 'n' → logprob: -14.459573745727539
    8. '   ' → logprob: -14.709573745727539
    9. '    ' → logprob: -15.834573745727539
    10. '``' → logprob: -16.20957374572754

Token 2102: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31331583857536316
    2. ' +' → logprob: -1.3133158683776855
    3. ')' → logprob: -10.563315391540527
    4. '```' → logprob: -10.688315391540527
    5. ',' → logprob: -12.938315391540527
    6. '+)' → logprob: -14.063315391540527
    7. ')+' → logprob: -14.813315391540527
    8. '+,' → logprob: -14.938315391540527
    9. '               ' → logprob: -15.313315391540527
    10. '+
' → logprob: -15.563315391540527

Token 2103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -16.000003814697266
    4. '+' → logprob: -17.000003814697266
    5. '   ' → logprob: -18.125003814697266
    6. '           ' → logprob: -19.250003814697266
    7. '                   ' → logprob: -19.250003814697266
    8. '               ' → logprob: -19.500003814697266
    9. '       ' → logprob: -19.750003814697266
    10. '１' → logprob: -19.875003814697266

Token 2104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -18.0
    4. '   ' → logprob: -18.25
    5. '１' → logprob: -20.75
    6. '+' → logprob: -20.875
    7. '
' → logprob: -21.5
    8. '       ' → logprob: -22.0
    9. '-' → logprob: -22.125
    10. '2' → logprob: -22.25

Token 2105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013768293894827366
    2. '               ' → logprob: -4.513768196105957
    3. ')
' → logprob: -6.888768196105957
    4. '           ' → logprob: -7.138768196105957
    5. '```' → logprob: -7.263768196105957
    6. '   ' → logprob: -9.513768196105957
    7. '                   ' → logprob: -10.388768196105957
    8. '       ' → logprob: -10.638768196105957
    9. '-' → logprob: -10.763768196105957
    10. '              ' → logprob: -11.013768196105957

Token 2106: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7427511811256409
    2. ' -' → logprob: -1.242751121520996
    3. '               ' → logprob: -1.617751121520996
    4. '```' → logprob: -4.117751121520996
    5. '   ' → logprob: -4.617751121520996
    6. '           ' → logprob: -5.367751121520996
    7. '              ' → logprob: -5.992751121520996
    8. '                   ' → logprob: -7.367751121520996
    9. '          ' → logprob: -7.492751121520996
    10. '-k' → logprob: -7.492751121520996

Token 2107: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.018150994554162025
    2. ' beam' → logprob: -4.018150806427002
    3. '           ' → logprob: -14.51815128326416
    4. '   ' → logprob: -15.14315128326416
    5. 'be' → logprob: -15.76815128326416
    6. '       ' → logprob: -16.393150329589844
    7. 'bee' → logprob: -17.018150329589844
    8. 'heap' → logprob: -17.018150329589844
    9. '```' → logprob: -17.018150329589844
    10. '               ' → logprob: -17.143150329589844

Token 2108: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006728782900609076
    2. '[' → logprob: -8.000673294067383
    3. 'i' → logprob: -8.875673294067383
    4. '```' → logprob: -9.000673294067383
    5. '`' → logprob: -9.625673294067383
    6. '``' → logprob: -12.125673294067383
    7. '   ' → logprob: -14.000673294067383
    8. ' [' → logprob: -14.625673294067383
    9. '[
' → logprob: -14.750673294067383
    10. '       ' → logprob: -15.375673294067383

Token 2109: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0029237528797239065
    2. '][' → logprob: -6.252923965454102
    3. '```' → logprob: -7.002923965454102
    4. '`' → logprob: -10.627923965454102
    5. ')[' → logprob: -11.127923965454102
    6. '[k' → logprob: -11.377923965454102
    7. '       ' → logprob: -11.752923965454102
    8. '>[' → logprob: -12.252923965454102
    9. '``' → logprob: -12.377923965454102
    10. '0' → logprob: -12.502923965454102

Token 2110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.75000286102295
    3. 'i' → logprob: -15.00000286102295
    4. '[' → logprob: -15.12500286102295
    5. '```' → logprob: -15.75000286102295
    6. '1' → logprob: -15.87500286102295
    7. '   ' → logprob: -16.000001907348633
    8. '       ' → logprob: -16.125001907348633
    9. '           ' → logprob: -17.125001907348633
    10. 'k' → logprob: -17.125001907348633

Token 2111: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019366439431905746
    2. ')' → logprob: -4.769366264343262
    3. '           ' → logprob: -5.519366264343262
    4. ')
' → logprob: -5.644366264343262
    5. '       ' → logprob: -6.894366264343262
    6. '```' → logprob: -7.019366264343262
    7. '<|end|>' → logprob: -8.019366264343262
    8. 'k' → logprob: -8.394366264343262
    9. '[' → logprob: -8.769366264343262
    10. ',' → logprob: -9.144366264343262

Token 2112: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04480471462011337
    2. '           ' → logprob: -3.794804811477661
    3. '```' → logprob: -3.919804811477661
    4. '                   ' → logprob: -7.419804573059082
    5. '``' → logprob: -7.669804573059082
    6. 'temp' → logprob: -8.919804573059082
    7. '              ' → logprob: -9.294804573059082
    8. '       ' → logprob: -9.669804573059082
    9. '             ' → logprob: -10.169804573059082
    10. '                ' → logprob: -10.794804573059082

Token 2113: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.14048193395137787
    2. '               ' → logprob: -2.140481948852539
    3. 'k' → logprob: -5.265481948852539
    4. '           ' → logprob: -5.765481948852539
    5. '                   ' → logprob: -6.015481948852539
    6. ' temp' → logprob: -6.390481948852539
    7. '```' → logprob: -7.765481948852539
    8. '``' → logprob: -8.890481948852539
    9. '   ' → logprob: -9.265481948852539
    10. '              ' → logprob: -9.765481948852539

Token 2114: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4750564396381378
    2. ' +=' → logprob: -0.9750564098358154
    3. '           ' → logprob: -7.6000566482543945
    4. '               ' → logprob: -8.850056648254395
    5. '```' → logprob: -8.850056648254395
    6. '          ' → logprob: -9.975056648254395
    7. '       ' → logprob: -10.725056648254395
    8. '            ' → logprob: -10.975056648254395
    9. '              ' → logprob: -11.225056648254395
    10. '   ' → logprob: -11.350056648254395

Token 2115: ' beam' (ID: 36650)
  Prédit: ' beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beam' → logprob: -0.474086731672287
    2. 'beam' → logprob: -0.9740867614746094
    3. 'be' → logprob: -12.72408676147461
    4. ' ' → logprob: -12.97408676147461
    5. ' ' → logprob: -13.09908676147461
    6. '   ' → logprob: -14.34908676147461
    7. '
' → logprob: -14.72408676147461
    8. '```' → logprob: -14.84908676147461
    9. ' be' → logprob: -15.72408676147461
    10. '`' → logprob: -15.97408676147461

Token 2116: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.77627644513268e-06
    2. 'i' → logprob: -11.875008583068848
    3. '[' → logprob: -14.250008583068848
    4. '```' → logprob: -14.250008583068848
    5. '   ' → logprob: -15.750008583068848
    6. '(i' → logprob: -16.750009536743164
    7. '`' → logprob: -16.875009536743164
    8. ' ' → logprob: -17.250009536743164
    9. '{i' → logprob: -17.375009536743164
    10. '``' → logprob: -17.875009536743164

Token 2117: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20500591397285461
    2. '][' → logprob: -1.8300058841705322
    3. '[' → logprob: -3.7050058841705322
    4. '```' → logprob: -9.080005645751953
    5. '>[' → logprob: -9.955005645751953
    6. '`' → logprob: -10.205005645751953
    7. 'i' → logprob: -10.330005645751953
    8. '   ' → logprob: -10.455005645751953
    9. '>' → logprob: -11.455005645751953
    10. '}[' → logprob: -11.580005645751953

Token 2118: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8238409161567688
    2. '1' → logprob: -1.073840856552124
    3. '[i' → logprob: -1.573840856552124
    4. '[' → logprob: -4.448841094970703
    5. ' i' → logprob: -8.448841094970703
    6. '{i' → logprob: -9.323841094970703
    7. '(i' → logprob: -9.573841094970703
    8. '```' → logprob: -9.698841094970703
    9. '0' → logprob: -9.823841094970703
    10. '
' → logprob: -10.323841094970703

Token 2119: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11590195447206497
    2. '-' → logprob: -2.8659019470214844
    3. ' -' → logprob: -2.9909019470214844
    4. '][' → logprob: -7.365901947021484
    5. '               ' → logprob: -7.990901947021484
    6. ' ' → logprob: -8.615901947021484
    7. ']' → logprob: -8.740901947021484
    8. '   ' → logprob: -8.865901947021484
    9. ' [' → logprob: -8.865901947021484
    10. '[i' → logprob: -8.990901947021484

Token 2120: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16022920608520508
    2. '-' → logprob: -1.910229206085205
    3. '```' → logprob: -12.535228729248047
    4. ' ' → logprob: -14.035228729248047
    5. '   ' → logprob: -15.535228729248047
    6. '           ' → logprob: -15.910228729248047
    7. ' ' → logprob: -16.160228729248047
    8. '`' → logprob: -16.660228729248047
    9. '       ' → logprob: -16.910228729248047
    10. '        ' → logprob: -17.035228729248047

Token 2121: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.00045152619713917375
    2. '[i' → logprob: -8.25045108795166
    3. ' beam' → logprob: -9.00045108795166
    4. 'i' → logprob: -9.75045108795166
    5. ' i' → logprob: -12.87545108795166
    6. '```' → logprob: -13.37545108795166
    7. '(i' → logprob: -14.00045108795166
    8. '   ' → logprob: -14.00045108795166
    9. 'bee' → logprob: -14.50045108795166
    10. 'be' → logprob: -15.12545108795166

Token 2122: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.035446252673864365
    2. '[i' → logprob: -3.5354461669921875
    3. '-' → logprob: -5.2854461669921875
    4. '```' → logprob: -8.160446166992188
    5. 'i' → logprob: -8.660446166992188
    6. '1' → logprob: -9.285446166992188
    7. '[
' → logprob: -11.410446166992188
    8. '][' → logprob: -11.660446166992188
    9. '...' → logprob: -11.785446166992188
    10. '-[' → logprob: -12.285446166992188

Token 2123: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11977364867925644
    2. '][' → logprob: -2.8697736263275146
    3. '-' → logprob: -2.9947736263275146
    4. '[i' → logprob: -5.369773864746094
    5. ']' → logprob: -7.619773864746094
    6. '-[' → logprob: -7.869773864746094
    7. '1' → logprob: -8.369773864746094
    8. '```' → logprob: -9.244773864746094
    9. ']-' → logprob: -9.869773864746094
    10. 'i' → logprob: -10.119773864746094

Token 2124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.000000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '[' → logprob: -16.5
    5. '   ' → logprob: -16.5
    6. '<|end|>' → logprob: -17.375
    7. '0' → logprob: -18.3125
    8. '[i' → logprob: -19.1875
    9. 'from' → logprob: -19.3125
    10. 'def' → logprob: -19.375

Token 2125: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024030047934502363
    2. '           ' → logprob: -7.1274027824401855
    3. '```' → logprob: -7.1274027824401855
    4. '                   ' → logprob: -8.252403259277344
    5. ']
' → logprob: -8.502403259277344
    6. '<|end|>' → logprob: -9.377403259277344
    7. '                       ' → logprob: -9.502403259277344
    8. '              ' → logprob: -10.252403259277344
    9. ':
' → logprob: -10.627403259277344
    10. '       ' → logprob: -10.627403259277344

Token 2126: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026015799958258867
    2. '```' → logprob: -6.002601623535156
    3. '                   ' → logprob: -9.502601623535156
    4. '                       ' → logprob: -10.752601623535156
    5. '``' → logprob: -11.002601623535156
    6. '           ' → logprob: -11.627601623535156
    7. '			' → logprob: -13.502601623535156
    8. '              ' → logprob: -13.752601623535156
    9. '                ' → logprob: -14.877601623535156
    10. '
' → logprob: -15.377601623535156

Token 2127: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2711876332759857
    2. ' if' → logprob: -1.646187663078308
    3. 'if' (adapté à ' if') → logprob: -3.3961875438690186
    4. '```' → logprob: -4.896187782287598
    5. '``' → logprob: -6.521187782287598
    6. '                   ' → logprob: -6.521187782287598
    7. '                       ' → logprob: -8.271187782287598
    8. '           ' → logprob: -8.271187782287598
    9. ' k' → logprob: -9.521187782287598
    10. '   ' → logprob: -9.896187782287598

Token 2128: ' temp' (ID: 5484)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.32060548663139343
    2. ' temp' → logprob: -1.5706055164337158
    3. 'B' → logprob: -3.320605516433716
    4. 'temp' → logprob: -3.570605516433716
    5. '   ' → logprob: -7.695605278015137
    6. ' ans' → logprob: -7.820605278015137
    7. ' ' → logprob: -8.070605278015137
    8. '               ' → logprob: -8.445605278015137
    9. '                   ' → logprob: -9.195605278015137
    10. 'ans' → logprob: -9.820605278015137

Token 2129: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.022279109805822372
    2. '<=' → logprob: -3.8972790241241455
    3. ' &' → logprob: -7.022279262542725
    4. '&' → logprob: -7.772279262542725
    5. '[' → logprob: -9.647278785705566
    6. '               ' → logprob: -10.397278785705566
    7. ' &=' → logprob: -10.397278785705566
    8. '   ' → logprob: -10.522278785705566
    9. '```' → logprob: -10.522278785705566
    10. ' <<=' → logprob: -10.647278785705566

Token 2130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38688480854034424
    2. ' ' → logprob: -1.1368848085403442
    3. '               ' → logprob: -12.261884689331055
    4. '```' → logprob: -12.886884689331055
    5. '                   ' → logprob: -13.136884689331055
    6. '   ' → logprob: -13.261884689331055
    7. '           ' → logprob: -13.761884689331055
    8. '
' → logprob: -15.136884689331055
    9. ' ' → logprob: -15.386884689331055
    10. '                       ' → logprob: -15.511884689331055

Token 2131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007112398743629456
    2. ' ' → logprob: -7.250711441040039
    3. '1' → logprob: -14.125711441040039
    4. '```' → logprob: -15.375711441040039
    5. '
' → logprob: -16.00071144104004
    6. '-' → logprob: -16.50071144104004
    7. 'i' → logprob: -16.87571144104004
    8. '   ' → logprob: -17.25071144104004
    9. ' ' → logprob: -18.25071144104004
    10. '``' → logprob: -18.87571144104004

Token 2132: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0231732577085495
    2. ':
' → logprob: -4.2731733322143555
    3. ':' → logprob: -5.1481733322143555
    4. '                       ' → logprob: -6.7731733322143555
    5. '               ' → logprob: -6.8981733322143555
    6. '```' → logprob: -7.1481733322143555
    7. '                  ' → logprob: -9.398173332214355
    8. '           ' → logprob: -10.148173332214355
    9. '):
' → logprob: -10.898173332214355
    10. '                    ' → logprob: -11.148173332214355

Token 2133: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002055096672847867
    2. '               ' → logprob: -7.2520551681518555
    3. '                       ' → logprob: -7.3770551681518555
    4. '```' → logprob: -7.3770551681518555
    5. '                  ' → logprob: -10.502055168151855
    6. '                           ' → logprob: -11.002055168151855
    7. '``' → logprob: -11.127055168151855
    8. '           ' → logprob: -11.502055168151855
    9. '                ' → logprob: -12.252055168151855
    10. '                 ' → logprob: -12.502055168151855

Token 2134: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.21069926023483276
    2. '                   ' → logprob: -2.3356993198394775
    3. 'temp' (adapté à ' temp') → logprob: -2.5856993198394775
    4. '                       ' → logprob: -4.210699081420898
    5. '               ' → logprob: -6.960699081420898
    6. '                               ' → logprob: -7.210699081420898
    7. '                           ' → logprob: -7.960699081420898
    8. '   ' → logprob: -8.085699081420898
    9. '```' → logprob: -9.085699081420898
    10. '                    ' → logprob: -9.210699081420898

Token 2135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003347506280988455
    2. '   ' → logprob: -8.750334739685059
    3. '_' → logprob: -9.250334739685059
    4. '```' → logprob: -10.250334739685059
    5. '       ' → logprob: -11.250334739685059
    6. '_tokens' → logprob: -11.875334739685059
    7. '    ' → logprob: -12.250334739685059
    8. '₂' → logprob: -12.250334739685059
    9. '  ' → logprob: -12.625334739685059
    10. '=' → logprob: -13.125334739685059

Token 2136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10512171685695648
    2. '=' → logprob: -2.355121612548828
    3. '                   ' → logprob: -5.480121612548828
    4. '```' → logprob: -8.105121612548828
    5. '                       ' → logprob: -8.230121612548828
    6. '               ' → logprob: -10.230121612548828
    7. ':' → logprob: -10.480121612548828
    8. '                    ' → logprob: -10.980121612548828
    9. '                        ' → logprob: -11.230121612548828
    10. '           ' → logprob: -11.355121612548828

Token 2137: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6931489109992981
    2. ' abs' → logprob: -0.6931489109992981
    3. '(abs' → logprob: -13.443148612976074
    4. '.abs' → logprob: -16.44314956665039
    5. '_abs' → logprob: -16.94314956665039
    6. 'Abs' → logprob: -17.44314956665039
    7. '
' → logprob: -18.69314956665039
    8. 'temp' → logprob: -19.06814956665039
    9. ' ' → logprob: -19.56814956665039
    10. '           ' → logprob: -19.81814956665039

Token 2138: '(temp' (ID: 19094)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.010103936307132244
    2. 'abs' → logprob: -5.260103702545166
    3. ' temp' → logprob: -6.010103702545166
    4. '(temp' → logprob: -6.135103702545166
    5. '[temp' → logprob: -8.635104179382324
    6. '(abs' → logprob: -10.635104179382324
    7. ' abs' → logprob: -10.635104179382324
    8. '$temp' → logprob: -13.135104179382324
    9. 'tmp' → logprob: -13.260104179382324
    10. '                   ' → logprob: -13.260104179382324

Token 2139: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11138448119163513
    2. '                       ' → logprob: -2.861384391784668
    3. ')' → logprob: -3.486384391784668
    4. '               ' → logprob: -4.736384391784668
    5. ')
' → logprob: -6.236384391784668
    6. '```' → logprob: -6.361384391784668
    7. '                           ' → logprob: -7.111384391784668
    8. '           ' → logprob: -7.111384391784668
    9. '``' → logprob: -7.736384391784668
    10. '                  ' → logprob: -7.736384391784668

Token 2140: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2815474271774292
    2. '                   ' → logprob: -1.9065474271774292
    3. '```' → logprob: -2.5315475463867188
    4. '``' → logprob: -5.406547546386719
    5. '                    ' → logprob: -5.656547546386719
    6. '                        ' → logprob: -5.906547546386719
    7. '                      ' → logprob: -6.281547546386719
    8. '                               ' → logprob: -6.656547546386719
    9. '                           ' → logprob: -6.781547546386719
    10. '                  ' → logprob: -7.031547546386719

Token 2141: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.8161671757698059
    2. '                   ' → logprob: -1.3161671161651611
    3. 'B' (adapté à ' B') → logprob: -1.4411671161651611
    4. '                       ' → logprob: -3.066167116165161
    5. ' ans' → logprob: -6.06616735458374
    6. '                    ' → logprob: -6.94116735458374
    7. '                     ' → logprob: -7.31616735458374
    8. '                  ' → logprob: -7.56616735458374
    9. '                      ' → logprob: -7.69116735458374
    10. '                           ' → logprob: -7.69116735458374

Token 2142: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17096149921417236
    2. '                   ' → logprob: -2.295961380004883
    3. ' =' → logprob: -3.295961380004883
    4. '=' → logprob: -4.170961380004883
    5. '               ' → logprob: -6.545961380004883
    6. '```' → logprob: -6.670961380004883
    7. ' ,' → logprob: -7.920961380004883
    8. '                       ' → logprob: -8.170961380004883
    9. '           ' → logprob: -8.795961380004883
    10. '[' → logprob: -9.170961380004883

Token 2143: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.313264399766922
    2. ' beam' → logprob: -1.3132643699645996
    3. 'be' → logprob: -13.688264846801758
    4. 'ans' → logprob: -14.563264846801758
    5. ' ' → logprob: -15.438264846801758
    6. ' ans' → logprob: -15.438264846801758
    7. 'Beam' → logprob: -15.938264846801758
    8. '```' → logprob: -15.938264846801758
    9. '`' → logprob: -16.688264846801758
    10. 'b' → logprob: -16.938264846801758

Token 2144: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -13.125003814697266
    3. '```' → logprob: -13.500003814697266
    4. 'i' → logprob: -14.500003814697266
    5. '(i' → logprob: -15.625003814697266
    6. '   ' → logprob: -16.500003814697266
    7. ' [' → logprob: -18.125003814697266
    8. '{i' → logprob: -18.250003814697266
    9. ',i' → logprob: -18.375003814697266
    10. '[
' → logprob: -19.375003814697266

Token 2145: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.036437444388866425
    2. '[i' → logprob: -3.911437511444092
    3. '[' → logprob: -4.161437511444092
    4. ')[' → logprob: -9.286437034606934
    5. ']' → logprob: -10.286437034606934
    6. ''][' → logprob: -11.411437034606934
    7. '```' → logprob: -11.536437034606934
    8. 'i' → logprob: -11.661437034606934
    9. '"][' → logprob: -11.786437034606934
    10. '>[' → logprob: -12.286437034606934

Token 2146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8074162653647363e-05
    2. 'i' → logprob: -11.500018119812012
    3. '```' → logprob: -12.125018119812012
    4. '   ' → logprob: -14.375018119812012
    5. '
' → logprob: -14.875018119812012
    6. '[' → logprob: -14.875018119812012
    7. '[i' → logprob: -15.125018119812012
    8. '-' → logprob: -15.125018119812012
    9. ' ' → logprob: -16.125017166137695
    10. '0' → logprob: -16.250017166137695

Token 2147: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026725780218839645
    2. '               ' → logprob: -3.7767257690429688
    3. ']' → logprob: -6.901725769042969
    4. '                       ' → logprob: -7.026725769042969
    5. '           ' → logprob: -7.776725769042969
    6. '```' → logprob: -8.026725769042969
    7. ']
' → logprob: -8.651725769042969
    8. '                  ' → logprob: -8.901725769042969
    9. '                ' → logprob: -9.276725769042969
    10. '                 ' → logprob: -9.401725769042969

Token 2148: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006394538097083569
    2. '                       ' → logprob: -5.631394386291504
    3. '```' → logprob: -6.006394386291504
    4. '               ' → logprob: -8.131394386291504
    5. '``' → logprob: -11.256394386291504
    6. '                           ' → logprob: -12.256394386291504
    7. '           ' → logprob: -12.381394386291504
    8. '                    ' → logprob: -12.881394386291504
    9. 'if' → logprob: -12.881394386291504
    10. '                  ' → logprob: -13.131394386291504

Token 2149: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2530210614204407
    2. '                   ' → logprob: -2.503021001815796
    3. ' if' → logprob: -2.503021001815796
    4. '                       ' → logprob: -2.878021001815796
    5. '```' → logprob: -6.003021240234375
    6. '                           ' → logprob: -8.253021240234375
    7. '``' → logprob: -8.253021240234375
    8. '               ' → logprob: -8.503021240234375
    9. '                    ' → logprob: -8.878021240234375
    10. '                      ' → logprob: -9.628021240234375

Token 2150: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.06470010429620743
    2. 'B' → logprob: -2.814700126647949
    3. ' ans' → logprob: -5.939700126647949
    4. 'ans' → logprob: -9.31470012664795
    5. '(ans' → logprob: -12.81470012664795
    6. ' ' → logprob: -14.06470012664795
    7. 'Ans' → logprob: -14.68970012664795
    8. '   ' → logprob: -15.06470012664795
    9. ' ' → logprob: -15.18970012664795
    10. '(B' → logprob: -15.56470012664795

Token 2151: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.007888627238571644
    2. '*' → logprob: -4.8828887939453125
    3. '[' → logprob: -9.007888793945312
    4. '```' → logprob: -9.507888793945312
    5. '*[' → logprob: -9.882888793945312
    6. '                   ' → logprob: -11.882888793945312
    7. '   ' → logprob: -12.132888793945312
    8. ' [' → logprob: -12.257888793945312
    9. '               ' → logprob: -12.257888793945312
    10. ' ' → logprob: -12.382888793945312

Token 2152: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5759493708610535
    2. ' ans' → logprob: -0.8259493708610535
    3. '(ans' → logprob: -11.950949668884277
    4. '	ans' → logprob: -13.450949668884277
    5. '_ans' → logprob: -14.075949668884277
    6. '
' → logprob: -15.700949668884277
    7. '...' → logprob: -15.950949668884277
    8. ' ' → logprob: -16.20094871520996
    9. '           ' → logprob: -16.20094871520996
    10. 'Ans' → logprob: -16.32594871520996

Token 2153: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2764611840248108
    2. ' *' → logprob: -1.526461124420166
    3. '*' → logprob: -4.151461124420166
    4. '```' → logprob: -5.401461124420166
    5. ' [' → logprob: -7.026461124420166
    6. '*[' → logprob: -7.276461124420166
    7. '``' → logprob: -7.526461124420166
    8. '   ' → logprob: -8.026461601257324
    9. '][' → logprob: -8.276461601257324
    10. '                   ' → logprob: -8.526461601257324

Token 2154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006859228014945984
    2. ' ' → logprob: -5.006859302520752
    3. '1' → logprob: -9.506858825683594
    4. '[' → logprob: -10.631858825683594
    5. '```' → logprob: -11.131858825683594
    6. '
' → logprob: -11.381858825683594
    7. '   ' → logprob: -11.506858825683594
    8. '-' → logprob: -12.881858825683594
    9. '2' → logprob: -13.256858825683594
    10. '  ' → logprob: -13.506858825683594

Token 2155: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.048669010400772095
    2. '<' → logprob: -3.0486690998077393
    3. '```' → logprob: -11.04866886138916
    4. '<n' → logprob: -11.79866886138916
    5. '<p' → logprob: -11.92366886138916
    6. '[' → logprob: -12.04866886138916
    7. '                       ' → logprob: -12.17366886138916
    8. '                   ' → logprob: -12.29866886138916
    9. '<int' → logprob: -12.42366886138916
    10. ']' → logprob: -12.79866886138916

Token 2156: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.25203433632850647
    2. ' <' → logprob: -1.502034306526184
    3. '                       ' → logprob: -10.627034187316895
    4. '<int' → logprob: -10.877034187316895
    5. '```' → logprob: -11.752034187316895
    6. '<size' → logprob: -12.252034187316895
    7. '<data' → logprob: -12.377034187316895
    8. '<len' → logprob: -12.627034187316895
    9. '<n' → logprob: -12.877034187316895
    10. '                   ' → logprob: -13.002034187316895

Token 2157: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5759474635124207
    2. 'ans' → logprob: -0.8259474635124207
    3. '(ans' → logprob: -12.075947761535645
    4. '	ans' → logprob: -13.950947761535645
    5. '_ans' → logprob: -14.325947761535645
    6. '0' → logprob: -15.700947761535645
    7. 'Ans' → logprob: -16.075946807861328
    8. '
' → logprob: -16.200946807861328
    9. 'abs' → logprob: -16.950946807861328
    10. 'start' → logprob: -17.075946807861328

Token 2158: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001785490894690156
    2. 'ans' → logprob: -6.8767852783203125
    3. ' ans' → logprob: -8.001785278320312
    4. '```' → logprob: -8.626785278320312
    5. '   ' → logprob: -10.001785278320312
    6. '*' → logprob: -10.501785278320312
    7. '[i' → logprob: -10.626785278320312
    8. '(ans' → logprob: -11.126785278320312
    9. '-' → logprob: -11.251785278320312
    10. '       ' → logprob: -11.376785278320312

Token 2159: '1' (ID: 16)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.02982812002301216
    2. '1' → logprob: -3.5298280715942383
    3. ' ans' → logprob: -9.779828071594238
    4. '(ans' → logprob: -11.779828071594238
    5. '```' → logprob: -12.404828071594238
    6. '   ' → logprob: -12.529828071594238
    7. '[' → logprob: -13.529828071594238
    8. '	ans' → logprob: -13.904828071594238
    9. ' ' → logprob: -14.154828071594238
    10. '``' → logprob: -14.279828071594238

Token 2160: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.006639940198510885
    2. '*' → logprob: -5.1316399574279785
    3. '                   ' → logprob: -8.63163948059082
    4. '                       ' → logprob: -8.63163948059082
    5. '```' → logprob: -9.25663948059082
    6. ' <' → logprob: -9.75663948059082
    7. ' ' → logprob: -10.38163948059082
    8. '                        ' → logprob: -10.38163948059082
    9. '                    ' → logprob: -10.50663948059082
    10. ' ' → logprob: -10.88163948059082

Token 2161: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20149646699428558
    2. '*' → logprob: -1.7014964818954468
    3. '*t' → logprob: -10.576496124267578
    4. '```' → logprob: -10.951496124267578
    5. ' ' → logprob: -11.826496124267578
    6. '*[' → logprob: -12.451496124267578
    7. '[' → logprob: -12.576496124267578
    8. '*object' → logprob: -12.576496124267578
    9. ' ' → logprob: -12.701496124267578
    10. '*out' → logprob: -12.951496124267578

Token 2162: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.3132641315460205
    2. 'temp' → logprob: -1.3132641315460205
    3. 't' → logprob: -13.313263893127441
    4. 'tmp' → logprob: -15.438263893127441
    5. '(temp' → logprob: -15.938263893127441
    6. '[temp' → logprob: -15.938263893127441
    7. '	temp' → logprob: -16.688264846801758
    8. ' tmp' → logprob: -16.813264846801758
    9. 'test' → logprob: -17.188264846801758
    10. 'tem' → logprob: -17.438264846801758

Token 2163: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004278083215467632
    2. '[' → logprob: -7.875427722930908
    3. '```' → logprob: -11.000428199768066
    4. '   ' → logprob: -11.375428199768066
    5. '0' → logprob: -11.500428199768066
    6. ' ' → logprob: -12.750428199768066
    7. '
' → logprob: -13.625428199768066
    8. '-' → logprob: -13.750428199768066
    9. '*' → logprob: -13.750428199768066
    10. '``' → logprob: -14.125428199768066

Token 2164: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.20887692272663116
    2. ':
' → logprob: -1.8338769674301147
    3. '                   ' → logprob: -3.958876848220825
    4. ':' → logprob: -5.208877086639404
    5. '               ' → logprob: -6.583877086639404
    6. ']:
' → logprob: -6.708877086639404
    7. '[' → logprob: -7.208877086639404
    8. '                           ' → logprob: -8.833876609802246
    9. '```' → logprob: -9.083876609802246
    10. '                        ' → logprob: -9.333876609802246

Token 2165: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002692651702091098
    2. '                   ' → logprob: -6.627692699432373
    3. '```' → logprob: -6.752692699432373
    4. '               ' → logprob: -9.252692222595215
    5. '                           ' → logprob: -10.377692222595215
    6. '                      ' → logprob: -11.127692222595215
    7. '=' → logprob: -11.502692222595215
    8. '                        ' → logprob: -11.502692222595215
    9. '+=' → logprob: -11.877692222595215
    10. '``' → logprob: -12.127692222595215

Token 2166: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.01815146580338478
    2. 'ans' (adapté à ' ans') → logprob: -4.01815128326416
    3. '	ans' → logprob: -14.39315128326416
    4. '(ans' → logprob: -14.76815128326416
    5. '```' → logprob: -15.01815128326416
    6. '_ans' → logprob: -16.143152236938477
    7. '``' → logprob: -16.893152236938477
    8. '                       ' → logprob: -17.143152236938477
    9. '                           ' → logprob: -17.393152236938477
    10. '                   ' → logprob: -17.518152236938477

Token 2167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759910941123962
    2. ' =' → logprob: -0.8259910941123962
    3. '[' → logprob: -10.700990676879883
    4. '=[' → logprob: -10.825990676879883
    5. '```' → logprob: -13.200990676879883
    6. '+=' → logprob: -13.325990676879883
    7. ' =[' → logprob: -13.575990676879883
    8. ' +=' → logprob: -14.200990676879883
    9. ']' → logprob: -14.200990676879883
    10. '   ' → logprob: -14.200990676879883

Token 2168: ' [' (ID: 723)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.5033217668533325
    2. ' [' → logprob: -1.0033217668533325
    3. '[' → logprob: -4.253321647644043
    4. '[temp' → logprob: -4.253321647644043
    5. '[B' → logprob: -8.128321647644043
    6. '[test' → logprob: -10.253321647644043
    7. '[target' → logprob: -11.378321647644043
    8. '[token' → logprob: -11.753321647644043
    9. '[b' → logprob: -11.878321647644043
    10. '[tmp' → logprob: -12.253321647644043

Token 2169: 'temp' (ID: 7340)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6763880848884583
    2. 'temp' → logprob: -0.9263880848884583
    3. 'B' → logprob: -3.1763880252838135
    4. '0' → logprob: -3.3013880252838135
    5. '[' → logprob: -4.426388263702393
    6. '[temp' → logprob: -6.426388263702393
    7. ' ans' → logprob: -7.176388263702393
    8. 'beam' → logprob: -7.301388263702393
    9. '   ' → logprob: -8.051387786865234
    10. '1' → logprob: -8.426387786865234

Token 2170: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21602191030979156
    2. '2' → logprob: -1.8410218954086304
    3. '[' → logprob: -3.34102201461792
    4. '1' → logprob: -9.216021537780762
    5. '   ' → logprob: -9.591021537780762
    6. '```' → logprob: -10.966021537780762
    7. '-' → logprob: -11.591021537780762
    8. '       ' → logprob: -11.841021537780762
    9. ' ' → logprob: -12.591021537780762
    10. '
' → logprob: -12.716021537780762

Token 2171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002971399575471878
    2. '[' → logprob: -6.252971172332764
    3. '                       ' → logprob: -8.127971649169922
    4. '                   ' → logprob: -8.252971649169922
    5. '               ' → logprob: -8.627971649169922
    6. '           ' → logprob: -9.252971649169922
    7. ',
' → logprob: -10.377971649169922
    8. ' ,' → logprob: -10.752971649169922
    9. '][' → logprob: -11.127971649169922
    10. '+' → logprob: -11.377971649169922

Token 2172: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.038467150181531906
    2. ' B' → logprob: -3.2884671688079834
    3. 'ans' → logprob: -8.288467407226562
    4. ' ans' → logprob: -8.663467407226562
    5. '_B' → logprob: -13.788467407226562
    6. '	B' → logprob: -15.788467407226562
    7. 'Ｂ' → logprob: -16.413467407226562
    8. '[B' → logprob: -17.038467407226562
    9. ' ' → logprob: -17.038467407226562
    10. '   ' → logprob: -17.538467407226562

Token 2173: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1920102834701538
    2. '                       ' → logprob: -2.5670104026794434
    3. '               ' → logprob: -2.9420104026794434
    4. '           ' → logprob: -3.3170104026794434
    5. ']' → logprob: -6.317010402679443
    6. ')' → logprob: -6.317010402679443
    7. '```' → logprob: -6.567010402679443
    8. '       ' → logprob: -6.942010402679443
    9. '                           ' → logprob: -7.067010402679443
    10. '                  ' → logprob: -8.067009925842285

Token 2174: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36012041568756104
    2. '                   ' → logprob: -1.360120415687561
    3. '                       ' → logprob: -3.6101202964782715
    4. '           ' → logprob: -4.7351202964782715
    5. '   ' → logprob: -4.9851202964782715
    6. '                ' → logprob: -7.2351202964782715
    7. 'print' → logprob: -7.2351202964782715
    8. '       ' → logprob: -7.7351202964782715
    9. '                    ' → logprob: -8.23512077331543
    10. '```' → logprob: -8.36012077331543

Token 2175: ' temp' (ID: 5484)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11778460443019867
    2. 'temp' (adapté à ' temp') → logprob: -2.2427845001220703
    3. '```' → logprob: -5.99278450012207
    4. 'for' → logprob: -6.49278450012207
    5. ' temp' → logprob: -7.49278450012207
    6. '``' → logprob: -8.61778450012207
    7. '           ' → logprob: -9.36778450012207
    8. ' for' → logprob: -9.61778450012207
    9. '                   ' → logprob: -10.74278450012207
    10. '   ' → logprob: -12.36778450012207

Token 2176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05508504807949066
    2. '=' → logprob: -2.9300849437713623
    3. '               ' → logprob: -9.680085182189941
    4. '           ' → logprob: -9.930085182189941
    5. '```' → logprob: -10.680085182189941
    6. '                   ' → logprob: -11.305085182189941
    7. '        ' → logprob: -11.430085182189941
    8. '            ' → logprob: -11.430085182189941
    9. '       ' → logprob: -11.555085182189941
    10. '                ' → logprob: -11.805085182189941

Token 2177: ' min' (ID: 1349)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.00012415809032972902
    2. ' Seg' → logprob: -9.000123977661133
    3. 'Segment' → logprob: -14.375123977661133
    4. 'seg' → logprob: -15.875123977661133
    5. '_seg' → logprob: -17.375123977661133
    6. 'Segments' → logprob: -18.750123977661133
    7. 'SEG' → logprob: -19.000123977661133
    8. '           ' → logprob: -19.250123977661133
    9. '   ' → logprob: -19.500123977661133
    10. '```' → logprob: -19.500123977661133

Token 2178: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.12700244784355164
    2. 'Seg' → logprob: -2.127002477645874
    3. '(
' → logprob: -10.252002716064453
    4. ' Seg' → logprob: -11.252002716064453
    5. '(seg' → logprob: -11.377002716064453
    6. '(' → logprob: -12.252002716064453
    7. '(temp' → logprob: -12.752002716064453
    8. 'temp' → logprob: -13.502002716064453
    9. 'Tem' → logprob: -13.502002716064453
    10. '_S' → logprob: -14.127002716064453

Token 2179: 'eg' (ID: 1207)
  Prédit: 'eg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.1285032033920288
    2. 'Seg' → logprob: -2.2535033226013184
    3. 'EG' → logprob: -4.753503322601318
    4. 'Tree' → logprob: -5.628503322601318
    5. 'Eg' → logprob: -6.753503322601318
    6. 'e' → logprob: -7.628503322601318
    7. 'temp' → logprob: -8.62850284576416
    8. 'tree' → logprob: -8.62850284576416
    9. 'Tem' → logprob: -8.62850284576416
    10. 't' → logprob: -8.75350284576416

Token 2180: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.7432603272027336e-06
    2. 'ree' → logprob: -13.375001907348633
    3. 'tree' → logprob: -16.125001907348633
    4. '_tree' → logprob: -17.375001907348633
    5. '```' → logprob: -17.500001907348633
    6. 'Tre' → logprob: -18.375001907348633
    7. '<Tree' → logprob: -18.750001907348633
    8. '(Tree' → logprob: -18.875001907348633
    9. '``' → logprob: -19.375001907348633
    10. '	Tree' → logprob: -19.375001907348633

Token 2181: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -8.602024900028482e-05
    2. 'query' → logprob: -9.375085830688477
    3. 'Query' → logprob: -15.000085830688477
    4. '1' → logprob: -15.125085830688477
    5. '```' → logprob: -15.625085830688477
    6. '$query' → logprob: -16.500085830688477
    7. '_tree' → logprob: -17.500085830688477
    8. '_' → logprob: -17.500085830688477
    9. '_q' → logprob: -17.625085830688477
    10. '`' → logprob: -17.625085830688477

Token 2182: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.00011081460979767144
    2. 'tree' → logprob: -9.125110626220703
    3. '```' → logprob: -13.625110626220703
    4. '	tree' → logprob: -14.500110626220703
    5. '/tree' → logprob: -16.750110626220703
    6. '(' → logprob: -17.375110626220703
    7. ' tree' → logprob: -18.625110626220703
    8. '`' → logprob: -18.750110626220703
    9. '.tree' → logprob: -19.000110626220703
    10. '(trace' → logprob: -19.125110626220703

Token 2183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.357081800699234
    2. '2' → logprob: -1.4820817708969116
    3. 'tree' → logprob: -2.732081890106201
    4. '(tree' → logprob: -5.357081890106201
    5. '```' → logprob: -6.232081890106201
    6. ',' → logprob: -7.107081890106201
    7. '``' → logprob: -8.482081413269043
    8. '   ' → logprob: -9.357081413269043
    9. '
' → logprob: -10.107081413269043
    10. '_,' → logprob: -10.357081413269043

Token 2184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005263288039714098
    2. '(tree' → logprob: -5.255263328552246
    3. '```' → logprob: -11.130263328552246
    4. '(' → logprob: -12.380263328552246
    5. ' ,' → logprob: -12.505263328552246
    6. 'tree' → logprob: -12.630263328552246
    7. ',t' → logprob: -14.630263328552246
    8. ',
' → logprob: -15.005263328552246
    9. ',num' → logprob: -15.130263328552246
    10. ')' → logprob: -15.130263328552246

Token 2185: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.023577256128191948
    2. ' num' → logprob: -3.7735772132873535
    3. 'tree' → logprob: -8.023577690124512
    4. ' tree' → logprob: -12.523577690124512
    5. '```' → logprob: -15.398577690124512
    6. ',num' → logprob: -16.398576736450195
    7. ',' → logprob: -17.648576736450195
    8. '1' → logprob: -17.648576736450195
    9. 'number' → logprob: -17.898576736450195
    10. '[num' → logprob: -17.898576736450195

Token 2186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007629302563145757
    2. ',' → logprob: -7.250762939453125
    3. '```' → logprob: -10.500762939453125
    4. '2' → logprob: -11.125762939453125
    5. '_,' → logprob: -12.875762939453125
    6. '   ' → logprob: -13.375762939453125
    7. 'tree' → logprob: -13.625762939453125
    8. '``' → logprob: -13.750762939453125
    9. 'num' → logprob: -14.000762939453125
    10. '[' → logprob: -14.500762939453125

Token 2187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4617256056226324e-05
    2. '(tree' → logprob: -11.375014305114746
    3. ' ,' → logprob: -13.250014305114746
    4. '```' → logprob: -13.875014305114746
    5. '[' → logprob: -16.250015258789062
    6. ',
' → logprob: -16.750015258789062
    7. '       ' → logprob: -17.250015258789062
    8. ')' → logprob: -17.625015258789062
    9. 'tree' → logprob: -17.750015258789062
    10. '_,' → logprob: -18.000015258789062

Token 2188: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.3873375356197357
    2. ' seg' → logprob: -1.137337565422058
    3. 'num' → logprob: -7.887337684631348
    4. ' num' → logprob: -10.262337684631348
    5. '```' → logprob: -10.387337684631348
    6. '(seg' → logprob: -11.512337684631348
    7. 'ide' → logprob: -11.637337684631348
    8. 'temp' → logprob: -13.637337684631348
    9. 'segment' → logprob: -13.887337684631348
    10. 'None' → logprob: -14.137337684631348

Token 2189: 'func' (ID: 5652)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8733654618263245
    2. 'num' → logprob: -1.6233654022216797
    3. ',' → logprob: -1.9983654022216797
    4. 'func' → logprob: -2.1233654022216797
    5. 'tree' → logprob: -2.2483654022216797
    6. '_func' → logprob: -4.99836540222168
    7. '```' → logprob: -5.24836540222168
    8. '_,' → logprob: -5.37336540222168
    9. '1' → logprob: -6.49836540222168
    10. 'seg' → logprob: -6.74836540222168

Token 2190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6789137084269896e-05
    2. '(tree' → logprob: -10.25003719329834
    3. ' ,' → logprob: -14.12503719329834
    4. '```' → logprob: -14.50003719329834
    5. 'tree' → logprob: -16.625036239624023
    6. ',
' → logprob: -17.750036239624023
    7. '	tree' → logprob: -18.875036239624023
    8. ')' → logprob: -19.000036239624023
    9. '[' → logprob: -19.000036239624023
    10. '   ' → logprob: -19.375036239624023

Token 2191: ' ide' (ID: 2750)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.029751643538475037
    2. ' num' → logprob: -3.5297515392303467
    3. 'temp' → logprob: -14.279751777648926
    4. 'tree' → logprob: -15.029751777648926
    5. '```' → logprob: -16.27975082397461
    6. ' temp' → logprob: -17.40475082397461
    7. '	num' → logprob: -17.65475082397461
    8. '1' → logprob: -18.02975082397461
    9. '0' → logprob: -18.15475082397461
    10. '(num' → logprob: -18.15475082397461

Token 2192: '_ele' (ID: 154942)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.10597813874483109
    2. '2' → logprob: -2.35597825050354
    3. '_num' → logprob: -5.980978012084961
    4. ',' → logprob: -6.730978012084961
    5. '```' → logprob: -7.480978012084961
    6. 'ide' → logprob: -7.730978012084961
    7. 'tree' → logprob: -8.230978012084961
    8. '_,' → logprob: -8.730978012084961
    9. '   ' → logprob: -8.855978012084961
    10. '``' → logprob: -9.605978012084961

Token 2193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.008129963040119e-06
    2. ' ,' → logprob: -12.875003814697266
    3. '```' → logprob: -14.375003814697266
    4. '(tree' → logprob: -14.625003814697266
    5. ',t' → logprob: -15.875003814697266
    6. ',
' → logprob: -16.875003814697266
    7. ',user' → logprob: -17.125003814697266
    8. '           ' → logprob: -17.250003814697266
    9. ',k' → logprob: -17.500003814697266
    10. '       ' → logprob: -17.625003814697266

Token 2194: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.023302430287003517
    2. 'm' → logprob: -4.5233025550842285
    3. ' R' → logprob: -4.6483025550842285
    4. 'temp' → logprob: -6.6483025550842285
    5. 'L' → logprob: -7.3983025550842285
    6. 'start' → logprob: -8.27330207824707
    7. ' m' → logprob: -9.14830207824707
    8. '0' → logprob: -9.27330207824707
    9. ' temp' → logprob: -9.77330207824707
    10. 'num' → logprob: -9.89830207824707

Token 2195: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4296462833881378
    2. ' +' → logprob: -1.0546462535858154
    3. ',' → logprob: -7.3046464920043945
    4. '```' → logprob: -8.304646492004395
    5. '+,' → logprob: -11.554646492004395
    6. '``' → logprob: -12.929646492004395
    7. '           ' → logprob: -12.929646492004395
    8. ' ,' → logprob: -13.679646492004395
    9. '               ' → logprob: -13.929646492004395
    10. '＋' → logprob: -14.179646492004395

Token 2196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000387535837944597
    2. ' ' → logprob: -8.375387191772461
    3. '+' → logprob: -9.250387191772461
    4. '```' → logprob: -10.000387191772461
    5. '           ' → logprob: -12.875387191772461
    6. '                   ' → logprob: -13.125387191772461
    7. '                       ' → logprob: -13.250387191772461
    8. ' +' → logprob: -13.750387191772461
    9. '   ' → logprob: -13.875387191772461
    10. '                               ' → logprob: -13.937887191772461

Token 2197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.25000286102295
    3. '```' → logprob: -14.12500286102295
    4. '+' → logprob: -15.68750286102295
    5. '   ' → logprob: -15.87500286102295
    6. '
' → logprob: -16.437503814697266
    7. '2' → logprob: -17.500003814697266
    8. '0' → logprob: -17.562503814697266
    9. '`' → logprob: -17.750003814697266
    10. '  ' → logprob: -18.187503814697266

Token 2198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024949219077825546
    2. ',num' → logprob: -6.002494812011719
    3. ' ,' → logprob: -11.502494812011719
    4. '```' → logprob: -11.752494812011719
    5. '       ' → logprob: -14.627494812011719
    6. '   ' → logprob: -15.377494812011719
    7. ',n' → logprob: -16.50249481201172
    8. '`,' → logprob: -16.50249481201172
    9. '``' → logprob: -16.50249481201172
    10. ',user' → logprob: -16.62749481201172

Token 2199: ' N' (ID: 478)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.014212748035788536
    2. ' num' → logprob: -4.264212608337402
    3. 'N' → logprob: -10.014212608337402
    4. ' N' → logprob: -12.389212608337402
    5. 'n' → logprob: -15.889212608337402
    6. 'Num' → logprob: -16.88921356201172
    7. '```' → logprob: -16.88921356201172
    8. 'NUM' → logprob: -17.76421356201172
    9. '(num' → logprob: -18.38921356201172
    10. ' ' → logprob: -19.01421356201172

Token 2200: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045138511806726456
    2. ')' → logprob: -3.5451385974884033
    3. ')
' → logprob: -4.420138359069824
    4. '),' → logprob: -6.795138359069824
    5. '               ' → logprob: -7.045138359069824
    6. '           ' → logprob: -7.670138359069824
    7. '       ' → logprob: -8.295138359069824
    8. '```' → logprob: -8.670138359069824
    9. '   ' → logprob: -9.170138359069824
    10. '                   ' → logprob: -9.670138359069824

Token 2201: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.8949010372161865
    2. ' Seg' → logprob: -1.5199010372161865
    3. ' temp' → logprob: -2.0199010372161865
    4. 'temp' → logprob: -2.3949010372161865
    5. 'beam' → logprob: -2.7699010372161865
    6. ' beam' → logprob: -3.1449010372161865
    7. '               ' → logprob: -4.519901275634766
    8. '0' → logprob: -5.394901275634766
    9. '                   ' → logprob: -5.394901275634766
    10. ' seg' → logprob: -5.894901275634766

Token 2202: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.2948405128554441e-05
    2. 'g' → logprob: -12.25001335144043
    3. 'tree' → logprob: -13.37501335144043
    4. 't' → logprob: -13.50001335144043
    5. 'ree' → logprob: -13.75001335144043
    6. 'CT' → logprob: -14.00001335144043
    7. 'eg' → logprob: -14.25001335144043
    8. 'T' → logprob: -14.62501335144043
    9. 'Tre' → logprob: -14.62501335144043
    10. '```' → logprob: -14.75001335144043

Token 2203: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -7.898723561083898e-05
    2. 'Query' → logprob: -9.625079154968262
    3. '1' → logprob: -11.875079154968262
    4. 'query' → logprob: -12.375079154968262
    5. '2' → logprob: -15.250079154968262
    6. '```' → logprob: -15.250079154968262
    7. '
' → logprob: -16.375078201293945
    8. '_tree' → logprob: -16.375078201293945
    9. 'Tree' → logprob: -16.625078201293945
    10. '_QUERY' → logprob: -16.625078201293945

Token 2204: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.0015192650025710464
    2. 'tree' → logprob: -6.501519203186035
    3. '(' → logprob: -11.626519203186035
    4. '```' → logprob: -12.126519203186035
    5. '	tree' → logprob: -13.251519203186035
    6. '   ' → logprob: -14.876519203186035
    7. '(
' → logprob: -15.251519203186035
    8. ' (' → logprob: -16.62652015686035
    9. ',' → logprob: -17.12652015686035
    10. ' tree' → logprob: -17.50152015686035

Token 2205: '1' (ID: 16)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.18862760066986084
    2. '1' → logprob: -1.8136276006698608
    3. '(tree' → logprob: -5.68862771987915
    4. ',' → logprob: -6.31362771987915
    5. '```' → logprob: -6.31362771987915
    6. 'num' → logprob: -6.43862771987915
    7. '_tree' → logprob: -8.813627243041992
    8. '_num' → logprob: -10.813627243041992
    9. ' tree' → logprob: -11.563627243041992
    10. '``' → logprob: -11.813627243041992

Token 2206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000720891694072634
    2. ',num' → logprob: -7.250720977783203
    3. ' ,' → logprob: -11.750720977783203
    4. 'num' → logprob: -13.000720977783203
    5. '```' → logprob: -15.000720977783203
    6. '       ' → logprob: -16.375720977783203
    7. ' num' → logprob: -16.500720977783203
    8. '   ' → logprob: -16.625720977783203
    9. '[num' → logprob: -16.875720977783203
    10. '(num' → logprob: -17.000720977783203

Token 2207: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.03804149478673935
    2. ' num' → logprob: -3.288041591644287
    3. '```' → logprob: -18.288042068481445
    4. '	num' → logprob: -18.913042068481445
    5. 'n' → logprob: -19.288042068481445
    6. '(num' → logprob: -19.413042068481445
    7. '[num' → logprob: -19.538042068481445
    8. '0' → logprob: -19.788042068481445
    9. ',num' → logprob: -19.788042068481445
    10. '1' → logprob: -20.038042068481445

Token 2208: '1' (ID: 16)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.00011737081513274461
    2. '1' → logprob: -9.375117301940918
    3. ',' → logprob: -11.500117301940918
    4. ' num' → logprob: -12.000117301940918
    5. '```' → logprob: -12.000117301940918
    6. ',num' → logprob: -12.375117301940918
    7. '_num' → logprob: -12.750117301940918
    8. 'size' → logprob: -14.250117301940918
    9. 'n' → logprob: -14.625117301940918
    10. '``' → logprob: -14.750117301940918

Token 2209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009130131802521646
    2. ',num' → logprob: -7.000913143157959
    3. ' ,' → logprob: -14.5009126663208
    4. ' num' → logprob: -15.1259126663208
    5. '(num' → logprob: -15.2509126663208
    6. '[num' → logprob: -15.5009126663208
    7. 'num' → logprob: -16.000913619995117
    8. '```' → logprob: -16.250913619995117
    9. '<num' → logprob: -17.625913619995117
    10. '[' → logprob: -18.125913619995117

Token 2210: ' seg' (ID: 3055)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.3868715465068817
    2. ' num' → logprob: -1.136871576309204
    3. ',num' → logprob: -16.011871337890625
    4. '0' → logprob: -16.136871337890625
    5. '(num' → logprob: -16.386871337890625
    6. '[num' → logprob: -16.886871337890625
    7. '	num' → logprob: -16.886871337890625
    8. 'n' → logprob: -17.386871337890625
    9. '```' → logprob: -17.386871337890625
    10. '<num' → logprob: -17.511871337890625

Token 2211: 'func' (ID: 5652)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.01744379661977291
    2. '1' → logprob: -4.642443656921387
    3. ',' → logprob: -5.642443656921387
    4. 'ide' → logprob: -6.517443656921387
    5. '```' → logprob: -6.767443656921387
    6. 'm' → logprob: -7.517443656921387
    7. ',num' → logprob: -8.642443656921387
    8. '(num' → logprob: -8.642443656921387
    9. 'N' → logprob: -9.017443656921387
    10. '2' → logprob: -9.017443656921387

Token 2212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007090978906489909
    2. '(tree' → logprob: -7.375709056854248
    3. 'tree' → logprob: -9.750709533691406
    4. '```' → logprob: -10.750709533691406
    5. ' ,' → logprob: -13.125709533691406
    6. '(' → logprob: -15.000709533691406
    7. ' tree' → logprob: -15.250709533691406
    8. '``' → logprob: -16.375709533691406
    9. '	tree' → logprob: -16.875709533691406
    10. ',
' → logprob: -17.000709533691406

Token 2213: ' ide' (ID: 2750)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.09050587564706802
    2. 'ide' → logprob: -2.840505838394165
    3. ' num' → logprob: -3.715505838394165
    4. ' ide' → logprob: -5.590506076812744
    5. '(num' → logprob: -11.965505599975586
    6. '```' → logprob: -11.965505599975586
    7. ' ' → logprob: -12.215505599975586
    8. 'seg' → logprob: -12.340505599975586
    9. '	num' → logprob: -12.590505599975586
    10. '   ' → logprob: -12.590505599975586

Token 2214: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.025172285735607147
    2. 'ele' → logprob: -4.900172233581543
    3. ',' → logprob: -5.150172233581543
    4. '_num' → logprob: -5.275172233581543
    5. '_' → logprob: -5.525172233581543
    6. '[' → logprob: -7.525172233581543
    7. '_,' → logprob: -7.650172233581543
    8. '```' → logprob: -8.275172233581543
    9. 'ide' → logprob: -9.150172233581543
    10. 'el' → logprob: -9.275172233581543

Token 2215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001825642102630809
    2. ',r' → logprob: -9.750182151794434
    3. '           ' → logprob: -10.250182151794434
    4. '```' → logprob: -11.000182151794434
    5. ' ,' → logprob: -11.125182151794434
    6. '       ' → logprob: -11.250182151794434
    7. '`,' → logprob: -11.375182151794434
    8. ',l' → logprob: -12.250182151794434
    9. '[' → logprob: -12.375182151794434
    10. '   ' → logprob: -12.500182151794434

Token 2216: ' m' (ID: 284)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.508304238319397
    2. 'm' → logprob: -1.008304238319397
    3. ' R' → logprob: -4.258304119110107
    4. ' m' → logprob: -5.008304119110107
    5. 'num' → logprob: -5.008304119110107
    6. 'N' → logprob: -5.508304119110107
    7. 'start' → logprob: -7.008304119110107
    8. 'end' → logprob: -8.508304595947266
    9. ' N' → logprob: -9.008304595947266
    10. '0' → logprob: -9.008304595947266

Token 2217: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008439521305263042
    2. '-' → logprob: -5.008439540863037
    3. ' -' → logprob: -7.383439540863037
    4. '```' → logprob: -8.258439064025879
    5. ' ,' → logprob: -8.383439064025879
    6. '+' → logprob: -8.633439064025879
    7. ',m' → logprob: -9.383439064025879
    8. ',R' → logprob: -9.508439064025879
    9. ',N' → logprob: -10.258439064025879
    10. '   ' → logprob: -10.508439064025879

Token 2218: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009436229011043906
    2. ' ' → logprob: -7.000943660736084
    3. '```' → logprob: -10.500943183898926
    4. '           ' → logprob: -14.500943183898926
    5. '                           ' → logprob: -14.625943183898926
    6. '                               ' → logprob: -15.000943183898926
    7. '   ' → logprob: -15.000943183898926
    8. '                       ' → logprob: -15.000943183898926
    9. '0' → logprob: -15.125943183898926
    10. '2' → logprob: -15.188443183898926

Token 2219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -11.125024795532227
    3. '```' → logprob: -12.375024795532227
    4. '2' → logprob: -12.750024795532227
    5. '0' → logprob: -14.000024795532227
    6. '           ' → logprob: -14.375024795532227
    7. '   ' → logprob: -14.625024795532227
    8. '       ' → logprob: -14.875024795532227
    9. '               ' → logprob: -16.000024795532227
    10. '                   ' → logprob: -16.125024795532227

Token 2220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016861737822182477
    2. '```' → logprob: -9.125168800354004
    3. ' ,' → logprob: -10.875168800354004
    4. ',r' → logprob: -10.875168800354004
    5. ',R' → logprob: -12.375168800354004
    6. '       ' → logprob: -12.500168800354004
    7. ',N' → logprob: -13.000168800354004
    8. '           ' → logprob: -13.000168800354004
    9. ',n' → logprob: -13.625168800354004
    10. '   ' → logprob: -13.750168800354004

Token 2221: ' L' (ID: 451)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2954312562942505
    2. ' N' → logprob: -2.045431137084961
    3. 'num' → logprob: -2.170431137084961
    4. ' num' → logprob: -4.545431137084961
    5. 'R' → logprob: -8.545431137084961
    6. 'm' → logprob: -8.670431137084961
    7. '            ' → logprob: -8.920431137084961
    8. '                ' → logprob: -9.295431137084961
    9. '           ' → logprob: -9.545431137084961
    10. '    ' → logprob: -9.545431137084961

Token 2222: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3165774345397949
    2. ')' → logprob: -1.316577434539795
    3. '))
' → logprob: -6.066577434539795
    4. ')
' → logprob: -7.691577434539795
    5. '+' → logprob: -8.066577911376953
    6. ')))' → logprob: -9.566577911376953
    7. '```' → logprob: -9.691577911376953
    8. ',' → logprob: -10.941577911376953
    9. ')`' → logprob: -11.316577911376953
    10. '   ' → logprob: -11.441577911376953

Token 2223: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05855285003781319
    2. '```' → logprob: -3.6835527420043945
    3. '                   ' → logprob: -5.0585527420043945
    4. '           ' → logprob: -5.0585527420043945
    5. ',' → logprob: -5.1835527420043945
    6. '
' → logprob: -6.0585527420043945
    7. ')
' → logprob: -6.3085527420043945
    8. '   ' → logprob: -6.4335527420043945
    9. '+=' → logprob: -6.6835527420043945
    10. ' +=' → logprob: -6.9335527420043945

Token 2224: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.14165715873241425
    2. '```' → logprob: -2.6416571140289307
    3. '               ' → logprob: -3.6416571140289307
    4. '
' → logprob: -4.64165735244751
    5. '+' → logprob: -4.64165735244751
    6. '(temp' → logprob: -5.64165735244751
    7. '+=' → logprob: -5.76665735244751
    8. '``' → logprob: -6.39165735244751
    9. ')
' → logprob: -6.76665735244751
    10. '+
' → logprob: -6.76665735244751

Token 2225: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6933653354644775
    2. '+=' → logprob: -0.6933653354644775
    3. '=' → logprob: -8.818365097045898
    4. '```' → logprob: -10.068365097045898
    5. ' =' → logprob: -10.943365097045898
    6. '   ' → logprob: -13.068365097045898
    7. '+' → logprob: -13.318365097045898
    8. '+=(' → logprob: -13.443365097045898
    9. ' -=' → logprob: -13.568365097045898
    10. '          ' → logprob: -14.318365097045898

Token 2226: ' beam' (ID: 36650)
  Prédit: ' beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beam' → logprob: -0.5759459733963013
    2. 'beam' → logprob: -0.8259459733963013
    3. 'be' → logprob: -12.950945854187012
    4. ' ' → logprob: -13.700945854187012
    5. ' ' → logprob: -14.075945854187012
    6. '   ' → logprob: -14.450945854187012
    7. '-be' → logprob: -15.325945854187012
    8. '-' → logprob: -15.825945854187012
    9. ' -' → logprob: -15.950945854187012
    10. '`' → logprob: -16.200946807861328

Token 2227: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.12500286102295
    3. '```' → logprob: -15.37500286102295
    4. 'i' → logprob: -16.250001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '\[' → logprob: -17.625001907348633
    7. ' [' → logprob: -17.750001907348633
    8. '`' → logprob: -18.000001907348633
    9. '_i' → logprob: -18.125001907348633
    10. '[
' → logprob: -18.500001907348633

Token 2228: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22684229910373688
    2. '][' → logprob: -1.6018422842025757
    3. '[i' → logprob: -7.476842403411865
    4. ')[' → logprob: -8.351841926574707
    5. '>[' → logprob: -8.351841926574707
    6. '```' → logprob: -8.601841926574707
    7. '`' → logprob: -9.726841926574707
    8. '}[' → logprob: -10.601841926574707
    9. '[][' → logprob: -10.851841926574707
    10. ']' → logprob: -11.226841926574707

Token 2229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.843177233240567e-05
    2. ' ' → logprob: -11.500018119812012
    3. '1' → logprob: -11.875018119812012
    4. '```' → logprob: -14.250018119812012
    5. '-' → logprob: -15.250018119812012
    6. '[' → logprob: -15.375018119812012
    7. '   ' → logprob: -16.625019073486328
    8. '
' → logprob: -16.750019073486328
    9. '`' → logprob: -17.375019073486328
    10. '  ' → logprob: -17.875019073486328

Token 2230: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04862244799733162
    2. '-' → logprob: -3.0486223697662354
    3. ' ' → logprob: -11.173622131347656
    4. '   ' → logprob: -11.423622131347656
    5. '```' → logprob: -12.173622131347656
    6. ',' → logprob: -13.923622131347656
    7. '`' → logprob: -14.173622131347656
    8. ' ' → logprob: -14.298622131347656
    9. '        ' → logprob: -14.923622131347656
    10. '  ' → logprob: -14.923622131347656

Token 2231: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00462403753772378
    2. '-' → logprob: -5.379623889923096
    3. '```' → logprob: -13.254624366760254
    4. ' ' → logprob: -13.754624366760254
    5. ' ' → logprob: -15.004624366760254
    6. '   ' → logprob: -15.129624366760254
    7. ',' → logprob: -16.754623413085938
    8. '          ' → logprob: -17.254623413085938
    9. '        ' → logprob: -17.504623413085938
    10. '<|end|>' → logprob: -17.629623413085938

Token 2232: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.004081367049366236
    2. ' beam' → logprob: -5.5040812492370605
    3. '```' → logprob: -14.004081726074219
    4. '   ' → logprob: -14.004081726074219
    5. 'be' → logprob: -15.004081726074219
    6. 'bee' → logprob: -15.254081726074219
    7. ' ' → logprob: -15.629081726074219
    8. '       ' → logprob: -15.879081726074219
    9. '           ' → logprob: -16.25408172607422
    10. 'beat' → logprob: -16.75408172607422

Token 2233: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010503687895834446
    2. '[i' → logprob: -4.635503768920898
    3. '1' → logprob: -7.260503768920898
    4. 'i' → logprob: -10.385503768920898
    5. '[
' → logprob: -12.010503768920898
    6. 'beam' → logprob: -12.635503768920898
    7. ' [' → logprob: -13.260503768920898
    8. '```' → logprob: -13.385503768920898
    9. '   ' → logprob: -15.385503768920898
    10. '(i' → logprob: -15.635503768920898

Token 2234: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010001786286011338
    2. '][' → logprob: -7.00100040435791
    3. '1' → logprob: -9.37600040435791
    4. '-' → logprob: -13.50100040435791
    5. ']' → logprob: -13.62600040435791
    6. '```' → logprob: -14.62600040435791
    7. '[i' → logprob: -14.87600040435791
    8. ' [' → logprob: -15.50100040435791
    9. '[
' → logprob: -16.000999450683594
    10. ')[' → logprob: -16.500999450683594

Token 2235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.250001907348633
    3. '```' → logprob: -14.250001907348633
    4. '   ' → logprob: -15.875001907348633
    5. 'beam' → logprob: -16.000001907348633
    6. '[' → logprob: -16.625001907348633
    7. '
' → logprob: -18.875001907348633
    8. '[
' → logprob: -18.875001907348633
    9. '``' → logprob: -19.625001907348633
    10. '[i' → logprob: -20.000001907348633

Token 2236: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9578725099563599
    2. ')' → logprob: -1.0828725099563599
    3. ')
' → logprob: -1.4578725099563599
    4. '           ' → logprob: -4.45787239074707
    5. '       ' → logprob: -4.58287239074707
    6. '<|end|>' → logprob: -5.08287239074707
    7. '```' → logprob: -5.08287239074707
    8. '
' → logprob: -5.70787239074707
    9. '                   ' → logprob: -5.83287239074707
    10. ']
' → logprob: -6.70787239074707

Token 2237: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.23738117516040802
    2. '               ' → logprob: -2.3623812198638916
    3. '                   ' → logprob: -3.9873812198638916
    4. '           ' → logprob: -4.1123809814453125
    5. '                       ' → logprob: -4.1123809814453125
    6. '
' → logprob: -4.2373809814453125
    7. ' if' → logprob: -4.3623809814453125
    8. '``' → logprob: -4.8623809814453125
    9. '<|end|>' → logprob: -4.8623809814453125
    10. '   ' → logprob: -4.9873809814453125

Token 2238: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.010817295871675014
    2. ' if' → logprob: -5.260817527770996
    3. '               ' → logprob: -5.260817527770996
    4. '           ' → logprob: -8.010817527770996
    5. '                   ' → logprob: -10.510817527770996
    6. '```' → logprob: -11.510817527770996
    7. '                       ' → logprob: -13.010817527770996
    8. '   ' → logprob: -13.260817527770996
    9. '       ' → logprob: -13.760817527770996
    10. 'for' → logprob: -14.510817527770996

Token 2239: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.5759593844413757
    2. 'temp' → logprob: -0.8259593844413757
    3. '(temp' → logprob: -12.325959205627441
    4. ' test' → logprob: -12.450959205627441
    5. 'test' → logprob: -12.450959205627441
    6. '   ' → logprob: -13.450959205627441
    7. ' ' → logprob: -14.075959205627441
    8. '```' → logprob: -14.075959205627441
    9. '	temp' → logprob: -14.325959205627441
    10. '           ' → logprob: -14.450959205627441

Token 2240: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06237801909446716
    2. '<=' → logprob: -2.8123779296875
    3. '```' → logprob: -8.0623779296875
    4. '   ' → logprob: -10.1873779296875
    5. ' <<=' → logprob: -10.6873779296875
    6. ' <' → logprob: -12.3123779296875
    7. '          ' → logprob: -12.8123779296875
    8. '<' → logprob: -12.9373779296875
    9. ' ' → logprob: -12.9373779296875
    10. '    ' → logprob: -13.0623779296875

Token 2241: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054887812584638596
    2. ' ' → logprob: -2.9298877716064453
    3. '   ' → logprob: -13.554887771606445
    4. '=' → logprob: -13.679887771606445
    5. '```' → logprob: -13.929887771606445
    6. '  ' → logprob: -14.554887771606445
    7. '                   ' → logprob: -15.054887771606445
    8. '``' → logprob: -15.804887771606445
    9. '               ' → logprob: -15.929887771606445
    10. '    ' → logprob: -15.929887771606445

Token 2242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003811025235336274
    2. ' ' → logprob: -7.875380992889404
    3. '```' → logprob: -15.000381469726562
    4. '   ' → logprob: -15.500381469726562
    5. '                   ' → logprob: -15.500381469726562
    6. '               ' → logprob: -16.125381469726562
    7. '           ' → logprob: -17.000381469726562
    8. '                       ' → logprob: -17.625381469726562
    9. '``' → logprob: -17.625381469726562
    10. '  ' → logprob: -17.875381469726562

Token 2243: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21034477651119232
    2. ':
' → logprob: -1.9603447914123535
    3. ':' → logprob: -3.2103447914123535
    4. '                       ' → logprob: -5.0853447914123535
    5. '               ' → logprob: -6.3353447914123535
    6. '```' → logprob: -8.210344314575195
    7. '           ' → logprob: -8.835344314575195
    8. '                  ' → logprob: -9.960344314575195
    9. '                           ' → logprob: -10.460344314575195
    10. '                    ' → logprob: -11.460344314575195

Token 2244: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3652823865413666
    2. '                       ' → logprob: -1.490282416343689
    3. '               ' → logprob: -2.7402822971343994
    4. '```' → logprob: -4.2402825355529785
    5. '           ' → logprob: -6.8652825355529785
    6. '       ' → logprob: -8.49028205871582
    7. '   ' → logprob: -8.86528205871582
    8. '``' → logprob: -9.24028205871582
    9. '                           ' → logprob: -9.49028205871582
    10. '                  ' → logprob: -10.11528205871582

Token 2245: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.4560881555080414
    2. '```' → logprob: -1.9560881853103638
    3. 'ans' → logprob: -2.081088066101074
    4. '                   ' → logprob: -3.581088066101074
    5. '``' → logprob: -3.706088066101074
    6. ' ans' → logprob: -3.956088066101074
    7. '                       ' → logprob: -4.081088066101074
    8. ' temp' → logprob: -5.456088066101074
    9. '               ' → logprob: -5.581088066101074
    10. '           ' → logprob: -7.206088066101074

Token 2246: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3834741413593292
    2. ' =' → logprob: -1.5084741115570068
    3. '+=' → logprob: -2.633474111557007
    4. ' +=' → logprob: -3.758474111557007
    5. '```' → logprob: -6.633474349975586
    6. '   ' → logprob: -7.633474349975586
    7. '2' → logprob: -9.258474349975586
    8. '       ' → logprob: -9.758474349975586
    9. '-=' → logprob: -10.383474349975586
    10. '    ' → logprob: -10.758474349975586

Token 2247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932089924812317
    2. ' =' → logprob: -0.6932089924812317
    3. '```' → logprob: -10.693208694458008
    4. ')' → logprob: -10.943208694458008
    5. ' +=' → logprob: -12.568208694458008
    6. '=
' → logprob: -12.693208694458008
    7. '<|end|>' → logprob: -12.693208694458008
    8. '+=' → logprob: -12.693208694458008
    9. '[' → logprob: -13.443208694458008
    10. ' =
' → logprob: -13.693208694458008

Token 2248: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.1602490097284317
    2. ' abs' → logprob: -1.9102489948272705
    3. 'ans' → logprob: -11.285248756408691
    4. ' ans' → logprob: -11.910248756408691
    5. '(abs' → logprob: -12.285248756408691
    6. '0' → logprob: -15.410248756408691
    7. 'temp' → logprob: -15.535248756408691
    8. '.abs' → logprob: -15.660248756408691
    9. '_abs' → logprob: -15.785248756408691
    10. 'Abs' → logprob: -16.660249710083008

Token 2249: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.12702785432338715
    2. 'temp' → logprob: -2.127027750015259
    3. '(
' → logprob: -9.75202751159668
    4. '(' → logprob: -10.50202751159668
    5. '[temp' → logprob: -12.37702751159668
    6. ' temp' → logprob: -12.62702751159668
    7. '$temp' → logprob: -12.87702751159668
    8. '(test' → logprob: -13.25202751159668
    9. '_temp' → logprob: -14.12702751159668
    10. ',temp' → logprob: -14.62702751159668

Token 2250: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8698371052742004
    2. ')' → logprob: -1.2448370456695557
    3. ')
' → logprob: -1.7448370456695557
    4. '                       ' → logprob: -2.9948370456695557
    5. '               ' → logprob: -3.4948370456695557
    6. '```' → logprob: -3.6198370456695557
    7. '):
' → logprob: -5.744837284088135
    8. '           ' → logprob: -6.244837284088135
    9. '``' → logprob: -6.994837284088135
    10. '   ' → logprob: -7.119837284088135

Token 2251: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.41044098138809204
    2. '                       ' → logprob: -1.4104409217834473
    3. '```' → logprob: -2.4104409217834473
    4. '               ' → logprob: -6.910440921783447
    5. '``' → logprob: -7.035440921783447
    6. '                      ' → logprob: -8.285441398620605
    7. '                  ' → logprob: -8.910441398620605
    8. '                    ' → logprob: -9.035441398620605
    9. '           ' → logprob: -9.285441398620605
    10. '                     ' → logprob: -9.410441398620605

Token 2252: ' B' (ID: 418)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3714468777179718
    2. ' B' → logprob: -1.2464468479156494
    3. 'B' (adapté à ' B') → logprob: -4.1214470863342285
    4. 'ans' → logprob: -5.2464470863342285
    5. '                   ' → logprob: -7.1214470863342285
    6. '                    ' → logprob: -8.12144660949707
    7. '(ans' → logprob: -10.49644660949707
    8. '                  ' → logprob: -10.99644660949707
    9. '                ' → logprob: -11.24644660949707
    10. '                     ' → logprob: -11.37144660949707

Token 2253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3372473418712616
    2. '                   ' → logprob: -1.837247371673584
    3. '=' → logprob: -2.087247371673584
    4. ',' → logprob: -7.087247371673584
    5. '               ' → logprob: -7.462247371673584
    6. '                    ' → logprob: -7.962247371673584
    7. '```' → logprob: -8.087246894836426
    8. '                       ' → logprob: -8.212246894836426
    9. '[' → logprob: -8.587246894836426
    10. '           ' → logprob: -8.962246894836426

Token 2254: ' beam' (ID: 36650)
  Prédit: ' beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beam' → logprob: -0.20142921805381775
    2. 'beam' → logprob: -1.7014292478561401
    3. ' ans' → logprob: -11.32642936706543
    4. 'ans' → logprob: -12.95142936706543
    5. 'be' → logprob: -13.45142936706543
    6. ' be' → logprob: -17.32642936706543
    7. '_be' → logprob: -17.57642936706543
    8. 'Beam' → logprob: -17.57642936706543
    9. ' ' → logprob: -18.20142936706543
    10. ' code' → logprob: -18.32642936706543

Token 2255: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.37500286102295
    3. '```' → logprob: -13.75000286102295
    4. '   ' → logprob: -16.250003814697266
    5. 'i' → logprob: -16.250003814697266
    6. '`' → logprob: -16.625003814697266
    7. ' [' → logprob: -17.500003814697266
    8. '[
' → logprob: -17.625003814697266
    9. '\[' → logprob: -18.375003814697266
    10. '(i' → logprob: -19.375003814697266

Token 2256: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.028599869459867477
    2. '[' → logprob: -4.153599739074707
    3. '[i' → logprob: -4.403599739074707
    4. '```' → logprob: -9.403599739074707
    5. ')[' → logprob: -9.778599739074707
    6. 'i' → logprob: -10.778599739074707
    7. ']' → logprob: -11.028599739074707
    8. '"][' → logprob: -11.153599739074707
    9. '   ' → logprob: -11.278599739074707
    10. ''][' → logprob: -11.528599739074707

Token 2257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.925185440806672e-05
    2. 'i' → logprob: -9.875099182128906
    3. '[' → logprob: -11.125099182128906
    4. '[i' → logprob: -11.250099182128906
    5. '```' → logprob: -11.250099182128906
    6. '
' → logprob: -13.125099182128906
    7. ' ' → logprob: -13.500099182128906
    8. '   ' → logprob: -14.125099182128906
    9. '0' → logprob: -14.125099182128906
    10. '(i' → logprob: -14.375099182128906

Token 2258: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005217632744461298
    2. '               ' → logprob: -6.255217552185059
    3. '                       ' → logprob: -6.255217552185059
    4. '```' → logprob: -7.255217552185059
    5. '           ' → logprob: -8.380217552185059
    6. ':
' → logprob: -8.755217552185059
    7. '                  ' → logprob: -9.755217552185059
    8. ']
' → logprob: -10.130217552185059
    9. '                 ' → logprob: -10.630217552185059
    10. '                    ' → logprob: -10.880217552185059

Token 2259: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0667397677898407
    2. '                       ' → logprob: -3.066739797592163
    3. '```' → logprob: -4.191739559173584
    4. 'if' → logprob: -6.566739559173584
    5. ' if' → logprob: -7.066739559173584
    6. '               ' → logprob: -8.066740036010742
    7. '                    ' → logprob: -9.191740036010742
    8. '           ' → logprob: -10.066740036010742
    9. '                  ' → logprob: -10.191740036010742
    10. '                     ' → logprob: -10.691740036010742

Token 2260: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2057323306798935
    2. ' if' → logprob: -1.7057323455810547
    3. '                       ' → logprob: -5.830732345581055
    4. '                   ' → logprob: -6.830732345581055
    5. '```' → logprob: -8.205732345581055
    6. '               ' → logprob: -12.455732345581055
    7. '``' → logprob: -12.580732345581055
    8. '                    ' → logprob: -12.705732345581055
    9. '                           ' → logprob: -12.830732345581055
    10. '                        ' → logprob: -13.080732345581055

Token 2261: ' B' (ID: 418)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.6154990196228027
    2. ' B' → logprob: -1.1154990196228027
    3. 'B' → logprob: -2.1154990196228027
    4. 'ans' → logprob: -4.490499019622803
    5. '(ans' → logprob: -9.490499496459961
    6. 'temp' → logprob: -12.490499496459961
    7. '```' → logprob: -12.865499496459961
    8. ' temp' → logprob: -12.990499496459961
    9. '`' → logprob: -13.740499496459961
    10. ' ' → logprob: -14.115499496459961

Token 2262: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0032004083041101694
    2. '*' → logprob: -5.753200531005859
    3. '[' → logprob: -11.00320053100586
    4. '*[' → logprob: -13.25320053100586
    5. ' [' → logprob: -13.37820053100586
    6. '```' → logprob: -13.62820053100586
    7. ' ' → logprob: -14.00320053100586
    8. ' ' → logprob: -16.00320053100586
    9. '   ' → logprob: -16.12820053100586
    10. '``' → logprob: -16.62820053100586

Token 2263: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5759420990943909
    2. 'ans' → logprob: -0.8259420990943909
    3. '(ans' → logprob: -13.450942039489746
    4. '	ans' → logprob: -14.325942039489746
    5. '_ans' → logprob: -15.825942039489746
    6. '
' → logprob: -15.825942039489746
    7. ' ' → logprob: -16.200942993164062
    8. '...' → logprob: -17.200942993164062
    9. '```' → logprob: -17.450942993164062
    10. '           ' → logprob: -17.700942993164062

Token 2264: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029881693422794342
    2. ' *' → logprob: -3.779881715774536
    3. ' [' → logprob: -5.404881477355957
    4. '*' → logprob: -6.404881477355957
    5. '```' → logprob: -8.529881477355957
    6. '=' → logprob: -10.154881477355957
    7. ' =' → logprob: -10.154881477355957
    8. ']' → logprob: -10.529881477355957
    9. '   ' → logprob: -10.779881477355957
    10. ' ==' → logprob: -10.779881477355957

Token 2265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.526570384972729e-05
    2. ' ' → logprob: -10.375055313110352
    3. '1' → logprob: -11.375055313110352
    4. '[' → logprob: -12.000055313110352
    5. '
' → logprob: -12.875055313110352
    6. '   ' → logprob: -13.375055313110352
    7. '```' → logprob: -14.000055313110352
    8. '-' → logprob: -14.500055313110352
    9. '  ' → logprob: -14.875055313110352
    10. '2' → logprob: -16.50005531311035

Token 2266: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0549493171274662
    2. '<' → logprob: -2.9299492835998535
    3. '```' → logprob: -10.304949760437012
    4. '[' → logprob: -10.679949760437012
    5. '   ' → logprob: -12.804949760437012
    6. '<size' → logprob: -13.929949760437012
    7. '<int' → logprob: -14.304949760437012
    8. '<len' → logprob: -14.429949760437012
    9. '<n' → logprob: -14.679949760437012
    10. '<p' → logprob: -14.804949760437012

Token 2267: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.17980697751045227
    2. '<' → logprob: -1.8048069477081299
    3. '```' → logprob: -10.42980670928955
    4. '[' → logprob: -11.05480670928955
    5. '   ' → logprob: -12.55480670928955
    6. '<int' → logprob: -13.05480670928955
    7. '<n' → logprob: -13.30480670928955
    8. '<size' → logprob: -13.55480670928955
    9. '*' → logprob: -14.05480670928955
    10. '<class' → logprob: -14.30480670928955

Token 2268: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20142152905464172
    2. ' ans' → logprob: -1.7014214992523193
    3. '(ans' → logprob: -11.951421737670898
    4. '	ans' → logprob: -14.201421737670898
    5. '_ans' → logprob: -14.451421737670898
    6. 'Ans' → logprob: -15.451421737670898
    7. '```' → logprob: -16.2014217376709
    8. '1' → logprob: -16.2014217376709
    9. '0' → logprob: -16.7014217376709
    10. 'ANS' → logprob: -17.3264217376709

Token 2269: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016277639952022582
    2. 'ans' → logprob: -9.375163078308105
    3. '           ' → logprob: -10.500163078308105
    4. '               ' → logprob: -11.125163078308105
    5. '                   ' → logprob: -11.375163078308105
    6. '```' → logprob: -11.750163078308105
    7. ' ans' → logprob: -12.250163078308105
    8. '(ans' → logprob: -13.000163078308105
    9. '   ' → logprob: -13.250163078308105
    10. '1' → logprob: -13.625163078308105

Token 2270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. '[' → logprob: -11.37501335144043
    3. '   ' → logprob: -14.87501335144043
    4. '
' → logprob: -15.00001335144043
    5. ' ' → logprob: -15.62501335144043
    6. '```' → logprob: -15.75001335144043
    7. '-' → logprob: -16.00001335144043
    8. '0' → logprob: -16.12501335144043
    9. '``' → logprob: -17.37501335144043
    10. '2' → logprob: -17.43751335144043

Token 2271: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.029784398153424263
    2. '*' → logprob: -3.5297844409942627
    3. '```' → logprob: -11.029784202575684
    4. '[' → logprob: -12.154784202575684
    5. '*[' → logprob: -12.404784202575684
    6. '*t' → logprob: -13.654784202575684
    7. '*b' → logprob: -13.779784202575684
    8. ' ' → logprob: -13.904784202575684
    9. ' ' → logprob: -14.779784202575684
    10. '[j' → logprob: -14.904784202575684

Token 2272: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07890047132968903
    2. '*' → logprob: -2.5789005756378174
    3. '```' → logprob: -11.828900337219238
    4. '                   ' → logprob: -14.828900337219238
    5. '*t' → logprob: -14.953900337219238
    6. ' ' → logprob: -15.078900337219238
    7. '                       ' → logprob: -15.328900337219238
    8. '               ' → logprob: -15.453900337219238
    9. '[' → logprob: -15.578900337219238
    10. ' ' → logprob: -15.578900337219238

Token 2273: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0019288709154352546
    2. ' temp' → logprob: -6.251928806304932
    3. 't' → logprob: -15.25192928314209
    4. 'tmp' → logprob: -17.626928329467773
    5. 'test' → logprob: -18.126928329467773
    6. '   ' → logprob: -18.251928329467773
    7. '               ' → logprob: -18.251928329467773
    8. '	temp' → logprob: -18.501928329467773
    9. '(temp' → logprob: -18.626928329467773
    10. '[temp' → logprob: -18.876928329467773

Token 2274: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.895480277715251e-06
    2. '```' → logprob: -12.625008583068848
    3. '_' → logprob: -13.125008583068848
    4. '[' → logprob: -13.750008583068848
    5. '₂' → logprob: -14.250008583068848
    6. ' ' → logprob: -14.625008583068848
    7. '   ' → logprob: -15.000008583068848
    8. '``' → logprob: -15.375008583068848
    9. '-' → logprob: -15.375008583068848
    10. '
' → logprob: -16.500009536743164

Token 2275: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.10004229843616486
    2. ':
' → logprob: -2.7250423431396484
    3. '                   ' → logprob: -3.8500423431396484
    4. ':' → logprob: -5.225042343139648
    5. '                      ' → logprob: -7.100042343139648
    6. '               ' → logprob: -7.725042343139648
    7. '                        ' → logprob: -7.725042343139648
    8. '                           ' → logprob: -8.225042343139648
    9. '[' → logprob: -8.725042343139648
    10. '```' → logprob: -8.850042343139648

Token 2276: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01383824460208416
    2. '                   ' → logprob: -5.638838291168213
    3. '```' → logprob: -5.763838291168213
    4. '                      ' → logprob: -6.388838291168213
    5. 'ans' → logprob: -6.888838291168213
    6. '                           ' → logprob: -7.013838291168213
    7. '                        ' → logprob: -7.263838291168213
    8. ' ans' → logprob: -7.388838291168213
    9. '[' → logprob: -7.388838291168213
    10. '=' → logprob: -8.263837814331055

Token 2277: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.6931543946266174
    2. ' ans' → logprob: -0.6931543946266174
    3. '	ans' → logprob: -12.693154335021973
    4. '(ans' → logprob: -13.193154335021973
    5. '```' → logprob: -13.943154335021973
    6. '_ans' → logprob: -14.193154335021973
    7. '                           ' → logprob: -15.193154335021973
    8. 'answer' → logprob: -15.568154335021973
    9. '``' → logprob: -16.69315528869629
    10. '   ' → logprob: -16.81815528869629

Token 2278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0036479379050433636
    2. ' =' → logprob: -5.628647804260254
    3. '[' → logprob: -10.378647804260254
    4. '=[' → logprob: -12.003647804260254
    5. '=
' → logprob: -12.253647804260254
    6. '```' → logprob: -13.128647804260254
    7. ']=' → logprob: -13.503647804260254
    8. ']' → logprob: -14.503647804260254
    9. '[-' → logprob: -14.878647804260254
    10. '+=' → logprob: -15.128647804260254

Token 2279: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3865545690059662
    2. '[t' → logprob: -2.136554479598999
    3. '[' → logprob: -2.261554479598999
    4. '[temp' → logprob: -2.386554479598999
    5. '[test' → logprob: -5.136554718017578
    6. '[token' → logprob: -8.636554718017578
    7. '[val' → logprob: -9.761554718017578
    8. '[target' → logprob: -10.386554718017578
    9. '[start' → logprob: -10.386554718017578
    10. '[data' → logprob: -10.511554718017578

Token 2280: 'temp' (ID: 7340)
  Prédit: 'temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.004865361377596855
    2. 'B' → logprob: -5.6298651695251465
    3. '[temp' → logprob: -7.6298651695251465
    4. 't' → logprob: -8.379865646362305
    5. 'beam' → logprob: -8.504865646362305
    6. 'ans' → logprob: -8.754865646362305
    7. ' temp' → logprob: -9.504865646362305
    8. 'tmp' → logprob: -10.379865646362305
    9. '[' → logprob: -10.629865646362305
    10. '0' → logprob: -10.879865646362305

Token 2281: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3450174629688263
    2. '0' → logprob: -1.345017433166504
    3. '[' → logprob: -3.470017433166504
    4. ' ' → logprob: -9.595017433166504
    5. '```' → logprob: -10.095017433166504
    6. '   ' → logprob: -11.345017433166504
    7. '1' → logprob: -11.845017433166504
    8. ' [' → logprob: -12.970017433166504
    9. '  ' → logprob: -13.345017433166504
    10. '``' → logprob: -13.720017433166504

Token 2282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.347765181795694e-05
    2. '[' → logprob: -10.125053405761719
    3. ' ,' → logprob: -11.875053405761719
    4. ',
' → logprob: -13.125053405761719
    5. '```' → logprob: -13.375053405761719
    6. ',[' → logprob: -14.250053405761719
    7. ',B' → logprob: -14.750053405761719
    8. '           ' → logprob: -14.875053405761719
    9. '                   ' → logprob: -15.500053405761719
    10. '               ' → logprob: -15.625053405761719

Token 2283: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0337163582444191
    2. ' B' → logprob: -3.4087164402008057
    3. 'ans' → logprob: -9.783716201782227
    4. ' ans' → logprob: -11.658716201782227
    5. 'beam' → logprob: -13.033716201782227
    6. '[B' → logprob: -14.408716201782227
    7. '[' → logprob: -14.533716201782227
    8. ' beam' → logprob: -14.783716201782227
    9. '   ' → logprob: -14.908716201782227
    10. '1' → logprob: -15.033716201782227

Token 2284: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022117745131254196
    2. '               ' → logprob: -4.647117614746094
    3. '           ' → logprob: -5.522117614746094
    4. '                   ' → logprob: -5.647117614746094
    5. '<|end|>' → logprob: -6.522117614746094
    6. ')' → logprob: -6.647117614746094
    7. '       ' → logprob: -7.022117614746094
    8. ']
' → logprob: -7.772117614746094
    9. '   ' → logprob: -8.647117614746094
    10. '                       ' → logprob: -8.772117614746094

Token 2285: 'else' (ID: 2807)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.5577775128767826e-06
    2. '```' → logprob: -12.500005722045898
    3. ' print' → logprob: -13.500005722045898
    4. ')' → logprob: -15.750005722045898
    5. '   ' → logprob: -16.2500057220459
    6. '<|end|>' → logprob: -16.6250057220459
    7. 'for' → logprob: -17.7500057220459
    8. '[' → logprob: -18.1250057220459
    9. '#' → logprob: -18.6250057220459
    10. '#print' → logprob: -18.6250057220459

Token 2286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4741114377975464
    2. ':
' → logprob: -0.9741114377975464
    3. ':
' → logprob: -11.599111557006836
    4. ':

' → logprob: -11.724111557006836
    5. '   ' → logprob: -11.974111557006836
    6. 'print' → logprob: -12.849111557006836
    7. '[' → logprob: -12.849111557006836
    8. ' :' → logprob: -13.474111557006836
    9. ' :
' → logprob: -13.474111557006836
    10. '{' → logprob: -14.474111557006836

Token 2287: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.48385924100875854
    2. '   ' → logprob: -0.9838592410087585
    3. ' print' → logprob: -4.983859062194824
    4. '```' → logprob: -5.858859062194824
    5. '``' → logprob: -11.108859062194824
    6. 'for' → logprob: -11.983859062194824
    7. '	print' → logprob: -12.233859062194824
    8. ' ' → logprob: -13.858859062194824
    9. 'pass' → logprob: -13.983859062194824
    10. '       ' → logprob: -14.108859062194824

Token 2288: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005292457528412342
    2. 'ans' → logprob: -5.6302924156188965
    3. ' print' → logprob: -7.0052924156188965
    4. 'pass' → logprob: -8.130292892456055
    5. '   ' → logprob: -8.630292892456055
    6. 'for' (adapté à ' for') → logprob: -9.005292892456055
    7. 'm' → logprob: -9.005292892456055
    8. ' ans' → logprob: -10.005292892456055
    9. ' for' → logprob: -12.630292892456055
    10. '```' → logprob: -12.755292892456055

Token 2289: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0046985456719994545
    2. '_' → logprob: -5.629698753356934
    3. 'm' → logprob: -7.754698753356934
    4. ' i' → logprob: -7.754698753356934
    5. '_i' → logprob: -9.129698753356934
    6. 'x' → logprob: -9.754698753356934
    7. 't' → logprob: -11.254698753356934
    8. 'line' → logprob: -11.754698753356934
    9. '_,' → logprob: -12.129698753356934
    10. ' _' → logprob: -12.129698753356934

Token 2290: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6932044625282288
    2. ' in' → logprob: -0.6932044625282288
    3. 'i' → logprob: -11.443204879760742
    4. '[' → logprob: -11.568204879760742
    5. ' ' → logprob: -11.693204879760742
    6. ' i' → logprob: -11.818204879760742
    7. '.' → logprob: -12.818204879760742
    8. ',' → logprob: -12.818204879760742
    9. '   ' → logprob: -12.818204879760742
    10. '  ' → logprob: -13.068204879760742

Token 2291: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00021319588995538652
    2. ' range' → logprob: -8.500213623046875
    3. 'in' → logprob: -12.125213623046875
    4. '0' → logprob: -14.000213623046875
    5. '(range' → logprob: -14.000213623046875
    6. '```' → logprob: -14.625213623046875
    7. '[' → logprob: -14.750213623046875
    8. 'N' → logprob: -14.875213623046875
    9. '   ' → logprob: -15.750213623046875
    10. '  ' → logprob: -16.000213623046875

Token 2292: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.40152058005332947
    2. '(N' → logprob: -1.1515206098556519
    3. 'range' → logprob: -4.526520729064941
    4. '(' → logprob: -6.151520729064941
    5. 'm' → logprob: -6.651520729064941
    6. '1' → logprob: -9.276520729064941
    7. '(m' → logprob: -9.776520729064941
    8. '0' → logprob: -9.776520729064941
    9. '(range' → logprob: -10.026520729064941
    10. '(n' → logprob: -10.651520729064941

Token 2293: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2454404830932617
    2. '):
' → logprob: -1.2454404830932617
    3. '):' → logprob: -1.3704404830932617
    4. '   ' → logprob: -2.3704404830932617
    5. ':
' → logprob: -2.9954404830932617
    6. '-' → logprob: -3.8704404830932617
    7. '[' → logprob: -6.120440483093262
    8. '       ' → logprob: -6.870440483093262
    9. '```' → logprob: -7.120440483093262
    10. '():
' → logprob: -7.745440483093262

Token 2294: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00022833107504993677
    2. '       ' → logprob: -8.750227928161621
    3. ' if' → logprob: -10.125227928161621
    4. 'print' → logprob: -11.500227928161621
    5. '```' → logprob: -11.625227928161621
    6. 'if' → logprob: -11.750227928161621
    7. ' print' → logprob: -13.250227928161621
    8. '   ' → logprob: -15.625227928161621
    9. '[' → logprob: -15.875227928161621
    10. '#' → logprob: -16.125228881835938

Token 2295: ' test' (ID: 1746)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9742316007614136
    2. 'print' → logprob: -0.9742316007614136
    3. 'if' → logprob: -1.5992316007614136
    4. ' if' → logprob: -3.724231719970703
    5. 'ans' → logprob: -4.349231719970703
    6. ' print' → logprob: -5.599231719970703
    7. ' ans' → logprob: -6.599231719970703
    8. '```' → logprob: -7.474231719970703
    9. 'pass' → logprob: -8.974231719970703
    10. 'start' → logprob: -9.724231719970703

Token 2296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48162832856178284
    2. '[' → logprob: -1.8566282987594604
    3. ' =' → logprob: -2.10662841796875
    4. '[i' → logprob: -2.35662841796875
    5. '   ' → logprob: -5.35662841796875
    6. '+=' → logprob: -6.85662841796875
    7. ' +=' → logprob: -7.48162841796875
    8. 'if' → logprob: -7.85662841796875
    9. '=i' → logprob: -7.85662841796875
    10. ':' → logprob: -8.35662841796875

Token 2297: ' data' (ID: 1238)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.055917203426361084
    2. ' beam' → logprob: -3.930917263031006
    3. 'abs' → logprob: -4.305917263031006
    4. '0' → logprob: -4.430917263031006
    5. 'data' → logprob: -5.055917263031006
    6. '-' → logprob: -7.430917263031006
    7. ' data' → logprob: -7.555917263031006
    8. ' abs' → logprob: -7.680917263031006
    9. '(' → logprob: -8.055916786193848
    10. 'max' → logprob: -8.180916786193848

Token 2298: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0117921968922019
    2. '[' → logprob: -4.511792182922363
    3. 'i' → logprob: -8.261792182922363
    4. '2' → logprob: -8.761792182922363
    5. '=' → logprob: -8.886792182922363
    6. ' =' → logprob: -9.886792182922363
    7. '0' → logprob: -10.011792182922363
    8. '```' → logprob: -10.636792182922363
    9. '   ' → logprob: -11.011792182922363
    10. '=i' → logprob: -11.386792182922363

Token 2299: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.033171504735946655
    2. ']
' → logprob: -4.158171653747559
    3. '[i' → logprob: -4.658171653747559
    4. '[' → logprob: -5.283171653747559
    5. '][' → logprob: -6.283171653747559
    6. ']+' → logprob: -8.783171653747559
    7. '   ' → logprob: -9.033171653747559
    8. '       ' → logprob: -9.408171653747559
    9. '+' → logprob: -10.283171653747559
    10. ']>' → logprob: -10.283171653747559

Token 2300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8368878960609436
    2. '   ' → logprob: -1.2118878364562988
    3. '<=' → logprob: -2.461887836456299
    4. ' <=' → logprob: -3.086887836456299
    5. ' if' → logprob: -3.336887836456299
    6. '==' → logprob: -3.586887836456299
    7. '=' → logprob: -3.711887836456299
    8. '<|end|>' → logprob: -4.086887836456299
    9. ' ==' → logprob: -4.586887836456299
    10. ' =' → logprob: -5.211887836456299

Token 2301: ' B' (ID: 418)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008505837060511112
    2. '       ' → logprob: -4.883505821228027
    3. ' if' → logprob: -8.383505821228027
    4. 'temp' → logprob: -8.508505821228027
    5. 'B' (adapté à ' B') → logprob: -8.883505821228027
    6. '```' → logprob: -9.383505821228027
    7. 'test' → logprob: -9.508505821228027
    8. '   ' → logprob: -9.633505821228027
    9. 't' → logprob: -10.758505821228027
    10. 'for' → logprob: -10.883505821228027

Token 2302: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41979971528053284
    2. ' =' → logprob: -1.4197996854782104
    3. '[i' → logprob: -4.0447998046875
    4. ',' → logprob: -4.1697998046875
    5. ' *=' → logprob: -4.5447998046875
    6. '*=' → logprob: -4.5447998046875
    7. 'if' → logprob: -4.7947998046875
    8. '```' → logprob: -4.9197998046875
    9. '[' → logprob: -5.0447998046875
    10. '       ' → logprob: -5.2947998046875

Token 2303: ' cum' (ID: 10023)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.008645887486636639
    2. ' beam' → logprob: -4.758646011352539
    3. '   ' → logprob: -11.883646011352539
    4. 'ans' → logprob: -12.633646011352539
    5. 'be' → logprob: -12.758646011352539
    6. '```' → logprob: -12.758646011352539
    7. 'cum' → logprob: -12.883646011352539
    8. '[' → logprob: -13.008646011352539
    9. '0' → logprob: -13.133646011352539
    10. '10' → logprob: -13.383646011352539

Token 2304: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0004950098809786141
    2. '[i' → logprob: -7.750494956970215
    3. '[min' → logprob: -10.000494956970215
    4. '[' → logprob: -11.500494956970215
    5. 'i' → logprob: -12.250494956970215
    6. '_min' → logprob: -13.250494956970215
    7. '```' → logprob: -13.500494956970215
    8. 'max' → logprob: -15.500494956970215
    9. ' min' → logprob: -15.875494956970215
    10. '`' → logprob: -16.00049591064453

Token 2305: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. '```' → logprob: -12.750003814697266
    3. '[' → logprob: -14.875003814697266
    4. ' [' → logprob: -15.750003814697266
    5. 'i' → logprob: -16.375003814697266
    6. '`' → logprob: -16.375003814697266
    7. '[I' → logprob: -16.500003814697266
    8. '\[' → logprob: -16.875003814697266
    9. '   ' → logprob: -17.375003814697266
    10. '[
' → logprob: -17.500003814697266

Token 2306: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.12707288563251495
    2. ']' → logprob: -2.127072811126709
    3. '       ' → logprob: -10.377073287963867
    4. ']
' → logprob: -10.377073287963867
    5. '[' → logprob: -10.877073287963867
    6. '```' → logprob: -11.127073287963867
    7. '][' → logprob: -11.377073287963867
    8. '   ' → logprob: -12.002073287963867
    9. '[i' → logprob: -12.002073287963867
    10. ']+' → logprob: -12.252073287963867

Token 2307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010633671656250954
    2. ' if' → logprob: -5.01063346862793
    3. '   ' → logprob: -6.63563346862793
    4. '```' → logprob: -6.76063346862793
    5. '<|end|>' → logprob: -7.26063346862793
    6. '
' → logprob: -7.88563346862793
    7. 'if' → logprob: -8.63563346862793
    8. '           ' → logprob: -9.38563346862793
    9. '        ' → logprob: -11.26063346862793
    10. ',' → logprob: -11.38563346862793

Token 2308: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.26098525524139404
    2. '       ' → logprob: -1.635985255241394
    3. ' if' → logprob: -3.3859853744506836
    4. '   ' → logprob: -7.010985374450684
    5. '```' → logprob: -9.385985374450684
    6. '           ' → logprob: -9.635985374450684
    7. 'for' → logprob: -10.260985374450684
    8. '	if' → logprob: -11.760985374450684
    9. '``' → logprob: -13.010985374450684
    10. ' ' → logprob: -13.135985374450684

Token 2309: ' test' (ID: 1746)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.22870182991027832
    2. 'test' → logprob: -2.3537018299102783
    3. ' B' → logprob: -2.6037018299102783
    4. ' test' → logprob: -3.3537018299102783
    5. 'data' → logprob: -8.7287015914917
    6. ' data' → logprob: -9.6037015914917
    7. 'ans' → logprob: -9.7287015914917
    8. '0' → logprob: -9.9787015914917
    9. ' ans' → logprob: -10.1037015914917
    10. '(test' → logprob: -10.1037015914917

Token 2310: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20508380234241486
    2. '<=' → logprob: -1.7050838470458984
    3. '```' → logprob: -6.455083847045898
    4. ' ==' → logprob: -7.080083847045898
    5. '==' → logprob: -7.455083847045898
    6. '   ' → logprob: -8.580083847045898
    7. '*' → logprob: -9.330083847045898
    8. '[' → logprob: -9.455083847045898
    9. ' >=' → logprob: -9.955083847045898
    10. ' *' → logprob: -10.080083847045898

Token 2311: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -17.00020408630371
    4. '```' → logprob: -17.00020408630371
    5. '
' → logprob: -18.00020408630371
    6. ' ' → logprob: -18.75020408630371
    7. '[' → logprob: -19.12520408630371
    8. '10' → logprob: -19.18770408630371
    9. '1' → logprob: -19.37520408630371
    10. '       ' → logprob: -19.43770408630371

Token 2312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -18.625001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '1' → logprob: -20.125001907348633
    6. '[' → logprob: -20.250001907348633
    7. '
' → logprob: -20.250001907348633
    8. '00' → logprob: -20.250001907348633
    9. '000' → logprob: -20.500001907348633
    10. '۰' → logprob: -20.750001907348633

Token 2313: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6938185691833496
    2. '           ' → logprob: -0.8188185691833496
    3. ':
' → logprob: -3.1938185691833496
    4. ':' → logprob: -4.31881856918335
    5. 'and' → logprob: -5.94381856918335
    6. '       ' → logprob: -6.31881856918335
    7. '```' → logprob: -8.068819046020508
    8. '               ' → logprob: -8.943819046020508
    9. '          ' → logprob: -9.193819046020508
    10. '   ' → logprob: -10.443819046020508

Token 2314: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009156791493296623
    2. '```' → logprob: -5.384156703948975
    3. '       ' → logprob: -5.634156703948975
    4. ' and' → logprob: -7.759156703948975
    5. ' if' → logprob: -8.509157180786133
    6. '               ' → logprob: -8.884157180786133
    7. ':
' → logprob: -9.259157180786133
    8. '   ' → logprob: -10.634157180786133
    9. ':' → logprob: -11.134157180786133
    10. '                   ' → logprob: -11.509157180786133

Token 2315: ' t' (ID: 260)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.539702296257019
    2. '           ' → logprob: -0.914702296257019
    3. '               ' → logprob: -4.914702415466309
    4. 'if' → logprob: -5.289702415466309
    5. '```' → logprob: -5.789702415466309
    6. '``' → logprob: -8.039702415466309
    7. ' for' → logprob: -8.414702415466309
    8. ' ans' → logprob: -8.539702415466309
    9. '   ' → logprob: -8.914702415466309
    10. 'ans' → logprob: -10.789702415466309

Token 2316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31975993514060974
    2. '=' → logprob: -1.3197599649429321
    3. '           ' → logprob: -5.569759845733643
    4. '       ' → logprob: -6.444759845733643
    5. '               ' → logprob: -7.444759845733643
    6. '        ' → logprob: -8.5697603225708
    7. '          ' → logprob: -9.8197603225708
    8. '                   ' → logprob: -9.9447603225708
    9. '         ' → logprob: -10.0697603225708
    10. ':' → logprob: -10.1947603225708

Token 2317: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.07306801527738571
    2. ' abs' → logprob: -2.8230679035186768
    3. '-' → logprob: -5.073068141937256
    4. '-c' → logprob: -5.948068141937256
    5. '1' → logprob: -6.823068141937256
    6. '-data' → logprob: -7.448068141937256
    7. ' -' → logprob: -8.323067665100098
    8. '0' → logprob: -9.573067665100098
    9. 'data' → logprob: -9.573067665100098
    10. '-min' → logprob: -10.448067665100098

Token 2318: '(test' (ID: 16066)
  Prédit: '(test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(test' → logprob: -0.0004307884373702109
    2. 'test' → logprob: -7.750430583953857
    3. '(data' → logprob: -16.375431060791016
    4. '(t' → logprob: -17.000431060791016
    5. '(' → logprob: -18.125431060791016
    6. '(
' → logprob: -19.375431060791016
    7. '(int' → logprob: -19.500431060791016
    8. ' test' → logprob: -20.125431060791016
    9. 'data' → logprob: -20.750431060791016
    10. ')test' → logprob: -20.875431060791016

Token 2319: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04452849179506302
    2. ')' → logprob: -3.1695284843444824
    3. '           ' → logprob: -7.044528484344482
    4. '       ' → logprob: -7.794528484344482
    5. '```' → logprob: -9.54452896118164
    6. '               ' → logprob: -9.91952896118164
    7. ')
' → logprob: -10.16952896118164
    8. '):
' → logprob: -10.79452896118164
    9. '   ' → logprob: -10.91952896118164
    10. '``' → logprob: -11.79452896118164

Token 2320: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007917628972791135
    2. '               ' → logprob: -7.875791549682617
    3. '```' → logprob: -8.750791549682617
    4. ' if' → logprob: -9.125791549682617
    5. '       ' → logprob: -9.625791549682617
    6. 'if' → logprob: -10.500791549682617
    7. '   ' → logprob: -11.875791549682617
    8. '		' → logprob: -11.875791549682617
    9. '          ' → logprob: -12.000791549682617
    10. '<|end|>' → logprob: -12.125791549682617

Token 2321: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11024710536003113
    2. '           ' → logprob: -2.7352471351623535
    3. ' if' → logprob: -3.2352471351623535
    4. '               ' → logprob: -9.860246658325195
    5. '```' → logprob: -10.360246658325195
    6. 'ans' → logprob: -10.485246658325195
    7. '   ' → logprob: -10.860246658325195
    8. '                   ' → logprob: -11.485246658325195
    9. '       ' → logprob: -11.610246658325195
    10. 'for' → logprob: -12.860246658325195

Token 2322: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04303401708602905
    2. ' B' → logprob: -3.168034076690674
    3. 'cum' → logprob: -10.543033599853516
    4. ' cum' → logprob: -12.168033599853516
    5. '(B' → logprob: -14.418033599853516
    6. 'ans' → logprob: -14.793033599853516
    7. 't' → logprob: -14.918033599853516
    8. '`' → logprob: -15.168033599853516
    9. ' ans' → logprob: -15.168033599853516
    10. '```' → logprob: -15.418033599853516

Token 2323: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.020834743976593018
    2. '*' → logprob: -3.8958346843719482
    3. '```' → logprob: -8.645834922790527
    4. '[' → logprob: -9.770834922790527
    5. '*[' → logprob: -10.895834922790527
    6. '*i' → logprob: -11.145834922790527
    7. '[i' → logprob: -11.645834922790527
    8. ' ' → logprob: -12.770834922790527
    9. '   ' → logprob: -12.770834922790527
    10. '*out' → logprob: -12.770834922790527

Token 2324: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01107341144233942
    2. ' ans' → logprob: -4.511073589324951
    3. 't' → logprob: -10.636073112487793
    4. ' t' → logprob: -13.636073112487793
    5. '(ans' → logprob: -15.261073112487793
    6. '	ans' → logprob: -16.26107406616211
    7. '_ans' → logprob: -18.26107406616211
    8. '
' → logprob: -18.76107406616211
    9. 'answer' → logprob: -18.76107406616211
    10. 'Ans' → logprob: -19.38607406616211

Token 2325: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.062179870903491974
    2. '[i' → logprob: -3.0621798038482666
    3. '0' → logprob: -4.312180042266846
    4. '```' → logprob: -10.312179565429688
    5. ' ' → logprob: -11.187179565429688
    6. '   ' → logprob: -11.687179565429688
    7. 'i' → logprob: -11.687179565429688
    8. '[
' → logprob: -11.937179565429688
    9. 'ans' → logprob: -12.062179565429688
    10. '[-' → logprob: -12.937179565429688

Token 2326: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.171581091824919e-05
    2. '1' → logprob: -9.62507152557373
    3. '[' → logprob: -12.25007152557373
    4. '```' → logprob: -15.00007152557373
    5. '
' → logprob: -15.50007152557373
    6. ' ' → logprob: -16.000072479248047
    7. 'start' → logprob: -16.000072479248047
    8. '   ' → logprob: -16.750072479248047
    9. '``' → logprob: -17.875072479248047
    10. '[start' → logprob: -18.187572479248047

Token 2327: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.038043901324272156
    2. '<' → logprob: -3.288043975830078
    3. '[' → logprob: -13.288043975830078
    4. ')' → logprob: -15.788043975830078
    5. '```' → logprob: -15.913043975830078
    6. ' ' → logprob: -16.288043975830078
    7. ' <=' → logprob: -16.288043975830078
    8. ' ' → logprob: -17.038043975830078
    9. '<int' → logprob: -17.413043975830078
    10. ')<' → logprob: -17.538043975830078

Token 2328: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12697608768939972
    2. ' <' → logprob: -2.1269760131835938
    3. '```' → logprob: -10.876976013183594
    4. '<int' → logprob: -11.376976013183594
    5. '[' → logprob: -12.001976013183594
    6. '<|end|>' → logprob: -13.501976013183594
    7. '<th' → logprob: -13.626976013183594
    8. '<T' → logprob: -13.626976013183594
    9. ')<' → logprob: -14.126976013183594
    10. '<size' → logprob: -14.126976013183594

Token 2329: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00862887967377901
    2. ' ans' → logprob: -4.758628845214844
    3. 'B' → logprob: -11.758628845214844
    4. '(ans' → logprob: -12.258628845214844
    5. '	ans' → logprob: -14.383628845214844
    6. '```' → logprob: -14.758628845214844
    7. 'Ans' → logprob: -14.883628845214844
    8. ' B' → logprob: -15.508628845214844
    9. '_ans' → logprob: -15.633628845214844
    10. 'answer' → logprob: -16.883628845214844

Token 2330: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04861416667699814
    2. '1' → logprob: -3.048614263534546
    3. '[i' → logprob: -11.048614501953125
    4. 'ans' → logprob: -11.798614501953125
    5. ' ' → logprob: -13.548614501953125
    6. '```' → logprob: -14.173614501953125
    7. '[
' → logprob: -14.548614501953125
    8. '   ' → logprob: -15.048614501953125
    9. ' [' → logprob: -15.673614501953125
    10. '0' → logprob: -16.048614501953125

Token 2331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.25
    3. '```' → logprob: -16.125
    4. '
' → logprob: -17.0
    5. ' ' → logprob: -17.5
    6. '   ' → logprob: -17.5
    7. 'i' → logprob: -17.625
    8. '[i' → logprob: -19.125
    9. '[' → logprob: -19.375
    10. '``' → logprob: -19.8125

Token 2332: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.029908308759331703
    2. '*' → logprob: -3.5299084186553955
    3. '*t' → logprob: -9.029908180236816
    4. '```' → logprob: -10.404908180236816
    5. '[' → logprob: -13.404908180236816
    6. ' ' → logprob: -14.154908180236816
    7. ' ' → logprob: -14.279908180236816
    8. '[t' → logprob: -14.779908180236816
    9. 't' → logprob: -14.779908180236816
    10. ':' → logprob: -15.154908180236816

Token 2333: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0015950803644955158
    2. '*' → logprob: -6.6265950202941895
    3. '*t' → logprob: -8.376595497131348
    4. 't' → logprob: -11.001595497131348
    5. '```' → logprob: -11.126595497131348
    6. '               ' → logprob: -12.751595497131348
    7. ' t' → logprob: -13.376595497131348
    8. '           ' → logprob: -13.751595497131348
    9. '   ' → logprob: -14.626595497131348
    10. '                   ' → logprob: -14.876595497131348

Token 2334: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00033581978641450405
    2. ' t' → logprob: -8.000335693359375
    3. '           ' → logprob: -14.875335693359375
    4. 'test' → logprob: -17.000335693359375
    5. '`t' → logprob: -17.875335693359375
    6. '       ' → logprob: -18.625335693359375
    7. '   ' → logprob: -18.750335693359375
    8. '```' → logprob: -19.500335693359375
    9. '	t' → logprob: -19.750335693359375
    10. '               ' → logprob: -20.000335693359375

Token 2335: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23084253072738647
    2. ':' → logprob: -1.6058425903320312
    3. '               ' → logprob: -5.730842590332031
    4. '                       ' → logprob: -6.605842590332031
    5. '                   ' → logprob: -7.855842590332031
    6. '```' → logprob: -8.480842590332031
    7. '           ' → logprob: -9.605842590332031
    8. '=' → logprob: -9.730842590332031
    9. '[' → logprob: -10.105842590332031
    10. ':

' → logprob: -11.355842590332031

Token 2336: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5306122899055481
    2. '               ' → logprob: -1.2806122303009033
    3. '                       ' → logprob: -2.4056122303009033
    4. '                   ' → logprob: -4.030612468719482
    5. ':
' → logprob: -4.530612468719482
    6. '[' → logprob: -5.155612468719482
    7. '``' → logprob: -5.155612468719482
    8. ' =' → logprob: -7.280612468719482
    9. ':' → logprob: -7.530612468719482
    10. '                               ' → logprob: -7.905612468719482

Token 2337: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0012326111318543553
    2. ' ans' → logprob: -6.751232624053955
    3. '	ans' → logprob: -10.626232147216797
    4. '               ' → logprob: -11.001232147216797
    5. '                   ' → logprob: -11.626232147216797
    6. '(ans' → logprob: -12.376232147216797
    7. '           ' → logprob: -12.751232147216797
    8. '```' → logprob: -13.001232147216797
    9. '   ' → logprob: -13.126232147216797
    10. 'answer' → logprob: -14.501232147216797

Token 2338: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002088338136673
    2. ' =' → logprob: -2.3502087593078613
    3. '[' → logprob: -13.85020923614502
    4. '=[' → logprob: -14.10020923614502
    5. ' =[' → logprob: -15.60020923614502
    6. '＝' → logprob: -16.100208282470703
    7. '=
' → logprob: -16.100208282470703
    8. '```' → logprob: -16.975208282470703
    9. '   ' → logprob: -18.350208282470703
    10. '=

' → logprob: -18.350208282470703

Token 2339: ' [' (ID: 723)
  Prédit: '[test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[test' → logprob: -0.10122028738260269
    2. '[t' → logprob: -2.6012203693389893
    3. ' [' → logprob: -4.35122013092041
    4. '[' → logprob: -4.85122013092041
    5. '[B' → logprob: -6.72622013092041
    6. '[data' → logprob: -9.22622013092041
    7. '[Test' → logprob: -10.60122013092041
    8. '[
' → logprob: -11.60122013092041
    9. 'test' → logprob: -11.72622013092041
    10. '[b' → logprob: -11.97622013092041

Token 2340: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.4418171455617994e-05
    2. 'test' → logprob: -10.625044822692871
    3. ' t' → logprob: -11.125044822692871
    4. '   ' → logprob: -12.375044822692871
    5. '           ' → logprob: -15.125044822692871
    6. 'abs' → logprob: -15.375044822692871
    7. '       ' → logprob: -15.625044822692871
    8. 'B' → logprob: -16.125043869018555
    9. '0' → logprob: -16.375043869018555
    10. 'data' → logprob: -16.500043869018555

Token 2341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3557529857498594e-05
    2. '               ' → logprob: -11.62502384185791
    3. ',
' → logprob: -12.25002384185791
    4. ',i' → logprob: -12.50002384185791
    5. ' ,' → logprob: -12.75002384185791
    6. '           ' → logprob: -13.50002384185791
    7. '                   ' → logprob: -14.75002384185791
    8. '```' → logprob: -15.25002384185791
    9. '`,' → logprob: -15.50002384185791
    10. '[i' → logprob: -15.75002384185791

Token 2342: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0003368926409166306
    2. ' B' → logprob: -8.000336647033691
    3. 'cum' → logprob: -13.875336647033691
    4. '   ' → logprob: -15.750336647033691
    5. ' cum' → logprob: -16.125337600708008
    6. '           ' → logprob: -16.125337600708008
    7. '       ' → logprob: -16.750337600708008
    8. '1' → logprob: -16.875337600708008
    9. '               ' → logprob: -17.625337600708008
    10. '[' → logprob: -19.125337600708008

Token 2343: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011340174823999405
    2. '               ' → logprob: -5.261340141296387
    3. '           ' → logprob: -6.386340141296387
    4. '       ' → logprob: -6.386340141296387
    5. ']
' → logprob: -6.386340141296387
    6. ')' → logprob: -7.386340141296387
    7. ')]' → logprob: -9.011340141296387
    8. '   ' → logprob: -9.261340141296387
    9. '                   ' → logprob: -9.511340141296387
    10. '              ' → logprob: -10.511340141296387

Token 2344: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.762356209335849e-05
    2. '```' → logprob: -10.25003719329834
    3. ' print' → logprob: -13.50003719329834
    4. '``' → logprob: -14.75003719329834
    5. '<|end|>' → logprob: -15.50003719329834
    6. '
' → logprob: -15.62503719329834
    7. '(print' → logprob: -17.125038146972656
    8. '.print' → logprob: -17.250038146972656
    9. '`' → logprob: -17.500038146972656
    10. ')
' → logprob: -17.750038146972656

Token 2345: ' M' (ID: 391)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.127333340875339e-06
    2. '```' → logprob: -12.500003814697266
    3. ' print' → logprob: -15.000003814697266
    4. '``' → logprob: -17.500003814697266
    5. 'for' → logprob: -19.375003814697266
    6. '
' → logprob: -19.500003814697266
    7. '#print' → logprob: -20.625003814697266
    8. '<|end|>' → logprob: -20.625003814697266
    9. '	print' → logprob: -20.875003814697266
    10. '   ' → logprob: -21.250003814697266

Token 2346: ' =' (ID: 314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7835050821304321
    2. '=' → logprob: -1.5335050821304321
    3. 'ax' → logprob: -1.5335050821304321
    4. ' =' → logprob: -2.4085049629211426
    5. 'A' → logprob: -4.408504962921143
    6. 'AX' → logprob: -5.533504962921143
    7. '_' → logprob: -6.533504962921143
    8. 'for' → logprob: -6.908504962921143
    9. 'a' → logprob: -7.158504962921143
    10. '```' → logprob: -8.1585054397583

Token 2347: ' min' (ID: 1349)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2992522120475769
    2. '0' → logprob: -2.0492522716522217
    3. 'max' → logprob: -2.9242522716522217
    4. 'm' → logprob: -3.2992522716522217
    5. 'ans' → logprob: -4.174252033233643
    6. 'len' → logprob: -5.049252033233643
    7. '1' → logprob: -5.299252033233643
    8. 'M' → logprob: -6.049252033233643
    9. 'int' → logprob: -6.049252033233643
    10. 'min' → logprob: -6.799252033233643

Token 2348: '(data' (ID: 4819)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.2998085618019104
    2. '(data' → logprob: -2.2998085021972656
    3. '([' → logprob: -3.0498085021972656
    4. '(' → logprob: -3.2998085021972656
    5. '(range' → logprob: -3.9248085021972656
    6. '(N' → logprob: -4.049808502197266
    7. '(len' → logprob: -4.424808502197266
    8. '(M' → logprob: -4.924808502197266
    9. '(c' → logprob: -5.299808502197266
    10. 'ans' → logprob: -5.674808502197266

Token 2349: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1862720102071762
    2. ')
' → logprob: -2.186271905899048
    3. '[M' → logprob: -3.561271905899048
    4. '[N' → logprob: -3.936271905899048
    5. '[' → logprob: -5.811272144317627
    6. 'M' → logprob: -6.186272144317627
    7. '[i' → logprob: -6.311272144317627
    8. '[:' → logprob: -6.686272144317627
    9. 'N' → logprob: -7.561272144317627
    10. '(M' → logprob: -8.436271667480469

Token 2350: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2485357522964478
    2. 'print' → logprob: -1.3735357522964478
    3. 'idx' → logprob: -1.3735357522964478
    4. 'm' → logprob: -2.623535633087158
    5. 'M' → logprob: -3.498535633087158
    6. 'index' → logprob: -3.748535633087158
    7. 'i' → logprob: -3.873535633087158
    8. ' =' → logprob: -4.373535633087158
    9. '=' → logprob: -4.373535633087158
    10. 'min' → logprob: -4.623535633087158

Token 2351: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16508284211158752
    2. 'idx' → logprob: -2.4150829315185547
    3. 'ans' → logprob: -4.040082931518555
    4. 'm' → logprob: -4.290082931518555
    5. 'for' (adapté à ' for') → logprob: -4.915082931518555
    6. 'if' → logprob: -5.040082931518555
    7. 'M' → logprob: -5.040082931518555
    8. 'index' → logprob: -5.290082931518555
    9. 'start' → logprob: -6.665082931518555
    10. 'min' → logprob: -6.915082931518555

Token 2352: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03501215949654579
    2. ' i' → logprob: -3.4100122451782227
    3. 'x' → logprob: -7.660012245178223
    4. 't' → logprob: -8.535012245178223
    5. 'j' → logprob: -9.035012245178223
    6. 'data' → logprob: -9.160012245178223
    7. 'test' → logprob: -9.535012245178223
    8. '_i' → logprob: -10.035012245178223
    9. '   ' → logprob: -10.160012245178223
    10. 'val' → logprob: -10.285012245178223

Token 2353: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.03840704262256622
    2. ' in' → logprob: -3.28840708732605
    3. 'range' → logprob: -8.413407325744629
    4. '_' → logprob: -9.788407325744629
    5. 'i' → logprob: -10.788407325744629
    6. ',' → logprob: -10.913407325744629
    7. '(' → logprob: -11.163407325744629
    8. ' range' → logprob: -12.163407325744629
    9. '(range' → logprob: -12.288407325744629
    10. ' ' → logprob: -12.538407325744629

Token 2354: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00041970983147621155
    2. ' range' → logprob: -8.500419616699219
    3. 'data' → logprob: -8.875419616699219
    4. '(range' → logprob: -9.625419616699219
    5. '[' → logprob: -12.875419616699219
    6. 'enumer' → logprob: -13.625419616699219
    7. 'i' → logprob: -14.250419616699219
    8. '[i' → logprob: -14.500419616699219
    9. '
' → logprob: -14.750419616699219
    10. '	range' → logprob: -15.000419616699219

Token 2355: '(N' (ID: 10564)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00125261174980551
    2. '(range' → logprob: -7.0012526512146
    3. 'N' → logprob: -8.751252174377441
    4. ' range' → logprob: -9.626252174377441
    5. 'data' → logprob: -9.626252174377441
    6. '(N' → logprob: -11.126252174377441
    7. '[N' → logprob: -11.501252174377441
    8. '[' → logprob: -11.876252174377441
    9. 'len' → logprob: -11.876252174377441
    10. '(' → logprob: -13.001252174377441

Token 2356: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22782179713249207
    2. '   ' → logprob: -2.1028218269348145
    3. '):' → logprob: -3.2278218269348145
    4. '+' → logprob: -4.2278218269348145
    5. ':' → logprob: -4.9778218269348145
    6. ',' → logprob: -5.1028218269348145
    7. '-' → logprob: -5.6028218269348145
    8. ':
' → logprob: -5.7278218269348145
    9. '       ' → logprob: -5.9778218269348145
    10. '():
' → logprob: -6.8528218269348145

Token 2357: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28352928161621094
    2. '```' → logprob: -2.033529281616211
    3. '       ' → logprob: -2.158529281616211
    4. '``' → logprob: -9.158529281616211
    5. 'if' → logprob: -9.533529281616211
    6. ' if' → logprob: -9.658529281616211
    7. '<|end|>' → logprob: -9.783529281616211
    8. '{
' → logprob: -10.158529281616211
    9. '[' → logprob: -10.533529281616211
    10. '#' → logprob: -11.283529281616211

Token 2358: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04927494004368782
    2. ' if' → logprob: -3.5492749214172363
    3. '```' → logprob: -4.299274921417236
    4. '   ' → logprob: -5.299274921417236
    5. 'data' → logprob: -8.049275398254395
    6. 'test' → logprob: -8.549275398254395
    7. 'B' → logprob: -9.674275398254395
    8. '       ' → logprob: -9.799275398254395
    9. '``' → logprob: -9.924275398254395
    10. '`' → logprob: -10.674275398254395

Token 2359: ' beam' (ID: 36650)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0012283235555514693
    2. ' data' → logprob: -6.751228332519531
    3. 'M' → logprob: -10.751228332519531
    4. '   ' → logprob: -10.751228332519531
    5. 'ans' → logprob: -12.001228332519531
    6. 'cum' → logprob: -12.001228332519531
    7. '```' → logprob: -14.251228332519531
    8. 'not' → logprob: -15.251228332519531
    9. ' ' → logprob: -15.251228332519531
    10. ' M' → logprob: -15.251228332519531

Token 2360: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.729906196298543e-06
    2. '```' → logprob: -12.125009536743164
    3. '[' → logprob: -13.125009536743164
    4. '][' → logprob: -14.500009536743164
    5. '``' → logprob: -15.000009536743164
    6. ' [' → logprob: -15.125009536743164
    7. '   ' → logprob: -15.500009536743164
    8. ')[' → logprob: -15.750009536743164
    9. '[I' → logprob: -16.250009536743164
    10. 'data' → logprob: -16.250009536743164

Token 2361: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.020770074799656868
    2. '[' → logprob: -3.8957700729370117
    3. '```' → logprob: -9.270770072937012
    4. '[i' → logprob: -10.645770072937012
    5. ']' → logprob: -10.770770072937012
    6. '#' → logprob: -11.270770072937012
    7. ']][' → logprob: -11.270770072937012
    8. ')[' → logprob: -11.270770072937012
    9. '0' → logprob: -11.645770072937012
    10. '   ' → logprob: -12.270770072937012

Token 2362: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1430143266916275
    2. '0' → logprob: -2.018014430999756
    3. '```' → logprob: -8.893013954162598
    4. '[' → logprob: -9.268013954162598
    5. '][' → logprob: -10.518013954162598
    6. '``' → logprob: -11.268013954162598
    7. '   ' → logprob: -11.455513954162598
    8. ']' → logprob: -11.643013954162598
    9. '2' → logprob: -11.643013954162598
    10. '...' → logprob: -11.768013954162598

Token 2363: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03706473484635353
    2. '[' → logprob: -3.412064790725708
    3. ']' → logprob: -6.162064552307129
    4. '-' → logprob: -7.537064552307129
    5. '   ' → logprob: -8.162064552307129
    6. '```' → logprob: -9.162064552307129
    7. '#' → logprob: -10.287064552307129
    8. '       ' → logprob: -10.537064552307129
    9. ')[' → logprob: -10.537064552307129
    10. ' -' → logprob: -10.537064552307129

Token 2364: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10722468048334122
    2. '-' → logprob: -2.357224702835083
    3. '][' → logprob: -5.482224464416504
    4. '==' → logprob: -6.482224464416504
    5. ' -' → logprob: -7.857224464416504
    6. '   ' → logprob: -8.232224464416504
    7. '```' → logprob: -8.357224464416504
    8. ' ==' → logprob: -9.482224464416504
    9. ' [' → logprob: -9.982224464416504
    10. '>[' → logprob: -10.107224464416504

Token 2365: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.00015920029545668513
    2. ' beam' → logprob: -8.75015926361084
    3. '```' → logprob: -15.25015926361084
    4. '1' → logprob: -16.625158309936523
    5. 'be' → logprob: -16.625158309936523
    6. '   ' → logprob: -16.875158309936523
    7. 'bee' → logprob: -17.125158309936523
    8. 'data' → logprob: -17.250158309936523
    9. '0' → logprob: -17.375158309936523
    10. 'b' → logprob: -17.375158309936523

Token 2366: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00023357603640761226
    2. 'i' → logprob: -8.62523365020752
    3. '[' → logprob: -10.00023365020752
    4. '```' → logprob: -12.50023365020752
    5. '(i' → logprob: -12.75023365020752
    6. '{i' → logprob: -15.37523365020752
    7. '[user' → logprob: -15.37523365020752
    8. '=i' → logprob: -15.62523365020752
    9. '1' → logprob: -15.87523365020752
    10. '][' → logprob: -16.000232696533203

Token 2367: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3735707700252533
    2. '1' → logprob: -1.3735707998275757
    3. '][' → logprob: -3.123570680618286
    4. '[i' → logprob: -4.623570919036865
    5. ']' → logprob: -6.248570919036865
    6. '-' → logprob: -6.373570919036865
    7. 'i' → logprob: -7.873570919036865
    8. '```' → logprob: -8.998570442199707
    9. '>[' → logprob: -9.248570442199707
    10. '>' → logprob: -9.498570442199707

Token 2368: '1' (ID: 16)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.35437852144241333
    2. '1' → logprob: -1.2293784618377686
    3. 'i' → logprob: -5.854378700256348
    4. '[' → logprob: -6.729378700256348
    5. '[i' → logprob: -7.104378700256348
    6. ' beam' → logprob: -8.604378700256348
    7. '```' → logprob: -9.041878700256348
    8. ' ' → logprob: -9.166878700256348
    9. '[
' → logprob: -9.229378700256348
    10. 'be' → logprob: -9.229378700256348

Token 2369: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07288626581430435
    2. ']<=' → logprob: -3.5728862285614014
    3. ' <=' → logprob: -3.8228862285614014
    4. '<=' → logprob: -4.1978864669799805
    5. ']==' → logprob: -5.8228864669799805
    6. ' ==' → logprob: -7.6978864669799805
    7. '==' → logprob: -7.8228864669799805
    8. '()' → logprob: -8.19788646697998
    9. ')' → logprob: -8.32288646697998
    10. '>' → logprob: -8.32288646697998

Token 2370: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.7140794992446899
    2. ' <=' → logprob: -0.8390794992446899
    3. '>' → logprob: -3.7140793800354004
    4. '==' → logprob: -3.7140793800354004
    5. ' ==' → logprob: -3.9640793800354004
    6. ' >' → logprob: -5.7140793800354
    7. ' <' → logprob: -6.0890793800354
    8. '<' → logprob: -6.0890793800354
    9. '   ' → logprob: -6.5890793800354
    10. '>=' → logprob: -7.8390793800354

Token 2371: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013321444857865572
    2. ' ' → logprob: -6.6263322830200195
    3. '>' → logprob: -12.87633228302002
    4. '   ' → logprob: -13.50133228302002
    5. '1' → logprob: -14.25133228302002
    6. '-' → logprob: -14.87633228302002
    7. '=' → logprob: -14.87633228302002
    8. '       ' → logprob: -16.188831329345703
    9. 'i' → logprob: -16.376331329345703
    10. '#' → logprob: -16.376331329345703

Token 2372: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -12.000007629394531
    3. '1' → logprob: -14.500007629394531
    4. '-' → logprob: -15.000007629394531
    5. '```' → logprob: -16.00000762939453
    6. '[' → logprob: -16.25000762939453
    7. '   ' → logprob: -16.50000762939453
    8. '
' → logprob: -17.12500762939453
    9. '>' → logprob: -17.18750762939453
    10. 'i' → logprob: -17.43750762939453

Token 2373: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7482789754867554
    2. ' and' → logprob: -1.3732789754867554
    3. ':
' → logprob: -1.3732789754867554
    4. '           ' → logprob: -4.873279094696045
    5. '       ' → logprob: -5.248279094696045
    6. 'and' → logprob: -5.998279094696045
    7. '==' → logprob: -6.248279094696045
    8. ' ==' → logprob: -6.748279094696045
    9. '   ' → logprob: -7.623279094696045
    10. ',' → logprob: -8.123278617858887

Token 2374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6700071692466736
    2. '       ' → logprob: -1.5450072288513184
    3. ':
' → logprob: -2.0450072288513184
    4. ':' → logprob: -2.9200072288513184
    5. ' and' → logprob: -3.0450072288513184
    6. '   ' → logprob: -4.545007228851318
    7. '```' → logprob: -4.795007228851318
    8. '               ' → logprob: -5.170007228851318
    9. ' continue' → logprob: -5.420007228851318
    10. ' or' → logprob: -5.795007228851318

Token 2375: ' temp' (ID: 5484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3491182327270508
    2. '           ' → logprob: -1.3491182327270508
    3. 'break' → logprob: -1.5991182327270508
    4. 'continue' → logprob: -2.724118232727051
    5. '   ' → logprob: -2.849118232727051
    6. ' break' → logprob: -3.224118232727051
    7. 'print' → logprob: -3.724118232727051
    8. 'pass' → logprob: -3.849118232727051
    9. ' continue' → logprob: -4.349118232727051
    10. '               ' → logprob: -4.349118232727051

Token 2376: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4883538782596588
    2. '=' → logprob: -0.9883538484573364
    3. ' +=' → logprob: -4.863353729248047
    4. '+=' → logprob: -5.738353729248047
    5. '               ' → logprob: -7.238353729248047
    6. ' -=' → logprob: -7.738353729248047
    7. '   ' → logprob: -8.113353729248047
    8. '           ' → logprob: -8.238353729248047
    9. 'continue' → logprob: -8.613353729248047
    10. ' <=' → logprob: -8.988353729248047

Token 2377: ' M' (ID: 391)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.8957646489143372
    2. '0' → logprob: -1.6457645893096924
    3. 'data' → logprob: -1.6457645893096924
    4. ' beam' → logprob: -2.8957645893096924
    5. ' data' → logprob: -3.1457645893096924
    6. 'abs' → logprob: -3.8957645893096924
    7. 'max' → logprob: -4.1457648277282715
    8. 'ans' → logprob: -4.3957648277282715
    9. 'temp' → logprob: -4.6457648277282715
    10. 'M' → logprob: -4.6457648277282715

Token 2378: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3685576319694519
    2. '               ' → logprob: -2.3685576915740967
    3. ' *' → logprob: -2.7435576915740967
    4. ' -' → logprob: -3.2435576915740967
    5. ' =' → logprob: -3.4935576915740967
    6. '-' → logprob: -3.8685576915740967
    7. '=' → logprob: -3.9935576915740967
    8. '*' → logprob: -4.743557453155518
    9. ',' → logprob: -5.243557453155518
    10. '+' → logprob: -5.618557453155518

Token 2379: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.13865329325199127
    2. ' beam' → logprob: -2.63865327835083
    3. 'data' → logprob: -3.13865327835083
    4. ' data' → logprob: -4.88865327835083
    5. 'abs' → logprob: -6.01365327835083
    6. '(' → logprob: -6.01365327835083
    7. 'cum' → logprob: -7.63865327835083
    8. ' abs' → logprob: -7.63865327835083
    9. ' (' → logprob: -7.76365327835083
    10. '1' → logprob: -8.888653755187988

Token 2380: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001394161517964676
    2. 'i' → logprob: -9.375139236450195
    3. '[' → logprob: -9.875139236450195
    4. '(i' → logprob: -13.875139236450195
    5. '```' → logprob: -14.375139236450195
    6. '`' → logprob: -14.750139236450195
    7. '[I' → logprob: -14.875139236450195
    8. '{i' → logprob: -15.250139236450195
    9. '[
' → logprob: -15.750139236450195
    10. ' i' → logprob: -16.375139236450195

Token 2381: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08608395606279373
    2. '[' → logprob: -2.7110838890075684
    3. '[i' → logprob: -4.211083889007568
    4. ')[' → logprob: -8.336084365844727
    5. '>[' → logprob: -8.711084365844727
    6. '   ' → logprob: -8.961084365844727
    7. ' ][' → logprob: -9.461084365844727
    8. '```' → logprob: -9.461084365844727
    9. ']' → logprob: -9.711084365844727
    10. '#' → logprob: -9.711084365844727

Token 2382: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03623167425394058
    2. '[' → logprob: -3.661231756210327
    3. '1' → logprob: -4.661231517791748
    4. 'i' → logprob: -9.161231994628906
    5. '[i' → logprob: -9.161231994628906
    6. '```' → logprob: -9.661231994628906
    7. ' ' → logprob: -10.161231994628906
    8. '(' → logprob: -10.286231994628906
    9. '   ' → logprob: -11.098731994628906
    10. '(i' → logprob: -11.286231994628906

Token 2383: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.021302349865436554
    2. '-' → logprob: -3.8963024616241455
    3. '           ' → logprob: -7.271302223205566
    4. '[' → logprob: -11.146302223205566
    5. '          ' → logprob: -11.396302223205566
    6. ' ' → logprob: -11.896302223205566
    7. ')' → logprob: -12.521302223205566
    8. '   ' → logprob: -12.646302223205566
    9. '#' → logprob: -12.771302223205566
    10. ',' → logprob: -12.771302223205566

Token 2384: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10651452839374542
    2. '           ' → logprob: -2.4815144538879395
    3. '-' → logprob: -4.2315144538879395
    4. ' >' → logprob: -6.4815144538879395
    5. '>' → logprob: -7.9815144538879395
    6. '```' → logprob: -8.606514930725098
    7. '          ' → logprob: -8.856514930725098
    8. '[' → logprob: -9.481514930725098
    9. '<|end|>' → logprob: -9.481514930725098
    10. '               ' → logprob: -9.606514930725098

Token 2385: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.00014013137842994183
    2. ' beam' → logprob: -10.000140190124512
    3. 'i' → logprob: -10.375140190124512
    4. '1' → logprob: -10.625140190124512
    5. '   ' → logprob: -10.625140190124512
    6. '```' → logprob: -12.250140190124512
    7. '       ' → logprob: -13.625140190124512
    8. 'be' → logprob: -13.625140190124512
    9. ' ' → logprob: -14.000140190124512
    10. '0' → logprob: -14.000140190124512

Token 2386: '[i' (ID: 1768)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29249924421310425
    2. '[i' → logprob: -1.417499303817749
    3. '[' → logprob: -4.79249906539917
    4. 'i' → logprob: -5.91749906539917
    5. '```' → logprob: -8.792499542236328
    6. 'beam' → logprob: -9.417499542236328
    7. '[
' → logprob: -11.042499542236328
    8. 'user' → logprob: -11.542499542236328
    9. '(i' → logprob: -11.542499542236328
    10. '``' → logprob: -11.917499542236328

Token 2387: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2631932199001312
    2. '[i' → logprob: -1.5131932497024536
    3. '][' → logprob: -4.513193130493164
    4. '1' → logprob: -8.638193130493164
    5. 'i' → logprob: -10.513193130493164
    6. 'import' → logprob: -12.388193130493164
    7. ']' → logprob: -12.763193130493164
    8. '>[' → logprob: -12.763193130493164
    9. ' [' → logprob: -12.888193130493164
    10. '(i' → logprob: -13.138193130493164

Token 2388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004444481804966927
    2. 'i' → logprob: -5.504444599151611
    3. '[i' → logprob: -8.004444122314453
    4. '[' → logprob: -11.879444122314453
    5. ' ' → logprob: -12.004444122314453
    6. ' i' → logprob: -12.129444122314453
    7. 'beam' → logprob: -12.379444122314453
    8. '```' → logprob: -12.629444122314453
    9. '   ' → logprob: -13.254444122314453
    10. '(i' → logprob: -13.754444122314453

Token 2389: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06949292868375778
    2. ')
' → logprob: -3.694492816925049
    3. '       ' → logprob: -4.319492816925049
    4. '
' → logprob: -4.944492816925049
    5. ')' → logprob: -5.194492816925049
    6. ']
' → logprob: -5.319492816925049
    7. '               ' → logprob: -5.944492816925049
    8. '<|end|>' → logprob: -6.444492816925049
    9. '   ' → logprob: -6.569492816925049
    10. ']' → logprob: -7.069492816925049

Token 2390: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02941463328897953
    2. ' if' → logprob: -4.029414653778076
    3. '               ' → logprob: -4.904414653778076
    4. '```' → logprob: -6.654414653778076
    5. ':
' → logprob: -7.279414653778076
    6. '                   ' → logprob: -7.529414653778076
    7. ' and' → logprob: -8.529414176940918
    8. '<|end|>' → logprob: -8.779414176940918
    9. '       ' → logprob: -9.029414176940918
    10. 'if' → logprob: -9.279414176940918

Token 2391: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04602082073688507
    2. 'if' (adapté à ' if') → logprob: -3.796020746231079
    3. ' if' → logprob: -3.921020746231079
    4. '```' → logprob: -6.046020984649658
    5. '               ' → logprob: -9.9210205078125
    6. '                   ' → logprob: -10.0460205078125
    7. 'temp' → logprob: -10.1710205078125
    8. 'for' → logprob: -10.2960205078125
    9. '		' → logprob: -10.5460205078125
    10. ' for' → logprob: -10.7960205078125

Token 2392: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.2664344608783722
    2. ' temp' → logprob: -1.7664344310760498
    3. 'beam' → logprob: -3.14143443107605
    4. ' beam' → logprob: -4.016434669494629
    5. 'B' → logprob: -7.391434669494629
    6. 'ans' → logprob: -8.641434669494629
    7. 'data' → logprob: -8.766434669494629
    8. ' B' → logprob: -9.016434669494629
    9. '(temp' → logprob: -9.016434669494629
    10. '(' → logprob: -9.141434669494629

Token 2393: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6934385895729065
    2. '<=' → logprob: -0.6934385895729065
    3. '```' → logprob: -9.318438529968262
    4. '<' → logprob: -9.568438529968262
    5. '>' → logprob: -10.443438529968262
    6. '*' → logprob: -10.568438529968262
    7. '=' → logprob: -10.818438529968262
    8. '[' → logprob: -11.068438529968262
    9. '[i' → logprob: -11.318438529968262
    10. ' <' → logprob: -11.568438529968262

Token 2394: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031781906727701426
    2. ' ' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.503178596496582
    4. '
' → logprob: -16.128177642822266
    5. ' ' → logprob: -16.878177642822266
    6. '```' → logprob: -16.878177642822266
    7. '       ' → logprob: -18.003177642822266
    8. 'temp' → logprob: -18.128177642822266
    9. '  ' → logprob: -18.253177642822266
    10. '           ' → logprob: -18.503177642822266

Token 2395: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.7500057220459
    4. '
' → logprob: -19.0000057220459
    5. '```' → logprob: -19.1250057220459
    6. '       ' → logprob: -20.7500057220459
    7. '<|end|>' → logprob: -21.1250057220459
    8. '  ' → logprob: -21.2500057220459
    9. '۰' → logprob: -21.2500057220459
    10. 'temp' → logprob: -21.5625057220459

Token 2396: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10301733762025833
    2. '               ' → logprob: -2.7280173301696777
    3. ':' → logprob: -3.6030173301696777
    4. ' and' → logprob: -5.978017330169678
    5. '           ' → logprob: -5.978017330169678
    6. '              ' → logprob: -9.603017807006836
    7. '```' → logprob: -9.978017807006836
    8. 'and' → logprob: -10.478017807006836
    9. '                   ' → logprob: -10.478017807006836
    10. ',' → logprob: -11.603017807006836

Token 2397: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015539054293185472
    2. '```' → logprob: -7.001554012298584
    3. '                   ' → logprob: -8.126553535461426
    4. '                       ' → logprob: -9.001553535461426
    5. '           ' → logprob: -9.376553535461426
    6. ':
' → logprob: -9.626553535461426
    7. '              ' → logprob: -10.626553535461426
    8. '                ' → logprob: -11.376553535461426
    9. ':' → logprob: -12.126553535461426
    10. '                               ' → logprob: -12.251553535461426

Token 2398: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -1.3634579181671143
    2. ' for' → logprob: -1.6134579181671143
    3. ' temp' → logprob: -1.6134579181671143
    4. 'for' → logprob: -1.9884579181671143
    5. '               ' → logprob: -2.1134579181671143
    6. ' B' → logprob: -3.2384579181671143
    7. '           ' → logprob: -3.6134579181671143
    8. 'B' → logprob: -4.613457679748535
    9. '                   ' → logprob: -5.113457679748535
    10. 'if' → logprob: -6.363457679748535

Token 2399: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46446096897125244
    2. '=' → logprob: -1.2144609689712524
    3. '2' → logprob: -3.714460849761963
    4. ' +=' → logprob: -3.714460849761963
    5. '+=' → logprob: -5.214460849761963
    6. '   ' → logprob: -5.214460849761963
    7. ' <=' → logprob: -5.714460849761963
    8. ' *=' → logprob: -5.839460849761963
    9. '           ' → logprob: -6.589460849761963
    10. ',' → logprob: -7.089460849761963

Token 2400: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695498764514923
    2. '=' → logprob: -2.126955032348633
    3. '               ' → logprob: -11.001955032348633
    4. '           ' → logprob: -12.501955032348633
    5. '                   ' → logprob: -13.501955032348633
    6. '                ' → logprob: -13.626955032348633
    7. '=
' → logprob: -14.126955032348633
    8. ' =
' → logprob: -14.626955032348633
    9. '```' → logprob: -14.626955032348633
    10. '            ' → logprob: -14.876955032348633

Token 2401: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4741111695766449
    2. ' abs' → logprob: -0.9741111993789673
    3. 'temp' → logprob: -10.474111557006836
    4. ' temp' → logprob: -12.474111557006836
    5. '(abs' → logprob: -13.349111557006836
    6. '.abs' → logprob: -16.099111557006836
    7. '0' → logprob: -16.224111557006836
    8. '_abs' → logprob: -16.349111557006836
    9. 'Abs' → logprob: -17.349111557006836
    10. '1' → logprob: -17.724111557006836

Token 2402: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.10021055489778519
    2. 'temp' → logprob: -2.350210666656494
    3. '(
' → logprob: -12.725210189819336
    4. '(' → logprob: -14.725210189819336
    5. ' temp' → logprob: -15.350210189819336
    6. '[temp' → logprob: -16.225210189819336
    7. '$temp' → logprob: -16.725210189819336
    8. '	temp' → logprob: -17.350210189819336
    9. '_temp' → logprob: -17.975210189819336
    10. '(tmp' → logprob: -18.225210189819336

Token 2403: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0065351310186088085
    2. ')' → logprob: -5.631535053253174
    3. '):
' → logprob: -5.881535053253174
    4. '               ' → logprob: -9.381535530090332
    5. ')
' → logprob: -10.631535530090332
    6. '):' → logprob: -12.131535530090332
    7. '                   ' → logprob: -12.131535530090332
    8. '           ' → logprob: -12.381535530090332
    9. '```' → logprob: -12.756535530090332
    10. ')`
' → logprob: -13.006535530090332

Token 2404: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37760868668556213
    2. '```' → logprob: -1.7526086568832397
    3. '                   ' → logprob: -2.0026087760925293
    4. '``' → logprob: -6.127608776092529
    5. '                       ' → logprob: -6.252608776092529
    6. '                ' → logprob: -7.127608776092529
    7. '                               ' → logprob: -8.127608299255371
    8. '           ' → logprob: -8.752608299255371
    9. '              ' → logprob: -8.877608299255371
    10. '                  ' → logprob: -8.877608299255371

Token 2405: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.22989240288734436
    2. ' B' → logprob: -1.604892373085022
    3. '```' → logprob: -6.479892253875732
    4. '               ' → logprob: -6.854892253875732
    5. 'beam' → logprob: -6.979892253875732
    6. ' beam' → logprob: -7.604892253875732
    7. '                   ' → logprob: -8.10489273071289
    8. '``' → logprob: -9.97989273071289
    9. '           ' → logprob: -10.85489273071289
    10. 'for' → logprob: -10.85489273071289

Token 2406: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1607881337404251
    2. ' =' → logprob: -1.9107881784439087
    3. '               ' → logprob: -7.910788059234619
    4. '                   ' → logprob: -10.035788536071777
    5. '           ' → logprob: -10.160788536071777
    6. '```' → logprob: -10.160788536071777
    7. '[i' → logprob: -11.160788536071777
    8. '[' → logprob: -11.285788536071777
    9. '=i' → logprob: -11.285788536071777
    10. ',' → logprob: -11.410788536071777

Token 2407: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.003601021133363247
    2. ' beam' → logprob: -5.62860107421875
    3. '```' → logprob: -15.25360107421875
    4. '   ' → logprob: -15.50360107421875
    5. 'be' → logprob: -15.75360107421875
    6. '
' → logprob: -16.37860107421875
    7. '10' → logprob: -16.87860107421875
    8. 'heap' → logprob: -17.37860107421875
    9. '`' → logprob: -17.50360107421875
    10. '0' → logprob: -17.75360107421875

Token 2408: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.438573680294212e-06
    2. '```' → logprob: -12.250005722045898
    3. '[' → logprob: -15.375005722045898
    4. 'i' → logprob: -16.1250057220459
    5. '`' → logprob: -16.3750057220459
    6. '[user' → logprob: -16.8750057220459
    7. '``' → logprob: -17.5000057220459
    8. '   ' → logprob: -17.7500057220459
    9. '[
' → logprob: -17.8750057220459
    10. '[j' → logprob: -17.8750057220459

Token 2409: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '][' → logprob: -13.500001907348633
    3. '```' → logprob: -16.000001907348633
    4. 'i' → logprob: -16.750001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '[I' → logprob: -17.125001907348633
    7. '[
' → logprob: -17.625001907348633
    8. '[' → logprob: -17.750001907348633
    9. '	i' → logprob: -18.875001907348633
    10. ']' → logprob: -18.875001907348633

Token 2410: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02355187200009823
    2. '1' → logprob: -4.148551940917969
    3. '[i' → logprob: -4.898551940917969
    4. ' i' → logprob: -11.148551940917969
    5. '[' → logprob: -11.648551940917969
    6. '	i' → logprob: -13.023551940917969
    7. '```' → logprob: -13.023551940917969
    8. '
' → logprob: -13.898551940917969
    9. '{i' → logprob: -14.273551940917969
    10. '(i' → logprob: -14.273551940917969

Token 2411: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.07032118737697601
    2. '               ' → logprob: -2.8203210830688477
    3. ']' → logprob: -5.070321083068848
    4. '           ' → logprob: -6.945321083068848
    5. '[i' → logprob: -7.945321083068848
    6. '```' → logprob: -8.320321083068848
    7. '                   ' → logprob: -8.695321083068848
    8. ')
' → logprob: -9.320321083068848
    9. ']
' → logprob: -9.945321083068848
    10. '       ' → logprob: -10.195321083068848

Token 2412: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5134095549583435
    2. '               ' → logprob: -1.1384096145629883
    3. '                   ' → logprob: -2.7634096145629883
    4. ' if' → logprob: -4.638409614562988
    5. '                       ' → logprob: -5.388409614562988
    6. 'if' → logprob: -6.638409614562988
    7. '``' → logprob: -7.263409614562988
    8. '                ' → logprob: -7.263409614562988
    9. '                               ' → logprob: -8.138409614562988
    10. '              ' → logprob: -8.263409614562988

Token 2413: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6176494359970093
    2. ' if' → logprob: -1.2426494359970093
    3. '               ' → logprob: -1.8676494359970093
    4. '                   ' → logprob: -4.742649555206299
    5. '```' → logprob: -4.867649555206299
    6. 'for' → logprob: -7.242649555206299
    7. ' for' → logprob: -8.36764907836914
    8. '                       ' → logprob: -8.61764907836914
    9. '``' → logprob: -10.36764907836914
    10. '           ' → logprob: -10.49264907836914

Token 2414: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06196858361363411
    2. ' B' → logprob: -2.8119685649871826
    3. ' ans' → logprob: -14.936968803405762
    4. '(B' → logprob: -15.436968803405762
    5. 'ans' → logprob: -16.061967849731445
    6. '(' → logprob: -16.186967849731445
    7. 'temp' → logprob: -16.811967849731445
    8. 'cum' → logprob: -17.311967849731445
    9. '
' → logprob: -17.436967849731445
    10. '`' → logprob: -17.686967849731445

Token 2415: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06999345868825912
    2. '*' → logprob: -2.694993495941162
    3. '```' → logprob: -10.569993019104004
    4. '*[' → logprob: -11.319993019104004
    5. '[' → logprob: -11.444993019104004
    6. ')' → logprob: -12.819993019104004
    7. '*object' → logprob: -13.694993019104004
    8. ' [' → logprob: -14.444993019104004
    9. '*i' → logprob: -14.694993019104004
    10. '*out' → logprob: -14.694993019104004

Token 2416: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.002476016292348504
    2. ' ans' → logprob: -6.002476215362549
    3. '(ans' → logprob: -15.12747573852539
    4. '	ans' → logprob: -17.00247573852539
    5. '
' → logprob: -18.25247573852539
    6. 'answer' → logprob: -19.00247573852539
    7. '_ans' → logprob: -19.12747573852539
    8. '```' → logprob: -19.37747573852539
    9. 'ann' → logprob: -19.62747573852539
    10. 'temp' → logprob: -20.12747573852539

Token 2417: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006607305258512497
    2. '0' → logprob: -7.5006608963012695
    3. ' [' → logprob: -9.75066089630127
    4. ' ' → logprob: -10.87566089630127
    5. '```' → logprob: -10.87566089630127
    6. '[
' → logprob: -12.25066089630127
    7. '`' → logprob: -13.12566089630127
    8. '*' → logprob: -13.37566089630127
    9. ' ans' → logprob: -14.12566089630127
    10. '	' → logprob: -14.75066089630127

Token 2418: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004914337769150734
    2. '[' → logprob: -7.625491619110107
    3. '
' → logprob: -13.62549114227295
    4. ' ' → logprob: -14.00049114227295
    5. '   ' → logprob: -14.62549114227295
    6. 'ans' → logprob: -15.75049114227295
    7. '```' → logprob: -15.75049114227295
    8. '1' → logprob: -16.500492095947266
    9. '[
' → logprob: -16.500492095947266
    10. '-' → logprob: -16.875492095947266

Token 2419: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1128481850028038
    2. '<' → logprob: -2.2378482818603516
    3. '```' → logprob: -11.362848281860352
    4. '[' → logprob: -12.362848281860352
    5. '<p' → logprob: -13.737848281860352
    6. '<int' → logprob: -14.237848281860352
    7. '<size' → logprob: -14.362848281860352
    8. ' <=' → logprob: -14.487848281860352
    9. '<th' → logprob: -14.487848281860352
    10. ']<' → logprob: -14.612848281860352

Token 2420: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3868925869464874
    2. '<' → logprob: -1.136892557144165
    3. '```' → logprob: -11.636892318725586
    4. '[' → logprob: -12.511892318725586
    5. '<int' → logprob: -13.136892318725586
    6. ' <=' → logprob: -13.511892318725586
    7. '<=' → logprob: -13.636892318725586
    8. '<size' → logprob: -13.761892318725586
    9. '<n' → logprob: -14.636892318725586
    10. '<th' → logprob: -14.886892318725586

Token 2421: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3868864178657532
    2. ' ans' → logprob: -1.1368863582611084
    3. '(ans' → logprob: -11.261886596679688
    4. '	ans' → logprob: -13.386886596679688
    5. '_ans' → logprob: -14.761886596679688
    6. '```' → logprob: -15.636886596679688
    7. 'answer' → logprob: -15.886886596679688
    8. 'Ans' → logprob: -16.761886596679688
    9. 'ANS' → logprob: -17.011886596679688
    10. '`' → logprob: -17.886886596679688

Token 2422: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7146780490875244
    2. 'ans' → logprob: -0.7146780490875244
    3. '[i' → logprob: -3.9646780490875244
    4. ' ans' → logprob: -6.714677810668945
    5. '```' → logprob: -7.339677810668945
    6. '1' → logprob: -8.214677810668945
    7. '(ans' → logprob: -9.214677810668945
    8. '	ans' → logprob: -10.089677810668945
    9. '_ans' → logprob: -11.464677810668945
    10. '[
' → logprob: -11.589677810668945

Token 2423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5358694731257856e-05
    2. 'ans' → logprob: -10.750035285949707
    3. '[' → logprob: -11.625035285949707
    4. '   ' → logprob: -13.375035285949707
    5. '```' → logprob: -13.375035285949707
    6. ' ' → logprob: -13.875035285949707
    7. '
' → logprob: -15.500035285949707
    8. '0' → logprob: -16.250036239624023
    9. '``' → logprob: -16.250036239624023
    10. '-' → logprob: -16.250036239624023

Token 2424: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005226529203355312
    2. '*' → logprob: -5.6302266120910645
    3. ' <' → logprob: -6.5052266120910645
    4. '```' → logprob: -10.505226135253906
    5. '*t' → logprob: -10.880226135253906
    6. '[' → logprob: -11.005226135253906
    7. '               ' → logprob: -11.255226135253906
    8. ' ' → logprob: -11.380226135253906
    9. '<' → logprob: -11.630226135253906
    10. '                   ' → logprob: -11.755226135253906

Token 2425: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04309191182255745
    2. '*' → logprob: -3.1680920124053955
    3. '```' → logprob: -10.293091773986816
    4. ' <' → logprob: -10.543091773986816
    5. '*t' → logprob: -11.293091773986816
    6. '[' → logprob: -12.293091773986816
    7. '<' → logprob: -12.293091773986816
    8. '*[' → logprob: -13.168091773986816
    9. ' ' → logprob: -13.543091773986816
    10. '*object' → logprob: -14.043091773986816

Token 2426: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.474078893661499
    2. ' temp' → logprob: -0.974078893661499
    3. 't' → logprob: -13.599079132080078
    4. '(temp' → logprob: -15.349079132080078
    5. '	temp' → logprob: -15.974079132080078
    6. 'tmp' → logprob: -16.599079132080078
    7. ' t' → logprob: -16.599079132080078
    8. '[temp' → logprob: -17.224079132080078
    9. 'test' → logprob: -17.349079132080078
    10. ' ' → logprob: -17.474079132080078

Token 2427: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7855028510093689
    2. '*' → logprob: -1.0355029106140137
    3. '[i' → logprob: -2.5355029106140137
    4. '```' → logprob: -3.0355029106140137
    5. '[
' → logprob: -3.4105029106140137
    6. '[' → logprob: -3.7855029106140137
    7. '*i' → logprob: -6.910502910614014
    8. '*[' → logprob: -6.910502910614014
    9. '``' → logprob: -7.035502910614014
    10. '   ' → logprob: -7.160502910614014

Token 2428: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1267135739326477
    2. '                   ' → logprob: -2.376713514328003
    3. ':' → logprob: -4.001713752746582
    4. '                       ' → logprob: -5.126713752746582
    5. '               ' → logprob: -6.501713752746582
    6. '                  ' → logprob: -9.001713752746582
    7. '```' → logprob: -9.501713752746582
    8. '                      ' → logprob: -10.126713752746582
    9. '=' → logprob: -10.126713752746582
    10. '           ' → logprob: -10.251713752746582

Token 2429: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5547028183937073
    2. '[' → logprob: -1.9297027587890625
    3. '```' → logprob: -1.9297027587890625
    4. '                       ' → logprob: -2.5547027587890625
    5. '[
' → logprob: -4.0547027587890625
    6. '(' → logprob: -4.4297027587890625
    7. ':
' → logprob: -4.4297027587890625
    8. '               ' → logprob: -5.6797027587890625
    9. '=' → logprob: -6.0547027587890625
    10. '(
' → logprob: -6.4297027587890625

Token 2430: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.2016024887561798
    2. ' ans' → logprob: -1.7016024589538574
    3. '                   ' → logprob: -8.701602935791016
    4. '	ans' → logprob: -11.951602935791016
    5. '               ' → logprob: -12.201602935791016
    6. '(ans' → logprob: -12.826602935791016
    7. '                       ' → logprob: -13.076602935791016
    8. 'answer' → logprob: -13.326602935791016
    9. '```' → logprob: -13.701602935791016
    10. '   ' → logprob: -13.951602935791016

Token 2431: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4743720293045044
    2. '=' → logprob: -0.9743720293045044
    3. '=[' → logprob: -8.849371910095215
    4. '=[
' → logprob: -10.224371910095215
    5. '=
' → logprob: -10.224371910095215
    6. ' =[' → logprob: -11.224371910095215
    7. '```' → logprob: -11.224371910095215
    8. '+=' → logprob: -11.599371910095215
    9. '[' → logprob: -11.599371910095215
    10. ' +=' → logprob: -12.099371910095215

Token 2432: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2255043387413025
    2. ' [' → logprob: -1.6005043983459473
    3. '[
' → logprob: -10.475503921508789
    4. 'beam' → logprob: -10.725503921508789
    5. ' beam' → logprob: -10.725503921508789
    6. '[t' → logprob: -12.100503921508789
    7. '[B' → logprob: -12.725503921508789
    8. '[-' → logprob: -12.850503921508789
    9. '[b' → logprob: -13.350503921508789
    10. '   ' → logprob: -13.850503921508789

Token 2433: 'temp' (ID: 7340)
  Prédit: 'temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.2853400409221649
    2. 'beam' → logprob: -1.4103400707244873
    3. 't' → logprob: -6.410339832305908
    4. '[' → logprob: -6.660339832305908
    5. '[temp' → logprob: -8.035340309143066
    6. '0' → logprob: -8.910340309143066
    7. 'abs' → logprob: -8.910340309143066
    8. '   ' → logprob: -9.285340309143066
    9. ' temp' → logprob: -9.410340309143066
    10. 'be' → logprob: -9.410340309143066

Token 2434: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15090927481651306
    2. '2' → logprob: -2.025909185409546
    3. '0' → logprob: -5.400909423828125
    4. '[i' → logprob: -5.650909423828125
    5. '   ' → logprob: -9.775909423828125
    6. ',' → logprob: -10.525909423828125
    7. '```' → logprob: -10.775909423828125
    8. 'i' → logprob: -10.900909423828125
    9. '[
' → logprob: -11.400909423828125
    10. '][' → logprob: -11.525909423828125

Token 2435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.65101717156358e-05
    2. ',B' → logprob: -10.000096321105957
    3. ' ,' → logprob: -10.625096321105957
    4. '                   ' → logprob: -10.875096321105957
    5. '```' → logprob: -13.250096321105957
    6. ',b' → logprob: -13.375096321105957
    7. '               ' → logprob: -13.625096321105957
    8. ',
' → logprob: -14.375096321105957
    9. '[' → logprob: -14.375096321105957
    10. '           ' → logprob: -14.625096321105957

Token 2436: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.01714901812374592
    2. ' B' → logprob: -4.517148971557617
    3. 'beam' → logprob: -5.142148971557617
    4. ' beam' → logprob: -8.392148971557617
    5. '   ' → logprob: -12.142148971557617
    6. 'Beam' → logprob: -14.017148971557617
    7. '           ' → logprob: -14.142148971557617
    8. '       ' → logprob: -14.392148971557617
    9. '	B' → logprob: -14.642148971557617
    10. '               ' → logprob: -14.642148971557617

Token 2437: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006420594174414873
    2. '               ' → logprob: -5.506420612335205
    3. ']
' → logprob: -6.881420612335205
    4. '                   ' → logprob: -7.256420612335205
    5. '       ' → logprob: -8.381420135498047
    6. '           ' → logprob: -8.381420135498047
    7. '                       ' → logprob: -9.631420135498047
    8. '   ' → logprob: -10.631420135498047
    9. '```' → logprob: -11.381420135498047
    10. ')' → logprob: -11.506420135498047

Token 2438: 'p' (ID: 79)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.052377623040229e-05
    2. '```' → logprob: -9.625070571899414
    3. '
' → logprob: -13.125070571899414
    4. '``' → logprob: -13.375070571899414
    5. ' print' → logprob: -14.125070571899414
    6. '<|end|>' → logprob: -18.125070571899414
    7. '(print' → logprob: -18.375070571899414
    8. 'for' → logprob: -18.750070571899414
    9. 'if' → logprob: -18.750070571899414
    10. '[' → logprob: -18.875070571899414

Token 2439: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.128163257315464e-07
    2. ' r' → logprob: -16.375
    3. 'rin' → logprob: -16.375
    4. 'print' → logprob: -17.375
    5. '```' → logprob: -18.625
    6. 'riv' → logprob: -18.75
    7. '_r' → logprob: -19.0
    8. '	r' → logprob: -19.875
    9. 'rit' → logprob: -19.875
    10. '=r' → logprob: -20.125

Token 2440: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1875571544806007e-05
    2. ' q' → logprob: -11.375011444091797
    3. 'k' → logprob: -16.375011444091797
    4. 'r' → logprob: -16.750011444091797
    5. 'end' → logprob: -17.125011444091797
    6. 't' → logprob: -17.125011444091797
    7. 'B' → logprob: -17.250011444091797
    8. ''q' → logprob: -17.750011444091797
    9. 'c' → logprob: -18.000011444091797
    10. 'ans' → logprob: -18.125011444091797

Token 2441: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01798674464225769
    2. ' =' → logprob: -4.39298677444458
    3. ',' → logprob: -5.39298677444458
    4. '<|end|>' → logprob: -7.76798677444458
    5. '=p' → logprob: -8.892986297607422
    6. '=
' → logprob: -9.142986297607422
    7. ',p' → logprob: -9.267986297607422
    8. '[' → logprob: -9.892986297607422
    9. '=[' → logprob: -10.642986297607422
    10. ')' → logprob: -10.892986297607422

Token 2442: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0002910102193709463
    2. '1' → logprob: -8.750290870666504
    3. ' ans' → logprob: -9.125290870666504
    4. '0' → logprob: -11.250290870666504
    5. '(ans' → logprob: -11.625290870666504
    6. '	ans' → logprob: -14.625290870666504
    7. '_ans' → logprob: -15.500290870666504
    8. '   ' → logprob: -15.875290870666504
    9. '
' → logprob: -16.00029182434082
    10. '(' → logprob: -16.12529182434082

Token 2443: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1611253023147583
    2. '
' → logprob: -1.2861253023147583
    3. ',' → logprob: -1.6611253023147583
    4. '[' → logprob: -2.4111251831054688
    5. ' =' → logprob: -2.6611251831054688
    6. 'print' → logprob: -3.9111251831054688
    7. '<|end|>' → logprob: -4.161125183105469
    8. 'p' → logprob: -4.786125183105469
    9. ',p' → logprob: -5.161125183105469
    10. '[p' → logprob: -5.911125183105469

Token 2444: 'res' (ID: 430)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5213274309644476e-05
    2. '/' → logprob: -12.125015258789062
    3. '
' → logprob: -12.125015258789062
    4. ' print' → logprob: -13.375015258789062
    5. 'p' → logprob: -13.500015258789062
    6. '```' → logprob: -14.125015258789062
    7. '/
' → logprob: -15.000015258789062
    8. 'g' → logprob: -15.875015258789062
    9. '/q' → logprob: -16.750015258789062
    10. '/g' → logprob: -17.375015258789062

Token 2445: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35263124108314514
    2. ' =' → logprob: -1.2276312112808228
    3. 's' → logprob: -6.602631092071533
    4. '=p' → logprob: -7.352631092071533
    5. '```' → logprob: -7.477631092071533
    6. '=[]' → logprob: -8.352631568908691
    7. 'ults' → logprob: -8.602631568908691
    8. 'ult' → logprob: -8.727631568908691
    9. '=res' → logprob: -8.852631568908691
    10. '=[]
' → logprob: -8.977631568908691

Token 2446: ' [' (ID: 723)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008402384701184928
    2. ' p' → logprob: -7.375840187072754
    3. '(p' → logprob: -9.500840187072754
    4. 'f' → logprob: -9.875840187072754
    5. 'str' → logprob: -10.250840187072754
    6. '0' → logprob: -10.875840187072754
    7. ''p' → logprob: -11.625840187072754
    8. 'ans' → logprob: -12.000840187072754
    9. '(' → logprob: -13.250840187072754
    10. ''' → logprob: -13.375840187072754

Token 2447: 'q' (ID: 80)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4352998733520508
    2. '0' → logprob: -1.9352998733520508
    3. 'str' → logprob: -2.435299873352051
    4. 'i' → logprob: -3.060299873352051
    5. ']' → logprob: -4.060299873352051
    6. 'False' → logprob: -4.185299873352051
    7. '(' → logprob: -4.935299873352051
    8. 'beam' → logprob: -5.060299873352051
    9. '(p' → logprob: -5.310299873352051
    10. '1' → logprob: -5.810299873352051

Token 2448: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05283036082983017
    2. ',p' → logprob: -3.177830457687378
    3. 'p' → logprob: -5.427830219268799
    4. ']' → logprob: -6.052830219268799
    5. '//' → logprob: -7.177830219268799
    6. 'for' → logprob: -7.927830219268799
    7. '*p' → logprob: -7.927830219268799
    8. '+' → logprob: -8.177830696105957
    9. '*' → logprob: -8.927830696105957
    10. ' /' → logprob: -9.052830696105957

Token 2449: ' m' (ID: 284)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0017625248292461038
    2. '2' → logprob: -7.876762390136719
    3. 'N' → logprob: -7.876762390136719
    4. '1' → logprob: -8.626762390136719
    5. 'ans' → logprob: -8.751762390136719
    6. 'q' → logprob: -9.001762390136719
    7. '(p' → logprob: -9.376762390136719
    8. '100' → logprob: -9.626762390136719
    9. 'm' → logprob: -9.876762390136719
    10. '(' → logprob: -10.001762390136719

Token 2450: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3385300040245056
    2. '-' → logprob: -1.7135300636291504
    3. ',' → logprob: -2.5885300636291504
    4. '+' → logprob: -3.8385300636291504
    5. ' +' → logprob: -5.83853006362915
    6. ' p' → logprob: -5.96353006362915
    7. 'p' → logprob: -6.46353006362915
    8. '-p' → logprob: -6.83853006362915
    9. ' ,' → logprob: -7.33853006362915
    10. ',p' → logprob: -7.71353006362915

Token 2451: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009521945030428469
    2. ' p' → logprob: -7.750952243804932
    3. '(p' → logprob: -8.375951766967773
    4. 'q' → logprob: -9.250951766967773
    5. '(' → logprob: -10.000951766967773
    6. 'ans' → logprob: -10.125951766967773
    7. '0' → logprob: -10.625951766967773
    8. 'm' → logprob: -10.875951766967773
    9. '1' → logprob: -11.000951766967773
    10. '(ans' → logprob: -11.250951766967773

Token 2452: ',' (ID: 11)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.8990948796272278
    2. ' //' → logprob: -0.8990948796272278
    3. ',' → logprob: -1.899094820022583
    4. ']' → logprob: -3.399094820022583
    5. ' ,' → logprob: -7.274095058441162
    6. ' for' → logprob: -7.649095058441162
    7. ',
' → logprob: -8.024094581604004
    8. '```' → logprob: -8.399094581604004
    9. ',//' → logprob: -8.399094581604004
    10. 'for' → logprob: -8.774094581604004

Token 2453: ' N' (ID: 478)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3104998767375946
    2. 'p' → logprob: -1.435499906539917
    3. 'm' → logprob: -4.435499668121338
    4. '0' → logprob: -4.810499668121338
    5. ' q' → logprob: -5.810499668121338
    6. ' p' → logprob: -6.310499668121338
    7. '1' → logprob: -6.935499668121338
    8. 'res' → logprob: -7.060499668121338
    9. 'N' → logprob: -7.435499668121338
    10. 'ans' → logprob: -7.810499668121338

Token 2454: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04976820945739746
    2. ')' → logprob: -4.299768447875977
    3. '-' → logprob: -4.299768447875977
    4. ',' → logprob: -4.924768447875977
    5. ' -' → logprob: -5.424768447875977
    6. '*' → logprob: -5.924768447875977
    7. ']
' → logprob: -5.924768447875977
    8. ' *' → logprob: -6.799768447875977
    9. '//' → logprob: -7.174768447875977
    10. '*p' → logprob: -7.674768447875977

Token 2455: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.13101422786712646
    2. 'p' → logprob: -2.506014347076416
    3. ' q' → logprob: -3.756014347076416
    4. 'm' → logprob: -4.631014347076416
    5. ' p' → logprob: -5.506014347076416
    6. 'ans' → logprob: -6.631014347076416
    7. '(q' → logprob: -7.256014347076416
    8. '(ans' → logprob: -7.631014347076416
    9. ' m' → logprob: -7.756014347076416
    10. '(p' → logprob: -8.006013870239258

Token 2456: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03504956513643265
    2. ' -' → logprob: -3.9100496768951416
    3. '-' → logprob: -4.9100494384765625
    4. ' ]' → logprob: -5.9100494384765625
    5. ']
' → logprob: -6.1600494384765625
    6. '-p' → logprob: -7.0350494384765625
    7. ',' → logprob: -7.7850494384765625
    8. '//' → logprob: -8.285049438476562
    9. '+' → logprob: -8.535049438476562
    10. ')' → logprob: -9.285049438476562

Token 2457: 'g' (ID: 70)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14850814640522003
    2. ')' → logprob: -2.273508071899414
    3. '
' → logprob: -4.523508071899414
    4. 'p' → logprob: -5.898508071899414
    5. ')
' → logprob: -6.023508071899414
    6. ']' → logprob: -6.023508071899414
    7. '/' → logprob: -6.023508071899414
    8. '\n' → logprob: -6.023508071899414
    9. '```' → logprob: -6.148508071899414
    10. '[' → logprob: -6.898508071899414

Token 2458: ' =' (ID: 314)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.09763659536838531
    2. '=' → logprob: -3.4726366996765137
    3. 'def' → logprob: -3.4726366996765137
    4. '```' → logprob: -4.847636699676514
    5. ' =' → logprob: -5.222636699676514
    6. 'import' → logprob: -5.347636699676514
    7. 'c' → logprob: -5.347636699676514
    8. 'from' → logprob: -5.472636699676514
    9. 'g' → logprob: -6.472636699676514
    10. '=g' → logprob: -6.722636699676514

Token 2459: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.032726965844631195
    2. 'p' → logprob: -3.532727003097534
    3. ' gcd' → logprob: -7.282726764678955
    4. '1' → logprob: -7.532726764678955
    5. '0' → logprob: -7.782726764678955
    6. 'res' → logprob: -7.907726764678955
    7. 'pow' → logprob: -8.532727241516113
    8. 'math' → logprob: -8.532727241516113
    9. 'lambda' → logprob: -8.782727241516113
    10. 'q' → logprob: -9.407727241516113

Token 2460: '(res' (ID: 8331)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0015976991271600127
    2. 'p' → logprob: -6.501597881317139
    3. '(res' → logprob: -9.75159740447998
    4. '(' → logprob: -11.37659740447998
    5. 'res' → logprob: -11.50159740447998
    6. '(
' → logprob: -11.50159740447998
    7. '(q' → logprob: -13.12659740447998
    8. '(g' → logprob: -13.50159740447998
    9. '(ans' → logprob: -13.87659740447998
    10. '(m' → logprob: -14.37659740447998

Token 2461: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006407208740711212
    2. 'p' → logprob: -5.131407260894775
    3. '[p' → logprob: -8.006406784057617
    4. '0' → logprob: -9.756406784057617
    5. ',p' → logprob: -10.131406784057617
    6. ',' → logprob: -10.881406784057617
    7. 'res' → logprob: -11.256406784057617
    8. '(p' → logprob: -11.881406784057617
    9. 'g' → logprob: -12.756406784057617
    10. ' p' → logprob: -13.631406784057617

Token 2462: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.190178904333152e-05
    2. 'res' → logprob: -10.625031471252441
    3. '1' → logprob: -12.750031471252441
    4. 'p' → logprob: -13.500031471252441
    5. '[' → logprob: -14.000031471252441
    6. '
' → logprob: -14.125031471252441
    7. 'g' → logprob: -14.500031471252441
    8. '```' → logprob: -14.625031471252441
    9. ' ' → logprob: -15.375031471252441
    10. '   ' → logprob: -15.625031471252441

Token 2463: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048813432455062866
    2. ',res' → logprob: -3.0488133430480957
    3. ',
' → logprob: -8.798813819885254
    4. 'res' → logprob: -10.298813819885254
    5. ' ,' → logprob: -11.173813819885254
    6. ',g' → logprob: -11.423813819885254
    7. '[' → logprob: -12.048813819885254
    8. ',q' → logprob: -12.548813819885254
    9. '(res' → logprob: -13.048813819885254
    10. 'g' → logprob: -13.423813819885254

Token 2464: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: 0.0
    2. ' res' → logprob: -18.25
    3. '
' → logprob: -23.625
    4. '	res' → logprob: -24.0
    5. 'g' → logprob: -24.375
    6. '```' → logprob: -24.375
    7. '$res' → logprob: -25.125
    8. '(res' → logprob: -25.75
    9. '   ' → logprob: -25.75
    10. 'r' → logprob: -26.375

Token 2465: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12694081664085388
    2. '[' → logprob: -2.1269407272338867
    3. '```' → logprob: -11.876940727233887
    4. ']' → logprob: -13.251940727233887
    5. '[
' → logprob: -13.626940727233887
    6. '])' → logprob: -14.626940727233887
    7. '],' → logprob: -14.626940727233887
    8. 'res' → logprob: -14.876940727233887
    9. '2' → logprob: -14.876940727233887
    10. '-' → logprob: -15.126940727233887

Token 2466: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. '0' → logprob: -12.000006675720215
    3. '```' → logprob: -17.3750057220459
    4. '2' → logprob: -18.5000057220459
    5. ']' → logprob: -18.5000057220459
    6. '-' → logprob: -18.8750057220459
    7. '
' → logprob: -19.3750057220459
    8. '[' → logprob: -19.6250057220459
    9. '9' → logprob: -19.7500057220459
    10. '5' → logprob: -20.0000057220459

Token 2467: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07892592251300812
    2. ')' → logprob: -2.578925848007202
    3. '])
' → logprob: -10.703926086425781
    4. '])' → logprob: -11.953926086425781
    5. ')
' → logprob: -13.078926086425781
    6. 'res' → logprob: -13.703926086425781
    7. ' )
' → logprob: -14.078926086425781
    8. '[' → logprob: -14.328926086425781
    9. ')`
' → logprob: -14.578926086425781
    10. ')

' → logprob: -14.828926086425781

Token 2468: 'print' (ID: 1598)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.007390571292489767
    2. 'p' → logprob: -5.63239049911499
    3. 'print' → logprob: -5.75739049911499
    4. '```' → logprob: -8.507390975952148
    5. 'for' → logprob: -9.382390975952148
    6. '
' → logprob: -9.632390975952148
    7. 'g' → logprob: -9.632390975952148
    8. '\' → logprob: -10.007390975952148
    9. ' res' → logprob: -10.007390975952148
    10. '[
' → logprob: -10.632390975952148

Token 2469: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.06200297176837921
    2. 'res' → logprob: -2.8120028972625732
    3. '(' → logprob: -10.312003135681152
    4. ' res' → logprob: -13.312003135681152
    5. '(f' → logprob: -15.562003135681152
    6. '((' → logprob: -16.437002182006836
    7. '	res' → logprob: -17.562002182006836
    8. '(
' → logprob: -17.812002182006836
    9. 'f' → logprob: -17.937002182006836
    10. ' (' → logprob: -17.937002182006836

Token 2470: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004721326287835836
    2. '[g' → logprob: -5.379721164703369
    3. '[
' → logprob: -10.129721641540527
    4. '```' → logprob: -10.504721641540527
    5. ')' → logprob: -11.629721641540527
    6. 'g' → logprob: -12.129721641540527
    7. ',' → logprob: -12.504721641540527
    8. '0' → logprob: -12.754721641540527
    9. '[p' → logprob: -13.129721641540527
    10. '   ' → logprob: -13.254721641540527

Token 2471: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9153885558771435e-06
    2. '1' → logprob: -12.375005722045898
    3. '])' → logprob: -13.625005722045898
    4. '```' → logprob: -16.0000057220459
    5. '])
' → logprob: -16.1250057220459
    6. ')' → logprob: -16.1250057220459
    7. '2' → logprob: -16.7500057220459
    8. ' ' → logprob: -16.7500057220459
    9. '-' → logprob: -17.3750057220459
    10. '
' → logprob: -17.5000057220459

Token 2472: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.042556606233119965
    2. '//' → logprob: -3.2925565242767334
    3. ' //' → logprob: -5.6675567626953125
    4. ' ,' → logprob: -7.4175567626953125
    5. ')' → logprob: -8.417556762695312
    6. ',//' → logprob: -9.292556762695312
    7. '```' → logprob: -9.667556762695312
    8. ',end' → logprob: -11.417556762695312
    9. ',g' → logprob: -11.667556762695312
    10. ',
' → logprob: -12.042556762695312

Token 2473: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -1.0593922138214111
    2. ' //' → logprob: -1.0593922138214111
    3. ',' → logprob: -1.1843922138214111
    4. '```' → logprob: -7.934391975402832
    5. ' ,' → logprob: -9.059391975402832
    6. ')' → logprob: -9.184391975402832
    7. '`' → logprob: -9.559391975402832
    8. ' ' → logprob: -10.934391975402832
    9. ',//' → logprob: -10.934391975402832
    10. ',
' → logprob: -11.684391975402832

Token 2474: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.935296834039036e-06
    2. 'res' → logprob: -12.75000286102295
    3. ' g' → logprob: -18.500003814697266
    4. '   ' → logprob: -21.625003814697266
    5. '```' → logprob: -21.750003814697266
    6. '`' → logprob: -23.125003814697266
    7. '	g' → logprob: -23.375003814697266
    8. '[g' → logprob: -23.750003814697266
    9. '=g' → logprob: -23.750003814697266
    10. '
' → logprob: -24.125003814697266

Token 2475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000748994410969317
    2. '//' → logprob: -7.875749111175537
    3. ',res' → logprob: -8.375748634338379
    4. ')' → logprob: -9.375748634338379
    5. ' ,' → logprob: -11.000748634338379
    6. '```' → logprob: -11.000748634338379
    7. ' //' → logprob: -11.625748634338379
    8. ',
' → logprob: -11.875748634338379
    9. ')
' → logprob: -13.875748634338379
    10. 'res' → logprob: -14.000748634338379

Token 2476: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -9.088346359931165e-07
    2. ' res' → logprob: -14.000000953674316
    3. '(res' → logprob: -19.5
    4. '	res' → logprob: -22.875
    5. '$res' → logprob: -22.875
    6. '```' → logprob: -24.375
    7. '   ' → logprob: -26.0
    8. '_res' → logprob: -26.125
    9. 'g' → logprob: -26.25
    10. '`' → logprob: -26.5

Token 2477: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.226628895296017e-06
    2. 'g' → logprob: -12.375007629394531
    3. '1' → logprob: -13.625007629394531
    4. '[
' → logprob: -14.000007629394531
    5. '2' → logprob: -14.625007629394531
    6. '```' → logprob: -15.375007629394531
    7. '[g' → logprob: -15.750007629394531
    8. 'res' → logprob: -17.12500762939453
    9. '0' → logprob: -18.50000762939453
    10. '``' → logprob: -18.87500762939453

Token 2478: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.25
    3. 'g' → logprob: -16.75
    4. '```' → logprob: -18.875
    5. '
' → logprob: -19.875
    6. ' ' → logprob: -20.125
    7. '-' → logprob: -20.375
    8. '0' → logprob: -20.5
    9. '[g' → logprob: -20.5
    10. '   ' → logprob: -20.875

Token 2479: ']' (ID: 60)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.20217590034008026
    2. ' //' → logprob: -1.7021758556365967
    3. ')' → logprob: -7.202176094055176
    4. '```' → logprob: -11.952176094055176
    5. ' ' → logprob: -12.827176094055176
    6. ']' → logprob: -13.202176094055176
    7. '#' → logprob: -13.202176094055176
    8. 'g' → logprob: -13.702176094055176
    9. ' ' → logprob: -13.702176094055176
    10. ')//' → logprob: -13.827176094055176

Token 2480: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.008202836848795414
    2. ' //' → logprob: -4.883203029632568
    3. ')' → logprob: -7.508203029632568
    4. '```' → logprob: -10.50820255279541
    5. '#' → logprob: -11.50820255279541
    6. ' ' → logprob: -12.50820255279541
    7. 'g' → logprob: -13.25820255279541
    8. '<|end|>' → logprob: -13.75820255279541
    9. ']' → logprob: -14.50820255279541
    10. '[' → logprob: -14.63320255279541

Token 2481: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.9361264946837764e-07
    2. ' g' → logprob: -15.75
    3. 'q' → logprob: -19.25
    4. '_g' → logprob: -22.25
    5. '	g' → logprob: -22.375
    6. '
' → logprob: -22.875
    7. '```' → logprob: -23.125
    8. '[g' → logprob: -23.375
    9. ''g' → logprob: -23.75
    10. '   ' → logprob: -24.125

Token 2482: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -16.125
    3. ' )' → logprob: -16.25
    4. ')`' → logprob: -16.75
    5. '))' → logprob: -17.0
    6. '```' → logprob: -17.375
    7. '`)' → logprob: -17.75
    8. '),' → logprob: -19.125
    9. '+' → logprob: -19.375
    10. '})' → logprob: -19.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2480
Tokens correctement prédits (1ère position, stricte): 1044
Tokens correctement prédits (1ère position, avec adaptation): 1148
Tokens correctement prédits (top 10): 2180
Précision stricte (1ère position): 42.10%
Précision adaptée (1ère position): 46.29%
Précision (top 10): 87.90%
================================================================================
