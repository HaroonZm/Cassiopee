================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur de saisir deux entiers séparés par un espace sur une seule ligne
# La fonction input() lit la saisie utilisateur sous forme de chaîne de caractères
# La méthode split() divise la chaîne en une liste de sous-chaînes là où il y a des espaces
# La fonction map() applique la fonction int() à chaque élément de la liste (chaque sous-chaîne devient un entier)
# Les deux entiers résultants sont affectés respectivement aux variables A et B
A, B = map(int, input().split())

# Initialiser une variable n avec la valeur 1
# Cela servira pour multiplier A par différents entiers consécutifs
n = 1

# Démarrer une boucle infinie avec while True pour rechercher le résultat désiré
while True:
    # Multiplier la valeur de A par n, stocker le résultat dans la variable A_
    # Le caractère de soulignement (_) est fréquemment utilisé pour distinguer une variable temporaire
    A_ = A * n

    # Calculer le reste de la division de A_ par B à l'aide de l'opérateur modulo (%)
    # Si ce reste est égal à 0, cela signifie que A_ est un multiple de B
    if A_ % B == 0:
        # Afficher la valeur de A_ sur la sortie standard (typiquement l'écran)
        print(A_)
        # Arrêter immédiatement l'exécution du programme en appelant la fonction exit()
        # Cela termine le script même si d'autres instructions suivent après la boucle
        exit()
    
    # Si le reste n'est pas nul, augmenter la valeur de n de 1 avec n += 1
    # Cela permet de vérifier le prochain multiple de A à l'itération suivante
    n += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4347496032714844
    2. '_la' → logprob: -2.4347496032714844
    3. '_l' → logprob: -2.9347496032714844
    4. ' =' → logprob: -3.1847496032714844
    5. ' la' → logprob: -3.3097496032714844
    6. '_le' → logprob: -3.4347496032714844
    7. ' à' → logprob: -3.9347496032714844
    8. ' ' → logprob: -4.684749603271484
    9. '```' → logprob: -4.684749603271484
    10. '_a' → logprob: -4.809749603271484

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2228223979473114
    2. ' l' → logprob: -1.7228224277496338
    3. 'user' → logprob: -4.847822189331055
    4. ' user' → logprob: -5.222822189331055
    5. 'util' → logprob: -5.597822189331055
    6. ' utilisateur' → logprob: -6.472822189331055
    7. ' ' → logprob: -7.597822189331055
    8. 'la' → logprob: -7.972822189331055
    9. ''utilisateur' → logprob: -8.222822189331055
    10. 'un' → logprob: -8.347822189331055

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.17725136876106262
    2. 'util' → logprob: -2.3022513389587402
    3. ' utilisateur' → logprob: -3.3022513389587402
    4. '’utilisateur' → logprob: -4.17725133895874
    5. 'u' → logprob: -5.55225133895874
    6. 'a' → logprob: -5.92725133895874
    7. ''' → logprob: -6.80225133895874
    8. 'user' → logprob: -7.55225133895874
    9. '_util' → logprob: -7.92725133895874
    10. 'us' → logprob: -7.92725133895874

Token 6: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4691339135169983
    2. 's' → logprob: -1.9691338539123535
    3. 'name' → logprob: -3.3441338539123535
    4. '_' → logprob: -3.4691338539123535
    5. 'input' → logprob: -3.5941338539123535
    6. 'u' → logprob: -3.8441338539123535
    7. 'nom' → logprob: -3.9691338539123535
    8. 'n' → logprob: -4.2191338539123535
    9. '#' → logprob: -4.4691338539123535
    10. 'user' → logprob: -5.0941338539123535

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012901609763503075
    2. 'entr' → logprob: -5.012901782989502
    3. ' saisir' → logprob: -5.762901782989502
    4. 'r' → logprob: -6.762901782989502
    5. '```' → logprob: -6.762901782989502
    6. '#' → logprob: -9.262901306152344
    7. 'contin' → logprob: -9.512901306152344
    8. 'entrée' → logprob: -9.512901306152344
    9. 'entre' → logprob: -9.637901306152344
    10. 'ent' → logprob: -9.762901306152344

Token 8: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.037072207778692245
    2. '_' → logprob: -3.41207218170166
    3. ''' → logprob: -6.66207218170166
    4. 's' → logprob: -7.41207218170166
    5. ' ' → logprob: -8.16207218170166
    6. '```' → logprob: -8.91207218170166
    7. 'u' → logprob: -9.03707218170166
    8. ' :' → logprob: -9.16207218170166
    9. ' un' → logprob: -9.16207218170166
    10. ',' → logprob: -9.28707218170166

Token 9: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4851003885269165
    2. ' espaces' → logprob: -1.1101003885269165
    3. 's' → logprob: -3.860100269317627
    4. ' mots' → logprob: -4.485100269317627
    5. ' espace' → logprob: -5.860100269317627
    6. '_' → logprob: -6.110100269317627
    7. 'r' → logprob: -6.610100269317627
    8. 'n' → logprob: -6.735100269317627
    9. ' lignes' → logprob: -6.735100269317627
    10. ' ' → logprob: -6.735100269317627

Token 10: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.013255871832370758
    2. 'i' → logprob: -4.763256072998047
    3. 'ières' → logprob: -6.388256072998047
    4. 'r' → logprob: -7.013256072998047
    5. 'rs' → logprob: -7.013256072998047
    6. '```' → logprob: -7.388256072998047
    7. 'ié' → logprob: -8.513256072998047
    8. 'ier' → logprob: -9.763256072998047
    9. 'ri' → logprob: -9.888256072998047
    10. 'î' → logprob: -10.138256072998047

Token 11: ' sépar' (ID: 97160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3497207462787628
    2. 'a' → logprob: -1.8497207164764404
    3. '\n' → logprob: -2.3497207164764404
    4. 'x' → logprob: -3.4747207164764404
    5. '\' → logprob: -4.9747209548950195
    6. 'e' → logprob: -6.9747209548950195
    7. 'ent' → logprob: -7.3497209548950195
    8. '#' → logprob: -7.4747209548950195
    9. '```' → logprob: -7.8497209548950195
    10. 'nombre' → logprob: -8.09972095489502

Token 12: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0022292369976639748
    2. 'é' → logprob: -6.1272292137146
    3. 'ées' → logprob: -11.627229690551758
    4. 's' → logprob: -11.752229690551758
    5. 'ès' → logprob: -11.752229690551758
    6. '```' → logprob: -11.877229690551758
    7. 'es' → logprob: -12.877229690551758
    8. 'ément' → logprob: -13.002229690551758
    9. '#' → logprob: -13.752229690551758
    10. 'Ã' → logprob: -14.002229690551758

Token 13: ' par' (ID: 686)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.59236741065979
    2. 's' → logprob: -1.09236741065979
    3. ' par' → logprob: -3.09236741065979
    4. ' ' → logprob: -3.71736741065979
    5. 'par' → logprob: -3.71736741065979
    6. 'e' → logprob: -4.717367172241211
    7. ',' → logprob: -6.717367172241211
    8. '_' → logprob: -7.342367172241211
    9. '  ' → logprob: -7.342367172241211
    10. 'space' → logprob: -7.342367172241211

Token 14: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.5343754291534424
    2. 'une' → logprob: -1.0343754291534424
    3. ' un' → logprob: -3.1593754291534424
    4. ''un' → logprob: -4.784375190734863
    5. ' une' → logprob: -6.159375190734863
    6. ''' → logprob: -6.659375190734863
    7. 'space' → logprob: -7.034375190734863
    8. ' ' → logprob: -7.534375190734863
    9. ''une' → logprob: -7.659375190734863
    10. 'a' → logprob: -7.909375190734863

Token 15: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.19693003594875336
    2. ' espace' → logprob: -2.196929931640625
    3. ''espace' → logprob: -3.196929931640625
    4. 'esp' → logprob: -3.821929931640625
    5. 'space' → logprob: -6.446929931640625
    6. 'e' → logprob: -7.321929931640625
    7. ''esp' → logprob: -7.321929931640625
    8. '’espace' → logprob: -7.446929931640625
    9. '_' → logprob: -8.321929931640625
    10. ' espaces' → logprob: -8.821929931640625

Token 16: ' sur' (ID: 1512)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4475511610507965
    2. 'x' → logprob: -2.0725512504577637
    3. 'user' → logprob: -2.9475512504577637
    4. 'e' → logprob: -3.0725512504577637
    5. 'a' → logprob: -3.5725512504577637
    6. 'input' → logprob: -3.5725512504577637
    7. 'u' → logprob: -3.9475512504577637
    8. 'i' → logprob: -4.197551250457764
    9. '```' → logprob: -4.447551250457764
    10. 'ent' → logprob: -4.572551250457764

Token 17: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.45030370354652405
    2. ' une' → logprob: -1.9503036737442017
    3. 'la' → logprob: -2.325303792953491
    4. 'une' → logprob: -2.950303792953491
    5. ' ' → logprob: -3.325303792953491
    6. ' ' → logprob: -3.950303792953491
    7. 'l' → logprob: -4.700303554534912
    8. '  ' → logprob: -6.450303554534912
    9. '```' → logprob: -6.450303554534912
    10. ''une' → logprob: -7.450303554534912

Token 18: ' seule' (ID: 41983)
  Prédit: ' seule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seule' → logprob: -0.537333607673645
    2. 'e' → logprob: -1.412333607673645
    3. 'ligne' → logprob: -2.7873334884643555
    4. ' ligne' → logprob: -3.7873334884643555
    5. ' seul' → logprob: -3.9123334884643555
    6. '\n' → logprob: -4.0373334884643555
    7. ' ' → logprob: -4.7873334884643555
    8. 'se' → logprob: -4.9123334884643555
    9. ' même' → logprob: -5.0373334884643555
    10. ' unique' → logprob: -5.0373334884643555

Token 19: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.6167537569999695
    2. ' ' → logprob: -1.1167538166046143
    3. 'ligne' → logprob: -2.2417538166046143
    4. 'l' → logprob: -3.7417538166046143
    5. ' ' → logprob: -6.366753578186035
    6. ' line' → logprob: -8.116753578186035
    7. 'line' → logprob: -8.366753578186035
    8. '   ' → logprob: -8.741753578186035
    9. ' \' → logprob: -9.366753578186035
    10. '  ' → logprob: -9.366753578186035

Token 20: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4495100975036621
    2. 'x' → logprob: -2.449510097503662
    3. 'e' → logprob: -2.574510097503662
    4. 'user' → logprob: -2.949510097503662
    5. 'input' → logprob: -3.324510097503662
    6. 'u' → logprob: -3.574510097503662
    7. 'ent' → logprob: -3.699510097503662
    8. 'i' → logprob: -4.449510097503662
    9. '```' → logprob: -4.574510097503662
    10. 'a' → logprob: -4.824510097503662

Token 21: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19961345195770264
    2. 'x' → logprob: -2.074613571166992
    3. 'e' → logprob: -3.949613571166992
    4. 'user' → logprob: -5.074613571166992
    5. '#' → logprob: -5.324613571166992
    6. '\n' → logprob: -5.699613571166992
    7. 'a' → logprob: -5.699613571166992
    8. '```' → logprob: -5.699613571166992
    9. 'ent' → logprob: -5.824613571166992
    10. 'u' → logprob: -5.949613571166992

Token 22: ' La' (ID: 3038)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7490018010139465
    2. 'user' → logprob: -1.4990017414093018
    3. 'input' → logprob: -1.6240017414093018
    4. 's' → logprob: -3.4990017414093018
    5. 'n' → logprob: -4.124001979827881
    6. 'entrée' → logprob: -4.124001979827881
    7. 'nombre' → logprob: -4.874001979827881
    8. 'val' → logprob: -4.874001979827881
    9. 'numbers' → logprob: -5.124001979827881
    10. 'entr' → logprob: -5.249001979827881

Token 23: ' fonction' (ID: 17610)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8479312062263489
    2. ' ' → logprob: -1.597931146621704
    3. ' ligne' → logprob: -2.347931146621704
    4. 'ligne' → logprob: -3.222931146621704
    5. 'l' → logprob: -3.472931146621704
    6. ' #' → logprob: -3.722931146621704
    7. '#' → logprob: -4.097931385040283
    8. 'a' → logprob: -4.097931385040283
    9. 'n' → logprob: -4.097931385040283
    10. ' ' → logprob: -4.097931385040283

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7680798768997192
    2. ' input' → logprob: -1.0180798768997192
    3. ' ' → logprob: -2.8930797576904297
    4. 'i' → logprob: -3.5180797576904297
    5. 's' → logprob: -3.7680797576904297
    6. ' i' → logprob: -3.8930797576904297
    7. 'n' → logprob: -4.26807975769043
    8. 'd' → logprob: -4.39307975769043
    9. 'def' → logprob: -4.76807975769043
    10. ' d' → logprob: -6.14307975769043

Token 25: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001052338513545692
    2. '('' → logprob: -7.876052379608154
    3. '()' → logprob: -7.876052379608154
    4. 's' → logprob: -9.251051902770996
    5. '("' → logprob: -9.501051902770996
    6. '(
' → logprob: -10.001051902770996
    7. '("("' → logprob: -11.126051902770996
    8. ' (' → logprob: -11.376051902770996
    9. '("""' → logprob: -11.626051902770996
    10. '("")' → logprob: -12.376051902770996

Token 26: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2644122540950775
    2. 's' → logprob: -2.5144121646881104
    3. ' ' → logprob: -3.0144121646881104
    4. '.' → logprob: -4.1394124031066895
    5. ' (' → logprob: -4.2644124031066895
    6. ' =' → logprob: -4.2644124031066895
    7. ')' → logprob: -4.6394124031066895
    8. ',' → logprob: -4.6394124031066895
    9. '()' → logprob: -5.1394124031066895
    10. '=' → logprob: -5.2644124031066895

Token 27: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.31567907333374023
    2. ' la' → logprob: -1.9406790733337402
    3. ' l' → logprob: -3.4406790733337402
    4. '()' → logprob: -3.4406790733337402
    5. ' ' → logprob: -3.9406790733337402
    6. 'une' → logprob: -4.31567907333374
    7. ' ' → logprob: -4.94067907333374
    8. 'l' → logprob: -5.06567907333374
    9. ' un' → logprob: -5.56567907333374
    10. 's' → logprob: -6.06567907333374

Token 28: ' sais' (ID: 30010)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.38231801986694336
    2. 'ligne' → logprob: -1.6323180198669434
    3. ' chaîne' → logprob: -3.2573180198669434
    4. 'l' → logprob: -3.7573180198669434
    5. ' ' → logprob: -3.7573180198669434
    6. 's' → logprob: -4.257318019866943
    7. 'chaine' → logprob: -4.882318019866943
    8. 'entrée' → logprob: -5.507318019866943
    9. ' chaine' → logprob: -6.382318019866943
    10. ' sais' → logprob: -6.507318019866943

Token 29: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.009770612232387066
    2. 'sie' → logprob: -5.384770393371582
    3. 'e' → logprob: -5.634770393371582
    4. 's' → logprob: -6.884770393371582
    5. 'i' → logprob: -8.134770393371582
    6. 'rie' → logprob: -8.884770393371582
    7. ' ie' → logprob: -10.259770393371582
    8. 'ies' → logprob: -10.384770393371582
    9. '#' → logprob: -11.384770393371582
    10. '```' → logprob: -12.009770393371582

Token 30: ' utilisateur' (ID: 115595)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.355188250541687
    2. 'u' → logprob: -1.605188250541687
    3. 'n' → logprob: -1.730188250541687
    4. ',' → logprob: -2.7301883697509766
    5. 'x' → logprob: -2.7301883697509766
    6. ' ' → logprob: -2.8551883697509766
    7. '#' → logprob: -3.2301883697509766
    8. 's' → logprob: -3.3551883697509766
    9. 'user' → logprob: -3.7301883697509766
    10. 'i' → logprob: -4.105188369750977

Token 31: ' sous' (ID: 14487)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8770125508308411
    2. 'e' → logprob: -1.3770124912261963
    3. 'x' → logprob: -2.2520124912261963
    4. 'u' → logprob: -2.3770124912261963
    5. 'user' → logprob: -3.3770124912261963
    6. 'ent' → logprob: -4.002012729644775
    7. '#' → logprob: -4.252012729644775
    8. 'en' → logprob: -4.502012729644775
    9. 'i' → logprob: -4.752012729644775
    10. 'v' → logprob: -4.752012729644775

Token 32: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.06252853572368622
    2. ' la' → logprob: -3.187528610229492
    3. ' une' → logprob: -4.687528610229492
    4. ' ' → logprob: -5.937528610229492
    5. 'forme' → logprob: -6.312528610229492
    6. ' ' → logprob: -6.812528610229492
    7. 'la' → logprob: -7.312528610229492
    8. ' form' → logprob: -7.312528610229492
    9. ''' → logprob: -7.437528610229492
    10. 'chaine' → logprob: -7.437528610229492

Token 33: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.003933899104595184
    2. 'd' → logprob: -5.628933906555176
    3. ' de' → logprob: -8.128933906555176
    4. 'de' → logprob: -10.628933906555176
    5. 's' → logprob: -12.628933906555176
    6. ''d' → logprob: -12.753933906555176
    7. ''' → logprob: -13.253933906555176
    8. ')' → logprob: -13.628933906555176
    9. 'def' → logprob: -14.503933906555176
    10. 'n' → logprob: -14.878933906555176

Token 34: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.039599642157554626
    2. 'cha' → logprob: -3.664599657058716
    3. ' chaîne' → logprob: -4.539599418640137
    4. 'texte' → logprob: -6.664599418640137
    5. ' chaine' → logprob: -7.164599418640137
    6. 'string' → logprob: -8.164599418640137
    7. 'chain' → logprob: -8.789599418640137
    8. 'str' → logprob: -11.039599418640137
    9. ' chaînes' → logprob: -11.039599418640137
    10. 'une' → logprob: -12.914599418640137

Token 35: ' de' (ID: 334)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1615239381790161
    2. 'a' → logprob: -1.4115239381790161
    3. 'n' → logprob: -1.5365239381790161
    4. 's' → logprob: -2.1615238189697266
    5. ',' → logprob: -3.4115238189697266
    6. 'e' → logprob: -3.5365238189697266
    7. 'ent' → logprob: -4.286523818969727
    8. '```' → logprob: -5.161523818969727
    9. 'u' → logprob: -5.286523818969727
    10. 'user' → logprob: -5.411523818969727

Token 36: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.12736941874027252
    2. ' caractères' → logprob: -2.1273694038391113
    3. 'texte' → logprob: -8.87736988067627
    4. ' caract' → logprob: -9.25236988067627
    5. ' caracteres' → logprob: -9.25236988067627
    6. ' ' → logprob: -10.12736988067627
    7. 'c' → logprob: -11.12736988067627
    8. ' caractère' → logprob: -11.37736988067627
    9. '#' → logprob: -11.87736988067627
    10. 'chaine' → logprob: -12.62736988067627

Token 37: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9322407841682434
    2. 'e' → logprob: -1.6822407245635986
    3. 'x' → logprob: -1.8072407245635986
    4. '#' → logprob: -2.1822407245635986
    5. 'u' → logprob: -2.6822407245635986
    6. 'v' → logprob: -3.1822407245635986
    7. 'i' → logprob: -4.307240962982178
    8. 'ent' → logprob: -5.807240962982178
    9. 'en' → logprob: -5.807240962982178
    10. 'a' → logprob: -5.932240962982178

Token 38: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5693728923797607
    2. 'e' → logprob: -1.8193728923797607
    3. 'x' → logprob: -2.1943728923797607
    4. '#' → logprob: -2.4443728923797607
    5. 'i' → logprob: -3.5693728923797607
    6. 'u' → logprob: -3.8193728923797607
    7. 'v' → logprob: -4.56937313079834
    8. 'a' → logprob: -5.56937313079834
    9. 'ent' → logprob: -5.81937313079834
    10. '```' → logprob: -6.56937313079834

Token 39: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4191895127296448
    2. 'e' → logprob: -1.794189453125
    3. 'u' → logprob: -2.794189453125
    4. 'x' → logprob: -3.044189453125
    5. 'i' → logprob: -3.669189453125
    6. '#' → logprob: -4.544189453125
    7. 'v' → logprob: -4.669189453125
    8. 'a' → logprob: -4.794189453125
    9. 'ent' → logprob: -5.419189453125
    10. 'en' → logprob: -6.044189453125

Token 40: ' méthode' (ID: 71490)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40269169211387634
    2. '#' → logprob: -2.402691602706909
    3. ' #' → logprob: -2.527691602706909
    4. 'e' → logprob: -3.402691602706909
    5. 'a' → logprob: -3.902691602706909
    6. 'n' → logprob: -4.027691841125488
    7. 'x' → logprob: -4.402691841125488
    8. 'l' → logprob: -4.402691841125488
    9. 'v' → logprob: -4.777691841125488
    10. 'ent' → logprob: -5.152691841125488

Token 41: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.47453466057777405
    2. ' split' → logprob: -0.9745346307754517
    3. '.split' → logprob: -8.34953498840332
    4. 'strip' → logprob: -8.59953498840332
    5. ' strip' → logprob: -10.97453498840332
    6. 's' → logprob: -12.34953498840332
    7. ' .' → logprob: -12.59953498840332
    8. 'spl' → logprob: -12.59953498840332
    9. ' input' → logprob: -12.84953498840332
    10. ' ' → logprob: -12.97453498840332

Token 42: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05094530060887337
    2. '()' → logprob: -3.175945281982422
    3. '('' → logprob: -4.925945281982422
    4. '("("' → logprob: -8.050945281982422
    5. '("' → logprob: -8.550945281982422
    6. '(
' → logprob: -9.300945281982422
    7. '(

' → logprob: -11.300945281982422
    8. ' (' → logprob: -12.425945281982422
    9. '("""' → logprob: -12.425945281982422
    10. '().' → logprob: -12.675945281982422

Token 43: ' div' (ID: 4223)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6731382012367249
    2. '()' → logprob: -0.7981382012367249
    3. '('' → logprob: -4.17313814163208
    4. ' permet' → logprob: -5.29813814163208
    5. ' ()' → logprob: -5.29813814163208
    6. ' (' → logprob: -5.54813814163208
    7. ' ' → logprob: -6.42313814163208
    8. 's' → logprob: -6.67313814163208
    9. '("' → logprob: -6.79813814163208
    10. 'split' → logprob: -7.17313814163208

Token 44: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.42121681571006775
    2. 'se' → logprob: -1.1712168455123901
    3. 'de' → logprob: -4.54621696472168
    4. '#' → logprob: -5.54621696472168
    5. '()' → logprob: -6.17121696472168
    6. 'ose' → logprob: -6.67121696472168
    7. '```' → logprob: -6.67121696472168
    8. '\' → logprob: -6.92121696472168
    9. 'ide' → logprob: -7.17121696472168
    10. 'e' → logprob: -7.17121696472168

Token 45: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8879227638244629
    2. '()' → logprob: -1.137922763824463
    3. ' ' → logprob: -2.012922763824463
    4. '(' → logprob: -2.512922763824463
    5. 'la' → logprob: -4.512922763824463
    6. ' ()' → logprob: -4.762922763824463
    7. 'l' → logprob: -5.012922763824463
    8. ' (' → logprob: -5.012922763824463
    9. '('' → logprob: -5.262922763824463
    10. ''' → logprob: -6.137922763824463

Token 46: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.15484896302223206
    2. 'cha' → logprob: -2.404849052429199
    3. 'chaine' → logprob: -3.654849052429199
    4. ' ' → logprob: -3.779849052429199
    5. ' chaine' → logprob: -6.279849052429199
    6. 's' → logprob: -6.404849052429199
    7. ' cha' → logprob: -7.779849052429199
    8. 'c' → logprob: -9.2798490524292
    9. ' ligne' → logprob: -9.4048490524292
    10. 'ligne' → logprob: -10.0298490524292

Token 47: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02428271248936653
    2. '()' → logprob: -4.399282932281494
    3. '[' → logprob: -5.774282932281494
    4. '_' → logprob: -6.649282932281494
    5. 's' → logprob: -6.649282932281494
    6. 'u' → logprob: -6.774282932281494
    7. '('' → logprob: -7.149282932281494
    8. '(
' → logprob: -7.149282932281494
    9. ''' → logprob: -7.524282932281494
    10. ' (' → logprob: -7.524282932281494

Token 48: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.9438276290893555
    2. 'une' → logprob: -1.1938276290893555
    3. '['' → logprob: -3.0688276290893555
    4. ' ' → logprob: -3.0688276290893555
    5. ' des' → logprob: -3.1938276290893555
    6. ' espaces' → logprob: -3.1938276290893555
    7. 'un' → logprob: -3.6938276290893555
    8. ' un' → logprob: -3.8188276290893555
    9. 'des' → logprob: -4.4438276290893555
    10. '[]' → logprob: -5.0688276290893555

Token 49: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.28401875495910645
    2. 'liste' → logprob: -1.4090187549591064
    3. 'list' → logprob: -6.284018516540527
    4. 's' → logprob: -8.034018516540527
    5. ' ' → logprob: -8.159018516540527
    6. ' list' → logprob: -8.909018516540527
    7. 'l' → logprob: -10.284018516540527
    8. 'Liste' → logprob: -10.409018516540527
    9. 'ligne' → logprob: -10.659018516540527
    10. ' listes' → logprob: -10.909018516540527

Token 50: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.563578188419342
    2. 'a' → logprob: -1.5635781288146973
    3. 'x' → logprob: -2.0635781288146973
    4. 'e' → logprob: -2.9385781288146973
    5. 'ent' → logprob: -3.9385781288146973
    6. '#' → logprob: -4.688578128814697
    7. 'numbers' → logprob: -5.938578128814697
    8. 'u' → logprob: -6.188578128814697
    9. 'i' → logprob: -6.313578128814697
    10. '```' → logprob: -7.188578128814697

Token 51: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.15411145985126495
    2. 'cha' → logprob: -2.779111385345459
    3. 'm' → logprob: -3.404111385345459
    4. 'chain' → logprob: -4.404111385345459
    5. ' mots' → logprob: -4.779111385345459
    6. ' espaces' → logprob: -5.404111385345459
    7. 'strings' → logprob: -6.154111385345459
    8. 'mot' → logprob: -6.279111385345459
    9. 'tokens' → logprob: -6.279111385345459
    10. ' chaîne' → logprob: -6.279111385345459

Token 52: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.46437543630599976
    2. 'cha' → logprob: -1.7143754959106445
    3. '-cha' → logprob: -2.3393754959106445
    4. 'chain' → logprob: -3.2143754959106445
    5. '-' → logprob: -3.7143754959106445
    6. '_' → logprob: -4.3393754959106445
    7. '-chain' → logprob: -5.8393754959106445
    8. '   ' → logprob: -6.3393754959106445
    9. 'ch' → logprob: -6.5893754959106445
    10. 's' → logprob: -6.5893754959106445

Token 53: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.3867272436618805
    2. 'î' → logprob: -1.261727213859558
    3. 'nes' → logprob: -3.5117273330688477
    4. 'r' → logprob: -5.636727333068848
    5. 'Î' → logprob: -6.636727333068848
    6. 'ï' → logprob: -7.136727333068848
    7. 'ì' → logprob: -8.011727333068848
    8. '?' → logprob: -8.511727333068848
    9. 'ves' → logprob: -8.761727333068848
    10. 'ines' → logprob: -9.011727333068848

Token 54: ' là' (ID: 8052)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7460476160049438
    2. '#' → logprob: -1.4960476160049438
    3. 'e' → logprob: -1.9960476160049438
    4. 'x' → logprob: -2.1210474967956543
    5. 'a' → logprob: -4.496047496795654
    6. 'ent' → logprob: -4.496047496795654
    7. 'u' → logprob: -4.621047496795654
    8. 'i' → logprob: -4.996047496795654
    9. 'v' → logprob: -6.371047496795654
    10. 'd' → logprob: -6.996047496795654

Token 55: ' où' (ID: 15113)
  Prédit: 'où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'où' → logprob: -0.225790873169899
    2. '-' → logprob: -2.1007909774780273
    3. ' où' → logprob: -2.6007909774780273
    4. ' o' → logprob: -6.100790977478027
    5. '-o' → logprob: -6.475790977478027
    6. ' ' → logprob: -7.350790977478027
    7. 'ù' → logprob: -8.350790977478027
    8. 'o' → logprob: -8.600790977478027
    9. ' Où' → logprob: -8.975790977478027
    10. '-dessus' → logprob: -8.975790977478027

Token 56: ' il' (ID: 1793)
  Prédit: ' il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.23746730387210846
    2. 's' → logprob: -3.2374672889709473
    3. 'il' → logprob: -3.2374672889709473
    4. ''il' → logprob: -3.2374672889709473
    5. ' ' → logprob: -3.3624672889709473
    6. 'l' → logprob: -3.4874672889709473
    7. ' l' → logprob: -4.237467288970947
    8. ' a' → logprob: -5.862467288970947
    9. ' se' → logprob: -5.862467288970947
    10. 'a' → logprob: -6.487467288970947

Token 57: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.03555646911263466
    2. 'y' → logprob: -3.4105565547943115
    3. ' a' → logprob: -6.910556316375732
    4. ' ' → logprob: -7.535556316375732
    5. ''y' → logprob: -8.28555679321289
    6. 'a' → logprob: -9.53555679321289
    7. ' ' → logprob: -10.66055679321289
    8. 'ya' → logprob: -11.41055679321289
    9. '‘y' → logprob: -11.66055679321289
    10. '  ' → logprob: -13.16055679321289

Token 58: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.35188376903533936
    2. ' a' → logprob: -1.2268837690353394
    3. ''a' → logprob: -5.726883888244629
    4. ' ' → logprob: -9.226883888244629
    5. 's' → logprob: -11.351883888244629
    6. ''s' → logprob: -11.351883888244629
    7. '#a' → logprob: -11.476883888244629
    8. '	a' → logprob: -11.851883888244629
    9. 'space' → logprob: -12.101883888244629
    10. ' ' → logprob: -12.226883888244629

Token 59: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5725941061973572
    2. ' un' → logprob: -0.9475941061973572
    3. 'un' → logprob: -3.447594165802002
    4. 'des' → logprob: -4.197594165802002
    5. ' ' → logprob: -7.447594165802002
    6. ' espaces' → logprob: -8.072593688964844
    7. ''un' → logprob: -8.697593688964844
    8. 's' → logprob: -9.322593688964844
    9. ' espace' → logprob: -10.072593688964844
    10. 'space' → logprob: -10.447593688964844

Token 60: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.17064936459064484
    2. 'esp' → logprob: -1.9206494092941284
    3. 'es' → logprob: -5.170649528503418
    4. ''esp' → logprob: -6.295649528503418
    5. ' espace' → logprob: -7.295649528503418
    6. ' ' → logprob: -7.545649528503418
    7. 'spaces' → logprob: -7.545649528503418
    8. ''espace' → logprob: -8.045649528503418
    9. 'l' → logprob: -8.545649528503418
    10. ''' → logprob: -9.170649528503418

Token 61: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5895301103591919
    2. 'x' → logprob: -1.839530110359192
    3. '#' → logprob: -2.2145299911499023
    4. 'e' → logprob: -2.2145299911499023
    5. 'a' → logprob: -3.2145299911499023
    6. 'u' → logprob: -4.589529991149902
    7. 'ent' → logprob: -4.589529991149902
    8. 'i' → logprob: -6.089529991149902
    9. 'd' → logprob: -6.839529991149902
    10. 'v' → logprob: -6.839529991149902

Token 62: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5712365508079529
    2. 'x' → logprob: -1.0712366104125977
    3. 'a' → logprob: -2.8212366104125977
    4. 'e' → logprob: -3.9462366104125977
    5. '#' → logprob: -5.321236610412598
    6. 'i' → logprob: -5.821236610412598
    7. '```' → logprob: -6.321236610412598
    8. 'ent' → logprob: -6.696236610412598
    9. 'u' → logprob: -6.696236610412598
    10. 'v' → logprob: -7.196236610412598

Token 63: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7680903077125549
    2. 'a' → logprob: -0.8930903077125549
    3. 'x' → logprob: -2.26809024810791
    4. '#' → logprob: -4.64309024810791
    5. 'e' → logprob: -4.64309024810791
    6. 'ent' → logprob: -6.26809024810791
    7. 'u' → logprob: -7.39309024810791
    8. '```' → logprob: -7.51809024810791
    9. 'i' → logprob: -8.01809024810791
    10. 'v' → logprob: -9.01809024810791

Token 64: ' fonction' (ID: 17610)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0973998308181763
    2. '#' → logprob: -1.5973998308181763
    3. 'a' → logprob: -2.0973997116088867
    4. ' liste' → logprob: -2.2223997116088867
    5. ' a' → logprob: -2.9723997116088867
    6. 'n' → logprob: -3.4723997116088867
    7. ' ligne' → logprob: -3.7223997116088867
    8. 'liste' → logprob: -4.222399711608887
    9. ' variables' → logprob: -4.597399711608887
    10. 'l' → logprob: -4.597399711608887

Token 65: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.028772693127393723
    2. 'map' → logprob: -4.403772830963135
    3. ' int' → logprob: -4.528772830963135
    4. ' input' → logprob: -5.403772830963135
    5. ' a' → logprob: -8.028772354125977
    6. 'int' → logprob: -8.403772354125977
    7. 'a' → logprob: -9.403772354125977
    8. ' ' → logprob: -9.903772354125977
    9. 'input' → logprob: -10.278772354125977
    10. ' list' → logprob: -10.278772354125977

Token 66: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28510046005249023
    2. '(lambda' → logprob: -2.0351004600524902
    3. '(int' → logprob: -2.1601004600524902
    4. '(str' → logprob: -7.03510046005249
    5. '()' → logprob: -7.41010046005249
    6. '(float' → logprob: -9.410100936889648
    7. '(None' → logprob: -9.785100936889648
    8. '(convert' → logprob: -10.035100936889648
    9. '(list' → logprob: -10.160100936889648
    10. '(
' → logprob: -10.285100936889648

Token 67: ' applique' (ID: 180579)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03705726936459541
    2. '(lambda' → logprob: -3.9120571613311768
    3. '(int' → logprob: -4.662057399749756
    4. ' (' → logprob: -6.162057399749756
    5. ' convert' → logprob: -6.662057399749756
    6. ' applies' → logprob: -6.787057399749756
    7. ' int' → logprob: -7.787057399749756
    8. ' permet' → logprob: -8.037056922912598
    9. '(convert' → logprob: -8.037056922912598
    10. ' transforme' → logprob: -8.287056922912598

Token 68: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3863574266433716
    2. ' int' → logprob: -1.2613574266433716
    3. '(int' → logprob: -3.386357307434082
    4. ' la' → logprob: -6.636357307434082
    5. 'lambda' → logprob: -8.261357307434082
    6. ' lambda' → logprob: -8.261357307434082
    7. '=int' → logprob: -8.261357307434082
    8. '```' → logprob: -8.261357307434082
    9. ' ' → logprob: -8.511357307434082
    10. '(lambda' → logprob: -8.511357307434082

Token 69: ' fonction' (ID: 17610)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006889065727591515
    2. ' int' → logprob: -5.0068888664245605
    3. 'fonction' → logprob: -9.631889343261719
    4. '(int' → logprob: -10.256889343261719
    5. '=int' → logprob: -10.756889343261719
    6. 'str' → logprob: -11.381889343261719
    7. '```' → logprob: -11.756889343261719
    8. '<int' → logprob: -11.881889343261719
    9. '`' → logprob: -12.256889343261719
    10. 'lambda' → logprob: -12.506889343261719

Token 70: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25210773944854736
    2. ' int' → logprob: -1.5021077394485474
    3. '```' → logprob: -9.377107620239258
    4. '(int' → logprob: -10.127107620239258
    5. ' ' → logprob: -10.752107620239258
    6. '`' → logprob: -11.752107620239258
    7. '=int' → logprob: -12.002107620239258
    8. ' `' → logprob: -12.252107620239258
    9. '	int' → logprob: -12.502107620239258
    10. '<int' → logprob: -12.627107620239258

Token 71: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012482809834182262
    2. '(
' → logprob: -5.512482643127441
    3. '(int' → logprob: -5.887482643127441
    4. '(lambda' → logprob: -5.887482643127441
    5. ',' → logprob: -7.012482643127441
    6. '()' → logprob: -7.512482643127441
    7. '(s' → logprob: -8.137482643127441
    8. ' (' → logprob: -8.637482643127441
    9. '(input' → logprob: -9.137482643127441
    10. 's' → logprob: -9.137482643127441

Token 72: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29372039437294006
    2. '(lambda' → logprob: -2.1687204837799072
    3. '(
' → logprob: -3.5437204837799072
    4. '()' → logprob: -3.5437204837799072
    5. ' aux' → logprob: -3.5437204837799072
    6. ' à' → logprob: -4.168720245361328
    7. 'sur' → logprob: -4.668720245361328
    8. ' sur' → logprob: -4.793720245361328
    9. '(int' → logprob: -5.293720245361328
    10. '(aux' → logprob: -5.418720245361328

Token 73: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.02292490191757679
    2. ' chacune' → logprob: -5.147924900054932
    3. 'cha' → logprob: -5.522924900054932
    4. ' la' → logprob: -5.772924900054932
    5. ' chacun' → logprob: -5.897924900054932
    6. ' each' → logprob: -5.897924900054932
    7. ' l' → logprob: -6.897924900054932
    8. 'la' → logprob: -7.147924900054932
    9. 'l' → logprob: -7.272924900054932
    10. ' cha' → logprob: -7.772924900054932

Token 74: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0010510309366509318
    2. ' élément' → logprob: -6.87605094909668
    3. 'él' → logprob: -11.75105094909668
    4. 'é' → logprob: -12.37605094909668
    5. 'element' → logprob: -13.12605094909668
    6. ' él' → logprob: -13.50105094909668
    7. ' ' → logprob: -14.00105094909668
    8. ' chaîne' → logprob: -14.62605094909668
    9. '```' → logprob: -15.62605094909668
    10. 'chaine' → logprob: -15.87605094909668

Token 75: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02740105241537094
    2. 's' → logprob: -4.527400970458984
    3. '(
' → logprob: -5.402400970458984
    4. '(s' → logprob: -6.402400970458984
    5. '(input' → logprob: -6.402400970458984
    6. '()' → logprob: -6.652400970458984
    7. ' de' → logprob: -6.777400970458984
    8. ')' → logprob: -6.902400970458984
    9. '(user' → logprob: -7.402400970458984
    10. 'des' → logprob: -7.527400970458984

Token 76: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7318142056465149
    2. ' la' → logprob: -0.8568142056465149
    3. 'l' → logprob: -2.48181414604187
    4. ' l' → logprob: -4.606814384460449
    5. ' input' → logprob: -8.10681438446045
    6. 'split' → logprob: -9.10681438446045
    7. 'input' → logprob: -9.10681438446045
    8. 's' → logprob: -9.35681438446045
    9. ' cette' → logprob: -10.23181438446045
    10. 'spl' → logprob: -10.35681438446045

Token 77: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.20204351842403412
    2. 'liste' → logprob: -1.7020435333251953
    3. 'list' → logprob: -8.327043533325195
    4. 'split' → logprob: -9.452043533325195
    5. 'entrée' → logprob: -9.827043533325195
    6. 'input' → logprob: -9.827043533325195
    7. 's' → logprob: -9.952043533325195
    8. ' #' → logprob: -10.702043533325195
    9. '#' → logprob: -10.827043533325195
    10. ' input' → logprob: -10.827043533325195

Token 78: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4911026060581207
    2. 'a' → logprob: -1.8661025762557983
    3. 'e' → logprob: -2.366102695465088
    4. 'x' → logprob: -2.491102695465088
    5. ',' → logprob: -4.366102695465088
    6. 'i' → logprob: -4.491102695465088
    7. 'v' → logprob: -4.866102695465088
    8. 'ent' → logprob: -4.991102695465088
    9. 'b' → logprob: -5.866102695465088
    10. '(' → logprob: -5.991102695465088

Token 79: 'cha' (ID: 3836)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019785952754318714
    2. ' )' → logprob: -6.626978397369385
    3. ' la' → logprob: -8.751978874206543
    4. 'l' → logprob: -9.126978874206543
    5. ',' → logprob: -10.001978874206543
    6. '`)' → logprob: -10.126978874206543
    7. 'input' → logprob: -10.501978874206543
    8. 'e' → logprob: -10.751978874206543
    9. 'r' → logprob: -10.876978874206543
    10. '),' → logprob: -11.001978874206543

Token 80: 'que' (ID: 1126)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6500647664070129
    2. 'r' → logprob: -1.2750647068023682
    3. 'ne' → logprob: -2.525064706802368
    4. 'z' → logprob: -3.400064706802368
    5. 'né' → logprob: -3.525064706802368
    6. 'c' → logprob: -5.025064945220947
    7. 't' → logprob: -5.275064945220947
    8. '```' → logprob: -5.275064945220947
    9. 'îne' → logprob: -5.775064945220947
    10. 'que' → logprob: -5.900064945220947

Token 81: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.05792991816997528
    2. ' élément' → logprob: -2.9329299926757812
    3. ')' → logprob: -6.307929992675781
    4. ' )' → logprob: -8.432929992675781
    5. 'é' → logprob: -8.432929992675781
    6. ' él' → logprob: -8.932929992675781
    7. 'ent' → logprob: -9.182929992675781
    8. ' ' → logprob: -9.432929992675781
    9. ' valeur' → logprob: -9.682929992675781
    10. 'él' → logprob: -9.807929992675781

Token 82: '-cha' (ID: 163177)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19552995264530182
    2. 'chaine' → logprob: -2.1955299377441406
    3. ' chaîne' → logprob: -3.3205299377441406
    4. '-cha' → logprob: -4.945529937744141
    5. ' chaînes' → logprob: -5.695529937744141
    6. '-chain' → logprob: -5.820529937744141
    7. '_' → logprob: -6.070529937744141
    8. '-ent' → logprob: -6.070529937744141
    9. ' chaine' → logprob: -6.570529937744141
    10. ')' → logprob: -6.695529937744141

Token 83: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.48225560784339905
    2. 'î' → logprob: -0.9822555780410767
    3. 'înes' → logprob: -5.982255458831787
    4. 'ïne' → logprob: -6.482255458831787
    5. 'ne' → logprob: -6.857255458831787
    6. 'ine' → logprob: -7.232255458831787
    7. 'în' → logprob: -7.482255458831787
    8. 'ì' → logprob: -7.857255458831787
    9. 'ï' → logprob: -8.107255935668945
    10. '```' → logprob: -8.482255935668945

Token 84: ' devient' (ID: 63488)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002899736166000366
    2. ' )' → logprob: -6.877899646759033
    3. ' pour' → logprob: -7.377899646759033
    4. '),' → logprob: -8.127900123596191
    5. ',' → logprob: -8.502900123596191
    6. 'pour' → logprob: -8.627900123596191
    7. '#' → logprob: -9.627900123596191
    8. ')#' → logprob: -9.877900123596191
    9. ' afin' → logprob: -10.002900123596191
    10. ')
' → logprob: -10.127900123596191

Token 85: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.02326434850692749
    2. 'un' → logprob: -3.8982644081115723
    3. ' une' → logprob: -6.023264408111572
    4. ''un' → logprob: -8.523263931274414
    5. 'une' → logprob: -10.023263931274414
    6. ' ' → logprob: -10.773263931274414
    7. ' a' → logprob: -11.898263931274414
    8. 'a' → logprob: -12.148263931274414
    9. ' an' → logprob: -12.148263931274414
    10. 'int' → logprob: -12.648263931274414

Token 86: ' entier' (ID: 80473)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -1.0429375171661377
    2. 'ent' → logprob: -1.2929375171661377
    3. ' entier' → logprob: -1.4179375171661377
    4. 'nombre' → logprob: -2.4179375171661377
    5. 'int' → logprob: -4.042937278747559
    6. 'n' → logprob: -4.792937278747559
    7. ' int' → logprob: -5.167937278747559
    8. ' ' → logprob: -5.417937278747559
    9. ' ent' → logprob: -6.042937278747559
    10. 'élé' → logprob: -6.792937278747559

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017614520620554686
    2. ')
' → logprob: -7.126761436462402
    3. ',' → logprob: -7.751761436462402
    4. ' )' → logprob: -9.251761436462402
    5. 's' → logprob: -9.376761436462402
    6. '#' → logprob: -9.751761436462402
    7. ')

' → logprob: -10.001761436462402
    8. ',
' → logprob: -10.126761436462402
    9. ')`' → logprob: -10.501761436462402
    10. '`)' → logprob: -11.126761436462402

Token 88: '#' (ID: 2)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9605575799942017
    2. 'n' → logprob: -1.2105575799942017
    3. 'e' → logprob: -1.9605575799942017
    4. 'a' → logprob: -2.335557460784912
    5. 'v' → logprob: -3.960557460784912
    6. ',' → logprob: -4.335557460784912
    7. 'i' → logprob: -4.335557460784912
    8. 'u' → logprob: -4.460557460784912
    9. '#' → logprob: -4.960557460784912
    10. ':' → logprob: -5.710557460784912

Token 89: ' Les' (ID: 7029)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18072079122066498
    2. 'x' → logprob: -1.9307208061218262
    3. 'n' → logprob: -4.430720806121826
    4. 'ent' → logprob: -5.180720806121826
    5. '#' → logprob: -6.680720806121826
    6. ' a' → logprob: -7.305720806121826
    7. 'u' → logprob: -8.680720329284668
    8. ' x' → logprob: -8.805720329284668
    9. ' ent' → logprob: -9.305720329284668
    10. 'b' → logprob: -9.555720329284668

Token 90: ' deux' (ID: 10301)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5809583067893982
    2. 'ent' → logprob: -1.830958366394043
    3. 'x' → logprob: -2.580958366394043
    4. 'e' → logprob: -2.580958366394043
    5. 'n' → logprob: -3.455958366394043
    6. ' ent' → logprob: -3.455958366394043
    7. ',' → logprob: -4.205958366394043
    8. ' ' → logprob: -4.330958366394043
    9. ' a' → logprob: -4.580958366394043
    10. 'i' → logprob: -5.705958366394043

Token 91: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.6506427526473999
    2. 'n' → logprob: -1.6506427526474
    3. ' ent' → logprob: -2.2756428718566895
    4. '_' → logprob: -2.6506428718566895
    5. ',' → logprob: -4.1506428718566895
    6. ' =' → logprob: -4.2756428718566895
    7. ' nombres' → logprob: -4.5256428718566895
    8. 'e' → logprob: -4.6506428718566895
    9. '=' → logprob: -4.9006428718566895
    10. ' ' → logprob: -5.0256428718566895

Token 92: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0031698683742433786
    2. 'i' → logprob: -6.003170013427734
    3. 'ières' → logprob: -7.753170013427734
    4. 'ier' → logprob: -8.378170013427734
    5. 'ière' → logprob: -11.253170013427734
    6. 'ié' → logprob: -12.003170013427734
    7. '```' → logprob: -13.003170013427734
    8. 't' → logprob: -13.128170013427734
    9. ' i' → logprob: -13.628170013427734
    10. 'ités' → logprob: -13.628170013427734

Token 93: ' résult' (ID: 31657)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.49796971678733826
    2. ',' → logprob: -1.3729697465896606
    3. ' a' → logprob: -2.497969627380371
    4. '1' → logprob: -3.497969627380371
    5. ' =' → logprob: -4.372969627380371
    6. 'x' → logprob: -5.122969627380371
    7. '=' → logprob: -6.497969627380371
    8. 's' → logprob: -6.872969627380371
    9. ' ,' → logprob: -6.872969627380371
    10. ',a' → logprob: -6.872969627380371

Token 94: 'ants' (ID: 2027)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.002209615893661976
    2. 'e' → logprob: -7.252209663391113
    3. 'ents' → logprob: -7.252209663391113
    4. 'uent' → logprob: -8.252209663391113
    5. 'ant' → logprob: -8.752209663391113
    6. 'ante' → logprob: -9.627209663391113
    7. 'ants' → logprob: -9.877209663391113
    8. 'en' → logprob: -10.252209663391113
    9. 'u' → logprob: -10.252209663391113
    10. 'ront' → logprob: -10.502209663391113

Token 95: ' sont' (ID: 5242)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7815742492675781
    2. 'a' → logprob: -1.1565742492675781
    3. ' =' → logprob: -2.281574249267578
    4. '=' → logprob: -3.281574249267578
    5. 'x' → logprob: -3.781574249267578
    6. 's' → logprob: -4.156574249267578
    7. ' a' → logprob: -4.156574249267578
    8. 'ent' → logprob: -4.156574249267578
    9. 'n' → logprob: -4.781574249267578
    10. ' ,' → logprob: -5.906574249267578

Token 96: ' affect' (ID: 7902)
  Prédit: ' affect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affect' → logprob: -0.4196620285511017
    2. ' stock' → logprob: -2.4196619987487793
    3. ' assign' → logprob: -2.6696619987487793
    4. ' unpack' → logprob: -2.9196619987487793
    5. ' ensuite' → logprob: -3.1696619987487793
    6. ' attrib' → logprob: -3.2946619987487793
    7. ' a' → logprob: -4.294661998748779
    8. ' récup' → logprob: -4.669661998748779
    9. ' assigned' → logprob: -5.169661998748779
    10. 'assign' → logprob: -5.294661998748779

Token 97: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.007630534935742617
    2. 'é' → logprob: -4.882630348205566
    3. 'ées' → logprob: -11.507630348205566
    4. 'u' → logprob: -11.757630348205566
    5. 'es' → logprob: -12.882630348205566
    6. 'ée' → logprob: -13.632630348205566
    7. 'e' → logprob: -14.257630348205566
    8. ' é' → logprob: -14.257630348205566
    9. ' és' → logprob: -15.007630348205566
    10. '```' → logprob: -15.507630348205566

Token 98: ' respect' (ID: 5618)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5845723152160645
    2. ' a' → logprob: -2.2095723152160645
    3. 'a' → logprob: -2.7095723152160645
    4. ' ,' → logprob: -2.7095723152160645
    5. 'e' → logprob: -2.9595723152160645
    6. ' ' → logprob: -3.4595723152160645
    7. ' =' → logprob: -3.4595723152160645
    8. 'x' → logprob: -3.8345723152160645
    9. 's' → logprob: -4.5845723152160645
    10. 'n' → logprob: -4.7095723152160645

Token 99: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.0757289007306099
    2. 'vement' → logprob: -2.7007288932800293
    3. 'ement' → logprob: -6.200728893280029
    4. 've' → logprob: -6.950728893280029
    5. 'iv' → logprob: -7.575728893280029
    6. '```' → logprob: -7.825728893280029
    7. 'ument' → logprob: -7.950728893280029
    8. 'v' → logprob: -8.075729370117188
    9. 'rement' → logprob: -9.075729370117188
    10. 'vel' → logprob: -9.075729370117188

Token 100: ' aux' (ID: 5850)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45468708872795105
    2. 'x' → logprob: -1.7046871185302734
    3. ' a' → logprob: -2.7046871185302734
    4. 'n' → logprob: -2.9546871185302734
    5. ',' → logprob: -3.4546871185302734
    6. ' x' → logprob: -4.579687118530273
    7. 'ent' → logprob: -4.579687118530273
    8. ' à' → logprob: -5.329687118530273
    9. 'num' → logprob: -6.579687118530273
    10. ' n' → logprob: -6.954687118530273

Token 101: ' variables' (ID: 13955)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026242241263389587
    2. 'ent' → logprob: -4.276242256164551
    3. 'x' → logprob: -5.276242256164551
    4. ' a' → logprob: -5.401242256164551
    5. 'nombre' → logprob: -7.151242256164551
    6. ' ent' → logprob: -7.276242256164551
    7. 'n' → logprob: -8.27624225616455
    8. 'num' → logprob: -8.77624225616455
    9. ' nombre' → logprob: -9.15124225616455
    10. 'val' → logprob: -9.27624225616455

Token 102: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5379323959350586
    2. ' a' → logprob: -0.9129323959350586
    3. 'x' → logprob: -4.787932395935059
    4. ' x' → logprob: -5.162932395935059
    5. ' entier' → logprob: -8.412932395935059
    6. 'n' → logprob: -9.037932395935059
    7. ' nombre' → logprob: -9.412932395935059
    8. 'ent' → logprob: -9.912932395935059
    9. ' ent' → logprob: -10.037932395935059
    10. ' n' → logprob: -10.162932395935059

Token 103: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00122844276484102
    2. ' ,' → logprob: -7.626228332519531
    3. ' et' → logprob: -7.876228332519531
    4. 'et' → logprob: -8.626228332519531
    5. ',A' → logprob: -9.501228332519531
    6. ' and' → logprob: -9.751228332519531
    7. 'and' → logprob: -11.626228332519531
    8. 'a' → logprob: -11.751228332519531
    9. ',B' → logprob: -11.876228332519531
    10. 'A' → logprob: -12.501228332519531

Token 104: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.061992332339286804
    2. 'B' → logprob: -2.8119924068450928
    3. ' ' → logprob: -10.811992645263672
    4. ' ' → logprob: -12.811992645263672
    5. ',' → logprob: -14.686992645263672
    6. 's' → logprob: -14.686992645263672
    7. '  ' → logprob: -15.436992645263672
    8. ' ,' → logprob: -15.686992645263672
    9. '_B' → logprob: -16.061992645263672
    10. '`' → logprob: -16.311992645263672

Token 105: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0002084277366520837
    2. ' A' → logprob: -9.250208854675293
    3. 'a' → logprob: -9.625208854675293
    4. ',' → logprob: -11.000208854675293
    5. ' 
' → logprob: -11.625208854675293
    6. '#' → logprob: -12.250208854675293
    7. 'n' → logprob: -12.750208854675293
    8. 'x' → logprob: -13.125208854675293
    9. '
' → logprob: -13.125208854675293
    10. '  
' → logprob: -13.250208854675293

Token 106: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.531315314830863e-06
    2. ' A' → logprob: -13.125003814697266
    3. 'a' → logprob: -14.250003814697266
    4. '#' → logprob: -14.750003814697266
    5. '```' → logprob: -15.500003814697266
    6. '

' → logprob: -15.750003814697266
    7. '
' → logprob: -17.250003814697266
    8. '  
' → logprob: -17.375003814697266
    9. 'x' → logprob: -17.875003814697266
    10. '`' → logprob: -18.000003814697266

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016156769124791026
    2. ' ,' → logprob: -6.501615524291992
    3. ' =' → logprob: -9.376615524291992
    4. ' ' → logprob: -11.501615524291992
    5. '=' → logprob: -11.751615524291992
    6. 's' → logprob: -13.001615524291992
    7. ',B' → logprob: -13.126615524291992
    8. ' A' → logprob: -13.751615524291992
    9. ')' → logprob: -13.876615524291992
    10. '_' → logprob: -14.376615524291992

Token 108: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5759890079498291
    2. 'B' → logprob: -0.8259890079498291
    3. ' ' → logprob: -10.20098876953125
    4. '<|end|>' → logprob: -11.95098876953125
    5. '=B' → logprob: -13.07598876953125
    6. '=' → logprob: -13.57598876953125
    7. '  ' → logprob: -14.07598876953125
    8. ' =' → logprob: -14.45098876953125
    9. ' ' → logprob: -15.32598876953125
    10. '_B' → logprob: -15.45098876953125

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011049231514334679
    2. '=' → logprob: -4.511049270629883
    3. ' =
' → logprob: -14.511049270629883
    4. '=input' → logprob: -15.011049270629883
    5. ' ' → logprob: -15.386049270629883
    6. ',' → logprob: -15.511049270629883
    7. ' ' → logprob: -16.886049270629883
    8. '=A' → logprob: -17.636049270629883
    9. '=int' → logprob: -17.761049270629883
    10. ' =",' → logprob: -18.386049270629883

Token 110: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3132624924182892
    2. ' map' → logprob: -1.3132624626159668
    3. '	map' → logprob: -14.938262939453125
    4. ' ' → logprob: -15.688262939453125
    5. ' ' → logprob: -16.438262939453125
    6. 'm' → logprob: -17.188262939453125
    7. 'list' → logprob: -17.563262939453125
    8. 'input' → logprob: -17.813262939453125
    9. '(map' → logprob: -18.063262939453125
    10. 'int' → logprob: -18.063262939453125

Token 111: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004137887619435787
    2. '(' → logprob: -5.504137992858887
    3. '(input' → logprob: -10.129137992858887
    4. ' (' → logprob: -11.004137992858887
    5. '(str' → logprob: -13.754137992858887
    6. '(
' → logprob: -14.254137992858887
    7. '<int' → logprob: -14.629137992858887
    8. '(lambda' → logprob: -15.504137992858887
    9. '(in' → logprob: -16.00413703918457
    10. '[int' → logprob: -16.37913703918457

Token 112: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1038035973906517
    2. 'input' → logprob: -2.8538036346435547
    3. ',input' → logprob: -3.3538036346435547
    4. ',' → logprob: -5.353803634643555
    5. '(' → logprob: -7.478803634643555
    6. ')' → logprob: -8.103803634643555
    7. ' (' → logprob: -8.478803634643555
    8. ' input' → logprob: -8.603803634643555
    9. '=input' → logprob: -11.103803634643555
    10. ' ,' → logprob: -12.103803634643555

Token 113: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029751067981123924
    2. ' input' → logprob: -3.5297510623931885
    3. '(input' → logprob: -14.52975082397461
    4. ' ' → logprob: -17.27975082397461
    5. '	input' → logprob: -17.52975082397461
    6. '<input' → logprob: -17.65475082397461
    7. ')' → logprob: -17.77975082397461
    8. '=input' → logprob: -18.65475082397461
    9. '   ' → logprob: -18.90475082397461
    10. ',input' → logprob: -19.52975082397461

Token 114: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04435541108250618
    2. '()' → logprob: -3.1693553924560547
    3. '())' → logprob: -7.169355392456055
    4. '("' → logprob: -7.544355392456055
    5. '('' → logprob: -10.544355392456055
    6. ' ().' → logprob: -12.044355392456055
    7. '(' → logprob: -12.294355392456055
    8. ')' → logprob: -12.544355392456055
    9. '()"' → logprob: -13.169355392456055
    10. ' ()' → logprob: -13.169355392456055

Token 115: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.505351095460355e-05
    2. 'strip' → logprob: -9.500075340270996
    3. ' split' → logprob: -16.50007438659668
    4. 'rstrip' → logprob: -18.87507438659668
    5. '(split' → logprob: -21.12507438659668
    6. 'spl' → logprob: -22.62507438659668
    7. '.split' → logprob: -22.75007438659668
    8. '_split' → logprob: -23.75007438659668
    9. 'plit' → logprob: -24.12507438659668
    10. 's' → logprob: -24.75007438659668

Token 116: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0005160979344509542
    2. '()' → logprob: -7.875515937805176
    3. '()))' → logprob: -9.000515937805176
    4. ' ())' → logprob: -11.750515937805176
    5. ')' → logprob: -12.750515937805176
    6. '(' → logprob: -14.000515937805176
    7. '())
' → logprob: -14.375515937805176
    8. '().' → logprob: -16.125516891479492
    9. '());' → logprob: -16.250516891479492
    10. '();)' → logprob: -16.875516891479492

Token 117: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' Initial' (ID: 9209)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38656899333000183
    2. 'print' → logprob: -1.6365690231323242
    3. '#' → logprob: -2.511569023132324
    4. ' if' → logprob: -3.511569023132324
    5. 'result' → logprob: -4.761569023132324
    6. 'sum' → logprob: -6.011569023132324
    7. 'C' → logprob: -6.261569023132324
    8. ' print' → logprob: -7.136569023132324
    9. 's' → logprob: -7.886569023132324
    10. '
' → logprob: -8.761569023132324

Token 119: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.3493801951408386
    2. 'izer' → logprob: -2.3493802547454834
    3. 'isation' → logprob: -2.5993802547454834
    4. '_' → logprob: -2.9743802547454834
    5. 'e' → logprob: -3.7243802547454834
    6. 'er' → logprob: -4.224380016326904
    7. 'ize' → logprob: -4.599380016326904
    8. 'ization' → logprob: -5.099380016326904
    9. 'isateur' → logprob: -5.349380016326904
    10. '_value' → logprob: -5.724380016326904

Token 120: ' une' (ID: 2463)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.7842355370521545
    2. 'result' → logprob: -1.6592354774475098
    3. ' ' → logprob: -2.7842354774475098
    4. ' C' → logprob: -2.9092354774475098
    5. 'C' → logprob: -3.1592354774475098
    6. ' la' → logprob: -3.2842354774475098
    7. ' somme' → logprob: -3.4092354774475098
    8. ' total' → logprob: -3.6592354774475098
    9. ' sum' → logprob: -4.03423547744751
    10. 's' → logprob: -4.03423547744751

Token 121: ' variable' (ID: 11076)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7422112822532654
    2. 'result' → logprob: -1.2422113418579102
    3. 'if' → logprob: -2.61721134185791
    4. ' somme' → logprob: -3.49221134185791
    5. 'c' → logprob: -3.74221134185791
    6. 'variable' → logprob: -3.86721134185791
    7. 'sum' → logprob: -4.36721134185791
    8. 'total' → logprob: -4.61721134185791
    9. '#' → logprob: -4.61721134185791
    10. 'rés' → logprob: -4.74221134185791

Token 122: ' n' (ID: 297)
  Prédit: ' somme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' somme' → logprob: -1.0536004304885864
    2. ' result' → logprob: -1.8036004304885864
    3. 'result' → logprob: -2.053600311279297
    4. 's' → logprob: -2.178600311279297
    5. ' sum' → logprob: -3.053600311279297
    6. 'sum' → logprob: -3.428600311279297
    7. ' total' → logprob: -3.428600311279297
    8. ' C' → logprob: -3.553600311279297
    9. 'C' → logprob: -3.803600311279297
    10. ' resultat' → logprob: -3.928600311279297

Token 123: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01642529107630253
    2. '=' → logprob: -4.266425132751465
    3. 'b' → logprob: -6.891425132751465
    4. ' ' → logprob: -7.516425132751465
    5. 'um' → logprob: -8.266425132751465
    6. 'ombre' → logprob: -9.016425132751465
    7. 'B' → logprob: -10.141425132751465
    8. '_' → logprob: -10.141425132751465
    9. 'umber' → logprob: -10.141425132751465
    10. ',' → logprob: -10.141425132751465

Token 124: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.544733464717865
    2. ' ' → logprob: -1.2947335243225098
    3. 'A' → logprob: -2.4197335243225098
    4. ' A' → logprob: -3.9197335243225098
    5. '1' → logprob: -4.16973352432251
    6. '100' → logprob: -4.41973352432251
    7. '10' → logprob: -6.04473352432251
    8. ' la' → logprob: -6.16973352432251
    9. 'B' → logprob: -7.29473352432251
    10. 'l' → logprob: -7.41973352432251

Token 125: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.33522069454193115
    2. ' valeur' → logprob: -2.5852208137512207
    3. '0' → logprob: -3.3352208137512207
    4. 'max' → logprob: -3.5852208137512207
    5. '1' → logprob: -3.7102208137512207
    6. 'A' → logprob: -3.9602208137512207
    7. 's' → logprob: -3.9602208137512207
    8. 'min' → logprob: -4.085220813751221
    9. ' somme' → logprob: -4.085220813751221
    10. 'plus' → logprob: -4.460220813751221

Token 126: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3807598352432251
    2. 'A' → logprob: -1.630759835243225
    3. ' ' → logprob: -2.6307597160339355
    4. ' A' → logprob: -4.0057597160339355
    5. '1' → logprob: -4.1307597160339355
    6. 'min' → logprob: -5.3807597160339355
    7. 'max' → logprob: -5.6307597160339355
    8. 'B' → logprob: -6.6307597160339355
    9. '10' → logprob: -7.1307597160339355
    10. '100' → logprob: -7.3807597160339355

Token 127: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.41297149658203125
    2. 'A' → logprob: -1.1629714965820312
    3. '1' → logprob: -4.537971496582031
    4. ' ' → logprob: -5.287971496582031
    5. 'B' → logprob: -6.037971496582031
    6. 'max' → logprob: -6.037971496582031
    7. 'min' → logprob: -6.537971496582031
    8. ' A' → logprob: -6.787971496582031
    9. '10' → logprob: -7.287971496582031
    10. '100' → logprob: -7.537971496582031

Token 128: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2553599178791046
    2. '
' → logprob: -1.5053598880767822
    3. ' n' → logprob: -6.130360126495361
    4. '
' → logprob: -7.380360126495361
    5. ' 
' → logprob: -7.505360126495361
    6. '  
' → logprob: -10.255359649658203
    7. '

' → logprob: -10.755359649658203
    8. '\n' → logprob: -11.630359649658203
    9. '' → logprob: -13.255359649658203
    10. '

' → logprob: -13.505359649658203

Token 129: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003816822078078985
    2. '
' → logprob: -5.628816604614258
    3. ' n' → logprob: -9.128816604614258
    4. ' 
' → logprob: -9.628816604614258
    5. '

' → logprob: -10.503816604614258
    6. '
' → logprob: -12.003816604614258
    7. '  
' → logprob: -12.878816604614258
    8. ',' → logprob: -13.628816604614258
    9. '\n' → logprob: -14.003816604614258
    10. '```' → logprob: -14.128816604614258

Token 130: ' Cela' (ID: 44403)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00381076498888433
    2. ' n' → logprob: -5.753810882568359
    3. '
' → logprob: -7.378810882568359
    4. ' 
' → logprob: -12.62881088256836
    5. '

' → logprob: -12.75381088256836
    6. '
' → logprob: -13.62881088256836
    7. '\n' → logprob: -15.25381088256836
    8. '  
' → logprob: -15.50381088256836
    9. ' ' → logprob: -15.62881088256836
    10. '\
' → logprob: -16.62881088256836

Token 131: ' serv' (ID: 2096)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13263611495494843
    2. '#' → logprob: -2.632636070251465
    3. ' n' → logprob: -3.632636070251465
    4. ' permettra' → logprob: -5.132636070251465
    5. 'serv' → logprob: -5.382636070251465
    6. ' permet' → logprob: -5.882636070251465
    7. ' serv' → logprob: -6.132636070251465
    8. ' signifie' → logprob: -6.132636070251465
    9. 's' → logprob: -6.382636070251465
    10. ' #' → logprob: -6.882636070251465

Token 132: 'ira' (ID: 2633)
  Prédit: 'ira'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ira' → logprob: -0.0002636006975080818
    2. 'ra' → logprob: -8.875263214111328
    3. 'ir' → logprob: -9.875263214111328
    4. '#' → logprob: -10.875263214111328
    5. 'a' → logprob: -10.875263214111328
    6. 'irà' → logprob: -11.000263214111328
    7. 'era' → logprob: -11.500263214111328
    8. 'i' → logprob: -12.875263214111328
    9. 'it' → logprob: -14.000263214111328
    10. 'e' → logprob: -14.125263214111328

Token 133: ' pour' (ID: 1930)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.053074803203344345
    2. 'à' → logprob: -3.303074836730957
    3. ' de' → logprob: -5.553074836730957
    4. 'de' → logprob: -5.803074836730957
    5. '#' → logprob: -5.928074836730957
    6. ' ' → logprob: -6.928074836730957
    7. ' ' → logprob: -7.178074836730957
    8. ' to' → logprob: -7.553074836730957
    9. '```' → logprob: -7.678074836730957
    10. 'au' → logprob: -7.678074836730957

Token 134: ' multiplier' (ID: 61814)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -1.3579058647155762
    2. ' compter' → logprob: -1.3579058647155762
    3. ' le' → logprob: -1.7329058647155762
    4. ' effectuer' → logprob: -2.482905864715576
    5. ' la' → logprob: -2.857905864715576
    6. ' multiplier' → logprob: -3.357905864715576
    7. 'calcul' → logprob: -3.732905864715576
    8. 'le' → logprob: -4.107905864715576
    9. ' i' → logprob: -4.982905864715576
    10. 'la' → logprob: -4.982905864715576

Token 135: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7145935297012329
    2. ' A' → logprob: -1.589593529701233
    3. 'n' → logprob: -1.964593529701233
    4. ' les' → logprob: -2.7145934104919434
    5. ' n' → logprob: -3.5895934104919434
    6. ' ' → logprob: -3.9645934104919434
    7. '<|end|>' → logprob: -3.9645934104919434
    8. ' progressivement' → logprob: -4.839593410491943
    9. 'les' → logprob: -5.339593410491943
    10. ' success' → logprob: -5.714593410491943

Token 136: ' par' (ID: 686)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.026828836649656296
    2. '
' → logprob: -3.9018287658691406
    3. ' n' → logprob: -5.151828765869141
    4. '

' → logprob: -8.52682876586914
    5. '
' → logprob: -9.27682876586914
    6. ' 
' → logprob: -9.65182876586914
    7. ',' → logprob: -10.27682876586914
    8. ' ' → logprob: -11.52682876586914
    9. '  
' → logprob: -11.77682876586914
    10. ' ' → logprob: -11.77682876586914

Token 137: ' différents' (ID: 36009)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5700590014457703
    2. 'n' → logprob: -1.695059061050415
    3. ' B' → logprob: -2.320059061050415
    4. 'B' → logprob: -2.695059061050415
    5. ' ' → logprob: -3.445059061050415
    6. '2' → logprob: -3.445059061050415
    7. ' A' → logprob: -4.570058822631836
    8. 'A' → logprob: -5.195058822631836
    9. '1' → logprob: -6.445058822631836
    10. ' les' → logprob: -6.820058822631836

Token 138: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.13033200800418854
    2. ' ent' → logprob: -3.2553319931030273
    3. 'n' → logprob: -3.5053319931030273
    4. 'multip' → logprob: -4.130331993103027
    5. ' facteurs' → logprob: -4.380331993103027
    6. 'fact' → logprob: -4.880331993103027
    7. ' nombres' → logprob: -5.255331993103027
    8. 'val' → logprob: -5.505331993103027
    9. 'coeff' → logprob: -5.505331993103027
    10. 'nombre' → logprob: -6.755331993103027

Token 139: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00021331508469302207
    2. 'ières' → logprob: -9.500213623046875
    3. 'ier' → logprob: -9.625213623046875
    4. 'i' → logprob: -9.625213623046875
    5. 'ière' → logprob: -13.500213623046875
    6. '```' → logprob: -14.125213623046875
    7. ' i' → logprob: -14.500213623046875
    8. '   ' → logprob: -14.750213623046875
    9. 'riers' → logprob: -15.250213623046875
    10. 'ieurs' → logprob: -15.250213623046875

Token 140: ' cons' (ID: 1473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014451895840466022
    2. '
' → logprob: -4.26445198059082
    3. '
' → logprob: -9.13945198059082
    4. ' n' → logprob: -9.51445198059082
    5. '

' → logprob: -10.01445198059082
    6. ',' → logprob: -11.26445198059082
    7. '#' → logprob: -11.38945198059082
    8. ' 
' → logprob: -12.13945198059082
    9. ',
' → logprob: -12.26445198059082
    10. 'while' → logprob: -12.63945198059082

Token 141: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.01685250736773014
    2. 'é' → logprob: -5.266852378845215
    3. 'équ' → logprob: -5.391852378845215
    4. 'éc' → logprob: -5.766852378845215
    5. 'ecut' → logprob: -5.766852378845215
    6. 'e' → logprob: -8.391852378845215
    7. 'ec' → logprob: -8.766852378845215
    8. 't' → logprob: -9.641852378845215
    9. '```' → logprob: -10.016852378845215
    10. 'secut' → logprob: -10.266852378845215

Token 142: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.1647922247648239
    2. 'if' → logprob: -2.41479229927063
    3. 'atifs' → logprob: -3.41479229927063
    4. 'i' → logprob: -4.914792060852051
    5. 'ut' → logprob: -5.039792060852051
    6. ' ' → logprob: -6.039792060852051
    7. 'ic' → logprob: -6.164792060852051
    8. '   ' → logprob: -6.539792060852051
    9. 'a' → logprob: -6.789792060852051
    10. 'u' → logprob: -6.914792060852051

Token 143: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00043805985478684306
    2. '
' → logprob: -7.875438213348389
    3. ' n' → logprob: -10.50043773651123
    4. ',' → logprob: -11.87543773651123
    5. '#' → logprob: -12.00043773651123
    6. '
' → logprob: -12.25043773651123
    7. '

' → logprob: -13.25043773651123
    8. 'while' → logprob: -13.37543773651123
    9. ',
' → logprob: -13.75043773651123
    10. '  
' → logprob: -14.00043773651123

Token 144: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011069540778407827
    2. '
' → logprob: -9.250110626220703
    3. '
' → logprob: -11.750110626220703
    4. ' n' → logprob: -12.875110626220703
    5. '

' → logprob: -13.750110626220703
    6. '#' → logprob: -13.875110626220703
    7. '```' → logprob: -14.125110626220703
    8. ',' → logprob: -15.500110626220703
    9. '\' → logprob: -16.375110626220703
    10. '' → logprob: -16.375110626220703

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759415626525879
    2. '=' → logprob: -0.8259415626525879
    3. ' ' → logprob: -14.45094108581543
    4. ' ' → logprob: -14.70094108581543
    5. 's' → logprob: -15.07594108581543
    6. 'n' → logprob: -15.20094108581543
    7. ',' → logprob: -15.57594108581543
    8. 'space' → logprob: -16.32594108581543
    9. ')' → logprob: -16.45094108581543
    10. '.' → logprob: -16.57594108581543

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4740777015686035
    2. ' ' → logprob: -0.9740777015686035
    3. ' ' → logprob: -14.349077224731445
    4. '  ' → logprob: -17.224077224731445
    5. '0' → logprob: -18.224077224731445
    6. '```' → logprob: -18.224077224731445
    7. '   ' → logprob: -18.786577224731445
    8. '2' → logprob: -18.849077224731445
    9. '۱' → logprob: -19.036577224731445
    10. '１' → logprob: -19.099077224731445

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '１' → logprob: -20.375001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '```' → logprob: -20.625001907348633
    6. '  ' → logprob: -20.875001907348633
    7. '۱' → logprob: -21.625001907348633
    8. '' → logprob: -21.750001907348633
    9. '0' → logprob: -22.062501907348633
    10. '`' → logprob: -22.500001907348633

Token 148: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1537524163722992
    2. 'while' → logprob: -2.153752326965332
    3. ' while' → logprob: -4.153752326965332
    4. ' 
' → logprob: -4.653752326965332
    5. '
' → logprob: -8.153752326965332
    6. '<|end|>' → logprob: -8.153752326965332
    7. '  
' → logprob: -8.528752326965332
    8. '

' → logprob: -8.778752326965332
    9. '\n' → logprob: -9.403752326965332
    10. ',
' → logprob: -10.028752326965332

Token 149: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0002622894535306841
    2. '#' → logprob: -8.625262260437012
    3. '
' → logprob: -10.000262260437012
    4. ' while' → logprob: -10.375262260437012
    5. 'wh' → logprob: -12.375262260437012
    6. '```' → logprob: -14.625262260437012
    7. 'w' → logprob: -15.375262260437012
    8. '	while' → logprob: -15.500262260437012
    9. '

' → logprob: -15.875262260437012
    10. 'print' → logprob: -16.000263214111328

Token 150: ' D' (ID: 415)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0014298786409199238
    2. ' while' → logprob: -6.626430034637451
    3. '#' → logprob: -10.001429557800293
    4. 'wh' → logprob: -10.751429557800293
    5. 'result' → logprob: -10.876429557800293
    6. 'While' → logprob: -12.001429557800293
    7. 'for' → logprob: -12.126429557800293
    8. 'w' → logprob: -12.751429557800293
    9. 'if' → logprob: -14.876429557800293
    10. 'from' → logprob: -14.876429557800293

Token 151: 'ém' (ID: 4135)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.40865659713745117
    2. '#' → logprob: -1.5336565971374512
    3. 'ep' → logprob: -3.408656597137451
    4. 'ans' → logprob: -3.783656597137451
    5. 'e' → logprob: -3.908656597137451
    6. 'eux' → logprob: -4.158656597137451
    7. ' while' → logprob: -4.533656597137451
    8. 'ef' → logprob: -6.033656597137451
    9. '```' → logprob: -6.033656597137451
    10. 'onc' → logprob: -6.033656597137451

Token 152: 'arrer' (ID: 85856)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3645886480808258
    2. 'while' → logprob: -1.8645886182785034
    3. '#' → logprob: -2.864588737487793
    4. ' while' → logprob: -3.739588737487793
    5. 'ont' → logprob: -3.864588737487793
    6. 'ebut' → logprob: -4.114588737487793
    7. 'é' → logprob: -4.614588737487793
    8. 'u' → logprob: -5.239588737487793
    9. 'ans' → logprob: -6.364588737487793
    10. 'es' → logprob: -6.364588737487793

Token 153: ' une' (ID: 2463)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7404382228851318
    2. ' une' → logprob: -0.8654382228851318
    3. 'une' → logprob: -2.865438222885132
    4. ' while' → logprob: -3.240438222885132
    5. '#' → logprob: -5.615438461303711
    6. ' la' → logprob: -7.490438461303711
    7. ' un' → logprob: -7.990438461303711
    8. 't' → logprob: -8.115438461303711
    9. 'la' → logprob: -8.240438461303711
    10. 'le' → logprob: -8.240438461303711

Token 154: ' boucle' (ID: 174211)
  Prédit: ' boucle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boucle' → logprob: -0.18626607954502106
    2. 'while' → logprob: -2.4362661838531494
    3. ' while' → logprob: -3.1862661838531494
    4. 'bou' → logprob: -3.3112661838531494
    5. ' bou' → logprob: -5.43626594543457
    6. '#' → logprob: -8.68626594543457
    7. '
' → logprob: -10.18626594543457
    8. ' Bou' → logprob: -10.68626594543457
    9. 'Bou' → logprob: -11.31126594543457
    10. ' loop' → logprob: -11.43626594543457

Token 155: ' infin' (ID: 93237)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5760189890861511
    2. ' while' → logprob: -0.8260189890861511
    3. ':' → logprob: -11.201019287109375
    4. '	while' → logprob: -11.576019287109375
    5. 'tant' → logprob: -11.701019287109375
    6. 'wh' → logprob: -11.951019287109375
    7. 'While' → logprob: -12.076019287109375
    8. ' ' → logprob: -12.076019287109375
    9. ' While' → logprob: -12.576019287109375
    10. ' ' → logprob: -12.701019287109375

Token 156: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.614122211933136
    2. 'ite' → logprob: -1.2391221523284912
    3. 'r' → logprob: -3.489122152328491
    4. 'ue' → logprob: -3.614122152328491
    5. 'while' → logprob: -3.989122152328491
    6. 'uite' → logprob: -3.989122152328491
    7. 'rie' → logprob: -3.989122152328491
    8. 'e' → logprob: -5.11412239074707
    9. 'orme' → logprob: -5.23912239074707
    10. 'nite' → logprob: -5.48912239074707

Token 157: ' avec' (ID: 3937)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.082007497549057
    2. '
' → logprob: -2.58200740814209
    3. ' while' → logprob: -5.83200740814209
    4. ':' → logprob: -9.20700740814209
    5. ':
' → logprob: -9.83200740814209
    6. ' 
' → logprob: -11.83200740814209
    7. '  
' → logprob: -12.45700740814209
    8. '

' → logprob: -12.58200740814209
    9. '
' → logprob: -12.70700740814209
    10. '	while' → logprob: -12.95700740814209

Token 158: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12693357467651367
    2. ' while' → logprob: -2.1269335746765137
    3. ' ' → logprob: -13.251934051513672
    4. '	while' → logprob: -13.751934051513672
    5. 'While' → logprob: -13.876934051513672
    6. '```' → logprob: -14.126934051513672
    7. '   ' → logprob: -15.376934051513672
    8. ':' → logprob: -15.376934051513672
    9. '  ' → logprob: -15.751934051513672
    10. ' True' → logprob: -15.751934051513672

Token 159: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0014829591382294893
    2. 'True' → logprob: -6.626482963562012
    3. ' n' → logprob: -9.126482963562012
    4. ':' → logprob: -11.251482963562012
    5. ' :' → logprob: -12.001482963562012
    6. ' while' → logprob: -12.001482963562012
    7. ' ' → logprob: -12.251482963562012
    8. ' ' → logprob: -12.251482963562012
    9. '(True' → logprob: -12.251482963562012
    10. 'n' → logprob: -12.626482963562012

Token 160: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016085516661405563
    2. ':
' → logprob: -4.141085624694824
    3. ' :' → logprob: -11.141085624694824
    4. ' :
' → logprob: -11.266085624694824
    5. ':

' → logprob: -11.641085624694824
    6. '
' → logprob: -11.891085624694824
    7. ':
' → logprob: -13.141085624694824
    8. ':def' → logprob: -13.516085624694824
    9. 'while' → logprob: -14.141085624694824
    10. ':return' → logprob: -14.516085624694824

Token 161: ' rechercher' (ID: 173335)
  Prédit: ' multiplier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multiplier' → logprob: -1.574975848197937
    2. ' afficher' → logprob: -1.574975848197937
    3. ' continuer' → logprob: -1.824975848197937
    4. ' n' → logprob: -2.1999759674072266
    5. ' calcul' → logprob: -2.4499759674072266
    6. ' True' → logprob: -2.5749759674072266
    7. ' effectuer' → logprob: -3.0749759674072266
    8. ':' → logprob: -3.4499759674072266
    9. 'n' → logprob: -3.8249759674072266
    10. ' faire' → logprob: -4.824975967407227

Token 162: ' le' (ID: 505)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.6154476404190063
    2. ' la' → logprob: -1.6154476404190063
    3. ' un' → logprob: -2.115447521209717
    4. ' le' → logprob: -2.240447521209717
    5. ' une' → logprob: -2.240447521209717
    6. ' n' → logprob: -2.615447521209717
    7. ' si' → logprob: -3.115447521209717
    8. ' if' → logprob: -3.115447521209717
    9. 'le' → logprob: -3.740447521209717
    10. ' l' → logprob: -3.865447521209717

Token 163: ' résultat' (ID: 62556)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.5147550106048584
    2. ' plus' → logprob: -1.6397550106048584
    3. ' multiple' → logprob: -2.3897550106048584
    4. 'multiple' → logprob: -2.7647550106048584
    5. 'prem' → logprob: -4.0147552490234375
    6. 'pp' → logprob: -4.1397552490234375
    7. 'pg' → logprob: -5.6397552490234375
    8. 'multip' → logprob: -5.7647552490234375
    9. '```' → logprob: -6.7647552490234375
    10. 'PG' → logprob: -6.8897552490234375

Token 164: ' désir' (ID: 92342)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014079470187425613
    2. ':
' → logprob: -5.014079570770264
    3. ' :' → logprob: -5.014079570770264
    4. ' :
' → logprob: -7.764079570770264
    5. 'A' → logprob: -10.389079093933105
    6. ' ' → logprob: -10.389079093933105
    7. ':

' → logprob: -10.639079093933105
    8. ':
' → logprob: -10.764079093933105
    9. 'while' → logprob: -10.764079093933105
    10. ' ' → logprob: -11.264079093933105

Token 165: 'é' (ID: 377)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018198858015239239
    2. ':
' → logprob: -6.626820087432861
    3. ' :' → logprob: -8.876819610595703
    4. 'ur' → logprob: -9.501819610595703
    5. 'u' → logprob: -10.001819610595703
    6. 'e' → logprob: -10.001819610595703
    7. 'if' → logprob: -10.376819610595703
    8. '   ' → logprob: -11.376819610595703
    9. ' ' → logprob: -11.376819610595703
    10. 'au' → logprob: -11.626819610595703

Token 166: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4025709927082062
    2. ':
' → logprob: -1.4025709629058838
    3. 'while' → logprob: -2.902570962905884
    4. '
' → logprob: -3.527570962905884
    5. ' while' → logprob: -7.277571201324463
    6. ' :
' → logprob: -8.777570724487305
    7. ':

' → logprob: -9.277570724487305
    8. ' 
' → logprob: -10.027570724487305
    9. ':
' → logprob: -10.152570724487305
    10. ' :' → logprob: -10.902570724487305

Token 167: 'while' (ID: 7032)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3027006685733795
    2. 'while' → logprob: -2.1777007579803467
    3. ' :
' → logprob: -3.1777007579803467
    4. ' :' → logprob: -3.3027007579803467
    5. ' while' → logprob: -3.3027007579803467
    6. ':
' → logprob: -3.5527007579803467
    7. '
' → logprob: -6.552700519561768
    8. ' 
' → logprob: -6.802700519561768
    9. 'if' → logprob: -7.177700519561768
    10. ' if' → logprob: -8.802700996398926

Token 168: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.027978960424661636
    2. 'True' → logprob: -4.027978897094727
    3. ' n' → logprob: -5.152978897094727
    4. ' ' → logprob: -6.652978897094727
    5. ' not' → logprob: -6.652978897094727
    6. 'n' → logprob: -7.277978897094727
    7. ' A' → logprob: -7.527978897094727
    8. ' B' → logprob: -9.152978897094727
    9. 'A' → logprob: -11.277978897094727
    10. '  ' → logprob: -11.402978897094727

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024976562708616257
    2. ':
' → logprob: -6.002497673034668
    3. ' :' → logprob: -11.002497673034668
    4. '   ' → logprob: -13.127497673034668
    5. ':

' → logprob: -13.752497673034668
    6. ' :
' → logprob: -14.252497673034668
    7. ',' → logprob: -14.502497673034668
    8. '):' → logprob: -15.627497673034668
    9. '():' → logprob: -15.877497673034668
    10. '):
' → logprob: -16.00249671936035

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012678220868110657
    2. ':' → logprob: -4.512678146362305
    3. ' :' → logprob: -7.512678146362305
    4. '    
' → logprob: -7.637678146362305
    5. ' 
' → logprob: -8.387678146362305
    6. ' ' → logprob: -9.262678146362305
    7. '<|end|>' → logprob: -9.887678146362305
    8. '
' → logprob: -10.137678146362305
    9. ' if' → logprob: -10.637678146362305
    10. '    ' → logprob: -10.637678146362305

Token 171: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20714525878429413
    2. ' if' → logprob: -2.5821452140808105
    3. ' result' → logprob: -3.0821452140808105
    4. ' product' → logprob: -3.4571452140808105
    5. 'result' → logprob: -4.5821452140808105
    6. ' produit' → logprob: -5.0821452140808105
    7. '    
' → logprob: -5.3321452140808105
    8. 'product' → logprob: -5.9571452140808105
    9. ' resultat' → logprob: -5.9571452140808105
    10. ' résultat' → logprob: -6.3321452140808105

Token 172: ' Mult' (ID: 15431)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6859668493270874
    2. ' result' → logprob: -1.9359668493270874
    3. ' produit' → logprob: -2.185966968536377
    4. '   ' → logprob: -3.185966968536377
    5. 'produ' → logprob: -3.185966968536377
    6. ' if' → logprob: -3.435966968536377
    7. ' resultat' → logprob: -4.310966968536377
    8. 'if' → logprob: -4.435966968536377
    9. ' résultat' → logprob: -4.435966968536377
    10. 'product' → logprob: -4.435966968536377

Token 173: 'iplier' (ID: 30777)
  Prédit: 'iplier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iplier' → logprob: -0.009174149483442307
    2. 'ipl' → logprob: -6.009174346923828
    3. 'ip' → logprob: -6.259174346923828
    4. 'pliquer' → logprob: -6.384174346923828
    5. '   ' → logprob: -6.884174346923828
    6. 'plier' → logprob: -6.884174346923828
    7. 'ilier' → logprob: -7.759174346923828
    8. 'iple' → logprob: -9.509174346923828
    9. 'er' → logprob: -9.634174346923828
    10. ' ip' → logprob: -9.634174346923828

Token 174: ' la' (ID: 557)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.014981299638748169
    2. 'A' → logprob: -4.264981269836426
    3. ' ' → logprob: -7.389981269836426
    4. '   ' → logprob: -9.514981269836426
    5. ' n' → logprob: -10.014981269836426
    6. ' ' → logprob: -11.014981269836426
    7. '    ' → logprob: -11.139981269836426
    8. 'n' → logprob: -11.264981269836426
    9. '	A' → logprob: -11.514981269836426
    10. '(A' → logprob: -12.264981269836426

Token 175: ' valeur' (ID: 41664)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1447102576494217
    2. ' A' → logprob: -2.1447103023529053
    3. ' valeur' → logprob: -4.644710063934326
    4. 'n' → logprob: -5.769710063934326
    5. ' variable' → logprob: -6.269710063934326
    6. 'val' → logprob: -6.894710063934326
    7. 'variable' → logprob: -7.394710063934326
    8. ' ' → logprob: -8.019710540771484
    9. ' n' → logprob: -8.019710540771484
    10. 's' → logprob: -8.519710540771484

Token 176: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4677763283252716
    2. 'A' → logprob: -1.3427762985229492
    3. 'de' → logprob: -2.842776298522949
    4. ' A' → logprob: -2.967776298522949
    5. ' ' → logprob: -6.717776298522949
    6. 'n' → logprob: -7.967776298522949
    7. '   ' → logprob: -7.967776298522949
    8. 'd' → logprob: -8.46777629852295
    9. ' n' → logprob: -8.59277629852295
    10. ' d' → logprob: -8.71777629852295

Token 177: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.38783499598503113
    2. ' A' → logprob: -1.1378350257873535
    3. 'n' → logprob: -7.3878350257873535
    4. ' n' → logprob: -8.137834548950195
    5. ' ' → logprob: -10.262834548950195
    6. '   ' → logprob: -12.387834548950195
    7. 'B' → logprob: -12.512834548950195
    8. '	A' → logprob: -12.887834548950195
    9. ' ' → logprob: -13.137834548950195
    10. ' B' → logprob: -13.262834548950195

Token 178: ' par' (ID: 686)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2899238169193268
    2. ' par' → logprob: -1.5399237871170044
    3. '*' → logprob: -4.039923667907715
    4. '*n' → logprob: -4.539923667907715
    5. 'par' → logprob: -5.414923667907715
    6. '   ' → logprob: -6.039923667907715
    7. ' by' → logprob: -6.914923667907715
    8. 'n' → logprob: -7.789923667907715
    9. ',' → logprob: -8.414923667907715
    10. ' n' → logprob: -8.664923667907715

Token 179: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06196846812963486
    2. 'n' → logprob: -2.8119685649871826
    3. ' ' → logprob: -14.436968803405762
    4. ' ' → logprob: -15.436968803405762
    5. '	n' → logprob: -15.686968803405762
    6. ' le' → logprob: -19.186967849731445
    7. ' ' → logprob: -19.311967849731445
    8. ' la' → logprob: -19.686967849731445
    9. 'le' → logprob: -19.686967849731445
    10. 'l' → logprob: -19.936967849731445

Token 180: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10552074760198593
    2. 'result' → logprob: -3.730520725250244
    3. '*' → logprob: -3.855520725250244
    4. ' *' → logprob: -3.855520725250244
    5. '    
' → logprob: -4.105520725250244
    6. '
' → logprob: -4.605520725250244
    7. ',' → logprob: -5.980520725250244
    8. 'multip' → logprob: -6.855520725250244
    9. '    ' → logprob: -7.605520725250244
    10. '   
' → logprob: -8.105521202087402

Token 181: ' stock' (ID: 6546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19331882894039154
    2. 'result' → logprob: -2.1933188438415527
    3. ' resultat' → logprob: -3.8183188438415527
    4. ' result' → logprob: -3.9433188438415527
    5. ' résultat' → logprob: -4.193318843841553
    6. '    
' → logprob: -6.193318843841553
    7. 'rés' → logprob: -6.693318843841553
    8. ' produit' → logprob: -6.943318843841553
    9. 'res' → logprob: -7.068318843841553
    10. ' res' → logprob: -7.568318843841553

Token 182: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.1602465659379959
    2. 'ée' → logprob: -2.1602466106414795
    3. 'ant' → logprob: -3.5352466106414795
    4. '=' → logprob: -7.1602463722229
    5. 'é' → logprob: -7.1602463722229
    6. 'e' → logprob: -7.7852463722229
    7. '   ' → logprob: -7.9102463722229
    8. ' =' → logprob: -8.160246849060059
    9. 'A' → logprob: -9.160246849060059
    10. 'uler' → logprob: -9.160246849060059

Token 183: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.46604183316230774
    2. ' dans' → logprob: -1.3410418033599854
    3. 'le' → logprob: -2.4660418033599854
    4. 'result' → logprob: -4.4660420417785645
    5. 'dans' → logprob: -5.2160420417785645
    6. ' la' → logprob: -5.7160420417785645
    7. ' result' → logprob: -6.0910420417785645
    8. 'la' → logprob: -7.2160420417785645
    9. ' ' → logprob: -7.3410420417785645
    10. 'res' → logprob: -8.091041564941406

Token 184: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2951878607273102
    2. ' résultat' → logprob: -2.1701879501342773
    3. 'produ' → logprob: -2.7951879501342773
    4. 'rés' → logprob: -2.7951879501342773
    5. ' produit' → logprob: -4.295187950134277
    6. ' result' → logprob: -5.920187950134277
    7. ' resultat' → logprob: -6.545187950134277
    8. 'r' → logprob: -7.045187950134277
    9. 'res' → logprob: -8.170187950134277
    10. 'product' → logprob: -9.295187950134277

Token 185: ' dans' (ID: 2671)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.22886380553245544
    2. ' result' → logprob: -2.2288637161254883
    3. '   ' → logprob: -3.3538637161254883
    4. ' =' → logprob: -3.4788637161254883
    5. '=' → logprob: -5.228863716125488
    6. ' dans' → logprob: -5.478863716125488
    7. 'res' → logprob: -5.728863716125488
    8. ',' → logprob: -5.978863716125488
    9. '_result' → logprob: -6.353863716125488
    10. 'r' → logprob: -6.478863716125488

Token 186: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4253658056259155
    2. ' result' → logprob: -1.1753658056259155
    3. 'product' → logprob: -4.925365924835205
    4. ' res' → logprob: -5.050365924835205
    5. ' product' → logprob: -5.050365924835205
    6. ' resultat' → logprob: -5.425365924835205
    7. 'res' → logprob: -5.800365924835205
    8. ' un' → logprob: -6.175365924835205
    9. ' produit' → logprob: -6.175365924835205
    10. ' résultat' → logprob: -7.050365924835205

Token 187: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07887248694896698
    2. 'produ' → logprob: -3.2038724422454834
    3. 'r' → logprob: -4.4538726806640625
    4. 'res' → logprob: -4.8288726806640625
    5. 'rés' → logprob: -4.9538726806640625
    6. ' produit' → logprob: -5.7038726806640625
    7. ' result' → logprob: -6.3288726806640625
    8. 'product' → logprob: -6.8288726806640625
    9. ' résultat' → logprob: -7.2038726806640625
    10. ' resultat' → logprob: -8.203872680664062

Token 188: ' A' (ID: 355)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2519991397857666
    2. ' result' → logprob: -1.6269991397857666
    3. ' C' → logprob: -5.0019989013671875
    4. 'C' → logprob: -5.1269989013671875
    5. 'product' → logprob: -5.6269989013671875
    6. ' product' → logprob: -6.0019989013671875
    7. ' resultat' → logprob: -6.3769989013671875
    8. ' résultat' → logprob: -6.5019989013671875
    9. 'r' → logprob: -6.7519989013671875
    10. ' produit' → logprob: -7.0019989013671875

Token 189: '_
' (ID: 27437)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.7566244006156921
    2. '_' → logprob: -1.506624460220337
    3. '_mul' → logprob: -2.756624460220337
    4. ' *' → logprob: -2.881624460220337
    5. '_mult' → logprob: -3.131624460220337
    6. '_temp' → logprob: -3.631624460220337
    7. '_n' → logprob: -3.756624460220337
    8. '_times' → logprob: -4.131624221801758
    9. '_m' → logprob: -4.756624221801758
    10. '*' → logprob: -4.881624221801758

Token 190: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8703351020812988
    2. 'A' → logprob: -0.9953351020812988
    3. ' =' → logprob: -1.6203351020812988
    4. '   ' → logprob: -4.995335102081299
    5. '_A' → logprob: -5.620335102081299
    6. '=' → logprob: -6.120335102081299
    7. ' A' → logprob: -7.370335102081299
    8. ',' → logprob: -9.24533462524414
    9. '=A' → logprob: -9.24533462524414
    10. '_=' → logprob: -9.24533462524414

Token 191: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.020058751106262207
    2. ' A' → logprob: -4.520058631896973
    3. '_' → logprob: -5.145058631896973
    4. '   ' → logprob: -6.770058631896973
    5. ' =' → logprob: -6.770058631896973
    6. '_A' → logprob: -7.270058631896973
    7. '=' → logprob: -9.770058631896973
    8. ' _' → logprob: -11.145058631896973
    9. ',' → logprob: -11.270058631896973
    10. ' ' → logprob: -11.520058631896973

Token 192: ' Le' (ID: 2018)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.39987441897392273
    2. ' A' → logprob: -1.1498744487762451
    3. '   ' → logprob: -4.399874210357666
    4. '_' → logprob: -8.399874687194824
    5. '    ' → logprob: -9.024874687194824
    6. ' ' → logprob: -9.399874687194824
    7. '_A' → logprob: -9.899874687194824
    8. '  ' → logprob: -10.524874687194824
    9. '    
' → logprob: -10.899874687194824
    10. ' ' → logprob: -11.024874687194824

Token 193: ' caractère' (ID: 80509)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09416193515062332
    2. '_' → logprob: -2.7191619873046875
    3. ' A' → logprob: -4.0941619873046875
    4. ' résultat' → logprob: -5.5941619873046875
    5. 'result' → logprob: -6.8441619873046875
    6. ' =' → logprob: -7.7191619873046875
    7. '#' → logprob: -8.094161987304688
    8. ' result' → logprob: -8.219161987304688
    9. '=' → logprob: -8.219161987304688
    10. 'n' → logprob: -8.469161987304688

Token 194: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005629229708574712
    2. ' _' → logprob: -7.625563144683838
    3. ' ' → logprob: -9.87556266784668
    4. '_=' → logprob: -12.12556266784668
    5. 'A' → logprob: -12.25056266784668
    6. '_A' → logprob: -13.62556266784668
    7. '_a' → logprob: -13.62556266784668
    8. ' ' → logprob: -13.62556266784668
    9. '*' → logprob: -13.87556266784668
    10. '  ' → logprob: -14.50056266784668

Token 195: ' soul' (ID: 16741)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0029343178030103445
    2. ' _' → logprob: -6.127934455871582
    3. 's' → logprob: -7.502934455871582
    4. 'underscore' → logprob: -9.377934455871582
    5. '_s' → logprob: -10.752934455871582
    6. ' ' → logprob: -11.627934455871582
    7. ' underscore' → logprob: -11.627934455871582
    8. '```' → logprob: -11.752934455871582
    9. '`' → logprob: -12.002934455871582
    10. ''' → logprob: -12.377934455871582

Token 196: 'ign' (ID: 733)
  Prédit: 'ign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.6934790015220642
    2. 'igné' → logprob: -1.193479061126709
    3. 'igne' → logprob: -1.943479061126709
    4. 'igner' → logprob: -4.193479061126709
    5. 'ig' → logprob: -4.443479061126709
    6. '_' → logprob: -4.818479061126709
    7. 'ignée' → logprob: -4.818479061126709
    8. 'igna' → logprob: -5.693479061126709
    9. 'gne' → logprob: -6.693479061126709
    10. 'gn' → logprob: -7.193479061126709

Token 197: 'ement' (ID: 962)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2157490849494934
    2. 'é' → logprob: -1.9657490253448486
    3. '_' → logprob: -2.9657490253448486
    4. 'er' → logprob: -6.840749263763428
    5. '#' → logprob: -7.215749263763428
    6. 'A' → logprob: -7.965749263763428
    7. 'ement' → logprob: -8.96574878692627
    8. 'a' → logprob: -9.71574878692627
    9. '__' → logprob: -10.34074878692627
    10. 'i' → logprob: -10.84074878692627

Token 198: ' (_)' (ID: 123352)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004856222774833441
    2. 'A' → logprob: -5.629856109619141
    3. ' _' → logprob: -8.62985610961914
    4. '_a' → logprob: -8.62985610961914
    5. 'final' → logprob: -8.75485610961914
    6. 'n' → logprob: -9.25485610961914
    7. 's' → logprob: -9.25485610961914
    8. '_A' → logprob: -9.62985610961914
    9. '_final' → logprob: -9.62985610961914
    10. '#' → logprob: -9.87985610961914

Token 199: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21980495750904083
    2. 'A' → logprob: -1.9698050022125244
    3. 'n' → logprob: -3.7198050022125244
    4. 's' → logprob: -4.219804763793945
    5. '<|end|>' → logprob: -4.969804763793945
    6. ')' → logprob: -5.344804763793945
    7. '=' → logprob: -6.594804763793945
    8. 'a' → logprob: -6.844804763793945
    9. ' =' → logprob: -6.969804763793945
    10. '#' → logprob: -7.219804763793945

Token 200: ' fré' (ID: 52465)
  Prédit: ' souvent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' souvent' → logprob: -0.6353484988212585
    2. ' utilisé' → logprob: -1.1353485584259033
    3. 'sou' → logprob: -2.2603485584259033
    4. 'util' → logprob: -3.5103485584259033
    5. '_' → logprob: -5.385348320007324
    6. ' un' → logprob: -6.760348320007324
    7. 'often' → logprob: -6.885348320007324
    8. 'cour' → logprob: -6.885348320007324
    9. '_util' → logprob: -7.135348320007324
    10. 'trad' → logprob: -7.260348320007324

Token 201: 'quem' (ID: 43507)
  Prédit: 'quent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quent' → logprob: -0.11303643137216568
    2. 'vu' → logprob: -3.7380363941192627
    3. 'n' → logprob: -4.988036632537842
    4. 'qu' → logprob: -5.113036632537842
    5. 'vi' → logprob: -5.113036632537842
    6. 'quence' → logprob: -5.238036632537842
    7. 'v' → logprob: -5.238036632537842
    8. 'quem' → logprob: -5.488036632537842
    9. 'serv' → logprob: -5.613036632537842
    10. 's' → logprob: -5.613036632537842

Token 202: 'ment' (ID: 508)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.01809937320649624
    2. 'ence' → logprob: -4.393099308013916
    3. 'e' → logprob: -5.643099308013916
    4. 'en' → logprob: -7.768099308013916
    5. 'encé' → logprob: -7.768099308013916
    6. 'emment' → logprob: -8.143099784851074
    7. 'é' → logprob: -8.768099784851074
    8. 'ment' → logprob: -9.018099784851074
    9. 'er' → logprob: -9.768099784851074
    10. 'ente' → logprob: -9.768099784851074

Token 203: ' utilisé' (ID: 53138)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9417385458946228
    2. 'util' → logprob: -1.0667386054992676
    3. ' utilisé' → logprob: -1.4417386054992676
    4. '_util' → logprob: -4.066738605499268
    5. 'used' → logprob: -5.691738605499268
    6. 'u' → logprob: -6.191738605499268
    7. 'A' → logprob: -6.566738605499268
    8. ' used' → logprob: -6.691738605499268
    9. ' ' → logprob: -7.066738605499268
    10. '<|end|>' → logprob: -7.941738605499268

Token 204: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08331531286239624
    2. 'A' → logprob: -2.583315372467041
    3. ' A' → logprob: -6.458315372467041
    4. '_a' → logprob: -7.333315372467041
    5. '_A' → logprob: -7.833315372467041
    6. '=' → logprob: -8.083314895629883
    7. ' ' → logprob: -8.208314895629883
    8. ' pour' → logprob: -8.458314895629883
    9. ' _' → logprob: -8.958314895629883
    10. 'a' → logprob: -9.083314895629883

Token 205: ' disting' (ID: 68664)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.45213669538497925
    2. 'sé' → logprob: -2.077136754989624
    3. 'sign' → logprob: -3.077136754989624
    4. ' ind' → logprob: -3.327136754989624
    5. ' sé' → logprob: -3.702136754989624
    6. '_' → logprob: -4.077136516571045
    7. 'd' → logprob: -4.077136516571045
    8. 'nom' → logprob: -4.077136516571045
    9. 'indi' → logprob: -4.202136516571045
    10. ' dés' → logprob: -4.702136516571045

Token 206: 'uer' (ID: 4615)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18602867424488068
    2. '_' → logprob: -1.9360287189483643
    3. ' A' → logprob: -4.311028480529785
    4. 'e' → logprob: -5.436028480529785
    5. '_A' → logprob: -5.686028480529785
    6. ' ' → logprob: -6.186028480529785
    7. 'er' → logprob: -7.061028480529785
    8. 'a' → logprob: -7.811028480529785
    9. 'é' → logprob: -8.436028480529785
    10. '_auc' → logprob: -8.686028480529785

Token 207: ' une' (ID: 2463)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.018978187814354897
    2. ' A' → logprob: -5.018978118896484
    3. ' une' → logprob: -5.893978118896484
    4. ' ' → logprob: -6.393978118896484
    5. '_' → logprob: -6.518978118896484
    6. 'une' → logprob: -6.518978118896484
    7. ' la' → logprob: -6.768978118896484
    8. 'a' → logprob: -6.893978118896484
    9. '<|end|>' → logprob: -7.518978118896484
    10. 'la' → logprob: -7.643978118896484

Token 208: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.22742247581481934
    2. ' variable' → logprob: -1.8524224758148193
    3. 'var' → logprob: -3.8524224758148193
    4. 'val' → logprob: -4.352422714233398
    5. 'A' → logprob: -5.977422714233398
    6. ' valeur' → logprob: -6.352422714233398
    7. '_' → logprob: -6.477422714233398
    8. 'lett' → logprob: -6.477422714233398
    9. ' ' → logprob: -6.977422714233398
    10. ' nouvelle' → logprob: -7.477422714233398

Token 209: ' tempora' (ID: 117509)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40650999546051025
    2. 'A' → logprob: -1.1565099954605103
    3. ' interm' → logprob: -4.906509876251221
    4. ' tempora' → logprob: -5.031509876251221
    5. ' A' → logprob: -6.656509876251221
    6. 'a' → logprob: -7.156509876251221
    7. '_A' → logprob: -7.281509876251221
    8. 'n' → logprob: -8.031510353088379
    9. '_a' → logprob: -8.406510353088379
    10. ' _' → logprob: -8.406510353088379

Token 210: 'ire' (ID: 594)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6746062636375427
    2. '_' → logprob: -1.4246063232421875
    3. 'e' → logprob: -1.4246063232421875
    4. 'a' → logprob: -5.2996063232421875
    5. '_A' → logprob: -6.4246063232421875
    6. ' A' → logprob: -7.0496063232421875
    7. '_a' → logprob: -7.4246063232421875
    8. 'ale' → logprob: -8.299606323242188
    9. ',' → logprob: -8.424606323242188
    10. 'n' → logprob: -8.799606323242188

Token 211: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.069664333248511e-05
    2. ' A' → logprob: -11.500020980834961
    3. 'a' → logprob: -12.625020980834961
    4. '_' → logprob: -13.000020980834961
    5. '_A' → logprob: -13.250020980834961
    6. '
' → logprob: -14.375020980834961
    7. '   ' → logprob: -14.500020980834961
    8. ',' → logprob: -14.500020980834961
    9. '  
' → logprob: -15.000020980834961
    10. ' ' → logprob: -15.125020980834961

Token 212: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.012915730476379395
    2. ' A' → logprob: -4.38791561126709
    3. ' =' → logprob: -8.88791561126709
    4. '   ' → logprob: -9.26291561126709
    5. '_A' → logprob: -10.13791561126709
    6. ':' → logprob: -10.26291561126709
    7. ' ' → logprob: -10.88791561126709
    8. ' :' → logprob: -11.01291561126709
    9. ',' → logprob: -11.38791561126709
    10. 'a' → logprob: -11.51291561126709

Token 213: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.016157422214746475
    2. ' A' → logprob: -4.141157627105713
    3. '   ' → logprob: -9.141157150268555
    4. ' ' → logprob: -12.391157150268555
    5. '_A' → logprob: -12.516157150268555
    6. '_' → logprob: -12.891157150268555
    7. ' 
' → logprob: -14.141157150268555
    8. 'a' → logprob: -14.391157150268555
    9. '    
' → logprob: -14.391157150268555
    10. ',' → logprob: -14.641157150268555

Token 214: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.1318875446449965e-05
    2. '_*' → logprob: -10.500041007995605
    3. '_=' → logprob: -11.250041007995605
    4. '*' → logprob: -15.125041007995605
    5. '_

' → logprob: -15.625041007995605
    6. '_,' → logprob: -16.000041961669922
    7. '_
' → logprob: -16.875041961669922
    8. '_
' → logprob: -17.000041961669922
    9. '_n' → logprob: -17.250041961669922
    10. '_]' → logprob: -17.375041961669922

Token 215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.386874258518219
    2. ' =' → logprob: -1.1368741989135742
    3. '=A' → logprob: -13.636874198913574
    4. '*' → logprob: -14.511874198913574
    5. ',' → logprob: -14.886874198913574
    6. ')' → logprob: -15.136874198913574
    7. ' ' → logprob: -15.386874198913574
    8. '_' → logprob: -16.26187515258789
    9. ' *' → logprob: -16.26187515258789
    10. ' ' → logprob: -17.13687515258789

Token 216: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3868725001811981
    2. 'A' → logprob: -1.1368725299835205
    3. ' ' → logprob: -13.761872291564941
    4. ' ' → logprob: -15.261872291564941
    5. '   ' → logprob: -16.136873245239258
    6. '	A' → logprob: -16.386873245239258
    7. 'a' → logprob: -17.261873245239258
    8. '  ' → logprob: -17.511873245239258
    9. '(A' → logprob: -18.886873245239258
    10. ' a' → logprob: -19.136873245239258

Token 217: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5762525796890259
    2. '*' → logprob: -0.8262525796890259
    3. '*n' → logprob: -8.076252937316895
    4. ' ' → logprob: -13.326252937316895
    5. 'n' → logprob: -15.201252937316895
    6. ' ' → logprob: -15.326252937316895
    7. '*
' → logprob: -17.326251983642578
    8. '*N' → logprob: -17.451251983642578
    9. '*object' → logprob: -17.701251983642578
    10. '*num' → logprob: -17.951251983642578

Token 218: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1602243334054947
    2. ' n' → logprob: -1.9102243185043335
    3. ' ' → logprob: -15.785223960876465
    4. '	n' → logprob: -16.53522491455078
    5. ' ' → logprob: -17.16022491455078
    6. '_n' → logprob: -18.41022491455078
    7. '   ' → logprob: -19.16022491455078
    8. '(n' → logprob: -19.91022491455078
    9. ')n' → logprob: -20.03522491455078
    10. '  ' → logprob: -20.28522491455078

Token 219: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7148561477661133
    2. ' if' → logprob: -1.0898561477661133
    3. 'if' → logprob: -2.5898561477661133
    4. ' 
' → logprob: -3.2148561477661133
    5. '
' → logprob: -3.7148561477661133
    6. ' ' → logprob: -4.714856147766113
    7. '    
' → logprob: -4.839856147766113
    8. '  
' → logprob: -5.089856147766113
    9. '<|end|>' → logprob: -5.214856147766113
    10. ',' → logprob: -6.714856147766113

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04982152208685875
    2. ' if' → logprob: -3.674821615219116
    3. '    
' → logprob: -4.799821376800537
    4. '
' → logprob: -5.049821376800537
    5. 'if' → logprob: -5.174821376800537
    6. ' 
' → logprob: -6.674821376800537
    7. '   
' → logprob: -7.299821376800537
    8. '  
' → logprob: -7.549821376800537
    9. '  ' → logprob: -9.174821853637695
    10. ',' → logprob: -9.424821853637695

Token 221: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013439030386507511
    2. '   ' → logprob: -4.638439178466797
    3. ' if' → logprob: -5.763439178466797
    4. '#' (adapté à ' #') → logprob: -8.263439178466797
    5. 'B' → logprob: -8.263439178466797
    6. 'n' → logprob: -12.638439178466797
    7. '    
' → logprob: -12.763439178466797
    8. 'for' → logprob: -13.138439178466797
    9. 'A' → logprob: -13.138439178466797
    10. 'C' → logprob: -13.513439178466797

Token 222: ' Calcul' (ID: 57243)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018303755670785904
    2. ' if' → logprob: -5.143303871154785
    3. '#' → logprob: -5.268303871154785
    4. 'B' → logprob: -5.393303871154785
    5. 'Si' → logprob: -6.768303871154785
    6. 'Comparer' → logprob: -6.893303871154785
    7. 'v' → logprob: -9.643303871154785
    8. 'V' → logprob: -9.768303871154785
    9. '   ' → logprob: -9.768303871154785
    10. 'si' → logprob: -10.143303871154785

Token 223: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.09428941458463669
    2. '   ' → logprob: -2.7192893028259277
    3. 'B' → logprob: -4.344289302825928
    4. ' =' → logprob: -5.219289302825928
    5. ' B' → logprob: -5.594289302825928
    6. '=' → logprob: -6.969289302825928
    7. '_' → logprob: -8.219289779663086
    8. '    ' → logprob: -8.969289779663086
    9. ',' → logprob: -9.344289779663086
    10. '.' → logprob: -9.719289779663086

Token 224: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0771536827087402
    2. 'la' → logprob: -1.4521536827087402
    3. 'l' → logprob: -1.8271536827087402
    4. 'B' → logprob: -2.3271536827087402
    5. ' la' → logprob: -2.5771536827087402
    6. 'if' → logprob: -3.4521536827087402
    7. 'le' → logprob: -3.9521536827087402
    8. 'diff' → logprob: -4.07715368270874
    9. ' l' → logprob: -4.82715368270874
    10. ' B' → logprob: -4.82715368270874

Token 225: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.792731761932373
    2. 'B' → logprob: -0.917731761932373
    3. 'diff' → logprob: -3.042731761932373
    4. 'if' → logprob: -3.667731761932373
    5. 'mod' → logprob: -3.792731761932373
    6. 'nombre' → logprob: -4.167731761932373
    7. 'rest' → logprob: -4.542731761932373
    8. 'r' → logprob: -4.667731761932373
    9. 'produ' → logprob: -5.292731761932373
    10. 're' → logprob: -5.917731761932373

Token 226: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.20827947556972504
    2. '   ' → logprob: -2.2082793712615967
    3. ' =' → logprob: -3.2082793712615967
    4. '=' → logprob: -4.208279609680176
    5. ' A' → logprob: -4.833279609680176
    6. 'de' → logprob: -4.958279609680176
    7. '%' → logprob: -6.208279609680176
    8. 'A' → logprob: -6.333279609680176
    9. ' ' → logprob: -6.958279609680176
    10. ',' → logprob: -7.333279609680176

Token 227: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.38874131441116333
    2. ' A' → logprob: -1.1387412548065186
    3. 'B' → logprob: -7.013741493225098
    4. ' B' → logprob: -7.763741493225098
    5. ' la' → logprob: -7.888741493225098
    6. ' ' → logprob: -10.013741493225098
    7. 'div' → logprob: -10.388741493225098
    8. 'la' → logprob: -10.388741493225098
    9. '(A' → logprob: -10.388741493225098
    10. 'l' → logprob: -11.138741493225098

Token 228: ' division' (ID: 21629)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10685986280441284
    2. 'B' → logprob: -2.8568599224090576
    3. ' A' → logprob: -3.4818599224090576
    4. 'division' → logprob: -5.4818596839904785
    5. ' B' → logprob: -5.6068596839904785
    6. 'div' → logprob: -5.6068596839904785
    7. '(A' → logprob: -7.6068596839904785
    8. ' division' → logprob: -7.6068596839904785
    9. ' (' → logprob: -8.231860160827637
    10. '(B' → logprob: -8.981860160827637

Token 229: ' de' (ID: 334)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.035180773586034775
    2. 'de' → logprob: -4.285180568695068
    3. ' de' → logprob: -4.785180568695068
    4. ' A' → logprob: -4.785180568695068
    5. 'B' → logprob: -5.660180568695068
    6. '#' → logprob: -9.035181045532227
    7. 'mod' → logprob: -9.285181045532227
    8. '   ' → logprob: -9.410181045532227
    9. '%' → logprob: -9.785181045532227
    10. ' ' → logprob: -9.910181045532227

Token 230: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.009426552802324295
    2. ' A' → logprob: -4.759426593780518
    3. 'B' → logprob: -7.134426593780518
    4. ' B' → logprob: -11.63442611694336
    5. '(A' → logprob: -12.75942611694336
    6. ' ' → logprob: -13.63442611694336
    7. '	A' → logprob: -15.00942611694336
    8. 'l' → logprob: -15.00942611694336
    9. '   ' → logprob: -15.75942611694336
    10. 'la' → logprob: -16.00942611694336

Token 231: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.3464544432936236e-05
    2. '_A' → logprob: -11.250043869018555
    3. '_B' → logprob: -11.250043869018555
    4. 'A' → logprob: -12.000043869018555
    5. '_%' → logprob: -12.750043869018555
    6. '_
' → logprob: -13.500043869018555
    7. '```' → logprob: -13.625043869018555
    8. '_
' → logprob: -14.250043869018555
    9. ' A' → logprob: -14.500043869018555
    10. '%' → logprob: -14.625043869018555

Token 232: ' par' (ID: 686)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.22029435634613037
    2. '%A' → logprob: -1.7202943563461304
    3. 'A' → logprob: -4.47029447555542
    4. ' %' → logprob: -5.59529447555542
    5. 'par' → logprob: -6.59529447555542
    6. ' par' → logprob: -7.22029447555542
    7. '%B' → logprob: -7.34529447555542
    8. ' A' → logprob: -7.72029447555542
    9. '#' → logprob: -9.595293998718262
    10. '%n' → logprob: -9.595293998718262

Token 233: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.000627014203928411
    2. ' B' → logprob: -7.375627040863037
    3. '10' → logprob: -15.125626564025879
    4. '7' → logprob: -16.250627517700195
    5. '100' → logprob: -16.750627517700195
    6. ' ' → logprob: -17.250627517700195
    7. 'b' → logprob: -18.250627517700195
    8. '%B' → logprob: -18.250627517700195
    9. '(B' → logprob: -18.375627517700195
    10. '	B' → logprob: -18.500627517700195

Token 234: ' à' (ID: 1221)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7871748805046082
    2. ' %' → logprob: -1.412174940109253
    3. '   ' → logprob: -2.037174940109253
    4. 'A' → logprob: -2.287174940109253
    5. ' A' → logprob: -3.162174940109253
    6. '%A' → logprob: -4.537174701690674
    7. ',' → logprob: -4.912174701690674
    8. 'r' → logprob: -5.912174701690674
    9. ' =' → logprob: -6.162174701690674
    10. 'a' → logprob: -7.412174701690674

Token 235: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3349825143814087
    2. '%B' → logprob: -1.8349825143814087
    3. ' B' → logprob: -2.084982395172119
    4. '100' → logprob: -2.209982395172119
    5. 'B' → logprob: -2.584982395172119
    6. '%' → logprob: -2.709982395172119
    7. ' modulo' → logprob: -2.709982395172119
    8. 'n' → logprob: -2.959982395172119
    9. '0' → logprob: -4.084982395172119
    10. '1' → logprob: -4.209982395172119

Token 236: ''aide' (ID: 75684)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8206685781478882
    2. 'B' → logprob: -1.1956685781478882
    3. '%' → logprob: -2.5706686973571777
    4. ' modulo' → logprob: -3.0706686973571777
    5. 'mod' → logprob: -3.5706686973571777
    6. '%B' → logprob: -3.8206686973571777
    7. ' B' → logprob: -3.9456686973571777
    8. 'A' → logprob: -4.070668697357178
    9. '10' → logprob: -4.570668697357178
    10. '#' → logprob: -4.695668697357178

Token 237: ' de' (ID: 334)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0912446603178978
    2. ' de' → logprob: -2.591244697570801
    3. 'de' → logprob: -4.966244697570801
    4. ' du' → logprob: -6.091244697570801
    5. ' %' → logprob: -6.591244697570801
    6. 'du' → logprob: -7.091244697570801
    7. 'd' → logprob: -8.2162446975708
    8. 'le' → logprob: -9.9662446975708
    9. 'l' → logprob: -9.9662446975708
    10. ' of' → logprob: -9.9662446975708

Token 238: ' l' (ID: 305)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.008365754038095474
    2. '%B' → logprob: -5.258365631103516
    3. '%A' → logprob: -7.008365631103516
    4. 'le' → logprob: -7.633365631103516
    5. '%b' → logprob: -7.633365631103516
    6. ' %' → logprob: -8.008365631103516
    7. '%d' → logprob: -8.633365631103516
    8. '%n' → logprob: -9.008365631103516
    9. 'A' → logprob: -9.383365631103516
    10. '%i' → logprob: -9.508365631103516

Token 239: ''op' (ID: 70747)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.06604502350091934
    2. 'a' → logprob: -3.316045045852661
    3. 'e' → logprob: -4.316044807434082
    4. ''op' → logprob: -4.691044807434082
    5. ''%' → logprob: -7.066044807434082
    6. 'operator' → logprob: -7.191044807434082
    7. 'op' → logprob: -7.316044807434082
    8. ' modulo' → logprob: -7.441044807434082
    9. 'A' → logprob: -7.691044807434082
    10. ''' → logprob: -8.066044807434082

Token 240: 'érateur' (ID: 108528)
  Prédit: 'érateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -0.7106960415840149
    2. '%' → logprob: -1.8356959819793701
    3. 'ér' → logprob: -1.9606959819793701
    4. 'er' → logprob: -2.21069598197937
    5. 'ération' → logprob: -3.08569598197937
    6. 'r' → logprob: -4.460696220397949
    7. '%A' → logprob: -4.460696220397949
    8. '%(' → logprob: -5.335696220397949
    9. 'ré' → logprob: -5.835696220397949
    10. 'A' → logprob: -6.085696220397949

Token 241: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4741571247577667
    2. ' %' → logprob: -0.9741570949554443
    3. '%b' → logprob: -10.599157333374023
    4. ' modulo' → logprob: -10.849157333374023
    5. '%d' → logprob: -11.349157333374023
    6. ' ' → logprob: -12.224157333374023
    7. '%n' → logprob: -12.349157333374023
    8. '%B' → logprob: -12.724157333374023
    9. 'mod' → logprob: -12.849157333374023
    10. ' ' → logprob: -13.724157333374023

Token 242: ' (%' (ID: 32540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16869783401489258
    2. ',' → logprob: -3.2936978340148926
    3. 'r' → logprob: -3.5436978340148926
    4. 're' → logprob: -3.5436978340148926
    5. 'rest' → logprob: -3.6686978340148926
    6. '%' → logprob: -4.668697834014893
    7. 'reste' → logprob: -4.918697834014893
    8. ' remainder' → logprob: -5.168697834014893
    9. ' =' → logprob: -6.043697834014893
    10. ' r' → logprob: -6.168697834014893

Token 243: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004626649431884289
    2. '   ' → logprob: -5.754626750946045
    3. ')
' → logprob: -7.129626750946045
    4. ' )' → logprob: -7.379626750946045
    5. ' )
' → logprob: -11.879626274108887
    6. '#' → logprob: -12.629626274108887
    7. ' ' → logprob: -13.129626274108887
    8. '%' → logprob: -13.129626274108887
    9. ',' → logprob: -13.379626274108887
    10. ')

' → logprob: -13.504626274108887

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11706501990556717
    2. ' remainder' → logprob: -3.492064952850342
    3. ' if' → logprob: -3.492064952850342
    4. 're' → logprob: -3.867064952850342
    5. 'r' → logprob: -5.117064952850342
    6. 'reste' → logprob: -5.117064952850342
    7. 'rest' → logprob: -5.367064952850342
    8. ' r' → logprob: -5.617064952850342
    9. ' reste' → logprob: -5.867064952850342
    10. 'if' → logprob: -5.992064952850342

Token 245: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7730998396873474
    2. ' remainder' → logprob: -1.6480998992919922
    3. 're' → logprob: -2.398099899291992
    4. 'if' → logprob: -2.523099899291992
    5. '   ' → logprob: -2.648099899291992
    6. ' r' → logprob: -2.773099899291992
    7. ' reste' → logprob: -4.648099899291992
    8. 'r' → logprob: -4.648099899291992
    9. 'reste' → logprob: -5.023099899291992
    10. 'rest' → logprob: -5.773099899291992

Token 246: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7215358018875122
    2. ' if' → logprob: -1.2215358018875122
    3. 're' → logprob: -1.7215358018875122
    4. ' remainder' → logprob: -3.5965356826782227
    5. 'reste' → logprob: -5.221535682678223
    6. 'r' → logprob: -5.596535682678223
    7. 'rest' → logprob: -6.346535682678223
    8. '   ' → logprob: -6.971535682678223
    9. ' r' → logprob: -7.971535682678223
    10. 'rem' → logprob: -8.346535682678223

Token 247: ' ce' (ID: 2357)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.4742322564125061
    2. 'A' → logprob: -0.9742322564125061
    3. ' (' → logprob: -9.59923267364502
    4. '(A' → logprob: -9.84923267364502
    5. ' ' → logprob: -10.72423267364502
    6. ' ' → logprob: -11.84923267364502
    7. '(' → logprob: -12.97423267364502
    8. '	A' → logprob: -12.97423267364502
    9. '   ' → logprob: -15.34923267364502
    10. '_A' → logprob: -15.72423267364502

Token 248: ' reste' (ID: 26769)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5346623659133911
    2. ' A' → logprob: -0.9096623659133911
    3. '%' → logprob: -5.534662246704102
    4. ' n' → logprob: -6.409662246704102
    5. 'n' → logprob: -6.534662246704102
    6. ' reste' → logprob: -6.784662246704102
    7. ' ' → logprob: -6.909662246704102
    8. ' ' → logprob: -7.534662246704102
    9. 'r' → logprob: -7.784662246704102
    10. 're' → logprob: -7.909662246704102

Token 249: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.21067792177200317
    2. '==' → logprob: -1.7106778621673584
    3. ' est' → logprob: -5.7106781005859375
    4. ' ' → logprob: -6.2106781005859375
    5. 'A' → logprob: -6.3356781005859375
    6. ' A' → logprob: -6.9606781005859375
    7. 'est' → logprob: -8.210678100585938
    8. '=' → logprob: -8.460678100585938
    9. ' ' → logprob: -8.960678100585938
    10. ')' → logprob: -9.210678100585938

Token 250: ' égal' (ID: 15059)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13859766721725464
    2. ' égal' → logprob: -2.3885977268218994
    3. ' ' → logprob: -3.6385977268218994
    4. 'exact' → logprob: -6.01359748840332
    5. 'égal' → logprob: -6.01359748840332
    6. ' nul' → logprob: -6.63859748840332
    7. 'nul' → logprob: -7.01359748840332
    8. ' zéro' → logprob: -7.26359748840332
    9. '==' → logprob: -7.38859748840332
    10. '```' → logprob: -7.63859748840332

Token 251: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.17300890386104584
    2. 'à' → logprob: -1.923008918762207
    3. ' ' → logprob: -5.173008918762207
    4. ' a' → logprob: -5.798008918762207
    5. 'a' → logprob: -5.923008918762207
    6. '0' → logprob: -6.798008918762207
    7. 'A' → logprob: -10.048008918762207
    8. '  ' → logprob: -10.173008918762207
    9. '   ' → logprob: -10.673008918762207
    10. ''à' → logprob: -10.798008918762207

Token 252: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.255233764648438
    4. '  ' → logprob: -19.505233764648438
    5. '1' → logprob: -19.630233764648438
    6. '   ' → logprob: -20.255233764648438
    7. '```' → logprob: -20.880233764648438
    8. ' zéro' → logprob: -21.380233764648438
    9. '۰' → logprob: -21.505233764648438
    10. 'zero' → logprob: -22.255233764648438

Token 253: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '1' → logprob: -15.375066757202148
    4. 'zero' → logprob: -17.62506675720215
    5. '```' → logprob: -17.87506675720215
    6. 'B' → logprob: -18.56256675720215
    7. '   ' → logprob: -18.75006675720215
    8. 'A' → logprob: -18.81256675720215
    9. ' ' → logprob: -19.37506675720215
    10. ' zéro' → logprob: -19.56256675720215

Token 254: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07080873847007751
    2. '   ' → logprob: -3.0708086490631104
    3. ',' → logprob: -4.0708088874816895
    4. ':
' → logprob: -5.8208088874816895
    5. ' :' → logprob: -6.4458088874816895
    6. ' if' → logprob: -8.945808410644531
    7. 'if' → logprob: -9.320808410644531
    8. ' :
' → logprob: -9.945808410644531
    9. ' ,' → logprob: -10.445808410644531
    10. ',
' → logprob: -11.195808410644531

Token 255: ' cela' (ID: 17542)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10858026146888733
    2. '    ' → logprob: -2.8585803508758545
    3. '       ' → logprob: -3.2335803508758545
    4. ':' → logprob: -6.358580112457275
    5. ' if' → logprob: -6.858580112457275
    6. '    
' → logprob: -6.858580112457275
    7. '     
' → logprob: -7.483580112457275
    8. 'if' → logprob: -8.358580589294434
    9. ' 
' → logprob: -8.358580589294434
    10. ' :' → logprob: -8.483580589294434

Token 256: ' signifie' (ID: 81149)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13790717720985413
    2. ' signifie' → logprob: -2.1379072666168213
    3. '   ' → logprob: -4.762907028198242
    4. '       ' → logprob: -7.762907028198242
    5. ' :' → logprob: -7.887907028198242
    6. ' means' → logprob: -8.137907028198242
    7. 'ind' → logprob: -8.262907028198242
    8. ':
' → logprob: -8.512907028198242
    9. ' veut' → logprob: -8.512907028198242
    10. 'sign' → logprob: -8.762907028198242

Token 257: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5242403149604797
    2. ' que' → logprob: -0.8992403149604797
    3. ' that' → logprob: -8.399240493774414
    4. '    ' → logprob: -8.524240493774414
    5. 'A' → logprob: -8.899240493774414
    6. ' A' → logprob: -9.024240493774414
    7. ' ' → logprob: -9.149240493774414
    8. ' qu' → logprob: -9.649240493774414
    9. ':' → logprob: -9.774240493774414
    10. '    
' → logprob: -10.024240493774414

Token 258: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.31328943371772766
    2. 'A' → logprob: -1.3132894039154053
    3. ' (' → logprob: -11.563289642333984
    4. ' ' → logprob: -11.938289642333984
    5. ' ' → logprob: -12.063289642333984
    6. '(A' → logprob: -13.688289642333984
    7. 'n' → logprob: -14.063289642333984
    8. ' le' → logprob: -14.063289642333984
    9. '(' → logprob: -14.313289642333984
    10. ' B' → logprob: -14.688289642333984

Token 259: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.881560041918419e-05
    2. ' _' → logprob: -11.125039100646973
    3. '_,' → logprob: -12.000039100646973
    4. '_=' → logprob: -12.375039100646973
    5. '_%' → logprob: -12.625039100646973
    6. '%' → logprob: -13.250039100646973
    7. '_
' → logprob: -13.375039100646973
    8. ' %' → logprob: -13.875039100646973
    9. '   ' → logprob: -14.250039100646973
    10. ' *' → logprob: -14.375039100646973

Token 260: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.33620697259902954
    2. ' est' → logprob: -1.7112069129943848
    3. ' %' → logprob: -2.4612069129943848
    4. 'est' → logprob: -4.336206912994385
    5. ' is' → logprob: -5.836206912994385
    6. ' divisible' → logprob: -5.961206912994385
    7. 'div' → logprob: -7.711206912994385
    8. '%d' → logprob: -8.961207389831543
    9. '%s' → logprob: -9.461207389831543
    10. '%A' → logprob: -9.711207389831543

Token 261: ' un' (ID: 537)
  Prédit: ' divisible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.03481230512261391
    2. 'div' → logprob: -3.4098122119903564
    3. ' un' → logprob: -7.1598124504089355
    4. ' parfaitement' → logprob: -9.284811973571777
    5. 'multiple' → logprob: -9.534811973571777
    6. ' multiple' → logprob: -9.659811973571777
    7. 'un' → logprob: -10.159811973571777
    8. ' divis' → logprob: -10.534811973571777
    9. 'multip' → logprob: -11.034811973571777
    10. 'exact' → logprob: -11.159811973571777

Token 262: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.10106212645769119
    2. ' multiple' → logprob: -2.351062059402466
    3. 'multip' → logprob: -7.226062297821045
    4. 'div' → logprob: -10.101061820983887
    5. 'ultiple' → logprob: -11.226061820983887
    6. '```' → logprob: -11.601061820983887
    7. '_multiple' → logprob: -11.601061820983887
    8. 'm' → logprob: -11.726061820983887
    9. 'mult' → logprob: -11.976061820983887
    10. 'Multiple' → logprob: -12.226061820983887

Token 263: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1629667431116104
    2. '   ' → logprob: -2.287966728210449
    3. 'de' → logprob: -3.037966728210449
    4. ' ' → logprob: -8.03796672821045
    5. '  ' → logprob: -9.03796672821045
    6. '=' → logprob: -9.41296672821045
    7. '    ' → logprob: -9.53796672821045
    8. ':' → logprob: -10.03796672821045
    9. ' divisible' → logprob: -10.16296672821045
    10. ',' → logprob: -10.28796672821045

Token 264: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.10020741820335388
    2. 'B' → logprob: -2.3502073287963867
    3. ' ' → logprob: -14.350207328796387
    4. ' ' → logprob: -15.600207328796387
    5. '	B' → logprob: -17.225208282470703
    6. '_B' → logprob: -18.225208282470703
    7. '"B' → logprob: -18.350208282470703
    8. 'b' → logprob: -18.725208282470703
    9. '(B' → logprob: -19.850208282470703
    10. '>B' → logprob: -19.850208282470703

Token 265: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.372294698550832e-06
    2. ':' → logprob: -12.250009536743164
    3. ' if' → logprob: -13.375009536743164
    4. '    
' → logprob: -13.375009536743164
    5. 'if' → logprob: -13.875009536743164
    6. '
' → logprob: -15.500009536743164
    7. '  ' → logprob: -17.000009536743164
    8. ':
' → logprob: -17.250009536743164
    9. '   ' → logprob: -17.500009536743164
    10. ',' → logprob: -17.750009536743164

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.034592388459714e-06
    2. '    
' → logprob: -12.750005722045898
    3. 'if' → logprob: -13.625005722045898
    4. ' if' → logprob: -13.750005722045898
    5. '
' → logprob: -14.500005722045898
    6. '```' → logprob: -16.0000057220459
    7. ':' → logprob: -16.2500057220459
    8. '<|end|>' → logprob: -17.6250057220459
    9. '   ' → logprob: -17.7500057220459
    10. ',' → logprob: -18.0000057220459

Token 267: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003633521846495569
    2. 'if' (adapté à ' if') → logprob: -8.25036334991455
    3. ' if' → logprob: -9.25036334991455
    4. '    
' → logprob: -12.37536334991455
    5. '
' → logprob: -13.75036334991455
    6. '    ' → logprob: -15.62536334991455
    7. '   ' → logprob: -15.75036334991455
    8. '  ' → logprob: -16.375364303588867
    9. '	if' → logprob: -16.625364303588867
    10. 'If' → logprob: -16.750364303588867

Token 268: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.023274481296539307
    2. 'A' → logprob: -3.7732744216918945
    3. ' ' → logprob: -11.148274421691895
    4. ' (' → logprob: -11.523274421691895
    5. '(A' → logprob: -12.773274421691895
    6. '	A' → logprob: -13.898274421691895
    7. ' ' → logprob: -14.648274421691895
    8. '   ' → logprob: -15.273274421691895
    9. '(' → logprob: -15.523274421691895
    10. '  ' → logprob: -16.52327537536621

Token 269: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.4849443838757e-06
    2. '_%' → logprob: -12.500004768371582
    3. ' _' → logprob: -14.875004768371582
    4. '%' → logprob: -15.500004768371582
    5. '_*' → logprob: -17.125003814697266
    6. '\' → logprob: -17.500003814697266
    7. ' %' → logprob: -17.500003814697266
    8. '*' → logprob: -17.625003814697266
    9. '_
' → logprob: -17.625003814697266
    10. '_
' → logprob: -17.875003814697266

Token 270: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.023299753665924072
    2. '%' → logprob: -3.7732996940612793
    3. '%B' → logprob: -10.148300170898438
    4. ' ' → logprob: -11.398300170898438
    5. ' ' → logprob: -12.648300170898438
    6. '%A' → logprob: -15.273300170898438
    7. '%b' → logprob: -16.148300170898438
    8. '%e' → logprob: -16.523300170898438
    9. '%E' → logprob: -16.773300170898438
    10. '%s' → logprob: -17.023300170898438

Token 271: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.12692958116531372
    2. 'B' → logprob: -2.126929521560669
    3. ' ' → logprob: -13.50192928314209
    4. ' ' → logprob: -16.126930236816406
    5. '	B' → logprob: -17.001930236816406
    6. '>B' → logprob: -18.001930236816406
    7. '  ' → logprob: -18.251930236816406
    8. '=B' → logprob: -18.626930236816406
    9. '_B' → logprob: -19.251930236816406
    10. '0' → logprob: -19.626930236816406

Token 272: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868825435638428
    2. '==' → logprob: -1.1368825435638428
    3. '=' → logprob: -12.261882781982422
    4. ')==' → logprob: -13.011882781982422
    5. ')' → logprob: -13.386882781982422
    6. ' ' → logprob: -13.886882781982422
    7. ':' → logprob: -14.886882781982422
    8. '()==' → logprob: -15.011882781982422
    9. '```' → logprob: -15.136882781982422
    10. '0' → logprob: -15.261882781982422

Token 273: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014133334159851
    2. ' ' → logprob: -1.7014133930206299
    3. ' ' → logprob: -18.076414108276367
    4. '  ' → logprob: -18.701414108276367
    5. '   ' → logprob: -18.826414108276367
    6. '۰' → logprob: -21.201414108276367
    7. '```' → logprob: -21.826414108276367
    8. '	' → logprob: -22.076414108276367
    9. '=' → logprob: -22.826414108276367
    10. ' ' → logprob: -23.138914108276367

Token 274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '۰' → logprob: -20.625085830688477
    4. '  ' → logprob: -21.000085830688477
    5. '   ' → logprob: -21.000085830688477
    6. ' ' → logprob: -21.500085830688477
    7. '```' → logprob: -22.187585830688477
    8. '00' → logprob: -22.375085830688477
    9. ' ' → logprob: -22.812585830688477
    10. '０' → logprob: -22.937585830688477

Token 275: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017061287071555853
    2. ':
' → logprob: -6.376706123352051
    3. '   ' → logprob: -12.87670612335205
    4. '       ' → logprob: -14.25170612335205
    5. ' :' → logprob: -15.12670612335205
    6. '):' → logprob: -15.37670612335205
    7. ':
' → logprob: -16.751707077026367
    8. ':

' → logprob: -17.626707077026367
    9. '):
' → logprob: -17.751707077026367
    10. ',' → logprob: -18.251707077026367

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.008129963040119e-06
    2. '   ' → logprob: -13.125003814697266
    3. ' print' → logprob: -14.750003814697266
    4. ' break' → logprob: -14.750003814697266
    5. 'print' → logprob: -14.750003814697266
    6. '        
' → logprob: -16.000003814697266
    7. ':' → logprob: -16.000003814697266
    8. '           ' → logprob: -16.375003814697266
    9. '    ' → logprob: -16.375003814697266
    10. '      ' → logprob: -16.625003814697266

Token 277: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044783088378608227
    2. 'print' → logprob: -8.625448226928711
    3. ' break' → logprob: -9.000448226928711
    4. ' print' → logprob: -9.375448226928711
    5. 'break' → logprob: -9.875448226928711
    6. '   ' → logprob: -12.625448226928711
    7. '        
' → logprob: -13.625448226928711
    8. '
' → logprob: -13.875448226928711
    9. '      ' → logprob: -14.125448226928711
    10. '           ' → logprob: -14.250448226928711

Token 278: ' Aff' (ID: 13741)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.734285831451416
    2. 'print' → logprob: -1.359285831451416
    3. ' break' → logprob: -1.734285831451416
    4. '       ' → logprob: -2.734285831451416
    5. 'break' → logprob: -4.109285831451416
    6. '   ' → logprob: -5.234285831451416
    7. '    ' → logprob: -10.734285354614258
    8. '#' → logprob: -10.984285354614258
    9. ' #' → logprob: -11.859285354614258
    10. ' ' → logprob: -12.109285354614258

Token 279: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0009700604132376611
    2. '   ' → logprob: -8.125969886779785
    3. 'iche' → logprob: -8.125969886779785
    4. '#' → logprob: -8.375969886779785
    5. 'cher' → logprob: -10.000969886779785
    6. 'ichage' → logprob: -10.000969886779785
    7. 'f' → logprob: -10.875969886779785
    8. 'ic' → logprob: -11.625969886779785
    9. '```' → logprob: -12.125969886779785
    10. '       ' → logprob: -12.375969886779785

Token 280: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5765432715415955
    2. '(A' → logprob: -0.8265432715415955
    3. '(' → logprob: -8.076542854309082
    4. ' A' → logprob: -8.201542854309082
    5. '(n' → logprob: -12.076542854309082
    6. 'n' → logprob: -12.076542854309082
    7. '(a' → logprob: -12.451542854309082
    8. '   ' → logprob: -13.326542854309082
    9. 'a' → logprob: -13.951542854309082
    10. ' (' → logprob: -14.951542854309082

Token 281: ' valeur' (ID: 41664)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09185969084501266
    2. ' A' → logprob: -2.4668595790863037
    3. 'n' → logprob: -5.966859817504883
    4. ' n' → logprob: -8.966859817504883
    5. '   ' → logprob: -9.466859817504883
    6. 'a' → logprob: -10.341859817504883
    7. 'result' → logprob: -10.716859817504883
    8. 'print' → logprob: -10.841859817504883
    9. ' ' → logprob: -10.966859817504883
    10. '(A' → logprob: -11.091859817504883

Token 282: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.28627753257751465
    2. ' de' → logprob: -1.7862775325775146
    3. 'A' → logprob: -3.0362775325775146
    4. '   ' → logprob: -3.6612775325775146
    5. '       ' → logprob: -5.911277770996094
    6. '(A' → logprob: -6.536277770996094
    7. 'd' → logprob: -6.911277770996094
    8. 'print' → logprob: -7.286277770996094
    9. ' A' → logprob: -7.661277770996094
    10. '(' → logprob: -8.161277770996094

Token 283: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00045164540642872453
    2. ' A' → logprob: -7.750451564788818
    3. 'n' → logprob: -10.875452041625977
    4. '   ' → logprob: -13.375452041625977
    5. '(A' → logprob: -15.375452041625977
    6. ' ' → logprob: -16.000452041625977
    7. ' n' → logprob: -17.375452041625977
    8. 'a' → logprob: -17.500452041625977
    9. '	A' → logprob: -17.500452041625977
    10. '  ' → logprob: -18.125452041625977

Token 284: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.054500666621607e-06
    2. '_,' → logprob: -13.75000286102295
    3. '_
' → logprob: -14.12500286102295
    4. '_
' → logprob: -14.12500286102295
    5. '_

' → logprob: -15.62500286102295
    6. '_:' → logprob: -15.62500286102295
    7. '_)' → logprob: -16.500003814697266
    8. '_=' → logprob: -16.625003814697266
    9. '   ' → logprob: -17.625003814697266
    10. ' _' → logprob: -18.875003814697266

Token 285: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007156368810683489
    2. '   ' → logprob: -5.6321563720703125
    3. 'print' → logprob: -6.0071563720703125
    4. '
' → logprob: -6.8821563720703125
    5. ',' → logprob: -11.007156372070312
    6. '        
' → logprob: -11.382156372070312
    7. ' print' → logprob: -11.507156372070312
    8. '    
' → logprob: -11.507156372070312
    9. ')' → logprob: -11.882156372070312
    10. '.print' → logprob: -13.757156372070312

Token 286: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6293837428092957
    2. 'A' → logprob: -1.5043838024139404
    3. 'print' → logprob: -2.3793838024139404
    4. '   ' → logprob: -2.5043838024139404
    5. ')' → logprob: -4.129383563995361
    6. 'le' → logprob: -4.504383563995361
    7. ' la' → logprob: -4.629383563995361
    8. 'l' → logprob: -4.879383563995361
    9. ' A' → logprob: -5.129383563995361
    10. '(A' → logprob: -5.504383563995361

Token 287: ' sortie' (ID: 52761)
  Prédit: 'console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'console' → logprob: -0.15906772017478943
    2. ' console' → logprob: -2.0340676307678223
    3. 'print' → logprob: -5.159067630767822
    4. 'ligne' → logprob: -5.284067630767822
    5. 'f' → logprob: -6.284067630767822
    6. 'terminal' → logprob: -6.909067630767822
    7. 'screen' → logprob: -7.784067630767822
    8. 'fin' → logprob: -8.15906810760498
    9. ' sortie' → logprob: -8.28406810760498
    10. ' terminal' → logprob: -8.53406810760498

Token 288: ' standard' (ID: 7024)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02990761026740074
    2. '   ' → logprob: -3.904907703399658
    3. ' print' → logprob: -4.779907703399658
    4. 'A' → logprob: -7.654907703399658
    5. ')' → logprob: -9.0299072265625
    6. '()' → logprob: -9.4049072265625
    7. '(' → logprob: -9.5299072265625
    8. '(print' → logprob: -10.0299072265625
    9. ' A' → logprob: -10.5299072265625
    10. '(A' → logprob: -10.6549072265625

Token 289: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2571887671947479
    2. '   ' → logprob: -1.5071887969970703
    3. ' print' → logprob: -6.00718879699707
    4. '       ' → logprob: -6.38218879699707
    5. '
' → logprob: -7.00718879699707
    6. '    
' → logprob: -10.13218879699707
    7. ',' → logprob: -10.25718879699707
    8. '(' → logprob: -10.75718879699707
    9. 'A' → logprob: -10.88218879699707
    10. ':
' → logprob: -11.00718879699707

Token 290: 'ty' (ID: 1206)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10461121052503586
    2. ')' → logprob: -3.3546111583709717
    3. '   ' → logprob: -3.3546111583709717
    4. ' print' → logprob: -3.8546111583709717
    5. 'A' → logprob: -5.354611396789551
    6. ' A' → logprob: -6.479611396789551
    7. 'end' → logprob: -7.479611396789551
    8. '")' → logprob: -7.729611396789551
    9. ' ' → logprob: -8.22961139678955
    10. ' )' → logprob: -8.47961139678955

Token 291: 'pi' (ID: 3455)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.18420524895191193
    2. 'pi' → logprob: -2.4342052936553955
    3. 'pe' → logprob: -2.9342052936553955
    4. 'print' → logprob: -4.809205055236816
    5. 'python' → logprob: -5.059205055236816
    6. 'pé' → logprob: -5.184205055236816
    7. 'po' → logprob: -5.559205055236816
    8. 'py' → logprob: -6.809205055236816
    9. 'pes' → logprob: -7.684205055236816
    10. 'pon' → logprob: -8.434205055236816

Token 292: 'quement' (ID: 42437)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.037446845322847366
    2. 'q' → logprob: -4.037446975708008
    3. 'e' → logprob: -4.162446975708008
    4. 'quement' → logprob: -6.162446975708008
    5. 'c' → logprob: -7.537446975708008
    6. '#' → logprob: -8.037446975708008
    7. 'qu' → logprob: -8.162446975708008
    8. 'ques' → logprob: -8.787446975708008
    9. 'f' → logprob: -10.287446975708008
    10. 'ue' → logprob: -10.287446975708008

Token 293: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6187484264373779
    2. 'la' → logprob: -1.493748426437378
    3. 'l' → logprob: -2.243748426437378
    4. '   ' → logprob: -3.243748426437378
    5. 'console' → logprob: -3.368748426437378
    6. ' l' → logprob: -3.743748426437378
    7. ' console' → logprob: -4.368748664855957
    8. ')' → logprob: -4.618748664855957
    9. 'print' → logprob: -5.868748664855957
    10. ' )' → logprob: -6.368748664855957

Token 294: ''écran' (ID: 147901)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.19798050820827484
    2. 'a' → logprob: -2.1979804039001465
    3. ''écran' → logprob: -3.0729804039001465
    4. 'print' → logprob: -4.0729804039001465
    5. 'console' → logprob: -6.4479804039001465
    6. 'terminal' → logprob: -7.1979804039001465
    7. 'es' → logprob: -7.3229804039001465
    8. '’écran' → logprob: -7.4479804039001465
    9. ''' → logprob: -7.5729804039001465
    10. 'stdout' → logprob: -8.697980880737305

Token 295: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13445350527763367
    2. '   ' → logprob: -2.134453535079956
    3. ')
' → logprob: -5.259453296661377
    4. 'print' → logprob: -6.259453296661377
    5. ',' → logprob: -8.384453773498535
    6. ' )' → logprob: -9.759453773498535
    7. '       ' → logprob: -9.884453773498535
    8. ' print' → logprob: -10.509453773498535
    9. 'A' → logprob: -12.259453773498535
    10. ')
' → logprob: -12.634453773498535

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023457997012883425
    2. 'print' → logprob: -6.127345561981201
    3. ' print' → logprob: -8.75234603881836
    4. '   ' → logprob: -13.62734603881836
    5. '
' → logprob: -14.87734603881836
    6. '```' → logprob: -15.00234603881836
    7. '           ' → logprob: -15.12734603881836
    8. '      ' → logprob: -15.50234603881836
    9. '        
' → logprob: -16.12734603881836
    10. '     ' → logprob: -16.50234603881836

Token 297: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005803416948765516
    2. ' print' → logprob: -5.25580358505249
    3. '       ' → logprob: -7.50580358505249
    4. '   ' → logprob: -10.880803108215332
    5. 'break' → logprob: -14.505803108215332
    6. '```' → logprob: -16.00580406188965
    7. '
' → logprob: -16.88080406188965
    8. ' break' → logprob: -18.00580406188965
    9. '	print' → logprob: -18.00580406188965
    10. 'pr' → logprob: -18.25580406188965

Token 298: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.008615635335445404
    2. '(' → logprob: -4.758615493774414
    3. ' (' → logprob: -14.508615493774414
    4. '()' → logprob: -15.258615493774414
    5. '(
' → logprob: -15.633615493774414
    6. '((' → logprob: -16.258615493774414
    7. '(a' → logprob: -16.383615493774414
    8. 'A' → logprob: -17.633615493774414
    9. '('' → logprob: -17.758615493774414
    10. '(`' → logprob: -18.133615493774414

Token 299: '_)
' (ID: 58066)
  Prédit: '_)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_)' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.750001907348633
    3. '_)
' → logprob: -13.875001907348633
    4. ')' → logprob: -16.250001907348633
    5. '__)' → logprob: -18.500001907348633
    6. '_,' → logprob: -18.750001907348633
    7. '_),' → logprob: -19.250001907348633
    8. '*)' → logprob: -20.000001907348633
    9. ' _)' → logprob: -20.625001907348633
    10. '_]' → logprob: -20.625001907348633

Token 300: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.693236231803894
    2. '       ' → logprob: -0.693236231803894
    3. '    
' → logprob: -9.818236351013184
    4. '        
' → logprob: -11.443236351013184
    5. '
' → logprob: -11.818236351013184
    6. ',' → logprob: -12.818236351013184
    7. '           ' → logprob: -13.318236351013184
    8. 'n' → logprob: -13.443236351013184
    9. '     ' → logprob: -13.443236351013184
    10. '	break' → logprob: -13.693236351013184

Token 301: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044532763422466815
    2. '   ' → logprob: -8.125445365905762
    3. ' break' → logprob: -9.500445365905762
    4. 'break' → logprob: -9.625445365905762
    5. '
' → logprob: -12.625445365905762
    6. '	break' → logprob: -13.125445365905762
    7. '        
' → logprob: -13.875445365905762
    8. '      ' → logprob: -14.250445365905762
    9. '    
' → logprob: -15.000445365905762
    10. 'n' → logprob: -15.250445365905762

Token 302: ' Arr' (ID: 16880)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.00193149340339005
    2. ' break' → logprob: -6.251931667327881
    3. '   ' → logprob: -12.751931190490723
    4. '	break' → logprob: -16.87693214416504
    5. '       ' → logprob: -17.50193214416504
    6. 'Break' → logprob: -18.12693214416504
    7. 'BREAK' → logprob: -18.50193214416504
    8. 'b' → logprob: -19.00193214416504
    9. '_break' → logprob: -19.12693214416504
    10. 'br' → logprob: -19.50193214416504

Token 303: 'êter' (ID: 73125)
  Prédit: 'êter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êter' → logprob: -0.3170323073863983
    2. 'et' → logprob: -2.1920323371887207
    3. 'êt' → logprob: -2.3170323371887207
    4. 'e' → logprob: -3.1920323371887207
    5. 'ek' → logprob: -5.692032337188721
    6. 'ête' → logprob: -6.067032337188721
    7. 'eter' → logprob: -6.067032337188721
    8. 'iver' → logprob: -6.192032337188721
    9. 'ec' → logprob: -6.317032337188721
    10. 'etter' → logprob: -6.692032337188721

Token 304: ' immédiatement' (ID: 100743)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9128315448760986
    2. '   ' → logprob: -1.2878315448760986
    3. 'le' → logprob: -1.6628315448760986
    4. 'break' → logprob: -2.7878315448760986
    5. 'la' → logprob: -3.4128315448760986
    6. 'l' → logprob: -4.5378313064575195
    7. ' le' → logprob: -4.5378313064575195
    8. '    ' → logprob: -5.5378313064575195
    9. '    
' → logprob: -5.7878313064575195
    10. ' l' → logprob: -6.0378313064575195

Token 305: ' l' (ID: 305)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.8541682958602905
    2. ' la' → logprob: -1.6041682958602905
    3. 'le' → logprob: -1.7291682958602905
    4. '   ' → logprob: -2.10416841506958
    5. 'la' → logprob: -3.10416841506958
    6. ' le' → logprob: -4.22916841506958
    7. 'l' → logprob: -4.97916841506958
    8. ' break' → logprob: -5.22916841506958
    9. '    
' → logprob: -7.10416841506958
    10. ' l' → logprob: -7.72916841506958

Token 306: ''ex' (ID: 23472)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01820262521505356
    2. 'e' → logprob: -4.018202781677246
    3. ''ex' → logprob: -10.393202781677246
    4. 'а' → logprob: -12.518202781677246
    5. 'la' → logprob: -12.643202781677246
    6. ''a' → logprob: -13.018202781677246
    7. ''arrêt' → logprob: -13.143202781677246
    8. ' boucle' → logprob: -13.268202781677246
    9. '```' → logprob: -13.643202781677246
    10. 'es' → logprob: -13.768202781677246

Token 307: 'écution' (ID: 122423)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00010485442908247933
    2. 'ec' → logprob: -9.375104904174805
    3. ' it' → logprob: -12.500104904174805
    4. 'if' → logprob: -12.750104904174805
    5. 'ıt' → logprob: -12.875104904174805
    6. 'ecution' → logprob: -13.750104904174805
    7. 'ite' → logprob: -13.750104904174805
    8. 'e' → logprob: -13.875104904174805
    9. 'exit' → logprob: -14.000104904174805
    10. 'xit' → logprob: -14.125104904174805

Token 308: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08752021938562393
    2. '       ' → logprob: -2.587520122528076
    3. 'break' → logprob: -5.462520122528076
    4. '    
' → logprob: -6.587520122528076
    5. '           ' → logprob: -6.837520122528076
    6. '    ' → logprob: -7.462520122528076
    7. ' break' → logprob: -7.587520122528076
    8. '  ' → logprob: -8.462520599365234
    9. '	break' → logprob: -9.337520599365234
    10. '.' → logprob: -9.712520599365234

Token 309: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.25873517990112305
    2. 'while' → logprob: -1.633735179901123
    3. 'bou' → logprob: -4.258735179901123
    4. 'loop' → logprob: -5.008735179901123
    5. 'program' → logprob: -5.258735179901123
    6. ' programme' → logprob: -5.383735179901123
    7. 'break' → logprob: -6.758735179901123
    8. 'code' → logprob: -8.383735656738281
    9. ' boucle' → logprob: -8.383735656738281
    10. ' while' → logprob: -8.758735656738281

Token 310: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017684705089777708
    2. 'break' → logprob: -6.876768589019775
    3. ' break' → logprob: -7.501768589019775
    4. '   ' → logprob: -9.376768112182617
    5. '
' → logprob: -9.876768112182617
    6. '        
' → logprob: -10.751768112182617
    7. '           ' → logprob: -11.376768112182617
    8. '	break' → logprob: -12.376768112182617
    9. '    
' → logprob: -12.626768112182617
    10. '      ' → logprob: -13.251768112182617

Token 311: ' appel' (ID: 34642)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.14682121574878693
    2. ' break' → logprob: -2.0218212604522705
    3. '   ' → logprob: -5.521821022033691
    4. 'br' → logprob: -10.271821022033691
    5. 'breaking' → logprob: -11.021821022033691
    6. 'breaker' → logprob: -11.271821022033691
    7. '  ' → logprob: -11.396821022033691
    8. '```' → logprob: -11.646821022033691
    9. '_break' → logprob: -11.771821022033691
    10. 'rupt' → logprob: -11.896821022033691

Token 312: 'ant' (ID: 493)
  Prédit: 'ng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -1.0504781007766724
    2. 'tant' → logprob: -1.0504781007766724
    3. 'ant' → logprob: -2.050477981567383
    4. 't' → logprob: -2.425477981567383
    5. 'nt' → logprob: -2.550477981567383
    6. 'ter' → logprob: -6.925477981567383
    7. 'nant' → logprob: -7.175477981567383
    8. 'vant' → logprob: -7.300477981567383
    9. 'tan' → logprob: -7.675477981567383
    10. 'çant' → logprob: -8.050477981567383

Token 313: ' la' (ID: 557)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -2.7968066206085496e-05
    2. ' break' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.125027656555176
    4. '```' → logprob: -16.375028610229492
    5. 'exit' → logprob: -17.250028610229492
    6. '	break' → logprob: -17.750028610229492
    7. '_break' → logprob: -18.250028610229492
    8. 'le' → logprob: -19.000028610229492
    9. 'Break' → logprob: -19.750028610229492
    10. 'breaking' → logprob: -19.750028610229492

Token 314: ' fonction' (ID: 17610)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0001238004770129919
    2. ' break' → logprob: -9.000123977661133
    3. 'exit' → logprob: -15.375123977661133
    4. '```' → logprob: -16.875123977661133
    5. '
' → logprob: -17.500123977661133
    6. 'b' → logprob: -17.625123977661133
    7. 'br' → logprob: -17.875123977661133
    8. '	break' → logprob: -18.375123977661133
    9. '_break' → logprob: -18.625123977661133
    10. '   ' → logprob: -18.875123977661133

Token 315: ' exit' (ID: 10654)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.00012821101699955761
    2. ' break' → logprob: -9.000127792358398
    3. 'exit' → logprob: -12.250127792358398
    4. '_break' → logprob: -17.8751277923584
    5. '```' → logprob: -17.8751277923584
    6. '	break' → logprob: -18.2501277923584
    7. 'quit' → logprob: -19.3751277923584
    8. 'BREAK' → logprob: -20.0001277923584
    9. 'b' → logprob: -20.3751277923584
    10. 'return' → logprob: -20.5001277923584

Token 316: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.9888433093437925e-05
    2. '()
' → logprob: -10.375040054321289
    3. '(' → logprob: -12.250040054321289
    4. '()`' → logprob: -13.500040054321289
    5. '()

' → logprob: -14.000040054321289
    6. '())' → logprob: -14.250040054321289
    7. ' ()' → logprob: -15.500040054321289
    8. '()\' → logprob: -15.750040054321289
    9. '().' → logprob: -15.875040054321289
    10. '()
' → logprob: -16.00004005432129

Token 317: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013891622656956315
    2. 'exit' → logprob: -7.126389026641846
    3. '()
' → logprob: -8.126389503479004
    4. '       ' → logprob: -8.376389503479004
    5. '(exit' → logprob: -10.751389503479004
    6. '   ' → logprob: -11.251389503479004
    7. '())' → logprob: -11.501389503479004
    8. ' exit' → logprob: -12.126389503479004
    9. '();' → logprob: -12.876389503479004
    10. '()\' → logprob: -13.376389503479004

Token 318: ' #' (ID: 1069)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.006716436706483364
    2. 'break' → logprob: -5.006716251373291
    3. ' exit' → logprob: -14.13171672821045
    4. ' break' → logprob: -16.006715774536133
    5. '   ' → logprob: -16.256715774536133
    6. '	exit' → logprob: -16.506715774536133
    7. '       ' → logprob: -17.756715774536133
    8. 'import' → logprob: -18.256715774536133
    9. '	break' → logprob: -18.881715774536133
    10. 'EXIT' → logprob: -19.256715774536133

Token 319: ' Cela' (ID: 44403)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.028712470084428787
    2. 'break' → logprob: -3.778712511062622
    3. '       ' → logprob: -5.278712272644043
    4. ' exit' → logprob: -8.528712272644043
    5. ' break' → logprob: -9.278712272644043
    6. '   ' → logprob: -9.778712272644043
    7. '	exit' → logprob: -12.778712272644043
    8. '	break' → logprob: -14.028712272644043
    9. '_exit' → logprob: -15.153712272644043
    10. '           ' → logprob: -15.528712272644043

Token 320: ' termine' (ID: 76900)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2360195517539978
    2. '()' → logprob: -1.7360196113586426
    3. ' )' → logprob: -4.236019611358643
    4. ' exit' → logprob: -5.111019611358643
    5. '())' → logprob: -5.986019611358643
    6. ' break' → logprob: -6.236019611358643
    7. 'exit' → logprob: -6.361019611358643
    8. ' permet' → logprob: -7.111019611358643
    9. 'break' → logprob: -7.361019611358643
    10. '(exit' → logprob: -7.486019611358643

Token 321: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010197096271440387
    2. ')' → logprob: -7.126019477844238
    3. '(' → logprob: -9.001019477844238
    4. '())' → logprob: -10.001019477844238
    5. '(n' → logprob: -10.376019477844238
    6. '()
' → logprob: -12.376019477844238
    7. 'the' → logprob: -12.751019477844238
    8. 'n' → logprob: -13.126019477844238
    9. 'la' → logprob: -13.251019477844238
    10. 'le' → logprob: -13.376019477844238

Token 322: ' script' (ID: 11713)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.08041312545537949
    2. 'program' → logprob: -2.9554131031036377
    3. ' programme' → logprob: -3.9554131031036377
    4. 'while' → logprob: -5.580413341522217
    5. 'bou' → logprob: -6.455413341522217
    6. 'loop' → logprob: -8.705412864685059
    7. 'script' → logprob: -9.080412864685059
    8. ' program' → logprob: -9.080412864685059
    9. 'process' → logprob: -9.705412864685059
    10. ' boucle' → logprob: -9.830412864685059

Token 323: ' même' (ID: 9679)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009066991042345762
    2. '   ' → logprob: -7.375906467437744
    3. '()
' → logprob: -8.875906944274902
    4. ')' → logprob: -9.750906944274902
    5. 'exit' → logprob: -10.375906944274902
    6. '       ' → logprob: -10.625906944274902
    7. '())' → logprob: -10.875906944274902
    8. '(' → logprob: -12.875906944274902
    9. '(exit' → logprob: -13.000906944274902
    10. '();' → logprob: -13.750906944274902

Token 324: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.047378420829773
    2. ' ici' → logprob: -1.672378420829773
    3. 'if' → logprob: -2.4223785400390625
    4. 'import' → logprob: -2.5473785400390625
    5. ' sans' → logprob: -2.9223785400390625
    6. 'avant' → logprob: -2.9223785400390625
    7. ' if' → logprob: -3.2973785400390625
    8. 'n' → logprob: -3.2973785400390625
    9. 'sans' → logprob: -4.1723785400390625
    10. ' avant' → logprob: -4.4223785400390625

Token 325: ' d' (ID: 272)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0353184938430786
    2. ' True' → logprob: -1.6603184938430786
    3. 'True' → logprob: -2.160318374633789
    4. 'la' → logprob: -2.285318374633789
    5. ' la' → logprob: -2.535318374633789
    6. ' n' → logprob: -2.785318374633789
    7. ' the' → logprob: -3.535318374633789
    8. 'the' → logprob: -4.285318374633789
    9. 'le' → logprob: -4.410318374633789
    10. 'not' → logprob: -4.910318374633789

Token 326: ''autres' (ID: 38753)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.3724017143249512
    2. ''autres' → logprob: -1.3724017143249512
    3. 'e' → logprob: -1.6224017143249512
    4. 'ans' → logprob: -1.7474017143249512
    5. 'emain' → logprob: -3.122401714324951
    6. 'eux' → logprob: -3.747401714324951
    7. 'onc' → logprob: -4.747401714324951
    8. 'a' → logprob: -4.997401714324951
    9. ''autre' → logprob: -4.997401714324951
    10. 'es' → logprob: -5.622401714324951

Token 327: ' instructions' (ID: 15543)
  Prédit: 'instructions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'instructions' → logprob: -0.5286351442337036
    2. ' instructions' → logprob: -2.028635025024414
    3. '#' → logprob: -2.403635025024414
    4. 'code' → logprob: -2.903635025024414
    5. 'codes' → logprob: -3.528635025024414
    6. 'part' → logprob: -3.653635025024414
    7. 'l' → logprob: -3.903635025024414
    8. 'lines' → logprob: -4.028635025024414
    9. ' lignes' → logprob: -4.403635025024414
    10. ' code' → logprob: -4.903635025024414

Token 328: ' suivent' (ID: 185529)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.13185417652130127
    2. 's' → logprob: -3.3818540573120117
    3. 'exist' → logprob: -3.6318540573120117
    4. '#' → logprob: -4.256854057312012
    5. ' suivent' → logprob: -4.506854057312012
    6. 'existent' → logprob: -4.756854057312012
    7. 'ex' → logprob: -4.881854057312012
    8. ' existent' → logprob: -5.506854057312012
    9. ' exist' → logprob: -5.631854057312012
    10. 'rest' → logprob: -5.756854057312012

Token 329: ' après' (ID: 16460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13942208886146545
    2. 'exit' → logprob: -3.0144221782684326
    3. '       ' → logprob: -3.6394221782684326
    4. '()' → logprob: -3.7644221782684326
    5. ')' → logprob: -3.8894221782684326
    6. '(exit' → logprob: -4.7644219398498535
    7. '(' → logprob: -7.2644219398498535
    8. ' exit' → logprob: -7.6394219398498535
    9. '()
' → logprob: -7.6394219398498535
    10. '    
' → logprob: -8.139422416687012

Token 330: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08260487020015717
    2. ')' → logprob: -2.7076048851013184
    3. 'exit' → logprob: -5.332604885101318
    4. '   ' → logprob: -5.582604885101318
    5. '())' → logprob: -6.332604885101318
    6. '(' → logprob: -7.082604885101318
    7. '()
' → logprob: -7.457604885101318
    8. 'n' → logprob: -8.20760440826416
    9. '(n' → logprob: -8.33260440826416
    10. '(exit' → logprob: -8.95760440826416

Token 331: ' boucle' (ID: 174211)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.23015740513801575
    2. 'break' → logprob: -1.7301573753356934
    3. 'while' → logprob: -4.230157375335693
    4. 'print' → logprob: -4.355157375335693
    5. 'bou' → logprob: -8.355157852172852
    6. ' exit' → logprob: -8.480157852172852
    7. ' break' → logprob: -8.730157852172852
    8. 'if' → logprob: -9.480157852172852
    9. '```' → logprob: -9.480157852172852
    10. '#' → logprob: -9.980157852172852

Token 332: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17602919042110443
    2. '   ' → logprob: -2.3010292053222656
    3. '       ' → logprob: -3.5510292053222656
    4. '()
' → logprob: -3.6760292053222656
    5. 'exit' → logprob: -5.801029205322266
    6. ')' → logprob: -5.801029205322266
    7. '(exit' → logprob: -7.426029205322266
    8. ' exit' → logprob: -8.551029205322266
    9. '(' → logprob: -8.801029205322266
    10. '())' → logprob: -9.551029205322266

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09249979257583618
    2. 'exit' → logprob: -2.5924997329711914
    3. ' exit' → logprob: -4.592499732971191
    4. '   ' → logprob: -5.717499732971191
    5. 'break' → logprob: -10.092499732971191
    6. '	exit' → logprob: -10.842499732971191
    7. ' break' → logprob: -11.092499732971191
    8. '(exit' → logprob: -11.967499732971191
    9. '        
' → logprob: -12.592499732971191
    10. '_exit' → logprob: -12.592499732971191

Token 334: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -3.404745439183898e-05
    2. ' exit' → logprob: -10.50003433227539
    3. 'break' → logprob: -12.37503433227539
    4. '   ' → logprob: -13.12503433227539
    5. '	exit' → logprob: -15.87503433227539
    6. '       ' → logprob: -16.37503433227539
    7. '(exit' → logprob: -17.87503433227539
    8. '.exit' → logprob: -18.00003433227539
    9. ' break' → logprob: -18.37503433227539
    10. '_exit' → logprob: -18.75003433227539

Token 335: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.843177233240567e-05
    2. '(' → logprob: -11.250018119812012
    3. '()
' → logprob: -12.375018119812012
    4. '())' → logprob: -14.750018119812012
    5. '()

' → logprob: -14.875018119812012
    6. ' ()' → logprob: -15.750018119812012
    7. '()`' → logprob: -16.500019073486328
    8. '()]' → logprob: -16.750019073486328
    9. '().' → logprob: -17.625019073486328
    10. '()>' → logprob: -17.750019073486328

Token 336: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5931234359741211
    2. 'n' → logprob: -0.9681234359741211
    3. '
' → logprob: -3.218123435974121
    4. '    
' → logprob: -4.218123435974121
    5. ' 
' → logprob: -4.843123435974121
    6. ' n' → logprob: -6.343123435974121
    7. '\n' → logprob: -6.718123435974121
    8. '  
' → logprob: -7.093123435974121
    9. '   
' → logprob: -7.343123435974121
    10. '    ' → logprob: -8.843123435974121

Token 337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47452154755592346
    2. 'n' → logprob: -0.9745215177536011
    3. ' n' → logprob: -8.22452163696289
    4. '    
' → logprob: -8.84952163696289
    5. '	n' → logprob: -11.47452163696289
    6. '
' → logprob: -12.09952163696289
    7. '  ' → logprob: -12.22452163696289
    8. ' 
' → logprob: -12.34952163696289
    9. '   
' → logprob: -12.84952163696289
    10. '  
' → logprob: -12.97452163696289

Token 338: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002238013403257355
    2. '   ' → logprob: -8.500224113464355
    3. ' n' → logprob: -11.250224113464355
    4. '    
' → logprob: -12.500224113464355
    5. '
' → logprob: -12.750224113464355
    6. '#' (adapté à ' #') → logprob: -14.750224113464355
    7. ' 
' → logprob: -16.25022315979004
    8. '  
' → logprob: -16.75022315979004
    9. '	n' → logprob: -16.75022315979004
    10. '   
' → logprob: -17.37522315979004

Token 339: ' Si' (ID: 7832)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.5776860184123507e-06
    2. ' n' → logprob: -13.50000286102295
    3. '   ' → logprob: -14.75000286102295
    4. '#' → logprob: -14.75000286102295
    5. '
' → logprob: -15.12500286102295
    6. '    
' → logprob: -18.625001907348633
    7. '	n' → logprob: -19.000001907348633
    8. ' ' → logprob: -19.375001907348633
    9. ' 
' → logprob: -20.000001907348633
    10. '

' → logprob: -20.000001907348633

Token 340: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21419568359851837
    2. ' n' → logprob: -1.839195728302002
    3. ' not' → logprob: -4.089195728302002
    4. 'not' → logprob: -5.339195728302002
    5. 'A' → logprob: -5.464195728302002
    6. '   ' → logprob: -6.714195728302002
    7. '#' → logprob: -6.964195728302002
    8. 'else' → logprob: -7.089195728302002
    9. ' la' → logprob: -7.464195728302002
    10. 'la' → logprob: -7.589195728302002

Token 341: ' reste' (ID: 26769)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.056365977972745895
    2. 'else' → logprob: -3.681365966796875
    3. 'A' → logprob: -4.681365966796875
    4. ' n' → logprob: -5.181365966796875
    5. '#' → logprob: -5.931365966796875
    6. 'if' → logprob: -6.056365966796875
    7. 'not' → logprob: -6.181365966796875
    8. 'reste' → logprob: -6.431365966796875
    9. 'rest' → logprob: -6.806365966796875
    10. 'condition' → logprob: -6.806365966796875

Token 342: ' n' (ID: 297)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.21758858859539032
    2. '!=' → logprob: -1.7175885438919067
    3. '   ' → logprob: -4.342588424682617
    4. '>' → logprob: -7.217588424682617
    5. ' n' → logprob: -7.592588424682617
    6. ' ==' → logprob: -8.092588424682617
    7. 'else' → logprob: -8.217588424682617
    8. ':' → logprob: -8.342588424682617
    9. '%' → logprob: -8.592588424682617
    10. 'n' → logprob: -8.717588424682617

Token 343: ''est' (ID: 6616)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.1252151727676392
    2. 'n' → logprob: -1.2502151727676392
    3. '#' → logprob: -2.0002150535583496
    4. 'est' → logprob: -2.1252150535583496
    5. ''est' → logprob: -2.3752150535583496
    6. 'e' → logprob: -4.75021505355835
    7. ''' → logprob: -5.00021505355835
    8. '   ' → logprob: -5.12521505355835
    9. ' !=' → logprob: -5.25021505355835
    10. '%' → logprob: -5.25021505355835

Token 344: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0009408812038600445
    2. ' pas' → logprob: -7.250940799713135
    3. '#' → logprob: -8.500941276550293
    4. 'Pas' → logprob: -11.125941276550293
    5. '_pas' → logprob: -12.000941276550293
    6. 'not' → logprob: -12.750941276550293
    7. '>' → logprob: -13.625941276550293
    8. 'PAS' → logprob: -14.375941276550293
    9. '...' → logprob: -14.750941276550293
    10. '=' → logprob: -15.625941276550293

Token 345: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003603036515414715
    2. 'égal' → logprob: -6.503602981567383
    3. 'pas' → logprob: -7.003602981567383
    4. '=' → logprob: -7.878602981567383
    5. '==' → logprob: -8.003602981567383
    6. ' égal' → logprob: -8.753602981567383
    7. 'nul' → logprob: -9.003602981567383
    8. 'zero' → logprob: -9.128602981567383
    9. 'equal' → logprob: -10.753602981567383
    10. ' ' → logprob: -11.378602981567383

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7261068224906921
    2. '   ' → logprob: -0.7261068224906921
    3. ':' → logprob: -3.851106882095337
    4. 'n' → logprob: -4.851106643676758
    5. ':
' → logprob: -6.226106643676758
    6. ' n' → logprob: -7.476106643676758
    7. ',
' → logprob: -8.351106643676758
    8. ',n' → logprob: -8.476106643676758
    9. '
' → logprob: -9.101106643676758
    10. '    
' → logprob: -9.226106643676758

Token 347: ' augmenter' (ID: 114677)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18952997028827667
    2. 'n' → logprob: -2.0645298957824707
    3. ' n' → logprob: -3.4395298957824707
    4. '#' → logprob: -4.314529895782471
    5. ' #' → logprob: -8.689530372619629
    6. '    
' → logprob: -9.689530372619629
    7. '  ' → logprob: -10.064530372619629
    8. ' ' → logprob: -10.814530372619629
    9. '    ' → logprob: -11.564530372619629
    10. '
' → logprob: -11.939530372619629

Token 348: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931570172309875
    2. ' n' → logprob: -0.6931570172309875
    3. '	n' → logprob: -12.818157196044922
    4. ' ' → logprob: -12.943157196044922
    5. 'l' → logprob: -13.568157196044922
    6. ' la' → logprob: -13.693157196044922
    7. '   ' → logprob: -14.318157196044922
    8. ' ' → logprob: -14.943157196044922
    9. '(n' → logprob: -15.068157196044922
    10. 'la' → logprob: -15.318157196044922

Token 349: ' valeur' (ID: 41664)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00043472214019857347
    2. ' n' → logprob: -7.750434875488281
    3. '
' → logprob: -13.500434875488281
    4. '\n' → logprob: -13.875434875488281
    5. ' ' → logprob: -14.750434875488281
    6. '   ' → logprob: -14.875434875488281
    7. '	n' → logprob: -15.125434875488281
    8. ' ' → logprob: -15.625434875488281
    9. '```' → logprob: -16.12543487548828
    10. 'val' → logprob: -16.25043487548828

Token 350: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3305164575576782
    2. 'n' → logprob: -1.8305164575576782
    3. 'de' → logprob: -2.2055163383483887
    4. ' n' → logprob: -4.705516338348389
    5. '   ' → logprob: -6.330516338348389
    6. ' ' → logprob: -9.955516815185547
    7. '  ' → logprob: -11.205516815185547
    8. '(n' → logprob: -12.330516815185547
    9. '    
' → logprob: -12.455516815185547
    10. '    ' → logprob: -12.580516815185547

Token 351: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07889165729284286
    2. ' n' → logprob: -2.5788917541503906
    3. ' ' → logprob: -13.70389175415039
    4. ' ' → logprob: -14.32889175415039
    5. '	n' → logprob: -15.32889175415039
    6. '1' → logprob: -17.07889175415039
    7. '```' → logprob: -18.82889175415039
    8. 'l' → logprob: -18.95389175415039
    9. '   ' → logprob: -18.95389175415039
    10. '_n' → logprob: -19.32889175415039

Token 352: ' de' (ID: 334)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5775302052497864
    2. ' +=' → logprob: -0.8275302052497864
    3. '   ' → logprob: -7.577530384063721
    4. '=' → logprob: -7.827530384063721
    5. 'n' → logprob: -7.827530384063721
    6. '+' → logprob: -9.077529907226562
    7. ' by' → logprob: -9.952529907226562
    8. ' n' → logprob: -10.202529907226562
    9. ']+=' → logprob: -10.577529907226562
    10. ' de' → logprob: -11.452529907226562

Token 353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054885219782590866
    2. ' ' → logprob: -2.929885149002075
    3. ' ' → logprob: -13.804884910583496
    4. '+' → logprob: -14.304884910583496
    5. '   ' → logprob: -14.429884910583496
    6. '```' → logprob: -14.554884910583496
    7. ' +' → logprob: -16.054885864257812
    8. '  ' → logprob: -17.179885864257812
    9. ' one' → logprob: -17.429885864257812
    10. '=' → logprob: -17.679885864257812

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -18.125553131103516
    4. ' ' → logprob: -18.125553131103516
    5. '  ' → logprob: -18.625553131103516
    6. '```' → logprob: -18.625553131103516
    7. '+' → logprob: -19.000553131103516
    8. '１' → logprob: -20.625553131103516
    9. 'un' → logprob: -20.750553131103516
    10. '.' → logprob: -21.125553131103516

Token 355: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47852176427841187
    2. 'n' → logprob: -0.9785217642784119
    3. '
' → logprob: -6.103521823883057
    4. ' n' → logprob: -6.478521823883057
    5. '    
' → logprob: -7.478521823883057
    6. ' 
' → logprob: -10.353521347045898
    7. '	n' → logprob: -10.603521347045898
    8. '  
' → logprob: -11.228521347045898
    9. '\n' → logprob: -11.603521347045898
    10. '   
' → logprob: -11.728521347045898

Token 356: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4816545844078064
    2. ' n' → logprob: -0.9816545844078064
    3. '1' → logprob: -4.981654644012451
    4. ' ' → logprob: -7.356654644012451
    5. ' +=' → logprob: -10.731654167175293
    6. '+=' → logprob: -12.481654167175293
    7. ' un' → logprob: -13.106654167175293
    8. '2' → logprob: -13.231654167175293
    9. '+' → logprob: -13.356654167175293
    10. ' une' → logprob: -13.481654167175293

Token 357: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5762075185775757
    2. ' +=' → logprob: -0.8262075185775757
    3. '+' → logprob: -8.576207160949707
    4. '=' → logprob: -9.576207160949707
    5. ' =' → logprob: -12.826207160949707
    6. '+='' → logprob: -13.076207160949707
    7. '+="' → logprob: -13.451207160949707
    8. ' +' → logprob: -13.826207160949707
    9. ']+=' → logprob: -13.826207160949707
    10. ' ' → logprob: -13.951207160949707

Token 358: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16022524237632751
    2. ' ' → logprob: -1.91022527217865
    3. ' ' → logprob: -14.035224914550781
    4. '   ' → logprob: -16.66022491455078
    5. '```' → logprob: -16.78522491455078
    6. ' n' → logprob: -17.66022491455078
    7. '<|end|>' → logprob: -17.91022491455078
    8. 'n' → logprob: -17.91022491455078
    9. '  ' → logprob: -18.41022491455078
    10. '.' → logprob: -19.34772491455078

Token 359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.000158309936523
    4. '```' → logprob: -19.500158309936523
    5. '  ' → logprob: -19.875158309936523
    6. ' ' → logprob: -21.500158309936523
    7. '۱' → logprob: -21.625158309936523
    8. 'n' → logprob: -22.062658309936523
    9. '.' → logprob: -22.250158309936523
    10. '１' → logprob: -22.312658309936523

Token 360: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6495183706283569
    2. '   ' → logprob: -0.7745183706283569
    3. ' n' → logprob: -4.8995184898376465
    4. '<|end|>' → logprob: -4.8995184898376465
    5. '	n' → logprob: -7.8995184898376465
    6. '\n' → logprob: -7.8995184898376465
    7. ' ' → logprob: -8.274518013000488
    8. '  ' → logprob: -8.774518013000488
    9. ')n' → logprob: -8.774518013000488
    10. '    
' → logprob: -9.024518013000488

Token 361: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2023945152759552
    2. '   ' → logprob: -1.7023944854736328
    3. ' n' → logprob: -6.952394485473633
    4. '	n' → logprob: -11.077394485473633
    5. '<|end|>' → logprob: -12.952394485473633
    6. '    
' → logprob: -13.327394485473633
    7. ')n' → logprob: -14.202394485473633
    8. ')' → logprob: -14.327394485473633
    9. '    ' → logprob: -14.577394485473633
    10. '\n' → logprob: -14.577394485473633

Token 362: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006396192125976086
    2. ' n' → logprob: -5.631396293640137
    3. '   ' → logprob: -5.881396293640137
    4. '	n' → logprob: -14.131396293640137
    5. ' ' → logprob: -15.131396293640137
    6. '  ' → logprob: -15.756396293640137
    7. '    ' → logprob: -16.13139533996582
    8. '\n' → logprob: -16.75639533996582
    9. ' 
' → logprob: -17.25639533996582
    10. '    
' → logprob: -17.63139533996582

Token 363: ' Cela' (ID: 44403)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007057046052068472
    2. ' n' → logprob: -5.007057189941406
    3. '   ' → logprob: -8.007057189941406
    4. ' 
' → logprob: -12.132057189941406
    5. '	n' → logprob: -14.132057189941406
    6. '    
' → logprob: -14.257057189941406
    7. '\n' → logprob: -14.257057189941406
    8. ' ' → logprob: -14.882057189941406
    9. '
' → logprob: -15.507057189941406
    10. '    ' → logprob: -15.507057189941406

Token 364: ' permet' (ID: 11798)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.1064220666885376
    2. 'n' → logprob: -1.4814220666885376
    3. '+=' → logprob: -2.231421947479248
    4. ' n' → logprob: -2.231421947479248
    5. '   ' → logprob: -2.356421947479248
    6. ' permet' → logprob: -3.606421947479248
    7. ' permettra' → logprob: -3.731421947479248
    8. '    ' → logprob: -4.606421947479248
    9. 'contin' → logprob: -4.606421947479248
    10. '    
' → logprob: -4.856421947479248

Token 365: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7431632876396179
    2. ' de' → logprob: -1.3681633472442627
    3. 'n' → logprob: -2.2431633472442627
    4. 'd' → logprob: -2.7431633472442627
    5. 'de' → logprob: -2.8681633472442627
    6. ' n' → logprob: -3.3681633472442627
    7. '   ' → logprob: -4.993163108825684
    8. '    ' → logprob: -7.368163108825684
    9. ' ' → logprob: -8.743163108825684
    10. '  ' → logprob: -8.868163108825684

Token 366: ' vérifier' (ID: 93671)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1926538050174713
    2. ' n' → logprob: -1.817653775215149
    3. ' continuer' → logprob: -5.442653656005859
    4. 'increment' → logprob: -6.067653656005859
    5. ' augmenter' → logprob: -6.192653656005859
    6. ' increment' → logprob: -6.817653656005859
    7. 'contin' → logprob: -7.192653656005859
    8. 'in' → logprob: -7.442653656005859
    9. '   ' → logprob: -7.817653656005859
    10. ' incre' → logprob: -8.06765365600586

Token 367: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6947037577629089
    2. ' n' → logprob: -0.6947037577629089
    3. '   ' → logprob: -7.319703578948975
    4. ' que' → logprob: -7.694703578948975
    5. ' ' → logprob: -9.319704055786133
    6. ' ' → logprob: -9.694704055786133
    7. ' la' → logprob: -9.819704055786133
    8. 'la' → logprob: -9.944704055786133
    9. '	n' → logprob: -10.319704055786133
    10. 'une' → logprob: -10.944704055786133

Token 368: ' prochain' (ID: 52413)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6120243668556213
    2. ' suivant' → logprob: -1.8620243072509766
    3. ' prochain' → logprob: -2.3620243072509766
    4. 'pro' → logprob: -2.6120243072509766
    5. 'su' → logprob: -2.6120243072509766
    6. ' n' → logprob: -3.2370243072509766
    7. 'next' → logprob: -5.112024307250977
    8. ' next' → logprob: -5.362024307250977
    9. ' suivante' → logprob: -5.987024307250977
    10. ' ' → logprob: -6.487024307250977

Token 369: ' multiple' (ID: 7598)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47166237235069275
    2. ' multiple' → logprob: -1.7216624021530151
    3. ' n' → logprob: -2.0966622829437256
    4. ' nombre' → logprob: -3.5966622829437256
    5. ' ' → logprob: -3.9716622829437256
    6. ' entier' → logprob: -4.721662521362305
    7. 'nombre' → logprob: -5.471662521362305
    8. 'multiple' → logprob: -5.471662521362305
    9. 'multip' → logprob: -5.596662521362305
    10. ' facteur' → logprob: -6.596662521362305

Token 370: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34240102767944336
    2. 'n' → logprob: -1.5924010276794434
    3. ' n' → logprob: -2.4674010276794434
    4. ' ' → logprob: -6.967401027679443
    5. '  ' → logprob: -8.092401504516602
    6. '<|end|>' → logprob: -8.717401504516602
    7. '	n' → logprob: -8.842401504516602
    8. '    ' → logprob: -10.467401504516602
    9. '    
' → logprob: -10.967401504516602
    10. '.' → logprob: -11.217401504516602

Token 371: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07020362466573715
    2. ' A' → logprob: -2.6952035427093506
    3. 'n' → logprob: -8.32020378112793
    4. ' n' → logprob: -10.82020378112793
    5. ' ' → logprob: -12.94520378112793
    6. '	A' → logprob: -15.07020378112793
    7. '   ' → logprob: -15.07020378112793
    8. '  ' → logprob: -15.44520378112793
    9. '```' → logprob: -15.57020378112793
    10. 'a' → logprob: -15.82020378112793

Token 372: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026572786271572113
    2. 'n' → logprob: -3.6515727043151855
    3. '
' → logprob: -8.776573181152344
    4. ' n' → logprob: -9.276573181152344
    5. '    
' → logprob: -11.526573181152344
    6. '  ' → logprob: -12.276573181152344
    7. '	n' → logprob: -12.651573181152344
    8. ' ' → logprob: -13.026573181152344
    9. '<|end|>' → logprob: -13.651573181152344
    10. '    ' → logprob: -13.901573181152344

Token 373: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3102337121963501
    2. 'la' → logprob: -2.3102335929870605
    3. 'chercher' → logprob: -2.5602335929870605
    4. 'v' → logprob: -3.5602335929870605
    5. ' vérifier' → logprob: -4.5602335929870605
    6. ' la' → logprob: -4.5602335929870605
    7. 'tr' → logprob: -4.6852335929870605
    8. ' chaque' → logprob: -4.9352335929870605
    9. 'tester' → logprob: -5.4352335929870605
    10. 'su' → logprob: -5.8102335929870605

Token 374: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.565295398235321
    2. 'n' → logprob: -1.0652954578399658
    3. 'pro' → logprob: -4.565295219421387
    4. 'e' → logprob: -4.940295219421387
    5. ''aide' → logprob: -4.940295219421387
    6. 'continue' → logprob: -5.065295219421387
    7. ' suivante' → logprob: -5.190295219421387
    8. 'su' → logprob: -5.190295219421387
    9. 'u' → logprob: -5.565295219421387
    10. '+=' → logprob: -5.815295219421387

Token 375: 'it' (ID: 278)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6231436729431152
    2. '1' → logprob: -1.1231436729431152
    3. '   ' → logprob: -3.2481436729431152
    4. '+' → logprob: -3.3731436729431152
    5. 'chercher' → logprob: -4.998143672943115
    6. ' ' → logprob: -5.123143672943115
    7. 'tester' → logprob: -5.248143672943115
    8. 'aj' → logprob: -5.748143672943115
    9. 'v' → logprob: -5.748143672943115
    10. '```' → logprob: -5.748143672943115

Token 376: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.031607724726200104
    2. 'érer' → logprob: -3.5316076278686523
    3. 'er' → logprob: -6.781607627868652
    4. 'érations' → logprob: -7.781607627868652
    5. 'ér' → logprob: -9.281607627868652
    6. 'éré' → logprob: -9.906607627868652
    7. '1' → logprob: -10.656607627868652
    8. 'éra' → logprob: -10.781607627868652
    9. 'é' → logprob: -10.781607627868652
    10. 'érant' → logprob: -11.031607627868652

Token 377: ' suivante' (ID: 107439)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4430765211582184
    2. 'n' → logprob: -1.068076491355896
    3. '1' → logprob: -4.8180766105651855
    4. ' n' → logprob: -5.1930766105651855
    5. ' ' → logprob: -7.9430766105651855
    6. '  ' → logprob: -8.568076133728027
    7. '.' → logprob: -10.193076133728027
    8. '    
' → logprob: -11.068076133728027
    9. '    ' → logprob: -11.568076133728027
    10. '\n' → logprob: -12.068076133728027

Token 378: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005786820314824581
    2. '   ' → logprob: -5.255786895751953
    3. ' n' → logprob: -7.880786895751953
    4. '
' → logprob: -8.880786895751953
    5. '\n' → logprob: -10.755786895751953
    6. '	n' → logprob: -12.255786895751953
    7. '    
' → logprob: -12.380786895751953
    8. ' 
' → logprob: -13.005786895751953
    9. '  
' → logprob: -14.130786895751953
    10. ' ' → logprob: -14.380786895751953

Token 379: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12843360006809235
    2. '   ' → logprob: -2.1284337043762207
    3. ' n' → logprob: -6.503433704376221
    4. '	n' → logprob: -12.878433227539062
    5. '
' → logprob: -13.253433227539062
    6. '    
' → logprob: -13.878433227539062
    7. '  ' → logprob: -15.128433227539062
    8. ' ' → logprob: -15.378433227539062
    9. '\n' → logprob: -15.503433227539062
    10. ' 
' → logprob: -16.628433227539062

Token 380: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -6.217951886355877e-05
    2. '   ' → logprob: -10.000061988830566
    3. ' n' → logprob: -11.000061988830566
    4. '	n' → logprob: -16.750062942504883
    5. '
' → logprob: -17.750062942504883
    6. '\n' → logprob: -19.625062942504883
    7. '    
' → logprob: -20.250062942504883
    8. '  ' → logprob: -20.625062942504883
    9. '```' → logprob: -20.875062942504883
    10. ' ' → logprob: -21.000062942504883

Token 381: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10025691986083984
    2. ' +=' → logprob: -2.35025691986084
    3. '+' → logprob: -9.97525691986084
    4. '=' → logprob: -13.10025691986084
    5. ']+=' → logprob: -14.10025691986084
    6. '+="' → logprob: -14.85025691986084
    7. '+='' → logprob: -14.97525691986084
    8. '+=(' → logprob: -16.100257873535156
    9. '   ' → logprob: -16.350257873535156
    10. ' +' → logprob: -18.475257873535156

Token 382: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. ' ' → logprob: -18.88604736328125
    4. '   ' → logprob: -19.51104736328125
    5. '```' → logprob: -20.01104736328125
    6. '  ' → logprob: -21.26104736328125
    7. '１' → logprob: -21.51104736328125
    8. '۱' → logprob: -21.76104736328125
    9. '	' → logprob: -22.01104736328125
    10. '<|end|>' → logprob: -22.26104736328125

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -22.75
    4. '```' → logprob: -23.125
    5. '１' → logprob: -24.25
    6. '  ' → logprob: -24.375
    7. '۱' → logprob: -25.0
    8. '১' → logprob: -26.125
    9. '१' → logprob: -26.125
    10. '<|end|>' → logprob: -26.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 381
Tokens correctement prédits (1ère position, stricte): 89
Tokens correctement prédits (1ère position, avec adaptation): 93
Tokens correctement prédits (top 10): 241
Précision stricte (1ère position): 23.36%
Précision adaptée (1ère position): 24.41%
Précision (top 10): 63.25%
================================================================================
