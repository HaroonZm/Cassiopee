================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import cache
from itertools import product

sys.setrecursionlimit(1 << 25)
INF = float('inf')

input = lambda: sys.stdin.buffer.readline().rstrip()

class ModInt(int):
    __slots__ = ()
    MOD = 10 ** 9 + 7

    def __new__(cls, x):
        return int.__new__(cls, x % cls.MOD)

    def __add__(self, other):
        return ModInt(int(self) + int(other))

    def __sub__(self, other):
        return ModInt(int(self) - int(other))

    def __mul__(self, other):
        return ModInt(int(self) * int(other))

    def __truediv__(self, other):
        return ModInt(int(self) * pow(int(other), self.MOD - 2, self.MOD))

    def __pow__(self, other, modulo=None):
        return ModInt(pow(int(self), int(other), self.MOD))

    __radd__ = __add__
    __rsub__ = lambda self, other: ModInt(int(other) - int(self))
    __rmul__ = __mul__
    __rtruediv__ = lambda self, other: ModInt(int(other) * pow(int(self), self.MOD - 2, self.MOD))
    __rpow__ = lambda self, other: ModInt(pow(int(other), int(self), self.MOD))
    def __repr__(self):
        return str(int(self))

def resolve():
    L, R = map(int, input().split())
    D = 61
    dp = [[[[ModInt(0) for _ in range(2)] for _ in range(2)] for _ in range(2)] for _ in range(D + 1)]
    dp[D][0][0][0] = ModInt(1)
    rng = (0, 1)
    for d in range(D-1, -1, -1):
        lb = (L >> d) & 1
        rb = (R >> d) & 1
        for i, j, m, x, y in product(rng, repeat=5):
            if x > y: continue
            if not (i or lb <= x): continue
            if not (j or y <= rb): continue
            ni = i | (lb < x)
            nj = j | (y < rb)
            nm = m | (x & y)
            if not (m or x == y): continue
            dp[d][ni][nj][nm] += dp[d+1][i][j][m]
    print(sum(dp[0][i][j][m] for i, j, m in product(rng, repeat=3)))
resolve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.012081976048648357
    2. 'os' → logprob: -4.762082099914551
    3. ' collections' → logprob: -6.887082099914551
    4. ' ' → logprob: -7.512082099914551
    5. ' math' → logprob: -7.887082099914551
    6. ' Py' → logprob: -7.887082099914551
    7. ' pathlib' → logprob: -8.01208209991455
    8. ' typing' → logprob: -8.63708209991455
    9. 'collections' → logprob: -9.38708209991455
    10. ' datetime' → logprob: -9.38708209991455

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18088944256305695
    2. 'import' → logprob: -1.8058894872665405
    3. '.' → logprob: -7.18088960647583
    4. ' ' → logprob: -8.555889129638672
    5. '_import' → logprob: -9.305889129638672
    6. '	import' → logprob: -9.930889129638672
    7. '_' → logprob: -11.180889129638672
    8. '.import' → logprob: -11.430889129638672
    9. ' ' → logprob: -11.680889129638672
    10. ' .' → logprob: -12.305889129638672

Token 6: ' cache' (ID: 11956)
  Prédit: ' wraps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' wraps' → logprob: -1.0255804061889648
    2. 'wrap' → logprob: -1.2755804061889648
    3. 'partial' → logprob: -1.9005804061889648
    4. ' l' → logprob: -2.525580406188965
    5. ' partial' → logprob: -2.525580406188965
    6. 'l' → logprob: -3.525580406188965
    7. 'reduce' → logprob: -4.025580406188965
    8. ' reduce' → logprob: -5.525580406188965
    9. 'cmp' → logprob: -7.900580406188965
    10. 'cache' → logprob: -8.025580406188965

Token 7: '
' (ID: 198)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.08372784405946732
    2. 'def' → logprob: -3.5837278366088867
    3. '\n' → logprob: -3.9587278366088867
    4. '\' → logprob: -4.083727836608887
    5. '
' → logprob: -5.333727836608887
    6. '@
' → logprob: -5.708727836608887
    7. '```' → logprob: -5.708727836608887
    8. '<|end|>' → logprob: -7.083727836608887
    9. 'import' → logprob: -7.458727836608887
    10. '@login' → logprob: -7.583727836608887

Token 8: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21815988421440125
    2. '@' → logprob: -2.0931599140167236
    3. '```' → logprob: -3.7181599140167236
    4. '\' → logprob: -4.0931596755981445
    5. 'import' → logprob: -4.8431596755981445
    6. '\n' → logprob: -4.9681596755981445
    7. '
' → logprob: -5.3431596755981445
    8. '@
' → logprob: -5.8431596755981445
    9. '`' → logprob: -6.7181596755981445
    10. '<|end|>' → logprob: -6.7181596755981445

Token 9: ' itertools' (ID: 103178)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.37930095195770264
    2. ' collections' → logprob: -1.3793009519577026
    3. ' math' → logprob: -3.379301071166992
    4. ' itertools' → logprob: -4.754301071166992
    5. ' pathlib' → logprob: -5.004301071166992
    6. ' dat' → logprob: -5.504301071166992
    7. 'collections' → logprob: -6.004301071166992
    8. ' os' → logprob: -6.379301071166992
    9. 'typing' → logprob: -6.754301071166992
    10. ' ' → logprob: -6.754301071166992

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.22568529844284058
    2. 'import' → logprob: -1.6006853580474854
    3. '.' → logprob: -8.600685119628906
    4. '	import' → logprob: -10.475685119628906
    5. ' ' → logprob: -10.850685119628906
    6. '.import' → logprob: -11.600685119628906
    7. '_import' → logprob: -11.725685119628906
    8. '<|end|>' → logprob: -12.100685119628906
    9. ' .' → logprob: -13.350685119628906
    10. ' ' → logprob: -13.350685119628906

Token 11: ' product' (ID: 1888)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.9665423631668091
    2. 'group' → logprob: -2.3415422439575195
    3. 'count' → logprob: -2.4665422439575195
    4. ' chain' → logprob: -2.5915422439575195
    5. 'com' → logprob: -2.7165422439575195
    6. 'import' → logprob: -2.8415422439575195
    7. 'chain' → logprob: -3.3415422439575195
    8. ' product' → logprob: -3.3415422439575195
    9. ' cycle' → logprob: -3.3415422439575195
    10. 'product' → logprob: -3.7165422439575195

Token 12: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9939947128295898
    2. '\n' → logprob: -1.2439947128295898
    3. '```' → logprob: -2.24399471282959
    4. 'def' → logprob: -2.61899471282959
    5. '\' → logprob: -3.36899471282959
    6. ',' → logprob: -3.49399471282959
    7. '<|end|>' → logprob: -3.99399471282959
    8. '(' → logprob: -4.49399471282959
    9. '<|end|>' → logprob: -4.49399471282959
    10. 'from' → logprob: -4.61899471282959

Token 13: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6016900539398193
    2. '\' → logprob: -1.7266900539398193
    3. 'd' → logprob: -2.1016900539398193
    4. '```' → logprob: -3.1016900539398193
    5. '(' → logprob: -3.2266900539398193
    6. '`' → logprob: -4.351690292358398
    7. 'import' → logprob: -4.351690292358398
    8. '.' → logprob: -4.601690292358398
    9. '#' → logprob: -5.226690292358398
    10. '[' → logprob: -5.351690292358398

Token 14: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -4.7994282795116305e-05
    2. '.exit' → logprob: -10.87504768371582
    3. '.import' → logprob: -12.50004768371582
    4. ' .' → logprob: -12.62504768371582
    5. '.stdout' → logprob: -13.00004768371582
    6. '.user' → logprob: -13.25004768371582
    7. '.argv' → logprob: -13.25004768371582
    8. '.readline' → logprob: -13.25004768371582
    9. '.stdin' → logprob: -13.62504768371582
    10. '.​' → logprob: -13.75004768371582

Token 15: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.014822747558355331
    2. '_limit' → logprob: -5.514822959899902
    3. '_rec' → logprob: -6.139822959899902
    4. '_execution' → logprob: -6.514822959899902
    5. 'limit' → logprob: -6.764822959899902
    6. '_version' → logprob: -7.264822959899902
    7. '_' → logprob: -7.264822959899902
    8. '_trace' → logprob: -7.264822959899902
    9. 'trace' → logprob: -7.389822959899902
    10. '_exc' → logprob: -7.639822959899902

Token 16: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00012809180771000683
    2. 'ur' → logprob: -9.750127792358398
    3. 'urs' → logprob: -9.875127792358398
    4. 'ursor' → logprob: -11.750127792358398
    5. 'ursive' → logprob: -12.000127792358398
    6. 'limit' → logprob: -13.125127792358398
    7. 'urf' → logprob: -14.250127792358398
    8. 'uf' → logprob: -15.125127792358398
    9. 'urse' → logprob: -15.125127792358398
    10. 'usion' → logprob: -15.125127792358398

Token 17: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -5.347765181795694e-05
    2. '_limit' → logprob: -10.000053405761719
    3. ' limit' → logprob: -12.500053405761719
    4. 'depth' → logprob: -12.625053405761719
    5. 'lim' → logprob: -14.750053405761719
    6. '.limit' → logprob: -15.625053405761719
    7. '(limit' → logprob: -16.12505340576172
    8. 'Limit' → logprob: -16.25005340576172
    9. '-limit' → logprob: -16.50005340576172
    10. '_depth' → logprob: -17.62505340576172

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.045823566731997e-05
    2. ' (' → logprob: -10.875020027160645
    3. '(
' → logprob: -14.125020027160645
    4. '(

' → logprob: -14.875020027160645
    5. '((' → logprob: -16.12502098083496
    6. '```' → logprob: -17.25002098083496
    7. '("("' → logprob: -18.00002098083496
    8. '()' → logprob: -18.12502098083496
    9. '(
' → logprob: -18.37502098083496
    10. '('' → logprob: -18.37502098083496

Token 19: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0298977829515934
    2. '100' → logprob: -3.529897689819336
    3. '300' → logprob: -9.404897689819336
    4. '500' → logprob: -10.154897689819336
    5. '999' → logprob: -11.279897689819336
    6. '200' → logprob: -11.904897689819336
    7. ' ' → logprob: -13.404897689819336
    8. '150' → logprob: -13.404897689819336
    9. '250' → logprob: -13.779897689819336
    10. '400' → logprob: -14.654897689819336

Token 20: ' <<' (ID: 2256)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7402552962303162
    2. '5' → logprob: -1.490255355834961
    3. '000' → logprob: -1.615255355834961
    4. '6' → logprob: -3.240255355834961
    5. '8' → logprob: -3.740255355834961
    6. '00' → logprob: -4.615255355834961
    7. '2' → logprob: -4.740255355834961
    8. '4' → logprob: -5.115255355834961
    9. '3' → logprob: -5.615255355834961
    10. '7' → logprob: -6.490255355834961

Token 21: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.03951874002814293
    2. '25' → logprob: -3.2895188331604004
    3. '15' → logprob: -6.7895188331604
    4. '30' → logprob: -9.414518356323242
    5. '17' → logprob: -9.539518356323242
    6. '27' → logprob: -9.539518356323242
    7. ' ' → logprob: -10.414518356323242
    8. '18' → logprob: -10.789518356323242
    9. '16' → logprob: -10.914518356323242
    10. '21' → logprob: -11.414518356323242

Token 22: '25' (ID: 1161)
  Prédit: '25'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.41193947196006775
    2. '20' → logprob: -1.2869395017623901
    3. '15' → logprob: -2.9119393825531006
    4. '16' → logprob: -5.28693962097168
    5. '17' → logprob: -7.53693962097168
    6. '21' → logprob: -7.78693962097168
    7. '18' → logprob: -8.16193962097168
    8. '24' → logprob: -8.53693962097168
    9. '27' → logprob: -8.66193962097168
    10. '30' → logprob: -8.91193962097168

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. '))' → logprob: -14.625000953674316
    3. ' )' → logprob: -14.625000953674316
    4. ')
' → logprob: -16.375001907348633
    5. '`)' → logprob: -16.750001907348633
    6. '')' → logprob: -17.500001907348633
    7. '```' → logprob: -18.125001907348633
    8. '),' → logprob: -18.500001907348633
    9. ')`' → logprob: -18.625001907348633
    10. ')

' → logprob: -18.750001907348633

Token 24: 'INF' (ID: 64358)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.07481786608695984
    2. '
' → logprob: -2.6998178958892822
    3. 'def' → logprob: -6.574817657470703
    4. 'class' → logprob: -6.574817657470703
    5. 'n' → logprob: -7.824817657470703
    6. '
' → logprob: -7.949817657470703
    7. '\n' → logprob: -8.074817657470703
    8. '

' → logprob: -8.949817657470703
    9. '' → logprob: -9.074817657470703
    10. '


' → logprob: -9.074817657470703

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14272135496139526
    2. '=' → logprob: -2.01772141456604
    3. ',' → logprob: -10.892721176147461
    4. ')' → logprob: -11.642721176147461
    5. ' ' → logprob: -12.267721176147461
    6. ' ,' → logprob: -12.892721176147461
    7. ' =
' → logprob: -13.517721176147461
    8. ' =)' → logprob: -13.642721176147461
    9. '.' → logprob: -13.892721176147461
    10. ':' → logprob: -14.142721176147461

Token 26: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4363841116428375
    2. '10' → logprob: -1.5613840818405151
    3. ' float' → logprob: -2.1863842010498047
    4. 'float' → logprob: -3.5613842010498047
    5. ' int' → logprob: -6.436384201049805
    6. '1' → logprob: -7.061384201049805
    7. 'int' → logprob: -7.561384201049805
    8. '100' → logprob: -10.436384201049805
    9. '(float' → logprob: -12.061384201049805
    10. '2' → logprob: -12.186384201049805

Token 27: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0011914180358871818
    2. '(' → logprob: -7.00119161605835
    3. ''' → logprob: -8.751191139221191
    4. '('.')' → logprob: -10.501191139221191
    5. '("' → logprob: -10.751191139221191
    6. '('+' → logprob: -10.876191139221191
    7. '('.' → logprob: -11.626191139221191
    8. ''s' → logprob: -12.001191139221191
    9. '32' → logprob: -12.126191139221191
    10. '('(' → logprob: -12.126191139221191

Token 28: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.48110005259513855
    2. ''in' → logprob: -1.106100082397461
    3. ''' → logprob: -3.231100082397461
    4. '"' → logprob: -5.106100082397461
    5. ''i' → logprob: -5.981100082397461
    6. ''ins' → logprob: -7.481100082397461
    7. 'info' → logprob: -7.981100082397461
    8. ''ex' → logprob: -8.231100082397461
    9. '32' → logprob: -8.606100082397461
    10. '"in' → logprob: -8.606100082397461

Token 29: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018151111900806427
    2. '')' → logprob: -4.01815128326416
    3. ' )' → logprob: -14.89315128326416
    4. '")' → logprob: -15.39315128326416
    5. ')
' → logprob: -15.51815128326416
    6. ')'' → logprob: -15.89315128326416
    7. '))' → logprob: -16.018150329589844
    8. '()' → logprob: -16.643150329589844
    9. '`)' → logprob: -16.643150329589844
    10. ''' → logprob: -16.893150329589844

Token 30: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1485152244567871
    2. 'class' → logprob: -2.023515224456787
    3. '@' → logprob: -5.898515224456787
    4. 'n' → logprob: -6.523515224456787
    5. '
' → logprob: -7.273515224456787
    6. '```' → logprob: -8.148515701293945
    7. 'd' → logprob: -8.273515701293945
    8. '\' → logprob: -9.398515701293945
    9. '

' → logprob: -9.773515701293945
    10. 'N' → logprob: -10.273515701293945

Token 31: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3464607894420624
    2. '(' → logprob: -1.5964608192443848
    3. '=' → logprob: -2.8464608192443848
    4. ' =' → logprob: -3.7214608192443848
    5. '_data' → logprob: -5.721460819244385
    6. 'data' → logprob: -6.971460819244385
    7. '().' → logprob: -7.096460819244385
    8. '.' → logprob: -7.346460819244385
    9. '```' → logprob: -7.471460819244385
    10. '_' → logprob: -8.221460342407227

Token 32: ' lambda' (ID: 27871)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10076545178890228
    2. ' input' → logprob: -3.1007654666900635
    3. 'sys' → logprob: -3.2257654666900635
    4. ' sys' → logprob: -4.725765228271484
    5. 'lambda' → logprob: -6.225765228271484
    6. ' lambda' → logprob: -8.350765228271484
    7. 'open' → logprob: -11.475765228271484
    8. '```' → logprob: -11.975765228271484
    9. 'raw' → logprob: -12.475765228271484
    10. '=input' → logprob: -12.600765228271484

Token 33: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04863562434911728
    2. ' :' → logprob: -4.048635482788086
    3. ' ' → logprob: -4.423635482788086
    4. ' sys' → logprob: -4.673635482788086
    5. '()' → logprob: -5.673635482788086
    6. ' input' → logprob: -6.298635482788086
    7. 'input' → logprob: -6.923635482788086
    8. '():' → logprob: -7.923635482788086
    9. '=sys' → logprob: -8.173635482788086
    10. 'sys' → logprob: -8.298635482788086

Token 34: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.034119438380002975
    2. 'input' → logprob: -3.7841193675994873
    3. ' sys' → logprob: -4.534119606018066
    4. ' input' → logprob: -9.534119606018066
    5. 'stdin' → logprob: -12.659119606018066
    6. '=sys' → logprob: -13.784119606018066
    7. '(sys' → logprob: -14.409119606018066
    8. '	sys' → logprob: -14.659119606018066
    9. 'str' → logprob: -15.534119606018066
    10. '0' → logprob: -15.659119606018066

Token 35: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.539801688631997e-05
    2. '.stdout' → logprob: -9.875065803527832
    3. '.' → logprob: -11.500065803527832
    4. '.std' → logprob: -13.375065803527832
    5. '.argv' → logprob: -13.500065803527832
    6. 'stdin' → logprob: -15.250065803527832
    7. '.readline' → logprob: -15.500065803527832
    8. '.stderr' → logprob: -15.500065803527832
    9. ' stdin' → logprob: -16.125064849853516
    10. ' .' → logprob: -16.250064849853516

Token 36: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.000309840717818588
    2. '.read' → logprob: -8.250309944152832
    3. '.' → logprob: -10.250309944152832
    4. 'read' → logprob: -11.375309944152832
    5. '.readlines' → logprob: -14.000309944152832
    6. ' readline' → logprob: -14.750309944152832
    7. '.buffer' → logprob: -15.750309944152832
    8. '.Read' → logprob: -16.125308990478516
    9. '_read' → logprob: -17.125308990478516
    10. 'buffer' → logprob: -17.625308990478516

Token 37: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004148441832512617
    2. ' readline' → logprob: -6.129148483276367
    3. 'read' → logprob: -6.629148483276367
    4. '_read' → logprob: -7.504148483276367
    5. '_raw' → logprob: -10.129148483276367
    6. '.read' → logprob: -10.254148483276367
    7. 'raw' → logprob: -12.379148483276367
    8. '```' → logprob: -12.879148483276367
    9. '.readlines' → logprob: -14.004148483276367
    10. 'rstrip' → logprob: -14.129148483276367

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3913615942001343
    2. '()' → logprob: -1.1413615942001343
    3. '()\' → logprob: -5.516361713409424
    4. '(' → logprob: -8.641361236572266
    5. '()
' → logprob: -8.641361236572266
    6. '()

' → logprob: -11.141361236572266
    7. '.strip' → logprob: -11.266361236572266
    8. '.rstrip' → logprob: -11.266361236572266
    9. '()[' → logprob: -11.766361236572266
    10. 'rstrip' → logprob: -11.766361236572266

Token 39: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.3490159213542938
    2. 'strip' → logprob: -1.3490159511566162
    3. 'decode' → logprob: -3.349015951156616
    4. '.rstrip' → logprob: -13.724016189575195
    5. ' strip' → logprob: -14.724016189575195
    6. 'dec' → logprob: -14.974016189575195
    7. '```' → logprob: -15.224016189575195
    8. 'split' → logprob: -15.224016189575195
    9. 'raw' → logprob: -15.349016189575195
    10. 'startswith' → logprob: -15.349016189575195

Token 40: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6350513696670532
    2. '()' → logprob: -0.7600513696670532
    3. '(
' → logprob: -7.635051250457764
    4. '()
' → logprob: -7.760051250457764
    5. '()

' → logprob: -7.760051250457764
    6. '\n' → logprob: -8.260051727294922
    7. ')' → logprob: -8.760051727294922
    8. '(

' → logprob: -9.010051727294922
    9. '#' → logprob: -9.260051727294922
    10. ',' → logprob: -9.885051727294922

Token 41: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16450871527194977
    2. 'class' → logprob: -2.164508819580078
    3. 'n' → logprob: -3.539508819580078
    4. '@' → logprob: -5.664508819580078
    5. 'N' → logprob: -5.664508819580078
    6. 'a' → logprob: -8.039508819580078
    7. '\' → logprob: -9.289508819580078
    8. '#' → logprob: -9.289508819580078
    9. 'd' → logprob: -9.539508819580078
    10. 'MOD' → logprob: -10.039508819580078

Token 42: ' Mod' (ID: 7191)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6037437319755554
    2. ' Solver' → logprob: -1.9787437915802002
    3. ' A' → logprob: -2.7287437915802
    4. ' Segment' → logprob: -2.8537437915802
    5. ' Solution' → logprob: -3.1037437915802
    6. ' Seg' → logprob: -3.4787437915802
    7. ' ' → logprob: -3.9787437915802
    8. ' Trie' → logprob: -4.228743553161621
    9. ' Factor' → logprob: -4.853743553161621
    10. ' DFS' → logprob: -4.853743553161621

Token 43: 'Int' (ID: 2471)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19040443003177643
    2. 'Int' → logprob: -1.9404044151306152
    3. 'ulo' → logprob: -3.9404044151306152
    4. 'ular' → logprob: -5.190404415130615
    5. 'ulus' → logprob: -6.065404415130615
    6. 'uler' → logprob: -7.315404415130615
    7. '():' → logprob: -7.940404415130615
    8. 'ULO' → logprob: -8.315404891967773
    9. '(int' → logprob: -8.940404891967773
    10. 'ulator' → logprob: -8.940404891967773

Token 44: '(int' (ID: 2742)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05510827526450157
    2. '(' → logprob: -2.9301083087921143
    3. '():' → logprob: -8.930108070373535
    4. '(:' → logprob: -10.180108070373535
    5. ' :' → logprob: -11.680108070373535
    6. '(object' → logprob: -11.680108070373535
    7. ':**' → logprob: -12.055108070373535
    8. '(":' → logprob: -12.180108070373535
    9. ',' → logprob: -12.430108070373535
    10. '[' → logprob: -12.430108070373535

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -2.117345684382599e-05
    2. '):
' → logprob: -11.125020980834961
    3. ')' → logprob: -12.375020980834961
    4. ' ):' → logprob: -14.125020980834961
    5. ':' → logprob: -14.250020980834961
    6. '):

' → logprob: -15.125020980834961
    7. ',' → logprob: -15.125020980834961
    8. '):
' → logprob: -16.50002098083496
    9. '32' → logprob: -17.37502098083496
    10. ']:' → logprob: -17.75002098083496

Token 46: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.881560041918419e-05
    2. ':
' → logprob: -11.125039100646973
    3. '):' → logprob: -11.250039100646973
    4. ':def' → logprob: -12.375039100646973
    5. 'def' → logprob: -13.250039100646973
    6. '(' → logprob: -13.375039100646973
    7. '():' → logprob: -13.750039100646973
    8. '   ' → logprob: -14.625039100646973
    9. ' :' → logprob: -15.000039100646973
    10. ':return' → logprob: -15.625039100646973

Token 47: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22253340482711792
    2. ' def' → logprob: -2.0975334644317627
    3. '   ' → logprob: -2.8475334644317627
    4. '@' → logprob: -5.597533226013184
    5. ' pass' → logprob: -6.347533226013184
    6. '@property' → logprob: -6.347533226013184
    7. ':' → logprob: -6.597533226013184
    8. 'pass' → logprob: -6.597533226013184
    9. '__' (adapté à ' __') → logprob: -6.597533226013184
    10. ' ' → logprob: -6.597533226013184

Token 48: 'slots' (ID: 101916)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0027248715050518513
    2. 'add' → logprob: -6.002724647521973
    3. 'init' → logprob: -8.502724647521973
    4. 'pow' → logprob: -10.752724647521973
    5. ' new' → logprob: -11.502724647521973
    6. 'get' → logprob: -12.502724647521973
    7. 'mul' → logprob: -12.752724647521973
    8. 'neg' → logprob: -13.127724647521973
    9. 'ne' → logprob: -13.252724647521973
    10. 'int' → logprob: -13.752724647521973

Token 49: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015256756916642189
    2. '=' → logprob: -4.265256881713867
    3. ' =' → logprob: -7.140256881713867
    4. '=['' → logprob: -8.765256881713867
    5. '___' → logprob: -9.640256881713867
    6. '_' → logprob: -10.265256881713867
    7. '_=' → logprob: -10.640256881713867
    8. '__('' → logprob: -12.265256881713867
    9. '=('' → logprob: -12.390256881713867
    10. '____' → logprob: -13.140256881713867

Token 50: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05815320461988449
    2. ' =' → logprob: -3.0581531524658203
    3. '=' → logprob: -4.68315315246582
    4. '_' → logprob: -8.80815315246582
    5. '___' → logprob: -9.93315315246582
    6. '_=' → logprob: -10.43315315246582
    7. '=['' → logprob: -11.05815315246582
    8. '=('' → logprob: -11.68315315246582
    9. '__('' → logprob: -12.68315315246582
    10. ' ' → logprob: -13.05815315246582

Token 51: ' ()
' (ID: 29456)
  Prédit: ''_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''_' → logprob: -0.15783046185970306
    2. '('_' → logprob: -2.9078304767608643
    3. ''s' → logprob: -3.2828304767608643
    4. ''value' → logprob: -3.7828304767608643
    5. '['_' → logprob: -4.282830238342285
    6. ''' → logprob: -4.532830238342285
    7. '['' → logprob: -6.532830238342285
    8. ''x' → logprob: -6.782830238342285
    9. ''d' → logprob: -7.657830238342285
    10. ''m' → logprob: -7.782830238342285

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05555674061179161
    2. '
' → logprob: -3.0555567741394043
    3. 'def' → logprob: -5.805556774139404
    4. ' def' → logprob: -6.555556774139404
    5. ':' → logprob: -6.680556774139404
    6. '    
' → logprob: -7.305556774139404
    7. '@' → logprob: -8.180556297302246
    8. ':
' → logprob: -10.555556297302246
    9. '    ' → logprob: -10.555556297302246
    10. ',' → logprob: -10.680556297302246

Token 53: ' MOD' (ID: 32868)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6889023184776306
    2. '   ' → logprob: -1.0639023780822754
    3. '@' → logprob: -1.9389023780822754
    4. ' def' → logprob: -5.063902378082275
    5. '+' → logprob: -6.438902378082275
    6. '@property' → logprob: -8.063901901245117
    7. '
' → logprob: -9.313901901245117
    8. ' @' → logprob: -9.313901901245117
    9. ')' → logprob: -9.813901901245117
    10. 'mod' → logprob: -10.063901901245117

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132902979850769
    2. '=' → logprob: -1.3132903575897217
    3. ':' → logprob: -10.5632905960083
    4. ',' → logprob: -14.0632905960083
    5. ' ' → logprob: -14.3132905960083
    6. '   ' → logprob: -15.0632905960083
    7. '=int' → logprob: -15.3132905960083
    8. '_' → logprob: -15.4382905960083
    9. '  ' → logprob: -16.313289642333984
    10. ')' → logprob: -16.563289642333984

Token 55: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6481521725654602
    2. '10' → logprob: -1.1481521129608154
    3. '998' → logprob: -2.1481521129608154
    4. ' ' → logprob: -3.1481521129608154
    5. '1' → logprob: -9.273152351379395
    6. '(' → logprob: -10.398152351379395
    7. ' (' → logprob: -12.523152351379395
    8. '0' → logprob: -13.023152351379395
    9. '999' → logprob: -13.648152351379395
    10. 'pow' → logprob: -13.898152351379395

Token 56: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.25258129835128784
    2. '10' → logprob: -1.7525813579559326
    3. '998' → logprob: -3.0025813579559326
    4. '1' → logprob: -8.627581596374512
    5. ' ' → logprob: -10.377581596374512
    6. '(' → logprob: -11.502581596374512
    7. 'int' → logprob: -14.752581596374512
    8. '999' → logprob: -15.127581596374512
    9. 'pow' → logprob: -15.252581596374512
    10. '2' → logprob: -15.752581596374512

Token 57: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.11329960078001022
    2. '09' → logprob: -2.488299608230591
    3. '000' → logprob: -3.863299608230591
    4. '**' → logprob: -6.238299369812012
    5. '009' → logprob: -6.863299369812012
    6. '_' → logprob: -10.988299369812012
    7. '00' → logprob: -11.113299369812012
    8. '```' → logprob: -11.238299369812012
    9. '+' → logprob: -11.738299369812012
    10. '007' → logprob: -11.988299369812012

Token 58: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. '09' → logprob: -15.0
    3. '+' → logprob: -21.375
    4. '10' → logprob: -21.5
    5. '```' → logprob: -21.625
    6. '19' → logprob: -22.25
    7. '９' → logprob: -22.25
    8. ' ' → logprob: -22.375
    9. '18' → logprob: -22.375
    10. 'nine' → logprob: -24.25

Token 59: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -15.875
    3. '９' → logprob: -21.0
    4. '+' → logprob: -21.125
    5. '```' → logprob: -21.375
    6. '10' → logprob: -22.75
    7. '
' → logprob: -23.0
    8. '19' → logprob: -23.125
    9. '18' → logprob: -23.125
    10. ' ' → logprob: -23.375

Token 60: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00016766376211307943
    2. '7' → logprob: -8.750167846679688
    3. ' +' → logprob: -11.875167846679688
    4. '＋' → logprob: -13.750167846679688
    5. 'plus' → logprob: -14.625167846679688
    6. '+
' → logprob: -15.000167846679688
    7. '```' → logprob: -15.625167846679688
    8. 'Plus' → logprob: -16.375167846679688
    9. '9' → logprob: -16.500167846679688
    10. ' plus' → logprob: -17.375167846679688

Token 61: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -19.5
    3. '07' → logprob: -20.375
    4. '７' → logprob: -21.625
    5. '```' → logprob: -21.75
    6. '

' → logprob: -22.125
    7. ' ' → logprob: -22.25
    8. '   ' → logprob: -22.5
    9. '9' → logprob: -22.5
    10. '
' → logprob: -23.125

Token 62: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -18.875
    3. '+' → logprob: -20.5
    4. '７' → logprob: -21.25
    5. '```' → logprob: -22.75
    6. '   ' → logprob: -22.875
    7. '

' → logprob: -22.875
    8. '007' → logprob: -23.125
    9. '17' → logprob: -23.75
    10. '77' → logprob: -23.75

Token 63: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39902791380882263
    2. '
' → logprob: -2.0240278244018555
    3. ')' → logprob: -2.5240278244018555
    4. '\n' → logprob: -3.2740278244018555
    5. '    
' → logprob: -3.5240278244018555
    6. '' → logprob: -4.6490278244018555
    7. ',' → logprob: -4.8990278244018555
    8. 'def' → logprob: -5.0240278244018555
    9. ' ' → logprob: -5.2740278244018555
    10. ' 
' → logprob: -5.6490278244018555

Token 64: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09731456637382507
    2. '   ' → logprob: -3.5973145961761475
    3. 'def' → logprob: -4.222314357757568
    4. '@' → logprob: -4.597314357757568
    5. ')' → logprob: -4.972314357757568
    6. ' def' → logprob: -5.097314357757568
    7. '\n' → logprob: -5.472314357757568
    8. '<|end|>' → logprob: -5.722314357757568
    9. ',' → logprob: -5.847314357757568
    10. '_' → logprob: -5.847314357757568

Token 65: ' def' (ID: 1056)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.3274270296096802
    2. 'def' (adapté à ' def') → logprob: -1.4524270296096802
    3. ' def' → logprob: -3.7024269104003906
    4. '@property' → logprob: -4.827426910400391
    5. '   ' → logprob: -5.077426910400391
    6. ' @' → logprob: -5.327426910400391
    7. '@
' → logprob: -7.452426910400391
    8. '
' → logprob: -8.07742691040039
    9. '    
' → logprob: -9.32742691040039
    10. ' ' → logprob: -9.45242691040039

Token 66: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.603350043296814
    2. ' def' → logprob: -1.103350043296814
    3. 'def' → logprob: -2.4783501625061035
    4. ' ' → logprob: -3.8533501625061035
    5. ' add' → logprob: -5.2283501625061035
    6. ' _' → logprob: -6.1033501625061035
    7. '__' → logprob: -6.7283501625061035
    8. 'pow' → logprob: -7.2283501625061035
    9. '_add' → logprob: -7.3533501625061035
    10. 'add' → logprob: -7.3533501625061035

Token 67: 'new' (ID: 1389)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.31713196635246277
    2. 'new' → logprob: -1.3171319961547852
    3. 'init' → logprob: -5.692131996154785
    4. 'pow' → logprob: -9.067131996154785
    5. 'post' → logprob: -9.317131996154785
    6. 'pos' → logprob: -9.442131996154785
    7. 'mul' → logprob: -9.692131996154785
    8. 'mod' → logprob: -9.817131996154785
    9. 'int' → logprob: -10.067131996154785
    10. 'get' → logprob: -11.192131996154785

Token 68: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00667381240054965
    2. '__' → logprob: -5.131673812866211
    3. '__('' → logprob: -7.381673812866211
    4. '__((' → logprob: -9.756673812866211
    5. '__(
' → logprob: -10.256673812866211
    6. '__(*' → logprob: -11.506673812866211
    7. '(' → logprob: -11.881673812866211
    8. '__("' → logprob: -11.881673812866211
    9. '_(' → logprob: -12.756673812866211
    10. '___' → logprob: -13.256673812866211

Token 69: 'cls' (ID: 36071)
  Prédit: 'cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -6.704273118884885e-07
    2. 'self' → logprob: -14.750000953674316
    3. ' cls' → logprob: -15.500000953674316
    4. '(cls' → logprob: -18.0
    5. 'cl' → logprob: -19.375
    6. '_cls' → logprob: -19.375
    7. '.cls' → logprob: -20.5
    8. '_,' → logprob: -20.625
    9. 'CLS' → logprob: -20.875
    10. 'cs' → logprob: -21.0

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.935296834039036e-06
    2. ' ,' → logprob: -13.62500286102295
    3. 'cls' → logprob: -13.62500286102295
    4. ',class' → logprob: -15.50000286102295
    5. 'self' → logprob: -16.625003814697266
    6. ',n' → logprob: -17.375003814697266
    7. '_,' → logprob: -17.500003814697266
    8. ',args' → logprob: -18.125003814697266
    9. ',arg' → logprob: -18.500003814697266
    10. ',self' → logprob: -18.500003814697266

Token 71: ' x' (ID: 1215)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.10354755818843842
    2. 'x' → logprob: -2.3535475730895996
    3. ' value' → logprob: -6.1035475730896
    4. 'v' → logprob: -7.3535475730896
    5. 'val' → logprob: -8.353547096252441
    6. 'n' → logprob: -9.103547096252441
    7. ' x' → logprob: -9.978547096252441
    8. 'cls' → logprob: -9.978547096252441
    9. 'other' → logprob: -11.603547096252441
    10. 'num' → logprob: -13.103547096252441

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028476715087890625
    2. '=' → logprob: -6.252847671508789
    3. ' ):' → logprob: -7.502847671508789
    4. ':' → logprob: -8.627847671508789
    5. ',' → logprob: -9.002847671508789
    6. '=None' → logprob: -10.502847671508789
    7. ')' → logprob: -11.002847671508789
    8. '):
' → logprob: -11.377847671508789
    9. ':int' → logprob: -12.877847671508789
    10. '   ' → logprob: -13.627847671508789

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029111552983522415
    2. 'return' → logprob: -4.904111385345459
    3. ':' → logprob: -5.029111385345459
    4. 'int' → logprob: -5.404111385345459
    5. 'cls' → logprob: -5.904111385345459
    6. 'x' → logprob: -6.404111385345459
    7. '=' → logprob: -6.779111385345459
    8. ',' → logprob: -6.904111385345459
    9. ':return' → logprob: -7.029111385345459
    10. '):
' → logprob: -7.654111385345459

Token 74: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13261063396930695
    2. 'x' → logprob: -2.132610559463501
    3. '       ' → logprob: -5.25761079788208
    4. 'cls' → logprob: -8.007610321044922
    5. ' return' → logprob: -9.632610321044922
    6. 'obj' → logprob: -10.007610321044922
    7. '   ' → logprob: -11.882610321044922
    8. ' x' → logprob: -13.007610321044922
    9. '           ' → logprob: -13.757610321044922
    10. '0' → logprob: -13.882610321044922

Token 75: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3133034408092499
    2. 'super' → logprob: -1.3133034706115723
    3. 'cls' → logprob: -10.688302993774414
    4. ' super' → logprob: -11.188302993774414
    5. 'mod' → logprob: -13.438302993774414
    6. ' int' → logprob: -13.438302993774414
    7. '0' → logprob: -13.938302993774414
    8. 'x' → logprob: -14.563302993774414
    9. '(super' → logprob: -14.813302993774414
    10. '(int' → logprob: -15.688302993774414

Token 76: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.0053685796447098255
    2. '(x' → logprob: -5.255368709564209
    3. '(' → logprob: -9.88036823272705
    4. 'x' → logprob: -10.75536823272705
    5. '().__' → logprob: -10.88036823272705
    6. 'super' → logprob: -11.38036823272705
    7. '((' → logprob: -11.75536823272705
    8. ').__' → logprob: -11.75536823272705
    9. '(int' → logprob: -11.88036823272705
    10. 'mod' → logprob: -12.25536823272705

Token 77: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -3.128163257315464e-07
    2. '_new' → logprob: -15.375
    3. ' new' → logprob: -17.0
    4. '	new' → logprob: -18.875
    5. 'New' → logprob: -19.875
    6. '.new' → logprob: -20.5
    7. '

' → logprob: -21.25
    8. '$new' → logprob: -21.75
    9. '   ' → logprob: -22.0
    10. '  ' → logprob: -22.25

Token 78: '__(' (ID: 8241)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.5257343649864197
    2. '__(' → logprob: -0.9007343649864197
    3. '(' → logprob: -6.2757344245910645
    4. 'cls' → logprob: -8.150733947753906
    5. '(cl' → logprob: -8.275733947753906
    6. '__' → logprob: -9.900733947753906
    7. '__(
' → logprob: -10.025733947753906
    8. '<>(' → logprob: -10.650733947753906
    9. '(clazz' → logprob: -10.775733947753906
    10. '(obj' → logprob: -12.275733947753906

Token 79: 'cls' (ID: 36071)
  Prédit: 'cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -1.6240566083070007e-06
    2. 'cl' → logprob: -14.125001907348633
    3. '(cls' → logprob: -14.125001907348633
    4. ' cls' → logprob: -16.125001907348633
    5. 'class' → logprob: -18.625001907348633
    6. 'clazz' → logprob: -18.625001907348633
    7. 'classmethod' → logprob: -19.375001907348633
    8. 'x' → logprob: -19.500001907348633
    9. 'Cls' → logprob: -19.875001907348633
    10. '   ' → logprob: -20.625001907348633

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4724558889865875
    2. '(cls' → logprob: -1.0974558591842651
    3. '(' → logprob: -3.4724559783935547
    4. ',(' → logprob: -4.972455978393555
    5. '((' → logprob: -6.222455978393555
    6. '(x' → logprob: -6.597455978393555
    7. '(max' → logprob: -7.597455978393555
    8. 'cls' → logprob: -8.222455978393555
    9. '(int' → logprob: -8.722455978393555
    10. '(mod' → logprob: -8.972455978393555

Token 81: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5404316782951355
    2. '(x' → logprob: -0.9154316782951355
    3. 'cls' → logprob: -5.165431499481201
    4. '(int' → logprob: -5.790431499481201
    5. '(cls' → logprob: -5.915431499481201
    6. ')' → logprob: -6.665431499481201
    7. ' (' → logprob: -7.040431499481201
    8. ')(' → logprob: -7.165431499481201
    9. 'mod' → logprob: -7.165431499481201
    10. 'int' → logprob: -7.415431499481201

Token 82: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.18288029730319977
    2. ' %' → logprob: -1.8078802824020386
    3. ')' → logprob: -5.807880401611328
    4. ' ' → logprob: -9.682880401611328
    5. '%)' → logprob: -10.807880401611328
    6. ')%' → logprob: -11.057880401611328
    7. ' )' → logprob: -11.807880401611328
    8. '%x' → logprob: -12.307880401611328
    9. 'mod' → logprob: -12.682880401611328
    10. ' ' → logprob: -13.057880401611328

Token 83: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -4.251091377227567e-05
    2. ' cls' → logprob: -10.250042915344238
    3. '(cls' → logprob: -11.875042915344238
    4. 'Mod' → logprob: -17.000041961669922
    5. 'cl' → logprob: -17.875041961669922
    6. 'Cls' → logprob: -18.500041961669922
    7. '.cls' → logprob: -18.625041961669922
    8. '127' → logprob: -19.125041961669922
    9. '   ' → logprob: -19.250041961669922
    10. 'MOD' → logprob: -19.250041961669922

Token 84: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -1.5690089639974758e-05
    2. 'MOD' → logprob: -11.375015258789062
    3. '.' → logprob: -13.500015258789062
    4. '_MOD' → logprob: -13.625015258789062
    5. '.Mod' → logprob: -14.000015258789062
    6. '.MODE' → logprob: -15.000015258789062
    7. '.M' → logprob: -15.375015258789062
    8. ' .' → logprob: -16.500015258789062
    9. '.__' → logprob: -17.000015258789062
    10. ').' → logprob: -17.875015258789062

Token 85: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.41866585687967e-06
    2. ' )' → logprob: -11.875008583068848
    3. '   ' → logprob: -14.625008583068848
    4. ')
' → logprob: -14.625008583068848
    5. '       ' → logprob: -15.125008583068848
    6. ' ' → logprob: -16.50000762939453
    7. '))' → logprob: -17.00000762939453
    8. ')

' → logprob: -17.00000762939453
    9. '),' → logprob: -17.75000762939453
    10. '）' → logprob: -18.12500762939453

Token 86: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6031723022460938
    2. '   ' → logprob: -1.4781723022460938
    3. ')' → logprob: -1.7281723022460938
    4. ' ' → logprob: -4.103172302246094
    5. 'def' → logprob: -4.228172302246094
    6. ',' → logprob: -5.603172302246094
    7. '<|end|>' → logprob: -6.103172302246094
    8. ' def' → logprob: -6.228172302246094
    9. '

' → logprob: -6.603172302246094
    10. ' 
' → logprob: -6.728172302246094

Token 87: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08945638686418533
    2. '   ' → logprob: -3.08945631980896
    3. ')' → logprob: -3.83945631980896
    4. ' def' → logprob: -5.214456558227539
    5. '+' → logprob: -5.339456558227539
    6. '
' → logprob: -5.964456558227539
    7. ' ' → logprob: -5.964456558227539
    8. ':def' → logprob: -7.089456558227539
    9. ':' → logprob: -7.464456558227539
    10. '<|end|>' → logprob: -7.964456558227539

Token 88: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.8779723644256592
    2. ' ' → logprob: -1.6279723644256592
    3. ' +' → logprob: -1.6279723644256592
    4. '_add' → logprob: -2.002972364425659
    5. '+' → logprob: -3.877972364425659
    6. ' add' → logprob: -4.127972602844238
    7. 'add' → logprob: -5.127972602844238
    8. '__' → logprob: -5.877972602844238
    9. ' ' → logprob: -5.877972602844238
    10. ' _' → logprob: -6.127972602844238

Token 89: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.2352385965641588e-05
    2. ' add' → logprob: -11.750012397766113
    3. '_add' → logprob: -13.750012397766113
    4. 'pow' → logprob: -13.750012397766113
    5. 'mod' → logprob: -14.000012397766113
    6. 'mul' → logprob: -14.250012397766113
    7. 'Add' → logprob: -15.625012397766113
    8. 'int' → logprob: -15.750012397766113
    9. 'init' → logprob: -15.750012397766113
    10. '+' → logprob: -17.000011444091797

Token 90: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.38699230551719666
    2. '__' → logprob: -1.136992335319519
    3. '__('' → logprob: -9.511992454528809
    4. '__(
' → logprob: -11.136992454528809
    5. '__((' → logprob: -11.261992454528809
    6. '_' → logprob: -11.636992454528809
    7. '___' → logprob: -12.136992454528809
    8. '__(*' → logprob: -13.011992454528809
    9. '__("' → logprob: -13.636992454528809
    10. '____' → logprob: -13.761992454528809

Token 91: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.52919222577475e-05
    2. ' self' → logprob: -9.500075340270996
    3. ' ' → logprob: -16.12507438659668
    4. 's' → logprob: -16.25007438659668
    5. '(self' → logprob: -17.12507438659668
    6. ')' → logprob: -18.12507438659668
    7. ',' → logprob: -18.62507438659668
    8. '_self' → logprob: -18.62507438659668
    9. 'sel' → logprob: -18.87507438659668
    10. ',self' → logprob: -18.87507438659668

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011733409948647022
    2. 'self' → logprob: -4.761733531951904
    3. ',self' → logprob: -6.636733531951904
    4. ' ,' → logprob: -7.011733531951904
    5. '__' → logprob: -8.011733055114746
    6. '__(' → logprob: -8.261733055114746
    7. '(self' → logprob: -8.886733055114746
    8. '__,' → logprob: -9.261733055114746
    9. ')' → logprob: -10.636733055114746
    10. ',s' → logprob: -11.011733055114746

Token 93: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.04876403883099556
    2. ' other' → logprob: -3.0487639904022217
    3. 'self' → logprob: -9.0487642288208
    4. ' o' → logprob: -10.1737642288208
    5. 'o' → logprob: -11.2987642288208
    6. ' ' → logprob: -12.1737642288208
    7. ' self' → logprob: -13.4237642288208
    8. 'Other' → logprob: -14.0487642288208
    9. '(other' → logprob: -14.7987642288208
    10. 'b' → logprob: -15.2987642288208

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005804349202662706
    2. ')' → logprob: -8.125580787658691
    3. ':' → logprob: -8.625580787658691
    4. '):
' → logprob: -9.750580787658691
    5. ' ):' → logprob: -10.125580787658691
    6. ' :' → logprob: -12.875580787658691
    7. ',' → logprob: -13.125580787658691
    8. '):
' → logprob: -15.000580787658691
    9. '}:' → logprob: -15.875580787658691
    10. '<|end|>' → logprob: -16.000579833984375

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3921259641647339
    2. '        ' → logprob: -1.5171259641647339
    3. '    ' → logprob: -3.2671260833740234
    4. ':' → logprob: -3.5171260833740234
    5. '<|end|>' → logprob: -4.892126083374023
    6. '(' → logprob: -5.017126083374023
    7. ':
' → logprob: -5.517126083374023
    8. '   ' → logprob: -5.767126083374023
    9. ' ' → logprob: -6.017126083374023
    10. ' :' → logprob: -6.017126083374023

Token 96: ' return' (ID: 622)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -1.0460325479507446
    2. ' Mod' → logprob: -1.6710325479507446
    3. '(Mod' → logprob: -1.9210325479507446
    4. ' (' → logprob: -2.171032428741455
    5. ' return' → logprob: -2.921032428741455
    6. '(' → logprob: -3.171032428741455
    7. 'return' (adapté à ' return') → logprob: -3.171032428741455
    8. ' ' → logprob: -4.671032428741455
    9. ')' → logprob: -4.796032428741455
    10. '=' → logprob: -5.171032428741455

Token 97: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00768494326621294
    2. ' Mod' → logprob: -4.882684707641602
    3. 'self' → logprob: -10.382684707641602
    4. 'type' → logprob: -10.382684707641602
    5. '(Mod' → logprob: -11.632684707641602
    6. ' type' → logprob: -13.132684707641602
    7. 'cls' → logprob: -13.257684707641602
    8. 'Type' → logprob: -14.007684707641602
    9. ' ' → logprob: -14.382684707641602
    10. 'MOD' → logprob: -14.382684707641602

Token 98: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -5.512236498361744e-07
    2. 'int' → logprob: -14.750000953674316
    3. ' Int' → logprob: -16.75
    4. '<Int' → logprob: -17.25
    5. '[Int' → logprob: -17.375
    6. '_Int' → logprob: -17.75
    7. '	Int' → logprob: -17.75
    8. '(Int' → logprob: -18.625
    9. 'Ints' → logprob: -18.625
    10. 'In' → logprob: -19.0

Token 99: '(int' (ID: 2742)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0014123775763437152
    2. '(int' → logprob: -6.876412391662598
    3. '(super' → logprob: -8.126412391662598
    4. '(((' → logprob: -9.876412391662598
    5. '(self' → logprob: -10.501412391662598
    6. 'super' → logprob: -12.751412391662598
    7. ')((' → logprob: -13.626412391662598
    8. '(' → logprob: -15.126412391662598
    9. 'int' → logprob: -15.126412391662598
    10. ' super' → logprob: -15.876412391662598

Token 100: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016229959146585315
    2. 'self' → logprob: -9.125162124633789
    3. '.__' → logprob: -10.250162124633789
    4. '(' → logprob: -11.500162124633789
    5. ')' → logprob: -12.125162124633789
    6. ').__' → logprob: -14.125162124633789
    7. '[self' → logprob: -14.875162124633789
    8. 's' → logprob: -15.375162124633789
    9. '__(' → logprob: -15.375162124633789
    10. ')(' → logprob: -15.500162124633789

Token 101: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046873610466718674
    2. ')+' → logprob: -3.2968735694885254
    3. '+' → logprob: -4.921873569488525
    4. ' +' → logprob: -6.546873569488525
    5. ' )' → logprob: -9.921874046325684
    6. '+self' → logprob: -11.171874046325684
    7. ')+(' → logprob: -12.296874046325684
    8. ' ' → logprob: -14.046874046325684
    9. '+)' → logprob: -14.046874046325684
    10. '()' → logprob: -14.171874046325684

Token 102: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01104935072362423
    2. ' +' → logprob: -4.511049270629883
    3. ')' → logprob: -14.261049270629883
    4. '+
' → logprob: -15.136049270629883
    5. ')+' → logprob: -15.511049270629883
    6. '+)' → logprob: -15.636049270629883
    7. '+self' → logprob: -15.761049270629883
    8. '+(' → logprob: -16.011049270629883
    9. '()+' → logprob: -16.761049270629883
    10. '+x' → logprob: -18.011049270629883

Token 103: ' int' (ID: 677)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.15216806530952454
    2. ' other' → logprob: -2.652168035507202
    3. 'int' → logprob: -2.902168035507202
    4. ' int' → logprob: -4.152168273925781
    5. '(other' → logprob: -10.777168273925781
    6. ' ' → logprob: -13.652168273925781
    7. '(int' → logprob: -13.777168273925781
    8. 'Other' → logprob: -15.027168273925781
    9. '1' → logprob: -16.77716827392578
    10. '(' → logprob: -18.15216827392578

Token 104: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.750000953674316
    3. 'other' → logprob: -16.500001907348633
    4. 'Other' → logprob: -20.500001907348633
    5. ' other' → logprob: -21.250001907348633
    6. '((' → logprob: -21.375001907348633
    7. '(operator' → logprob: -21.500001907348633
    8. ')' → logprob: -21.875001907348633
    9. '_other' → logprob: -22.125001907348633
    10. '(existing' → logprob: -22.500001907348633

Token 105: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009382586576975882
    2. ' )' → logprob: -7.000938415527344
    3. '))' → logprob: -11.000938415527344
    4. '())' → logprob: -11.750938415527344
    5. ')
' → logprob: -14.375938415527344
    6. '()' → logprob: -15.375938415527344
    7. ')return' → logprob: -15.375938415527344
    8. ' ' → logprob: -15.625938415527344
    9. '),' → logprob: -15.625938415527344
    10. '})' → logprob: -16.000938415527344

Token 106: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' def' (ID: 1056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10974975675344467
    2. '   ' → logprob: -2.4847497940063477
    3. ' ' → logprob: -4.484749794006348
    4. 'def' (adapté à ' def') → logprob: -4.984749794006348
    5. '__' → logprob: -7.234749794006348
    6. '  ' → logprob: -7.484749794006348
    7. '_' → logprob: -7.609749794006348
    8. ' def' → logprob: -8.609749794006348
    9. '    ' → logprob: -9.484749794006348
    10. ')
' → logprob: -9.734749794006348

Token 108: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06197933852672577
    2. '__' → logprob: -2.811979293823242
    3. ' ' → logprob: -12.436979293823242
    4. ' ' → logprob: -13.061979293823242
    5. 'def' → logprob: -13.186979293823242
    6. '.__' → logprob: -13.311979293823242
    7. ' def' → logprob: -13.811979293823242
    8. '(__' → logprob: -15.311979293823242
    9. ' (__' → logprob: -15.436979293823242
    10. '___' → logprob: -15.936979293823242

Token 109: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -4.310693111619912e-05
    2. 'r' → logprob: -10.250042915344238
    3. 'mul' → logprob: -12.000042915344238
    4. '-' → logprob: -13.875042915344238
    5. '_sub' → logprob: -15.250042915344238
    6. 'mod' → logprob: -16.125043869018555
    7. ' sub' → logprob: -16.375043869018555
    8. 'i' → logprob: -17.125043869018555
    9. 'Sub' → logprob: -17.250043869018555
    10. 'neg' → logprob: -18.250043869018555

Token 110: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.001367977005429566
    2. '(self' → logprob: -7.001368045806885
    3. '(' → logprob: -8.251367568969727
    4. '__' → logprob: -8.626367568969727
    5. '__(
' → logprob: -11.251367568969727
    6. '_(' → logprob: -13.251367568969727
    7. '__((' → logprob: -14.126367568969727
    8. '__('' → logprob: -14.626367568969727
    9. ')(' → logprob: -16.626367568969727
    10. '_' → logprob: -17.001367568969727

Token 111: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.919942486798391e-05
    2. '(self' → logprob: -9.750059127807617
    3. ' self' → logprob: -14.250059127807617
    4. ',' → logprob: -15.750059127807617
    5. ')' → logprob: -16.250059127807617
    6. '(' → logprob: -17.500059127807617
    7. ',self' → logprob: -17.500059127807617
    8. 's' → logprob: -18.125059127807617
    9. 'other' → logprob: -18.625059127807617
    10. '
' → logprob: -19.000059127807617

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1220545545220375
    2. '__(' → logprob: -2.3720545768737793
    3. '__' → logprob: -4.747054576873779
    4. '(self' → logprob: -5.497054576873779
    5. '(' → logprob: -5.622054576873779
    6. '-' → logprob: -6.247054576873779
    7. ')' → logprob: -6.747054576873779
    8. '+' → logprob: -6.872054576873779
    9. ' (' → logprob: -8.372054100036621
    10. ')(' → logprob: -8.497054100036621

Token 113: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0003743078850675374
    2. 'self' → logprob: -8.000373840332031
    3. ' other' → logprob: -10.250373840332031
    4. '(other' → logprob: -13.250373840332031
    5. 'Other' → logprob: -13.625373840332031
    6. 'int' → logprob: -15.125373840332031
    7. 'Mod' → logprob: -15.375373840332031
    8. '_other' → logprob: -18.25037384033203
    9. ' self' → logprob: -18.87537384033203
    10. '.other' → logprob: -19.12537384033203

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003922976087778807
    2. ',' → logprob: -5.878922939300537
    3. '):
' → logprob: -7.628922939300537
    4. ')' → logprob: -8.003923416137695
    5. ':' → logprob: -8.378923416137695
    6. '       ' → logprob: -9.878923416137695
    7. '   ' → logprob: -12.128923416137695
    8. 'self' → logprob: -12.378923416137695
    9. ' ):' → logprob: -13.128923416137695
    10. '):

' → logprob: -14.003923416137695

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003104042261838913
    2. 'return' → logprob: -6.253104209899902
    3. ' return' → logprob: -7.128104209899902
    4. ':
' → logprob: -8.503104209899902
    5. '(' → logprob: -9.753104209899902
    6. ':return' → logprob: -10.378104209899902
    7. ':' → logprob: -10.628104209899902
    8. '   ' → logprob: -10.628104209899902
    9. ',' → logprob: -11.753104209899902
    10. '(
' → logprob: -12.253104209899902

Token 116: ' return' (ID: 622)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -3.2020991056924686e-05
    2. 'return' (adapté à ' return') → logprob: -10.750032424926758
    3. ' Mod' → logprob: -12.000032424926758
    4. '(Mod' → logprob: -12.375032424926758
    5. '       ' → logprob: -16.875032424926758
    6. ' return' → logprob: -17.000032424926758
    7. '   ' → logprob: -17.875032424926758
    8. 'Modulo' → logprob: -18.500032424926758
    9. 'MOD' → logprob: -19.125032424926758
    10. '(' → logprob: -19.750032424926758

Token 117: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.004624391905963421
    2. ' Mod' → logprob: -5.379624366760254
    3. '(Mod' → logprob: -12.629624366760254
    4. 'mod' → logprob: -15.254624366760254
    5. 'MOD' → logprob: -15.629624366760254
    6. ' ' → logprob: -15.629624366760254
    7. '_Mod' → logprob: -16.25462532043457
    8. 'Modulo' → logprob: -16.37962532043457
    9. '_mod' → logprob: -17.37962532043457
    10. '  ' → logprob: -17.87962532043457

Token 118: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.9361264946837764e-07
    2. 'int' → logprob: -16.5
    3. '(Int' → logprob: -17.875
    4. 'I' → logprob: -18.125
    5. '_Int' → logprob: -18.375
    6. '	Int' → logprob: -18.375
    7. '[Int' → logprob: -18.5
    8. ' Int' → logprob: -18.75
    9. '<Int' → logprob: -18.875
    10. '_int' → logprob: -19.5

Token 119: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.000000953674316
    3. 'int' → logprob: -15.250000953674316
    4. '((' → logprob: -18.5
    5. '[int' → logprob: -18.75
    6. '(abs' → logprob: -18.875
    7. ' (' → logprob: -19.375
    8. '<int' → logprob: -19.5
    9. '(
' → logprob: -21.0
    10. ' int' → logprob: -21.25

Token 120: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.375
    3. '(other' → logprob: -15.75
    4. '(s' → logprob: -18.5
    5. 'self' → logprob: -19.25
    6. ' (' → logprob: -20.0
    7. '(this' → logprob: -20.125
    8. '(
' → logprob: -21.25
    9. ')(' → logprob: -22.375
    10. '(super' → logprob: -22.5

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05677974969148636
    2. ' -' → logprob: -3.5567798614501953
    3. '-' → logprob: -3.8067798614501953
    4. '()' → logprob: -5.431779861450195
    5. ')-' → logprob: -10.806779861450195
    6. '(' → logprob: -10.931779861450195
    7. '>' → logprob: -11.806779861450195
    8. ' ' → logprob: -11.806779861450195
    9. ']' → logprob: -12.056779861450195
    10. '()-' → logprob: -12.806779861450195

Token 122: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20143544673919678
    2. '-' → logprob: -1.7014354467391968
    3. ')' → logprob: -11.326435089111328
    4. '()' → logprob: -12.076435089111328
    5. '()-' → logprob: -12.701435089111328
    6. ' ' → logprob: -14.326435089111328
    7. '(' → logprob: -15.201435089111328
    8. ' ' → logprob: -15.201435089111328
    9. ')-' → logprob: -16.201435089111328
    10. '−' → logprob: -16.826435089111328

Token 123: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.0484450437361374e-05
    2. '(int' → logprob: -10.250040054321289
    3. ' int' → logprob: -12.500040054321289
    4. 'other' → logprob: -13.750040054321289
    5. '<int' → logprob: -15.500040054321289
    6. '(other' → logprob: -16.25004005432129
    7. '[int' → logprob: -17.25004005432129
    8. ':int' → logprob: -18.50004005432129
    9. '	int' → logprob: -19.25004005432129
    10. '=int' → logprob: -19.37504005432129

Token 124: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.750000953674316
    3. 'other' → logprob: -15.500000953674316
    4. '(self' → logprob: -18.75
    5. ')' → logprob: -19.25
    6. '(that' → logprob: -19.5
    7. ' (' → logprob: -19.5
    8. ' other' → logprob: -20.5
    9. '(the' → logprob: -20.875
    10. '((' → logprob: -21.0

Token 125: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4740968942642212
    2. ')' → logprob: -0.9740968942642212
    3. ')))' → logprob: -11.47409725189209
    4. '())' → logprob: -12.59909725189209
    5. '()))' → logprob: -13.72409725189209
    6. '])' → logprob: -13.84909725189209
    7. '})' → logprob: -14.22409725189209
    8. '),' → logprob: -14.47409725189209
    9. '()' → logprob: -14.59909725189209
    10. '>)' → logprob: -14.84909725189209

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08216486126184464
    2. ')' → logprob: -2.582164764404297
    3. 'def' → logprob: -6.207164764404297
    4. '*' → logprob: -8.082164764404297
    5. '(' → logprob: -8.707164764404297
    6. '_' → logprob: -8.832164764404297
    7. ' def' → logprob: -8.832164764404297
    8. ' ' → logprob: -9.082164764404297
    9. '  ' → logprob: -9.207164764404297
    10. '**' → logprob: -10.332164764404297

Token 127: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4480932056903839
    2. 'def' (adapté à ' def') → logprob: -1.1980931758880615
    3. ')' → logprob: -2.9480931758880615
    4. ' def' → logprob: -5.448093414306641
    5. '(' → logprob: -6.573093414306641
    6. ' ' → logprob: -8.19809341430664
    7. '*' → logprob: -8.44809341430664
    8. '  ' → logprob: -8.82309341430664
    9. '    ' → logprob: -9.19809341430664
    10. ' (' → logprob: -9.69809341430664

Token 128: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2812337875366211
    2. '__' → logprob: -1.406233787536621
    3. '_mul' → logprob: -10.906233787536621
    4. '(__' → logprob: -11.031233787536621
    5. ' (__' → logprob: -11.406233787536621
    6. 'def' → logprob: -11.781233787536621
    7. ' ' → logprob: -12.156233787536621
    8. ' def' → logprob: -12.406233787536621
    9. '__(' → logprob: -12.531233787536621
    10. '```' → logprob: -12.656233787536621

Token 129: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -1.9361264946837764e-07
    2. ' mul' → logprob: -16.375
    3. 'pow' → logprob: -17.25
    4. 'mult' → logprob: -17.375
    5. 'r' → logprob: -18.625
    6. '_mul' → logprob: -18.75
    7. 'neg' → logprob: -19.875
    8. 'Mul' → logprob: -19.875
    9. 'multip' → logprob: -20.5
    10. 'mod' → logprob: -21.25

Token 130: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0007402998744510114
    2. '__' → logprob: -7.2507405281066895
    3. '__(
' → logprob: -10.875740051269531
    4. '__(*' → logprob: -12.750740051269531
    5. '(' → logprob: -13.000740051269531
    6. '__((' → logprob: -13.000740051269531
    7. '__('' → logprob: -13.125740051269531
    8. '(self' → logprob: -13.375740051269531
    9. '__("' → logprob: -15.500740051269531
    10. '*(' → logprob: -16.00074005126953

Token 131: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016384923947043717
    2. '(self' → logprob: -8.750164031982422
    3. 'other' → logprob: -12.250164031982422
    4. ' self' → logprob: -14.625164031982422
    5. 'int' → logprob: -17.375164031982422
    6. '(' → logprob: -17.750164031982422
    7. 'Mod' → logprob: -18.125164031982422
    8. '(other' → logprob: -19.125164031982422
    9. 'mod' → logprob: -19.875164031982422
    10. '[self' → logprob: -20.125164031982422

Token 132: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03988296166062355
    2. '__(' → logprob: -3.5398828983306885
    3. ',' → logprob: -4.789883136749268
    4. '(' → logprob: -6.539883136749268
    5. ' (' → logprob: -8.53988265991211
    6. 'self' → logprob: -9.66488265991211
    7. '__' → logprob: -10.66488265991211
    8. ')(' → logprob: -10.91488265991211
    9. '(other' → logprob: -11.41488265991211
    10. '_(' → logprob: -12.91488265991211

Token 133: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0019291093340143561
    2. ' other' → logprob: -6.25192928314209
    3. '(other' → logprob: -15.12692928314209
    4. 'self' → logprob: -15.12692928314209
    5. 'Other' → logprob: -16.876928329467773
    6. '_other' → logprob: -18.751928329467773
    7. '.other' → logprob: -19.251928329467773
    8. ' ' → logprob: -21.001928329467773
    9. ' self' → logprob: -21.126928329467773
    10. 'OTHER' → logprob: -21.501928329467773

Token 134: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.36446478962898254
    2. ',' → logprob: -1.2394647598266602
    3. '):
' → logprob: -4.36446475982666
    4. ':' → logprob: -6.48946475982666
    5. 'self' → logprob: -7.23946475982666
    6. ')' → logprob: -8.11446475982666
    7. '(self' → logprob: -8.23946475982666
    8. '       ' → logprob: -8.48946475982666
    9. '   ' → logprob: -9.86446475982666
    10. '(' → logprob: -10.73946475982666

Token 135: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6797108054161072
    2. '       ' → logprob: -0.9297108054161072
    3. '(self' → logprob: -3.429710865020752
    4. '(Mod' → logprob: -3.554710865020752
    5. 'Mod' → logprob: -3.554710865020752
    6. ' return' → logprob: -5.179710865020752
    7. '(' → logprob: -6.304710865020752
    8. 'self' → logprob: -7.179710865020752
    9. '   ' → logprob: -8.179710388183594
    10. ' Mod' → logprob: -9.054710388183594

Token 136: ' return' (ID: 622)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -2.7610454708337784e-05
    2. ' Mod' → logprob: -10.875027656555176
    3. 'return' (adapté à ' return') → logprob: -12.125027656555176
    4. '(Mod' → logprob: -12.750027656555176
    5. '       ' → logprob: -15.500027656555176
    6. 'int' → logprob: -16.37502670288086
    7. ' return' → logprob: -17.62502670288086
    8. '   ' → logprob: -17.75002670288086
    9. 'MOD' → logprob: -19.12502670288086
    10. 'mod' → logprob: -19.25002670288086

Token 137: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0141702089458704
    2. ' Mod' → logprob: -4.264170169830322
    3. '(Mod' → logprob: -12.01417064666748
    4. 'mod' → logprob: -14.88917064666748
    5. '_Mod' → logprob: -16.639169692993164
    6. '_mod' → logprob: -16.639169692993164
    7. 'MOD' → logprob: -16.889169692993164
    8. '.Mod' → logprob: -17.139169692993164
    9. 'Modulo' → logprob: -17.514169692993164
    10. 'Modal' → logprob: -19.264169692993164

Token 138: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -4.320199877838604e-07
    2. 'int' → logprob: -15.5
    3. ' Int' → logprob: -17.125
    4. '	Int' → logprob: -18.0
    5. '<Int' → logprob: -18.125
    6. '(Int' → logprob: -18.5
    7. 'I' → logprob: -18.5
    8. '_Int' → logprob: -18.625
    9. '_int' → logprob: -19.25
    10. '.Int' → logprob: -19.5

Token 139: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.1472419600977446e-06
    2. 'int' → logprob: -13.875000953674316
    3. '(' → logprob: -15.750000953674316
    4. '[int' → logprob: -19.000001907348633
    5. ' (' → logprob: -19.250001907348633
    6. '<int' → logprob: -19.750001907348633
    7. ' int' → logprob: -19.875001907348633
    8. ',int' → logprob: -20.625001907348633
    9. '=int' → logprob: -20.750001907348633
    10. '(
' → logprob: -21.125001907348633

Token 140: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.319370302458992e-06
    2. '(' → logprob: -12.375005722045898
    3. 'self' → logprob: -13.875005722045898
    4. ' self' → logprob: -18.2500057220459
    5. '(
' → logprob: -18.5000057220459
    6. ' (' → logprob: -18.7500057220459
    7. '$self' → logprob: -19.3750057220459
    8. ')' → logprob: -19.5000057220459
    9. '	self' → logprob: -19.5000057220459
    10. '(s' → logprob: -20.0000057220459

Token 141: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7848862373502925e-05
    2. ')*' → logprob: -10.875027656555176
    3. '*' → logprob: -11.750027656555176
    4. '()' → logprob: -14.500027656555176
    5. ' )' → logprob: -15.500027656555176
    6. ' ' → logprob: -16.000028610229492
    7. '*)' → logprob: -16.500028610229492
    8. ' *' → logprob: -17.250028610229492
    9. '(' → logprob: -17.875028610229492
    10. '   ' → logprob: -18.000028610229492

Token 142: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03970447927713394
    2. ' *' → logprob: -3.2897045612335205
    3. ')' → logprob: -6.414704322814941
    4. '()' → logprob: -11.414704322814941
    5. ')*' → logprob: -11.539704322814941
    6. ' ' → logprob: -13.039704322814941
    7. '()*' → logprob: -14.914704322814941
    8. '(*' → logprob: -15.164704322814941
    9. '**' → logprob: -15.789704322814941
    10. '*)' → logprob: -15.914704322814941

Token 143: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11415702104568481
    2. '(int' → logprob: -2.36415696144104
    3. '(other' → logprob: -4.364157199859619
    4. ' int' → logprob: -7.364157199859619
    5. 'other' → logprob: -7.614157199859619
    6. '<int' → logprob: -14.739156723022461
    7. ' other' → logprob: -14.864156723022461
    8. '[int' → logprob: -15.989156723022461
    9. ' ' → logprob: -16.23915672302246
    10. ':int' → logprob: -16.36415672302246

Token 144: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -4.723352049040841e-06
    2. 'other' → logprob: -13.000004768371582
    3. '(' → logprob: -13.375004768371582
    4. '(self' → logprob: -14.500004768371582
    5. ' (' → logprob: -15.625004768371582
    6. ')' → logprob: -17.000003814697266
    7. ' other' → logprob: -17.125003814697266
    8. '(the' → logprob: -17.125003814697266
    9. '(that' → logprob: -17.500003814697266
    10. 'Other' → logprob: -17.625003814697266

Token 145: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2014307826757431
    2. ')' → logprob: -1.7014307975769043
    3. ')))' → logprob: -12.451430320739746
    4. '),' → logprob: -12.951430320739746
    5. ')+' → logprob: -13.076430320739746
    6. '()))' → logprob: -13.201430320739746
    7. '))
' → logprob: -13.576430320739746
    8. '(' → logprob: -13.576430320739746
    9. ')
' → logprob: -13.701430320739746
    10. ' ))' → logprob: -14.576430320739746

Token 146: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1341068744659424
    2. '   ' → logprob: -1.5091068744659424
    3. '*' → logprob: -1.7591068744659424
    4. '_' → logprob: -1.8841068744659424
    5. 'def' → logprob: -2.3841068744659424
    6. '(' → logprob: -4.384106636047363
    7. ' ' → logprob: -4.634106636047363
    8. '^' → logprob: -5.384106636047363
    9. '**' → logprob: -6.259106636047363
    10. '()' → logprob: -6.384106636047363

Token 147: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.319253534078598
    2. ')' → logprob: -1.5692535638809204
    3. '   ' → logprob: -3.319253444671631
    4. '_' → logprob: -4.694253444671631
    5. ' def' → logprob: -4.694253444671631
    6. ' ' → logprob: -5.694253444671631
    7. '(' → logprob: -6.069253444671631
    8. '**' → logprob: -6.319253444671631
    9. ',' → logprob: -6.944253444671631
    10. '^' → logprob: -7.444253444671631

Token 148: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09387936443090439
    2. 'pow' → logprob: -2.843879461288452
    3. ' __' → logprob: -3.468879461288452
    4. ' pow' → logprob: -8.468879699707031
    5. '_pow' → logprob: -10.843879699707031
    6. 'def' → logprob: -11.843879699707031
    7. '```' → logprob: -12.593879699707031
    8. '.__' → logprob: -12.718879699707031
    9. '(__' → logprob: -12.968879699707031
    10. '(pow' → logprob: -12.968879699707031

Token 149: 'tr' (ID: 371)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.10309378802776337
    2. 'flo' → logprob: -2.3530938625335693
    3. 'tr' → logprob: -5.85309362411499
    4. 'neg' → logprob: -12.603094100952148
    5. 'rm' → logprob: -13.103094100952148
    6. 'mod' → logprob: -13.103094100952148
    7. 'xor' → logprob: -13.603094100952148
    8. 'fl' → logprob: -14.228094100952148
    9. 'power' → logprob: -14.603094100952148
    10. 'Pow' → logprob: -14.853094100952148

Token 150: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.17119988799095154
    2. '__' → logprob: -1.921199917793274
    3. 'ue' → logprob: -4.796199798583984
    4. 'u' → logprob: -6.171199798583984
    5. '_' → logprob: -8.546199798583984
    6. '/' → logprob: -9.171199798583984
    7. '```' → logprob: -10.046199798583984
    8. 'ues' → logprob: -10.171199798583984
    9. 'div' → logprob: -10.296199798583984
    10. '__
' → logprob: -10.671199798583984

Token 151: 'iv' (ID: 349)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3208982050418854
    2. 'v' → logprob: -2.0708982944488525
    3. 'iv' → logprob: -2.3208982944488525
    4. '__' → logprob: -3.0708982944488525
    5. 'div' → logprob: -7.070898056030273
    6. '*' → logprob: -7.445898056030273
    7. 'or' → logprob: -7.570898056030273
    8. '_' → logprob: -7.820898056030273
    9. 'o' → logprob: -8.570898056030273
    10. '```' → logprob: -8.570898056030273

Token 152: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0019638435915112495
    2. '__' → logprob: -6.2519636154174805
    3. '__(
' → logprob: -10.87696361541748
    4. '__((' → logprob: -11.75196361541748
    5. '__('' → logprob: -12.12696361541748
    6. '(' → logprob: -13.25196361541748
    7. '__(*' → logprob: -14.12696361541748
    8. '__("' → logprob: -15.25196361541748
    9. '(self' → logprob: -15.37696361541748
    10. '___' → logprob: -16.376964569091797

Token 153: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015705463010817766
    2. 'other' → logprob: -9.000157356262207
    3. '(self' → logprob: -10.625157356262207
    4. ')' → logprob: -12.125157356262207
    5. ' self' → logprob: -12.625157356262207
    6. '*self' → logprob: -16.62515640258789
    7. '<|end|>' → logprob: -16.75015640258789
    8. '$self' → logprob: -17.00015640258789
    9. 's' → logprob: -17.37515640258789
    10. 'Other' → logprob: -17.62515640258789

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10306669026613235
    2. '__(' → logprob: -3.4780666828155518
    3. '__' → logprob: -3.7280666828155518
    4. 'self' → logprob: -4.228066921234131
    5. '(' → logprob: -4.353066921234131
    6. ')' → logprob: -4.853066921234131
    7. '(self' → logprob: -5.853066921234131
    8. '__,' → logprob: -6.228066921234131
    9. ' (' → logprob: -6.603066921234131
    10. ')(' → logprob: -8.103066444396973

Token 155: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.07890300452709198
    2. ' other' → logprob: -2.5789029598236084
    3. 'Other' → logprob: -11.578903198242188
    4. 'self' → logprob: -12.953903198242188
    5. '(other' → logprob: -14.078903198242188
    6. '_other' → logprob: -14.828903198242188
    7. ' ' → logprob: -15.328903198242188
    8. '   ' → logprob: -16.453903198242188
    9. '.other' → logprob: -16.453903198242188
    10. 'def' → logprob: -17.828903198242188

Token 156: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014277982525527477
    2. '):
' → logprob: -4.264277935028076
    3. ')' → logprob: -9.514278411865234
    4. '):
' → logprob: -10.389278411865234
    5. ':' → logprob: -12.514278411865234
    6. '):

' → logprob: -12.764278411865234
    7. '**' → logprob: -14.264278411865234
    8. ' ):' → logprob: -14.514278411865234
    9. ',' → logprob: -14.889278411865234
    10. ')：' → logprob: -14.889278411865234

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17185664176940918
    2. ')' → logprob: -2.171856641769409
    3. '(' → logprob: -4.421856880187988
    4. '):' → logprob: -4.421856880187988
    5. '):
' → logprob: -5.296856880187988
    6. ' (' → logprob: -5.296856880187988
    7. ',' → logprob: -5.546856880187988
    8. ':' → logprob: -6.796856880187988
    9. ' /' → logprob: -7.671856880187988
    10. '*' → logprob: -7.671856880187988

Token 158: ' return' (ID: 622)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.002098156837746501
    2. 'return' (adapté à ' return') → logprob: -6.252098083496094
    3. 'pow' → logprob: -9.127098083496094
    4. 'class' → logprob: -10.877098083496094
    5. ' Mod' → logprob: -11.252098083496094
    6. 'Pow' → logprob: -11.752098083496094
    7. 'int' → logprob: -11.877098083496094
    8. 'self' → logprob: -12.627098083496094
    9. '(Mod' → logprob: -12.877098083496094
    10. 'def' → logprob: -12.877098083496094

Token 159: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.004816122818738222
    2. 'self' → logprob: -5.629816055297852
    3. ' Mod' → logprob: -6.754816055297852
    4. 'int' → logprob: -10.504816055297852
    5. ' self' → logprob: -11.754816055297852
    6. '(Mod' → logprob: -11.879816055297852
    7. 'pow' → logprob: -13.004816055297852
    8. 'mod' → logprob: -13.379816055297852
    9. 'super' → logprob: -14.004816055297852
    10. 'type' → logprob: -14.004816055297852

Token 160: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -7.226628895296017e-06
    2. 'int' → logprob: -11.875007629394531
    3. 'Mod' → logprob: -16.62500762939453
    4. '(Int' → logprob: -17.12500762939453
    5. ' Int' → logprob: -17.37500762939453
    6. '	Int' → logprob: -17.75000762939453
    7. '_int' → logprob: -18.62500762939453
    8. 'In' → logprob: -19.62500762939453
    9. 'Inv' → logprob: -19.87500762939453
    10. 'It' → logprob: -19.87500762939453

Token 161: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017440813826397061
    2. '(pow' → logprob: -6.876744270324707
    3. '(self' → logprob: -7.501744270324707
    4. 'int' → logprob: -10.001744270324707
    5. '(' → logprob: -10.126744270324707
    6. 'pow' → logprob: -10.251744270324707
    7. '(
' → logprob: -10.626744270324707
    8. '(Mod' → logprob: -12.751744270324707
    9. '(other' → logprob: -13.126744270324707
    10. 'Mod' → logprob: -13.376744270324707

Token 162: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.236549335066229e-05
    2. 'self' → logprob: -11.375021934509277
    3. '(pow' → logprob: -11.625021934509277
    4. '(' → logprob: -14.000021934509277
    5. '(
' → logprob: -14.625021934509277
    6. '(other' → logprob: -15.375021934509277
    7. 'pow' → logprob: -15.875021934509277
    8. '(int' → logprob: -16.000022888183594
    9. ')' → logprob: -17.375022888183594
    10. '(Mod' → logprob: -17.750022888183594

Token 163: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005169323412701488
    2. ').__' → logprob: -8.375516891479492
    3. ')*' → logprob: -8.625516891479492
    4. ' )' → logprob: -9.875516891479492
    5. '*' → logprob: -10.250516891479492
    6. '*)' → logprob: -11.875516891479492
    7. '))' → logprob: -12.500516891479492
    8. ').' → logprob: -13.375516891479492
    9. ')
' → logprob: -13.625516891479492
    10. ')__' → logprob: -14.000516891479492

Token 164: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.29102110862731934
    2. ')' → logprob: -1.4160211086273193
    3. ').__' → logprob: -5.166021347045898
    4. ' *' → logprob: -5.791021347045898
    5. ')*' → logprob: -7.166021347045898
    6. '.__' → logprob: -9.291021347045898
    7. '__' → logprob: -9.416021347045898
    8. ').' → logprob: -10.291021347045898
    9. '*)' → logprob: -11.041021347045898
    10. ',' → logprob: -11.916021347045898

Token 165: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0017052943585440516
    2. 'other' → logprob: -7.126705169677734
    3. ' pow' → logprob: -7.376705169677734
    4. '(pow' → logprob: -8.501705169677734
    5. 'int' → logprob: -10.126705169677734
    6. 'mod' → logprob: -11.501705169677734
    7. 'Pow' → logprob: -12.251705169677734
    8. '
' → logprob: -12.251705169677734
    9. 'Mod' → logprob: -12.376705169677734
    10. '   ' → logprob: -13.251705169677734

Token 166: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002021070569753647
    2. '(other' → logprob: -6.377020835876465
    3. 'int' → logprob: -8.252020835876465
    4. '(' → logprob: -10.252020835876465
    5. 'other' → logprob: -11.127020835876465
    6. '<int' → logprob: -12.502020835876465
    7. '(
' → logprob: -13.252020835876465
    8. 'Other' → logprob: -13.252020835876465
    9. '[int' → logprob: -15.377020835876465
    10. ',int' → logprob: -15.877020835876465

Token 167: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -2.7133641196996905e-05
    2. 'other' → logprob: -10.87502670288086
    3. '(' → logprob: -11.75002670288086
    4. ' other' → logprob: -15.75002670288086
    5. '_other' → logprob: -17.37502670288086
    6. 'Other' → logprob: -17.75002670288086
    7. '(
' → logprob: -17.75002670288086
    8. ')' → logprob: -18.25002670288086
    9. ')(' → logprob: -19.37502670288086
    10. '.other' → logprob: -19.75002670288086

Token 168: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015442232601344585
    2. '(),' → logprob: -4.390442371368408
    3. '),' → logprob: -6.515442371368408
    4. '(self' → logprob: -6.765442371368408
    5. '(-' → logprob: -9.39044189453125
    6. 'self' → logprob: -9.51544189453125
    7. '(int' → logprob: -10.01544189453125
    8. '(' → logprob: -11.01544189453125
    9. 'int' → logprob: -11.14044189453125
    10. ' ,' → logprob: -11.14044189453125

Token 169: ' self' (ID: 1051)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.06661832332611084
    2. '-' → logprob: -3.6916184425354004
    3. '(Mod' → logprob: -3.9416184425354004
    4. '-Mod' → logprob: -4.6916184425354
    5. ' Mod' → logprob: -5.4416184425354
    6. 'cls' → logprob: -5.5666184425354
    7. 'MOD' → logprob: -7.0666184425354
    8. ' -' → logprob: -7.4416184425354
    9. 'self' → logprob: -7.5666184425354
    10. '-M' → logprob: -8.191617965698242

Token 170: '.MOD' (ID: 141639)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.05631808936595917
    2. '.MOD' → logprob: -3.3063180446624756
    3. '-' → logprob: -4.931318283081055
    4. '_MOD' → logprob: -5.306318283081055
    5. '(-' → logprob: -5.681318283081055
    6. '(M' → logprob: -7.181318283081055
    7. ' MOD' → logprob: -7.431318283081055
    8. '(Mod' → logprob: -7.931318283081055
    9. '.M' → logprob: -8.681318283081055
    10. '.Mod' → logprob: -8.806318283081055

Token 171: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00015872348740231246
    2. ' -' → logprob: -8.750158309936523
    3. 'MOD' → logprob: -15.500158309936523
    4. '()-' → logprob: -17.875158309936523
    5. ' ' → logprob: -18.500158309936523
    6. '-mod' → logprob: -18.625158309936523
    7. '-Mod' → logprob: -18.625158309936523
    8. '−' → logprob: -19.250158309936523
    9. '   ' → logprob: -19.500158309936523
    10. '```' → logprob: -19.875158309936523

Token 172: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.750008583068848
    3. '۲' → logprob: -16.25000762939453
    4. '```' → logprob: -16.81250762939453
    5. '
' → logprob: -17.06250762939453
    6. '  ' → logprob: -17.25000762939453
    7. '   ' → logprob: -17.37500762939453
    8. '２' → logprob: -17.37500762939453
    9. '

' → logprob: -17.43750762939453
    10. '22' → logprob: -17.50000762939453

Token 173: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '۲' → logprob: -17.750003814697266
    4. '２' → logprob: -18.187503814697266
    5. '```' → logprob: -18.312503814697266
    6. '
' → logprob: -18.375003814697266
    7. '3' → logprob: -18.562503814697266
    8. '

' → logprob: -18.625003814697266
    9. '  ' → logprob: -18.812503814697266
    10. '   ' → logprob: -19.000003814697266

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013786651834379882
    2. ')' → logprob: -9.625138282775879
    3. ' ,' → logprob: -10.125138282775879
    4. '))' → logprob: -10.500138282775879
    5. 'mod' → logprob: -13.125138282775879
    6. ',
' → logprob: -14.125138282775879
    7. ',module' → logprob: -15.250138282775879
    8. ',None' → logprob: -15.250138282775879
    9. '}' → logprob: -16.375137329101562
    10. ')))' → logprob: -16.500137329101562

Token 175: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3160631060600281
    2. 'Mod' → logprob: -1.3160631656646729
    3. 'cls' → logprob: -5.941062927246094
    4. ')' → logprob: -9.066062927246094
    5. ' self' → logprob: -11.566062927246094
    6. ' Mod' → logprob: -11.691062927246094
    7. 'MOD' → logprob: -11.691062927246094
    8. 'Self' → logprob: -12.066062927246094
    9. 'mod' → logprob: -12.066062927246094
    10. 'int' → logprob: -12.441062927246094

Token 176: '.MOD' (ID: 141639)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.25284555554389954
    2. '.MOD' → logprob: -1.5028455257415771
    3. '_MOD' → logprob: -7.752845764160156
    4. ')' → logprob: -8.377845764160156
    5. '))' → logprob: -8.877845764160156
    6. 'Mod' → logprob: -10.127845764160156
    7. '.Mod' → logprob: -10.127845764160156
    8. ' MOD' → logprob: -10.502845764160156
    9. '.MODE' → logprob: -12.502845764160156
    10. '.M' → logprob: -13.502845764160156

Token 177: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25193166732788086
    2. '))' → logprob: -1.5019316673278809
    3. ')
' → logprob: -13.751932144165039
    4. ')))' → logprob: -13.876932144165039
    5. ' )' → logprob: -15.626932144165039
    6. '))
' → logprob: -16.12693214416504
    7. ' ))' → logprob: -16.37693214416504
    8. '   ' → logprob: -16.50193214416504
    9. '       ' → logprob: -16.87693214416504
    10. ')}' → logprob: -17.00193214416504

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34615084528923035
    2. ')' → logprob: -1.3461508750915527
    3. 'def' → logprob: -4.096150875091553
    4. '<|end|>' → logprob: -5.721150875091553
    5. '(' → logprob: -6.471150875091553
    6. '*' → logprob: -6.596150875091553
    7. '_' → logprob: -6.596150875091553
    8. '  ' → logprob: -6.721150875091553
    9. '\' → logprob: -6.846150875091553
    10. '\n' → logprob: -6.846150875091553

Token 179: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8217149376869202
    2. 'def' (adapté à ' def') → logprob: -0.9467149376869202
    3. ')' → logprob: -1.8217148780822754
    4. '__' → logprob: -4.821714878082275
    5. '_' → logprob: -7.571714878082275
    6. '**' → logprob: -7.821714878082275
    7. '(' → logprob: -7.821714878082275
    8. ' def' → logprob: -8.321715354919434
    9. '  ' → logprob: -8.571715354919434
    10. ' ' → logprob: -8.946715354919434

Token 180: ' __' (ID: 2516)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0005786505062133074
    2. '__' → logprob: -7.500578880310059
    3. '_pow' → logprob: -10.875578880310059
    4. ' pow' → logprob: -12.125578880310059
    5. '**' → logprob: -14.500578880310059
    6. ' __' → logprob: -15.250578880310059
    7. 'Pow' → logprob: -15.625578880310059
    8. 'r' → logprob: -16.625577926635742
    9. '.pow' → logprob: -16.750577926635742
    10. 'power' → logprob: -16.875577926635742

Token 181: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.002017024904489517
    2. 'flo' → logprob: -6.252017021179199
    3. 'neg' → logprob: -10.1270170211792
    4. 'eq' → logprob: -10.3770170211792
    5. 'r' → logprob: -11.1270170211792
    6. 'repr' → logprob: -13.7520170211792
    7. ' pow' → logprob: -14.2520170211792
    8. 'power' → logprob: -15.1270170211792
    9. 'mod' → logprob: -15.6270170211792
    10. 'int' → logprob: -15.7520170211792

Token 182: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.12660004198551178
    2. '(' → logprob: -2.2516000270843506
    3. '__' → logprob: -4.50160026550293
    4. '__(*' → logprob: -6.87660026550293
    5. '__(
' → logprob: -7.37660026550293
    6. '(self' → logprob: -7.75160026550293
    7. '__('' → logprob: -8.50160026550293
    8. '__((' → logprob: -9.37660026550293
    9. '*(' → logprob: -9.62660026550293
    10. ' (' → logprob: -10.00160026550293

Token 183: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.908022285439074e-05
    2. 'other' → logprob: -10.000059127807617
    3. '(self' → logprob: -11.500059127807617
    4. ' self' → logprob: -13.375059127807617
    5. 'int' → logprob: -13.875059127807617
    6. 'Mod' → logprob: -14.625059127807617
    7. 'Other' → logprob: -14.875059127807617
    8. ')' → logprob: -16.000059127807617
    9. '       ' → logprob: -17.875059127807617
    10. '   ' → logprob: -18.375059127807617

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1582348495721817
    2. '__,' → logprob: -2.7832348346710205
    3. '__(' → logprob: -2.7832348346710205
    4. '(self' → logprob: -4.1582350730896
    5. '__' → logprob: -5.9082350730896
    6. 'self' → logprob: -6.1582350730896
    7. '(' → logprob: -6.2832350730896
    8. ',(' → logprob: -9.033234596252441
    9. ',self' → logprob: -9.658234596252441
    10. ' (' → logprob: -10.158234596252441

Token 185: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0011773703154176474
    2. ' other' → logprob: -6.7511773109436035
    3. 'self' → logprob: -12.376177787780762
    4. 'int' → logprob: -13.501177787780762
    5. 'Other' → logprob: -13.501177787780762
    6. '(other' → logprob: -16.251176834106445
    7. ' ' → logprob: -18.751176834106445
    8. ' int' → logprob: -18.876176834106445
    9. ' self' → logprob: -18.876176834106445
    10. '_other' → logprob: -18.876176834106445

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011578429257497191
    2. '(self' → logprob: -7.001157760620117
    3. '(' → logprob: -9.001157760620117
    4. '):' → logprob: -9.626157760620117
    5. ' ,' → logprob: -10.751157760620117
    6. 'self' → logprob: -11.001157760620117
    7. ' (' → logprob: -11.376157760620117
    8. ')' → logprob: -12.376157760620117
    9. ',self' → logprob: -13.876157760620117
    10. ':' → logprob: -14.376157760620117

Token 187: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0015812820056453347
    2. '_mod' → logprob: -7.501581192016602
    3. 'MOD' → logprob: -7.626581192016602
    4. ' modulo' → logprob: -8.251581192016602
    5. 'm' → logprob: -9.001581192016602
    6. 'self' → logprob: -9.626581192016602
    7. 'Mod' → logprob: -10.251581192016602
    8. ' modulus' → logprob: -11.376581192016602
    9. '_MOD' → logprob: -11.501581192016602
    10. 'Modulo' → logprob: -11.751581192016602

Token 188: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.004088966641575098
    2. '=' → logprob: -5.504088878631592
    3. '):' → logprob: -11.75408935546875
    4. 'None' → logprob: -13.00408935546875
    5. '(None' → logprob: -15.12908935546875
    6. ')' → logprob: -15.87908935546875
    7. ' None' → logprob: -17.62908935546875
    8. ')=' → logprob: -17.87908935546875
    9. '):
' → logprob: -18.50408935546875
    10. '=True' → logprob: -19.62908935546875

Token 189: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.967624019831419e-05
    2. '):
' → logprob: -10.000060081481934
    3. ')' → logprob: -11.375060081481934
    4. ' ):' → logprob: -13.375060081481934
    5. ':' → logprob: -14.125060081481934
    6. '   ' → logprob: -15.375060081481934
    7. '):
' → logprob: -17.000059127807617
    8. '):

' → logprob: -17.125059127807617
    9. '**' → logprob: -17.500059127807617
    10. '       ' → logprob: -17.625059127807617

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07784398645162582
    2. 'self' → logprob: -2.9528439044952393
    3. 'return' → logprob: -3.8278439044952393
    4. 'int' → logprob: -8.07784366607666
    5. ' return' → logprob: -8.45284366607666
    6. '   ' → logprob: -8.45284366607666
    7. ' self' → logprob: -8.95284366607666
    8. 'other' → logprob: -10.45284366607666
    9. '(self' → logprob: -12.07784366607666
    10. '      ' → logprob: -12.20284366607666

Token 191: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.043416690081357956
    2. '       ' → logprob: -3.293416738510132
    3. 'Mod' → logprob: -5.668416500091553
    4. ' return' → logprob: -6.293416500091553
    5. 'pow' → logprob: -10.918416976928711
    6. '   ' → logprob: -11.418416976928711
    7. ' Mod' → logprob: -11.918416976928711
    8. 'mod' → logprob: -12.168416976928711
    9. ':return' → logprob: -12.543416976928711
    10. 'int' → logprob: -12.668416976928711

Token 192: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.011049231514334679
    2. ' Mod' → logprob: -4.511049270629883
    3. '(Mod' → logprob: -14.636049270629883
    4. '   ' → logprob: -14.761049270629883
    5. ' ' → logprob: -15.386049270629883
    6. '  ' → logprob: -15.636049270629883
    7. 'MOD' → logprob: -16.636049270629883
    8. '_Mod' → logprob: -17.511049270629883
    9. '    ' → logprob: -18.136049270629883
    10. 'mod' → logprob: -18.261049270629883

Token 193: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -3.3451433409936726e-05
    2. 'int' → logprob: -10.375033378601074
    3. 'nt' → logprob: -13.250033378601074
    4. 'Mod' → logprob: -15.375033378601074
    5. '(Int' → logprob: -16.37503433227539
    6. ' Int' → logprob: -16.87503433227539
    7. '_int' → logprob: -17.62503433227539
    8. '(int' → logprob: -17.87503433227539
    9. 'In' → logprob: -18.00003433227539
    10. '	Int' → logprob: -18.50003433227539

Token 194: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.0017074400093406439
    2. '(int' → logprob: -6.501707553863525
    3. 'pow' → logprob: -8.501707077026367
    4. ' pow' → logprob: -14.001707077026367
    5. '(' → logprob: -14.501707077026367
    6. '(power' → logprob: -15.001707077026367
    7. 'int' → logprob: -15.876707077026367
    8. '(
' → logprob: -16.376707077026367
    9. 'Pow' → logprob: -17.001707077026367
    10. '(super' → logprob: -17.126707077026367

Token 195: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.5332478142227046e-05
    2. 'int' → logprob: -11.875015258789062
    3. '(' → logprob: -12.125015258789062
    4. '(self' → logprob: -13.125015258789062
    5. ',int' → logprob: -14.750015258789062
    6. '<int' → logprob: -16.250015258789062
    7. '(
' → logprob: -16.375015258789062
    8. ' int' → logprob: -16.875015258789062
    9. '[int' → logprob: -17.000015258789062
    10. ':int' → logprob: -17.000015258789062

Token 196: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00026217024424113333
    2. 'self' → logprob: -8.250262260437012
    3. '(' → logprob: -14.125262260437012
    4. ' self' → logprob: -15.500262260437012
    5. ',self' → logprob: -17.750261306762695
    6. '[self' → logprob: -17.750261306762695
    7. '(
' → logprob: -18.875261306762695
    8. ' (' → logprob: -18.875261306762695
    9. '	self' → logprob: -18.875261306762695
    10. ')' → logprob: -19.375261306762695

Token 197: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0013217884115874767
    2. ')' → logprob: -7.376321792602539
    3. '(self' → logprob: -7.501321792602539
    4. ',' → logprob: -9.626321792602539
    5. '(' → logprob: -9.876321792602539
    6. '(int' → logprob: -11.501321792602539
    7. 'self' → logprob: -12.751321792602539
    8. '()),' → logprob: -12.876321792602539
    9. ' ),' → logprob: -13.126321792602539
    10. '(other' → logprob: -13.376321792602539

Token 198: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10090330243110657
    2. 'other' → logprob: -2.350903272628784
    3. ' int' → logprob: -7.350903511047363
    4. ' other' → logprob: -9.850903511047363
    5. '(int' → logprob: -13.725903511047363
    6. '(other' → logprob: -14.850903511047363
    7. '   ' → logprob: -16.725902557373047
    8. 'Other' → logprob: -17.100902557373047
    9. '<int' → logprob: -17.475902557373047
    10. ' ' → logprob: -17.850902557373047

Token 199: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -7.517272024415433e-05
    2. 'other' → logprob: -9.500075340270996
    3. 'Other' → logprob: -15.750075340270996
    4. ' other' → logprob: -16.37507438659668
    5. '(' → logprob: -18.75007438659668
    6. '_other' → logprob: -19.50007438659668
    7. 'OTHER' → logprob: -20.37507438659668
    8. ')' → logprob: -21.37507438659668
    9. '.other' → logprob: -22.25007438659668
    10. '其他' → logprob: -23.25007438659668

Token 200: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6373533606529236
    2. ',' → logprob: -0.7623533606529236
    3. '))' → logprob: -5.762353420257568
    4. '(),' → logprob: -6.887353420257568
    5. ' ,' → logprob: -8.26235294342041
    6. ')))' → logprob: -8.76235294342041
    7. ')' → logprob: -10.01235294342041
    8. ' if' → logprob: -10.13735294342041
    9. ' ),' → logprob: -10.38735294342041
    10. 'if' → logprob: -11.51235294342041

Token 201: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.26734623312950134
    2. 'Mod' → logprob: -1.8923462629318237
    3. 'cls' → logprob: -2.517346143722534
    4. ' self' → logprob: -6.392346382141113
    5. ' Mod' → logprob: -7.267346382141113
    6. 'MOD' → logprob: -8.517346382141113
    7. '(Mod' → logprob: -8.892346382141113
    8. 'None' → logprob: -8.892346382141113
    9. '   ' → logprob: -9.392346382141113
    10. ' cls' → logprob: -9.392346382141113

Token 202: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.0006290406454354525
    2. '.' → logprob: -7.62562894821167
    3. 'MOD' → logprob: -9.000629425048828
    4. '.__' → logprob: -11.500629425048828
    5. '._' → logprob: -12.625629425048828
    6. '_MOD' → logprob: -13.250629425048828
    7. '.MODE' → logprob: -14.125629425048828
    8. ').' → logprob: -14.500629425048828
    9. ' .' → logprob: -15.125629425048828
    10. '.
' → logprob: -15.250629425048828

Token 203: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -7.672236824873835e-05
    2. ')' → logprob: -9.625076293945312
    3. '))
' → logprob: -12.375076293945312
    4. ' ))' → logprob: -12.625076293945312
    5. ')))' → logprob: -13.875076293945312
    6. '))

' → logprob: -14.375076293945312
    7. '()))' → logprob: -14.625076293945312
    8. ' ' → logprob: -14.750076293945312
    9. '   ' → logprob: -15.375076293945312
    10. ' if' → logprob: -15.750076293945312

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33509859442710876
    2. ')' → logprob: -1.5850986242294312
    3. 'def' → logprob: -2.7100985050201416
    4. '__' → logprob: -4.960098743438721
    5. '<|end|>' → logprob: -6.085098743438721
    6. '_' → logprob: -6.585098743438721
    7. '#' → logprob: -6.710098743438721
    8. '0' → logprob: -8.710098266601562
    9. ':' → logprob: -8.835098266601562
    10. '  ' → logprob: -9.085098266601562

Token 205: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18199120461940765
    2. '   ' → logprob: -1.9319912195205688
    3. ')' → logprob: -4.181991100311279
    4. '__' (adapté à ' __') → logprob: -5.431991100311279
    5. ':def' → logprob: -7.931991100311279
    6. '_' → logprob: -8.181991577148438
    7. '(' → logprob: -8.431991577148438
    8. '=' → logprob: -8.431991577148438
    9. ' def' → logprob: -8.806991577148438
    10. '    
' → logprob: -8.931991577148438

Token 206: 'r' (ID: 81)
  Prédit: 'flo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flo' → logprob: -0.4515995383262634
    2. 'eq' → logprob: -1.9515995979309082
    3. 'r' → logprob: -2.201599597930908
    4. 'neg' → logprob: -2.326599597930908
    5. 'and' → logprob: -5.201599597930908
    6. 'pow' → logprob: -6.076599597930908
    7. 'repr' → logprob: -6.451599597930908
    8. 'int' → logprob: -6.451599597930908
    9. 'i' → logprob: -6.701599597930908
    10. 'mod' → logprob: -7.826599597930908

Token 207: 'add' (ID: 964)
  Prédit: '_add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.508171796798706
    2. '+' → logprob: -1.883171796798706
    3. '_' → logprob: -2.008171796798706
    4. 'add' → logprob: -2.633171796798706
    5. '__' → logprob: -3.258171796798706
    6. '___' → logprob: -7.758172035217285
    7. 'pow' → logprob: -8.258172035217285
    8. '*' → logprob: -8.383172035217285
    9. 'Add' → logprob: -8.883172035217285
    10. '_mul' → logprob: -9.383172035217285

Token 208: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.696889623621246e-06
    2. '__.__' → logprob: -13.37500286102295
    3. '__(' → logprob: -14.62500286102295
    4. '___' → logprob: -15.37500286102295
    5. '____' → logprob: -16.000001907348633
    6. '__((' → logprob: -16.500001907348633
    7. '__,' → logprob: -16.625001907348633
    8. '__('' → logprob: -16.625001907348633
    9. '__*/' → logprob: -17.375001907348633
    10. '__(*' → logprob: -18.000001907348633

Token 209: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.43317267298698425
    2. '=' → logprob: -1.0581727027893066
    3. ' =' → logprob: -5.433172702789307
    4. '___' → logprob: -10.683172225952148
    5. '(' → logprob: -11.183172225952148
    6. '__(' → logprob: -11.308172225952148
    7. '<|end|>' → logprob: -11.808172225952148
    8. '_' → logprob: -12.183172225952148
    9. '__('' → logprob: -12.308172225952148
    10. '_=' → logprob: -12.683172225952148

Token 210: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.56102097814437e-05
    2. ' __' → logprob: -10.000045776367188
    3. '___' → logprob: -17.250045776367188
    4. '+' → logprob: -18.125045776367188
    5. '__,' → logprob: -18.250045776367188
    6. '__
' → logprob: -18.375045776367188
    7. '_' → logprob: -18.875045776367188
    8. '   ' → logprob: -19.125045776367188
    9. '____' → logprob: -19.500045776367188
    10. ' ' → logprob: -20.375045776367188

Token 211: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -3.054500666621607e-06
    2. 'sub' → logprob: -12.75000286102295
    3. 'mul' → logprob: -17.625003814697266
    4. '_add' → logprob: -18.000003814697266
    5. ' add' → logprob: -19.125003814697266
    6. 'ad' → logprob: -20.125003814697266
    7. 'and' → logprob: -20.250003814697266
    8. 'a' → logprob: -20.375003814697266
    9. 'Add' → logprob: -20.625003814697266
    10. '(add' → logprob: -20.750003814697266

Token 212: '__
' (ID: 26336)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039499834179878235
    2. '__' → logprob: -3.4144997596740723
    3. ' __' → logprob: -5.289499759674072
    4. '<|end|>' → logprob: -8.53950023651123
    5. ' ' → logprob: -9.41450023651123
    6. 'def' → logprob: -9.41450023651123
    7. '  ' → logprob: -9.53950023651123
    8. '    ' → logprob: -9.66450023651123
    9. '.__' → logprob: -9.78950023651123
    10. '    
' → logprob: -10.16450023651123

Token 214: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -0.06265081465244293
    2. '_r' → logprob: -2.9376509189605713
    3. 'r' → logprob: -5.437650680541992
    4. ' __' → logprob: -5.937650680541992
    5. '   ' → logprob: -8.687650680541992
    6. '=r' → logprob: -8.812650680541992
    7. 'rm' → logprob: -9.062650680541992
    8. '___' → logprob: -9.687650680541992
    9. '.__' → logprob: -9.812650680541992
    10. '-r' → logprob: -9.937650680541992

Token 215: 'r' (ID: 81)
  Prédit: 'rm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rm' → logprob: -0.1002187430858612
    2. 'r' → logprob: -2.3502187728881836
    3. 'mul' → logprob: -11.475218772888184
    4. 'sub' → logprob: -13.600218772888184
    5. 'rand' → logprob: -14.725218772888184
    6. 'rs' → logprob: -17.600217819213867
    7. 'add' → logprob: -17.850217819213867
    8. 'RM' → logprob: -18.225217819213867
    9. 'pow' → logprob: -18.350217819213867
    10. 'ror' → logprob: -18.600217819213867

Token 216: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.011670485138893127
    2. '__' → logprob: -5.0116705894470215
    3. 'mul' → logprob: -5.7616705894470215
    4. '_sub' → logprob: -6.8866705894470215
    5. 'add' → logprob: -7.2616705894470215
    6. '_mul' → logprob: -9.761670112609863
    7. '_add' → logprob: -12.011670112609863
    8. '_' → logprob: -12.136670112609863
    9. 'mod' → logprob: -13.761670112609863
    10. 'r' → logprob: -14.386670112609863

Token 217: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.8087270038668066e-05
    2. '=' → logprob: -10.500027656555176
    3. '___' → logprob: -15.500027656555176
    4. ' =' → logprob: -16.125028610229492
    5. '_' → logprob: -16.125028610229492
    6. '__.__' → logprob: -16.750028610229492
    7. '____' → logprob: -16.875028610229492
    8. '__)' → logprob: -17.500028610229492
    9. ' __' → logprob: -17.875028610229492
    10. '__,' → logprob: -18.250028610229492

Token 218: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858794063329697
    2. ' =' → logprob: -3.0485880374908447
    3. '__' → logprob: -14.548587799072266
    4. '_=' → logprob: -17.173587799072266
    5. '   ' → logprob: -18.048587799072266
    6. '_' → logprob: -18.048587799072266
    7. ' ' → logprob: -18.173587799072266
    8. '=None' → logprob: -18.673587799072266
    9. '=_' → logprob: -19.048587799072266
    10. ' __' → logprob: -19.548587799072266

Token 219: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.008424029685556889
    2. '__' → logprob: -5.008423805236816
    3. '(lambda' → logprob: -7.008423805236816
    4. ' lambda' → logprob: -7.133423805236816
    5. '__(' → logprob: -13.258423805236816
    6. ' __' → logprob: -13.883423805236816
    7. '_lambda' → logprob: -13.883423805236816
    8. '=lambda' → logprob: -14.508423805236816
    9. '   ' → logprob: -15.008423805236816
    10. ' ' → logprob: -16.008424758911133

Token 220: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015860427811276168
    2. ' self' → logprob: -8.750158309936523
    3. 'cls' → logprob: -16.625158309936523
    4. '   ' → logprob: -17.375158309936523
    5. '(self' → logprob: -18.250158309936523
    6. '	self' → logprob: -18.500158309936523
    7. ' ' → logprob: -19.000158309936523
    8. 's' → logprob: -19.125158309936523
    9. '       ' → logprob: -21.125158309936523
    10. '_self' → logprob: -21.250158309936523

Token 221: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07229748368263245
    2. ' self' → logprob: -3.1972975730895996
    3. ',' → logprob: -3.5722975730895996
    4. '(self' → logprob: -7.6972975730896
    5. 'other' → logprob: -8.822297096252441
    6. ' other' → logprob: -9.822297096252441
    7. '_,' → logprob: -10.197297096252441
    8. '   ' → logprob: -10.572297096252441
    9. 's' → logprob: -10.822297096252441
    10. ',self' → logprob: -11.197297096252441

Token 222: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00038086410495452583
    2. 'self' → logprob: -8.000380516052246
    3. ' other' → logprob: -10.000380516052246
    4. ' self' → logprob: -17.250381469726562
    5. 'x' → logprob: -17.875381469726562
    6. 'Other' → logprob: -19.375381469726562
    7. 'oth' → logprob: -20.875381469726562
    8. 'others' → logprob: -21.250381469726562
    9. '(other' → logprob: -21.250381469726562
    10. 'o' → logprob: -21.375381469726562

Token 223: ':' (ID: 25)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.1826334446668625
    2. 'other' → logprob: -2.682633399963379
    3. '(other' → logprob: -2.807633399963379
    4. ' Mod' → logprob: -4.432633399963379
    5. 'Mod' → logprob: -4.932633399963379
    6. '(Mod' → logprob: -5.307633399963379
    7. ':' → logprob: -5.432633399963379
    8. 'Other' → logprob: -5.557633399963379
    9. ' self' → logprob: -6.307633399963379
    10. ',' → logprob: -6.432633399963379

Token 224: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -7.111979357432574e-05
    2. ' Mod' → logprob: -9.62507152557373
    3. '(Mod' → logprob: -13.12507152557373
    4. '   ' → logprob: -13.62507152557373
    5. '  ' → logprob: -14.37507152557373
    6. ' ' → logprob: -14.75007152557373
    7. '_Mod' → logprob: -15.25007152557373
    8. '-Mod' → logprob: -15.87507152557373
    9. 'Mo' → logprob: -16.125070571899414
    10. '_mod' → logprob: -16.500070571899414

Token 225: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.9361264946837764e-07
    2. 'int' → logprob: -16.5
    3. ' Int' → logprob: -19.25
    4. '_int' → logprob: -20.625
    5. '_Int' → logprob: -21.125
    6. 'In' → logprob: -21.375
    7. 'INT' → logprob: -21.75
    8. '	Int' → logprob: -22.125
    9. '(Int' → logprob: -22.5
    10. '.Int' → logprob: -22.625

Token 226: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02132312022149563
    2. '(other' → logprob: -4.021323204040527
    3. 'int' → logprob: -5.771323204040527
    4. '(' → logprob: -10.396323204040527
    5. 'other' → logprob: -11.021323204040527
    6. '((' → logprob: -13.021323204040527
    7. '(-' → logprob: -13.146323204040527
    8. '[int' → logprob: -14.646323204040527
    9. '__(' → logprob: -15.396323204040527
    10. '<int' → logprob: -15.646323204040527

Token 227: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.00015955790877342224
    2. 'other' → logprob: -8.75015926361084
    3. ' other' → logprob: -14.12515926361084
    4. '(' → logprob: -15.50015926361084
    5. 'Other' → logprob: -15.87515926361084
    6. '_other' → logprob: -17.000160217285156
    7. '.other' → logprob: -18.125160217285156
    8. '((' → logprob: -18.375160217285156
    9. '.__' → logprob: -18.750160217285156
    10. '-other' → logprob: -18.875160217285156

Token 228: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26806387305259705
    2. ' -' → logprob: -2.14306378364563
    3. '-' → logprob: -2.26806378364563
    4. '()' → logprob: -4.268064022064209
    5. '()-' → logprob: -8.76806354522705
    6. ')-' → logprob: -9.01806354522705
    7. ' ()' → logprob: -11.14306354522705
    8. ' )' → logprob: -11.39306354522705
    9. ']' → logprob: -12.01806354522705
    10. '__' → logprob: -12.39306354522705

Token 229: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3508966565132141
    2. '-' → logprob: -1.2258965969085693
    3. ')' → logprob: -6.350896835327148
    4. '()' → logprob: -7.600896835327148
    5. '()-' → logprob: -8.600896835327148
    6. ')-' → logprob: -11.600896835327148
    7. ' ' → logprob: -12.975896835327148
    8. ' ()' → logprob: -13.225896835327148
    9. '__' → logprob: -13.350896835327148
    10. '-int' → logprob: -13.725896835327148

Token 230: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.906711546937004e-05
    2. ' int' → logprob: -10.500048637390137
    3. 'self' → logprob: -10.750048637390137
    4. '(int' → logprob: -17.000049591064453
    5. '   ' → logprob: -19.000049591064453
    6. '[int' → logprob: -19.875049591064453
    7. '	int' → logprob: -20.125049591064453
    8. '<int' → logprob: -20.625049591064453
    9. ' ' → logprob: -20.875049591064453
    10. '(self' → logprob: -21.125049591064453

Token 231: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03804194927215576
    2. 'self' → logprob: -3.2880420684814453
    3. ' self' → logprob: -15.663042068481445
    4. '(' → logprob: -15.788042068481445
    5. '[self' → logprob: -16.413042068481445
    6. '	self' → logprob: -16.913042068481445
    7. '$self' → logprob: -17.913042068481445
    8. 's' → logprob: -19.288042068481445
    9. '(
' → logprob: -19.663042068481445
    10. ',self' → logprob: -19.663042068481445

Token 232: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -13.375003814697266
    3. ' )' → logprob: -13.750003814697266
    4. '())' → logprob: -15.500003814697266
    5. '))' → logprob: -15.625003814697266
    6. '),' → logprob: -16.000003814697266
    7. ')

' → logprob: -16.250003814697266
    8. '<|end|>' → logprob: -17.125003814697266
    9. ')return' → logprob: -17.250003814697266
    10. ')}' → logprob: -17.500003814697266

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023298002779483795
    2. '__' → logprob: -4.0232977867126465
    3. '<|end|>' → logprob: -5.3982977867126465
    4. ')' → logprob: -8.773298263549805
    5. ' __' → logprob: -9.023298263549805
    6. '  ' → logprob: -9.648298263549805
    7. '_' → logprob: -9.898298263549805
    8. ' ' → logprob: -9.898298263549805
    9. '___' → logprob: -10.148298263549805
    10. '    
' → logprob: -10.398298263549805

Token 234: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -0.10774199664592743
    2. '   ' → logprob: -2.8577420711517334
    3. ' __' → logprob: -3.1077420711517334
    4. '.__' → logprob: -11.232742309570312
    5. '___' → logprob: -11.982742309570312
    6. '    
' → logprob: -12.232742309570312
    7. ',__' → logprob: -12.482742309570312
    8. ' ' → logprob: -12.857742309570312
    9. '
' → logprob: -13.482742309570312
    10. '  ' → logprob: -13.732742309570312

Token 235: 'rm' (ID: 21373)
  Prédit: 'rm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rm' → logprob: -1.9361264946837764e-07
    2. 'r' → logprob: -16.5
    3. 'mul' → logprob: -17.125
    4. '```' → logprob: -17.875
    5. '
' → logprob: -18.25
    6. '   ' → logprob: -19.625
    7. 'RM' → logprob: -19.75
    8. '``' → logprob: -20.5
    9. ' rm' → logprob: -20.625
    10. 'rl' → logprob: -21.125

Token 236: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -3.128163257315464e-07
    2. 'ult' → logprob: -15.25
    3. 'u' → logprob: -18.625
    4. 'od' → logprob: -21.125
    5. ' ul' → logprob: -21.5
    6. 'mul' → logprob: -21.75
    7. 'ул' → logprob: -22.25
    8. '   ' → logprob: -22.875
    9. 'sub' → logprob: -23.0
    10. 'uls' → logprob: -23.125

Token 237: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00014025058771949261
    2. '=' → logprob: -8.875140190124512
    3. '_' → logprob: -15.750140190124512
    4. '___' → logprob: -15.875140190124512
    5. '__.__' → logprob: -17.500141143798828
    6. '____' → logprob: -17.625141143798828
    7. ' =' → logprob: -18.125141143798828
    8. '_=' → logprob: -18.750141143798828
    9. '__
' → logprob: -19.000141143798828
    10. '__)' → logprob: -19.000141143798828

Token 238: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002632430987432599
    2. ' =' → logprob: -8.250263214111328
    3. '__' → logprob: -13.250263214111328
    4. '=lambda' → logprob: -15.750263214111328
    5. '_=' → logprob: -17.375263214111328
    6. '   ' → logprob: -19.625263214111328
    7. '_' → logprob: -19.750263214111328
    8. '＝' → logprob: -20.875263214111328
    9. '=}' → logprob: -21.250263214111328
    10. '=
' → logprob: -21.375263214111328

Token 239: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.662937372922897e-05
    2. ' __' → logprob: -9.250096321105957
    3. '___' → logprob: -15.500096321105957
    4. '_mod' → logprob: -16.125097274780273
    5. '_mul' → logprob: -17.375097274780273
    6. '_' → logprob: -18.125097274780273
    7. '____' → logprob: -18.500097274780273
    8. '_m' → logprob: -18.750097274780273
    9. '.__' → logprob: -19.625097274780273
    10. ' ' → logprob: -19.625097274780273

Token 240: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -4.320199877838604e-07
    2. '_mul' → logprob: -15.0
    3. ' mul' → logprob: -18.75
    4. 'add' → logprob: -19.75
    5. 'imul' → logprob: -19.75
    6. '.mul' → logprob: -20.375
    7. 'multip' → logprob: -20.75
    8. 'pow' → logprob: -21.625
    9. 'mu' → logprob: -21.75
    10. 'mod' → logprob: -22.0

Token 241: '__
' (ID: 26336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007198620121926069
    2. '__' → logprob: -5.132198810577393
    3. '<|end|>' → logprob: -7.382198810577393
    4. 'def' → logprob: -7.757198810577393
    5. ' __' → logprob: -9.257198333740234
    6. ' def' → logprob: -10.382198333740234
    7. '    
' → logprob: -10.882198333740234
    8. '
' → logprob: -10.882198333740234
    9. '  ' → logprob: -11.507198333740234
    10. ',' → logprob: -11.507198333740234

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5797459483146667
    2. '__' → logprob: -0.8297459483146667
    3. ' __' → logprob: -5.579745769500732
    4. ' ' → logprob: -12.20474624633789
    5. '___' → logprob: -12.32974624633789
    6. '  ' → logprob: -12.45474624633789
    7. '____' → logprob: -12.70474624633789
    8. ',' → logprob: -13.20474624633789
    9. '    ' → logprob: -13.20474624633789
    10. ',__' → logprob: -13.45474624633789

Token 243: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -0.0063019078224897385
    2. ' __' → logprob: -5.2563018798828125
    3. '   ' → logprob: -6.8813018798828125
    4. '___' → logprob: -10.881301879882812
    5. '.__' → logprob: -12.131301879882812
    6. ',__' → logprob: -12.506301879882812
    7. '____' → logprob: -12.631301879882812
    8. 'def' → logprob: -13.381301879882812
    9. ' =' → logprob: -13.756301879882812
    10. '().__' → logprob: -14.131301879882812

Token 244: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.610702363715973e-06
    2. 'rf' → logprob: -12.000009536743164
    3. 'rt' → logprob: -13.375009536743164
    4. 'pow' → logprob: -14.250009536743164
    5. 'tr' → logprob: -14.375009536743164
    6. 'rp' → logprob: -15.000009536743164
    7. '```' → logprob: -15.625009536743164
    8. '
' → logprob: -16.125009536743164
    9. 'rop' → logprob: -17.125009536743164
    10. 'div' → logprob: -17.500009536743164

Token 245: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.003032374894246459
    2. 'pow' → logprob: -6.003032207489014
    3. 'div' → logprob: -7.503032207489014
    4. ' tr' → logprob: -13.128032684326172
    5. 'mul' → logprob: -14.128032684326172
    6. 'tru' → logprob: -14.378032684326172
    7. '```' → logprob: -14.628032684326172
    8. 'r' → logprob: -15.003032684326172
    9. '
' → logprob: -15.253032684326172
    10. '__' → logprob: -15.378032684326172

Token 246: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.00021676832693628967
    2. 'u' → logprob: -9.250216484069824
    3. 'ue' → logprob: -9.625216484069824
    4. '__' → logprob: -10.125216484069824
    5. 'ud' → logprob: -12.000216484069824
    6. 'ed' → logprob: -12.000216484069824
    7. ' ued' → logprob: -14.500216484069824
    8. '```' → logprob: -15.125216484069824
    9. '
' → logprob: -15.500216484069824
    10. '**' → logprob: -15.625216484069824

Token 247: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.0003741887048818171
    2. '__' → logprob: -8.250373840332031
    3. '/' → logprob: -9.625373840332031
    4. 'div' → logprob: -10.625373840332031
    5. 'v' → logprob: -11.125373840332031
    6. '/__' → logprob: -12.875373840332031
    7. 'vi' → logprob: -13.375373840332031
    8. 'e' → logprob: -13.875373840332031
    9. '/div' → logprob: -14.375373840332031
    10. 'ivi' → logprob: -14.750373840332031

Token 248: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006327360169962049
    2. '=' → logprob: -7.3756327629089355
    3. '_' → logprob: -12.500632286071777
    4. ' =' → logprob: -13.375632286071777
    5. '___' → logprob: -15.000632286071777
    6. '=lambda' → logprob: -16.375633239746094
    7. '__)' → logprob: -16.625633239746094
    8. '____' → logprob: -17.000633239746094
    9. '_=' → logprob: -17.125633239746094
    10. '__:' → logprob: -17.125633239746094

Token 249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029788212850689888
    2. ' =' → logprob: -3.5297882556915283
    3. '=lambda' → logprob: -10.27978801727295
    4. '__' → logprob: -12.65478801727295
    5. '   ' → logprob: -16.404788970947266
    6. '_=' → logprob: -16.529788970947266
    7. 'lambda' → logprob: -16.779788970947266
    8. '_' → logprob: -17.029788970947266
    9. '=None' → logprob: -17.529788970947266
    10. ')' → logprob: -18.029788970947266

Token 250: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.17063438892364502
    2. ' lambda' → logprob: -2.1706342697143555
    3. '__' → logprob: -3.1706342697143555
    4. ' __' → logprob: -7.2956342697143555
    5. '(lambda' → logprob: -9.670634269714355
    6. '_lambda' → logprob: -10.795634269714355
    7. '=lambda' → logprob: -10.920634269714355
    8. ' lamb' → logprob: -12.670634269714355
    9. 'def' → logprob: -13.420634269714355
    10. 'λ' → logprob: -14.045634269714355

Token 251: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005530327325686812
    2. ' self' → logprob: -7.500553131103516
    3. 's' → logprob: -20.125553131103516
    4. '(self' → logprob: -21.750553131103516
    5. '	self' → logprob: -22.000553131103516
    6. ' ' → logprob: -22.375553131103516
    7. ' ' → logprob: -22.875553131103516
    8. '   ' → logprob: -23.625553131103516
    9. 'x' → logprob: -23.875553131103516
    10. 'elf' → logprob: -25.375553131103516

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10063222795724869
    2. 'self' → logprob: -2.3506321907043457
    3. 'other' → logprob: -7.975632190704346
    4. ' self' → logprob: -10.225632667541504
    5. ',self' → logprob: -10.475632667541504
    6. 'int' → logprob: -11.600632667541504
    7. ' other' → logprob: -12.350632667541504
    8. '(self' → logprob: -14.225632667541504
    9. '_,' → logprob: -14.225632667541504
    10. ',int' → logprob: -14.350632667541504

Token 253: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0007105246186256409
    2. ' other' → logprob: -7.250710487365723
    3. 'self' → logprob: -14.500710487365723
    4. 'Other' → logprob: -17.87571144104004
    5. '(other' → logprob: -20.37571144104004
    6. 'Mod' → logprob: -20.62571144104004
    7. ' self' → logprob: -22.00071144104004
    8. ' ' → logprob: -23.12571144104004
    9. ' Mod' → logprob: -23.12571144104004
    10. '其他' → logprob: -23.62571144104004

Token 254: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43733999133110046
    2. 'Mod' → logprob: -1.0623400211334229
    3. ' Mod' → logprob: -5.562339782714844
    4. '(Mod' → logprob: -5.687339782714844
    5. ' :' → logprob: -6.687339782714844
    6. '   ' → logprob: -9.312339782714844
    7. ',' → logprob: -11.812339782714844
    8. 'return' → logprob: -11.937339782714844
    9. '=' → logprob: -12.187339782714844
    10. ':return' → logprob: -12.687339782714844

Token 255: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00020413640595506877
    2. ' Mod' → logprob: -8.500204086303711
    3. '(Mod' → logprob: -14.500204086303711
    4. '   ' → logprob: -16.75020408630371
    5. ' ' → logprob: -17.12520408630371
    6. 'Mo' → logprob: -18.37520408630371
    7. '  ' → logprob: -18.37520408630371
    8. '_mod' → logprob: -18.50020408630371
    9. 'Modulo' → logprob: -18.50020408630371
    10. '_Mod' → logprob: -18.75020408630371

Token 256: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -6.988221684878226e-06
    2. 'int' → logprob: -11.875006675720215
    3. '	Int' → logprob: -17.62500762939453
    4. ' Int' → logprob: -18.25000762939453
    5. '_int' → logprob: -18.37500762939453
    6. '(Int' → logprob: -18.50000762939453
    7. 'nt' → logprob: -18.75000762939453
    8. '<Int' → logprob: -18.75000762939453
    9. 'In' → logprob: -19.00000762939453
    10. '_Int' → logprob: -19.25000762939453

Token 257: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00034750174381770194
    2. 'int' → logprob: -8.000347137451172
    3. '(pow' → logprob: -11.375347137451172
    4. '[int' → logprob: -15.125347137451172
    5. ' int' → logprob: -16.000347137451172
    6. '(' → logprob: -16.750347137451172
    7. 'pow' → logprob: -16.750347137451172
    8. '<int' → logprob: -17.375347137451172
    9. ':int' → logprob: -18.125347137451172
    10. '((' → logprob: -18.375347137451172

Token 258: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.6240566083070007e-06
    2. 'other' → logprob: -13.375001907348633
    3. ' other' → logprob: -18.500001907348633
    4. '(' → logprob: -19.500001907348633
    5. 'Other' → logprob: -20.000001907348633
    6. '(self' → logprob: -20.250001907348633
    7. '_other' → logprob: -21.000001907348633
    8. '.other' → logprob: -22.000001907348633
    9. '(one' → logprob: -22.875001907348633
    10. '((' → logprob: -23.000001907348633

Token 259: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006870360113680363
    2. '*' → logprob: -5.006870269775391
    3. '*)' → logprob: -9.50687026977539
    4. ')*' → logprob: -9.75687026977539
    5. '()' → logprob: -11.00687026977539
    6. ' *' → logprob: -13.25687026977539
    7. '__' → logprob: -13.50687026977539
    8. '}' → logprob: -14.13187026977539
    9. ' )' → logprob: -14.50687026977539
    10. '`)' → logprob: -14.75687026977539

Token 260: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0978097915649414
    2. ')' → logprob: -2.7228097915649414
    3. ' *' → logprob: -3.5978097915649414
    4. '//' → logprob: -9.972809791564941
    5. ')*' → logprob: -10.722809791564941
    6. ' //' → logprob: -11.597809791564941
    7. '__' → logprob: -11.597809791564941
    8. '*)' → logprob: -12.472809791564941
    9. '}' → logprob: -12.972809791564941
    10. ' ' → logprob: -13.347809791564941

Token 261: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0009139667963609099
    2. ' pow' → logprob: -7.000914096832275
    3. '(pow' → logprob: -13.500913619995117
    4. '   ' → logprob: -14.375913619995117
    5. 'int' → logprob: -14.875913619995117
    6. '
' → logprob: -16.500913619995117
    7. ' ' → logprob: -16.625913619995117
    8. '  ' → logprob: -17.375913619995117
    9. '       ' → logprob: -18.000913619995117
    10. '.pow' → logprob: -18.625913619995117

Token 262: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005235190503299236
    2. 'int' → logprob: -5.255235195159912
    3. '<int' → logprob: -14.505234718322754
    4. '[int' → logprob: -14.880234718322754
    5. '(' → logprob: -15.005234718322754
    6. ' int' → logprob: -15.755234718322754
    7. '	int' → logprob: -16.38023567199707
    8. '(
' → logprob: -16.63023567199707
    9. ':int' → logprob: -17.38023567199707
    10. '=int' → logprob: -17.38023567199707

Token 263: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.88418151892256e-05
    2. 'self' → logprob: -9.750059127807617
    3. '(' → logprob: -14.625059127807617
    4. '[self' → logprob: -17.750059127807617
    5. ' self' → logprob: -18.125059127807617
    6. '(
' → logprob: -18.750059127807617
    7. '	self' → logprob: -19.125059127807617
    8. ' (' → logprob: -19.375059127807617
    9. '$self' → logprob: -19.500059127807617
    10. ' ' → logprob: -19.500059127807617

Token 264: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00033558503491804004
    2. '(),' → logprob: -8.500335693359375
    3. '()),' → logprob: -10.000335693359375
    4. '.MOD' → logprob: -10.000335693359375
    5. 'MOD' → logprob: -10.750335693359375
    6. ',' → logprob: -12.000335693359375
    7. '(self' → logprob: -13.000335693359375
    8. '.Mod' → logprob: -13.375335693359375
    9. '()' → logprob: -13.375335693359375
    10. ')' → logprob: -13.375335693359375

Token 265: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031388550996780396
    2. ' self' → logprob: -6.128139019012451
    3. 'Mod' → logprob: -7.003139019012451
    4. ' Mod' → logprob: -11.128138542175293
    5. '(Mod' → logprob: -11.503138542175293
    6. '(self' → logprob: -12.128138542175293
    7. 'MOD' → logprob: -12.253138542175293
    8. '   ' → logprob: -12.753138542175293
    9. ' ' → logprob: -13.503138542175293
    10. '[self' → logprob: -13.878138542175293

Token 266: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -2.7491250875755213e-05
    2. 'MOD' → logprob: -10.750027656555176
    3. '.MODE' → logprob: -12.625027656555176
    4. '.Mod' → logprob: -13.000027656555176
    5. '_MOD' → logprob: -15.250027656555176
    6. '.' → logprob: -16.00002670288086
    7. '.__' → logprob: -17.25002670288086
    8. '.mod' → logprob: -17.37502670288086
    9. '.MIN' → logprob: -17.37502670288086
    10. '.CLASS' → logprob: -17.87502670288086

Token 267: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029755467548966408
    2. ' -' → logprob: -3.5297553539276123
    3. ' ' → logprob: -12.404755592346191
    4. '   ' → logprob: -15.029755592346191
    5. '  ' → logprob: -15.154755592346191
    6. ')' → logprob: -15.654755592346191
    7. '()-' → logprob: -16.904754638671875
    8. '−' → logprob: -17.029754638671875
    9. ')-' → logprob: -17.154754638671875
    10. '```' → logprob: -17.404754638671875

Token 268: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '-' → logprob: -17.875015258789062
    4. '۲' → logprob: -19.000015258789062
    5. '２' → logprob: -19.750015258789062
    6. '  ' → logprob: -20.125015258789062
    7. '٢' → logprob: -20.125015258789062
    8. '   ' → logprob: -20.312515258789062
    9. '
' → logprob: -20.375015258789062
    10. '```' → logprob: -20.687515258789062

Token 269: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '
' → logprob: -17.000001907348633
    4. '```' → logprob: -17.062501907348633
    5. '7' → logprob: -17.750001907348633
    6. '   ' → logprob: -18.000001907348633
    7. '-' → logprob: -18.187501907348633
    8. '  ' → logprob: -18.187501907348633
    9. '
' → logprob: -18.812501907348633
    10. '۲' → logprob: -18.875001907348633

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.029847231227905e-05
    2. '))' → logprob: -10.750080108642578
    3. ',self' → logprob: -10.750080108642578
    4. 'self' → logprob: -11.000080108642578
    5. ' ,' → logprob: -11.500080108642578
    6. '(),' → logprob: -12.125080108642578
    7. '),' → logprob: -12.875080108642578
    8. ')' → logprob: -13.500080108642578
    9. '   ' → logprob: -14.500080108642578
    10. ')),' → logprob: -15.875080108642578

Token 271: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002619318547658622
    2. ' self' → logprob: -8.250262260437012
    3. '   ' → logprob: -15.000262260437012
    4. 'Mod' → logprob: -15.750262260437012
    5. 'Self' → logprob: -16.625261306762695
    6. '       ' → logprob: -17.875261306762695
    7. '	self' → logprob: -18.000261306762695
    8. ')' → logprob: -19.000261306762695
    9. ' ' → logprob: -19.375261306762695
    10. 'MOD' → logprob: -19.500261306762695

Token 272: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.00015085970517247915
    2. 'MOD' → logprob: -9.750150680541992
    3. 'self' → logprob: -9.875150680541992
    4. '.MODE' → logprob: -10.500150680541992
    5. '))' → logprob: -11.625150680541992
    6. '.Mod' → logprob: -13.250150680541992
    7. '_MOD' → logprob: -13.375150680541992
    8. ')' → logprob: -14.625150680541992
    9. ')))' → logprob: -15.375150680541992
    10. '.M' → logprob: -15.625150680541992

Token 273: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010378103470429778
    2. ')' → logprob: -6.87603759765625
    3. '))
' → logprob: -13.12603759765625
    4. ')))' → logprob: -13.12603759765625
    5. ' ))' → logprob: -14.75103759765625
    6. '   ' → logprob: -15.12603759765625
    7. '))

' → logprob: -16.00103759765625
    8. '()))' → logprob: -16.00103759765625
    9. ' ' → logprob: -16.50103759765625
    10. '));' → logprob: -17.87603759765625

Token 274: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 275: ' __' (ID: 2516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2280994951725006
    2. ')' → logprob: -2.6030995845794678
    3. '<|end|>' → logprob: -2.8530995845794678
    4. '__' (adapté à ' __') → logprob: -3.8530995845794678
    5. 'def' → logprob: -4.603099346160889
    6. '=' → logprob: -4.853099346160889
    7. '#' → logprob: -5.103099346160889
    8. '    ' → logprob: -5.728099346160889
    9. '...' → logprob: -5.853099346160889
    10. '
' → logprob: -5.853099346160889

Token 276: 'r' (ID: 81)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -1.0043821334838867
    2. 'neg' → logprob: -1.2543821334838867
    3. 'pow' → logprob: -2.2543821334838867
    4. 'r' → logprob: -2.2543821334838867
    5. 'eq' → logprob: -2.6293821334838867
    6. 'rf' → logprob: -3.2543821334838867
    7. 'repr' → logprob: -4.379382133483887
    8. 'mod' → logprob: -5.379382133483887
    9. 'flo' → logprob: -5.504382133483887
    10. 'if' → logprob: -5.629382133483887

Token 277: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -4.596781946020201e-05
    2. 'add' → logprob: -10.000045776367188
    3. 'mod' → logprob: -15.000045776367188
    4. 'pos' → logprob: -16.375045776367188
    5. '_pow' → logprob: -16.500045776367188
    6. 'xor' → logprob: -17.250045776367188
    7. 'div' → logprob: -17.625045776367188
    8. 'Pow' → logprob: -17.875045776367188
    9. ' pow' → logprob: -18.000045776367188
    10. 'sub' → logprob: -18.375045776367188

Token 278: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.512236498361744e-07
    2. '=' → logprob: -14.750000953674316
    3. '_' → logprob: -16.625
    4. '___' → logprob: -17.0
    5. '____' → logprob: -19.625
    6. '__
' → logprob: -20.875
    7. '__(' → logprob: -21.125
    8. '__*/' → logprob: -22.125
    9. '__
' → logprob: -22.125
    10. '__.__' → logprob: -22.375

Token 279: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715967319905758
    2. ' =' → logprob: -5.006715774536133
    3. '=lambda' → logprob: -14.506715774536133
    4. '__' → logprob: -16.756715774536133
    5. '=self' → logprob: -19.756715774536133
    6. '＝' → logprob: -20.256715774536133
    7. '_=' → logprob: -20.256715774536133
    8. '=None' → logprob: -20.381715774536133
    9. ' ' → logprob: -20.756715774536133
    10. '```' → logprob: -20.881715774536133

Token 280: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5896128416061401
    2. ' lambda' → logprob: -0.8396128416061401
    3. '__' → logprob: -4.33961296081543
    4. ' __' → logprob: -7.71461296081543
    5. '(lambda' → logprob: -9.58961296081543
    6. '_lambda' → logprob: -12.08961296081543
    7. '=lambda' → logprob: -12.08961296081543
    8. 'def' → logprob: -12.46461296081543
    9. ' lamb' → logprob: -12.46461296081543
    10. ' def' → logprob: -14.08961296081543

Token 281: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0040785204619169235
    2. ' self' → logprob: -5.504078388214111
    3. '(self' → logprob: -16.754077911376953
    4. '	self' → logprob: -18.504077911376953
    5. 's' → logprob: -19.254077911376953
    6. ' ' → logprob: -19.379077911376953
    7. ' ' → logprob: -20.254077911376953
    8. 'Self' → logprob: -20.754077911376953
    9. 'Mod' → logprob: -21.379077911376953
    10. 'x' → logprob: -21.504077911376953

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011391390580683947
    2. 'self' → logprob: -9.250113487243652
    3. ',self' → logprob: -11.000113487243652
    4. ' ,' → logprob: -14.500113487243652
    5. ' self' → logprob: -15.625113487243652
    6. '(self' → logprob: -16.00011444091797
    7. 'other' → logprob: -16.37511444091797
    8. '_,' → logprob: -17.12511444091797
    9. 's' → logprob: -18.12511444091797
    10. '__,' → logprob: -19.75011444091797

Token 283: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.6366082429885864
    2. ' other' → logprob: -1.3866082429885864
    3. 'self' → logprob: -1.6366082429885864
    4. ' self' → logprob: -3.636608123779297
    5. 'Other' → logprob: -12.136608123779297
    6. 'Mod' → logprob: -12.386608123779297
    7. ' Mod' → logprob: -13.386608123779297
    8. ' ' → logprob: -13.886608123779297
    9. 'lambda' → logprob: -14.136608123779297
    10. '(other' → logprob: -14.761608123779297

Token 284: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021272120997309685
    2. ',' → logprob: -3.8962721824645996
    3. 'Mod' → logprob: -8.271271705627441
    4. 'self' → logprob: -8.646271705627441
    5. '__:' → logprob: -9.646271705627441
    6. '(self' → logprob: -10.021271705627441
    7. '=' → logprob: -10.021271705627441
    8. '__' → logprob: -10.271271705627441
    9. '(Mod' → logprob: -10.396271705627441
    10. ':self' → logprob: -10.396271705627441

Token 285: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0001532401074655354
    2. ' Mod' → logprob: -9.250153541564941
    3. 'pow' → logprob: -9.875153541564941
    4. 'Pow' → logprob: -12.625153541564941
    5. '(Mod' → logprob: -13.750153541564941
    6. '   ' → logprob: -14.500153541564941
    7. 'Power' → logprob: -16.250152587890625
    8. ' pow' → logprob: -16.375152587890625
    9. '  ' → logprob: -16.375152587890625
    10. '_Mod' → logprob: -16.375152587890625

Token 286: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.0280383548888494e-06
    2. 'int' → logprob: -13.875000953674316
    3. ' Int' → logprob: -19.000001907348633
    4. '_int' → logprob: -19.125001907348633
    5. '(Int' → logprob: -20.000001907348633
    6. '_Int' → logprob: -20.500001907348633
    7. 'In' → logprob: -20.500001907348633
    8. 'I' → logprob: -20.750001907348633
    9. 'Pow' → logprob: -20.875001907348633
    10. 'nt' → logprob: -21.125001907348633

Token 287: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.002057119505479932
    2. '(int' → logprob: -6.502057075500488
    3. 'pow' → logprob: -7.502057075500488
    4. '(power' → logprob: -13.752057075500488
    5. '(' → logprob: -14.377057075500488
    6. ' pow' → logprob: -14.627057075500488
    7. 'int' → logprob: -14.627057075500488
    8. 'Pow' → logprob: -15.877057075500488
    9. '(po' → logprob: -18.002058029174805
    10. '_pow' → logprob: -18.127058029174805

Token 288: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.52919222577475e-05
    2. 'int' → logprob: -9.625075340270996
    3. '<int' → logprob: -12.625075340270996
    4. '(other' → logprob: -12.750075340270996
    5. '(' → logprob: -13.750075340270996
    6. ',int' → logprob: -14.250075340270996
    7. ' int' → logprob: -14.500075340270996
    8. '[int' → logprob: -14.750075340270996
    9. ':int' → logprob: -15.375075340270996
    10. '=int' → logprob: -15.750075340270996

Token 289: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0005557744298130274
    2. 'other' → logprob: -7.500555992126465
    3. 'Other' → logprob: -13.375555992126465
    4. ' other' → logprob: -13.750555992126465
    5. '_other' → logprob: -16.62555503845215
    6. '(self' → logprob: -17.12555503845215
    7. '(' → logprob: -17.62555503845215
    8. '.other' → logprob: -18.87555503845215
    9. 'OTHER' → logprob: -19.25055503845215
    10. '(int' → logprob: -19.75055503845215

Token 290: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00018577903392724693
    2. ',' → logprob: -8.8751859664917
    3. ')' → logprob: -10.2501859664917
    4. ' ),' → logprob: -11.7501859664917
    5. 'int' → logprob: -14.2501859664917
    6. '(),' → logprob: -14.3751859664917
    7. '()),' → logprob: -14.6251859664917
    8. '(' → logprob: -14.7501859664917
    9. '(int' → logprob: -15.7501859664917
    10. ' ,' → logprob: -16.375185012817383

Token 291: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009117019944824278
    2. ' int' → logprob: -7.000911712646484
    3. 'self' → logprob: -15.625911712646484
    4. '(int' → logprob: -18.500911712646484
    5. '[int' → logprob: -19.500911712646484
    6. ' ' → logprob: -19.875911712646484
    7. '   ' → logprob: -20.250911712646484
    8. '<int' → logprob: -21.125911712646484
    9. '	int' → logprob: -21.375911712646484
    10. '  ' → logprob: -22.250911712646484

Token 292: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00033593899570405483
    2. 'self' → logprob: -8.000335693359375
    3. '(' → logprob: -14.625335693359375
    4. '[self' → logprob: -17.750335693359375
    5. ')' → logprob: -18.000335693359375
    6. ' self' → logprob: -18.125335693359375
    7. '(
' → logprob: -18.750335693359375
    8. '$self' → logprob: -18.875335693359375
    9. '	self' → logprob: -19.500335693359375
    10. '(int' → logprob: -19.875335693359375

Token 293: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.006692988332360983
    2. '))' → logprob: -5.256692886352539
    3. ')))' → logprob: -6.756692886352539
    4. ')' → logprob: -8.381692886352539
    5. ',' → logprob: -10.006692886352539
    6. '.MOD' → logprob: -11.631692886352539
    7. ' ),' → logprob: -12.631692886352539
    8. 'MOD' → logprob: -12.756692886352539
    9. '.Mod' → logprob: -13.881692886352539
    10. ')),' → logprob: -14.381692886352539

Token 294: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0020435559563338757
    2. ' self' → logprob: -6.252043724060059
    3. 'Mod' → logprob: -9.127043724060059
    4. '   ' → logprob: -12.502043724060059
    5. '       ' → logprob: -14.252043724060059
    6. ' Mod' → logprob: -14.502043724060059
    7. 'Self' → logprob: -14.752043724060059
    8. 'int' → logprob: -15.502043724060059
    9. 'MOD' → logprob: -15.627043724060059
    10. ' ' → logprob: -15.752043724060059

Token 295: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.0003392767102923244
    2. 'MOD' → logprob: -8.00033950805664
    3. '.' → logprob: -13.00033950805664
    4. '.MODE' → logprob: -13.75033950805664
    5. '_MOD' → logprob: -16.00033950805664
    6. ' MOD' → logprob: -16.37533950805664
    7. '.Mod' → logprob: -16.50033950805664
    8. '.M' → logprob: -16.75033950805664
    9. ').' → logprob: -17.12533950805664
    10. ' .' → logprob: -17.37533950805664

Token 296: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10021486133337021
    2. ')' → logprob: -2.350214958190918
    3. ')))' → logprob: -12.100214958190918
    4. '))
' → logprob: -13.475214958190918
    5. ' ))' → logprob: -15.350214958190918
    6. '()' → logprob: -15.350214958190918
    7. '()))' → logprob: -16.1002140045166
    8. '})' → logprob: -16.2252140045166
    9. ' )' → logprob: -16.2252140045166
    10. '())' → logprob: -16.4752140045166

Token 297: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6607871055603027
    2. '
' → logprob: -1.7857871055603027
    3. 'def' → logprob: -2.5357871055603027
    4. '<|end|>' → logprob: -2.5357871055603027
    5. '#' → logprob: -2.9107871055603027
    6. ')' → logprob: -3.6607871055603027
    7. '(' → logprob: -4.035787105560303
    8. '   ' → logprob: -4.285787105560303
    9. '<|end|>' → logprob: -5.035787105560303
    10. ',' → logprob: -5.285787105560303

Token 298: ' def' (ID: 1056)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6956272125244141
    2. ')' → logprob: -1.695627212524414
    3. '
' → logprob: -1.945627212524414
    4. '<|end|>' → logprob: -2.695627212524414
    5. '#' → logprob: -3.195627212524414
    6. 'def' (adapté à ' def') → logprob: -3.820627212524414
    7. '   ' → logprob: -4.445627212524414
    8. '=' → logprob: -5.070627212524414
    9. ',' → logprob: -5.445627212524414
    10. '    
' → logprob: -5.695627212524414

Token 299: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06261195242404938
    2. ' __' → logprob: -3.4376120567321777
    3. 'int' → logprob: -4.437612056732178
    4. 'inv' → logprob: -5.312612056732178
    5. 'pow' → logprob: -6.062612056732178
    6. 'mod' → logprob: -6.062612056732178
    7. 'repr' → logprob: -6.312612056732178
    8. 'bit' → logprob: -6.812612056732178
    9. 'inverse' → logprob: -6.937612056732178
    10. 'invert' → logprob: -7.187612056732178

Token 300: 'repr' (ID: 67002)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.15465156733989716
    2. 'int' → logprob: -2.404651641845703
    3. 'repr' → logprob: -3.154651641845703
    4. 'eq' → logprob: -5.279651641845703
    5. 'flo' → logprob: -5.279651641845703
    6. 'mod' → logprob: -10.154651641845703
    7. 'abs' → logprob: -10.779651641845703
    8. 'i' → logprob: -10.904651641845703
    9. 'str' → logprob: -11.404651641845703
    10. 'hash' → logprob: -11.529651641845703

Token 301: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00012678056373260915
    2. '__' → logprob: -9.250126838684082
    3. '__(
' → logprob: -11.375126838684082
    4. '(self' → logprob: -11.625126838684082
    5. '__('' → logprob: -11.625126838684082
    6. '__((' → logprob: -14.375126838684082
    7. '_(' → logprob: -14.750126838684082
    8. '__("' → logprob: -15.500126838684082
    9. '__(*' → logprob: -16.625125885009766
    10. '___' → logprob: -17.750125885009766

Token 302: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.088346359931165e-07
    2. ' self' → logprob: -14.000000953674316
    3. '(self' → logprob: -17.625
    4. '   ' → logprob: -19.375
    5. ')' → logprob: -19.875
    6. '
' → logprob: -19.875
    7. 's' → logprob: -20.0
    8. '       ' → logprob: -20.875
    9. '	self' → logprob: -21.125
    10. '0' → logprob: -22.125

Token 303: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0042472160421311855
    2. '__' → logprob: -5.629247188568115
    3. '__('' → logprob: -8.379247665405273
    4. '__(
' → logprob: -9.129247665405273
    5. 'self' → logprob: -9.254247665405273
    6. '(self' → logprob: -9.379247665405273
    7. '__:' → logprob: -10.254247665405273
    8. '):' → logprob: -10.504247665405273
    9. ')(__' → logprob: -10.754247665405273
    10. ')(' → logprob: -11.129247665405273

Token 304: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.21959900856018066
    2. '(self' → logprob: -2.2195990085601807
    3. '       ' → logprob: -2.4695990085601807
    4. ' self' → logprob: -5.719598770141602
    5. '   ' → logprob: -7.719598770141602
    6. '(' → logprob: -9.219598770141602
    7. 'return' → logprob: -10.719598770141602
    8. 'f' → logprob: -11.094598770141602
    9. '	self' → logprob: -12.594598770141602
    10. 's' → logprob: -12.969598770141602

Token 305: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -6.194110756041482e-05
    2. '       ' → logprob: -9.750061988830566
    3. ' return' → logprob: -12.625061988830566
    4. '   ' → logprob: -15.625061988830566
    5. '           ' → logprob: -16.87506103515625
    6. '	return' → logprob: -17.25006103515625
    7. '
' → logprob: -17.50006103515625
    8. '{return' → logprob: -19.62506103515625
    9. ':return' → logprob: -20.12506103515625
    10. '        
' → logprob: -21.12506103515625

Token 306: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.16022716462612152
    2. 'f' → logprob: -1.9102271795272827
    3. ' f' → logprob: -13.285226821899414
    4. ' str' → logprob: -13.660226821899414
    5. 'repr' → logprob: -16.160226821899414
    6. '(str' → logprob: -17.160226821899414
    7. 'int' → logprob: -17.660226821899414
    8. 'format' → logprob: -18.660226821899414
    9. '[str' → logprob: -19.035226821899414
    10. '(f' → logprob: -19.035226821899414

Token 307: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.21309378743171692
    2. '(self' → logprob: -1.7130937576293945
    3. 'int' → logprob: -4.4630937576293945
    4. '<int' → logprob: -10.588093757629395
    5. 'self' → logprob: -10.713093757629395
    6. ':int' → logprob: -11.088093757629395
    7. '[int' → logprob: -11.963093757629395
    8. '(' → logprob: -12.338093757629395
    9. ' int' → logprob: -12.588093757629395
    10. '```' → logprob: -13.088093757629395

Token 308: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006724722217768431
    2. 'self' → logprob: -5.006724834442139
    3. ')' → logprob: -11.75672435760498
    4. '[self' → logprob: -14.50672435760498
    5. ' self' → logprob: -14.63172435760498
    6. '	self' → logprob: -15.88172435760498
    7. '(' → logprob: -16.256725311279297
    8. '$self' → logprob: -16.631725311279297
    9. ':self' → logprob: -16.756725311279297
    10. '*self' → logprob: -17.006725311279297

Token 309: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16583916544914246
    2. '))' → logprob: -1.9158391952514648
    3. '(self' → logprob: -5.415839195251465
    4. 'self' → logprob: -6.790839195251465
    5. '())' → logprob: -11.165839195251465
    6. ')))' → logprob: -12.040839195251465
    7. '})' → logprob: -12.915839195251465
    8. '()))' → logprob: -13.540839195251465
    9. ')
' → logprob: -13.790839195251465
    10. '])' → logprob: -14.040839195251465

Token 310: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03424087166786194
    2. 'class' → logprob: -4.53424072265625
    3. '
' → logprob: -5.40924072265625
    4. ')' → logprob: -5.53424072265625
    5. '@' → logprob: -5.53424072265625
    6. '(' → logprob: -5.78424072265625
    7. '#' → logprob: -6.03424072265625
    8. '   ' → logprob: -6.28424072265625
    9. '(
' → logprob: -7.65924072265625
    10. '()' → logprob: -8.15924072265625

Token 311: ' resolve' (ID: 14062)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.011479362845420837
    2. 'main' → logprob: -4.636479377746582
    3. ' solve' → logprob: -6.761479377746582
    4. 'solve' → logprob: -9.011479377746582
    5. ' factorial' → logprob: -9.636479377746582
    6. ' mod' → logprob: -10.011479377746582
    7. ' dfs' → logprob: -10.636479377746582
    8. ' pow' → logprob: -10.761479377746582
    9. 'mod' → logprob: -10.761479377746582
    10. ' read' → logprob: -11.011479377746582

Token 312: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.670925358776003e-05
    2. ' ():' → logprob: -10.000066757202148
    3. '()' → logprob: -11.125066757202148
    4. '():
' → logprob: -12.000066757202148
    5. '(' → logprob: -15.500066757202148
    6. '().' → logprob: -17.62506675720215
    7. '()(' → logprob: -17.62506675720215
    8. '():
' → logprob: -18.00006675720215
    9. ' ()' → logprob: -18.00006675720215
    10. '()>' → logprob: -18.25006675720215

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020741254556924105
    2. '	n' → logprob: -7.502074241638184
    3. '(n' → logprob: -7.877074241638184
    4. 'n' → logprob: -7.877074241638184
    5. '\n' → logprob: -8.502074241638184
    6. ' n' → logprob: -8.752074241638184
    7. '\' → logprob: -9.252074241638184
    8. '    
' → logprob: -9.252074241638184
    9. '(' → logprob: -10.127074241638184
    10. '    ' → logprob: -10.252074241638184

Token 314: ' L' (ID: 451)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.27914369106292725
    2. 'N' → logprob: -1.6541436910629272
    3. ' n' → logprob: -3.404143810272217
    4. '   ' → logprob: -4.529143810272217
    5. ' N' → logprob: -5.029143810272217
    6. 'h' → logprob: -7.279143810272217
    7. 'H' → logprob: -7.654143810272217
    8. ' ' → logprob: -9.279143333435059
    9. ' H' → logprob: -9.279143333435059
    10. 't' → logprob: -9.779143333435059

Token 315: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13687798380851746
    2. ',' → logprob: -2.38687801361084
    3. '=' → logprob: -3.38687801361084
    4. '   ' → logprob: -6.51187801361084
    5. '=int' → logprob: -8.26187801361084
    6. ' ' → logprob: -8.63687801361084
    7. ' ,' → logprob: -9.51187801361084
    8. ',N' → logprob: -10.01187801361084
    9. '  ' → logprob: -10.88687801361084
    10. ')' → logprob: -11.13687801361084

Token 316: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.010021676309406757
    2. ' R' → logprob: -5.885021686553955
    3. 'K' → logprob: -6.010021686553955
    4. 'r' → logprob: -6.510021686553955
    5. 'D' → logprob: -6.885021686553955
    6. 'N' → logprob: -7.260021686553955
    7. ' =' → logprob: -8.010021209716797
    8. 'W' → logprob: -8.635021209716797
    9. 'S' → logprob: -8.635021209716797
    10. 'Q' → logprob: -8.760021209716797

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011049704626202583
    2. ' =' → logprob: -4.511049747467041
    3. '=input' → logprob: -13.636049270629883
    4. '=sys' → logprob: -15.511049270629883
    5. ',' → logprob: -16.136049270629883
    6. ' ' → logprob: -16.261049270629883
    7. '=int' → logprob: -16.636049270629883
    8. '=list' → logprob: -16.636049270629883
    9. '＝' → logprob: -17.136049270629883
    10. ' ' → logprob: -17.761049270629883

Token 318: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1002129316329956
    2. ' map' → logprob: -2.350213050842285
    3. 'input' → logprob: -12.350213050842285
    4. 'list' → logprob: -14.225213050842285
    5. ' ' → logprob: -14.975213050842285
    6. ' input' → logprob: -14.975213050842285
    7. '[' → logprob: -15.100213050842285
    8. '	map' → logprob: -15.225213050842285
    9. '(map' → logprob: -16.60021209716797
    10. '   ' → logprob: -17.72521209716797

Token 319: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00035512709291651845
    2. 'int' → logprob: -8.000354766845703
    3. '(' → logprob: -11.125354766845703
    4. ',int' → logprob: -13.000354766845703
    5. '(str' → logprob: -14.125354766845703
    6. '=int' → logprob: -14.625354766845703
    7. '(len' → logprob: -15.375354766845703
    8. '(lambda' → logprob: -15.625354766845703
    9. '[int' → logprob: -15.750354766845703
    10. ' int' → logprob: -15.750354766845703

Token 320: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.4759165346622467
    2. ',' → logprob: -0.9759165048599243
    3. '(input' → logprob: -6.725916385650635
    4. 'input' → logprob: -7.850916385650635
    5. '(' → logprob: -9.225916862487793
    6. ')' → logprob: -10.100916862487793
    7. ',(' → logprob: -10.225916862487793
    8. ' ,' → logprob: -10.350916862487793
    9. '(),' → logprob: -10.975916862487793
    10. ' input' → logprob: -11.350916862487793

Token 321: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014165391214191914
    2. ' input' → logprob: -4.26416540145874
    3. ')' → logprob: -14.014164924621582
    4. ' ' → logprob: -15.139164924621582
    5. 'sys' → logprob: -15.139164924621582
    6. 'Input' → logprob: -16.6391658782959
    7. ' sys' → logprob: -16.7641658782959
    8. '_input' → logprob: -16.7641658782959
    9. '=input' → logprob: -16.8891658782959
    10. '   ' → logprob: -17.0141658782959

Token 322: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.45848218582978e-06
    2. '()' → logprob: -13.00000286102295
    3. ' ().' → logprob: -15.87500286102295
    4. '(' → logprob: -18.500001907348633
    5. '()
' → logprob: -18.625001907348633
    6. ')' → logprob: -19.125001907348633
    7. '())' → logprob: -20.000001907348633
    8. ' ' → logprob: -21.125001907348633
    9. '   ' → logprob: -21.500001907348633
    10. '.' → logprob: -21.625001907348633

Token 323: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0087516784551553e-05
    2. 'decode' → logprob: -12.00001049041748
    3. 'strip' → logprob: -12.87501049041748
    4. ' split' → logprob: -14.12501049041748
    5. 'spl' → logprob: -15.62501049041748
    6. 'rstrip' → logprob: -15.62501049041748
    7. ')' → logprob: -15.75001049041748
    8. '(split' → logprob: -15.87501049041748
    9. '().' → logprob: -17.125009536743164
    10. 's' → logprob: -18.000009536743164

Token 324: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007303829770535231
    2. ')' → logprob: -5.507303714752197
    3. '()' → logprob: -5.757303714752197
    4. '()))' → logprob: -10.132304191589355
    5. '())
' → logprob: -11.632304191589355
    6. '))' → logprob: -11.882304191589355
    7. '(' → logprob: -12.507304191589355
    8. ' ())' → logprob: -15.007304191589355
    9. '()
' → logprob: -15.757304191589355
    10. '(),' → logprob: -15.757304191589355

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10733743011951447
    2. '    
' → logprob: -2.982337474822998
    3. '
' → logprob: -3.482337474822998
    4. '<|end|>' → logprob: -3.982337474822998
    5. '    ' → logprob: -7.482337474822998
    6. '<|end|>' → logprob: -8.23233699798584
    7. 'n' → logprob: -8.98233699798584
    8. ')' → logprob: -9.10733699798584
    9. ' 
' → logprob: -9.35733699798584
    10. 'def' → logprob: -9.60733699798584

Token 326: ' D' (ID: 415)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6275096535682678
    2. 'dp' → logprob: -0.8775096535682678
    3. 'res' → logprob: -3.752509593963623
    4. 'result' → logprob: -5.002509593963623
    5. 'ans' → logprob: -5.127509593963623
    6. 'count' → logprob: -6.127509593963623
    7. ' dp' → logprob: -6.252509593963623
    8. 'mod' → logprob: -6.752509593963623
    9. 'answer' → logprob: -6.752509593963623
    10. 'd' → logprob: -6.752509593963623

Token 327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.597463846206665
    2. 'P' → logprob: -0.972463846206665
    3. 'p' → logprob: -3.097463846206665
    4. '=' → logprob: -3.847463846206665
    5. 'ef' → logprob: -6.847463607788086
    6. ' P' → logprob: -6.972463607788086
    7. 'ist' → logprob: -7.972463607788086
    8. ' ' → logprob: -8.097463607788086
    9. 'L' → logprob: -8.347463607788086
    10. 'if' → logprob: -8.722463607788086

Token 328: ' ' (ID: 220)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.5768553018569946
    2. '[R' → logprob: -0.9518553018569946
    3. '[' → logprob: -3.326855182647705
    4. '{}' → logprob: -5.201855182647705
    5. '{' → logprob: -5.451855182647705
    6. '{}
' → logprob: -7.201855182647705
    7. '10' → logprob: -7.576855182647705
    8. ' [' → logprob: -7.576855182647705
    9. '(R' → logprob: -7.576855182647705
    10. ' R' → logprob: -7.701855182647705

Token 329: '61' (ID: 8954)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6591591238975525
    2. '[R' → logprob: -0.7841591238975525
    3. '{' → logprob: -5.034159183502197
    4. '(R' → logprob: -5.159159183502197
    5. '{}' → logprob: -5.659159183502197
    6. '[' → logprob: -5.784159183502197
    7. 'Mod' → logprob: -6.659159183502197
    8. 'list' → logprob: -6.909159183502197
    9. 'range' → logprob: -6.909159183502197
    10. '[L' → logprob: -7.284159183502197

Token 330: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0557936429977417
    2. ' 
' → logprob: -4.180793762207031
    3. 'dp' → logprob: -4.305793762207031
    4. '    
' → logprob: -5.055793762207031
    5. '   ' → logprob: -5.055793762207031
    6. '0' → logprob: -5.805793762207031
    7. '

' → logprob: -6.180793762207031
    8. ' dp' → logprob: -6.305793762207031
    9. '
' → logprob: -7.055793762207031
    10. ',' → logprob: -7.805793762207031

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012187260203063488
    2. 'dp' → logprob: -4.512187480926514
    3. ' dp' → logprob: -7.637187480926514
    4. '    
' → logprob: -7.637187480926514
    5. '    ' → logprob: -9.262187004089355
    6. 'count' → logprob: -11.137187004089355
    7. 'DP' → logprob: -11.637187004089355
    8. '	dp' → logprob: -11.762187004089355
    9. 'cnt' → logprob: -11.887187004089355
    10. '
' → logprob: -12.262187004089355

Token 332: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0038955609779804945
    2. '   ' → logprob: -6.7538957595825195
    3. 'cnt' → logprob: -6.8788957595825195
    4. 'bit' → logprob: -8.12889575958252
    5. 'ans' → logprob: -8.12889575958252
    6. 'count' → logprob: -8.75389575958252
    7. 'res' → logprob: -8.87889575958252
    8. 'f' → logprob: -9.25389575958252
    9. 'a' → logprob: -9.75389575958252
    10. 'DP' → logprob: -10.00389575958252

Token 333: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00465119956061244
    2. '=' → logprob: -5.379651069641113
    3. '0' → logprob: -11.379651069641113
    4. '[' → logprob: -11.504651069641113
    5. '=[' → logprob: -13.004651069641113
    6. ' ' → logprob: -13.129651069641113
    7. '=[[' → logprob: -14.004651069641113
    8. '_' → logprob: -14.129651069641113
    9. ' =[' → logprob: -14.504651069641113
    10. '1' → logprob: -14.504651069641113

Token 334: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.000667640648316592
    2. '[' → logprob: -7.375667572021484
    3. '[{' → logprob: -11.500667572021484
    4. '[(' → logprob: -12.125667572021484
    5. '{}' → logprob: -12.125667572021484
    6. ' [[' → logprob: -12.250667572021484
    7. 'Mod' → logprob: -12.250667572021484
    8. '{' → logprob: -12.500667572021484
    9. '[
' → logprob: -13.250667572021484
    10. ' [[[' → logprob: -13.625667572021484

Token 335: '[[' (ID: 26245)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.2616890072822571
    2. '[' → logprob: -1.6366889476776123
    3. '0' → logprob: -4.011689186096191
    4. '[-' → logprob: -4.511689186096191
    5. '[[' → logprob: -5.761689186096191
    6. 'None' → logprob: -6.511689186096191
    7. '(Mod' → logprob: -6.886689186096191
    8. '[M' → logprob: -8.386689186096191
    9. '-' → logprob: -8.511689186096191
    10. 'False' → logprob: -8.636689186096191

Token 336: 'Mod' (ID: 4721)
  Prédit: 'Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0631042942404747
    2. '0' → logprob: -3.3131043910980225
    3. '-' → logprob: -3.9381043910980225
    4. 'None' → logprob: -5.563104152679443
    5. 'INF' → logprob: -7.563104152679443
    6. 'False' → logprob: -8.438104629516602
    7. '-Mod' → logprob: -8.563104629516602
    8. '[-' → logprob: -8.688104629516602
    9. '(Mod' → logprob: -9.188104629516602
    10. '[' → logprob: -9.313104629516602

Token 337: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.9361264946837764e-07
    2. 'int' → logprob: -15.875
    3. ' Int' → logprob: -18.375
    4. '	Int' → logprob: -20.25
    5. '_int' → logprob: -20.375
    6. 'INT' → logprob: -20.5
    7. '[Int' → logprob: -20.625
    8. '(Int' → logprob: -20.75
    9. '_Int' → logprob: -20.875
    10. '0' → logprob: -21.0

Token 338: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00021784115233458579
    2. '()' → logprob: -8.50021743774414
    3. '0' → logprob: -11.37521743774414
    4. '(-' → logprob: -13.50021743774414
    5. '()]' → logprob: -14.00021743774414
    6. ']' → logprob: -15.12521743774414
    7. '(False' → logprob: -15.50021743774414
    8. '()
' → logprob: -16.37521743774414
    9. '(
' → logprob: -16.75021743774414
    10. '((' → logprob: -16.87521743774414

Token 339: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6405310816480778e-05
    2. '1' → logprob: -11.625016212463379
    3. '-' → logprob: -12.375016212463379
    4. ')' → logprob: -13.500016212463379
    5. '(' → logprob: -14.625016212463379
    6. 'False' → logprob: -14.750016212463379
    7. ' ' → logprob: -14.875016212463379
    8. '"' → logprob: -15.937516212463379
    9. '2' → logprob: -16.937517166137695
    10. '
' → logprob: -17.250017166137695

Token 340: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005968969315290451
    2. ')]' → logprob: -5.130969047546387
    3. ' )' → logprob: -11.255969047546387
    4. ')
' → logprob: -11.505969047546387
    5. '),' → logprob: -12.380969047546387
    6. ')])' → logprob: -12.380969047546387
    7. '))' → logprob: -12.755969047546387
    8. '()' → logprob: -13.005969047546387
    9. ']' → logprob: -14.255969047546387
    10. ')}}' → logprob: -14.755969047546387

Token 341: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11513952910900116
    2. 'for' → logprob: -2.6151394844055176
    3. ')' → logprob: -3.3651394844055176
    4. ']' → logprob: -7.240139484405518
    5. '()' → logprob: -9.115139961242676
    6. ' ' → logprob: -9.615139961242676
    7. ')]' → logprob: -9.615139961242676
    8. '   ' → logprob: -10.615139961242676
    9. ',' → logprob: -10.615139961242676
    10. '	for' → logprob: -11.865139961242676

Token 342: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004365202039480209
    2. ' _' → logprob: -5.629364967346191
    3. '_j' → logprob: -8.754364967346191
    4. '_k' → logprob: -9.004364967346191
    5. '_d' → logprob: -9.379364967346191
    6. '_]' → logprob: -9.629364967346191
    7. '_s' → logprob: -9.879364967346191
    8. '_r' → logprob: -10.004364967346191
    9. '_t' → logprob: -10.004364967346191
    10. '_in' → logprob: -10.129364967346191

Token 343: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5276613235473633
    2. 'in' → logprob: -1.5276613235473633
    3. 'range' → logprob: -1.6526613235473633
    4. ' range' → logprob: -6.902661323547363
    5. '    ' → logprob: -9.527661323547363
    6. 'd' → logprob: -9.902661323547363
    7. ' ' → logprob: -10.152661323547363
    8. '        ' → logprob: -10.277661323547363
    9. 'ange' → logprob: -10.402661323547363
    10. '   ' → logprob: -10.777661323547363

Token 344: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0889931246638298
    2. ' range' → logprob: -2.4639930725097656
    3. '   ' → logprob: -10.338993072509766
    4. '(range' → logprob: -11.713993072509766
    5. ' ' → logprob: -12.463993072509766
    6. '    ' → logprob: -12.713993072509766
    7. '     ' → logprob: -13.588993072509766
    8. '[' → logprob: -13.838993072509766
    9. '       ' → logprob: -13.963993072509766
    10. '  ' → logprob: -14.088993072509766

Token 345: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.038242872804403305
    2. '3' → logprob: -3.413242816925049
    3. '4' → logprob: -5.538242816925049
    4. '(' → logprob: -8.163243293762207
    5. '5' → logprob: -9.788243293762207
    6. '10' → logprob: -9.913243293762207
    7. ' ' → logprob: -9.913243293762207
    8. '7' → logprob: -10.163243293762207
    9. '8' → logprob: -10.288243293762207
    10. '11' → logprob: -10.413243293762207

Token 346: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11498482525348663
    2. '3' → logprob: -2.4899847507476807
    3. '4' → logprob: -3.7399847507476807
    4. '8' → logprob: -7.61498498916626
    5. '7' → logprob: -7.98998498916626
    6. '5' → logprob: -8.239984512329102
    7. ' ' → logprob: -8.864984512329102
    8. '6' → logprob: -8.989984512329102
    9. '10' → logprob: -9.239984512329102
    10. '61' → logprob: -9.239984512329102

Token 347: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001320596318691969
    2. ')' → logprob: -6.8763203620910645
    3. ']' → logprob: -8.501320838928223
    4. '       ' → logprob: -10.501320838928223
    5. '   ' → logprob: -10.626320838928223
    6. '           ' → logprob: -11.376320838928223
    7. ')][' → logprob: -11.876320838928223
    8. ']]' → logprob: -12.876320838928223
    9. ')]
' → logprob: -13.001320838928223
    10. '               ' → logprob: -13.376320838928223

Token 348: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5525426864624023
    2. ' for' → logprob: -0.9275426864624023
    3. ']' → logprob: -4.302542686462402
    4. '       ' → logprob: -5.302542686462402
    5. '           ' → logprob: -5.427542686462402
    6. '   ' → logprob: -5.552542686462402
    7. ')' → logprob: -7.427542686462402
    8. '        ' → logprob: -7.677542686462402
    9. '    ' → logprob: -8.052542686462402
    10. '               ' → logprob: -8.552542686462402

Token 349: ' _' (ID: 1175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10186496376991272
    2. 'in' → logprob: -2.72686505317688
    3. '_' → logprob: -3.47686505317688
    4. ' _' → logprob: -8.1018648147583
    5. '_in' → logprob: -9.2268648147583
    6. 'range' → logprob: -9.4768648147583
    7. '_range' → logprob: -11.1018648147583
    8. ' range' → logprob: -11.4768648147583
    9. '
' → logprob: -12.4768648147583
    10. ' ' → logprob: -12.9768648147583

Token 350: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6326661109924316
    2. ' in' → logprob: -0.7576661109924316
    3. '_' → logprob: -10.257665634155273
    4. 'range' → logprob: -10.882665634155273
    5. '
' → logprob: -12.632665634155273
    6. ' _' → logprob: -13.132665634155273
    7. '_in' → logprob: -13.382665634155273
    8. ' ' → logprob: -14.257665634155273
    9. '[' → logprob: -14.257665634155273
    10. ',' → logprob: -14.382665634155273

Token 351: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033665422233752906
    2. ' range' → logprob: -8.000336647033691
    3. '(range' → logprob: -13.750336647033691
    4. '2' → logprob: -16.375337600708008
    5. '[' → logprob: -16.750337600708008
    6. '   ' → logprob: -17.500337600708008
    7. '	range' → logprob: -18.250337600708008
    8. 'in' → logprob: -18.875337600708008
    9. '(' → logprob: -19.125337600708008
    10. '_' → logprob: -19.375337600708008

Token 352: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.080963092041202e-06
    2. ' (' → logprob: -12.250004768371582
    3. '2' → logprob: -16.0000057220459
    4. '   ' → logprob: -17.6250057220459
    5. '((' → logprob: -17.6250057220459
    6. ')' → logprob: -17.7500057220459
    7. ']' → logprob: -18.5000057220459
    8. '(range' → logprob: -18.8750057220459
    9. '(
' → logprob: -19.0000057220459
    10. '    ' → logprob: -19.1250057220459

Token 353: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002205828350270167
    2. ' ' → logprob: -9.25022029876709
    3. '3' → logprob: -9.62522029876709
    4. '(' → logprob: -10.00022029876709
    5. '   ' → logprob: -12.25022029876709
    6. '
' → logprob: -13.68772029876709
    7. '4' → logprob: -14.06272029876709
    8. ')' → logprob: -14.37522029876709
    9. '       ' → logprob: -14.37522029876709
    10. '           ' → logprob: -14.56272029876709

Token 354: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021205486729741096
    2. ')]' → logprob: -3.896205425262451
    3. ')' → logprob: -7.646205425262451
    4. ' ]' → logprob: -9.52120590209961
    5. ']]' → logprob: -9.89620590209961
    6. '   ' → logprob: -11.02120590209961
    7. '       ' → logprob: -11.02120590209961
    8. '           ' → logprob: -11.27120590209961
    9. '])' → logprob: -11.52120590209961
    10. 'for' → logprob: -13.77120590209961

Token 355: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5816799402236938
    2. 'for' → logprob: -0.8316799402236938
    3. '   ' → logprob: -5.706679821014404
    4. '       ' → logprob: -6.706679821014404
    5. '           ' → logprob: -7.831679821014404
    6. '    ' → logprob: -8.081680297851562
    7. '        ' → logprob: -8.581680297851562
    8. '               ' → logprob: -9.831680297851562
    9. '         ' → logprob: -10.206680297851562
    10. '            ' → logprob: -10.456680297851562

Token 356: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22936482727527618
    2. ' in' → logprob: -1.6043648719787598
    3. ' _' → logprob: -5.85436487197876
    4. '_in' → logprob: -7.10436487197876
    5. '_range' → logprob: -8.979364395141602
    6. 'in' → logprob: -9.104364395141602
    7. ' range' → logprob: -11.479364395141602
    8. 'range' → logprob: -12.854364395141602
    9. ' ' → logprob: -14.979364395141602
    10. '_re' → logprob: -15.354364395141602

Token 357: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.039399560540914536
    2. 'in' → logprob: -3.4143996238708496
    3. ' in' → logprob: -5.78939962387085
    4. ' range' → logprob: -6.66439962387085
    5. '_range' → logprob: -6.91439962387085
    6. '_' → logprob: -7.91439962387085
    7. '(range' → logprob: -10.664399147033691
    8. '_in' → logprob: -11.164399147033691
    9. 'def' → logprob: -13.664399147033691
    10. '   ' → logprob: -14.414399147033691

Token 358: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003362966235727072
    2. ' range' → logprob: -8.000336647033691
    3. '(range' → logprob: -14.875336647033691
    4. '_' → logprob: -15.000336647033691
    5. '_range' → logprob: -15.750336647033691
    6. '   ' → logprob: -17.375335693359375
    7. '	range' → logprob: -18.500335693359375
    8. '
' → logprob: -18.750335693359375
    9. '[' → logprob: -19.125335693359375
    10. '    ' → logprob: -20.000335693359375

Token 359: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004581076558679342
    2. '(D' → logprob: -5.754580974578857
    3. '(range' → logprob: -6.629580974578857
    4. 'range' → logprob: -10.629581451416016
    5. '(L' → logprob: -11.129581451416016
    6. '((' → logprob: -11.629581451416016
    7. '(R' → logprob: -11.879581451416016
    8. '(M' → logprob: -12.629581451416016
    9. '2' → logprob: -12.754581451416016
    10. '(C' → logprob: -13.129581451416016

Token 360: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0895395576953888
    2. '3' → logprob: -2.7145395278930664
    3. 'D' → logprob: -4.089539527893066
    4. '61' → logprob: -6.714539527893066
    5. '(' → logprob: -7.589539527893066
    6. '4' → logprob: -8.089539527893066
    7. '(D' → logprob: -8.464539527893066
    8. 'L' → logprob: -9.464539527893066
    9. '62' → logprob: -9.839539527893066
    10. 'R' → logprob: -9.964539527893066

Token 361: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009897394105792046
    2. ')]' → logprob: -4.634897232055664
    3. ')' → logprob: -9.634897232055664
    4. ']]' → logprob: -10.259897232055664
    5. ' ]' → logprob: -10.759897232055664
    6. '   ' → logprob: -11.384897232055664
    7. '       ' → logprob: -12.634897232055664
    8. ']
' → logprob: -13.509897232055664
    9. '])' → logprob: -13.884897232055664
    10. '           ' → logprob: -14.759897232055664

Token 362: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5763475894927979
    2. ' for' → logprob: -0.8263475894927979
    3. '   ' → logprob: -8.076347351074219
    4. '       ' → logprob: -10.076347351074219
    5. '    ' → logprob: -10.576347351074219
    6. ']' → logprob: -11.326347351074219
    7. '        ' → logprob: -11.826347351074219
    8. '           ' → logprob: -12.701347351074219
    9. ' ' → logprob: -13.201347351074219
    10. '      ' → logprob: -13.576347351074219

Token 363: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.33101511001586914
    2. ' range' → logprob: -1.5810151100158691
    3. '_' → logprob: -2.831015110015869
    4. 'in' → logprob: -4.706015110015869
    5. ' in' → logprob: -5.831015110015869
    6. '_in' → logprob: -6.081015110015869
    7. '_range' → logprob: -6.081015110015869
    8. '(range' → logprob: -7.581015110015869
    9. '_i' → logprob: -11.331014633178711
    10. '	range' → logprob: -11.706014633178711

Token 364: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.46043625473976135
    2. 'in' → logprob: -1.710436224937439
    3. 'range' → logprob: -1.710436224937439
    4. ' range' → logprob: -5.3354363441467285
    5. '_' → logprob: -5.9604363441467285
    6. '(range' → logprob: -11.71043586730957
    7. '_range' → logprob: -12.21043586730957
    8. 'd' → logprob: -13.21043586730957
    9. 'dp' → logprob: -13.33543586730957
    10. '	range' → logprob: -13.58543586730957

Token 365: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018245702609419823
    2. ' range' → logprob: -4.018245697021484
    3. '(range' → logprob: -9.268245697021484
    4. '[D' → logprob: -14.393245697021484
    5. '(D' → logprob: -15.143245697021484
    6. '[' → logprob: -15.393245697021484
    7. '	range' → logprob: -15.643245697021484
    8. 'd' → logprob: -16.268245697021484
    9. 'D' → logprob: -16.518245697021484
    10. '(' → logprob: -17.643245697021484

Token 366: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.023577021434903145
    2. '(' → logprob: -3.7735769748687744
    3. '(range' → logprob: -8.648576736450195
    4. '2' → logprob: -9.773576736450195
    5. '(L' → logprob: -10.648576736450195
    6. 'range' → logprob: -10.648576736450195
    7. 'D' → logprob: -10.648576736450195
    8. '(R' → logprob: -11.273576736450195
    9. '((' → logprob: -11.648576736450195
    10. ' range' → logprob: -13.023576736450195

Token 367: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000985412043519318
    2. ')' → logprob: -7.125985622406006
    3. ']' → logprob: -9.250985145568848
    4. ')][' → logprob: -10.500985145568848
    5. ')])' → logprob: -10.875985145568848
    6. ' )' → logprob: -11.000985145568848
    7. ')],' → logprob: -12.375985145568848
    8. ')]
' → logprob: -12.375985145568848
    9. '])]' → logprob: -12.500985145568848
    10. '])' → logprob: -12.625985145568848

Token 368: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. '2' → logprob: -11.750014305114746
    3. ' ' → logprob: -12.125014305114746
    4. '   ' → logprob: -14.625014305114746
    5. '  ' → logprob: -17.00001335144043
    6. '    ' → logprob: -17.25001335144043
    7. '3' → logprob: -17.25001335144043
    8. '
' → logprob: -17.25001335144043
    9. '     ' → logprob: -17.37501335144043
    10. '10' → logprob: -18.00001335144043

Token 369: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012725738633889705
    2. '2' → logprob: -9.250126838684082
    3. ' ' → logprob: -10.625126838684082
    4. '0' → logprob: -12.375126838684082
    5. '3' → logprob: -13.625126838684082
    6. '5' → logprob: -14.250126838684082
    7. '10' → logprob: -14.875126838684082
    8. '   ' → logprob: -15.750126838684082
    9. '7' → logprob: -16.3751277923584
    10. '  ' → logprob: -16.6251277923584

Token 370: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006274910410866141
    2. ')' → logprob: -7.875627517700195
    3. ']' → logprob: -8.375627517700195
    4. ')][' → logprob: -11.750627517700195
    5. ')])' → logprob: -12.750627517700195
    6. '])]' → logprob: -13.250627517700195
    7. '])' → logprob: -13.250627517700195
    8. ')],' → logprob: -14.125627517700195
    9. ' )' → logprob: -14.500627517700195
    10. '   ' → logprob: -14.625627517700195

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0923846960067749
    2. '<|end|>' → logprob: -2.9673848152160645
    3. ')' → logprob: -3.8423848152160645
    4. '[' → logprob: -4.7173848152160645
    5. 'dp' → logprob: -6.0923848152160645
    6. ']' → logprob: -6.3423848152160645
    7. ' ' → logprob: -7.7173848152160645
    8. ',' → logprob: -8.217384338378906
    9. ' dp' → logprob: -8.342384338378906
    10. '    ' → logprob: -8.342384338378906

Token 372: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0008757318137213588
    2. '   ' → logprob: -7.250875949859619
    3. ' dp' → logprob: -9.000875473022461
    4. '
' → logprob: -11.000875473022461
    5. 'for' → logprob: -11.375875473022461
    6. '	dp' → logprob: -12.500875473022461
    7. 'def' → logprob: -13.125875473022461
    8. '    
' → logprob: -13.625875473022461
    9. '(dp' → logprob: -13.750875473022461
    10. ')' → logprob: -13.750875473022461

Token 373: '[D' (ID: 159299)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.160971628967673e-05
    2. '[D' → logprob: -9.500082015991211
    3. '0' → logprob: -12.250082015991211
    4. '[L' → logprob: -13.875082015991211
    5. '[-' → logprob: -14.875082015991211
    6. '][' → logprob: -15.375082015991211
    7. '```' → logprob: -16.75008201599121
    8. ' [' → logprob: -16.75008201599121
    9. '[d' → logprob: -17.12508201599121
    10. '
' → logprob: -17.12508201599121

Token 374: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005274149589240551
    2. '][-' → logprob: -8.125527381896973
    3. ']' → logprob: -8.500527381896973
    4. '[' → logprob: -10.875527381896973
    5. ' ][' → logprob: -12.500527381896973
    6. '-' → logprob: -12.875527381896973
    7. '][_' → logprob: -14.250527381896973
    8. '])' → logprob: -14.625527381896973
    9. '][]' → logprob: -14.875527381896973
    10. ']
' → logprob: -15.000527381896973

Token 375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0040838588029146194
    2. '1' → logprob: -5.504083633422852
    3. '
' → logprob: -12.504083633422852
    4. 'False' → logprob: -13.879083633422852
    5. ' ' → logprob: -14.629083633422852
    6. '[' → logprob: -16.44158363342285
    7. 'True' → logprob: -17.19158363342285
    8. '][' → logprob: -17.37908363342285
    9. ']' → logprob: -17.56658363342285
    10. '...' → logprob: -17.75408363342285

Token 376: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005588700296357274
    2. ']' → logprob: -7.500558853149414
    3. '[' → logprob: -13.125558853149414
    4. ' ][' → logprob: -13.625558853149414
    5. '0' → logprob: -14.250558853149414
    6. ']][' → logprob: -14.500558853149414
    7. ']
' → logprob: -14.625558853149414
    8. '][-' → logprob: -14.875558853149414
    9. '()][' → logprob: -15.375558853149414
    10. '][]' → logprob: -15.875558853149414

Token 377: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.134509021649137e-05
    2. '1' → logprob: -9.75006103515625
    3. ' ' → logprob: -12.87506103515625
    4. 'False' → logprob: -15.43756103515625
    5. '۰' → logprob: -16.31256103515625
    6. '<|end|>' → logprob: -17.50006103515625
    7. ']' → logprob: -17.62506103515625
    8. 'false' → logprob: -17.81256103515625
    9. '০' → logprob: -18.00006103515625
    10. '[' → logprob: -18.06256103515625

Token 378: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.741137283621356e-05
    2. ']' → logprob: -10.125057220458984
    3. '[' → logprob: -11.125057220458984
    4. ' ][' → logprob: -13.625057220458984
    5. '0' → logprob: -14.125057220458984
    6. ''][' → logprob: -15.375057220458984
    7. '"][' → logprob: -15.500057220458984
    8. ']
' → logprob: -15.875057220458984
    9. '1' → logprob: -17.375057220458984
    10. ']][' → logprob: -17.625057220458984

Token 379: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.375
    3. ' ' → logprob: -16.125
    4. '۰' → logprob: -17.625
    5. ']' → logprob: -18.0
    6. '০' → logprob: -19.0625
    7. ')' → logprob: -19.5625
    8. '   ' → logprob: -19.625
    9. '
' → logprob: -19.75
    10. 'False' → logprob: -19.875

Token 380: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.253090865968261e-06
    2. ']=' → logprob: -11.875009536743164
    3. ' ]' → logprob: -13.000009536743164
    4. ']+=' → logprob: -17.625009536743164
    5. ']
' → logprob: -17.875009536743164
    6. '()]' → logprob: -18.250009536743164
    7. '=' → logprob: -18.875009536743164
    8. '`]' → logprob: -19.500009536743164
    9. ')' → logprob: -20.125009536743164
    10. ' =' → logprob: -20.250009536743164

Token 381: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759459733963013
    2. ' =' → logprob: -0.8259459733963013
    3. '+=' → logprob: -12.575945854187012
    4. ' +=' → logprob: -13.700945854187012
    5. '=True' → logprob: -14.450945854187012
    6. '=int' → logprob: -15.075945854187012
    7. ' ' → logprob: -15.450945854187012
    8. '[' → logprob: -15.825945854187012
    9. '＝' → logprob: -15.950945854187012
    10. ')' → logprob: -16.450946807861328

Token 382: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00023393364972434938
    2. '1' → logprob: -8.37523365020752
    3. '(Mod' → logprob: -13.25023365020752
    4. ' Mod' → logprob: -13.37523365020752
    5. 'mod' → logprob: -18.125234603881836
    6. '_Mod' → logprob: -18.250234603881836
    7. '_mod' → logprob: -18.625234603881836
    8. 'MOD' → logprob: -18.750234603881836
    9. 'Modulo' → logprob: -19.625234603881836
    10. '   ' → logprob: -19.750234603881836

Token 383: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: 0.0
    2. 'int' → logprob: -18.5
    3. ' Int' → logprob: -21.125
    4. '_int' → logprob: -21.625
    5. 'INT' → logprob: -22.875
    6. '_Int' → logprob: -22.875
    7. '	Int' → logprob: -23.0
    8. 'In' → logprob: -23.25
    9. '_INT' → logprob: -23.625
    10. '[Int' → logprob: -23.75

Token 384: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004307884373702109
    2. '1' → logprob: -7.750430583953857
    3. '(
' → logprob: -16.125431060791016
    4. ' (' → logprob: -17.875431060791016
    5. '[' → logprob: -19.625431060791016
    6. '((' → logprob: -19.625431060791016
    7. '{' → logprob: -19.625431060791016
    8. '(-' → logprob: -20.000431060791016
    9. '(int' → logprob: -20.125431060791016
    10. '   ' → logprob: -20.250431060791016

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1928003813372925e-05
    2. '0' → logprob: -9.875051498413086
    3. ' ' → logprob: -15.125051498413086
    4. '2' → logprob: -16.500051498413086
    5. '(' → logprob: -16.750051498413086
    6. ')' → logprob: -16.812551498413086
    7. '   ' → logprob: -17.812551498413086
    8. '１' → logprob: -18.250051498413086
    9. '
' → logprob: -18.312551498413086
    10. '-' → logprob: -18.750051498413086

Token 386: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7146746763028204e-05
    2. ')
' → logprob: -10.25003719329834
    3. ' )' → logprob: -14.00003719329834
    4. '   ' → logprob: -14.37503719329834
    5. ')

' → logprob: -16.250036239624023
    6. ')
' → logprob: -16.625036239624023
    7. ')`' → logprob: -17.625036239624023
    8. '))' → logprob: -17.750036239624023
    9. '
' → logprob: -18.000036239624023
    10. '),' → logprob: -18.125036239624023

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004308703355491161
    2. ' for' → logprob: -5.629308700561523
    3. ' ' → logprob: -8.754308700561523
    4. ')' → logprob: -8.754308700561523
    5. 'for' → logprob: -9.004308700561523
    6. '    ' → logprob: -9.254308700561523
    7. '<|end|>' → logprob: -9.754308700561523
    8. '  ' → logprob: -10.254308700561523
    9. '    
' → logprob: -10.629308700561523
    10. ' )' → logprob: -11.379308700561523

Token 388: ' rng' (ID: 76666)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12696370482444763
    2. ' for' → logprob: -2.1269636154174805
    3. '   ' → logprob: -10.25196361541748
    4. ' ' → logprob: -15.62696361541748
    5. '	for' → logprob: -16.501964569091797
    6. '    ' → logprob: -17.501964569091797
    7. ')' → logprob: -17.626964569091797
    8. 'from' → logprob: -18.001964569091797
    9. '  ' → logprob: -18.251964569091797
    10. '
' → logprob: -18.251964569091797

Token 389: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3716636002063751
    2. '_' → logprob: -1.6216635704040527
    3. 'ge' → logprob: -2.7466635704040527
    4. '=' → logprob: -3.6216635704040527
    5. ' ' → logprob: -4.746663570404053
    6. ')' → logprob: -5.121663570404053
    7. '   ' → logprob: -5.996663570404053
    8. 'g' → logprob: -6.996663570404053
    9. 'e' → logprob: -6.996663570404053
    10. ',' → logprob: -7.246663570404053

Token 390: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2868203818798065
    2. '[R' → logprob: -1.661820411682129
    3. 'R' → logprob: -3.161820411682129
    4. 'list' → logprob: -5.286820411682129
    5. '[(' → logprob: -6.036820411682129
    6. '(R' → logprob: -6.036820411682129
    7. '[' → logprob: -6.036820411682129
    8. ' range' → logprob: -6.161820411682129
    9. '(range' → logprob: -6.286820411682129
    10. ' R' → logprob: -8.661820411682129

Token 391: '0' (ID: 15)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.14016148447990417
    2. 'range' → logprob: -2.3901615142822266
    3. 'L' → logprob: -3.6401615142822266
    4. '(R' → logprob: -5.140161514282227
    5. '1' → logprob: -6.140161514282227
    6. '[R' → logprob: -6.765161514282227
    7. '(L' → logprob: -7.140161514282227
    8. '0' → logprob: -7.265161514282227
    9. '(' → logprob: -7.515161514282227
    10. '(range' → logprob: -7.765161514282227

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010300694266334176
    2. ' ,' → logprob: -7.126029968261719
    3. ' if' → logprob: -9.001029968261719
    4. ',
' → logprob: -10.876029968261719
    5. ',R' → logprob: -10.876029968261719
    6. '1' → logprob: -11.126029968261719
    7. 'if' → logprob: -11.251029968261719
    8. '..' → logprob: -11.501029968261719
    9. ')' → logprob: -11.501029968261719
    10. ' ' → logprob: -12.501029968261719

Token 393: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2894768714904785
    2. 'R' → logprob: -1.6644768714904785
    3. ' ' → logprob: -4.0394768714904785
    4. '2' → logprob: -4.1644768714904785
    5. '0' → logprob: -4.6644768714904785
    6. '61' → logprob: -5.4144768714904785
    7. ' R' → logprob: -5.5394768714904785
    8. 'L' → logprob: -5.6644768714904785
    9. 'D' → logprob: -5.7894768714904785
    10. '63' → logprob: -6.9144768714904785

Token 394: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4008982181549072
    2. 'R' → logprob: -1.2758982181549072
    3. 'L' → logprob: -3.7758982181549072
    4. '0' → logprob: -4.025897979736328
    5. 'D' → logprob: -5.900897979736328
    6. '61' → logprob: -6.025897979736328
    7. '2' → logprob: -6.900897979736328
    8. '(' → logprob: -6.900897979736328
    9. '(R' → logprob: -7.525897979736328
    10. '60' → logprob: -7.775897979736328

Token 395: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012082771718269214
    2. ' )' → logprob: -9.250121116638184
    3. ')
' → logprob: -11.750121116638184
    4. '))' → logprob: -11.875121116638184
    5. ',' → logprob: -13.125121116638184
    6. '2' → logprob: -13.500121116638184
    7. '1' → logprob: -14.000121116638184
    8. ',)' → logprob: -14.250121116638184
    9. '`)' → logprob: -14.375121116638184
    10. '0' → logprob: -14.375121116638184

Token 396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033017318695783615
    2. ' for' → logprob: -3.78301739692688
    3. 'for' → logprob: -5.533017158508301
    4. '
' → logprob: -5.783017158508301
    5. ')' → logprob: -6.408017158508301
    6. '    
' → logprob: -7.533017158508301
    7. ',' → logprob: -9.1580171585083
    8. ' ' → logprob: -9.7830171585083
    9. ' 
' → logprob: -9.9080171585083
    10. '<|end|>' → logprob: -10.1580171585083

Token 397: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5355576276779175
    2. ' for' → logprob: -0.9105576276779175
    3. '   ' → logprob: -4.410557746887207
    4. ')' → logprob: -8.785557746887207
    5. ' ' → logprob: -10.785557746887207
    6. '	for' → logprob: -10.785557746887207
    7. '    ' → logprob: -12.160557746887207
    8. 'def' → logprob: -13.160557746887207
    9. '  ' → logprob: -13.285557746887207
    10. ' )' → logprob: -13.910557746887207

Token 398: ' d' (ID: 272)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.48765361309051514
    2. 'd' → logprob: -1.2376536130905151
    3. ' i' → logprob: -2.9876537322998047
    4. ' d' → logprob: -3.4876537322998047
    5. 'bit' → logprob: -5.237653732299805
    6. 'pos' → logprob: -5.987653732299805
    7. ' pos' → logprob: -6.612653732299805
    8. ' bit' → logprob: -6.862653732299805
    9. 'digit' → logprob: -7.112653732299805
    10. 'k' → logprob: -7.612653732299805

Token 399: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026904037222266197
    2. 'in' → logprob: -3.6519041061401367
    3. ' ' → logprob: -7.901904106140137
    4. ',' → logprob: -9.026904106140137
    5. 'd' → logprob: -10.151904106140137
    6. 'n' → logprob: -10.776904106140137
    7. ' i' → logprob: -11.276904106140137
    8. '   ' → logprob: -11.276904106140137
    9. '  ' → logprob: -12.026904106140137
    10. ')' → logprob: -12.276904106140137

Token 400: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25197911262512207
    2. 're' → logprob: -1.501979112625122
    3. ' reversed' → logprob: -10.751978874206543
    4. 'reverse' → logprob: -10.751978874206543
    5. ' range' → logprob: -12.001978874206543
    6. '   ' → logprob: -14.251978874206543
    7. 'rev' → logprob: -15.126978874206543
    8. 'r' → logprob: -15.876978874206543
    9. 'D' → logprob: -17.50197982788086
    10. 'sorted' → logprob: -18.25197982788086

Token 401: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.018190208822488785
    2. 'D' → logprob: -4.018190383911133
    3. '	D' → logprob: -10.893190383911133
    4. '(' → logprob: -12.143190383911133
    5. ' D' → logprob: -12.143190383911133
    6. '   ' → logprob: -12.268190383911133
    7. '[D' → logprob: -13.143190383911133
    8. ',D' → logprob: -13.393190383911133
    9. '<D' → logprob: -13.643190383911133
    10. ' ' → logprob: -14.643190383911133

Token 402: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6932984590530396
    2. ' -' → logprob: -0.6932984590530396
    3. ',' → logprob: -8.94329833984375
    4. ' ' → logprob: -11.06829833984375
    5. ' ,' → logprob: -13.31829833984375
    6. '   ' → logprob: -14.06829833984375
    7. '
' → logprob: -14.31829833984375
    8. '):
' → logprob: -14.56829833984375
    9. ')' → logprob: -15.19329833984375
    10. '0' → logprob: -15.44329833984375

Token 403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.953082341467962e-05
    2. '2' → logprob: -10.875039100646973
    3. ' ' → logprob: -10.875039100646973
    4. '-' → logprob: -15.000039100646973
    5. ',' → logprob: -15.000039100646973
    6. '
' → logprob: -15.125039100646973
    7. ' -' → logprob: -15.375039100646973
    8. '   ' → logprob: -16.00004005432129
    9. '```' → logprob: -16.00004005432129
    10. '0' → logprob: -16.50004005432129

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009053878602571785
    2. ' ,' → logprob: -7.125905513763428
    3. ',-' → logprob: -9.25090503692627
    4. '   ' → logprob: -13.12590503692627
    5. ' ,-' → logprob: -13.50090503692627
    6. '-' → logprob: -14.50090503692627
    7. ' -' → logprob: -14.50090503692627
    8. ',
' → logprob: -15.25090503692627
    9. '_,' → logprob: -15.87590503692627
    10. '    ' → logprob: -16.500905990600586

Token 405: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.130576806142926e-05
    2. ' -' → logprob: -10.375031471252441
    3. '   ' → logprob: -19.125030517578125
    4. ' ' → logprob: -19.500030517578125
    5. '0' → logprob: -20.250030517578125
    6. '-d' → logprob: -20.875030517578125
    7. '-D' → logprob: -21.125030517578125
    8. '-re' → logprob: -22.000030517578125
    9. '```' → logprob: -22.000030517578125
    10. '	' → logprob: -22.250030517578125

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -15.375000953674316
    4. '```' → logprob: -17.25
    5. '2' → logprob: -18.125
    6. ',' → logprob: -18.375
    7. ' -' → logprob: -18.875
    8. '
' → logprob: -18.875
    9. '１' → logprob: -19.0
    10. '  ' → logprob: -19.125

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007836466655135155
    2. '-' → logprob: -4.88283634185791
    3. ',-' → logprob: -8.63283634185791
    4. ' ,' → logprob: -10.50783634185791
    5. ' -' → logprob: -11.38283634185791
    6. '   ' → logprob: -12.00783634185791
    7. '-,' → logprob: -12.75783634185791
    8. ',
' → logprob: -13.00783634185791
    9. '```' → logprob: -14.13283634185791
    10. '1' → logprob: -14.13283634185791

Token 408: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003802680876106024
    2. ' -' → logprob: -7.875380039215088
    3. '   ' → logprob: -16.12537956237793
    4. ' ' → logprob: -17.00037956237793
    5. '-step' → logprob: -17.62537956237793
    6. '```' → logprob: -18.00037956237793
    7. ')' → logprob: -18.25037956237793
    8. '-d' → logprob: -18.25037956237793
    9. '−' → logprob: -18.50037956237793
    10. '-
' → logprob: -18.62537956237793

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -18.125
    4. '2' → logprob: -18.25
    5. '```' → logprob: -18.5
    6. '１' → logprob: -18.875
    7. ')' → logprob: -19.25
    8. ',' → logprob: -19.75
    9. '
' → logprob: -20.4375
    10. '  ' → logprob: -21.0625

Token 410: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0793052539229393
    2. '-' → logprob: -2.9543051719665527
    3. '):
' → logprob: -4.329305171966553
    4. ',' → logprob: -4.704305171966553
    5. ':' → logprob: -6.704305171966553
    6. ' ):' → logprob: -7.829305171966553
    7. ' -' → logprob: -9.329305648803711
    8. ',-' → logprob: -9.704305648803711
    9. ')' → logprob: -9.829305648803711
    10. '   ' → logprob: -10.704305648803711

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005602261051535606
    2. '    ' → logprob: -5.8806023597717285
    3. ' ' → logprob: -6.8806023597717285
    4. ',' → logprob: -7.6306023597717285
    5. ' for' → logprob: -7.6306023597717285
    6. '   ' → logprob: -8.25560188293457
    7. '     ' → logprob: -8.75560188293457
    8. '    ' → logprob: -9.13060188293457
    9. ' ' → logprob: -9.75560188293457
    10. '	' → logprob: -10.25560188293457

Token 412: ' lb' (ID: 32474)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.048938196152448654
    2. ' for' → logprob: -3.048938274383545
    3. '   ' → logprob: -8.173937797546387
    4. '       ' → logprob: -9.673937797546387
    5. '           ' → logprob: -13.298937797546387
    6. '	for' → logprob: -13.798937797546387
    7. '0' → logprob: -14.298937797546387
    8. ' ' → logprob: -14.423937797546387
    9. '    ' → logprob: -14.423937797546387
    10. 'l' → logprob: -14.798937797546387

Token 413: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006441442295908928
    2. '=' → logprob: -6.006441593170166
    3. ' ,' → logprob: -6.631441593170166
    4. ' =' → logprob: -6.881441593170166
    5. 'for' → logprob: -6.881441593170166
    6. '       ' → logprob: -9.131441116333008
    7. ')' → logprob: -9.256441116333008
    8. 'ow' → logprob: -9.506441116333008
    9. '),' → logprob: -10.256441116333008
    10. ' in' → logprob: -10.506441116333008

Token 414: ' (' (ID: 350)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.12141314893960953
    2. '0' → logprob: -2.621413230895996
    3. '(R' → logprob: -3.496413230895996
    4. ' (' → logprob: -4.996413230895996
    5. '((' → logprob: -6.121413230895996
    6. '(' → logprob: -7.746413230895996
    7. '(d' → logprob: -7.871413230895996
    8. '(lambda' → logprob: -7.996413230895996
    9. '(r' → logprob: -8.121413230895996
    10. ' ' → logprob: -8.121413230895996

Token 415: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.14003993570804596
    2. 'R' → logprob: -2.6400399208068848
    3. '(L' → logprob: -2.8900399208068848
    4. '(R' → logprob: -5.640039920806885
    5. ' L' → logprob: -8.890040397644043
    6. '   ' → logprob: -10.890040397644043
    7. ' R' → logprob: -11.515040397644043
    8. ' (' → logprob: -11.890040397644043
    9. '	L' → logprob: -12.390040397644043
    10. '(' → logprob: -13.265040397644043

Token 416: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.004174321889877319
    2. ' >>' → logprob: -5.50417423248291
    3. '>' → logprob: -9.75417423248291
    4. '>>(' → logprob: -11.12917423248291
    5. ')' → logprob: -11.87917423248291
    6. ' ' → logprob: -12.50417423248291
    7. ' ' → logprob: -13.00417423248291
    8. '	' → logprob: -13.37917423248291
    9. '>>)' → logprob: -13.37917423248291
    10. ')>>' → logprob: -13.50417423248291

Token 417: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00015860427811276168
    2. ' d' → logprob: -8.750158309936523
    3. '	d' → logprob: -16.625158309936523
    4. ')d' → logprob: -18.250158309936523
    5. '>d' → logprob: -18.875158309936523
    6. '   ' → logprob: -19.500158309936523
    7. ' ' → logprob: -20.500158309936523
    8. '(d' → logprob: -21.125158309936523
    9. '[d' → logprob: -21.250158309936523
    10. '<|end|>' → logprob: -21.625158309936523

Token 418: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000249061529757455
    2. ')&' → logprob: -8.375248908996582
    3. ' )' → logprob: -11.000248908996582
    4. '&' → logprob: -13.750248908996582
    5. '1' → logprob: -15.625248908996582
    6. '   ' → logprob: -16.1252498626709
    7. '0' → logprob: -16.6252498626709
    8. ' ' → logprob: -16.7502498626709
    9. '&)' → logprob: -16.8752498626709
    10. '       ' → logprob: -17.0002498626709

Token 419: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.040248990058898926
    2. ' &' → logprob: -3.2902488708496094
    3. ')' → logprob: -6.290248870849609
    4. ')&' → logprob: -8.04024887084961
    5. '1' → logprob: -11.66524887084961
    6. '&amp' → logprob: -12.16524887084961
    7. ' ' → logprob: -12.29024887084961
    8. ' ' → logprob: -13.04024887084961
    9. '
' → logprob: -13.41524887084961
    10. '&r' → logprob: -13.66524887084961

Token 420: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.75001049041748
    4. '01' → logprob: -17.375009536743164
    5. '           ' → logprob: -18.125009536743164
    6. '
' → logprob: -18.500009536743164
    7. '  ' → logprob: -19.125009536743164
    8. '       ' → logprob: -19.250009536743164
    9. '     ' → logprob: -19.625009536743164
    10. '１' → logprob: -19.875009536743164

Token 421: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.125001907348633
    4. '01' → logprob: -18.250001907348633
    5. '{' → logprob: -19.250001907348633
    6. '31' → logprob: -20.000001907348633
    7. '  ' → logprob: -20.000001907348633
    8. '`' → logprob: -20.125001907348633
    9. '63' → logprob: -20.500001907348633
    10. '```' → logprob: -20.625001907348633

Token 422: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07183051854372025
    2. '
' → logprob: -3.1968305110931396
    3. '        
' → logprob: -5.196830749511719
    4. 'r' → logprob: -5.321830749511719
    5. ' for' → logprob: -5.446830749511719
    6. ',' → logprob: -5.696830749511719
    7. 'ur' → logprob: -6.196830749511719
    8. ')' → logprob: -6.696830749511719
    9. '           ' → logprob: -6.821830749511719
    10. 'for' → logprob: -6.821830749511719

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0443347692489624
    2. 'rb' → logprob: -3.169334888458252
    3. 'ur' → logprob: -7.044334888458252
    4. ' rb' → logprob: -8.169334411621094
    5. 'ub' → logprob: -9.419334411621094
    6. '   ' → logprob: -11.169334411621094
    7. ' ' → logprob: -11.544334411621094
    8. '           ' → logprob: -11.669334411621094
    9. '    ' → logprob: -11.669334411621094
    10. '(rb' → logprob: -11.794334411621094

Token 424: ' rb' (ID: 39441)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' (adapté à ' rb') → logprob: -0.0198479313403368
    2. 'ub' → logprob: -4.019847869873047
    3. 'hb' → logprob: -6.519847869873047
    4. ' rb' → logprob: -9.144847869873047
    5. '   ' → logprob: -9.644847869873047
    6. '       ' → logprob: -10.894847869873047
    7. ' ub' → logprob: -11.269847869873047
    8. '           ' → logprob: -12.019847869873047
    9. 'for' → logprob: -12.519847869873047
    10. '1' → logprob: -13.144847869873047

Token 425: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759457349777222
    2. ' =' → logprob: -0.8259457349777222
    3. ' ' → logprob: -13.200945854187012
    4. ')' → logprob: -13.200945854187012
    5. '       ' → logprob: -13.450945854187012
    6. '   ' → logprob: -15.075945854187012
    7. '        ' → logprob: -15.075945854187012
    8. '    ' → logprob: -15.825945854187012
    9. '>' → logprob: -16.575944900512695
    10. ' ' → logprob: -16.950944900512695

Token 426: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31326955556869507
    2. '(R' → logprob: -1.3132696151733398
    3. '(r' → logprob: -12.18826961517334
    4. ' ' → logprob: -13.81326961517334
    5. '   ' → logprob: -13.81326961517334
    6. '(' → logprob: -15.18826961517334
    7. ' ' → logprob: -16.563268661499023
    8. '  ' → logprob: -16.688268661499023
    9. '((' → logprob: -16.938268661499023
    10. '    ' → logprob: -17.188268661499023

Token 427: 'R' (ID: 49)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.12699121236801147
    2. 'R' → logprob: -2.1269912719726562
    3. ' (' → logprob: -10.501991271972656
    4. '   ' → logprob: -11.501991271972656
    5. ' R' → logprob: -11.501991271972656
    6. '(' → logprob: -11.876991271972656
    7. ')' → logprob: -12.501991271972656
    8. '	R' → logprob: -14.251991271972656
    9. '_R' → logprob: -14.376991271972656
    10. 'r' → logprob: -14.751991271972656

Token 428: ' >>' (ID: 6832)
  Prédit: ' >>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.4859711825847626
    2. '>>' → logprob: -0.985971212387085
    3. ')' → logprob: -4.485970973968506
    4. ' ' → logprob: -8.235971450805664
    5. ')>>' → logprob: -8.860971450805664
    6. ' )' → logprob: -9.110971450805664
    7. ' ' → logprob: -11.235971450805664
    8. '>' → logprob: -12.110971450805664
    9. ' >>=' → logprob: -12.485971450805664
    10. '   ' → logprob: -12.735971450805664

Token 429: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.009756677784025669
    2. ' d' → logprob: -4.634756565093994
    3. ')d' → logprob: -15.384757041931152
    4. ' ' → logprob: -15.759757041931152
    5. '	d' → logprob: -16.509756088256836
    6. '<|end|>' → logprob: -16.634756088256836
    7. '   ' → logprob: -16.759756088256836
    8. '(d' → logprob: -17.009756088256836
    9. ''d' → logprob: -18.009756088256836
    10. '  ' → logprob: -18.134756088256836

Token 430: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041148843592964113
    2. ')&' → logprob: -7.875411510467529
    3. ' )' → logprob: -10.500411033630371
    4. '       ' → logprob: -13.750411033630371
    5. ')
' → logprob: -13.875411033630371
    6. '&' → logprob: -14.250411033630371
    7. '   ' → logprob: -14.250411033630371
    8. '&)' → logprob: -15.875411033630371
    9. ' ' → logprob: -16.500411987304688
    10. '           ' → logprob: -17.125411987304688

Token 431: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.47557610273361206
    2. '&' → logprob: -0.9755761027336121
    3. ')' → logprob: -6.725575923919678
    4. ')&' → logprob: -8.225576400756836
    5. '       ' → logprob: -10.850576400756836
    6. '&amp' → logprob: -12.975576400756836
    7. ' ' → logprob: -13.100576400756836
    8. '&
' → logprob: -13.475576400756836
    9. ' &
' → logprob: -13.850576400756836
    10. '   ' → logprob: -13.975576400756836

Token 432: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008615042082965374
    2. ' ' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.508615493774414
    4. '0' → logprob: -16.883615493774414
    5. 'int' → logprob: -16.883615493774414
    6. '           ' → logprob: -17.258615493774414
    7. '```' → logprob: -17.258615493774414
    8. '       ' → logprob: -17.633615493774414
    9. '(' → logprob: -18.008615493774414
    10. '[' → logprob: -18.321115493774414

Token 433: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -16.250009536743164
    4. '   ' → logprob: -18.250009536743164
    5. 'd' → logprob: -18.312509536743164
    6. ')' → logprob: -18.562509536743164
    7. '`' → logprob: -18.750009536743164
    8. 'int' → logprob: -18.937509536743164
    9. 'bit' → logprob: -19.062509536743164
    10. '0' → logprob: -19.062509536743164

Token 434: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006563199567608535
    2. ' for' → logprob: -7.7506561279296875
    3. 'for' → logprob: -9.250656127929688
    4. '   ' → logprob: -10.125656127929688
    5. '	' → logprob: -10.500656127929688
    6. '        
' → logprob: -11.375656127929688
    7. '<|end|>' → logprob: -11.750656127929688
    8. '	   ' → logprob: -11.875656127929688
    9. ' ' → logprob: -12.000656127929688
    10. ',' → logprob: -12.375656127929688

Token 435: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000788663572166115
    2. 'for' → logprob: -7.625788688659668
    3. ' for' → logprob: -8.125788688659668
    4. '   ' → logprob: -14.000788688659668
    5. '        
' → logprob: -14.125788688659668
    6. '           ' → logprob: -14.250788688659668
    7. '      ' → logprob: -14.750788688659668
    8. '	' → logprob: -14.875788688659668
    9. '	for' → logprob: -15.000788688659668
    10. '     ' → logprob: -15.375788688659668

Token 436: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.29831236600875854
    2. '       ' → logprob: -2.0483124256134033
    3. ' for' → logprob: -2.0483124256134033
    4. '   ' → logprob: -11.673312187194824
    5. '
' → logprob: -12.048312187194824
    6. '	for' → logprob: -12.048312187194824
    7. '        
' → logprob: -13.048312187194824
    8. '           ' → logprob: -14.173312187194824
    9. ' ' → logprob: -14.798312187194824
    10. '    ' → logprob: -15.048312187194824

Token 437: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.0885934829711914
    2. 'l' → logprob: -2.0885934829711914
    3. 'f' → logprob: -2.2135934829711914
    4. 'i' → logprob: -2.4635934829711914
    5. 'x' → logprob: -2.5885934829711914
    6. 'lt' → logprob: -2.9635934829711914
    7. 'less' → logprob: -3.2135934829711914
    8. 'la' → logprob: -3.3385934829711914
    9. 'is' → logprob: -3.4635934829711914
    10. 'lb' → logprob: -3.4635934829711914

Token 438: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2816259264945984
    2. ' in' → logprob: -1.4066259860992432
    3. '0' → logprob: -8.031625747680664
    4. '_' → logprob: -10.031625747680664
    5. ',' → logprob: -10.281625747680664
    6. 'n' → logprob: -10.656625747680664
    7. 'i' → logprob: -11.281625747680664
    8. '1' → logprob: -11.406625747680664
    9. 'd' → logprob: -12.156625747680664
    10. 'a' → logprob: -12.656625747680664

Token 439: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9061421155929565
    2. 'ii' → logprob: -2.156142234802246
    3. 'f' → logprob: -2.656142234802246
    4. 'i' → logprob: -2.781142234802246
    5. 'is' → logprob: -3.531142234802246
    6. 'a' → logprob: -3.781142234802246
    7. 'eq' → logprob: -3.906142234802246
    8. 'e' → logprob: -4.156142234802246
    9. 'fi' → logprob: -4.281142234802246
    10. 'lt' → logprob: -4.343642234802246

Token 440: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4406020939350128
    2. ' in' → logprob: -1.0656020641326904
    3. ',' → logprob: -4.4406023025512695
    4. ')' → logprob: -11.31560230255127
    5. ' ' → logprob: -12.06560230255127
    6. '  ' → logprob: -12.19060230255127
    7. '
' → logprob: -12.31560230255127
    8. '1' → logprob: -13.44060230255127
    9. ' ,' → logprob: -13.44060230255127
    10. ',in' → logprob: -13.44060230255127

Token 441: ' m' (ID: 284)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00894887000322342
    2. 'l' → logprob: -6.133948802947998
    3. 't' → logprob: -7.008948802947998
    4. 'f' → logprob: -7.383948802947998
    5. 'x' → logprob: -7.508948802947998
    6. 'a' → logprob: -7.758948802947998
    7. 'e' → logprob: -8.008949279785156
    8. 'b' → logprob: -8.008949279785156
    9. ' k' → logprob: -8.008949279785156
    10. 'c' → logprob: -8.258949279785156

Token 442: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7280290722846985
    2. ',' → logprob: -1.1030290126800537
    3. 'in' → logprob: -1.7280290126800537
    4. 'k' → logprob: -5.353029251098633
    5. 'n' → logprob: -6.728029251098633
    6. ',k' → logprob: -7.103029251098633
    7. ' ,' → logprob: -9.478029251098633
    8. '  ' → logprob: -9.478029251098633
    9. '   ' → logprob: -9.603029251098633
    10. ' ' → logprob: -9.853029251098633

Token 443: ' x' (ID: 1215)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3163076937198639
    2. 'n' → logprob: -2.191307783126831
    3. 'b' → logprob: -2.941307783126831
    4. 'in' → logprob: -3.566307783126831
    5. ' in' → logprob: -4.441307544708252
    6. 'f' → logprob: -4.816307544708252
    7. 'o' → logprob: -5.066307544708252
    8. 'l' → logprob: -5.191307544708252
    9. 'z' → logprob: -5.441307544708252
    10. 'a' → logprob: -5.441307544708252

Token 444: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25203099846839905
    2. 'in' → logprob: -1.5020309686660767
    3. 'n' → logprob: -9.627031326293945
    4. ' ' → logprob: -12.377031326293945
    5. ',' → logprob: -12.627031326293945
    6. '  ' → logprob: -12.627031326293945
    7. 'import' → logprob: -12.752031326293945
    8. '   ' → logprob: -12.877031326293945
    9. 'In' → logprob: -13.002031326293945
    10. 'i' → logprob: -13.127031326293945

Token 445: ' y' (ID: 342)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.033990502357483
    2. 'k' → logprob: -1.283990502357483
    3. ' in' → logprob: -1.533990502357483
    4. 'z' → logprob: -3.2839903831481934
    5. 'v' → logprob: -3.7839903831481934
    6. 'b' → logprob: -5.033990383148193
    7. 'dp' → logprob: -5.158990383148193
    8. 'n' → logprob: -5.283990383148193
    9. 'y' → logprob: -5.408990383148193
    10. 'bit' → logprob: -5.658990383148193

Token 446: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4290408492088318
    2. 'in' → logprob: -1.0540409088134766
    3. ' ' → logprob: -9.179040908813477
    4. ',' → logprob: -9.679040908813477
    5. '  ' → logprob: -10.054040908813477
    6. ')' → logprob: -10.304040908813477
    7. '   ' → logprob: -11.179040908813477
    8. 'i' → logprob: -11.554040908813477
    9. '    ' → logprob: -11.554040908813477
    10. 'product' → logprob: -11.679040908813477

Token 447: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.0018022728618234396
    2. ' product' → logprob: -6.501802444458008
    3. '(product' → logprob: -8.751802444458008
    4. '[(' → logprob: -9.626802444458008
    5. '((' → logprob: -10.501802444458008
    6. '[' → logprob: -11.876802444458008
    7. 'list' → logprob: -12.251802444458008
    8. '(' → logprob: -12.376802444458008
    9. '	product' → logprob: -12.501802444458008
    10. '[]' → logprob: -12.501802444458008

Token 448: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.06525195389986038
    2. '(range' → logprob: -2.9402520656585693
    3. '=' → logprob: -5.69025182723999
    4. '=r' → logprob: -5.81525182723999
    5. '(' → logprob: -6.19025182723999
    6. '((' → logprob: -6.94025182723999
    7. '=(' → logprob: -7.56525182723999
    8. 'rng' → logprob: -8.565252304077148
    9. '([' → logprob: -10.565252304077148
    10. ':=' → logprob: -10.565252304077148

Token 449: 'ng' (ID: 892)
  Prédit: 'ng'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -0.5225403904914856
    2. '(r' → logprob: -1.1475403308868408
    3. '(' → logprob: -3.647540330886841
    4. 'ange' → logprob: -4.14754056930542
    5. '(range' → logprob: -4.64754056930542
    6. '(*' → logprob: -4.89754056930542
    7. 'rng' → logprob: -5.39754056930542
    8. 'nge' → logprob: -5.52254056930542
    9. '([' → logprob: -5.64754056930542
    10. 'ang' → logprob: -5.89754056930542

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033054545056074858
    2. ',r' → logprob: -5.878305435180664
    3. '(),' → logprob: -8.378305435180664
    4. '=' → logprob: -9.128305435180664
    5. ' ,' → logprob: -9.753305435180664
    6. ':=' → logprob: -10.753305435180664
    7. '   ' → logprob: -11.128305435180664
    8. '(range' → logprob: -11.378305435180664
    9. 'range' → logprob: -11.378305435180664
    10. ',
' → logprob: -11.628305435180664

Token 451: ' repeat' (ID: 22962)
  Prédit: 'rng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rng' → logprob: -0.00014966767048463225
    2. ' rng' → logprob: -9.500149726867676
    3. 'r' → logprob: -10.000149726867676
    4. 'rn' → logprob: -10.875149726867676
    5. 'range' → logprob: -12.750149726867676
    6. '   ' → logprob: -13.125149726867676
    7. '[r' → logprob: -13.625149726867676
    8. '
' → logprob: -13.875149726867676
    9. ')' → logprob: -14.000149726867676
    10. 'rg' → logprob: -14.125149726867676

Token 452: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15080994367599487
    2. '5' → logprob: -2.4008100032806396
    3. '(' → logprob: -3.0258100032806396
    4. '6' → logprob: -7.2758097648620605
    5. '   ' → logprob: -9.900810241699219
    6. '4' → logprob: -10.400810241699219
    7. '7' → logprob: -10.775810241699219
    8. ' ' → logprob: -12.025810241699219
    9. '
' → logprob: -12.275810241699219
    10. '=(' → logprob: -12.525810241699219

Token 453: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -6.134509021649137e-05
    2. '6' → logprob: -10.75006103515625
    3. ' ' → logprob: -11.00006103515625
    4. '   ' → logprob: -11.00006103515625
    5. '    ' → logprob: -13.25006103515625
    6. '4' → logprob: -13.37506103515625
    7. '  ' → logprob: -14.37506103515625
    8. '
' → logprob: -14.75006103515625
    9. '7' → logprob: -14.87506103515625
    10. '```' → logprob: -15.12506103515625

Token 454: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005302419885993004
    2. ':' → logprob: -5.880302429199219
    3. '):
' → logprob: -6.005302429199219
    4. ')' → logprob: -11.755302429199219
    5. '):
' → logprob: -12.005302429199219
    6. '}:' → logprob: -13.005302429199219
    7. '=' → logprob: -13.505302429199219
    8. '   ' → logprob: -13.505302429199219
    9. '       ' → logprob: -13.505302429199219
    10. ',' → logprob: -13.505302429199219

Token 455: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3250899016857147
    2. ':' → logprob: -1.325089931488037
    3. ' if' → logprob: -5.825089931488037
    4. ' :' → logprob: -5.950089931488037
    5. '       ' → logprob: -6.575089931488037
    6. ':
' → logprob: -6.825089931488037
    7. ',' → logprob: -7.700089931488037
    8. '):' → logprob: -7.825089931488037
    9. '<|end|>' → logprob: -7.825089931488037
    10. '[' → logprob: -8.075089454650879

Token 456: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41441288590431213
    2. '           ' → logprob: -1.9144128561019897
    3. '               ' → logprob: -1.9144128561019897
    4. 'if' (adapté à ' if') → logprob: -3.9144129753112793
    5. '            ' → logprob: -5.039412975311279
    6. '                ' → logprob: -5.789412975311279
    7. ' dp' → logprob: -5.914412975311279
    8. ' continue' → logprob: -6.164412975311279
    9. ' next' → logprob: -6.789412975311279
    10. 'dp' → logprob: -6.789412975311279

Token 457: ' x' (ID: 1215)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.056149959564209
    2. ' not' → logprob: -1.306149959564209
    3. '(i' → logprob: -1.556149959564209
    4. '(m' → logprob: -3.181149959564209
    5. ' i' → logprob: -3.431149959564209
    6. '(not' → logprob: -3.931149959564209
    7. 'i' → logprob: -4.306149959564209
    8. ' x' → logprob: -4.306149959564209
    9. '(x' → logprob: -4.681149959564209
    10. ' m' → logprob: -4.806149959564209

Token 458: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6588271260261536
    2. 'and' → logprob: -1.6588270664215088
    3. '>' → logprob: -1.7838270664215088
    4. ' ==' → logprob: -3.658827066421509
    5. ':' → logprob: -4.033827304840088
    6. ' and' → logprob: -4.158827304840088
    7. 'or' → logprob: -4.283827304840088
    8. '|' → logprob: -4.283827304840088
    9. ' or' → logprob: -4.658827304840088
    10. ' >' → logprob: -4.658827304840088

Token 459: ' y' (ID: 342)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6269738078117371
    2. 'y' → logprob: -1.3769738674163818
    3. 'rb' → logprob: -2.376973867416382
    4. 'lb' → logprob: -2.501973867416382
    5. '1' → logprob: -4.376973628997803
    6. '0' → logprob: -4.751973628997803
    7. 'i' → logprob: -4.876973628997803
    8. '(' → logprob: -5.626973628997803
    9. '(rb' → logprob: -6.876973628997803
    10. ' lb' → logprob: -7.251973628997803

Token 460: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38342249393463135
    2. ':' → logprob: -1.2584224939346313
    3. ':
' → logprob: -4.008422374725342
    4. ' or' → logprob: -5.008422374725342
    5. 'continue' → logprob: -5.133422374725342
    6. '           ' → logprob: -6.008422374725342
    7. ' continue' → logprob: -7.508422374725342
    8. ' and' → logprob: -8.3834228515625
    9. 'or' → logprob: -9.7584228515625
    10. ' :' → logprob: -10.1334228515625

Token 461: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029342059046030045
    2. 'continue' → logprob: -3.9043421745300293
    3. ' continue' → logprob: -4.779342174530029
    4. '           ' → logprob: -8.904341697692871
    5. '	continue' → logprob: -9.154341697692871
    6. '                   ' → logprob: -9.904341697692871
    7. '   ' → logprob: -10.654341697692871
    8. '                       ' → logprob: -11.529341697692871
    9. '                           ' → logprob: -12.154341697692871
    10. 'Continue' → logprob: -12.279341697692871

Token 462: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002622894535306841
    2. '            
' → logprob: -8.500262260437012
    3. '
' → logprob: -11.000262260437012
    4. '               ' → logprob: -11.500262260437012
    5. ',' → logprob: -11.750262260437012
    6. 'dp' → logprob: -12.625262260437012
    7. '<|end|>' → logprob: -12.875262260437012
    8. '          ' → logprob: -13.000262260437012
    9. '            ' → logprob: -13.375262260437012
    10. 'for' → logprob: -13.625262260437012

Token 463: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012761499965563416
    2. 'dp' → logprob: -9.625127792358398
    3. '               ' → logprob: -11.125127792358398
    4. 'continue' → logprob: -11.250127792358398
    5. '       ' → logprob: -12.375127792358398
    6. '		' → logprob: -12.500127792358398
    7. 'for' → logprob: -12.625127792358398
    8. '            
' → logprob: -12.750127792358398
    9. '[' → logprob: -13.000127792358398
    10. 'next' → logprob: -13.250127792358398

Token 464: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29559558629989624
    2. 'for' → logprob: -2.545595645904541
    3. 'dp' → logprob: -3.295595645904541
    4. 'val' → logprob: -3.545595645904541
    5. 'continue' → logprob: -3.920595645904541
    6. 'nd' → logprob: -4.420595645904541
    7. 'lb' → logprob: -4.420595645904541
    8. 's' → logprob: -4.670595645904541
    9. 'if' (adapté à ' if') → logprob: -4.670595645904541
    10. 'bit' → logprob: -4.795595645904541

Token 465: ' not' (ID: 625)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3872654438018799
    2. '(x' → logprob: -1.6372654438018799
    3. '(i' → logprob: -1.8872654438018799
    4. 'i' → logprob: -2.01226544380188
    5. 'm' → logprob: -2.63726544380188
    6. '(m' → logprob: -2.63726544380188
    7. '((' → logprob: -3.51226544380188
    8. 'j' → logprob: -3.63726544380188
    9. 'not' → logprob: -4.387265205383301
    10. '(not' → logprob: -4.387265205383301

Token 466: ' (' (ID: 350)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5013974905014038
    2. '(i' → logprob: -1.5013974905014038
    3. ' (' → logprob: -3.5013976097106934
    4. ' ((' → logprob: -3.5013976097106934
    5. '(x' → logprob: -3.8763976097106934
    6. '(((' → logprob: -4.001397609710693
    7. '(m' → logprob: -4.126397609710693
    8. 'i' → logprob: -4.126397609710693
    9. ' i' → logprob: -4.751397609710693
    10. '(' → logprob: -5.001397609710693

Token 467: 'i' (ID: 72)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7764768004417419
    2. '(i' → logprob: -1.1514768600463867
    3. 'x' → logprob: -2.6514768600463867
    4. '(m' → logprob: -2.9014768600463867
    5. 'i' → logprob: -3.2764768600463867
    6. '((' → logprob: -3.7764768600463867
    7. '(not' → logprob: -3.9014768600463867
    8. '(lb' → logprob: -5.276476860046387
    9. 'm' → logprob: -5.901476860046387
    10. '(' → logprob: -6.026476860046387

Token 468: ' or' (ID: 503)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.05555708333849907
    2. ' <=' → logprob: -3.3055570125579834
    3. '==' → logprob: -4.9305572509765625
    4. ' or' → logprob: -5.1805572509765625
    5. 'or' → logprob: -6.1805572509765625
    6. 'and' → logprob: -7.1805572509765625
    7. '>=' → logprob: -7.4305572509765625
    8. 'if' → logprob: -7.9305572509765625
    9. ' ==' → logprob: -8.055557250976562
    10. ' and' → logprob: -9.180557250976562

Token 469: ' lb' (ID: 32474)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3525235056877136
    2. 'x' → logprob: -1.4775235652923584
    3. 'm' → logprob: -2.9775235652923584
    4. '(x' → logprob: -5.102523326873779
    5. '(j' → logprob: -5.477523326873779
    6. 'not' → logprob: -5.977523326873779
    7. '(not' → logprob: -6.477523326873779
    8. '(m' → logprob: -6.602523326873779
    9. '((' → logprob: -7.352523326873779
    10. '(' → logprob: -7.852523326873779

Token 470: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.20664404332637787
    2. ')' → logprob: -2.331644058227539
    3. ' or' → logprob: -3.081644058227539
    4. ' <=' → logprob: -3.956644058227539
    5. '):' → logprob: -5.081644058227539
    6. ' and' → logprob: -5.081644058227539
    7. 'and' → logprob: -5.456644058227539
    8. '==' → logprob: -5.956644058227539
    9. 'or' → logprob: -6.206644058227539
    10. '):
' → logprob: -7.206644058227539

Token 471: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0020163096487522125
    2. 'j' → logprob: -6.377016544342041
    3. ' x' → logprob: -8.752016067504883
    4. 'm' → logprob: -9.752016067504883
    5. 'y' → logprob: -10.002016067504883
    6. 'i' → logprob: -10.502016067504883
    7. '(x' → logprob: -12.002016067504883
    8. ' ' → logprob: -12.252016067504883
    9. '   ' → logprob: -12.877016067504883
    10. 'int' → logprob: -13.627016067504883

Token 472: '):' (ID: 3127)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.49668192863464355
    2. ')' → logprob: -1.4966819286346436
    3. ' <=' → logprob: -2.8716819286346436
    4. 'and' → logprob: -3.6216819286346436
    5. '):
' → logprob: -3.7466819286346436
    6. ' or' → logprob: -3.8716819286346436
    7. ' and' → logprob: -4.121682167053223
    8. '):' → logprob: -4.621682167053223
    9. 'or' → logprob: -5.246682167053223
    10. 'if' → logprob: -5.871682167053223

Token 473: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17571234703063965
    2. ' continue' → logprob: -2.3007123470306396
    3. 'continue' → logprob: -2.8007123470306396
    4. '           ' → logprob: -9.300712585449219
    5. '	continue' → logprob: -10.050712585449219
    6. '   ' → logprob: -11.050712585449219
    7. '                       ' → logprob: -11.925712585449219
    8. '                   ' → logprob: -11.925712585449219
    9. '0' → logprob: -12.300712585449219
    10. ' ' → logprob: -12.550712585449219

Token 474: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.141186450899113e-05
    2. 'for' → logprob: -11.375020980834961
    3. 'if' → logprob: -12.125020980834961
    4. '          ' → logprob: -13.875020980834961
    5. '       ' → logprob: -14.125020980834961
    6. '               ' → logprob: -14.375020980834961
    7. 'continue' → logprob: -14.375020980834961
    8. 's' → logprob: -15.250020980834961
    9. ' for' → logprob: -15.250020980834961
    10. '		' → logprob: -15.500020980834961

Token 475: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5094070477061905e-05
    2. 'for' → logprob: -12.125015258789062
    3. 'if' → logprob: -12.250015258789062
    4. 'continue' → logprob: -12.625015258789062
    5. '          ' → logprob: -15.250015258789062
    6. '               ' → logprob: -15.375015258789062
    7. '       ' → logprob: -15.375015258789062
    8. '		' → logprob: -16.000015258789062
    9. 's' → logprob: -16.125015258789062
    10. ' for' → logprob: -16.375015258789062

Token 476: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38840460777282715
    2. 'if' (adapté à ' if') → logprob: -1.1384046077728271
    3. 'continue' → logprob: -6.638404846191406
    4. ' if' → logprob: -9.263404846191406
    5. 'for' → logprob: -9.763404846191406
    6. 'dp' → logprob: -10.888404846191406
    7. '       ' → logprob: -11.638404846191406
    8. '   ' → logprob: -12.013404846191406
    9. '
' → logprob: -12.138404846191406
    10. 'n' → logprob: -12.513404846191406

Token 477: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.09820731729269028
    2. 'j' → logprob: -2.9732072353363037
    3. ' not' → logprob: -3.7232072353363037
    4. '           ' → logprob: -4.723207473754883
    5. '(not' → logprob: -5.723207473754883
    6. '   ' → logprob: -5.973207473754883
    7. '(j' → logprob: -6.598207473754883
    8. '               ' → logprob: -7.348207473754883
    9. ' j' → logprob: -7.473207473754883
    10. 'm' → logprob: -8.473207473754883

Token 478: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6548818945884705
    2. '(j' → logprob: -0.7798818945884705
    3. '(r' → logprob: -3.9048819541931152
    4. '(rb' → logprob: -7.029881954193115
    5. '(m' → logprob: -8.654881477355957
    6. '(' → logprob: -8.779881477355957
    7. '(y' → logprob: -8.904881477355957
    8. '   ' → logprob: -9.029881477355957
    9. ' j' → logprob: -9.529881477355957
    10. '(not' → logprob: -9.529881477355957

Token 479: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0011140200076624751
    2. 'm' → logprob: -7.3761138916015625
    3. 'not' → logprob: -8.751113891601562
    4. ' j' → logprob: -9.376113891601562
    5. 'i' → logprob: -9.626113891601562
    6. '   ' → logprob: -9.626113891601562
    7. '(j' → logprob: -9.876113891601562
    8. 'x' → logprob: -11.626113891601562
    9. '  ' → logprob: -11.938613891601562
    10. '
' → logprob: -12.251113891601562

Token 480: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.10020796209573746
    2. 'or' → logprob: -2.350208044052124
    3. '	or' → logprob: -14.850208282470703
    4. ' ' → logprob: -14.975208282470703
    5. ')' → logprob: -15.225208282470703
    6. '          ' → logprob: -16.850208282470703
    7. '<=' → logprob: -17.100208282470703
    8. '[' → logprob: -17.225208282470703
    9. 'and' → logprob: -17.350208282470703
    10. '<|end|>' → logprob: -17.725208282470703

Token 481: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6562323570251465
    2. 'rb' → logprob: -1.4062323570251465
    3. 'x' → logprob: -1.5312323570251465
    4. ' y' → logprob: -4.7812323570251465
    5. ' rb' → logprob: -5.0312323570251465
    6. '   ' → logprob: -6.4062323570251465
    7. ' x' → logprob: -6.7812323570251465
    8. '(rb' → logprob: -8.031232833862305
    9. 'yb' → logprob: -8.281232833862305
    10. ' ' → logprob: -9.093732833862305

Token 482: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.8546323180198669
    2. '>=' → logprob: -1.3546323776245117
    3. ' <=' → logprob: -1.7296323776245117
    4. ' >=' → logprob: -1.9796323776245117
    5. ')' → logprob: -6.979632377624512
    6. ')>=' → logprob: -10.729632377624512
    7. ')<=' → logprob: -11.354632377624512
    8. '=' → logprob: -11.354632377624512
    9. '==' → logprob: -11.604632377624512
    10. ' ' → logprob: -11.729632377624512

Token 483: ' rb' (ID: 39441)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.00023214559769257903
    2. ' rb' → logprob: -8.375231742858887
    3. 'r' → logprob: -14.625231742858887
    4. '(rb' → logprob: -14.625231742858887
    5. ' ' → logprob: -15.500231742858887
    6. '   ' → logprob: -15.625231742858887
    7. '  ' → logprob: -17.000232696533203
    8. '
' → logprob: -17.125232696533203
    9. '_rb' → logprob: -17.125232696533203
    10. '	r' → logprob: -18.000232696533203

Token 484: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005811501177959144
    2. '):
' → logprob: -8.000580787658691
    3. ' ):' → logprob: -8.500580787658691
    4. '           ' → logprob: -10.750580787658691
    5. '       ' → logprob: -12.375580787658691
    6. ')' → logprob: -12.500580787658691
    7. '               ' → logprob: -12.750580787658691
    8. ':' → logprob: -13.000580787658691
    9. '          ' → logprob: -13.250580787658691
    10. '         ' → logprob: -13.875580787658691

Token 485: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3887454569339752
    2. 'continue' → logprob: -1.2637454271316528
    3. '               ' → logprob: -3.2637455463409424
    4. '           ' → logprob: -6.763745307922363
    5. '	continue' → logprob: -9.638745307922363
    6. '       ' → logprob: -11.763745307922363
    7. '                   ' → logprob: -11.888745307922363
    8. '   ' → logprob: -12.263745307922363
    9. ' ' → logprob: -13.013745307922363
    10. '_continue' → logprob: -13.138745307922363

Token 486: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010158988879993558
    2. 'dp' → logprob: -7.001015663146973
    3. 'for' → logprob: -9.751015663146973
    4. '               ' → logprob: -10.626015663146973
    5. 'if' → logprob: -12.751015663146973
    6. '
' → logprob: -12.751015663146973
    7. ' dp' → logprob: -12.876015663146973
    8. ' for' → logprob: -13.251015663146973
    9. '       ' → logprob: -13.501015663146973
    10. '            
' → logprob: -13.626015663146973

Token 487: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014877010136842728
    2. 'dp' → logprob: -4.389876842498779
    3. 'for' → logprob: -6.264876842498779
    4. '               ' → logprob: -8.139877319335938
    5. ' dp' → logprob: -9.764877319335938
    6. ' for' → logprob: -9.764877319335938
    7. '                   ' → logprob: -10.889877319335938
    8. '            
' → logprob: -11.139877319335938
    9. '                       ' → logprob: -12.264877319335938
    10. '                           ' → logprob: -12.889877319335938

Token 488: ' ni' (ID: 2565)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2334909588098526
    2. 'for' → logprob: -2.1084909439086914
    3. '           ' → logprob: -3.2334909439086914
    4. 'nd' → logprob: -3.7334909439086914
    5. 'val' → logprob: -5.108490943908691
    6. 'ni' (adapté à ' ni') → logprob: -5.483490943908691
    7. '               ' → logprob: -5.733490943908691
    8. 's' → logprob: -6.483490943908691
    9. ' dp' → logprob: -6.983490943908691
    10. 'v' → logprob: -7.233490943908691

Token 489: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6046499013900757
    2. ',' → logprob: -1.1046499013900757
    3. '=' → logprob: -2.1046500205993652
    4. '=i' → logprob: -9.229649543762207
    5. ',i' → logprob: -9.604649543762207
    6. ',j' → logprob: -9.729649543762207
    7. ' ,' → logprob: -9.729649543762207
    8. '   ' → logprob: -10.354649543762207
    9. 'm' → logprob: -10.479649543762207
    10. ' ' → logprob: -10.604649543762207

Token 490: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005493079777806997
    2. '1' → logprob: -5.3804931640625
    3. 'int' → logprob: -7.7554931640625
    4. '(i' → logprob: -8.3804931640625
    5. ' i' → logprob: -9.1304931640625
    6. 'x' → logprob: -10.5054931640625
    7. '(' → logprob: -10.6304931640625
    8. 'max' → logprob: -10.8804931640625
    9. '   ' → logprob: -11.6304931640625
    10. '0' → logprob: -11.7554931640625

Token 491: ' |' (ID: 1022)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.2302899956703186
    2. ' or' → logprob: -1.6052899360656738
    3. '|' → logprob: -5.480289936065674
    4. 'if' → logprob: -7.480289936065674
    5. '=' → logprob: -9.980290412902832
    6. ' if' → logprob: -10.230290412902832
    7. '           ' → logprob: -10.980290412902832
    8. '
' → logprob: -11.105290412902832
    9. '```' → logprob: -12.730290412902832
    10. ' |' → logprob: -13.105290412902832

Token 492: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.11580970138311386
    2. '(lb' → logprob: -2.740809679031372
    3. 'x' → logprob: -3.865809679031372
    4. ' (' → logprob: -4.115809917449951
    5. '((' → logprob: -5.240809917449951
    6. 'lb' → logprob: -7.115809917449951
    7. '(' → logprob: -7.115809917449951
    8. ' x' → logprob: -8.615809440612793
    9. '(int' → logprob: -8.740809440612793
    10. ' lb' → logprob: -9.490809440612793

Token 493: 'lb' (ID: 37369)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.49643561244010925
    2. '(lb' → logprob: -1.4964356422424316
    3. 'x' → logprob: -2.3714356422424316
    4. 'lb' → logprob: -2.6214356422424316
    5. '((' → logprob: -8.246435165405273
    6. ' (' → logprob: -8.371435165405273
    7. '(' → logprob: -8.621435165405273
    8. '(l' → logprob: -8.871435165405273
    9. ' lb' → logprob: -9.246435165405273
    10. '(int' → logprob: -9.246435165405273

Token 494: ' <' (ID: 464)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5939257144927979
    2. '>' → logprob: -0.9689257144927979
    3. ' !=' → logprob: -2.843925714492798
    4. '>x' → logprob: -5.093925476074219
    5. ' >' → logprob: -6.468925476074219
    6. ')' → logprob: -6.968925476074219
    7. '<' → logprob: -7.218925476074219
    8. '<x' → logprob: -7.718925476074219
    9. '==' → logprob: -8.843925476074219
    10. ')!=' → logprob: -10.593925476074219

Token 495: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07917552441358566
    2. ' x' → logprob: -2.5791754722595215
    3. '=' → logprob: -8.20417594909668
    4. '=x' → logprob: -12.45417594909668
    5. 'y' → logprob: -13.32917594909668
    6. ')' → logprob: -13.57917594909668
    7. '	x' → logprob: -13.82917594909668
    8. ')x' → logprob: -14.07917594909668
    9. '1' → logprob: -14.32917594909668
    10. ' y' → logprob: -14.70417594909668

Token 496: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10085900127887726
    2. ')
' → logprob: -2.3508589267730713
    3. ')
' → logprob: -7.35085916519165
    4. '           ' → logprob: -12.725858688354492
    5. '       ' → logprob: -13.100858688354492
    6. '),' → logprob: -13.475858688354492
    7. ')

' → logprob: -13.600858688354492
    8. ' )' → logprob: -14.225858688354492
    9. ' )
' → logprob: -14.350858688354492
    10. '               ' → logprob: -15.475858688354492

Token 497: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09626360982656479
    2. 'ny' → logprob: -2.8462636470794678
    3. 'nj' → logprob: -3.7212636470794678
    4. 'n' → logprob: -5.096263408660889
    5. '
' → logprob: -7.096263408660889
    6. '               ' → logprob: -7.721263408660889
    7. '            
' → logprob: -7.846263408660889
    8. 'nym' → logprob: -8.096263885498047
    9. 'nm' → logprob: -8.221263885498047
    10. '       ' → logprob: -8.596263885498047

Token 498: ' nj' (ID: 8979)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' (adapté à ' nj') → logprob: -0.0004384174826554954
    2. ' nj' → logprob: -8.250438690185547
    3. '           ' → logprob: -8.750438690185547
    4. '   ' → logprob: -12.250438690185547
    5. 'n' → logprob: -12.250438690185547
    6. '
' → logprob: -13.000438690185547
    7. 'ny' → logprob: -13.375438690185547
    8. '            
' → logprob: -13.875438690185547
    9. '       ' → logprob: -14.125438690185547
    10. '               ' → logprob: -14.125438690185547

Token 499: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815064437687397
    2. ' =' → logprob: -4.018150806427002
    3. '=j' → logprob: -14.643150329589844
    4. '=
' → logprob: -16.018150329589844
    5. 'j' → logprob: -16.518150329589844
    6. '   ' → logprob: -16.893150329589844
    7. ')' → logprob: -17.518150329589844
    8. ' ' → logprob: -18.268150329589844
    9. '=

' → logprob: -18.393150329589844
    10. '           ' → logprob: -18.518150329589844

Token 500: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.337155355140567e-05
    2. ' j' → logprob: -9.750062942504883
    3. '   ' → logprob: -12.500062942504883
    4. '	j' → logprob: -14.500062942504883
    5. '(j' → logprob: -15.250062942504883
    6. '[j' → logprob: -15.375062942504883
    7. '  ' → logprob: -16.125062942504883
    8. ' ' → logprob: -16.625062942504883
    9. '           ' → logprob: -17.375062942504883
    10. '    ' → logprob: -17.687562942504883

Token 501: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.02642442099750042
    2. ' |' → logprob: -3.6514244079589844
    3. '=' → logprob: -9.276424407958984
    4. ' |=' → logprob: -10.526424407958984
    5. ' =' → logprob: -13.026424407958984
    6. '|(' → logprob: -14.651424407958984
    7. ')' → logprob: -15.526424407958984
    8. '|
' → logprob: -15.901424407958984
    9. '|=
' → logprob: -16.026424407958984
    10. '<|end|>' → logprob: -16.276424407958984

Token 502: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0011484331917017698
    2. '(rb' → logprob: -6.876148223876953
    3. 'y' → logprob: -10.001148223876953
    4. '(' → logprob: -10.001148223876953
    5. '(r' → logprob: -11.251148223876953
    6. ' (' → logprob: -11.751148223876953
    7. '   ' → logprob: -13.251148223876953
    8. '((' → logprob: -14.501148223876953
    9. '(R' → logprob: -14.876148223876953
    10. '(x' → logprob: -15.501148223876953

Token 503: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0016981529770419002
    2. '(y' → logprob: -7.501698017120361
    3. 'rb' → logprob: -7.626698017120361
    4. ' y' → logprob: -7.751698017120361
    5. '(rb' → logprob: -9.37669849395752
    6. '   ' → logprob: -9.62669849395752
    7. 'yb' → logprob: -11.25169849395752
    8. ''y' → logprob: -12.12669849395752
    9. '     ' → logprob: -12.12669849395752
    10. '  ' → logprob: -12.12669849395752

Token 504: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.03922707214951515
    2. ' <' → logprob: -3.28922700881958
    3. '>' → logprob: -6.78922700881958
    4. ' >' → logprob: -9.914227485656738
    5. ' ' → logprob: -12.039227485656738
    6. ')' → logprob: -13.414227485656738
    7. '|' → logprob: -15.476727485656738
    8. '<int' → logprob: -15.539227485656738
    9. '<=' → logprob: -15.851727485656738
    10. '```' → logprob: -15.851727485656738

Token 505: ' rb' (ID: 39441)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.0015062900492921472
    2. ' rb' → logprob: -6.501506328582764
    3. '(rb' → logprob: -12.501505851745605
    4. '_rb' → logprob: -15.501505851745605
    5. '.rb' → logprob: -17.376506805419922
    6. '
' → logprob: -17.751506805419922
    7. '   ' → logprob: -17.751506805419922
    8. ' ' → logprob: -18.251506805419922
    9. 'r' → logprob: -18.626506805419922
    10. 'RB' → logprob: -18.751506805419922

Token 506: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2540718913078308
    2. ')' → logprob: -1.5040719509124756
    3. '           ' → logprob: -6.2540717124938965
    4. ')
' → logprob: -8.504072189331055
    5. ')

' → logprob: -12.379072189331055
    6. '),' → logprob: -13.004072189331055
    7. ')`
' → logprob: -13.004072189331055
    8. ' )
' → logprob: -13.254072189331055
    9. '       ' → logprob: -13.754072189331055
    10. '          ' → logprob: -14.004072189331055

Token 507: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11827042698860168
    2. 'for' → logprob: -2.3682703971862793
    3. 'nm' → logprob: -4.243270397186279
    4. ' for' → logprob: -6.118270397186279
    5. 'nd' → logprob: -8.368270874023438
    6. 'dp' → logprob: -8.618270874023438
    7. 'if' → logprob: -8.993270874023438
    8. 'val' → logprob: -9.118270874023438
    9. 'nz' → logprob: -9.118270874023438
    10. ' nm' → logprob: -9.243270874023438

Token 508: ' nm' (ID: 43183)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5017166137695312
    2. 'dp' → logprob: -1.0017166137695312
    3. '           ' → logprob: -4.501716613769531
    4. 'val' → logprob: -5.501716613769531
    5. 'if' → logprob: -5.626716613769531
    6. 'nd' → logprob: -6.126716613769531
    7. 's' → logprob: -6.626716613769531
    8. 'sum' → logprob: -7.501716613769531
    9. ' for' → logprob: -7.751716613769531
    10. 'sm' → logprob: -7.751716613769531

Token 509: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25255268812179565
    2. '=' → logprob: -1.5025527477264404
    3. '   ' → logprob: -8.37755298614502
    4. ' ' → logprob: -9.62755298614502
    5. '       ' → logprob: -9.75255298614502
    6. '           ' → logprob: -9.87755298614502
    7. '=m' → logprob: -10.12755298614502
    8. ',' → logprob: -10.25255298614502
    9. '    ' → logprob: -10.62755298614502
    10. '     ' → logprob: -11.25255298614502

Token 510: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0011743901995941997
    2. ' m' → logprob: -8.126173973083496
    3. '(m' → logprob: -8.251173973083496
    4. '1' → logprob: -8.376173973083496
    5. '0' → logprob: -8.876173973083496
    6. 'x' → logprob: -9.001173973083496
    7. '   ' → logprob: -10.501173973083496
    8. 'int' → logprob: -11.001173973083496
    9. ' ' → logprob: -11.251173973083496
    10. '(' → logprob: -11.626173973083496

Token 511: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.00632192799821496
    2. 'or' → logprob: -5.381321907043457
    3. ' or' → logprob: -7.131321907043457
    4. ' |' → logprob: -7.131321907043457
    5. '           ' → logprob: -10.256321907043457
    6. '=' → logprob: -10.381321907043457
    7. ' |=' → logprob: -10.881321907043457
    8. 'if' → logprob: -12.256321907043457
    9. '|(' → logprob: -13.256321907043457
    10. '||' → logprob: -13.881321907043457

Token 512: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.011262968182563782
    2. '((' → logprob: -5.136262893676758
    3. ' (' → logprob: -5.886262893676758
    4. '(' → logprob: -6.261262893676758
    5. '(y' → logprob: -8.636262893676758
    6. '(int' → logprob: -9.011262893676758
    7. '(not' → logprob: -9.761262893676758
    8. '(((' → logprob: -10.136262893676758
    9. '1' → logprob: -10.136262893676758
    10. '(bool' → logprob: -10.636262893676758

Token 513: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1346595138311386
    2. 'x' → logprob: -2.1346595287323
    3. ' (' → logprob: -5.634659290313721
    4. '(' → logprob: -6.259659290313721
    5. '((' → logprob: -7.384659290313721
    6. ' x' → logprob: -7.634659290313721
    7. '(y' → logprob: -8.259659767150879
    8. '(not' → logprob: -8.634659767150879
    9. '1' → logprob: -8.759659767150879
    10. '(int' → logprob: -9.259659767150879

Token 514: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.042468175292015076
    2. 'and' → logprob: -3.7924680709838867
    3. '|' → logprob: -4.417468070983887
    4. '^' → logprob: -6.417468070983887
    5. ' &' → logprob: -6.542468070983887
    6. '!=' → logprob: -6.792468070983887
    7. '&amp' → logprob: -7.542468070983887
    8. '==' → logprob: -7.667468070983887
    9. '&m' → logprob: -7.667468070983887
    10. ' and' → logprob: -8.417468070983887

Token 515: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006814827676862478
    2. '(' → logprob: -5.756814956665039
    3. ' y' → logprob: -6.006814956665039
    4. '(y' → logprob: -7.256814956665039
    5. '1' → logprob: -9.006814956665039
    6. ' (' → logprob: -9.131814956665039
    7. '(~' → logprob: -9.381814956665039
    8. '~' → logprob: -9.631814956665039
    9. '   ' → logprob: -11.006814956665039
    10. '(not' → logprob: -11.694314956665039

Token 516: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029870938509702682
    2. ')
' → logprob: -3.5298709869384766
    3. '           ' → logprob: -10.029870986938477
    4. ')
' → logprob: -10.904870986938477
    5. '))' → logprob: -11.029870986938477
    6. ' )' → logprob: -11.279870986938477
    7. '       ' → logprob: -12.154870986938477
    8. ')

' → logprob: -12.779870986938477
    9. '               ' → logprob: -13.029870986938477
    10. '<|end|>' → logprob: -13.029870986938477

Token 517: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03517042100429535
    2. 'dp' → logprob: -3.410170316696167
    3. ' dp' → logprob: -6.535170555114746
    4. '(dp' → logprob: -10.535170555114746
    5. '          ' → logprob: -11.660170555114746
    6. '       ' → logprob: -12.035170555114746
    7. '               ' → logprob: -12.035170555114746
    8. '	dp' → logprob: -12.160170555114746
    9. '         ' → logprob: -12.535170555114746
    10. '                   ' → logprob: -12.660170555114746

Token 518: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007497305050492287
    2. '           ' → logprob: -5.132497310638428
    3. ' dp' → logprob: -6.507497310638428
    4. '               ' → logprob: -11.13249683380127
    5. 'for' → logprob: -11.38249683380127
    6. '(dp' → logprob: -11.50749683380127
    7. 'if' (adapté à ' if') → logprob: -12.25749683380127
    8. 'nd' → logprob: -12.38249683380127
    9. '
' → logprob: -12.63249683380127
    10. '	dp' → logprob: -12.75749683380127

Token 519: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.439883828163147
    2. 'dp' → logprob: -2.1898837089538574
    3. 'x' → logprob: -2.3148837089538574
    4. 'not' → logprob: -2.4398837089538574
    5. ' x' → logprob: -2.6898837089538574
    6. 'm' → logprob: -2.8148837089538574
    7. 'nm' → logprob: -2.9398837089538574
    8. 'ni' → logprob: -3.1898837089538574
    9. ' dp' → logprob: -3.1898837089538574
    10. ' nm' → logprob: -3.1898837089538574

Token 520: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.068394660949707
    2. '(x' → logprob: -1.943394660949707
    3. '(i' → logprob: -1.943394660949707
    4. '(m' → logprob: -2.443394660949707
    5. '(' → logprob: -2.943394660949707
    6. '((' → logprob: -3.068394660949707
    7. ' nm' → logprob: -3.193394660949707
    8. '(n' → logprob: -3.443394660949707
    9. '(dp' → logprob: -4.318394660949707
    10. ' m' → logprob: -4.318394660949707

Token 521: 'm' (ID: 76)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2694050073623657
    2. 'nm' → logprob: -1.2694050073623657
    3. 'm' → logprob: -1.3944050073623657
    4. 'dp' → logprob: -2.894404888153076
    5. 'ni' → logprob: -3.394404888153076
    6. 'i' → logprob: -3.644404888153076
    7. '(x' → logprob: -3.644404888153076
    8. '(m' → logprob: -4.269404888153076
    9. '(i' → logprob: -4.519404888153076
    10. 'not' → logprob: -5.394404888153076

Token 522: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6345084309577942
    2. ' or' → logprob: -0.7595084309577942
    3. '):' → logprob: -7.0095086097717285
    4. ')' → logprob: -7.6345086097717285
    5. '==' → logprob: -8.25950813293457
    6. 'and' → logprob: -9.63450813293457
    7. ':' → logprob: -9.75950813293457
    8. ' and' → logprob: -10.25950813293457
    9. '):
' → logprob: -10.38450813293457
    10. '           ' → logprob: -10.88450813293457

Token 523: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6433020234107971
    2. '(x' → logprob: -0.7683020234107971
    3. '(not' → logprob: -6.018301963806152
    4. '(n' → logprob: -6.643301963806152
    5. 'not' → logprob: -6.643301963806152
    6. '((' → logprob: -6.768301963806152
    7. ' (' → logprob: -6.893301963806152
    8. ' x' → logprob: -6.893301963806152
    9. '(' → logprob: -7.768301963806152
    10. '(y' → logprob: -8.143301963806152

Token 524: ' ==' (ID: 951)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6674996018409729
    2. ' or' → logprob: -0.7924996018409729
    3. 'and' → logprob: -3.917499542236328
    4. '|' → logprob: -4.792499542236328
    5. '&' → logprob: -6.042499542236328
    6. ' and' → logprob: -6.042499542236328
    7. '==' → logprob: -7.167499542236328
    8. ')' → logprob: -8.167499542236328
    9. ' |' → logprob: -9.167499542236328
    10. '0' → logprob: -10.542499542236328

Token 525: ' y' (ID: 342)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18990400433540344
    2. 'y' → logprob: -1.939903974533081
    3. '1' → logprob: -3.564903974533081
    4. ' ' → logprob: -7.81490421295166
    5. ' y' → logprob: -7.93990421295166
    6. '(' → logprob: -9.56490421295166
    7. ''y' → logprob: -10.56490421295166
    8. '
' → logprob: -11.37740421295166
    9. 'x' → logprob: -11.50240421295166
    10. '(y' → logprob: -12.06490421295166

Token 526: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07055683434009552
    2. '):
' → logprob: -2.695556879043579
    3. '               ' → logprob: -8.195556640625
    4. '           ' → logprob: -9.195556640625
    5. '):
' → logprob: -9.445556640625
    6. ')' → logprob: -9.945556640625
    7. ' or' → logprob: -10.570556640625
    8. ':' → logprob: -10.820556640625
    9. ' ):' → logprob: -10.820556640625
    10. '                   ' → logprob: -11.695556640625

Token 527: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05712466686964035
    2. 'continue' → logprob: -2.932124614715576
    3. ' continue' → logprob: -6.557124614715576
    4. '                   ' → logprob: -7.557124614715576
    5. '                       ' → logprob: -9.182125091552734
    6. '           ' → logprob: -9.432125091552734
    7. '   ' → logprob: -10.307125091552734
    8. '                               ' → logprob: -10.432125091552734
    9. '	continue' → logprob: -11.682125091552734
    10. '                           ' → logprob: -11.807125091552734

Token 528: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07911285012960434
    2. 'dp' → logprob: -2.5791127681732178
    3. 'continue' → logprob: -9.079113006591797
    4. ' dp' → logprob: -9.829113006591797
    5. '
' → logprob: -10.829113006591797
    6. '               ' → logprob: -11.329113006591797
    7. '(dp' → logprob: -11.829113006591797
    8. '            
' → logprob: -12.204113006591797
    9. '	dp' → logprob: -12.579113006591797
    10. '       ' → logprob: -13.704113006591797

Token 529: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09013001620769501
    2. 'dp' → logprob: -2.465130090713501
    3. 'for' → logprob: -7.090129852294922
    4. ' dp' → logprob: -8.215129852294922
    5. ' for' → logprob: -10.465129852294922
    6. '               ' → logprob: -10.965129852294922
    7. '	dp' → logprob: -11.590129852294922
    8. 'continue' → logprob: -11.840129852294922
    9. '            
' → logprob: -12.340129852294922
    10. '                   ' → logprob: -12.340129852294922

Token 530: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.014129305258393288
    2. 'for' → logprob: -4.889129161834717
    3. '           ' → logprob: -5.264129161834717
    4. ' dp' → logprob: -6.764129161834717
    5. ' for' → logprob: -9.264129638671875
    6. '               ' → logprob: -10.389129638671875
    7. '                       ' → logprob: -11.639129638671875
    8. '                   ' → logprob: -11.889129638671875
    9. 'if' → logprob: -12.389129638671875
    10. '                           ' → logprob: -12.639129638671875

Token 531: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0015259294304996729
    2. 'd' → logprob: -6.50152587890625
    3. '[' → logprob: -11.00152587890625
    4. '][' → logprob: -12.62652587890625
    5. '(d' → logprob: -14.12652587890625
    6. ' [' → logprob: -14.75152587890625
    7. '```' → logprob: -14.75152587890625
    8. ' d' → logprob: -14.87652587890625
    9. ')d' → logprob: -15.25152587890625
    10. '
' → logprob: -15.37652587890625

Token 532: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006744269747287035
    2. '[' → logprob: -5.631744384765625
    3. '[i' → logprob: -5.881744384765625
    4. '[n' → logprob: -8.881744384765625
    5. ']' → logprob: -9.756744384765625
    6. ' ][' → logprob: -10.131744384765625
    7. '   ' → logprob: -10.881744384765625
    8. '>[' → logprob: -11.381744384765625
    9. '[x' → logprob: -11.506744384765625
    10. '>' → logprob: -11.756744384765625

Token 533: 'ni' (ID: 1906)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08947721123695374
    2. 'ni' → logprob: -2.464477300643921
    3. 'x' → logprob: -7.589477062225342
    4. '   ' → logprob: -11.8394775390625
    5. ' ni' → logprob: -12.5894775390625
    6. ' i' → logprob: -12.8394775390625
    7. 'nm' → logprob: -13.2144775390625
    8. 'nx' → logprob: -13.2144775390625
    9. 'n' → logprob: -13.3394775390625
    10. 'xi' → logprob: -13.4644775390625

Token 534: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01829240471124649
    2. '[j' → logprob: -4.018292427062988
    3. '[' → logprob: -9.393292427062988
    4. ']' → logprob: -10.393292427062988
    5. 'j' → logprob: -11.518292427062988
    6. '[n' → logprob: -12.018292427062988
    7. '[i' → logprob: -12.143292427062988
    8. ' ][' → logprob: -12.393292427062988
    9. '[js' → logprob: -14.518292427062988
    10. '"][' → logprob: -14.893292427062988

Token 535: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -9.729906196298543e-06
    2. ' nj' → logprob: -11.625009536743164
    3. 'n' → logprob: -14.875009536743164
    4. '   ' → logprob: -15.125009536743164
    5. ' ' → logprob: -18.125009536743164
    6. '	n' → logprob: -18.625009536743164
    7. '
' → logprob: -18.625009536743164
    8. '{' → logprob: -18.750009536743164
    9. '[n' → logprob: -18.750009536743164
    10. '(n' → logprob: -19.000009536743164

Token 536: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.007672637701034546
    2. '][' → logprob: -4.8826727867126465
    3. '[' → logprob: -10.257672309875488
    4. '[
' → logprob: -11.882672309875488
    5. '   ' → logprob: -12.507672309875488
    6. '```' → logprob: -12.632672309875488
    7. '
' → logprob: -12.882672309875488
    8. 'nm' → logprob: -13.007672309875488
    9. '}[' → logprob: -13.132672309875488
    10. '[N' → logprob: -13.382672309875488

Token 537: 'nm' (ID: 36370)
  Prédit: 'nm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -5.512236498361744e-07
    2. ' nm' → logprob: -14.625000953674316
    3. '   ' → logprob: -17.375
    4. 'n' → logprob: -17.375
    5. '_nm' → logprob: -18.875
    6. '
' → logprob: -19.375
    7. 'nk' → logprob: -19.5
    8. '           ' → logprob: -19.875
    9. '0' → logprob: -19.875
    10. 'int' → logprob: -20.25

Token 538: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008631822653114796
    2. ']+=' → logprob: -4.758631706237793
    3. ']+' → logprob: -11.633631706237793
    4. ' ]' → logprob: -13.133631706237793
    5. '   ' → logprob: -13.258631706237793
    6. '+]' → logprob: -13.258631706237793
    7. '+=' → logprob: -13.508631706237793
    8. '+' → logprob: -14.133631706237793
    9. '[' → logprob: -15.008631706237793
    10. '```' → logprob: -15.758631706237793

Token 539: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06609712541103363
    2. ']+=' → logprob: -2.9410970211029053
    3. ' +=' → logprob: -5.066097259521484
    4. ']' → logprob: -5.441097259521484
    5. '+' → logprob: -8.066097259521484
    6. '+=(' → logprob: -9.191097259521484
    7. '=' → logprob: -9.566097259521484
    8. '   ' → logprob: -11.691097259521484
    9. '[' → logprob: -11.691097259521484
    10. '>' → logprob: -13.316097259521484

Token 540: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.572941179503687e-05
    2. ' dp' → logprob: -10.000045776367188
    3. '	dp' → logprob: -15.875045776367188
    4. '(dp' → logprob: -16.625045776367188
    5. '   ' → logprob: -17.875045776367188
    6. 'd' → logprob: -18.875045776367188
    7. '.dp' → logprob: -19.000045776367188
    8. ' ' → logprob: -19.125045776367188
    9. '_dp' → logprob: -19.250045776367188
    10. '           ' → logprob: -19.625045776367188

Token 541: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.16023924946784973
    2. 'd' → logprob: -1.9102392196655273
    3. '[
' → logprob: -12.410239219665527
    4. '(d' → logprob: -12.785239219665527
    5. '```' → logprob: -13.160239219665527
    6. '[' → logprob: -13.285239219665527
    7. '	d' → logprob: -13.285239219665527
    8. '   ' → logprob: -13.535239219665527
    9. ' d' → logprob: -13.910239219665527
    10. '\[' → logprob: -16.160240173339844

Token 542: '+' (ID: 10)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0031813981477171183
    2. 'd' → logprob: -5.753181457519531
    3. '   ' → logprob: -13.753181457519531
    4. '(d' → logprob: -14.003181457519531
    5. '+' → logprob: -14.753181457519531
    6. ' d' → logprob: -15.128181457519531
    7. '[' → logprob: -15.128181457519531
    8. '	d' → logprob: -15.253181457519531
    9. '```' → logprob: -15.503181457519531
    10. '{' → logprob: -16.75318145751953

Token 543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.625004768371582
    3. '```' → logprob: -14.125004768371582
    4. '   ' → logprob: -15.250004768371582
    5. '[' → logprob: -15.875004768371582
    6. '][' → logprob: -16.500003814697266
    7. '`' → logprob: -17.500003814697266
    8. '       ' → logprob: -18.250003814697266
    9. '
' → logprob: -18.375003814697266
    10. '１' → logprob: -18.500003814697266

Token 544: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5235421061515808
    2. '[i' → logprob: -0.8985421061515808
    3. '[' → logprob: -8.273542404174805
    4. '   ' → logprob: -9.773542404174805
    5. '[j' → logprob: -10.773542404174805
    6. ']' → logprob: -10.898542404174805
    7. ' ][' → logprob: -11.273542404174805
    8. '```' → logprob: -11.273542404174805
    9. ' [' → logprob: -11.898542404174805
    10. '[m' → logprob: -12.398542404174805

Token 545: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.754368223482743e-05
    2. ' i' → logprob: -9.750067710876465
    3. '   ' → logprob: -12.250067710876465
    4. ' ' → logprob: -12.750067710876465
    5. '	i' → logprob: -14.250067710876465
    6. '    ' → logprob: -15.750067710876465
    7. '  ' → logprob: -15.875067710876465
    8. '0' → logprob: -16.37506675720215
    9. '' → logprob: -16.50006675720215
    10. '     ' → logprob: -16.62506675720215

Token 546: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06070481985807419
    2. '[j' → logprob: -3.1857047080993652
    3. 'j' → logprob: -4.060704708099365
    4. ']' → logprob: -8.435705184936523
    5. ' j' → logprob: -10.060705184936523
    6. ' ][' → logprob: -10.810705184936523
    7. '[' → logprob: -11.560705184936523
    8. ' ' → logprob: -11.810705184936523
    9. ',j' → logprob: -12.185705184936523
    10. '	j' → logprob: -12.810705184936523

Token 547: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0325924449716695e-05
    2. ' j' → logprob: -11.50001049041748
    3. '	j' → logprob: -15.87501049041748
    4. 'jx' → logprob: -17.250009536743164
    5. '   ' → logprob: -17.375009536743164
    6. ' ' → logprob: -17.875009536743164
    7. '  ' → logprob: -18.125009536743164
    8. '[j' → logprob: -18.625009536743164
    9. 'jm' → logprob: -18.875009536743164
    10. '    ' → logprob: -19.250009536743164

Token 548: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16507495939731598
    2. '[m' → logprob: -2.1650750637054443
    3. 'm' → logprob: -3.2900750637054443
    4. 'k' → logprob: -9.540075302124023
    5. '[k' → logprob: -10.415075302124023
    6. '(m' → logprob: -10.665075302124023
    7. ' ][' → logprob: -11.540075302124023
    8. '0' → logprob: -12.040075302124023
    9. '```' → logprob: -12.040075302124023
    10. ']' → logprob: -12.165075302124023

Token 549: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -8.061054359131958e-06
    2. ' m' → logprob: -12.125007629394531
    3. '[m' → logprob: -14.500007629394531
    4. 'k' → logprob: -14.625007629394531
    5. '	m' → logprob: -14.750007629394531
    6. '   ' → logprob: -15.125007629394531
    7. ' ' → logprob: -15.750007629394531
    8. '    ' → logprob: -15.750007629394531
    9. '  ' → logprob: -15.875007629394531
    10. '0' → logprob: -16.12500762939453

Token 550: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7310702204704285
    2. 'x' → logprob: -0.8560702204704285
    3. '][' → logprob: -2.7310702800750732
    4. '[x' → logprob: -3.7310702800750732
    5. '(x' → logprob: -5.856070041656494
    6. '](' → logprob: -7.731070041656494
    7. ' x' → logprob: -7.856070041656494
    8. '[' → logprob: -8.356070518493652
    9. '])' → logprob: -8.981070518493652
    10. ' ]' → logprob: -9.106070518493652

Token 551: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7120242118835449
    2. ']' → logprob: -1.587024211883545
    3. '[' → logprob: -1.712024211883545
    4. '\n' → logprob: -3.587024211883545
    5. '<|end|>' → logprob: -3.587024211883545
    6. '```' → logprob: -4.587024211883545
    7. ' ' → logprob: -5.087024211883545
    8. '   ' → logprob: -5.087024211883545
    9. '           ' → logprob: -5.087024211883545
    10. '       ' → logprob: -5.212024211883545

Token 552: ' print' (ID: 2123)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7421453595161438
    2. ')' → logprob: -0.8671453595161438
    3. '<|end|>' → logprob: -3.117145299911499
    4. '[' → logprob: -3.742145299911499
    5. '   ' → logprob: -3.867145299911499
    6. '```' → logprob: -5.742145538330078
    7. '}' → logprob: -5.867145538330078
    8. '
' → logprob: -6.367145538330078
    9. ' ' → logprob: -6.867145538330078
    10. '#' → logprob: -7.117145538330078

Token 553: '(sum' (ID: 45528)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.16399706900119781
    2. '(sum' → logprob: -1.9139970541000366
    3. '(len' → logprob: -6.413997173309326
    4. 'sum' → logprob: -7.288997173309326
    5. '(' → logprob: -7.413997173309326
    6. '(Mod' → logprob: -7.913997173309326
    7. 'dp' → logprob: -8.163996696472168
    8. '(int' → logprob: -9.413996696472168
    9. '()' → logprob: -9.788996696472168
    10. '(max' → logprob: -11.788996696472168

Token 554: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0008404768304899335
    2. '(' → logprob: -7.750840663909912
    3. '(int' → logprob: -8.375840187072754
    4. '(sum' → logprob: -9.750840187072754
    5. 'dp' → logprob: -9.875840187072754
    6. '(
' → logprob: -10.375840187072754
    7. '([' → logprob: -10.875840187072754
    8. '(map' → logprob: -11.750840187072754
    9. '((' → logprob: -12.000840187072754
    10. '(str' → logprob: -13.625840187072754

Token 555: '[' (ID: 58)
  Prédit: '[D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[D' → logprob: -0.06071974337100983
    2. '[' → logprob: -3.1857197284698486
    3. '[-' → logprob: -4.185719966888428
    4. '[d' → logprob: -6.185719966888428
    5. '[len' → logprob: -8.56071949005127
    6. '(D' → logprob: -9.56071949005127
    7. '[L' → logprob: -11.81071949005127
    8. '(' → logprob: -11.81071949005127
    9. '[
' → logprob: -12.56071949005127
    10. 'D' → logprob: -12.81071949005127

Token 556: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.500004768371582
    3. ' ' → logprob: -13.750004768371582
    4. '
' → logprob: -16.2500057220459
    5. '   ' → logprob: -16.7500057220459
    6. '1' → logprob: -16.7500057220459
    7. '```' → logprob: -16.7500057220459
    8. '０' → logprob: -17.5000057220459
    9. '00' → logprob: -17.7500057220459
    10. '۰' → logprob: -18.1250057220459

Token 557: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.20157159864902496
    2. '[' → logprob: -1.7015715837478638
    3. ')[' → logprob: -10.326571464538574
    4. '[][' → logprob: -10.451571464538574
    5. ']' → logprob: -10.576571464538574
    6. '}[' → logprob: -11.326571464538574
    7. '[i' → logprob: -11.576571464538574
    8. '0' → logprob: -11.951571464538574
    9. '],' → logprob: -12.076571464538574
    10. '```' → logprob: -12.201571464538574

Token 558: 'i' (ID: 72)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005515484604984522
    2. 'i' → logprob: -5.2555155754089355
    3. '[' → logprob: -8.755515098571777
    4. '[i' → logprob: -9.380515098571777
    5. 'k' → logprob: -10.755515098571777
    6. 's' → logprob: -12.130515098571777
    7. 'x' → logprob: -12.880515098571777
    8. 'a' → logprob: -13.380515098571777
    9. '][' → logprob: -13.380515098571777
    10. '1' → logprob: -14.005515098571777

Token 559: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00041005798266269267
    2. '[' → logprob: -8.125410079956055
    3. ']' → logprob: -10.125410079956055
    4. '0' → logprob: -10.375410079956055
    5. 'for' → logprob: -11.375410079956055
    6. '[i' → logprob: -11.625410079956055
    7. '   ' → logprob: -12.500410079956055
    8. ' ][' → logprob: -12.500410079956055
    9. '][-' → logprob: -12.750410079956055
    10. '])' → logprob: -13.125410079956055

Token 560: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.8232690460281447e-05
    2. '0' → logprob: -10.000048637390137
    3. ' j' → logprob: -13.250048637390137
    4. '1' → logprob: -14.000048637390137
    5. '   ' → logprob: -16.50004768371582
    6. '	j' → logprob: -17.62504768371582
    7. '  ' → logprob: -18.00004768371582
    8. '_j' → logprob: -18.12504768371582
    9. ' ' → logprob: -18.50004768371582
    10. '```' → logprob: -19.25004768371582

Token 561: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001343446783721447
    2. '[m' → logprob: -7.126343250274658
    3. 'm' → logprob: -8.001343727111816
    4. '[' → logprob: -9.001343727111816
    5. '[n' → logprob: -11.001343727111816
    6. '[k' → logprob: -11.126343727111816
    7. ']' → logprob: -11.376343727111816
    8. '0' → logprob: -11.626343727111816
    9. '1' → logprob: -11.876343727111816
    10. 'k' → logprob: -12.126343727111816

Token 562: 'm' (ID: 76)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005044196150265634
    2. 'k' → logprob: -7.750504493713379
    3. 'm' → logprob: -9.750504493713379
    4. '0' → logprob: -11.125504493713379
    5. ' ' → logprob: -14.875504493713379
    6. '(' → logprob: -16.000503540039062
    7. '-' → logprob: -17.000503540039062
    8. '```' → logprob: -17.125503540039062
    9. '
' → logprob: -17.250503540039062
    10. '   ' → logprob: -17.313003540039062

Token 563: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10285742580890656
    2. 'for' → logprob: -2.6028573513031006
    3. '])' → logprob: -4.10285758972168
    4. ' for' → logprob: -5.47785758972168
    5. ')' → logprob: -5.85285758972168
    6. ']))' → logprob: -10.47785758972168
    7. 'm' → logprob: -10.85285758972168
    8. '[' → logprob: -11.35285758972168
    9. ' ' → logprob: -11.72785758972168
    10. '	for' → logprob: -11.97785758972168

Token 564: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28150492906570435
    2. ' for' → logprob: -1.4065048694610596
    3. ')' → logprob: -8.28150463104248
    4. '	for' → logprob: -10.78150463104248
    5. '[i' → logprob: -11.03150463104248
    6. '(' → logprob: -11.15650463104248
    7. '   ' → logprob: -11.28150463104248
    8. '(i' → logprob: -11.65650463104248
    9. '()' → logprob: -12.28150463104248
    10. '[' → logprob: -12.28150463104248

Token 565: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033832306507974863
    2. ' i' → logprob: -8.000338554382324
    3. 'range' → logprob: -13.625338554382324
    4. '(i' → logprob: -14.375338554382324
    5. '
' → logprob: -14.875338554382324
    6. '(' → logprob: -15.125338554382324
    7. '0' → logprob: -16.125337600708008
    8. '	i' → logprob: -16.250337600708008
    9. '   ' → logprob: -16.375337600708008
    10. ' ' → logprob: -16.625337600708008

Token 566: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4741329550743103
    2. ' in' → logprob: -0.9741329550743103
    3. ',' → logprob: -9.849132537841797
    4. '0' → logprob: -14.099132537841797
    5. ',j' → logprob: -14.099132537841797
    6. 'range' → logprob: -14.974132537841797
    7. '
' → logprob: -15.099132537841797
    8. ' ' → logprob: -15.599132537841797
    9. ',n' → logprob: -15.974132537841797
    10. ' ,' → logprob: -16.099132537841797

Token 567: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007233066484332085
    2. 'm' → logprob: -5.632233142852783
    3. ' j' → logprob: -5.632233142852783
    4. '   ' → logprob: -11.132232666015625
    5. ' m' → logprob: -11.132232666015625
    6. '	j' → logprob: -11.507232666015625
    7. '    ' → logprob: -12.882232666015625
    8. '  ' → logprob: -14.132232666015625
    9. ' ' → logprob: -14.257232666015625
    10. '	m' → logprob: -14.632232666015625

Token 568: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.146655559539795
    2. ' in' → logprob: -1.146655559539795
    3. ',' → logprob: -1.396655559539795
    4. ',m' → logprob: -2.146655559539795
    5. 'm' → logprob: -8.771656036376953
    6. ',k' → logprob: -9.771656036376953
    7. ' ,' → logprob: -10.021656036376953
    8. ',n' → logprob: -10.271656036376953
    9. ',in' → logprob: -12.021656036376953
    10. '
' → logprob: -12.771656036376953

Token 569: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.127543106675148
    2. 'product' → logprob: -2.2525432109832764
    3. 'range' → logprob: -4.377542972564697
    4. ' product' → logprob: -6.877542972564697
    5. '(' → logprob: -7.752542972564697
    6. ' m' → logprob: -8.627543449401855
    7. 'rng' → logprob: -9.127543449401855
    8. 'nm' → logprob: -9.502543449401855
    9. ' in' → logprob: -10.127543449401855
    10. ' range' → logprob: -10.127543449401855

Token 570: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931948065757751
    2. ' in' → logprob: -0.6931948065757751
    3. ')' → logprob: -10.693194389343262
    4. ',' → logprob: -11.568194389343262
    5. '   ' → logprob: -11.818194389343262
    6. 'range' → logprob: -12.818194389343262
    7. ' ' → logprob: -13.443194389343262
    8. '(' → logprob: -13.568194389343262
    9. '
' → logprob: -14.193194389343262
    10. '```' → logprob: -14.443194389343262

Token 571: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.009484412148594856
    2. '(' → logprob: -4.88448429107666
    3. 'range' → logprob: -6.50948429107666
    4. ' product' → logprob: -7.88448429107666
    5. ' (' → logprob: -12.88448429107666
    6. '(product' → logprob: -13.00948429107666
    7. 'rng' → logprob: -13.00948429107666
    8. '((' → logprob: -13.25948429107666
    9. '(range' → logprob: -14.63448429107666
    10. 'prod' → logprob: -15.00948429107666

Token 572: '(r' (ID: 4729)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.7317512035369873
    2. 'range' → logprob: -1.1067512035369873
    3. '(' → logprob: -1.7317512035369873
    4. '((' → logprob: -4.606751441955566
    5. '[' → logprob: -7.606751441955566
    6. '([' → logprob: -7.856751441955566
    7. ' (' → logprob: -8.856751441955566
    8. '(r' → logprob: -9.106751441955566
    9. '[(' → logprob: -9.731751441955566
    10. ' range' → logprob: -9.856751441955566

Token 573: 'ng' (ID: 892)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.02282329834997654
    2. 'ng' → logprob: -4.772823333740234
    3. '(' → logprob: -5.272823333740234
    4. 'nge' → logprob: -5.272823333740234
    5. 'range' → logprob: -6.022823333740234
    6. '[' → logprob: -7.272823333740234
    7. '(range' → logprob: -7.522823333740234
    8. 'ang' → logprob: -10.022823333740234
    9. 'ge' → logprob: -10.022823333740234
    10. 'n' → logprob: -10.397823333740234

Token 574: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020674312487244606
    2. '))' → logprob: -4.770674228668213
    3. ')))' → logprob: -5.520674228668213
    4. ')' → logprob: -6.145674228668213
    5. '(' → logprob: -6.145674228668213
    6. ' ,' → logprob: -7.520674228668213
    7. ',r' → logprob: -7.520674228668213
    8. '(range' → logprob: -7.520674228668213
    9. '(),' → logprob: -7.770674228668213
    10. 'range' → logprob: -7.895674228668213

Token 575: ' repeat' (ID: 22962)
  Prédit: 'rng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rng' → logprob: -0.3896400034427643
    2. 'range' → logprob: -1.139639973640442
    3. 'repeat' → logprob: -6.014639854431152
    4. ' rng' → logprob: -8.139639854431152
    5. ' range' → logprob: -10.889639854431152
    6. '(range' → logprob: -12.514639854431152
    7. '[' → logprob: -13.514639854431152
    8. '_rng' → logprob: -13.639639854431152
    9. 'rg' → logprob: -13.764639854431152
    10. '   ' → logprob: -14.264639854431152

Token 576: '=' (ID: 28)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001589250285178423
    2. '3' → logprob: -6.626589298248291
    3. '4' → logprob: -8.876588821411133
    4. '=' → logprob: -9.001588821411133
    5. '```' → logprob: -15.376588821411133
    6. '=(' → logprob: -15.626588821411133
    7. '   ' → logprob: -16.751588821411133
    8. ' (' → logprob: -16.876588821411133
    9. '{' → logprob: -17.001588821411133
    10. '
' → logprob: -17.501588821411133

Token 577: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00033546582562848926
    2. '4' → logprob: -8.000335693359375
    3. ' ' → logprob: -18.000335693359375
    4. '   ' → logprob: -21.125335693359375
    5. '```' → logprob: -21.625335693359375
    6. '(' → logprob: -23.000335693359375
    7. '۳' → logprob: -23.375335693359375
    8. '﻿' → logprob: -23.375335693359375
    9. '' → logprob: -23.875335693359375
    10. '３' → logprob: -24.375335693359375

Token 578: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16046905517578125
    2. ')))' → logprob: -1.9104690551757812
    3. ')' → logprob: -8.785469055175781
    4. ']))' → logprob: -10.035469055175781
    5. '))
' → logprob: -11.410469055175781
    6. ')))
' → logprob: -11.660469055175781
    7. '))))' → logprob: -11.660469055175781
    8. '}))' → logprob: -12.410469055175781
    9. '),' → logprob: -12.910469055175781
    10. '   ' → logprob: -12.910469055175781

Token 579: 'resolve' (ID: 31567)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0531855933368206
    2. '<|end|>' → logprob: -3.4281857013702393
    3. '[' → logprob: -4.67818546295166
    4. ']' → logprob: -5.92818546295166
    5. '
' → logprob: -6.05318546295166
    6. '(' → logprob: -6.30318546295166
    7. ' ' → logprob: -7.42818546295166
    8. ':' → logprob: -7.55318546295166
    9. '```' → logprob: -7.92818546295166
    10. '[:]' → logprob: -8.42818546295166

Token 580: '()' (ID: 416)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2092311978340149
    2. ')' → logprob: -1.8342311382293701
    3. '<|end|>' → logprob: -4.709231376647949
    4. ']' → logprob: -4.834231376647949
    5. '```' → logprob: -5.209231376647949
    6. '[]' → logprob: -6.334231376647949
    7. ' ' → logprob: -6.709231376647949
    8. '[
' → logprob: -7.334231376647949
    9. '#' → logprob: -7.459231376647949
    10. '+' → logprob: -8.08423137664795


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 578
Tokens correctement prédits (1ère position, stricte): 255
Tokens correctement prédits (1ère position, avec adaptation): 270
Tokens correctement prédits (top 10): 516
Précision stricte (1ère position): 44.12%
Précision adaptée (1ère position): 46.71%
Précision (top 10): 89.27%
================================================================================
