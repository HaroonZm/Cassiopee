================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import bisect
from fractions import gcd
from itertools import count, permutations
from functools import lru_cache
from collections import deque, defaultdict
from pprint import pprint

INF = float('inf')

def set_recursion_limit():
    sys.setrecursionlimit(1000000000)

def read_int():
    return int(input())

def read_ints():
    return map(int, input().split())

def read_list_of_ints():
    return list(read_ints())

def read_matrix(h):
    return [list(map(int, read_list_of_ints())) for _ in range(h)]

def compute_gcd(a, b):
    return gcd(a, b)

def compute_lcm(a, b):
    return (a * b) // compute_gcd(a, b)

def read_main_input():
    return list(read_ints())

def initialize_ans(n):
    return [0] * n

def compute_min_distance(i, j, x, y):
    d1 = abs(j - i)
    d2 = abs(x - i) + 1 + abs(j - y)
    d3 = abs(y - i) + 1 + abs(j - x)
    return min(d1, d2, d3)

def increment_ans(ans, dist):
    ans[dist] += 1

def process_pairs(n, x, y, ans):
    def loop_i(i):
        def loop_j(j):
            dist = compute_min_distance(i, j, x, y)
            increment_ans(ans, dist)
        for j in range(i+1, n+1):
            loop_j(j)
    for i in range(1, n):
        loop_i(i)

def print_ans(ans):
    def print_entry(i, a):
        if i == 0:
            return
        print(a)
    for i, a in zip(range(len(ans)), ans):
        print_entry(i, a)

def main():
    set_recursion_limit()
    n, x, y = read_main_input()
    ans = initialize_ans(n)
    process_pairs(n, x, y, ans)
    print_ans(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4338620901107788
    2. '.' → logprob: -1.1838620901107788
    3. 'import' → logprob: -4.183862209320068
    4. '\' → logprob: -4.433862209320068
    5. 'newline' → logprob: -5.183862209320068
    6. '<|end|>' → logprob: -5.558862209320068
    7. '
' → logprob: -5.933862209320068
    8. '```' → logprob: -6.558862209320068
    9. '' → logprob: -7.058862209320068
    10. '<|end|>' → logprob: -7.183862209320068

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0004311460361350328
    2. 'os' → logprob: -7.750431060791016
    3. ' re' → logprob: -15.875431060791016
    4. '"os' → logprob: -16.250431060791016
    5. '_os' → logprob: -16.250431060791016
    6. ' math' → logprob: -16.500431060791016
    7. ' json' → logprob: -17.000431060791016
    8. '	os' → logprob: -17.625431060791016
    9. ' argparse' → logprob: -18.750431060791016
    10. ' o' → logprob: -19.000431060791016

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1594075709581375
    2. '\n' → logprob: -3.159407615661621
    3. '<|end|>' → logprob: -3.659407615661621
    4. 'import' → logprob: -4.034407615661621
    5. '
' → logprob: -4.034407615661621
    6. '\' → logprob: -4.284407615661621
    7. '```' → logprob: -4.784407615661621
    8. '

' → logprob: -5.034407615661621
    9. '<|end|>' → logprob: -5.034407615661621
    10. ',' → logprob: -5.784407615661621

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0056157112121582
    2. 'import' → logprob: -1.6306157112121582
    3. '\n' → logprob: -1.8806157112121582
    4. '
' → logprob: -2.130615711212158
    5. '```' → logprob: -2.755615711212158
    6. '

' → logprob: -3.380615711212158
    7. '\' → logprob: -3.505615711212158
    8. ',' → logprob: -4.255615711212158
    9. '<|end|>' → logprob: -4.255615711212158
    10. '<|end|>' → logprob: -6.380615711212158

Token 7: ' bis' (ID: 7204)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.22228945791721344
    2. ' os' → logprob: -1.7222894430160522
    3. 'random' → logprob: -4.222289562225342
    4. ' random' → logprob: -5.597289562225342
    5. 're' → logprob: -7.472289562225342
    6. ' re' → logprob: -7.847289562225342
    7. 'numpy' → logprob: -8.472289085388184
    8. ' numpy' → logprob: -8.597289085388184
    9. 'time' → logprob: -8.722289085388184
    10. 'collections' → logprob: -8.722289085388184

Token 8: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.7252845029579476e-05
    2. 't' → logprob: -10.625027656555176
    3. 'ected' → logprob: -13.375027656555176
    4. 'ec' → logprob: -14.875027656555176
    5. 'ector' → logprob: -15.375027656555176
    6. 'e' → logprob: -15.500027656555176
    7. 'ectl' → logprob: -16.00002670288086
    8. 'ection' → logprob: -16.00002670288086
    9. '```' → logprob: -16.12502670288086
    10. 'truct' → logprob: -17.00002670288086

Token 9: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 10: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1758867502212524
    2. 'import' → logprob: -1.1758867502212524
    3. '

' → logprob: -1.9258867502212524
    4. '<|end|>' → logprob: -2.425886631011963
    5. '```' → logprob: -2.800886631011963
    6. '\n' → logprob: -3.550886631011963
    7. '.' → logprob: -4.425886631011963
    8. '' → logprob: -4.550886631011963
    9. '\' → logprob: -4.925886631011963
    10. '
' → logprob: -4.925886631011963

Token 11: ' fractions' (ID: 110523)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.2704072594642639
    2. 'collections' → logprob: -1.5204071998596191
    3. ' itertools' → logprob: -4.520407199859619
    4. ' heap' → logprob: -5.395407199859619
    5. 'heap' → logprob: -6.645407199859619
    6. ' typing' → logprob: -6.770407199859619
    7. '_' → logprob: -9.145407676696777
    8. 'typing' → logprob: -9.645407676696777
    9. ' math' → logprob: -9.770407676696777
    10. ' ' → logprob: -10.145407676696777

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.020639874041080475
    2. 'import' → logprob: -3.8956398963928223
    3. '.' → logprob: -10.020639419555664
    4. '	import' → logprob: -10.520639419555664
    5. '_import' → logprob: -11.770639419555664
    6. '.import' → logprob: -11.895639419555664
    7. ' ' → logprob: -12.395639419555664
    8. '-import' → logprob: -13.395639419555664
    9. '<|end|>' → logprob: -13.770639419555664
    10. ' importar' → logprob: -14.145639419555664

Token 13: ' gcd' (ID: 106918)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.6931615471839905
    2. ' Fraction' → logprob: -0.6931615471839905
    3. 'Fra' → logprob: -11.818161964416504
    4. ' gcd' → logprob: -12.693161964416504
    5. ' fractions' → logprob: -13.193161964416504
    6. '_fraction' → logprob: -14.443161964416504
    7. ' Fra' → logprob: -15.568161964416504
    8. 'F' → logprob: -15.693161964416504
    9. '```' → logprob: -15.693161964416504
    10. '	F' → logprob: -15.943161964416504

Token 14: '
' (ID: 198)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -1.0149707794189453
    2. '#' → logprob: -1.2649707794189453
    3. 'as' → logprob: -1.5149707794189453
    4. '<|end|>' → logprob: -3.3899707794189453
    5. ' ' → logprob: -3.5149707794189453
    6. 'Deprecated' → logprob: -4.639970779418945
    7. 'deprecated' → logprob: -4.889970779418945
    8. ',' → logprob: -5.139970779418945
    9. ' #' → logprob: -5.139970779418945
    10. ')' → logprob: -5.264970779418945

Token 15: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: ' itertools' (ID: 103178)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.12772095203399658
    2. ' math' → logprob: -2.127720832824707
    3. ' functools' → logprob: -8.252720832824707
    4. 'fra' → logprob: -8.627720832824707
    5. ' itertools' → logprob: -8.752720832824707
    6. 'decimal' → logprob: -9.752720832824707
    7. 'cmath' → logprob: -10.502720832824707
    8. 'collections' → logprob: -10.877720832824707
    9. 'fun' → logprob: -11.002720832824707
    10. ' ' → logprob: -11.252720832824707

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.055621594190597534
    2. 'import' → logprob: -2.93062162399292
    3. '.' → logprob: -7.55562162399292
    4. ' ' → logprob: -9.180621147155762
    5. ' .' → logprob: -10.180621147155762
    6. '.import' → logprob: -10.430621147155762
    7. '	import' → logprob: -10.430621147155762
    8. '_import' → logprob: -12.555621147155762
    9. ' itertools' → logprob: -12.680621147155762
    10. '.im' → logprob: -12.930621147155762

Token 18: ' count' (ID: 3605)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.9710290431976318
    2. 'com' → logprob: -1.3460290431976318
    3. 'count' → logprob: -2.096029043197632
    4. ' accumulate' → logprob: -2.721029043197632
    5. 'per' → logprob: -3.221029043197632
    6. ' permutations' → logprob: -3.596029043197632
    7. 'group' → logprob: -3.721029043197632
    8. 'chain' → logprob: -3.721029043197632
    9. 'product' → logprob: -4.096029281616211
    10. 'cycle' → logprob: -4.221029281616211

Token 19: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: ' permutations' (ID: 174595)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.3023707866668701
    2. ' cycle' → logprob: -2.80237078666687
    3. 'acc' → logprob: -2.92737078666687
    4. 'chain' → logprob: -2.92737078666687
    5. 'take' → logprob: -3.05237078666687
    6. 'is' → logprob: -4.802371025085449
    7. ' accumulate' → logprob: -5.052371025085449
    8. 'filter' → logprob: -5.177371025085449
    9. 'group' → logprob: -5.177371025085449
    10. 'drop' → logprob: -5.677371025085449

Token 21: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3221912682056427
    2. '#' → logprob: -2.6971912384033203
    3. '
' → logprob: -3.1971912384033203
    4. 'import' → logprob: -3.1971912384033203
    5. '.' → logprob: -3.5721912384033203
    6. ',
' → logprob: -3.9471912384033203
    7. 'def' → logprob: -4.32219123840332
    8. 'from' → logprob: -4.82219123840332
    9. '<|end|>' → logprob: -4.94719123840332
    10. '

' → logprob: -4.94719123840332

Token 22: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24001379311084747
    2. '<|end|>' → logprob: -2.740013837814331
    3. 'import' → logprob: -3.240013837814331
    4. '
' → logprob: -3.615013837814331
    5. '#' → logprob: -4.115013599395752
    6. ',
' → logprob: -4.365013599395752
    7. '.' → logprob: -4.740013599395752
    8. 'from' → logprob: -5.115013599395752
    9. 'def' → logprob: -5.115013599395752
    10. '

' → logprob: -5.365013599395752

Token 23: ' functools' (ID: 142636)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -1.0126079320907593
    2. 'operator' → logprob: -1.2626079320907593
    3. 'heap' → logprob: -2.137608051300049
    4. ' operator' → logprob: -2.387608051300049
    5. 'math' → logprob: -3.137608051300049
    6. ' functools' → logprob: -3.262608051300049
    7. ' collections' → logprob: -3.637608051300049
    8. 'fun' → logprob: -4.262608051300049
    9. ' heap' → logprob: -4.637608051300049
    10. ' math' → logprob: -5.262608051300049

Token 24: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.015472402796149254
    2. 'import' → logprob: -4.265472412109375
    3. ' ' → logprob: -7.265472412109375
    4. '.' → logprob: -7.640472412109375
    5. ' .' → logprob: -9.390472412109375
    6. '_import' → logprob: -10.890472412109375
    7. '<|end|>' → logprob: -12.265472412109375
    8. '.import' → logprob: -12.515472412109375
    9. '	import' → logprob: -12.515472412109375
    10. '_' → logprob: -12.640472412109375

Token 25: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7255714535713196
    2. 'l' → logprob: -1.7255713939666748
    3. ' reduce' → logprob: -1.7255713939666748
    4. 'reduce' → logprob: -1.8505713939666748
    5. ' wraps' → logprob: -6.725571632385254
    6. ' partial' → logprob: -7.600571632385254
    7. 'wrap' → logprob: -7.850571632385254
    8. 'partial' → logprob: -8.100571632385254
    9. ' cmp' → logprob: -9.350571632385254
    10. 'cmp' → logprob: -9.725571632385254

Token 26: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -1.9027791495318525e-05
    2. 'r' → logprob: -12.125019073486328
    3. 'ruz' → logprob: -12.250019073486328
    4. 'ambda' → logprob: -13.750019073486328
    5. '_ru' → logprob: -13.750019073486328
    6. 'ruh' → logprob: -13.875019073486328
    7. 'reduce' → logprob: -14.375019073486328
    8. 'a' → logprob: -14.500019073486328
    9. 'azy' → logprob: -14.750019073486328
    10. 'u' → logprob: -14.750019073486328

Token 27: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.31346839666366577
    2. 'cache' → logprob: -1.3134684562683105
    3. 't' → logprob: -9.688467979431152
    4. 'c' → logprob: -9.813467979431152
    5. '_c' → logprob: -11.313467979431152
    6. 'cached' → logprob: -11.563467979431152
    7. 'cut' → logprob: -11.813467979431152
    8. '_cached' → logprob: -11.813467979431152
    9. '-cache' → logprob: -11.813467979431152
    10. 'est' → logprob: -11.938467979431152

Token 28: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1453100442886353
    2. ',' → logprob: -1.7703100442886353
    3. '
' → logprob: -1.7703100442886353
    4. '<|end|>' → logprob: -2.2703099250793457
    5. ')' → logprob: -3.1453099250793457
    6. 'def' → logprob: -3.2703099250793457
    7. 'import' → logprob: -3.5203099250793457
    8. '\n' → logprob: -3.5203099250793457
    9. '

' → logprob: -4.020309925079346
    10. '' → logprob: -4.520309925079346

Token 29: 'from' (ID: 2845)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8848835825920105
    2. '
' → logprob: -1.7598836421966553
    3. '<|end|>' → logprob: -2.1348836421966553
    4. '\n' → logprob: -2.6348836421966553
    5. 'def' → logprob: -3.0098836421966553
    6. 'import' → logprob: -3.1348836421966553
    7. ',' → logprob: -3.5098836421966553
    8. '

' → logprob: -4.384883403778076
    9. '\' → logprob: -4.384883403778076
    10. '.' → logprob: -4.884883403778076

Token 30: ' collections' (ID: 22690)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.9542936086654663
    2. ' collections' → logprob: -1.5792936086654663
    3. 'collections' → logprob: -1.9542936086654663
    4. 'operator' → logprob: -2.079293727874756
    5. ' math' → logprob: -2.829293727874756
    6. ' typing' → logprob: -3.579293727874756
    7. 'math' → logprob: -3.704293727874756
    8. ' ' → logprob: -4.079293727874756
    9. ' heap' → logprob: -5.829293727874756
    10. 'heap' → logprob: -5.954293727874756

Token 31: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6199307441711426
    2. ' import' → logprob: -0.9949307441711426
    3. 'abc' → logprob: -2.6199307441711426
    4. '.' → logprob: -4.494930744171143
    5. '<|end|>' → logprob: -5.744930744171143
    6. '```' → logprob: -6.744930744171143
    7. ' abc' → logprob: -6.869930744171143
    8. '.Counter' → logprob: -7.869930744171143
    9. 's' → logprob: -8.119930267333984
    10. '	import' → logprob: -8.119930267333984

Token 32: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.25294026732444763
    2. ' deque' → logprob: -1.50294029712677
    3. ' abc' → logprob: -7.3779401779174805
    4. 'deque' → logprob: -8.37794017791748
    5. ' Counter' → logprob: -9.50294017791748
    6. ' named' → logprob: -9.62794017791748
    7. ' Ordered' → logprob: -12.12794017791748
    8. ' de' → logprob: -12.37794017791748
    9. ' default' → logprob: -13.25294017791748
    10. 'default' → logprob: -13.37794017791748

Token 33: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6789024472236633
    2. '<|end|>' → logprob: -1.4289023876190186
    3. '

' → logprob: -2.3039023876190186
    4. 'import' → logprob: -2.8039023876190186
    5. ',' → logprob: -3.1789023876190186
    6. '#' → logprob: -4.178902626037598
    7. '\n' → logprob: -4.428902626037598
    8. '' → logprob: -5.553902626037598
    9. 'n' → logprob: -5.678902626037598
    10. '```' → logprob: -6.178902626037598

Token 34: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.4910411834716797
    2. 'default' → logprob: -0.9910411834716797
    3. 'named' → logprob: -4.86604118347168
    4. 'Counter' → logprob: -4.99104118347168
    5. ' named' → logprob: -6.99104118347168
    6. 'Ordered' → logprob: -7.24104118347168
    7. ' Counter' → logprob: -7.36604118347168
    8. ' Ordered' → logprob: -10.86604118347168
    9. ' default' → logprob: -11.99104118347168
    10. 'Chain' → logprob: -12.11604118347168

Token 35: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30289459228515625
    2. '
' → logprob: -2.0528945922851562
    3. '<|end|>' → logprob: -3.1778945922851562
    4. ',
' → logprob: -3.4278945922851562
    5. 'import' → logprob: -3.9278945922851562
    6. '

' → logprob: -4.052894592285156
    7. '\n' → logprob: -5.052894592285156
    8. ',

' → logprob: -5.927894592285156
    9. '' → logprob: -6.177894592285156
    10. '#' → logprob: -6.552894592285156

Token 36: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.080295443534851
    2. ',' → logprob: -1.205295443534851
    3. '
' → logprob: -1.830295443534851
    4. '

' → logprob: -2.8302955627441406
    5. '<|end|>' → logprob: -3.4552955627441406
    6. '#' → logprob: -3.7052955627441406
    7. 'from' → logprob: -4.330295562744141
    8. '```' → logprob: -4.580295562744141
    9. '\n' → logprob: -4.705295562744141
    10. ',
' → logprob: -4.705295562744141

Token 37: ' pprint' (ID: 123034)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.23674984276294708
    2. 'heap' → logprob: -1.7367498874664307
    3. ' operator' → logprob: -3.9867498874664307
    4. ' queue' → logprob: -5.486749649047852
    5. 'operator' → logprob: -5.486749649047852
    6. ' typing' → logprob: -5.486749649047852
    7. ' itertools' → logprob: -6.861749649047852
    8. 'queue' → logprob: -7.236749649047852
    9. ' threading' → logprob: -8.486749649047852
    10. ' math' → logprob: -8.486749649047852

Token 38: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10101418197154999
    2. 'import' → logprob: -2.3510141372680664
    3. '<|end|>' → logprob: -7.851014137268066
    4. '.' → logprob: -8.851014137268066
    5. ' ' → logprob: -8.976014137268066
    6. '	import' → logprob: -9.226014137268066
    7. '_import' → logprob: -11.601014137268066
    8. '<|end|>' → logprob: -11.976014137268066
    9. ' Import' → logprob: -12.351014137268066
    10. '.import' → logprob: -12.351014137268066

Token 39: ' pprint' (ID: 123034)
  Prédit: ' pprint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pprint' → logprob: -0.000983508420176804
    2. 'p' → logprob: -7.000983715057373
    3. 'pp' → logprob: -9.750983238220215
    4. ' pp' → logprob: -11.500983238220215
    5. ' Pretty' → logprob: -13.250983238220215
    6. ' p' → logprob: -13.875983238220215
    7. 'Pretty' → logprob: -14.375983238220215
    8. '.p' → logprob: -15.500983238220215
    9. '	p' → logprob: -17.12598419189453
    10. ' pretty' → logprob: -17.12598419189453

Token 40: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8730080723762512
    2. '
' → logprob: -1.6230080127716064
    3. '#' → logprob: -2.1230080127716064
    4. '<|end|>' → logprob: -2.8730080127716064
    5. '\n' → logprob: -3.1230080127716064
    6. ',' → logprob: -3.1230080127716064
    7. '

' → logprob: -3.4980080127716064
    8. 'def' → logprob: -3.8730080127716064
    9. 'from' → logprob: -3.9980080127716064
    10. '' → logprob: -4.6230082511901855

Token 41: 'INF' (ID: 64358)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6797391772270203
    2. '#' → logprob: -1.929739236831665
    3. 'import' → logprob: -2.429739236831665
    4. 'd' → logprob: -2.429739236831665
    5. 'class' → logprob: -2.679739236831665
    6. '@' → logprob: -2.929739236831665
    7. 'from' → logprob: -4.304738998413086
    8. 'n' → logprob: -4.429738998413086
    9. 'a' → logprob: -4.554738998413086
    10. '\' → logprob: -6.554738998413086

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3164995312690735
    2. '=' → logprob: -1.3164994716644287
    3. ' ' → logprob: -6.191499710083008
    4. '<|end|>' → logprob: -6.941499710083008
    5. ',' → logprob: -9.941499710083008
    6. '_' → logprob: -10.066499710083008
    7. ')' → logprob: -10.191499710083008
    8. ' =)' → logprob: -10.316499710083008
    9. '.' → logprob: -11.441499710083008
    10. '  ' → logprob: -11.941499710083008

Token 43: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.15825071930885315
    2. ' ' → logprob: -2.1582508087158203
    3. 'float' → logprob: -3.7832508087158203
    4. '10' → logprob: -4.90825080871582
    5. ' math' → logprob: -7.40825080871582
    6. '1' → logprob: -10.65825080871582
    7. ' int' → logprob: -10.65825080871582
    8. ' ' → logprob: -11.28325080871582
    9. 'math' → logprob: -11.40825080871582
    10. '	float' → logprob: -11.40825080871582

Token 44: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0010373335098847747
    2. '(' → logprob: -7.126037120819092
    3. '('.')' → logprob: -8.87603759765625
    4. '("' → logprob: -9.87603759765625
    5. '('.' → logprob: -10.62603759765625
    6. ''' → logprob: -12.37603759765625
    7. '('+' → logprob: -13.25103759765625
    8. '('-' → logprob: -13.50103759765625
    9. '('_' → logprob: -13.62603759765625
    10. '('/')' → logprob: -13.75103759765625

Token 45: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.16751626133918762
    2. ''in' → logprob: -1.9175162315368652
    3. ''' → logprob: -5.167516231536865
    4. ''i' → logprob: -7.417516231536865
    5. 'info' → logprob: -8.042516708374023
    6. 'in' → logprob: -8.542516708374023
    7. '"' → logprob: -9.042516708374023
    8. ''ins' → logprob: -9.292516708374023
    9. 'i' → logprob: -9.667516708374023
    10. '-inf' → logprob: -11.042516708374023

Token 46: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.566264295950532e-05
    2. '')' → logprob: -9.375085830688477
    3. ' )' → logprob: -14.750085830688477
    4. '))' → logprob: -15.750085830688477
    5. '")' → logprob: -16.750085830688477
    6. '()' → logprob: -16.875085830688477
    7. '`)' → logprob: -17.625085830688477
    8. '),' → logprob: -18.250085830688477
    9. '}' → logprob: -18.750085830688477
    10. ')
' → logprob: -19.000085830688477

Token 47: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03222832828760147
    2. 'class' → logprob: -4.032228469848633
    3. 'd' → logprob: -4.782228469848633
    4. 'de' → logprob: -5.532228469848633
    5. 'n' → logprob: -6.907228469848633
    6. '#' → logprob: -8.032228469848633
    7. '@' → logprob: -9.532228469848633
    8. ')' → logprob: -9.907228469848633
    9. 'N' → logprob: -10.282228469848633
    10. 'D' → logprob: -10.657228469848633

Token 48: ' set' (ID: 920)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20473279058933258
    2. ' main' → logprob: -2.079732894897461
    3. ' solve' → logprob: -3.954732894897461
    4. ' space' → logprob: -4.454732894897461
    5. ' max' → logprob: -5.329732894897461
    6. ' gcd' → logprob: -5.704732894897461
    7. ' factor' → logprob: -5.954732894897461
    8. ' a' → logprob: -6.204732894897461
    9. ' factorial' → logprob: -6.329732894897461
    10. ' s' → logprob: -6.579732894897461

Token 49: '_rec' (ID: 35314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.027514362707734108
    2. '_up' → logprob: -4.402514457702637
    3. 'up' → logprob: -5.277514457702637
    4. '_default' → logprob: -6.152514457702637
    5. 'uptools' → logprob: -6.402514457702637
    6. 'attr' → logprob: -7.402514457702637
    7. '_attr' → logprob: -7.527514457702637
    8. '_target' → logprob: -7.527514457702637
    9. '_param' → logprob: -8.277514457702637
    10. '_input' → logprob: -8.402514457702637

Token 50: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0022379241418093443
    2. 'ursive' → logprob: -6.627237796783447
    3. '_' → logprob: -7.502237796783447
    4. '(' → logprob: -8.377238273620605
    5. 'ursor' → logprob: -10.002238273620605
    6. '```' → logprob: -10.877238273620605
    7. 'urrent' → logprob: -11.752238273620605
    8. 't' → logprob: -12.127238273620605
    9. 'ur' → logprob: -12.252238273620605
    10. 'u' → logprob: -12.627238273620605

Token 51: '_limit' (ID: 34361)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.6220114827156067
    2. 'limit' → logprob: -1.247011423110962
    3. '_limit' → logprob: -2.247011423110962
    4. 'e' → logprob: -2.872011423110962
    5. 'el' → logprob: -5.872011661529541
    6. 't' → logprob: -5.997011661529541
    7. '_' → logprob: -6.497011661529541
    8. 'tion' → logprob: -6.747011661529541
    9. 'ursive' → logprob: -6.747011661529541
    10. 'ursor' → logprob: -6.997011661529541

Token 52: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -9.05499910004437e-05
    2. ' (' → logprob: -10.625090599060059
    3. '((' → logprob: -10.625090599060059
    4. '(int' → logprob: -11.750090599060059
    5. '()' → logprob: -12.125090599060059
    6. '(()' → logprob: -12.500090599060059
    7. '("("' → logprob: -12.500090599060059
    8. '(max' → logprob: -12.625090599060059
    9. '(n' → logprob: -12.625090599060059
    10. '(None' → logprob: -13.250090599060059

Token 53: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05238497257232666
    2. '():' → logprob: -3.302384853363037
    3. ':' → logprob: -4.552384853363037
    4. '   ' → logprob: -6.052384853363037
    5. '(n' → logprob: -8.552385330200195
    6. '(
' → logprob: -9.177385330200195
    7. '()' → logprob: -9.302385330200195
    8. ' :' → logprob: -9.302385330200195
    9. ' (' → logprob: -9.302385330200195
    10. '(depth' → logprob: -9.302385330200195

Token 54: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7649866938591003
    2. ' import' → logprob: -1.3899867534637451
    3. 'import' → logprob: -1.6399867534637451
    4. ' sys' → logprob: -2.514986753463745
    5. '    ' → logprob: -5.264986515045166
    6. ' ' → logprob: -5.889986515045166
    7. 'sys' (adapté à ' sys') → logprob: -6.389986515045166
    8. '  ' → logprob: -7.889986515045166
    9. ' pass' → logprob: -8.139986991882324
    10. ' max' → logprob: -9.264986991882324

Token 55: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.19031524658203125
    2. '.' → logprob: -1.9403152465820312
    3. '.setdefault' → logprob: -3.5653152465820312
    4. ' .' → logprob: -6.815315246582031
    5. '.exit' → logprob: -9.565315246582031
    6. '.stdout' → logprob: -9.690315246582031
    7. '.stdin' → logprob: -10.190315246582031
    8. '.argv' → logprob: -10.190315246582031
    9. '.stderr' → logprob: -10.565315246582031
    10. '.get' → logprob: -12.565315246582031

Token 56: 'rec' (ID: 9285)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.22648240625858307
    2. 'rec' → logprob: -1.6014823913574219
    3. '_' → logprob: -8.101482391357422
    4. '_rec' → logprob: -8.726482391357422
    5. ' recursion' → logprob: -8.726482391357422
    6. 't' → logprob: -9.101482391357422
    7. 'ecution' → logprob: -9.601482391357422
    8. 'c' → logprob: -10.226482391357422
    9. 'ection' → logprob: -10.476482391357422
    10. 'cision' → logprob: -10.601482391357422

Token 57: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -4.5014188799541444e-05
    2. '_limit' → logprob: -10.500044822692871
    3. 'urs' → logprob: -11.625044822692871
    4. '_' → logprob: -12.750044822692871
    5. 'ursive' → logprob: -13.125044822692871
    6. 'ur' → logprob: -13.750044822692871
    7. '_set' → logprob: -13.750044822692871
    8. 'usion' → logprob: -14.750044822692871
    9. 'limit' → logprob: -15.000044822692871
    10. 'urse' → logprob: -16.000045776367188

Token 58: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -9.865583706414327e-05
    2. 'lim' → logprob: -9.50009822845459
    3. '_limit' → logprob: -11.12509822845459
    4. 'depth' → logprob: -12.12509822845459
    5. 'l' → logprob: -13.37509822845459
    6. 't' → logprob: -15.00009822845459
    7. 'ault' → logprob: -15.12509822845459
    8. 'imit' → logprob: -15.25009822845459
    9. 'ursion' → logprob: -15.62509822845459
    10. 'al' → logprob: -15.75009822845459

Token 59: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.652451464906335e-05
    2. '((' → logprob: -11.750016212463379
    3. ' (' → logprob: -12.000016212463379
    4. '(

' → logprob: -14.500016212463379
    5. '(int' → logprob: -14.750016212463379
    6. '()' → logprob: -15.125016212463379
    7. '("("' → logprob: -15.250016212463379
    8. '(
' → logprob: -15.500016212463379
    9. '<|end|>' → logprob: -15.625016212463379
    10. '(()' → logprob: -16.125017166137695

Token 60: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.11966724693775177
    2. '100' → logprob: -2.2446672916412354
    3. ' ' → logprob: -4.994667053222656
    4. 'int' → logprob: -11.744667053222656
    5. '400' → logprob: -11.994667053222656
    6. '200' → logprob: -11.994667053222656
    7. '500' → logprob: -12.119667053222656
    8. '1' → logprob: -12.244667053222656
    9. '300' → logprob: -12.369667053222656
    10. '999' → logprob: -12.619667053222656

Token 61: '000' (ID: 1302)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.6931858658790588
    2. '000' → logprob: -0.6931858658790588
    3. '0' → logprob: -10.193185806274414
    4. '_' → logprob: -13.693185806274414
    5. '007' → logprob: -16.943185806274414
    6. '001' → logprob: -17.693185806274414
    7. '003' → logprob: -17.943185806274414
    8. '006' → logprob: -18.068185806274414
    9. '   ' → logprob: -18.443185806274414
    10. '002' → logprob: -18.693185806274414

Token 62: '000' (ID: 1302)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001515696058049798
    2. '0' → logprob: -6.501515865325928
    3. ')
' → logprob: -11.75151538848877
    4. ' )' → logprob: -12.75151538848877
    5. '))' → logprob: -13.75151538848877
    6. ')

' → logprob: -14.75151538848877
    7. '')' → logprob: -15.12651538848877
    8. '1' → logprob: -15.25151538848877
    9. '```' → logprob: -16.001516342163086
    10. '(' → logprob: -16.376516342163086

Token 63: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043615259346552193
    2. '0' → logprob: -7.750436305999756
    3. ' )' → logprob: -12.500435829162598
    4. ')
' → logprob: -14.250435829162598
    5. '))' → logprob: -14.250435829162598
    6. '')' → logprob: -16.250436782836914
    7. '1' → logprob: -16.625436782836914
    8. '+' → logprob: -16.875436782836914
    9. ')

' → logprob: -17.125436782836914
    10. ' ' → logprob: -17.500436782836914

Token 64: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6405310816480778e-05
    2. ' )' → logprob: -11.250016212463379
    3. ')
' → logprob: -12.750016212463379
    4. '))' → logprob: -14.875016212463379
    5. '
' → logprob: -17.375017166137695
    6. ')

' → logprob: -17.375017166137695
    7. ')
' → logprob: -17.875017166137695
    8. '   ' → logprob: -18.125017166137695
    9. '()' → logprob: -18.375017166137695
    10. '')' → logprob: -18.375017166137695

Token 65: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5193461775779724
    2. '
' → logprob: -1.2693462371826172
    3. '(' → logprob: -3.144346237182617
    4. '

' → logprob: -3.394346237182617
    5. '()' → logprob: -3.769346237182617
    6. '(
' → logprob: -5.144346237182617
    7. ':' → logprob: -5.144346237182617
    8. '\' → logprob: -6.019346237182617
    9. '#' → logprob: -6.269346237182617
    10. '()

' → logprob: -6.519346237182617

Token 66: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12173236906528473
    2. ' solve' → logprob: -2.996732473373413
    3. ' factorial' → logprob: -3.746732473373413
    4. ' compute' → logprob: -4.871732234954834
    5. ' calculate' → logprob: -4.996732234954834
    6. ' _' → logprob: -5.246732234954834
    7. ' max' → logprob: -5.621732234954834
    8. ' set' → logprob: -5.871732234954834
    9. ' dfs' → logprob: -6.371732234954834
    10. '_' → logprob: -6.371732234954834

Token 67: '_int' (ID: 12285)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.05817209929227829
    2. '()' → logprob: -3.3081719875335693
    3. '_' → logprob: -4.433172225952148
    4. '_input' → logprob: -5.183172225952148
    5. 'line' → logprob: -7.058172225952148
    6. '(' → logprob: -7.433172225952148
    7. '():' → logprob: -8.183172225952148
    8. '_token' → logprob: -8.933172225952148
    9. '_lines' → logprob: -9.183172225952148
    10. ')' → logprob: -9.933172225952148

Token 68: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009565542452037334
    2. 's' → logprob: -4.884565353393555
    3. '():' → logprob: -7.009565353393555
    4. ' ()' → logprob: -7.259565353393555
    5. '（）' → logprob: -10.259565353393555
    6. '`()' → logprob: -10.384565353393555
    7. '():
' → logprob: -10.759565353393555
    8. '>()' → logprob: -10.759565353393555
    9. '()>' → logprob: -10.884565353393555
    10. '()]' → logprob: -11.009565353393555

Token 69: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005010548047721386
    2. '():' → logprob: -5.380010604858398
    3. ' ()' → logprob: -8.005010604858398
    4. '(' → logprob: -10.755010604858398
    5. 's' → logprob: -11.880010604858398
    6. '()*' → logprob: -12.255010604858398
    7. '():
' → logprob: -12.630010604858398
    8. '()
' → logprob: -12.755010604858398
    9. '()>' → logprob: -13.005010604858398
    10. '()`' → logprob: -13.130010604858398

Token 70: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.136056050658226
    2. 'return' (adapté à ' return') → logprob: -2.1360559463500977
    3. 'int' → logprob: -5.261055946350098
    4. ' int' → logprob: -5.636055946350098
    5. '   ' → logprob: -8.136055946350098
    6. '(int' → logprob: -11.636055946350098
    7. '    ' → logprob: -12.261055946350098
    8. ' ' → logprob: -12.386055946350098
    9. ' n' → logprob: -12.636055946350098
    10. '()' → logprob: -12.761055946350098

Token 71: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.007839540019631386
    2. 'int' → logprob: -4.882839679718018
    3. '(int' → logprob: -8.38283920288086
    4. ' ' → logprob: -12.63283920288086
    5. '	int' → logprob: -14.88283920288086
    6. '<int' → logprob: -15.63283920288086
    7. '[int' → logprob: -15.63283920288086
    8. '  ' → logprob: -16.00783920288086
    9. '=int' → logprob: -16.25783920288086
    10. '()' → logprob: -16.38283920288086

Token 72: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04986689239740372
    2. '(input' → logprob: -3.0498669147491455
    3. '(sys' → logprob: -6.674866676330566
    4. '(
' → logprob: -11.924866676330566
    5. 'input' → logprob: -12.549866676330566
    6. ' (' → logprob: -13.049866676330566
    7. '(

' → logprob: -13.174866676330566
    8. '(stdin' → logprob: -14.299866676330566
    9. '(open' → logprob: -14.924866676330566
    10. '(raw' → logprob: -15.424866676330566

Token 73: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018405575305223465
    2. '()' → logprob: -4.018405437469482
    3. ' ())' → logprob: -9.14340591430664
    4. '(' → logprob: -9.26840591430664
    5. '().' → logprob: -11.26840591430664
    6. '()))' → logprob: -11.64340591430664
    7. '`()' → logprob: -11.76840591430664
    8. '(()' → logprob: -11.89340591430664
    9. ')' → logprob: -12.39340591430664
    10. '()`' → logprob: -12.64340591430664

Token 74: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0022765810135751963
    2. '

' → logprob: -6.752276420593262
    3. '
' → logprob: -7.252276420593262
    4. ' def' → logprob: -8.627276420593262
    5. '\' → logprob: -9.252276420593262
    6. '\n' → logprob: -10.627276420593262
    7. '_def' → logprob: -10.877276420593262
    8. '(def' → logprob: -11.252276420593262
    9. '```' → logprob: -11.377276420593262
    10. '#' → logprob: -11.627276420593262

Token 75: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.036212023347616196
    2. 'read' → logprob: -3.9112119674682617
    3. '_' → logprob: -4.411211967468262
    4. ' ' → logprob: -6.536211967468262
    5. ' _' → logprob: -7.786211967468262
    6. '_read' → logprob: -8.036211967468262
    7. ' readline' → logprob: -8.286211967468262
    8. '()' → logprob: -8.536211967468262
    9. ' ()' → logprob: -8.661211967468262
    10. '	read' → logprob: -8.911211967468262

Token 76: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8728553056716919
    2. '_line' → logprob: -0.8728553056716919
    3. '_int' → logprob: -1.997855305671692
    4. '_list' → logprob: -4.247855186462402
    5. '_str' → logprob: -4.872855186462402
    6. '_array' → logprob: -6.497855186462402
    7. '_string' → logprob: -6.997855186462402
    8. '_s' → logprob: -7.622855186462402
    9. '_float' → logprob: -7.622855186462402
    10. '_input' → logprob: -7.747855186462402

Token 77: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014202055521309376
    2. '()' → logprob: -4.889202117919922
    3. '_list' → logprob: -5.264202117919922
    4. '_array' → logprob: -6.889202117919922
    5. '_line' → logprob: -8.139202117919922
    6. 'list' → logprob: -10.764202117919922
    7. '_vector' → logprob: -11.264202117919922
    8. '_' → logprob: -11.264202117919922
    9. '_lst' → logprob: -12.014202117919922
    10. '_s' → logprob: -12.264202117919922

Token 78: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07993802428245544
    2. '()' → logprob: -2.5799379348754883
    3. '().' → logprob: -7.329937934875488
    4. ' ()' → logprob: -8.829937934875488
    5. '():
' → logprob: -8.829937934875488
    6. '()[' → logprob: -10.954937934875488
    7. ' ():' → logprob: -10.954937934875488
    8. '():

' → logprob: -10.954937934875488
    9. '(' → logprob: -11.204937934875488
    10. '()`' → logprob: -12.079937934875488

Token 79: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03761311620473862
    2. '()' → logprob: -3.4126131534576416
    3. '():
' → logprob: -6.0376129150390625
    4. '().' → logprob: -6.9126129150390625
    5. '()[' → logprob: -7.7876129150390625
    6. ' ()' → logprob: -10.287612915039062
    7. ' ():' → logprob: -10.287612915039062
    8. '(' → logprob: -10.912612915039062
    9. '():

' → logprob: -11.037612915039062
    10. 'list' → logprob: -11.537612915039062

Token 80: ' return' (ID: 622)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12945035099983215
    2. '():' → logprob: -2.3794503211975098
    3. 'list' → logprob: -4.37945032119751
    4. '()[' → logprob: -4.75445032119751
    5. '().' → logprob: -5.25445032119751
    6. ' ()' → logprob: -7.00445032119751
    7. ' list' → logprob: -7.50445032119751
    8. '(' → logprob: -8.254450798034668
    9. 'map' → logprob: -9.254450798034668
    10. '(list' → logprob: -9.504450798034668

Token 81: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5809853672981262
    2. '(list' → logprob: -0.8309853672981262
    3. '(' → logprob: -5.8309855461120605
    4. ' list' → logprob: -6.7059855461120605
    5. '(map' → logprob: -7.8309855461120605
    6. '[' → logprob: -8.830985069274902
    7. '[list' → logprob: -9.080985069274902
    8. 'map' → logprob: -9.205985069274902
    9. '([' → logprob: -9.705985069274902
    10. '	list' → logprob: -10.455985069274902

Token 82: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.062172144651412964
    2. '(' → logprob: -2.8121721744537354
    3. '(list' → logprob: -8.937171936035156
    4. '(lambda' → logprob: -9.812171936035156
    5. '(in' → logprob: -11.937171936035156
    6. '(str' → logprob: -13.187171936035156
    7. ' (' → logprob: -13.187171936035156
    8. '(

' → logprob: -13.187171936035156
    9. '(
' → logprob: -13.687171936035156
    10. '(input' → logprob: -13.937171936035156

Token 83: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.33777958154678345
    2. '(' → logprob: -1.3377795219421387
    3. '()' → logprob: -4.212779521942139
    4. ')' → logprob: -5.837779521942139
    5. ',input' → logprob: -6.462779521942139
    6. ',' → logprob: -6.462779521942139
    7. '())' → logprob: -6.712779521942139
    8. ' (' → logprob: -7.087779521942139
    9. '(),' → logprob: -7.462779521942139
    10. '(()' → logprob: -9.212779998779297

Token 84: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2525678873062134
    2. ' input' → logprob: -1.5025678873062134
    3. ')' → logprob: -7.502567768096924
    4. ' ' → logprob: -10.502568244934082
    5. ' sys' → logprob: -10.752568244934082
    6. 'sys' → logprob: -11.252568244934082
    7. ',input' → logprob: -11.752568244934082
    8. '	input' → logprob: -12.127568244934082
    9. ' )' → logprob: -12.502568244934082
    10. '   ' → logprob: -13.377568244934082

Token 85: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00012880703434348106
    2. '()' → logprob: -9.125128746032715
    3. ' ().' → logprob: -12.125128746032715
    4. '(' → logprob: -12.250128746032715
    5. '())' → logprob: -12.250128746032715
    6. ')' → logprob: -12.375128746032715
    7. '()
' → logprob: -15.000128746032715
    8. '.' → logprob: -15.375128746032715
    9. '().'' → logprob: -16.87512969970703
    10. 'split' → logprob: -17.25012969970703

Token 86: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006721417419612408
    2. 'strip' → logprob: -5.006721496582031
    3. 'rstrip' → logprob: -12.381721496582031
    4. ')' → logprob: -13.631721496582031
    5. ' split' → logprob: -14.381721496582031
    6. '(split' → logprob: -17.00672149658203
    7. 'plit' → logprob: -18.13172149658203
    8. 's' → logprob: -18.25672149658203
    9. 'spl' → logprob: -18.38172149658203
    10. '_split' → logprob: -18.50672149658203

Token 87: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08969888836145401
    2. ')' → logprob: -2.5896987915039062
    3. '()' → logprob: -4.589698791503906
    4. '))' → logprob: -7.964698791503906
    5. '()))' → logprob: -8.589698791503906
    6. '(' → logprob: -10.214698791503906
    7. '())
' → logprob: -11.089698791503906
    8. ' ())' → logprob: -12.214698791503906
    9. '()
' → logprob: -13.464698791503906
    10. ' )' → logprob: -14.464698791503906

Token 88: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03767981380224228
    2. '
' → logprob: -3.91267991065979
    3. 'd' → logprob: -4.787679672241211
    4. '

' → logprob: -5.162679672241211
    5. '\' → logprob: -6.412679672241211
    6. 'class' → logprob: -7.912679672241211
    7. '\n' → logprob: -8.162679672241211
    8. '#' → logprob: -8.287679672241211
    9. '```' → logprob: -9.037679672241211
    10. '
' → logprob: -9.037679672241211

Token 89: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.06110064312815666
    2. ' main' → logprob: -3.311100721359253
    3. 'read' → logprob: -3.936100721359253
    4. ' write' → logprob: -6.311100482940674
    5. '_read' → logprob: -8.061100959777832
    6. 'main' → logprob: -8.561100959777832
    7. ' readline' → logprob: -8.561100959777832
    8. '_' → logprob: -8.686100959777832
    9. 'write' → logprob: -8.811100959777832
    10. '	read' → logprob: -9.186100959777832

Token 90: '_list' (ID: 4162)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.11042015254497528
    2. '_' → logprob: -2.4854202270507812
    3. '_str' → logprob: -4.485420227050781
    4. '_string' → logprob: -5.360420227050781
    5. '_int' → logprob: -7.110420227050781
    6. '_list' → logprob: -7.360420227050781
    7. 'line' → logprob: -7.485420227050781
    8. '_array' → logprob: -7.610420227050781
    9. '_l' → logprob: -8.110420227050781
    10. 's' → logprob: -8.360420227050781

Token 91: '_of' (ID: 8023)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005019682459533215
    2. '():' → logprob: -5.630019664764404
    3. '(' → logprob: -6.755019664764404
    4. '()]' → logprob: -9.505020141601562
    5. '_' → logprob: -10.755020141601562
    6. '()>' → logprob: -10.880020141601562
    7. '`()' → logprob: -11.130020141601562
    8. ' ()' → logprob: -11.255020141601562
    9. '()">' → logprob: -11.255020141601562
    10. '(){' → logprob: -11.630020141601562

Token 92: '_int' (ID: 12285)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8091930747032166
    2. '_int' → logprob: -1.4341931343078613
    3. 'ints' → logprob: -2.1841931343078613
    4. '<|end|>' → logprob: -2.3091931343078613
    5. '(int' → logprob: -2.9341931343078613
    6. '_' → logprob: -3.6841931343078613
    7. 's' → logprob: -5.059193134307861
    8. '_lists' → logprob: -5.309193134307861
    9. ']int' → logprob: -5.684193134307861
    10. '<int' → logprob: -5.934193134307861

Token 93: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0036089823115617037
    2. '()' → logprob: -5.6286091804504395
    3. '_s' → logprob: -13.128608703613281
    4. ' s' → logprob: -13.878608703613281
    5. ' ()' → logprob: -13.878608703613281
    6. ''s' → logprob: -14.003608703613281
    7. '():' → logprob: -14.128608703613281
    8. '(' → logprob: -14.503608703613281
    9. ']()' → logprob: -14.503608703613281
    10. '`s' → logprob: -14.753608703613281

Token 94: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0017693048575893044
    2. '()' → logprob: -6.376769542694092
    3. '(' → logprob: -10.376769065856934
    4. ' ():' → logprob: -11.001769065856934
    5. '():
' → logprob: -11.001769065856934
    6. ' ()' → logprob: -13.751769065856934
    7. '():

' → logprob: -14.626769065856934
    8. '()>' → logprob: -14.626769065856934
    9. '()">' → logprob: -15.376769065856934
    10. '():
' → logprob: -16.62677001953125

Token 95: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002383972518146038
    2. '():
' → logprob: -6.127384185791016
    3. '()' → logprob: -8.752384185791016
    4. ':' → logprob: -10.877384185791016
    5. ' ():' → logprob: -11.127384185791016
    6. '(' → logprob: -12.127384185791016
    7. '():

' → logprob: -14.502384185791016
    8. '():
' → logprob: -14.502384185791016
    9. '):' → logprob: -15.127384185791016
    10. ' ()' → logprob: -16.002384185791016

Token 96: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06263121962547302
    2. 'list' → logprob: -3.437631130218506
    3. ' return' → logprob: -4.187631130218506
    4. '():' → logprob: -4.812631130218506
    5. '():
' → logprob: -7.062631130218506
    6. '   ' → logprob: -7.437631130218506
    7. ':list' → logprob: -7.437631130218506
    8. ' list' → logprob: -7.812631130218506
    9. '[]' → logprob: -7.812631130218506
    10. '()' → logprob: -7.812631130218506

Token 97: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2523464262485504
    2. 'list' → logprob: -1.502346396446228
    3. '[list' → logprob: -7.877346515655518
    4. ' [' → logprob: -10.75234603881836
    5. '[' → logprob: -11.75234603881836
    6. '	list' → logprob: -12.12734603881836
    7. '(list' → logprob: -14.25234603881836
    8. ' ' → logprob: -14.25234603881836
    9. '=list' → logprob: -14.37734603881836
    10. '[int' → logprob: -14.62734603881836

Token 98: '(read' (ID: 45738)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.021798310801386833
    2. '(' → logprob: -4.021798133850098
    3. '(int' → logprob: -5.646798133850098
    4. '(input' → logprob: -9.896798133850098
    5. '(list' → logprob: -10.521798133850098
    6. 'map' → logprob: -11.521798133850098
    7. ' (' → logprob: -11.646798133850098
    8. '()' → logprob: -13.021798133850098
    9. '(

' → logprob: -13.146798133850098
    10. '(read' → logprob: -13.271798133850098

Token 99: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.007510791532695293
    2. '_list' → logprob: -5.007510662078857
    3. '_' → logprob: -7.257510662078857
    4. '_in' → logprob: -10.382511138916016
    5. '_i' → logprob: -10.632511138916016
    6. '_str' → logprob: -11.007511138916016
    7. '_line' → logprob: -11.632511138916016
    8. 'int' → logprob: -12.507511138916016
    9. ' _' → logprob: -13.257511138916016
    10. '_l' → logprob: -15.007511138916016

Token 100: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002540943678468466
    2. '())' → logprob: -6.5025410652160645
    3. '()' → logprob: -6.8775410652160645
    4. ')' → logprob: -12.627540588378906
    5. '_s' → logprob: -13.002540588378906
    6. ')s' → logprob: -13.627540588378906
    7. ' s' → logprob: -15.877540588378906
    8. '(' → logprob: -16.627540588378906
    9. '()))' → logprob: -16.627540588378906
    10. ' ()' → logprob: -16.627540588378906

Token 101: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009798167739063501
    2. '()' → logprob: -7.000979900360107
    3. ')' → logprob: -9.62597942352295
    4. '())
' → logprob: -13.87597942352295
    5. ' ())' → logprob: -14.25097942352295
    6. '()))' → logprob: -14.87597942352295
    7. '(' → logprob: -15.62597942352295
    8. '()]' → logprob: -16.250980377197266
    9. '();)' → logprob: -16.875980377197266
    10. '()
' → logprob: -17.125980377197266

Token 102: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01982853375375271
    2. 'd' → logprob: -4.0198283195495605
    3. '
' → logprob: -6.8948283195495605
    4. '\' → logprob: -8.269828796386719
    5. 'class' → logprob: -8.394828796386719
    6. '

' → logprob: -10.019828796386719
    7. '@' → logprob: -10.144828796386719
    8. '#' → logprob: -10.144828796386719
    9. 'de' → logprob: -11.394828796386719
    10. '' → logprob: -11.394828796386719

Token 103: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.13751661777496338
    2. ' read' → logprob: -2.762516498565674
    3. ' solve' → logprob: -3.137516498565674
    4. '_' → logprob: -5.137516498565674
    5. ' factorial' → logprob: -5.512516498565674
    6. ' is' → logprob: -6.512516498565674
    7. ' write' → logprob: -6.637516498565674
    8. ' input' → logprob: -6.637516498565674
    9. 'main' → logprob: -7.012516498565674
    10. '_main' → logprob: -7.262516498565674

Token 104: '_matrix' (ID: 23431)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.4538328945636749
    2. '_string' → logprob: -1.7038328647613525
    3. '_str' → logprob: -2.2038328647613525
    4. '_' → logprob: -3.3288328647613525
    5. '_list' → logprob: -4.453833103179932
    6. '_input' → logprob: -5.078833103179932
    7. '()' → logprob: -5.828833103179932
    8. '_int' → logprob: -5.828833103179932
    9. '_float' → logprob: -6.078833103179932
    10. '_token' → logprob: -6.703833103179932

Token 105: '(h' (ID: 8120)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005379011854529381
    2. '(' → logprob: -8.125537872314453
    3. '_' → logprob: -9.750537872314453
    4. '():' → logprob: -10.500537872314453
    5. ' ()' → logprob: -10.625537872314453
    6. '_of' → logprob: -10.750537872314453
    7. '(){' → logprob: -10.750537872314453
    8. '()>' → logprob: -11.375537872314453
    9. '(size' → logprob: -11.625537872314453
    10. '_list' → logprob: -11.625537872314453

Token 106: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01121451798826456
    2. '):' → logprob: -4.511214733123779
    3. ')' → logprob: -10.136214256286621
    4. ' ,' → logprob: -10.261214256286621
    5. '):
' → logprob: -10.761214256286621
    6. ',size' → logprob: -10.886214256286621
    7. '=' → logprob: -11.261214256286621
    8. ',n' → logprob: -11.386214256286621
    9. ',width' → logprob: -12.386214256286621
    10. ',int' → logprob: -12.636214256286621

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0575379133224487
    2. '(h' → logprob: -1.0575379133224487
    3. '(n' → logprob: -1.6825379133224487
    4. ':' → logprob: -2.4325380325317383
    5. ':
' → logprob: -4.182538032531738
    6. '(' → logprob: -4.807538032531738
    7. '(rows' → logprob: -6.182538032531738
    8. '(lines' → logprob: -7.057538032531738
    9. '(m' → logprob: -7.182538032531738
    10. ',' → logprob: -7.182538032531738

Token 108: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.429488867521286
    2. ' return' → logprob: -1.6794888973236084
    3. ' matrix' → logprob: -1.9294888973236084
    4. 'matrix' → logprob: -4.679488658905029
    5. 'return' (adapté à ' return') → logprob: -5.304488658905029
    6. ' m' → logprob: -7.054488658905029
    7. ' result' → logprob: -7.304488658905029
    8. '	matrix' → logprob: -7.679488658905029
    9. 'result' → logprob: -8.429489135742188
    10. 'm' → logprob: -8.679489135742188

Token 109: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.5823023915290833
    2. '[' → logprob: -0.8323023915290833
    3. '[List' → logprob: -5.582302570343018
    4. '[np' → logprob: -7.957302570343018
    5. '[int' → logprob: -8.08230209350586
    6. '[row' → logprob: -8.08230209350586
    7. '[result' → logprob: -8.45730209350586
    8. '[m' → logprob: -8.58230209350586
    9. '[array' → logprob: -8.58230209350586
    10. '[input' → logprob: -8.58230209350586

Token 110: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1602349877357483
    2. 'read' → logprob: -1.9102349281311035
    3. '[list' → logprob: -12.535235404968262
    4. '[' → logprob: -12.785235404968262
    5. ' list' → logprob: -13.160235404968262
    6. ' read' → logprob: -13.410235404968262
    7. '	read' → logprob: -14.785235404968262
    8. '	list' → logprob: -15.535235404968262
    9. '   ' → logprob: -16.535234451293945
    10. 'tuple' → logprob: -16.660234451293945

Token 111: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.25389114022254944
    2. '(read' → logprob: -1.503891110420227
    3. '(' → logprob: -6.2538909912109375
    4. 'read' → logprob: -11.503890991210938
    5. '(int' → logprob: -11.753890991210938
    6. '(
' → logprob: -12.753890991210938
    7. 'map' → logprob: -12.753890991210938
    8. '()' → logprob: -12.753890991210938
    9. '(input' → logprob: -13.128890991210938
    10. '_read' → logprob: -13.128890991210938

Token 112: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006405997555702925
    2. '(' → logprob: -7.375640392303467
    3. ')' → logprob: -12.375640869140625
    4. '(list' → logprob: -12.875640869140625
    5. '[int' → logprob: -13.250640869140625
    6. '<int' → logprob: -13.625640869140625
    7. '(
' → logprob: -13.750640869140625
    8. ']int' → logprob: -14.375640869140625
    9. '(input' → logprob: -14.875640869140625
    10. '(lambda' → logprob: -15.000640869140625

Token 113: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.25329047441482544
    2. ',' → logprob: -1.5032904148101807
    3. 'input' → logprob: -6.62829065322876
    4. '(input' → logprob: -10.378290176391602
    5. ' ,' → logprob: -12.628290176391602
    6. ' input' → logprob: -13.753290176391602
    7. '```' → logprob: -13.878290176391602
    8. '=input' → logprob: -15.503290176391602
    9. ',
' → logprob: -15.628290176391602
    10. '<input' → logprob: -15.753290176391602

Token 114: ' read' (ID: 1729)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693041563034058
    2. ' input' → logprob: -2.1269304752349854
    3. '   ' → logprob: -14.376930236816406
    4. '(input' → logprob: -14.376930236816406
    5. '	input' → logprob: -14.876930236816406
    6. ' ' → logprob: -14.876930236816406
    7. 'sys' → logprob: -15.751930236816406
    8. ',input' → logprob: -15.751930236816406
    9. '<input' → logprob: -16.126930236816406
    10. '    ' → logprob: -16.626930236816406

Token 115: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.13225549459457397
    2. '_' → logprob: -3.0072555541992188
    3. '   ' → logprob: -4.507255554199219
    4. 's' → logprob: -4.507255554199219
    5. '(input' → logprob: -4.632255554199219
    6. '().' → logprob: -4.882255554199219
    7. '_.' → logprob: -5.007255554199219
    8. '()' → logprob: -5.007255554199219
    9. 'input' → logprob: -5.132255554199219
    10. '_int' → logprob: -6.007255554199219

Token 116: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.8624639324116288e-06
    2. '   ' → logprob: -14.375001907348633
    3. 's' → logprob: -14.875001907348633
    4. ')' → logprob: -14.875001907348633
    5. 'of' → logprob: -16.125001907348633
    6. ')_' → logprob: -16.375001907348633
    7. ' of' → logprob: -16.625001907348633
    8. ' _' → logprob: -16.625001907348633
    9. '_OF' → logprob: -17.125001907348633
    10. '_' → logprob: -17.250001907348633

Token 117: '_int' (ID: 12285)
  Prédit: 'ints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.0002783783129416406
    2. 'int' → logprob: -8.37527847290039
    3. '_int' → logprob: -10.12527847290039
    4. ')' → logprob: -12.37527847290039
    5. ' ints' → logprob: -13.25027847290039
    6. 'Ints' → logprob: -14.00027847290039
    7. '(int' → logprob: -15.12527847290039
    8. 's' → logprob: -15.62527847290039
    9. '_' → logprob: -16.12527847290039
    10. '```' → logprob: -16.75027847290039

Token 118: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5760538578033447
    2. 'ts' → logprob: -0.8260538578033447
    3. 't' → logprob: -9.451053619384766
    4. 'ints' → logprob: -11.201053619384766
    5. 'sts' → logprob: -12.326053619384766
    6. ')' → logprob: -12.326053619384766
    7. '```' → logprob: -12.451053619384766
    8. 'nts' → logprob: -13.201053619384766
    9. ' s' → logprob: -13.951053619384766
    10. 'fs' → logprob: -14.076053619384766

Token 119: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.009829049929976463
    2. '()' → logprob: -5.134829044342041
    3. '(),' → logprob: -6.634829044342041
    4. '())))' → logprob: -6.634829044342041
    5. '(h' → logprob: -7.384829044342041
    6. '()))
' → logprob: -8.5098295211792
    7. '(' → logprob: -9.5098295211792
    8. '))' → logprob: -9.5098295211792
    9. '())' → logprob: -9.6348295211792
    10. '()[' → logprob: -10.0098295211792

Token 120: ' for' (ID: 395)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.04251924902200699
    2. '(' → logprob: -3.4175193309783936
    3. ' for' → logprob: -6.1675190925598145
    4. ')' → logprob: -6.1675190925598145
    5. 'for' → logprob: -6.6675190925598145
    6. '()' → logprob: -6.6675190925598145
    7. '(range' → logprob: -6.7925190925598145
    8. ' (' → logprob: -7.1675190925598145
    9. '(i' → logprob: -10.042519569396973
    10. '(input' → logprob: -10.167519569396973

Token 121: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010424523614346981
    2. ' _' → logprob: -5.635424613952637
    3. 'range' → logprob: -5.760424613952637
    4. '(' → logprob: -6.385424613952637
    5. '_range' → logprob: -7.260424613952637
    6. ' range' → logprob: -7.260424613952637
    7. '(range' → logprob: -7.760424613952637
    8. '_i' → logprob: -9.760424613952637
    9. '(_' → logprob: -10.385424613952637
    10. 'i' → logprob: -11.635424613952637

Token 122: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.285803884267807
    2. ' in' → logprob: -1.4108039140701294
    3. 'range' → logprob: -5.41080379486084
    4. 'i' → logprob: -10.41080379486084
    5. '(range' → logprob: -10.66080379486084
    6. ' ' → logprob: -10.66080379486084
    7. '(' → logprob: -10.78580379486084
    8. ' range' → logprob: -11.03580379486084
    9. 'n' → logprob: -11.03580379486084
    10. '	in' → logprob: -11.16080379486084

Token 123: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005579164135269821
    2. ' range' → logprob: -7.500557899475098
    3. ' ' → logprob: -13.250557899475098
    4. '(range' → logprob: -13.875557899475098
    5. '	range' → logprob: -13.875557899475098
    6. '   ' → logprob: -14.625557899475098
    7. '  ' → logprob: -15.500557899475098
    8. '```' → logprob: -15.750557899475098
    9. 'rang' → logprob: -16.125558853149414
    10. '    ' → logprob: -16.500558853149414

Token 124: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0003360582049936056
    2. '(' → logprob: -8.000335693359375
    3. '(
' → logprob: -14.875335693359375
    4. 'h' → logprob: -16.125335693359375
    5. ' (' → logprob: -16.375335693359375
    6. '	h' → logprob: -18.125335693359375
    7. '(H' → logprob: -18.750335693359375
    8. '(s' → logprob: -19.125335693359375
    9. '(

' → logprob: -19.500335693359375
    10. '(n' → logprob: -19.500335693359375

Token 125: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007990269223228097
    2. ')' → logprob: -7.250799179077148
    3. ']' → logprob: -9.375799179077148
    4. ')]
' → logprob: -12.875799179077148
    5. ' )' → logprob: -14.625799179077148
    6. '))' → logprob: -14.750799179077148
    7. ')
' → logprob: -15.000799179077148
    8. ')],' → logprob: -16.00079917907715
    9. ')])' → logprob: -16.25079917907715
    10. ')}' → logprob: -16.50079917907715

Token 126: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25820237398147583
    2. '
' → logprob: -1.508202314376831
    3. '

' → logprob: -5.25820255279541
    4. '\' → logprob: -7.63320255279541
    5. 'class' → logprob: -8.25820255279541
    6. '#' → logprob: -9.75820255279541
    7. '
' → logprob: -9.75820255279541
    8. '```' → logprob: -10.00820255279541
    9. '\n' → logprob: -10.50820255279541
    10. 'd' → logprob: -10.50820255279541

Token 127: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00764354458078742
    2. 'main' → logprob: -5.132643699645996
    3. ' solve' → logprob: -7.132643699645996
    4. ' factorial' → logprob: -8.757643699645996
    5. '_main' → logprob: -9.507643699645996
    6. ' binary' → logprob: -9.507643699645996
    7. ' dfs' → logprob: -9.507643699645996
    8. ' bfs' → logprob: -9.632643699645996
    9. '	main' → logprob: -9.757643699645996
    10. 'solve' → logprob: -9.882643699645996

Token 128: '_g' (ID: 5439)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.15483303368091583
    2. '_' → logprob: -2.2798330783843994
    3. '_sum' → logprob: -4.02983283996582
    4. '(' → logprob: -4.77983283996582
    5. '_f' → logprob: -6.15483283996582
    6. '_distance' → logprob: -6.15483283996582
    7. '_max' → logprob: -6.15483283996582
    8. '_div' → logprob: -6.65483283996582
    9. '_area' → logprob: -6.77983283996582
    10. '_s' → logprob: -7.27983283996582

Token 129: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0005034659989178181
    2. 'reat' → logprob: -7.7505035400390625
    3. '```' → logprob: -10.625503540039062
    4. 'c' → logprob: -11.250503540039062
    5. 'g' → logprob: -12.250503540039062
    6. 'cdf' → logprob: -12.625503540039062
    7. '(g' → logprob: -13.000503540039062
    8. '
' → logprob: -13.000503540039062
    9. 'CD' → logprob: -13.250503540039062
    10. '(' → logprob: -13.375503540039062

Token 130: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5243697166442871
    2. '(a' → logprob: -0.8993697166442871
    3. '(x' → logprob: -7.149369716644287
    4. ' (' → logprob: -8.274370193481445
    5. 'a' → logprob: -10.274370193481445
    6. '_' → logprob: -10.399370193481445
    7. 's' → logprob: -10.899370193481445
    8. '(*' → logprob: -11.024370193481445
    9. '(A' → logprob: -11.399370193481445
    10. '("("' → logprob: -11.399370193481445

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.65101717156358e-05
    2. ',b' → logprob: -10.000096321105957
    3. ' ,' → logprob: -10.250096321105957
    4. ',
' → logprob: -11.375096321105957
    5. ',a' → logprob: -13.125096321105957
    6. ',)' → logprob: -14.125096321105957
    7. ')' → logprob: -14.625096321105957
    8. ',

' → logprob: -15.125096321105957
    9. ',
' → logprob: -16.500097274780273
    10. ' ' → logprob: -16.500097274780273

Token 132: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20141927897930145
    2. ' b' → logprob: -1.7014192342758179
    3. ' ' → logprob: -12.57641887664795
    4. ')b' → logprob: -14.32641887664795
    5. '<|end|>' → logprob: -14.70141887664795
    6. ',b' → logprob: -14.95141887664795
    7. '	b' → logprob: -15.20141887664795
    8. ' ' → logprob: -15.57641887664795
    9. '   ' → logprob: -15.70141887664795
    10. '  ' → logprob: -15.82641887664795

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.960946772480384e-05
    2. '):
' → logprob: -9.375099182128906
    3. ')' → logprob: -11.625099182128906
    4. ' ):' → logprob: -12.125099182128906
    5. ':' → logprob: -15.375099182128906
    6. ',' → logprob: -16.500099182128906
    7. '):
' → logprob: -16.500099182128906
    8. '   ' → logprob: -17.875099182128906
    9. ')：' → logprob: -18.500099182128906
    10. '):

' → logprob: -18.750099182128906

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38703691959381104
    2. ':' → logprob: -1.512036919593811
    3. ' gcd' → logprob: -2.7620368003845215
    4. 'g' → logprob: -4.3870368003845215
    5. ' ' → logprob: -4.6370368003845215
    6. '):' → logprob: -5.5120368003845215
    7. ' :' → logprob: -5.6370368003845215
    8. ' return' → logprob: -6.2620368003845215
    9. ':
' → logprob: -6.7620368003845215
    10. '=' → logprob: -7.2620368003845215

Token 135: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4527229964733124
    2. ' gcd' → logprob: -1.7027230262756348
    3. '   ' → logprob: -2.5777230262756348
    4. ' math' → logprob: -2.7027230262756348
    5. 'g' → logprob: -3.9527230262756348
    6. 'return' (adapté à ' return') → logprob: -4.202723026275635
    7. ' ' → logprob: -6.327723026275635
    8. 'math' → logprob: -6.327723026275635
    9. '    ' → logprob: -7.077723026275635
    10. ' g' → logprob: -9.452722549438477

Token 136: ' gcd' (ID: 106918)
  Prédit: ' gcd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.45846453309059143
    2. ' math' → logprob: -1.083464503288269
    3. 'g' → logprob: -4.083464622497559
    4. 'math' → logprob: -4.458464622497559
    5. ' g' → logprob: -8.083464622497559
    6. ' ' → logprob: -8.208464622497559
    7. '	g' → logprob: -9.083464622497559
    8. 'a' → logprob: -9.708464622497559
    9. ' a' → logprob: -9.958464622497559
    10. ' ' → logprob: -10.833464622497559

Token 137: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38704171776771545
    2. '(a' → logprob: -1.137041687965393
    3. '(
' → logprob: -8.887042045593262
    4. ' (' → logprob: -11.887042045593262
    5. '((' → logprob: -12.012042045593262
    6. '(b' → logprob: -12.262042045593262
    7. '<|end|>' → logprob: -12.387042045593262
    8. 'a' → logprob: -13.637042045593262
    9. '(abs' → logprob: -13.637042045593262
    10. '(A' → logprob: -13.762042045593262

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011181884910911322
    2. ',b' → logprob: -7.001118183135986
    3. ' ,' → logprob: -8.626118659973145
    4. ',
' → logprob: -10.626118659973145
    5. 'b' → logprob: -13.001118659973145
    6. ')' → logprob: -15.501118659973145
    7. ' ' → logprob: -16.001117706298828
    8. ',a' → logprob: -16.501117706298828
    9. '```' → logprob: -16.751117706298828
    10. 'a' → logprob: -17.001117706298828

Token 139: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3132671117782593
    2. ' b' → logprob: -1.3132671117782593
    3. ')b' → logprob: -12.81326675415039
    4. ' ' → logprob: -13.06326675415039
    5. '	b' → logprob: -15.31326675415039
    6. ')' → logprob: -15.68826675415039
    7. ' ' → logprob: -16.18826675415039
    8. '    ' → logprob: -17.56326675415039
    9. ' )' → logprob: -17.81326675415039
    10. ' 
' → logprob: -17.93826675415039

Token 140: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -15.000001907348633
    4. '))' → logprob: -17.250001907348633
    5. ')a' → logprob: -17.625001907348633
    6. '),' → logprob: -18.375001907348633
    7. ')return' → logprob: -18.625001907348633
    8. '}' → logprob: -18.750001907348633
    9. ')#' → logprob: -18.750001907348633
    10. ',' → logprob: -19.125001907348633

Token 141: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004989320412278175
    2. '
' → logprob: -5.379989147186279
    3. '<|end|>' → logprob: -8.004989624023438
    4. '

' → logprob: -11.254989624023438
    5. '#' → logprob: -11.754989624023438
    6. '<|end|>' → logprob: -12.379989624023438
    7. '```' → logprob: -12.754989624023438
    8. '\' → logprob: -13.004989624023438
    9. '  
' → logprob: -13.504989624023438
    10. ' def' → logprob: -13.504989624023438

Token 142: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.05106968805193901
    2. ' main' → logprob: -3.426069736480713
    3. ' l' → logprob: -4.551069736480713
    4. 'compute' → logprob: -5.176069736480713
    5. ' def' → logprob: -8.676069259643555
    6. ' find' → logprob: -8.801069259643555
    7. ' max' → logprob: -9.176069259643555
    8. 'l' → logprob: -9.176069259643555
    9. ' math' → logprob: -9.551069259643555
    10. ' solve' → logprob: -9.551069259643555

Token 143: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0011802274966612458
    2. '_g' → logprob: -6.751180171966553
    3. '_h' → logprob: -13.251180648803711
    4. '_' → logprob: -13.251180648803711
    5. 'l' → logprob: -13.501180648803711
    6. '_pow' → logprob: -13.626180648803711
    7. '_factor' → logprob: -14.001180648803711
    8. '_f' → logprob: -14.376180648803711
    9. '_sum' → logprob: -14.626180648803711
    10. '_div' → logprob: -15.001180648803711

Token 144: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.03178950026631355
    2. 'ist' → logprob: -4.281789302825928
    3. 'ru' → logprob: -4.781789302825928
    4. 'og' → logprob: -5.781789302825928
    5. 'en' → logprob: -6.156789302825928
    6. 'ast' → logprob: -7.406789302825928
    7. 'e' → logprob: -7.406789302825928
    8. 'ength' → logprob: -7.656789302825928
    9. 'c' → logprob: -7.781789302825928
    10. 'cms' → logprob: -8.156789779663086

Token 145: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.01819630153477192
    2. '(' → logprob: -4.018196105957031
    3. ' (' → logprob: -10.018196105957031
    4. '(
' → logprob: -14.018196105957031
    5. '(A' → logprob: -14.393196105957031
    6. '((' → logprob: -16.14319610595703
    7. '(ai' → logprob: -16.14319610595703
    8. '(x' → logprob: -16.76819610595703
    9. '(

' → logprob: -17.26819610595703
    10. ' ' → logprob: -17.76819610595703

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.463036435074173e-05
    2. ',
' → logprob: -11.000024795532227
    3. ' ,' → logprob: -12.000024795532227
    4. ',b' → logprob: -13.625024795532227
    5. ',

' → logprob: -16.000024795532227
    6. ',
' → logprob: -16.500024795532227
    7. ',a' → logprob: -16.500024795532227
    8. ')' → logprob: -16.750024795532227
    9. ' ' → logprob: -17.250024795532227
    10. 'b' → logprob: -17.500024795532227

Token 147: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3868897557258606
    2. 'b' → logprob: -1.1368896961212158
    3. ' ' → logprob: -11.011889457702637
    4. ')b' → logprob: -14.136889457702637
    5. ' 
' → logprob: -15.136889457702637
    6. ' )' → logprob: -15.386889457702637
    7. ')' → logprob: -15.386889457702637
    8. '	b' → logprob: -15.386889457702637
    9. ' ' → logprob: -15.636889457702637
    10. ',b' → logprob: -16.011890411376953

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00017243190086446702
    2. ')' → logprob: -9.12517261505127
    3. '):
' → logprob: -9.75017261505127
    4. ' ):' → logprob: -12.37517261505127
    5. '   ' → logprob: -15.25017261505127
    6. ',' → logprob: -15.25017261505127
    7. ':' → logprob: -15.50017261505127
    8. '):
' → logprob: -15.62517261505127
    9. ')：' → logprob: -17.750171661376953
    10. '):

' → logprob: -17.875171661376953

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.009824514389038
    2. ' return' → logprob: -1.384824514389038
    3. ' (' → logprob: -1.634824514389038
    4. '(' → logprob: -2.884824514389038
    5. ' ' → logprob: -2.884824514389038
    6. ' a' → logprob: -3.384824514389038
    7. '    ' → logprob: -4.384824752807617
    8. '(a' → logprob: -4.634824752807617
    9. 'a' → logprob: -4.759824752807617
    10. 'return' → logprob: -5.259824752807617

Token 150: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3156748116016388
    2. ' a' → logprob: -1.4406747817993164
    3. '(a' → logprob: -4.440674781799316
    4. ' (' → logprob: -4.565674781799316
    5. ' return' → logprob: -4.940674781799316
    6. 'return' (adapté à ' return') → logprob: -5.690674781799316
    7. '   ' → logprob: -7.315674781799316
    8. ' abs' → logprob: -8.190674781799316
    9. 'abs' → logprob: -9.065674781799316
    10. ' ' → logprob: -9.315674781799316

Token 151: ' (' (ID: 350)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.29581600427627563
    2. 'a' → logprob: -1.6708159446716309
    3. ' (' → logprob: -2.920815944671631
    4. '(a' → logprob: -4.295815944671631
    5. ' abs' → logprob: -8.295816421508789
    6. '(' → logprob: -9.420816421508789
    7. '	a' → logprob: -9.795816421508789
    8. 'abs' → logprob: -10.795816421508789
    9. '   ' → logprob: -10.920816421508789
    10. ' ' → logprob: -10.920816421508789

Token 152: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.670925358776003e-05
    2. ' a' → logprob: -9.625066757202148
    3. '   ' → logprob: -14.625066757202148
    4. '	a' → logprob: -15.625066757202148
    5. 'abs' → logprob: -18.25006675720215
    6. '
' → logprob: -18.50006675720215
    7. ' ' → logprob: -18.87506675720215
    8. '(a' → logprob: -19.12506675720215
    9. 'а' → logprob: -19.62506675720215
    10. '  ' → logprob: -19.87506675720215

Token 153: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16044051945209503
    2. '*' → logprob: -1.9104405641555786
    3. '*b' → logprob: -8.660440444946289
    4. ' //' → logprob: -10.410440444946289
    5. ' ' → logprob: -11.535440444946289
    6. '//' → logprob: -13.160440444946289
    7. ' ' → logprob: -13.785440444946289
    8. '*a' → logprob: -17.28544044494629
    9. '**' → logprob: -18.03544044494629
    10. ' *
' → logprob: -18.03544044494629

Token 154: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.28116080164909363
    2. ' b' → logprob: -1.406160831451416
    3. ' ' → logprob: -11.656160354614258
    4. '	b' → logprob: -14.781160354614258
    5. '   ' → logprob: -15.031160354614258
    6. ' 
' → logprob: -15.781160354614258
    7. '  ' → logprob: -15.781160354614258
    8. ')b' → logprob: -15.781160354614258
    9. '```' → logprob: -15.906160354614258
    10. '    ' → logprob: -15.906160354614258

Token 155: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004457297269254923
    2. ')//' → logprob: -6.004457473754883
    3. ' )' → logprob: -6.379457473754883
    4. ' //' → logprob: -8.504457473754883
    5. '//' → logprob: -9.754457473754883
    6. '+' → logprob: -10.754457473754883
    7. ' +' → logprob: -13.629457473754883
    8. ' ' → logprob: -15.254457473754883
    9. ']' → logprob: -16.754457473754883
    10. ' ' → logprob: -16.879457473754883

Token 156: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.020572250708937645
    2. '//' → logprob: -3.8955721855163574
    3. ' ' → logprob: -10.520572662353516
    4. ' ' → logprob: -13.270572662353516
    5. ' /' → logprob: -14.520572662353516
    6. '
' → logprob: -14.645572662353516
    7. '```' → logprob: -15.645572662353516
    8. ')' → logprob: -15.770572662353516
    9. '/' → logprob: -16.145572662353516
    10. ' //
' → logprob: -17.145572662353516

Token 157: ' compute' (ID: 23864)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6730105876922607
    2. 'compute' → logprob: -0.7980105876922607
    3. 'math' → logprob: -3.4230105876922607
    4. ' compute' → logprob: -5.42301082611084
    5. ' gcd' → logprob: -6.42301082611084
    6. ' math' → logprob: -7.04801082611084
    7. '   ' → logprob: -11.04801082611084
    8. ' g' → logprob: -11.42301082611084
    9. ' ' → logprob: -11.42301082611084
    10. '	g' → logprob: -11.92301082611084

Token 158: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -9.662937372922897e-05
    2. '_' → logprob: -9.375096321105957
    3. '_l' → logprob: -12.500096321105957
    4. ' _' → logprob: -13.250096321105957
    5. '_gc' → logprob: -13.250096321105957
    6. 'g' → logprob: -13.750096321105957
    7. '_gid' → logprob: -15.000096321105957
    8. '_c' → logprob: -15.125096321105957
    9. '```' → logprob: -15.500096321105957
    10. ' ' → logprob: -15.500096321105957

Token 159: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.005394314881414175
    2. 'c' → logprob: -5.255394458770752
    3. 'cdn' → logprob: -10.130393981933594
    4. 'CD' → logprob: -10.505393981933594
    5. '_cd' → logprob: -11.255393981933594
    6. 'cf' → logprob: -11.380393981933594
    7. 'cdf' → logprob: -11.505393981933594
    8. '```' → logprob: -11.880393981933594
    9. 'cdr' → logprob: -12.192893981933594
    10. 'cm' → logprob: -12.567893981933594

Token 160: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.12760312855243683
    2. '(' → logprob: -2.127603054046631
    3. '(b' → logprob: -7.377603054046631
    4. ' (' → logprob: -10.127603530883789
    5. '(
' → logprob: -11.877603530883789
    6. '(abs' → logprob: -14.002603530883789
    7. 'a' → logprob: -14.002603530883789
    8. 'b' → logprob: -15.502603530883789
    9. '(ab' → logprob: -15.502603530883789
    10. '((' → logprob: -15.627603530883789

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014693068340420723
    2. 'b' → logprob: -5.014693260192871
    3. ',b' → logprob: -5.264693260192871
    4. ' ,' → logprob: -6.889693260192871
    5. '(' → logprob: -7.139693260192871
    6. ' b' → logprob: -7.764693260192871
    7. ',
' → logprob: -8.389693260192871
    8. '(b' → logprob: -9.014693260192871
    9. ' ' → logprob: -9.014693260192871
    10. ')' → logprob: -10.514693260192871

Token 162: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0788925439119339
    2. ' b' → logprob: -2.578892469406128
    3. ' ' → logprob: -12.953892707824707
    4. ')b' → logprob: -15.453892707824707
    5. '	b' → logprob: -16.20389175415039
    6. '   ' → logprob: -16.70389175415039
    7. ')' → logprob: -17.45389175415039
    8. '_b' → logprob: -17.57889175415039
    9. '    ' → logprob: -17.70389175415039
    10. '(b' → logprob: -17.82889175415039

Token 163: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007873523863963783
    2. ' )' → logprob: -7.250787258148193
    3. 'b' → logprob: -10.750787734985352
    4. ')+' → logprob: -11.125787734985352
    5. ')b' → logprob: -11.250787734985352
    6. ')
' → logprob: -12.000787734985352
    7. 'a' → logprob: -12.375787734985352
    8. ',' → logprob: -12.500787734985352
    9. '(a' → logprob: -12.625787734985352
    10. '+' → logprob: -12.875787734985352

Token 164: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2113979209971149e-05
    2. '
' → logprob: -11.500012397766113
    3. 'class' → logprob: -13.750012397766113
    4. '\' → logprob: -15.250012397766113
    5. '#' → logprob: -15.375012397766113
    6. '```' → logprob: -16.125011444091797
    7. ' def' → logprob: -16.375011444091797
    8. 'from' → logprob: -16.375011444091797
    9. '

' → logprob: -16.875011444091797
    10. '@' → logprob: -17.625011444091797

Token 165: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.013544171117246151
    2. 'main' → logprob: -4.638544082641602
    3. ' solve' → logprob: -5.763544082641602
    4. ' pow' → logprob: -8.763544082641602
    5. ' binary' → logprob: -8.763544082641602
    6. 'solve' → logprob: -9.638544082641602
    7. ' is' → logprob: -9.888544082641602
    8. 'pow' → logprob: -10.263544082641602
    9. ' factorial' → logprob: -10.513544082641602
    10. ' compute' → logprob: -10.763544082641602

Token 166: '_main' (ID: 23076)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.4452546238899231
    2. '_' → logprob: -1.4452545642852783
    3. '_line' → logprob: -2.8202545642852783
    4. '_string' → logprob: -3.5702545642852783
    5. '_list' → logprob: -3.9452545642852783
    6. '_input' → logprob: -5.695254802703857
    7. '_str' → logprob: -5.820254802703857
    8. '()' → logprob: -6.320254802703857
    9. '_token' → logprob: -6.945254802703857
    10. ' _' → logprob: -7.445254802703857

Token 167: '_input' (ID: 12507)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4868881404399872
    2. '_input' → logprob: -1.2368881702423096
    3. '_' → logprob: -3.6118881702423096
    4. '_list' → logprob: -3.7368881702423096
    5. '():' → logprob: -3.8618881702423096
    6. '_array' → logprob: -5.7368879318237305
    7. '():
' → logprob: -6.1118879318237305
    8. '_data' → logprob: -6.3618879318237305
    9. '_menu' → logprob: -6.3618879318237305
    10. ' ()' → logprob: -6.9868879318237305

Token 168: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00025311444187536836
    2. '():
' → logprob: -8.375252723693848
    3. ' ():' → logprob: -10.750252723693848
    4. '()' → logprob: -13.875252723693848
    5. '():
' → logprob: -16.500253677368164
    6. '():

' → logprob: -17.125253677368164
    7. '(' → logprob: -17.875253677368164
    8. '_' → logprob: -18.500253677368164
    9. '().' → logprob: -18.500253677368164
    10. '_input' → logprob: -19.375253677368164

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.574721097946167
    2. '()' → logprob: -1.199721097946167
    3. '():' → logprob: -2.074721097946167
    4. '():
' → logprob: -5.574721336364746
    5. 'return' → logprob: -5.949721336364746
    6. '()
' → logprob: -6.324721336364746
    7. ' return' → logprob: -7.324721336364746
    8. 'n' → logprob: -7.449721336364746
    9. 'def' → logprob: -8.949721336364746
    10. '(' → logprob: -9.324721336364746

Token 170: ' return' (ID: 622)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.368042916059494
    2. 'n' → logprob: -1.6180429458618164
    3. '   ' → logprob: -2.9930429458618164
    4. ' h' → logprob: -3.6180429458618164
    5. ' return' → logprob: -3.7430429458618164
    6. 'h' → logprob: -5.618042945861816
    7. 'return' (adapté à ' return') → logprob: -6.368042945861816
    8. ' N' → logprob: -6.368042945861816
    9. 'N' → logprob: -7.743042945861816
    10. ' t' → logprob: -8.243042945861816

Token 171: ' list' (ID: 1562)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.3338150084018707
    2. ' read' → logprob: -1.9588149785995483
    3. 'list' → logprob: -2.333815097808838
    4. ' list' → logprob: -3.833815097808838
    5. 'int' → logprob: -5.083815097808838
    6. 'sys' → logprob: -5.583815097808838
    7. ' sys' → logprob: -5.958815097808838
    8. ' int' → logprob: -6.083815097808838
    9. 'input' → logprob: -6.208815097808838
    10. 'tuple' → logprob: -6.583815097808838

Token 172: '(read' (ID: 45738)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.28007256984710693
    2. '(read' → logprob: -1.530072569847107
    3. '(' → logprob: -4.2800726890563965
    4. '(input' → logprob: -4.5300726890563965
    5. '()' → logprob: -6.1550726890563965
    6. '(int' → logprob: -7.6550726890563965
    7. '(list' → logprob: -8.405072212219238
    8. 'map' → logprob: -8.655072212219238
    9. 'read' → logprob: -10.155072212219238
    10. '(range' → logprob: -11.155072212219238

Token 173: '_int' (ID: 12285)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.16306914389133453
    2. '_int' → logprob: -1.9130691289901733
    3. '_' → logprob: -5.913069248199463
    4. '_line' → logprob: -10.413068771362305
    5. '_of' → logprob: -10.413068771362305
    6. '_str' → logprob: -10.663068771362305
    7. '(_' → logprob: -10.913068771362305
    8. 'int' → logprob: -11.163068771362305
    9. '_input' → logprob: -12.038068771362305
    10. '(int' → logprob: -12.788068771362305

Token 174: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0004388942907098681
    2. '()' → logprob: -8.500438690185547
    3. '())' → logprob: -8.750438690185547
    4. ')' → logprob: -9.500438690185547
    5. '_s' → logprob: -14.000438690185547
    6. ')s' → logprob: -14.750438690185547
    7. '_list' → logprob: -15.125438690185547
    8. ' s' → logprob: -15.875438690185547
    9. 'ts' → logprob: -16.750438690185547
    10. 'ss' → logprob: -17.000438690185547

Token 175: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00042567000491544604
    2. '()' → logprob: -8.000425338745117
    3. ')' → logprob: -9.500425338745117
    4. ' ())' → logprob: -11.500425338745117
    5. '()))' → logprob: -13.250425338745117
    6. '())
' → logprob: -13.875425338745117
    7. '(' → logprob: -14.000425338745117
    8. '(),' → logprob: -14.750425338745117
    9. '();)' → logprob: -15.000425338745117
    10. '()),' → logprob: -15.000425338745117

Token 176: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010115911572938785
    2. '<|end|>' → logprob: -10.000101089477539
    3. '#' → logprob: -10.625101089477539
    4. '\' → logprob: -11.375101089477539
    5. '
' → logprob: -11.500101089477539
    6. 'class' → logprob: -12.625101089477539
    7. '```' → logprob: -13.375101089477539
    8. '<|end|>' → logprob: -13.750101089477539
    9. ' def' → logprob: -14.625101089477539
    10. '    
' → logprob: -14.750101089477539

Token 177: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.034502215683460236
    2. ' def' → logprob: -4.909502029418945
    3. '_' → logprob: -5.034502029418945
    4. ' compute' → logprob: -5.409502029418945
    5. ' solve' → logprob: -5.659502029418945
    6. ' ' → logprob: -5.659502029418945
    7. 'main' → logprob: -6.159502029418945
    8. ' write' → logprob: -6.659502029418945
    9. ' read' → logprob: -6.909502029418945
    10. '_main' → logprob: -7.409502029418945

Token 178: '_ans' (ID: 146254)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5328378677368164
    2. '(' → logprob: -1.0328378677368164
    3. '_' → logprob: -3.4078378677368164
    4. '():' → logprob: -5.657837867736816
    5. '(
' → logprob: -6.032837867736816
    6. '_data' → logprob: -6.282837867736816
    7. ' ()' → logprob: -6.282837867736816
    8. '(_' → logprob: -6.657837867736816
    9. '_array' → logprob: -6.782837867736816
    10. '_map' → logprob: -6.907837867736816

Token 179: '(n' (ID: 2406)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.9502855539321899
    2. '():' → logprob: -1.07528555393219
    3. '()' → logprob: -1.95028555393219
    4. '_array' → logprob: -2.3252854347229004
    5. '():
' → logprob: -4.0752854347229
    6. ' =' → logprob: -4.7002854347229
    7. 'ays' → logprob: -5.8252854347229
    8. 'or' → logprob: -7.3252854347229
    9. '_list' → logprob: -7.3252854347229
    10. '[]' → logprob: -8.200285911560059

Token 180: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03910257667303085
    2. '):
' → logprob: -3.664102554321289
    3. ',' → logprob: -4.539102554321289
    4. ')' → logprob: -6.414102554321289
    5. ' ):' → logprob: -8.164102554321289
    6. '=' → logprob: -10.164102554321289
    7. ':' → logprob: -10.914102554321289
    8. '):
' → logprob: -11.414102554321289
    9. '_list' → logprob: -12.414102554321289
    10. 's' → logprob: -12.539102554321289

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2970481812953949
    2. ' =' → logprob: -2.0470480918884277
    3. '[' → logprob: -2.6720480918884277
    4. ' [' → logprob: -3.0470480918884277
    5. '=' → logprob: -5.797048091888428
    6. '=[' → logprob: -6.047048091888428
    7. '[n' → logprob: -6.172048091888428
    8. '    ' → logprob: -6.797048091888428
    9. ' return' → logprob: -7.297048091888428
    10. ' ans' → logprob: -8.297048568725586

Token 182: ' return' (ID: 622)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.48514872789382935
    2. '[' → logprob: -1.2351486682891846
    3. ' return' → logprob: -3.2351486682891846
    4. '   ' → logprob: -3.3601486682891846
    5. 'return' (adapté à ' return') → logprob: -3.9851486682891846
    6. '[n' → logprob: -8.610148429870605
    7. ' ans' → logprob: -8.610148429870605
    8. ' ' → logprob: -9.110148429870605
    9. '[a' → logprob: -9.360148429870605
    10. ' =' → logprob: -9.735148429870605

Token 183: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006703885272145271
    2. ' [' → logprob: -5.131703853607178
    3. '[n' → logprob: -7.256703853607178
    4. '[-' → logprob: -10.381704330444336
    5. '[int' → logprob: -10.631704330444336
    6. '[a' → logprob: -12.131704330444336
    7. '   ' → logprob: -13.256704330444336
    8. '0' → logprob: -13.631704330444336
    9. '[len' → logprob: -13.631704330444336
    10. '[num' → logprob: -14.131704330444336

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18298403918743134
    2. 'INF' → logprob: -1.9329839944839478
    3. '-' → logprob: -4.057983875274658
    4. '-INF' → logprob: -6.307983875274658
    5. 'False' → logprob: -6.807983875274658
    6. 'float' → logprob: -7.182983875274658
    7. 'None' → logprob: -7.682983875274658
    8. 'inf' → logprob: -8.307984352111816
    9. ' ' → logprob: -8.682984352111816
    10. '-inf' → logprob: -8.807984352111816

Token 185: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01626720279455185
    2. ']*' → logprob: -4.2662672996521
    3. ' for' → logprob: -6.2662672996521
    4. ' ]' → logprob: -9.016266822814941
    5. 'for' → logprob: -9.516266822814941
    6. ']*(' → logprob: -12.641266822814941
    7. ',' → logprob: -13.766266822814941
    8. ')' → logprob: -13.766266822814941
    9. ' ' → logprob: -14.016266822814941
    10. ']+' → logprob: -15.266266822814941

Token 186: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.050396040081977844
    2. ' for' → logprob: -4.175395965576172
    3. 'for' → logprob: -4.550395965576172
    4. ' *' → logprob: -4.675395965576172
    5. ',' → logprob: -4.925395965576172
    6. '*n' → logprob: -5.675395965576172
    7. ',n' → logprob: -6.800395965576172
    8. '(n' → logprob: -7.800395965576172
    9. ' ' → logprob: -7.925395965576172
    10. '[n' → logprob: -8.300395965576172

Token 187: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01815052703022957
    2. ' n' → logprob: -4.018150329589844
    3. '(n' → logprob: -14.643150329589844
    4. '	n' → logprob: -15.643150329589844
    5. ' ' → logprob: -18.643150329589844
    6. '_n' → logprob: -18.643150329589844
    7. '   ' → logprob: -18.893150329589844
    8. ' (' → logprob: -19.018150329589844
    9. '(' → logprob: -19.018150329589844
    10. ')n' → logprob: -19.268150329589844

Token 188: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8132069706916809
    2. '<|end|>' → logprob: -0.9382069706916809
    3. '
' → logprob: -1.8132069110870361
    4. '

' → logprob: -7.063207149505615
    5. '<|end|>' → logprob: -7.313207149505615
    6. '\n' → logprob: -8.938206672668457
    7. ' def' → logprob: -9.063206672668457
    8. '```' → logprob: -9.188206672668457
    9. 'newline' → logprob: -9.938206672668457
    10. '\' → logprob: -10.188206672668457

Token 189: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002165299083571881
    2. '
' → logprob: -8.625216484069824
    3. '<|end|>' → logprob: -11.125216484069824
    4. '\' → logprob: -11.250216484069824
    5. '#' → logprob: -13.000216484069824
    6. '```' → logprob: -13.375216484069824
    7. 'class' → logprob: -13.750216484069824
    8. '  
' → logprob: -13.875216484069824
    9. '\n' → logprob: -14.625216484069824
    10. 'ndef' → logprob: -14.750216484069824

Token 190: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.032243337482213974
    2. ' solve' → logprob: -3.907243251800537
    3. 'main' → logprob: -5.032243251800537
    4. ' process' → logprob: -6.157243251800537
    5. 'solve' → logprob: -7.407243251800537
    6. ' binary' → logprob: -7.782243251800537
    7. ' initialize' → logprob: -8.032243728637695
    8. ' update' → logprob: -8.407243728637695
    9. ' max' → logprob: -8.532243728637695
    10. ' compute' → logprob: -8.782243728637695

Token 191: '_min' (ID: 15950)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.585671067237854
    2. '_g' → logprob: -1.460671067237854
    3. '_factor' → logprob: -2.2106709480285645
    4. '_sum' → logprob: -2.5856709480285645
    5. '_max' → logprob: -4.0856709480285645
    6. '_l' → logprob: -5.3356709480285645
    7. '_f' → logprob: -6.8356709480285645
    8. '_s' → logprob: -7.4606709480285645
    9. '_pow' → logprob: -7.8356709480285645
    10. '_ans' → logprob: -7.9606709480285645

Token 192: '_distance' (ID: 45537)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6381728053092957
    2. '_' → logprob: -1.1381728649139404
    3. '(a' → logprob: -2.1381728649139404
    4. 'imum' → logprob: -4.513172626495361
    5. '()' → logprob: -5.513172626495361
    6. '_sum' → logprob: -6.638172626495361
    7. '_value' → logprob: -6.763172626495361
    8. 'imized' → logprob: -6.763172626495361
    9. '_element' → logprob: -7.138172626495361
    10. '_distance' → logprob: -7.138172626495361

Token 193: '(i' (ID: 3649)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.05593275651335716
    2. '(' → logprob: -3.4309327602386475
    3. '(points' → logprob: -4.430932521820068
    4. '(x' → logprob: -6.430932521820068
    5. '():' → logprob: -6.680932521820068
    6. '(p' → logprob: -6.680932521820068
    7. '(point' → logprob: -6.680932521820068
    8. '(arr' → logprob: -7.055932521820068
    9. '(s' → logprob: -7.430932521820068
    10. '(u' → logprob: -7.555932521820068

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005910403560847044
    2. ' ,' → logprob: -7.750591278076172
    3. '):' → logprob: -9.125591278076172
    4. ',
' → logprob: -11.250591278076172
    5. ',n' → logprob: -11.625591278076172
    6. ',j' → logprob: -11.875591278076172
    7. ')' → logprob: -12.125591278076172
    8. ' ' → logprob: -12.250591278076172
    9. ',i' → logprob: -13.875591278076172
    10. '   ' → logprob: -14.000591278076172

Token 195: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2552414536476135
    2. ' j' → logprob: -1.5052413940429688
    3. 'arr' → logprob: -7.255241394042969
    4. ' positions' → logprob: -7.755241394042969
    5. ' arr' → logprob: -7.755241394042969
    6. ' distances' → logprob: -8.005241394042969
    7. 'dist' → logprob: -8.380241394042969
    8. ' dist' → logprob: -8.505241394042969
    9. ' points' → logprob: -8.880241394042969
    10. 'positions' → logprob: -9.005241394042969

Token 196: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008037051185965538
    2. ',' → logprob: -4.883037090301514
    3. '):
' → logprob: -8.758036613464355
    4. ')' → logprob: -8.758036613464355
    5. ' ):' → logprob: -9.258036613464355
    6. '   ' → logprob: -12.133036613464355
    7. ' ,' → logprob: -12.133036613464355
    8. ':' → logprob: -12.258036613464355
    9. ' ' → logprob: -13.758036613464355
    10. '):
' → logprob: -13.883036613464355

Token 197: ' x' (ID: 1215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6217886209487915
    2. ' n' → logprob: -1.4967886209487915
    3. 'arr' → logprob: -2.871788501739502
    4. ' positions' → logprob: -3.121788501739502
    5. 'k' → logprob: -3.746788501739502
    6. ' arr' → logprob: -3.996788501739502
    7. ' points' → logprob: -3.996788501739502
    8. 'positions' → logprob: -4.246788501739502
    9. ' dist' → logprob: -4.621788501739502
    10. 'points' → logprob: -4.746788501739502

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3147512972354889
    2. '):' → logprob: -1.3147512674331665
    3. ' ,' → logprob: -7.689751148223877
    4. ')' → logprob: -7.939751148223877
    5. ' ):' → logprob: -8.189751625061035
    6. '):
' → logprob: -8.439751625061035
    7. '1' → logprob: -10.439751625061035
    8. ',y' → logprob: -11.064751625061035
    9. ',j' → logprob: -11.064751625061035
    10. ',i' → logprob: -11.314751625061035

Token 199: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5237655639648438
    2. 'y' → logprob: -0.8987655639648438
    3. ' n' → logprob: -8.648765563964844
    4. 'n' → logprob: -8.773765563964844
    5. ')' → logprob: -9.023765563964844
    6. ' ' → logprob: -9.898765563964844
    7. ' )' → logprob: -10.773765563964844
    8. '	y' → logprob: -10.836265563964844
    9. '   ' → logprob: -11.523765563964844
    10. 'j' → logprob: -12.336265563964844

Token 200: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001443568617105484
    2. ')' → logprob: -7.001443386077881
    3. ',' → logprob: -7.876443386077881
    4. ' ):' → logprob: -9.251443862915039
    5. '):
' → logprob: -9.876443862915039
    6. ':' → logprob: -13.876443862915039
    7. '   ' → logprob: -14.376443862915039
    8. ' ' → logprob: -14.501443862915039
    9. '):
' → logprob: -14.501443862915039
    10. ' ,' → logprob: -14.626443862915039

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007008800748735666
    2. '
' → logprob: -8.125700950622559
    3. 'return' → logprob: -8.375700950622559
    4. '    
' → logprob: -9.125700950622559
    5. ' return' → logprob: -10.500700950622559
    6. 'abs' → logprob: -10.750700950622559
    7. '   
' → logprob: -12.750700950622559
    8. '{
' → logprob: -13.375700950622559
    9. '    ' → logprob: -13.500700950622559
    10. '  ' → logprob: -13.625700950622559

Token 202: ' d' (ID: 272)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.395465612411499
    2. 'return' → logprob: -1.145465612411499
    3. ' abs' → logprob: -5.395465850830078
    4. ' return' → logprob: -6.145465850830078
    5. '   ' → logprob: -6.520465850830078
    6. 'min' → logprob: -7.895465850830078
    7. 'max' → logprob: -11.145465850830078
    8. '(abs' → logprob: -12.270465850830078
    9. ' min' → logprob: -13.020465850830078
    10. ' ' → logprob: -13.020465850830078

Token 203: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14670953154563904
    2. '1' → logprob: -2.771709442138672
    3. '=' → logprob: -2.771709442138672
    4. 'ist' → logprob: -5.896709442138672
    5. ' ' → logprob: -6.146709442138672
    6. 'ef' → logprob: -6.521709442138672
    7. 'istance' → logprob: -6.646709442138672
    8. 'x' → logprob: -6.896709442138672
    9. '   ' → logprob: -6.896709442138672
    10. 'i' → logprob: -7.021709442138672

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759613513946533
    2. '=' → logprob: -0.8259613513946533
    3. ',' → logprob: -11.575961112976074
    4. '   ' → logprob: -12.075961112976074
    5. ' ' → logprob: -13.200961112976074
    6. 'ist' → logprob: -13.950961112976074
    7. '_' → logprob: -14.325961112976074
    8. ' =
' → logprob: -14.325961112976074
    9. '1' → logprob: -14.825961112976074
    10. 'istance' → logprob: -14.950961112976074

Token 205: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3880293071269989
    2. ' abs' → logprob: -1.1380293369293213
    3. '   ' → logprob: -7.763029098510742
    4. '(abs' → logprob: -7.888029098510742
    5. 'math' → logprob: -8.763029098510742
    6. ' math' → logprob: -8.888029098510742
    7. 'x' → logprob: -10.513029098510742
    8. ' x' → logprob: -11.013029098510742
    9. ' ' → logprob: -11.388029098510742
    10. ' (' → logprob: -12.638029098510742

Token 206: '(j' (ID: 4997)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12719003856182098
    2. '(x' → logprob: -2.127190113067627
    3. '(' → logprob: -8.252189636230469
    4. 'x' → logprob: -14.002189636230469
    5. '(
' → logprob: -15.877189636230469
    6. '((' → logprob: -16.12718963623047
    7. 'i' → logprob: -16.50218963623047
    8. '(j' → logprob: -16.87718963623047
    9. '(I' → logprob: -17.50218963623047
    10. '(a' → logprob: -17.62718963623047

Token 207: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10041908919811249
    2. '-' → logprob: -2.350419044494629
    3. '-x' → logprob: -8.850419044494629
    4. '-i' → logprob: -9.975419044494629
    5. ' ' → logprob: -11.350419044494629
    6. ' x' → logprob: -12.850419044494629
    7. '   ' → logprob: -12.850419044494629
    8. 'x' → logprob: -12.975419044494629
    9. ' ' → logprob: -14.600419044494629
    10. '	' → logprob: -15.225419044494629

Token 208: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009793982841074467
    2. 'i' → logprob: -5.509793758392334
    3. ' x' → logprob: -5.634793758392334
    4. 'y' → logprob: -6.259793758392334
    5. ' y' → logprob: -9.509794235229492
    6. ' i' → logprob: -9.759794235229492
    7. '0' → logprob: -10.884794235229492
    8. ' ' → logprob: -11.009794235229492
    9. '	x' → logprob: -11.697294235229492
    10. ')x' → logprob: -12.072294235229492

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036715567694045603
    2. ' )' → logprob: -8.500367164611816
    3. ')+' → logprob: -8.875367164611816
    4. ')
' → logprob: -10.750367164611816
    5. '   ' → logprob: -14.625367164611816
    6. '),' → logprob: -14.750367164611816
    7. ')

' → logprob: -14.875367164611816
    8. '+' → logprob: -15.750367164611816
    9. ',' → logprob: -15.875367164611816
    10. '
' → logprob: -16.1253662109375

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07489495724439621
    2. 'd' → logprob: -2.699894905090332
    3. '    
' → logprob: -6.074894905090332
    4. ' d' → logprob: -6.324894905090332
    5. 'return' → logprob: -8.824894905090332
    6. '
' → logprob: -8.949894905090332
    7. ' +' → logprob: -9.449894905090332
    8. '+d' → logprob: -9.449894905090332
    9. '+' → logprob: -9.699894905090332
    10. ',' → logprob: -9.824894905090332

Token 211: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.02066812850534916
    2. ' d' → logprob: -4.145668029785156
    3. '   ' → logprob: -5.520668029785156
    4. 'return' → logprob: -8.270668029785156
    5. 'abs' → logprob: -9.020668029785156
    6. ' return' → logprob: -9.520668029785156
    7. ' abs' → logprob: -9.645668029785156
    8. '
' → logprob: -10.395668029785156
    9. ' ' → logprob: -10.895668029785156
    10. '    
' → logprob: -12.333168029785156

Token 212: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.829823102336377e-05
    2. ' =' → logprob: -10.12509822845459
    3. ' ' → logprob: -10.62509822845459
    4. '1' → logprob: -11.00009822845459
    5. '=' → logprob: -12.25009822845459
    6. 'y' → logprob: -12.75009822845459
    7. 'x' → logprob: -13.37509822845459
    8. '
' → logprob: -13.93759822845459
    9. 'f' → logprob: -14.12509822845459
    10. '3' → logprob: -14.12509822845459

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038048144429922104
    2. '=' → logprob: -3.288048028945923
    3. ' ' → logprob: -12.788047790527344
    4. '   ' → logprob: -13.288047790527344
    5. ' =
' → logprob: -13.788047790527344
    6. ',' → logprob: -14.913047790527344
    7. '=
' → logprob: -16.163047790527344
    8. ' ' → logprob: -16.600547790527344
    9. '1' → logprob: -16.725547790527344
    10. '  ' → logprob: -16.850547790527344

Token 214: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3022524118423462
    2. 'x' → logprob: -2.3022522926330566
    3. ' abs' → logprob: -2.3022522926330566
    4. ' x' → logprob: -3.5522522926330566
    5. 'y' → logprob: -4.427252292633057
    6. ' y' → logprob: -4.802252292633057
    7. 'len' → logprob: -4.927252292633057
    8. '(abs' → logprob: -6.427252292633057
    9. ' len' → logprob: -6.677252292633057
    10. ' ' → logprob: -7.927252292633057

Token 215: '(x' (ID: 4061)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.22951531410217285
    2. '(x' → logprob: -1.6045153141021729
    3. 'y' → logprob: -6.354515075683594
    4. '((' → logprob: -6.729515075683594
    5. '(n' → logprob: -7.979515075683594
    6. 'x' → logprob: -8.104515075683594
    7. '(' → logprob: -8.479515075683594
    8. '(i' → logprob: -8.979515075683594
    9. '(j' → logprob: -9.479515075683594
    10. '(len' → logprob: -10.104515075683594

Token 216: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.043029557913541794
    2. '-' → logprob: -3.168029546737671
    3. '-y' → logprob: -11.66802978515625
    4. ' ' → logprob: -12.04302978515625
    5. ' y' → logprob: -12.04302978515625
    6. ')' → logprob: -12.66802978515625
    7. ',' → logprob: -13.41802978515625
    8. 'y' → logprob: -13.66802978515625
    9. ' -
' → logprob: -14.04302978515625
    10. '[' → logprob: -14.16802978515625

Token 217: ' i' (ID: 575)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01592022366821766
    2. 'i' → logprob: -4.515920162200928
    3. ' y' → logprob: -5.765920162200928
    4. 'j' → logprob: -6.515920162200928
    5. 'x' → logprob: -9.515920639038086
    6. ' i' → logprob: -10.015920639038086
    7. ' ' → logprob: -10.640920639038086
    8. '0' → logprob: -10.765920639038086
    9. ')' → logprob: -10.890920639038086
    10. '1' → logprob: -11.015920639038086

Token 218: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005872295005246997
    2. ')
' → logprob: -7.750587463378906
    3. ')+' → logprob: -9.000587463378906
    4. ' )' → logprob: -10.750587463378906
    5. ')

' → logprob: -11.750587463378906
    6. '+' → logprob: -14.000587463378906
    7. '))' → logprob: -14.750587463378906
    8. ')
' → logprob: -15.000587463378906
    9. 'd' → logprob: -15.125587463378906
    10. ')d' → logprob: -15.250587463378906

Token 219: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2635587155818939
    2. ' +' → logprob: -2.2635586261749268
    3. '
' → logprob: -2.6385586261749268
    4. '+' → logprob: -3.2635586261749268
    5. 'd' → logprob: -4.388558864593506
    6. '+d' → logprob: -6.513558864593506
    7. ')' → logprob: -7.138558864593506
    8. ' d' → logprob: -7.263558864593506
    9. 'def' → logprob: -7.513558864593506
    10. ' +
' → logprob: -7.888558864593506

Token 220: ' ' (ID: 220)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0007804421475157142
    2. ' abs' → logprob: -7.2507805824279785
    3. '1' → logprob: -9.75078010559082
    4. '(abs' → logprob: -11.87578010559082
    5. 'y' → logprob: -12.75078010559082
    6. '   ' → logprob: -13.75078010559082
    7. '+' → logprob: -14.62578010559082
    8. '    ' → logprob: -16.25078010559082
    9. '
' → logprob: -16.25078010559082
    10. ' ' → logprob: -16.37578010559082

Token 221: '1' (ID: 16)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0003766919835470617
    2. ' abs' → logprob: -8.25037670135498
    3. '1' → logprob: -9.25037670135498
    4. '(abs' → logprob: -11.37537670135498
    5. 'y' → logprob: -11.87537670135498
    6. '   ' → logprob: -14.62537670135498
    7. 'd' → logprob: -16.625375747680664
    8. 'b' → logprob: -16.625375747680664
    9. '.abs' → logprob: -16.875375747680664
    10. ' ' → logprob: -17.000375747680664

Token 222: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0042616999708116055
    2. ' abs' → logprob: -5.504261493682861
    3. 'y' → logprob: -8.75426197052002
    4. '(abs' → logprob: -11.12926197052002
    5. ' y' → logprob: -12.00426197052002
    6. '   ' → logprob: -13.00426197052002
    7. 'a' → logprob: -14.62926197052002
    8. '
' → logprob: -15.00426197052002
    9. '.abs' → logprob: -15.25426197052002
    10. 'd' → logprob: -15.75426197052002

Token 224: '(j' (ID: 4997)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0729045569896698
    2. '(y' → logprob: -2.947904586791992
    3. 'j' → logprob: -4.072904586791992
    4. '(j' → logprob: -7.197904586791992
    5. '(' → logprob: -10.447904586791992
    6. ' y' → logprob: -10.572904586791992
    7. 'yj' → logprob: -12.447904586791992
    8. '[y' → logprob: -12.760404586791992
    9. '	y' → logprob: -12.760404586791992
    10. 'jy' → logprob: -12.885404586791992

Token 225: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3869217336177826
    2. ' -' → logprob: -1.136921763420105
    3. ' y' → logprob: -11.011921882629395
    4. 'y' → logprob: -11.136921882629395
    5. '-y' → logprob: -11.261921882629395
    6. ' ' → logprob: -12.261921882629395
    7. ',' → logprob: -14.386921882629395
    8. ')' → logprob: -14.636921882629395
    9. '(y' → logprob: -16.136920928955078
    10. '+' → logprob: -16.261920928955078

Token 226: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011068218387663364
    2. ' y' → logprob: -4.511068344116211
    3. '	y' → logprob: -12.511068344116211
    4. '1' → logprob: -12.511068344116211
    5. 'x' → logprob: -12.761068344116211
    6. '   ' → logprob: -12.761068344116211
    7. ' ' → logprob: -12.761068344116211
    8. '  ' → logprob: -14.261068344116211
    9. ')y' → logprob: -14.386068344116211
    10. '
' → logprob: -14.511068344116211

Token 227: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.289473822107539e-05
    2. ')
' → logprob: -10.125062942504883
    3. ' )' → logprob: -11.125062942504883
    4. 'def' → logprob: -13.375062942504883
    5. ')

' → logprob: -13.500062942504883
    6. '))' → logprob: -14.125062942504883
    7. ')#' → logprob: -14.250062942504883
    8. ')d' → logprob: -14.375062942504883
    9. '')' → logprob: -14.875062942504883
    10. '   ' → logprob: -14.875062942504883

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005900867399759591
    2. 'return' → logprob: -8.125590324401855
    3. '    
' → logprob: -9.125590324401855
    4. '
' → logprob: -9.125590324401855
    5. ' return' → logprob: -9.875590324401855
    6. '<|end|>' → logprob: -12.000590324401855
    7. '```' → logprob: -12.500590324401855
    8. ')' → logprob: -12.500590324401855
    9. '	return' → logprob: -12.750590324401855
    10. ',' → logprob: -13.000590324401855

Token 229: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0048712813295423985
    2. 'return' → logprob: -5.379871368408203
    3. ' return' → logprob: -8.504871368408203
    4. 'if' → logprob: -10.254871368408203
    5. '
' → logprob: -12.254871368408203
    6. ' if' → logprob: -12.629871368408203
    7. '	return' → logprob: -13.129871368408203
    8. '    
' → logprob: -13.629871368408203
    9. 'def' → logprob: -13.879871368408203
    10. ')' → logprob: -15.379871368408203

Token 230: '3' (ID: 18)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40457823872566223
    2. '1' → logprob: -1.6545782089233398
    3. '3' → logprob: -2.77957820892334
    4. ' =' → logprob: -2.90457820892334
    5. '2' → logprob: -3.90457820892334
    6. 'return' → logprob: -6.90457820892334
    7. 'ist' → logprob: -7.40457820892334
    8. ' ' → logprob: -7.52957820892334
    9. '   ' → logprob: -7.77957820892334
    10. 'istance' → logprob: -8.02957820892334

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380416102707386
    2. '=' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.413042068481445
    4. '   ' → logprob: -16.788042068481445
    5. ' =
' → logprob: -17.913042068481445
    6. '  ' → logprob: -18.288042068481445
    7. ':' → logprob: -18.538042068481445
    8. 'd' → logprob: -18.538042068481445
    9. ' ' → logprob: -18.538042068481445
    10. ',' → logprob: -18.913042068481445

Token 232: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5234735012054443
    2. ' abs' → logprob: -0.8984735012054443
    3. '1' → logprob: -8.898473739624023
    4. '(abs' → logprob: -9.273473739624023
    5. 'min' → logprob: -10.523473739624023
    6. ' ' → logprob: -10.898473739624023
    7. 'd' → logprob: -11.273473739624023
    8. 'x' → logprob: -11.273473739624023
    9. ' min' → logprob: -11.273473739624023
    10. '   ' → logprob: -11.898473739624023

Token 233: '(y' (ID: 14684)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.09956188499927521
    2. 'x' → logprob: -3.099561929702759
    3. '(y' → logprob: -3.224561929702759
    4. '(i' → logprob: -5.09956169128418
    5. 'y' → logprob: -6.34956169128418
    6. '(' → logprob: -6.97456169128418
    7. '(j' → logprob: -6.97456169128418
    8. 'i' → logprob: -9.34956169128418
    9. 'j' → logprob: -9.59956169128418
    10. ' x' → logprob: -11.34956169128418

Token 234: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17976175248622894
    2. '-' → logprob: -1.8047617673873901
    3. ' ' → logprob: -11.42976188659668
    4. ')' → logprob: -12.80476188659668
    5. '-
' → logprob: -14.30476188659668
    6. '-i' → logprob: -14.30476188659668
    7. ' ' → logprob: -14.67976188659668
    8. ' -
' → logprob: -14.67976188659668
    9. ',' → logprob: -14.92976188659668
    10. '<|end|>' → logprob: -15.42976188659668

Token 235: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.486477792263031
    2. 'i' → logprob: -0.986477792263031
    3. ' j' → logprob: -5.111477851867676
    4. ' i' → logprob: -5.361477851867676
    5. 'x' → logprob: -7.111477851867676
    6. ')' → logprob: -7.361477851867676
    7. '   ' → logprob: -9.986477851867676
    8. ' ' → logprob: -10.611477851867676
    9. ' x' → logprob: -10.986477851867676
    10. ')i' → logprob: -10.986477851867676

Token 236: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. ' )' → logprob: -12.12501049041748
    3. ')+' → logprob: -12.25001049041748
    4. '')' → logprob: -15.75001049041748
    5. '`)' → logprob: -16.125011444091797
    6. '")' → logprob: -16.875011444091797
    7. '）' → logprob: -17.250011444091797
    8. '   ' → logprob: -17.500011444091797
    9. ']' → logprob: -17.625011444091797
    10. ')
' → logprob: -18.125011444091797

Token 237: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.062164973467588425
    2. '+' → logprob: -2.8121650218963623
    3. '   ' → logprob: -9.187165260314941
    4. ')' → logprob: -9.687165260314941
    5. ' ' → logprob: -10.812165260314941
    6. ')+' → logprob: -12.187165260314941
    7. '  ' → logprob: -13.687165260314941
    8. ' ' → logprob: -13.937165260314941
    9. ' )' → logprob: -13.937165260314941
    10. '1' → logprob: -14.062165260314941

Token 238: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005266126710921526
    2. ' ' → logprob: -5.255266189575195
    3. '+' → logprob: -10.505266189575195
    4. ' +' → logprob: -12.630266189575195
    5. '   ' → logprob: -14.630266189575195
    6. ')' → logprob: -14.755266189575195
    7. ' abs' → logprob: -15.255266189575195
    8. 'abs' → logprob: -15.755266189575195
    9. '
' → logprob: -16.130266189575195
    10. '  ' → logprob: -16.255266189575195

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5252596464706585e-05
    2. ' ' → logprob: -10.875044822692871
    3. '+' → logprob: -11.000044822692871
    4. 'abs' → logprob: -11.750044822692871
    5. '
' → logprob: -14.625044822692871
    6. '2' → logprob: -15.250044822692871
    7. ' abs' → logprob: -15.500044822692871
    8. ')' → logprob: -16.125045776367188
    9. '   ' → logprob: -16.250045776367188
    10. ' +' → logprob: -16.312545776367188

Token 240: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0429999977350235
    2. '+' → logprob: -3.1679999828338623
    3. ' ' → logprob: -14.418000221252441
    4. ' ' → logprob: -15.918000221252441
    5. ' plus' → logprob: -17.542999267578125
    6. ' +
' → logprob: -17.667999267578125
    7. '<|end|>' → logprob: -17.792999267578125
    8. '   ' → logprob: -18.292999267578125
    9. '```' → logprob: -18.417999267578125
    10. 'abs' → logprob: -18.417999267578125

Token 241: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0017049367306753993
    2. ' abs' → logprob: -6.376705169677734
    3. '(abs' → logprob: -13.001705169677734
    4. 'x' → logprob: -15.126705169677734
    5. '   ' → logprob: -16.126705169677734
    6. 'j' → logprob: -16.751705169677734
    7. '
' → logprob: -17.376705169677734
    8. ' ' → logprob: -18.001705169677734
    9. '.abs' → logprob: -18.001705169677734
    10. 'd' → logprob: -18.251705169677734

Token 242: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.03622903674840927
    2. '(x' → logprob: -3.411229133605957
    3. 'j' → logprob: -6.286229133605957
    4. '(' → logprob: -7.911229133605957
    5. '(i' → logprob: -8.536229133605957
    6. 'x' → logprob: -8.911229133605957
    7. ' (' → logprob: -12.036229133605957
    8. ' j' → logprob: -12.911229133605957
    9. '(y' → logprob: -13.161229133605957
    10. '(n' → logprob: -13.286229133605957

Token 243: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.062016312032938004
    2. '-' → logprob: -2.812016248703003
    3. ' ' → logprob: -10.062016487121582
    4. ')' → logprob: -13.562016487121582
    5. 'x' → logprob: -13.687016487121582
    6. '-x' → logprob: -13.687016487121582
    7. ' x' → logprob: -14.562016487121582
    8. ',' → logprob: -15.124516487121582
    9. ' y' → logprob: -15.312016487121582
    10. ' ' → logprob: -15.499516487121582

Token 244: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001410850090906024
    2. ' x' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.750141143798828
    4. '	x' → logprob: -15.750141143798828
    5. '(x' → logprob: -16.000141143798828
    6. '
' → logprob: -16.250141143798828
    7. ' ' → logprob: -16.250141143798828
    8. ')' → logprob: -16.375141143798828
    9. 'j' → logprob: -16.500141143798828
    10. 'y' → logprob: -16.625141143798828

Token 245: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1424973713001236e-05
    2. ')
' → logprob: -10.500031471252441
    3. ' )' → logprob: -13.125031471252441
    4. '   ' → logprob: -14.250031471252441
    5. 'def' → logprob: -14.750031471252441
    6. ')

' → logprob: -15.125031471252441
    7. '))' → logprob: -15.625031471252441
    8. ')d' → logprob: -15.875031471252441
    9. ')return' → logprob: -16.750030517578125
    10. ')#' → logprob: -16.750030517578125

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002746742684394121
    2. 'return' → logprob: -6.12774658203125
    3. ' return' → logprob: -8.62774658203125
    4. '    
' → logprob: -8.75274658203125
    5. 'd' → logprob: -8.87774658203125
    6. '
' → logprob: -10.75274658203125
    7. 'dist' → logprob: -10.87774658203125
    8. 'def' → logprob: -11.50274658203125
    9. ' distances' → logprob: -11.87774658203125
    10. '```' → logprob: -12.00274658203125

Token 247: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2521977722644806
    2. '   ' → logprob: -1.5021977424621582
    3. ' return' → logprob: -8.377198219299316
    4. '	return' → logprob: -10.877198219299316
    5. '
' → logprob: -11.752198219299316
    6. '    
' → logprob: -12.377198219299316
    7. '```' → logprob: -13.627198219299316
    8. 'eturn' → logprob: -13.752198219299316
    9. 'def' → logprob: -13.752198219299316
    10. ' ' → logprob: -14.377198219299316

Token 248: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.04859452322125435
    2. 'min' → logprob: -3.0485944747924805
    3. '	min' → logprob: -12.04859447479248
    4. '   ' → logprob: -15.17359447479248
    5. ' minimum' → logprob: -15.17359447479248
    6. ' max' → logprob: -15.29859447479248
    7. '[min' → logprob: -16.173595428466797
    8. '(min' → logprob: -16.298595428466797
    9. ' ' → logprob: -16.298595428466797
    10. 'max' → logprob: -16.548595428466797

Token 249: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -9.949026571121067e-05
    2. '(' → logprob: -9.250099182128906
    3. '(
' → logprob: -13.250099182128906
    4. '((' → logprob: -14.250099182128906
    5. '(min' → logprob: -14.250099182128906
    6. '([' → logprob: -16.000099182128906
    7. ' (' → logprob: -17.125099182128906
    8. '(distance' → logprob: -17.375099182128906
    9. 'd' → logprob: -17.625099182128906
    10. '(s' → logprob: -17.750099182128906

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018387178715784103
    2. '3' → logprob: -9.375184059143066
    3. '(' → logprob: -10.125184059143066
    4. '(
' → logprob: -11.625184059143066
    5. '(d' → logprob: -11.750184059143066
    6. ',' → logprob: -12.000184059143066
    7. '[' → logprob: -12.000184059143066
    8. '2' → logprob: -12.250184059143066
    9. '   ' → logprob: -12.250184059143066
    10. ')' → logprob: -12.500184059143066

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01214039046317339
    2. ',d' → logprob: -4.512140274047852
    3. ' ,' → logprob: -6.887140274047852
    4. ',
' → logprob: -9.637140274047852
    5. 'd' → logprob: -12.637140274047852
    6. ')' → logprob: -13.762140274047852
    7. ' ,
' → logprob: -15.512140274047852
    8. ' d' → logprob: -15.637140274047852
    9. '(d' → logprob: -15.637140274047852
    10. ',

' → logprob: -16.13714027404785

Token 252: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1426779329776764
    2. 'd' → logprob: -2.0176780223846436
    3. ' ' → logprob: -14.017678260803223
    4. '	d' → logprob: -14.392678260803223
    5. ' ' → logprob: -14.767678260803223
    6. ' 
' → logprob: -15.267678260803223
    7. '    ' → logprob: -15.517678260803223
    8. '   ' → logprob: -15.767678260803223
    9. ')d' → logprob: -15.767678260803223
    10. '
' → logprob: -17.017677307128906

Token 253: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003368926409166306
    2. '3' → logprob: -8.000336647033691
    3. '1' → logprob: -15.000336647033691
    4. '_' → logprob: -15.125336647033691
    5. ' ' → logprob: -15.125336647033691
    6. ',' → logprob: -15.625336647033691
    7. '```' → logprob: -16.500337600708008
    8. '   ' → logprob: -16.562837600708008
    9. ')' → logprob: -16.750337600708008
    10. '
' → logprob: -16.875337600708008

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012180940248072147
    2. ')' → logprob: -7.251218318939209
    3. ',d' → logprob: -7.751218318939209
    4. ' ,' → logprob: -9.75121784210205
    5. ',)' → logprob: -11.62621784210205
    6. ',
' → logprob: -12.00121784210205
    7. 'd' → logprob: -13.37621784210205
    8. ')d' → logprob: -13.87621784210205
    9. ',n' → logprob: -15.00121784210205
    10. ' )' → logprob: -15.37621784210205

Token 255: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.016035424545407295
    2. ' d' → logprob: -4.141035556793213
    3. '	d' → logprob: -15.016035079956055
    4. '   ' → logprob: -15.016035079956055
    5. ' ' → logprob: -15.391035079956055
    6. ')d' → logprob: -16.016035079956055
    7. ')' → logprob: -16.766035079956055
    8. '    ' → logprob: -16.891035079956055
    9. ' ' → logprob: -16.891035079956055
    10. '
' → logprob: -17.016035079956055

Token 256: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.8889261304575484e-06
    2. '1' → logprob: -13.500003814697266
    3. ' ' → logprob: -14.312503814697266
    4. '2' → logprob: -14.375003814697266
    5. '۳' → logprob: -14.937503814697266
    6. ')' → logprob: -15.062503814697266
    7. '٣' → logprob: -16.250003814697266
    8. '৩' → logprob: -16.312503814697266
    9. '<|end|>' → logprob: -16.625003814697266
    10. '३' → logprob: -17.000003814697266

Token 257: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.750436007976532e-05
    2. ')
' → logprob: -10.25003719329834
    3. ' )' → logprob: -13.12503719329834
    4. '}' → logprob: -17.125038146972656
    5. ')

' → logprob: -17.250038146972656
    6. ')return' → logprob: -17.375038146972656
    7. '   ' → logprob: -17.875038146972656
    8. '))' → logprob: -18.125038146972656
    9. ')#' → logprob: -18.750038146972656
    10. ')}' → logprob: -18.750038146972656

Token 258: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00020926215802319348
    2. '#' → logprob: -8.625208854675293
    3. 'for' → logprob: -11.250208854675293
    4. 'from' → logprob: -11.375208854675293
    5. 'class' → logprob: -13.625208854675293
    6. 'de' → logprob: -14.750208854675293
    7. ')' → logprob: -14.750208854675293
    8. '.' → logprob: -15.000208854675293
    9. '<|end|>' → logprob: -15.000208854675293
    10. ' def' → logprob: -15.000208854675293

Token 259: ' increment' (ID: 24032)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08840732276439667
    2. ' main' → logprob: -2.588407278060913
    3. 'solve' → logprob: -5.088407516479492
    4. 'compute' → logprob: -6.713407516479492
    5. 'process' → logprob: -7.213407516479492
    6. ' solve' → logprob: -7.588407516479492
    7. 'max' → logprob: -9.213407516479492
    8. 'calculate' → logprob: -9.338407516479492
    9. 'read' → logprob: -9.838407516479492
    10. 'find' → logprob: -9.838407516479492

Token 260: '_ans' (ID: 146254)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8586239218711853
    2. '_ans' → logprob: -1.48362398147583
    3. '(_' → logprob: -1.98362398147583
    4. '(ans' → logprob: -2.10862398147583
    5. '_answer' → logprob: -3.10862398147583
    6. '_' → logprob: -3.35862398147583
    7. '(answer' → logprob: -6.73362398147583
    8. '_value' → logprob: -6.85862398147583
    9. '(a' → logprob: -7.23362398147583
    10. '(
' → logprob: -7.35862398147583

Token 261: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.2678259611129761
    2. '(' → logprob: -1.517825961112976
    3. '[' → logprob: -4.392826080322266
    4. '(i' → logprob: -6.142826080322266
    5. '[i' → logprob: -7.142826080322266
    6. '(index' → logprob: -9.017826080322266
    7. '(answer' → logprob: -9.392826080322266
    8. '(idx' → logprob: -9.767826080322266
    9. ' (' → logprob: -10.642826080322266
    10. '(
' → logprob: -10.892826080322266

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006967080407775939
    2. ' ,' → logprob: -8.125697135925293
    3. ',i' → logprob: -8.500697135925293
    4. ',index' → logprob: -10.000697135925293
    5. '[' → logprob: -10.250697135925293
    6. '[i' → logprob: -10.250697135925293
    7. ')' → logprob: -10.625697135925293
    8. '[],' → logprob: -11.250697135925293
    9. ' ' → logprob: -12.375697135925293
    10. ',j' → logprob: -12.625697135925293

Token 263: ' dist' (ID: 3601)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0553395748138428
    2. ' i' → logprob: -1.6803395748138428
    3. ' index' → logprob: -1.9303395748138428
    4. ' idx' → logprob: -2.0553395748138428
    5. 'index' → logprob: -2.1803395748138428
    6. 'idx' → logprob: -2.8053395748138428
    7. ' pos' → logprob: -5.180339813232422
    8. 'pos' → logprob: -5.305339813232422
    9. ' indices' → logprob: -5.805339813232422
    10. 'indices' → logprob: -7.180339813232422

Token 264: '):
' (ID: 1883)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.1018751934170723
    2. ',' → logprob: -2.3518753051757812
    3. 'ances' → logprob: -6.976875305175781
    4. ' ,' → logprob: -7.976875305175781
    5. '[' → logprob: -8.976875305175781
    6. ')' → logprob: -9.351875305175781
    7. '   ' → logprob: -9.726875305175781
    8. ']' → logprob: -10.101875305175781
    9. 'ANCE' → logprob: -10.976875305175781
    10. '_,' → logprob: -11.851875305175781

Token 265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02715570665895939
    2. '[' → logprob: -4.527155876159668
    3. ' ans' → logprob: -4.902155876159668
    4. 'ans' → logprob: -5.527155876159668
    5. '(ans' → logprob: -5.527155876159668
    6. '	ans' → logprob: -8.152155876159668
    7. ':
' → logprob: -9.902155876159668
    8. '
' → logprob: -10.277155876159668
    9. ':' → logprob: -10.277155876159668
    10. '```' → logprob: -10.527155876159668

Token 266: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.16508354246616364
    2. ' ans' → logprob: -2.040083646774292
    3. '   ' → logprob: -3.915083646774292
    4. 'for' → logprob: -6.915083408355713
    5. ' for' → logprob: -7.665083408355713
    6. 'return' → logprob: -8.165083885192871
    7. '	ans' → logprob: -8.415083885192871
    8. ' return' → logprob: -9.665083885192871
    9. 'if' → logprob: -9.790083885192871
    10. '(ans' → logprob: -10.040083885192871

Token 267: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018208740220870823
    2. '+=' → logprob: -10.500182151794434
    3. ' +=' → logprob: -10.625182151794434
    4. '.append' → logprob: -10.875182151794434
    5. '[len' → logprob: -11.000182151794434
    6. '[ind' → logprob: -11.125182151794434
    7. '[
' → logprob: -11.500182151794434
    8. 'dist' → logprob: -11.625182151794434
    9. '=' → logprob: -11.875182151794434
    10. '[d' → logprob: -12.000182151794434

Token 268: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -3.4121114822482923e-06
    2. ' dist' → logprob: -12.750003814697266
    3. 'ans' → logprob: -14.750003814697266
    4. '0' → logprob: -17.000003814697266
    5. '(dist' → logprob: -17.625003814697266
    6. '	dist' → logprob: -17.750003814697266
    7. ']' → logprob: -17.875003814697266
    8. '
' → logprob: -18.375003814697266
    9. ' ' → logprob: -19.125003814697266
    10. 'd' → logprob: -19.625003814697266

Token 269: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005999305285513401
    2. ']+=' → logprob: -5.1309990882873535
    3. ' ]' → logprob: -9.755999565124512
    4. ' +=' → logprob: -12.255999565124512
    5. ']+' → logprob: -13.005999565124512
    6. '+=' → logprob: -13.130999565124512
    7. '+]' → logprob: -14.255999565124512
    8. '+' → logprob: -14.505999565124512
    9. '[' → logprob: -14.505999565124512
    10. '']' → logprob: -14.505999565124512

Token 270: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005737152881920338
    2. ' +=' → logprob: -5.3807373046875
    3. '=' → logprob: -7.1307373046875
    4. ']+=' → logprob: -8.3807373046875
    5. '+' → logprob: -9.3807373046875
    6. ' ' → logprob: -14.5057373046875
    7. '+='' → logprob: -14.8807373046875
    8. ' =' → logprob: -15.2557373046875
    9. '[' → logprob: -15.2557373046875
    10. '   ' → logprob: -15.3807373046875

Token 271: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '<|end|>' → logprob: -18.375
    4. '
' → logprob: -19.375
    5. '```' → logprob: -20.125
    6. '   ' → logprob: -20.875
    7. '۱' → logprob: -21.0
    8. '１' → logprob: -21.5
    9. '१' → logprob: -22.25
    10. '  ' → logprob: -22.4375

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '<|end|>' → logprob: -19.875
    4. '１' → logprob: -21.875
    5. '۱' → logprob: -21.875
    6. '```' → logprob: -22.0
    7. '   ' → logprob: -22.0
    8. '
' → logprob: -22.625
    9. '!' → logprob: -23.125
    10. '१' → logprob: -23.5

Token 273: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -16.125
    3. 'for' → logprob: -16.25
    4. '#' → logprob: -16.5
    5. '\' → logprob: -16.875
    6. ' def' → logprob: -17.125
    7. 'ndef' → logprob: -17.25
    8. 'n' → logprob: -18.0
    9. '```' → logprob: -18.5
    10. 'if' → logprob: -19.375

Token 275: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.005340605042874813
    2. 'main' → logprob: -5.505340576171875
    3. ' def' → logprob: -7.005340576171875
    4. ' solve' → logprob: -8.880340576171875
    5. 'def' → logprob: -9.005340576171875
    6. ' process' → logprob: -9.630340576171875
    7. ' compute' → logprob: -11.130340576171875
    8. 'solve' → logprob: -12.380340576171875
    9. ' calculate' → logprob: -13.380340576171875
    10. '	main' → logprob: -13.630340576171875

Token 276: '_pairs' (ID: 90005)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28388503193855286
    2. '(ans' → logprob: -2.1588850021362305
    3. '_' → logprob: -2.2838850021362305
    4. '_ans' → logprob: -4.0338850021362305
    5. '_main' → logprob: -5.9088850021362305
    6. '_input' → logprob: -6.1588850021362305
    7. '(_' → logprob: -6.4088850021362305
    8. '_(' → logprob: -6.6588850021362305
    9. '(input' → logprob: -7.9088850021362305
    10. ' (' → logprob: -8.03388500213623

Token 277: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07958558201789856
    2. '(' → logprob: -3.079585552215576
    3. '(i' → logprob: -3.579585552215576
    4. '():' → logprob: -6.454585552215576
    5. '(a' → logprob: -7.329585552215576
    6. '(ans' → logprob: -9.329586029052734
    7. '()' → logprob: -9.454586029052734
    8. '(N' → logprob: -9.454586029052734
    9. '(
' → logprob: -10.704586029052734
    10. '(s' → logprob: -10.829586029052734

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020971108227968216
    2. '):' → logprob: -3.8959710597991943
    3. ')' → logprob: -8.395971298217773
    4. ' ,' → logprob: -9.395971298217773
    5. ' ):' → logprob: -9.645971298217773
    6. ',n' → logprob: -10.895971298217773
    7. '):
' → logprob: -11.020971298217773
    8. ',
' → logprob: -11.895971298217773
    9. ' )' → logprob: -13.458471298217773
    10. ' ' → logprob: -13.583471298217773

Token 279: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.40482819080352783
    2. 'pairs' → logprob: -1.6548281908035278
    3. 'a' → logprob: -3.7798280715942383
    4. 'ans' → logprob: -4.029828071594238
    5. ' x' → logprob: -4.029828071594238
    6. 'arr' → logprob: -4.279828071594238
    7. 'm' → logprob: -4.279828071594238
    8. ' pairs' → logprob: -4.529828071594238
    9. 'points' → logprob: -4.654828071594238
    10. 'k' → logprob: -5.404828071594238

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.755678961984813e-05
    2. ',
' → logprob: -10.500077247619629
    3. ',y' → logprob: -10.500077247619629
    4. ' ,' → logprob: -11.000077247619629
    5. ')' → logprob: -13.000077247619629
    6. 'y' → logprob: -13.625077247619629
    7. ',

' → logprob: -14.875077247619629
    8. '),' → logprob: -15.125077247619629
    9. '):' → logprob: -15.250077247619629
    10. 's' → logprob: -15.750077247619629

Token 281: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0010524577228352427
    2. ' y' → logprob: -6.876052379608154
    3. 'x' → logprob: -11.876052856445312
    4. ' ' → logprob: -12.501052856445312
    5. '   ' → logprob: -13.251052856445312
    6. ')' → logprob: -14.188552856445312
    7. '	y' → logprob: -14.313552856445312
    8. 'j' → logprob: -14.376052856445312
    9. 'n' → logprob: -14.626052856445312
    10. '  ' → logprob: -14.938552856445312

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6935057044029236
    2. '):' → logprob: -0.6935057044029236
    3. ')' → logprob: -8.56850528717041
    4. '):
' → logprob: -9.19350528717041
    5. ' ):' → logprob: -10.69350528717041
    6. ':' → logprob: -11.44350528717041
    7. '   ' → logprob: -11.56850528717041
    8. ' ,' → logprob: -11.81850528717041
    9. ',n' → logprob: -12.56850528717041
    10. '):
' → logprob: -12.69350528717041

Token 283: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0024380928371101618
    2. ')' → logprob: -6.252438068389893
    3. ' ans' → logprob: -8.62743854522705
    4. 'z' → logprob: -9.25243854522705
    5. '   ' → logprob: -9.87743854522705
    6. '):
' → logprob: -10.25243854522705
    7. '):' → logprob: -10.62743854522705
    8. 'a' → logprob: -10.87743854522705
    9. ' )' → logprob: -11.12743854522705
    10. '	ans' → logprob: -11.37743854522705

Token 284: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05595710873603821
    2. '):
' → logprob: -2.930957078933716
    3. '):
' → logprob: -7.555957317352295
    4. ',' → logprob: -7.680957317352295
    5. ')' → logprob: -9.555956840515137
    6. ' ):' → logprob: -11.805956840515137
    7. ':' → logprob: -12.555956840515137
    8. '   ' → logprob: -12.805956840515137
    9. '):

' → logprob: -13.180956840515137
    10. '=' → logprob: -14.555956840515137

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2554369270801544
    2. ':' → logprob: -1.880436897277832
    3. ' for' → logprob: -3.755436897277832
    4. '	for' → logprob: -3.880436897277832
    5. ':
' → logprob: -4.755436897277832
    6. '<|end|>' → logprob: -5.380436897277832
    7. ',' → logprob: -5.755436897277832
    8. '
' → logprob: -5.880436897277832
    9. '```' → logprob: -6.630436897277832
    10. ' ' → logprob: -6.755436897277832

Token 286: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6941683888435364
    2. 'for' → logprob: -0.9441683888435364
    3. ' for' → logprob: -2.1941683292388916
    4. '	for' → logprob: -10.069168090820312
    5. ' ' → logprob: -12.319168090820312
    6. '    
' → logprob: -12.694168090820312
    7. '
' → logprob: -12.944168090820312
    8. '```' → logprob: -13.444168090820312
    9. 'from' → logprob: -14.319168090820312
    10. '  ' → logprob: -14.569168090820312

Token 287: ' loop' (ID: 11453)
  Prédit: ' inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inner' → logprob: -0.2791827917098999
    2. ' helper' → logprob: -1.7791827917099
    3. ' process' → logprob: -3.4041829109191895
    4. ' pair' → logprob: -4.0291829109191895
    5. ' solve' → logprob: -4.7791829109191895
    6. ' main' → logprob: -6.0291829109191895
    7. ' dfs' → logprob: -6.1541829109191895
    8. ' solution' → logprob: -6.4041829109191895
    9. ' pairs' → logprob: -6.5291829109191895
    10. 'inner' → logprob: -7.0291829109191895

Token 288: '_i' (ID: 10853)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.020127562806010246
    2. '(n' → logprob: -4.520127773284912
    3. '(' → logprob: -5.020127773284912
    4. '_' → logprob: -7.270127773284912
    5. '(k' → logprob: -7.270127773284912
    6. ':' → logprob: -8.770127296447754
    7. '(start' → logprob: -9.020127296447754
    8. '(x' → logprob: -9.270127296447754
    9. ' for' → logprob: -9.395127296447754
    10. ' i' → logprob: -9.645127296447754

Token 289: '(i' (ID: 3649)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.016233304515480995
    2. 'n' → logprob: -4.391233444213867
    3. '(' → logprob: -6.266233444213867
    4. '(range' → logprob: -7.141233444213867
    5. '(i' → logprob: -7.766233444213867
    6. 'nt' → logprob: -8.391233444213867
    7. '(start' → logprob: -9.641233444213867
    8. '():
' → logprob: -9.766233444213867
    9. 'nd' → logprob: -10.016233444213867
    10. '():' → logprob: -10.641233444213867

Token 290: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01369621604681015
    2. '):
' → logprob: -4.638696193695068
    3. ':' → logprob: -5.763696193695068
    4. ')' → logprob: -8.388696670532227
    5. '=' → logprob: -8.638696670532227
    6. ',' → logprob: -8.888696670532227
    7. ' ):' → logprob: -9.513696670532227
    8. '   ' → logprob: -9.888696670532227
    9. 'in' → logprob: -10.513696670532227
    10. ' in' → logprob: -10.888696670532227

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3016112744808197
    2. ' if' → logprob: -2.1766111850738525
    3. '   ' → logprob: -2.3016111850738525
    4. ' ' → logprob: -3.6766111850738525
    5. 'if' → logprob: -5.051611423492432
    6. '    ' → logprob: -5.176611423492432
    7. ' for' → logprob: -5.676611423492432
    8. '	if' → logprob: -6.301611423492432
    9. '	   ' → logprob: -7.051611423492432
    10. '  ' → logprob: -7.551611423492432

Token 292: ' def' (ID: 1056)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6298404335975647
    2. 'for' → logprob: -1.50484037399292
    3. '       ' → logprob: -2.12984037399292
    4. ' if' → logprob: -2.37984037399292
    5. ' for' → logprob: -3.87984037399292
    6. '   ' → logprob: -4.37984037399292
    7. ' ' → logprob: -9.004840850830078
    8. '	if' → logprob: -9.004840850830078
    9. 'def' (adapté à ' def') → logprob: -9.129840850830078
    10. '    ' → logprob: -9.379840850830078

Token 293: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.5232625007629395
    2. ' loop' → logprob: -0.8982625007629395
    3. '_loop' → logprob: -9.898262023925781
    4. 'def' → logprob: -10.898262023925781
    5. 'inner' → logprob: -11.148262023925781
    6. '(loop' → logprob: -11.398262023925781
    7. '
' → logprob: -11.648262023925781
    8. ' ' → logprob: -11.898262023925781
    9. 'lambda' → logprob: -12.273262023925781
    10. '   ' → logprob: -12.398262023925781

Token 294: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.031239574775099754
    2. 'j' → logprob: -4.0312395095825195
    3. ' j' → logprob: -4.4062395095825195
    4. '	j' → logprob: -8.53123950958252
    5. '_i' → logprob: -9.15623950958252
    6. '(j' → logprob: -9.15623950958252
    7. '   ' → logprob: -9.28123950958252
    8. ' ' → logprob: -10.03123950958252
    9. '_' → logprob: -10.03123950958252
    10. '       ' → logprob: -10.53123950958252

Token 295: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -13.250003814697266
    3. ' (' → logprob: -13.625003814697266
    4. '(i' → logprob: -14.375003814697266
    5. 'j' → logprob: -15.500003814697266
    6. '   ' → logprob: -15.625003814697266
    7. '(
' → logprob: -16.875003814697266
    8. '[j' → logprob: -17.375003814697266
    9. '(n' → logprob: -17.375003814697266
    10. '(J' → logprob: -17.500003814697266

Token 296: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47441548109054565
    2. '):
' → logprob: -0.9744154810905457
    3. '   ' → logprob: -9.59941577911377
    4. ':' → logprob: -9.84941577911377
    5. ')' → logprob: -9.97441577911377
    6. '):
' → logprob: -9.97441577911377
    7. '():
' → logprob: -10.09941577911377
    8. '       ' → logprob: -10.84941577911377
    9. ',' → logprob: -11.47441577911377
    10. ' ):' → logprob: -11.47441577911377

Token 297: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28755149245262146
    2. '<|end|>' → logprob: -1.6625515222549438
    3. '       ' → logprob: -3.1625514030456543
    4. ' ' → logprob: -5.537551403045654
    5. '        ' → logprob: -5.662551403045654
    6. ' if' → logprob: -5.912551403045654
    7. '   ' → logprob: -6.162551403045654
    8. '<|end|>' → logprob: -6.912551403045654
    9. '            ' → logprob: -7.162551403045654
    10. '               ' → logprob: -7.287551403045654

Token 298: ' dist' (ID: 3601)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18834000825881958
    2. 'if' → logprob: -2.063339948654175
    3. '               ' → logprob: -3.813339948654175
    4. '           ' → logprob: -3.938339948654175
    5. ' for' → logprob: -6.438340187072754
    6. '   ' → logprob: -7.438340187072754
    7. 'for' → logprob: -7.688340187072754
    8. '       ' → logprob: -8.813340187072754
    9. ' while' → logprob: -9.813340187072754
    10. ' return' → logprob: -9.813340187072754

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026373684406280518
    2. '=' → logprob: -3.6513736248016357
    3. ')' → logprob: -10.151373863220215
    4. ' ' → logprob: -11.526373863220215
    5. '   ' → logprob: -12.026373863220215
    6. '    ' → logprob: -12.401373863220215
    7. '  ' → logprob: -12.651373863220215
    8. ',' → logprob: -13.276373863220215
    9. ' =
' → logprob: -13.401373863220215
    10. '_' → logprob: -14.276373863220215

Token 300: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.6931490898132324
    2. 'compute' → logprob: -0.6931490898132324
    3. '.compute' → logprob: -13.94314956665039
    4. '_compute' → logprob: -14.31814956665039
    5. 'computer' → logprob: -16.56814956665039
    6. ' ' → logprob: -17.06814956665039
    7. ' computer' → logprob: -17.06814956665039
    8. '            ' → logprob: -17.19314956665039
    9. 'calculate' → logprob: -17.31814956665039
    10. '               ' → logprob: -18.19314956665039

Token 301: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.00012570773833431304
    2. '_' → logprob: -9.500125885009766
    3. '_distance' → logprob: -10.625125885009766
    4. '_m' → logprob: -11.375125885009766
    5. '_max' → logprob: -11.500125885009766
    6. '_dist' → logprob: -12.750125885009766
    7. 'min' → logprob: -13.750125885009766
    8. '_
' → logprob: -15.875125885009766
    9. '```' → logprob: -15.875125885009766
    10. '_g' → logprob: -16.000125885009766

Token 302: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -1.3544423381972592e-05
    2. 'distance' → logprob: -11.75001335144043
    3. '_dist' → logprob: -12.75001335144043
    4. '_' → logprob: -13.12501335144043
    5. 'Distance' → logprob: -14.50001335144043
    6. '_DISTANCE' → logprob: -16.75001335144043
    7. ' distance' → logprob: -17.00001335144043
    8. '_d' → logprob: -17.87501335144043
    9. 'dist' → logprob: -17.87501335144043
    10. '_difference' → logprob: -18.75001335144043

Token 303: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.314625690924004e-05
    2. '(' → logprob: -9.625073432922363
    3. '(j' → logprob: -12.000073432922363
    4. '(
' → logprob: -14.125073432922363
    5. ' (' → logprob: -16.000072479248047
    6. 'i' → logprob: -17.750072479248047
    7. '()' → logprob: -19.000072479248047
    8. '
' → logprob: -19.125072479248047
    9. '```' → logprob: -19.125072479248047
    10. '(x' → logprob: -19.250072479248047

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010004170471802354
    2. ',j' → logprob: -7.00100040435791
    3. ' ,' → logprob: -9.50100040435791
    4. ',
' → logprob: -11.25100040435791
    5. ',y' → logprob: -15.50100040435791
    6. ' ' → logprob: -15.62600040435791
    7. '           ' → logprob: -16.251001358032227
    8. '
' → logprob: -16.626001358032227
    9. '',' → logprob: -16.751001358032227
    10. '‌,' → logprob: -16.751001358032227

Token 305: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012514949776232243
    2. ' j' → logprob: -4.387515068054199
    3. 'y' → logprob: -13.2625150680542
    4. ' ' → logprob: -13.8875150680542
    5. ')' → logprob: -14.5125150680542
    6. '	j' → logprob: -14.6375150680542
    7. '
' → logprob: -14.8875150680542
    8. ' y' → logprob: -15.1375150680542
    9. '$j' → logprob: -15.5125150680542
    10. 'x' → logprob: -15.7625150680542

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019531534053385258
    2. ' ,' → logprob: -9.000195503234863
    3. ',x' → logprob: -9.875195503234863
    4. ')' → logprob: -11.750195503234863
    5. '   ' → logprob: -12.750195503234863
    6. ',
' → logprob: -13.125195503234863
    7. '           ' → logprob: -13.625195503234863
    8. ' ' → logprob: -14.500195503234863
    9. ',i' → logprob: -14.500195503234863
    10. '```' → logprob: -14.500195503234863

Token 307: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012511883862316608
    2. ' x' → logprob: -4.387511730194092
    3. '	x' → logprob: -14.13751220703125
    4. '   ' → logprob: -14.26251220703125
    5. ' ' → logprob: -14.63751220703125
    6. 'y' → logprob: -16.26251220703125
    7. '
' → logprob: -16.63751220703125
    8. '(x' → logprob: -17.01251220703125
    9. '    ' → logprob: -17.26251220703125
    10. '  ' → logprob: -17.51251220703125

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007329032756388187
    2. ',y' → logprob: -5.132328987121582
    3. ' ,' → logprob: -6.757328987121582
    4. 'y' → logprob: -8.507328987121582
    5. ' y' → logprob: -10.632328987121582
    6. ',
' → logprob: -12.632328987121582
    7. '   ' → logprob: -13.757328987121582
    8. ' ' → logprob: -14.007328987121582
    9. '```' → logprob: -14.319828987121582
    10. ')' → logprob: -14.444828987121582

Token 309: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04859009385108948
    2. ' y' → logprob: -3.0485901832580566
    3. '	y' → logprob: -13.673589706420898
    4. ' ' → logprob: -14.798589706420898
    5. ')y' → logprob: -15.548589706420898
    6. ')' → logprob: -15.673589706420898
    7. '   ' → logprob: -15.798589706420898
    8. '
' → logprob: -16.0485897064209
    9. 'x' → logprob: -16.3610897064209
    10. '    ' → logprob: -16.4860897064209

Token 310: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7588236331939697
    2. ')
' → logprob: -0.7588236331939697
    3. '           ' → logprob: -2.7588236331939697
    4. ')
' → logprob: -9.38382339477539
    5. '               ' → logprob: -9.88382339477539
    6. ')

' → logprob: -11.25882339477539
    7. ');' → logprob: -11.25882339477539
    8. '
' → logprob: -11.50882339477539
    9. '            
' → logprob: -12.75882339477539
    10. ');
' → logprob: -12.88382339477539

Token 311: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006043862085789442
    2. 'increment' → logprob: -5.131043910980225
    3. '               ' → logprob: -10.006043434143066
    4. '   ' → logprob: -11.006043434143066
    5. '                   ' → logprob: -11.131043434143066
    6. ' increment' → logprob: -11.256043434143066
    7. '<|end|>' → logprob: -11.506043434143066
    8. '       ' → logprob: -12.131043434143066
    9. '            
' → logprob: -13.006043434143066
    10. 'return' → logprob: -14.131043434143066

Token 312: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' (adapté à ' increment') → logprob: -0.006182014476507902
    2. '           ' → logprob: -5.2561821937561035
    3. ' increment' → logprob: -7.5061821937561035
    4. 'ans' → logprob: -8.006181716918945
    5. '   ' → logprob: -10.506181716918945
    6. 'inc' → logprob: -10.631181716918945
    7. 'if' → logprob: -11.881181716918945
    8. '               ' → logprob: -13.256181716918945
    9. '       ' → logprob: -13.631181716918945
    10. ' ans' → logprob: -14.256181716918945

Token 313: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -6.706686690449715e-05
    2. 'ans' → logprob: -9.625066757202148
    3. '(ans' → logprob: -14.625066757202148
    4. '_' → logprob: -16.00006675720215
    5. '_answer' → logprob: -16.25006675720215
    6. '```' → logprob: -16.62506675720215
    7. '	ans' → logprob: -17.12506675720215
    8. '
' → logprob: -17.25006675720215
    9. '_an' → logprob: -17.37506675720215
    10. ' ans' → logprob: -17.75006675720215

Token 314: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.672236824873835e-05
    2. '(' → logprob: -9.500076293945312
    3. '(
' → logprob: -13.500076293945312
    4. '(answer' → logprob: -16.000076293945312
    5. ' (' → logprob: -16.625076293945312
    6. '(an' → logprob: -16.625076293945312
    7. 'ans' → logprob: -17.125076293945312
    8. '(args' → logprob: -18.125076293945312
    9. '	ans' → logprob: -18.250076293945312
    10. '(

' → logprob: -18.625076293945312

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.350386295001954e-05
    2. ',
' → logprob: -10.000073432922363
    3. ' ,' → logprob: -10.625073432922363
    4. ')' → logprob: -14.000073432922363
    5. ',

' → logprob: -14.250073432922363
    6. '
' → logprob: -14.375073432922363
    7. '(dist' → logprob: -14.750073432922363
    8. ',
' → logprob: -15.500073432922363
    9. ',d' → logprob: -15.625073432922363
    10. '`,' → logprob: -16.00007438659668

Token 316: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.751746746478602e-05
    2. ' dist' → logprob: -10.00004768371582
    3. '(dist' → logprob: -13.25004768371582
    4. 'd' → logprob: -16.12504768371582
    5. '	dist' → logprob: -16.25004768371582
    6. ')' → logprob: -17.62504768371582
    7. '
' → logprob: -18.00004768371582
    8. '.dist' → logprob: -19.25004768371582
    9. '```' → logprob: -19.25004768371582
    10. ' ' → logprob: -19.37504768371582

Token 317: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2669914960861206
    2. ')' → logprob: -1.7669914960861206
    3. ')
' → logprob: -2.76699161529541
    4. '       ' → logprob: -8.14199161529541
    5. '               ' → logprob: -8.76699161529541
    6. ')
' → logprob: -10.26699161529541
    7. '   ' → logprob: -10.76699161529541
    8. '
' → logprob: -10.89199161529541
    9. 'return' → logprob: -10.89199161529541
    10. ' )' → logprob: -11.14199161529541

Token 318: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012188091641291976
    2. '       ' → logprob: -7.126218795776367
    3. 'return' → logprob: -8.126218795776367
    4. '               ' → logprob: -10.376218795776367
    5. ' return' → logprob: -10.376218795776367
    6. '   ' → logprob: -10.751218795776367
    7. '
' → logprob: -11.626218795776367
    8. '		' → logprob: -12.376218795776367
    9. ' if' → logprob: -12.751218795776367
    10. ' for' → logprob: -12.876218795776367

Token 319: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18562915921211243
    2. '           ' → logprob: -2.06062912940979
    3. ' for' → logprob: -3.81062912940979
    4. '<|end|>' → logprob: -4.560629367828369
    5. ' return' → logprob: -5.935629367828369
    6. 'for' (adapté à ' for') → logprob: -6.060629367828369
    7. 'return' → logprob: -6.435629367828369
    8. '   ' → logprob: -7.310629367828369
    9. '        ' → logprob: -7.310629367828369
    10. '    ' → logprob: -8.060628890991211

Token 320: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.22556257247924805
    2. 'j' → logprob: -1.600562572479248
    3. ' i' → logprob: -9.725563049316406
    4. 'i' → logprob: -10.350563049316406
    5. ' ' → logprob: -10.725563049316406
    6. '	j' → logprob: -10.850563049316406
    7. '_j' → logprob: -12.225563049316406
    8. '   ' → logprob: -12.913063049316406
    9. ' ' → logprob: -13.163063049316406
    10. '```' → logprob: -13.163063049316406

Token 321: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.632689893245697
    2. ' in' → logprob: -0.757689893245697
    3. 'import' → logprob: -10.257689476013184
    4. ' ' → logprob: -11.007689476013184
    5. 'range' → logprob: -11.757689476013184
    6. '	in' → logprob: -12.007689476013184
    7. '
' → logprob: -12.507689476013184
    8. ')' → logprob: -12.882689476013184
    9. '  ' → logprob: -13.257689476013184
    10. '   ' → logprob: -13.257689476013184

Token 322: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009785485453903675
    2. ' range' → logprob: -4.6347856521606445
    3. 'count' → logprob: -11.509785652160645
    4. '   ' → logprob: -11.509785652160645
    5. ' ' → logprob: -12.759785652160645
    6. '  ' → logprob: -13.509785652160645
    7. 'rang' → logprob: -13.634785652160645
    8. '	range' → logprob: -13.759785652160645
    9. '(range' → logprob: -14.134785652160645
    10. ')' → logprob: -14.759785652160645

Token 323: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6478964686393738
    2. '(n' → logprob: -1.0228965282440186
    3. '(' → logprob: -2.1478965282440186
    4. 'i' → logprob: -8.147896766662598
    5. 'n' → logprob: -8.897896766662598
    6. '1' → logprob: -9.147896766662598
    7. ' (' → logprob: -11.022896766662598
    8. '(len' → logprob: -11.647896766662598
    9. '(
' → logprob: -12.772896766662598
    10. ' i' → logprob: -13.022896766662598

Token 324: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2909424304962158
    2. '+' → logprob: -1.5409424304962158
    3. ' +' → logprob: -3.790942430496216
    4. ',n' → logprob: -4.290942192077637
    5. ' ,' → logprob: -6.415942192077637
    6. '+n' → logprob: -8.665942192077637
    7. 'n' → logprob: -9.540942192077637
    8. '   ' → logprob: -9.915942192077637
    9. '+,' → logprob: -10.665942192077637
    10. ' n' → logprob: -12.290942192077637

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011069540778407827
    2. 'n' → logprob: -9.625110626220703
    3. ' ' → logprob: -10.125110626220703
    4. '2' → logprob: -13.625110626220703
    5. ',' → logprob: -13.875110626220703
    6. ' n' → logprob: -14.000110626220703
    7. '
' → logprob: -14.750110626220703
    8. '   ' → logprob: -15.500110626220703
    9. '```' → logprob: -16.000110626220703
    10. '  ' → logprob: -16.625110626220703

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005779353086836636
    2. ',n' → logprob: -7.500577926635742
    3. ' ,' → logprob: -10.625577926635742
    4. 'n' → logprob: -15.625577926635742
    5. '_,' → logprob: -16.375577926635742
    6. ' n' → logprob: -17.000577926635742
    7. '(n' → logprob: -17.125577926635742
    8. '1' → logprob: -17.250577926635742
    9. '(),' → logprob: -17.250577926635742
    10. ',
' → logprob: -17.250577926635742

Token 327: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007646375801414251
    2. ' n' → logprob: -4.882646560668945
    3. '   ' → logprob: -10.257646560668945
    4. '	n' → logprob: -12.507646560668945
    5. '    ' → logprob: -13.882646560668945
    6. ' ' → logprob: -15.757646560668945
    7. '       ' → logprob: -15.882646560668945
    8. '(n' → logprob: -16.382646560668945
    9. 'len' → logprob: -16.757646560668945
    10. '  ' → logprob: -16.757646560668945

Token 328: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029811009764671326
    2. '):
' → logprob: -3.529810905456543
    3. ')' → logprob: -11.154810905456543
    4. ':' → logprob: -11.279810905456543
    5. '):
' → logprob: -11.279810905456543
    6. '       ' → logprob: -11.904810905456543
    7. ' ):' → logprob: -12.279810905456543
    8. '():' → logprob: -12.779810905456543
    9. ',' → logprob: -12.779810905456543
    10. '   ' → logprob: -13.404810905456543

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015171525068581104
    2. 'n' → logprob: -4.640171527862549
    3. ')' → logprob: -6.390171527862549
    4. 'def' → logprob: -6.515171527862549
    5. '):
' → logprob: -7.265171527862549
    6. '):' → logprob: -7.640171527862549
    7. ' ' → logprob: -7.890171527862549
    8. '   ' → logprob: -8.26517105102539
    9. 'i' → logprob: -9.14017105102539
    10. '  ' → logprob: -9.76517105102539

Token 330: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06242450326681137
    2. '):
' → logprob: -2.812424421310425
    3. ':' → logprob: -7.937424659729004
    4. ')' → logprob: -10.562424659729004
    5. ',' → logprob: -10.937424659729004
    6. ' ):' → logprob: -10.937424659729004
    7. '       ' → logprob: -11.437424659729004
    8. '):
' → logprob: -11.437424659729004
    9. '():' → logprob: -12.312424659729004
    10. ':
' → logprob: -12.812424659729004

Token 331: '           ' (ID: 352)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.8021837472915649
    2. ' loop' → logprob: -1.302183747291565
    3. '           ' → logprob: -1.427183747291565
    4. 'loop' → logprob: -3.6771836280822754
    5. '(loop' → logprob: -4.802183628082275
    6. '
' → logprob: -5.677183628082275
    7. '	       ' → logprob: -6.927183628082275
    8. '	' → logprob: -7.427183628082275
    9. ',' → logprob: -9.052184104919434
    10. '		   ' → logprob: -9.302184104919434

Token 332: ' loop' (ID: 11453)
  Prédit: ' loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loop' → logprob: -0.07386229187250137
    2. 'loop' (adapté à ' loop') → logprob: -2.698862314224243
    3. '           ' → logprob: -5.573862075805664
    4. '       ' → logprob: -9.698862075805664
    5. '(loop' → logprob: -10.948862075805664
    6. '   ' → logprob: -11.198862075805664
    7. '        ' → logprob: -11.573862075805664
    8. ' ' → logprob: -11.823862075805664
    9. '               ' → logprob: -13.198862075805664
    10. '.loop' → logprob: -13.573862075805664

Token 333: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00014656837447546422
    2. '_i' → logprob: -8.875146865844727
    3. '_' → logprob: -12.000146865844727
    4. 'j' → logprob: -15.000146865844727
    5. ' _' → logprob: -17.625146865844727
    6. '_js' → logprob: -18.000146865844727
    7. '_
' → logprob: -18.125146865844727
    8. '_t' → logprob: -18.500146865844727
    9. '_x' → logprob: -18.750146865844727
    10. '```' → logprob: -18.750146865844727

Token 334: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.001507601235061884
    2. '(' → logprob: -6.501507759094238
    3. '(
' → logprob: -12.876507759094238
    4. '(i' → logprob: -13.501507759094238
    5. '((' → logprob: -14.501507759094238
    6. 'j' → logprob: -15.001507759094238
    7. '(n' → logprob: -15.626507759094238
    8. '()' → logprob: -16.501506805419922
    9. ' (' → logprob: -16.876506805419922
    10. '(s' → logprob: -16.876506805419922

Token 335: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012083302717655897
    2. ')
' → logprob: -7.376208305358887
    3. '<|end|>' → logprob: -7.501208305358887
    4. '       ' → logprob: -11.251208305358887
    5. '   ' → logprob: -12.251208305358887
    6. ')return' → logprob: -12.501208305358887
    7. '<|end|>' → logprob: -12.751208305358887
    8. ' )' → logprob: -13.876208305358887
    9. ')

' → logprob: -14.376208305358887
    10. '
' → logprob: -14.501208305358887

Token 336: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.21827930212020874
    2. ' for' → logprob: -1.7182793617248535
    3. '   ' → logprob: -4.0932793617248535
    4. ' ' → logprob: -10.718278884887695
    5. 'def' → logprob: -11.093278884887695
    6. '	for' → logprob: -13.718278884887695
    7. '  ' → logprob: -14.718278884887695
    8. 'return' → logprob: -15.218278884887695
    9. '
' → logprob: -15.218278884887695
    10. ' def' → logprob: -15.718278884887695

Token 338: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16023163497447968
    2. 'i' → logprob: -1.910231590270996
    3. '	i' → logprob: -12.035231590270996
    4. '_i' → logprob: -14.035231590270996
    5. ' ' → logprob: -15.285231590270996
    6. '   ' → logprob: -15.660231590270996
    7. ' ' → logprob: -15.910231590270996
    8. '```' → logprob: -16.535232543945312
    9. '`' → logprob: -16.660232543945312
    10. '(i' → logprob: -17.160232543945312

Token 339: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03368707746267319
    2. 'in' → logprob: -3.408687114715576
    3. ' ' → logprob: -10.283686637878418
    4. 'n' → logprob: -12.533686637878418
    5. ',' → logprob: -14.408686637878418
    6. 'range' → logprob: -14.783686637878418
    7. 'import' → logprob: -14.908686637878418
    8. ' i' → logprob: -15.158686637878418
    9. 'In' → logprob: -15.283686637878418
    10. '	in' → logprob: -15.408686637878418

Token 340: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038044705986976624
    2. ' range' → logprob: -3.2880446910858154
    3. '(range' → logprob: -13.038044929504395
    4. '	range' → logprob: -14.288044929504395
    5. ' ' → logprob: -15.163044929504395
    6. '   ' → logprob: -16.163043975830078
    7. ')' → logprob: -17.163043975830078
    8. '  ' → logprob: -17.788043975830078
    9. 'rang' → logprob: -18.288043975830078
    10. ' xrange' → logprob: -18.538043975830078

Token 341: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2471589798224159e-05
    2. '1' → logprob: -11.500012397766113
    3. '(n' → logprob: -13.250012397766113
    4. '(
' → logprob: -15.000012397766113
    5. ' (' → logprob: -15.750012397766113
    6. 'n' → logprob: -18.75001335144043
    7. ' ' → logprob: -18.87501335144043
    8. '(

' → logprob: -20.00001335144043
    9. '(-' → logprob: -21.62501335144043
    10. '(
' → logprob: -21.75001335144043

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018280261429026723
    2. ' ' → logprob: -9.12518310546875
    3. 'n' → logprob: -9.87518310546875
    4. '(' → logprob: -11.12518310546875
    5. '   ' → logprob: -12.00018310546875
    6. '    ' → logprob: -14.87518310546875
    7. ' n' → logprob: -15.37518310546875
    8. '(n' → logprob: -15.50018310546875
    9. '  ' → logprob: -16.00018310546875
    10. '0' → logprob: -16.12518310546875

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028266964363865554
    2. ',n' → logprob: -8.375282287597656
    3. ' ,' → logprob: -10.000282287597656
    4. ',
' → logprob: -12.375282287597656
    5. 'n' → logprob: -13.000282287597656
    6. '```' → logprob: -16.750282287597656
    7. '(n' → logprob: -17.625282287597656
    8. ',

' → logprob: -17.750282287597656
    9. '‌,' → logprob: -17.875282287597656
    10. '
' → logprob: -18.250282287597656

Token 344: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006715728435665369
    2. ' n' → logprob: -5.006715774536133
    3. '	n' → logprob: -15.756715774536133
    4. '   ' → logprob: -16.381715774536133
    5. '<|end|>' → logprob: -16.381715774536133
    6. ')n' → logprob: -17.631715774536133
    7. ' ' → logprob: -17.881715774536133
    8. '(n' → logprob: -18.131715774536133
    9. '_n' → logprob: -18.881715774536133
    10. '```' → logprob: -19.631715774536133

Token 345: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008242090232670307
    2. '):' → logprob: -5.133242130279541
    3. ' +' → logprob: -6.383242130279541
    4. '):
' → logprob: -7.633242130279541
    5. ' ):' → logprob: -9.883241653442383
    6. '   ' → logprob: -10.133241653442383
    7. ')' → logprob: -10.758241653442383
    8. '
' → logprob: -12.008241653442383
    9. '+
' → logprob: -12.258241653442383
    10. ' ):
' → logprob: -12.758241653442383

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01016140915453434
    2. '   ' → logprob: -5.385161399841309
    3. ' loop' → logprob: -5.385161399841309
    4. 'loop' → logprob: -7.010161399841309
    5. ' ' → logprob: -11.260161399841309
    6. '    ' → logprob: -12.010161399841309
    7. '     ' → logprob: -12.260161399841309
    8. '      ' → logprob: -12.385161399841309
    9. '(loop' → logprob: -12.385161399841309
    10. '           ' → logprob: -12.885161399841309

Token 347: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' (adapté à ' loop') → logprob: -0.2263300120830536
    2. ' loop' → logprob: -1.601330041885376
    3. '       ' → logprob: -7.351329803466797
    4. '   ' → logprob: -8.226329803466797
    5. ' ' → logprob: -12.976329803466797
    6. '(loop' → logprob: -13.101329803466797
    7. '    ' → logprob: -13.601329803466797
    8. '
' → logprob: -14.601329803466797
    9. '  ' → logprob: -14.726329803466797
    10. '.loop' → logprob: -15.351329803466797

Token 348: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.2664456789934775e-06
    2. 'i' → logprob: -13.625000953674316
    3. '_' → logprob: -19.500001907348633
    4. '_j' → logprob: -19.750001907348633
    5. '(i' → logprob: -21.500001907348633
    6. '[i' → logprob: -21.625001907348633
    7. '	i' → logprob: -21.750001907348633
    8. '_a' → logprob: -22.000001907348633
    9. '­i' → logprob: -22.250001907348633
    10. '_t' → logprob: -22.500001907348633

Token 349: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.127333340875339e-06
    2. '(' → logprob: -12.500003814697266
    3. 'i' → logprob: -15.500003814697266
    4. '(n' → logprob: -17.375003814697266
    5. '<|end|>' → logprob: -18.000003814697266
    6. '(
' → logprob: -18.125003814697266
    7. '[i' → logprob: -18.375003814697266
    8. ' (' → logprob: -18.750003814697266
    9. '(x' → logprob: -19.625003814697266
    10. '(in' → logprob: -19.750003814697266

Token 350: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -12.750003814697266
    3. '<|end|>' → logprob: -15.000003814697266
    4. ' )' → logprob: -16.125003814697266
    5. '())' → logprob: -16.625003814697266
    6. ')return' → logprob: -16.875003814697266
    7. ')n' → logprob: -17.125003814697266
    8. '))' → logprob: -17.375003814697266
    9. ')#' → logprob: -17.500003814697266
    10. ')

' → logprob: -17.875003814697266

Token 351: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.47407791018486023
    2. ' main' → logprob: -0.9740779399871826
    3. '_main' → logprob: -15.349078178405762
    4. 'solve' → logprob: -15.474078178405762
    5. '	main' → logprob: -15.974078178405762
    6. 'process' → logprob: -16.099077224731445
    7. ' solve' → logprob: -16.224077224731445
    8. 'm' → logprob: -16.474077224731445
    9. '__' → logprob: -17.849077224731445
    10. ' process' → logprob: -18.349077224731445

Token 353: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.0199683029204607
    2. '_answer' → logprob: -5.019968509674072
    3. '_' → logprob: -5.394968509674072
    4. '_result' → logprob: -6.019968509674072
    5. '_results' → logprob: -6.144968509674072
    6. '("_' → logprob: -6.769968509674072
    7. '_answers' → logprob: -6.894968509674072
    8. '('_' → logprob: -7.394968509674072
    9. '(_' → logprob: -8.144968032836914
    10. '_(' → logprob: -8.519968032836914

Token 354: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.003642119001597166
    2. '(' → logprob: -5.7536420822143555
    3. '_(' → logprob: -7.8786420822143555
    4. '(_' → logprob: -11.378642082214355
    5. '(answer' → logprob: -11.503642082214355
    6. '("("' → logprob: -11.503642082214355
    7. '(n' → logprob: -12.003642082214355
    8. ' (' → logprob: -12.253642082214355
    9. '_' → logprob: -12.378642082214355
    10. '(len' → logprob: -12.503642082214355

Token 355: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47668230533599854
    2. '):
' → logprob: -0.9766823053359985
    3. ')' → logprob: -6.851682186126709
    4. '()' → logprob: -7.476682186126709
    5. '():
' → logprob: -7.726682186126709
    6. '():' → logprob: -7.976682186126709
    7. '):
' → logprob: -8.851682662963867
    8. '()):
' → logprob: -10.101682662963867
    9. ' ):' → logprob: -12.476682662963867
    10. ')
' → logprob: -13.851682662963867

Token 356: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4530661106109619
    2. '   ' → logprob: -1.703066110610962
    3. ' for' → logprob: -1.703066110610962
    4. 'def' → logprob: -9.953065872192383
    5. 'print' → logprob: -10.828065872192383
    6. ' print' → logprob: -12.453065872192383
    7. '```' → logprob: -13.703065872192383
    8. ' ' → logprob: -14.078065872192383
    9. ' def' → logprob: -14.328065872192383
    10. '
' → logprob: -14.578065872192383

Token 357: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.215330409351736e-05
    2. 'print' → logprob: -10.250041961669922
    3. '   ' → logprob: -12.500041961669922
    4. ' for' → logprob: -12.750041961669922
    5. 'def' (adapté à ' def') → logprob: -19.625041961669922
    6. 'p' → logprob: -20.125041961669922
    7. '	for' → logprob: -20.125041961669922
    8. ' ' → logprob: -21.375041961669922
    9. '    
' → logprob: -21.375041961669922
    10. '
' → logprob: -22.375041961669922

Token 358: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.33066582679748535
    2. ' _' → logprob: -2.0806658267974854
    3. ' inner' → logprob: -2.8306658267974854
    4. ' loop' → logprob: -3.7056658267974854
    5. ' main' → logprob: -4.080665588378906
    6. ' printer' → logprob: -4.830665588378906
    7. ' line' → logprob: -4.830665588378906
    8. ' pprint' → logprob: -4.955665588378906
    9. ' output' → logprob: -5.330665588378906
    10. '_' → logprob: -5.330665588378906

Token 359: '_entry' (ID: 20857)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6482732892036438
    2. '_' → logprob: -1.273273229598999
    3. '(' → logprob: -2.148273229598999
    4. '_line' → logprob: -3.523273229598999
    5. '(line' → logprob: -4.398273468017578
    6. '_(' → logprob: -4.523273468017578
    7. 'line' → logprob: -5.148273468017578
    8. '(ans' → logprob: -5.523273468017578
    9. '(len' → logprob: -5.898273468017578
    10. '_ans' → logprob: -6.023273468017578

Token 360: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01797035150229931
    2. '(k' → logprob: -4.517970561981201
    3. '(idx' → logprob: -6.267970561981201
    4. '(d' → logprob: -6.392970561981201
    5. '(dist' → logprob: -6.392970561981201
    6. '(index' → logprob: -7.017970561981201
    7. '(value' → logprob: -8.517970085144043
    8. '(' → logprob: -9.017970085144043
    9. '(n' → logprob: -9.017970085144043
    10. '(x' → logprob: -9.267970085144043

Token 361: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019297819584608078
    2. ',' → logprob: -4.5192975997924805
    3. '):
' → logprob: -5.1442975997924805
    4. ')' → logprob: -6.5192975997924805
    5. '(i' → logprob: -7.3942975997924805
    6. '(' → logprob: -9.51929759979248
    7. '):
' → logprob: -10.01929759979248
    8. ':' → logprob: -10.26929759979248
    9. '   ' → logprob: -10.39429759979248
    10. ')(' → logprob: -10.76929759979248

Token 362: ' a' (ID: 261)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.49917593598365784
    2. 'value' → logprob: -1.7491759061813354
    3. 'ans' → logprob: -2.499176025390625
    4. ' val' → logprob: -3.624176025390625
    5. ')' → logprob: -3.874176025390625
    6. 'v' → logprob: -3.874176025390625
    7. '):' → logprob: -4.374176025390625
    8. 'count' → logprob: -4.374176025390625
    9. 'n' → logprob: -4.749176025390625
    10. ' value' → logprob: -4.749176025390625

Token 363: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43060266971588135
    2. '):
' → logprob: -1.0556026697158813
    3. 'ns' → logprob: -6.555602550506592
    4. 'n' → logprob: -8.55560302734375
    5. '):

' → logprob: -8.68060302734375
    6. 'nt' → logprob: -10.30560302734375
    7. 's' → logprob: -10.68060302734375
    8. '):
' → logprob: -10.93060302734375
    9. 'ss' → logprob: -12.18060302734375
    10. 'r' → logprob: -12.18060302734375

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047368707600980997
    2. '   ' → logprob: -7.875473499298096
    3. ' for' → logprob: -10.625473976135254
    4. 'print' → logprob: -11.625473976135254
    5. ':' → logprob: -11.750473976135254
    6. '     ' → logprob: -11.750473976135254
    7. 'for' → logprob: -12.000473976135254
    8. '           ' → logprob: -12.000473976135254
    9. '      ' → logprob: -12.250473976135254
    10. ',' → logprob: -12.375473976135254

Token 365: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.034343503415584564
    2. '   ' → logprob: -3.5343434810638428
    3. ' print' → logprob: -5.909343719482422
    4. '       ' → logprob: -6.409343719482422
    5. 'for' → logprob: -9.284343719482422
    6. 'if' (adapté à ' if') → logprob: -10.034343719482422
    7. '           ' → logprob: -10.159343719482422
    8. '	print' → logprob: -11.034343719482422
    9. ' ' → logprob: -11.409343719482422
    10. 'pr' → logprob: -12.284343719482422

Token 366: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7893875241279602
    2. 'a' → logprob: -1.6643874645233154
    3. 'i' → logprob: -1.6643874645233154
    4. ' a' → logprob: -1.7893874645233154
    5. ' ' → logprob: -9.414387702941895
    6. ' not' → logprob: -10.289387702941895
    7. ' True' → logprob: -11.164387702941895
    8. 'True' → logprob: -11.539387702941895
    9. '	i' → logprob: -11.789387702941895
    10. ' isinstance' → logprob: -11.789387702941895

Token 367: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.2850584983825684
    2. '<=' → logprob: -1.7850584983825684
    3. '==' → logprob: -2.1600584983825684
    4. ' <=' → logprob: -2.1600584983825684
    5. ' <' → logprob: -2.6600584983825684
    6. '<' → logprob: -2.6600584983825684
    7. ' >' → logprob: -2.9100584983825684
    8. ' ==' → logprob: -3.0350584983825684
    9. '>=' → logprob: -3.0350584983825684
    10. ' >=' → logprob: -3.7850584983825684

Token 368: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4192627966403961
    2. '1' → logprob: -1.6692627668380737
    3. 'len' → logprob: -1.9192627668380737
    4. ' ' → logprob: -5.169262886047363
    5. ' len' → logprob: -7.294262886047363
    6. 'INF' → logprob: -7.544262886047363
    7. 'None' → logprob: -9.419262886047363
    8. '2' → logprob: -9.919262886047363
    9. 'n' → logprob: -10.106762886047363
    10. '
' → logprob: -10.169262886047363

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5002230405807495
    2. 'len' → logprob: -1.2502230405807495
    3. '1' → logprob: -2.250223159790039
    4. ' ' → logprob: -7.375223159790039
    5. ' len' → logprob: -8.000223159790039
    6. 'a' → logprob: -8.625223159790039
    7. '(len' → logprob: -8.750223159790039
    8. 'i' → logprob: -9.125223159790039
    9. 'n' → logprob: -9.250223159790039
    10. '2' → logprob: -10.125223159790039

Token 370: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6426442861557007
    2. ':
' → logprob: -0.8926442861557007
    3. ':return' → logprob: -3.0176444053649902
    4. '           ' → logprob: -4.76764440536499
    5. ' or' → logprob: -5.64264440536499
    6. '       ' → logprob: -6.01764440536499
    7. '   ' → logprob: -7.51764440536499
    8. 'return' → logprob: -8.142643928527832
    9. ':
' → logprob: -8.892643928527832
    10. ' and' → logprob: -10.142643928527832

Token 371: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03024676814675331
    2. ' return' → logprob: -3.6552467346191406
    3. 'return' → logprob: -5.655246734619141
    4. '       ' → logprob: -8.28024673461914
    5. '   ' → logprob: -9.15524673461914
    6. ' pass' → logprob: -10.53024673461914
    7. '	       ' → logprob: -11.15524673461914
    8. '	return' → logprob: -11.65524673461914
    9. 'pass' → logprob: -12.40524673461914
    10. ' ' → logprob: -12.40524673461914

Token 372: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0759233832359314
    2. ' return' → logprob: -2.950923442840576
    3. '   ' → logprob: -4.575923442840576
    4. 'print' → logprob: -5.325923442840576
    5. '       ' → logprob: -5.825923442840576
    6. 'pass' → logprob: -6.200923442840576
    7. '           ' → logprob: -8.200922966003418
    8. ' pass' → logprob: -8.825922966003418
    9. ' print' → logprob: -9.200922966003418
    10. ' ' → logprob: -10.450922966003418

Token 373: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0061156596057116985
    2. 'for' → logprob: -5.881115436553955
    3. 'None' → logprob: -6.381115436553955
    4. ' for' → logprob: -7.756115436553955
    5. 'print' → logprob: -8.256115913391113
    6. '\n' → logprob: -8.256115913391113
    7. '   ' → logprob: -8.381115913391113
    8. ' None' → logprob: -8.631115913391113
    9. ''\' → logprob: -9.631115913391113
    10. '    
' → logprob: -10.381115913391113

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018460556166246533
    2. '   ' → logprob: -7.626845836639404
    3. ' for' → logprob: -8.126846313476562
    4. 'print' → logprob: -8.376846313476562
    5. '<|end|>' → logprob: -9.001846313476562
    6. '	' → logprob: -9.126846313476562
    7. ' print' → logprob: -9.251846313476562
    8. '        
' → logprob: -9.251846313476562
    9. '
' → logprob: -9.376846313476562
    10. '    
' → logprob: -9.626846313476562

Token 375: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.7422310709953308
    2. '   ' → logprob: -0.8672310709953308
    3. '       ' → logprob: -2.7422311305999756
    4. ' print' → logprob: -3.2422311305999756
    5. ' for' → logprob: -9.992231369018555
    6. '    
' → logprob: -10.117231369018555
    7. '	print' → logprob: -10.242231369018555
    8. 'for' → logprob: -10.367231369018555
    9. '    ' → logprob: -10.617231369018555
    10. '           ' → logprob: -10.742231369018555

Token 376: '(a' (ID: 6271)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.06219958886504173
    2. '(a' → logprob: -2.812199592590332
    3. '(' → logprob: -8.812199592590332
    4. '(f' → logprob: -9.437199592590332
    5. 'a' → logprob: -14.062199592590332
    6. '((' → logprob: -14.062199592590332
    7. 'i' → logprob: -14.187199592590332
    8. '(ans' → logprob: -14.812199592590332
    9. '()' → logprob: -15.562199592590332
    10. '('' → logprob: -16.437198638916016

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.900034299585968e-05
    2. ')i' → logprob: -10.125088691711426
    3. ',' → logprob: -11.250088691711426
    4. ',i' → logprob: -12.000088691711426
    5. '(i' → logprob: -12.125088691711426
    6. ' )' → logprob: -12.375088691711426
    7. '[i' → logprob: -12.500088691711426
    8. ')
' → logprob: -12.625088691711426
    9. ',end' → logprob: -12.625088691711426
    10. '())' → logprob: -13.000088691711426

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5143464803695679
    2. ' for' → logprob: -1.5143464803695679
    3. 'for' → logprob: -1.8893464803695679
    4. 'def' → logprob: -3.6393465995788574
    5. '<|end|>' → logprob: -6.014346599578857
    6. '
' → logprob: -7.389346599578857
    7. ' def' → logprob: -7.514346599578857
    8. '```' → logprob: -8.2643461227417
    9. ' ' → logprob: -8.6393461227417
    10. '<|end|>' → logprob: -8.8893461227417

Token 379: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02598673850297928
    2. ' for' → logprob: -3.900986671447754
    3. '   ' → logprob: -5.275986671447754
    4. 'def' → logprob: -8.150986671447754
    5. ' ' → logprob: -11.400986671447754
    6. '
' → logprob: -12.275986671447754
    7. '```' → logprob: -12.275986671447754
    8. '	for' → logprob: -12.775986671447754
    9. '    
' → logprob: -12.900986671447754
    10. '`' → logprob: -14.275986671447754

Token 380: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002812124788761139
    2. ' i' → logprob: -5.877811908721924
    3. 'idx' → logprob: -12.752812385559082
    4. 'index' → logprob: -13.627812385559082
    5. 'a' → logprob: -13.877812385559082
    6. '	i' → logprob: -14.502812385559082
    7. '   ' → logprob: -14.752812385559082
    8. 'entry' → logprob: -15.502812385559082
    9. ' ' → logprob: -15.502812385559082
    10. '_,' → logprob: -15.627812385559082

Token 381: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.546251654624939
    2. ',' → logprob: -1.046251654624939
    3. 'in' → logprob: -2.6712517738342285
    4. ' ,' → logprob: -7.7962517738342285
    5. ',in' → logprob: -10.54625129699707
    6. 'range' → logprob: -11.79625129699707
    7. ' ' → logprob: -12.17125129699707
    8. ',
' → logprob: -12.54625129699707
    9. '	in' → logprob: -13.04625129699707
    10. 'n' → logprob: -13.29625129699707

Token 382: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00023059594968799502
    2. ' a' → logprob: -8.37523078918457
    3. '	a' → logprob: -17.25023078918457
    4. '<|end|>' → logprob: -18.12523078918457
    5. '_a' → logprob: -19.62523078918457
    6. '   ' → logprob: -20.37523078918457
    7. 'ans' → logprob: -20.87523078918457
    8. '  ' → logprob: -21.25023078918457
    9. '#a' → logprob: -21.37523078918457
    10. 'а' → logprob: -21.37523078918457

Token 383: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25193527340888977
    2. ' in' → logprob: -1.5019352436065674
    3. ',' → logprob: -13.126935005187988
    4. ' ' → logprob: -13.626935005187988
    5. '	in' → logprob: -13.751935005187988
    6. 'import' → logprob: -15.001935005187988
    7. ')' → logprob: -15.251935005187988
    8. 's' → logprob: -15.501935005187988
    9. ',in' → logprob: -15.501935005187988
    10. '
' → logprob: -16.126935958862305

Token 384: ' zip' (ID: 16216)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.014163863845169544
    2. ' enumerate' → logprob: -4.264163970947266
    3. '```' → logprob: -16.139163970947266
    4. 'enum' → logprob: -16.764163970947266
    5. 'zip' → logprob: -17.264163970947266
    6. '
' → logprob: -17.389163970947266
    7. 'en' → logprob: -18.264163970947266
    8. '

' → logprob: -18.514163970947266
    9. '   ' → logprob: -18.514163970947266
    10. '`' → logprob: -18.764163970947266

Token 385: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -4.35837464465294e-05
    2. 'range' → logprob: -10.125043869018555
    3. '(' → logprob: -12.625043869018555
    4. ' range' → logprob: -16.875043869018555
    5. '(count' → logprob: -17.125043869018555
    6. '(list' → logprob: -17.250043869018555
    7. '(
' → logprob: -17.875043869018555
    8. '   ' → logprob: -18.500043869018555
    9. '	range' → logprob: -18.875043869018555
    10. '
' → logprob: -19.500043869018555

Token 386: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020556485280394554
    2. '(len' → logprob: -3.8955564498901367
    3. 'len' → logprob: -11.770556449890137
    4. '1' → logprob: -12.020556449890137
    5. ' (' → logprob: -14.395556449890137
    6. ' len' → logprob: -16.770557403564453
    7. '```' → logprob: -16.895557403564453
    8. ' ' → logprob: -17.145557403564453
    9. '(
' → logprob: -17.270557403564453
    10. ',len' → logprob: -17.395557403564453

Token 387: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.5048530030981055e-06
    2. 'ans' → logprob: -13.500001907348633
    3. '(' → logprob: -16.875001907348633
    4. '(an' → logprob: -17.125001907348633
    5. '	ans' → logprob: -17.625001907348633
    6. ' ans' → logprob: -17.875001907348633
    7. '(
' → logprob: -18.875001907348633
    8. '(answer' → logprob: -19.125001907348633
    9. '(a' → logprob: -19.500001907348633
    10. ',' → logprob: -19.625001907348633

Token 388: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -7.76759916334413e-05
    2. ' ),' → logprob: -9.875077247619629
    3. ')' → logprob: -11.250077247619629
    4. '()),' → logprob: -11.625077247619629
    5. '   ' → logprob: -13.500077247619629
    6. ' ' → logprob: -14.625077247619629
    7. '[' → logprob: -15.000077247619629
    8. '),
' → logprob: -15.125077247619629
    9. ',' → logprob: -15.250077247619629
    10. ')),' → logprob: -15.250077247619629

Token 389: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4741133749485016
    2. 'ans' → logprob: -0.9741133451461792
    3. '(ans' → logprob: -10.724113464355469
    4. '	ans' → logprob: -11.224113464355469
    5. '   ' → logprob: -14.474113464355469
    6. '_ans' → logprob: -15.099113464355469
    7. '    ' → logprob: -16.97411346435547
    8. 'answer' → logprob: -17.09911346435547
    9. ' ' → logprob: -17.34911346435547
    10. 'an' → logprob: -17.72411346435547

Token 390: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2838610112667084
    2. '):
' → logprob: -1.4088610410690308
    3. ',' → logprob: -6.03386116027832
    4. '):
' → logprob: -9.15886116027832
    5. ' ):' → logprob: -9.40886116027832
    6. ')' → logprob: -9.53386116027832
    7. '   ' → logprob: -10.90886116027832
    8. ' ):
' → logprob: -11.53386116027832
    9. '):

' → logprob: -12.03386116027832
    10. '),' → logprob: -12.40886116027832

Token 391: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7250632047653198
    2. ':' → logprob: -1.1000632047653198
    3. '       ' → logprob: -2.6000633239746094
    4. '):
' → logprob: -3.1000633239746094
    5. '():' → logprob: -3.7250633239746094
    6. ':
' → logprob: -4.225063323974609
    7. ',' → logprob: -4.975063323974609
    8. '():
' → logprob: -5.100063323974609
    9. '   ' → logprob: -5.725063323974609
    10. '<|end|>' → logprob: -6.225063323974609

Token 392: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0032368937972933054
    2. ' print' → logprob: -5.753236770629883
    3. '   ' → logprob: -9.753236770629883
    4. ' ' → logprob: -14.628236770629883
    5. '  ' → logprob: -15.378236770629883
    6. '	print' → logprob: -15.378236770629883
    7. '       ' → logprob: -16.003236770629883
    8. '
' → logprob: -17.003236770629883
    9. 'if' → logprob: -17.378236770629883
    10. '(print' → logprob: -18.003236770629883

Token 393: '_entry' (ID: 20857)
  Prédit: '_entry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_entry' → logprob: -0.002613944001495838
    2. '(a' → logprob: -7.0026140213012695
    3. '_ans' → logprob: -7.2526140213012695
    4. '_' → logprob: -7.7526140213012695
    5. 'entry' → logprob: -8.00261402130127
    6. '_ent' → logprob: -10.00261402130127
    7. '(entry' → logprob: -10.00261402130127
    8. '(' → logprob: -10.62761402130127
    9. '(_' → logprob: -11.25261402130127
    10. '(i' → logprob: -11.25261402130127

Token 394: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.375000953674316
    3. ' (' → logprob: -17.0
    4. 'i' → logprob: -17.75
    5. '(
' → logprob: -18.0
    6. '```' → logprob: -19.75
    7. '
' → logprob: -20.75
    8. '`' → logprob: -21.375
    9. '((' → logprob: -21.375
    10. '()' → logprob: -21.5

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03378642722964287
    2. ',a' → logprob: -3.4087865352630615
    3. ' ,' → logprob: -9.03378677368164
    4. 'a' → logprob: -11.53378677368164
    5. ',
' → logprob: -12.40878677368164
    6. ')' → logprob: -12.65878677368164
    7. ',i' → logprob: -13.15878677368164
    8. ',)' → logprob: -13.90878677368164
    9. '   ' → logprob: -15.40878677368164
    10. ' ' → logprob: -15.53378677368164

Token 396: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -8.494741632603109e-05
    2. ' a' → logprob: -9.37508487701416
    3. '	a' → logprob: -18.250085830688477
    4. ')a' → logprob: -18.750085830688477
    5. '   ' → logprob: -19.375085830688477
    6. '_a' → logprob: -19.750085830688477
    7. ')' → logprob: -20.125085830688477
    8. ' ' → logprob: -20.500085830688477
    9. 'а' → logprob: -21.125085830688477
    10. '  ' → logprob: -21.500085830688477

Token 397: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008072483469732106
    2. ')
' → logprob: -7.125807285308838
    3. ')

' → logprob: -13.12580680847168
    4. '<|end|>' → logprob: -15.37580680847168
    5. ' )' → logprob: -15.62580680847168
    6. ')return' → logprob: -16.25080680847168
    7. ')
' → logprob: -17.00080680847168
    8. '
' → logprob: -17.00080680847168
    9. ')}}' → logprob: -17.25080680847168
    10. ')}' → logprob: -17.37580680847168

Token 398: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014165864326059818
    2. ' main' → logprob: -4.264165878295898
    3. 'set' → logprob: -13.764165878295898
    4. 'solve' → logprob: -14.764165878295898
    5. 'process' → logprob: -15.014165878295898
    6. '_main' → logprob: -15.639165878295898
    7. '	main' → logprob: -15.889165878295898
    8. 'm' → logprob: -16.2641658782959
    9. 'mai' → logprob: -16.5141658782959
    10. '__' → logprob: -16.7641658782959

Token 400: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.607391408877447e-05
    2. '():
' → logprob: -10.250036239624023
    3. ' ():' → logprob: -14.250036239624023
    4. '()' → logprob: -17.000036239624023
    5. '():
' → logprob: -18.875036239624023
    6. '(' → logprob: -19.500036239624023
    7. '():

' → logprob: -20.500036239624023
    8. '(:' → logprob: -21.750036239624023
    9. ':' → logprob: -22.000036239624023
    10. '(":' → logprob: -22.375036239624023

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012378494255244732
    2. 'n' → logprob: -4.512378692626953
    3. ' n' → logprob: -6.637378692626953
    4. 'sys' → logprob: -12.637378692626953
    5. '```' → logprob: -12.637378692626953
    6. 'x' → logprob: -12.887378692626953
    7. '	n' → logprob: -13.012378692626953
    8. 'import' → logprob: -13.512378692626953
    9. '(n' → logprob: -13.637378692626953
    10. ' sys' → logprob: -14.012378692626953

Token 402: ' set' (ID: 920)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10321636497974396
    2. ' n' → logprob: -2.8532164096832275
    3. '   ' → logprob: -3.2282164096832275
    4. 'set' (adapté à ' set') → logprob: -7.478216171264648
    5. ' set' → logprob: -9.353216171264648
    6. '	n' → logprob: -10.103216171264648
    7. ' ' → logprob: -10.353216171264648
    8. '_n' → logprob: -11.603216171264648
    9. 'sys' → logprob: -11.728216171264648
    10. '#' → logprob: -12.353216171264648

Token 403: '_rec' (ID: 35314)
  Prédit: '_rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -7.743758760625497e-05
    2. '_' → logprob: -9.500077247619629
    3. '_recursive' → logprob: -13.625077247619629
    4. '_rep' → logprob: -14.750077247619629
    5. '_re' → logprob: -15.500077247619629
    6. '_space' → logprob: -16.375078201293945
    7. '_pres' → logprob: -16.500078201293945
    8. '_rest' → logprob: -16.750078201293945
    9. ' _' → logprob: -16.750078201293945
    10. '_res' → logprob: -16.750078201293945

Token 404: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -1.1875571544806007e-05
    2. 'urs' → logprob: -11.375011444091797
    3. '```' → logprob: -16.375011444091797
    4. '_' → logprob: -16.500011444091797
    5. 'ursive' → logprob: -16.500011444091797
    6. '   ' → logprob: -17.625011444091797
    7. '**' → logprob: -17.750011444091797
    8. '`' → logprob: -17.875011444091797
    9. 'ursor' → logprob: -17.875011444091797
    10. 'ur' → logprob: -18.000011444091797

Token 405: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -9.65101717156358e-05
    2. 'limit' → logprob: -9.250096321105957
    3. 'imit' → logprob: -15.500096321105957
    4. ' limit' → logprob: -16.750097274780273
    5. '_limits' → logprob: -16.750097274780273
    6. '_LIMIT' → logprob: -17.250097274780273
    7. 'Limit' → logprob: -17.875097274780273
    8. '_lim' → logprob: -19.500097274780273
    9. '_' → logprob: -21.125097274780273
    10. '_level' → logprob: -21.750097274780273

Token 406: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009660111390985548
    2. '(' → logprob: -7.0009660720825195
    3. '()
' → logprob: -10.00096607208252
    4. '()

' → logprob: -12.50096607208252
    5. ' ()' → logprob: -12.75096607208252
    6. '(
' → logprob: -13.87596607208252
    7. '();' → logprob: -14.37596607208252
    8. '())' → logprob: -15.37596607208252
    9. '(

' → logprob: -16.500965118408203
    10. '()`' → logprob: -16.500965118408203

Token 407: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2531183362007141
    2. 'n' → logprob: -1.5031182765960693
    3. ' n' → logprob: -6.753118515014648
    4. '	n' → logprob: -11.253118515014648
    5. '```' → logprob: -13.003118515014648
    6. ' ' → logprob: -13.378118515014648
    7. '   ' → logprob: -13.753118515014648
    8. '  ' → logprob: -13.753118515014648
    9. '    
' → logprob: -14.753118515014648
    10. ',n' → logprob: -15.128118515014648

Token 408: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -14.750000953674316
    3. '
' → logprob: -16.125
    4. ' n' → logprob: -16.5
    5. 'N' → logprob: -16.875
    6. '#' → logprob: -17.125
    7. '    
' → logprob: -17.25
    8. '(n' → logprob: -17.25
    9. '	n' → logprob: -17.25
    10. '

' → logprob: -18.25

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036442498094402254
    2. ',x' → logprob: -8.750364303588867
    3. ' ,' → logprob: -9.000364303588867
    4. '=' → logprob: -10.125364303588867
    5. ' =' → logprob: -10.125364303588867
    6. 'x' → logprob: -13.500364303588867
    7. ',y' → logprob: -14.875364303588867
    8. ',n' → logprob: -15.500364303588867
    9. ' ' → logprob: -16.125364303588867
    10. ' x' → logprob: -16.125364303588867

Token 410: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07901812344789505
    2. ' x' → logprob: -2.5790181159973145
    3. ' ' → logprob: -9.204018592834473
    4. '<|end|>' → logprob: -11.829018592834473
    5. ' 
' → logprob: -12.329018592834473
    6. '*x' → logprob: -12.454018592834473
    7. '  ' → logprob: -13.204018592834473
    8. '*' → logprob: -13.329018592834473
    9. '    ' → logprob: -13.454018592834473
    10. '	x' → logprob: -13.704018592834473

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1782583391759545e-05
    2. ',y' → logprob: -10.625031471252441
    3. ' ,' → logprob: -12.125031471252441
    4. '=' → logprob: -13.750031471252441
    5. '<|end|>' → logprob: -15.500031471252441
    6. ',Y' → logprob: -15.625031471252441
    7. 'y' → logprob: -15.875031471252441
    8. '‌,' → logprob: -16.000032424926758
    9. ',
' → logprob: -16.250032424926758
    10. ',user' → logprob: -16.875032424926758

Token 412: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06994176656007767
    2. ' y' → logprob: -2.694941759109497
    3. ' ' → logprob: -13.194941520690918
    4. '	y' → logprob: -13.944941520690918
    5. '    ' → logprob: -14.194941520690918
    6. '<|end|>' → logprob: -14.194941520690918
    7. '  ' → logprob: -14.694941520690918
    8. ',y' → logprob: -15.569941520690918
    9. '   ' → logprob: -15.819941520690918
    10. ',' → logprob: -15.944941520690918

Token 413: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163863845169544
    2. ' =' → logprob: -4.264163970947266
    3. '=input' → logprob: -15.889163970947266
    4. ')=' → logprob: -16.014163970947266
    5. ',' → logprob: -16.639163970947266
    6. '=sys' → logprob: -17.014163970947266
    7. ')' → logprob: -17.014163970947266
    8. ' ' → logprob: -18.514163970947266
    9. '＝' → logprob: -18.514163970947266
    10. '=get' → logprob: -19.014163970947266

Token 414: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.10171185433864594
    2. 'read' → logprob: -2.3517117500305176
    3. ' map' → logprob: -6.601711750030518
    4. 'map' → logprob: -9.351712226867676
    5. ' list' → logprob: -10.851712226867676
    6. ' ' → logprob: -11.101712226867676
    7. '	read' → logprob: -11.476712226867676
    8. ' tuple' → logprob: -12.476712226867676
    9. '  ' → logprob: -12.601712226867676
    10. 'list' → logprob: -12.726712226867676

Token 415: '_main' (ID: 23076)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0727476105093956
    2. '()' → logprob: -2.6977477073669434
    3. 'int' → logprob: -7.322747707366943
    4. '_' → logprob: -7.322747707366943
    5. '_list' → logprob: -7.697747707366943
    6. '(' → logprob: -7.947747707366943
    7. '_main' → logprob: -8.197747230529785
    8. '()
' → logprob: -9.197747230529785
    9. '().' → logprob: -9.322747230529785
    10. '_in' → logprob: -9.822747230529785

Token 416: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.01762477308511734
    2. 'input' → logprob: -4.142624855041504
    3. 'int' → logprob: -7.517624855041504
    4. '_int' → logprob: -7.517624855041504
    5. '()' → logprob: -8.392624855041504
    6. '_inputs' → logprob: -8.517624855041504
    7. '_' → logprob: -10.392624855041504
    8. '()
' → logprob: -11.767624855041504
    9. 'inputs' → logprob: -12.267624855041504
    10. 'ints' → logprob: -12.392624855041504

Token 417: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011821311200037599
    2. '()
' → logprob: -6.8761820793151855
    3. '   ' → logprob: -10.001182556152344
    4. ')' → logprob: -10.126182556152344
    5. '(' → logprob: -10.626182556152344
    6. '
' → logprob: -10.876182556152344
    7. '();' → logprob: -12.001182556152344
    8. '(n' → logprob: -12.876182556152344
    9. ' ()' → logprob: -12.876182556152344
    10. 'def' → logprob: -13.376182556152344

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017231269157491624
    2. 'ans' → logprob: -9.12517261505127
    3. '
' → logprob: -10.50017261505127
    4. ' ans' → logprob: -10.87517261505127
    5. '	ans' → logprob: -11.87517261505127
    6. '    
' → logprob: -11.87517261505127
    7. '```' → logprob: -13.75017261505127
    8. '(ans' → logprob: -14.50017261505127
    9. '  ' → logprob: -15.25017261505127
    10. 'x' → logprob: -15.62517261505127

Token 419: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.03078053891658783
    2. '   ' → logprob: -3.530780553817749
    3. ' ans' → logprob: -6.90578031539917
    4. '	ans' → logprob: -10.780780792236328
    5. 'x' → logprob: -13.280780792236328
    6. '(ans' → logprob: -13.280780792236328
    7. '  ' → logprob: -14.280780792236328
    8. 'answer' → logprob: -14.405780792236328
    9. ' ' → logprob: -14.530780792236328
    10. '    
' → logprob: -14.530780792236328

Token 420: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759425163269043
    2. '=' → logprob: -0.8259425163269043
    3. ',' → logprob: -12.950942993164062
    4. '<|end|>' → logprob: -15.825942993164062
    5. ' ' → logprob: -15.950942993164062
    6. 's' → logprob: -16.575942993164062
    7. '[' → logprob: -16.575942993164062
    8. '=create' → logprob: -16.700942993164062
    9. ')' → logprob: -16.825942993164062
    10. '```' → logprob: -17.075942993164062

Token 421: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.014704231172800064
    2. ' initialize' → logprob: -4.76470422744751
    3. '[' → logprob: -5.13970422744751
    4. ' [' → logprob: -8.514704704284668
    5. '[in' → logprob: -12.389704704284668
    6. '	initialize' → logprob: -12.389704704284668
    7. '.initialize' → logprob: -14.514704704284668
    8. ' ' → logprob: -14.889704704284668
    9. '_initialize' → logprob: -14.889704704284668
    10. 'initialized' → logprob: -15.014704704284668

Token 422: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.00038920470979064703
    2. 'ans' → logprob: -7.875389099121094
    3. '(ans' → logprob: -12.750389099121094
    4. '_' → logprob: -13.500389099121094
    5. '(n' → logprob: -13.625389099121094
    6. '_an' → logprob: -14.000389099121094
    7. '
' → logprob: -15.125389099121094
    8. '```' → logprob: -15.375389099121094
    9. '_ann' → logprob: -15.500389099121094
    10. '	ans' → logprob: -15.625389099121094

Token 423: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.8219583075260743e-05
    2. '(' → logprob: -10.250038146972656
    3. ' (' → logprob: -13.375038146972656
    4. '((' → logprob: -14.000038146972656
    5. 'n' → logprob: -14.875038146972656
    6. '(
' → logprob: -16.500038146972656
    7. ' n' → logprob: -19.375038146972656
    8. '([' → logprob: -19.750038146972656
    9. '[n' → logprob: -20.000038146972656
    10. '   ' → logprob: -20.250038146972656

Token 424: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00171563564799726
    2. '+' → logprob: -6.501715660095215
    3. ')
' → logprob: -8.501715660095215
    4. ' +' → logprob: -12.501715660095215
    5. ' )' → logprob: -13.251715660095215
    6. '+)' → logprob: -13.501715660095215
    7. ')
' → logprob: -14.126715660095215
    8. '))' → logprob: -14.751715660095215
    9. ')

' → logprob: -14.876715660095215
    10. ')`' → logprob: -14.876715660095215

Token 425: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3537358343601227
    2. 'process' → logprob: -1.3537358045578003
    3. ' process' → logprob: -3.22873592376709
    4. '	process' → logprob: -9.97873592376709
    5. '
' → logprob: -12.10373592376709
    6. '(process' → logprob: -13.35373592376709
    7. '  ' → logprob: -13.47873592376709
    8. '```' → logprob: -13.47873592376709
    9. ' ' → logprob: -14.47873592376709
    10. '   ' → logprob: -14.97873592376709

Token 426: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.029005704447627068
    2. '   ' → logprob: -4.029005527496338
    3. ' process' → logprob: -4.529005527496338
    4. '	process' → logprob: -12.279006004333496
    5. '(process' → logprob: -14.904006004333496
    6. '  ' → logprob: -15.529006004333496
    7. '.process' → logprob: -16.02900505065918
    8. 'proces' → logprob: -16.15400505065918
    9. '```' → logprob: -16.27900505065918
    10. ' ' → logprob: -16.27900505065918

Token 427: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -15.250000953674316
    3. 'pairs' → logprob: -15.375000953674316
    4. '_p' → logprob: -16.125
    5. '_ans' → logprob: -16.375
    6. ' _' → logprob: -16.75
    7. '```' → logprob: -17.375
    8. '_pair' → logprob: -17.75
    9. 's' → logprob: -17.875
    10. '\' → logprob: -17.875

Token 428: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005988401360809803
    2. '(' → logprob: -5.130988597869873
    3. ' (' → logprob: -9.755988121032715
    4. '(
' → logprob: -13.630988121032715
    5. '```' → logprob: -15.005988121032715
    6. '(noun' → logprob: -16.63098907470703
    7. '((' → logprob: -17.38098907470703
    8. '
' → logprob: -17.63098907470703
    9. '\(' → logprob: -17.63098907470703
    10. '(N' → logprob: -18.13098907470703

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.9186317482963204e-05
    2. ',x' → logprob: -10.250049591064453
    3. ' ,' → logprob: -12.000049591064453
    4. ',
' → logprob: -12.875049591064453
    5. '(' → logprob: -12.875049591064453
    6. '(x' → logprob: -14.000049591064453
    7. ')' → logprob: -14.375049591064453
    8. ',n' → logprob: -14.625049591064453
    9. '(n' → logprob: -16.125049591064453
    10. 'x' → logprob: -16.125049591064453

Token 430: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0380416102707386
    2. ' x' → logprob: -3.288041591644287
    3. '	x' → logprob: -16.788042068481445
    4. '   ' → logprob: -17.038042068481445
    5. ' ' → logprob: -17.913042068481445
    6. ')x' → logprob: -18.663042068481445
    7. '
' → logprob: -19.038042068481445
    8. '    ' → logprob: -20.413042068481445
    9. '    
' → logprob: -20.663042068481445
    10. '  ' → logprob: -20.663042068481445

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008491750340908766
    2. ',y' → logprob: -7.12584924697876
    3. ',
' → logprob: -10.375848770141602
    4. ' ,' → logprob: -11.375848770141602
    5. 'y' → logprob: -13.875848770141602
    6. ',

' → logprob: -14.625848770141602
    7. '   ' → logprob: -16.1258487701416
    8. '‌,' → logprob: -16.6258487701416
    9. ',Y' → logprob: -16.6258487701416
    10. ')' → logprob: -16.7508487701416

Token 432: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00023071514442563057
    2. ' y' → logprob: -8.37523078918457
    3. '<|end|>' → logprob: -17.12523078918457
    4. '	y' → logprob: -17.37523078918457
    5. ')y' → logprob: -17.62523078918457
    6. 'x' → logprob: -17.75023078918457
    7. ' ' → logprob: -18.00023078918457
    8. ')' → logprob: -18.12523078918457
    9. '
' → logprob: -18.62523078918457
    10. '    ' → logprob: -19.50023078918457

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6776029699249193e-05
    2. ' ,' → logprob: -10.75002670288086
    3. '(ans' → logprob: -12.75002670288086
    4. '   ' → logprob: -13.75002670288086
    5. ' ans' → logprob: -14.12502670288086
    6. ',
' → logprob: -15.12502670288086
    7. 'ans' → logprob: -15.87502670288086
    8. ')' → logprob: -16.37502670288086
    9. '```' → logprob: -16.62502670288086
    10. '
' → logprob: -18.12502670288086

Token 434: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06196959316730499
    2. ' ans' → logprob: -2.811969518661499
    3. '(ans' → logprob: -13.561969757080078
    4. '	ans' → logprob: -14.811969757080078
    5. ')' → logprob: -15.811969757080078
    6. '_ans' → logprob: -16.436969757080078
    7. '
' → logprob: -17.061969757080078
    8. ')
' → logprob: -19.061969757080078
    9. 'answer' → logprob: -19.311969757080078
    10. 'anst' → logprob: -19.811969757080078

Token 435: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869207501411438
    2. ')
' → logprob: -1.136920690536499
    3. '   ' → logprob: -10.011920928955078
    4. ')
' → logprob: -12.386920928955078
    5. ')

' → logprob: -14.886920928955078
    6. ')\
' → logprob: -16.511920928955078
    7. ' )
' → logprob: -17.136920928955078
    8. ' )' → logprob: -17.136920928955078
    9. ')`
' → logprob: -17.511920928955078
    10. '
' → logprob: -17.511920928955078

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015051016816869378
    2. 'print' → logprob: -6.501504898071289
    3. ' print' → logprob: -12.876504898071289
    4. '```' → logprob: -16.37650489807129
    5. '	print' → logprob: -17.12650489807129
    6. '   ' → logprob: -17.75150489807129
    7. '  ' → logprob: -18.12650489807129
    8. '    
' → logprob: -18.12650489807129
    9. '(print' → logprob: -18.75150489807129
    10. '       ' → logprob: -19.37650489807129

Token 437: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.319370302458992e-06
    2. '   ' → logprob: -12.250005722045898
    3. ' print' → logprob: -14.500005722045898
    4. '  ' → logprob: -20.3750057220459
    5. '	print' → logprob: -22.5000057220459
    6. ' ' → logprob: -22.8750057220459
    7. '```' → logprob: -23.6250057220459
    8. '#print' → logprob: -23.8750057220459
    9. '.print' → logprob: -24.2500057220459
    10. '(print' → logprob: -24.5000057220459

Token 438: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -15.625000953674316
    3. '(_' → logprob: -15.625000953674316
    4. '_answer' → logprob: -15.750000953674316
    5. '_an' → logprob: -15.875000953674316
    6. '(ans' → logprob: -16.000001907348633
    7. '
' → logprob: -16.125001907348633
    8. '_ant' → logprob: -16.375001907348633
    9. '"_' → logprob: -16.750001907348633
    10. '```' → logprob: -17.000001907348633

Token 439: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.9361264946837764e-07
    2. 'ans' → logprob: -17.125
    3. '(answer' → logprob: -17.25
    4. '(' → logprob: -18.0
    5. '(an' → logprob: -18.625
    6. '(
' → logprob: -19.75
    7. ' (' → logprob: -20.625
    8. '(args' → logprob: -21.0
    9. '	ans' → logprob: -21.0
    10. '(abs' → logprob: -21.125

Token 440: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. '())' → logprob: -12.000011444091797
    3. ')
' → logprob: -12.625011444091797
    4. '()' → logprob: -13.500011444091797
    5. ' )' → logprob: -14.625011444091797
    6. ')`' → logprob: -16.250011444091797
    7. '))' → logprob: -17.250011444091797
    8. ')

' → logprob: -17.500011444091797
    9. '(' → logprob: -17.625011444091797
    10. '[' → logprob: -17.625011444091797

Token 441: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00020687808864749968
    2. 'main' → logprob: -8.50020694732666
    3. ' if' → logprob: -13.00020694732666
    4. 'print' → logprob: -14.50020694732666
    5. '```' → logprob: -15.37520694732666
    6. '#' → logprob: -16.125205993652344
    7. '(main' → logprob: -16.875205993652344
    8. '
' → logprob: -17.000205993652344
    9. '\' → logprob: -17.375205993652344
    10. '#if' → logprob: -18.125205993652344

Token 442: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 440
Tokens correctement prédits (1ère position, stricte): 190
Tokens correctement prédits (1ère position, avec adaptation): 205
Tokens correctement prédits (top 10): 373
Précision stricte (1ère position): 43.18%
Précision adaptée (1ère position): 46.59%
Précision (top 10): 84.77%
================================================================================
