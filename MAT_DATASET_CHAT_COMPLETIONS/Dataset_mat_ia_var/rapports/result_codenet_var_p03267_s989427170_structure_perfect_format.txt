================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
L = int(input())
edges = []

p2 = 1
N = 1

while L >= p2 * 2:
    N += 1
    p2 *= 2
    edges.append((N - 1, N, 0))
    edges.append((N - 1, N, 2 ** (N - 2)))

rest = L - p2
tmp = p2
for i in range(N, -1, -1):
    if (rest >> i) & 1:
        edges.append((i + 1, N, tmp))
        tmp += 2 ** i

M = len(edges)
print(N, M)
for edge in edges:
    print(*edge)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'L' (ID: 43)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00022547018306795508
    2. 'L' → logprob: -10.125225067138672
    3. '(
' → logprob: -10.125225067138672
    4. '(L' → logprob: -10.125225067138672
    5. ''' → logprob: -10.375225067138672
    6. '```' → logprob: -10.375225067138672
    7. '`' → logprob: -11.500225067138672
    8. ')' → logprob: -12.250225067138672
    9. '\(' → logprob: -12.500225067138672
    10. '"' → logprob: -12.625225067138672

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33102238178253174
    2. ')' → logprob: -1.3310223817825317
    3. '()' → logprob: -4.706022262573242
    4. '())' → logprob: -5.831022262573242
    5. '(
' → logprob: -7.081022262573242
    6. '")' → logprob: -7.206022262573242
    7. '```' → logprob: -7.456022262573242
    8. '))' → logprob: -7.581022262573242
    9. '')' → logprob: -7.956022262573242
    10. '('' → logprob: -8.081022262573242

Token 5: 'edges' (ID: 39127)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6560760140419006
    2. 'i' → logprob: -2.281075954437256
    3. '*' → logprob: -2.906075954437256
    4. 'n' → logprob: -2.906075954437256
    5. 's' → logprob: -3.281075954437256
    6. 'for' → logprob: -3.406075954437256
    7. 'x' → logprob: -3.656075954437256
    8. '\n' → logprob: -3.781075954437256
    9. '`' → logprob: -3.906075954437256
    10. '%' → logprob: -4.156075954437256

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18146935105323792
    2. '=' → logprob: -1.9314693212509155
    3. '.' → logprob: -4.556469440460205
    4. '_' → logprob: -5.306469440460205
    5. '[' → logprob: -5.681469440460205
    6. ')' → logprob: -7.181469440460205
    7. '[]' → logprob: -8.056468963623047
    8. '=[]' → logprob: -8.056468963623047
    9. ' ' → logprob: -8.181468963623047
    10. '[:]' → logprob: -8.806468963623047

Token 7: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.47565174102783203
    2. ' []' → logprob: -0.975651741027832
    3. '[' → logprob: -6.475651741027832
    4. ' ' → logprob: -11.725651741027832
    5. '"' → logprob: -12.225651741027832
    6. '[]
' → logprob: -12.475651741027832
    7. ' [' → logprob: -12.975651741027832
    8. '{}' → logprob: -12.975651741027832
    9. '[])' → logprob: -13.225651741027832
    10. '[]}' → logprob: -13.350651741027832

Token 8: 'p' (ID: 79)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001835141738411039
    2. ' for' → logprob: -8.62518310546875
    3. '```' → logprob: -12.75018310546875
    4. '
' → logprob: -14.25018310546875
    5. 'f' → logprob: -15.62518310546875
    6. '`' → logprob: -18.12518310546875
    7. '``' → logprob: -18.25018310546875
    8. ' 
' → logprob: -18.37518310546875
    9. '	for' → logprob: -18.37518310546875
    10. 'n' → logprob: -18.50018310546875

Token 9: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.53191077709198
    2. ' =' → logprob: -1.90691077709198
    3. '=' → logprob: -2.0319108963012695
    4. 'for' → logprob: -3.0319108963012695
    5. ' ' → logprob: -3.7819108963012695
    6. 'y' → logprob: -4.1569108963012695
    7. 'or' → logprob: -4.2819108963012695
    8. 'i' → logprob: -4.5319108963012695
    9. '_' → logprob: -6.0319108963012695
    10. ' for' → logprob: -6.1569108963012695

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34657829999923706
    2. 'ush' → logprob: -1.8465783596038818
    3. '=' → logprob: -3.221578359603882
    4. 'r' → logprob: -3.596578359603882
    5. 'y' → logprob: -3.846578359603882
    6. 'i' → logprob: -4.846578121185303
    7. 'oints' → logprob: -5.221578121185303
    8. ' ' → logprob: -5.596578121185303
    9. '   ' → logprob: -5.596578121185303
    10. 'u' → logprob: -5.846578121185303

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8684945106506348
    2. '2' → logprob: -1.1184945106506348
    3. '1' → logprob: -2.2434945106506348
    4. '0' → logprob: -2.9934945106506348
    5. '[]' → logprob: -3.2434945106506348
    6. ' []' → logprob: -3.3684945106506348
    7. ' [' → logprob: -5.118494510650635
    8. '[' → logprob: -5.368494510650635
    9. 'L' → logprob: -5.993494510650635
    10. ' p' → logprob: -6.118494510650635

Token 12: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3465655446052551
    2. '1' → logprob: -1.9715654850006104
    3. '0' → logprob: -3.0965654850006104
    4. 'L' → logprob: -3.3465654850006104
    5. '[' → logprob: -3.8465654850006104
    6. '[]' → logprob: -3.9715654850006104
    7. 'p' → logprob: -4.3465657234191895
    8. '[L' → logprob: -4.9715657234191895
    9. '[p' → logprob: -5.8465657234191895
    10. '{}' → logprob: -6.3465657234191895

Token 13: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5144041180610657
    2. ' ' → logprob: -1.389404058456421
    3. ' *' → logprob: -3.139404058456421
    4. '<|end|>' → logprob: -3.639404058456421
    5. '2' → logprob: -3.764404058456421
    6. '*' → logprob: -3.764404058456421
    7. '<<' → logprob: -4.764404296875
    8. ' <<' → logprob: -5.014404296875
    9. '
' → logprob: -5.764404296875
    10. ' 
' → logprob: -5.889404296875

Token 14: 'N' (ID: 45)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.3669800758361816
    2. '<|end|>' → logprob: -1.4919800758361816
    3. ' for' → logprob: -2.1169800758361816
    4. '0' → logprob: -2.1169800758361816
    5. ' ' → logprob: -2.2419800758361816
    6. 'while' → logprob: -2.6169800758361816
    7. 'for' → logprob: -2.9919800758361816
    8. ' 
' → logprob: -4.116980075836182
    9. '+' → logprob: -5.116980075836182
    10. ' p' → logprob: -5.241980075836182

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8588063716888428
    2. ' ' → logprob: -1.4838063716888428
    3. '+' → logprob: -1.8588063716888428
    4. ' +=' → logprob: -2.2338063716888428
    5. '=' → logprob: -3.9838063716888428
    6. '_' → logprob: -3.9838063716888428
    7. ' *=' → logprob: -4.608806610107422
    8. ' +' → logprob: -4.983806610107422
    9. ' *' → logprob: -5.108806610107422
    10. ' <<=' → logprob: -5.358806610107422

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06697894632816315
    2. '2' → logprob: -3.441978931427002
    3. ' p' → logprob: -4.191978931427002
    4. ' L' → logprob: -5.441978931427002
    5. '0' → logprob: -5.566978931427002
    6. '10' → logprob: -5.691978931427002
    7. 'p' → logprob: -5.941978931427002
    8. '1' → logprob: -6.191978931427002
    9. 'L' → logprob: -7.191978931427002
    10. '100' → logprob: -8.44197940826416

Token 17: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1883370578289032
    2. 'p' → logprob: -2.9383370876312256
    3. 'L' → logprob: -3.1883370876312256
    4. '1' → logprob: -3.1883370876312256
    5. ' ' → logprob: -4.3133368492126465
    6. '10' → logprob: -4.6883368492126465
    7. '0' → logprob: -4.8133368492126465
    8. ' p' → logprob: -6.5633368492126465
    9. ' L' → logprob: -6.9383368492126465
    10. '100' → logprob: -7.1883368492126465

Token 18: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27369651198387146
    2. 'while' → logprob: -1.5236965417861938
    3. ' for' → logprob: -4.398696422576904
    4. ' while' → logprob: -4.898696422576904
    5. '```' → logprob: -6.648696422576904
    6. '
' → logprob: -9.273696899414062
    7. 'f' → logprob: -9.398696899414062
    8. '0' → logprob: -9.523696899414062
    9. '+' → logprob: -10.273696899414062
    10. 'i' → logprob: -10.773696899414062

Token 20: ' L' (ID: 451)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.13227586448192596
    2. ' N' → logprob: -2.6322758197784424
    3. ' L' → logprob: -3.6322758197784424
    4. ' ' → logprob: -4.2572760581970215
    5. 'p' → logprob: -4.6322760581970215
    6. 'N' → logprob: -6.8822760581970215
    7. 'L' → logprob: -8.132275581359863
    8. ' (' → logprob: -9.382275581359863
    9. ' True' → logprob: -9.882275581359863
    10. '(p' → logprob: -10.007275581359863

Token 21: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09057752788066864
    2. '>' → logprob: -2.4655776023864746
    3. ' >=' → logprob: -6.965577602386475
    4. ' ' → logprob: -7.590577602386475
    5. ' <' → logprob: -9.590577125549316
    6. '-' → logprob: -10.590577125549316
    7. '>=' → logprob: -10.715577125549316
    8. '%' → logprob: -10.840577125549316
    9. ' <=' → logprob: -11.715577125549316
    10. ' %' → logprob: -11.840577125549316

Token 22: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.39028650522232056
    2. 'p' → logprob: -1.1402864456176758
    3. ' ' → logprob: -6.390286445617676
    4. '2' → logprob: -6.640286445617676
    5. '1' → logprob: -8.265286445617676
    6. '0' → logprob: -9.515286445617676
    7. '10' → logprob: -10.140286445617676
    8. '   ' → logprob: -11.515286445617676
    9. '20' → logprob: -12.015286445617676
    10. '  ' → logprob: -12.140286445617676

Token 23: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.8351892473874614e-05
    2. ' ' → logprob: -10.125048637390137
    3. '*' → logprob: -12.437548637390137
    4. '1' → logprob: -14.250048637390137
    5. '```' → logprob: -14.250048637390137
    6. '22' → logprob: -15.250048637390137
    7. '_' → logprob: -15.500048637390137
    8. '   ' → logprob: -15.687548637390137
    9. ' <<=' → logprob: -15.812548637390137
    10. '<<' → logprob: -15.812548637390137

Token 24: ' *' (ID: 425)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9170771241188049
    2. ' *' → logprob: -1.1670770645141602
    3. '*' → logprob: -1.2920770645141602
    4. ' :' → logprob: -5.41707706451416
    5. ':
' → logprob: -6.04207706451416
    6. ' ' → logprob: -6.29207706451416
    7. '   ' → logprob: -6.66707706451416
    8. '*:' → logprob: -6.66707706451416
    9. ' and' → logprob: -6.79207706451416
    10. ' <<=' → logprob: -7.41707706451416

Token 25: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011841678991913795
    2. ' ' → logprob: -4.511841773986816
    3. '3' → logprob: -7.886841773986816
    4. '6' → logprob: -8.886841773986816
    5. '10' → logprob: -9.261841773986816
    6. 'p' → logprob: -9.636841773986816
    7. '1' → logprob: -9.886841773986816
    8. '4' → logprob: -10.886841773986816
    9. 'N' → logprob: -12.136841773986816
    10. '=' → logprob: -12.386841773986816

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021622790955007076
    2. '10' → logprob: -6.752162456512451
    3. ' ' → logprob: -7.502162456512451
    4. '3' → logprob: -8.752161979675293
    5. '6' → logprob: -8.752161979675293
    6. '26' → logprob: -10.002161979675293
    7. '4' → logprob: -10.752161979675293
    8. '   ' → logprob: -10.877161979675293
    9. '```' → logprob: -11.627161979675293
    10. '5' → logprob: -11.877161979675293

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014080997556447983
    2. ' :' → logprob: -4.389081001281738
    3. ':
' → logprob: -6.639081001281738
    4. ' :
' → logprob: -9.014081001281738
    5. '**' → logprob: -10.389081001281738
    6. ' *' → logprob: -10.889081001281738
    7. ' and' → logprob: -11.014081001281738
    8. '*' → logprob: -11.139081001281738
    9. ' ' → logprob: -11.514081001281738
    10. '*p' → logprob: -11.514081001281738

Token 28: '   ' (ID: 271)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.2500903904438019
    2. ' ' → logprob: -1.7500903606414795
    3. '   ' → logprob: -3.3750903606414795
    4. 'p' → logprob: -5.375090599060059
    5. '    ' → logprob: -6.000090599060059
    6. '<|end|>' → logprob: -6.625090599060059
    7. '```' → logprob: -6.750090599060059
    8. ' 
' → logprob: -7.375090599060059
    9. ' ,' → logprob: -7.500090599060059
    10. ' :' → logprob: -7.625090599060059

Token 29: ' N' (ID: 478)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.2330290973186493
    2. 'p' → logprob: -1.7330291271209717
    3. '   ' → logprob: -3.4830291271209717
    4. ' ' → logprob: -9.35802936553955
    5. '	p' → logprob: -9.35802936553955
    6. ' edges' → logprob: -9.60802936553955
    7. '```' → logprob: -9.98302936553955
    8. '       ' → logprob: -10.73302936553955
    9. 'edges' → logprob: -10.73302936553955
    10. '    ' → logprob: -10.98302936553955

Token 30: ' +=' (ID: 2757)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.22702337801456451
    2. ' =' → logprob: -2.4770233631134033
    3. ' <<=' → logprob: -2.7270233631134033
    4. '*=' → logprob: -3.3520233631134033
    5. '=' → logprob: -4.102023601531982
    6. ' ' → logprob: -6.852023601531982
    7. ' +=' → logprob: -7.102023601531982
    8. '*' → logprob: -9.477023124694824
    9. '+=' → logprob: -9.602023124694824
    10. ' *' → logprob: -10.227023124694824

Token 31: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0063771214336156845
    2. '2' → logprob: -5.256377220153809
    3. ' ' → logprob: -6.881377220153809
    4. 'p' → logprob: -9.131377220153809
    5. ' p' → logprob: -12.006377220153809
    6. '   ' → logprob: -14.881377220153809
    7. '3' → logprob: -15.256377220153809
    8. '4' → logprob: -16.006376266479492
    9. 'N' → logprob: -16.006376266479492
    10. '10' → logprob: -16.381376266479492

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005885370774194598
    2. ' ' → logprob: -8.125588417053223
    3. '2' → logprob: -8.625588417053223
    4. 'p' → logprob: -9.125588417053223
    5. ' p' → logprob: -13.500588417053223
    6. '3' → logprob: -14.250588417053223
    7. 'N' → logprob: -14.750588417053223
    8. '6' → logprob: -15.250588417053223
    9. '4' → logprob: -15.375588417053223
    10. '   ' → logprob: -15.375588417053223

Token 33: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010979432612657547
    2. ' p' → logprob: -4.885979652404785
    3. 'p' → logprob: -6.385979652404785
    4. '<|end|>' → logprob: -7.510979652404785
    5. '```' → logprob: -7.885979652404785
    6. '    
' → logprob: -8.260979652404785
    7. '
' → logprob: -8.885979652404785
    8. ',' → logprob: -9.385979652404785
    9. ' ' → logprob: -9.760979652404785
    10. '*p' → logprob: -10.010979652404785

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2300255000591278
    2. ' p' → logprob: -1.8550255298614502
    3. 'p' → logprob: -3.48002552986145
    4. '<|end|>' → logprob: -4.230025291442871
    5. '
' → logprob: -6.730025291442871
    6. '    
' → logprob: -7.480025291442871
    7. '<|end|>' → logprob: -7.730025291442871
    8. '```' → logprob: -8.230025291442871
    9. ' ' → logprob: -8.355025291442871
    10. ' 
' → logprob: -8.480025291442871

Token 35: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.1603112518787384
    2. ' p' → logprob: -1.910311222076416
    3. '   ' → logprob: -9.410311698913574
    4. '```' → logprob: -12.410311698913574
    5. '	p' → logprob: -14.035311698913574
    6. ' ' → logprob: -15.910311698913574
    7. '``' → logprob: -16.410310745239258
    8. '       ' → logprob: -17.660310745239258
    9. ' ' → logprob: -17.660310745239258
    10. '`' → logprob: -17.785310745239258

Token 36: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.125001907348633
    3. '=' → logprob: -15.625001907348633
    4. ' <<=' → logprob: -16.000001907348633
    5. ' =' → logprob: -16.500001907348633
    6. '```' → logprob: -16.500001907348633
    7. '۲' → logprob: -16.875001907348633
    8. '₂' → logprob: -17.125001907348633
    9. ' *=' → logprob: -17.750001907348633
    10. '_' → logprob: -17.937501907348633

Token 37: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.3546297550201416
    2. ' *=' → logprob: -1.3546297550201416
    3. '=' → logprob: -3.6046297550201416
    4. ' <<=' → logprob: -4.4796295166015625
    5. ' =' → logprob: -7.1046295166015625
    6. ' ' → logprob: -7.3546295166015625
    7. '*' → logprob: -8.479629516601562
    8. '```' → logprob: -8.854629516601562
    9. '   ' → logprob: -9.479629516601562
    10. '2' → logprob: -10.104629516601562

Token 38: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013321444857865572
    2. ' ' → logprob: -6.6263322830200195
    3. '   ' → logprob: -12.12633228302002
    4. '```' → logprob: -15.62633228302002
    5. '  ' → logprob: -15.93883228302002
    6. '۲' → logprob: -16.063831329345703
    7. '２' → logprob: -16.813831329345703
    8. '    ' → logprob: -16.876331329345703
    9. ' ' → logprob: -16.876331329345703
    10. '٢' → logprob: -17.563831329345703

Token 39: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9623810658231378e-05
    2. ' ' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.500020027160645
    4. '```' → logprob: -17.375019073486328
    5. '  ' → logprob: -18.000019073486328
    6. '２' → logprob: -18.625019073486328
    7. '۲' → logprob: -18.687519073486328
    8. '    ' → logprob: -19.312519073486328
    9. '`' → logprob: -19.375019073486328
    10. '২' → logprob: -19.687519073486328

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7432416081428528
    2. '<|end|>' → logprob: -0.9932416081428528
    3. '*' → logprob: -3.493241548538208
    4. '+' → logprob: -3.618241548538208
    5. '#' → logprob: -4.118241786956787
    6. '```' → logprob: -4.243241786956787
    7. '<|end|>' → logprob: -4.243241786956787
    8. ')' → logprob: -4.868241786956787
    9. ' 
' → logprob: -4.993241786956787
    10. '\n' → logprob: -5.118241786956787

Token 41: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' edges' (ID: 22569)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12834228575229645
    2. '.' → logprob: -2.128342390060425
    3. '.extend' → logprob: -7.003342151641846
    4. ' .' → logprob: -7.878342151641846
    5. '   ' → logprob: -10.378342628479004
    6. '.add' → logprob: -10.753342628479004
    7. ' +=' → logprob: -11.128342628479004
    8. '.push' → logprob: -11.753342628479004
    9. 'append' → logprob: -11.878342628479004
    10. ' .=' → logprob: -11.878342628479004

Token 44: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0501336008310318
    2. '(' → logprob: -3.17513370513916
    3. '(p' → logprob: -5.05013370513916
    4. '([' → logprob: -7.67513370513916
    5. '(()' → logprob: -9.42513370513916
    6. '(N' → logprob: -9.80013370513916
    7. '(('' → logprob: -10.67513370513916
    8. '('' → logprob: -11.17513370513916
    9. '([]' → logprob: -11.30013370513916
    10. '(((' → logprob: -11.55013370513916

Token 45: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.13514471054077148
    2. 'p' → logprob: -2.1351447105407715
    3. '0' → logprob: -5.2601447105407715
    4. '1' → logprob: -6.0101447105407715
    5. '(N' → logprob: -8.51014518737793
    6. ' N' → logprob: -9.13514518737793
    7. '(' → logprob: -9.76014518737793
    8. '(p' → logprob: -10.26014518737793
    9. ' ' → logprob: -10.63514518737793
    10. ' p' → logprob: -10.63514518737793

Token 46: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5193292498588562
    2. '-' → logprob: -1.019329309463501
    3. ' -' → logprob: -3.269329309463501
    4. ' ,' → logprob: -5.394329071044922
    5. ',p' → logprob: -7.269329071044922
    6. ',N' → logprob: -7.769329071044922
    7. ' ' → logprob: -8.519329071044922
    8. ')' → logprob: -9.144329071044922
    9. '   ' → logprob: -9.644329071044922
    10. '  ' → logprob: -10.894329071044922

Token 47: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024072888772934675
    2. '2' → logprob: -6.377407073974609
    3. ' ' → logprob: -7.877407073974609
    4. ',' → logprob: -8.25240707397461
    5. ' ,' → logprob: -10.25240707397461
    6. '   ' → logprob: -11.00240707397461
    7. ')' → logprob: -11.75240707397461
    8. '  ' → logprob: -13.93990707397461
    9. '    ' → logprob: -14.37740707397461
    10. '<|end|>' → logprob: -14.37740707397461

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02395780384540558
    2. '2' → logprob: -3.7739577293395996
    3. ' ' → logprob: -7.6489577293396
    4. ',' → logprob: -8.773958206176758
    5. ')' → logprob: -10.023958206176758
    6. ' ,' → logprob: -11.648958206176758
    7. '<|end|>' → logprob: -11.648958206176758
    8. '   ' → logprob: -11.773958206176758
    9. '  ' → logprob: -12.273958206176758
    10. '0' → logprob: -13.461458206176758

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003650079946964979
    2. ' ,' → logprob: -5.753650188446045
    3. ',N' → logprob: -7.753650188446045
    4. '   ' → logprob: -11.253649711608887
    5. ')' → logprob: -11.878649711608887
    6. '1' → logprob: -12.503649711608887
    7. ',
' → logprob: -12.628649711608887
    8. ',n' → logprob: -13.003649711608887
    9. ',p' → logprob: -13.003649711608887
    10. ' ' → logprob: -13.003649711608887

Token 50: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.25221553444862366
    2. ' N' → logprob: -1.5022155046463013
    3. '	N' → logprob: -8.877215385437012
    4. ' ' → logprob: -9.127215385437012
    5. '   ' → logprob: -11.627215385437012
    6. '2' → logprob: -11.752215385437012
    7. ')' → logprob: -12.377215385437012
    8. '1' → logprob: -12.502215385437012
    9. ',N' → logprob: -12.752215385437012
    10. '<|end|>' → logprob: -13.002215385437012

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.136260986328125
    2. '))' → logprob: -2.136260986328125
    3. ' ,' → logprob: -5.511260986328125
    4. '-' → logprob: -6.136260986328125
    5. ' -' → logprob: -6.511260986328125
    6. ')' → logprob: -6.886260986328125
    7. ' ))' → logprob: -8.261260986328125
    8. '   ' → logprob: -9.386260986328125
    9. '1' → logprob: -9.636260986328125
    10. ' ' → logprob: -10.511260986328125

Token 52: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1995142251253128
    2. ' ' → logprob: -2.449514150619507
    3. '1' → logprob: -2.824514150619507
    4. 'p' → logprob: -3.949514150619507
    5. ' p' → logprob: -4.574514389038086
    6. ')' → logprob: -6.199514389038086
    7. ''' → logprob: -7.449514389038086
    8. 'L' → logprob: -7.949514389038086
    9. ' L' → logprob: -8.074514389038086
    10. ' '' → logprob: -8.074514389038086

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15849421918392181
    2. 'p' → logprob: -2.533494234085083
    3. '1' → logprob: -3.033494234085083
    4. ' ' → logprob: -4.408493995666504
    5. ' p' → logprob: -5.408493995666504
    6. ')' → logprob: -6.908493995666504
    7. '2' → logprob: -8.595993995666504
    8. ''p' → logprob: -8.783493995666504
    9. ''' → logprob: -8.908493995666504
    10. '))' → logprob: -9.095993995666504

Token 54: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01737281121313572
    2. ')' → logprob: -4.3923726081848145
    3. '))
' → logprob: -6.1423726081848145
    4. ' ))' → logprob: -6.5173726081848145
    5. ',' → logprob: -7.0173726081848145
    6. '),' → logprob: -9.142373085021973
    7. ' )' → logprob: -9.767373085021973
    8. ')))' → logprob: -9.892373085021973
    9. ')
' → logprob: -10.392373085021973
    10. '+' → logprob: -11.267373085021973

Token 55: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' edges' (ID: 22569)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7436270713806152
    2. ')' → logprob: -2.1186270713806152
    3. '
' → logprob: -2.6186270713806152
    4. '<|end|>' → logprob: -2.6186270713806152
    5. ' 
' → logprob: -2.7436270713806152
    6. '   ' → logprob: -2.7436270713806152
    7. '  
' → logprob: -3.1186270713806152
    8. '    
' → logprob: -3.7436270713806152
    9. '0' → logprob: -3.9936270713806152
    10. '```' → logprob: -4.993627071380615

Token 57: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5678597688674927
    2. '<|end|>' → logprob: -1.3178597688674927
    3. ')' → logprob: -2.567859649658203
    4. '[' → logprob: -3.192859649658203
    5. '.' → logprob: -4.317859649658203
    6. '```' → logprob: -4.817859649658203
    7. '[-' → logprob: -5.067859649658203
    8. '
' → logprob: -5.067859649658203
    9. '<|end|>' → logprob: -5.567859649658203
    10. '.pop' → logprob: -6.442859649658203

Token 58: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0013158319052308798
    2. ' ((' → logprob: -6.876315593719482
    3. '(' → logprob: -8.37631607055664
    4. ' ' → logprob: -10.25131607055664
    5. ' (' → logprob: -11.62631607055664
    6. '(('' → logprob: -13.00131607055664
    7. ',' → logprob: -13.37631607055664
    8. '   ' → logprob: -13.50131607055664
    9. '  ' → logprob: -14.75131607055664
    10. '(("' → logprob: -14.87631607055664

Token 59: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012926909141242504
    2. '0' → logprob: -4.637927055358887
    3. '1' → logprob: -6.387927055358887
    4. 'p' → logprob: -7.637927055358887
    5. 'L' → logprob: -7.887927055358887
    6. ' N' → logprob: -8.637927055358887
    7. '   ' → logprob: -8.762927055358887
    8. '(N' → logprob: -9.012927055358887
    9. ' ' → logprob: -9.387927055358887
    10. '2' → logprob: -10.512927055358887

Token 60: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.21179133653640747
    2. ' -' → logprob: -1.7117912769317627
    3. ',' → logprob: -4.711791515350342
    4. ' ,' → logprob: -7.586791515350342
    5. ' ' → logprob: -7.961791515350342
    6. '   ' → logprob: -8.211791038513184
    7. '1' → logprob: -8.836791038513184
    8. '  ' → logprob: -10.586791038513184
    9. ' -,' → logprob: -11.586791038513184
    10. '-,' → logprob: -11.711791038513184

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004169221967458725
    2. ' ' → logprob: -5.62916898727417
    3. '2' → logprob: -7.62916898727417
    4. '   ' → logprob: -10.379169464111328
    5. '0' → logprob: -10.504169464111328
    6. '  ' → logprob: -11.691669464111328
    7. ')' → logprob: -12.441669464111328
    8. '-' → logprob: -13.066669464111328
    9. '<|end|>' → logprob: -13.629169464111328
    10. '    ' → logprob: -13.754169464111328

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037228144356049597
    2. '0' → logprob: -8.750371932983398
    3. ' ' → logprob: -8.875371932983398
    4. '2' → logprob: -9.625371932983398
    5. '   ' → logprob: -13.000371932983398
    6. '-' → logprob: -13.375371932983398
    7. '  ' → logprob: -13.562871932983398
    8. '100' → logprob: -14.875371932983398
    9. ')' → logprob: -15.125371932983398
    10. '10' → logprob: -15.375371932983398

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010032468708232045
    2. ' ,' → logprob: -9.375100135803223
    3. ',N' → logprob: -12.125100135803223
    4. '`,' → logprob: -12.375100135803223
    5. '',' → logprob: -13.750100135803223
    6. ',
' → logprob: -13.875100135803223
    7. '‌,' → logprob: -14.375100135803223
    8. '1' → logprob: -14.625100135803223
    9. ',

' → logprob: -15.000100135803223
    10. '   ' → logprob: -15.125100135803223

Token 64: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10021184384822845
    2. ' N' → logprob: -2.3502118587493896
    3. ' ' → logprob: -12.850212097167969
    4. '   ' → logprob: -14.225212097167969
    5. 'p' → logprob: -15.225212097167969
    6. ' p' → logprob: -15.225212097167969
    7. ',N' → logprob: -15.225212097167969
    8. '	N' → logprob: -15.350212097167969
    9. 'L' → logprob: -15.475212097167969
    10. ',' → logprob: -15.600212097167969

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001556282164528966
    2. '1' → logprob: -7.001556396484375
    3. ' ,' → logprob: -7.376556396484375
    4. '2' → logprob: -11.876556396484375
    5. ',
' → logprob: -12.751556396484375
    6. '))' → logprob: -13.626556396484375
    7. '```' → logprob: -13.876556396484375
    8. '0' → logprob: -14.001556396484375
    9. '4' → logprob: -14.376556396484375
    10. '   ' → logprob: -14.376556396484375

Token 66: ' ' (ID: 220)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.9796294569969177
    2. '1' → logprob: -1.1046295166015625
    3. 'p' → logprob: -1.3546295166015625
    4. ' ' → logprob: -3.3546295166015625
    5. '   ' → logprob: -9.354629516601562
    6. '0' → logprob: -10.479629516601562
    7. '(p' → logprob: -10.604629516601562
    8. '2' → logprob: -10.667129516601562
    9. ' (' → logprob: -10.917129516601562
    10. ')' → logprob: -10.979629516601562

Token 67: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5925157070159912
    2. 'p' → logprob: -0.8425157070159912
    3. ' p' → logprob: -4.21751594543457
    4. ' ' → logprob: -6.59251594543457
    5. '   ' → logprob: -9.46751594543457
    6. '2' → logprob: -9.71751594543457
    7. '(p' → logprob: -9.96751594543457
    8. '0' → logprob: -10.21751594543457
    9. '(' → logprob: -10.59251594543457
    10. ')' → logprob: -10.59251594543457

Token 68: ' **' (ID: 6240)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007565005216747522
    2. ')' → logprob: -8.12575626373291
    3. '**' → logprob: -8.25075626373291
    4. ' ))' → logprob: -9.75075626373291
    5. '))
' → logprob: -9.87575626373291
    6. '0' → logprob: -10.12575626373291
    7. ')))' → logprob: -11.25075626373291
    8. '))

' → logprob: -11.75075626373291
    9. '1' → logprob: -12.12575626373291
    10. '-' → logprob: -12.25075626373291

Token 69: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00816676951944828
    2. '(' → logprob: -4.883166790008545
    3. '(p' → logprob: -8.508166313171387
    4. '(n' → logprob: -9.383166313171387
    5. '(L' → logprob: -9.883166313171387
    6. '((' → logprob: -9.883166313171387
    7. ' (' → logprob: -10.008166313171387
    8. 'p' → logprob: -10.258166313171387
    9. 'N' → logprob: -10.383166313171387
    10. '(len' → logprob: -10.633166313171387

Token 70: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0033135272096842527
    2. '(N' → logprob: -5.7533135414123535
    3. 'len' → logprob: -9.753313064575195
    4. '{' → logprob: -11.128313064575195
    5. 'L' → logprob: -11.378313064575195
    6. ' N' → logprob: -11.628313064575195
    7. '[N' → logprob: -11.628313064575195
    8. 'p' → logprob: -12.128313064575195
    9. '(' → logprob: -12.128313064575195
    10. '`' → logprob: -12.503313064575195

Token 71: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008052219054661691
    2. ' -' → logprob: -7.125805377960205
    3. '1' → logprob: -15.125804901123047
    4. '0' → logprob: -15.875804901123047
    5. '   ' → logprob: -16.250804901123047
    6. ' ' → logprob: -16.375804901123047
    7. ')' → logprob: -16.750804901123047
    8. '2' → logprob: -17.000804901123047
    9. '```' → logprob: -17.500804901123047
    10. ')-' → logprob: -18.000804901123047

Token 72: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003187810070812702
    2. '1' → logprob: -8.25031852722168
    3. '3' → logprob: -10.12531852722168
    4. '   ' → logprob: -11.62531852722168
    5. ' ' → logprob: -12.50031852722168
    6. '-' → logprob: -13.56281852722168
    7. '```' → logprob: -13.81281852722168
    8. '  ' → logprob: -13.87531852722168
    9. ')' → logprob: -15.00031852722168
    10. '

' → logprob: -16.00031852722168

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011380735086277127
    2. '1' → logprob: -6.876138210296631
    3. '3' → logprob: -9.376137733459473
    4. '   ' → logprob: -12.063637733459473
    5. '```' → logprob: -12.188637733459473
    6. ')' → logprob: -12.751137733459473
    7. ' ' → logprob: -12.876137733459473
    8. '  ' → logprob: -14.501137733459473
    9. '-' → logprob: -14.563637733459473
    10. '0' → logprob: -15.563637733459473

Token 74: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.1489277184009552
    2. ')' → logprob: -2.023927688598633
    3. '))' → logprob: -5.148927688598633
    4. ' )' → logprob: -8.648927688598633
    5. '   ' → logprob: -9.148927688598633
    6. ' ' → logprob: -10.148927688598633
    7. ' ))' → logprob: -10.523927688598633
    8. '),' → logprob: -10.773927688598633
    9. '))))' → logprob: -11.148927688598633
    10. ')))
' → logprob: -11.273927688598633

Token 75: 'rest' (ID: 7134)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03694319352507591
    2. ' if' → logprob: -3.536943197250366
    3. '```' → logprob: -5.786942958831787
    4. 'L' → logprob: -6.036942958831787
    5. 'while' → logprob: -6.786942958831787
    6. 'for' → logprob: -8.536943435668945
    7. 'N' → logprob: -9.536943435668945
    8. ' while' → logprob: -10.036943435668945
    9. ' 
' → logprob: -10.286943435668945
    10. '
' → logprob: -10.286943435668945

Token 76: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.23957805335521698
    2. '-' → logprob: -2.8645780086517334
    3. ' =' → logprob: -2.9895780086517334
    4. '=' → logprob: -2.9895780086517334
    5. '-=' → logprob: -3.4895780086517334
    6. 'if' → logprob: -4.7395782470703125
    7. '```' → logprob: -5.1145782470703125
    8. ':' → logprob: -5.3645782470703125
    9. ' -' → logprob: -5.9895782470703125
    10. '   ' → logprob: -6.3645782470703125

Token 77: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.2519342005252838
    2. 'L' → logprob: -1.5019341707229614
    3. ' ' → logprob: -13.126934051513672
    4. '	L' → logprob: -14.001934051513672
    5. '(L' → logprob: -14.126934051513672
    6. '   ' → logprob: -14.501934051513672
    7. 'int' → logprob: -15.126934051513672
    8. '`' → logprob: -15.501934051513672
    9. '>L' → logprob: -15.751934051513672
    10. '```' → logprob: -16.376934051513672

Token 78: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2021239846944809
    2. '-' → logprob: -1.702123999595642
    3. ' -=' → logprob: -7.702124118804932
    4. ' ' → logprob: -9.952123641967773
    5. '```' → logprob: -10.577123641967773
    6. 'if' → logprob: -10.827123641967773
    7. '%' → logprob: -10.827123641967773
    8. ' if' → logprob: -10.827123641967773
    9. ' -
' → logprob: -10.952123641967773
    10. '-=' → logprob: -11.452123641967773

Token 79: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.008614926598966122
    2. ' p' → logprob: -4.758615016937256
    3. '   ' → logprob: -16.008615493774414
    4. ' ' → logprob: -16.008615493774414
    5. '	p' → logprob: -16.508615493774414
    6. '(p' → logprob: -17.508615493774414
    7. '<p' → logprob: -18.258615493774414
    8. '
' → logprob: -18.508615493774414
    9. '```' → logprob: -19.508615493774414
    10. '+p' → logprob: -19.883615493774414

Token 80: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.500004768371582
    3. '₂' → logprob: -14.625004768371582
    4. '_' → logprob: -15.500004768371582
    5. '۲' → logprob: -15.562504768371582
    6. 's' → logprob: -16.5625057220459
    7. '２' → logprob: -17.0000057220459
    8. 't' → logprob: -17.3125057220459
    9. '<|end|>' → logprob: -17.3750057220459
    10. 'p' → logprob: -17.4375057220459

Token 81: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: 'tmp' (ID: 11669)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17080825567245483
    2. 'for' → logprob: -2.2958083152770996
    3. 'i' → logprob: -4.0458083152771
    4. '```' → logprob: -4.1708083152771
    5. '<|end|>' → logprob: -4.4208083152771
    6. 'while' → logprob: -5.4208083152771
    7. ' if' → logprob: -5.7958083152771
    8. 'N' → logprob: -6.5458083152771
    9. ' for' → logprob: -7.1708083152771
    10. '
' → logprob: -7.2958083152771

Token 83: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5307483673095703
    2. ' =' → logprob: -1.6557483673095703
    3. '2' → logprob: -1.7807483673095703
    4. '=' → logprob: -3.4057483673095703
    5. '_rest' → logprob: -4.28074836730957
    6. ' _' → logprob: -7.15574836730957
    7. ' +=' → logprob: -7.15574836730957
    8. '_val' → logprob: -7.28074836730957
    9. '1' → logprob: -7.40574836730957
    10. '_=' → logprob: -7.65574836730957

Token 84: ' p' (ID: 275)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.6671886444091797
    2. '0' → logprob: -1.4171886444091797
    3. ' rest' → logprob: -1.9171886444091797
    4. ' ' → logprob: -3.1671886444091797
    5. '1' → logprob: -3.2921886444091797
    6. 'N' → logprob: -5.41718864440918
    7. ' p' → logprob: -5.41718864440918
    8. 'p' → logprob: -5.91718864440918
    9. ' N' → logprob: -6.04218864440918
    10. '2' → logprob: -6.04218864440918

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5716304410016164e-05
    2. '1' → logprob: -11.125035285949707
    3. ' ' → logprob: -11.500035285949707
    4. 'rest' → logprob: -13.187535285949707
    5. '[' → logprob: -14.000035285949707
    6. '<|end|>' → logprob: -14.125035285949707
    7. 'r' → logprob: -14.375035285949707
    8. '...' → logprob: -14.625035285949707
    9. '_' → logprob: -14.625035285949707
    10. '>' → logprob: -14.687535285949707

Token 86: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.43196243047714233
    2. ' 
' → logprob: -2.306962490081787
    3. '<|end|>' → logprob: -2.556962490081787
    4. '```' → logprob: -2.806962490081787
    5. ' +' → logprob: -3.556962490081787
    6. '
' → logprob: -3.681962490081787
    7. ' ' → logprob: -3.931962490081787
    8. ' while' → logprob: -4.931962490081787
    9. '\n' → logprob: -5.181962490081787
    10. 'while' → logprob: -5.556962490081787

Token 87: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.25362300872802734
    2. 'for' → logprob: -1.5036230087280273
    3. 'if' → logprob: -7.128623008728027
    4. 'N' → logprob: -7.503623008728027
    5. 'i' → logprob: -8.253623008728027
    6. ' while' → logprob: -10.503623008728027
    7. '1' → logprob: -10.628623008728027
    8. '```' → logprob: -11.378623008728027
    9. ' for' → logprob: -13.128623008728027
    10. '0' → logprob: -13.128623008728027

Token 88: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05448848754167557
    2. 'i' → logprob: -3.30448842048645
    3. ' _' → logprob: -4.929488658905029
    4. '_' → logprob: -4.929488658905029
    5. ' x' → logprob: -8.304488182067871
    6. ' ' → logprob: -8.429488182067871
    7. ' v' → logprob: -8.554488182067871
    8. '_i' → logprob: -8.554488182067871
    9. ' range' → logprob: -8.929488182067871
    10. ' b' → logprob: -9.304488182067871

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01204380951821804
    2. 'in' → logprob: -4.8870439529418945
    3. ' ' → logprob: -5.6370439529418945
    4. ',' → logprob: -7.2620439529418945
    5. '  ' → logprob: -9.637043952941895
    6. 'n' → logprob: -10.012043952941895
    7. '	in' → logprob: -11.137043952941895
    8. ' i' → logprob: -11.512043952941895
    9. ' n' → logprob: -12.262043952941895
    10. ' ,' → logprob: -12.262043952941895

Token 90: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.05492065101861954
    2. 'range' → logprob: -2.9299206733703613
    3. ' ' → logprob: -10.679920196533203
    4. '	range' → logprob: -11.429920196533203
    5. '(range' → logprob: -13.304920196533203
    6. ' xrange' → logprob: -14.179920196533203
    7. '   ' → logprob: -14.554920196533203
    8. ' reversed' → logprob: -14.929920196533203
    9. 're' → logprob: -14.929920196533203
    10. '  ' → logprob: -15.054920196533203

Token 91: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5440256595611572
    2. '(rest' → logprob: -1.5440256595611572
    3. '(len' → logprob: -1.6690256595611572
    4. '(tmp' → logprob: -4.794025421142578
    5. '(N' → logprob: -4.794025421142578
    6. '(L' → logprob: -8.044025421142578
    7. ' (' → logprob: -8.419025421142578
    8. '((' → logprob: -9.044025421142578
    9. ' ' → logprob: -9.294025421142578
    10. 'rest' → logprob: -9.669025421142578

Token 92: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6075006127357483
    2. '):' → logprob: -1.4825005531311035
    3. ' -' → logprob: -1.6075005531311035
    4. '):
' → logprob: -4.3575005531311035
    5. ' ):' → logprob: -4.9825005531311035
    6. ' ' → logprob: -5.4825005531311035
    7. ',' → logprob: -6.6075005531311035
    8. '1' → logprob: -7.7325005531311035
    9. '  ' → logprob: -7.8575005531311035
    10. ')' → logprob: -7.9825005531311035

Token 93: ' -' (ID: 533)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4073954224586487
    2. ' N' → logprob: -1.157395362854004
    3. ' ' → logprob: -5.032395362854004
    4. '0' → logprob: -5.407395362854004
    5. 'L' → logprob: -5.657395362854004
    6. 'rest' → logprob: -6.407395362854004
    7. ' L' → logprob: -6.407395362854004
    8. '1' → logprob: -6.532395362854004
    9. '2' → logprob: -8.657395362854004
    10. ' rest' → logprob: -8.907395362854004

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.829823102336377e-05
    2. ' ' → logprob: -9.37509822845459
    3. '-' → logprob: -11.50009822845459
    4. '2' → logprob: -13.87509822845459
    5. ' -' → logprob: -13.87509822845459
    6. '
' → logprob: -14.87509822845459
    7. '  ' → logprob: -15.25009822845459
    8. '```' → logprob: -15.25009822845459
    9. '   ' → logprob: -16.062599182128906
    10. '１' → logprob: -16.375099182128906

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10046512633562088
    2. '-' → logprob: -2.4754650592803955
    3. ' -' → logprob: -4.975465297698975
    4. ' ,' → logprob: -5.725465297698975
    5. ',-' → logprob: -6.850465297698975
    6. '1' → logprob: -8.725464820861816
    7. ' ,-' → logprob: -9.850464820861816
    8. '-,' → logprob: -11.975464820861816
    9. ' ' → logprob: -12.350464820861816
    10. '```' → logprob: -13.350464820861816

Token 96: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029759978875517845
    2. ' -' → logprob: -3.5297598838806152
    3. ' ' → logprob: -12.029760360717773
    4. '  ' → logprob: -13.779760360717773
    5. '   ' → logprob: -13.779760360717773
    6. '	' → logprob: -14.654760360717773
    7. '1' → logprob: -14.779760360717773
    8. '```' → logprob: -14.904760360717773
    9. '‌' → logprob: -17.029760360717773
    10. ',-' → logprob: -17.279760360717773

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '2' → logprob: -15.875004768371582
    4. '   ' → logprob: -18.375003814697266
    5. '  ' → logprob: -18.625003814697266
    6. '-' → logprob: -18.750003814697266
    7. '```' → logprob: -19.125003814697266
    8. '１' → logprob: -19.250003814697266
    9. ' -' → logprob: -20.000003814697266
    10. '۱' → logprob: -20.437503814697266

Token 98: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22424939274787903
    2. '):' → logprob: -2.2242493629455566
    3. ' -' → logprob: -2.7242493629455566
    4. '):
' → logprob: -4.224249362945557
    5. ',-' → logprob: -4.849249362945557
    6. ',' → logprob: -6.099249362945557
    7. '):-' → logprob: -6.849249362945557
    8. '   ' → logprob: -7.599249362945557
    9. '1' → logprob: -7.724249362945557
    10. ' ):' → logprob: -8.724249839782715

Token 99: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7441595196723938
    2. '   ' → logprob: -0.8691595196723938
    3. '<|end|>' → logprob: -2.369159460067749
    4. '  ' → logprob: -5.744159698486328
    5. ' if' → logprob: -5.744159698486328
    6. ' 
' → logprob: -6.494159698486328
    7. ' ' → logprob: -6.869159698486328
    8. '```' → logprob: -7.369159698486328
    9. '0' → logprob: -7.869159698486328
    10. '    ' → logprob: -7.994159698486328

Token 100: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16431795060634613
    2. '   ' → logprob: -1.9143179655075073
    3. ' ' → logprob: -6.039318084716797
    4. '<|end|>' → logprob: -7.164318084716797
    5. 'if' (adapté à ' if') → logprob: -8.039318084716797
    6. '0' → logprob: -8.664318084716797
    7. ' i' → logprob: -8.789318084716797
    8. '	if' → logprob: -9.539318084716797
    9. '1' → logprob: -9.664318084716797
    10. '  ' → logprob: -10.789318084716797

Token 101: ' (' (ID: 350)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.7167744636535645
    2. 'rest' → logprob: -0.8417744636535645
    3. '(rest' → logprob: -2.7167744636535645
    4. ' (' → logprob: -4.9667744636535645
    5. ' i' → logprob: -5.5917744636535645
    6. ' tmp' → logprob: -6.8417744636535645
    7. 'i' → logprob: -7.2167744636535645
    8. '(tmp' → logprob: -7.3417744636535645
    9. 'tmp' → logprob: -7.3417744636535645
    10. '(i' → logprob: -7.3417744636535645

Token 102: 'rest' (ID: 7134)
  Prédit: 'rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.0160093791782856
    2. ' rest' → logprob: -4.266009330749512
    3. '(rest' → logprob: -6.391009330749512
    4. 'tmp' → logprob: -9.141009330749512
    5. ' (' → logprob: -10.891009330749512
    6. '(' → logprob: -11.391009330749512
    7. ' tmp' → logprob: -11.516009330749512
    8. '1' → logprob: -12.016009330749512
    9. '(tmp' → logprob: -12.391009330749512
    10. ' ' → logprob: -13.016009330749512

Token 103: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.6306902170181274
    2. ' &' → logprob: -1.1306902170181274
    3. '&' → logprob: -2.380690097808838
    4. ' >>' → logprob: -3.505690097808838
    5. ')' → logprob: -3.880690097808838
    6. ' )' → logprob: -7.755690097808838
    7. ' ' → logprob: -8.505690574645996
    8. '>=' → logprob: -8.505690574645996
    9. ')&' → logprob: -8.755690574645996
    10. '>' → logprob: -8.880690574645996

Token 104: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014164921827614307
    2. ' i' → logprob: -4.264164924621582
    3. ' ' → logprob: -14.389164924621582
    4. '   ' → logprob: -15.139164924621582
    5. '	i' → logprob: -15.139164924621582
    6. '(i' → logprob: -16.264163970947266
    7. ')i' → logprob: -16.389163970947266
    8. '<|end|>' → logprob: -16.639163970947266
    9. ')' → logprob: -17.139163970947266
    10. '```' → logprob: -17.514163970947266

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032435471657663584
    2. ')&' → logprob: -5.878243446350098
    3. ' )' → logprob: -7.878243446350098
    4. '&' → logprob: -10.503243446350098
    5. '1' → logprob: -11.128243446350098
    6. '0' → logprob: -11.253243446350098
    7. '`)' → logprob: -13.753243446350098
    8. ' &' → logprob: -13.878243446350098
    9. '')' → logprob: -14.503243446350098
    10. '&)' → logprob: -14.503243446350098

Token 106: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.38723328709602356
    2. '&' → logprob: -1.1372332572937012
    3. ')' → logprob: -9.01223373413086
    4. ')&' → logprob: -9.26223373413086
    5. '&amp' → logprob: -9.63723373413086
    6. ' ' → logprob: -10.51223373413086
    7. '1' → logprob: -11.38723373413086
    8. '   ' → logprob: -11.88723373413086
    9. '&nbsp' → logprob: -12.13723373413086
    10. '0' → logprob: -12.13723373413086

Token 107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '```' → logprob: -16.629077911376953
    4. '   ' → logprob: -16.754077911376953
    5. '0' → logprob: -17.129077911376953
    6. '  ' → logprob: -18.129077911376953
    7. '(' → logprob: -19.004077911376953
    8. '' → logprob: -19.254077911376953
    9. '<|end|>' → logprob: -19.254077911376953
    10. ' ' → logprob: -19.629077911376953

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.908022285439074e-05
    2. ' ' → logprob: -9.750059127807617
    3. '0' → logprob: -14.500059127807617
    4. '   ' → logprob: -16.125059127807617
    5. '```' → logprob: -16.375059127807617
    6. '`' → logprob: -18.250059127807617
    7. '' → logprob: -18.750059127807617
    8. '  ' → logprob: -19.000059127807617
    9. '(' → logprob: -19.000059127807617
    10. '
' → logprob: -19.062559127807617

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01130469050258398
    2. ' ==' → logprob: -5.38630485534668
    3. ' :' → logprob: -5.76130485534668
    4. '==' → logprob: -6.38630485534668
    5. '):' → logprob: -7.38630485534668
    6. ':
' → logprob: -7.38630485534668
    7. '   ' → logprob: -8.76130485534668
    8. '():' → logprob: -9.51130485534668
    9. '=' → logprob: -9.63630485534668
    10. '>:' → logprob: -9.76130485534668

Token 110: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019859854131937027
    2. '       ' → logprob: -4.519859790802002
    3. 'edges' → logprob: -5.394859790802002
    4. ' edges' → logprob: -5.519859790802002
    5. '(edges' → logprob: -9.26986026763916
    6. '
' → logprob: -10.14486026763916
    7. '```' → logprob: -10.51986026763916
    8. '<|end|>' → logprob: -11.26986026763916
    9. '  ' → logprob: -11.76986026763916
    10. ' ' → logprob: -11.89486026763916

Token 111: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.6125032901763916
    2. 'edges' (adapté à ' edges') → logprob: -0.8625032901763916
    3. '   ' → logprob: -3.8625032901763916
    4. '       ' → logprob: -4.4875030517578125
    5. ' ' → logprob: -6.8625030517578125
    6. '           ' → logprob: -6.9875030517578125
    7. '(edges' → logprob: -7.7375030517578125
    8. '
' → logprob: -7.8625030517578125
    9. 'tmp' → logprob: -8.737503051757812
    10. ' tmp' → logprob: -8.862503051757812

Token 112: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009140860638581216
    2. '.' → logprob: -7.000914096832275
    3. '.app' → logprob: -14.000913619995117
    4. ' .' → logprob: -14.250913619995117
    5. ').' → logprob: -14.875913619995117
    6. '.add' → logprob: -15.375913619995117
    7. '.extend' → logprob: -15.625913619995117
    8. '.push' → logprob: -16.125913619995117
    9. '   ' → logprob: -16.750913619995117
    10. '.Append' → logprob: -16.875913619995117

Token 113: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0006305903079919517
    2. '(' → logprob: -7.3756303787231445
    3. '(N' → logprob: -13.125630378723145
    4. ' ((' → logprob: -14.125630378723145
    5. '(
' → logprob: -14.875630378723145
    6. '(edges' → logprob: -15.000630378723145
    7. '(((' → logprob: -15.375630378723145
    8. '(('' → logprob: -15.625630378723145
    9. ' ' → logprob: -17.00063133239746
    10. '(([' → logprob: -17.00063133239746

Token 114: 'i' (ID: 72)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.024844877421855927
    2. 'i' → logprob: -3.7748448848724365
    3. 'tmp' → logprob: -6.899844646453857
    4. ' N' → logprob: -8.399845123291016
    5. '1' → logprob: -8.899845123291016
    6. ' i' → logprob: -9.274845123291016
    7. '0' → logprob: -10.149845123291016
    8. '(N' → logprob: -10.649845123291016
    9. 'p' → logprob: -11.399845123291016
    10. '(i' → logprob: -11.524845123291016

Token 115: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.057739224284887314
    2. ' ,' → logprob: -3.6827392578125
    3. ' +' → logprob: -4.0577392578125
    4. '+' → logprob: -4.3077392578125
    5. ',N' → logprob: -9.0577392578125
    6. '   ' → logprob: -10.3077392578125
    7. ' ' → logprob: -11.4327392578125
    8. ',
' → logprob: -11.8077392578125
    9. ',i' → logprob: -12.4327392578125
    10. '+,' → logprob: -12.6827392578125

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06236513704061508
    2. ' ' → logprob: -2.8123650550842285
    3. '2' → logprob: -8.812365531921387
    4. '   ' → logprob: -9.562365531921387
    5. '"' → logprob: -9.937365531921387
    6. '  ' → logprob: -10.562365531921387
    7. '-' → logprob: -10.812365531921387
    8. '+' → logprob: -11.187365531921387
    9. ')' → logprob: -11.312365531921387
    10. ',' → logprob: -11.812365531921387

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.839121826691553e-05
    2. ' ' → logprob: -9.625078201293945
    3. '2' → logprob: -11.375078201293945
    4. '0' → logprob: -14.625078201293945
    5. '3' → logprob: -16.500078201293945
    6. '-' → logprob: -17.312578201293945
    7. '+' → logprob: -17.437578201293945
    8. '   ' → logprob: -17.437578201293945
    9. '
' → logprob: -17.500078201293945
    10. 'N' → logprob: -17.500078201293945

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009784776717424393
    2. ' ,' → logprob: -4.634784698486328
    3. ' -' → logprob: -11.259784698486328
    4. '-' → logprob: -11.384784698486328
    5. ',N' → logprob: -13.384784698486328
    6. ',
' → logprob: -13.759784698486328
    7. '       ' → logprob: -14.634784698486328
    8. '   ' → logprob: -14.759784698486328
    9. ',n' → logprob: -15.634784698486328
    10. ' ' → logprob: -16.009784698486328

Token 119: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009338518721051514
    2. ' N' → logprob: -7.000933647155762
    3. '   ' → logprob: -11.500933647155762
    4. ' ' → logprob: -11.875933647155762
    5. 'i' → logprob: -12.875933647155762
    6. '  ' → logprob: -13.625933647155762
    7. '    ' → logprob: -14.875933647155762
    8. '	N' → logprob: -15.375933647155762
    9. 'L' → logprob: -15.875933647155762
    10. '1' → logprob: -16.250934600830078

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011742709903046489
    2. ' ,' → logprob: -6.751174449920654
    3. '   ' → logprob: -13.751173973083496
    4. ' ' → logprob: -14.376173973083496
    5. ',
' → logprob: -14.626173973083496
    6. '+' → logprob: -15.251173973083496
    7. '1' → logprob: -15.751173973083496
    8. '0' → logprob: -15.751173973083496
    9. '-' → logprob: -15.876173973083496
    10. '2' → logprob: -15.876173973083496

Token 121: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.019895849749445915
    2. ' tmp' → logprob: -4.144896030426025
    3. 'rest' → logprob: -5.894896030426025
    4. 'p' → logprob: -7.894896030426025
    5. 'L' → logprob: -9.019895553588867
    6. ' ' → logprob: -9.144895553588867
    7. ' rest' → logprob: -9.144895553588867
    8. '(tmp' → logprob: -9.394895553588867
    9. ' p' → logprob: -9.644895553588867
    10. '   ' → logprob: -9.894895553588867

Token 122: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.09780861437320709
    2. ' ))' → logprob: -2.597808599472046
    3. ')' → logprob: -4.222808837890625
    4. ' )' → logprob: -5.972808837890625
    5. ' -' → logprob: -7.472808837890625
    6. '-' → logprob: -7.847808837890625
    7. '))
' → logprob: -7.972808837890625
    8. ' ))
' → logprob: -8.972808837890625
    9. ')))' → logprob: -10.847808837890625
    10. ' ' → logprob: -11.347808837890625

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07405281066894531
    2. '   ' → logprob: -2.6990528106689453
    3. 'tmp' → logprob: -5.574052810668945
    4. '           ' → logprob: -9.074052810668945
    5. ' tmp' → logprob: -9.449052810668945
    6. ' ' → logprob: -10.449052810668945
    7. '    ' → logprob: -10.449052810668945
    8. '      ' → logprob: -11.574052810668945
    9. '  ' → logprob: -11.699052810668945
    10. '```' → logprob: -11.949052810668945

Token 124: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.0005247961380518973
    2. '       ' → logprob: -7.750524997711182
    3. ' tmp' → logprob: -9.750524520874023
    4. '	tmp' → logprob: -11.125524520874023
    5. '/tmp' → logprob: -11.875524520874023
    6. '[tmp' → logprob: -12.625524520874023
    7. 'rest' → logprob: -12.750524520874023
    8. '
' → logprob: -12.875524520874023
    9. '$tmp' → logprob: -13.250524520874023
    10. '_tmp' → logprob: -14.250524520874023

Token 125: ' +=' (ID: 2757)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.2790572941303253
    2. '+=' → logprob: -1.904057264328003
    3. ' -=' → logprob: -2.404057264328003
    4. ' +=' → logprob: -5.779057502746582
    5. '-' → logprob: -7.029057502746582
    6. '=' → logprob: -9.154057502746582
    7. ' -' → logprob: -9.904057502746582
    8. ' //' → logprob: -10.654057502746582
    9. '*=' → logprob: -11.154057502746582
    10. '//=' → logprob: -12.154057502746582

Token 126: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011915886716451496
    2. ' ' → logprob: -9.25011920928955
    3. '1' → logprob: -10.87511920928955
    4. '(' → logprob: -13.37511920928955
    5. '```' → logprob: -14.00011920928955
    6. '   ' → logprob: -14.37511920928955
    7. 'pow' → logprob: -14.75011920928955
    8. '[' → logprob: -15.50011920928955
    9. '`' → logprob: -16.250118255615234
    10. '0' → logprob: -16.375118255615234

Token 127: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001295222609769553
    2. '1' → logprob: -9.250129699707031
    3. ' ' → logprob: -10.625129699707031
    4. '(' → logprob: -12.250129699707031
    5. '```' → logprob: -13.625129699707031
    6. 'pow' → logprob: -13.875129699707031
    7. '10' → logprob: -14.000129699707031
    8. '   ' → logprob: -14.875129699707031
    9. '[' → logprob: -15.000129699707031
    10. '0' → logprob: -15.750129699707031

Token 128: ' **' (ID: 6240)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02006399631500244
    2. '(i' → logprob: -4.270063877105713
    3. '(' → logprob: -6.395063877105713
    4. '*i' → logprob: -6.895063877105713
    5. '```' → logprob: -7.020063877105713
    6. '**' → logprob: -7.145063877105713
    7. ' i' → logprob: -7.395063877105713
    8. '[i' → logprob: -7.895063877105713
    9. '{i' → logprob: -8.520064353942871
    10. '<|end|>' → logprob: -9.145064353942871

Token 129: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.660315895918757e-05
    2. ' i' → logprob: -9.500076293945312
    3. '<|end|>' → logprob: -14.125076293945312
    4. '(i' → logprob: -14.375076293945312
    5. '*i' → logprob: -15.625076293945312
    6. '	i' → logprob: -15.875076293945312
    7. '(' → logprob: -17.125076293945312
    8. '_i' → logprob: -17.500076293945312
    9. ''i' → logprob: -18.625076293945312
    10. ',i' → logprob: -19.125076293945312

Token 130: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: 'M' (ID: 44)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6099701523780823
    2. '<|end|>' → logprob: -0.9849701523780823
    3. '\n' → logprob: -3.4849700927734375
    4. '```' → logprob: -3.9849700927734375
    5. '
' → logprob: -4.8599700927734375
    6. '#' → logprob: -4.8599700927734375
    7. 'N' → logprob: -5.6099700927734375
    8. 'print' → logprob: -5.8599700927734375
    9. ' ' → logprob: -6.1099700927734375
    10. '\' → logprob: -6.8599700927734375

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038069721311330795
    2. '=' → logprob: -3.288069725036621
    3. ' +=' → logprob: -11.663069725036621
    4. ')' → logprob: -11.788069725036621
    5. ',' → logprob: -12.538069725036621
    6. ' ' → logprob: -13.038069725036621
    7. '  ' → logprob: -13.288069725036621
    8. '_' → logprob: -14.163069725036621
    9. '.' → logprob: -14.163069725036621
    10. '+=' → logprob: -14.413069725036621

Token 133: ' len' (ID: 4631)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5477431416511536
    2. 'len' → logprob: -1.1727430820465088
    3. ' len' → logprob: -2.547743082046509
    4. ' N' → logprob: -3.422743082046509
    5. '2' → logprob: -7.422743320465088
    6. ' ' → logprob: -7.547743320465088
    7. '(len' → logprob: -8.79774284362793
    8. '(N' → logprob: -11.42274284362793
    9. 'str' → logprob: -11.54774284362793
    10. '20' → logprob: -11.79774284362793

Token 134: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -7.755678961984813e-05
    2. '(' → logprob: -9.500077247619629
    3. 'edges' → logprob: -13.250077247619629
    4. '(
' → logprob: -14.500077247619629
    5. ' edges' → logprob: -16.125078201293945
    6. '(nodes' → logprob: -16.375078201293945
    7. '(edge' → logprob: -16.500078201293945
    8. '(vertices' → logprob: -16.875078201293945
    9. '(e' → logprob: -17.625078201293945
    10. '(lines' → logprob: -18.250078201293945

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013262155698612332
    2. ')
' → logprob: -9.87513256072998
    3. '()' → logprob: -10.00013256072998
    4. '())' → logprob: -10.75013256072998
    5. '<|end|>' → logprob: -12.50013256072998
    6. ' )' → logprob: -13.00013256072998
    7. '```' → logprob: -13.37513256072998
    8. ')#' → logprob: -13.75013256072998
    9. '+' → logprob: -13.87513256072998
    10. '#' → logprob: -14.37513256072998

Token 136: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001029471677611582
    2. 'for' → logprob: -9.375102996826172
    3. ' print' → logprob: -11.750102996826172
    4. '#print' → logprob: -13.125102996826172
    5. '```' → logprob: -13.125102996826172
    6. '#' → logprob: -13.500102996826172
    7. 'edges' → logprob: -13.875102996826172
    8. 'p' → logprob: -14.125102996826172
    9. '<|end|>' → logprob: -14.125102996826172
    10. '0' → logprob: -15.125102996826172

Token 137: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.3869031071662903
    2. '(' → logprob: -1.1369030475616455
    3. '('' → logprob: -11.261902809143066
    4. '((' → logprob: -12.261902809143066
    5. '(
' → logprob: -12.386902809143066
    6. '(N' → logprob: -12.886902809143066
    7. '(len' → logprob: -13.011902809143066
    8. ' (' → logprob: -13.386902809143066
    9. '("' → logprob: -13.511902809143066
    10. '()' → logprob: -14.011902809143066

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038788155652582645
    2. ')' → logprob: -6.003878593444824
    3. ' ,' → logprob: -7.003878593444824
    4. ',M' → logprob: -8.378878593444824
    5. '+' → logprob: -8.503878593444824
    6. ',end' → logprob: -11.003878593444824
    7. ' )' → logprob: -11.378878593444824
    8. ',N' → logprob: -11.503878593444824
    9. ' +' → logprob: -12.378878593444824
    10. '```' → logprob: -12.503878593444824

Token 139: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0015024791937321424
    2. ' M' → logprob: -6.501502513885498
    3. ',' → logprob: -16.251502990722656
    4. ' ' → logprob: -17.001502990722656
    5. ')' → logprob: -17.501502990722656
    6. '   ' → logprob: -18.001502990722656
    7. ',M' → logprob: -18.626502990722656
    8. '  ' → logprob: -18.876502990722656
    9. ' ' → logprob: -19.251502990722656
    10. '    ' → logprob: -19.626502990722656

Token 140: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008092674543149769
    2. ')
' → logprob: -7.125809192657471
    3. ',' → logprob: -13.250809669494629
    4. ' )' → logprob: -13.250809669494629
    5. ')

' → logprob: -15.125809669494629
    6. '')' → logprob: -15.375809669494629
    7. ')
' → logprob: -15.750809669494629
    8. '`)' → logprob: -16.000808715820312
    9. '")' → logprob: -16.000808715820312
    10. ')`' → logprob: -16.000808715820312

Token 141: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000510856625624001
    2. ' for' → logprob: -8.125511169433594
    3. '<|end|>' → logprob: -8.500511169433594
    4. 'edges' → logprob: -12.000511169433594
    5. ')' → logprob: -12.875511169433594
    6. '```' → logprob: -14.000511169433594
    7. '<|end|>' → logprob: -14.625511169433594
    8. '	for' → logprob: -15.000511169433594
    9. '(edges' → logprob: -15.250511169433594
    10. '0' → logprob: -15.500511169433594

Token 142: ' edge' (ID: 11165)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1179986372590065
    2. ' u' → logprob: -2.3679986000061035
    3. '(u' → logprob: -4.3679986000061035
    4. 'a' → logprob: -5.7429986000061035
    5. 'x' → logprob: -7.8679986000061035
    6. 'e' → logprob: -7.9929986000061035
    7. ' edge' → logprob: -7.9929986000061035
    8. 'edge' → logprob: -8.367999076843262
    9. 's' → logprob: -8.867999076843262
    10. ' a' → logprob: -9.367999076843262

Token 143: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16035562753677368
    2. 'in' → logprob: -1.910355567932129
    3. ' ' → logprob: -10.160355567932129
    4. '_in' → logprob: -10.160355567932129
    5. '_' → logprob: -10.535355567932129
    6. '  ' → logprob: -12.160355567932129
    7. ')' → logprob: -12.160355567932129
    8. '[' → logprob: -12.285355567932129
    9. '	in' → logprob: -12.410355567932129
    10. ',' → logprob: -13.910355567932129

Token 144: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.4740811586380005
    2. 'edges' → logprob: -0.9740811586380005
    3. '(edges' → logprob: -12.474081039428711
    4. '.edges' → logprob: -15.349081039428711
    5. '_edges' → logprob: -16.34908103942871
    6. 'edge' → logprob: -18.09908103942871
    7. '   ' → logprob: -18.59908103942871
    8. 'Edges' → logprob: -19.47408103942871
    9. ' edge' → logprob: -19.84908103942871
    10. ' ' → logprob: -21.09908103942871

Token 145: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011522030457854271
    2. ':
' → logprob: -4.511521816253662
    3. '):' → logprob: -8.51152229309082
    4. ',' → logprob: -9.13652229309082
    5. 'print' → logprob: -9.51152229309082
    6. '):
' → logprob: -10.38652229309082
    7. ')' → logprob: -11.01152229309082
    8. '   ' → logprob: -11.76152229309082
    9. '<|end|>' → logprob: -11.88652229309082
    10. '[::-' → logprob: -12.38652229309082

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2956385314464569
    2. 'print' → logprob: -1.7956385612487793
    3. ' print' → logprob: -2.4206385612487793
    4. '	print' → logprob: -7.295638561248779
    5. ':' → logprob: -8.920638084411621
    6. '    
' → logprob: -9.295638084411621
    7. '<|end|>' → logprob: -10.295638084411621
    8. '```' → logprob: -10.420638084411621
    9. ':
' → logprob: -10.795638084411621
    10. ')' → logprob: -11.420638084411621

Token 147: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.10032689571380615
    2. 'print' (adapté à ' print') → logprob: -2.3503270149230957
    3. '   ' → logprob: -9.100326538085938
    4. '```' → logprob: -12.100326538085938
    5. '	print' → logprob: -13.225326538085938
    6. ' 
' → logprob: -14.975326538085938
    7. ' for' → logprob: -15.350326538085938
    8. '    
' → logprob: -15.475326538085938
    9. '#print' → logprob: -15.975326538085938
    10. '
' → logprob: -16.100326538085938

Token 148: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.02129359543323517
    2. '(edge' → logprob: -4.021293640136719
    3. '(' → logprob: -6.021293640136719
    4. '(f' → logprob: -8.021293640136719
    5. '*' → logprob: -8.771293640136719
    6. 'edge' → logprob: -8.896293640136719
    7. '('' → logprob: -9.521293640136719
    8. '("' → logprob: -11.896293640136719
    9. 'f' → logprob: -12.896293640136719
    10. '()' → logprob: -13.146293640136719

Token 149: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -1.0206720617134124e-05
    2. ' edge' → logprob: -11.50001049041748
    3. 'edges' → logprob: -17.500009536743164
    4. '(edge' → logprob: -17.750009536743164
    5. '=edge' → logprob: -20.250009536743164
    6. ')' → logprob: -21.000009536743164
    7. '.edge' → logprob: -21.375009536743164
    8. ' ' → logprob: -22.000009536743164
    9. '_edge' → logprob: -22.375009536743164
    10. '   ' → logprob: -22.500009536743164

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -13.375001907348633
    3. ' )' → logprob: -15.250001907348633
    4. '))' → logprob: -16.875001907348633
    5. ')`' → logprob: -17.375001907348633
    6. ')}' → logprob: -18.000001907348633
    7. '),' → logprob: -18.125001907348633
    8. '())' → logprob: -19.125001907348633
    9. ',)' → logprob: -19.250001907348633
    10. ')#' → logprob: -19.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 148
Tokens correctement prédits (1ère position, stricte): 63
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 126
Précision stricte (1ère position): 42.57%
Précision adaptée (1ère position): 43.92%
Précision (top 10): 85.14%
================================================================================
