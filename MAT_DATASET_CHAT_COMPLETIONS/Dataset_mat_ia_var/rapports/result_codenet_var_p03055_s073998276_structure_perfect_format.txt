================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from bisect import bisect_left as binl

def intin():
    input_tuple = input().split()
    if len(input_tuple) <= 1:
        return int(input_tuple[0])
    return tuple(map(int, input_tuple))

def intina():
    return [int(i) for i in input().split()]

def intinl(count):
    return [intin() for _ in range(count)]

def modadd(x, y):
    global mod
    return (x + y) % mod

def modmlt(x, y):
    global mod
    return (x * y) % mod

def lcm(x, y):
    while y != 0:
        z = x % y
        x = y
        y = z
    return x

def make_linklist(xylist):
    linklist = {}
    for a, b in xylist:
        linklist.setdefault(a, [])
        linklist.setdefault(b, [])
        linklist[a].append(b)
        linklist[b].append(a)
    return linklist

def calc_longest_distance(linklist, v=1):
    distance_list = {}
    distance_count = 0
    distance = 0
    vlist_previous = []
    vlist = [v]
    nodecount = len(linklist)
    while distance_count < nodecount:
        vlist_next = []
        for v in vlist:
            distance_list[v] = distance
            distance_count += 1
            vlist_next.extend(linklist[v])
        distance += 1
        vlist_to_del = vlist_previous
        vlist_previous = vlist
        vlist = list(set(vlist_next) - set(vlist_to_del))
    max_distance = -1
    max_v = None
    for v, dist in distance_list.items():
        if dist > max_distance:
            max_distance = dist
            max_v = v
    return (max_distance, max_v)

def calc_tree_diameter(linklist, v=1):
    _, u = calc_longest_distance(linklist, v)
    distance, _ = calc_longest_distance(linklist, u)
    return distance

def main():
    n = intin()
    ablist = intinl(n - 1)
    linklist = make_linklist(ablist)
    diameter = calc_tree_diameter(linklist)
    if diameter % 3 == 1:
        print('Second')
    else:
        print('First')

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04931975528597832
    2. 'import' → logprob: -3.0493197441101074
    3. '.' → logprob: -7.424319744110107
    4. ' ' → logprob: -9.549320220947266
    5. '_import' → logprob: -10.799320220947266
    6. '.import' → logprob: -11.049320220947266
    7. ' .' → logprob: -11.799320220947266
    8. '_' → logprob: -11.799320220947266
    9. '```' → logprob: -12.424320220947266
    10. '	import' → logprob: -13.299320220947266

Token 4: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.043759625405073166
    2. 'ins' → logprob: -3.29375958442688
    3. ' bis' → logprob: -5.168759822845459
    4. ' ins' → logprob: -12.1687593460083
    5. 'b' → logprob: -12.9187593460083
    6. '```' → logprob: -13.7937593460083
    7. '_ins' → logprob: -14.4187593460083
    8. '*' → logprob: -15.4187593460083
    9. '.ins' → logprob: -15.5437593460083
    10. 'in' → logprob: -16.168760299682617

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.04874417185783386
    2. 'e' → logprob: -3.0487442016601562
    3. 'ct' → logprob: -9.923744201660156
    4. 'n' → logprob: -9.923744201660156
    5. 'ec' → logprob: -10.423744201660156
    6. 't' → logprob: -11.673744201660156
    7. 'r' → logprob: -12.173744201660156
    8. 'ext' → logprob: -12.298744201660156
    9. 'ex' → logprob: -13.298744201660156
    10. 'p' → logprob: -13.548744201660156

Token 6: '_left' (ID: 22189)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6980723142623901
    2. '.' → logprob: -0.6980723142623901
    3. '_' → logprob: -5.57307243347168
    4. ' (' → logprob: -8.07307243347168
    5. '._' → logprob: -8.57307243347168
    6. '```' → logprob: -9.19807243347168
    7. '[' → logprob: -9.44807243347168
    8. '`' → logprob: -9.57307243347168
    9. '\' → logprob: -10.07307243347168
    10. '\(' → logprob: -10.07307243347168

Token 7: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002740906202234328
    2. '(
' → logprob: -8.500273704528809
    3. '\(' → logprob: -10.000273704528809
    4. '(

' → logprob: -11.625273704528809
    5. '\n' → logprob: -12.000273704528809
    6. '\' → logprob: -13.625273704528809
    7. '`' → logprob: -13.875273704528809
    8. ' (' → logprob: -13.875273704528809
    9. '"' → logprob: -13.875273704528809
    10. ''' → logprob: -14.125273704528809

Token 8: ' bin' (ID: 6958)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.8471981287002563
    2. 'bis' → logprob: -0.8471981287002563
    3. ' bis' → logprob: -2.347198009490967
    4. 'b' → logprob: -3.347198009490967
    5. '`' → logprob: -5.597198009490967
    6. 'ins' → logprob: -6.347198009490967
    7. 'index' → logprob: -6.722198009490967
    8. ' bl' → logprob: -7.097198009490967
    9. '```' → logprob: -7.222198009490967
    10. ' ' → logprob: -7.472198009490967

Token 9: 'l' (ID: 75)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005707881413400173
    2. '_' → logprob: -6.130707740783691
    3. '[' → logprob: -7.005707740783691
    4. '```' → logprob: -7.505707740783691
    5. '.' → logprob: -7.755707740783691
    6. 'n' → logprob: -7.880707740783691
    7. ')' → logprob: -8.505707740783691
    8. ''' → logprob: -8.880707740783691
    9. 'u' → logprob: -9.380707740783691
    10. ' (' → logprob: -9.630707740783691

Token 10: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023227219935506582
    2. '\(' → logprob: -6.502322673797607
    3. '(
' → logprob: -8.127323150634766
    4. ' (' → logprob: -8.252323150634766
    5. '\' → logprob: -9.877323150634766
    6. ',' → logprob: -10.002323150634766
    7. '\n' → logprob: -10.127323150634766
    8. '`' → logprob: -10.377323150634766
    9. ''' → logprob: -11.127323150634766
    10. '"' → logprob: -11.252323150634766

Token 11: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012349952012300491
    2. '(
' → logprob: -7.001235008239746
    3. '\(' → logprob: -9.376235008239746
    4. ''' → logprob: -9.626235008239746
    5. ',' → logprob: -10.376235008239746
    6. '#' → logprob: -10.751235008239746
    7. '(

' → logprob: -10.751235008239746
    8. 'a' → logprob: -11.001235008239746
    9. '`' → logprob: -11.376235008239746
    10. '.' → logprob: -11.751235008239746

Token 12: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026786476373672485
    2. '_' → logprob: -4.6517863273620605
    3. ' find' → logprob: -5.1517863273620605
    4. ' bin' → logprob: -6.0267863273620605
    5. ' sorted' → logprob: -6.7767863273620605
    6. ' space' → logprob: -7.0267863273620605
    7. ' insert' → logprob: -7.0267863273620605
    8. ' search' → logprob: -7.4017863273620605
    9. ' add' → logprob: -7.7767863273620605
    10. ' ' → logprob: -7.7767863273620605

Token 13: 'in' (ID: 258)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.865207850933075
    2. '_val' → logprob: -0.865207850933075
    3. 'erval' → logprob: -2.7402079105377197
    4. '_' → logprob: -3.7402079105377197
    5. '_convert' → logprob: -4.365207672119141
    6. '_parse' → logprob: -4.490207672119141
    7. '_put' → logprob: -4.740207672119141
    8. 'eger' → logprob: -5.365207672119141
    9. '_er' → logprob: -5.365207672119141
    10. '_to' → logprob: -5.615207672119141

Token 14: '():
' (ID: 8595)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.2850528657436371
    2. 't' → logprob: -1.9100528955459595
    3. 'p' → logprob: -3.53505277633667
    4. 'e' → logprob: -3.53505277633667
    5. '_put' → logprob: -3.91005277633667
    6. 'er' → logprob: -5.16005277633667
    7. '(t' → logprob: -5.41005277633667
    8. '(' → logprob: -6.28505277633667
    9. '```' → logprob: -6.78505277633667
    10. '(p' → logprob: -6.91005277633667

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5710738301277161
    2. ' return' → logprob: -1.5710737705230713
    3. 'return' → logprob: -2.0710737705230713
    4. '(' → logprob: -3.0710737705230713
    5. '()' → logprob: -3.6960737705230713
    6. ' ' → logprob: -4.82107400894165
    7. ' ()' → logprob: -5.07107400894165
    8. '    ' → logprob: -5.44607400894165
    9. '(int' → logprob: -5.94607400894165
    10. '  ' → logprob: -6.57107400894165

Token 16: ' input' (ID: 3422)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2359369844198227
    2. ' return' → logprob: -1.7359369993209839
    3. 'int' → logprob: -3.4859368801116943
    4. '   ' → logprob: -6.860937118530273
    5. ' int' → logprob: -7.235937118530273
    6. 'i' → logprob: -7.485937118530273
    7. 'x' → logprob: -7.735937118530273
    8. 'n' → logprob: -8.235937118530273
    9. 'r' → logprob: -9.735937118530273
    10. '(int' → logprob: -10.110937118530273

Token 17: '_tuple' (ID: 53371)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43356049060821533
    2. '()' → logprob: -1.0585604906082153
    3. '('' → logprob: -6.433560371398926
    4. '("")' → logprob: -6.933560371398926
    5. '().' → logprob: -7.183560371398926
    6. '_' → logprob: -8.058560371398926
    7. '("' → logprob: -8.683560371398926
    8. '("("' → logprob: -8.683560371398926
    9. '```' → logprob: -9.183560371398926
    10. '())' → logprob: -9.433560371398926

Token 18: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6291484832763672
    2. '(' → logprob: -1.5041484832763672
    3. '=' → logprob: -1.8791484832763672
    4. ' =' → logprob: -2.879148483276367
    5. 's' → logprob: -3.629148483276367
    6. '('' → logprob: -6.004148483276367
    7. '_line' → logprob: -7.129148483276367
    8. '_' → logprob: -7.379148483276367
    9. '("' → logprob: -7.379148483276367
    10. '().' → logprob: -7.504148483276367

Token 19: ' input' (ID: 3422)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.21926264464855194
    2. 'map' → logprob: -2.3442625999450684
    3. ' tuple' → logprob: -2.7192625999450684
    4. 'input' → logprob: -4.219262599945068
    5. 'int' → logprob: -4.469262599945068
    6. '(tuple' → logprob: -6.094262599945068
    7. '(' → logprob: -6.219262599945068
    8. ' map' → logprob: -6.594262599945068
    9. 'list' → logprob: -6.719262599945068
    10. '(int' → logprob: -7.844262599945068

Token 20: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2987034022808075
    2. '()' → logprob: -1.4237034320831299
    3. '().' → logprob: -4.173703193664551
    4. '('' → logprob: -7.548703193664551
    5. '(`' → logprob: -7.923703193664551
    6. '("("' → logprob: -8.29870319366455
    7. '("")' → logprob: -8.67370319366455
    8. '("' → logprob: -8.67370319366455
    9. '())' → logprob: -9.29870319366455
    10. '(
' → logprob: -9.67370319366455

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01828162930905819
    2. 'strip' → logprob: -4.01828145980835
    3. 'rstrip' → logprob: -9.018281936645508
    4. ' split' → logprob: -11.768281936645508
    5. 'rs' → logprob: -13.143281936645508
    6. 'spl' → logprob: -14.393281936645508
    7. ' strip' → logprob: -16.643281936645508
    8. 's' → logprob: -16.768281936645508
    9. 'r' → logprob: -16.893281936645508
    10. 'replace' → logprob: -17.393281936645508

Token 22: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2600860595703125
    2. '(' → logprob: -1.7600860595703125
    3. '()' → logprob: -3.5100860595703125
    4. '("("' → logprob: -3.6350860595703125
    5. '("' → logprob: -8.385086059570312
    6. '(`' → logprob: -9.135086059570312
    7. '(
' → logprob: -9.635086059570312
    8. '```' → logprob: -10.135086059570312
    9. ''' → logprob: -10.760086059570312
    10. 'left' → logprob: -11.010086059570312

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11670751124620438
    2. ' ' → logprob: -3.1167075634002686
    3. '[' → logprob: -3.2417075634002686
    4. '  ' → logprob: -5.6167073249816895
    5. '    
' → logprob: -5.6167073249816895
    6. '    ' → logprob: -5.8667073249816895
    7. 'return' → logprob: -5.8667073249816895
    8. '[]' → logprob: -6.3667073249816895
    9. ' 
' → logprob: -6.4917073249816895
    10. ' return' → logprob: -6.6167073249816895

Token 24: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05991610139608383
    2. '   ' → logprob: -3.6849160194396973
    3. ' return' → logprob: -3.9349160194396973
    4. 'if' (adapté à ' if') → logprob: -5.809916019439697
    5. 'n' → logprob: -6.434916019439697
    6. '[' → logprob: -6.559916019439697
    7. 'num' → logprob: -6.934916019439697
    8. ')' → logprob: -7.059916019439697
    9. 'for' → logprob: -7.559916019439697
    10. 'result' → logprob: -7.809916019439697

Token 25: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.46953698992729187
    2. ' input' → logprob: -1.5945370197296143
    3. 'len' → logprob: -2.7195370197296143
    4. ' not' → logprob: -2.9695370197296143
    5. 'input' → logprob: -3.7195370197296143
    6. ' ' → logprob: -4.344536781311035
    7. ''' → logprob: -5.094536781311035
    8. '"' → logprob: -5.719536781311035
    9. ' '' → logprob: -5.844536781311035
    10. ' int' → logprob: -5.969536781311035

Token 26: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.048598501831293106
    2. '(' → logprob: -3.048598527908325
    3. ' (' → logprob: -12.048598289489746
    4. 'input' → logprob: -13.798598289489746
    5. '(user' → logprob: -14.298598289489746
    6. '(output' → logprob: -14.423598289489746
    7. '(
' → logprob: -14.423598289489746
    8. '()' → logprob: -14.548598289489746
    9. '(object' → logprob: -15.298598289489746
    10. ' input' → logprob: -15.673598289489746

Token 27: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.24467504024505615
    2. ')' → logprob: -1.8696750402450562
    3. '(' → logprob: -4.619675159454346
    4. '_token' → logprob: -4.744675159454346
    5. ')_' → logprob: -4.869675159454346
    6. '_' → logprob: -5.119675159454346
    7. '(input' → logprob: -5.244675159454346
    8. '```' → logprob: -5.744675159454346
    9. '(_' → logprob: -5.869675159454346
    10. '_tokens' → logprob: -6.119675159454346

Token 28: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01850469782948494
    2. ' )' → logprob: -5.018504619598389
    3. ')==' → logprob: -5.268504619598389
    4. '==' → logprob: -5.643504619598389
    5. ' ==' → logprob: -6.018504619598389
    6. ')>' → logprob: -8.643505096435547
    7. '>' → logprob: -9.393505096435547
    8. ')>=' → logprob: -9.518505096435547
    9. '()' → logprob: -10.143505096435547
    10. '<' → logprob: -10.268505096435547

Token 29: ' <=' (ID: 5017)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08072458207607269
    2. '==' → logprob: -2.7057244777679443
    3. ' <' → logprob: -5.580724716186523
    4. ' >' → logprob: -5.580724716186523
    5. '>' → logprob: -6.955724716186523
    6. ' ' → logprob: -7.205724716186523
    7. '<' → logprob: -7.455724716186523
    8. ' <=' → logprob: -7.955724716186523
    9. ' >=' → logprob: -8.080724716186523
    10. ')' → logprob: -9.705724716186523

Token 30: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08330610394477844
    2. '0' → logprob: -2.708306074142456
    3. ' ' → logprob: -4.333306312561035
    4. '2' → logprob: -8.833306312561035
    5. '3' → logprob: -11.583306312561035
    6. '  ' → logprob: -14.208306312561035
    7. '4' → logprob: -14.458306312561035
    8. '5' → logprob: -16.20830535888672
    9. '<|end|>' → logprob: -16.20830535888672
    10. '6' → logprob: -16.64580535888672

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18812599778175354
    2. '0' → logprob: -1.8131259679794312
    3. ' ' → logprob: -5.188126087188721
    4. '2' → logprob: -5.938126087188721
    5. '3' → logprob: -9.063125610351562
    6. '4' → logprob: -12.063125610351562
    7. '  ' → logprob: -13.313125610351562
    8. '5' → logprob: -13.563125610351562
    9. '   ' → logprob: -14.188125610351562
    10. '6' → logprob: -14.313125610351562

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005167935509234667
    2. ':return' → logprob: -5.6301679611206055
    3. ' :' → logprob: -7.3801679611206055
    4. ':
' → logprob: -7.3801679611206055
    5. ' or' → logprob: -8.380167961120605
    6. '   ' → logprob: -10.005167961120605
    7. ' and' → logprob: -10.755167961120605
    8. ' return' → logprob: -11.880167961120605
    9. ' :
' → logprob: -12.380167961120605
    10. '       ' → logprob: -12.630167961120605

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08245349675416946
    2. ' return' → logprob: -3.582453489303589
    3. '    ' → logprob: -3.707453489303589
    4. '   ' → logprob: -4.457453727722168
    5. 'return' → logprob: -4.582453727722168
    6. ':' → logprob: -6.582453727722168
    7. ':return' → logprob: -6.707453727722168
    8. ',' → logprob: -7.207453727722168
    9. ' ' → logprob: -7.832453727722168
    10. '     ' → logprob: -8.457453727722168

Token 34: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3494013845920563
    2. 'return' (adapté à ' return') → logprob: -1.2244013547897339
    3. '   ' → logprob: -8.224401473999023
    4. '       ' → logprob: -8.224401473999023
    5. ' ' → logprob: -8.849401473999023
    6. '	return' → logprob: -9.724401473999023
    7. '    ' → logprob: -10.224401473999023
    8. ' 
' → logprob: -10.474401473999023
    9. ':return' → logprob: -10.474401473999023
    10. '
' → logprob: -10.724401473999023

Token 35: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20803098380565643
    2. 'int' → logprob: -1.9580309391021729
    3. ' None' → logprob: -3.208030939102173
    4. 'None' → logprob: -5.458031177520752
    5. ' ' → logprob: -6.583031177520752
    6. '0' → logprob: -8.333030700683594
    7. '[int' → logprob: -9.083030700683594
    8. '<int' → logprob: -9.708030700683594
    9. '  ' → logprob: -10.458030700683594
    10. '(int' → logprob: -10.583030700683594

Token 36: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38710713386535645
    2. '(input' → logprob: -1.1371071338653564
    3. '('' → logprob: -9.262106895446777
    4. '("("' → logprob: -10.012106895446777
    5. '()' → logprob: -10.637106895446777
    6. '(
' → logprob: -10.637106895446777
    7. 'input' → logprob: -12.012106895446777
    8. '("' → logprob: -12.012106895446777
    9. '((' → logprob: -12.012106895446777
    10. '(x' → logprob: -12.137106895446777

Token 37: '_tuple' (ID: 53371)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32396188378334045
    2. '()' → logprob: -1.823961853981018
    3. ')' → logprob: -2.5739619731903076
    4. '())' → logprob: -4.1989617347717285
    5. '_tuple' → logprob: -4.4489617347717285
    6. '('' → logprob: -4.9489617347717285
    7. '(_' → logprob: -6.4489617347717285
    8. '('_' → logprob: -7.4489617347717285
    9. '_' → logprob: -7.8239617347717285
    10. '(
' → logprob: -7.9489617347717285

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.070975071750581e-05
    2. ')' → logprob: -10.500030517578125
    3. '0' → logprob: -13.250030517578125
    4. ' [' → logprob: -13.875030517578125
    5. '[-' → logprob: -15.625030517578125
    6. '   ' → logprob: -16.000030517578125
    7. ' ' → logprob: -16.375030517578125
    8. ' )' → logprob: -17.125030517578125
    9. '```' → logprob: -17.875030517578125
    10. '[
' → logprob: -17.875030517578125

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.875003814697266
    3. '-' → logprob: -14.000003814697266
    4. '   ' → logprob: -15.625003814697266
    5. '[' → logprob: -17.062503814697266
    6. '1' → logprob: -17.687503814697266
    7. '  ' → logprob: -17.937503814697266
    8. '```' → logprob: -18.187503814697266
    9. '00' → logprob: -18.625003814697266
    10. ')' → logprob: -18.750003814697266

Token 40: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055337388068437576
    2. '])' → logprob: -2.930337429046631
    3. '))' → logprob: -8.055336952209473
    4. ' )' → logprob: -10.180336952209473
    5. ')])' → logprob: -10.305336952209473
    6. ']' → logprob: -10.805336952209473
    7. '})' → logprob: -11.055336952209473
    8. ')
' → logprob: -11.555336952209473
    9. ')]' → logprob: -12.430336952209473
    10. ' ])' → logprob: -12.680336952209473

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1153797134757042
    2. '    
' → logprob: -2.990379810333252
    3. '\n' → logprob: -3.865379810333252
    4. '
' → logprob: -4.990379810333252
    5. ' 
' → logprob: -5.115379810333252
    6. 'return' → logprob: -5.240379810333252
    7. ' else' → logprob: -5.365379810333252
    8. 'else' → logprob: -5.615379810333252
    9. ')' → logprob: -5.740379810333252
    10. '   
' → logprob: -6.115379810333252

Token 42: ' return' (ID: 622)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.8461281061172485
    2. 'return' (adapté à ' return') → logprob: -1.4711281061172485
    3. 'else' → logprob: -1.9711281061172485
    4. ' return' → logprob: -2.596127986907959
    5. '   ' → logprob: -2.721127986907959
    6. '[' → logprob: -3.846127986907959
    7. ' ' → logprob: -4.096127986907959
    8. ',' → logprob: -4.596127986907959
    9. '    
' → logprob: -5.721127986907959
    10. ')' → logprob: -6.346127986907959

Token 43: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -1.0545039176940918
    2. '[int' → logprob: -1.1795039176940918
    3. 'tuple' → logprob: -2.054503917694092
    4. ' list' → logprob: -2.179503917694092
    5. 'list' → logprob: -2.929503917694092
    6. ' [' → logprob: -3.804503917694092
    7. '[' → logprob: -4.304503917694092
    8. '[list' → logprob: -5.304503917694092
    9. 'int' → logprob: -5.929503917694092
    10. '[input' → logprob: -6.179503917694092

Token 44: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.20296062529087067
    2. '(int' → logprob: -1.7029606103897095
    3. '(' → logprob: -6.95296049118042
    4. '(input' → logprob: -7.57796049118042
    5. 'map' → logprob: -9.952960968017578
    6. '([' → logprob: -11.452960968017578
    7. 'int' → logprob: -11.702960968017578
    8. '(list' → logprob: -13.077960968017578
    9. '[int' → logprob: -13.077960968017578
    10. '((' → logprob: -13.702960968017578

Token 45: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000516813131980598
    2. 'int' → logprob: -8.125516891479492
    3. '(' → logprob: -8.500516891479492
    4. ' int' → logprob: -12.250516891479492
    5. ',int' → logprob: -12.250516891479492
    6. '<int' → logprob: -12.625516891479492
    7. '[int' → logprob: -13.250516891479492
    8. '(
' → logprob: -14.125516891479492
    9. ' (' → logprob: -14.250516891479492
    10. '=int' → logprob: -14.375516891479492

Token 46: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7520575523376465
    2. ',input' → logprob: -0.7520575523376465
    3. ',' → logprob: -2.8770575523376465
    4. '(' → logprob: -8.002058029174805
    5. ' (' → logprob: -8.627058029174805
    6. ',(' → logprob: -8.752058029174805
    7. 'input' → logprob: -9.002058029174805
    8. ' ,' → logprob: -9.502058029174805
    9. ' input' → logprob: -10.627058029174805
    10. '=input' → logprob: -12.377058029174805

Token 47: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04859384149312973
    2. ' input' → logprob: -3.048593759536743
    3. '(input' → logprob: -13.048593521118164
    4. ',input' → logprob: -13.673593521118164
    5. ' ' → logprob: -14.173593521118164
    6. '   ' → logprob: -14.298593521118164
    7. '	input' → logprob: -14.423593521118164
    8. '[input' → logprob: -14.798593521118164
    9. ')' → logprob: -15.673593521118164
    10. '_input' → logprob: -16.048593521118164

Token 48: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.0012176171876490116
    2. ')_' → logprob: -8.25121784210205
    3. ')' → logprob: -8.37621784210205
    4. '_t' → logprob: -8.50121784210205
    5. '       ' → logprob: -9.75121784210205
    6. 's' → logprob: -9.75121784210205
    7. '   ' → logprob: -9.75121784210205
    8. '))' → logprob: -9.87621784210205
    9. '_' → logprob: -10.12621784210205
    10. 'tuple' → logprob: -10.12621784210205

Token 49: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010834212880581617
    2. ')))' → logprob: -7.3760833740234375
    3. '[' → logprob: -9.126083374023438
    4. ' ))' → logprob: -9.126083374023438
    5. ')' → logprob: -9.251083374023438
    6. '   ' → logprob: -9.501083374023438
    7. '))
' → logprob: -10.251083374023438
    8. '       ' → logprob: -11.626083374023438
    9. ' ' → logprob: -12.001083374023438
    10. ',' → logprob: -12.751083374023438

Token 50: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2907591760158539
    2. '
' → logprob: -1.5407592058181763
    3. '\n' → logprob: -4.290759086608887
    4. '\' → logprob: -4.790759086608887
    5. '

' → logprob: -4.915759086608887
    6. '(' → logprob: -6.165759086608887
    7. 'd' → logprob: -6.290759086608887
    8. 'n' → logprob: -7.040759086608887
    9. '```' → logprob: -7.290759086608887
    10. '(
' → logprob: -7.665759086608887

Token 51: ' int' (ID: 677)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.8094850778579712
    2. ' main' → logprob: -1.0594850778579712
    3. ' bin' → logprob: -2.3094849586486816
    4. ' binary' → logprob: -3.5594849586486816
    5. ' max' → logprob: -4.434484958648682
    6. ' count' → logprob: -4.809484958648682
    7. ' find' → logprob: -4.934484958648682
    8. ' is' → logprob: -5.184484958648682
    9. ' factorial' → logprob: -5.434484958648682
    10. ' solution' → logprob: -5.559484958648682

Token 52: 'ina' (ID: 1522)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.007674772758036852
    2. '()' → logprob: -6.007674694061279
    3. 's' → logprob: -6.007674694061279
    4. 'n' → logprob: -7.507674694061279
    5. '_list' → logprob: -7.632674694061279
    6. 'out' → logprob: -8.132675170898438
    7. ' in' → logprob: -8.882675170898438
    8. 'array' → logprob: -9.132675170898438
    9. '_in' → logprob: -9.257675170898438
    10. '_input' → logprob: -9.257675170898438

Token 53: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8290398120880127
    2. '():' → logprob: -0.8290398120880127
    3. 'put' → logprob: -2.4540398120880127
    4. 't' → logprob: -3.9540398120880127
    5. '():
' → logprob: -4.954039573669434
    6. 'ut' → logprob: -5.704039573669434
    7. '())' → logprob: -5.829039573669434
    8. 'me' → logprob: -6.079039573669434
    9. '()):
' → logprob: -6.829039573669434
    10. 'def' → logprob: -6.954039573669434

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01580570638179779
    2. '[]' → logprob: -4.515805721282959
    3. 'return' → logprob: -6.265805721282959
    4. ' return' → logprob: -6.640805721282959
    5. ' []' → logprob: -6.765805721282959
    6. '()' → logprob: -8.7658052444458
    7. '[' → logprob: -9.6408052444458
    8. 'def' → logprob: -10.3908052444458
    9. '[]
' → logprob: -10.7658052444458
    10. 'list' → logprob: -10.8908052444458

Token 55: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11778009682893753
    2. ' return' → logprob: -2.2427802085876465
    3. 'list' → logprob: -5.6177802085876465
    4. ' list' → logprob: -7.1177802085876465
    5. '   ' → logprob: -7.8677802085876465
    6. 'input' → logprob: -9.867779731750488
    7. 'map' → logprob: -10.492779731750488
    8. 'def' → logprob: -11.492779731750488
    9. 'import' → logprob: -11.867779731750488
    10. ' map' → logprob: -12.617779731750488

Token 56: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.16046346724033356
    2. 'list' → logprob: -1.9104634523391724
    3. '[list' → logprob: -8.660463333129883
    4. ' [' → logprob: -10.285463333129883
    5. '[' → logprob: -11.035463333129883
    6. ' tuple' → logprob: -11.410463333129883
    7. 'tuple' → logprob: -13.160463333129883
    8. '	list' → logprob: -14.410463333129883
    9. '[int' → logprob: -14.410463333129883
    10. '(list' → logprob: -14.910463333129883

Token 57: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.096126576769166e-05
    2. ' int' → logprob: -10.125041007995605
    3. '  ' → logprob: -15.750041007995605
    4. 'map' → logprob: -15.750041007995605
    5. '   ' → logprob: -16.00004005432129
    6. ']int' → logprob: -16.00004005432129
    7. '*' → logprob: -16.12504005432129
    8. '<int' → logprob: -16.75004005432129
    9. ' ' → logprob: -16.75004005432129
    10. '	int' → logprob: -17.25004005432129

Token 58: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2014942169189453
    2. '(i' → logprob: -1.7014942169189453
    3. '(_)' → logprob: -10.326494216918945
    4. '(s' → logprob: -11.076494216918945
    5. '(a' → logprob: -12.076494216918945
    6. '(n' → logprob: -12.076494216918945
    7. '(' → logprob: -12.201494216918945
    8. 'i' → logprob: -12.326494216918945
    9. '(e' → logprob: -12.576494216918945
    10. 'x' → logprob: -13.326494216918945

Token 59: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.14908722043037415
    2. ')' → logprob: -3.0240871906280518
    3. 'for' → logprob: -3.5240871906280518
    4. ' for' → logprob: -3.8990871906280518
    5. '(input' → logprob: -3.8990871906280518
    6. '(i' → logprob: -4.649087429046631
    7. '()' → logprob: -5.149087429046631
    8. 'input' → logprob: -6.649087429046631
    9. '(s' → logprob: -7.274087429046631
    10. 'x' → logprob: -7.274087429046631

Token 60: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1945776641368866
    2. ' for' → logprob: -2.444577693939209
    3. '(input' → logprob: -3.319577693939209
    4. 'for' → logprob: -3.444577693939209
    5. '(i' → logprob: -4.069577693939209
    6. '(s' → logprob: -6.069577693939209
    7. '(in' → logprob: -7.194577693939209
    8. ' (' → logprob: -7.319577693939209
    9. '(' → logprob: -7.694577693939209
    10. '(token' → logprob: -9.06957721710205

Token 61: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1269317865371704
    2. 'input' → logprob: -2.126931667327881
    3. '(input' → logprob: -13.876932144165039
    4. ' in' → logprob: -14.376932144165039
    5. ' ' → logprob: -14.501932144165039
    6. '_' → logprob: -14.751932144165039
    7. '	input' → logprob: -14.876932144165039
    8. '=input' → logprob: -15.251932144165039
    9. '_input' → logprob: -15.501932144165039
    10. 'in' → logprob: -15.876932144165039

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0698382779955864
    2. ' input' → logprob: -2.944838285446167
    3. 'input' → logprob: -4.694838047027588
    4. 'in' → logprob: -5.444838047027588
    5. '(input' → logprob: -6.819838047027588
    6. '(' → logprob: -9.069838523864746
    7. '=input' → logprob: -9.194838523864746
    8. ',input' → logprob: -10.694838523864746
    9. '_' → logprob: -11.444838523864746
    10. ' ' → logprob: -11.569838523864746

Token 63: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048590436577796936
    2. ' input' → logprob: -3.0485904216766357
    3. '(input' → logprob: -13.298590660095215
    4. ' ' → logprob: -14.673590660095215
    5. '   ' → logprob: -14.923590660095215
    6. '<input' → logprob: -15.673590660095215
    7. '=input' → logprob: -16.0485897064209
    8. '	input' → logprob: -16.1735897064209
    9. '  ' → logprob: -16.6735897064209
    10. '.input' → logprob: -16.6735897064209

Token 64: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.026371710002422333
    2. '()' → logprob: -3.776371717453003
    3. '()]' → logprob: -5.776371479034424
    4. '())' → logprob: -11.526371955871582
    5. '(' → logprob: -12.901371955871582
    6. '()
' → logprob: -13.151371955871582
    7. '()][' → logprob: -14.026371955871582
    8. '().__' → logprob: -14.151371955871582
    9. '()-' → logprob: -14.151371955871582
    10. '()[' → logprob: -14.276371955871582

Token 65: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043460296001285315
    2. 'strip' → logprob: -7.750434398651123
    3. 'rstrip' → logprob: -12.875434875488281
    4. ' split' → logprob: -13.625434875488281
    5. '(split' → logprob: -15.750434875488281
    6. '.split' → logprob: -16.62543487548828
    7. 'spl' → logprob: -17.87543487548828
    8. '_split' → logprob: -19.25043487548828
    9. 'plit' → logprob: -19.75043487548828
    10. '().' → logprob: -20.62543487548828

Token 66: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -3.15441757265944e-05
    2. '()' → logprob: -10.625031471252441
    3. '(' → logprob: -12.375031471252441
    4. ']' → logprob: -12.875031471252441
    5. '())' → logprob: -16.000032424926758
    6. '()]
' → logprob: -16.375032424926758
    7. ' ()' → logprob: -16.875032424926758
    8. ']()' → logprob: -16.875032424926758
    9. '()],' → logprob: -18.125032424926758
    10. '()].' → logprob: -18.250032424926758

Token 67: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.08385654538869858
    2. ']' → logprob: -2.8338565826416016
    3. ')]' → logprob: -3.8338565826416016
    4. '()' → logprob: -11.708856582641602
    5. '())' → logprob: -12.333856582641602
    6. '])' → logprob: -12.708856582641602
    7. ' ]' → logprob: -13.333856582641602
    8. ']()' → logprob: -13.333856582641602
    9. '`]' → logprob: -13.583856582641602
    10. ')' → logprob: -13.708856582641602

Token 68: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026470402255654335
    2. 'n' → logprob: -4.901470184326172
    3. '\' → logprob: -5.151470184326172
    4. '
' → logprob: -5.276470184326172
    5. 'class' → logprob: -6.026470184326172
    6. 'd' → logprob: -6.026470184326172
    7. '\n' → logprob: -6.151470184326172
    8. '

' → logprob: -8.276470184326172
    9. 'ndef' → logprob: -9.276470184326172
    10. '```' → logprob: -9.526470184326172

Token 69: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4446057379245758
    2. ' main' → logprob: -1.4446057081222534
    3. ' binary' → logprob: -3.694605827331543
    4. '_' → logprob: -3.819605827331543
    5. ' bin' → logprob: -3.944605827331543
    6. ' ' → logprob: -4.819605827331543
    7. ' max' → logprob: -5.069605827331543
    8. ' solve' → logprob: -5.194605827331543
    9. ' is' → logprob: -5.444605827331543
    10. 'int' → logprob: -5.444605827331543

Token 70: 'in' (ID: 258)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05070578306913376
    2. 'in' → logprob: -3.675705671310425
    3. 'def' → logprob: -6.175705909729004
    4. '64' → logprob: -6.300705909729004
    5. 'a' → logprob: -6.425705909729004
    6. '(' → logprob: -6.425705909729004
    7. 'list' → logprob: -6.550705909729004
    8. 'put' → logprob: -6.675705909729004
    9. '_list' → logprob: -6.800705909729004
    10. '32' → logprob: -6.925705909729004

Token 71: 'l' (ID: 75)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.73393315076828
    2. 'put' → logprob: -1.1089332103729248
    3. '()' → logprob: -1.9839332103729248
    4. '(' → logprob: -4.483932971954346
    5. 'n' → logprob: -4.858932971954346
    6. '_array' → logprob: -4.983932971954346
    7. 'array' → logprob: -5.608932971954346
    8. '_tuple' → logprob: -5.733932971954346
    9. '_list' → logprob: -6.358932971954346
    10. '():' → logprob: -6.358932971954346

Token 72: '(count' (ID: 25892)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07017350196838379
    2. '()' → logprob: -2.695173501968384
    3. 'ist' → logprob: -8.945173263549805
    4. '():
' → logprob: -9.695173263549805
    5. ' ()' → logprob: -11.195173263549805
    6. ' ():' → logprob: -12.195173263549805
    7. 'ine' → logprob: -12.320173263549805
    8. '()]' → logprob: -12.820173263549805
    9. '(' → logprob: -12.820173263549805
    10. '():

' → logprob: -13.070173263549805

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014546103775501251
    2. '=' → logprob: -4.389545917510986
    3. ')' → logprob: -6.889545917510986
    4. '():' → logprob: -7.139545917510986
    5. '()' → logprob: -9.139546394348145
    6. '):
' → logprob: -9.764546394348145
    7. ' ):' → logprob: -10.264546394348145
    8. ':' → logprob: -12.264546394348145
    9. '   ' → logprob: -12.264546394348145
    10. ' ' → logprob: -12.764546394348145

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01189081184566021
    2. ' return' → logprob: -4.761890888214111
    3. 'return' → logprob: -6.761890888214111
    4. '	return' → logprob: -7.136890888214111
    5. '    ' → logprob: -7.636890888214111
    6. ' ' → logprob: -7.761890888214111
    7. '    
' → logprob: -9.636890411376953
    8. '(' → logprob: -9.761890411376953
    9. '(n' → logprob: -9.761890411376953
    10. '  ' → logprob: -10.136890411376953

Token 75: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08529888838529587
    2. 'return' (adapté à ' return') → logprob: -2.710298776626587
    3. '   ' → logprob: -4.210299015045166
    4. ' input' → logprob: -9.710298538208008
    5. ' [' → logprob: -9.835298538208008
    6. ' l' → logprob: -9.835298538208008
    7. ' result' → logprob: -10.085298538208008
    8. '[]' → logprob: -10.460298538208008
    9. 'result' → logprob: -10.585298538208008
    10. '	return' → logprob: -11.085298538208008

Token 76: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.12958072125911713
    2. ' [' → logprob: -2.1295807361602783
    3. '[' → logprob: -6.004580497741699
    4. '[list' → logprob: -8.8795804977417
    5. '[input' → logprob: -11.3795804977417
    6. ' ' → logprob: -11.8795804977417
    7. '[Int' → logprob: -11.8795804977417
    8. '[List' → logprob: -12.1295804977417
    9. '[t' → logprob: -12.6295804977417
    10. '   ' → logprob: -13.7545804977417

Token 77: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001487140398239717
    2. ' int' → logprob: -8.87514877319336
    3. '   ' → logprob: -12.62514877319336
    4. '(int' → logprob: -13.37514877319336
    5. '[int' → logprob: -14.00014877319336
    6. '	int' → logprob: -14.62514877319336
    7. '0' → logprob: -14.87514877319336
    8. '<int' → logprob: -15.00014877319336
    9. ' ' → logprob: -15.12514877319336
    10. '  ' → logprob: -15.25014877319336

Token 78: 'in' (ID: 258)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00015622020873706788
    2. 'input' → logprob: -9.12515640258789
    3. '(i' → logprob: -10.75015640258789
    4. 'in' → logprob: -11.87515640258789
    5. '(in' → logprob: -11.87515640258789
    6. '()' → logprob: -12.62515640258789
    7. '(x' → logprob: -12.87515640258789
    8. '(int' → logprob: -12.87515640258789
    9. '(' → logprob: -13.25015640258789
    10. '(inp' → logprob: -14.00015640258789

Token 79: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018129866803064942
    2. '())' → logprob: -6.751812934875488
    3. '()]' → logprob: -7.376812934875488
    4. ')' → logprob: -11.751812934875488
    5. '()
' → logprob: -12.626812934875488
    6. '`()' → logprob: -13.626812934875488
    7. '()`' → logprob: -14.376812934875488
    8. '(' → logprob: -14.626812934875488
    9. ']()' → logprob: -14.626812934875488
    10. ' ' → logprob: -14.626812934875488

Token 80: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00044008632539771497
    2. ')' → logprob: -8.875439643859863
    3. 'for' → logprob: -8.875439643859863
    4. ' for' → logprob: -9.000439643859863
    5. '()]' → logprob: -10.750439643859863
    6. '())' → logprob: -12.375439643859863
    7. '(' → logprob: -12.375439643859863
    8. ' ()' → logprob: -12.500439643859863
    9. '   ' → logprob: -13.750439643859863
    10. '(count' → logprob: -14.000439643859863

Token 81: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48236605525016785
    2. ' range' → logprob: -1.2323660850524902
    3. 'range' → logprob: -2.4823660850524902
    4. ' _' → logprob: -4.98236608505249
    5. '_range' → logprob: -8.107365608215332
    6. ' in' → logprob: -8.607365608215332
    7. 'i' → logprob: -9.107365608215332
    8. '(range' → logprob: -10.607365608215332
    9. ' i' → logprob: -11.357365608215332
    10. 'in' → logprob: -11.482365608215332

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003169749164953828
    2. 'in' → logprob: -6.128169536590576
    3. ' range' → logprob: -7.378169536590576
    4. 'range' → logprob: -8.128170013427734
    5. ' ' → logprob: -9.753170013427734
    6. '_' → logprob: -12.253170013427734
    7. ' _' → logprob: -14.253170013427734
    8. '  ' → logprob: -14.253170013427734
    9. '	range' → logprob: -16.378170013427734
    10. '<|end|>' → logprob: -16.878170013427734

Token 83: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132728636264801
    2. ' range' → logprob: -1.3132728338241577
    3. '	range' → logprob: -12.563272476196289
    4. '_' → logprob: -13.063272476196289
    5. ' ' → logprob: -13.063272476196289
    6. '(range' → logprob: -13.813272476196289
    7. 'count' → logprob: -14.313272476196289
    8. '_range' → logprob: -14.313272476196289
    9. 'rang' → logprob: -14.563272476196289
    10. ' xrange' → logprob: -15.563272476196289

Token 84: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.03804963827133179
    2. '(' → logprob: -3.2880496978759766
    3. ' (' → logprob: -12.163049697875977
    4. '(
' → logprob: -13.788049697875977
    5. '(c' → logprob: -14.288049697875977
    6. '(cnt' → logprob: -14.913049697875977
    7. '(

' → logprob: -15.038049697875977
    8. '(counter' → logprob: -15.538049697875977
    9. '((' → logprob: -15.913049697875977
    10. '(range' → logprob: -16.288049697875977

Token 85: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0041556875221431255
    2. ')' → logprob: -5.50415563583374
    3. ']' → logprob: -9.504156112670898
    4. ')]
' → logprob: -14.129156112670898
    5. ')
' → logprob: -14.379156112670898
    6. ')])' → logprob: -14.879156112670898
    7. '))' → logprob: -15.004156112670898
    8. '   ' → logprob: -15.504156112670898
    9. ')}' → logprob: -15.879156112670898
    10. ' )' → logprob: -16.1291561126709

Token 86: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6767408847808838
    2. 'd' → logprob: -0.8017408847808838
    3. 'n' → logprob: -4.301740646362305
    4. '
' → logprob: -4.926740646362305
    5. '(' → logprob: -5.051740646362305
    6. '\' → logprob: -5.176740646362305
    7. '#' → logprob: -5.176740646362305
    8. '\n' → logprob: -7.051740646362305
    9. 'de' → logprob: -7.676740646362305
    10. '(
' → logprob: -7.801740646362305

Token 87: ' mod' (ID: 1812)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.08778417110443115
    2. '_' → logprob: -3.0877842903137207
    3. ' bin' → logprob: -3.9627842903137207
    4. ' main' → logprob: -5.462784290313721
    5. ' ' → logprob: -5.962784290313721
    6. 'int' → logprob: -6.087784290313721
    7. '_bin' → logprob: -6.212784290313721
    8. ' _' → logprob: -6.337784290313721
    9. ' in' → logprob: -6.462784290313721
    10. ' i' → logprob: -7.775284290313721

Token 88: 'add' (ID: 964)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24501527845859528
    2. ' =' → logprob: -1.745015263557434
    3. '=' → logprob: -3.8700153827667236
    4. ' ' → logprob: -4.4950151443481445
    5. ' _' → logprob: -5.4950151443481445
    6. ':' → logprob: -5.4950151443481445
    7. '_:' → logprob: -7.4950151443481445
    8. ' :' → logprob: -7.6200151443481445
    9. '_value' → logprob: -8.870015144348145
    10. '_space' → logprob: -8.995015144348145

Token 89: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020890454470645636
    2. '(a' → logprob: -8.750208854675293
    3. '("("' → logprob: -10.625208854675293
    4. ' (' → logprob: -11.500208854675293
    5. '(x' → logprob: -12.625208854675293
    6. '((' → logprob: -13.625208854675293
    7. '(n' → logprob: -13.875208854675293
    8. '_' → logprob: -14.000208854675293
    9. '(
' → logprob: -14.000208854675293
    10. '(*' → logprob: -14.125208854675293

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001867326645879075
    2. ' ,' → logprob: -8.625186920166016
    3. '):' → logprob: -12.875186920166016
    4. ',x' → logprob: -13.625186920166016
    5. ')' → logprob: -14.125186920166016
    6. ',n' → logprob: -14.375186920166016
    7. ',y' → logprob: -14.750186920166016
    8. ' ' → logprob: -15.500186920166016
    9. ',a' → logprob: -15.750186920166016
    10. ',
' → logprob: -15.875186920166016

Token 91: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.062037598341703415
    2. ' y' → logprob: -2.812037706375122
    3. '<|end|>' → logprob: -10.062037467956543
    4. '	y' → logprob: -11.812037467956543
    5. ' ' → logprob: -11.937037467956543
    6. ')' → logprob: -12.812037467956543
    7. ',y' → logprob: -12.812037467956543
    8. '<|end|>' → logprob: -13.562037467956543
    9. 'n' → logprob: -14.062037467956543
    10. '  ' → logprob: -14.312037467956543

Token 92: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6967945098876953
    2. '):' → logprob: -0.6967945098876953
    3. ')' → logprob: -5.696794509887695
    4. ' ):' → logprob: -8.696794509887695
    5. '):
' → logprob: -9.946794509887695
    6. ' ,' → logprob: -10.321794509887695
    7. ':' → logprob: -11.196794509887695
    8. '),' → logprob: -12.571794509887695
    9. ' )' → logprob: -12.821794509887695
    10. ' ' → logprob: -12.946794509887695

Token 93: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1069900169968605
    2. '(' → logprob: -2.981990098953247
    3. '(x' → logprob: -4.106989860534668
    4. '):' → logprob: -4.356989860534668
    5. ' (' → logprob: -4.856989860534668
    6. '   ' → logprob: -5.606989860534668
    7. ' return' → logprob: -5.856989860534668
    8. ' :' → logprob: -6.106989860534668
    9. ',' → logprob: -6.231989860534668
    10. ':
' → logprob: -6.981989860534668

Token 94: ' global' (ID: 5466)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.49829190969467163
    2. ' return' → logprob: -1.4982919692993164
    3. ' ' → logprob: -2.7482919692993164
    4. '(' → logprob: -3.2482919692993164
    5. ' x' → logprob: -3.7482919692993164
    6. 'return' → logprob: -3.9982919692993164
    7. '   ' → logprob: -4.123291969299316
    8. '(x' → logprob: -5.248291969299316
    9. 'x' → logprob: -6.623291969299316
    10. '  ' → logprob: -8.498291969299316

Token 95: ' mod' (ID: 1812)
  Prédit: ' MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -1.189589500427246
    2. 'MOD' → logprob: -1.189589500427246
    3. 'mod' → logprob: -1.689589500427246
    4. ' mod' → logprob: -1.689589500427246
    5. ' M' → logprob: -4.564589500427246
    6. 'M' → logprob: -5.189589500427246
    7. 'm' → logprob: -6.189589500427246
    8. ' m' → logprob: -6.814589500427246
    9. ' md' → logprob: -7.877089500427246
    10. '_mod' → logprob: -8.002089500427246

Token 96: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2238364219665527
    2. '<|end|>' → logprob: -1.4738364219665527
    3. ',' → logprob: -1.9738364219665527
    4. '
' → logprob: -2.4738364219665527
    5. '   ' → logprob: -2.7238364219665527
    6. '<|end|>' → logprob: -2.9738364219665527
    7. ' ' → logprob: -3.0988364219665527
    8. '+' → logprob: -3.8488364219665527
    9. ':
' → logprob: -3.9738364219665527
    10. ' 
' → logprob: -4.723836421966553

Token 97: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45897555351257324
    2. '   ' → logprob: -1.0839755535125732
    3. ':' → logprob: -4.583975791931152
    4. ',' → logprob: -5.583975791931152
    5. ' return' → logprob: -5.708975791931152
    6. ' ' → logprob: -5.833975791931152
    7. ' 
' → logprob: -5.958975791931152
    8. ')' → logprob: -6.708975791931152
    9. ':
' → logprob: -6.958975791931152
    10. '<|end|>' → logprob: -7.083975791931152

Token 98: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.373077392578125
    2. ' return' → logprob: -1.623077392578125
    3. 'return' (adapté à ' return') → logprob: -2.998077392578125
    4. '   ' → logprob: -2.998077392578125
    5. '<|end|>' → logprob: -4.998077392578125
    6. '	return' → logprob: -5.873077392578125
    7. ')' → logprob: -6.873077392578125
    8. '<|end|>' → logprob: -7.123077392578125
    9. ' 
' → logprob: -7.373077392578125
    10. '    
' → logprob: -7.498077392578125

Token 99: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0013327404158189893
    2. '(x' → logprob: -6.626332759857178
    3. '(' → logprob: -12.37633228302002
    4. ' ((' → logprob: -13.50133228302002
    5. ' ' → logprob: -14.87633228302002
    6. '(max' → logprob: -15.00133228302002
    7. '((' → logprob: -15.62633228302002
    8. ' x' → logprob: -16.251333236694336
    9. '(y' → logprob: -17.001333236694336
    10. '(f' → logprob: -17.626333236694336

Token 100: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009990514256060123
    2. ' x' → logprob: -4.634990692138672
    3. '(x' → logprob: -8.384990692138672
    4. ' (' → logprob: -12.134990692138672
    5. '(' → logprob: -15.134990692138672
    6. '   ' → logprob: -15.509990692138672
    7. ')x' → logprob: -15.509990692138672
    8. '	x' → logprob: -15.634990692138672
    9. '{x' → logprob: -17.009990692138672
    10. ' ' → logprob: -18.384990692138672

Token 101: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932308673858643
    2. ' +' → logprob: -0.6932308673858643
    3. '+y' → logprob: -9.568230628967285
    4. '+x' → logprob: -11.443230628967285
    5. '+r' → logprob: -14.693230628967285
    6. '+m' → logprob: -14.943230628967285
    7. '+k' → logprob: -14.943230628967285
    8. '+p' → logprob: -15.068230628967285
    9. '+n' → logprob: -15.318230628967285
    10. ' +
' → logprob: -15.568230628967285

Token 102: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07889044284820557
    2. 'y' → logprob: -2.578890323638916
    3. ')' → logprob: -15.578890800476074
    4. ' ' → logprob: -15.828890800476074
    5. '	y' → logprob: -15.828890800476074
    6. '<|end|>' → logprob: -16.203889846801758
    7. ')y' → logprob: -16.703889846801758
    8. ''y' → logprob: -17.328889846801758
    9. '(y' → logprob: -17.828889846801758
    10. ',' → logprob: -17.953889846801758

Token 103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046141279744915664
    2. ' )' → logprob: -8.37546157836914
    3. ')%' → logprob: -8.37546157836914
    4. '%' → logprob: -15.12546157836914
    5. ')
' → logprob: -16.37546157836914
    6. '）' → logprob: -17.12546157836914
    7. ')

' → logprob: -17.37546157836914
    8. '   ' → logprob: -18.00046157836914
    9. '+' → logprob: -18.75046157836914
    10. ' ' → logprob: -19.00046157836914

Token 104: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06196948140859604
    2. '%' → logprob: -2.811969518661499
    3. ' ' → logprob: -14.186969757080078
    4. ' mod' → logprob: -14.311969757080078
    5. ' %
' → logprob: -15.436969757080078
    6. ' ' → logprob: -16.186969757080078
    7. ')' → logprob: -16.436969757080078
    8. '<|end|>' → logprob: -16.561969757080078
    9. 'mod' → logprob: -16.811969757080078
    10. ')%' → logprob: -17.311969757080078

Token 105: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.014176084659993649
    2. 'mod' → logprob: -4.264175891876221
    3. ' ' → logprob: -11.889176368713379
    4. '(mod' → logprob: -12.264176368713379
    5. '	mod' → logprob: -14.639176368713379
    6. ' ' → logprob: -15.264176368713379
    7. '32' → logprob: -15.639176368713379
    8. ' 
' → logprob: -17.389175415039062
    9. ' mo' → logprob: -17.764175415039062
    10. ' modul' → logprob: -17.889175415039062

Token 106: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: 'def' (ID: 1314)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0704874992370605
    2. '
' → logprob: -1.0704874992370605
    3. 'def' → logprob: -2.0704874992370605
    4. '```' → logprob: -3.4454874992370605
    5. ' ' → logprob: -4.0704874992370605
    6. '_' → logprob: -4.0704874992370605
    7. '#' → logprob: -4.4454874992370605
    8. ')' → logprob: -4.5704874992370605
    9. ',' → logprob: -4.5704874992370605
    10. '' → logprob: -4.8204874992370605

Token 108: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.6326930522918701
    2. 'mod' → logprob: -0.7576930522918701
    3. '	mod' → logprob: -11.57019329071045
    4. ' ' → logprob: -11.63269329071045
    5. ' modular' → logprob: -11.69519329071045
    6. 'def' → logprob: -11.82019329071045
    7. '_mod' → logprob: -12.44519329071045
    8. 'int' → logprob: -12.69519329071045
    9. 'main' → logprob: -12.82019329071045
    10. 'mods' → logprob: -12.88269329071045

Token 109: 'ml' (ID: 1560)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.2050817459821701
    2. 'mul' → logprob: -1.7050817012786865
    3. 'subtract' → logprob: -6.330081939697266
    4. 'mult' → logprob: -6.955081939697266
    5. '_mul' → logprob: -7.830081939697266
    6. '_sub' → logprob: -8.205081939697266
    7. 'multiply' → logprob: -8.705081939697266
    8. '-' → logprob: -10.955081939697266
    9. 'pow' → logprob: -11.580081939697266
    10. '_mult' → logprob: -11.830081939697266

Token 110: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06500757485628128
    2. 'tip' → logprob: -3.3150076866149902
    3. 'ip' → logprob: -4.06500768661499
    4. 'def' → logprob: -4.94000768661499
    5. '(x' → logprob: -7.56500768661499
    6. 'p' → logprob: -7.69000768661499
    7. 'py' → logprob: -7.94000768661499
    8. 'ply' → logprob: -8.440007209777832
    9. 'y' → logprob: -8.940007209777832
    10. 'ti' → logprob: -9.565007209777832

Token 111: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06246715784072876
    2. '(' → logprob: -2.812467098236084
    3. 'ip' → logprob: -7.937467098236084
    4. ' (' → logprob: -9.937467575073242
    5. '(y' → logprob: -10.437467575073242
    6. 't' → logprob: -11.062467575073242
    7. '(a' → logprob: -11.062467575073242
    8. '(ip' → logprob: -11.562467575073242
    9. '(i' → logprob: -12.687467575073242
    10. 'f' → logprob: -13.062467575073242

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002812124788761139
    2. ' ,' → logprob: -6.127811908721924
    3. ',y' → logprob: -7.377811908721924
    4. ',x' → logprob: -14.127812385559082
    5. ' y' → logprob: -15.002812385559082
    6. 'y' → logprob: -15.627812385559082
    7. ',
' → logprob: -16.002811431884766
    8. '(y' → logprob: -16.127811431884766
    9. ',Y' → logprob: -16.252811431884766
    10. '(x' → logprob: -16.627811431884766

Token 113: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5231357216835022
    2. ' y' → logprob: -0.8981357216835022
    3. '<|end|>' → logprob: -11.898136138916016
    4. ' ' → logprob: -13.648136138916016
    5. '(y' → logprob: -13.898136138916016
    6. '	y' → logprob: -14.648136138916016
    7. ')' → logprob: -14.773136138916016
    8. 'x' → logprob: -14.773136138916016
    9. ')y' → logprob: -14.898136138916016
    10. ''y' → logprob: -14.898136138916016

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006010498036630452
    2. '):
' → logprob: -7.500600814819336
    3. ')' → logprob: -10.125600814819336
    4. '):
' → logprob: -12.125600814819336
    5. ' ):' → logprob: -13.625600814819336
    6. ':' → logprob: -14.125600814819336
    7. '   ' → logprob: -14.875600814819336
    8. ',' → logprob: -16.625600814819336
    9. '):

' → logprob: -16.875600814819336
    10. '**' → logprob: -17.500600814819336

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07902462780475616
    2. ':' → logprob: -3.70402455329895
    3. '(x' → logprob: -3.70402455329895
    4. '<|end|>' → logprob: -4.829024791717529
    5. '):' → logprob: -5.204024791717529
    6. '(' → logprob: -5.579024791717529
    7. ')' → logprob: -6.204024791717529
    8. ' ' → logprob: -6.454024791717529
    9. '(global' → logprob: -6.704024791717529
    10. '  ' → logprob: -6.704024791717529

Token 116: ' global' (ID: 5466)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' (adapté à ' global') → logprob: -0.2026808261871338
    2. ' global' → logprob: -1.7026808261871338
    3. '(global' → logprob: -7.952680587768555
    4. '   ' → logprob: -8.202680587768555
    5. 'return' → logprob: -8.327680587768555
    6. 'def' → logprob: -9.077680587768555
    7. ' return' → logprob: -9.327680587768555
    8. ' ' → logprob: -9.952680587768555
    9. '
' → logprob: -9.952680587768555
    10. '_global' → logprob: -10.077680587768555

Token 117: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.023245712742209435
    2. ' mod' → logprob: -3.7732458114624023
    3. '(mod' → logprob: -15.648245811462402
    4. '	mod' → logprob: -16.773244857788086
    5. '_mod' → logprob: -18.898244857788086
    6. ' ' → logprob: -19.398244857788086
    7. '```' → logprob: -20.398244857788086
    8. ' мод' → logprob: -20.523244857788086
    9. '.mod' → logprob: -20.523244857788086
    10. 'x' → logprob: -21.398244857788086

Token 118: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.694766489090398e-05
    2. '
' → logprob: -10.375066757202148
    3. ' return' → logprob: -11.000066757202148
    4. 'return' → logprob: -11.000066757202148
    5. ')' → logprob: -14.250066757202148
    6. '<|end|>' → logprob: -14.375066757202148
    7. '	return' → logprob: -14.500066757202148
    8. '  ' → logprob: -15.625066757202148
    9. ' ' → logprob: -16.12506675720215
    10. '    
' → logprob: -16.25006675720215

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00029279827140271664
    2. ' return' → logprob: -8.875292778015137
    3. 'return' → logprob: -9.250292778015137
    4. '
' → logprob: -9.875292778015137
    5. '	return' → logprob: -12.875292778015137
    6. '    
' → logprob: -14.250292778015137
    7. '  ' → logprob: -14.625292778015137
    8. '
' → logprob: -15.000292778015137
    9. '    ' → logprob: -15.250292778015137
    10. ')' → logprob: -15.375292778015137

Token 120: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.23956575989723206
    2. ' return' → logprob: -2.239565849304199
    3. '   ' → logprob: -2.239565849304199
    4. '	return' → logprob: -10.9895658493042
    5. ':return' → logprob: -13.6145658493042
    6. 'eturn' → logprob: -13.9895658493042
    7. ' ' → logprob: -14.6145658493042
    8. '```' → logprob: -14.7395658493042
    9. 'def' → logprob: -14.9895658493042
    10. '  ' → logprob: -15.4895658493042

Token 121: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.018175575882196426
    2. '(x' → logprob: -4.0181756019592285
    3. '(' → logprob: -10.64317512512207
    4. ' ' → logprob: -13.76817512512207
    5. ' ((' → logprob: -15.51817512512207
    6. '((' → logprob: -15.76817512512207
    7. ' x' → logprob: -15.89317512512207
    8. 'x' → logprob: -16.39317512512207
    9. '   ' → logprob: -16.64317512512207
    10. ' ' → logprob: -16.89317512512207

Token 122: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5272292494773865
    2. 'x' → logprob: -0.9022292494773865
    3. ' (' → logprob: -6.027229309082031
    4. ' x' → logprob: -6.402229309082031
    5. '(' → logprob: -10.777229309082031
    6. '   ' → logprob: -13.152229309082031
    7. ' ' → logprob: -13.652229309082031
    8. '(
' → logprob: -14.527229309082031
    9. '	x' → logprob: -14.652229309082031
    10. ')x' → logprob: -14.652229309082031

Token 123: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0028071331325918436
    2. '*' → logprob: -5.877807140350342
    3. ' ' → logprob: -13.502806663513184
    4. '*y' → logprob: -14.002806663513184
    5. '*x' → logprob: -17.7528076171875
    6. 'y' → logprob: -18.3778076171875
    7. ' *
' → logprob: -18.3778076171875
    8. ' **' → logprob: -18.5028076171875
    9. ')' → logprob: -18.7528076171875
    10. '%' → logprob: -18.8778076171875

Token 124: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.20141363143920898
    2. 'y' → logprob: -1.701413631439209
    3. '(y' → logprob: -16.076414108276367
    4. ' ' → logprob: -16.576414108276367
    5. '	y' → logprob: -16.576414108276367
    6. '<|end|>' → logprob: -16.701414108276367
    7. ')' → logprob: -17.201414108276367
    8. ')y' → logprob: -17.826414108276367
    9. ',' → logprob: -18.201414108276367
    10. '*y' → logprob: -18.326414108276367

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.6550729419104755e-05
    2. ' )' → logprob: -10.500036239624023
    3. ')%' → logprob: -11.625036239624023
    4. '%' → logprob: -17.000036239624023
    5. '+' → logprob: -17.125036239624023
    6. ')
' → logprob: -18.000036239624023
    7. '）' → logprob: -19.500036239624023
    8. ']' → logprob: -19.500036239624023
    9. ')

' → logprob: -19.750036239624023
    10. '}' → logprob: -19.875036239624023

Token 126: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1269317865371704
    2. '%' → logprob: -2.126931667327881
    3. ')' → logprob: -13.626932144165039
    4. ' ' → logprob: -13.751932144165039
    5. ' mod' → logprob: -14.751932144165039
    6. ')%' → logprob: -15.126932144165039
    7. 'mod' → logprob: -15.376932144165039
    8. ' %=' → logprob: -16.25193214416504
    9. '```' → logprob: -16.37693214416504
    10. ' ' → logprob: -17.00193214416504

Token 127: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.12692926824092865
    2. 'mod' → logprob: -2.12692928314209
    3. '(mod' → logprob: -13.87692928314209
    4. ' ' → logprob: -15.87692928314209
    5. '	mod' → logprob: -16.751928329467773
    6. ' ' → logprob: -17.376928329467773
    7. ' modul' → logprob: -18.001928329467773
    8. '_mod' → logprob: -18.501928329467773
    9. ' мод' → logprob: -18.876928329467773
    10. '```' → logprob: -19.126928329467773

Token 128: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25825604796409607
    2. '<|end|>' → logprob: -2.633255958557129
    3. 'def' → logprob: -2.883255958557129
    4. '\n' → logprob: -3.508255958557129
    5. '(' → logprob: -3.883255958557129
    6. '

' → logprob: -4.133255958557129
    7. '_' → logprob: -4.508255958557129
    8. '*' → logprob: -5.633255958557129
    9. '#' → logprob: -6.008255958557129
    10. '\' → logprob: -6.133255958557129

Token 129: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05616269260644913
    2. '
' → logprob: -3.0561625957489014
    3. 'mod' → logprob: -6.6811628341674805
    4. '#' → logprob: -6.8061628341674805
    5. '_' → logprob: -7.0561628341674805
    6. '

' → logprob: -7.0561628341674805
    7. '=' → logprob: -7.3061628341674805
    8. '<|end|>' → logprob: -7.5561628341674805
    9. 'n' → logprob: -7.9311628341674805
    10. '\' → logprob: -8.05616283416748

Token 130: ' l' (ID: 305)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.10193159431219101
    2. ' mod' → logprob: -2.476931571960449
    3. 'pow' → logprob: -5.226931571960449
    4. 'main' → logprob: -6.101931571960449
    5. 'bin' → logprob: -6.601931571960449
    6. 'mods' → logprob: -7.101931571960449
    7. 'solve' → logprob: -7.726931571960449
    8. ' main' → logprob: -7.976931571960449
    9. 'fast' → logprob: -8.10193157196045
    10. 'int' → logprob: -8.47693157196045

Token 131: 'cm' (ID: 7871)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.005366683471947908
    2. 'ist' → logprob: -5.380366802215576
    3. 'eft' → logprob: -7.880366802215576
    4. 'e' → logprob: -9.005366325378418
    5. 'ength' → logprob: -9.005366325378418
    6. 'og' → logprob: -10.630366325378418
    7. 'ong' → logprob: -10.880366325378418
    8. 'is' → logprob: -11.130366325378418
    9. 'ast' → logprob: -11.255366325378418
    10. 'cm' → logprob: -11.630366325378418

Token 132: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.156648650765419
    2. '(a' → logprob: -2.031648635864258
    3. '(x' → logprob: -4.281648635864258
    4. ' (' → logprob: -10.906648635864258
    5. '_' → logprob: -12.031648635864258
    6. '(A' → logprob: -12.156648635864258
    7. '(
' → logprob: -12.406648635864258
    8. '_(' → logprob: -12.531648635864258
    9. '(_' → logprob: -12.531648635864258
    10. '(*' → logprob: -13.531648635864258

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.739826181321405e-05
    2. ' ,' → logprob: -10.25004768371582
    3. ',y' → logprob: -11.50004768371582
    4. '(x' → logprob: -14.12504768371582
    5. ',x' → logprob: -14.25004768371582
    6. ',
' → logprob: -15.62504768371582
    7. '_,' → logprob: -16.75004768371582
    8. '   ' → logprob: -17.50004768371582
    9. 'def' → logprob: -17.50004768371582
    10. ')' → logprob: -17.50004768371582

Token 134: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1602250337600708
    2. ' y' → logprob: -1.9102250337600708
    3. ' ' → logprob: -14.785224914550781
    4. '	y' → logprob: -15.910224914550781
    5. '   ' → logprob: -16.16022491455078
    6. 'def' → logprob: -16.53522491455078
    7. '  ' → logprob: -16.66022491455078
    8. '<|end|>' → logprob: -17.03522491455078
    9. 'x' → logprob: -17.28522491455078
    10. '    ' → logprob: -17.53522491455078

Token 135: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010318557906430215
    2. '):
' → logprob: -9.625102996826172
    3. ':' → logprob: -11.125102996826172
    4. ' ):' → logprob: -11.500102996826172
    5. ')' → logprob: -12.000102996826172
    6. ',' → logprob: -12.250102996826172
    7. '):
' → logprob: -14.125102996826172
    8. '   ' → logprob: -15.375102996826172
    9. '():' → logprob: -15.875102996826172
    10. '}:' → logprob: -16.875102996826172

Token 136: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035000499337911606
    2. ':
' → logprob: -6.378499984741211
    3. '   ' → logprob: -7.378499984741211
    4. ',' → logprob: -7.753499984741211
    5. ' :' → logprob: -8.003499984741211
    6. '):' → logprob: -8.253499984741211
    7. '():' → logprob: -10.128499984741211
    8. '=' → logprob: -10.753499984741211
    9. '(x' → logprob: -11.003499984741211
    10. '0' → logprob: -11.878499984741211

Token 137: ' while' (ID: 2049)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10317712277173996
    2. ' return' → logprob: -2.978177070617676
    3. 'x' → logprob: -3.353177070617676
    4. '(x' → logprob: -5.353177070617676
    5. ' x' → logprob: -5.478177070617676
    6. '   ' → logprob: -5.978177070617676
    7. 'if' → logprob: -7.853177070617676
    8. 'def' → logprob: -8.603177070617676
    9. ' (' → logprob: -9.728177070617676
    10. ' ' → logprob: -10.478177070617676

Token 138: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.161152645945549
    2. 'y' → logprob: -1.9111526012420654
    3. '(y' → logprob: -7.4111528396606445
    4. '	y' → logprob: -9.036152839660645
    5. ' x' → logprob: -9.286152839660645
    6. 'x' → logprob: -9.286152839660645
    7. '   ' → logprob: -11.786152839660645
    8. ' ' → logprob: -12.286152839660645
    9. '(x' → logprob: -13.286152839660645
    10. '(' → logprob: -13.911152839660645

Token 139: ' !=' (ID: 1666)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03518664464354515
    2. ':
' → logprob: -4.035186767578125
    3. '!=' → logprob: -5.285186767578125
    4. ' !=' → logprob: -5.285186767578125
    5. ' and' → logprob: -5.785186767578125
    6. 'and' → logprob: -5.910186767578125
    7. '%x' → logprob: -7.910186767578125
    8. '%' → logprob: -8.035186767578125
    9. '>' → logprob: -9.410186767578125
    10. '<|end|>' → logprob: -10.535186767578125

Token 140: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16022443771362305
    2. ' ' → logprob: -1.910224437713623
    3. '   ' → logprob: -15.160224914550781
    4. '  ' → logprob: -16.78522491455078
    5. ' ' → logprob: -18.16022491455078
    6. '```' → logprob: -18.28522491455078
    7. '	' → logprob: -19.03522491455078
    8. '
' → logprob: -19.41022491455078
    9. '    ' → logprob: -19.53522491455078
    10. ' 
' → logprob: -21.03522491455078

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.37520408630371
    4. '00' → logprob: -18.12520408630371
    5. '```' → logprob: -18.25020408630371
    6. '000' → logprob: -18.62520408630371
    7. '  ' → logprob: -18.87520408630371
    8. '
' → logprob: -19.37520408630371
    9. '۰' → logprob: -20.06270408630371
    10. '	' → logprob: -20.12520408630371

Token 142: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.055141448974609375
    2. ':' → logprob: -2.9301414489746094
    3. ',' → logprob: -9.18014144897461
    4. ' and' → logprob: -9.93014144897461
    5. ' :
' → logprob: -9.93014144897461
    6. '   ' → logprob: -10.30514144897461
    7. '):
' → logprob: -11.43014144897461
    8. ':

' → logprob: -12.68014144897461
    9. ',
' → logprob: -12.80514144897461
    10. ' x' → logprob: -13.18014144897461

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6432472467422485
    2. ' x' → logprob: -0.7682472467422485
    3. 'x' → logprob: -4.643247127532959
    4. '	x' → logprob: -7.643247127532959
    5. '<|end|>' → logprob: -8.768247604370117
    6. '   ' → logprob: -9.143247604370117
    7. ',x' → logprob: -9.393247604370117
    8. ',' → logprob: -9.643247604370117
    9. ' ' → logprob: -11.018247604370117
    10. ' temp' → logprob: -11.893247604370117

Token 144: ' z' (ID: 579)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011059731245040894
    2. ' x' → logprob: -4.511059761047363
    3. '	x' → logprob: -12.261059761047363
    4. '   ' → logprob: -12.386059761047363
    5. '(x' → logprob: -13.511059761047363
    6. 'tmp' → logprob: -14.761059761047363
    7. 'temp' → logprob: -14.886059761047363
    8. '       ' → logprob: -15.386059761047363
    9. ' ' → logprob: -15.886059761047363
    10. 'r' → logprob: -15.886059761047363

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31581148505210876
    2. ' =' → logprob: -1.3158115148544312
    3. ',' → logprob: -6.315811634063721
    4. '=y' → logprob: -7.815811634063721
    5. '=x' → logprob: -8.065811157226562
    6. '=z' → logprob: -11.565811157226562
    7. 'x' → logprob: -12.815811157226562
    8. ' ' → logprob: -12.940811157226562
    9. ')' → logprob: -13.440811157226562
    10. ',y' → logprob: -13.690811157226562

Token 146: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.015290921553969383
    2. 'y' → logprob: -4.2652907371521
    3. ' x' → logprob: -7.0152907371521
    4. ' y' → logprob: -8.390291213989258
    5. '	x' → logprob: -14.015291213989258
    6. '%x' → logprob: -14.640291213989258
    7. '	y' → logprob: -15.765291213989258
    8. ' ' → logprob: -15.890291213989258
    9. '   ' → logprob: -17.515291213989258
    10. '(x' → logprob: -17.765291213989258

Token 147: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.008484083227813244
    2. ' %' → logprob: -4.88348388671875
    3. '
' → logprob: -7.50848388671875
    4. 'y' → logprob: -8.38348388671875
    5. ',' → logprob: -10.13348388671875
    6. '%x' → logprob: -10.63348388671875
    7. ' y' → logprob: -10.75848388671875
    8. '%
' → logprob: -11.63348388671875
    9. ',y' → logprob: -12.63348388671875
    10. '       ' → logprob: -14.75848388671875

Token 148: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005234002135694027
    2. ' y' → logprob: -5.2552337646484375
    3. '	y' → logprob: -16.380233764648438
    4. ' ' → logprob: -16.880233764648438
    5. '<|end|>' → logprob: -17.630233764648438
    6. '   ' → logprob: -17.880233764648438
    7. ',y' → logprob: -18.630233764648438
    8. ''y' → logprob: -18.880233764648438
    9. '```' → logprob: -19.255233764648438
    10. '       ' → logprob: -19.630233764648438

Token 149: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.224336177110672
    2. '
' → logprob: -1.8493361473083496
    3. ' x' → logprob: -3.8493361473083496
    4. '       ' → logprob: -4.09933614730835
    5. '<|end|>' → logprob: -5.84933614730835
    6. ',' → logprob: -6.72433614730835
    7. ',x' → logprob: -7.84933614730835
    8. '<|end|>' → logprob: -8.599336624145508
    9. ' 
' → logprob: -8.724336624145508
    10. '	x' → logprob: -8.849336624145508

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1430361121892929
    2. 'x' → logprob: -2.143036127090454
    3. ' x' → logprob: -4.393035888671875
    4. '   ' → logprob: -5.643035888671875
    5. '	x' → logprob: -9.768035888671875
    6. ' ' → logprob: -12.018035888671875
    7. ',x' → logprob: -12.893035888671875
    8. '<|end|>' → logprob: -13.518035888671875
    9. '
' → logprob: -13.643035888671875
    10. '        
' → logprob: -13.643035888671875

Token 151: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.005245260428637266
    2. ' x' → logprob: -5.255245208740234
    3. '       ' → logprob: -11.880245208740234
    4. '	x' → logprob: -12.380245208740234
    5. '   ' → logprob: -15.630245208740234
    6. ',x' → logprob: -16.255245208740234
    7. '
' → logprob: -16.880245208740234
    8. ' ' → logprob: -17.005245208740234
    9. '"x' → logprob: -18.005245208740234
    10. '(x' → logprob: -18.005245208740234

Token 152: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003960616886615753
    2. '=' → logprob: -6.003960609436035
    3. ',y' → logprob: -6.753960609436035
    4. ' =' → logprob: -8.378960609436035
    5. ' ,' → logprob: -9.503960609436035
    6. 'y' → logprob: -11.878960609436035
    7. '=y' → logprob: -12.253960609436035
    8. ' y' → logprob: -13.753960609436035
    9. ' ' → logprob: -15.378960609436035
    10. ',
' → logprob: -15.753960609436035

Token 153: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008615161292254925
    2. ' y' → logprob: -4.758615016937256
    3. '	y' → logprob: -15.133615493774414
    4. '*y' → logprob: -15.883615493774414
    5. ',y' → logprob: -16.383615493774414
    6. '(y' → logprob: -16.883615493774414
    7. ''y' → logprob: -17.008615493774414
    8. ')y' → logprob: -17.133615493774414
    9. '<|end|>' → logprob: -17.758615493774414
    10. '‘y' → logprob: -18.008615493774414

Token 154: '
' (ID: 198)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1672794073820114
    2. '       ' → logprob: -1.9172793626785278
    3. ' y' → logprob: -5.042279243469238
    4. ',y' → logprob: -8.042279243469238
    5. '   ' → logprob: -8.667279243469238
    6. '	y' → logprob: -9.917279243469238
    7. ',' → logprob: -11.542279243469238
    8. ';y' → logprob: -11.917279243469238
    9. '<|end|>' → logprob: -12.292279243469238
    10. ''y' → logprob: -13.667279243469238

Token 155: '       ' (ID: 309)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.259682834148407
    2. '       ' → logprob: -1.5096828937530518
    3. ' y' → logprob: -5.009682655334473
    4. '   ' → logprob: -6.884682655334473
    5. '	y' → logprob: -11.009682655334473
    6. ',y' → logprob: -11.634682655334473
    7. ' ' → logprob: -14.759682655334473
    8. '_y' → logprob: -15.259682655334473
    9. '      ' → logprob: -15.259682655334473
    10. '           ' → logprob: -15.384682655334473

Token 156: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0015024791937321424
    2. ' y' → logprob: -6.501502513885498
    3. '       ' → logprob: -16.501502990722656
    4. '	y' → logprob: -16.501502990722656
    5. ',y' → logprob: -19.126502990722656
    6. ''y' → logprob: -20.251502990722656
    7. 'x' → logprob: -20.251502990722656
    8. '   ' → logprob: -20.376502990722656
    9. '_y' → logprob: -20.376502990722656
    10. ')y' → logprob: -21.251502990722656

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408533096313477
    2. '=' → logprob: -0.9740853309631348
    3. '=z' → logprob: -11.849084854125977
    4. ' =
' → logprob: -14.474084854125977
    5. ',' → logprob: -15.099084854125977
    6. ' ' → logprob: -15.849084854125977
    7. '=y' → logprob: -16.849084854125977
    8. '=x' → logprob: -17.349084854125977
    9. '=
' → logprob: -17.349084854125977
    10. '=

' → logprob: -17.599084854125977

Token 158: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.04858759790658951
    2. ' z' → logprob: -3.0485875606536865
    3. '	z' → logprob: -15.298587799072266
    4. ' ' → logprob: -17.673587799072266
    5. '*z' → logprob: -19.423587799072266
    6. '(z' → logprob: -19.548587799072266
    7. 'x' → logprob: -19.798587799072266
    8. ''z' → logprob: -19.798587799072266
    9. '[z' → logprob: -20.048587799072266
    10. '_z' → logprob: -20.048587799072266

Token 159: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004883381072431803
    2. 'return' → logprob: -5.379883289337158
    3. '
' → logprob: -8.629883766174316
    4. ' return' → logprob: -9.629883766174316
    5. '	return' → logprob: -11.379883766174316
    6. 'def' → logprob: -12.254883766174316
    7. '    
' → logprob: -14.379883766174316
    8. 'eturn' → logprob: -14.754883766174316
    9. ',' → logprob: -15.129883766174316
    10. '       ' → logprob: -15.379883766174316

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029965918511152267
    2. 'return' → logprob: -3.529965877532959
    3. ' return' → logprob: -8.529966354370117
    4. '	return' → logprob: -11.154966354370117
    5. '
' → logprob: -13.779966354370117
    6. 'def' → logprob: -13.904966354370117
    7. '       ' → logprob: -14.654966354370117
    8. '```' → logprob: -15.029966354370117
    9. ':return' → logprob: -15.529966354370117
    10. 'eturn' → logprob: -15.529966354370117

Token 161: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009428087621927261
    2. '   ' → logprob: -4.759428024291992
    3. ' return' → logprob: -7.134428024291992
    4. '	return' → logprob: -11.134428024291992
    5. '    
' → logprob: -14.884428024291992
    6. '       ' → logprob: -15.134428024291992
    7. 'eturn' → logprob: -15.384428024291992
    8. ':return' → logprob: -15.884428024291992
    9. '```' → logprob: -15.884428024291992
    10. 'def' → logprob: -16.384428024291992

Token 162: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12262152880430222
    2. 'abs' → logprob: -2.372621536254883
    3. '(x' → logprob: -5.122621536254883
    4. '(abs' → logprob: -5.247621536254883
    5. ' x' → logprob: -5.372621536254883
    6. 'int' → logprob: -5.497621536254883
    7. ' abs' → logprob: -6.372621536254883
    8. '(int' → logprob: -8.497621536254883
    9. ' (' → logprob: -8.622621536254883
    10. '(' → logprob: -9.872621536254883

Token 163: '

' (ID: 279)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.25120559334754944
    2. '//' → logprob: -1.626205563545227
    3. ' *' → logprob: -4.6262054443359375
    4. ',' → logprob: -4.8762054443359375
    5. ' ' → logprob: -5.8762054443359375
    6. '<|end|>' → logprob: -6.5012054443359375
    7. 'def' → logprob: -7.0012054443359375
    8. '*' → logprob: -7.0012054443359375
    9. ' #' → logprob: -7.5012054443359375
    10. '#' → logprob: -8.376205444335938

Token 164: 'def' (ID: 1314)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.8850343227386475
    2. ' *' → logprob: -1.0100343227386475
    3. '//' → logprob: -1.8850343227386475
    4. ',' → logprob: -3.2600343227386475
    5. '*' → logprob: -4.135034561157227
    6. ' ' → logprob: -4.385034561157227
    7. ' /' → logprob: -6.510034561157227
    8. '_' → logprob: -8.010034561157227
    9. '<|end|>' → logprob: -8.010034561157227
    10. ' ,' → logprob: -8.135034561157227

Token 165: ' make' (ID: 1520)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.14782673120498657
    2. 'l' → logprob: -2.022826671600342
    3. '_l' → logprob: -5.897826671600342
    4. ' lc' → logprob: -6.272826671600342
    5. ' gcd' → logprob: -8.3978271484375
    6. '_' → logprob: -9.7728271484375
    7. ' _' → logprob: -9.8978271484375
    8. ' def' → logprob: -10.1478271484375
    9. 'lc' → logprob: -10.2728271484375
    10. ' ' → logprob: -10.3978271484375

Token 166: '_link' (ID: 16227)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.06545262783765793
    2. '_div' → logprob: -3.1904525756835938
    3. '_' → logprob: -4.190452575683594
    4. '_mul' → logprob: -6.190452575683594
    5. '_g' → logprob: -7.440452575683594
    6. '_lst' → logprob: -7.815452575683594
    7. '_factor' → logprob: -7.815452575683594
    8. '_unique' → logprob: -7.940452575683594
    9. '_list' → logprob: -8.065452575683594
    10. '_ll' → logprob: -8.315452575683594

Token 167: 'list' (ID: 2641)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05239933729171753
    2. '(s' → logprob: -3.5523993968963623
    3. '(' → logprob: -3.9273993968963623
    4. '_list' → logprob: -6.677399158477783
    5. '(x' → logprob: -7.677399158477783
    6. '(a' → logprob: -8.552399635314941
    7. '(n' → logprob: -8.552399635314941
    8. 'def' → logprob: -9.302399635314941
    9. '_map' → logprob: -10.177399635314941
    10. '(u' → logprob: -10.302399635314941

Token 168: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10407090932130814
    2. '_' → logprob: -2.9790709018707275
    3. 's' → logprob: -4.354071140289307
    4. '(x' → logprob: -4.854071140289307
    5. '(n' → logprob: -5.229071140289307
    6. '(head' → logprob: -5.354071140289307
    7. '(s' → logprob: -5.479071140289307
    8. '(node' → logprob: -6.229071140289307
    9. '(size' → logprob: -6.729071140289307
    10. '(a' → logprob: -6.729071140289307

Token 169: 'y' (ID: 88)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43990862369537354
    2. '):' → logprob: -1.0649086236953735
    3. 's' → logprob: -4.939908504486084
    4. ')' → logprob: -6.814908504486084
    5. '):
' → logprob: -6.939908504486084
    6. '_list' → logprob: -7.439908504486084
    7. ',y' → logprob: -7.939908504486084
    8. ':' → logprob: -8.564908981323242
    9. ',n' → logprob: -8.939908981323242
    10. ' ):' → logprob: -9.189908981323242

Token 170: 'list' (ID: 2641)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.041331298649311066
    2. 's' → logprob: -4.0413312911987305
    3. ')' → logprob: -4.7913312911987305
    4. ',' → logprob: -5.0413312911987305
    5. '):
' → logprob: -5.0413312911987305
    6. '_list' → logprob: -7.0413312911987305
    7. ' ):' → logprob: -8.54133129119873
    8. '[]):' → logprob: -8.66633129119873
    9. 'list' → logprob: -10.16633129119873
    10. '[' → logprob: -10.54133129119873

Token 171: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008626393973827362
    2. '):
' → logprob: -5.383626461029053
    3. ',' → logprob: -5.633626461029053
    4. ' ):' → logprob: -8.633625984191895
    5. ')' → logprob: -9.008625984191895
    6. ':' → logprob: -9.758625984191895
    7. ':list' → logprob: -11.133625984191895
    8. '   ' → logprob: -11.258625984191895
    9. '):
' → logprob: -11.633625984191895
    10. ',n' → logprob: -12.133625984191895

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027713554445654154
    2. '	link' → logprob: -6.877771377563477
    3. ':' → logprob: -8.127771377563477
    4. '	ll' → logprob: -8.377771377563477
    5. ' links' → logprob: -8.502771377563477
    6. '	nodes' → logprob: -8.877771377563477
    7. '	graph' → logprob: -9.127771377563477
    8. ' linked' → logprob: -9.752771377563477
    9. ' graph' → logprob: -9.877771377563477
    10. ' link' → logprob: -10.127771377563477

Token 173: ' link' (ID: 3461)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' (adapté à ' link') → logprob: -0.6734354496002197
    2. ' link' → logprob: -2.1734354496002197
    3. 'links' → logprob: -2.2984354496002197
    4. 'd' → logprob: -3.1734354496002197
    5. ' links' → logprob: -3.1734354496002197
    6. '   ' → logprob: -3.2984354496002197
    7. 'll' → logprob: -3.9234354496002197
    8. ' d' → logprob: -4.048435211181641
    9. 'adj' → logprob: -4.298435211181641
    10. ' res' → logprob: -4.423435211181641

Token 174: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5827863812446594
    2. 'ed' → logprob: -1.4577863216400146
    3. '_list' → logprob: -2.5827863216400146
    4. ' =' → logprob: -2.7077863216400146
    5. 'dict' → logprob: -3.3327863216400146
    6. 's' → logprob: -3.9577863216400146
    7. '_dict' → logprob: -5.707786560058594
    8. '=' → logprob: -6.207786560058594
    9. 'lst' → logprob: -6.582786560058594
    10. '=[]' → logprob: -6.582786560058594

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05547521263360977
    2. '=' → logprob: -2.9304752349853516
    3. 's' → logprob: -8.180475234985352
    4. '   ' → logprob: -9.180475234985352
    5. '=[]' → logprob: -9.430475234985352
    6. ',' → logprob: -10.055475234985352
    7. '={}' → logprob: -10.430475234985352
    8. ':' → logprob: -11.430475234985352
    9. '[' → logprob: -11.680475234985352
    10. ' ' → logprob: -12.055475234985352

Token 176: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.09147226810455322
    2. '[' → logprob: -2.5914721488952637
    3. '{' → logprob: -4.966472148895264
    4. '[]' → logprob: -5.591472148895264
    5. 'default' → logprob: -7.341472148895264
    6. ' [[]' → logprob: -7.466472148895264
    7. 'dict' → logprob: -7.966472148895264
    8. '[-' → logprob: -8.716472625732422
    9. '[[' → logprob: -10.466472625732422
    10. ' {}' → logprob: -10.841472625732422

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29118970036506653
    2. ' for' → logprob: -1.5411896705627441
    3. 'for' → logprob: -3.291189670562744
    4. '    
' → logprob: -7.291189670562744
    5. '	for' → logprob: -8.166190147399902
    6. '
' → logprob: -8.416190147399902
    7. ' ' → logprob: -10.541190147399902
    8. '<|end|>' → logprob: -10.791190147399902
    9. '  ' → logprob: -11.666190147399902
    10. ' 
' → logprob: -11.916190147399902

Token 178: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07079930603504181
    2. ' for' → logprob: -2.6957993507385254
    3. '   ' → logprob: -7.070799350738525
    4. '	for' → logprob: -11.945798873901367
    5. 'n' → logprob: -13.195798873901367
    6. ' ' → logprob: -13.320798873901367
    7. 'from' → logprob: -13.320798873901367
    8. 'def' → logprob: -14.945798873901367
    9. '
' → logprob: -15.320798873901367
    10. 'return' → logprob: -15.445798873901367

Token 179: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4071471095085144
    2. ' x' → logprob: -1.1571471691131592
    3. '(x' → logprob: -5.03214693069458
    4. 'a' → logprob: -5.53214693069458
    5. ' a' → logprob: -6.03214693069458
    6. ' (' → logprob: -6.15714693069458
    7. 'i' → logprob: -6.65714693069458
    8. ' i' → logprob: -7.15714693069458
    9. ' u' → logprob: -7.28214693069458
    10. 'u' → logprob: -7.40714693069458

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005691045895218849
    2. ',b' → logprob: -5.255691051483154
    3. ' ,' → logprob: -7.755691051483154
    4. 'b' → logprob: -10.755690574645996
    5. ',_' → logprob: -12.380690574645996
    6. '_,' → logprob: -14.005690574645996
    7. ',
' → logprob: -14.505690574645996
    8. '[' → logprob: -15.630690574645996
    9. ' b' → logprob: -15.755690574645996
    10. ' ' → logprob: -15.755690574645996

Token 181: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0789046585559845
    2. ' b' → logprob: -2.578904628753662
    3. 'xy' → logprob: -11.20390510559082
    4. ' xy' → logprob: -14.57890510559082
    5. '(b' → logprob: -14.82890510559082
    6. 'bc' → logprob: -16.32890510559082
    7. '   ' → logprob: -16.57890510559082
    8. ',b' → logprob: -16.57890510559082
    9. ' ' → logprob: -16.70390510559082
    10. '    ' → logprob: -17.07890510559082

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04864822328090668
    2. 'in' → logprob: -3.0486481189727783
    3. ',' → logprob: -9.9236478805542
    4. '   ' → logprob: -12.7986478805542
    5. ' ' → logprob: -12.9236478805542
    6. ' ,' → logprob: -13.1736478805542
    7. '	in' → logprob: -13.5486478805542
    8. '_in' → logprob: -13.9236478805542
    9. '    ' → logprob: -14.0486478805542
    10. ',in' → logprob: -14.5486478805542

Token 183: ' xy' (ID: 53634)
  Prédit: ' xy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xy' → logprob: -0.4740926921367645
    2. 'xy' → logprob: -0.9740927219390869
    3. '_xy' → logprob: -11.849092483520508
    4. '.xy' → logprob: -11.974092483520508
    5. ' ' → logprob: -13.724092483520508
    6. '(x' → logprob: -14.974092483520508
    7. 'x' → logprob: -15.849092483520508
    8. 'xyz' → logprob: -15.974092483520508
    9. '
' → logprob: -16.349092483520508
    10. ' x' → logprob: -16.349092483520508

Token 184: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.020599929615855217
    2. 'in' → logprob: -4.645599842071533
    3. ' in' → logprob: -4.770599842071533
    4. '_list' → logprob: -6.145599842071533
    5. ')' → logprob: -9.895600318908691
    6. 'ist' → logprob: -10.270600318908691
    7. '):' → logprob: -11.145600318908691
    8. ':' → logprob: -11.645600318908691
    9. '_' → logprob: -11.770600318908691
    10. ' list' → logprob: -12.270600318908691

Token 185: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002246357616968453
    2. ':
' → logprob: -8.750225067138672
    3. ',' → logprob: -10.125225067138672
    4. '   ' → logprob: -11.750225067138672
    5. '):' → logprob: -12.000225067138672
    6. ' :' → logprob: -12.375225067138672
    7. '.' → logprob: -13.250225067138672
    8. ':**' → logprob: -13.250225067138672
    9. ':list' → logprob: -14.250225067138672
    10. ' in' → logprob: -14.375225067138672

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033077045809477568
    2. ':' → logprob: -6.503307819366455
    3. ',' → logprob: -6.753307819366455
    4. '   ' → logprob: -7.628307819366455
    5. '<|end|>' → logprob: -9.378307342529297
    6. ' if' → logprob: -11.503307342529297
    7. '[' → logprob: -11.878307342529297
    8. ')' → logprob: -11.878307342529297
    9. '	   ' → logprob: -12.253307342529297
    10. '	' → logprob: -12.378307342529297

Token 187: ' link' (ID: 3461)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02434670552611351
    2. '   ' → logprob: -4.274346828460693
    3. '       ' → logprob: -5.024346828460693
    4. 'if' → logprob: -5.649346828460693
    5. ' link' → logprob: -11.274346351623535
    6. ' for' → logprob: -11.899346351623535
    7. '	if' → logprob: -12.024346351623535
    8. '
' → logprob: -12.899346351623535
    9. '    ' → logprob: -13.149346351623535
    10. ' ' → logprob: -13.399346351623535

Token 188: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00026848804554902017
    2. ' =' → logprob: -9.250268936157227
    3. 'ist' → logprob: -9.625268936157227
    4. '.setdefault' → logprob: -10.250268936157227
    5. '=' → logprob: -10.500268936157227
    6. '   ' → logprob: -11.250268936157227
    7. 'lists' → logprob: -11.875268936157227
    8. 'if' → logprob: -12.625268936157227
    9. 's' → logprob: -12.875268936157227
    10. 'lst' → logprob: -12.875268936157227

Token 189: '.setdefault' (ID: 113053)
  Prédit: '.setdefault'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.setdefault' → logprob: -0.00021069261129014194
    2. '.' → logprob: -8.500210762023926
    3. '[a' → logprob: -12.750210762023926
    4. '.get' → logprob: -13.250210762023926
    5. ' .' → logprob: -14.000210762023926
    6. 'a' → logprob: -14.375210762023926
    7. 'set' → logprob: -14.625210762023926
    8. '.set' → logprob: -15.625210762023926
    9. '   ' → logprob: -15.625210762023926
    10. '.a' → logprob: -15.750210762023926

Token 190: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.125
    3. 'a' → logprob: -17.75
    4. '(b' → logprob: -19.0
    5. '((' → logprob: -19.875
    6. '(
' → logprob: -20.25
    7. ' (' → logprob: -20.75
    8. '(A' → logprob: -21.25
    9. '[a' → logprob: -22.0
    10. '(x' → logprob: -22.125

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.11996734328568e-05
    2. '[],' → logprob: -10.125041007995605
    3. ',set' → logprob: -14.375041007995605
    4. 'set' → logprob: -15.125041007995605
    5. ' ,' → logprob: -16.375041961669922
    6. '[]' → logprob: -17.875041961669922
    7. 'a' → logprob: -18.000041961669922
    8. ',
' → logprob: -18.125041961669922
    9. 'append' → logprob: -18.250041961669922
    10. '   ' → logprob: -18.375041961669922

Token 192: ' [])
' (ID: 64395)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.003018353134393692
    2. 'set' → logprob: -6.128018379211426
    3. '[])' → logprob: -7.378018379211426
    4. ' []).' → logprob: -8.503018379211426
    5. '[])
' → logprob: -13.753018379211426
    6. ').' → logprob: -14.003018379211426
    7. '[]
' → logprob: -14.003018379211426
    8. '[' → logprob: -14.253018379211426
    9. ')' → logprob: -15.128018379211426
    10. ' set' → logprob: -15.128018379211426

Token 193: '       ' (ID: 309)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20139004290103912
    2. '.' → logprob: -1.826390027999878
    3. '       ' → logprob: -4.326390266418457
    4. ' .' → logprob: -4.951390266418457
    5. ').' → logprob: -7.701390266418457
    6. '   ' → logprob: -7.826390266418457
    7. '.app' → logprob: -9.576390266418457
    8. '.add' → logprob: -9.576390266418457
    9. '().' → logprob: -10.451390266418457
    10. '.insert' → logprob: -10.826390266418457

Token 194: ' link' (ID: 3461)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' (adapté à ' link') → logprob: -0.6049808263778687
    2. '       ' → logprob: -1.1049808263778687
    3. ' link' → logprob: -2.104980945587158
    4. '   ' → logprob: -7.229980945587158
    5. '	link' → logprob: -9.35498046875
    6. '(link' → logprob: -11.22998046875
    7. ' ' → logprob: -11.97998046875
    8. '<link' → logprob: -12.72998046875
    9. '```' → logprob: -13.47998046875
    10. '_link' → logprob: -13.47998046875

Token 195: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -9.610702363715973e-06
    2. 'ist' → logprob: -11.750009536743164
    3. '[' → logprob: -14.000009536743164
    4. 'set' → logprob: -15.500009536743164
    5. 'link' → logprob: -15.500009536743164
    6. 'lists' → logprob: -16.375009536743164
    7. '[a' → logprob: -16.375009536743164
    8. '[list' → logprob: -17.250009536743164
    9. ' list' → logprob: -17.500009536743164
    10. 'alist' → logprob: -17.750009536743164

Token 196: '.setdefault' (ID: 113053)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.1472419600977446e-06
    2. '.setdefault' → logprob: -14.875000953674316
    3. 'a' → logprob: -15.000000953674316
    4. '[b' → logprob: -15.375000953674316
    5. '[' → logprob: -15.875000953674316
    6. ' [' → logprob: -18.625001907348633
    7. '[A' → logprob: -18.750001907348633
    8. '   ' → logprob: -19.500001907348633
    9. '(a' → logprob: -19.875001907348633
    10. '.append' → logprob: -20.000001907348633

Token 197: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.625
    3. '(a' → logprob: -15.625
    4. 'b' → logprob: -16.5
    5. ' (' → logprob: -17.75
    6. '(B' → logprob: -18.125
    7. '<|end|>' → logprob: -18.625
    8. '(
' → logprob: -19.25
    9. ')b' → logprob: -20.125
    10. 'a' → logprob: -20.125

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.128163257315464e-07
    2. '[],' → logprob: -15.625
    3. ' ,' → logprob: -16.375
    4. ',)' → logprob: -17.875
    5. '[]' → logprob: -18.625
    6. ',
' → logprob: -18.75
    7. ',[' → logprob: -18.75
    8. ')' → logprob: -19.375
    9. ',

' → logprob: -19.625
    10. '[])' → logprob: -20.125

Token 199: ' [])
' (ID: 64395)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.07660223543643951
    2. '[]' → logprob: -3.0766022205352783
    3. ' [])' → logprob: -3.7016022205352783
    4. '[])
' → logprob: -5.951602458953857
    5. ')' → logprob: -9.2016019821167
    6. '[]
' → logprob: -9.3266019821167
    7. ' [])
' → logprob: -9.4516019821167
    8. ' []' → logprob: -9.7016019821167
    9. '[]):' → logprob: -12.9516019821167
    10. ' [])

' → logprob: -13.4516019821167

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000344044849043712
    2. '<|end|>' → logprob: -9.000344276428223
    3. '```' → logprob: -9.625344276428223
    4. '   ' → logprob: -10.250344276428223
    5. 'def' → logprob: -10.250344276428223
    6. ',' → logprob: -10.375344276428223
    7. '[' → logprob: -10.750344276428223
    8. ' link' → logprob: -11.250344276428223
    9. '.' → logprob: -13.250344276428223
    10. ')' → logprob: -13.250344276428223

Token 201: ' link' (ID: 3461)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' (adapté à ' link') → logprob: -0.03748314082622528
    2. ' link' → logprob: -3.6624832153320312
    3. '       ' → logprob: -4.662483215332031
    4. '   ' → logprob: -6.412483215332031
    5. '	link' → logprob: -10.662483215332031
    6. ' ' → logprob: -12.412483215332031
    7. '(link' → logprob: -12.412483215332031
    8. '```' → logprob: -13.537483215332031
    9. '<link' → logprob: -13.662483215332031
    10. '  ' → logprob: -14.162483215332031

Token 202: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005940882954746485
    2. 'ist' → logprob: -5.130940914154053
    3. '[a' → logprob: -12.005940437316895
    4. 'link' → logprob: -12.755940437316895
    5. 'lst' → logprob: -14.505940437316895
    6. '[' → logprob: -14.630940437316895
    7. '   ' → logprob: -15.130940437316895
    8. ' list' → logprob: -15.130940437316895
    9. 'ilst' → logprob: -15.380940437316895
    10. '(a' → logprob: -15.505940437316895

Token 203: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.7697225252486533e-06
    2. '.setdefault' → logprob: -13.000003814697266
    3. '[b' → logprob: -14.375003814697266
    4. 'a' → logprob: -14.750003814697266
    5. '[' → logprob: -14.875003814697266
    6. '   ' → logprob: -17.625003814697266
    7. ' [' → logprob: -17.750003814697266
    8. '[A' → logprob: -17.750003814697266
    9. '```' → logprob: -18.375003814697266
    10. '
' → logprob: -18.500003814697266

Token 204: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00017112065688706934
    2. '.append' → logprob: -9.000170707702637
    3. ']' → logprob: -10.250170707702637
    4. ').' → logprob: -11.750170707702637
    5. '.' → logprob: -13.250170707702637
    6. 'append' → logprob: -14.000170707702637
    7. ' ].' → logprob: -14.000170707702637
    8. '   ' → logprob: -14.125170707702637
    9. '}.' → logprob: -16.125171661376953
    10. ':].' → logprob: -17.000171661376953

Token 205: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.1008713702030946e-06
    2. ' append' → logprob: -13.250001907348633
    3. '.append' → logprob: -15.250001907348633
    4. 'appen' → logprob: -17.375001907348633
    5. 'app' → logprob: -18.250001907348633
    6. '	append' → logprob: -19.250001907348633
    7. 'insert' → logprob: -19.875001907348633
    8. 'add' → logprob: -21.125001907348633
    9. '_append' → logprob: -21.125001907348633
    10. '   ' → logprob: -21.250001907348633

Token 206: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.10026963800191879
    2. 'b' → logprob: -2.3502695560455322
    3. ' b' → logprob: -9.725269317626953
    4. '(' → logprob: -13.225269317626953
    5. ' (' → logprob: -13.725269317626953
    6. ')b' → logprob: -15.725269317626953
    7. '	b' → logprob: -15.975269317626953
    8. '(
' → logprob: -16.475269317626953
    9. ',b' → logprob: -18.600269317626953
    10. '((' → logprob: -19.475269317626953

Token 207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.522638169466518e-05
    2. ')
' → logprob: -10.625024795532227
    3. ' )' → logprob: -14.250024795532227
    4. '   ' → logprob: -16.125024795532227
    5. '<|end|>' → logprob: -17.000024795532227
    6. '),' → logprob: -17.875024795532227
    7. ')

' → logprob: -18.000024795532227
    8. ')#' → logprob: -18.125024795532227
    9. '       ' → logprob: -18.625024795532227
    10. ')return' → logprob: -18.750024795532227

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08318324387073517
    2. '<|end|>' → logprob: -2.5831832885742188
    3. '   ' → logprob: -5.708183288574219
    4. ')' → logprob: -8.208183288574219
    5. '<|end|>' → logprob: -8.333183288574219
    6. '[' → logprob: -9.333183288574219
    7. ' ' → logprob: -9.708183288574219
    8. '        ' → logprob: -9.958183288574219
    9. ',' → logprob: -10.083183288574219
    10. '        
' → logprob: -10.458183288574219

Token 209: ' link' (ID: 3461)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' (adapté à ' link') → logprob: -0.10195087641477585
    2. ' link' → logprob: -2.7269508838653564
    3. '       ' → logprob: -3.4769508838653564
    4. 'a' → logprob: -8.351950645446777
    5. '   ' → logprob: -8.351950645446777
    6. ' a' → logprob: -9.976950645446777
    7. '	link' → logprob: -10.976950645446777
    8. '```' → logprob: -10.976950645446777
    9. '(link' → logprob: -11.101950645446777
    10. 'x' → logprob: -11.351950645446777

Token 210: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.2664456789934775e-06
    2. '[b' → logprob: -14.000000953674316
    3. '[a' → logprob: -15.000000953674316
    4. '_list' → logprob: -17.750001907348633
    5. 'link' → logprob: -18.000001907348633
    6. '[list' → logprob: -18.000001907348633
    7. 'lists' → logprob: -18.375001907348633
    8. '[' → logprob: -18.875001907348633
    9. 'lst' → logprob: -18.875001907348633
    10. 'List' → logprob: -19.000001907348633

Token 211: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -8.900034299585968e-05
    2. '[a' → logprob: -9.375088691711426
    3. '.setdefault' → logprob: -13.000088691711426
    4. '[' → logprob: -13.375088691711426
    5. 'b' → logprob: -15.250088691711426
    6. '[c' → logprob: -16.625089645385742
    7. ' [' → logprob: -18.375089645385742
    8. '.b' → logprob: -18.875089645385742
    9. '```' → logprob: -19.000089645385742
    10. '[
' → logprob: -19.250089645385742

Token 212: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.005488214083015919
    2. ').' → logprob: -5.255488395690918
    3. '.' → logprob: -8.880488395690918
    4. '.append' → logprob: -9.380488395690918
    5. ']' → logprob: -10.630488395690918
    6. ')' → logprob: -13.005488395690918
    7. ' ].' → logprob: -13.005488395690918
    8. '}.' → logprob: -13.630488395690918
    9. ':].' → logprob: -15.255488395690918
    10. ''].' → logprob: -15.505488395690918

Token 213: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. 'appen' → logprob: -15.375
    3. '.append' → logprob: -16.25
    4. ' append' → logprob: -16.25
    5. '	append' → logprob: -17.5
    6. 'insert' → logprob: -18.375
    7. 'add' → logprob: -18.625
    8. 'a' → logprob: -19.0
    9. 'app' → logprob: -19.0
    10. 'prepend' → logprob: -20.0

Token 214: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.125005722045898
    3. 'a' → logprob: -14.625005722045898
    4. '(
' → logprob: -16.2500057220459
    5. '(A' → logprob: -20.2500057220459
    6. '```' → logprob: -22.3750057220459
    7. '(

' → logprob: -22.5000057220459
    8. '((' → logprob: -22.8750057220459
    9. '(
' → logprob: -23.1250057220459
    10. '(ai' → logprob: -23.3750057220459

Token 215: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.787507714354433e-05
    2. ')
' → logprob: -10.00004768371582
    3. '   ' → logprob: -13.12504768371582
    4. ')return' → logprob: -15.75004768371582
    5. '       ' → logprob: -16.12504768371582
    6. ' )' → logprob: -16.37504768371582
    7. '))' → logprob: -17.50004768371582
    8. ')}' → logprob: -18.00004768371582
    9. ')

' → logprob: -18.12504768371582
    10. ')`' → logprob: -18.50004768371582

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013319060672074556
    2. 'return' → logprob: -7.751331806182861
    3. '	return' → logprob: -7.751331806182861
    4. ' return' → logprob: -8.12633228302002
    5. '<|end|>' → logprob: -9.37633228302002
    6. '    
' → logprob: -10.37633228302002
    7. '
' → logprob: -10.62633228302002
    8. ')' → logprob: -11.75133228302002
    9. '[' → logprob: -12.37633228302002
    10. ',' → logprob: -12.87633228302002

Token 217: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03879299759864807
    2. ' return' → logprob: -4.038793087005615
    3. 'return' (adapté à ' return') → logprob: -4.163793087005615
    4. ')' → logprob: -5.788793087005615
    5. '	return' → logprob: -7.038793087005615
    6. ' ' → logprob: -8.163792610168457
    7. '<|end|>' → logprob: -8.913792610168457
    8. ':return' → logprob: -9.413792610168457
    9. 'n' → logprob: -9.538792610168457
    10. '[' → logprob: -9.788792610168457

Token 218: ' link' (ID: 3461)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' → logprob: -0.10021314769983292
    2. ' link' → logprob: -2.350213050842285
    3. '(link' → logprob: -12.225213050842285
    4. '	link' → logprob: -13.850213050842285
    5. '_link' → logprob: -16.1002140045166
    6. 'list' → logprob: -16.2252140045166
    7. 'Link' → logprob: -16.3502140045166
    8. '<link' → logprob: -16.6002140045166
    9. '$link' → logprob: -16.9752140045166
    10. '   ' → logprob: -17.1002140045166

Token 219: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00010914575977949426
    2. 'link' → logprob: -9.12510871887207
    3. 'ist' → logprob: -16.00010871887207
    4. ' list' → logprob: -16.75010871887207
    5. 'lst' → logprob: -17.87510871887207
    6. 'lists' → logprob: -18.12510871887207
    7. 'alist' → logprob: -18.62510871887207
    8. 'lista' → logprob: -19.12510871887207
    9. 'li' → logprob: -19.50010871887207
    10. 'lis' → logprob: -19.75010871887207

Token 220: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2358231395483017
    2. '<|end|>' → logprob: -2.485823154449463
    3. ',' → logprob: -3.485823154449463
    4. '   ' → logprob: -3.985823154449463
    5. '*' → logprob: -4.235823154449463
    6. '_' → logprob: -4.485823154449463
    7. 'n' → logprob: -4.485823154449463
    8. '#' → logprob: -4.735823154449463
    9. 's' → logprob: -5.485823154449463
    10. 'd' → logprob: -5.860823154449463

Token 221: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.768275797367096
    2. '   ' → logprob: -0.893275797367096
    3. ':' → logprob: -3.143275737762451
    4. '_' → logprob: -4.143275737762451
    5. ',' → logprob: -4.268275737762451
    6. '+' → logprob: -4.768275737762451
    7. ' ' → logprob: -5.268275737762451
    8. '*' → logprob: -5.268275737762451
    9. 'd' → logprob: -5.393275737762451
    10. ':def' → logprob: -5.768275737762451

Token 222: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8805972933769226
    2. ' dfs' → logprob: -1.2555973529815674
    3. ' solve' → logprob: -3.1305973529815674
    4. ' gcd' → logprob: -3.2555973529815674
    5. ' bfs' → logprob: -3.2555973529815674
    6. 'dfs' → logprob: -3.3805973529815674
    7. ' factorial' → logprob: -3.7555973529815674
    8. ' binary' → logprob: -3.7555973529815674
    9. 'main' → logprob: -4.005597114562988
    10. ' mod' → logprob: -4.130597114562988

Token 223: '_long' (ID: 42288)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.036126479506492615
    2. '_g' → logprob: -3.6611263751983643
    3. '_' → logprob: -4.911126613616943
    4. '_depth' → logprob: -7.536126613616943
    5. 'g' → logprob: -8.286126136779785
    6. '_dist' → logprob: -8.786126136779785
    7. '(' → logprob: -8.911126136779785
    8. '_factor' → logprob: -9.036126136779785
    9. '_distance' → logprob: -9.286126136779785
    10. '_max' → logprob: -9.411126136779785

Token 224: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0002875569916795939
    2. '_path' → logprob: -9.875288009643555
    3. 'estr' → logprob: -10.250288009643555
    4. 'ests' → logprob: -10.375288009643555
    5. 'st' → logprob: -10.875288009643555
    6. 'test' → logprob: -10.875288009643555
    7. 'estin' → logprob: -10.875288009643555
    8. '_est' → logprob: -11.000288009643555
    9. 'uest' → logprob: -11.250288009643555
    10. '```' → logprob: -11.625288009643555

Token 225: '_distance' (ID: 45537)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0017996503738686442
    2. '_chain' → logprob: -7.376799583435059
    3. 'path' → logprob: -7.501799583435059
    4. '_' → logprob: -8.001799583435059
    5. '(' → logprob: -9.626799583435059
    6. '_branch' → logprob: -10.376799583435059
    7. '_common' → logprob: -10.376799583435059
    8. 'Path' → logprob: -10.751799583435059
    9. '_sub' → logprob: -10.876799583435059
    10. '_pal' → logprob: -11.001799583435059

Token 226: '(link' (ID: 51236)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.7786491513252258
    2. '(link' → logprob: -1.153649091720581
    3. '(' → logprob: -2.278649091720581
    4. '(node' → logprob: -2.528649091720581
    5. '(start' → logprob: -4.02864933013916
    6. '(g' → logprob: -5.02864933013916
    7. '(root' → logprob: -5.65364933013916
    8. '(path' → logprob: -5.77864933013916
    9. '(n' → logprob: -6.27864933013916
    10. '(tree' → logprob: -6.27864933013916

Token 227: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.810037742368877e-05
    2. 'ist' → logprob: -10.750038146972656
    3. '_list' → logprob: -11.500038146972656
    4. ')' → logprob: -13.125038146972656
    5. 'lists' → logprob: -13.750038146972656
    6. 'lst' → logprob: -14.250038146972656
    7. 'link' → logprob: -14.375038146972656
    8. ' list' → logprob: -14.625038146972656
    9. 'length' → logprob: -15.500038146972656
    10. '):' → logprob: -16.250038146972656

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008589350618422031
    2. '):' → logprob: -7.375858783721924
    3. ',node' → logprob: -9.000859260559082
    4. ' ,' → logprob: -9.500859260559082
    5. ',start' → logprob: -10.750859260559082
    6. ' ):' → logprob: -12.875859260559082
    7. '):
' → logprob: -13.375859260559082
    8. ',n' → logprob: -13.375859260559082
    9. ',
' → logprob: -13.375859260559082
    10. ')' → logprob: -13.500859260559082

Token 229: ' v' (ID: 323)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.027000922709703445
    2. ' start' → logprob: -3.652000904083252
    3. 'node' → logprob: -7.527000904083252
    4. ' node' → logprob: -10.15200138092041
    5. 'root' → logprob: -10.27700138092041
    6. 's' → logprob: -10.52700138092041
    7. 'src' → logprob: -11.15200138092041
    8. 'v' → logprob: -11.90200138092041
    9. 'st' → logprob: -12.02700138092041
    10. ')' → logprob: -12.40200138092041

Token 230: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018709946423768997
    2. '):' → logprob: -4.143710136413574
    3. '):
' → logprob: -6.143710136413574
    4. 'er' → logprob: -8.893710136413574
    5. 'ert' → logprob: -9.143710136413574
    6. 'tx' → logprob: -9.643710136413574
    7. 'isted' → logprob: -10.518710136413574
    8. 'al' → logprob: -10.643710136413574
    9. ',
' → logprob: -10.643710136413574
    10. ' ,' → logprob: -10.893710136413574

Token 231: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010957976803183556
    2. 'None' → logprob: -5.385958194732666
    3. 'next' → logprob: -6.010958194732666
    4. '1' → logprob: -6.385958194732666
    5. 'list' → logprob: -7.510958194732666
    6. ' ' → logprob: -7.510958194732666
    7. ' None' → logprob: -7.760958194732666
    8. ')' → logprob: -7.885958194732666
    9. '-' → logprob: -9.385957717895508
    10. ' next' → logprob: -9.510957717895508

Token 232: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5050892233848572
    2. '):' → logprob: -1.005089282989502
    3. '):
' → logprob: -3.505089282989502
    4. ')' → logprob: -8.130088806152344
    5. '):
' → logprob: -8.755088806152344
    6. ' ):' → logprob: -11.005088806152344
    7. '   ' → logprob: -12.130088806152344
    8. '):

' → logprob: -12.630088806152344
    9. ' ,' → logprob: -12.755088806152344
    10. ',
' → logprob: -13.130088806152344

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004213786742184311
    2. ' visited' → logprob: -8.875421524047852
    3. ',' → logprob: -9.125421524047852
    4. 'visited' → logprob: -9.875421524047852
    5. 'from' → logprob: -10.125421524047852
    6. ' from' → logprob: -10.500421524047852
    7. '    
' → logprob: -10.875421524047852
    8. ':' → logprob: -12.125421524047852
    9. '	queue' → logprob: -12.250421524047852
    10. '	from' → logprob: -12.500421524047852

Token 234: ' distance' (ID: 9324)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0946400836110115
    2. 'visited' → logprob: -3.219640016555786
    3. '   ' → logprob: -3.469640016555786
    4. 'import' → logprob: -4.844640254974365
    5. ' from' → logprob: -5.594640254974365
    6. 'stack' → logprob: -5.719640254974365
    7. 'dist' → logprob: -6.094640254974365
    8. 'seen' → logprob: -6.969640254974365
    9. 'queue' → logprob: -7.844640254974365
    10. ' visited' → logprob: -8.344639778137207

Token 235: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7070072293281555
    2. ' =' → logprob: -0.7070072293281555
    3. ',' → logprob: -4.33200740814209
    4. 's' → logprob: -7.58200740814209
    5. '={}' → logprob: -9.45700740814209
    6. 'dict' → logprob: -12.20700740814209
    7. '={}
' → logprob: -12.33200740814209
    8. '=[]' → logprob: -12.58200740814209
    9. ')' → logprob: -12.70700740814209
    10. '={},' → logprob: -12.95700740814209

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3897897005081177
    2. '=' → logprob: -1.1397897005081177
    3. ',' → logprob: -5.889789581298828
    4. '={}' → logprob: -9.764789581298828
    5. '={' → logprob: -10.764789581298828
    6. '=[' → logprob: -10.764789581298828
    7. '   ' → logprob: -11.389789581298828
    8. '=[]' → logprob: -11.639789581298828
    9. '[' → logprob: -11.889789581298828
    10. ' ' → logprob: -12.014789581298828

Token 237: ' {}
' (ID: 11421)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.03894539177417755
    2. '[-' → logprob: -3.538945436477661
    3. '{-' → logprob: -4.788945198059082
    4. '[' → logprob: -7.538945198059082
    5. '{}' → logprob: -8.913945198059082
    6. ' {' → logprob: -9.038945198059082
    7. '[v' → logprob: -11.788945198059082
    8. ' [-' → logprob: -11.913945198059082
    9. '{x' → logprob: -12.288945198059082
    10. '{}
' → logprob: -12.413945198059082

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012433364987373352
    2. 'from' → logprob: -5.0124335289001465
    3. ' from' → logprob: -5.7624335289001465
    4. ' queue' → logprob: -7.0124335289001465
    5. 'queue' → logprob: -7.3874335289001465
    6. 'import' → logprob: -7.6374335289001465
    7. 'stack' → logprob: -8.637433052062988
    8. ' stack' → logprob: -9.387433052062988
    9. ' import' → logprob: -9.637433052062988
    10. 'distance' → logprob: -9.637433052062988

Token 239: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' (adapté à ' distance') → logprob: -0.8997575640678406
    2. 'from' → logprob: -1.5247576236724854
    3. 'stack' → logprob: -1.6497576236724854
    4. 'queue' → logprob: -2.5247576236724854
    5. 'visited' → logprob: -3.7747576236724854
    6. 'q' → logprob: -3.7747576236724854
    7. 'import' → logprob: -4.149757385253906
    8. 'que' → logprob: -5.024757385253906
    9. '   ' → logprob: -5.149757385253906
    10. 'todo' → logprob: -5.274757385253906

Token 240: '_count' (ID: 7536)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00028171599842607975
    2. ' =' → logprob: -8.75028133392334
    3. '_queue' → logprob: -10.12528133392334
    4. '=' → logprob: -10.12528133392334
    5. 'list' → logprob: -11.50028133392334
    6. '=[]' → logprob: -11.62528133392334
    7. '_' → logprob: -12.25028133392334
    8. 's' → logprob: -12.50028133392334
    9. '   ' → logprob: -13.00028133392334
    10. '[' → logprob: -13.37528133392334

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08919496089220047
    2. '=' → logprob: -2.4641950130462646
    3. ',' → logprob: -9.214195251464844
    4. '   ' → logprob: -9.714195251464844
    5. '={}' → logprob: -10.714195251464844
    6. '[v' → logprob: -10.839195251464844
    7. ' ' → logprob: -10.964195251464844
    8. '[' → logprob: -11.214195251464844
    9. ' ={' → logprob: -12.839195251464844
    10. ']' → logprob: -12.839195251464844

Token 242: ' ' (ID: 220)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.08684797585010529
    2. '0' → logprob: -2.711848020553589
    3. '{-' → logprob: -4.71184778213501
    4. '1' → logprob: -5.58684778213501
    5. '-' → logprob: -6.58684778213501
    6. '{}' → logprob: -6.96184778213501
    7. '{}
' → logprob: -7.46184778213501
    8. '[-' → logprob: -7.96184778213501
    9. '[' → logprob: -8.086848258972168
    10. ' {' → logprob: -8.336848258972168

Token 243: '0' (ID: 15)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.11404791474342346
    2. '0' → logprob: -2.8640480041503906
    3. '1' → logprob: -3.7390480041503906
    4. '{-' → logprob: -4.614048004150391
    5. '[' → logprob: -4.989048004150391
    6. '-' → logprob: -5.614048004150391
    7. '[-' → logprob: -5.614048004150391
    8. '{}' → logprob: -6.864048004150391
    9. '{}
' → logprob: -7.364048004150391
    10. '[v' → logprob: -7.739048004150391

Token 244: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012984501663595438
    2. ',' → logprob: -8.001298904418945
    3. ' queue' → logprob: -8.376298904418945
    4. '	queue' → logprob: -8.626298904418945
    5. ' from' → logprob: -8.751298904418945
    6. '
' → logprob: -9.001298904418945
    7. 'from' → logprob: -9.751298904418945
    8. 'queue' → logprob: -10.126298904418945
    9. 'distance' → logprob: -10.626298904418945
    10. '  ' → logprob: -10.751298904418945

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009935104753822088
    2. ' queue' → logprob: -8.250993728637695
    3. 'queue' → logprob: -8.625993728637695
    4. 'from' → logprob: -9.000993728637695
    5. ' from' → logprob: -9.500993728637695
    6. 'stack' → logprob: -9.750993728637695
    7. '	queue' → logprob: -9.750993728637695
    8. 'visited' → logprob: -10.000993728637695
    9. ' stack' → logprob: -10.125993728637695
    10. 'distance' → logprob: -10.500993728637695

Token 246: ' distance' (ID: 9324)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.9576603174209595
    2. 'from' → logprob: -1.4576603174209595
    3. 'queue' → logprob: -1.8326603174209595
    4. 'visited' → logprob: -2.83266019821167
    5. 'distance' (adapté à ' distance') → logprob: -2.95766019821167
    6. 'q' → logprob: -3.45766019821167
    7. 'que' → logprob: -4.08266019821167
    8. 'import' → logprob: -4.20766019821167
    9. '   ' → logprob: -4.45766019821167
    10. 'todo' → logprob: -5.08266019821167

Token 247: ' =' (ID: 314)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.004482581280171871
    2. 's' → logprob: -6.254482746124268
    3. '_queue' → logprob: -6.629482746124268
    4. '_' → logprob: -8.00448226928711
    5. '_count' → logprob: -8.00448226928711
    6. ' =' → logprob: -8.12948226928711
    7. '=' → logprob: -9.50448226928711
    8. '_stack' → logprob: -9.62948226928711
    9. 'list' → logprob: -10.50448226928711
    10. '_dict' → logprob: -11.00448226928711

Token 248: ' ' (ID: 220)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0005350403371267021
    2. '{-' → logprob: -8.000535011291504
    3. '{}' → logprob: -9.375535011291504
    4. ' {' → logprob: -9.875535011291504
    5. '0' → logprob: -10.375535011291504
    6. '{x' → logprob: -11.500535011291504
    7. '{}
' → logprob: -12.000535011291504
    8. '[v' → logprob: -12.625535011291504
    9. '[' → logprob: -12.750535011291504
    10. '[-' → logprob: -12.875535011291504

Token 249: '0' (ID: 15)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.01317882351577282
    2. '{-' → logprob: -5.013178825378418
    3. '{}' → logprob: -5.888178825378418
    4. '0' → logprob: -6.263178825378418
    5. '[-' → logprob: -7.263178825378418
    6. '[v' → logprob: -7.638178825378418
    7. '{}
' → logprob: -8.138178825378418
    8. '{x' → logprob: -9.013178825378418
    9. '[' → logprob: -9.388178825378418
    10. '-' → logprob: -10.638178825378418

Token 250: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.436649888753891
    2. '
' → logprob: -1.0616499185562134
    3. ',' → logprob: -5.436649799346924
    4. '<|end|>' → logprob: -6.186649799346924
    5. '    
' → logprob: -7.311649799346924
    6. ',
' → logprob: -8.561650276184082
    7. '<|end|>' → logprob: -8.561650276184082
    8. ')' → logprob: -9.561650276184082
    9. '	queue' → logprob: -9.811650276184082
    10. ' while' → logprob: -10.311650276184082

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007260137936100364
    2. ',' → logprob: -8.625725746154785
    3. 'stack' → logprob: -9.250725746154785
    4. '	queue' → logprob: -9.625725746154785
    5. ' stack' → logprob: -9.750725746154785
    6. ' queue' → logprob: -9.750725746154785
    7. '	stack' → logprob: -9.750725746154785
    8. '
' → logprob: -9.875725746154785
    9. 'queue' → logprob: -10.250725746154785
    10. 'def' → logprob: -10.625725746154785

Token 252: ' v' (ID: 323)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.7739585041999817
    2. 'from' → logprob: -1.773958444595337
    3. 'queue' → logprob: -1.898958444595337
    4. 'visited' → logprob: -2.023958444595337
    5. '   ' → logprob: -3.273958444595337
    6. 'q' → logprob: -4.523958683013916
    7. 'distance' → logprob: -4.648958683013916
    8. 'import' → logprob: -5.148958683013916
    9. 'que' → logprob: -5.773958683013916
    10. 'dist' → logprob: -6.148958683013916

Token 253: 'list' (ID: 2641)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012323272414505482
    2. '=' → logprob: -5.387323379516602
    3. ' =' → logprob: -5.762323379516602
    4. 's' → logprob: -6.637323379516602
    5. '_queue' → logprob: -6.762323379516602
    6. ')' → logprob: -7.887323379516602
    7. '_stack' → logprob: -8.262323379516602
    8. 'visited' → logprob: -8.512323379516602
    9. '_' → logprob: -9.012323379516602
    10. ' ,' → logprob: -9.137323379516602

Token 254: '_previous' (ID: 126212)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4331910312175751
    2. '=' → logprob: -1.0581910610198975
    3. ',' → logprob: -5.433190822601318
    4. '   ' → logprob: -9.933191299438477
    5. '=[]' → logprob: -11.183191299438477
    6. ' ' → logprob: -11.308191299438477
    7. '=[' → logprob: -11.308191299438477
    8. ' =[' → logprob: -12.433191299438477
    9. '	' → logprob: -12.683191299438477
    10. '[' → logprob: -12.808191299438477

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3417125344276428
    2. '=' → logprob: -1.341712474822998
    3. ',' → logprob: -3.591712474822998
    4. ' ' → logprob: -8.841712951660156
    5. ',v' → logprob: -9.091712951660156
    6. '[v' → logprob: -9.591712951660156
    7. '=[]' → logprob: -10.341712951660156
    8. '[' → logprob: -10.591712951660156
    9. '   ' → logprob: -10.716712951660156
    10. ' ,' → logprob: -10.841712951660156

Token 256: ' []
' (ID: 8911)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.07759174704551697
    2. '{' → logprob: -2.82759165763855
    3. '[' → logprob: -4.452591896057129
    4. 'set' → logprob: -5.702591896057129
    5. '[]' → logprob: -8.702591896057129
    6. ' [' → logprob: -9.577591896057129
    7. '[{' → logprob: -9.827591896057129
    8. '[-' → logprob: -10.327591896057129
    9. '[value' → logprob: -10.952591896057129
    10. '[]
' → logprob: -11.077591896057129

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00760887423530221
    2. 'v' → logprob: -5.382608890533447
    3. ' v' → logprob: -6.632608890533447
    4. ' while' → logprob: -7.632608890533447
    5. ',' → logprob: -8.132608413696289
    6. '
' → logprob: -8.257608413696289
    7. '    
' → logprob: -8.382608413696289
    8. 'while' → logprob: -9.257608413696289
    9. '	v' → logprob: -9.382608413696289
    10. ',v' → logprob: -10.382608413696289

Token 258: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.004400444217026234
    2. 'while' → logprob: -6.129400253295898
    3. '   ' → logprob: -7.129400253295898
    4. 'from' → logprob: -7.254400253295898
    5. ' v' → logprob: -8.254400253295898
    6. 'current' → logprob: -9.254400253295898
    7. 'queue' → logprob: -9.379400253295898
    8. 'visited' → logprob: -9.629400253295898
    9. 'import' → logprob: -10.004400253295898
    10. ' while' → logprob: -10.754400253295898

Token 259: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.036084964871406555
    2. '_list' → logprob: -3.7860848903656006
    3. 'ist' → logprob: -5.16108512878418
    4. ' =' → logprob: -5.78608512878418
    5. 'isted' → logprob: -6.91108512878418
    6. '=' → logprob: -7.28608512878418
    7. 'is' → logprob: -7.53608512878418
    8. 'visited' → logprob: -7.78608512878418
    9. '_' → logprob: -8.28608512878418
    10. 'queue' → logprob: -8.78608512878418

Token 260: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6960434913635254
    2. ' =' → logprob: -0.6960434913635254
    3. '_current' → logprob: -6.196043491363525
    4. 'current' → logprob: -7.696043491363525
    5. ',' → logprob: -8.821043014526367
    6. '_previous' → logprob: -10.196043014526367
    7. '=[]' → logprob: -10.196043014526367
    8. ' ' → logprob: -10.571043014526367
    9. '[' → logprob: -10.696043014526367
    10. ' =[' → logprob: -10.821043014526367

Token 261: ' [' (ID: 723)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0006002153968438506
    2. '[' → logprob: -8.12559986114502
    3. ' [' → logprob: -8.12559986114502
    4. '[(' → logprob: -12.75059986114502
    5. '[[' → logprob: -13.87559986114502
    6. '([' → logprob: -14.37559986114502
    7. '   ' → logprob: -14.50059986114502
    8. '[u' → logprob: -14.62559986114502
    9. '[val' → logprob: -14.62559986114502
    10. '[l' → logprob: -14.87559986114502

Token 262: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0280383548888494e-06
    2. ' v' → logprob: -14.375000953674316
    3. '(v' → logprob: -14.750000953674316
    4. '1' → logprob: -17.750001907348633
    5. '[v' → logprob: -18.125001907348633
    6. '(' → logprob: -18.625001907348633
    7. '   ' → logprob: -19.375001907348633
    8. '	v' → logprob: -19.375001907348633
    9. '_v' → logprob: -20.625001907348633
    10. '
' → logprob: -20.625001907348633

Token 263: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011197380954399705
    2. ']
' → logprob: -7.001119613647461
    3. ' ]' → logprob: -9.126119613647461
    4. ']

' → logprob: -9.251119613647461
    5. '()]' → logprob: -14.251119613647461
    6. ']
' → logprob: -14.376119613647461
    7. '];' → logprob: -14.376119613647461
    8. '[' → logprob: -15.626119613647461
    9. ')' → logprob: -15.626119613647461
    10. ',' → logprob: -15.751119613647461

Token 264: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2670041024684906
    2. '   ' → logprob: -1.642004132270813
    3. '    
' → logprob: -3.5170040130615234
    4. 'while' → logprob: -5.517004013061523
    5. ' while' → logprob: -5.517004013061523
    6. ',' → logprob: -7.392004013061523
    7. ' 
' → logprob: -7.642004013061523
    8. '  
' → logprob: -7.892004013061523
    9. '	
' → logprob: -7.892004013061523
    10. ',
' → logprob: -8.017004013061523

Token 265: ' node' (ID: 4596)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3206627666950226
    2. ' while' → logprob: -1.3206627368927002
    3. '   ' → logprob: -4.945662975311279
    4. 'distance' → logprob: -9.070662498474121
    5. '
' → logprob: -9.445662498474121
    6. 'visited' → logprob: -11.070662498474121
    7. '	while' → logprob: -11.320662498474121
    8. 'from' → logprob: -11.445662498474121
    9. 'v' → logprob: -11.695662498474121
    10. 'import' → logprob: -12.820662498474121

Token 266: 'count' (ID: 5420)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.031049026176333427
    2. '_queue' → logprob: -4.1560492515563965
    3. '_' → logprob: -5.6560492515563965
    4. '_set' → logprob: -6.4060492515563965
    5. ' =' → logprob: -6.6560492515563965
    6. '_count' → logprob: -6.9060492515563965
    7. '_distance' → logprob: -6.9060492515563965
    8. '_dist' → logprob: -7.0310492515563965
    9. '_list' → logprob: -7.0310492515563965
    10. ',' → logprob: -7.5310492515563965

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006268966943025589
    2. '=' → logprob: -5.5062689781188965
    3. ',' → logprob: -6.1312689781188965
    4. ' ,' → logprob: -11.881268501281738
    5. ' ' → logprob: -13.256268501281738
    6. 's' → logprob: -13.506268501281738
    7. '=len' → logprob: -13.631268501281738
    8. '    ' → logprob: -14.131268501281738
    9. '   ' → logprob: -14.256268501281738
    10. '=count' → logprob: -15.006268501281738

Token 268: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.022861512377858162
    2. '1' → logprob: -4.147861480712891
    3. ' len' → logprob: -5.022861480712891
    4. '0' → logprob: -8.64786148071289
    5. ' ' → logprob: -11.02286148071289
    6. '{' → logprob: -11.39786148071289
    7. 'sum' → logprob: -11.64786148071289
    8. '(len' → logprob: -12.89786148071289
    9. '{}' → logprob: -13.64786148071289
    10. '[len' → logprob: -13.77286148071289

Token 269: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. '(list' → logprob: -16.750001907348633
    4. 'link' → logprob: -16.875001907348633
    5. ' (' → logprob: -19.625001907348633
    6. '((' → logprob: -20.250001907348633
    7. '(
' → logprob: -20.375001907348633
    8. '(Link' → logprob: -20.500001907348633
    9. '(distance' → logprob: -21.000001907348633
    10. '(v' → logprob: -21.000001907348633

Token 270: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: 0.0
    2. 'link' → logprob: -17.375
    3. 'lists' → logprob: -18.625
    4. 'ist' → logprob: -19.0
    5. '_list' → logprob: -19.375
    6. ' list' → logprob: -19.625
    7. 'List' → logprob: -20.125
    8. 'v' → logprob: -21.0
    9. '(list' → logprob: -21.125
    10. '[' → logprob: -21.25

Token 271: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.836499985889532e-05
    2. ' )' → logprob: -10.1250581741333
    3. ')
' → logprob: -11.5000581741333
    4. '   ' → logprob: -12.8750581741333
    5. '.keys' → logprob: -13.1250581741333
    6. '))' → logprob: -13.7500581741333
    7. '<|end|>' → logprob: -14.3750581741333
    8. '[' → logprob: -15.2500581741333
    9. '[v' → logprob: -15.2500581741333
    10. ' ' → logprob: -15.3750581741333

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05637960508465767
    2. ' while' → logprob: -3.306379556655884
    3. 'while' → logprob: -4.431379795074463
    4. '
' → logprob: -5.306379795074463
    5. '    
' → logprob: -7.306379795074463
    6. '	while' → logprob: -8.056379318237305
    7. ',' → logprob: -8.806379318237305
    8. '<|end|>' → logprob: -9.931379318237305
    9. ')' → logprob: -10.556379318237305
    10. 'def' → logprob: -11.181379318237305

Token 273: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0016428076196461916
    2. ' while' → logprob: -6.87664270401001
    3. '   ' → logprob: -7.75164270401001
    4. 'visited' → logprob: -9.251643180847168
    5. '
' → logprob: -10.126643180847168
    6. 'distance' → logprob: -11.001643180847168
    7. 'for' → logprob: -11.626643180847168
    8. 'from' → logprob: -12.126643180847168
    9. 'def' → logprob: -12.501643180847168
    10. '	while' → logprob: -13.001643180847168

Token 274: ' distance' (ID: 9324)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4067138433456421
    2. ' v' → logprob: -1.156713843345642
    3. 'len' → logprob: -4.531713962554932
    4. ' len' → logprob: -4.906713962554932
    5. 'distance' → logprob: -7.031713962554932
    6. ' distance' → logprob: -8.156713485717773
    7. 'True' → logprob: -9.156713485717773
    8. 'node' → logprob: -9.781713485717773
    9. ' True' → logprob: -9.781713485717773
    10. ' ' → logprob: -10.406713485717773

Token 275: '_count' (ID: 7536)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2974078059196472
    2. ' <=' → logprob: -1.422407865524292
    3. '_list' → logprob: -5.047407627105713
    4. '<' → logprob: -5.547407627105713
    5. '<=' → logprob: -6.172407627105713
    6. ' ' → logprob: -6.297407627105713
    7. ' +' → logprob: -7.547407627105713
    8. '   ' → logprob: -8.172408103942871
    9. '_count' → logprob: -8.547408103942871
    10. '+' → logprob: -8.547408103942871

Token 276: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.295375257730484
    2. ' <=' → logprob: -1.4203752279281616
    3. '<' → logprob: -4.545375347137451
    4. '<=' → logprob: -5.795375347137451
    5. ' !=' → logprob: -8.170374870300293
    6. ' ' → logprob: -8.795374870300293
    7. '!=' → logprob: -11.795374870300293
    8. '<n' → logprob: -12.045374870300293
    9. '<Node' → logprob: -12.295374870300293
    10. '   ' → logprob: -12.420374870300293

Token 277: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.006717743817716837
    2. ' node' → logprob: -5.006717681884766
    3. '(node' → logprob: -13.881717681884766
    4. '
' → logprob: -14.631717681884766
    5. 'len' → logprob: -15.006717681884766
    6. '=node' → logprob: -15.506717681884766
    7. '   ' → logprob: -16.256717681884766
    8. ' ' → logprob: -16.256717681884766
    9. '	node' → logprob: -16.381717681884766
    10. '[node' → logprob: -16.506717681884766

Token 278: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.292907877039397e-06
    2. 'ount' → logprob: -13.25000286102295
    3. '_count' → logprob: -14.00000286102295
    4. 'list' → logprob: -15.50000286102295
    5. ' count' → logprob: -15.62500286102295
    6. 's' → logprob: -16.375003814697266
    7. 'cout' → logprob: -16.750003814697266
    8. ' ' → logprob: -16.875003814697266
    9. '   ' → logprob: -17.375003814697266
    10. 'cut' → logprob: -17.500003814697266

Token 279: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3885848820209503
    2. ':' → logprob: -1.138584852218628
    3. ' and' → logprob: -7.013585090637207
    4. '   ' → logprob: -7.763585090637207
    5. ' :
' → logprob: -8.138585090637207
    6. '):
' → logprob: -10.388585090637207
    7. ' :' → logprob: -10.388585090637207
    8. ',' → logprob: -11.513585090637207
    9. '       ' → logprob: -12.138585090637207
    10. 'and' → logprob: -12.388585090637207

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31417253613471985
    2. '   ' → logprob: -1.6891725063323975
    3. 'v' → logprob: -2.5641725063323975
    4. 'for' → logprob: -5.439172744750977
    5. 'next' → logprob: -5.939172744750977
    6. 'new' → logprob: -7.814172744750977
    7. ' for' → logprob: -8.564172744750977
    8. 'distance' → logprob: -9.189172744750977
    9. ' v' → logprob: -9.314172744750977
    10. '        
' → logprob: -10.314172744750977

Token 281: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.05879509449005127
    2. 'next' → logprob: -3.9337949752807617
    3. 'distance' → logprob: -4.058794975280762
    4. 'new' → logprob: -4.183794975280762
    5. '   ' → logprob: -6.433794975280762
    6. '       ' → logprob: -7.058794975280762
    7. 'd' → logprob: -7.433794975280762
    8. 'for' → logprob: -7.683794975280762
    9. 'n' → logprob: -7.808794975280762
    10. 'node' → logprob: -8.058794975280762

Token 282: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.002671734197065234
    2. 'ist' → logprob: -7.127671718597412
    3. ' =' → logprob: -8.12767219543457
    4. 'next' → logprob: -8.12767219543457
    5. '_list' → logprob: -8.12767219543457
    6. '_next' → logprob: -8.37767219543457
    7. 'l' → logprob: -9.25267219543457
    8. 'new' → logprob: -9.50267219543457
    9. '_previous' → logprob: -9.50267219543457
    10. '2' → logprob: -9.75267219543457

Token 283: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.016239881515503
    2. ',' → logprob: -1.641239881515503
    3. '_previous' → logprob: -1.641239881515503
    4. ' =' → logprob: -2.391239881515503
    5. '_new' → logprob: -2.516239881515503
    6. '=' → logprob: -3.391239881515503
    7. '_' → logprob: -3.891239881515503
    8. '_,' → logprob: -4.891240119934082
    9. 'new' → logprob: -5.391240119934082
    10. 'next' → logprob: -6.016240119934082

Token 284: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5237280130386353
    2. ' =' → logprob: -0.8987280130386353
    3. '=[]' → logprob: -7.523727893829346
    4. ',' → logprob: -9.773728370666504
    5. '=[]
' → logprob: -13.148728370666504
    6. ' ' → logprob: -13.148728370666504
    7. '   ' → logprob: -13.898728370666504
    8. '[]' → logprob: -14.773728370666504
    9. 'v' → logprob: -14.773728370666504
    10. '=[],' → logprob: -15.273728370666504

Token 285: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03805216774344444
    2. '[]
' → logprob: -3.2880520820617676
    3. ' []' → logprob: -11.663052558898926
    4. 'set' → logprob: -13.788052558898926
    5. '[]

' → logprob: -14.788052558898926
    6. '[' → logprob: -14.913052558898926
    7. ' []
' → logprob: -15.288052558898926
    8. '[],' → logprob: -17.28805160522461
    9. '[]}' → logprob: -17.53805160522461
    10. ' ' → logprob: -17.78805160522461

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00863962434232235
    2. 'for' → logprob: -4.883639812469482
    3. ' for' → logprob: -7.133639812469482
    4. '   ' → logprob: -8.383639335632324
    5. '
' → logprob: -13.258639335632324
    6. ',' → logprob: -13.508639335632324
    7. 'v' → logprob: -13.883639335632324
    8. '	for' → logprob: -13.883639335632324
    9. '        
' → logprob: -14.258639335632324
    10. 'distance' → logprob: -15.383639335632324

Token 287: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005530327325686812
    2. '       ' → logprob: -8.000553131103516
    3. 'distance' → logprob: -8.625553131103516
    4. '   ' → logprob: -11.000553131103516
    5. 'v' → logprob: -11.375553131103516
    6. ' for' → logprob: -11.625553131103516
    7. '	for' → logprob: -15.375553131103516
    8. 'while' → logprob: -15.625553131103516
    9. 'visited' → logprob: -16.250553131103516
    10. '           ' → logprob: -16.750553131103516

Token 288: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4829334318637848
    2. 'node' → logprob: -2.232933521270752
    3. 'vv' → logprob: -2.732933521270752
    4. ' v' → logprob: -3.607933521270752
    5. 'x' → logprob: -3.607933521270752
    6. 'vertex' → logprob: -4.107933521270752
    7. ' node' → logprob: -4.357933521270752
    8. 'n' → logprob: -4.357933521270752
    9. 'nv' → logprob: -4.482933521270752
    10. 'u' → logprob: -4.607933521270752

Token 289: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28152304887771606
    2. 'in' → logprob: -1.4065229892730713
    3. ' ' → logprob: -8.906522750854492
    4. '_in' → logprob: -9.281522750854492
    5. 'v' → logprob: -9.906522750854492
    6. '_' → logprob: -10.781522750854492
    7. '   ' → logprob: -11.156522750854492
    8. 'n' → logprob: -11.281522750854492
    9. 'i' → logprob: -11.656522750854492
    10. '  ' → logprob: -12.156522750854492

Token 290: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006720347795635462
    2. ' v' → logprob: -5.006720542907715
    3. '   ' → logprob: -12.631720542907715
    4. ' ' → logprob: -13.881720542907715
    5. '	v' → logprob: -15.006720542907715
    6. '  ' → logprob: -15.756720542907715
    7. '[v' → logprob: -16.2567195892334
    8. '    ' → logprob: -16.6317195892334
    9. ')v' → logprob: -17.5067195892334
    10. 'range' → logprob: -17.5067195892334

Token 291: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.3213025744771585e-05
    2. 'ist' → logprob: -10.750033378601074
    3. 'in' → logprob: -12.500033378601074
    4. ' in' → logprob: -12.750033378601074
    5. '   ' → logprob: -13.500033378601074
    6. 'l' → logprob: -14.250033378601074
    7. 'lst' → logprob: -14.375033378601074
    8. 'v' → logprob: -14.500033378601074
    9. ':' → logprob: -14.500033378601074
    10. '_list' → logprob: -15.500033378601074

Token 292: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03813214227557182
    2. ':
' → logprob: -3.2881321907043457
    3. ' :' → logprob: -10.163131713867188
    4. ',' → logprob: -10.163131713867188
    5. ' :
' → logprob: -12.038131713867188
    6. '       ' → logprob: -13.163131713867188
    7. ':

' → logprob: -13.288131713867188
    8. ':
' → logprob: -13.788131713867188
    9. '   ' → logprob: -14.163131713867188
    10. 'v' → logprob: -14.413131713867188

Token 293: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34135571122169495
    2. 'distance' → logprob: -1.4663556814193726
    3. '       ' → logprob: -3.591355800628662
    4. 'for' → logprob: -3.841355800628662
    5. ' for' → logprob: -5.466355800628662
    6. 'if' → logprob: -5.841355800628662
    7. ' distance' → logprob: -6.966355800628662
    8. '   ' → logprob: -7.216355800628662
    9. ' if' → logprob: -7.841355800628662
    10. 'd' → logprob: -9.091355323791504

Token 294: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' (adapté à ' distance') → logprob: -0.034480560570955276
    2. ' distance' → logprob: -4.159480571746826
    3. '           ' → logprob: -4.659480571746826
    4. 'if' → logprob: -5.284480571746826
    5. ' if' → logprob: -6.784480571746826
    6. 'for' → logprob: -6.909480571746826
    7. '   ' → logprob: -7.409480571746826
    8. '       ' → logprob: -7.409480571746826
    9. '               ' → logprob: -8.534480094909668
    10. ' for' → logprob: -8.659480094909668

Token 295: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0008122475701384246
    2. '_count' → logprob: -8.375812530517578
    3. 'list' → logprob: -8.625812530517578
    4. '+=' → logprob: -8.625812530517578
    5. 'distance' → logprob: -9.750812530517578
    6. ' +=' → logprob: -9.750812530517578
    7. '_distance' → logprob: -10.375812530517578
    8. ' =' → logprob: -11.125812530517578
    9. '   ' → logprob: -11.250812530517578
    10. '=' → logprob: -11.250812530517578

Token 296: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.2664456789934775e-06
    2. '.setdefault' → logprob: -14.625000953674316
    3. '[' → logprob: -15.000000953674316
    4. 'v' → logprob: -15.250000953674316
    5. '

' → logprob: -16.500001907348633
    6. '[u' → logprob: -17.500001907348633
    7. '[V' → logprob: -17.750001907348633
    8. ' [' → logprob: -18.375001907348633
    9. '[x' → logprob: -19.000001907348633
    10. '[c' → logprob: -19.125001907348633

Token 297: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002191064180806279
    2. ']=' → logprob: -6.127191066741943
    3. ' ]' → logprob: -12.127190589904785
    4. '=' → logprob: -15.127190589904785
    5. ']=(' → logprob: -16.3771915435791
    6. ']
' → logprob: -17.1271915435791
    7. ')' → logprob: -17.3771915435791
    8. ']

' → logprob: -17.3771915435791
    9. ']={' → logprob: -17.5021915435791
    10. ']=-' → logprob: -17.7521915435791

Token 298: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03805193677544594
    2. ' =' → logprob: -3.2880518436431885
    3. ']' → logprob: -11.91305160522461
    4. ']=' → logprob: -12.91305160522461
    5. '=v' → logprob: -14.91305160522461
    6. '[' → logprob: -14.91305160522461
    7. ')' → logprob: -15.91305160522461
    8. ',' → logprob: -15.91305160522461
    9. ')=' → logprob: -16.28805160522461
    10. '=len' → logprob: -16.41305160522461

Token 299: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.0019293478690087795
    2. ' distance' → logprob: -6.25192928314209
    3. '   ' → logprob: -15.00192928314209
    4. '(distance' → logprob: -15.62692928314209
    5. ' ' → logprob: -16.251930236816406
    6. 'dist' → logprob: -16.376930236816406
    7. 'd' → logprob: -16.751930236816406
    8. '0' → logprob: -17.876930236816406
    9. '       ' → logprob: -18.251930236816406
    10. '  ' → logprob: -18.376930236816406

Token 300: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002226979471743107
    2. '<|end|>' → logprob: -7.127226829528809
    3. '+' → logprob: -7.627226829528809
    4. '       ' → logprob: -7.752226829528809
    5. '
' → logprob: -8.127226829528809
    6. ' +' → logprob: -10.127226829528809
    7. '        ' → logprob: -10.377226829528809
    8. '        
' → logprob: -10.502226829528809
    9. '<|end|>' → logprob: -11.002226829528809
    10. ' 
' → logprob: -11.002226829528809

Token 301: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020414141472429037
    2. '           ' → logprob: -6.877041339874268
    3. '
' → logprob: -7.252041339874268
    4. '        
' → logprob: -9.127041816711426
    5. ',' → logprob: -9.627041816711426
    6. '<|end|>' → logprob: -9.877041816711426
    7. '   ' → logprob: -10.627041816711426
    8. '+' → logprob: -12.252041816711426
    9. ' v' → logprob: -12.377041816711426
    10. 'v' → logprob: -12.377041816711426

Token 302: ' distance' (ID: 9324)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05297441408038139
    2. 'distance' (adapté à ' distance') → logprob: -3.5529744625091553
    3. ' for' → logprob: -4.677974224090576
    4. 'v' → logprob: -4.802974224090576
    5. '       ' → logprob: -5.552974224090576
    6. '           ' → logprob: -6.552974224090576
    7. ' distance' → logprob: -9.927974700927734
    8. '   ' → logprob: -10.052974700927734
    9. ' v' → logprob: -10.927974700927734
    10. '
' → logprob: -11.177974700927734

Token 303: '_count' (ID: 7536)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5827100276947021
    2. '+=' → logprob: -1.2077100276947021
    3. '_count' → logprob: -2.332710027694702
    4. '_list' → logprob: -3.707710027694702
    5. '+' → logprob: -3.957710027694702
    6. ' +' → logprob: -6.957710266113281
    7. ']+=' → logprob: -8.207710266113281
    8. '_next' → logprob: -8.332710266113281
    9. '_add' → logprob: -8.832710266113281
    10. 'count' → logprob: -9.332710266113281

Token 304: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931560039520264
    2. '+=' → logprob: -0.6931560039520264
    3. '=' → logprob: -11.818156242370605
    4. ' =' → logprob: -14.068156242370605
    5. ' ' → logprob: -15.193156242370605
    6. ']+=' → logprob: -15.318156242370605
    7. '+' → logprob: -15.818156242370605
    8. '+=(' → logprob: -16.94315528869629
    9. ' +' → logprob: -17.56815528869629
    10. '+='' → logprob: -17.94315528869629

Token 305: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. 'len' → logprob: -18.50001335144043
    4. '   ' → logprob: -20.62501335144043
    5. '
' → logprob: -21.50001335144043
    6. '```' → logprob: -22.50001335144043
    7. ' ' → logprob: -23.00001335144043
    8. 'for' → logprob: -23.87501335144043
    9. '  ' → logprob: -23.87501335144043
    10. '2' → logprob: -23.87501335144043

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6405310816480778e-05
    2. 'len' → logprob: -11.500016212463379
    3. ' ' → logprob: -12.000016212463379
    4. ' len' → logprob: -18.625017166137695
    5. '```' → logprob: -19.500017166137695
    6. '(len' → logprob: -19.750017166137695
    7. '-' → logprob: -20.000017166137695
    8. '0' → logprob: -20.000017166137695
    9. 'for' → logprob: -20.500017166137695
    10. 'length' → logprob: -20.562517166137695

Token 307: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020059334114193916
    2. '           ' → logprob: -4.520059108734131
    3. '
' → logprob: -5.395059108734131
    4. '<|end|>' → logprob: -6.145059108734131
    5. ',' → logprob: -6.645059108734131
    6. '        
' → logprob: -7.895059108734131
    7. ' for' → logprob: -8.520059585571289
    8. '   ' → logprob: -9.395059585571289
    9. 'for' → logprob: -10.145059585571289
    10. '        ' → logprob: -10.145059585571289

Token 308: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01176569052040577
    2. '           ' → logprob: -4.511765480041504
    3. ' for' → logprob: -8.136765480041504
    4. '
' → logprob: -8.636765480041504
    5. 'for' → logprob: -9.511765480041504
    6. ',' → logprob: -9.761765480041504
    7. '   ' → logprob: -10.136765480041504
    8. '        
' → logprob: -10.886765480041504
    9. '<|end|>' → logprob: -11.011765480041504
    10. 'v' → logprob: -12.011765480041504

Token 309: ' v' (ID: 323)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001224274281412363
    2. 'v' (adapté à ' v') → logprob: -6.751224040985107
    3. '   ' → logprob: -10.751224517822266
    4. ' for' → logprob: -11.126224517822266
    5. 'if' → logprob: -12.126224517822266
    6. '       ' → logprob: -12.251224517822266
    7. '           ' → logprob: -12.501224517822266
    8. '            
' → logprob: -13.751224517822266
    9. '
' → logprob: -13.876224517822266
    10. 'neighbors' → logprob: -14.376224517822266

Token 310: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0030187068041414022
    2. 'for' → logprob: -6.003018856048584
    3. '_list' → logprob: -8.128018379211426
    4. 'next' → logprob: -9.253018379211426
    5. '_next' → logprob: -9.753018379211426
    6. '_' → logprob: -10.753018379211426
    7. 'in' → logprob: -11.753018379211426
    8. 'v' → logprob: -11.753018379211426
    9. ' for' → logprob: -12.003018379211426
    10. '_for' → logprob: -12.003018379211426

Token 311: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.06283621490001678
    2. '_previous' → logprob: -2.812836170196533
    3. 'next' → logprob: -7.187836170196533
    4. 'previous' → logprob: -10.187836647033691
    5. '_prev' → logprob: -10.812836647033691
    6. 'for' → logprob: -10.812836647033691
    7. 'v' → logprob: -12.312836647033691
    8. '=' → logprob: -12.687836647033691
    9. 'Next' → logprob: -12.812836647033691
    10. '_neighbors' → logprob: -12.812836647033691

Token 312: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.07508750259876251
    2. '.' → logprob: -3.325087547302246
    3. '=' → logprob: -4.450087547302246
    4. '+=' → logprob: -4.575087547302246
    5. '.append' → logprob: -4.950087547302246
    6. ' +=' → logprob: -5.200087547302246
    7. ' =' → logprob: -6.700087547302246
    8. '.=' → logprob: -8.325087547302246
    9. 'extend' → logprob: -9.200087547302246
    10. '=[]' → logprob: -9.825087547302246

Token 313: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.0010288810590282083
    2. '([' → logprob: -7.001029014587402
    3. '(' → logprob: -9.251029014587402
    4. '(list' → logprob: -12.501029014587402
    5. '(sorted' → logprob: -12.626029014587402
    6. 'link' → logprob: -12.751029014587402
    7. '(
' → logprob: -13.001029014587402
    8. '((' → logprob: -13.251029014587402
    9. '(x' → logprob: -13.376029014587402
    10. '(set' → logprob: -13.876029014587402

Token 314: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.003347397781908512
    2. 'link' → logprob: -5.878347396850586
    3. 'ist' → logprob: -8.253347396850586
    4. '[v' → logprob: -8.753347396850586
    5. '[' → logprob: -9.378347396850586
    6. '[k' → logprob: -11.378347396850586
    7. 'set' → logprob: -12.128347396850586
    8. '(v' → logprob: -12.503347396850586
    9. '[i' → logprob: -12.753347396850586
    10. 'k' → logprob: -13.003347396850586

Token 315: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.630610641877865e-06
    2. '.get' → logprob: -12.000006675720215
    3. '(v' → logprob: -16.0000057220459
    4. '[' → logprob: -16.2500057220459
    5. 'v' → logprob: -16.2500057220459
    6. ' [' → logprob: -17.7500057220459
    7. 'get' → logprob: -18.2500057220459
    8. '[
' → logprob: -19.0000057220459
    9. '

' → logprob: -19.1250057220459
    10. '[V' → logprob: -19.2500057220459

Token 316: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -4.0484450437361374e-05
    2. '])
' → logprob: -10.250040054321289
    3. ']' → logprob: -12.625040054321289
    4. ' ])' → logprob: -14.125040054321289
    5. ')' → logprob: -14.500040054321289
    6. '])

' → logprob: -14.750040054321289
    7. ']])' → logprob: -16.87504005432129
    8. '))' → logprob: -17.25004005432129
    9. ''])' → logprob: -17.37504005432129
    10. '   ' → logprob: -17.62504005432129

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29609113931655884
    2. '
' → logprob: -1.546091079711914
    3. '        
' → logprob: -3.171091079711914
    4. 'v' → logprob: -8.421091079711914
    5. '<|end|>' → logprob: -8.671091079711914
    6. ' 
' → logprob: -8.921091079711914
    7. '            
' → logprob: -9.171091079711914
    8. '  
' → logprob: -9.296091079711914
    9. '    
' → logprob: -9.296091079711914
    10. '       
' → logprob: -9.421091079711914

Token 318: ' distance' (ID: 9324)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.18999765813350677
    2. '       ' → logprob: -2.189997673034668
    3. 'distance' (adapté à ' distance') → logprob: -3.064997673034668
    4. ' v' → logprob: -4.689997673034668
    5. '   ' → logprob: -5.439997673034668
    6. ' distance' → logprob: -7.814997673034668
    7. 'for' → logprob: -9.189997673034668
    8. '```' → logprob: -9.314997673034668
    9. 'from' → logprob: -9.564997673034668
    10. 'if' → logprob: -10.189997673034668

Token 319: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03389279171824455
    2. '+=' → logprob: -3.408892869949341
    3. '_count' → logprob: -8.658892631530762
    4. '_list' → logprob: -10.533892631530762
    5. ' =' → logprob: -10.658892631530762
    6. '_' → logprob: -11.533892631530762
    7. '=' → logprob: -11.908892631530762
    8. '_next' → logprob: -12.783892631530762
    9. '+' → logprob: -13.158892631530762
    10. ' +' → logprob: -14.158892631530762

Token 320: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '   ' → logprob: -18.12548828125
    4. '+' → logprob: -20.12548828125
    5. '１' → logprob: -20.37548828125
    6. '```' → logprob: -20.37548828125
    7. '  ' → logprob: -20.87548828125
    8. '
' → logprob: -21.12548828125
    9. ' ' → logprob: -21.62548828125
    10. ' +' → logprob: -22.00048828125

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.3750057220459
    4. '```' → logprob: -17.8750057220459
    5. '
' → logprob: -18.5000057220459
    6. '+' → logprob: -18.7500057220459
    7. '１' → logprob: -19.6875057220459
    8. '-' → logprob: -19.9375057220459
    9. '  ' → logprob: -20.3125057220459
    10. 'def' → logprob: -20.3125057220459

Token 322: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07631875574588776
    2. 'v' → logprob: -2.7013187408447266
    3. '   ' → logprob: -5.451318740844727
    4. '
' → logprob: -7.201318740844727
    5. ' v' → logprob: -7.576318740844727
    6. '        
' → logprob: -7.826318740844727
    7. '<|end|>' → logprob: -9.076318740844727
    8. '	v' → logprob: -9.576318740844727
    9. ' ' → logprob: -9.701318740844727
    10. '  ' → logprob: -10.951318740844727

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45350900292396545
    2. 'v' → logprob: -1.453508973121643
    3. '<|end|>' → logprob: -2.8285090923309326
    4. '   ' → logprob: -3.7035090923309326
    5. '
' → logprob: -3.7035090923309326
    6. '        
' → logprob: -5.4535088539123535
    7. ' v' → logprob: -5.8285088539123535
    8. '	' → logprob: -6.0785088539123535
    9. ' ' → logprob: -6.0785088539123535
    10. '	v' → logprob: -6.3285088539123535

Token 324: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0016191228060051799
    2. 'for' → logprob: -7.626619338989258
    3. '       ' → logprob: -7.876619338989258
    4. '   ' → logprob: -8.251619338989258
    5. ' v' → logprob: -8.501619338989258
    6. '#' → logprob: -9.251619338989258
    7. 'while' → logprob: -10.376619338989258
    8. 'visited' → logprob: -10.376619338989258
    9. '
' → logprob: -10.751619338989258
    10. 'set' → logprob: -10.876619338989258

Token 325: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00026860725483857095
    2. 'ist' → logprob: -8.250268936157227
    3. ' =' → logprob: -12.375268936157227
    4. '=' → logprob: -13.000268936157227
    5. '_list' → logprob: -14.375268936157227
    6. 'lst' → logprob: -16.125268936157227
    7. ' list' → logprob: -16.250268936157227
    8. '   ' → logprob: -17.125268936157227
    9. ' ' → logprob: -17.375268936157227
    10. 'List' → logprob: -17.750268936157227

Token 326: '_to' (ID: 5089)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006763564422726631
    2. ' =' → logprob: -5.006763458251953
    3. '_next' → logprob: -10.381763458251953
    4. ',' → logprob: -11.131763458251953
    5. '=v' → logprob: -14.131763458251953
    6. 'next' → logprob: -14.631763458251953
    7. '_=' → logprob: -14.756763458251953
    8. '_' → logprob: -15.131763458251953
    9. ',next' → logprob: -15.756763458251953
    10. '＝' → logprob: -16.131763458251953

Token 327: '_del' (ID: 39544)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8916972279548645
    2. '=' → logprob: -1.3916971683502197
    3. 'ext' → logprob: -1.8916971683502197
    4. ' =' → logprob: -2.8916971683502197
    5. 'replace' → logprob: -2.8916971683502197
    6. '=[]' → logprob: -3.3916971683502197
    7. 'xt' → logprob: -4.391697406768799
    8. '_next' → logprob: -4.641697406768799
    9. '=[]
' → logprob: -5.016697406768799
    10. 'extend' → logprob: -5.141697406768799

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4855015277862549
    2. '=' → logprob: -0.9855015277862549
    3. '=[]
' → logprob: -5.235501289367676
    4. '=[]' → logprob: -5.485501289367676
    5. ',' → logprob: -7.360501289367676
    6. 'e' → logprob: -7.610501289367676
    7. 'ete' → logprob: -7.860501289367676
    8. '   ' → logprob: -9.860501289367676
    9. '=[]
' → logprob: -9.860501289367676
    10. 'te' → logprob: -9.985501289367676

Token 329: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1330004781484604
    2. 'set' → logprob: -2.383000373840332
    3. '[v' → logprob: -4.133000373840332
    4. '[]' → logprob: -4.633000373840332
    5. '[]
' → logprob: -6.258000373840332
    6. '{' → logprob: -6.508000373840332
    7. 'list' → logprob: -6.633000373840332
    8. '{}' → logprob: -6.883000373840332
    9. ' v' → logprob: -8.008000373840332
    10. '[' → logprob: -9.383000373840332

Token 330: 'list' (ID: 2641)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.0504600889980793
    2. 'ext' → logprob: -3.17546010017395
    3. 'st' → logprob: -6.550459861755371
    4. '_next' → logprob: -6.550459861755371
    5. '=[]' → logprob: -6.675459861755371
    6. ' =' → logprob: -6.925459861755371
    7. '=' → logprob: -7.800459861755371
    8. 'next' → logprob: -8.175459861755371
    9. '_previous' → logprob: -8.175459861755371
    10. 'list' → logprob: -8.550459861755371

Token 331: '_previous' (ID: 126212)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08530239015817642
    2. '.copy' → logprob: -2.9603023529052734
    3. '[:' → logprob: -4.210302352905273
    4. '[:]' → logprob: -4.210302352905273
    5. '        
' → logprob: -9.335302352905273
    6. 'copy' → logprob: -9.710302352905273
    7. '       ' → logprob: -9.960302352905273
    8. '    
' → logprob: -11.210302352905273
    9. '[::-' → logprob: -11.335302352905273
    10. '   ' → logprob: -11.335302352905273

Token 332: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8471784591674805
    2. '
' → logprob: -1.3471784591674805
    3. '[:]' → logprob: -1.4721784591674805
    4. ' +' → logprob: -2.9721784591674805
    5. '.copy' → logprob: -4.7221784591674805
    6. '.clear' → logprob: -5.2221784591674805
    7. '[:' → logprob: -5.7221784591674805
    8. '<|end|>' → logprob: -5.9721784591674805
    9. '[::-' → logprob: -6.7221784591674805
    10. '+[' → logprob: -6.8471784591674805

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017483506351709366
    2. '   ' → logprob: -4.267483711242676
    3. '
' → logprob: -6.767483711242676
    4. 'v' → logprob: -7.267483711242676
    5. ' v' → logprob: -7.767483711242676
    6. '<|end|>' → logprob: -7.767483711242676
    7. '        
' → logprob: -8.392483711242676
    8. ',' → logprob: -9.267483711242676
    9. '	' → logprob: -9.642483711242676
    10. '	v' → logprob: -10.392483711242676

Token 334: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.720928430557251
    2. ' v' → logprob: -1.220928430557251
    3. '       ' → logprob: -1.595928430557251
    4. '   ' → logprob: -4.220928192138672
    5. '
' → logprob: -7.845928192138672
    6. 'for' → logprob: -8.345928192138672
    7. '	v' → logprob: -8.720928192138672
    8. ',v' → logprob: -8.720928192138672
    9. ',' → logprob: -9.095928192138672
    10. ' for' → logprob: -9.720928192138672

Token 335: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.618001053633634e-05
    2. 'ist' → logprob: -10.625025749206543
    3. ' =' → logprob: -14.250025749206543
    4. '=' → logprob: -14.875025749206543
    5. '_list' → logprob: -15.250025749206543
    6. '=list' → logprob: -15.375025749206543
    7. '=[]' → logprob: -16.12502670288086
    8. '   ' → logprob: -16.12502670288086
    9. ' list' → logprob: -17.12502670288086
    10. ' ' → logprob: -17.62502670288086

Token 336: '_previous' (ID: 126212)
  Prédit: '_previous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_previous' → logprob: -0.3421567976474762
    2. ' =' → logprob: -1.7171567678451538
    3. '=' → logprob: -2.2171568870544434
    4. '   ' → logprob: -7.342156887054443
    5. ',' → logprob: -7.842156887054443
    6. 'previous' → logprob: -10.092156410217285
    7. 'Previous' → logprob: -10.342156410217285
    8. '_to' → logprob: -10.467156410217285
    9. '=[]' → logprob: -10.717156410217285
    10. '_next' → logprob: -10.842156410217285

Token 337: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23427999019622803
    2. '=' → logprob: -1.609279990196228
    3. ',' → logprob: -4.734280109405518
    4. '=v' → logprob: -11.23427963256836
    5. ' ,' → logprob: -11.23427963256836
    6. ' v' → logprob: -12.23427963256836
    7. ',v' → logprob: -12.60927963256836
    8. ' ' → logprob: -12.85927963256836
    9. 'v' → logprob: -13.98427963256836
    10. ')' → logprob: -15.60927963256836

Token 338: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00018387178715784103
    2. ' v' → logprob: -8.625184059143066
    3. '[v' → logprob: -13.000184059143066
    4. '   ' → logprob: -14.000184059143066
    5. '[' → logprob: -14.375184059143066
    6. 'list' → logprob: -14.750184059143066
    7. 'set' → logprob: -16.00018310546875
    8. '	v' → logprob: -17.25018310546875
    9. '       ' → logprob: -17.75018310546875
    10. '[]' → logprob: -17.75018310546875

Token 339: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0001487140398239717
    2. '_list' → logprob: -8.87514877319336
    3. 'ist' → logprob: -12.12514877319336
    4. '[' → logprob: -13.62514877319336
    5. ' list' → logprob: -13.75014877319336
    6. 'List' → logprob: -14.75014877319336
    7. 'l' → logprob: -14.87514877319336
    8. '[list' → logprob: -16.50014877319336
    9. '[]' → logprob: -16.62514877319336
    10. 'lst' → logprob: -16.75014877319336

Token 340: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006316835526376963
    2. 'v' → logprob: -5.131316661834717
    3. '   ' → logprob: -8.506317138671875
    4. '
' → logprob: -9.506317138671875
    5. ' v' → logprob: -9.756317138671875
    6. ',' → logprob: -11.006317138671875
    7. '        
' → logprob: -11.506317138671875
    8. '	' → logprob: -12.131317138671875
    9. '<|end|>' → logprob: -12.131317138671875
    10. '	v' → logprob: -12.506317138671875

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16323277354240417
    2. 'v' → logprob: -2.0382328033447266
    3. '
' → logprob: -4.788232803344727
    4. '   ' → logprob: -5.038232803344727
    5. ' v' → logprob: -5.413232803344727
    6. '	v' → logprob: -7.163232803344727
    7. '<|end|>' → logprob: -9.913232803344727
    8. ' ' → logprob: -10.163232803344727
    9. ',' → logprob: -10.163232803344727
    10. '	' → logprob: -10.288232803344727

Token 342: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.00016551809676457196
    2. '       ' → logprob: -8.750165939331055
    3. ' v' → logprob: -12.500165939331055
    4. '   ' → logprob: -12.625165939331055
    5. 'for' → logprob: -17.875165939331055
    6. '	v' → logprob: -18.750165939331055
    7. '           ' → logprob: -19.250165939331055
    8. '      ' → logprob: -19.625165939331055
    9. ' ' → logprob: -19.750165939331055
    10. '    ' → logprob: -19.750165939331055

Token 343: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.856408536899835e-05
    2. 'ist' → logprob: -10.500028610229492
    3. ' =' → logprob: -15.375028610229492
    4. '=' → logprob: -15.750028610229492
    5. 'v' → logprob: -15.750028610229492
    6. '_list' → logprob: -15.875028610229492
    7. 'lst' → logprob: -16.250028610229492
    8. ' list' → logprob: -16.500028610229492
    9. 'l' → logprob: -17.125028610229492
    10. '   ' → logprob: -17.375028610229492

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132634460926056
    2. ' =' → logprob: -1.3132634162902832
    3. '_next' → logprob: -13.688263893127441
    4. '=v' → logprob: -14.938263893127441
    5. '_' → logprob: -16.563262939453125
    6. ' ' → logprob: -16.813262939453125
    7. 'next' → logprob: -17.188262939453125
    8. '_=' → logprob: -17.563262939453125
    9. ' next' → logprob: -17.688262939453125
    10. '_to' → logprob: -17.688262939453125

Token 345: ' list' (ID: 1562)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.21241828799247742
    2. '[v' → logprob: -1.8374183177947998
    3. 'list' → logprob: -3.8374183177948
    4. '[]' → logprob: -5.087418079376221
    5. ' v' → logprob: -6.212418079376221
    6. '[' → logprob: -7.087418079376221
    7. '[list' → logprob: -7.337418079376221
    8. ' list' → logprob: -7.837418079376221
    9. ' [' → logprob: -7.962418079376221
    10. ' []' → logprob: -10.087418556213379

Token 346: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.0017267032526433468
    2. '(dict' → logprob: -6.7517266273498535
    3. '(' → logprob: -7.5017266273498535
    4. '(
' → logprob: -13.376727104187012
    5. '(v' → logprob: -14.001727104187012
    6. 'dict' → logprob: -14.126727104187012
    7. '({' → logprob: -14.751727104187012
    8. '(sorted' → logprob: -14.876727104187012
    9. 'set' → logprob: -15.251727104187012
    10. '(filter' → logprob: -16.001726150512695

Token 347: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.558399319241289e-05
    2. ' (' → logprob: -11.375025749206543
    3. '(' → logprob: -11.750025749206543
    4. 'v' → logprob: -12.375025749206543
    5. '(
' → logprob: -13.500025749206543
    6. '()' → logprob: -15.125025749206543
    7. '().' → logprob: -17.000024795532227
    8. '	v' → logprob: -17.250024795532227
    9. '()(' → logprob: -17.250024795532227
    10. ' v' → logprob: -17.500024795532227

Token 348: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0019881133921444416
    2. '(v' → logprob: -6.251987934112549
    3. '_next' → logprob: -10.501988410949707
    4. 'ist' → logprob: -11.501988410949707
    5. '_to' → logprob: -12.251988410949707
    6. '_list' → logprob: -12.376988410949707
    7. 'next' → logprob: -13.001988410949707
    8. ')' → logprob: -13.251988410949707
    9. 'l' → logprob: -13.251988410949707
    10. '(list' → logprob: -13.501988410949707

Token 349: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -8.399378566537052e-05
    2. '_to' → logprob: -10.000083923339844
    3. 'next' → logprob: -10.375083923339844
    4. ')' → logprob: -12.875083923339844
    5. 'Next' → logprob: -13.375083923339844
    6. '(next' → logprob: -14.125083923339844
    7. '[next' → logprob: -14.125083923339844
    8. '(v' → logprob: -14.375083923339844
    9. ' next' → logprob: -15.375083923339844
    10. ' )' → logprob: -15.500083923339844

Token 350: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006840797723270953
    2. ')-' → logprob: -7.8756842613220215
    3. ' )' → logprob: -8.250683784484863
    4. ').' → logprob: -10.875683784484863
    5. '   ' → logprob: -11.250683784484863
    6. ' ' → logprob: -13.000683784484863
    7. '())' → logprob: -13.125683784484863
    8. '))' → logprob: -13.125683784484863
    9. ')
' → logprob: -13.500683784484863
    10. ' -' → logprob: -14.500683784484863

Token 351: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.330484002828598
    2. ' -' → logprob: -1.3304840326309204
    3. ')' → logprob: -4.080483913421631
    4. ')-' → logprob: -9.330484390258789
    5. ' ' → logprob: -10.080484390258789
    6. '   ' → logprob: -10.580484390258789
    7. ' )' → logprob: -11.830484390258789
    8. ').' → logprob: -11.830484390258789
    9. '()-' → logprob: -14.080484390258789
    10. '.d' → logprob: -14.080484390258789

Token 352: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.059121228754520416
    2. ' set' → logprob: -2.9341211318969727
    3. '(set' → logprob: -5.559121131896973
    4. 'v' → logprob: -8.684121131896973
    5. ' v' → logprob: -10.059121131896973
    6. '(v' → logprob: -10.184121131896973
    7. '   ' → logprob: -10.184121131896973
    8. ' ' → logprob: -10.184121131896973
    9. ' (' → logprob: -10.934121131896973
    10. '{' → logprob: -10.934121131896973

Token 353: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -3.869639476761222e-05
    2. '(' → logprob: -10.500039100646973
    3. 'v' → logprob: -11.500039100646973
    4. '(
' → logprob: -14.500039100646973
    5. ' (' → logprob: -15.500039100646973
    6. '((' → logprob: -15.625039100646973
    7. '	v' → logprob: -18.250038146972656
    8. ' v' → logprob: -18.625038146972656
    9. '   ' → logprob: -18.750038146972656
    10. '(V' → logprob: -18.875038146972656

Token 354: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.167648876318708e-05
    2. '_previous' → logprob: -10.500041961669922
    3. '_list' → logprob: -11.750041961669922
    4. 'l' → logprob: -12.500041961669922
    5. 'v' → logprob: -13.625041961669922
    6. '(list' → logprob: -14.750041961669922
    7. 'previous' → logprob: -15.000041961669922
    8. ')' → logprob: -15.375041961669922
    9. '(' → logprob: -15.875041961669922
    10. 'to' → logprob: -16.375041961669922

Token 355: '_to' (ID: 5089)
  Prédit: '_previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_previous' → logprob: -0.00037085101939737797
    2. ')' → logprob: -8.500370979309082
    3. 'previous' → logprob: -9.375370979309082
    4. '_to' → logprob: -10.250370979309082
    5. '))' → logprob: -10.375370979309082
    6. 'Previous' → logprob: -11.750370979309082
    7. '_' → logprob: -13.125370979309082
    8. '_)' → logprob: -13.500370979309082
    9. '_next' → logprob: -13.875370979309082
    10. '_prev' → logprob: -14.000370979309082

Token 356: '_del' (ID: 39544)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.7126451730728149
    2. 'del' → logprob: -0.7126451730728149
    3. '_del' → logprob: -3.9626450538635254
    4. '_el' → logprob: -9.337645530700684
    5. 'l' → logprob: -9.462645530700684
    6. '	del' → logprob: -9.837645530700684
    7. 'd' → logprob: -11.337645530700684
    8. 'il' → logprob: -11.587645530700684
    9. 'ел' → logprob: -12.087645530700684
    10. 'def' → logprob: -12.587645530700684

Token 357: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14596323668956757
    2. '))' → logprob: -2.020963191986084
    3. ' )' → logprob: -5.895963191986084
    4. ' ))' → logprob: -8.520963668823242
    5. ')))' → logprob: -9.145963668823242
    6. ')
' → logprob: -9.645963668823242
    7. ' and' → logprob: -9.895963668823242
    8. ' -' → logprob: -10.395963668823242
    9. '<|end|>' → logprob: -11.645963668823242
    10. ' +' → logprob: -11.770963668823242

Token 358: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25609830021858215
    2. '   ' → logprob: -1.5060982704162598
    3. ' return' → logprob: -6.50609827041626
    4. '<|end|>' → logprob: -6.50609827041626
    5. 'return' → logprob: -7.38109827041626
    6. ')' → logprob: -8.506098747253418
    7. '	return' → logprob: -9.756098747253418
    8. '    ' → logprob: -10.006098747253418
    9. '[]' → logprob: -10.131098747253418
    10. '...' → logprob: -10.131098747253418

Token 359: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006028573028743267
    2. ')' → logprob: -6.006028652191162
    3. ' return' → logprob: -6.881028652191162
    4. '<|end|>' → logprob: -6.881028652191162
    5. 'return' → logprob: -8.006028175354004
    6. ' ' → logprob: -8.131028175354004
    7. '    ' → logprob: -8.256028175354004
    8. '	return' → logprob: -8.631028175354004
    9. '       ' → logprob: -9.756028175354004
    10. '[' → logprob: -9.756028175354004

Token 360: '_distance' (ID: 45537)
  Prédit: '(distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(distance' → logprob: -0.32648956775665283
    2. '_distance' → logprob: -1.3264895677566528
    3. '(' → logprob: -4.451489448547363
    4. 'distance' → logprob: -7.201489448547363
    5. '_key' → logprob: -7.701489448547363
    6. '_value' → logprob: -9.076489448547363
    7. '_' → logprob: -9.576489448547363
    8. '_val' → logprob: -10.326489448547363
    9. '_dist' → logprob: -10.326489448547363
    10. 'Distance' → logprob: -11.701489448547363

Token 361: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2522551119327545
    2. '=' → logprob: -1.5022550821304321
    3. '_' → logprob: -8.3772554397583
    4. ',' → logprob: -9.8772554397583
    5. ' ' → logprob: -10.5022554397583
    6. '=max' → logprob: -11.7522554397583
    7. '_=' → logprob: -12.1272554397583
    8. ' =
' → logprob: -14.1272554397583
    9. '_value' → logprob: -14.3772554397583
    10. ' ,' → logprob: -14.7522554397583

Token 362: ' -' (ID: 533)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07924798876047134
    2. ' max' → logprob: -2.7042479515075684
    3. '0' → logprob: -4.704247951507568
    4. '-' → logprob: -9.329248428344727
    5. 'distance' → logprob: -9.579248428344727
    6. ' ' → logprob: -10.579248428344727
    7. ' -' → logprob: -11.579248428344727
    8. '   ' → logprob: -12.204248428344727
    9. ' distance' → logprob: -12.329248428344727
    10. '(max' → logprob: -12.454248428344727

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004261468129698187
    2. 'float' → logprob: -8.250426292419434
    3. '100' → logprob: -9.625426292419434
    4. '10' → logprob: -9.875426292419434
    5. '999' → logprob: -10.375426292419434
    6. '2' → logprob: -11.875426292419434
    7. 'inf' → logprob: -12.875426292419434
    8. '99' → logprob: -13.000426292419434
    9. 'int' → logprob: -13.875426292419434
    10. '-' → logprob: -14.500426292419434

Token 364: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13993318378925323
    2. ' for' → logprob: -2.3899331092834473
    3. '   ' → logprob: -4.139933109283447
    4. '<|end|>' → logprob: -4.264933109283447
    5. 'for' → logprob: -5.764933109283447
    6. 'max' → logprob: -6.139933109283447
    7. ' max' → logprob: -6.264933109283447
    8. ',' → logprob: -7.264933109283447
    9. ' and' → logprob: -8.264933586120605
    10. ' ' → logprob: -8.889933586120605

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.476548969745636
    2. 'max' → logprob: -1.4765489101409912
    3. ' for' → logprob: -2.601548910140991
    4. ' max' → logprob: -3.101548910140991
    5. 'for' → logprob: -3.476548910140991
    6. ',' → logprob: -8.35154914855957
    7. ' and' → logprob: -9.22654914855957
    8. 'next' → logprob: -10.22654914855957
    9. ' ' → logprob: -10.60154914855957
    10. '_max' → logprob: -10.72654914855957

Token 366: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.11487631499767303
    2. 'for' → logprob: -2.4898762702941895
    3. 'f' → logprob: -3.8648762702941895
    4. 'fur' → logprob: -5.7398762702941895
    5. 'far' → logprob: -7.2398762702941895
    6. 'node' → logprob: -8.364876747131348
    7. 'ans' → logprob: -8.614876747131348
    8. 'answer' → logprob: -10.114876747131348
    9. 'start' → logprob: -10.489876747131348
    10. 'v' → logprob: -10.614876747131348

Token 367: '_v' (ID: 5390)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.24371060729026794
    2. '_distance' → logprob: -2.118710517883301
    3. '_vertex' → logprob: -2.993710517883301
    4. 'node' → logprob: -3.993710517883301
    5. '_v' → logprob: -4.118710517883301
    6. '_key' → logprob: -4.993710517883301
    7. 'v' → logprob: -6.243710517883301
    8. 'distance' → logprob: -6.993710517883301
    9. '_point' → logprob: -8.1187105178833
    10. '_value' → logprob: -8.1187105178833

Token 368: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3906538188457489
    2. '=' → logprob: -1.1406538486480713
    3. ',' → logprob: -6.140653610229492
    4. 'alue' → logprob: -6.640653610229492
    5. 'al' → logprob: -8.765653610229492
    6. '=[]' → logprob: -10.515653610229492
    7. '=None' → logprob: -10.640653610229492
    8. 'ariable' → logprob: -10.890653610229492
    9. '<|end|>' → logprob: -11.265653610229492
    10. '=list' → logprob: -11.390653610229492

Token 369: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007865681312978268
    2. 'None' → logprob: -5.132865905761719
    3. ' -' → logprob: -6.507865905761719
    4. '0' → logprob: -8.632865905761719
    5. '1' → logprob: -9.007865905761719
    6. ' None' → logprob: -9.257865905761719
    7. '[]' → logprob: -10.507865905761719
    8. 'v' → logprob: -11.382865905761719
    9. ' ' → logprob: -13.007865905761719
    10. '   ' → logprob: -13.257865905761719

Token 370: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0575733482837677
    2. '
' → logprob: -3.0575733184814453
    3. 'for' → logprob: -4.932573318481445
    4. ' for' → logprob: -6.432573318481445
    5. '    
' → logprob: -9.557573318481445
    6. ' 
' → logprob: -11.057573318481445
    7. ',' → logprob: -11.057573318481445
    8. '<|end|>' → logprob: -11.932573318481445
    9. '	for' → logprob: -12.182573318481445
    10. ',
' → logprob: -12.432573318481445

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10646523535251617
    2. ' for' → logprob: -2.6064653396606445
    3. 'for' → logprob: -3.6064653396606445
    4. '
' → logprob: -10.481465339660645
    5. '	for' → logprob: -11.231465339660645
    6. ',' → logprob: -12.856465339660645
    7. '    
' → logprob: -13.106465339660645
    8. '<|end|>' → logprob: -13.481465339660645
    9. '       ' → logprob: -14.481465339660645
    10. ')' → logprob: -14.481465339660645

Token 372: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04911457374691963
    2. ' for' → logprob: -3.049114465713501
    3. '   ' → logprob: -7.54911470413208
    4. '	for' → logprob: -15.174114227294922
    5. '
' → logprob: -16.299114227294922
    6. ' ' → logprob: -16.674114227294922
    7. '  ' → logprob: -18.174114227294922
    8. ' 
' → logprob: -18.299114227294922
    9. 'max' → logprob: -18.424114227294922
    10. '    
' → logprob: -18.799114227294922

Token 373: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6431412100791931
    2. 'k' → logprob: -0.8931412100791931
    3. 'key' → logprob: -3.393141269683838
    4. 'node' → logprob: -4.268141269683838
    5. ' v' → logprob: -4.893141269683838
    6. ' k' → logprob: -5.393141269683838
    7. ' key' → logprob: -6.393141269683838
    8. 'vertex' → logprob: -7.018141269683838
    9. 'i' → logprob: -7.268141269683838
    10. ' node' → logprob: -7.393141269683838

Token 374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6047408580780029
    2. ' in' → logprob: -0.8547408580780029
    3. ' ,' → logprob: -3.979740858078003
    4. 'in' → logprob: -4.854741096496582
    5. ',v' → logprob: -6.854741096496582
    6. ',d' → logprob: -7.729741096496582
    7. ',value' → logprob: -8.354741096496582
    8. ',in' → logprob: -10.354741096496582
    9. ' ' → logprob: -10.604741096496582
    10. ',val' → logprob: -10.729741096496582

Token 375: ' dist' (ID: 3601)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1735704392194748
    2. 'dist' → logprob: -2.048570394515991
    3. 'distance' → logprob: -4.04857063293457
    4. ' d' → logprob: -4.79857063293457
    5. ' dist' → logprob: -5.42357063293457
    6. ' distance' → logprob: -8.29857063293457
    7. 'dis' → logprob: -10.17357063293457
    8. 'v' → logprob: -11.17357063293457
    9. 'dst' → logprob: -12.42357063293457
    10. 'value' → logprob: -12.79857063293457

Token 376: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4425380527973175
    2. 'ance' → logprob: -1.0675380229949951
    3. 'in' → logprob: -4.442538261413574
    4. ' ' → logprob: -6.942538261413574
    5. ',' → logprob: -7.067538261413574
    6. '   ' → logprob: -10.192538261413574
    7. 'anced' → logprob: -10.692538261413574
    8. 'anc' → logprob: -10.817538261413574
    9. 'an' → logprob: -11.192538261413574
    10. 'ince' → logprob: -11.567538261413574

Token 377: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.00033558503491804004
    2. ' distance' → logprob: -8.000335693359375
    3. '(distance' → logprob: -16.250335693359375
    4. ' ' → logprob: -19.375335693359375
    5. '_distance' → logprob: -19.375335693359375
    6. '   ' → logprob: -19.500335693359375
    7. '
' → logprob: -20.000335693359375
    8. '.distance' → logprob: -20.250335693359375
    9. 'Distance' → logprob: -21.000335693359375
    10. '-distance' → logprob: -21.125335693359375

Token 378: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.1160349458805285e-05
    2. 'in' → logprob: -12.000011444091797
    3. 'list' → logprob: -13.250011444091797
    4. 'distance' → logprob: -13.500011444091797
    5. '_items' → logprob: -14.125011444091797
    6. 's' → logprob: -15.000011444091797
    7. '_distance' → logprob: -16.000011444091797
    8. 'items' → logprob: -16.250011444091797
    9. '_' → logprob: -16.375011444091797
    10. 'List' → logprob: -16.500011444091797

Token 379: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0031142570078372955
    2. 'items' → logprob: -6.003114223480225
    3. '.iteritems' → logprob: -8.128114700317383
    4. '.' → logprob: -8.253114700317383
    5. ' items' → logprob: -10.503114700317383
    6. '_items' → logprob: -10.753114700317383
    7. ' in' → logprob: -10.878114700317383
    8. '.Items' → logprob: -12.253114700317383
    9. '.values' → logprob: -12.503114700317383
    10. 'in' → logprob: -12.878114700317383

Token 380: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.802049756515771e-05
    2. '():
' → logprob: -9.750067710876465
    3. '()' → logprob: -11.625067710876465
    4. ' ():' → logprob: -14.500067710876465
    5. '(' → logprob: -15.750067710876465
    6. '():

' → logprob: -16.50006866455078
    7. '():
' → logprob: -17.25006866455078
    8. '()>' → logprob: -17.37506866455078
    9. ':' → logprob: -18.00006866455078
    10. '(),' → logprob: -18.12506866455078

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6784841418266296
    2. '   ' → logprob: -0.8034841418266296
    3. ' if' → logprob: -3.1784842014312744
    4. '<|end|>' → logprob: -6.053483963012695
    5. 'if' → logprob: -8.303483963012695
    6. '    ' → logprob: -8.428483963012695
    7. ',' → logprob: -9.678483963012695
    8. ' ' → logprob: -10.053483963012695
    9. '<|end|>' → logprob: -10.178483963012695
    10. '     ' → logprob: -10.428483963012695

Token 382: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11508543789386749
    2. ' if' → logprob: -2.2400853633880615
    3. 'if' (adapté à ' if') → logprob: -6.365085601806641
    4. '   ' → logprob: -7.615085601806641
    5. '<|end|>' → logprob: -10.74008560180664
    6. '           ' → logprob: -12.74008560180664
    7. ' ' → logprob: -12.86508560180664
    8. '      ' → logprob: -12.99008560180664
    9. '    ' → logprob: -12.99008560180664
    10. '```' → logprob: -13.11508560180664

Token 383: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.026311097666621208
    2. 'dist' → logprob: -3.651311159133911
    3. '	dist' → logprob: -12.151310920715332
    4. '(dist' → logprob: -12.776310920715332
    5. '   ' → logprob: -13.526310920715332
    6. ' ' → logprob: -14.526310920715332
    7. '_dist' → logprob: -15.526310920715332
    8. '    ' → logprob: -15.651310920715332
    9. ' max' → logprob: -16.52631187438965
    10. 'distance' → logprob: -16.65131187438965

Token 384: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.428715318441391
    2. '>' → logprob: -1.0537153482437134
    3. ' ' → logprob: -12.553715705871582
    4. ' >
' → logprob: -12.678715705871582
    5. '<|end|>' → logprob: -12.928715705871582
    6. '[' → logprob: -13.678715705871582
    7. '>
' → logprob: -14.303715705871582
    8. ' ' → logprob: -14.428715705871582
    9. '   ' → logprob: -14.678715705871582
    10. ')' → logprob: -14.803715705871582

Token 385: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.575940728187561
    2. ' max' → logprob: -0.825940728187561
    3. '	max' → logprob: -15.07594108581543
    4. '(max' → logprob: -15.45094108581543
    5. '       ' → logprob: -15.70094108581543
    6. '=max' → logprob: -15.70094108581543
    7. '   ' → logprob: -15.95094108581543
    8. '_max' → logprob: -16.32594108581543
    9. ' ' → logprob: -16.45094108581543
    10. '=' → logprob: -17.20094108581543

Token 386: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.0007207724265754223
    2. '_v' → logprob: -7.250720977783203
    3. 'distance' → logprob: -11.875720977783203
    4. '_dist' → logprob: -12.875720977783203
    5. '_' → logprob: -14.375720977783203
    6. '_max' → logprob: -14.875720977783203
    7. 'v' → logprob: -15.500720977783203
    8. '_value' → logprob: -16.500720977783203
    9. '_depth' → logprob: -17.000720977783203
    10. 'Distance' → logprob: -17.375720977783203

Token 387: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022518415935337543
    2. ':
' → logprob: -6.127251625061035
    3. ' and' → logprob: -10.752251625061035
    4. ' :' → logprob: -11.502251625061035
    5. '       ' → logprob: -11.627251625061035
    6. ' or' → logprob: -11.752251625061035
    7. '<|end|>' → logprob: -12.502251625061035
    8. '):' → logprob: -12.627251625061035
    9. '           ' → logprob: -12.627251625061035
    10. ',' → logprob: -13.502251625061035

Token 388: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012325508520007133
    2. ' max' → logprob: -5.012325286865234
    3. '       ' → logprob: -5.887325286865234
    4. '        ' → logprob: -7.887325286865234
    5. '(max' → logprob: -7.887325286865234
    6. 'max' → logprob: -8.012325286865234
    7. '=' → logprob: -8.637325286865234
    8. ':' → logprob: -8.637325286865234
    9. ' 
' → logprob: -8.762325286865234
    10. ',' → logprob: -8.762325286865234

Token 389: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1011599600315094
    2. 'max' (adapté à ' max') → logprob: -2.3511600494384766
    3. '           ' → logprob: -7.351160049438477
    4. '_max' → logprob: -9.601160049438477
    5. '            ' → logprob: -10.226160049438477
    6. ' v' → logprob: -10.226160049438477
    7. ' ' → logprob: -10.226160049438477
    8. '=max' → logprob: -10.601160049438477
    9. 'v' → logprob: -10.726160049438477
    10. '(max' → logprob: -11.101160049438477

Token 390: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.004051329102367163
    2. 'distance' → logprob: -5.629051208496094
    3. '_v' → logprob: -8.254051208496094
    4. 'Distance' → logprob: -9.504051208496094
    5. '<|end|>' → logprob: -9.879051208496094
    6. '_dist' → logprob: -10.879051208496094
    7. 'v' → logprob: -11.129051208496094
    8. '=' → logprob: -12.004051208496094
    9. '_' → logprob: -12.004051208496094
    10. '_DISTANCE' → logprob: -12.129051208496094

Token 391: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859680309891701
    2. ' =' → logprob: -3.0485968589782715
    3. '=v' → logprob: -11.798596382141113
    4. ',' → logprob: -13.923596382141113
    5. '=

' → logprob: -14.798596382141113
    6. '<|end|>' → logprob: -15.173596382141113
    7. '=
' → logprob: -15.548596382141113
    8. '=d' → logprob: -17.29859733581543
    9. ')' → logprob: -17.29859733581543
    10. '＝' → logprob: -17.42359733581543

Token 392: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.01814994215965271
    2. 'dist' → logprob: -4.0181498527526855
    3. '	dist' → logprob: -16.768150329589844
    4. '(dist' → logprob: -18.768150329589844
    5. 'd' → logprob: -20.268150329589844
    6. '_dist' → logprob: -20.518150329589844
    7. ' ' → logprob: -21.143150329589844
    8. 'v' → logprob: -21.268150329589844
    9. '.dist' → logprob: -21.643150329589844
    10. ' d' → logprob: -22.393150329589844

Token 393: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026871829759329557
    2. '
' → logprob: -6.002686977386475
    3. '<|end|>' → logprob: -8.752687454223633
    4. ',' → logprob: -10.502687454223633
    5. 'v' → logprob: -11.377687454223633
    6. '       ' → logprob: -12.877687454223633
    7. '               ' → logprob: -13.002687454223633
    8. ',
' → logprob: -13.252687454223633
    9. '<|end|>' → logprob: -13.377687454223633
    10. '		' → logprob: -13.377687454223633

Token 394: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.676981345459353e-06
    2. ',' → logprob: -12.250005722045898
    3. ' and' → logprob: -15.375005722045898
    4. '
' → logprob: -15.875005722045898
    5. '		' → logprob: -16.0000057220459
    6. '          ' → logprob: -16.5000057220459
    7. '       ' → logprob: -16.6250057220459
    8. '<|end|>' → logprob: -17.0000057220459
    9. '               ' → logprob: -17.1250057220459
    10. '   ' → logprob: -18.5000057220459

Token 395: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.021229416131973267
    2. ' max' → logprob: -4.271229267120361
    3. 'v' → logprob: -5.271229267120361
    4. '           ' → logprob: -6.271229267120361
    5. ' v' → logprob: -11.64622974395752
    6. '   ' → logprob: -13.39622974395752
    7. '
' → logprob: -13.39622974395752
    8. '       ' → logprob: -14.14622974395752
    9. '               ' → logprob: -15.64622974395752
    10. 'm' → logprob: -15.64622974395752

Token 396: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -1.259079363080673e-05
    2. '_' → logprob: -11.500012397766113
    3. 'v' → logprob: -13.250012397766113
    4. ' _' → logprob: -15.000012397766113
    5. '<|end|>' → logprob: -17.12501335144043
    6. '_
' → logprob: -17.25001335144043
    7. '```' → logprob: -17.25001335144043
    8. '
' → logprob: -17.25001335144043
    9. ',' → logprob: -17.75001335144043
    10. '_s' → logprob: -17.87501335144043

Token 397: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47412821650505066
    2. ' =' → logprob: -0.974128246307373
    3. '=v' → logprob: -10.099127769470215
    4. ',' → logprob: -11.724127769470215
    5. '<|end|>' → logprob: -13.974127769470215
    6. ' ' → logprob: -15.474127769470215
    7. 'v' → logprob: -15.724127769470215
    8. ' =
' → logprob: -16.09912872314453
    9. 's' → logprob: -16.22412872314453
    10. '   ' → logprob: -16.34912872314453

Token 398: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0040785204619169235
    2. ' v' → logprob: -5.504078388214111
    3. '	v' → logprob: -16.879077911376953
    4. '_v' → logprob: -18.754077911376953
    5. '[v' → logprob: -19.504077911376953
    6. '(v' → logprob: -21.004077911376953
    7. 's' → logprob: -21.629077911376953
    8. '.v' → logprob: -21.754077911376953
    9. '<v' → logprob: -21.754077911376953
    10. ')v' → logprob: -21.754077911376953

Token 399: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3572765290737152
    2. '
' → logprob: -1.2322765588760376
    3. '<|end|>' → logprob: -5.232276439666748
    4. '    
' → logprob: -7.357276439666748
    5. '	return' → logprob: -7.607276439666748
    6. ')' → logprob: -7.607276439666748
    7. ' return' → logprob: -8.107276916503906
    8. 'return' → logprob: -8.107276916503906
    9. '  
' → logprob: -8.482276916503906
    10. ':return' → logprob: -8.482276916503906

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001375089050270617
    2. 'return' → logprob: -9.125137329101562
    3. ' return' → logprob: -11.000137329101562
    4. '
' → logprob: -12.000137329101562
    5. '	return' → logprob: -13.375137329101562
    6. '       ' → logprob: -13.625137329101562
    7. ')' → logprob: -14.125137329101562
    8. '<|end|>' → logprob: -14.125137329101562
    9. ',' → logprob: -14.250137329101562
    10. '    
' → logprob: -14.875137329101562

Token 401: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019230343401432037
    2. 'return' (adapté à ' return') → logprob: -4.019230365753174
    3. ' return' → logprob: -7.144230365753174
    4. ')' → logprob: -8.519229888916016
    5. '	return' → logprob: -10.144229888916016
    6. '.' → logprob: -11.019229888916016
    7. ':return' → logprob: -11.644229888916016
    8. '       ' → logprob: -11.894229888916016
    9. ',' → logprob: -12.144229888916016
    10. ' ' → logprob: -12.769229888916016

Token 402: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.31507423520088196
    2. ' max' → logprob: -1.3150742053985596
    3. '(max' → logprob: -6.315074443817139
    4. ' (' → logprob: -13.81507396697998
    5. '[max' → logprob: -13.94007396697998
    6. '   ' → logprob: -16.815074920654297
    7. '	max' → logprob: -17.065074920654297
    8. ',max' → logprob: -17.565074920654297
    9. '_max' → logprob: -18.315074920654297
    10. '(' → logprob: -18.440074920654297

Token 403: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00033581978641450405
    2. ' max' → logprob: -8.000335693359375
    3. '(max' → logprob: -15.625335693359375
    4. '[max' → logprob: -16.500335693359375
    5. ')' → logprob: -17.125335693359375
    6. '   ' → logprob: -18.375335693359375
    7. '
' → logprob: -19.000335693359375
    8. '	max' → logprob: -19.250335693359375
    9. ',max' → logprob: -19.500335693359375
    10. ' ' → logprob: -19.750335693359375

Token 404: '_distance' (ID: 45537)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -3.128163257315464e-07
    2. '_distance' → logprob: -15.25
    3. '_' → logprob: -17.5
    4. '_u' → logprob: -20.125
    5. '_vi' → logprob: -20.625
    6. 'v' → logprob: -20.875
    7. ' _' → logprob: -20.875
    8. '_a' → logprob: -21.0
    9. '_va' → logprob: -21.125
    10. '_)' → logprob: -21.125

Token 405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.13388703338569e-06
    2. ',max' → logprob: -12.375009536743164
    3. ' ,' → logprob: -12.750009536743164
    4. ',
' → logprob: -13.250009536743164
    5. ')' → logprob: -16.500009536743164
    6. ',)' → logprob: -17.250009536743164
    7. ',

' → logprob: -17.250009536743164
    8. '),' → logprob: -17.625009536743164
    9. '<|end|>' → logprob: -18.125009536743164
    10. 'max' → logprob: -19.500009536743164

Token 406: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.474078506231308
    2. 'max' → logprob: -0.9740785360336304
    3. '[max' → logprob: -13.974078178405762
    4. ')' → logprob: -14.474078178405762
    5. '(max' → logprob: -16.599079132080078
    6. ' ' → logprob: -17.724079132080078
    7. '	max' → logprob: -18.224079132080078
    8. '_max' → logprob: -18.849079132080078
    9. ' ' → logprob: -19.474079132080078
    10. ',max' → logprob: -19.599079132080078

Token 407: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -3.128163257315464e-07
    2. 'v' → logprob: -15.375
    3. '_' → logprob: -18.875
    4. ')' → logprob: -19.625
    5. '_distance' → logprob: -20.125
    6. '_)' → logprob: -20.5
    7. '	v' → logprob: -21.125
    8. 'distance' → logprob: -21.25
    9. '_V' → logprob: -22.25
    10. ' _' → logprob: -22.5

Token 408: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -15.875000953674316
    4. '),' → logprob: -19.875
    5. '))' → logprob: -19.875
    6. ',)' → logprob: -20.5
    7. ')}' → logprob: -20.75
    8. ')return' → logprob: -21.25
    9. '}' → logprob: -21.375
    10. ')

' → logprob: -21.375

Token 409: 'def' (ID: 1314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7514821887016296
    2. ')' → logprob: -1.0014822483062744
    3. ' ' → logprob: -3.1264822483062744
    4. ':' → logprob: -3.3764822483062744
    5. '_' → logprob: -4.001482009887695
    6. '=' → logprob: -4.501482009887695
    7. '/' → logprob: -4.626482009887695
    8. '   ' → logprob: -5.001482009887695
    9. '<|end|>' → logprob: -5.251482009887695
    10. '#' → logprob: -5.376482009887695

Token 410: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.31930482387542725
    2. ' main' → logprob: -1.8193048238754272
    3. ' dfs' → logprob: -3.069304943084717
    4. 'calc' → logprob: -4.444304943084717
    5. ' bfs' → logprob: -4.444304943084717
    6. ' dist' → logprob: -4.819304943084717
    7. ' max' → logprob: -5.069304943084717
    8. 'main' → logprob: -5.569304943084717
    9. ' diameter' → logprob: -5.694304943084717
    10. 'dfs' → logprob: -5.944304943084717

Token 411: '_tree' (ID: 27118)
  Prédit: '_long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_long' → logprob: -0.22667257487773895
    2. '_d' → logprob: -1.9766725301742554
    3. '_f' → logprob: -3.601672649383545
    4. '_distance' → logprob: -3.976672649383545
    5. '_max' → logprob: -4.726672649383545
    6. '_dist' → logprob: -5.226672649383545
    7. '_far' → logprob: -6.851672649383545
    8. '_depth' → logprob: -7.476672649383545
    9. '_path' → logprob: -8.101672172546387
    10. '_v' → logprob: -8.226672172546387

Token 412: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.009791151620447636
    2. 'diam' → logprob: -5.259791374206543
    3. '_distance' → logprob: -6.009791374206543
    4. '_depth' → logprob: -7.759791374206543
    5. '_height' → logprob: -7.759791374206543
    6. '_long' → logprob: -7.884791374206543
    7. '_dist' → logprob: -8.634791374206543
    8. '_max' → logprob: -8.759791374206543
    9. 'Diameter' → logprob: -9.009791374206543
    10. '_center' → logprob: -9.384791374206543

Token 413: 'iameter' (ID: 157684)
  Prédit: 'iameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -0.00991462916135788
    2. 'istance' → logprob: -5.634914398193359
    3. 'iam' → logprob: -6.259914398193359
    4. 'ist' → logprob: -6.384914398193359
    5. 'p' → logprob: -6.509914398193359
    6. 'ep' → logprob: -7.509914398193359
    7. 'e' → logprob: -8.50991439819336
    8. 'ia' → logprob: -9.50991439819336
    9. 'eep' → logprob: -9.63491439819336
    10. 'ef' → logprob: -10.00991439819336

Token 414: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.003323507495224476
    2. ' (' → logprob: -5.878323554992676
    3. '(' → logprob: -7.628323554992676
    4. '(node' → logprob: -11.878323554992676
    5. '(x' → logprob: -12.378323554992676
    6. '(root' → logprob: -12.378323554992676
    7. '(Link' → logprob: -12.628323554992676
    8. '(graph' → logprob: -13.003323554992676
    9. '(line' → logprob: -13.003323554992676
    10. '(tree' → logprob: -13.253323554992676

Token 415: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.057743949990254e-05
    2. ')' → logprob: -11.250020980834961
    3. '_list' → logprob: -12.375020980834961
    4. 'ist' → logprob: -13.000020980834961
    5. 'link' → logprob: -15.125020980834961
    6. ' list' → logprob: -15.500020980834961
    7. '))' → logprob: -16.37502098083496
    8. ']' → logprob: -16.75002098083496
    9. 'lists' → logprob: -16.87502098083496
    10. 'length' → logprob: -17.00002098083496

Token 416: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.526081919670105
    2. ',' → logprob: -0.901081919670105
    3. '):
' → logprob: -6.1510820388793945
    4. ')' → logprob: -7.9010820388793945
    5. ' ):' → logprob: -7.9010820388793945
    6. '   ' → logprob: -10.651082038879395
    7. ',v' → logprob: -10.651082038879395
    8. ' ,' → logprob: -11.026082038879395
    9. '):
' → logprob: -12.401082038879395
    10. '(v' → logprob: -13.151082038879395

Token 417: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1849583089351654
    2. 'start' → logprob: -2.4349582195281982
    3. ' v' → logprob: -2.6849582195281982
    4. ' start' → logprob: -4.684958457946777
    5. ')' → logprob: -6.684958457946777
    6. 'root' → logprob: -6.809958457946777
    7. '):' → logprob: -7.559958457946777
    8. ' root' → logprob: -7.684958457946777
    9. ' )' → logprob: -9.059958457946777
    10. '):
' → logprob: -9.559958457946777

Token 418: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019643045961856842
    2. '):' → logprob: -4.1446428298950195
    3. '):
' → logprob: -6.1446428298950195
    4. '=None' → logprob: -6.6446428298950195
    5. ',' → logprob: -9.01964282989502
    6. ')' → logprob: -11.26964282989502
    7. ' =' → logprob: -11.64464282989502
    8. '=v' → logprob: -12.64464282989502
    9. '   ' → logprob: -12.76964282989502
    10. '):

' → logprob: -13.01964282989502

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.9728669738397e-05
    2. ' ' → logprob: -9.750100135803223
    3. 'None' → logprob: -10.750100135803223
    4. ')' → logprob: -11.250100135803223
    5. 'v' → logprob: -13.000100135803223
    6. ' None' → logprob: -14.250100135803223
    7. '0' → logprob: -14.562600135803223
    8. '2' → logprob: -14.750100135803223
    9. '(None' → logprob: -14.812600135803223
    10. '   ' → logprob: -15.000100135803223

Token 420: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029772469773888588
    2. '):
' → logprob: -3.5297725200653076
    3. ')' → logprob: -11.154772758483887
    4. '):
' → logprob: -12.029772758483887
    5. ' ):' → logprob: -13.904772758483887
    6. '   ' → logprob: -14.654772758483887
    7. '):

' → logprob: -15.404772758483887
    8. ',' → logprob: -16.27977180480957
    9. ':' → logprob: -18.02977180480957
    10. ')：' → logprob: -18.15477180480957

Token 421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00044318195432424545
    2. 'max' → logprob: -8.875443458557129
    3. ',' → logprob: -9.875443458557129
    4. '_,' → logprob: -10.000443458557129
    5. 'd' → logprob: -10.250443458557129
    6. 'dist' → logprob: -10.500443458557129
    7. '
' → logprob: -10.750443458557129
    8. 'distance' → logprob: -10.875443458557129
    9. ' max' → logprob: -11.125443458557129
    10. '(distance' → logprob: -11.250443458557129

Token 422: ' _,' (ID: 18042)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05824756249785423
    2. ' max' → logprob: -4.5582475662231445
    3. 'max' → logprob: -4.5582475662231445
    4. 'd' → logprob: -4.9332475662231445
    5. ' dist' → logprob: -4.9332475662231445
    6. '_,' (adapté à ' _,') → logprob: -5.0582475662231445
    7. ' d' → logprob: -5.1832475662231445
    8. 'dist' → logprob: -5.3082475662231445
    9. 'md' → logprob: -7.0582475662231445
    10. 'distance' → logprob: -7.3082475662231445

Token 423: ' u' (ID: 337)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1776055544614792
    2. 'max' → logprob: -2.052605628967285
    3. ' v' → logprob: -4.677605628967285
    4. 'f' → logprob: -5.052605628967285
    5. ' max' → logprob: -5.552605628967285
    6. 'next' → logprob: -5.552605628967285
    7. 'node' → logprob: -6.177605628967285
    8. 'x' → logprob: -6.427605628967285
    9. 'fur' → logprob: -6.677605628967285
    10. 'tmp' → logprob: -7.302605628967285

Token 424: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869140148162842
    2. ' =' → logprob: -1.1369140148162842
    3. ')' → logprob: -10.261914253234863
    4. ')=' → logprob: -11.886914253234863
    5. ',' → logprob: -15.386914253234863
    6. ' ' → logprob: -15.886914253234863
    7. '＝' → logprob: -16.011913299560547
    8. 'v' → logprob: -16.261913299560547
    9. '<|end|>' → logprob: -16.386913299560547
    10. 'u' → logprob: -16.636913299560547

Token 425: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.003609458915889263
    2. ' calc' → logprob: -5.628609657287598
    3. '   ' → logprob: -11.628609657287598
    4. '(calc' → logprob: -15.378609657287598
    5. '.calc' → logprob: -16.12860870361328
    6. 'cal' → logprob: -17.12860870361328
    7. ' ' → logprob: -17.25360870361328
    8. 'calculate' → logprob: -17.87860870361328
    9. '_calc' → logprob: -17.87860870361328
    10. '  ' → logprob: -18.00360870361328

Token 426: '_long' (ID: 42288)
  Prédit: '_long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -4.4894986785948277e-05
    2. '_tree' → logprob: -10.625044822692871
    3. 'long' → logprob: -11.375044822692871
    4. 'tree' → logprob: -11.625044822692871
    5. '```' → logprob: -17.000045776367188
    6. 'calc' → logprob: -18.000045776367188
    7. '_LONG' → logprob: -18.250045776367188
    8. '(tree' → logprob: -18.375045776367188
    9. '(long' → logprob: -18.500045776367188
    10. 'Long' → logprob: -18.625045776367188

Token 427: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.000305310997646302
    2. 'gest' → logprob: -8.12530517578125
    3. '_distance' → logprob: -12.75030517578125
    4. 'st' → logprob: -13.50030517578125
    5. 'test' → logprob: -13.87530517578125
    6. '_dist' → logprob: -14.00030517578125
    7. 'g' → logprob: -14.00030517578125
    8. 'gst' → logprob: -14.75030517578125
    9. 'ost' → logprob: -15.00030517578125
    10. 'ong' → logprob: -15.62530517578125

Token 428: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.008615635335445404
    2. 'distance' → logprob: -4.758615493774414
    3. ' distance' → logprob: -15.258615493774414
    4. 'Distance' → logprob: -15.508615493774414
    5. '距离' → logprob: -15.633615493774414
    6. 'dist' → logprob: -16.008615493774414
    7. '_dist' → logprob: -16.258615493774414
    8. '(distance' → logprob: -16.383615493774414
    9. '```' → logprob: -16.633615493774414
    10. '_DISTANCE' → logprob: -16.758615493774414

Token 429: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. 'link' → logprob: -17.375
    4. '(
' → logprob: -18.125
    5. ' (' → logprob: -18.125
    6. '$link' → logprob: -19.75
    7. '(line' → logprob: -19.875
    8. '
' → logprob: -20.125
    9. '(l' → logprob: -20.625
    10. '```' → logprob: -20.75

Token 430: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.7610454708337784e-05
    2. 'ist' → logprob: -10.500027656555176
    3. ' list' → logprob: -17.75002670288086
    4. 'link' → logprob: -18.50002670288086
    5. '(list' → logprob: -19.12502670288086
    6. 'List' → logprob: -19.87502670288086
    7. '_list' → logprob: -20.75002670288086
    8. ')' → logprob: -21.50002670288086
    9. '[' → logprob: -21.62502670288086
    10. '```' → logprob: -21.62502670288086

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002096197713399306
    2. ',v' → logprob: -9.00020980834961
    3. ' ,' → logprob: -9.37520980834961
    4. '(v' → logprob: -14.37520980834961
    5. ')' → logprob: -15.12520980834961
    6. ',
' → logprob: -15.50020980834961
    7. ',u' → logprob: -16.25020980834961
    8. '   ' → logprob: -16.37520980834961
    9. '[v' → logprob: -17.50020980834961
    10. 'def' → logprob: -17.75020980834961

Token 432: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004113542847335339
    2. ' v' → logprob: -5.504113674163818
    3. ')' → logprob: -10.50411319732666
    4. ')v' → logprob: -12.00411319732666
    5. '   ' → logprob: -14.12911319732666
    6. ' ' → logprob: -15.62911319732666
    7. '	v' → logprob: -15.75411319732666
    8. 'u' → logprob: -15.87911319732666
    9. '<|end|>' → logprob: -16.004114151000977
    10. '    ' → logprob: -16.129114151000977

Token 433: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25213468074798584
    2. ')' → logprob: -1.5021346807479858
    3. ')
' → logprob: -8.877134323120117
    4. ' )
' → logprob: -9.752134323120117
    5. ' )' → logprob: -12.627134323120117
    6. ')

' → logprob: -12.752134323120117
    7. '   ' → logprob: -14.002134323120117
    8. '_)
' → logprob: -14.752134323120117
    9. ' ' → logprob: -16.252134323120117
    10. ')`
' → logprob: -16.502134323120117

Token 434: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018839221447706223
    2. ',' → logprob: -4.643839359283447
    3. '_,' → logprob: -5.268839359283447
    4. '
' → logprob: -5.768839359283447
    5. '    
' → logprob: -8.768838882446289
    6. 'd' → logprob: -9.143838882446289
    7. ' _,' → logprob: -9.143838882446289
    8. ' ,' → logprob: -9.643838882446289
    9. ',d' → logprob: -9.643838882446289
    10. 'distance' → logprob: -10.143838882446289

Token 435: ' distance' (ID: 9324)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1434815376996994
    2. 'dist' → logprob: -2.643481492996216
    3. 'distance' (adapté à ' distance') → logprob: -3.768481492996216
    4. 'd' → logprob: -3.768481492996216
    5. 'diam' → logprob: -4.268481731414795
    6. 'return' → logprob: -7.018481731414795
    7. 'mx' → logprob: -8.393481254577637
    8. '   ' → logprob: -8.643481254577637
    9. ' max' → logprob: -8.768481254577637
    10. 'ans' → logprob: -8.768481254577637

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17275267839431763
    2. '_list' → logprob: -1.9227526187896729
    3. '_u' → logprob: -5.297752857208252
    4. '_max' → logprob: -6.047752857208252
    5. '_,' → logprob: -6.547752857208252
    6. 'list' → logprob: -6.672752857208252
    7. 'max' → logprob: -7.172752857208252
    8. ',_' → logprob: -7.297752857208252
    9. '1' → logprob: -7.797752857208252
    10. ',u' → logprob: -8.422752380371094

Token 437: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.290996253490448
    2. 'v' → logprob: -1.9159963130950928
    3. ' v' → logprob: -2.5409963130950928
    4. ' _' → logprob: -4.165996074676514
    5. 'w' → logprob: -5.165996074676514
    6. ' w' → logprob: -5.790996074676514
    7. 'max' → logprob: -7.665996074676514
    8. '_v' → logprob: -7.790996074676514
    9. ' max' → logprob: -8.540996551513672
    10. ' u' → logprob: -8.665996551513672

Token 438: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408074140548706
    2. '=' → logprob: -0.9740807414054871
    3. 'u' → logprob: -12.974081039428711
    4. ',' → logprob: -14.099081039428711
    5. '=u' → logprob: -15.349081039428711
    6. ' ' → logprob: -15.599081039428711
    7. ')' → logprob: -15.849081039428711
    8. '   ' → logprob: -16.84908103942871
    9. 'v' → logprob: -18.34908103942871
    10. '  ' → logprob: -18.47408103942871

Token 439: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.002475777640938759
    2. ' calc' → logprob: -6.002475738525391
    3. 'cal' → logprob: -16.87747573852539
    4. '   ' → logprob: -18.50247573852539
    5. '(calc' → logprob: -18.50247573852539
    6. 'calculate' → logprob: -20.12747573852539
    7. '.calc' → logprob: -20.25247573852539
    8. 'Calc' → logprob: -20.87747573852539
    9. '_calc' → logprob: -21.87747573852539
    10. ' ' → logprob: -22.37747573852539

Token 440: '_long' (ID: 42288)
  Prédit: '_long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -4.842555426876061e-06
    2. 'long' → logprob: -12.250004768371582
    3. 'Longest' → logprob: -18.3750057220459
    4. ' longest' → logprob: -20.2500057220459
    5. '```' → logprob: -20.2500057220459
    6. '_LONG' → logprob: -21.0000057220459
    7. '
' → logprob: -21.2500057220459
    8. 'def' → logprob: -21.7500057220459
    9. '<long' → logprob: -21.8750057220459
    10. 'tree' → logprob: -22.0000057220459

Token 441: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0013284528395161033
    2. 'gest' → logprob: -6.626328468322754
    3. 'g' → logprob: -13.876328468322754
    4. 'st' → logprob: -14.876328468322754
    5. 'ong' → logprob: -15.126328468322754
    6. 'uest' → logprob: -15.751328468322754
    7. 'iest' → logprob: -15.876328468322754
    8. '_distance' → logprob: -15.876328468322754
    9. 'ost' → logprob: -16.251327514648438
    10. 'test' → logprob: -16.376327514648438

Token 442: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.0009118211455643177
    2. 'distance' → logprob: -7.000911712646484
    3. ' distance' → logprob: -15.750911712646484
    4. '_dist' → logprob: -16.500911712646484
    5. 'Distance' → logprob: -17.750911712646484
    6. '(distance' → logprob: -18.125911712646484
    7. '距离' → logprob: -18.250911712646484
    8. '_DISTANCE' → logprob: -18.625911712646484
    9. 'dist' → logprob: -19.750911712646484
    10. '距' → logprob: -20.500911712646484

Token 443: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -1.9361264946837764e-07
    2. 'link' → logprob: -15.625
    3. '(' → logprob: -17.125
    4. '(
' → logprob: -19.875
    5. ' link' → logprob: -20.0
    6. '   ' → logprob: -20.375
    7. ' (' → logprob: -20.75
    8. '```' → logprob: -20.875
    9. '$link' → logprob: -21.125
    10. '	link' → logprob: -21.125

Token 444: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0009126556105911732
    2. 'ist' → logprob: -7.000912666320801
    3. 'link' → logprob: -14.1259126663208
    4. '(list' → logprob: -16.125911712646484
    5. ' list' → logprob: -16.500911712646484
    6. '[' → logprob: -17.625911712646484
    7. '_list' → logprob: -18.125911712646484
    8. 'List' → logprob: -18.250911712646484
    9. '(' → logprob: -18.250911712646484
    10. 'alist' → logprob: -18.375911712646484

Token 445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1602766215801239
    2. '(link' → logprob: -1.9102766513824463
    3. ' ,' → logprob: -11.285276412963867
    4. 'link' → logprob: -11.285276412963867
    5. ' link' → logprob: -11.535276412963867
    6. ')' → logprob: -11.785276412963867
    7. '(' → logprob: -12.910276412963867
    8. '   ' → logprob: -13.035276412963867
    9. ' (' → logprob: -13.410276412963867
    10. ',
' → logprob: -14.035276412963867

Token 446: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.018282920122146606
    2. ' u' → logprob: -4.018282890319824
    3. 'link' → logprob: -9.018282890319824
    4. ' link' → logprob: -12.643282890319824
    5. '   ' → logprob: -13.143282890319824
    6. '_,' → logprob: -13.268282890319824
    7. ')' → logprob: -14.018282890319824
    8. '    ' → logprob: -14.393282890319824
    9. ',u' → logprob: -14.393282890319824
    10. '	u' → logprob: -14.518282890319824

Token 447: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07889165729284286
    2. ')
' → logprob: -2.5788917541503906
    3. ')
' → logprob: -13.70389175415039
    4. ')

' → logprob: -14.82889175415039
    5. '   ' → logprob: -15.70389175415039
    6. ' )' → logprob: -15.82889175415039
    7. ' )
' → logprob: -16.57889175415039
    8. ')return' → logprob: -17.45389175415039
    9. 'return' → logprob: -18.07889175415039
    10. ')`
' → logprob: -18.57889175415039

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001305950863752514
    2. '
' → logprob: -9.750130653381348
    3. 'return' → logprob: -10.000130653381348
    4. ' return' → logprob: -10.750130653381348
    5. '	return' → logprob: -12.625130653381348
    6. '<|end|>' → logprob: -13.625130653381348
    7. 'def' → logprob: -15.125130653381348
    8. ',' → logprob: -15.500130653381348
    9. '    
' → logprob: -15.625130653381348
    10. ')' → logprob: -16.75012969970703

Token 449: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012955855578184128
    2. '   ' → logprob: -4.512955665588379
    3. ' return' → logprob: -6.262955665588379
    4. '	return' → logprob: -14.512955665588379
    5. '
' → logprob: -17.262956619262695
    6. ' ' → logprob: -17.387956619262695
    7. 'eturn' → logprob: -18.387956619262695
    8. '  ' → logprob: -18.637956619262695
    9. 'def' → logprob: -19.137956619262695
    10. ':return' → logprob: -19.637956619262695

Token 450: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.0788901224732399
    2. 'distance' → logprob: -2.578890085220337
    3. '(distance' → logprob: -14.828889846801758
    4. ' ' → logprob: -18.828889846801758
    5. 'int' → logprob: -19.578889846801758
    6. ' int' → logprob: -19.953889846801758
    7. '_distance' → logprob: -20.203889846801758
    8. '   ' → logprob: -20.453889846801758
    9. ' distancia' → logprob: -20.828889846801758
    10. ' ' → logprob: -20.828889846801758

Token 451: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 452: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 453: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.25478509068489075
    2. 'main' → logprob: -2.1297850608825684
    3. ' solve' → logprob: -4.254785060882568
    4. 'int' → logprob: -4.379785060882568
    5. ' int' → logprob: -4.379785060882568
    6. ' dfs' → logprob: -4.504785060882568
    7. ' factorial' → logprob: -4.754785060882568
    8. ' pow' → logprob: -5.004785060882568
    9. 'pow' → logprob: -5.254785060882568
    10. ' l' → logprob: -5.254785060882568

Token 454: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.968312951968983e-06
    2. '():
' → logprob: -11.875009536743164
    3. ' ():' → logprob: -13.250009536743164
    4. '()' → logprob: -13.875009536743164
    5. '(' → logprob: -16.125009536743164
    6. '():
' → logprob: -16.375009536743164
    7. '()>' → logprob: -19.625009536743164
    8. '().' → logprob: -20.000009536743164
    9. ':' → logprob: -20.125009536743164
    10. '():

' → logprob: -20.375009536743164

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025817241985350847
    2. ' mod' → logprob: -6.377581596374512
    3. ' global' → logprob: -7.252581596374512
    4. ' n' → logprob: -9.252581596374512
    5. 'mod' → logprob: -11.002581596374512
    6. 'global' → logprob: -11.252581596374512
    7. 'n' → logprob: -11.377581596374512
    8. '    ' → logprob: -11.752581596374512
    9. '	mod' → logprob: -12.002581596374512
    10. '	global' → logprob: -12.377581596374512

Token 456: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.3684966266155243
    2. 'mod' → logprob: -1.8684966564178467
    3. '   ' → logprob: -2.3684966564178467
    4. 'N' → logprob: -3.6184966564178467
    5. 'global' → logprob: -4.243496417999268
    6. ' n' → logprob: -4.743496417999268
    7. 't' → logprob: -5.368496417999268
    8. ' mod' → logprob: -6.118496417999268
    9. 'import' → logprob: -6.868496417999268
    10. ' N' → logprob: -6.993496417999268

Token 457: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08100660890340805
    2. '=' → logprob: -3.0810065269470215
    3. ',' → logprob: -3.4560065269470215
    4. '=int' → logprob: -8.33100700378418
    5. ' ,' → logprob: -9.58100700378418
    6. ',n' → logprob: -11.08100700378418
    7. ',k' → logprob: -12.70600700378418
    8. ' ' → logprob: -12.83100700378418
    9. '=input' → logprob: -13.08100700378418
    10. ' =
' → logprob: -13.20600700378418

Token 458: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001502717612311244
    2. ' int' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.626502990722656
    4. ' ' → logprob: -16.876502990722656
    5. '(int' → logprob: -17.126502990722656
    6. '[int' → logprob: -17.251502990722656
    7. 'in' → logprob: -17.501502990722656
    8. '  ' → logprob: -17.751502990722656
    9. '=int' → logprob: -17.751502990722656
    10. '	int' → logprob: -17.751502990722656

Token 459: 'in' (ID: 258)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22798572480678558
    2. '(' → logprob: -1.9779857397079468
    3. '(input' → logprob: -2.7279856204986572
    4. '()
' → logprob: -9.727985382080078
    5. 'input' → logprob: -10.227985382080078
    6. ' ()' → logprob: -10.227985382080078
    7. '(
' → logprob: -11.352985382080078
    8. '().' → logprob: -12.102985382080078
    9. '())' → logprob: -12.977985382080078
    10. '()

' → logprob: -13.352985382080078

Token 460: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.968312951968983e-06
    2. '()
' → logprob: -11.625009536743164
    3. ' ()' → logprob: -14.250009536743164
    4. '()

' → logprob: -15.750009536743164
    5. '(' → logprob: -16.250009536743164
    6. '();' → logprob: -17.125009536743164
    7. '（）' → logprob: -17.875009536743164
    8. '()
' → logprob: -18.000009536743164
    9. '()<' → logprob: -18.375009536743164
    10. '()]' → logprob: -18.500009536743164

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004155806731432676
    2. 'xy' → logprob: -5.50415563583374
    3. 'mod' → logprob: -10.129156112670898
    4. '  ' → logprob: -11.379156112670898
    5. 'xyz' → logprob: -11.879156112670898
    6. 'edges' → logprob: -12.629156112670898
    7. '    
' → logprob: -12.629156112670898
    8. '```' → logprob: -13.129156112670898
    9. '       ' → logprob: -13.629156112670898
    10. 'n' → logprob: -13.754156112670898

Token 462: ' ab' (ID: 692)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.21354363858699799
    2. 'mod' → logprob: -1.8385436534881592
    3. '   ' → logprob: -3.463543653488159
    4. 'edges' → logprob: -7.08854341506958
    5. 'if' → logprob: -7.46354341506958
    6. 'm' → logprob: -9.463543891906738
    7. '    
' → logprob: -10.088543891906738
    8. 'edge' → logprob: -10.213543891906738
    9. 'xyz' → logprob: -10.588543891906738
    10. 'ab' (adapté à ' ab') → logprob: -11.088543891906738

Token 463: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5484809875488281
    2. ' =' → logprob: -1.0484809875488281
    3. '_list' → logprob: -2.798480987548828
    4. '=' → logprob: -4.548480987548828
    5. '=list' → logprob: -9.673480987548828
    6. '=[]' → logprob: -10.048480987548828
    7. 's' → logprob: -10.423480987548828
    8. '=[]
' → logprob: -11.298480987548828
    9. 'List' → logprob: -11.548480987548828
    10. 'pairs' → logprob: -11.673480987548828

Token 464: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269282102584839
    2. ' =' → logprob: -2.1269283294677734
    3. '   ' → logprob: -16.876928329467773
    4. ' ' → logprob: -17.001928329467773
    5. '=[]' → logprob: -17.126928329467773
    6. ',' → logprob: -17.501928329467773
    7. '＝' → logprob: -17.751928329467773
    8. '=int' → logprob: -18.376928329467773
    9. '=n' → logprob: -18.626928329467773
    10. ')' → logprob: -18.876928329467773

Token 465: ' int' (ID: 677)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.2524287700653076
    2. 'int' → logprob: -1.5024287700653076
    3. '[' → logprob: -7.627429008483887
    4. '(int' → logprob: -12.752429008483887
    5. '[Int' → logprob: -12.877429008483887
    6. '[]' → logprob: -13.627429008483887
    7. '[]
' → logprob: -13.752429008483887
    8. ' int' → logprob: -13.752429008483887
    9. ' [' → logprob: -14.002429008483887
    10. '[(' → logprob: -14.377429008483887

Token 466: 'in' (ID: 258)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07853884249925613
    2. 'in' → logprob: -3.2035388946533203
    3. 'ina' → logprob: -4.32853889465332
    4. 'nl' → logprob: -4.82853889465332
    5. 'n' → logprob: -5.07853889465332
    6. 'na' → logprob: -5.57853889465332
    7. 'ln' → logprob: -5.95353889465332
    8. 'inal' → logprob: -7.82853889465332
    9. '(' → logprob: -8.32853889465332
    10. 'In' → logprob: -8.82853889465332

Token 467: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2567058503627777
    2. '(n' → logprob: -1.6317058801651
    3. '()' → logprob: -3.7567057609558105
    4. '(' → logprob: -5.6317057609558105
    5. 'n' → logprob: -6.2567057609558105
    6. 's' → logprob: -7.0067057609558105
    7. '([' → logprob: -8.131706237792969
    8. 'list' → logprob: -8.631706237792969
    9. '[n' → logprob: -9.131706237792969
    10. '([(' → logprob: -9.256706237792969

Token 468: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.125000953674316
    3. 'n' → logprob: -14.875000953674316
    4. '((' → logprob: -18.000001907348633
    5. '(
' → logprob: -19.500001907348633
    6. ' (' → logprob: -20.875001907348633
    7. '
' → logprob: -21.750001907348633
    8. '(int' → logprob: -21.875001907348633
    9. '   ' → logprob: -22.000001907348633
    10. ' n' → logprob: -22.250001907348633

Token 469: ' -' (ID: 533)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.14898009598255157
    2. '-' → logprob: -2.273980140686035
    3. ')' → logprob: -4.398980140686035
    4. '()' → logprob: -4.523980140686035
    5. '()-' → logprob: -5.273980140686035
    6. '())' → logprob: -5.398980140686035
    7. '(' → logprob: -6.273980140686035
    8. ' -' → logprob: -7.273980140686035
    9. 'n' → logprob: -9.773980140686035
    10. '())
' → logprob: -10.898980140686035

Token 470: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '2' → logprob: -16.250003814697266
    4. ')' → logprob: -17.500003814697266
    5. '   ' → logprob: -18.250003814697266
    6. '(' → logprob: -18.750003814697266
    7. '```' → logprob: -20.500003814697266
    8. '
' → logprob: -20.625003814697266
    9. '１' → logprob: -20.625003814697266
    10. '  ' → logprob: -21.000003814697266

Token 471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '１' → logprob: -18.25000762939453
    4. '   ' → logprob: -18.87500762939453
    5. '2' → logprob: -19.87500762939453
    6. '```' → logprob: -19.87500762939453
    7. '۱' → logprob: -19.87500762939453
    8. '  ' → logprob: -20.12500762939453
    9. '
' → logprob: -20.37500762939453
    10. '-' → logprob: -20.87500762939453

Token 472: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.843177233240567e-05
    2. ')
' → logprob: -11.125018119812012
    3. '()' → logprob: -13.125018119812012
    4. '())' → logprob: -13.875018119812012
    5. '   ' → logprob: -15.125018119812012
    6. ' )' → logprob: -15.250018119812012
    7. ')n' → logprob: -16.625019073486328
    8. '))' → logprob: -16.750019073486328
    9. ')
' → logprob: -17.375019073486328
    10. ')

' → logprob: -17.625019073486328

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006736215204000473
    2. 'link' → logprob: -5.1317362785339355
    3. ' link' → logprob: -7.8817362785339355
    4. '	link' → logprob: -8.006735801696777
    5. '
' → logprob: -9.756735801696777
    6. '(link' → logprob: -11.381735801696777
    7. '_link' → logprob: -11.756735801696777
    8. '    
' → logprob: -12.256735801696777
    9. '```' → logprob: -13.131735801696777
    10. '$link' → logprob: -13.131735801696777

Token 474: ' link' (ID: 3461)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' (adapté à ' link') → logprob: -0.0011549857445061207
    2. 'mod' → logprob: -7.376154899597168
    3. '   ' → logprob: -8.001154899597168
    4. ' link' → logprob: -9.626154899597168
    5. 'alink' → logprob: -10.626154899597168
    6. 'll' → logprob: -11.001154899597168
    7. 'links' → logprob: -11.126154899597168
    8. 'graph' → logprob: -11.251154899597168
    9. 'l' → logprob: -11.376154899597168
    10. 'print' → logprob: -12.126154899597168

Token 475: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -6.630610641877865e-06
    2. ' =' → logprob: -12.750006675720215
    3. 'link' → logprob: -13.000006675720215
    4. 'ist' → logprob: -14.125006675720215
    5. '=' → logprob: -14.500006675720215
    6. '   ' → logprob: -16.0000057220459
    7. '_list' → logprob: -17.8750057220459
    8. 'lists' → logprob: -18.1250057220459
    9. ' ' → logprob: -19.2500057220459
    10. ' list' → logprob: -19.6250057220459

Token 476: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326186656951904
    2. '=' → logprob: -1.313261866569519
    3. '＝' → logprob: -16.063261032104492
    4. '=create' → logprob: -18.063261032104492
    5. ' ' → logprob: -18.563261032104492
    6. ' =
' → logprob: -19.313261032104492
    7. ' =)' → logprob: -20.063261032104492
    8. '=
' → logprob: -20.063261032104492
    9. ' =(' → logprob: -20.313261032104492
    10. ',' → logprob: -20.438261032104492

Token 477: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.1269315630197525
    2. ' make' → logprob: -2.126931667327881
    3. '(make' → logprob: -12.626931190490723
    4. '	make' → logprob: -15.376931190490723
    5. '.make' → logprob: -18.62693214416504
    6. '   ' → logprob: -19.25193214416504
    7. '{}' → logprob: -19.62693214416504
    8. '_make' → logprob: -19.75193214416504
    9. ' ' → logprob: -19.75193214416504
    10. 'Make' → logprob: -20.37693214416504

Token 478: '_link' (ID: 16227)
  Prédit: '_link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_link' → logprob: -8.292095299111679e-05
    2. 'link' → logprob: -9.500082969665527
    3. '(link' → logprob: -11.750082969665527
    4. '_' → logprob: -16.00008201599121
    5. ' link' → logprob: -17.75008201599121
    6. '_list' → logprob: -18.87508201599121
    7. '_lin' → logprob: -19.25008201599121
    8. '_links' → logprob: -19.50008201599121
    9. '_LINK' → logprob: -19.87508201599121
    10. '$link' → logprob: -20.00008201599121

Token 479: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00036691725836135447
    2. 'link' → logprob: -8.000367164611816
    3. 'ist' → logprob: -10.375367164611816
    4. '(list' → logprob: -16.7503662109375
    5. '(link' → logprob: -17.0003662109375
    6. '_list' → logprob: -17.0003662109375
    7. ' list' → logprob: -17.5003662109375
    8. 'alist' → logprob: -17.6253662109375
    9. 'ilist' → logprob: -17.8753662109375
    10. 'lists' → logprob: -18.1253662109375

Token 480: '(ab' (ID: 115191)
  Prédit: '(ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: 0.0
    2. '(abs' → logprob: -18.25
    3. ' (' → logprob: -18.375
    4. 'ab' → logprob: -18.5
    5. '(' → logprob: -18.875
    6. '#ab' → logprob: -19.125
    7. '((' → logprob: -19.875
    8. '(
' → logprob: -20.375
    9. '_ab' → logprob: -22.125
    10. '(ob' → logprob: -22.625

Token 481: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.9361264946837764e-07
    2. 'ist' → logprob: -15.75
    3. '(list' → logprob: -19.375
    4. '(ab' → logprob: -19.375
    5. 'List' → logprob: -19.625
    6. 'ab' → logprob: -19.875
    7. '_list' → logprob: -20.25
    8. ' list' → logprob: -20.5
    9. ')' → logprob: -20.875
    10. 'ilist' → logprob: -22.0

Token 482: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006769245956093073
    2. ')
' → logprob: -5.006769180297852
    3. '   ' → logprob: -9.881769180297852
    4. ')
' → logprob: -13.381769180297852
    5. ')

' → logprob: -14.631769180297852
    6. ')n' → logprob: -15.381769180297852
    7. ' )' → logprob: -16.38176918029785
    8. ' ' → logprob: -16.50676918029785
    9. ',' → logprob: -16.63176918029785
    10. '<|end|>' → logprob: -16.88176918029785

Token 483: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045557913836091757
    2. 'distance' → logprob: -8.500455856323242
    3. 'd' → logprob: -9.375455856323242
    4. '    
' → logprob: -9.500455856323242
    5. '
' → logprob: -10.500455856323242
    6. 'result' → logprob: -10.875455856323242
    7. '```' → logprob: -11.125455856323242
    8. 'print' → logprob: -11.375455856323242
    9. 'dist' → logprob: -12.375455856323242
    10. 'length' → logprob: -13.000455856323242

Token 484: ' diameter' (ID: 32514)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.025350596755743027
    2. 'diam' → logprob: -3.900350570678711
    3. 'ans' → logprob: -6.400350570678711
    4. 'result' → logprob: -6.650350570678711
    5. 'res' → logprob: -7.400350570678711
    6. '   ' → logprob: -7.900350570678711
    7. 'distance' → logprob: -8.025350570678711
    8. 'd' → logprob: -8.150350570678711
    9. 'answer' → logprob: -8.900350570678711
    10. 'dist' → logprob: -9.900350570678711

Token 485: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024862384889274836
    2. '=' → logprob: -6.002486228942871
    3. '_' → logprob: -12.252486228942871
    4. '   ' → logprob: -13.252486228942871
    5. '_length' → logprob: -13.377486228942871
    6. ' ' → logprob: -14.002486228942871
    7. ')' → logprob: -14.252486228942871
    8. '_distance' → logprob: -15.752486228942871
    9. ',' → logprob: -16.127487182617188
    10. '	' → logprob: -16.377487182617188

Token 486: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.005233882926404476
    2. ' calc' → logprob: -5.2552337646484375
    3. '(calc' → logprob: -16.755233764648438
    4. 'cal' → logprob: -18.380233764648438
    5. '.calc' → logprob: -19.755233764648438
    6. '   ' → logprob: -19.755233764648438
    7. 'calculate' → logprob: -21.005233764648438
    8. '_calc' → logprob: -21.255233764648438
    9. ' ' → logprob: -22.505233764648438
    10. 'Calc' → logprob: -22.880233764648438

Token 487: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -4.320199877838604e-07
    2. 'tree' → logprob: -15.0
    3. '_t' → logprob: -17.25
    4. '_' → logprob: -18.5
    5. '_TREE' → logprob: -19.0
    6. ' tree' → logprob: -19.375
    7. '_long' → logprob: -19.375
    8. '<Tree' → logprob: -19.625
    9. ' _' → logprob: -20.25
    10. 'tre' → logprob: -20.5

Token 488: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -3.976922744186595e-05
    2. 'diam' → logprob: -10.500040054321289
    3. '_distance' → logprob: -11.750040054321289
    4. '_di' → logprob: -12.625040054321289
    5. 'd' → logprob: -14.625040054321289
    6. '_' → logprob: -15.125040054321289
    7. '_length' → logprob: -17.37504005432129
    8. 'iameter' → logprob: -17.50004005432129
    9. ' diameter' → logprob: -17.75004005432129
    10. 's' → logprob: -18.00004005432129

Token 489: 'iameter' (ID: 157684)
  Prédit: 'iameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -0.0008112939540296793
    2. 'iam' → logprob: -7.3758111000061035
    3. 'am' → logprob: -8.625811576843262
    4. 'imeter' → logprob: -12.750811576843262
    5. 'i' → logprob: -14.125811576843262
    6. 'istance' → logprob: -14.250811576843262
    7. 'er' → logprob: -15.125811576843262
    8. 'iamond' → logprob: -15.500811576843262
    9. 'meter' → logprob: -16.000810623168945
    10. 'diam' → logprob: -16.000810623168945

Token 490: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -11.25001335144043
    3. ' (' → logprob: -15.12501335144043
    4. '(
' → logprob: -18.25001335144043
    5. '(line' → logprob: -19.00001335144043
    6. ' link' → logprob: -19.75001335144043
    7. '(Link' → logprob: -19.75001335144043
    8. '$link' → logprob: -20.00001335144043
    9. '(li' → logprob: -20.62501335144043
    10. 'link' → logprob: -20.75001335144043

Token 491: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.512236498361744e-07
    2. 'ist' → logprob: -14.625000953674316
    3. 'link' → logprob: -18.25
    4. ' list' → logprob: -19.875
    5. '_list' → logprob: -21.0
    6. '   ' → logprob: -21.875
    7. 'ilst' → logprob: -22.0
    8. 'List' → logprob: -22.125
    9. 'set' → logprob: -22.625
    10. 'lists' → logprob: -22.75

Token 492: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037690894678235054
    2. ')' → logprob: -5.7537689208984375
    3. '(link' → logprob: -7.5037689208984375
    4. '   ' → logprob: -10.878768920898438
    5. ')
' → logprob: -11.503768920898438
    6. ' ,' → logprob: -11.878768920898438
    7. '(' → logprob: -13.128768920898438
    8. ',
' → logprob: -14.253768920898438
    9. ',)' → logprob: -14.628768920898438
    10. '  ' → logprob: -14.878768920898438

Token 493: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024792237672954798
    2. 'print' → logprob: -6.002479076385498
    3. '<|end|>' → logprob: -13.627479553222656
    4. '
' → logprob: -14.002479553222656
    5. '```' → logprob: -14.252479553222656
    6. ' print' → logprob: -14.627479553222656
    7. 'return' → logprob: -15.502479553222656
    8. '    
' → logprob: -15.627479553222656
    9. 'mod' → logprob: -16.627479553222656
    10. '	print' → logprob: -17.127479553222656

Token 494: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '   ' → logprob: -18.5
    3. ' print' → logprob: -19.25
    4. 'return' → logprob: -22.875
    5. '
' → logprob: -23.625
    6. 'pr' → logprob: -24.0
    7. 'printf' → logprob: -24.625
    8. 'prin' → logprob: -24.875
    9. '```' → logprob: -25.375
    10. '#print' → logprob: -25.375

Token 495: ' diameter' (ID: 32514)
  Prédit: 'diam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diam' → logprob: -0.6269509792327881
    2. ' diameter' → logprob: -0.8769509792327881
    3. 'n' → logprob: -3.376950979232788
    4. ' n' → logprob: -4.251951217651367
    5. '(n' → logprob: -7.376951217651367
    6. ' ' → logprob: -7.876951217651367
    7. '   ' → logprob: -9.126951217651367
    8. ' (' → logprob: -9.876951217651367
    9. 'di' → logprob: -10.751951217651367
    10. '  ' → logprob: -10.751951217651367

Token 496: ' %' (ID: 1851)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.3502997159957886
    2. ' >=' → logprob: -1.4752997159957886
    3. ' %' → logprob: -1.4752997159957886
    4. '%' → logprob: -1.7252997159957886
    5. '>=' → logprob: -3.350299835205078
    6. '<=' → logprob: -3.850299835205078
    7. ' >' → logprob: -3.975299835205078
    8. ' ==' → logprob: -4.350299835205078
    9. '>' → logprob: -5.100299835205078
    10. '==' → logprob: -5.225299835205078

Token 497: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018193256109952927
    2. ' ' → logprob: -4.018193244934082
    3. '=' → logprob: -11.018193244934082
    4. '4' → logprob: -11.268193244934082
    5. '3' → logprob: -12.518193244934082
    6. '==' → logprob: -12.768193244934082
    7. '26' → logprob: -13.268193244934082
    8. '   ' → logprob: -13.955693244934082
    9. '6' → logprob: -14.018193244934082
    10. '```' → logprob: -14.455693244934082

Token 498: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.375005722045898
    3. '3' → logprob: -13.625005722045898
    4. '4' → logprob: -15.750005722045898
    5. '   ' → logprob: -18.5000057220459
    6. '２' → logprob: -18.8750057220459
    7. '=' → logprob: -19.5000057220459
    8. '  ' → logprob: -19.7500057220459
    9. '```' → logprob: -19.7500057220459
    10. '==' → logprob: -20.3125057220459

Token 499: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3873119652271271
    2. ' ==' → logprob: -1.1373119354248047
    3. '!=' → logprob: -8.387311935424805
    4. ' !=' → logprob: -8.637311935424805
    5. ':' → logprob: -11.137311935424805
    6. '=' → logprob: -11.262311935424805
    7. '==
' → logprob: -12.512311935424805
    8. ' ' → logprob: -13.887311935424805
    9. ' :' → logprob: -14.012311935424805
    10. ' =' → logprob: -14.012311935424805

Token 500: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0233591478317976
    2. ' ' → logprob: -4.023359298706055
    3. '2' → logprob: -5.273359298706055
    4. '1' → logprob: -9.773359298706055
    5. '```' → logprob: -11.898359298706055
    6. '   ' → logprob: -13.398359298706055
    7. '  ' → logprob: -14.023359298706055
    8. '=' → logprob: -14.460859298706055
    9. '	' → logprob: -14.960859298706055
    10. 'o' → logprob: -15.273359298706055

Token 501: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003809833142440766
    2. '2' → logprob: -8.000380516052246
    3. '1' → logprob: -10.500380516052246
    4. ' ' → logprob: -11.500380516052246
    5. '```' → logprob: -11.875380516052246
    6. '

' → logprob: -16.250381469726562
    7. 'o' → logprob: -16.250381469726562
    8. '
' → logprob: -16.312881469726562
    9. '   ' → logprob: -16.437881469726562
    10. '=' → logprob: -16.562881469726562

Token 502: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.586331307888031
    2. ':' → logprob: -0.836331307888031
    3. ' or' → logprob: -4.586331367492676
    4. 'or' → logprob: -9.586331367492676
    5. '   ' → logprob: -9.961331367492676
    6. ' and' → logprob: -11.461331367492676
    7. ':
' → logprob: -12.086331367492676
    8. ' :
' → logprob: -12.586331367492676
    9. ' ' → logprob: -12.836331367492676
    10. '==' → logprob: -13.211331367492676

Token 503: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43113088607788086
    2. '       ' → logprob: -1.0561308860778809
    3. 'print' → logprob: -6.681130886077881
    4. '
' → logprob: -7.431130886077881
    5. ':' → logprob: -8.181131362915039
    6. ':
' → logprob: -9.306131362915039
    7. ' print' → logprob: -9.681131362915039
    8. '    
' → logprob: -10.806131362915039
    9. '\n' → logprob: -10.931131362915039
    10. '           ' → logprob: -11.181131362915039

Token 504: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.023586567491292953
    2. '   ' → logprob: -3.7735865116119385
    3. ' print' → logprob: -8.02358627319336
    4. 'return' → logprob: -12.52358627319336
    5. '	print' → logprob: -12.89858627319336
    6. ' ' → logprob: -13.64858627319336
    7. '       ' → logprob: -13.64858627319336
    8. '    ' → logprob: -14.14858627319336
    9. '```' → logprob: -14.27358627319336
    10. 'printf' → logprob: -14.39858627319336

Token 505: '('' (ID: 706)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.032656025141477585
    2. '"A' → logprob: -4.907656192779541
    3. '"T' → logprob: -5.282656192779541
    4. '"D' → logprob: -5.407656192779541
    5. '"K' → logprob: -5.407656192779541
    6. 'First' → logprob: -5.782656192779541
    7. '"S' → logprob: -6.157656192779541
    8. 'Second' → logprob: -6.407656192779541
    9. '"C' → logprob: -6.532656192779541
    10. '"B' → logprob: -7.532656192779541

Token 506: 'Second' (ID: 17422)
  Prédit: 'Second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Second' → logprob: -0.5350950360298157
    2. 'First' → logprob: -0.9100950360298157
    3. 'T' → logprob: -5.78509521484375
    4. '"' → logprob: -6.03509521484375
    5. ' First' → logprob: -6.53509521484375
    6. 'Alice' → logprob: -6.91009521484375
    7. '1' → logprob: -7.16009521484375
    8. ' Second' → logprob: -7.16009521484375
    9. ''' → logprob: -7.28509521484375
    10. '2' → logprob: -8.53509521484375

Token 507: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.012474807910621166
    2. ')' → logprob: -4.88747501373291
    3. '")' → logprob: -5.76247501373291
    4. '')
' → logprob: -7.38747501373291
    5. ''' → logprob: -7.88747501373291
    6. ' Player' → logprob: -8.13747501373291
    7. '<|end|>' → logprob: -8.88747501373291
    8. '\n' → logprob: -9.13747501373291
    9. 'Player' → logprob: -10.38747501373291
    10. '')

' → logprob: -10.51247501373291

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027467617765069008
    2. 'elif' → logprob: -3.777467727661133
    3. 'else' → logprob: -5.902467727661133
    4. ' elif' → logprob: -7.027467727661133
    5. ' else' → logprob: -7.777467727661133
    6. '<|end|>' → logprob: -9.652467727661133
    7. '	elif' → logprob: -10.527467727661133
    8. '    ' → logprob: -10.527467727661133
    9. '    
' → logprob: -10.777467727661133
    10. ')' → logprob: -11.152467727661133

Token 509: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.2596643567085266
    2. 'else' (adapté à ' else') → logprob: -1.5096642971038818
    3. ' elif' → logprob: -5.509664535522461
    4. ' else' → logprob: -5.634664535522461
    5. 'el' → logprob: -9.509664535522461
    6. ' ' → logprob: -12.134664535522461
    7. '   ' → logprob: -12.759664535522461
    8. 'e' → logprob: -13.384664535522461
    9. '	elif' → logprob: -14.634664535522461
    10. '  ' → logprob: -14.759664535522461

Token 510: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019628196954727173
    2. ':
' → logprob: -4.019628047943115
    3. '       ' → logprob: -7.019628047943115
    4. '   ' → logprob: -7.894628047943115
    5. ' :' → logprob: -9.019628524780273
    6. '    ' → logprob: -10.519628524780273
    7. ' :
' → logprob: -10.644628524780273
    8. 'if' → logprob: -11.519628524780273
    9. ' if' → logprob: -11.644628524780273
    10. '      ' → logprob: -11.644628524780273

Token 511: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009342586621642113
    2. '   ' → logprob: -5.259342670440674
    3. 'print' → logprob: -5.509342670440674
    4. ' print' → logprob: -9.884342193603516
    5. '	print' → logprob: -14.884342193603516
    6. '```' → logprob: -15.759342193603516
    7. ' ' → logprob: -17.009342193603516
    8. '[' → logprob: -17.134342193603516
    9. '	' → logprob: -17.259342193603516
    10. '     ' → logprob: -17.884342193603516

Token 512: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10403567552566528
    2. ' print' → logprob: -2.3540356159210205
    3. '   ' → logprob: -5.7290358543396
    4. '       ' → logprob: -7.4790358543396
    5. '	print' → logprob: -12.854035377502441
    6. ' ' → logprob: -13.604035377502441
    7. '    ' → logprob: -13.604035377502441
    8. '  ' → logprob: -13.729035377502441
    9. '     ' → logprob: -15.604035377502441
    10. '      ' → logprob: -15.854035377502441

Token 513: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.702754474943504e-05
    2. '(' → logprob: -10.37503719329834
    3. '("' → logprob: -12.12503719329834
    4. '(('' → logprob: -15.25003719329834
    5. '()' → logprob: -16.500036239624023
    6. ' ('' → logprob: -17.500036239624023
    7. '(None' → logprob: -17.875036239624023
    8. 'First' → logprob: -18.375036239624023
    9. ''' → logprob: -18.625036239624023
    10. '(S' → logprob: -18.625036239624023

Token 514: 'First' (ID: 7127)
  Prédit: 'First'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.0002043748099822551
    2. ''' → logprob: -8.625204086303711
    3. ' First' → logprob: -11.000204086303711
    4. ' first' → logprob: -13.250204086303711
    5. 'Second' → logprob: -13.625204086303711
    6. 'first' → logprob: -13.750204086303711
    7. 'T' → logprob: -13.750204086303711
    8. 'F' → logprob: -13.875204086303711
    9. '"' → logprob: -14.250204086303711
    10. '_first' → logprob: -15.125204086303711

Token 515: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -3.7385154428193346e-05
    2. ')' → logprob: -10.37503719329834
    3. '')
' → logprob: -12.12503719329834
    4. '")' → logprob: -14.50003719329834
    5. '()' → logprob: -15.50003719329834
    6. ''' → logprob: -18.000038146972656
    7. '')

' → logprob: -18.125038146972656
    8. ' ')' → logprob: -18.125038146972656
    9. '}')' → logprob: -18.125038146972656
    10. '('' → logprob: -19.000038146972656

Token 516: 'if' (ID: 366)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8962027430534363
    2. 'if' → logprob: -1.021202802658081
    3. '<|end|>' → logprob: -1.771202802658081
    4. 'mod' → logprob: -3.021202802658081
    5. '
' → logprob: -6.021202564239502
    6. 'n' → logprob: -6.646202564239502
    7. '%' → logprob: -6.896202564239502
    8. '<|end|>' → logprob: -6.896202564239502
    9. ' if' → logprob: -7.021202564239502
    10. ';' → logprob: -7.146202564239502

Token 517: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.029797818511724472
    2. '__' → logprob: -3.5297977924346924
    3. '_' → logprob: -10.279797554016113
    4. '_name' → logprob: -12.029797554016113
    5. ' _' → logprob: -12.404797554016113
    6. ' ' → logprob: -13.654797554016113
    7. 'name' → logprob: -14.404797554016113
    8. ' ' → logprob: -15.029797554016113
    9. '___' → logprob: -15.154797554016113
    10. '/__' → logprob: -15.404797554016113

Token 518: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07772862911224365
    2. ' ==' → logprob: -2.827728748321533
    3. ' __' → logprob: -4.327728748321533
    4. '==' → logprob: -6.202728748321533
    5. '_' → logprob: -8.452728271484375
    6. '.__' → logprob: -10.077728271484375
    7. '__.__' → logprob: -10.327728271484375
    8. '__.' → logprob: -10.952728271484375
    9. 'name' → logprob: -11.452728271484375
    10. '<|end|>' → logprob: -11.577728271484375

Token 519: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00044008632539771497
    2. '==' → logprob: -7.8754401206970215
    3. ' ==' → logprob: -10.375439643859863
    4. '__.__' → logprob: -10.625439643859863
    5. '_' → logprob: -13.000439643859863
    6. '__.' → logprob: -14.125439643859863
    7. '=="' → logprob: -14.750439643859863
    8. '___' → logprob: -14.875439643859863
    9. '=='' → logprob: -15.750439643859863
    10. ' __' → logprob: -15.750439643859863

Token 520: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07315144687891006
    2. ' ==' → logprob: -2.8231513500213623
    3. '==' → logprob: -4.573151588439941
    4. '=="' → logprob: -7.323151588439941
    5. '=='' → logprob: -9.948151588439941
    6. '_' → logprob: -10.573151588439941
    7. '__.__' → logprob: -10.823151588439941
    8. '___' → logprob: -10.948151588439941
    9. '__":
' → logprob: -11.948151588439941
    10. '.__' → logprob: -12.198151588439941

Token 521: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38689103722572327
    2. '"' → logprob: -1.1368910074234009
    3. ' "__' → logprob: -11.38689136505127
    4. ' '__' → logprob: -12.13689136505127
    5. '__' → logprob: -12.76189136505127
    6. ''"' → logprob: -15.76189136505127
    7. '('__' → logprob: -16.261890411376953
    8. ''name' → logprob: -17.136890411376953
    9. '"user' → logprob: -17.636890411376953
    10. ''post' → logprob: -17.636890411376953

Token 522: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.682846287731081e-05
    2. 'name' → logprob: -9.625066757202148
    3. '__' → logprob: -14.750066757202148
    4. 'ma' → logprob: -15.750066757202148
    5. 'm' → logprob: -16.12506675720215
    6. ' main' → logprob: -17.62506675720215
    7. '_main' → logprob: -18.25006675720215
    8. 'built' → logprob: -19.25006675720215
    9. '(main' → logprob: -19.50006675720215
    10. '-main' → logprob: -19.62506675720215

Token 523: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.014183246530592442
    2. '__' → logprob: -4.264183044433594
    3. '__":
' → logprob: -10.889183044433594
    4. '_' → logprob: -14.639183044433594
    5. '':
' → logprob: -15.264183044433594
    6. '':' → logprob: -16.639183044433594
    7. '__:' → logprob: -16.764183044433594
    8. '__
' → logprob: -16.889183044433594
    9. '__.' → logprob: -17.264183044433594
    10. '___' → logprob: -17.264183044433594

Token 524: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0012899977155029774
    2. ' main' → logprob: -7.3762898445129395
    3. '	main' → logprob: -8.001290321350098
    4. '   ' → logprob: -8.751290321350098
    5. '__' → logprob: -9.001290321350098
    6. '    
' → logprob: -11.001290321350098
    7. '_main' → logprob: -11.251290321350098
    8. '
' → logprob: -12.126290321350098
    9. '(main' → logprob: -12.251290321350098
    10. '```' → logprob: -13.126290321350098

Token 525: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.2664456789934775e-06
    2. ' main' → logprob: -13.750000953674316
    3. '	main' → logprob: -16.500001907348633
    4. '   ' → logprob: -18.500001907348633
    5. 'import' → logprob: -21.125001907348633
    6. '_main' → logprob: -22.250001907348633
    7. '(main' → logprob: -22.375001907348633
    8. '.main' → logprob: -23.750001907348633
    9. '  ' → logprob: -24.000001907348633
    10. 'Main' → logprob: -25.625001907348633

Token 526: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 524
Tokens correctement prédits (1ère position, stricte): 237
Tokens correctement prédits (1ère position, avec adaptation): 266
Tokens correctement prédits (top 10): 452
Précision stricte (1ère position): 45.23%
Précision adaptée (1ère position): 50.76%
Précision (top 10): 86.26%
================================================================================
