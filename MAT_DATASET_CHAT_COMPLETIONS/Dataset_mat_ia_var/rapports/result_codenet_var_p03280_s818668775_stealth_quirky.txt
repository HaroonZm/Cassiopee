================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def _I(): return int(input())
def _IM(): return (int(x) for x in input().split())
def _SM(): return (s for s in input().split())
def _S(): return input()
def _L(): return [int(z) for z in input().split()]
def _LS(): return [str(z) for z in input().split()]

class PersonalUniverse:
    def __init__(self): pass
    def lets_do_this(self):
        α, β = _IM()
        result = (α * β) - ((α + β) - 1)
        print(result)

if __name__==('__main__'):
    PersonalUniverse().lets_do_this()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' _' (ID: 1175)
  → Token d'amorce (pas de prédiction)

Token 2: 'I' (ID: 40)
  → Token d'amorce (pas de prédiction)

Token 3: '():' (ID: 9442)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5130631923675537
    2. '_I' → logprob: -2.0130631923675537
    3. 'n' → logprob: -2.3880631923675537
    4. 'D' → logprob: -4.013063430786133
    5. '_n' → logprob: -4.263063430786133
    6. 'f' → logprob: -4.263063430786133
    7. 'nd' → logprob: -4.388063430786133
    8. 'm' → logprob: -4.638063430786133
    9. '_m' → logprob: -4.638063430786133
    10. '(' → logprob: -4.638063430786133

Token 4: ' return' (ID: 622)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.04984579607844353
    2. '\' → logprob: -3.9248456954956055
    3. '```' → logprob: -4.5498456954956055
    4. '   ' → logprob: -5.1748456954956055
    5. '    
' → logprob: -5.9248456954956055
    6. ' 
' → logprob: -6.4248456954956055
    7. ':' → logprob: -6.9248456954956055
    8. '(' → logprob: -7.0498456954956055
    9. '``' → logprob: -7.0498456954956055
    10. '' → logprob: -7.0498456954956055

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23661614954471588
    2. ' None' → logprob: -2.4866161346435547
    3. ''' → logprob: -3.4866161346435547
    4. '_' → logprob: -3.7366161346435547
    5. 'None' → logprob: -3.7366161346435547
    6. ' True' → logprob: -3.9866161346435547
    7. '"' → logprob: -4.236616134643555
    8. '1' → logprob: -6.111616134643555
    9. 'True' → logprob: -6.111616134643555
    10. ' _' → logprob: -6.236616134643555

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03109259344637394
    2. '.' → logprob: -3.781092643737793
    3. ''' → logprob: -5.156092643737793
    4. '"' → logprob: -7.281092643737793
    5. '40' → logprob: -8.156092643737793
    6. '\(' → logprob: -9.156092643737793
    7. '(
' → logprob: -9.281092643737793
    8. '('' → logprob: -9.406092643737793
    9. '```' → logprob: -9.406092643737793
    10. '46' → logprob: -9.531092643737793

Token 7: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9740040898323059
    2. '())' → logprob: -0.9740040898323059
    3. '(' → logprob: -1.4740040302276611
    4. ')' → logprob: -4.22400426864624
    5. '().' → logprob: -8.224003791809082
    6. '(()' → logprob: -8.224003791809082
    7. '()))' → logprob: -8.974003791809082
    8. ' ())' → logprob: -9.349003791809082
    9. '('' → logprob: -9.474003791809082
    10. '(""))' → logprob: -10.099003791809082

Token 8: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21859827637672424
    2. '*' → logprob: -1.9685982465744019
    3. '\' → logprob: -3.8435983657836914
    4. '+' → logprob: -4.718598365783691
    5. ')' → logprob: -5.468598365783691
    6. '\n' → logprob: -5.468598365783691
    7. '()' → logprob: -5.593598365783691
    8. '(
' → logprob: -5.593598365783691
    9. '
' → logprob: -6.468598365783691
    10. '#' → logprob: -6.593598365783691

Token 9: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016959283500909805
    2. ' _' → logprob: -4.391959190368652
    3. '_I' → logprob: -5.891959190368652
    4. '_S' → logprob: -7.641959190368652
    5. ' ' → logprob: -8.016959190368652
    6. ' space' → logprob: -8.266959190368652
    7. '_s' → logprob: -8.516959190368652
    8. '_space' → logprob: -9.141959190368652
    9. 'space' → logprob: -9.516959190368652
    10. ' main' → logprob: -10.141959190368652

Token 10: 'IM' (ID: 2833)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.8620163798332214
    2. 'S' → logprob: -1.1120164394378662
    3. 'F' → logprob: -1.9870164394378662
    4. 'O' → logprob: -2.987016439437866
    5. 'II' → logprob: -4.612016201019287
    6. 'D' → logprob: -4.737016201019287
    7. 'R' → logprob: -5.237016201019287
    8. 'V' → logprob: -5.362016201019287
    9. 'N' → logprob: -5.612016201019287
    10. 'P' → logprob: -5.737016201019287

Token 11: '():' (ID: 9442)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.252360999584198
    2. '():' → logprob: -1.5023610591888428
    3. 'A' → logprob: -9.002361297607422
    4. '()`' → logprob: -10.502361297607422
    5. '())' → logprob: -10.752361297607422
    6. 'O' → logprob: -10.877361297607422
    7. 'E' → logprob: -10.877361297607422
    8. 'S' → logprob: -11.002361297607422
    9. '()>' → logprob: -11.127361297607422
    10. 'T' → logprob: -11.252361297607422

Token 12: ' return' (ID: 622)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.1331406831741333
    2. ' map' → logprob: -1.1331406831741333
    3. ' return' → logprob: -1.6331406831741333
    4. 'int' → logprob: -2.3831405639648438
    5. 'return' → logprob: -3.7581405639648438
    6. '[int' → logprob: -4.008140563964844
    7. ' input' → logprob: -5.133140563964844
    8. ' list' → logprob: -5.258140563964844
    9. 'map' → logprob: -5.258140563964844
    10. ' ' → logprob: -5.508140563964844

Token 13: ' (' (ID: 350)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.9445518255233765
    2. ' map' → logprob: -1.0695518255233765
    3. 'list' → logprob: -2.194551944732666
    4. 'int' → logprob: -2.444551944732666
    5. ' list' → logprob: -3.569551944732666
    6. '[int' → logprob: -3.819551944732666
    7. 'input' → logprob: -4.569551944732666
    8. ' int' → logprob: -5.944551944732666
    9. ' input' → logprob: -6.194551944732666
    10. '[input' → logprob: -6.694551944732666

Token 14: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03082377091050148
    2. 'map' → logprob: -3.5308237075805664
    3. 'i' → logprob: -7.280823707580566
    4. ' int' → logprob: -9.280823707580566
    5. ' map' → logprob: -9.280823707580566
    6. 'input' → logprob: -9.905823707580566
    7. '[int' → logprob: -10.280823707580566
    8. 'lambda' → logprob: -10.780823707580566
    9. 'm' → logprob: -10.905823707580566
    10. ')' → logprob: -10.905823707580566

Token 15: '(x' (ID: 4061)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12738338112831116
    2. ',' → logprob: -2.8773834705352783
    3. ',input' → logprob: -2.8773834705352783
    4. 'input' → logprob: -5.377383232116699
    5. '(x' → logprob: -6.752383232116699
    6. '(' → logprob: -8.2523832321167
    7. ')(' → logprob: -8.6273832321167
    8. '(i' → logprob: -8.7523832321167
    9. ')' → logprob: -8.8773832321167
    10. ' input' → logprob: -9.3773832321167

Token 16: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019340807921253145
    2. '(x' → logprob: -8.87519359588623
    3. ' )' → logprob: -11.25019359588623
    4. 'input' → logprob: -11.62519359588623
    5. 'for' → logprob: -11.75019359588623
    6. 'x' → logprob: -11.75019359588623
    7. '())' → logprob: -12.62519359588623
    8. '))' → logprob: -12.87519359588623
    9. ' for' → logprob: -13.12519359588623
    10. 'in' → logprob: -13.37519359588623

Token 17: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6438072323799133
    2. 'for' → logprob: -1.2688071727752686
    3. ' for' → logprob: -1.7688071727752686
    4. ')' → logprob: -3.8938071727752686
    5. 'x' → logprob: -7.268807411193848
    6. '(input' → logprob: -7.518807411193848
    7. '(i' → logprob: -8.018807411193848
    8. 'input' → logprob: -8.393807411193848
    9. '(' → logprob: -8.518807411193848
    10. ',' → logprob: -8.768807411193848

Token 18: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.09521652013063431
    2. ' x' → logprob: -2.4702165126800537
    3. 'input' → logprob: -5.220216751098633
    4. 'x' → logprob: -7.845216751098633
    5. ' ' → logprob: -8.220216751098633
    6. '_' → logprob: -9.720216751098633
    7. ' _' → logprob: -10.345216751098633
    8. '<|end|>' → logprob: -10.470216751098633
    9. '=input' → logprob: -10.845216751098633
    10. '_input' → logprob: -11.220216751098633

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8176544904708862
    2. ' input' → logprob: -0.9426544904708862
    3. '<|end|>' → logprob: -2.567654609680176
    4. ' ' → logprob: -3.442654609680176
    5. 'input' → logprob: -3.567654609680176
    6. '=input' → logprob: -4.317654609680176
    7. '_' → logprob: -5.442654609680176
    8. '(input' → logprob: -5.567654609680176
    9. '<|end|>' → logprob: -5.567654609680176
    10. ')' → logprob: -6.067654609680176

Token 20: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3869105577468872
    2. 'input' → logprob: -1.1369105577468872
    3. '_input' → logprob: -11.386910438537598
    4. '_' → logprob: -11.636910438537598
    5. ' ' → logprob: -12.261910438537598
    6. '=input' → logprob: -12.261910438537598
    7. '(input' → logprob: -12.636910438537598
    8. ')' → logprob: -12.886910438537598
    9. '	input' → logprob: -14.136910438537598
    10. ' _' → logprob: -14.761910438537598

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003674067324027419
    2. '()' → logprob: -5.628674030303955
    3. '())' → logprob: -10.253674507141113
    4. '(' → logprob: -10.628674507141113
    5. ' ().' → logprob: -12.003674507141113
    6. '('' → logprob: -12.878674507141113
    7. ')' → logprob: -13.253674507141113
    8. '().'' → logprob: -13.503674507141113
    9. 'split' → logprob: -14.503674507141113
    10. ' ()' → logprob: -14.753674507141113

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002938833087682724
    2. 'strip' → logprob: -6.252938747406006
    3. ' split' → logprob: -7.002938747406006
    4. 'rstrip' → logprob: -9.377939224243164
    5. 'spl' → logprob: -12.252939224243164
    6. ')' → logprob: -12.502939224243164
    7. '(split' → logprob: -12.502939224243164
    8. ' ' → logprob: -13.127939224243164
    9. ' strip' → logprob: -13.877939224243164
    10. 's' → logprob: -15.002939224243164

Token 23: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0013603554107248783
    2. '()' → logprob: -6.6263604164123535
    3. ')' → logprob: -11.251359939575195
    4. '()))' → logprob: -11.501359939575195
    5. ' ())' → logprob: -11.876359939575195
    6. '())
' → logprob: -13.376359939575195
    7. '()]' → logprob: -14.626359939575195
    8. '();)' → logprob: -14.626359939575195
    9. '()),' → logprob: -14.751359939575195
    10. '(),' → logprob: -14.876359939575195

Token 24: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.568754255771637
    2. 'd' → logprob: -0.943754255771637
    3. '
' → logprob: -3.318754196166992
    4. '\' → logprob: -6.068754196166992
    5. 'D' → logprob: -6.693754196166992
    6. '```' → logprob: -7.193754196166992
    7. '' → logprob: -7.443754196166992
    8. 'n' → logprob: -7.568754196166992
    9. '#' → logprob: -7.568754196166992
    10. '\n' → logprob: -7.693754196166992

Token 25: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0694396495819092
    2. '_S' → logprob: -1.6944396495819092
    3. ' _' → logprob: -2.319439649581909
    4. '_I' → logprob: -2.444439649581909
    5. '_M' → logprob: -2.694439649581909
    6. '_L' → logprob: -3.569439649581909
    7. '_MI' → logprob: -3.819439649581909
    8. '_input' → logprob: -4.069439888000488
    9. '_MS' → logprob: -4.319439888000488
    10. '_SM' → logprob: -4.569439888000488

Token 26: 'SM' (ID: 12580)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.6083768606185913
    2. 'IS' → logprob: -1.6083768606185913
    3. 'L' → logprob: -1.9833768606185913
    4. 'LI' → logprob: -2.108376979827881
    5. 'IR' → logprob: -2.108376979827881
    6. 'M' → logprob: -3.108376979827881
    7. 'IN' → logprob: -3.608376979827881
    8. 'IRM' → logprob: -3.608376979827881
    9. 'IA' → logprob: -3.858376979827881
    10. 'S' → logprob: -4.733376979827881

Token 27: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002814775798469782
    2. '()' → logprob: -8.25028133392334
    3. ' ():' → logprob: -11.37528133392334
    4. '():
' → logprob: -12.37528133392334
    5. 'ethod' → logprob: -13.62528133392334
    6. '():
' → logprob: -14.37528133392334
    7. '()>' → logprob: -14.50028133392334
    8. 'A' → logprob: -14.87528133392334
    9. 'atrix' → logprob: -15.00028133392334
    10. '().' → logprob: -15.25028133392334

Token 28: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.002818312495946884
    2. 'return' → logprob: -5.8778181076049805
    3. ' input' → logprob: -11.87781810760498
    4. ' def' → logprob: -13.00281810760498
    5. ' str' → logprob: -13.62781810760498
    6. '   ' → logprob: -14.00281810760498
    7. ' ' → logprob: -14.25281810760498
    8. 'def' → logprob: -14.87781810760498
    9. ' pass' → logprob: -15.62781810760498
    10. ' s' → logprob: -15.62781810760498

Token 29: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6419844031333923
    2. ' input' → logprob: -0.7669844031333923
    3. '[input' → logprob: -4.766984462738037
    4. '(input' → logprob: -7.766984462738037
    5. 'list' → logprob: -8.766983985900879
    6. ' [' → logprob: -9.391983985900879
    7. ' list' → logprob: -9.516983985900879
    8. '[' → logprob: -10.641983985900879
    9. ' ' → logprob: -11.266983985900879
    10. 'str' → logprob: -11.266983985900879

Token 30: 's' (ID: 82)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6781238317489624
    2. 'x' → logprob: -1.0531238317489624
    3. 's' → logprob: -2.053123950958252
    4. 'str' → logprob: -4.303123950958252
    5. 'int' → logprob: -6.803123950958252
    6. ' input' → logprob: -7.678123950958252
    7. 'string' → logprob: -10.428123474121094
    8. ' x' → logprob: -10.553123474121094
    9. 'S' → logprob: -11.053123474121094
    10. 'list' → logprob: -11.428123474121094

Token 31: ' for' (ID: 395)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.02752700075507164
    2. ' for' → logprob: -4.40252685546875
    3. '.strip' → logprob: -4.90252685546875
    4. 'tring' → logprob: -6.77752685546875
    5. 'trip' → logprob: -6.77752685546875
    6. '()' → logprob: -6.90252685546875
    7. '(x' → logprob: -7.15252685546875
    8. '=input' → logprob: -7.27752685546875
    9. '(input' → logprob: -7.27752685546875
    10. 'input' → logprob: -7.65252685546875

Token 32: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06591656804084778
    2. 's' → logprob: -2.8159165382385254
    3. ' x' → logprob: -5.940916538238525
    4. '_' → logprob: -7.690916538238525
    5. ' input' → logprob: -8.440917015075684
    6. 'x' → logprob: -8.565917015075684
    7. '_s' → logprob: -9.065917015075684
    8. 'input' → logprob: -9.190917015075684
    9. '	s' → logprob: -9.440917015075684
    10. ' ' → logprob: -9.690917015075684

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0030200183391571045
    2. 'in' → logprob: -6.3780198097229
    3. 's' → logprob: -7.7530198097229
    4. '<|end|>' → logprob: -7.7530198097229
    5. ' ' → logprob: -7.8780198097229
    6. '<|end|>' → logprob: -10.378020286560059
    7. '  ' → logprob: -11.378020286560059
    8. ' s' → logprob: -11.503020286560059
    9. '_' → logprob: -12.003020286560059
    10. 'input' → logprob: -12.128020286560059

Token 34: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5232012867927551
    2. 'input' → logprob: -0.8982012867927551
    3. '(input' → logprob: -10.648200988769531
    4. ' ' → logprob: -10.898200988769531
    5. '[input' → logprob: -11.898200988769531
    6. '=input' → logprob: -12.023200988769531
    7. '	input' → logprob: -12.273200988769531
    8. '<input' → logprob: -12.960700988769531
    9. '  ' → logprob: -13.335700988769531
    10. ',input' → logprob: -13.398200988769531

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010950337309623137
    2. '()' → logprob: -9.125109672546387
    3. ' ().' → logprob: -15.500109672546387
    4. '.split' → logprob: -15.750109672546387
    5. '(' → logprob: -16.12510871887207
    6. '.' → logprob: -16.50010871887207
    7. ' .' → logprob: -17.25010871887207
    8. '().'' → logprob: -17.75010871887207
    9. '('').' → logprob: -19.12510871887207
    10. '())' → logprob: -19.37510871887207

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003643058007583022
    2. 'strip' → logprob: -8.000364303588867
    3. ' split' → logprob: -10.875364303588867
    4. 'rstrip' → logprob: -12.125364303588867
    5. 'spl' → logprob: -12.625364303588867
    6. ')' → logprob: -14.750364303588867
    7. 's' → logprob: -14.875364303588867
    8. '(split' → logprob: -16.125364303588867
    9. 'plit' → logprob: -16.250364303588867
    10. ' ' → logprob: -16.375364303588867

Token 37: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008754727430641651
    2. '()' → logprob: -4.758754730224609
    3. ')' → logprob: -9.00875473022461
    4. ' ())' → logprob: -11.38375473022461
    5. '();)' → logprob: -12.88375473022461
    6. '())
' → logprob: -13.38375473022461
    7. '()]' → logprob: -14.38375473022461
    8. '()))' → logprob: -14.88375473022461
    9. '()),' → logprob: -15.63375473022461
    10. '());' → logprob: -15.63375473022461

Token 38: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24354811012744904
    2. 'd' → logprob: -1.7435481548309326
    3. '
' → logprob: -3.4935481548309326
    4. '#' → logprob: -6.2435479164123535
    5. 'n' → logprob: -6.7435479164123535
    6. '\' → logprob: -6.7435479164123535
    7. ' 
' → logprob: -6.9935479164123535
    8. '\n' → logprob: -6.9935479164123535
    9. '```' → logprob: -7.3685479164123535
    10. '' → logprob: -7.3685479164123535

Token 39: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7723138332366943
    2. '_' → logprob: -1.1473138332366943
    3. '_S' → logprob: -2.3973138332366943
    4. '_I' → logprob: -2.3973138332366943
    5. ' main' → logprob: -4.897314071655273
    6. '_main' → logprob: -5.272314071655273
    7. '_A' → logprob: -6.022314071655273
    8. '_SM' → logprob: -6.397314071655273
    9. '_M' → logprob: -6.522314071655273
    10. ' ' → logprob: -6.647314071655273

Token 40: 'S' (ID: 50)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.9160011410713196
    2. 'L' → logprob: -1.7910010814666748
    3. 'S' → logprob: -1.7910010814666748
    4. 'M' → logprob: -2.916001081466675
    5. 'F' → logprob: -3.291001081466675
    6. 'LM' → logprob: -3.291001081466675
    7. 'A' → logprob: -3.416001081466675
    8. 'R' → logprob: -4.166001319885254
    9. 'IN' → logprob: -4.291001319885254
    10. 'MS' → logprob: -4.791001319885254

Token 41: '():' (ID: 9442)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -7.946405094116926e-05
    2. '():' → logprob: -10.375079154968262
    3. '()' → logprob: -11.125079154968262
    4. '_' → logprob: -11.625079154968262
    5. '(' → logprob: -12.000079154968262
    6. 'Q' → logprob: -13.000079154968262
    7. '```' → logprob: -13.000079154968262
    8. 'T' → logprob: -13.125079154968262
    9. '(M' → logprob: -13.500079154968262
    10. ' M' → logprob: -13.750079154968262

Token 42: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.014244012534618378
    2. 'return' → logprob: -4.264244079589844
    3. ' input' → logprob: -9.764244079589844
    4. ' ' → logprob: -11.264244079589844
    5. ' retur' → logprob: -12.139244079589844
    6. 'input' → logprob: -13.639244079589844
    7. ' r' → logprob: -13.764244079589844
    8. ' ' → logprob: -13.889244079589844
    9. ' ret' → logprob: -14.514244079589844
    10. 'ret' → logprob: -15.014244079589844

Token 43: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04303230345249176
    2. 'input' → logprob: -3.16803240776062
    3. ' ' → logprob: -11.1680326461792
    4. 's' → logprob: -11.4180326461792
    5. ' ' → logprob: -12.7930326461792
    6. ' s' → logprob: -13.0430326461792
    7. ' str' → logprob: -13.7930326461792
    8. ' in' → logprob: -14.5430326461792
    9. 'str' → logprob: -15.0430326461792
    10. ' i' → logprob: -15.2930326461792

Token 44: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00020771251001860946
    2. '(' → logprob: -8.625207901000977
    3. ' ()' → logprob: -10.875207901000977
    4. '()
' → logprob: -12.750207901000977
    5. '().' → logprob: -12.750207901000977
    6. '()`' → logprob: -14.000207901000977
    7. '()

' → logprob: -14.375207901000977
    8. '()\' → logprob: -14.625207901000977
    9. '`()' → logprob: -15.125207901000977
    10. '()(' → logprob: -15.375207901000977

Token 45: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.135769009590149
    2. '\n' → logprob: -1.885769009590149
    3. 'def' → logprob: -2.3857688903808594
    4. 'd' → logprob: -2.7607688903808594
    5. '' → logprob: -2.8857688903808594
    6. '

' → logprob: -3.0107688903808594
    7. '#' → logprob: -3.0107688903808594
    8. '(' → logprob: -3.2607688903808594
    9. 'x' → logprob: -3.3857688903808594
    10. 'a' → logprob: -3.6357688903808594

Token 46: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03156325966119766
    2. ' _' → logprob: -3.7815632820129395
    3. '_I' → logprob: -5.1565632820129395
    4. ' ' → logprob: -7.0315632820129395
    5. '_S' → logprob: -7.4065632820129395
    6. '__' → logprob: -8.656562805175781
    7. '_T' → logprob: -8.906562805175781
    8. ' main' → logprob: -9.031562805175781
    9. '  ' → logprob: -9.656562805175781
    10. '_main' → logprob: -9.656562805175781

Token 47: 'L' (ID: 43)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.333903431892395
    2. 'L' → logprob: -1.833903431892395
    3. 'N' → logprob: -1.958903431892395
    4. 'F' → logprob: -1.958903431892395
    5. 'R' → logprob: -2.4589033126831055
    6. 'P' → logprob: -3.2089033126831055
    7. 'M' → logprob: -3.2089033126831055
    8. 'A' → logprob: -3.3339033126831055
    9. 'D' → logprob: -3.4589033126831055
    10. 'T' → logprob: -3.7089033126831055

Token 48: '():' (ID: 9442)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23835116624832153
    2. '():' → logprob: -1.6133511066436768
    3. 'ist' → logprob: -5.238351345062256
    4. 'IST' → logprob: -6.363351345062256
    5. 'ambda' → logprob: -6.863351345062256
    6. ' ()' → logprob: -7.238351345062256
    7. '())' → logprob: -7.363351345062256
    8. '=[]' → logprob: -7.488351345062256
    9. '[]' → logprob: -7.613351345062256
    10. 'M' → logprob: -8.113350868225098

Token 49: ' return' (ID: 622)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.7479297518730164
    2. ' list' → logprob: -0.9979297518730164
    3. '[]' → logprob: -2.122929811477661
    4. 'list' → logprob: -3.497929811477661
    5. ' return' → logprob: -5.622929573059082
    6. ' [' → logprob: -6.372929573059082
    7. 'return' → logprob: -6.747929573059082
    8. '[int' → logprob: -7.622929573059082
    9. '[' → logprob: -8.122929573059082
    10. ' input' → logprob: -8.247929573059082

Token 50: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6083971858024597
    2. '[]' → logprob: -1.2333972454071045
    3. ' list' → logprob: -2.2333972454071045
    4. '[int' → logprob: -3.4833972454071045
    5. ' []' → logprob: -4.358397006988525
    6. '[list' → logprob: -4.483397006988525
    7. '[' → logprob: -6.733397006988525
    8. '[input' → logprob: -7.608397006988525
    9. ' [' → logprob: -7.733397006988525
    10. '[]}' → logprob: -9.483397483825684

Token 51: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001093307975679636
    2. 's' → logprob: -8.251092910766602
    3. '_' → logprob: -8.626092910766602
    4. ']int' → logprob: -8.751092910766602
    5. 'i' → logprob: -9.001092910766602
    6. ']' → logprob: -9.001092910766602
    7. 'input' → logprob: -9.751092910766602
    8. '(int' → logprob: -10.001092910766602
    9. '_]' → logprob: -10.001092910766602
    10. '_s' → logprob: -11.251092910766602

Token 52: '(z' (ID: 27674)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06402026861906052
    2. '(' → logprob: -2.8140201568603516
    3. '(input' → logprob: -7.189020156860352
    4. '(s' → logprob: -7.189020156860352
    5. '(i' → logprob: -8.439020156860352
    6. ']' → logprob: -9.189020156860352
    7. '()]' → logprob: -9.439020156860352
    8. '(int' → logprob: -10.564020156860352
    9. '(
' → logprob: -10.564020156860352
    10. '](' → logprob: -10.689020156860352

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003005042439326644
    2. '(x' → logprob: -6.378005027770996
    3. ' for' → logprob: -7.253005027770996
    4. ')]' → logprob: -8.128005027770996
    5. '(i' → logprob: -9.253005027770996
    6. '()' → logprob: -10.503005027770996
    7. 'or' → logprob: -10.503005027770996
    8. ']' → logprob: -10.753005027770996
    9. ')i' → logprob: -10.753005027770996
    10. 'for' → logprob: -11.128005027770996

Token 54: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.10709520429372787
    2. '(i' → logprob: -3.482095241546631
    3. '(' → logprob: -3.982095241546631
    4. '(s' → logprob: -4.232095241546631
    5. '(input' → logprob: -4.357095241546631
    6. ']' → logprob: -4.732095241546631
    7. ' for' → logprob: -5.232095241546631
    8. 's' → logprob: -5.732095241546631
    9. ')' → logprob: -5.982095241546631
    10. 'for' → logprob: -6.857095241546631

Token 55: ' z' (ID: 579)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04085661098361015
    2. ' _' → logprob: -3.9158565998077393
    3. ' ' → logprob: -4.790856838226318
    4. ' z' → logprob: -4.790856838226318
    5. ' in' → logprob: -6.540856838226318
    6. '_' → logprob: -7.165856838226318
    7. '  ' → logprob: -7.415856838226318
    8. ' s' → logprob: -8.29085636138916
    9. 'input' → logprob: -8.29085636138916
    10. ' x' → logprob: -10.16585636138916

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1433645337820053
    2. ' input' → logprob: -2.518364429473877
    3. ' ' → logprob: -3.768364429473877
    4. 'in' → logprob: -4.518364429473877
    5. '_' → logprob: -4.893364429473877
    6. 'input' → logprob: -5.018364429473877
    7. '  ' → logprob: -6.018364429473877
    8. ' _' → logprob: -6.268364429473877
    9. '_input' → logprob: -9.143364906311035
    10. 's' → logprob: -9.393364906311035

Token 57: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.09951332956552505
    2. 'input' → logprob: -2.474513292312622
    3. '_S' → logprob: -5.224513530731201
    4. '_' → logprob: -5.599513530731201
    5. ' _' → logprob: -7.224513530731201
    6. ' ' → logprob: -7.724513530731201
    7. 'S' → logprob: -8.724513053894043
    8. ' S' → logprob: -9.849513053894043
    9. '_s' → logprob: -10.724513053894043
    10. 'I' → logprob: -11.974513053894043

Token 58: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.08486652374267578
    2. '().' → logprob: -3.084866523742676
    3. '()' → logprob: -3.334866523742676
    4. '()][' → logprob: -13.209866523742676
    5. '()].' → logprob: -13.334866523742676
    6. '()>' → logprob: -13.584866523742676
    7. '())' → logprob: -13.959866523742676
    8. ' ()' → logprob: -14.084866523742676
    9. '(' → logprob: -14.084866523742676
    10. '()],' → logprob: -14.209866523742676

Token 59: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.7385154428193346e-05
    2. 'strip' → logprob: -10.25003719329834
    3. ' split' → logprob: -13.87503719329834
    4. 'rstrip' → logprob: -14.25003719329834
    5. 'spl' → logprob: -15.00003719329834
    6. '.split' → logprob: -18.250038146972656
    7. 's' → logprob: -18.750038146972656
    8. '(split' → logprob: -19.375038146972656
    9. 'plit' → logprob: -19.750038146972656
    10. '_split' → logprob: -20.375038146972656

Token 60: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -1.9027791495318525e-05
    2. '()' → logprob: -11.000019073486328
    3. ']' → logprob: -13.750019073486328
    4. ']()' → logprob: -14.250019073486328
    5. '(' → logprob: -14.500019073486328
    6. '()]
' → logprob: -16.750019073486328
    7. '())' → logprob: -17.375019073486328
    8. '()][' → logprob: -17.500019073486328
    9. '()],' → logprob: -17.625019073486328
    10. ' ()' → logprob: -18.000019073486328

Token 61: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5382505655288696
    2. '#' → logprob: -1.9132505655288696
    3. 'def' → logprob: -2.16325044631958
    4. 'd' → logprob: -2.66325044631958
    5. '' → logprob: -3.91325044631958
    6. '

' → logprob: -4.03825044631958
    7. '\' → logprob: -4.66325044631958
    8. '[' → logprob: -5.03825044631958
    9. '```' → logprob: -5.16325044631958
    10. '\n' → logprob: -5.28825044631958

Token 62: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5154302716255188
    2. ' _' → logprob: -1.015430212020874
    3. '_I' → logprob: -3.890430212020874
    4. '_S' → logprob: -4.265430450439453
    5. '_L' → logprob: -5.640430450439453
    6. ' I' → logprob: -8.015430450439453
    7. '_N' → logprob: -8.390430450439453
    8. ' ' → logprob: -8.390430450439453
    9. '_P' → logprob: -8.640430450439453
    10. '_A' → logprob: -8.890430450439453

Token 63: 'LS' (ID: 10172)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.39001455903053284
    2. 'L' → logprob: -2.3900146484375
    3. 'I' → logprob: -2.3900146484375
    4. 'F' → logprob: -2.7650146484375
    5. 'IL' → logprob: -4.3900146484375
    6. 'LS' → logprob: -4.6400146484375
    7. 'LI' → logprob: -4.7650146484375
    8. 'D' → logprob: -5.0150146484375
    9. 'LL' → logprob: -5.0150146484375
    10. 'LM' → logprob: -5.3900146484375

Token 64: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00035691517405211926
    2. '()' → logprob: -8.000356674194336
    3. ' ():' → logprob: -11.375356674194336
    4. '()>' → logprob: -12.375356674194336
    5. '():
' → logprob: -13.500356674194336
    6. ']:' → logprob: -14.000356674194336
    7. '):' → logprob: -14.250356674194336
    8. '()]' → logprob: -14.625356674194336
    9. ' ()' → logprob: -14.875356674194336
    10. '();' → logprob: -15.375356674194336

Token 65: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.003939718008041382
    2. ' [' → logprob: -6.253939628601074
    3. ' []' → logprob: -6.753939628601074
    4. ' lambda' → logprob: -7.753939628601074
    5. ' ' → logprob: -8.878939628601074
    6. 'return' → logprob: -9.003939628601074
    7. '    ' → logprob: -10.003939628601074
    8. ' def' → logprob: -10.503939628601074
    9. '[]' → logprob: -10.628939628601074
    10. '[' → logprob: -11.128939628601074

Token 66: ' [' (ID: 723)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.22904235124588013
    2. '[input' → logprob: -2.6040422916412354
    3. 'input' → logprob: -2.7290422916412354
    4. ' input' → logprob: -3.4790422916412354
    5. ' [' → logprob: -3.4790422916412354
    6. 's' → logprob: -6.1040425300598145
    7. 'list' → logprob: -7.2290425300598145
    8. '[x' → logprob: -8.854042053222656
    9. ' s' → logprob: -8.854042053222656
    10. ' list' → logprob: -9.104042053222656

Token 67: 'str' (ID: 689)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0043761245906353
    2. 'str' → logprob: -5.87937593460083
    3. 'int' → logprob: -7.12937593460083
    4. 'z' → logprob: -7.37937593460083
    5. 'x' → logprob: -10.004376411437988
    6. 'input' → logprob: -10.254376411437988
    7. 'list' → logprob: -10.754376411437988
    8. '_s' → logprob: -10.879376411437988
    9. ' s' → logprob: -11.879376411437988
    10. '```' → logprob: -12.879376411437988

Token 68: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.00447616633027792
    2. '(x' → logprob: -5.754476070404053
    3. '(s' → logprob: -6.754476070404053
    4. '(i' → logprob: -9.004476547241211
    5. 'z' → logprob: -12.504476547241211
    6. '(w' → logprob: -12.879476547241211
    7. '(' → logprob: -13.754476547241211
    8. '	z' → logprob: -14.254476547241211
    9. ' (' → logprob: -15.129476547241211
    10. '(input' → logprob: -15.754476547241211

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01135243196040392
    2. '(z' → logprob: -4.6363525390625
    3. '(x' → logprob: -6.5113525390625
    4. ' )' → logprob: -10.2613525390625
    5. '(s' → logprob: -10.2613525390625
    6. '(i' → logprob: -10.7613525390625
    7. 'z' → logprob: -12.0113525390625
    8. '_)' → logprob: -13.3863525390625
    9. '(input' → logprob: -13.6363525390625
    10. 'for' → logprob: -14.1363525390625

Token 70: ' for' (ID: 395)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.1449238657951355
    2. '(x' → logprob: -2.6449239253997803
    3. '(s' → logprob: -3.1449239253997803
    4. ' for' → logprob: -4.019923686981201
    5. 'for' → logprob: -6.019923686981201
    6. 'z' → logprob: -8.76992416381836
    7. ')' → logprob: -9.14492416381836
    8. '(i' → logprob: -9.51992416381836
    9. ' (' → logprob: -10.39492416381836
    10. 's' → logprob: -10.76992416381836

Token 71: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.04355834051966667
    2. 'z' → logprob: -3.168558359146118
    3. '(z' → logprob: -8.418558120727539
    4. ' s' → logprob: -8.918558120727539
    5. 's' → logprob: -9.668558120727539
    6. ' x' → logprob: -10.043558120727539
    7. '	z' → logprob: -10.293558120727539
    8. '_' → logprob: -11.043558120727539
    9. ' ' → logprob: -11.293558120727539
    10. '(s' → logprob: -11.418558120727539

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1634591668844223
    2. 'in' → logprob: -1.9134591817855835
    3. ' ' → logprob: -6.663459300994873
    4. '<|end|>' → logprob: -6.788459300994873
    5. '  ' → logprob: -8.663458824157715
    6. 's' → logprob: -8.663458824157715
    7. '(' → logprob: -8.913458824157715
    8. '_' → logprob: -9.038458824157715
    9. '	in' → logprob: -10.038458824157715
    10. '<|end|>' → logprob: -10.288458824157715

Token 73: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141790807247162
    2. ' input' → logprob: -1.7014179229736328
    3. '(input' → logprob: -12.576417922973633
    4. '_input' → logprob: -13.951417922973633
    5. '	input' → logprob: -16.576417922973633
    6. ' ' → logprob: -16.826417922973633
    7. 'output' → logprob: -17.576417922973633
    8. '<input' → logprob: -17.826417922973633
    9. '_' → logprob: -18.076417922973633
    10. '[input' → logprob: -18.201417922973633

Token 74: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00034177995985373855
    2. '()' → logprob: -8.000341415405273
    3. '()]' → logprob: -12.750341415405273
    4. ' ().' → logprob: -13.000341415405273
    5. '()].' → logprob: -14.500341415405273
    6. '(' → logprob: -15.625341415405273
    7. '().'' → logprob: -15.750341415405273
    8. '.split' → logprob: -16.000341415405273
    9. '.' → logprob: -16.250341415405273
    10. '()[' → logprob: -16.625341415405273

Token 75: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.054500666621607e-06
    2. 'spl' → logprob: -13.50000286102295
    3. 'strip' → logprob: -13.62500286102295
    4. ' split' → logprob: -14.87500286102295
    5. 's' → logprob: -16.500003814697266
    6. 'rstrip' → logprob: -17.500003814697266
    7. 'plit' → logprob: -18.125003814697266
    8. '.split' → logprob: -18.500003814697266
    9. '(split' → logprob: -18.625003814697266
    10. '```' → logprob: -18.750003814697266

Token 76: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00032271104282699525
    2. '()' → logprob: -8.125322341918945
    3. '(' → logprob: -10.875322341918945
    4. ']' → logprob: -12.750322341918945
    5. '())' → logprob: -13.375322341918945
    6. ')]' → logprob: -14.000322341918945
    7. '()][' → logprob: -14.125322341918945
    8. '()]
' → logprob: -14.250322341918945
    9. ']()' → logprob: -14.500322341918945
    10. '()],' → logprob: -15.125322341918945

Token 77: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7997860908508301
    2. '()]' → logprob: -0.7997860908508301
    3. ')]' → logprob: -2.29978609085083
    4. ']()' → logprob: -7.54978609085083
    5. '()' → logprob: -8.424785614013672
    6. '])' → logprob: -10.049785614013672
    7. '']' → logprob: -10.549785614013672
    8. ')' → logprob: -10.674785614013672
    9. '`]' → logprob: -11.049785614013672
    10. '(' → logprob: -12.799785614013672

Token 78: 'class' (ID: 1444)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06501125544309616
    2. '#' → logprob: -3.5650112628936768
    3. 'a' → logprob: -4.565011024475098
    4. 'n' → logprob: -4.565011024475098
    5. 'def' → logprob: -4.940011024475098
    6. '_' → logprob: -5.565011024475098
    7. '(' → logprob: -7.315011024475098
    8. 'D' → logprob: -7.565011024475098
    9. 'r' → logprob: -7.815011024475098
    10. 'i' → logprob: -8.315011024475098

Token 79: ' Personal' (ID: 19086)
  Prédit: ' My'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' My' → logprob: -0.6224293112754822
    2. ' Solution' → logprob: -0.8724293112754822
    3. ' ' → logprob: -3.747429370880127
    4. ' Solver' → logprob: -4.497429370880127
    5. ' Test' → logprob: -5.747429370880127
    6. ' Node' → logprob: -6.997429370880127
    7. ' Space' → logprob: -6.997429370880127
    8. ' A' → logprob: -7.247429370880127
    9. ' Trie' → logprob: -7.372429370880127
    10. ' Parser' → logprob: -7.372429370880127

Token 80: 'Universe' (ID: 174209)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6688393950462341
    2. 'Data' → logprob: -1.168839454650879
    3. '(' → logprob: -2.168839454650879
    4. '_' → logprob: -4.293839454650879
    5. 'Information' → logprob: -4.668839454650879
    6. 'Space' → logprob: -5.043839454650879
    7. 'Details' → logprob: -5.168839454650879
    8. ' ' → logprob: -5.668839454650879
    9. ' :' → logprob: -5.668839454650879
    10. 'User' → logprob: -6.168839454650879

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004424667276907712
    2. '(' → logprob: -8.000442504882812
    3. ':
' → logprob: -9.500442504882812
    4. '():' → logprob: -10.875442504882812
    5. ' :' → logprob: -11.875442504882812
    6. '{' → logprob: -13.750442504882812
    7. '):' → logprob: -13.875442504882812
    8. '(object' → logprob: -14.125442504882812
    9. '.' → logprob: -14.250442504882812
    10. ':**' → logprob: -14.375442504882812

Token 82: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39713922142982483
    2. '   ' → logprob: -1.2721391916275024
    3. ' def' → logprob: -3.772139310836792
    4. '(' → logprob: -4.147139072418213
    5. 'def' → logprob: -6.147139072418213
    6. '<|end|>' → logprob: -6.647139072418213
    7. '.' → logprob: -7.522139072418213
    8. ' :' → logprob: -7.522139072418213
    9. ''s' → logprob: -7.772139072418213
    10. ' ' → logprob: -7.897139072418213

Token 83: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.026145150884985924
    2. 'def' (adapté à ' def') → logprob: -3.7761452198028564
    3. '   ' → logprob: -5.901144981384277
    4. '    ' → logprob: -9.151144981384277
    5. '_' → logprob: -11.276144981384277
    6. '    
' → logprob: -11.651144981384277
    7. ' 
' → logprob: -11.901144981384277
    8. ' ' → logprob: -12.026144981384277
    9. 'de' → logprob: -12.651144981384277
    10. '	def' → logprob: -12.651144981384277

Token 84: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.7394875288009644
    2. ' ' → logprob: -0.9894875288009644
    3. ' _' → logprob: -2.489487648010254
    4. '_' → logprob: -2.864487648010254
    5. ' ' → logprob: -5.114487648010254
    6. ' ‌' → logprob: -6.739487648010254
    7. '__' → logprob: -6.989487648010254
    8. '  ' → logprob: -6.989487648010254
    9. ' ​' → logprob: -7.739487648010254
    10. ' ___' → logprob: -8.489487648010254

Token 85: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.963691804325208e-05
    2. 'i' → logprob: -11.000029563903809
    3. 'ini' → logprob: -11.375029563903809
    4. ' init' → logprob: -13.875029563903809
    5. 'in' → logprob: -14.875029563903809
    6. '	init' → logprob: -16.750030517578125
    7. '_init' → logprob: -17.375030517578125
    8. 'int' → logprob: -17.625030517578125
    9. 'inite' → logprob: -17.625030517578125
    10. ' ' → logprob: -18.250030517578125

Token 86: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.05541713535785675
    2. '__' → logprob: -2.930417060852051
    3. '__(
' → logprob: -8.30541706085205
    4. '___' → logprob: -9.05541706085205
    5. '_' → logprob: -10.18041706085205
    6. '(' → logprob: -10.30541706085205
    7. '(self' → logprob: -10.55541706085205
    8. '_(' → logprob: -10.80541706085205
    9. '__((' → logprob: -10.80541706085205
    10. '__('' → logprob: -11.05541706085205

Token 87: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04890129715204239
    2. ' self' → logprob: -3.048901319503784
    3. ' ' → logprob: -8.298901557922363
    4. ')' → logprob: -10.173901557922363
    5. ' )' → logprob: -11.798901557922363
    6. '_self' → logprob: -12.423901557922363
    7. '(self' → logprob: -12.673901557922363
    8. '<|end|>' → logprob: -12.798901557922363
    9. '  ' → logprob: -13.423901557922363
    10. ',self' → logprob: -13.673901557922363

Token 88: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5777633786201477
    2. '_' → logprob: -1.202763319015503
    3. '_,' → logprob: -2.202763319015503
    4. '__,' → logprob: -4.952763557434082
    5. '__' → logprob: -5.202763557434082
    6. 'self' → logprob: -5.202763557434082
    7. '_self' → logprob: -5.577763557434082
    8. ' ,' → logprob: -6.077763557434082
    9. '__(' → logprob: -7.077763557434082
    10. ')' → logprob: -7.702763557434082

Token 89: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07640799134969711
    2. '<|end|>' → logprob: -3.3264079093933105
    3. '    ' → logprob: -4.0764079093933105
    4. '   ' → logprob: -4.7014079093933105
    5. ' ' → logprob: -5.8264079093933105
    6. '        ' → logprob: -6.3264079093933105
    7. '        
' → logprob: -6.5764079093933105
    8. 'n' → logprob: -7.3264079093933105
    9. '     ' → logprob: -7.4514079093933105
    10. '(n' → logprob: -7.4514079093933105

Token 90: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8570893406867981
    2. '<|end|>' → logprob: -0.8570893406867981
    3. 'def' → logprob: -2.3570892810821533
    4. '.' → logprob: -3.8570892810821533
    5. '\' → logprob: -4.857089519500732
    6. '<|end|>' → logprob: -5.357089519500732
    7. ' def' → logprob: -5.482089519500732
    8. ' 
' → logprob: -5.857089519500732
    9. '   ' → logprob: -5.982089519500732
    10. '' → logprob: -6.232089519500732

Token 91: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5847206711769104
    2. 'def' → logprob: -1.5847206115722656
    3. '   ' → logprob: -2.2097206115722656
    4. '<|end|>' → logprob: -2.9597206115722656
    5. ' def' → logprob: -3.3347206115722656
    6. '    
' → logprob: -4.334720611572266
    7. '\' → logprob: -5.459720611572266
    8. '\n' → logprob: -5.584720611572266
    9. ':' → logprob: -5.709720611572266
    10. '' → logprob: -5.959720611572266

Token 92: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21233181655406952
    2. 'def' (adapté à ' def') → logprob: -2.337331771850586
    3. '<|end|>' → logprob: -3.587331771850586
    4. ' 
' → logprob: -4.087331771850586
    5. ' def' → logprob: -4.587331771850586
    6. '    
' → logprob: -4.587331771850586
    7. '   ' → logprob: -4.837331771850586
    8. '\n' → logprob: -4.962331771850586
    9. '\' → logprob: -5.462331771850586
    10. '  
' → logprob: -6.212331771850586

Token 93: ' lets' (ID: 19733)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -1.0752129554748535
    2. ' solve' → logprob: -1.2002129554748535
    3. '_' → logprob: -2.2002129554748535
    4. ' space' → logprob: -2.5752129554748535
    5. ' _' → logprob: -2.8252129554748535
    6. ' ' → logprob: -3.3252129554748535
    7. ' process' → logprob: -4.3252129554748535
    8. ' create' → logprob: -4.3252129554748535
    9. ' calculate' → logprob: -5.0752129554748535
    10. ' expand' → logprob: -5.3252129554748535

Token 94: '_do' (ID: 59120)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07261759042739868
    2. '_play' → logprob: -3.572617530822754
    3. '_continue' → logprob: -4.072617530822754
    4. '_go' → logprob: -5.072617530822754
    5. '_encrypt' → logprob: -5.947617530822754
    6. '_connect' → logprob: -6.322617530822754
    7. '_do' → logprob: -6.322617530822754
    8. '_create' → logprob: -6.572617530822754
    9. '(' → logprob: -6.697617530822754
    10. '_use' → logprob: -7.572617530822754

Token 95: '_this' (ID: 58125)
  Prédit: '_it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_it' → logprob: -0.5180947780609131
    2. '(self' → logprob: -2.018094778060913
    3. '_s' → logprob: -2.143094778060913
    4. '(' → logprob: -2.768094778060913
    5. '_' → logprob: -3.268094778060913
    6. 'it' → logprob: -4.143095016479492
    7. '_every' → logprob: -5.268095016479492
    8. '()' → logprob: -5.643095016479492
    9. '_this' → logprob: -5.643095016479492
    10. '_work' → logprob: -6.268095016479492

Token 96: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06261296570301056
    2. '(' → logprob: -2.812613010406494
    3. '(s' → logprob: -7.937613010406494
    4. ' (' → logprob: -8.812612533569336
    5. 'self' → logprob: -9.062612533569336
    6. '(
' → logprob: -11.562612533569336
    7. '()' → logprob: -13.062612533569336
    8. ' ' → logprob: -13.312612533569336
    9. 's' → logprob: -13.312612533569336
    10. '(this' → logprob: -13.437612533569336

Token 97: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5266032218933105
    2. '):' → logprob: -0.9016032218933105
    3. 'self' → logprob: -6.0266032218933105
    4. ' ,' → logprob: -8.276603698730469
    5. ')' → logprob: -8.526603698730469
    6. ',self' → logprob: -8.526603698730469
    7. ' ):' → logprob: -9.026603698730469
    8. ',s' → logprob: -10.276603698730469
    9. ',input' → logprob: -10.401603698730469
    10. ',user' → logprob: -10.651603698730469

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06346920132637024
    2. '(' → logprob: -3.188469171524048
    3. '\' → logprob: -5.563469409942627
    4. '    ' → logprob: -5.938469409942627
    5. '   ' → logprob: -5.938469409942627
    6. '\n' → logprob: -6.188469409942627
    7. '<|end|>' → logprob: -6.563469409942627
    8. '        
' → logprob: -6.563469409942627
    9. ' ' → logprob: -6.813469409942627
    10. ':' → logprob: -6.813469409942627

Token 99: ' α' (ID: 3793)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10702537000179291
    2. 'a' → logprob: -3.732025384902954
    3. 'N' → logprob: -3.857025384902954
    4. ' n' → logprob: -3.857025384902954
    5. 't' → logprob: -4.107025146484375
    6. '   ' → logprob: -5.357025146484375
    7. 'T' → logprob: -5.982025146484375
    8. '       ' → logprob: -6.482025146484375
    9. 'x' → logprob: -6.607025146484375
    10. ' t' → logprob: -6.982025146484375

Token 100: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12167052179574966
    2. '=' → logprob: -2.2466704845428467
    3. ',' → logprob: -4.871670722961426
    4. ' ' → logprob: -7.121670722961426
    5. '_' → logprob: -9.246670722961426
    6. 'r' → logprob: -9.371670722961426
    7. 's' → logprob: -10.121670722961426
    8. ' ,' → logprob: -10.746670722961426
    9. 'f' → logprob: -11.496670722961426
    10. 'b' → logprob: -11.621670722961426

Token 101: ' β' (ID: 15772)
  Prédit: ' β'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' β' → logprob: -0.4791373908519745
    2. 'β' → logprob: -0.9791374206542969
    3. ' ω' → logprob: -6.229137420654297
    4. 'b' → logprob: -7.104137420654297
    5. 'ω' → logprob: -7.104137420654297
    6. ' ' → logprob: -7.604137420654297
    7. '_' → logprob: -7.729137420654297
    8. ' \xc3' → logprob: -8.979137420654297
    9. ' b' → logprob: -10.041637420654297
    10. 'ß' → logprob: -10.104137420654297

Token 102: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.643595814704895
    2. ' =' → logprob: -0.768595814704895
    3. ',' → logprob: -4.5185956954956055
    4. '<|end|>' → logprob: -11.268595695495605
    5. ' ' → logprob: -11.768595695495605
    6. ' ,' → logprob: -12.768595695495605
    7. '<|end|>' → logprob: -13.643595695495605
    8. ')' → logprob: -13.643595695495605
    9. ' =
' → logprob: -14.393595695495605
    10. ' =)' → logprob: -14.518595695495605

Token 103: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.14219605922698975
    2. '_' → logprob: -2.5171961784362793
    3. ' self' → logprob: -4.392196178436279
    4. '_IM' → logprob: -4.517196178436279
    5. '_I' → logprob: -4.642196178436279
    6. '_S' → logprob: -5.392196178436279
    7. ' map' → logprob: -5.517196178436279
    8. '_map' → logprob: -5.892196178436279
    9. '_self' → logprob: -6.142196178436279
    10. ' ' → logprob: -6.392196178436279

Token 104: 'IM' (ID: 2833)
  Prédit: 'IM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IM' → logprob: -0.0013595209456980228
    2. 'I' → logprob: -6.751359462738037
    3. ' IM' → logprob: -10.251359939575195
    4. 'L' → logprob: -10.251359939575195
    5. 'LM' → logprob: -10.251359939575195
    6. 'LS' → logprob: -10.751359939575195
    7. '_I' → logprob: -11.126359939575195
    8. '_IM' → logprob: -11.251359939575195
    9. 'M' → logprob: -11.626359939575195
    10. 'SM' → logprob: -11.626359939575195

Token 105: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015169414109550416
    2. '()
' → logprob: -8.875151634216309
    3. '())' → logprob: -12.125151634216309
    4. ')' → logprob: -12.250151634216309
    5. '()

' → logprob: -14.250151634216309
    6. ' ()' → logprob: -15.375151634216309
    7. '()]' → logprob: -15.500151634216309
    8. '()`' → logprob: -16.000152587890625
    9. '();' → logprob: -16.125152587890625
    10. '(' → logprob: -16.375152587890625

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05339501425623894
    2. '<|end|>' → logprob: -3.1783950328826904
    3. ')' → logprob: -6.053394794464111
    4. '        
' → logprob: -6.303394794464111
    5. ':' → logprob: -7.053394794464111
    6. ' ' → logprob: -7.053394794464111
    7. '<|end|>' → logprob: -7.053394794464111
    8. '#' → logprob: -7.178394794464111
    9. '        ' → logprob: -7.303394794464111
    10. ',' → logprob: -8.05339527130127

Token 107: ' result' (ID: 1534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33240553736686707
    2. ' 
' → logprob: -1.7074055671691895
    3. '        ' → logprob: -3.4574055671691895
    4. ' if' → logprob: -4.0824055671691895
    5. 'result' (adapté à ' result') → logprob: -4.3324055671691895
    6. '       ' → logprob: -4.4574055671691895
    7. 'n' → logprob: -5.8324055671691895
    8. '        
' → logprob: -5.9574055671691895
    9. '<|end|>' → logprob: -6.0824055671691895
    10. ' ' → logprob: -6.2074055671691895

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023113278672099113
    2. '=' → logprob: -3.898113250732422
    3. ' ' → logprob: -6.023113250732422
    4. '  ' → logprob: -9.648113250732422
    5. '_' → logprob: -10.648113250732422
    6. ' =
' → logprob: -11.148113250732422
    7. '.' → logprob: -11.648113250732422
    8. ' +=' → logprob: -12.273113250732422
    9. ')' → logprob: -12.398113250732422
    10. ' =)' → logprob: -12.523113250732422

Token 109: ' (' (ID: 350)
  Prédit: ' α'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' α' → logprob: -0.16962045431137085
    2. ' abs' → logprob: -3.0446205139160156
    3. 'α' → logprob: -3.1696205139160156
    4. ' []' → logprob: -4.169620513916016
    5. ' max' → logprob: -4.544620513916016
    6. 'abs' → logprob: -4.919620513916016
    7. ' ' → logprob: -5.294620513916016
    8. ' '' → logprob: -5.669620513916016
    9. ' "' → logprob: -5.669620513916016
    10. '"' → logprob: -5.669620513916016

Token 110: 'α' (ID: 727)
  Prédit: 'α'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'α' → logprob: -0.3923654556274414
    2. ' α' → logprob: -2.1423654556274414
    3. 'max' → logprob: -3.6423654556274414
    4. 'abs' → logprob: -3.7673654556274414
    5. 'β' → logprob: -3.8923654556274414
    6. 'a' → logprob: -4.017365455627441
    7. 'min' → logprob: -4.142365455627441
    8. '(' → logprob: -4.392365455627441
    9. ' (' → logprob: -4.517365455627441
    10. 'x' → logprob: -4.517365455627441

Token 111: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5230682492256165
    2. '+' → logprob: -1.3980681896209717
    3. ' *' → logprob: -2.6480681896209717
    4. '*' → logprob: -3.3980681896209717
    5. ' -' → logprob: -4.398068428039551
    6. '**' → logprob: -4.523068428039551
    7. ' **' → logprob: -5.023068428039551
    8. '-' → logprob: -5.148068428039551
    9. ' %' → logprob: -5.648068428039551
    10. ' ^' → logprob: -6.023068428039551

Token 112: ' β' (ID: 15772)
  Prédit: ' β'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' β' → logprob: -0.18341638147830963
    2. 'β' → logprob: -1.8084163665771484
    3. '2' → logprob: -6.433416366577148
    4. ' ' → logprob: -6.683416366577148
    5. ' (' → logprob: -7.808416366577148
    6. ' α' → logprob: -9.183416366577148
    7. '(' → logprob: -9.433416366577148
    8. ' beta' → logprob: -10.308416366577148
    9. ' βα' → logprob: -10.308416366577148
    10. ')' → logprob: -10.558416366577148

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007009698543697596
    2. ' )' → logprob: -5.507009506225586
    3. ' +' → logprob: -7.257009506225586
    4. ')%' → logprob: -7.382009506225586
    5. ')**' → logprob: -7.382009506225586
    6. ')//' → logprob: -7.507009506225586
    7. '**' → logprob: -9.132009506225586
    8. '+' → logprob: -9.507009506225586
    9. ')>>' → logprob: -9.507009506225586
    10. ')+' → logprob: -10.757009506225586

Token 114: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' ((' (ID: 3536)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2477072775363922
    2. '(' → logprob: -1.6227072477340698
    3. ' (' → logprob: -4.747707366943359
    4. '2' → logprob: -5.122707366943359
    5. 'α' → logprob: -5.372707366943359
    6. ' ' → logprob: -6.747707366943359
    7. '(alpha' → logprob: -7.372707366943359
    8. '0' → logprob: -8.74770736694336
    9. '3' → logprob: -8.99770736694336
    10. '(abs' → logprob: -9.37270736694336

Token 116: 'α' (ID: 727)
  Prédit: 'α'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'α' → logprob: -0.013341747224330902
    2. 'β' → logprob: -4.638341903686523
    3. '(' → logprob: -6.388341903686523
    4. 'min' → logprob: -6.763341903686523
    5. ' α' → logprob: -8.388341903686523
    6. '1' → logprob: -8.888341903686523
    7. '2' → logprob: -9.638341903686523
    8. ' (' → logprob: -9.763341903686523
    9. '(min' → logprob: -9.888341903686523
    10. 'alpha' → logprob: -10.138341903686523

Token 117: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4752871096134186
    2. ' -' → logprob: -1.7252870798110962
    3. ' //' → logprob: -2.7252871990203857
    4. '+' → logprob: -2.8502871990203857
    5. '-' → logprob: -3.2252871990203857
    6. ' *' → logprob: -4.600286960601807
    7. ' ' → logprob: -4.600286960601807
    8. ' %' → logprob: -5.225286960601807
    9. ')' → logprob: -5.600286960601807
    10. '//' → logprob: -6.100286960601807

Token 118: ' β' (ID: 15772)
  Prédit: 'β'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'β' → logprob: -0.5825258493423462
    2. ' β' → logprob: -0.9575258493423462
    3. '1' → logprob: -3.0825257301330566
    4. ' ' → logprob: -5.582525730133057
    5. 'beta' → logprob: -5.707525730133057
    6. '<|end|>' → logprob: -6.332525730133057
    7. ' beta' → logprob: -6.582525730133057
    8. '2' → logprob: -6.832525730133057
    9. ')' → logprob: -8.707526206970215
    10. ' ' → logprob: -9.707526206970215

Token 119: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016667058691382408
    2. ' -' → logprob: -4.766666889190674
    3. ' )' → logprob: -5.141666889190674
    4. '-' → logprob: -6.391666889190674
    5. ')//' → logprob: -8.016667366027832
    6. '))' → logprob: -10.141667366027832
    7. ' +' → logprob: -10.391667366027832
    8. ')>>' → logprob: -10.766667366027832
    9. '+' → logprob: -11.016667366027832
    10. ' ' → logprob: -11.141667366027832

Token 120: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10093960911035538
    2. ' -' → logprob: -2.7259395122528076
    3. ' )' → logprob: -4.350939750671387
    4. '-' → logprob: -4.975939750671387
    5. ' //' → logprob: -5.475939750671387
    6. ')//' → logprob: -5.975939750671387
    7. ' ' → logprob: -6.600939750671387
    8. '<|end|>' → logprob: -7.100939750671387
    9. ' +' → logprob: -7.850939750671387
    10. '//' → logprob: -7.850939750671387

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02842109650373459
    2. ' ' → logprob: -4.153420925140381
    3. '2' → logprob: -4.403420925140381
    4. '3' → logprob: -9.903421401977539
    5. '4' → logprob: -11.778421401977539
    6. '<|end|>' → logprob: -12.403421401977539
    7. ' (' → logprob: -12.653421401977539
    8. ')' → logprob: -13.153421401977539
    9. '  ' → logprob: -13.278421401977539
    10. '(' → logprob: -13.278421401977539

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010785343125462532
    2. '2' → logprob: -4.8857855796813965
    3. ' ' → logprob: -5.7607855796813965
    4. '3' → logprob: -10.885785102844238
    5. '4' → logprob: -13.260785102844238
    6. '(' → logprob: -14.260785102844238
    7. '  ' → logprob: -14.448285102844238
    8. ')' → logprob: -14.635785102844238
    9. ' (' → logprob: -14.698285102844238
    10. '<|end|>' → logprob: -14.698285102844238

Token 123: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1424973713001236e-05
    2. ')
' → logprob: -11.250031471252441
    3. ' )' → logprob: -11.500031471252441
    4. '       ' → logprob: -12.625031471252441
    5. '))' → logprob: -13.375031471252441
    6. ')return' → logprob: -14.125031471252441
    7. '<|end|>' → logprob: -14.125031471252441
    8. '   ' → logprob: -15.000031471252441
    9. ')))' → logprob: -15.000031471252441
    10. ' ' → logprob: -15.500031471252441

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13235919177532196
    2. '
' → logprob: -2.382359266281128
    3. '<|end|>' → logprob: -3.632359266281128
    4. ')' → logprob: -6.132359027862549
    5. 'return' → logprob: -7.132359027862549
    6. '\n' → logprob: -7.257359027862549
    7. '        
' → logprob: -7.507359027862549
    8. '<|end|>' → logprob: -8.257359504699707
    9. '\' → logprob: -8.882359504699707
    10. ' return' → logprob: -8.882359504699707

Token 125: ' print' (ID: 2123)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.659989595413208
    2. '       ' → logprob: -0.909989595413208
    3. 'return' → logprob: -2.909989595413208
    4. '<|end|>' → logprob: -4.659989356994629
    5. '\n' → logprob: -5.034989356994629
    6. ' return' → logprob: -5.159989356994629
    7. '        
' → logprob: -6.284989356994629
    8. '\' → logprob: -7.659989356994629
    9. ')' → logprob: -8.034989356994629
    10. ' 
' → logprob: -8.159989356994629

Token 126: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741267263889313
    2. '(result' → logprob: -0.9741266965866089
    3. '((' → logprob: -11.724126815795898
    4. '('' → logprob: -11.849126815795898
    5. ' (' → logprob: -11.974126815795898
    6. '()' → logprob: -11.974126815795898
    7. '(
' → logprob: -12.349126815795898
    8. '(results' → logprob: -12.474126815795898
    9. '(resultado' → logprob: -12.724126815795898
    10. '(res' → logprob: -12.849126815795898

Token 127: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -13.625001907348633
    3. ')
' → logprob: -15.250001907348633
    4. '))' → logprob: -17.625001907348633
    5. ')`' → logprob: -18.375001907348633
    6. '),' → logprob: -19.625001907348633
    7. '')' → logprob: -19.750001907348633
    8. '()' → logprob: -19.875001907348633
    9. ')}' → logprob: -20.000001907348633
    10. ' ' → logprob: -20.500001907348633

Token 128: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0028590820729732513
    2. '__' → logprob: -5.877859115600586
    3. '_' → logprob: -10.377859115600586
    4. ' ' → logprob: -11.252859115600586
    5. '_name' → logprob: -12.502859115600586
    6. ' ' → logprob: -12.752859115600586
    7. '  ' → logprob: -13.627859115600586
    8. ' _' → logprob: -14.377859115600586
    9. ' ___' → logprob: -14.752859115600586
    10. '___' → logprob: -15.002859115600586

Token 130: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1873989999294281
    2. ' ==' → logprob: -2.187398910522461
    3. '_' → logprob: -3.562398910522461
    4. ' __' → logprob: -3.937398910522461
    5. '==' → logprob: -5.437398910522461
    6. '<|end|>' → logprob: -6.312398910522461
    7. '.' → logprob: -6.687398910522461
    8. ' ' → logprob: -6.937398910522461
    9. '.__' → logprob: -7.937398910522461
    10. 'name' → logprob: -8.062398910522461

Token 131: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.8889261304575484e-06
    2. '___' → logprob: -13.875003814697266
    3. '__.__' → logprob: -13.875003814697266
    4. '____' → logprob: -14.250003814697266
    5. '==' → logprob: -14.500003814697266
    6. '_' → logprob: -14.500003814697266
    7. '__
' → logprob: -15.750003814697266
    8. ' ==' → logprob: -17.250003814697266
    9. '__

' → logprob: -17.500003814697266
    10. '__('' → logprob: -17.750003814697266

Token 132: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5341668128967285
    2. '__' → logprob: -1.4091668128967285
    3. '==' → logprob: -1.7841668128967285
    4. '=="' → logprob: -6.6591668128967285
    5. '=' → logprob: -9.28416633605957
    6. '=='' → logprob: -10.15916633605957
    7. ' ' → logprob: -10.15916633605957
    8. '_' → logprob: -10.40916633605957
    9. ' =' → logprob: -10.53416633605957
    10. ' =="' → logprob: -11.15916633605957

Token 133: '('__' (ID: 180326)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.42882877588272095
    2. ''' → logprob: -1.0538287162780762
    3. ' "__' → logprob: -9.678829193115234
    4. ' '__' → logprob: -10.303829193115234
    5. ' "' → logprob: -11.303829193115234
    6. ' '' → logprob: -11.678829193115234
    7. ''"' → logprob: -12.928829193115234
    8. '"_' → logprob: -13.053829193115234
    9. ''_' → logprob: -13.428829193115234
    10. '"I' → logprob: -14.053829193115234

Token 134: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.1472419600977446e-06
    2. 'name' → logprob: -13.750000953674316
    3. 'ma' → logprob: -18.000001907348633
    4. 'mai' → logprob: -18.750001907348633
    5. ' main' → logprob: -19.125001907348633
    6. '_main' → logprob: -19.250001907348633
    7. 'm' → logprob: -19.500001907348633
    8. 'maine' → logprob: -20.250001907348633
    9. '__' → logprob: -22.500001907348633
    10. '	main' → logprob: -22.875001907348633

Token 135: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.052377623040229e-05
    2. ''):' → logprob: -10.000070571899414
    3. '_' → logprob: -10.875070571899414
    4. '__':
' → logprob: -12.750070571899414
    5. '__:' → logprob: -12.750070571899414
    6. '___' → logprob: -15.375070571899414
    7. '__)' → logprob: -16.750070571899414
    8. '__('' → logprob: -17.000070571899414
    9. ''):
' → logprob: -17.125070571899414
    10. '')' → logprob: -17.125070571899414

Token 136: ''):
' (ID: 26539)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008227337966673076
    2. ':' → logprob: -7.8758225440979
    3. ''):' → logprob: -8.375823020935059
    4. ')' → logprob: -9.375823020935059
    5. '):
' → logprob: -9.750823020935059
    6. ' ):' → logprob: -9.875823020935059
    7. '():' → logprob: -11.625823020935059
    8. '"):' → logprob: -12.250823020935059
    9. '':' → logprob: -13.375823020935059
    10. '>):' → logprob: -14.750823020935059

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0803041085600853
    2. '    
' → logprob: -3.5803041458129883
    3. 'Personal' → logprob: -3.8303041458129883
    4. ' Personal' → logprob: -4.205304145812988
    5. '<|end|>' → logprob: -5.205304145812988
    6. '
' → logprob: -5.580304145812988
    7. '   ' → logprob: -7.330304145812988
    8. ' 
' → logprob: -7.705304145812988
    9. '	
' → logprob: -8.080304145812988
    10. '  
' → logprob: -8.580304145812988

Token 138: ' Personal' (ID: 19086)
  Prédit: 'Personal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Personal' (adapté à ' Personal') → logprob: -0.38018208742141724
    2. 'pu' → logprob: -1.2551820278167725
    3. 'p' → logprob: -4.880182266235352
    4. ' Personal' → logprob: -4.880182266235352
    5. 'u' → logprob: -5.380182266235352
    6. ' pu' → logprob: -5.505182266235352
    7. 'personal' → logprob: -6.005182266235352
    8. 'un' → logprob: -6.380182266235352
    9. 'obj' → logprob: -7.380182266235352
    10. 'person' → logprob: -8.005182266235352

Token 139: 'Universe' (ID: 174209)
  Prédit: 'Universe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Universe' → logprob: -1.3856492842023727e-06
    2. ' Universe' → logprob: -14.125000953674316
    3. 'University' → logprob: -14.875000953674316
    4. 'Univers' → logprob: -15.375000953674316
    5. 'Universal' → logprob: -17.250001907348633
    6. '()' → logprob: -17.375001907348633
    7. 'Un' → logprob: -17.625001907348633
    8. ' universe' → logprob: -18.250001907348633
    9. '_' → logprob: -20.375001907348633
    10. ' Universo' → logprob: -20.375001907348633

Token 140: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.012738363817334175
    2. '()' → logprob: -4.762738227844238
    3. '.' → logprob: -5.512738227844238
    4. ' ().' → logprob: -10.137738227844238
    5. '(' → logprob: -10.762738227844238
    6. '().__' → logprob: -12.137738227844238
    7. '().'' → logprob: -12.387738227844238
    8. ' ()' → logprob: -12.512738227844238
    9. ' .' → logprob: -13.012738227844238
    10. '().
' → logprob: -14.512738227844238

Token 141: 'lets' (ID: 12222)
  Prédit: 'lets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lets' → logprob: -3.128163257315464e-07
    2. 'Lets' → logprob: -15.875
    3. 'let' → logprob: -16.625
    4. ' lets' → logprob: -18.625
    5. '```' → logprob: -21.375
    6. '   ' → logprob: -22.0
    7. 'puts' → logprob: -22.0
    8. '__' → logprob: -22.25
    9. 'lett' → logprob: -22.375
    10. 'lots' → logprob: -22.5

Token 142: '_do' (ID: 59120)
  Prédit: '_do'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_do' → logprob: -9.088346359931165e-07
    2. '_done' → logprob: -15.500000953674316
    3. '_d' → logprob: -15.750000953674316
    4. '_' → logprob: -15.875000953674316
    5. '_Do' → logprob: -16.0
    6. '_to' → logprob: -16.5
    7. '_this' → logprob: -16.5
    8. '_DO' → logprob: -16.625
    9. 'do' → logprob: -16.875
    10. ' _' → logprob: -17.5

Token 143: '_this' (ID: 58125)
  Prédit: '_this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_this' → logprob: -0.016176186501979828
    2. 'this' → logprob: -4.141176223754883
    3. '_THIS' → logprob: -9.516176223754883
    4. 'This' → logprob: -10.391176223754883
    5. '_' → logprob: -11.516176223754883
    6. 'his' → logprob: -12.141176223754883
    7. '_th' → logprob: -12.391176223754883
    8. ' this' → logprob: -12.516176223754883
    9. 'is' → logprob: -12.641176223754883
    10. 's' → logprob: -13.391176223754883

Token 144: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.9795445849886164e-05
    2. '(' → logprob: -10.375060081481934
    3. '()
' → logprob: -10.500060081481934
    4. ' ()' → logprob: -15.000060081481934
    5. '()

' → logprob: -15.500060081481934
    6. '()`' → logprob: -16.500059127807617
    7. '()
' → logprob: -16.750059127807617
    8. '();' → logprob: -16.875059127807617
    9. '()\' → logprob: -16.875059127807617
    10. '()<' → logprob: -17.250059127807617


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 142
Tokens correctement prédits (1ère position, stricte): 63
Tokens correctement prédits (1ère position, avec adaptation): 64
Tokens correctement prédits (top 10): 114
Précision stricte (1ère position): 44.37%
Précision adaptée (1ère position): 45.07%
Précision (top 10): 80.28%
================================================================================
