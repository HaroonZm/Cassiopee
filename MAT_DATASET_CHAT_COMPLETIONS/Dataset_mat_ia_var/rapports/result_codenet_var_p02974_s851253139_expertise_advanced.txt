================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import lru_cache

def f(n, k):
    MOD = 10 ** 9 + 7
    if k & 1:
        print(0)
        return

    half_k = k // 2

    @lru_cache(maxsize=None)
    def dp(i, j, s):
        if i == 0:
            return int(j == 0 and s == 0)
        if j > i or s < 0:
            return 0
        res = 0
        # 片側、水平、両方上
        res += (dp(i-1, j, s-j) * (2 * j + 1)) % MOD
        if j:
            res += dp(i-1, j-1, s-j)
        res += (dp(i-1, j+1, s-j) * pow(j+1, 2, MOD)) % MOD
        return res % MOD

    print(dp(n, 0, half_k))

n, k = map(int, input().split())
f(n, k)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' l' (ID: 305)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0008348815608769655
    2. 'z' → logprob: -7.500834941864014
    3. 'r' → logprob: -9.000834465026855
    4. 'partial' → logprob: -9.875834465026855
    5. 'ruz' → logprob: -10.250834465026855
    6. 'ambda' → logprob: -10.875834465026855
    7. 'wrap' → logprob: -11.375834465026855
    8. 'a' → logprob: -11.500834465026855
    9. 'azy' → logprob: -12.125834465026855
    10. 'az' → logprob: -12.375834465026855

Token 5: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.004099296871572733
    2. '_c' → logprob: -6.004099369049072
    3. '_' → logprob: -6.629099369049072
    4. 'cache' → logprob: -8.754098892211914
    5. 'c' → logprob: -9.754098892211914
    6. '_ca' → logprob: -10.129098892211914
    7. '_cached' → logprob: -11.379098892211914
    8. '\' → logprob: -11.879098892211914
    9. '__' → logprob: -12.629098892211914
    10. '_

' → logprob: -12.754098892211914

Token 6: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029721444472670555
    2. '@' → logprob: -4.029721260070801
    3. 'def' → logprob: -4.654721260070801
    4. '\(' → logprob: -7.154721260070801
    5. '```' → logprob: -7.279721260070801
    6. '(
' → logprob: -8.0297212600708
    7. '\' → logprob: -10.0297212600708
    8. 'd' → logprob: -10.6547212600708
    9. ':' → logprob: -10.6547212600708
    10. '.' → logprob: -11.2797212600708

Token 7: 'def' (ID: 1314)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.025891833007335663
    2. 'def' → logprob: -3.7758917808532715
    3. '```' → logprob: -6.9008917808532715
    4. '\' → logprob: -7.5258917808532715
    5. '(' → logprob: -7.6508917808532715
    6. '@
' → logprob: -8.90089225769043
    7. '@example' → logprob: -9.77589225769043
    8. 'd' → logprob: -10.02589225769043
    9. '\(' → logprob: -10.02589225769043
    10. '@login' → logprob: -10.02589225769043

Token 8: ' f' (ID: 285)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00414061825722456
    2. ' l' → logprob: -5.879140853881836
    3. ' space' → logprob: -7.504140853881836
    4. ' my' → logprob: -8.254140853881836
    5. ' ' → logprob: -8.254140853881836
    6. ' f' → logprob: -9.754140853881836
    7. ' factorial' → logprob: -10.129140853881836
    8. '_' → logprob: -10.504140853881836
    9. ' add' → logprob: -11.254140853881836
    10. ' ​' → logprob: -11.379140853881836

Token 9: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2359447032213211
    2. 'u' → logprob: -1.7359447479248047
    3. '_' → logprob: -3.7359447479248047
    4. 'unct' → logprob: -5.485944747924805
    5. '(u' → logprob: -5.985944747924805
    6. 'a' → logprob: -7.485944747924805
    7. 'unction' → logprob: -7.485944747924805
    8. 'unc' → logprob: -7.735944747924805
    9. 'n' → logprob: -8.235944747924805
    10. '(a' → logprob: -8.360944747924805

Token 10: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10029595345258713
    2. ')' → logprob: -2.3502960205078125
    3. ':' → logprob: -9.600296020507812
    4. '):
' → logprob: -11.475296020507812
    5. ')>' → logprob: -12.850296020507812
    6. ')n' → logprob: -13.975296020507812
    7. ',' → logprob: -13.975296020507812
    8. '=' → logprob: -13.975296020507812
    9. ')=' → logprob: -13.975296020507812
    10. '*' → logprob: -14.350296020507812

Token 11: ' k' (ID: 372)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.1945996284484863
    2. ' cache' → logprob: -1.1945996284484863
    3. ' k' → logprob: -1.5695996284484863
    4. ' )' → logprob: -2.4445996284484863
    5. ' x' → logprob: -3.0695996284484863
    6. ' memo' → logprob: -4.069599628448486
    7. ' ):' → logprob: -4.819599628448486
    8. ')' → logprob: -5.194599628448486
    9. 'k' → logprob: -5.819599628448486
    10. 'cache' → logprob: -5.944599628448486

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12704025208950043
    2. ')' → logprob: -2.127040147781372
    3. ':' → logprob: -9.377039909362793
    4. ',' → logprob: -11.252039909362793
    5. '):
' → logprob: -11.877039909362793
    6. ')>' → logprob: -13.127039909362793
    7. '),' → logprob: -14.002039909362793
    8. '*' → logprob: -14.627039909362793
    9. ''):' → logprob: -14.627039909362793
    10. '=' → logprob: -14.752039909362793

Token 13: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1262659728527069
    2. '   ' → logprob: -2.2512660026550293
    3. '```' → logprob: -4.626266002655029
    4. ':return' → logprob: -7.251266002655029
    5. ':
' → logprob: -7.501266002655029
    6. '    ' → logprob: -7.751266002655029
    7. '`:' → logprob: -7.876266002655029
    8. '    
' → logprob: -8.001265525817871
    9. '):' → logprob: -8.376265525817871
    10. '``' → logprob: -8.626265525817871

Token 14: ' MOD' (ID: 32868)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2742374539375305
    2. ' if' → logprob: -1.8992373943328857
    3. '    ' → logprob: -3.6492373943328857
    4. 'if' → logprob: -3.7742373943328857
    5. '```' → logprob: -4.024237632751465
    6. ' ' → logprob: -5.149237632751465
    7. ' return' → logprob: -5.399237632751465
    8. 'return' → logprob: -5.524237632751465
    9. '    
' → logprob: -6.524237632751465
    10. '@' → logprob: -6.649237632751465

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6938859820365906
    2. ' =' → logprob: -0.6938859820365906
    3. ')' → logprob: -8.068885803222656
    4. ' ' → logprob: -8.693885803222656
    5. '_' → logprob: -8.943885803222656
    6. '   ' → logprob: -10.193885803222656
    7. ',' → logprob: -10.568885803222656
    8. '<|end|>' → logprob: -11.443885803222656
    9. '```' → logprob: -11.693885803222656
    10. '.' → logprob: -12.193885803222656

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012555796653032303
    2. '10' → logprob: -4.3875555992126465
    3. '100' → logprob: -10.012556076049805
    4. '1' → logprob: -14.137556076049805
    5. 'int' → logprob: -15.137556076049805
    6. ' ' → logprob: -15.887556076049805
    7. ' int' → logprob: -16.512556076049805
    8. ' \(' → logprob: -17.137556076049805
    9. '998' → logprob: -17.262556076049805
    10. '109' → logprob: -17.887556076049805

Token 17: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10275233536958694
    2. ' ' → logprob: -2.352752447128296
    3. '100' → logprob: -5.977752208709717
    4. '1' → logprob: -11.852752685546875
    5. 'int' → logprob: -15.102752685546875
    6. '998' → logprob: -15.102752685546875
    7. ' ' → logprob: -16.602752685546875
    8. '`' → logprob: -16.977752685546875
    9. '109' → logprob: -17.102752685546875
    10. ' int' → logprob: -17.477752685546875

Token 18: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7547863125801086
    2. '9' → logprob: -1.0047862529754639
    3. '**' → logprob: -2.004786252975464
    4. '7' → logprob: -3.754786252975464
    5. '6' → logprob: -5.379786491394043
    6. ' **' → logprob: -7.504786491394043
    7. '8' → logprob: -8.879786491394043
    8. '00' → logprob: -9.379786491394043
    9. '4' → logprob: -9.629786491394043
    10. '^' → logprob: -9.754786491394043

Token 19: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.500000953674316
    3. '09' → logprob: -15.000000953674316
    4. '```' → logprob: -17.25
    5. '10' → logprob: -18.875
    6. '   ' → logprob: -20.375
    7. '_' → logprob: -21.375
    8. '4' → logprob: -21.5
    9. '``' → logprob: -21.5
    10. '-' → logprob: -21.625

Token 20: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.0
    3. ' ' → logprob: -18.5
    4. '```' → logprob: -18.5
    5. '``' → logprob: -21.25
    6. '   ' → logprob: -21.5
    7. ' ' → logprob: -22.0
    8. '18' → logprob: -22.375
    9. '+' → logprob: -22.625
    10. '９' → logprob: -22.75

Token 21: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01824898272752762
    2. ' +' → logprob: -4.018249034881592
    3. '7' → logprob: -9.518248558044434
    4. ' ' → logprob: -11.768248558044434
    5. ' ' → logprob: -12.518248558044434
    6. '```' → logprob: -12.643248558044434
    7. '   ' → logprob: -12.768248558044434
    8. ' plus' → logprob: -13.518248558044434
    9. '427' → logprob: -14.393248558044434
    10. '`' → logprob: -14.893248558044434

Token 22: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '+' → logprob: -17.25
    4. '```' → logprob: -17.875
    5. '   ' → logprob: -18.5
    6. '9' → logprob: -18.75
    7. '07' → logprob: -19.625
    8. '  ' → logprob: -21.125
    9. '17' → logprob: -21.25
    10. '' → logprob: -21.5625

Token 23: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '```' → logprob: -18.75
    3. '+' → logprob: -19.0
    4. '9' → logprob: -20.875
    5. '   ' → logprob: -21.125
    6. ' ' → logprob: -21.25
    7. '07' → logprob: -21.75
    8. '``' → logprob: -22.4375
    9. '

' → logprob: -22.6875
    10. '' → logprob: -22.75

Token 24: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009386393241584301
    2. '
' → logprob: -5.7593865394592285
    3. ':return' → logprob: -6.5093865394592285
    4. '   ' → logprob: -6.6343865394592285
    5. ':
' → logprob: -6.7593865394592285
    6. '```' → logprob: -7.1343865394592285
    7. '\n' → logprob: -7.7593865394592285
    8. '    
' → logprob: -9.00938606262207
    9. ' ' → logprob: -9.00938606262207
    10. '\' → logprob: -9.25938606262207

Token 25: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9495394825935364
    2. '   ' → logprob: -1.0745394229888916
    3. '```' → logprob: -1.6995394229888916
    4. '
' → logprob: -3.0745394229888916
    5. '\n' → logprob: -3.9495394229888916
    6. '\' → logprob: -5.574539661407471
    7. '``' → logprob: -5.574539661407471
    8. '    
' → logprob: -5.574539661407471
    9. ':
' → logprob: -6.074539661407471
    10. ':return' → logprob: -6.324539661407471

Token 26: ' if' (ID: 538)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.9950355887413025
    2. 'if' (adapté à ' if') → logprob: -1.3700356483459473
    3. '   ' → logprob: -1.8700356483459473
    4. 'return' → logprob: -2.3700356483459473
    5. ' if' → logprob: -3.1200356483459473
    6. ' @' → logprob: -3.7450356483459473
    7. 'result' → logprob: -4.245035648345947
    8. 'r' → logprob: -5.495035648345947
    9. 'i' → logprob: -5.495035648345947
    10. '
' → logprob: -5.620035648345947

Token 27: ' k' (ID: 372)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16276244819164276
    2. ' k' → logprob: -1.9127624034881592
    3. ' not' → logprob: -6.912762641906738
    4. ' ' → logprob: -7.537762641906738
    5. ' ' → logprob: -7.537762641906738
    6. 'n' → logprob: -8.037762641906738
    7. 'k' → logprob: -9.037762641906738
    8. ' (' → logprob: -10.537762641906738
    9. 'not' → logprob: -13.162762641906738
    10. ' isinstance' → logprob: -13.787762641906738

Token 28: ' &' (ID: 827)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0799286738038063
    2. '==' → logprob: -2.7049286365509033
    3. ' >' → logprob: -4.829928874969482
    4. '>' → logprob: -7.204928874969482
    5. ' <=' → logprob: -7.454928874969482
    6. ' <' → logprob: -8.329928398132324
    7. ' ' → logprob: -8.579928398132324
    8. ' >=' → logprob: -9.204928398132324
    9. '<' → logprob: -10.454928398132324
    10. '<=' → logprob: -10.704928398132324

Token 29: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3096505105495453
    2. ' ' → logprob: -1.4346505403518677
    3. ' k' → logprob: -4.434650421142578
    4. ' n' → logprob: -4.809650421142578
    5. ' (' → logprob: -5.434650421142578
    6. 'k' → logprob: -6.184650421142578
    7. 'n' → logprob: -7.434650421142578
    8. 'nbsp' → logprob: -8.059650421142578
    9. '(n' → logprob: -8.559650421142578
    10. '(' → logprob: -9.309650421142578

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04679432138800621
    2. ' ' → logprob: -3.4217944145202637
    3. ' n' → logprob: -5.296794414520264
    4. 'k' → logprob: -5.796794414520264
    5. ' k' → logprob: -6.171794414520264
    6. 'n' → logprob: -6.421794414520264
    7. ' (' → logprob: -7.546794414520264
    8. '(n' → logprob: -7.671794414520264
    9. '(' → logprob: -9.171793937683105
    10. '(k' → logprob: -9.546793937683105

Token 31: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09192375093698502
    2. '==' → logprob: -2.966923713684082
    3. ':' → logprob: -3.341923713684082
    4. ' !=' → logprob: -7.966923713684082
    5. ' :' → logprob: -8.216923713684082
    6. ' ' → logprob: -8.591923713684082
    7. '=' → logprob: -9.466923713684082
    8. ' =' → logprob: -10.466923713684082
    9. ':
' → logprob: -10.966923713684082
    10. ' ===' → logprob: -11.466923713684082

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3662847578525543
    2. ':' → logprob: -1.491284728050232
    3. '    ' → logprob: -3.6162848472595215
    4. '\' → logprob: -4.3662848472595215
    5. '\n' → logprob: -4.6162848472595215
    6. '   ' → logprob: -4.7412848472595215
    7. ':
' → logprob: -5.6162848472595215
    8. ' :' → logprob: -5.7412848472595215
    9. ' return' → logprob: -5.9912848472595215
    10. ':return' → logprob: -6.1162848472595215

Token 33: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1096559762954712
    2. ' 
' → logprob: -1.8596559762954712
    3. ' return' → logprob: -2.1096558570861816
    4. ':' → logprob: -2.7346558570861816
    5. '\n' → logprob: -2.7346558570861816
    6. 'return' → logprob: -2.8596558570861816
    7. '\' → logprob: -3.1096558570861816
    8. ':
' → logprob: -3.4846558570861816
    9. 'n' → logprob: -3.7346558570861816
    10. ' \' → logprob: -3.9846558570861816

Token 34: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015598706901073456
    2. '('' → logprob: -4.890598773956299
    3. '(k' → logprob: -5.265598773956299
    4. '("' → logprob: -7.265598773956299
    5. '(n' → logprob: -7.390598773956299
    6. '("("' → logprob: -7.515598773956299
    7. '(f' → logprob: -7.640598773956299
    8. '((' → logprob: -8.39059829711914
    9. '()' → logprob: -10.01559829711914
    10. '(True' → logprob: -10.64059829711914

Token 35: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.3718054294586182
    2. 'n' → logprob: -1.3718054294586182
    3. ''' → logprob: -1.9968054294586182
    4. '(' → logprob: -2.246805429458618
    5. 'k' → logprob: -2.496805429458618
    6. ' n' → logprob: -3.621805429458618
    7. '0' → logprob: -3.746805429458618
    8. '(n' → logprob: -3.746805429458618
    9. ')' → logprob: -3.996805429458618
    10. 'f' → logprob: -4.121805191040039

Token 36: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005510062328539789
    2. ')
' → logprob: -7.875551223754883
    3. ' )' → logprob: -9.625551223754883
    4. '   ' → logprob: -10.125551223754883
    5. ',' → logprob: -11.375551223754883
    6. '))' → logprob: -11.500551223754883
    7. '`)' → logprob: -11.500551223754883
    8. '')' → logprob: -11.750551223754883
    9. ')

' → logprob: -12.250551223754883
    10. '*' → logprob: -12.375551223754883

Token 37: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5383229851722717
    2. ')' → logprob: -1.788322925567627
    3. '\n' → logprob: -1.913322925567627
    4. '\' → logprob: -3.413322925567627
    5. ':' → logprob: -3.663322925567627
    6. '
' → logprob: -4.788322925567627
    7. '    
' → logprob: -4.913322925567627
    8. ' ' → logprob: -5.538322925567627
    9. '<|end|>' → logprob: -5.788322925567627
    10. '       ' → logprob: -6.038322925567627

Token 38: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12567268311977386
    2. '   ' → logprob: -2.2506725788116455
    3. 'return' (adapté à ' return') → logprob: -5.125672817230225
    4. ' return' → logprob: -5.375672817230225
    5. '
' → logprob: -7.375672817230225
    6. ' ' → logprob: -7.500672817230225
    7. ')' → logprob: -8.375672340393066
    8. '    
' → logprob: -9.000672340393066
    9. '\n' → logprob: -9.125672340393066
    10. '	return' → logprob: -9.125672340393066

Token 39: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.18111871182918549
    2. '\' → logprob: -2.5561187267303467
    3. '
' → logprob: -3.8061187267303467
    4. ' ' → logprob: -3.9311187267303467
    5. ' 
' → logprob: -4.056118488311768
    6. '<|end|>' → logprob: -5.431118488311768
    7. ')' → logprob: -5.681118488311768
    8. ' \' → logprob: -5.681118488311768
    9. '    
' → logprob: -5.806118488311768
    10. '  
' → logprob: -5.931118488311768

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18446624279022217
    2. ' ' → logprob: -1.9344662427902222
    3. ')' → logprob: -5.309466361999512
    4. 'n' → logprob: -6.059466361999512
    5. '    
' → logprob: -6.059466361999512
    6. '<|end|>' → logprob: -6.059466361999512
    7. '    ' → logprob: -6.184466361999512
    8. '\' → logprob: -6.434466361999512
    9. '  ' → logprob: -6.434466361999512
    10. '(' → logprob: -6.559466361999512

Token 41: ' half' (ID: 6375)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.49653154611587524
    2. '   ' → logprob: -1.4965314865112305
    3. 'return' → logprob: -3.2465314865112305
    4. 'res' → logprob: -3.4965314865112305
    5. 'n' → logprob: -3.8715314865112305
    6. 'result' → logprob: -4.1215314865112305
    7. 'm' → logprob: -4.6215314865112305
    8. 'half' (adapté à ' half') → logprob: -4.7465314865112305
    9. 'dp' → logprob: -4.7465314865112305
    10. 'r' → logprob: -4.8715314865112305

Token 42: '_k' (ID: 11637)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23361138999462128
    2. '_k' → logprob: -1.7336113452911377
    3. '_n' → logprob: -3.6086113452911377
    4. '=' → logprob: -6.108611583709717
    5. 'k' → logprob: -6.483611583709717
    6. '_' → logprob: -7.858611583709717
    7. '_sum' → logprob: -8.983611106872559
    8. 'n' → logprob: -9.608611106872559
    9. ',' → logprob: -9.858611106872559
    10. '=k' → logprob: -9.983611106872559

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994543969631195
    2. '=' → logprob: -2.6949453353881836
    3. ',' → logprob: -12.819945335388184
    4. ' ' → logprob: -13.319945335388184
    5. '=k' → logprob: -13.694945335388184
    6. 'k' → logprob: -14.194945335388184
    7. 's' → logprob: -14.319945335388184
    8. '=int' → logprob: -14.569945335388184
    9. '   ' → logprob: -14.694945335388184
    10. '  ' → logprob: -15.194945335388184

Token 44: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.632624626159668
    2. ' k' → logprob: -0.757624626159668
    3. '   ' → logprob: -10.757624626159668
    4. '	k' → logprob: -13.632624626159668
    5. ' ' → logprob: -14.132624626159668
    6. '(k' → logprob: -14.757624626159668
    7. '{k' → logprob: -15.007624626159668
    8. '/k' → logprob: -15.132624626159668
    9. '    ' → logprob: -15.257624626159668
    10. '  ' → logprob: -15.382624626159668

Token 45: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.010298403911292553
    2. '//' → logprob: -4.635298252105713
    3. ' >>' → logprob: -8.385298728942871
    4. '   ' → logprob: -9.135298728942871
    5. ' ' → logprob: -9.260298728942871
    6. '>>' → logprob: -9.510298728942871
    7. ' >>=' → logprob: -11.260298728942871
    8. ' ' → logprob: -11.510298728942871
    9. '2' → logprob: -12.135298728942871
    10. '  ' → logprob: -13.260298728942871

Token 46: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004907185211777687
    2. ' ' → logprob: -7.625490665435791
    3. '   ' → logprob: -13.25049114227295
    4. '4' → logprob: -14.75049114227295
    5. '  ' → logprob: -15.75049114227295
    6. '```' → logprob: -15.87549114227295
    7. '    ' → logprob: -17.312990188598633
    8. '1' → logprob: -17.625490188598633
    9. ' ' → logprob: -17.875490188598633
    10. '202' → logprob: -18.125490188598633

Token 47: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.576873758807778e-05
    2. ' ' → logprob: -9.500075340270996
    3. '4' → logprob: -14.500075340270996
    4. '   ' → logprob: -15.250075340270996
    5. '  ' → logprob: -17.000076293945312
    6. '```' → logprob: -17.750076293945312
    7. '۲' → logprob: -18.437576293945312
    8. '

' → logprob: -18.500076293945312
    9. '
' → logprob: -18.687576293945312
    10. '1' → logprob: -18.875076293945312

Token 48: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3451215624809265
    2. '<|end|>' → logprob: -1.3451216220855713
    3. '    
' → logprob: -4.470121383666992
    4. ')' → logprob: -4.720121383666992
    5. '
' → logprob: -5.595121383666992
    6. '<|end|>' → logprob: -5.845121383666992
    7. ',' → logprob: -6.845121383666992
    8. 'def' → logprob: -7.095121383666992
    9. '```' → logprob: -7.970121383666992
    10. ' ' → logprob: -8.220121383666992

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3367009460926056
    2. '@' → logprob: -1.3367009162902832
    3. ')' → logprob: -4.961700916290283
    4. '    
' → logprob: -5.086700916290283
    5. 'result' → logprob: -6.086700916290283
    6. 'return' → logprob: -6.211700916290283
    7. 'def' → logprob: -6.961700916290283
    8. '@
' → logprob: -7.586700916290283
    9. 'n' → logprob: -7.836700916290283
    10. 'cache' → logprob: -7.961700916290283

Token 50: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.0653516873717308
    2. 'return' → logprob: -4.065351486206055
    3. 'res' → logprob: -4.190351486206055
    4. 'result' → logprob: -4.440351486206055
    5. 'dp' → logprob: -4.565351486206055
    6. 'if' → logprob: -5.440351486206055
    7. 'for' → logprob: -5.940351486206055
    8. 'cache' → logprob: -7.065351486206055
    9. 'ans' → logprob: -8.815351486206055
    10. '   ' → logprob: -9.565351486206055

Token 51: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.9361264946837764e-07
    2. ' l' → logprob: -17.0
    3. '@' → logprob: -17.625
    4. '```' → logprob: -17.75
    5. 'staticmethod' → logprob: -18.0
    6. 'lr' → logprob: -19.125
    7. '`' → logprob: -19.75
    8. 'r' → logprob: -19.875
    9. 'fun' → logprob: -20.375
    10. 'classmethod' → logprob: -20.375

Token 52: 'ru' (ID: 1942)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.051142413169145584
    2. 'r' → logprob: -3.426142454147339
    3. '_r' → logprob: -4.92614221572876
    4. 'ru' → logprob: -5.42614221572876
    5. '_' → logprob: -6.17614221572876
    6. '_cached' → logprob: -6.17614221572876
    7. '@' → logprob: -7.17614221572876
    8. 'cache' → logprob: -8.051142692565918
    9. '_c' → logprob: -9.176142692565918
    10. '_ru' → logprob: -9.426142692565918

Token 53: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -9.436450636712834e-05
    2. '_cached' → logprob: -9.750094413757324
    3. '_' → logprob: -10.875094413757324
    4. ' _' → logprob: -11.500094413757324
    5. '_c' → logprob: -12.500094413757324
    6. 'cache' → logprob: -13.875094413757324
    7. '_cash' → logprob: -14.875094413757324
    8. '```' → logprob: -15.375094413757324
    9. 'Cache' → logprob: -15.750094413757324
    10. '_ca' → logprob: -15.875094413757324

Token 54: '(max' (ID: 17178)
  Prédit: '(None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.04108408838510513
    2. 'def' → logprob: -3.541084051132202
    3. '(' → logprob: -4.916084289550781
    4. 'None' → logprob: -6.791084289550781
    5. '(def' → logprob: -6.791084289550781
    6. ' def' → logprob: -7.291084289550781
    7. '(max' → logprob: -8.041084289550781
    8. '()' → logprob: -8.666084289550781
    9. '(lambda' → logprob: -9.416084289550781
    10. '(True' → logprob: -9.666084289550781

Token 55: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.14359956979751587
    2. '_size' → logprob: -2.518599510192871
    3. '=None' → logprob: -3.018599510192871
    4. '_cache' → logprob: -6.393599510192871
    5. '=' → logprob: -6.643599510192871
    6. '(None' → logprob: -7.768599510192871
    7. ')' → logprob: -8.393599510192871
    8. '_none' → logprob: -8.518599510192871
    9. 'None' → logprob: -8.643599510192871
    10. '=size' → logprob: -9.768599510192871

Token 56: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.011048882268369198
    2. '=' → logprob: -4.511048793792725
    3. '=N' → logprob: -14.761049270629883
    4. 'None' → logprob: -15.011049270629883
    5. ' None' → logprob: -16.886049270629883
    6. '=NULL' → logprob: -16.886049270629883
    7. '=True' → logprob: -16.886049270629883
    8. ')=' → logprob: -17.011049270629883
    9. '=

' → logprob: -17.011049270629883
    10. '=-' → logprob: -17.136049270629883

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001359997782856226
    2. ')
' → logprob: -6.626359939575195
    3. 'def' → logprob: -11.251359939575195
    4. '   ' → logprob: -12.001359939575195
    5. ')`' → logprob: -12.376359939575195
    6. '`)' → logprob: -13.251359939575195
    7. '):' → logprob: -13.376359939575195
    8. ' )' → logprob: -13.501359939575195
    9. '):
' → logprob: -13.751359939575195
    10. ')
' → logprob: -14.626359939575195

Token 58: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006553847808390856
    2. '   ' → logprob: -5.756553649902344
    3. ' def' → logprob: -6.381553649902344
    4. '<|end|>' → logprob: -7.006553649902344
    5. '
' → logprob: -7.256553649902344
    6. '<|end|>' → logprob: -10.506553649902344
    7. ':def' → logprob: -11.381553649902344
    8. '	def' → logprob: -12.006553649902344
    9. ' ' → logprob: -12.256553649902344
    10. '\' → logprob: -12.631553649902344

Token 59: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005948548787273467
    2. '
' → logprob: -7.5005950927734375
    3. ' def' → logprob: -10.125595092773438
    4. '\' → logprob: -14.500595092773438
    5. ':def' → logprob: -15.250595092773438
    6. '0' → logprob: -15.500595092773438
    7. '    
' → logprob: -15.625595092773438
    8. '<|end|>' → logprob: -15.875595092773438
    9. '   ' → logprob: -16.375595092773438
    10. 'de' → logprob: -16.500595092773438

Token 60: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4230886697769165
    2. 'dfs' → logprob: -1.9230886697769165
    3. 'comb' → logprob: -2.298088550567627
    4. 'count' → logprob: -3.548088550567627
    5. ' dfs' → logprob: -3.798088550567627
    6. ' dp' → logprob: -4.173088550567627
    7. ' comb' → logprob: -4.673088550567627
    8. 'bin' → logprob: -5.298088550567627
    9. ' count' → logprob: -5.673088550567627
    10. 'ways' → logprob: -5.673088550567627

Token 61: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.003292021108791232
    2. '(' → logprob: -6.878292083740234
    3. '(x' → logprob: -7.253292083740234
    4. '(pos' → logprob: -7.628292083740234
    5. '(idx' → logprob: -7.753292083740234
    6. '(index' → logprob: -8.503292083740234
    7. '(n' → logprob: -8.628292083740234
    8. '(s' → logprob: -9.753292083740234
    9. '(depth' → logprob: -9.753292083740234
    10. '(m' → logprob: -10.378292083740234

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011926100123673677
    2. ' ,' → logprob: -6.751192569732666
    3. ',n' → logprob: -11.376193046569824
    4. ',i' → logprob: -12.876193046569824
    5. ')' → logprob: -13.251193046569824
    6. ',j' → logprob: -13.251193046569824
    7. ',k' → logprob: -13.626193046569824
    8. '‌,' → logprob: -14.126193046569824
    9. ',int' → logprob: -15.126193046569824
    10. '):' → logprob: -15.376193046569824

Token 63: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20762395858764648
    2. 's' → logprob: -3.4576239585876465
    3. 'balance' → logprob: -3.5826239585876465
    4. ' j' → logprob: -3.7076239585876465
    5. 'sum' → logprob: -4.5826239585876465
    6. 'a' → logprob: -4.9576239585876465
    7. 'diff' → logprob: -4.9576239585876465
    8. 'open' → logprob: -5.3326239585876465
    9. 'used' → logprob: -5.4576239585876465
    10. 'rem' → logprob: -5.4576239585876465

Token 64: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00048596507986076176
    2. '):
' → logprob: -8.375486373901367
    3. ',' → logprob: -8.500486373901367
    4. ':' → logprob: -10.250486373901367
    5. ')' → logprob: -11.500486373901367
    6. ' ):' → logprob: -12.750486373901367
    7. '):
' → logprob: -13.125486373901367
    8. '   ' → logprob: -14.875486373901367
    9. '):

' → logprob: -15.125486373901367
    10. '=' → logprob: -16.375486373901367

Token 65: ' s' (ID: 265)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -2.2127764225006104
    2. 't' → logprob: -2.7127764225006104
    3. 'm' → logprob: -2.8377764225006104
    4. ' s' → logprob: -2.9627764225006104
    5. ')' → logprob: -3.0877764225006104
    6. ' ' → logprob: -3.0877764225006104
    7. ' m' → logprob: -3.3377764225006104
    8. 'l' → logprob: -3.3377764225006104
    9. ' l' → logprob: -3.4627764225006104
    10. ' is' → logprob: -3.4627764225006104

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009068199433386326
    2. ',' → logprob: -5.009068012237549
    3. 'um' → logprob: -7.009068012237549
    4. '):
' → logprob: -7.134068012237549
    5. ')' → logprob: -8.384068489074707
    6. '):
' → logprob: -9.259068489074707
    7. 'u' → logprob: -10.134068489074707
    8. 't' → logprob: -10.134068489074707
    9. '):

' → logprob: -10.134068489074707
    10. '=' → logprob: -10.259068489074707

Token 67: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04372631385922432
    2. '):' → logprob: -3.1687262058258057
    3. '       ' → logprob: -8.168725967407227
    4. '   ' → logprob: -9.043725967407227
    5. ':return' → logprob: -9.168725967407227
    6. ')' → logprob: -9.668725967407227
    7. '<|end|>' → logprob: -10.043725967407227
    8. ' :' → logprob: -10.668725967407227
    9. '#:' → logprob: -11.168725967407227
    10. '():' → logprob: -11.418725967407227

Token 68: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09927092492580414
    2. '):' → logprob: -2.599270820617676
    3. 'if' (adapté à ' if') → logprob: -4.099270820617676
    4. ')' → logprob: -6.224270820617676
    5. ' if' → logprob: -7.099270820617676
    6. '   ' → logprob: -8.349270820617676
    7. ',' → logprob: -9.224270820617676
    8. '       ' → logprob: -9.349270820617676
    9. '#:' → logprob: -9.474270820617676
    10. ' :' → logprob: -9.974270820617676

Token 69: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3885699212551117
    2. 'i' → logprob: -1.138569951057434
    3. ' s' → logprob: -7.3885698318481445
    4. ' j' → logprob: -7.5135698318481445
    5. 's' → logprob: -8.263569831848145
    6. 'j' → logprob: -8.388569831848145
    7. ' ' → logprob: -10.763569831848145
    8. ' (' → logprob: -11.513569831848145
    9. '(i' → logprob: -12.138569831848145
    10. '	i' → logprob: -13.013569831848145

Token 70: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6327678561210632
    2. ' ==' → logprob: -0.7577678561210632
    3. '=' → logprob: -9.757767677307129
    4. '>' → logprob: -10.257767677307129
    5. ' >' → logprob: -10.632767677307129
    6. '>=' → logprob: -11.257767677307129
    7. '<|end|>' → logprob: -11.757767677307129
    8. ')' → logprob: -12.007767677307129
    9. ' >=' → logprob: -12.257767677307129
    10. '0' → logprob: -12.757767677307129

Token 71: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.165837049484253
    2. 'half' → logprob: -1.165837049484253
    3. ' n' → logprob: -1.915837049484253
    4. '0' → logprob: -2.040837049484253
    5. ' half' → logprob: -2.790837049484253
    6. 'j' → logprob: -3.915837049484253
    7. ' ' → logprob: -4.915837287902832
    8. ' j' → logprob: -5.290837287902832
    9. 'k' → logprob: -6.415837287902832
    10. 's' → logprob: -6.915837287902832

Token 72: '0' (ID: 15)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.33671075105667114
    2. 'n' → logprob: -1.4617106914520264
    3. '0' → logprob: -3.0867106914520264
    4. 'j' → logprob: -5.4617109298706055
    5. ' half' → logprob: -6.7117109298706055
    6. 's' → logprob: -7.3367109298706055
    7. 'k' → logprob: -7.5867109298706055
    8. 'len' → logprob: -7.9617109298706055
    9. ' n' → logprob: -7.9617109298706055
    10. '1' → logprob: -8.336710929870605

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04921184107661247
    2. ' and' → logprob: -3.2992117404937744
    3. ':
' → logprob: -4.9242119789123535
    4. 'and' → logprob: -5.9242119789123535
    5. ':return' → logprob: -6.9242119789123535
    6. '   ' → logprob: -9.424211502075195
    7. '):' → logprob: -10.674211502075195
    8. '<|end|>' → logprob: -10.924211502075195
    9. ' :' → logprob: -11.299211502075195
    10. '       ' → logprob: -11.424211502075195

Token 74: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.072995662689209
    2. '           ' → logprob: -1.322995662689209
    3. ' return' → logprob: -1.697995662689209
    4. '       ' → logprob: -1.822995662689209
    5. ':return' → logprob: -3.322995662689209
    6. '   ' → logprob: -5.322995662689209
    7. ':' → logprob: -6.072995662689209
    8. ' if' → logprob: -6.322995662689209
    9. '0' → logprob: -7.572995662689209
    10. '<|end|>' → logprob: -7.822995662689209

Token 75: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6420549750328064
    2. ' return' → logprob: -0.7670549750328064
    3. '       ' → logprob: -4.892055034637451
    4. '           ' → logprob: -7.017055034637451
    5. ' if' → logprob: -8.267054557800293
    6. '<|end|>' → logprob: -8.392054557800293
    7. '   ' → logprob: -8.767054557800293
    8. 'if' → logprob: -9.142054557800293
    9. ':return' → logprob: -9.142054557800293
    10. '               ' → logprob: -10.142054557800293

Token 76: ' int' (ID: 677)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023426106199622154
    2. 'int' → logprob: -4.023426055908203
    3. ' ' → logprob: -6.398426055908203
    4. ' int' → logprob: -6.523426055908203
    5. '0' → logprob: -6.898426055908203
    6. 's' → logprob: -7.148426055908203
    7. '(' → logprob: -8.648426055908203
    8. '(int' → logprob: -9.398426055908203
    9. '{' → logprob: -11.273426055908203
    10. ' s' → logprob: -11.273426055908203

Token 77: '(j' (ID: 4997)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.04043424502015114
    2. '(j' → logprob: -3.2904343605041504
    3. '(' → logprob: -6.41543436050415
    4. '(abs' → logprob: -8.290433883666992
    5. '(i' → logprob: -8.415433883666992
    6. '(not' → logprob: -8.790433883666992
    7. '((' → logprob: -9.790433883666992
    8. 's' → logprob: -9.915433883666992
    9. 'j' → logprob: -11.540433883666992
    10. '(a' → logprob: -13.415433883666992

Token 78: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.42920833826065063
    2. ' ==' → logprob: -1.0542082786560059
    3. ')' → logprob: -8.804208755493164
    4. '<=' → logprob: -9.054208755493164
    5. '>=' → logprob: -9.554208755493164
    6. ' <=' → logprob: -9.929208755493164
    7. ' >=' → logprob: -10.179208755493164
    8. ' ' → logprob: -10.929208755493164
    9. '%' → logprob: -10.929208755493164
    10. '[' → logprob: -11.679208755493164

Token 79: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06861679255962372
    2. ' ' → logprob: -3.4436168670654297
    3. 's' → logprob: -3.5686168670654297
    4. 'half' → logprob: -5.81861686706543
    5. ' s' → logprob: -6.19361686706543
    6. ' half' → logprob: -7.44361686706543
    7. 'n' → logprob: -8.44361686706543
    8. '1' → logprob: -9.19361686706543
    9. 'k' → logprob: -9.94361686706543
    10. ' n' → logprob: -10.00611686706543

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06608430296182632
    2. 's' → logprob: -2.941084384918213
    3. 'half' → logprob: -5.066084384918213
    4. ' ' → logprob: -5.691084384918213
    5. 'n' → logprob: -7.441084384918213
    6. ' s' → logprob: -8.191083908081055
    7. ' half' → logprob: -9.066083908081055
    8. ')' → logprob: -9.066083908081055
    9. 'k' → logprob: -9.441083908081055
    10. '1' → logprob: -9.628583908081055

Token 81: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.40115246176719666
    2. ')' → logprob: -1.151152491569519
    3. 'and' → logprob: -4.276152610778809
    4. '       ' → logprob: -8.776152610778809
    5. ')
' → logprob: -9.651152610778809
    6. '   ' → logprob: -10.526152610778809
    7. ' )' → logprob: -11.151152610778809
    8. '),' → logprob: -12.026152610778809
    9. ' or' → logprob: -12.151152610778809
    10. '<|end|>' → logprob: -12.776152610778809

Token 82: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1275993436574936
    2. ' s' → logprob: -2.1275992393493652
    3. '(s' → logprob: -8.002599716186523
    4. ' (' → logprob: -9.252599716186523
    5. '0' → logprob: -9.877599716186523
    6. ' ' → logprob: -10.252599716186523
    7. '   ' → logprob: -10.377599716186523
    8. '(' → logprob: -10.752599716186523
    9. ' not' → logprob: -10.877599716186523
    10. 'not' → logprob: -11.252599716186523

Token 83: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11520305275917053
    2. '==' → logprob: -2.2402031421661377
    3. ' %' → logprob: -6.490202903747559
    4. '%' → logprob: -7.490202903747559
    5. ')' → logprob: -8.990202903747559
    6. ' <=' → logprob: -9.490202903747559
    7. ' ' → logprob: -10.240202903747559
    8. ' >=' → logprob: -10.990202903747559
    9. '<=' → logprob: -11.365202903747559
    10. '[' → logprob: -11.865202903747559

Token 84: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008087190799415112
    2. ' ' → logprob: -4.883087158203125
    3. '1' → logprob: -8.133087158203125
    4. ')' → logprob: -9.633087158203125
    5. 'half' → logprob: -10.133087158203125
    6. 'n' → logprob: -10.633087158203125
    7. '(' → logprob: -10.883087158203125
    8. ' half' → logprob: -11.633087158203125
    9. '   ' → logprob: -12.008087158203125
    10. ' (' → logprob: -12.508087158203125

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0057314676232635975
    2. ' ' → logprob: -5.380731582641602
    3. 'half' → logprob: -7.755731582641602
    4. '1' → logprob: -8.130731582641602
    5. 'n' → logprob: -8.630731582641602
    6. ')' → logprob: -9.630731582641602
    7. ' half' → logprob: -10.568231582641602
    8. '(' → logprob: -10.630731582641602
    9. ' n' → logprob: -11.443231582641602
    10. 'k' → logprob: -11.568231582641602

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003502669045701623
    2. '       ' → logprob: -6.25350284576416
    3. ')
' → logprob: -6.50350284576416
    4. '   ' → logprob: -9.87850284576416
    5. ')
' → logprob: -11.87850284576416
    6. ' )' → logprob: -12.50350284576416
    7. ')

' → logprob: -12.50350284576416
    8. '),' → logprob: -13.25350284576416
    9. ' and' → logprob: -13.37850284576416
    10. '           ' → logprob: -13.75350284576416

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5147820711135864
    2. '
' → logprob: -1.0147820711135864
    3. '<|end|>' → logprob: -4.014781951904297
    4. '   ' → logprob: -4.389781951904297
    5. '\n' → logprob: -5.389781951904297
    6. '        
' → logprob: -6.764781951904297
    7. '    
' → logprob: -7.014781951904297
    8. '
' → logprob: -7.639781951904297
    9. ')' → logprob: -8.014781951904297
    10. 's' → logprob: -8.264781951904297

Token 88: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5818674564361572
    2. 'res' → logprob: -0.9568674564361572
    3. '       ' → logprob: -3.8318674564361572
    4. ' if' → logprob: -4.331867218017578
    5. 'result' → logprob: -4.831867218017578
    6. ' res' → logprob: -5.081867218017578
    7. '   ' → logprob: -5.331867218017578
    8. 'ans' → logprob: -7.081867218017578
    9. 'r' → logprob: -7.206867218017578
    10. 'return' → logprob: -7.956867218017578

Token 89: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.21582584083080292
    2. ' j' → logprob: -2.2158257961273193
    3. 'i' → logprob: -2.8408257961273193
    4. ' i' → logprob: -4.215826034545898
    5. 's' → logprob: -4.840826034545898
    6. ' s' → logprob: -6.465826034545898
    7. '   ' → logprob: -6.840826034545898
    8. ' ' → logprob: -8.090826034545898
    9. ' not' → logprob: -8.590826034545898
    10. 'dp' → logprob: -8.965826034545898

Token 90: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9090710282325745
    2. ' <' → logprob: -1.2840709686279297
    3. '<' → logprob: -1.6590709686279297
    4. '>' → logprob: -2.4090709686279297
    5. ' ==' → logprob: -3.7840709686279297
    6. '==' → logprob: -4.78407096862793
    7. '0' → logprob: -5.15907096862793
    8. ' ' → logprob: -6.03407096862793
    9. '<|end|>' → logprob: -8.15907096862793
    10. '   ' → logprob: -9.53407096862793

Token 91: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4981606602668762
    2. 'i' → logprob: -1.2481606006622314
    3. ' half' → logprob: -2.7481606006622314
    4. ' ' → logprob: -4.1231608390808105
    5. '0' → logprob: -4.4981608390808105
    6. 'half' → logprob: -4.7481608390808105
    7. ' s' → logprob: -5.4981608390808105
    8. 's' → logprob: -7.1231608390808105
    9. ' n' → logprob: -9.623160362243652
    10. '   ' → logprob: -9.935660362243652

Token 92: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08777521550655365
    2. '       ' → logprob: -2.962775230407715
    3. ':' → logprob: -4.212775230407715
    4. 'or' → logprob: -4.212775230407715
    5. ':return' → logprob: -6.962775230407715
    6. '           ' → logprob: -7.462775230407715
    7. '   ' → logprob: -7.712775230407715
    8. ':
' → logprob: -8.087775230407715
    9. ' ' → logprob: -8.462775230407715
    10. 'return' → logprob: -9.837775230407715

Token 93: ' s' (ID: 265)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.18911594152450562
    2. ' s' → logprob: -2.1891160011291504
    3. 'j' → logprob: -3.0641160011291504
    4. 's' → logprob: -4.43911600112915
    5. ' abs' → logprob: -7.81411600112915
    6. ' ' → logprob: -8.064115524291992
    7. ' i' → logprob: -8.126615524291992
    8. ' ' → logprob: -9.001615524291992
    9. ' k' → logprob: -9.314115524291992
    10. 'abs' → logprob: -9.439115524291992

Token 94: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20161154866218567
    2. ' >' → logprob: -2.2016115188598633
    3. '<' → logprob: -2.7016115188598633
    4. '>' → logprob: -5.451611518859863
    5. ' ' → logprob: -8.326611518859863
    6. ' <=' → logprob: -9.451611518859863
    7. '<|end|>' → logprob: -9.701611518859863
    8. ' >=' → logprob: -10.451611518859863
    9. '   ' → logprob: -10.701611518859863
    10. ')' → logprob: -10.701611518859863

Token 95: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004724414553493261
    2. ' ' → logprob: -5.379724502563477
    3. '-' → logprob: -9.504724502563477
    4. 'j' → logprob: -11.629724502563477
    5. ' -' → logprob: -12.004724502563477
    6. '   ' → logprob: -12.879724502563477
    7. 'i' → logprob: -12.879724502563477
    8. '1' → logprob: -13.254724502563477
    9. ' (' → logprob: -13.629724502563477
    10. '-i' → logprob: -13.754724502563477

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003013119101524353
    2. ' ' → logprob: -6.2530131340026855
    3. '-' → logprob: -7.0030131340026855
    4. 'i' → logprob: -10.128012657165527
    5. 'j' → logprob: -10.128012657165527
    6. ' -' → logprob: -10.378012657165527
    7. '-i' → logprob: -10.378012657165527
    8. '1' → logprob: -12.565512657165527
    9. '   ' → logprob: -12.565512657165527
    10. '-j' → logprob: -12.940512657165527

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03132633492350578
    2. ':
' → logprob: -3.6563262939453125
    3. ' or' → logprob: -6.1563262939453125
    4. '       ' → logprob: -6.2813262939453125
    5. '   ' → logprob: -7.4063262939453125
    6. ':return' → logprob: -8.406326293945312
    7. '):
' → logprob: -9.406326293945312
    8. '):' → logprob: -9.906326293945312
    9. ',' → logprob: -10.781326293945312
    10. ')' → logprob: -11.031326293945312

Token 98: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26172828674316406
    2. '           ' → logprob: -1.636728286743164
    3. '   ' → logprob: -3.511728286743164
    4. 'return' → logprob: -5.761728286743164
    5. ' return' → logprob: -6.011728286743164
    6. '```' → logprob: -8.636728286743164
    7. ' ' → logprob: -11.136728286743164
    8. '<|end|>' → logprob: -11.511728286743164
    9. '               ' → logprob: -12.136728286743164
    10. '{return' → logprob: -12.886728286743164

Token 99: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015220950357615948
    2. '       ' → logprob: -4.515221118927002
    3. ' return' → logprob: -6.015221118927002
    4. '           ' → logprob: -6.765221118927002
    5. '0' → logprob: -7.640221118927002
    6. '   ' → logprob: -9.515220642089844
    7. '	return' → logprob: -11.640220642089844
    8. '```' → logprob: -13.140220642089844
    9. '{return' → logprob: -13.515220642089844
    10. ' ' → logprob: -13.515220642089844

Token 100: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013261953135952353
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -15.751326560974121
    4. '  ' → logprob: -17.626325607299805
    5. '       ' → logprob: -17.876325607299805
    6. '۰' → logprob: -18.501325607299805
    7. '           ' → logprob: -18.626325607299805
    8. '000' → logprob: -19.251325607299805
    9. ' ' → logprob: -19.251325607299805
    10. '     ' → logprob: -19.626325607299805

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.625001907348633
    4. '```' → logprob: -18.750001907348633
    5. '۰' → logprob: -19.125001907348633
    6. '000' → logprob: -20.000001907348633
    7. 'return' → logprob: -20.125001907348633
    8. '  ' → logprob: -21.000001907348633
    9. '00' → logprob: -21.500001907348633
    10. '  ' → logprob: -22.187501907348633

Token 102: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1468295454978943
    2. '   ' → logprob: -2.396829605102539
    3. '<|end|>' → logprob: -3.271829605102539
    4. '
' → logprob: -5.521829605102539
    5. '```' → logprob: -6.896829605102539
    6. '<|end|>' → logprob: -7.146829605102539
    7. '    
' → logprob: -7.396829605102539
    8. '\n' → logprob: -7.646829605102539
    9. '        
' → logprob: -8.521829605102539
    10. ')' → logprob: -9.146829605102539

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18253114819526672
    2. '   ' → logprob: -1.8075311183929443
    3. '<|end|>' → logprob: -7.307531356811523
    4. '```' → logprob: -7.432531356811523
    5. '
' → logprob: -7.557531356811523
    6. '    
' → logprob: -7.682531356811523
    7. '        
' → logprob: -8.432531356811523
    8. 'n' → logprob: -9.057531356811523
    9. 'result' → logprob: -10.182531356811523
    10. 'return' → logprob: -10.557531356811523

Token 104: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.40264031291007996
    2. '       ' → logprob: -1.2776403427124023
    3. 'return' → logprob: -3.0276403427124023
    4. '   ' → logprob: -5.902640342712402
    5. ' res' → logprob: -7.527640342712402
    6. 'result' → logprob: -8.027640342712402
    7. 'r' → logprob: -8.652640342712402
    8. '
' → logprob: -9.527640342712402
    9. ' return' → logprob: -9.527640342712402
    10. 'ans' → logprob: -9.777640342712402

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002175584435463
    2. '=' → logprob: -2.350217580795288
    3. ' +=' → logprob: -12.225217819213867
    4. ' ' → logprob: -12.350217819213867
    5. '   ' → logprob: -13.975217819213867
    6. '    ' → logprob: -15.475217819213867
    7. ' ' → logprob: -16.100217819213867
    8. '+=' → logprob: -16.350217819213867
    9. '       ' → logprob: -16.350217819213867
    10. '  ' → logprob: -16.475217819213867

Token 106: ' ' (ID: 220)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.3316366672515869
    2. ' (' → logprob: -1.956636667251587
    3. 'dp' → logprob: -2.206636667251587
    4. ' dp' → logprob: -3.831636667251587
    5. '0' → logprob: -5.206636428833008
    6. '(' → logprob: -6.206636428833008
    7. '       ' → logprob: -6.956636428833008
    8. '   ' → logprob: -8.081636428833008
    9. ' ' → logprob: -8.706636428833008
    10. '(
' → logprob: -9.331636428833008

Token 107: '0' (ID: 15)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.20505252480506897
    2. 'dp' → logprob: -1.7050524950027466
    3. '(' → logprob: -6.705052375793457
    4. ' dp' → logprob: -6.830052375793457
    5. ' (' → logprob: -7.580052375793457
    6. '0' → logprob: -7.580052375793457
    7. '(
' → logprob: -8.455052375793457
    8. '((' → logprob: -10.705052375793457
    9. '   ' → logprob: -11.205052375793457
    10. '	dp' → logprob: -11.517552375793457

Token 108: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3141992688179016
    2. '       ' → logprob: -1.4391992092132568
    3. '<|end|>' → logprob: -4.064199447631836
    4. '   ' → logprob: -4.939199447631836
    5. '    
' → logprob: -6.064199447631836
    6. '        
' → logprob: -6.439199447631836
    7. '
' → logprob: -6.564199447631836
    8. '\n' → logprob: -7.564199447631836
    9. '<|end|>' → logprob: -7.689199447631836
    10. ' 
' → logprob: -7.814199447631836

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14263379573822021
    2. ' for' → logprob: -2.8926339149475098
    3. 'for' → logprob: -3.3926339149475098
    4. '   ' → logprob: -3.8926339149475098
    5. '<|end|>' → logprob: -3.8926339149475098
    6. '
' → logprob: -6.51763391494751
    7. '	for' → logprob: -7.39263391494751
    8. '<|end|>' → logprob: -7.89263391494751
    9. '        
' → logprob: -9.017633438110352
    10. '```' → logprob: -9.267633438110352

Token 110: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12707529962062836
    2. 'res' → logprob: -2.3770751953125
    3. '       ' → logprob: -4.2520751953125
    4. ' for' → logprob: -4.5020751953125
    5. ' res' → logprob: -7.1270751953125
    6. '   ' → logprob: -8.0020751953125
    7. 'if' → logprob: -10.3770751953125
    8. '	for' → logprob: -12.7520751953125
    9. '
' → logprob: -13.0020751953125
    10. '```' → logprob: -13.1270751953125

Token 111: ' ' (ID: 220)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5231267213821411
    2. ' res' → logprob: -1.2731267213821411
    3. 'for' → logprob: -2.8981266021728516
    4. ' for' → logprob: -3.0231266021728516
    5. '       ' → logprob: -3.7731266021728516
    6. '   ' → logprob: -7.773126602172852
    7. ' ' → logprob: -10.398126602172852
    8. '
' → logprob: -10.898126602172852
    9. '    ' → logprob: -11.023126602172852
    10. 'if' → logprob: -11.023126602172852

Token 112: '片' (ID: 4810)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6932780742645264
    2. 'for' → logprob: -0.6932780742645264
    3. '#' → logprob: -9.193278312683105
    4. '       ' → logprob: -11.818278312683105
    5. 'if' → logprob: -12.193278312683105
    6. '   ' → logprob: -12.318278312683105
    7. 'return' → logprob: -12.943278312683105
    8. ' res' → logprob: -12.943278312683105
    9. ' for' → logprob: -13.193278312683105
    10. '```' → logprob: -14.068278312683105

Token 113: '側' (ID: 196011)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09144191443920135
    2. '=' → logprob: -3.8414418697357178
    3. '[' → logprob: -4.591442108154297
    4. 'w' → logprob: -4.841442108154297
    5. '段' → logprob: -4.841442108154297
    6. '           ' → logprob: -5.216442108154297
    7. 's' → logprob: -5.216442108154297
    8. 'for' → logprob: -5.591442108154297
    9. 'wise' → logprob: -5.591442108154297
    10. '      ' → logprob: -5.716442108154297

Token 114: '、' (ID: 1395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046085938811302185
    2. 'for' → logprob: -4.046085834503174
    3. ' for' → logprob: -4.421085834503174
    4. '=' → logprob: -5.546085834503174
    5. '   ' → logprob: -5.546085834503174
    6. ' =' → logprob: -5.796085834503174
    7. 'res' → logprob: -6.796085834503174
    8. '    ' → logprob: -7.671085834503174
    9. 'の' → logprob: -7.921085834503174
    10. 'で' → logprob: -7.921085834503174

Token 115: '水平' (ID: 102161)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.09463564306497574
    2. 'for' → logprob: -2.5946357250213623
    3. '       ' → logprob: -4.969635486602783
    4. ' res' → logprob: -5.344635486602783
    5. '#' → logprob: -6.219635486602783
    6. ' for' → logprob: -7.344635486602783
    7. '   ' → logprob: -7.969635486602783
    8. 'dp' → logprob: -8.469635963439941
    9. 'の' → logprob: -8.969635963439941
    10. 's' → logprob: -8.969635963439941

Token 116: '、' (ID: 1395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7049659490585327
    2. '   ' → logprob: -2.3299660682678223
    3. 'for' → logprob: -2.4549660682678223
    4. '=' → logprob: -2.5799660682678223
    5. ')' → logprob: -2.5799660682678223
    6. '+' → logprob: -2.7049660682678223
    7. 'res' → logprob: -3.0799660682678223
    8. '<|end|>' → logprob: -3.2049660682678223
    9. ' =' → logprob: -3.3299660682678223
    10. 'or' → logprob: -3.5799660682678223

Token 117: '�' (ID: 624)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9064183235168457
    2. 'vertical' → logprob: -1.1564183235168457
    3. 'res' → logprob: -2.4064183235168457
    4. 'for' → logprob: -3.1564183235168457
    5. '\xe7\xb8' → logprob: -3.7814183235168457
    6. '1' → logprob: -4.031418323516846
    7. '\xe6\x96' → logprob: -4.281418323516846
    8. ' res' → logprob: -4.406418323516846
    9. '\xe5\x9e' → logprob: -4.781418323516846
    10. '0' → logprob: -4.781418323516846

Token 118: '�' (ID: 94)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\x96' → logprob: -1.576149582862854
    2. '\xe5\x9e' → logprob: -1.951149582862854
    3. 'dp' → logprob: -2.2011494636535645
    4. '   ' → logprob: -2.7011494636535645
    5. '       ' → logprob: -2.8261494636535645
    6. '```' → logprob: -2.8261494636535645
    7. '\xe7\xb8' → logprob: -2.9511494636535645
    8. '`' → logprob: -3.0761494636535645
    9. '直' → logprob: -4.3261494636535645
    10. '#' → logprob: -4.3261494636535645

Token 119: '方' (ID: 4983)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.1273181438446045
    2. '   ' → logprob: -2.3773181438446045
    3. '\xe5\x9e' → logprob: -2.6273181438446045
    4. 's' → logprob: -2.7523181438446045
    5. '\xe6\x96' → logprob: -2.7523181438446045
    6. 'dp' → logprob: -3.0023181438446045
    7. '\xe7\xb8' → logprob: -3.1273181438446045
    8. 'd' → logprob: -3.1273181438446045
    9. '       ' → logprob: -3.2523181438446045
    10. 'res' → logprob: -3.5023181438446045

Token 120: '上' (ID: 4286)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1403542011976242
    2. '=' → logprob: -3.1403541564941406
    3. ' for' → logprob: -4.765354156494141
    4. ',' → logprob: -4.765354156494141
    5. 'a' → logprob: -5.015354156494141
    6. 'res' → logprob: -5.265354156494141
    7. '+' → logprob: -5.390354156494141
    8. 'f' → logprob: -5.640354156494141
    9. 'vertical' → logprob: -5.640354156494141
    10. 's' → logprob: -5.640354156494141

Token 121: '
' (ID: 198)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'down' → logprob: -1.1169142723083496
    2. '下' → logprob: -2.2419142723083496
    3. ',' → logprob: -2.4919142723083496
    4. 'or' → logprob: -2.8669142723083496
    5. '、' → logprob: -2.9919142723083496
    6. 'り' → logprob: -3.4919142723083496
    7. '=' → logprob: -3.6169142723083496
    8. '```' → logprob: -3.7419142723083496
    9. 'res' → logprob: -3.9919142723083496
    10. '+' → logprob: -3.9919142723083496

Token 122: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.027701735496521
    2. 'down' → logprob: -1.777701735496521
    3. 'res' → logprob: -2.5277018547058105
    4. '=' → logprob: -3.1527018547058105
    5. 'dp' → logprob: -3.2777018547058105
    6. '+' → logprob: -3.4027018547058105
    7. '       ' → logprob: -3.5277018547058105
    8. 'or' → logprob: -3.6527018547058105
    9. ' res' → logprob: -4.5277018547058105
    10. '   ' → logprob: -4.5277018547058105

Token 123: ' res' (ID: 694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38491198420524597
    2. 'res' (adapté à ' res') → logprob: -1.3849120140075684
    3. 'dp' → logprob: -3.7599120140075684
    4. '   ' → logprob: -4.134912014007568
    5. ' for' → logprob: -4.759912014007568
    6. ' res' → logprob: -4.884912014007568
    7. '       ' → logprob: -4.884912014007568
    8. 'return' → logprob: -6.259912014007568
    9. 's' → logprob: -7.009912014007568
    10. '
' → logprob: -8.25991153717041

Token 124: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.35769185423851013
    2. ' +=' → logprob: -1.2326918840408325
    3. '=' → logprob: -4.732691764831543
    4. ' =' → logprob: -8.482691764831543
    5. '+' → logprob: -8.982691764831543
    6. ']+=' → logprob: -10.232691764831543
    7. ')' → logprob: -11.857691764831543
    8. '+=(' → logprob: -12.107691764831543
    9. '```' → logprob: -12.482691764831543
    10. '+='' → logprob: -12.607691764831543

Token 125: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05555190518498421
    2. ' dp' → logprob: -2.9305520057678223
    3. '(dp' → logprob: -7.555552005767822
    4. '       ' → logprob: -10.555551528930664
    5. '	dp' → logprob: -10.555551528930664
    6. '2' → logprob: -11.055551528930664
    7. '(' → logprob: -11.180551528930664
    8. '
' → logprob: -11.305551528930664
    9. 'j' → logprob: -11.430551528930664
    10. '   ' → logprob: -12.055551528930664

Token 126: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001965627772733569
    2. '2' → logprob: -7.001965522766113
    3. 'j' → logprob: -7.501965522766113
    4. '3' → logprob: -8.876965522766113
    5. ' dp' → logprob: -9.251965522766113
    6. 'i' → logprob: -9.751965522766113
    7. 'k' → logprob: -10.376965522766113
    8. '(' → logprob: -10.501965522766113
    9. '(dp' → logprob: -10.501965522766113
    10. 's' → logprob: -10.751965522766113

Token 127: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.500000953674316
    3. ')(' → logprob: -16.875
    4. ' (' → logprob: -17.875
    5. '(n' → logprob: -18.25
    6. ')' → logprob: -18.375
    7. '(
' → logprob: -18.875
    8. '(I' → logprob: -19.375
    9. '(ii' → logprob: -20.875
    10. '((' → logprob: -20.875

Token 128: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.027754055336117744
    2. ' -' → logprob: -3.652754068374634
    3. ',' → logprob: -7.027753829956055
    4. '(i' → logprob: -8.402753829956055
    5. '(' → logprob: -8.902753829956055
    6. ' ' → logprob: -9.652753829956055
    7. ' ,' → logprob: -10.027753829956055
    8. '   ' → logprob: -10.402753829956055
    9. '```' → logprob: -10.902753829956055
    10. '  ' → logprob: -11.527753829956055

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.069664333248511e-05
    2. ' ' → logprob: -11.375020980834961
    3. '```' → logprob: -12.750020980834961
    4. '   ' → logprob: -13.000020980834961
    5. '       ' → logprob: -13.500020980834961
    6. ',' → logprob: -14.375020980834961
    7. 'def' → logprob: -14.750020980834961
    8. 'from' → logprob: -15.562520980834961
    9. '
' → logprob: -15.812520980834961
    10. '           ' → logprob: -15.875020980834961

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01306635420769453
    2. ',j' → logprob: -4.513066291809082
    3. ' ,' → logprob: -6.263066291809082
    4. '(j' → logprob: -9.763066291809082
    5. '(' → logprob: -10.263066291809082
    6. ')' → logprob: -12.263066291809082
    7. '   ' → logprob: -13.013066291809082
    8. '```' → logprob: -13.263066291809082
    9. '       ' → logprob: -13.388066291809082
    10. ' ' → logprob: -13.513066291809082

Token 131: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02638007327914238
    2. ' j' → logprob: -3.6513800621032715
    3. '	j' → logprob: -10.40138053894043
    4. '   ' → logprob: -10.40138053894043
    5. ' ' → logprob: -11.52638053894043
    6. '  ' → logprob: -12.40138053894043
    7. ',j' → logprob: -13.40138053894043
    8. '    ' → logprob: -13.65138053894043
    9. '(j' → logprob: -14.77638053894043
    10. '```' → logprob: -15.15138053894043

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007675722241401672
    2. ' ,' → logprob: -5.132675647735596
    3. ',j' → logprob: -6.632675647735596
    4. '   ' → logprob: -8.382676124572754
    5. '-' → logprob: -9.007676124572754
    6. ' ' → logprob: -9.882676124572754
    7. '       ' → logprob: -12.007676124572754
    8. '  ' → logprob: -12.007676124572754
    9. ',k' → logprob: -12.632676124572754
    10. '	' → logprob: -13.257676124572754

Token 133: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009787020273506641
    2. ' s' → logprob: -4.634787082672119
    3. ' ' → logprob: -11.509786605834961
    4. '  ' → logprob: -12.259786605834961
    5. '   ' → logprob: -12.259786605834961
    6. '    ' → logprob: -12.759786605834961
    7. '     ' → logprob: -13.384786605834961
    8. '0' → logprob: -13.634786605834961
    9. '       ' → logprob: -13.884786605834961
    10. '           ' → logprob: -14.009786605834961

Token 134: '-j' (ID: 19720)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007104632444679737
    2. '   ' → logprob: -5.757104396820068
    3. ' )' → logprob: -6.257104396820068
    4. ' ' → logprob: -6.882104396820068
    5. '  ' → logprob: -7.507104396820068
    6. '+' → logprob: -9.507104873657227
    7. '))' → logprob: -9.507104873657227
    8. ')%' → logprob: -9.757104873657227
    9. ')+' → logprob: -9.882104873657227
    10. '    ' → logprob: -9.882104873657227

Token 135: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012549920938909054
    2. '))' → logprob: -7.751255035400391
    3. ')+' → logprob: -8.25125503540039
    4. ')
' → logprob: -8.25125503540039
    5. ')%' → logprob: -9.50125503540039
    6. ' )' → logprob: -9.50125503540039
    7. ')*' → logprob: -9.62625503540039
    8. '   ' → logprob: -9.87625503540039
    9. '+' → logprob: -11.62625503540039
    10. '```' → logprob: -12.00125503540039

Token 136: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6637203693389893
    2. '+' → logprob: -1.0387203693389893
    3. ')' → logprob: -2.0387203693389893
    4. ')
' → logprob: -7.66372013092041
    5. '<|end|>' → logprob: -9.53872013092041
    6. '+
' → logprob: -9.66372013092041
    7. '       ' → logprob: -9.78872013092041
    8. '   ' → logprob: -10.16372013092041
    9. ' +
' → logprob: -10.16372013092041
    10. '%' → logprob: -10.16372013092041

Token 137: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.26194626092910767
    2. '3' → logprob: -2.636946201324463
    3. '(' → logprob: -3.136946201324463
    4. '(n' → logprob: -3.136946201324463
    5. 'j' → logprob: -3.886946201324463
    6. '(i' → logprob: -3.886946201324463
    7. '(j' → logprob: -4.386946201324463
    8. 'i' → logprob: -4.886946201324463
    9. '1' → logprob: -6.261946201324463
    10. 'half' → logprob: -6.511946201324463

Token 138: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23947831988334656
    2. 'j' → logprob: -2.864478349685669
    3. '(n' → logprob: -2.989478349685669
    4. '(j' → logprob: -3.489478349685669
    5. 'i' → logprob: -3.864478349685669
    6. '(' → logprob: -3.989478349685669
    7. '(i' → logprob: -4.48947811126709
    8. '3' → logprob: -4.98947811126709
    9. 'half' → logprob: -5.48947811126709
    10. 'n' → logprob: -5.86447811126709

Token 139: ' *' (ID: 425)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3738803565502167
    2. ')' → logprob: -1.623880386352539
    3. '*j' → logprob: -2.873880386352539
    4. ' *' → logprob: -3.873880386352539
    5. '*' → logprob: -4.123880386352539
    6. ' +' → logprob: -5.498880386352539
    7. '+' → logprob: -5.498880386352539
    8. ' ))' → logprob: -5.873880386352539
    9. 'j' → logprob: -5.873880386352539
    10. '**' → logprob: -6.373880386352539

Token 140: ' j' (ID: 441)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.6269028186798096
    2. 'j' → logprob: -1.0019028186798096
    3. '(' → logprob: -3.1269028186798096
    4. 'half' → logprob: -3.6269028186798096
    5. '(i' → logprob: -3.8769028186798096
    6. 'i' → logprob: -5.3769025802612305
    7. '(s' → logprob: -6.8769025802612305
    8. ' (' → logprob: -8.12690258026123
    9. '(n' → logprob: -8.25190258026123
    10. ' j' → logprob: -8.62690258026123

Token 141: ' +' (ID: 659)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4038780629634857
    2. ')' → logprob: -1.153878092765808
    3. '+' → logprob: -4.403878211975098
    4. ')%' → logprob: -6.278878211975098
    5. '%' → logprob: -7.028878211975098
    6. ' ))' → logprob: -7.153878211975098
    7. ' )' → logprob: -7.403878211975098
    8. ' +' → logprob: -8.778878211975098
    9. ')))' → logprob: -9.278878211975098
    10. '-' → logprob: -10.403878211975098

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007759197615087032
    2. ' ' → logprob: -8.000776290893555
    3. '2' → logprob: -8.125776290893555
    4. '3' → logprob: -9.375776290893555
    5. '   ' → logprob: -11.375776290893555
    6. 'k' → logprob: -11.500776290893555
    7. '(' → logprob: -11.625776290893555
    8. '```' → logprob: -12.313276290893555
    9. 'j' → logprob: -13.063276290893555
    10. '           ' → logprob: -13.125776290893555

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004653465002775192
    2. '2' → logprob: -7.875465393066406
    3. '3' → logprob: -10.125465393066406
    4. ' ' → logprob: -11.250465393066406
    5. 'k' → logprob: -11.375465393066406
    6. '(' → logprob: -12.000465393066406
    7. '```' → logprob: -13.125465393066406
    8. 's' → logprob: -13.187965393066406
    9. '0' → logprob: -13.437965393066406
    10. 'j' → logprob: -13.875465393066406

Token 144: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16196689009666443
    2. '))' → logprob: -1.9119669198989868
    3. ')%' → logprob: -6.786966800689697
    4. '+' → logprob: -8.411967277526855
    5. ' )' → logprob: -8.536967277526855
    6. '%' → logprob: -9.786967277526855
    7. ' ))' → logprob: -10.161967277526855
    8. ')
' → logprob: -10.161967277526855
    9. ')))' → logprob: -10.786967277526855
    10. ' +' → logprob: -12.036967277526855

Token 145: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.023245712742209435
    2. ' MOD' → logprob: -3.7732458114624023
    3. '_MOD' → logprob: -16.148244857788086
    4. '   ' → logprob: -17.273244857788086
    5. '.MOD' → logprob: -17.648244857788086
    6. ' ' → logprob: -18.273244857788086
    7. '(M' → logprob: -18.773244857788086
    8. 'MD' → logprob: -19.148244857788086
    9. '```' → logprob: -19.523244857788086
    10. 'MO' → logprob: -20.148244857788086

Token 147: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.058815360069275
    2. '<|end|>' → logprob: -1.058815360069275
    3. '
' → logprob: -1.683815360069275
    4. ')' → logprob: -2.5588154792785645
    5. '```' → logprob: -4.6838154792785645
    6. '       ' → logprob: -4.6838154792785645
    7. '<|end|>' → logprob: -5.0588154792785645
    8. '    
' → logprob: -5.8088154792785645
    9. '   ' → logprob: -5.9338154792785645
    10. 'res' → logprob: -6.3088154792785645

Token 148: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6947833895683289
    2. '<|end|>' → logprob: -0.8197833895683289
    3. ')' → logprob: -3.6947834491729736
    4. '+' → logprob: -4.1947832107543945
    5. '```' → logprob: -5.0697832107543945
    6. '\' → logprob: -5.6947832107543945
    7. '<|end|>' → logprob: -5.9447832107543945
    8. '
' → logprob: -6.5697832107543945
    9. '\r' → logprob: -7.1947832107543945
    10. '    ' → logprob: -7.1947832107543945

Token 149: ' if' (ID: 538)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.052374109625816345
    2. '+' → logprob: -3.9273741245269775
    3. '\' → logprob: -4.427373886108398
    4. ')' → logprob: -5.552373886108398
    5. '+
' → logprob: -6.177373886108398
    6. '\
' → logprob: -6.302373886108398
    7. '
' → logprob: -6.302373886108398
    8. ' \' → logprob: -6.677373886108398
    9. ' 
' → logprob: -6.802373886108398
    10. 'res' → logprob: -6.802373886108398

Token 150: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.04952297732234001
    2. 'j' → logprob: -3.049522876739502
    3. ' s' → logprob: -7.674522876739502
    4. ' k' → logprob: -8.92452335357666
    5. '(j' → logprob: -9.04952335357666
    6. ' i' → logprob: -9.67452335357666
    7. ' ' → logprob: -10.17452335357666
    8. 's' → logprob: -10.54952335357666
    9. '(' → logprob: -10.67452335357666
    10. ' (' → logprob: -10.79952335357666

Token 151: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5118638873100281
    2. '+' → logprob: -1.6368639469146729
    3. ' >' → logprob: -1.6368639469146729
    4. ' +' → logprob: -5.011863708496094
    5. '   ' → logprob: -6.511863708496094
    6. ' <' → logprob: -6.636863708496094
    7. '<' → logprob: -7.761863708496094
    8. '-' → logprob: -7.761863708496094
    9. ':' → logprob: -8.761863708496094
    10. ' ' → logprob: -8.886863708496094

Token 152: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7654954791069031
    2. ':' → logprob: -1.5154955387115479
    3. '<|end|>' → logprob: -1.7654955387115479
    4. ' res' → logprob: -3.140495538711548
    5. ':
' → logprob: -3.390495538711548
    6. '<|end|>' → logprob: -3.890495538711548
    7. '           ' → logprob: -4.015495300292969
    8. '```' → logprob: -4.765495300292969
    9. '(res' → logprob: -5.015495300292969
    10. 'res' → logprob: -6.265495300292969

Token 153: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.6329612135887146
    2. 'res' (adapté à ' res') → logprob: -0.7579612135887146
    3. '	res' → logprob: -9.00796127319336
    4. '
' → logprob: -9.50796127319336
    5. '(res' → logprob: -10.25796127319336
    6. '           ' → logprob: -10.63296127319336
    7. '       ' → logprob: -10.63296127319336
    8. '```' → logprob: -10.63296127319336
    9. ' ' → logprob: -11.13296127319336
    10. ' ' → logprob: -11.63296127319336

Token 154: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3871757388114929
    2. '+=' → logprob: -1.1371757984161377
    3. '       ' → logprob: -9.262175559997559
    4. '   ' → logprob: -9.512175559997559
    5. '+=(' → logprob: -9.762175559997559
    6. ']+=' → logprob: -10.762175559997559
    7. '           ' → logprob: -11.012175559997559
    8. '+' → logprob: -11.262175559997559
    9. '```' → logprob: -12.012175559997559
    10. '          ' → logprob: -12.387175559997559

Token 155: ' dp' (ID: 21546)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.3484915494918823
    2. ' (' → logprob: -1.2234915494918823
    3. ' dp' → logprob: -10.348491668701172
    4. 'dp' → logprob: -12.223491668701172
    5. '(d' → logprob: -13.098491668701172
    6. '(' → logprob: -13.223491668701172
    7. '((' → logprob: -13.973491668701172
    8. ' ' → logprob: -13.973491668701172
    9. '(s' → logprob: -14.098491668701172
    10. '   ' → logprob: -14.473491668701172

Token 156: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.250000953674316
    3. '(I' → logprob: -16.250001907348633
    4. '<|end|>' → logprob: -16.750001907348633
    5. '```' → logprob: -16.875001907348633
    6. '(ii' → logprob: -17.750001907348633
    7. ' (' → logprob: -18.125001907348633
    8. '(n' → logprob: -18.375001907348633
    9. '((' → logprob: -18.500001907348633
    10. '(ierr' → logprob: -18.750001907348633

Token 157: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.872261317563243e-05
    2. ' -' → logprob: -10.500059127807617
    3. '(' → logprob: -10.625059127807617
    4. '(i' → logprob: -12.500059127807617
    5. '1' → logprob: -13.250059127807617
    6. '()-' → logprob: -15.250059127807617
    7. '(-' → logprob: -15.375059127807617
    8. '   ' → logprob: -15.500059127807617
    9. '```' → logprob: -16.000059127807617
    10. '       ' → logprob: -16.125059127807617

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.875001907348633
    3. '```' → logprob: -14.750001907348633
    4. '-' → logprob: -16.250001907348633
    5. '１' → logprob: -17.062501907348633
    6. '2' → logprob: -17.437501907348633
    7. '۱' → logprob: -18.250001907348633
    8. '' → logprob: -18.437501907348633
    9. '१' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.562501907348633

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002384568564593792
    2. '(' → logprob: -6.377384662628174
    3. '(j' → logprob: -8.627384185791016
    4. ' ,' → logprob: -8.877384185791016
    5. '(i' → logprob: -9.002384185791016
    6. '(n' → logprob: -9.002384185791016
    7. ',j' → logprob: -9.752384185791016
    8. ' (' → logprob: -10.127384185791016
    9. '       ' → logprob: -11.752384185791016
    10. '           ' → logprob: -12.877384185791016

Token 160: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0110511165112257
    2. ' j' → logprob: -4.511051177978516
    3. ' ' → logprob: -13.636051177978516
    4. '	j' → logprob: -14.386051177978516
    5. '   ' → logprob: -14.511051177978516
    6. '  ' → logprob: -15.136051177978516
    7. '(j' → logprob: -15.511051177978516
    8. ',j' → logprob: -16.011051177978516
    9. '```' → logprob: -16.261051177978516
    10. ',' → logprob: -16.886051177978516

Token 161: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004097003838978708
    2. ' -' → logprob: -7.8754096031188965
    3. ',' → logprob: -10.750410079956055
    4. '   ' → logprob: -12.625410079956055
    5. '           ' → logprob: -13.375410079956055
    6. ' ' → logprob: -13.625410079956055
    7. '```' → logprob: -14.125410079956055
    8. '       ' → logprob: -14.375410079956055
    9. '  ' → logprob: -15.500410079956055
    10. '     ' → logprob: -15.625410079956055

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.750009536743164
    3. ',' → logprob: -14.000009536743164
    4. '```' → logprob: -15.250009536743164
    5. 's' → logprob: -16.062509536743164
    6. '   ' → logprob: -16.375009536743164
    7. '-' → logprob: -16.875009536743164
    8. ')' → logprob: -16.937509536743164
    9. '
' → logprob: -17.562509536743164
    10. '１' → logprob: -17.625009536743164

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008391640149056911
    2. 's' → logprob: -5.383391857147217
    3. ',s' → logprob: -5.758391857147217
    4. ' ,' → logprob: -7.633391857147217
    5. '(s' → logprob: -9.508391380310059
    6. ' s' → logprob: -10.258391380310059
    7. ')' → logprob: -11.508391380310059
    8. '(' → logprob: -13.008391380310059
    9. ' (' → logprob: -14.008391380310059
    10. '```' → logprob: -14.633391380310059

Token 164: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009959486313164234
    2. ' s' → logprob: -4.634959697723389
    3. '(s' → logprob: -8.50995922088623
    4. ' (' → logprob: -13.50995922088623
    5. '(' → logprob: -15.75995922088623
    6. ' ' → logprob: -16.134960174560547
    7. '   ' → logprob: -16.384960174560547
    8. ')' → logprob: -16.509960174560547
    9. '	s' → logprob: -17.009960174560547
    10. '```' → logprob: -17.259960174560547

Token 165: '-j' (ID: 19720)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5424312353134155
    2. '-j' → logprob: -0.9174312353134155
    3. '-' → logprob: -5.167431354522705
    4. '+' → logprob: -5.167431354522705
    5. '+j' → logprob: -5.167431354522705
    6. ' -' → logprob: -7.042431354522705
    7. 'j' → logprob: -7.792431354522705
    8. ' )' → logprob: -8.792430877685547
    9. '-n' → logprob: -9.292430877685547
    10. ' ' → logprob: -9.292430877685547

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.313314952421933e-05
    2. ' )' → logprob: -10.375062942504883
    3. ')*' → logprob: -11.875062942504883
    4. ')%' → logprob: -11.875062942504883
    5. '   ' → logprob: -12.125062942504883
    6. '*' → logprob: -12.250062942504883
    7. '```' → logprob: -13.125062942504883
    8. ')
' → logprob: -13.375062942504883
    9. '       ' → logprob: -13.875062942504883
    10. '%' → logprob: -14.250062942504883

Token 167: '       ' (ID: 309)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06072681024670601
    2. '%' → logprob: -2.9357268810272217
    3. ')' → logprob: -5.185726642608643
    4. ')%' → logprob: -8.6857271194458
    5. '```' → logprob: -11.3107271194458
    6. '<|end|>' → logprob: -11.3107271194458
    7. '       ' → logprob: -11.6857271194458
    8. ' %=' → logprob: -12.1857271194458
    9. ' *' → logprob: -12.5607271194458
    10. ' ' → logprob: -12.8107271194458

Token 168: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.35485291481018066
    2. '       ' → logprob: -1.6048529148101807
    3. '%' → logprob: -2.9798529148101807
    4. '   ' → logprob: -3.8548529148101807
    5. ' res' → logprob: -4.604852676391602
    6. 'return' → logprob: -4.729852676391602
    7. '```' → logprob: -5.729852676391602
    8. '
' → logprob: -7.104852676391602
    9. ' %' → logprob: -7.479852676391602
    10. ' return' → logprob: -7.604852676391602

Token 169: ' +=' (ID: 2757)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.7018086910247803
    2. '+=' → logprob: -1.4518086910247803
    3. '%' → logprob: -2.2018086910247803
    4. ' %=' → logprob: -2.3268086910247803
    5. '=' → logprob: -2.8268086910247803
    6. ' +=' → logprob: -6.076808929443359
    7. ')' → logprob: -8.82680892944336
    8. ' %' → logprob: -8.82680892944336
    9. '```' → logprob: -9.82680892944336
    10. ' =' → logprob: -9.95180892944336

Token 170: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.08085709065198898
    2. 'dp' → logprob: -2.705857038497925
    3. ' dp' → logprob: -4.955857276916504
    4. ' (' → logprob: -5.580857276916504
    5. '(d' → logprob: -10.705857276916504
    6. '(' → logprob: -10.830857276916504
    7. '	dp' → logprob: -12.955857276916504
    8. '   ' → logprob: -14.330857276916504
    9. '((' → logprob: -14.330857276916504
    10. ' ' → logprob: -14.455857276916504

Token 171: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.051275938749313354
    2. '(dp' → logprob: -3.0512759685516357
    3. ' dp' → logprob: -5.926275730133057
    4. '(' → logprob: -11.301276206970215
    5. ' (' → logprob: -12.801276206970215
    6. '(d' → logprob: -13.801276206970215
    7. '	dp' → logprob: -15.426276206970215
    8. 'd' → logprob: -17.3012752532959
    9. '```' → logprob: -17.4262752532959
    10. '.dp' → logprob: -17.9262752532959

Token 172: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.50001049041748
    3. '```' → logprob: -16.625009536743164
    4. '(I' → logprob: -16.750009536743164
    5. '(
' → logprob: -17.750009536743164
    6. '(ii' → logprob: -18.125009536743164
    7. 'i' → logprob: -18.500009536743164
    8. '(n' → logprob: -18.625009536743164
    9. '<|end|>' → logprob: -18.625009536743164
    10. ' (' → logprob: -18.750009536743164

Token 173: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.512236498361744e-07
    2. ' -' → logprob: -14.500000953674316
    3. '(' → logprob: -18.0
    4. '()-' → logprob: -19.625
    5. '```' → logprob: -20.25
    6. '...' → logprob: -20.375
    7. ',' → logprob: -20.625
    8. '(i' → logprob: -21.125
    9. '(-' → logprob: -21.25
    10. 'i' → logprob: -21.25

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -12.125007629394531
    3. '-' → logprob: -13.625007629394531
    4. ',' → logprob: -14.625007629394531
    5. '```' → logprob: -15.000007629394531
    6. 'def' → logprob: -16.37500762939453
    7. '   ' → logprob: -16.50000762939453
    8. '...' → logprob: -17.00000762939453
    9. 'from' → logprob: -17.43750762939453
    10. '
' → logprob: -17.56250762939453

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003863438032567501
    2. ',j' → logprob: -8.625386238098145
    3. ' ,' → logprob: -8.625386238098145
    4. '(' → logprob: -11.250386238098145
    5. '(j' → logprob: -11.375386238098145
    6. ' ' → logprob: -14.500386238098145
    7. ')' → logprob: -14.875386238098145
    8. '   ' → logprob: -15.375386238098145
    9. 'j' → logprob: -15.375386238098145
    10. '<|end|>' → logprob: -15.375386238098145

Token 176: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01421439554542303
    2. ' j' → logprob: -4.264214515686035
    3. ',' → logprob: -10.389214515686035
    4. ',j' → logprob: -12.014214515686035
    5. '   ' → logprob: -12.139214515686035
    6. ' ' → logprob: -13.389214515686035
    7. '	j' → logprob: -13.389214515686035
    8. '(j' → logprob: -13.889214515686035
    9. '[j' → logprob: -14.139214515686035
    10. '```' → logprob: -14.264214515686035

Token 177: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20428670942783356
    2. ',' → logprob: -1.7042866945266724
    3. '-' → logprob: -6.329286575317383
    4. ',s' → logprob: -7.829286575317383
    5. ' +' → logprob: -7.829286575317383
    6. ' ,' → logprob: -9.454286575317383
    7. '   ' → logprob: -9.704286575317383
    8. '```' → logprob: -9.829286575317383
    9. ' ' → logprob: -10.079286575317383
    10. '+s' → logprob: -11.204286575317383

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.269565634895116e-05
    2. ',' → logprob: -9.500092506408691
    3. '-' → logprob: -11.875092506408691
    4. ' ' → logprob: -12.125092506408691
    5. '```' → logprob: -13.000092506408691
    6. '0' → logprob: -13.250092506408691
    7. ' ,' → logprob: -15.250092506408691
    8. '2' → logprob: -15.250092506408691
    9. '(' → logprob: -16.187593460083008
    10. 's' → logprob: -16.312593460083008

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008158236742019653
    2. ',s' → logprob: -7.2508158683776855
    3. ' ,' → logprob: -9.875815391540527
    4. 's' → logprob: -10.000815391540527
    5. '(s' → logprob: -11.875815391540527
    6. ' s' → logprob: -13.500815391540527
    7. '```' → logprob: -15.250815391540527
    8. '(' → logprob: -15.875815391540527
    9. ')' → logprob: -16.625816345214844
    10. '，' → logprob: -16.625816345214844

Token 180: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47423654794692993
    2. ' s' → logprob: -0.9742365479469299
    3. '(s' → logprob: -9.099236488342285
    4. ',' → logprob: -10.349236488342285
    5. ' (' → logprob: -12.224236488342285
    6. ' ' → logprob: -12.724236488342285
    7. ')' → logprob: -12.974236488342285
    8. '(' → logprob: -14.099236488342285
    9. ' ' → logprob: -14.411736488342285
    10. ',s' → logprob: -14.911736488342285

Token 181: '-j' (ID: 19720)
  Prédit: '-j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-j' → logprob: -0.00013083349040243775
    2. '-' → logprob: -9.750130653381348
    3. ',' → logprob: -10.250130653381348
    4. ' -' → logprob: -10.375130653381348
    5. ',j' → logprob: -13.125130653381348
    6. 'j' → logprob: -13.375130653381348
    7. '```' → logprob: -13.500130653381348
    8. '-J' → logprob: -14.750130653381348
    9. ' ' → logprob: -15.625130653381348
    10. ')' → logprob: -16.625131607055664

Token 182: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009830316994339228
    2. '))' → logprob: -7.125983238220215
    3. ' )' → logprob: -9.625983238220215
    4. '*' → logprob: -10.125983238220215
    5. '       ' → logprob: -10.750983238220215
    6. ' *' → logprob: -11.000983238220215
    7. '```' → logprob: -11.125983238220215
    8. ')*' → logprob: -12.125983238220215
    9. '*)' → logprob: -12.250983238220215
    10. '   ' → logprob: -13.000983238220215

Token 183: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010342882014811039
    2. ' *' → logprob: -4.635343074798584
    3. '*' → logprob: -8.010342597961426
    4. ' )' → logprob: -8.635342597961426
    5. ')%' → logprob: -10.010342597961426
    6. '%' → logprob: -11.635342597961426
    7. '*)' → logprob: -11.760342597961426
    8. '   ' → logprob: -12.760342597961426
    9. '```' → logprob: -13.135342597961426
    10. '%)' → logprob: -13.510342597961426

Token 184: ' pow' (ID: 9779)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.037499893456697464
    2. '(' → logprob: -3.4124999046325684
    3. 'j' → logprob: -6.287499904632568
    4. ' (' → logprob: -6.912499904632568
    5. '2' → logprob: -7.412499904632568
    6. '((' → logprob: -9.28749942779541
    7. '(max' → logprob: -9.28749942779541
    8. '(s' → logprob: -9.28749942779541
    9. 'max' → logprob: -11.03749942779541
    10. '1' → logprob: -11.16249942779541

Token 185: '(j' (ID: 4997)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018399493768811226
    2. '2' → logprob: -4.268399715423584
    3. '(j' → logprob: -6.518399715423584
    4. '3' → logprob: -6.643399715423584
    5. '(-' → logprob: -7.768399715423584
    6. '(i' → logprob: -7.893399715423584
    7. '(k' → logprob: -7.893399715423584
    8. '((' → logprob: -9.143399238586426
    9. '(n' → logprob: -10.643399238586426
    10. '
' → logprob: -11.018399238586426

Token 186: '+' (ID: 10)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.32664600014686584
    2. '(' → logprob: -1.3266459703445435
    3. '+' → logprob: -4.951645851135254
    4. ',' → logprob: -5.576645851135254
    5. '3' → logprob: -7.076645851135254
    6. ')' → logprob: -8.076645851135254
    7. '
' → logprob: -8.076645851135254
    8. '=' → logprob: -8.701645851135254
    9. '```' → logprob: -8.826645851135254
    10. 's' → logprob: -8.951645851135254

Token 187: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00539561128243804
    2. '1' → logprob: -5.380395412445068
    3. '3' → logprob: -7.630395412445068
    4. ' ' → logprob: -9.130395889282227
    5. '4' → logprob: -10.130395889282227
    6. '10' → logprob: -10.942895889282227
    7. '   ' → logprob: -11.005395889282227
    8. '```' → logprob: -11.317895889282227
    9. '(' → logprob: -11.692895889282227
    10. '
' → logprob: -11.692895889282227

Token 188: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33038821816444397
    2. ',' → logprob: -1.4553881883621216
    3. '2' → logprob: -3.080388307571411
    4. '3' → logprob: -7.080388069152832
    5. '```' → logprob: -8.080388069152832
    6. '(M' → logprob: -8.205388069152832
    7. ' ,' → logprob: -8.330388069152832
    8. ' (' → logprob: -9.580388069152832
    9. ')' → logprob: -9.705388069152832
    10. 'MOD' → logprob: -10.580388069152832

Token 189: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002210596576333046
    2. ' ' → logprob: -9.125221252441406
    3. '3' → logprob: -9.375221252441406
    4. '   ' → logprob: -11.750221252441406
    5. '```' → logprob: -12.250221252441406
    6. '4' → logprob: -12.750221252441406
    7. '1' → logprob: -13.187721252441406
    8. '

' → logprob: -13.187721252441406
    9. '  ' → logprob: -13.625221252441406
    10. 'MOD' → logprob: -14.125221252441406

Token 190: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000158842682139948
    2. '3' → logprob: -9.25015926361084
    3. ' ' → logprob: -10.00015926361084
    4. '   ' → logprob: -12.50015926361084
    5. '4' → logprob: -12.62515926361084
    6. '```' → logprob: -12.62515926361084
    7. '1' → logprob: -12.75015926361084
    8. '  ' → logprob: -14.87515926361084
    9. ' ' → logprob: -15.00015926361084
    10. '

' → logprob: -15.31265926361084

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.893480243277736e-05
    2. ' ,' → logprob: -10.250039100646973
    3. ')' → logprob: -13.875039100646973
    4. '```' → logprob: -14.125039100646973
    5. '2' → logprob: -14.500039100646973
    6. '   ' → logprob: -14.875039100646973
    7. ',
' → logprob: -15.125039100646973
    8. '3' → logprob: -15.750039100646973
    9. '))' → logprob: -15.875039100646973
    10. '%,' → logprob: -16.125038146972656

Token 192: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.03521392197581e-05
    2. ' MOD' → logprob: -10.500030517578125
    3. '   ' → logprob: -12.875030517578125
    4. '           ' → logprob: -17.000030517578125
    5. ' ' → logprob: -17.250030517578125
    6. '       ' → logprob: -17.375030517578125
    7. '  ' → logprob: -17.500030517578125
    8. '
' → logprob: -18.125030517578125
    9. 'MO' → logprob: -18.500030517578125
    10. '_MOD' → logprob: -18.500030517578125

Token 193: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -6.861651490908116e-05
    2. ')' → logprob: -10.500068664550781
    3. '   ' → logprob: -11.125068664550781
    4. ',' → logprob: -11.375068664550781
    5. '       ' → logprob: -12.000068664550781
    6. ' ))' → logprob: -12.000068664550781
    7. ')))' → logprob: -13.500068664550781
    8. '```' → logprob: -14.750068664550781
    9. ''))' → logprob: -15.125068664550781
    10. '    ' → logprob: -16.62506866455078

Token 194: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06509614735841751
    2. ')' → logprob: -3.440096139907837
    3. '%' → logprob: -3.565096139907837
    4. ')%' → logprob: -6.190096378326416
    5. '<|end|>' → logprob: -8.440095901489258
    6. ' %=' → logprob: -8.565095901489258
    7. '```' → logprob: -9.565095901489258
    8. ' %)' → logprob: -10.440095901489258
    9. '<|end|>' → logprob: -10.815095901489258
    10. ' )' → logprob: -10.815095901489258

Token 195: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.008617408573627472
    2. ' MOD' → logprob: -4.758617401123047
    3. '(M' → logprob: -13.383617401123047
    4. '_MOD' → logprob: -14.008617401123047
    5. '(Mod' → logprob: -15.008617401123047
    6. '(' → logprob: -16.758617401123047
    7. '.MOD' → logprob: -16.883617401123047
    8. ' (' → logprob: -18.383617401123047
    9. '(mod' → logprob: -18.758617401123047
    10. '```' → logprob: -19.258617401123047

Token 196: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.46412959694862366
    2. ' %' → logprob: -1.8391295671463013
    3. '       ' → logprob: -2.214129686355591
    4. '   ' → logprob: -3.214129686355591
    5. '
' → logprob: -3.339129686355591
    6. ')' → logprob: -4.214129447937012
    7. ')%' → logprob: -5.964129447937012
    8. '```' → logprob: -6.339129447937012
    9. '\n' → logprob: -6.589129447937012
    10. '%
' → logprob: -6.964129447937012

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08215542882680893
    2. 'return' → logprob: -3.207155466079712
    3. ' return' → logprob: -4.332155227661133
    4. '   ' → logprob: -4.457155227661133
    5. 'res' → logprob: -4.707155227661133
    6. '```' → logprob: -5.582155227661133
    7. ' res' → logprob: -7.332155227661133
    8. '``' → logprob: -9.582155227661133
    9. '
' → logprob: -10.332155227661133
    10. ')' → logprob: -10.832155227661133

Token 198: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.34807923436164856
    2. ' return' → logprob: -1.9730792045593262
    3. 'res' → logprob: -2.473079204559326
    4. '       ' → logprob: -2.723079204559326
    5. '```' → logprob: -6.098079204559326
    6. ' res' → logprob: -6.598079204559326
    7. '   ' → logprob: -7.723079204559326
    8. '
' → logprob: -8.098079681396484
    9. ')' → logprob: -8.223079681396484
    10. '%' → logprob: -9.348079681396484

Token 199: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.03804550692439079
    2. ' res' → logprob: -3.2880454063415527
    3. '(res' → logprob: -12.413045883178711
    4. '	res' → logprob: -17.03804588317871
    5. '$res' → logprob: -17.78804588317871
    6. ' (' → logprob: -18.41304588317871
    7. ' ' → logprob: -18.66304588317871
    8. '_res' → logprob: -18.78804588317871
    9. ' ' → logprob: -18.91304588317871
    10. 're' → logprob: -19.03804588317871

Token 200: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5759769678115845
    2. '%' → logprob: -0.8259769678115845
    3. ')' → logprob: -11.575977325439453
    4. '<|end|>' → logprob: -11.825977325439453
    5. '%A' → logprob: -12.325977325439453
    6. ' ' → logprob: -12.575977325439453
    7. ' ' → logprob: -12.950977325439453
    8. '%n' → logprob: -13.200977325439453
    9. '%B' → logprob: -13.450977325439453
    10. ')%' → logprob: -13.700977325439453

Token 201: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.0206720617134124e-05
    2. ' MOD' → logprob: -11.50001049041748
    3. '_MOD' → logprob: -17.625009536743164
    4. '   ' → logprob: -18.750009536743164
    5. '```' → logprob: -18.750009536743164
    6. '(M' → logprob: -20.125009536743164
    7. '.MOD' → logprob: -20.625009536743164
    8. 'MO' → logprob: -21.250009536743164
    9. '(Mod' → logprob: -22.375009536743164
    10. ' ' → logprob: -23.000009536743164

Token 202: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006647987756878138
    2. 'return' → logprob: -5.381648063659668
    3. '   ' → logprob: -6.631648063659668
    4. 'result' → logprob: -8.631648063659668
    5. ' print' → logprob: -8.631648063659668
    6. 'dp' → logprob: -8.756648063659668
    7. '```' → logprob: -9.256648063659668
    8. '(print' → logprob: -11.131648063659668
    9. '
' → logprob: -11.256648063659668
    10. ' return' → logprob: -11.506648063659668

Token 204: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002626669593155384
    2. 'result' → logprob: -6.002626895904541
    3. 'return' → logprob: -9.502626419067383
    4. '   ' → logprob: -10.252626419067383
    5. '```' → logprob: -10.752626419067383
    6. ' print' → logprob: -11.377626419067383
    7. '    
' → logprob: -12.627626419067383
    8. 'res' → logprob: -13.127626419067383
    9. '
' → logprob: -14.502626419067383
    10. 'answer' → logprob: -14.752626419067383

Token 205: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0006463141762651503
    2. '(' → logprob: -7.375646114349365
    3. '(sum' → logprob: -12.125646591186523
    4. '((' → logprob: -12.125646591186523
    5. '(f' → logprob: -12.375646591186523
    6. '(pow' → logprob: -12.750646591186523
    7. '(df' → logprob: -14.375646591186523
    8. '(
' → logprob: -15.000646591186523
    9. '()' → logprob: -15.375646591186523
    10. 'dp' → logprob: -16.125646591186523

Token 206: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004131237976253033
    2. '(n' → logprob: -5.504131317138672
    3. ')' → logprob: -10.379131317138672
    4. '(len' → logprob: -11.504131317138672
    5. ')(' → logprob: -12.004131317138672
    6. 'half' → logprob: -13.004131317138672
    7. 'n' → logprob: -13.379131317138672
    8. '(length' → logprob: -14.754131317138672
    9. ')n' → logprob: -14.879131317138672
    10. '(k' → logprob: -15.254131317138672

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000227496653678827
    2. ' ,' → logprob: -8.500227928161621
    3. ',n' → logprob: -11.625227928161621
    4. '(n' → logprob: -12.125227928161621
    5. '(' → logprob: -12.250227928161621
    6. '-' → logprob: -13.000227928161621
    7. 'n' → logprob: -14.000227928161621
    8. ',
' → logprob: -14.500227928161621
    9. '```' → logprob: -15.500227928161621
    10. '   ' → logprob: -15.625227928161621

Token 208: ' ' (ID: 220)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0001733855315251276
    2. ' half' → logprob: -9.125173568725586
    3. '0' → logprob: -10.375173568725586
    4. 'n' → logprob: -10.875173568725586
    5. '   ' → logprob: -11.625173568725586
    6. 'hal' → logprob: -12.625173568725586
    7. ' ' → logprob: -14.125173568725586
    8. 'k' → logprob: -15.750173568725586
    9. '  ' → logprob: -15.750173568725586
    10. ')' → logprob: -15.875173568725586

Token 209: '0' (ID: 15)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0018465323373675346
    2. '0' → logprob: -6.5018463134765625
    3. 'n' → logprob: -8.126846313476562
    4. ' half' → logprob: -10.501846313476562
    5. 'hal' → logprob: -11.126846313476562
    6. ' ' → logprob: -14.126846313476562
    7. '1' → logprob: -14.126846313476562
    8. '   ' → logprob: -14.376846313476562
    9. '2' → logprob: -14.501846313476562
    10. '(' → logprob: -14.751846313476562

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.511406809295295e-06
    2. ' ,' → logprob: -12.500006675720215
    3. ')' → logprob: -14.000006675720215
    4. '(' → logprob: -14.750006675720215
    5. ',
' → logprob: -15.000006675720215
    6. '0' → logprob: -15.750006675720215
    7. ',n' → logprob: -16.0000057220459
    8. '，' → logprob: -16.1250057220459
    9. '```' → logprob: -16.1250057220459
    10. ' ' → logprob: -16.6250057220459

Token 211: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0007785348570905626
    2. 'n' → logprob: -7.500778675079346
    3. ' half' → logprob: -9.000778198242188
    4. '0' → logprob: -9.375778198242188
    5. 'hal' → logprob: -12.250778198242188
    6. '(' → logprob: -12.750778198242188
    7. '   ' → logprob: -13.125778198242188
    8. ')' → logprob: -13.500778198242188
    9. ' n' → logprob: -13.625778198242188
    10. ' ' → logprob: -13.750778198242188

Token 212: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0019343505846336484
    2. 'k' → logprob: -6.25193452835083
    3. ')' → logprob: -12.751934051513672
    4. ' k' → logprob: -14.001934051513672
    5. 's' → logprob: -14.501934051513672
    6. '-k' → logprob: -15.001934051513672
    7. '```' → logprob: -16.001934051513672
    8. '_n' → logprob: -16.064434051513672
    9. '[' → logprob: -16.189434051513672
    10. '_s' → logprob: -16.439434051513672

Token 213: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001347138429991901
    2. ')' → logprob: -6.626347064971924
    3. ')))' → logprob: -11.376347541809082
    4. '))
' → logprob: -12.501347541809082
    5. ' ))' → logprob: -13.001347541809082
    6. '*' → logprob: -13.876347541809082
    7. ')%' → logprob: -14.126347541809082
    8. '%' → logprob: -14.126347541809082
    9. ' ' → logprob: -14.626347541809082
    10. ',' → logprob: -16.001346588134766

Token 214: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005257118493318558
    2. '<|end|>' → logprob: -5.3802571296691895
    3. '(' → logprob: -8.630256652832031
    4. '
' → logprob: -9.630256652832031
    5. '\n' → logprob: -9.630256652832031
    6. '```' → logprob: -9.630256652832031
    7. ' ' → logprob: -9.630256652832031
    8. '\' → logprob: -10.130256652832031
    9. ' )' → logprob: -10.130256652832031
    10. '#' → logprob: -10.505256652832031

Token 215: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05183740705251694
    2. ',' → logprob: -3.92683744430542
    3. '(n' → logprob: -4.17683744430542
    4. '()' → logprob: -4.92683744430542
    5. ')' → logprob: -5.42683744430542
    6. '=' → logprob: -6.80183744430542
    7. '())' → logprob: -7.67683744430542
    8. '(
' → logprob: -8.301836967468262
    9. '_' → logprob: -8.426836967468262
    10. '+' → logprob: -8.676836967468262

Token 216: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3949333727359772
    2. 'k' → logprob: -1.1449333429336548
    3. '=' → logprob: -5.269933223724365
    4. ' =' → logprob: -6.644933223724365
    5. ' n' → logprob: -7.144933223724365
    6. 'n' → logprob: -8.144933700561523
    7. ' ' → logprob: -8.394933700561523
    8. '=k' → logprob: -8.644933700561523
    9. '<|end|>' → logprob: -9.894933700561523
    10. ' 
' → logprob: -11.519933700561523

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011413122527301311
    2. ' =' → logprob: -4.511413097381592
    3. ',' → logprob: -8.13641357421875
    4. '=input' → logprob: -10.13641357421875
    5. '<|end|>' → logprob: -11.76141357421875
    6. '=n' → logprob: -12.13641357421875
    7. '=int' → logprob: -12.38641357421875
    8. ',n' → logprob: -13.01141357421875
    9. '=
' → logprob: -13.01141357421875
    10. ',k' → logprob: -13.13641357421875

Token 218: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0015066476771607995
    2. ' map' → logprob: -6.501506805419922
    3. '10' → logprob: -13.501506805419922
    4. 'list' → logprob: -14.626506805419922
    5. '5' → logprob: -14.876506805419922
    6. '	map' → logprob: -15.001506805419922
    7. '47' → logprob: -15.126506805419922
    8. '20' → logprob: -15.251506805419922
    9. '(map' → logprob: -16.001506805419922
    10. '7' → logprob: -16.126506805419922

Token 219: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004690418136306107
    2. '(input' → logprob: -8.125469207763672
    3. 'int' → logprob: -9.250469207763672
    4. '(str' → logprob: -10.375469207763672
    5. '(' → logprob: -10.625469207763672
    6. 'input' → logprob: -11.500469207763672
    7. '[int' → logprob: -12.250469207763672
    8. '(map' → logprob: -12.750469207763672
    9. '<int' → logprob: -13.375469207763672
    10. '=int' → logprob: -14.125469207763672

Token 220: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6486240029335022
    2. ',input' → logprob: -0.8986240029335022
    3. '(input' → logprob: -3.5236239433288574
    4. ',' → logprob: -3.6486239433288574
    5. '=input' → logprob: -4.898623943328857
    6. ' input' → logprob: -5.273623943328857
    7. '[input' → logprob: -7.398623943328857
    8. '```' → logprob: -7.648623943328857
    9. ')' → logprob: -8.523624420166016
    10. '<input' → logprob: -8.648624420166016

Token 221: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002614550176076591
    2. ' input' → logprob: -8.250261306762695
    3. '=input' → logprob: -17.125261306762695
    4. 'int' → logprob: -17.500261306762695
    5. 'open' → logprob: -17.500261306762695
    6. '(input' → logprob: -18.125261306762695
    7. 'str' → logprob: -18.375261306762695
    8. '0' → logprob: -18.625261306762695
    9. 'stdin' → logprob: -18.625261306762695
    10. ',input' → logprob: -18.875261306762695

Token 222: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0683535037969705e-05
    2. '()' → logprob: -11.50001049041748
    3. ' ().' → logprob: -16.000011444091797
    4. '())' → logprob: -16.375011444091797
    5. '(),' → logprob: -16.625011444091797
    6. '(' → logprob: -17.125011444091797
    7. 'split' → logprob: -17.125011444091797
    8. '()[' → logprob: -17.125011444091797
    9. '.split' → logprob: -17.375011444091797
    10. '().__' → logprob: -18.125011444091797

Token 223: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.7968066206085496e-05
    2. 'strip' → logprob: -10.500027656555176
    3. ' split' → logprob: -16.000028610229492
    4. 'rstrip' → logprob: -16.250028610229492
    5. '(split' → logprob: -16.750028610229492
    6. 'spl' → logprob: -16.875028610229492
    7. 'read' → logprob: -18.000028610229492
    8. '().' → logprob: -18.625028610229492
    9. '()' → logprob: -19.625028610229492
    10. ')' → logprob: -20.000028610229492

Token 224: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0068824379704892635
    2. '()' → logprob: -5.006882667541504
    3. ')' → logprob: -9.006882667541504
    4. '(' → logprob: -10.756882667541504
    5. '()))' → logprob: -11.631882667541504
    6. '())
' → logprob: -11.881882667541504
    7. '('' → logprob: -12.381882667541504
    8. '(),' → logprob: -14.381882667541504
    9. ' ())' → logprob: -14.381882667541504
    10. '(','' → logprob: -14.756882667541504

Token 225: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. ' f' → logprob: -19.375
    3. '_f' → logprob: -21.75
    4. '
' → logprob: -21.75
    5. '```' → logprob: -22.125
    6. 'ф' → logprob: -22.875
    7. '<|end|>' → logprob: -23.625
    8. '	f' → logprob: -23.875
    9. 'def' → logprob: -24.875
    10. '#' → logprob: -25.0

Token 226: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.020551582798361778
    2. '(' → logprob: -3.8955516815185547
    3. ' (' → logprob: -11.895551681518555
    4. '((' → logprob: -13.395551681518555
    5. '(
' → logprob: -14.645551681518555
    6. '(

' → logprob: -15.895551681518555
    7. 'n' → logprob: -16.458051681518555
    8. ')(' → logprob: -16.583051681518555
    9. ')' → logprob: -16.833051681518555
    10. '()' → logprob: -16.958051681518555

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01259629987180233
    2. ',k' → logprob: -4.387596130371094
    3. ',n' → logprob: -9.887596130371094
    4. ' ,' → logprob: -10.637596130371094
    5. '(' → logprob: -12.512596130371094
    6. '(n' → logprob: -12.762596130371094
    7. '(k' → logprob: -12.887596130371094
    8. 'k' → logprob: -13.512596130371094
    9. ' ' → logprob: -15.012596130371094
    10. ')' → logprob: -15.637596130371094

Token 228: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.512236498361744e-07
    2. ' k' → logprob: -14.625000953674316
    3. ')' → logprob: -21.0
    4. '```' → logprob: -22.625
    5. '	k' → logprob: -23.125
    6. '{k' → logprob: -24.5
    7. '   ' → logprob: -24.625
    8. ' ' → logprob: -24.75
    9. '_k' → logprob: -24.875
    10. 'kx' → logprob: -25.0

Token 229: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.750001907348633
    3. '))' → logprob: -15.125001907348633
    4. '())' → logprob: -15.500001907348633
    5. ' )' → logprob: -15.875001907348633
    6. '()' → logprob: -16.750001907348633
    7. ')`' → logprob: -16.875001907348633
    8. ')}' → logprob: -17.750001907348633
    9. ')#' → logprob: -18.250001907348633
    10. ')

' → logprob: -18.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 227
Tokens correctement prédits (1ère position, stricte): 83
Tokens correctement prédits (1ère position, avec adaptation): 92
Tokens correctement prédits (top 10): 196
Précision stricte (1ère position): 36.56%
Précision adaptée (1ère position): 40.53%
Précision (top 10): 86.34%
================================================================================
