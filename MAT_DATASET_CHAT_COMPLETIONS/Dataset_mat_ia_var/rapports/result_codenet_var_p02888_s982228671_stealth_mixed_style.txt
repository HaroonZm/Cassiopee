================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from bisect import bisect_left

def main():
    N=int(input())
    def to_ints(): return list(map(int, input().split()))
    l = to_ints()
    l.sort()
    index = 0
    res = 0
    while index < N-2:
        elem = l[index]
        j = index+1
        while j < N-1:
            second = l[j]
            idx = bisect_left(l, elem+second)
            res=res+(idx-j-1)
            j+=1
        index+=1
    print(res)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.21220743656158447
    2. 'import' → logprob: -1.7122074365615845
    3. '.' → logprob: -4.587207317352295
    4. '```' → logprob: -8.712207794189453
    5. '_' → logprob: -8.962207794189453
    6. ' ' → logprob: -9.587207794189453
    7. '.import' → logprob: -9.587207794189453
    8. '_import' → logprob: -9.837207794189453
    9. '[' → logprob: -10.712207794189453
    10. 'space' → logprob: -11.462207794189453

Token 4: ' bis' (ID: 7204)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.580363929271698
    2. 'bis' → logprob: -0.830363929271698
    3. ' bis' → logprob: -5.455363750457764
    4. ' ins' → logprob: -9.705364227294922
    5. '```' → logprob: -9.705364227294922
    6. '_ins' → logprob: -11.205364227294922
    7. 'b' → logprob: -13.955364227294922
    8. 'import' → logprob: -14.080364227294922
    9. '.ins' → logprob: -14.080364227294922
    10. 'in' → logprob: -14.205364227294922

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.008992933668196201
    2. 'e' → logprob: -4.758993148803711
    3. 'ct' → logprob: -8.133993148803711
    4. 'n' → logprob: -10.133993148803711
    5. 'ec' → logprob: -10.758993148803711
    6. 't' → logprob: -11.758993148803711
    7. 'r' → logprob: -12.258993148803711
    8. 'ectl' → logprob: -13.008993148803711
    9. 's' → logprob: -13.258993148803711
    10. 'c' → logprob: -13.383993148803711

Token 6: '_left' (ID: 22189)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0576847568154335
    2. '.' → logprob: -3.3076846599578857
    3. '_' → logprob: -4.057684898376465
    4. '_left' → logprob: -7.432684898376465
    5. '```' → logprob: -7.682684898376465
    6. '`' → logprob: -8.807684898376465
    7. '\(' → logprob: -9.182684898376465
    8. '._' → logprob: -9.182684898376465
    9. '.b' → logprob: -9.432684898376465
    10. '"' → logprob: -9.557684898376465

Token 7: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008544052834622562
    2. '\(' → logprob: -7.8758544921875
    3. '(
' → logprob: -8.0008544921875
    4. '\n' → logprob: -9.7508544921875
    5. '\' → logprob: -10.3758544921875
    6. '.' → logprob: -11.8758544921875
    7. '```' → logprob: -12.5008544921875
    8. '
' → logprob: -12.5008544921875
    9. ' (' → logprob: -12.6258544921875
    10. 'a' → logprob: -12.6258544921875

Token 8: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008970508933998644
    2. '(
' → logprob: -7.25089693069458
    3. '\(' → logprob: -9.250897407531738
    4. '(

' → logprob: -10.500897407531738
    5. '\n' → logprob: -10.875897407531738
    6. '\' → logprob: -11.500897407531738
    7. '
' → logprob: -12.250897407531738
    8. 'a' → logprob: -12.375897407531738
    9. '' → logprob: -12.375897407531738
    10. '`' → logprob: -12.500897407531738

Token 9: ' main' (ID: 2758)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1414858102798462
    2. ' ' → logprob: -2.7664856910705566
    3. ' _' → logprob: -3.1414856910705566
    4. ' find' → logprob: -4.891485691070557
    5. ' binary' → logprob: -5.266485691070557
    6. ' insert' → logprob: -6.016485691070557
    7. ' ' → logprob: -6.641485691070557
    8. ' bis' → logprob: -6.766485691070557
    9. '_insert' → logprob: -6.766485691070557
    10. ' space' → logprob: -7.016485691070557

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019693158101290464
    2. ':' → logprob: -7.251969337463379
    3. '(:' → logprob: -7.376969337463379
    4. '():' → logprob: -8.001969337463379
    5. '(
' → logprob: -9.126969337463379
    6. '```' → logprob: -9.751969337463379
    7. ' (' → logprob: -10.251969337463379
    8. '_' → logprob: -11.501969337463379
    9. '[' → logprob: -11.626969337463379
    10. '('' → logprob: -11.751969337463379

Token 11: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3626500964164734
    2. '   ' → logprob: -1.2376501560211182
    3. '```' → logprob: -4.987649917602539
    4. '[' → logprob: -6.112649917602539
    5. '`' → logprob: -6.487649917602539
    6. '(n' → logprob: -7.237649917602539
    7. '()' → logprob: -7.487649917602539
    8. '    
' → logprob: -7.612649917602539
    9. '(
' → logprob: -7.862649917602539
    10. ''' → logprob: -7.987649917602539

Token 12: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.040759801864624
    2. 'arr' → logprob: -2.040759801864624
    3. 'array' → logprob: -2.540759801864624
    4. ' arr' → logprob: -2.540759801864624
    5. 'data' → logprob: -2.665759801864624
    6. '   ' → logprob: -2.790759801864624
    7. 'target' → logprob: -2.790759801864624
    8. ' target' → logprob: -3.415759801864624
    9. ' array' → logprob: -3.540759801864624
    10. 'x' → logprob: -4.040760040283203

Token 13: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01661910116672516
    2. '=' → logprob: -4.5166192054748535
    3. ' ' → logprob: -5.6416192054748535
    4. ',' → logprob: -6.8916192054748535
    5. '  ' → logprob: -8.141618728637695
    6. ' ,' → logprob: -8.141618728637695
    7. '   ' → logprob: -8.891618728637695
    8. '    ' → logprob: -9.766618728637695
    9. ')' → logprob: -9.891618728637695
    10. ' )' → logprob: -10.266618728637695

Token 14: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006028342177160084
    2. '(input' → logprob: -7.750602722167969
    3. '('' → logprob: -9.500602722167969
    4. ' (' → logprob: -10.375602722167969
    5. '()' → logprob: -10.625602722167969
    6. '(N' → logprob: -10.750602722167969
    7. '("' → logprob: -13.000602722167969
    8. '(user' → logprob: -13.125602722167969
    9. '(`' → logprob: -13.250602722167969
    10. '("("' → logprob: -13.250602722167969

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3011651933193207
    2. '()' → logprob: -2.0511651039123535
    3. '(' → logprob: -2.6761651039123535
    4. '())' → logprob: -2.8011651039123535
    5. '('' → logprob: -6.9261651039123535
    6. '))' → logprob: -8.301165580749512
    7. '(
' → logprob: -8.426165580749512
    8. '')' → logprob: -8.676165580749512
    9. '`)' → logprob: -9.426165580749512
    10. '")' → logprob: -10.551165580749512

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06665568053722382
    2. '    
' → logprob: -3.8166556358337402
    3. '\' → logprob: -5.31665563583374
    4. ' ' → logprob: -5.31665563583374
    5. '```' → logprob: -5.56665563583374
    6. '`' → logprob: -5.69165563583374
    7. 'data' → logprob: -5.69165563583374
    8. '    ' → logprob: -5.94165563583374
    9. '\n' → logprob: -5.94165563583374
    10. 's' → logprob: -6.56665563583374

Token 17: ' def' (ID: 1056)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.6846292614936829
    2. ' arr' → logprob: -2.559629201889038
    3. 'arr' → logprob: -2.934629201889038
    4. ' a' → logprob: -3.059629201889038
    5. 'data' → logprob: -3.059629201889038
    6. ' ' → logprob: -3.184629201889038
    7. 'a' → logprob: -3.559629201889038
    8. ' lst' → logprob: -3.559629201889038
    9. 's' → logprob: -3.684629201889038
    10. ' array' → logprob: -3.684629201889038

Token 18: ' to' (ID: 316)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.677727222442627
    2. ' binary' → logprob: -1.552727222442627
    3. ' find' → logprob: -3.177727222442627
    4. ' is' → logprob: -3.302727222442627
    5. ' ' → logprob: -3.677727222442627
    6. ' sort' → logprob: -3.927727222442627
    7. ' search' → logprob: -3.927727222442627
    8. ' check' → logprob: -4.677727222442627
    9. ' factorial' → logprob: -4.927727222442627
    10. ' query' → logprob: -5.052727222442627

Token 19: '_int' (ID: 12285)
  Prédit: 'ken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ken' → logprob: -0.10183610767126083
    2. '_append' → logprob: -4.101836204528809
    3. '_list' → logprob: -4.351836204528809
    4. '_k' → logprob: -4.476836204528809
    5. '_index' → logprob: -5.101836204528809
    6. '_insert' → logprob: -5.101836204528809
    7. '_' → logprob: -5.101836204528809
    8. 'k' → logprob: -5.476836204528809
    9. '_int' → logprob: -5.601836204528809
    10. 'kens' → logprob: -5.601836204528809

Token 20: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16468869149684906
    2. '(s' → logprob: -2.7896885871887207
    3. 's' → logprob: -4.039688587188721
    4. '(x' → logprob: -4.164688587188721
    5. '32' → logprob: -4.289688587188721
    6. '_list' → logprob: -4.664688587188721
    7. '('' → logprob: -5.289688587188721
    8. '(_' → logprob: -5.414688587188721
    9. '_array' → logprob: -5.414688587188721
    10. ' (' → logprob: -6.164688587188721

Token 21: '():' (ID: 9442)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34481000900268555
    2. '(s' → logprob: -2.2198100090026855
    3. '():' → logprob: -2.3448100090026855
    4. '(line' → logprob: -3.0948100090026855
    5. '(x' → logprob: -4.5948100090026855
    6. '("("' → logprob: -4.7198100090026855
    7. '('' → logprob: -4.9698100090026855
    8. '(input' → logprob: -5.7198100090026855
    9. ' (' → logprob: -6.3448100090026855
    10. '(a' → logprob: -6.7198100090026855

Token 22: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.43926411867141724
    2. 'return' → logprob: -1.5642640590667725
    3. '       ' → logprob: -2.1892640590667725
    4. '   ' → logprob: -4.689264297485352
    5. '    ' → logprob: -4.939264297485352
    6. '	return' → logprob: -5.189264297485352
    7. '<|end|>' → logprob: -5.439264297485352
    8. '[]' → logprob: -6.564264297485352
    9. '(' → logprob: -7.064264297485352
    10. '        
' → logprob: -7.189264297485352

Token 23: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5449764132499695
    2. ' list' → logprob: -0.9199764132499695
    3. 'map' → logprob: -4.044976234436035
    4. ' map' → logprob: -5.544976234436035
    5. '[list' → logprob: -9.294976234436035
    6. ' ' → logprob: -10.294976234436035
    7. '  ' → logprob: -10.794976234436035
    8. '[' → logprob: -10.919976234436035
    9. '   ' → logprob: -11.044976234436035
    10. ' [' → logprob: -11.919976234436035

Token 24: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.10320035368204117
    2. '(' → logprob: -2.3532004356384277
    3. '(int' → logprob: -5.853200435638428
    4. '(input' → logprob: -9.47819995880127
    5. 'map' → logprob: -11.72819995880127
    6. '(range' → logprob: -11.85319995880127
    7. '(
' → logprob: -12.22819995880127
    8. '(eval' → logprob: -12.85319995880127
    9. '(

' → logprob: -12.85319995880127
    10. ' map' → logprob: -12.97819995880127

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00038348292582668364
    2. '(' → logprob: -8.750383377075195
    3. '<|end|>' → logprob: -9.125383377075195
    4. 'int' → logprob: -9.750383377075195
    5. '<int' → logprob: -10.875383377075195
    6. ',int' → logprob: -11.375383377075195
    7. '=int' → logprob: -11.500383377075195
    8. '[int' → logprob: -12.000383377075195
    9. '(str' → logprob: -12.750383377075195
    10. '<|end|>' → logprob: -13.125383377075195

Token 26: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.16222050786018372
    2. '(input' → logprob: -2.1622204780578613
    3. ',' → logprob: -3.5372204780578613
    4. 'input' → logprob: -5.287220478057861
    5. '(' → logprob: -8.28722095489502
    6. '))' → logprob: -9.41222095489502
    7. ' input' → logprob: -9.66222095489502
    8. ' ,' → logprob: -10.03722095489502
    9. ')' → logprob: -10.66222095489502
    10. '<input' → logprob: -11.28722095489502

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009741133544594049
    2. ' input' → logprob: -7.000974178314209
    3. ',input' → logprob: -10.00097370147705
    4. ')' → logprob: -11.37597370147705
    5. '   ' → logprob: -13.62597370147705
    6. '(input' → logprob: -14.00097370147705
    7. '	input' → logprob: -14.00097370147705
    8. ' ' → logprob: -14.62597370147705
    9. '=input' → logprob: -14.62597370147705
    10. '))' → logprob: -14.87597370147705

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4140441635390744e-05
    2. '()' → logprob: -12.125014305114746
    3. '()))' → logprob: -12.250014305114746
    4. ')' → logprob: -14.000014305114746
    5. '())))' → logprob: -14.000014305114746
    6. '))' → logprob: -14.375014305114746
    7. '())' → logprob: -14.375014305114746
    8. ' ().' → logprob: -15.500014305114746
    9. ')))' → logprob: -15.625014305114746
    10. '.' → logprob: -15.625014305114746

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005897291121073067
    2. 'strip' → logprob: -7.500589847564697
    3. 'rstrip' → logprob: -10.250589370727539
    4. ' split' → logprob: -13.625589370727539
    5. 'spl' → logprob: -16.37558937072754
    6. '(split' → logprob: -17.37558937072754
    7. 's' → logprob: -18.25058937072754
    8. 'read' → logprob: -19.62558937072754
    9. ' strip' → logprob: -19.87558937072754
    10. '.split' → logprob: -20.62558937072754

Token 30: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.20760294795036316
    2. '))' → logprob: -1.8326029777526855
    3. '())' → logprob: -4.5826029777526855
    4. '()' → logprob: -4.7076029777526855
    5. ')' → logprob: -5.7076029777526855
    6. ')))' → logprob: -5.7076029777526855
    7. '())))' → logprob: -6.5826029777526855
    8. '(' → logprob: -9.082602500915527
    9. '()))
' → logprob: -9.832602500915527
    10. '()))

' → logprob: -12.207602500915527

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6365292072296143
    2. '<|end|>' → logprob: -1.0115292072296143
    3. '    
' → logprob: -3.0115292072296143
    4. '
' → logprob: -4.011528968811035
    5. '<|end|>' → logprob: -4.761528968811035
    6. 'newline' → logprob: -5.386528968811035
    7. ')' → logprob: -5.386528968811035
    8. 'n' → logprob: -6.011528968811035
    9. '[' → logprob: -6.011528968811035
    10. 'data' → logprob: -6.136528968811035

Token 32: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34382086992263794
    2. 'arr' → logprob: -2.093820810317993
    3. 'A' → logprob: -2.593820810317993
    4. 'data' → logprob: -3.593820810317993
    5. 'a' → logprob: -3.843820810317993
    6. '<|end|>' → logprob: -4.093821048736572
    7. 'array' → logprob: -4.968821048736572
    8. '    
' → logprob: -5.343821048736572
    9. ' A' → logprob: -5.593821048736572
    10. 's' → logprob: -6.093821048736572

Token 33: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3837242126464844
    2. 'ist' → logprob: -1.5087242126464844
    3. ' =' → logprob: -1.5087242126464844
    4. 's' → logprob: -2.7587242126464844
    5. 'ines' → logprob: -2.8837242126464844
    6. 'st' → logprob: -3.5087242126464844
    7. '_list' → logprob: -3.8837242126464844
    8. 'ine' → logprob: -3.8837242126464844
    9. 'ists' → logprob: -4.008724212646484
    10. 'is' → logprob: -4.008724212646484

Token 34: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.01951492764055729
    2. ' to' → logprob: -4.769515037536621
    3. '[]' → logprob: -5.269515037536621
    4. '[to' → logprob: -5.269515037536621
    5. '[' → logprob: -8.144515037536621
    6. ' []' → logprob: -9.394515037536621
    7. 'sorted' → logprob: -9.394515037536621
    8. 'list' → logprob: -10.644515037536621
    9. ' [' → logprob: -10.894515037536621
    10. 'ist' → logprob: -11.769515037536621

Token 35: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0020085759460926056
    2. 'ints' → logprob: -6.252008438110352
    3. ' _' → logprob: -10.252008438110352
    4. 'int' → logprob: -10.502008438110352
    5. '_' → logprob: -12.127008438110352
    6. ' ints' → logprob: -13.377008438110352
    7. '_inds' → logprob: -13.752008438110352
    8. 'to' → logprob: -13.752008438110352
    9. 'nts' → logprob: -13.877008438110352
    10. 'nt' → logprob: -14.002008438110352

Token 36: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.704273118884885e-07
    2. ')' → logprob: -16.0
    3. '(s' → logprob: -16.125
    4. '()' → logprob: -16.25
    5. 'ints' → logprob: -16.25
    6. ' s' → logprob: -16.5
    7. 'es' → logprob: -17.125
    8. '_list' → logprob: -17.5
    9. 'int' → logprob: -17.625
    10. '```' → logprob: -17.75

Token 37: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.057743949990254e-05
    2. '(' → logprob: -11.000020980834961
    3. '()
' → logprob: -14.000020980834961
    4. '())' → logprob: -14.250020980834961
    5. ' ()' → logprob: -14.250020980834961
    6. '()]' → logprob: -14.500020980834961
    7. '()`' → logprob: -14.875020980834961
    8. '()

' → logprob: -15.500020980834961
    9. '()"' → logprob: -16.25002098083496
    10. '();' → logprob: -16.25002098083496

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8375484347343445
    2. '
' → logprob: -0.9625484347343445
    3. ' ' → logprob: -3.3375484943389893
    4. ' 
' → logprob: -3.5875484943389893
    5. '    
' → logprob: -3.7125484943389893
    6. ' l' → logprob: -3.9625484943389893
    7. '<|end|>' → logprob: -4.08754825592041
    8. ')' → logprob: -4.46254825592041
    9. '  
' → logprob: -4.71254825592041
    10. '[' → logprob: -5.21254825592041

Token 39: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.4476037919521332
    2. ' l' → logprob: -2.697603702545166
    3. 'dp' → logprob: -2.697603702545166
    4. 'pos' → logprob: -3.072603702545166
    5. 'sorted' → logprob: -3.197603702545166
    6. 's' → logprob: -3.322603702545166
    7. 'idx' → logprob: -4.072603702545166
    8. ' sorted' → logprob: -4.322603702545166
    9. ' dp' → logprob: -4.447603702545166
    10. '   ' → logprob: -4.572603702545166

Token 40: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.23052535951137543
    2. '[' → logprob: -2.105525255203247
    3. '_sorted' → logprob: -2.855525255203247
    4. '.' → logprob: -4.105525493621826
    5. '_' → logprob: -6.105525493621826
    6. '[:]' → logprob: -6.230525493621826
    7. '=' → logprob: -6.355525493621826
    8. '_sort' → logprob: -6.730525493621826
    9. ' =' → logprob: -6.855525493621826
    10. 'sort' → logprob: -7.355525493621826

Token 41: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009784658439457417
    2. '(' → logprob: -4.634784698486328
    3. '()`' → logprob: -11.009784698486328
    4. '()
' → logprob: -12.884784698486328
    5. '(()' → logprob: -13.134784698486328
    6. '((' → logprob: -14.009784698486328
    7. '();' → logprob: -14.009784698486328
    8. ' ()' → logprob: -14.009784698486328
    9. '().' → logprob: -14.134784698486328
    10. '())' → logprob: -14.259784698486328

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5199755430221558
    2. '
' → logprob: -1.3949755430221558
    3. '    
' → logprob: -2.6449756622314453
    4. ' ' → logprob: -4.019975662231445
    5. 'n' → logprob: -4.394975662231445
    6. '  
' → logprob: -4.394975662231445
    7. '\n' → logprob: -4.519975662231445
    8. ' 
' → logprob: -4.644975662231445
    9. '' → logprob: -5.519975662231445
    10. '<|end|>' → logprob: -5.519975662231445

Token 43: ' index' (ID: 3472)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5915630459785461
    2. 'k' → logprob: -2.5915629863739014
    3. 'Q' → logprob: -2.7165629863739014
    4. 'target' → logprob: -3.2165629863739014
    5. 'K' → logprob: -3.3415629863739014
    6. 'answer' → logprob: -3.7165629863739014
    7. 'm' → logprob: -3.9665629863739014
    8. 'X' → logprob: -3.9665629863739014
    9. 'q' → logprob: -3.9665629863739014
    10. 'M' → logprob: -4.0915632247924805

Token 44: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.335285484790802
    2. '=' → logprob: -1.9602854251861572
    3. ' =' → logprob: -1.9602854251861572
    4. '_=' → logprob: -6.460285663604736
    5. '(' → logprob: -6.585285663604736
    6. ' ' → logprob: -8.460285186767578
    7. ')' → logprob: -11.335285186767578
    8. 's' → logprob: -11.335285186767578
    9. '_space' → logprob: -11.710285186767578
    10. '=_' → logprob: -12.085285186767578

Token 45: ' ' (ID: 220)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.029766222462058067
    2. 'bis' → logprob: -3.529766321182251
    3. ' len' → logprob: -12.029766082763672
    4. 'len' → logprob: -12.654766082763672
    5. '0' → logprob: -12.779766082763672
    6. 'b' → logprob: -12.904766082763672
    7. ' ' → logprob: -14.529766082763672
    8. '	b' → logprob: -16.029766082763672
    9. '   ' → logprob: -16.279766082763672
    10. '```' → logprob: -16.279766082763672

Token 46: '0' (ID: 15)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0010403135092929006
    2. ' bis' → logprob: -6.876040458679199
    3. '0' → logprob: -12.6260404586792
    4. 'N' → logprob: -13.1260404586792
    5. 'b' → logprob: -14.1260404586792
    6. 'len' → logprob: -14.2510404586792
    7. 'bs' → logprob: -15.6260404586792
    8. ' N' → logprob: -15.7510404586792
    9. ' ' → logprob: -15.8760404586792
    10. '   ' → logprob: -16.001039505004883

Token 47: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5741995573043823
    2. '<|end|>' → logprob: -1.5741995573043823
    3. ' ' → logprob: -2.074199676513672
    4. '
' → logprob: -3.449199676513672
    5. '    ' → logprob: -4.199199676513672
    6. '    
' → logprob: -4.324199676513672
    7. ' 
' → logprob: -4.574199676513672
    8. '  ' → logprob: -4.824199676513672
    9. ' for' → logprob: -4.949199676513672
    10. ' while' → logprob: -5.574199676513672

Token 48: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0251054763793945
    2. '   ' → logprob: -1.5251054763793945
    3. ' ' → logprob: -1.6501054763793945
    4. '<|end|>' → logprob: -2.1501054763793945
    5. ' 
' → logprob: -3.5251054763793945
    6. '    
' → logprob: -3.6501054763793945
    7. ' for' → logprob: -4.1501054763793945
    8. '\n' → logprob: -4.6501054763793945
    9. '  
' → logprob: -5.0251054763793945
    10. ' while' → logprob: -5.4001054763793945

Token 49: ' res' (ID: 694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3535115122795105
    2. ' for' → logprob: -1.8535115718841553
    3. 'while' → logprob: -2.4785115718841553
    4. ' while' → logprob: -3.7285115718841553
    5. 'n' → logprob: -4.728511333465576
    6. 'w' → logprob: -5.103511333465576
    7. '   ' → logprob: -5.353511333465576
    8. ' ' → logprob: -6.353511333465576
    9. 'result' → logprob: -6.353511333465576
    10. 'max' → logprob: -6.478511333465576

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021747339516878128
    2. '=' → logprob: -4.14674711227417
    3. ' +=' → logprob: -5.52174711227417
    4. ' ' → logprob: -6.64674711227417
    5. '[' → logprob: -8.271747589111328
    6. '   ' → logprob: -10.521747589111328
    7. '[]' → logprob: -10.771747589111328
    8. '[:]' → logprob: -11.271747589111328
    9. '  ' → logprob: -11.396747589111328
    10. '+=' → logprob: -11.521747589111328

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5374348163604736
    2. ' []' → logprob: -1.9124348163604736
    3. '[]' → logprob: -1.9124348163604736
    4. ' ' → logprob: -2.1624348163604736
    5. '"' → logprob: -6.9124345779418945
    6. '[' → logprob: -7.2874345779418945
    7. '1' → logprob: -7.5374345779418945
    8. ' [' → logprob: -7.5374345779418945
    9. '""' → logprob: -8.412434577941895
    10. '100' → logprob: -8.412434577941895

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07554975152015686
    2. '[]' → logprob: -2.825549840927124
    3. 'float' → logprob: -5.075549602508545
    4. '[' → logprob: -6.450549602508545
    5. 'len' → logprob: -6.575549602508545
    6. '10' → logprob: -6.825549602508545
    7. '-' → logprob: -7.450549602508545
    8. '1' → logprob: -7.575549602508545
    9. '[]
' → logprob: -7.700549602508545
    10. 'l' → logprob: -7.950549602508545

Token 53: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9018415212631226
    2. '\n' → logprob: -1.0268415212631226
    3. ' 
' → logprob: -2.401841640472412
    4. '
' → logprob: -3.151841640472412
    5. '    
' → logprob: -3.526841640472412
    6. ' ' → logprob: -3.776841640472412
    7. ' for' → logprob: -4.276841640472412
    8. '<|end|>' → logprob: -4.276841640472412
    9. '    ' → logprob: -5.151841640472412
    10. '  
' → logprob: -5.526841640472412

Token 55: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.215069979429245
    2. ' for' → logprob: -1.8400700092315674
    3. '   ' → logprob: -3.8400700092315674
    4. '
' → logprob: -4.590069770812988
    5. '\n' → logprob: -6.090069770812988
    6. ' ' → logprob: -8.840069770812988
    7. 'while' (adapté à ' while') → logprob: -8.965069770812988
    8. '```' → logprob: -9.215069770812988
    9. '	for' → logprob: -9.340069770812988
    10. '    
' → logprob: -9.465069770812988

Token 56: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.005550336092710495
    2. 'index' → logprob: -5.255550384521484
    3. ' True' → logprob: -8.630550384521484
    4. ' ' → logprob: -10.380550384521484
    5. 'True' → logprob: -10.630550384521484
    6. '(index' → logprob: -11.130550384521484
    7. '   ' → logprob: -11.255550384521484
    8. ' l' → logprob: -11.255550384521484
    9. ' len' → logprob: -11.755550384521484
    10. ' res' → logprob: -12.005550384521484

Token 57: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.005501845385879278
    2. '<' → logprob: -5.380501747131348
    3. '<len' → logprob: -7.505501747131348
    4. '+' → logprob: -8.755501747131348
    5. ' ' → logprob: -9.630501747131348
    6. ' +' → logprob: -9.880501747131348
    7. ' <=' → logprob: -10.005501747131348
    8. '<size' → logprob: -12.630501747131348
    9. '<=' → logprob: -13.255501747131348
    10. '<n' → logprob: -13.505501747131348

Token 58: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4766924977302551
    2. ' N' → logprob: -0.9766924977302551
    3. 'len' → logprob: -6.4766926765441895
    4. ' len' → logprob: -7.2266926765441895
    5. ' ' → logprob: -8.476692199707031
    6. '   ' → logprob: -9.351692199707031
    7. '  ' → logprob: -11.101692199707031
    8. 'n' → logprob: -11.601692199707031
    9. 'l' → logprob: -11.726692199707031
    10. ' n' → logprob: -12.914192199707031

Token 59: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14462485909461975
    2. ':
' → logprob: -2.269624948501587
    3. ' and' → logprob: -3.519624948501587
    4. '   ' → logprob: -6.769624710083008
    5. 'and' → logprob: -8.144624710083008
    6. ' :' → logprob: -9.644624710083008
    7. ' :
' → logprob: -10.144624710083008
    8. '+' → logprob: -10.269624710083008
    9. '       ' → logprob: -10.769624710083008
    10. ' ' → logprob: -11.144624710083008

Token 60: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3880588114261627
    2. '1' → logprob: -1.1380587816238403
    3. '3' → logprob: -6.763058662414551
    4. ' ' → logprob: -10.51305866241455
    5. '   ' → logprob: -13.88805866241455
    6. '```' → logprob: -14.38805866241455
    7. '２' → logprob: -14.70055866241455
    8. '-' → logprob: -14.76305866241455
    9. '１' → logprob: -15.32555866241455
    10. '  ' → logprob: -15.88805866241455

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0612168125808239
    2. ':
' → logprob: -2.9362168312072754
    3. ' and' → logprob: -5.311216831207275
    4. '   ' → logprob: -6.811216831207275
    5. '       ' → logprob: -8.811216354370117
    6. ' :' → logprob: -10.186216354370117
    7. ' :
' → logprob: -10.561216354370117
    8. '):
' → logprob: -11.186216354370117
    9. 'and' → logprob: -11.311216354370117
    10. '):' → logprob: -12.061216354370117

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12361671775579453
    2. '   ' → logprob: -2.3736166954040527
    3. '    ' → logprob: -4.123616695404053
    4. ' if' → logprob: -6.123616695404053
    5. ' ' → logprob: -6.373616695404053
    6. ' for' → logprob: -7.623616695404053
    7. '<|end|>' → logprob: -7.623616695404053
    8. ',' → logprob: -8.248617172241211
    9. '     ' → logprob: -8.373617172241211
    10. '    
' → logprob: -8.623617172241211

Token 63: ' elem' (ID: 23108)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2670269310474396
    2. '       ' → logprob: -2.892026901245117
    3. ' for' → logprob: -2.892026901245117
    4. ' if' → logprob: -3.767026901245117
    5. ' left' → logprob: -3.892026901245117
    6. ' i' → logprob: -4.017026901245117
    7. ' index' → logprob: -5.017026901245117
    8. ' next' → logprob: -5.017026901245117
    9. ' a' → logprob: -5.392026901245117
    10. ' k' → logprob: -5.517026901245117

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01106515247374773
    2. '=' → logprob: -4.7610650062561035
    3. 's' → logprob: -6.6360650062561035
    4. '1' → logprob: -7.8860650062561035
    5. '_idx' → logprob: -8.511065483093262
    6. '   ' → logprob: -9.136065483093262
    7. '_index' → logprob: -9.636065483093262
    8. '2' → logprob: -9.761065483093262
    9. 't' → logprob: -10.011065483093262
    10. 'nt' → logprob: -10.636065483093262

Token 65: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.03809496387839317
    2. 'l' → logprob: -3.288094997406006
    3. ' ' → logprob: -11.163094520568848
    4. '   ' → logprob: -11.538094520568848
    5. '	l' → logprob: -11.913094520568848
    6. '  ' → logprob: -12.350594520568848
    7. '    ' → logprob: -12.475594520568848
    8. 'to' → logprob: -13.163094520568848
    9. ' to' → logprob: -13.225594520568848
    10. ' ' → logprob: -13.538094520568848

Token 66: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.002822943264618516
    2. '[' → logprob: -5.8778228759765625
    3. ' [' → logprob: -12.127822875976562
    4. '[ind' → logprob: -13.002822875976562
    5. 'index' → logprob: -13.127822875976562
    6. '[Index' → logprob: -13.252822875976562
    7. '```' → logprob: -13.252822875976562
    8. '[count' → logprob: -14.252822875976562
    9. '[in' → logprob: -14.502822875976562
    10. '[++' → logprob: -14.502822875976562

Token 67: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5824846029281616
    2. ']
' → logprob: -0.8324846029281616
    3. '+' → logprob: -6.582484722137451
    4. ']+' → logprob: -6.582484722137451
    5. ']
' → logprob: -6.832484722137451
    6. ' ]
' → logprob: -7.332484722137451
    7. '   ' → logprob: -7.457484722137451
    8. '])' → logprob: -7.957484722137451
    9. ' ]' → logprob: -7.957484722137451
    10. '])
' → logprob: -8.582484245300293

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013838598504662514
    2. '   ' → logprob: -4.763838768005371
    3. 'index' → logprob: -6.513838768005371
    4. '<|end|>' → logprob: -6.513838768005371
    5. ' index' → logprob: -7.138838768005371
    6. ',' → logprob: -8.138838768005371
    7. ')' → logprob: -8.388838768005371
    8. '```' → logprob: -8.513838768005371
    9. '<|end|>' → logprob: -8.763838768005371
    10. ' ' → logprob: -9.513838768005371

Token 69: ' j' (ID: 441)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.1794042587280273
    2. ' left' → logprob: -1.8044042587280273
    3. 'pos' → logprob: -1.9294042587280273
    4. ' pos' → logprob: -2.4294042587280273
    5. '       ' → logprob: -2.9294042587280273
    6. '   ' → logprob: -3.4294042587280273
    7. ' right' → logprob: -3.8044042587280273
    8. 'right' → logprob: -3.8044042587280273
    9. 'start' → logprob: -4.054404258728027
    10. 'idx' → logprob: -4.179404258728027

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01247798465192318
    2. '=index' → logprob: -4.887477874755859
    3. '=' → logprob: -5.512477874755859
    4. 'ex' → logprob: -8.01247787475586
    5. 'dx' → logprob: -8.38747787475586
    6. '=j' → logprob: -9.63747787475586
    7. '=i' → logprob: -10.38747787475586
    8. 'nd' → logprob: -10.88747787475586
    9. '=start' → logprob: -10.88747787475586
    10. '1' → logprob: -11.01247787475586

Token 71: ' index' (ID: 3472)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.004450059030205011
    2. ' index' → logprob: -6.004449844360352
    3. 'bis' → logprob: -6.254449844360352
    4. 'index' → logprob: -10.379449844360352
    5. ' ' → logprob: -11.879449844360352
    6. ' len' → logprob: -12.504449844360352
    7. ' N' → logprob: -13.504449844360352
    8. '   ' → logprob: -13.941949844360352
    9. '	b' → logprob: -14.254449844360352
    10. ' binary' → logprob: -14.504449844360352

Token 72: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018177684396505356
    2. ' +' → logprob: -4.018177509307861
    3. '<|end|>' → logprob: -11.01817798614502
    4. '1' → logprob: -12.26817798614502
    5. ' ' → logprob: -13.39317798614502
    6. '<|end|>' → logprob: -13.64317798614502
    7. '2' → logprob: -14.01817798614502
    8. '+
' → logprob: -14.26817798614502
    9. 's' → logprob: -14.89317798614502
    10. '0' → logprob: -15.26817798614502

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01111467182636261
    2. '2' → logprob: -4.511114597320557
    3. ' ' → logprob: -10.136115074157715
    4. 'bis' → logprob: -10.761115074157715
    5. '3' → logprob: -12.698615074157715
    6. ' bis' → logprob: -14.136115074157715
    7. '１' → logprob: -15.198615074157715
    8. '   ' → logprob: -15.323615074157715
    9. '```' → logprob: -15.573615074157715
    10. '  ' → logprob: -15.698615074157715

Token 74: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08713329583406448
    2. '<|end|>' → logprob: -2.5871334075927734
    3. '
' → logprob: -5.837133407592773
    4. '<|end|>' → logprob: -6.462133407592773
    5. ')' → logprob: -6.587133407592773
    6. '+' → logprob: -7.087133407592773
    7. '   ' → logprob: -7.712133407592773
    8. '```' → logprob: -8.462133407592773
    9. '        
' → logprob: -8.587133407592773
    10. ' ' → logprob: -9.337133407592773

Token 76: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.38694697618484497
    2. ' j' → logprob: -1.1369469165802002
    3. '   ' → logprob: -10.761946678161621
    4. 'l' → logprob: -11.386946678161621
    5. 'True' → logprob: -11.761946678161621
    6. 'N' → logprob: -11.761946678161621
    7. '    ' → logprob: -12.011946678161621
    8. '	j' → logprob: -12.261946678161621
    9. ' ' → logprob: -12.386946678161621
    10. ' True' → logprob: -12.886946678161621

Token 78: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2848266661167145
    2. '<N' → logprob: -1.784826636314392
    3. ' <' → logprob: -2.5348267555236816
    4. '<n' → logprob: -7.534826755523682
    5. '<len' → logprob: -8.909826278686523
    6. 'N' → logprob: -10.659826278686523
    7. ' ' → logprob: -12.284826278686523
    8. '<=' → logprob: -12.534826278686523
    9. '<num' → logprob: -12.534826278686523
    10. '```' → logprob: -13.034826278686523

Token 79: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.023258758708834648
    2. ' N' → logprob: -3.773258686065674
    3. ' ' → logprob: -11.898259162902832
    4. '   ' → logprob: -12.273259162902832
    5. '	N' → logprob: -14.773259162902832
    6. 'n' → logprob: -15.023259162902832
    7. '<N' → logprob: -15.023259162902832
    8. '  ' → logprob: -15.148259162902832
    9. '>N' → logprob: -15.648259162902832
    10. '(N' → logprob: -15.648259162902832

Token 80: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007940901443362236
    2. ' and' → logprob: -5.132940769195557
    3. 'and' → logprob: -6.632940769195557
    4. ' -' → logprob: -7.632940769195557
    5. ':' → logprob: -9.007941246032715
    6. ':
' → logprob: -9.632941246032715
    7. '<|end|>' → logprob: -11.632941246032715
    8. ' ' → logprob: -12.132941246032715
    9. '   ' → logprob: -12.757941246032715
    10. '       ' → logprob: -14.007941246032715

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.368984107510187e-05
    2. '2' → logprob: -10.375033378601074
    3. ' ' → logprob: -13.750033378601074
    4. '0' → logprob: -14.625033378601074
    5. '```' → logprob: -14.875033378601074
    6. '１' → logprob: -15.437533378601074
    7. '   ' → logprob: -15.750033378601074
    8. '१' → logprob: -17.06253433227539
    9. '۱' → logprob: -17.62503433227539
    10. '১' → logprob: -17.68753433227539

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029980497434735298
    2. ':
' → logprob: -3.654980421066284
    3. ' and' → logprob: -5.654980659484863
    4. 'and' → logprob: -9.779980659484863
    5. '           ' → logprob: -10.779980659484863
    6. ':

' → logprob: -10.779980659484863
    7. '       ' → logprob: -11.404980659484863
    8. ',' → logprob: -11.404980659484863
    9. ':
' → logprob: -11.904980659484863
    10. '<|end|>' → logprob: -11.904980659484863

Token 83: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27591222524642944
    2. ':' → logprob: -2.525912284851074
    3. '       ' → logprob: -3.275912284851074
    4. ',' → logprob: -3.525912284851074
    5. '<|end|>' → logprob: -3.525912284851074
    6. ':
' → logprob: -3.650912284851074
    7. '```' → logprob: -4.525912284851074
    8. ' ' → logprob: -5.150912284851074
    9. '               ' → logprob: -5.525912284851074
    10. '<|end|>' → logprob: -5.900912284851074

Token 84: ' second' (ID: 3099)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5129132866859436
    2. '           ' → logprob: -1.2629132270812988
    3. 'k' → logprob: -3.262913227081299
    4. ' x' → logprob: -4.012913227081299
    5. ' ' → logprob: -4.512913227081299
    6. '               ' → logprob: -4.887913227081299
    7. 'elem' → logprob: -5.012913227081299
    8. ' c' → logprob: -5.262913227081299
    9. ' elem' → logprob: -5.637913227081299
    10. ' p' → logprob: -5.637913227081299

Token 85: ' =' (ID: 314)
  Prédit: '_elem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elem' → logprob: -0.6820011138916016
    2. ' =' → logprob: -1.0570011138916016
    3. '=' → logprob: -2.0570011138916016
    4. 'elem' → logprob: -4.432001113891602
    5. '_val' → logprob: -5.932001113891602
    6. '_' → logprob: -5.932001113891602
    7. '_element' → logprob: -7.432001113891602
    8. '_value' → logprob: -8.557001113891602
    9. '_idx' → logprob: -8.682001113891602
    10. 'Elem' → logprob: -8.807001113891602

Token 86: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.25242388248443604
    2. 'l' → logprob: -1.502423882484436
    3. 'elem' → logprob: -8.502424240112305
    4. ' elem' → logprob: -9.627424240112305
    5. ' ' → logprob: -9.877424240112305
    6. ' ' → logprob: -10.127424240112305
    7. '	l' → logprob: -10.439924240112305
    8. '   ' → logprob: -10.752424240112305
    9. ' bis' → logprob: -11.439924240112305
    10. '    ' → logprob: -11.627424240112305

Token 87: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00038693982060067356
    2. '[index' → logprob: -8.250387191772461
    3. '[' → logprob: -9.750387191772461
    4. 'index' → logprob: -10.250387191772461
    5. 'j' → logprob: -10.750387191772461
    6. ' index' → logprob: -13.500387191772461
    7. '[i' → logprob: -13.750387191772461
    8. ' [' → logprob: -14.125387191772461
    9. ' j' → logprob: -14.125387191772461
    10. '[q' → logprob: -14.125387191772461

Token 88: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4785917103290558
    2. ']
' → logprob: -1.8535916805267334
    3. ')' → logprob: -2.1035916805267334
    4. ']' → logprob: -2.3535916805267334
    5. '           ' → logprob: -5.6035919189453125
    6. ')
' → logprob: -6.8535919189453125
    7. ']
' → logprob: -7.3535919189453125
    8. '               ' → logprob: -8.353591918945312
    9. '+' → logprob: -8.478591918945312
    10. '])' → logprob: -9.353591918945312

Token 89: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027448728680610657
    2. '<|end|>' → logprob: -4.027448654174805
    3. ' ' → logprob: -6.152448654174805
    4. '            
' → logprob: -6.402448654174805
    5. '               ' → logprob: -6.527448654174805
    6. ')' → logprob: -6.902448654174805
    7. '            ' → logprob: -7.402448654174805
    8. ',' → logprob: -7.527448654174805
    9. ' 
' → logprob: -7.902448654174805
    10. '<|end|>' → logprob: -8.652448654174805

Token 90: ' idx' (ID: 14016)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.32603561878204346
    2. '           ' → logprob: -1.7010356187820435
    3. 'k' → logprob: -2.576035499572754
    4. '```' → logprob: -5.201035499572754
    5. 'third' → logprob: -6.076035499572754
    6. '
' → logprob: -6.576035499572754
    7. ' third' → logprob: -6.576035499572754
    8. ' s' → logprob: -6.701035499572754
    9. 's' → logprob: -7.451035499572754
    10. ' c' → logprob: -7.576035499572754

Token 91: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3870159387588501
    2. ' =' → logprob: -1.13701593875885
    3. 'ex' → logprob: -9.762016296386719
    4. 'x' → logprob: -10.387016296386719
    5. '=end' → logprob: -12.012016296386719
    6. 's' → logprob: -12.262016296386719
    7. '_' → logprob: -12.512016296386719
    8. '1' → logprob: -13.012016296386719
    9. ' ' → logprob: -13.012016296386719
    10. '3' → logprob: -13.012016296386719

Token 92: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.0004885728703811765
    2. 'bis' → logprob: -7.625488758087158
    3. ' ' → logprob: -15.87548828125
    4. ' j' → logprob: -16.75048828125
    5. ' N' → logprob: -17.00048828125
    6. 'j' → logprob: -17.00048828125
    7. '```' → logprob: -17.12548828125
    8. 'Bis' → logprob: -17.37548828125
    9. ' binary' → logprob: -17.62548828125
    10. '	b' → logprob: -17.62548828125

Token 93: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -6.153795766294934e-06
    2. 'sect' → logprob: -12.375005722045898
    3. 'ected' → logprob: -13.875005722045898
    4. '```' → logprob: -15.375005722045898
    5. 'ectl' → logprob: -15.500005722045898
    6. 'ec' → logprob: -15.500005722045898
    7. 'e' → logprob: -16.1250057220459
    8. 'ects' → logprob: -16.2500057220459
    9. 'ection' → logprob: -16.6250057220459
    10. 'ector' → logprob: -17.1250057220459

Token 94: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.1279553291387856e-05
    2. '_right' → logprob: -11.625011444091797
    3. '_' → logprob: -13.750011444091797
    4. '_le' → logprob: -14.500011444091797
    5. '_l' → logprob: -14.625011444091797
    6. 'left' → logprob: -16.125011444091797
    7. '_LEFT' → logprob: -17.000011444091797
    8. ' _' → logprob: -17.125011444091797
    9. '_Left' → logprob: -17.625011444091797
    10. '_index' → logprob: -17.750011444091797

Token 95: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0003811025235336274
    2. '(' → logprob: -7.875380992889404
    3. '(
' → logprob: -14.875381469726562
    4. '(ll' → logprob: -16.375381469726562
    5. '(a' → logprob: -16.500381469726562
    6. '(s' → logprob: -16.625381469726562
    7. '/l' → logprob: -16.625381469726562
    8. '(m' → logprob: -16.750381469726562
    9. '	l' → logprob: -17.000381469726562
    10. '           ' → logprob: -17.125381469726562

Token 96: ',' (ID: 11)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.4611332416534424
    2. ',l' → logprob: -1.5861332416534424
    3. ',' → logprob: -1.8361332416534424
    4. '(' → logprob: -5.336133003234863
    5. ' ,' → logprob: -9.461133003234863
    6. ' (' → logprob: -9.586133003234863
    7. ')' → logprob: -9.711133003234863
    8. ')(' → logprob: -10.086133003234863
    9. ' l' → logprob: -10.336133003234863
    10. ',(' → logprob: -10.586133003234863

Token 97: ' elem' (ID: 23108)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.6499574780464172
    2. 'elem' → logprob: -0.7749574780464172
    3. ' elem' → logprob: -5.149957656860352
    4. '(elem' → logprob: -5.274957656860352
    5. ' second' → logprob: -6.024957656860352
    6. '(second' → logprob: -6.649957656860352
    7. ')' → logprob: -7.899957656860352
    8. '(' → logprob: -7.899957656860352
    9. ')(' → logprob: -8.024957656860352
    10. '	elem' → logprob: -8.024957656860352

Token 98: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5799761414527893
    2. ' +' → logprob: -0.8299761414527893
    3. 'second' → logprob: -6.4549760818481445
    4. '+j' → logprob: -6.7049760818481445
    5. ',' → logprob: -7.7049760818481445
    6. 'third' → logprob: -8.704976081848145
    7. ' second' → logprob: -9.204976081848145
    8. '+l' → logprob: -9.329976081848145
    9. ' ' → logprob: -9.454976081848145
    10. '[' → logprob: -9.704976081848145

Token 99: 'second' (ID: 13901)
  Prédit: 'second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.0076228417456150055
    2. ' second' → logprob: -4.882622718811035
    3. ' ' → logprob: -12.632622718811035
    4. 'se' → logprob: -12.757622718811035
    5. 'third' → logprob: -13.132622718811035
    6. 's' → logprob: -13.382622718811035
    7. 'l' → logprob: -13.757622718811035
    8. '	second' → logprob: -14.007622718811035
    9. ' l' → logprob: -14.132622718811035
    10. '.second' → logprob: -14.257622718811035

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2280982881784439
    2. ',' → logprob: -1.6030982732772827
    3. ')
' → logprob: -6.978098392486572
    4. ',j' → logprob: -7.728098392486572
    5. ' )' → logprob: -7.853098392486572
    6. ',index' → logprob: -8.478097915649414
    7. '+' → logprob: -8.603097915649414
    8. ' ,' → logprob: -8.728097915649414
    9. '-' → logprob: -9.353097915649414
    10. ',l' → logprob: -10.228097915649414

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07801998406648636
    2. '<|end|>' → logprob: -2.8280200958251953
    3. ')' → logprob: -4.828020095825195
    4. '<|end|>' → logprob: -5.578020095825195
    5. ',' → logprob: -6.953020095825195
    6. '
' → logprob: -7.328020095825195
    7. '            
' → logprob: -7.453020095825195
    8. '		' → logprob: -7.703020095825195
    9. '               ' → logprob: -8.078020095825195
    10. ')
' → logprob: -8.828020095825195

Token 102: ' res' (ID: 694)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4946569502353668
    2. '           ' → logprob: -2.119657039642334
    3. ' res' → logprob: -2.244657039642334
    4. 'if' → logprob: -2.619657039642334
    5. '<|end|>' → logprob: -2.744657039642334
    6. 'res' (adapté à ' res') → logprob: -3.994657039642334
    7. ')' → logprob: -6.119657039642334
    8. '       ' → logprob: -6.244657039642334
    9. '```' → logprob: -6.369657039642334
    10. '   ' → logprob: -7.369657039642334

Token 103: '=res' (ID: 182169)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16137950122356415
    2. ' +=' → logprob: -1.9113794565200806
    3. '+=(' → logprob: -7.411379337310791
    4. '+' → logprob: -7.536379337310791
    5. ']+=' → logprob: -12.16137981414795
    6. '=' → logprob: -13.03637981414795
    7. '	' → logprob: -13.28637981414795
    8. '   ' → logprob: -13.66137981414795
    9. '-=' → logprob: -13.78637981414795
    10. '+='' → logprob: -13.91137981414795

Token 104: '+(' (ID: 31717)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008837147615849972
    2. ' +' → logprob: -7.25088357925415
    3. '+j' → logprob: -9.375884056091309
    4. '-' → logprob: -9.750884056091309
    5. '+(' → logprob: -11.500884056091309
    6. '+-' → logprob: -12.500884056091309
    7. '+x' → logprob: -12.625884056091309
    8. '+=' → logprob: -13.000884056091309
    9. '+n' → logprob: -13.000884056091309
    10. '+r' → logprob: -13.250884056091309

Token 105: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.771655115589965e-05
    2. ' idx' → logprob: -11.625018119812012
    3. 'max' → logprob: -11.875018119812012
    4. '(idx' → logprob: -14.375018119812012
    5. 'j' → logprob: -15.250018119812012
    6. '	idx' → logprob: -15.375018119812012
    7. '   ' → logprob: -15.750018119812012
    8. ')' → logprob: -15.750018119812012
    9. 'min' → logprob: -16.125017166137695
    10. 'index' → logprob: -16.750017166137695

Token 106: '-j' (ID: 19720)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5892592072486877
    2. ' -' → logprob: -0.8392592072486877
    3. ')-(' → logprob: -4.964259147644043
    4. '-(' → logprob: -5.214259147644043
    5. '-j' → logprob: -7.964259147644043
    6. ')' → logprob: -8.339259147644043
    7. ' -(' → logprob: -9.839259147644043
    8. ')-' → logprob: -9.839259147644043
    9. '-)' → logprob: -10.589259147644043
    10. ' ' → logprob: -10.839259147644043

Token 107: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5795159339904785
    2. ' -' → logprob: -0.8295159339904785
    3. ')' → logprob: -5.7045159339904785
    4. '1' → logprob: -9.20451545715332
    5. ')-' → logprob: -9.57951545715332
    6. ' )' → logprob: -10.07951545715332
    7. '-)' → logprob: -11.32951545715332
    8. ' ' → logprob: -11.70451545715332
    9. ')
' → logprob: -13.70451545715332
    10. ' ' → logprob: -13.82951545715332

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -15.000017166137695
    4. '0' → logprob: -18.000017166137695
    5. '  ' → logprob: -18.125017166137695
    6. ')' → logprob: -18.375017166137695
    7. '```' → logprob: -18.500017166137695
    8. '   ' → logprob: -18.562517166137695
    9. '<|end|>' → logprob: -18.625017166137695
    10. '2' → logprob: -18.875017166137695

Token 109: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07977678626775742
    2. ')' → logprob: -2.5797767639160156
    3. '           ' → logprob: -7.079776763916016
    4. ')
' → logprob: -10.079776763916016
    5. ')

' → logprob: -14.079776763916016
    6. ' )
' → logprob: -14.454776763916016
    7. 'j' → logprob: -15.329776763916016
    8. ')\
' → logprob: -15.329776763916016
    9. ')\' → logprob: -15.329776763916016
    10. '       ' → logprob: -15.579776763916016

Token 110: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005174091784283519
    2. 'j' → logprob: -8.125517845153809
    3. '
' → logprob: -9.125517845153809
    4. '       ' → logprob: -10.250517845153809
    5. '		' → logprob: -10.500517845153809
    6. '   ' → logprob: -10.625517845153809
    7. '```' → logprob: -11.000517845153809
    8. '	j' → logprob: -13.500517845153809
    9. '               ' → logprob: -13.750517845153809
    10. '	       ' → logprob: -13.750517845153809

Token 111: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.23263317346572876
    2. '           ' → logprob: -1.607633113861084
    3. '       ' → logprob: -5.357633113861084
    4. '   ' → logprob: -6.607633113861084
    5. '	j' → logprob: -7.732633113861084
    6. ' j' → logprob: -7.857633113861084
    7. '```' → logprob: -9.232633590698242
    8. '		' → logprob: -10.357633590698242
    9. '	   ' → logprob: -10.607633590698242
    10. '
' → logprob: -10.607633590698242

Token 112: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004430239554494619
    2. ' +=' → logprob: -5.754430294036865
    3. '+' → logprob: -6.754430294036865
    4. '=' → logprob: -9.379429817199707
    5. '++' → logprob: -13.754429817199707
    6. ']+=' → logprob: -15.254429817199707
    7. '+='' → logprob: -16.754430770874023
    8. ' +' → logprob: -16.879430770874023
    9. '1' → logprob: -17.004430770874023
    10. '```' → logprob: -17.379430770874023

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -20.125
    4. '```' → logprob: -20.25
    5. '１' → logprob: -21.375
    6. '+' → logprob: -22.125
    7. '<|end|>' → logprob: -22.25
    8. '  ' → logprob: -22.5
    9. '۱' → logprob: -22.5
    10. '१' → logprob: -23.5

Token 114: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00560641149058938
    2. '       ' → logprob: -5.380606174468994
    3. '
' → logprob: -7.630606174468994
    4. '   ' → logprob: -7.880606174468994
    5. '```' → logprob: -10.255606651306152
    6. '<|end|>' → logprob: -10.380606651306152
    7. 'index' → logprob: -10.880606651306152
    8. '        
' → logprob: -11.505606651306152
    9. '    
' → logprob: -11.630606651306152
    10. '\n' → logprob: -12.630606651306152

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044794224202632904
    2. '   ' → logprob: -3.1697943210601807
    3. 'index' → logprob: -6.419794082641602
    4. '```' → logprob: -9.544794082641602
    5. ' index' → logprob: -9.919794082641602
    6. '           ' → logprob: -11.419794082641602
    7. ' ' → logprob: -12.044794082641602
    8. 'return' → logprob: -12.044794082641602
    9. '
' → logprob: -12.294794082641602
    10. 'print' → logprob: -12.544794082641602

Token 116: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.01465290505439043
    2. '   ' → logprob: -4.264652729034424
    3. '       ' → logprob: -8.139653205871582
    4. ' index' → logprob: -8.639653205871582
    5. 'print' → logprob: -11.389653205871582
    6. '```' → logprob: -12.764653205871582
    7. 'return' → logprob: -13.014653205871582
    8. ' ' → logprob: -13.514653205871582
    9. '	index' → logprob: -13.889653205871582
    10. '  ' → logprob: -14.014653205871582

Token 117: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014386092312633991
    2. '+' → logprob: -4.264386177062988
    3. ' +=' → logprob: -8.514386177062988
    4. '++' → logprob: -11.389386177062988
    5. '+="' → logprob: -12.514386177062988
    6. '+='' → logprob: -12.764386177062988
    7. '+++' → logprob: -13.514386177062988
    8. ']+=' → logprob: -13.639386177062988
    9. '+=(' → logprob: -14.389386177062988
    10. '=' → logprob: -14.639386177062988

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -20.0
    4. '１' → logprob: -20.375
    5. '```' → logprob: -20.5
    6. '0' → logprob: -21.125
    7. '  ' → logprob: -21.25
    8. '۱' → logprob: -22.0625
    9. '+' → logprob: -22.4375
    10. '१' → logprob: -22.5

Token 119: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4801937937736511
    2. '   ' → logprob: -0.9801937937736511
    3. 'return' → logprob: -5.480193614959717
    4. '<|end|>' → logprob: -6.855193614959717
    5. ' print' → logprob: -7.980193614959717
    6. '
' → logprob: -7.980193614959717
    7. '	print' → logprob: -10.230194091796875
    8. '```' → logprob: -10.355194091796875
    9. '    
' → logprob: -10.480194091796875
    10. ' return' → logprob: -10.605194091796875

Token 120: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21131165325641632
    2. '   ' → logprob: -1.7113116979599
    3. 'return' → logprob: -4.8363118171691895
    4. '<|end|>' → logprob: -6.7113118171691895
    5. ' print' → logprob: -7.9613118171691895
    6. '```' → logprob: -9.336311340332031
    7. '#' → logprob: -9.586311340332031
    8. '#print' → logprob: -9.961311340332031
    9. '    
' → logprob: -10.211311340332031
    10. ' return' → logprob: -10.461311340332031

Token 121: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07240771502256393
    2. '   ' → logprob: -2.8224077224731445
    3. 'return' → logprob: -4.5724077224731445
    4. ' print' → logprob: -10.197407722473145
    5. ' return' → logprob: -12.197407722473145
    6. '```' → logprob: -12.572407722473145
    7. '	print' → logprob: -13.072407722473145
    8. '<|end|>' → logprob: -13.197407722473145
    9. '	return' → logprob: -13.947407722473145
    10. '    
' → logprob: -14.322407722473145

Token 122: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.06198718398809433
    2. '(' → logprob: -2.8119871616363525
    3. '()' → logprob: -11.311986923217773
    4. ' (' → logprob: -12.436986923217773
    5. 'res' → logprob: -13.686986923217773
    6. '(
' → logprob: -14.186986923217773
    7. '('' → logprob: -14.686986923217773
    8. '(re' → logprob: -15.811986923217773
    9. '(r' → logprob: -15.936986923217773
    10. '(len' → logprob: -16.061986923217773

Token 123: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')`' → logprob: -16.375
    4. ')
' → logprob: -16.625
    5. '()' → logprob: -17.0
    6. '())' → logprob: -18.25
    7. '`)' → logprob: -18.375
    8. '))' → logprob: -18.75
    9. '）' → logprob: -19.625
    10. ')}' → logprob: -19.75

Token 124: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 123
Tokens correctement prédits (1ère position, stricte): 54
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 99
Précision stricte (1ère position): 43.90%
Précision adaptée (1ère position): 47.15%
Précision (top 10): 80.49%
================================================================================
