================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
result = lambda k, x: ["No","Yes"][(k<<9)+(k<<1)>=x]
exec("a,b=map(int,input().split())\nprint(result(a,b))")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'result' (ID: 2521)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' lambda' (ID: 27871)
  → Token d'amorce (pas de prédiction)

Token 3: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9457661509513855
    2. ' result' → logprob: -1.6957662105560303
    3. '(' → logprob: -1.8207662105560303
    4. ' (' → logprob: -2.1957662105560303
    5. ' x' → logprob: -2.5707662105560303
    6. 'result' → logprob: -3.5707662105560303
    7. '"' → logprob: -4.570765972137451
    8. ''' → logprob: -4.695765972137451
    9. ' a' → logprob: -4.820765972137451
    10. '  ' → logprob: -4.945765972137451

Token 4: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024598782882094383
    2. ' :' → logprob: -4.024598598480225
    3. ',' → logprob: -5.149598598480225
    4. ' ,' → logprob: -8.399599075317383
    5. ':,' → logprob: -8.524599075317383
    6. ',:' → logprob: -10.149599075317383
    7. '_:' → logprob: -10.274599075317383
    8. ' :,' → logprob: -10.774599075317383
    9. '[' → logprob: -11.024599075317383
    10. '[:' → logprob: -11.149599075317383

Token 5: ' x' (ID: 1215)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.6360499858856201
    2. 'v' → logprob: -0.7610499858856201
    3. ' n' → logprob: -7.261050224304199
    4. 'n' → logprob: -7.886050224304199
    5. ' x' → logprob: -7.886050224304199
    6. ':' → logprob: -8.3860502243042
    7. 'x' → logprob: -8.3860502243042
    8. ' k' → logprob: -8.8860502243042
    9. ' t' → logprob: -9.3860502243042
    10. ' ' → logprob: -9.3860502243042

Token 6: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013841184787452221
    2. ' :' → logprob: -4.388841152191162
    3. ',' → logprob: -6.763841152191162
    4. '[' → logprob: -10.51384162902832
    5. ' ,' → logprob: -10.88884162902832
    6. '.' → logprob: -11.01384162902832
    7. ' ' → logprob: -11.01384162902832
    8. ':,' → logprob: -11.38884162902832
    9. ',:' → logprob: -11.88884162902832
    10. ',k' → logprob: -11.88884162902832

Token 7: ' ["' (ID: 9129)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3941079080104828
    2. ' x' → logprob: -1.6441079378128052
    3. 'k' → logprob: -2.5191078186035156
    4. 'x' → logprob: -3.3941078186035156
    5. ' (' → logprob: -4.269107818603516
    6. '(k' → logprob: -6.894107818603516
    7. ' ' → logprob: -7.019107818603516
    8. '(' → logprob: -7.519107818603516
    9. ' int' → logprob: -8.269107818603516
    10. ' f' → logprob: -8.269107818603516

Token 8: 'No' (ID: 3160)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4102623760700226
    2. '{' → logprob: -2.5352623462677
    3. '"' → logprob: -2.9102623462677
    4. 'f' → logprob: -3.1602623462677
    5. 'x' → logprob: -3.7852623462677
    6. '"]' → logprob: -3.9102623462677
    7. '0' → logprob: -4.160262584686279
    8. '{"' → logprob: -4.160262584686279
    9. '{}' → logprob: -4.285262584686279
    10. '{k' → logprob: -4.410262584686279

Token 9: '","' (ID: 4294)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6559908390045166
    2. ' match' → logprob: -1.1559908390045166
    3. ' "' → logprob: -3.5309908390045166
    4. '"' → logprob: -3.7809908390045166
    5. ' t' → logprob: -4.0309906005859375
    6. ' result' → logprob: -4.2809906005859375
    7. ' Match' → logprob: -4.4059906005859375
    8. ' ",' → logprob: -4.6559906005859375
    9. ' matches' → logprob: -5.1559906005859375
    10. '"]' → logprob: -5.4059906005859375

Token 10: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.4455110430717468
    2. ' Yes' → logprob: -1.0705111026763916
    3. ' yes' → logprob: -5.3205108642578125
    4. '"' → logprob: -5.4455108642578125
    5. '"]' → logprob: -5.4455108642578125
    6. 's' → logprob: -7.0705108642578125
    7. ' "' → logprob: -7.1955108642578125
    8. ' "]' → logprob: -8.070510864257812
    9. 'yes' → logprob: -8.445510864257812
    10. ' ' → logprob: -9.195510864257812

Token 11: '"]' (ID: 2601)
  Prédit: '"]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.03400318697094917
    2. '"][' → logprob: -3.409003257751465
    3. '"](' → logprob: -8.909003257751465
    4. '"' → logprob: -9.534003257751465
    5. '"]["' → logprob: -9.659003257751465
    6. '",' → logprob: -10.034003257751465
    7. ' "]' → logprob: -11.034003257751465
    8. '"].' → logprob: -11.784003257751465
    9. ']' → logprob: -12.159003257751465
    10. '"];' → logprob: -13.034003257751465

Token 12: '[(' (ID: 20542)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017412242013961077
    2. '[k' → logprob: -6.876741409301758
    3. '[
' → logprob: -7.876741409301758
    4. '[result' → logprob: -9.001741409301758
    5. '[(' → logprob: -9.626741409301758
    6. '[int' → logprob: -10.501741409301758
    7. '(' → logprob: -10.876741409301758
    8. '[min' → logprob: -11.626741409301758
    9. '[token' → logprob: -11.626741409301758
    10. '```' → logprob: -11.751741409301758

Token 13: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08473630249500275
    2. 'x' → logprob: -2.5847363471984863
    3. ' k' → logprob: -5.584736347198486
    4. ' x' → logprob: -6.459736347198486
    5. 'int' → logprob: -8.834735870361328
    6. '0' → logprob: -9.084735870361328
    7. '(k' → logprob: -9.709735870361328
    8. 'not' → logprob: -9.834735870361328
    9. 'result' → logprob: -10.709735870361328
    10. '(x' → logprob: -10.834735870361328

Token 14: '<<' (ID: 5354)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.46103039383888245
    2. ' >' → logprob: -1.83603036403656
    3. '>=' → logprob: -2.8360304832458496
    4. '==' → logprob: -3.3360304832458496
    5. '<=' → logprob: -3.5860304832458496
    6. ' >=' → logprob: -3.9610304832458496
    7. ' ==' → logprob: -4.21103048324585
    8. ' <=' → logprob: -4.46103048324585
    9. ' and' → logprob: -4.58603048324585
    10. ')' → logprob: -4.71103048324585

Token 15: '9' (ID: 24)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1386314034461975
    2. '1' → logprob: -2.6386313438415527
    3. ' x' → logprob: -2.8886313438415527
    4. ' ' → logprob: -6.388631343841553
    5. '7' → logprob: -8.513631820678711
    6. '6' → logprob: -9.263631820678711
    7. ' (' → logprob: -9.263631820678711
    8. '5' → logprob: -9.763631820678711
    9. '(x' → logprob: -9.888631820678711
    10. '4' → logprob: -10.638631820678711

Token 16: ')+(' (ID: 104644)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03247751295566559
    2. ')&' → logprob: -4.157477378845215
    3. '|' → logprob: -4.657477378845215
    4. '&' → logprob: -5.407477378845215
    5. ' )' → logprob: -6.657477378845215
    6. ')x' → logprob: -8.282477378845215
    7. ')|' → logprob: -8.782477378845215
    8. 'x' → logprob: -8.907477378845215
    9. ')>' → logprob: -9.407477378845215
    10. ' &' → logprob: -9.532477378845215

Token 17: 'k' (ID: 74)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006179052405059338
    2. ' x' → logprob: -5.131178855895996
    3. '(x' → logprob: -9.256178855895996
    4. '1' → logprob: -9.881178855895996
    5. '(' → logprob: -10.131178855895996
    6. ' (' → logprob: -10.506178855895996
    7. 'int' → logprob: -11.756178855895996
    8. 'k' → logprob: -11.881178855895996
    9. ')x' → logprob: -12.506178855895996
    10. '((' → logprob: -12.881178855895996

Token 18: '<<' (ID: 5354)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -1.1263678073883057
    2. '<<' → logprob: -1.6263678073883057
    3. '&' → logprob: -1.8763678073883057
    4. '*' → logprob: -2.0013678073883057
    5. '*x' → logprob: -3.0013678073883057
    6. '|' → logprob: -4.001367568969727
    7. '>' → logprob: -4.126367568969727
    8. '^' → logprob: -4.126367568969727
    9. ' &' → logprob: -4.376367568969727
    10. '==' → logprob: -5.001367568969727

Token 19: '1' (ID: 16)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.8895288109779358
    2. '4' → logprob: -1.889528751373291
    3. '7' → logprob: -1.889528751373291
    4. '3' → logprob: -2.139528751373291
    5. '6' → logprob: -2.514528751373291
    6. '5' → logprob: -2.639528751373291
    7. '1' → logprob: -5.014528751373291
    8. '2' → logprob: -5.264528751373291
    9. '10' → logprob: -5.639528751373291
    10. '9' → logprob: -7.264528751373291

Token 20: ')>=' (ID: 173043)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.15029658377170563
    2. ')' → logprob: -2.525296688079834
    3. ')+(' → logprob: -3.025296688079834
    4. ')|' → logprob: -5.650296688079834
    5. ')^' → logprob: -5.775296688079834
    6. '|' → logprob: -6.525296688079834
    7. ')|(' → logprob: -7.275296688079834
    8. ')x' → logprob: -7.400296688079834
    9. '^' → logprob: -7.900296688079834
    10. ' )' → logprob: -8.025296211242676

Token 21: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.038249872624874115
    2. ' x' → logprob: -3.288249969482422
    3. '(' → logprob: -9.413249969482422
    4. '(x' → logprob: -9.538249969482422
    5. ' (' → logprob: -10.288249969482422
    6. ' ' → logprob: -11.913249969482422
    7. '256' → logprob: -12.538249969482422
    8. '0' → logprob: -13.413249969482422
    9. '((' → logprob: -13.538249969482422
    10. '64' → logprob: -14.788249969482422

Token 22: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004441751167178154
    2. ')]' → logprob: -5.504441738128662
    3. '])' → logprob: -9.00444221496582
    4. ']]' → logprob: -9.50444221496582
    5. '])]' → logprob: -10.37944221496582
    6. ' ]' → logprob: -10.50444221496582
    7. ']<<' → logprob: -11.25444221496582
    8. ')' → logprob: -11.37944221496582
    9. '*' → logprob: -11.37944221496582
    10. ']>' → logprob: -11.75444221496582

Token 23: 'exec' (ID: 31592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009262504056096077
    2. '("("' → logprob: -5.384262561798096
    3. '("' → logprob: -6.384262561798096
    4. '('' → logprob: -6.384262561798096
    5. '(code' → logprob: -8.009262084960938
    6. '("""' → logprob: -8.259262084960938
    7. '(open' → logprob: -9.009262084960938
    8. '((' → logprob: -9.134262084960938
    9. '(
' → logprob: -9.384262084960938
    10. '(user' → logprob: -9.634262084960938

Token 25: 'a' (ID: 64)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.580540657043457
    2. 'r' → logprob: -0.955540657043457
    3. 'res' → logprob: -3.955540657043457
    4. '"' → logprob: -4.705540657043457
    5. 'k' → logprob: -5.205540657043457
    6. '")' → logprob: -5.830540657043457
    7. 're' → logprob: -5.830540657043457
    8. 'p' → logprob: -6.455540657043457
    9. '(' → logprob: -6.455540657043457
    10. ')' → logprob: -6.705540657043457

Token 26: ',b' (ID: 17568)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2495553493499756
    2. 'dd' → logprob: -1.4995553493499756
    3. 'a' → logprob: -2.7495553493499756
    4. '=' → logprob: -2.9995553493499756
    5. ' +' → logprob: -3.1245553493499756
    6. '+=' → logprob: -3.2495553493499756
    7. '**' → logprob: -3.7495553493499756
    8. 'b' → logprob: -3.8745553493499756
    9. ' +=' → logprob: -3.8745553493499756
    10. '[' → logprob: -4.124555587768555

Token 27: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09629770368337631
    2. '=input' → logprob: -2.4712977409362793
    3. ' =' → logprob: -4.971297740936279
    4. '=k' → logprob: -8.971297264099121
    5. '=c' → logprob: -9.596297264099121
    6. ',c' → logprob: -10.221297264099121
    7. '=b' → logprob: -10.221297264099121
    8. ',k' → logprob: -10.596297264099121
    9. '=int' → logprob: -10.721297264099121
    10. '=list' → logprob: -10.846297264099121

Token 28: 'map' (ID: 3726)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6594234704971313
    2. 'map' → logprob: -0.9094234704971313
    3. ' map' → logprob: -3.409423351287842
    4. ' input' → logprob: -3.784423351287842
    5. '0' → logprob: -4.909423351287842
    6. '1' → logprob: -5.409423351287842
    7. '5' → logprob: -6.534423351287842
    8. ' ' → logprob: -6.659423351287842
    9. '10' → logprob: -6.784423351287842
    10. '2' → logprob: -6.784423351287842

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0026018184144049883
    2. '(str' → logprob: -6.252601623535156
    3. '(' → logprob: -7.752601623535156
    4. '(eval' → logprob: -9.252601623535156
    5. '(input' → logprob: -9.502601623535156
    6. 'int' → logprob: -10.002601623535156
    7. 'str' → logprob: -11.002601623535156
    8. '<int' → logprob: -12.627601623535156
    9. ',int' → logprob: -13.752601623535156
    10. '(list' → logprob: -13.877601623535156

Token 30: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.19885040819644928
    2. ',input' → logprob: -2.073850393295288
    3. 'input' → logprob: -2.948850393295288
    4. ',' → logprob: -7.073850631713867
    5. ' input' → logprob: -7.073850631713867
    6. '(' → logprob: -8.073850631713867
    7. ')' → logprob: -9.198850631713867
    8. '=input' → logprob: -9.573850631713867
    9. '<input' → logprob: -11.448850631713867
    10. ' (' → logprob: -11.448850631713867

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010890735575230792
    2. '()' → logprob: -9.37510871887207
    3. '("' → logprob: -11.12510871887207
    4. '("").' → logprob: -12.62510871887207
    5. '())' → logprob: -13.12510871887207
    6. '('' → logprob: -13.87510871887207
    7. '()))' → logprob: -14.25010871887207
    8. '(' → logprob: -14.37510871887207
    9. '('').' → logprob: -15.00010871887207
    10. ' ().' → logprob: -15.12510871887207

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.006006828509271e-05
    2. ' split' → logprob: -10.125080108642578
    3. 'strip' → logprob: -10.375080108642578
    4. 'rstrip' → logprob: -12.125080108642578
    5. '(split' → logprob: -13.125080108642578
    6. '```' → logprob: -14.625080108642578
    7. ')' → logprob: -15.500080108642578
    8. 'replace' → logprob: -15.750080108642578
    9. 's' → logprob: -16.125080108642578
    10. ' ' → logprob: -16.750080108642578

Token 33: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6318612098693848
    2. '()))' → logprob: -1.0068612098693848
    3. '))' → logprob: -2.7568612098693848
    4. ')' → logprob: -3.5068612098693848
    5. '()' → logprob: -4.881861209869385
    6. '"))' → logprob: -7.381861209869385
    7. ')")' → logprob: -7.631861209869385
    8. '("' → logprob: -8.131860733032227
    9. '(' → logprob: -9.631860733032227
    10. '('' → logprob: -9.756860733032227

Token 34: '\' (ID: 59)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2882349491119385
    2. ')
' → logprob: -1.6632349491119385
    3. '")' → logprob: -3.5382349491119385
    4. ');' → logprob: -4.038234710693359
    5. ')\' → logprob: -5.038234710693359
    6. ')
' → logprob: -6.788234710693359
    7. '")
' → logprob: -6.913234710693359
    8. '\n' → logprob: -6.913234710693359
    9. ')")' → logprob: -6.913234710693359
    10. '
' → logprob: -7.038234710693359

Token 35: 'n' (ID: 77)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2050650119781494
    2. 'result' → logprob: -1.2050650119781494
    3. '\n' → logprob: -2.0800650119781494
    4. ')' → logprob: -2.4550650119781494
    5. '
' → logprob: -2.4550650119781494
    6. 'print' → logprob: -3.8300650119781494
    7. ';' → logprob: -3.8300650119781494
    8. ',result' → logprob: -4.08006477355957
    9. '")' → logprob: -4.45506477355957
    10. ');' → logprob: -5.08006477355957

Token 36: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000639169302303344
    2. 'if' → logprob: -8.125638961791992
    3. 'result' → logprob: -8.375638961791992
    4. 'c' → logprob: -10.250638961791992
    5. 'r' → logprob: -10.375638961791992
    6. ' print' → logprob: -11.375638961791992
    7. 'res' → logprob: -11.750638961791992
    8. 'exec' → logprob: -11.750638961791992
    9. 'p' → logprob: -11.875638961791992
    10. 'pr' → logprob: -12.375638961791992

Token 37: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00038777425652369857
    2. '(' → logprob: -8.125388145446777
    3. 'result' → logprob: -9.500388145446777
    4. ' (' → logprob: -11.875388145446777
    5. '((' → logprob: -12.125388145446777
    6. '(f' → logprob: -13.375388145446777
    7. '(res' → logprob: -14.125388145446777
    8. ' result' → logprob: -14.125388145446777
    9. '(a' → logprob: -15.500388145446777
    10. '/result' → logprob: -15.875388145446777

Token 38: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.014455875381827354
    2. '(' → logprob: -4.264455795288086
    3. '((' → logprob: -8.264455795288086
    4. ' (' → logprob: -11.264455795288086
    5. '(
' → logprob: -12.139455795288086
    6. '(b' → logprob: -12.139455795288086
    7. '(k' → logprob: -13.139455795288086
    8. ')' → logprob: -13.639455795288086
    9. '(f' → logprob: -14.139455795288086
    10. '('' → logprob: -14.264455795288086

Token 39: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.4740888774394989
    2. ',' → logprob: -0.9740889072418213
    3. ' ,' → logprob: -11.724088668823242
    4. 'b' → logprob: -13.224088668823242
    5. ',x' → logprob: -14.349088668823242
    6. ',a' → logprob: -15.474088668823242
    7. ' ' → logprob: -15.599088668823242
    8. ',y' → logprob: -15.849088668823242
    9. ',
' → logprob: -16.224088668823242
    10. ',input' → logprob: -16.349088668823242

Token 40: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000287795381154865
    2. ')))' → logprob: -8.750288009643555
    3. ')' → logprob: -9.375288009643555
    4. '"))' → logprob: -10.250288009643555
    5. '))
' → logprob: -11.875288009643555
    6. ''))' → logprob: -14.000288009643555
    7. ' ))' → logprob: -15.000288009643555
    8. ')")' → logprob: -15.375288009643555
    9. '))
' → logprob: -15.750288009643555
    10. '()))' → logprob: -16.125288009643555

Token 41: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5822766423225403
    2. ')' → logprob: -0.8322766423225403
    3. ')")' → logprob: -5.082276821136475
    4. '))' → logprob: -10.457276344299316
    5. '`)' → logprob: -11.082276344299316
    6. '')' → logprob: -11.207276344299316
    7. ')"' → logprob: -11.332276344299316
    8. '```' → logprob: -11.582276344299316
    9. ' )' → logprob: -11.957276344299316
    10. ')">' → logprob: -12.207276344299316


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 39
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 25
Précision stricte (1ère position): 41.03%
Précision adaptée (1ère position): 41.03%
Précision (top 10): 64.10%
================================================================================
