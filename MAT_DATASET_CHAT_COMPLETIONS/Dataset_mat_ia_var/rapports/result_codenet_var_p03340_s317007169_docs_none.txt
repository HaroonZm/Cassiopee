================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
A = list(map(int, input().split()))
right = 0
sum_n = bit_n = 0
ans = 0
for left in range(N):
    while right < N and sum_n + A[right] == sum_n ^ A[right]:
        sum_n += A[right]
        bit_n ^= A[right]
        right += 1
    ans += right - left
    if right == left:
        right += 1
    else:
        sum_n -= A[left]
        bit_n ^= A[left]
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00036263695801608264
    2. ''' → logprob: -9.000362396240234
    3. '(N' → logprob: -9.375362396240234
    4. '`' → logprob: -10.000362396240234
    5. '```' → logprob: -10.125362396240234
    6. '(
' → logprob: -10.375362396240234
    7. '("("' → logprob: -11.625362396240234
    8. '('' → logprob: -12.000362396240234
    9. 'N' → logprob: -12.250362396240234
    10. ')' → logprob: -12.500362396240234

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5316423177719116
    2. ')' → logprob: -0.9066423177719116
    3. '()' → logprob: -5.156642436981201
    4. '())' → logprob: -6.656642436981201
    5. '(
' → logprob: -7.656642436981201
    6. '```' → logprob: -8.781641960144043
    7. '))' → logprob: -8.906641960144043
    8. '")' → logprob: -9.406641960144043
    9. '')' → logprob: -9.531641960144043
    10. '(

' → logprob: -9.906641960144043

Token 5: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2070285826921463
    2. 'if' → logprob: -2.95702862739563
    3. 's' → logprob: -3.33202862739563
    4. 'a' → logprob: -3.58202862739563
    5. ' for' → logprob: -4.582028388977051
    6. 'x' → logprob: -4.582028388977051
    7. '`' → logprob: -4.957028388977051
    8. 'result' → logprob: -5.207028388977051
    9. 'sum' → logprob: -5.457028388977051
    10. 'data' → logprob: -5.707028388977051

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01235907431691885
    2. ' =' → logprob: -5.762359142303467
    3. '=' → logprob: -5.887359142303467
    4. '.' → logprob: -6.137359142303467
    5. '[A' → logprob: -6.887359142303467
    6. '[]' → logprob: -6.887359142303467
    7. '[:]' → logprob: -7.762359142303467
    8. 'A' → logprob: -7.887359142303467
    9. '\[' → logprob: -8.262358665466309
    10. '_' → logprob: -8.387358665466309

Token 7: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8719586730003357
    2. ' []' → logprob: -1.3719587326049805
    3. 'list' → logprob: -1.9969587326049805
    4. '[]' → logprob: -2.2469587326049805
    5. ' [' → logprob: -2.7469587326049805
    6. '[' → logprob: -4.6219587326049805
    7. '[int' → logprob: -4.7469587326049805
    8. '[input' → logprob: -5.9969587326049805
    9. '[list' → logprob: -7.2469587326049805
    10. 'input' → logprob: -7.9969587326049805

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008630876429378986
    2. '(range' → logprob: -5.258630752563477
    3. '[' → logprob: -6.258630752563477
    4. '[(' → logprob: -7.508630752563477
    5. '```' → logprob: -7.633630752563477
    6. ')' → logprob: -8.883630752563477
    7. '[int' → logprob: -9.258630752563477
    8. '(
' → logprob: -10.383630752563477
    9. ' (' → logprob: -10.508630752563477
    10. ''s' → logprob: -10.758630752563477

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08336816728115082
    2. '(' → logprob: -2.5833680629730225
    3. '(input' → logprob: -5.708368301391602
    4. '(str' → logprob: -7.458368301391602
    5. '(lambda' → logprob: -8.583368301391602
    6. '<int' → logprob: -9.333368301391602
    7. '(
' → logprob: -9.333368301391602
    8. 'int' → logprob: -9.708368301391602
    9. '```' → logprob: -10.458368301391602
    10. '[int' → logprob: -10.833368301391602

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0029558276291936636
    2. '(' → logprob: -6.127955913543701
    3. ',input' → logprob: -8.377955436706543
    4. '))' → logprob: -8.377955436706543
    5. ')' → logprob: -8.752955436706543
    6. 'input' → logprob: -10.252955436706543
    7. '=input' → logprob: -10.377955436706543
    8. '(int' → logprob: -11.252955436706543
    9. '<input' → logprob: -11.377955436706543
    10. ',' → logprob: -11.627955436706543

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10027632862329483
    2. ' input' → logprob: -2.350276231765747
    3. '(input' → logprob: -9.600275993347168
    4. ',input' → logprob: -13.725275993347168
    5. '=input' → logprob: -15.225275993347168
    6. ')' → logprob: -15.225275993347168
    7. '	input' → logprob: -16.350276947021484
    8. '<input' → logprob: -16.475276947021484
    9. '```' → logprob: -16.725276947021484
    10. '[input' → logprob: -17.225276947021484

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6675287485122681
    2. '()' → logprob: -0.9175287485122681
    3. '())' → logprob: -2.9175286293029785
    4. '().' → logprob: -3.5425286293029785
    5. '()));' → logprob: -6.1675286293029785
    6. '())))' → logprob: -7.2925286293029785
    7. '()>' → logprob: -7.7925286293029785
    8. '(' → logprob: -7.7925286293029785
    9. '))' → logprob: -8.667529106140137
    10. '()`' → logprob: -8.792529106140137

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00013655527436640114
    2. 'strip' → logprob: -9.000136375427246
    3. 'rstrip' → logprob: -11.375136375427246
    4. ' split' → logprob: -13.500136375427246
    5. '(split' → logprob: -16.000137329101562
    6. 'spl' → logprob: -16.875137329101562
    7. ')' → logprob: -17.375137329101562
    8. '.split' → logprob: -19.750137329101562
    9. 'replace' → logprob: -19.875137329101562
    10. 'startswith' → logprob: -20.000137329101562

Token 14: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.798519492149353
    2. '))' → logprob: -0.923519492149353
    3. ')' → logprob: -2.5485196113586426
    4. '())' → logprob: -2.7985196113586426
    5. '(' → logprob: -4.798519611358643
    6. '()' → logprob: -5.423519611358643
    7. ')))' → logprob: -7.673519611358643
    8. '('' → logprob: -7.923519611358643
    9. '())))' → logprob: -8.798519134521484
    10. ''))' → logprob: -9.673519134521484

Token 15: 'right' (ID: 2460)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5420075058937073
    2. 'A' → logprob: -1.5420074462890625
    3. 'S' → logprob: -3.1670074462890625
    4. 'c' → logprob: -3.7920074462890625
    5. 'a' → logprob: -4.0420074462890625
    6. 'sum' → logprob: -4.0420074462890625
    7. 'd' → logprob: -4.2920074462890625
    8. 'M' → logprob: -4.2920074462890625
    9. 'count' → logprob: -4.2920074462890625
    10. 'B' → logprob: -4.5420074462890625

Token 16: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38748982548713684
    2. '_sum' → logprob: -2.2624897956848145
    3. '_max' → logprob: -2.6374897956848145
    4. '_min' → logprob: -2.6374897956848145
    5. '_count' → logprob: -4.1374897956848145
    6. '_counts' → logprob: -4.2624897956848145
    7. '_sm' → logprob: -4.6374897956848145
    8. '=' → logprob: -4.6374897956848145
    9. ' =' → logprob: -5.1374897956848145
    10. '_s' → logprob: -6.3874897956848145

Token 17: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5102009773254395
    2. '[len' → logprob: -1.7602009773254395
    3. '0' → logprob: -2.3852009773254395
    4. '[N' → logprob: -2.8852009773254395
    5. '[]' → logprob: -3.7602009773254395
    6. 'len' → logprob: -3.8852009773254395
    7. '[-' → logprob: -4.2602009773254395
    8. ' [' → logprob: -4.5102009773254395
    9. '[left' → logprob: -5.7602009773254395
    10. 'N' → logprob: -5.8852009773254395

Token 18: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6937880516052246
    2. '0' → logprob: -1.8187880516052246
    3. '[len' → logprob: -2.3187880516052246
    4. '[N' → logprob: -2.4437880516052246
    5. '[]' → logprob: -2.8187880516052246
    6. 'N' → logprob: -3.4437880516052246
    7. 'len' → logprob: -3.9437880516052246
    8. '[-' → logprob: -4.068788051605225
    9. '[left' → logprob: -4.443788051605225
    10. '[A' → logprob: -5.193788051605225

Token 19: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9838317632675171
    2. 'count' → logprob: -1.733831763267517
    3. 'left' → logprob: -2.2338318824768066
    4. 'sum' → logprob: -2.6088318824768066
    5. ' max' → logprob: -3.1088318824768066
    6. 'total' → logprob: -3.2338318824768066
    7. ' for' → logprob: -3.3588318824768066
    8. 'for' → logprob: -3.6088318824768066
    9. ' left' → logprob: -3.8588318824768066
    10. 'result' → logprob: -3.8588318824768066

Token 20: 'sum' (ID: 12298)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.0124410390853882
    2. 'max' → logprob: -1.2624410390853882
    3. 'count' → logprob: -2.5124411582946777
    4. ' left' → logprob: -2.5124411582946777
    5. 'sum' → logprob: -3.1374411582946777
    6. ' for' → logprob: -3.3874411582946777
    7. ' max' → logprob: -3.5124411582946777
    8. 'total' → logprob: -3.6374411582946777
    9. 'for' → logprob: -3.8874411582946777
    10. 'result' → logprob: -4.887441158294678

Token 21: '_n' (ID: 2170)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0004605783324223012
    2. '_=' → logprob: -9.125460624694824
    3. 's' → logprob: -9.250460624694824
    4. '_)' → logprob: -9.375460624694824
    5. '(' → logprob: -9.875460624694824
    6. ')' → logprob: -11.125460624694824
    7. '_val' → logprob: -11.125460624694824
    8. '=' → logprob: -11.125460624694824
    9. ' =' → logprob: -11.250460624694824
    10. ' _' → logprob: -11.375460624694824

Token 22: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.091832734644413
    2. ' =' → logprob: -3.0918326377868652
    3. '=' → logprob: -3.5918326377868652
    4. ' ' → logprob: -4.716832637786865
    5. 's' → logprob: -5.841832637786865
    6. 'um' → logprob: -6.966832637786865
    7. 'o' → logprob: -7.841832637786865
    8. ' +=' → logprob: -7.966832637786865
    9. '_=' → logprob: -8.216833114624023
    10. 'u' → logprob: -8.341833114624023

Token 23: ' bit' (ID: 3546)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03364893049001694
    2. ' ' → logprob: -3.40864896774292
    3. 'A' → logprob: -13.283648490905762
    4. ' A' → logprob: -13.533648490905762
    5. '   ' → logprob: -16.908649444580078
    6. ' ' → logprob: -17.408649444580078
    7. '  ' → logprob: -17.783649444580078
    8. ')' → logprob: -17.846149444580078
    9. '1' → logprob: -17.908649444580078
    10. 'sum' → logprob: -18.346149444580078

Token 24: '_n' (ID: 2170)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7355051636695862
    2. 's' → logprob: -0.8605051636695862
    3. '[]' → logprob: -4.110505104064941
    4. 'm' → logprob: -4.360505104064941
    5. ' ' → logprob: -4.485505104064941
    6. 'set' → logprob: -4.610505104064941
    7. 'er' → logprob: -4.610505104064941
    8. 'mask' → logprob: -4.735505104064941
    9. '0' → logprob: -4.860505104064941
    10. 'array' → logprob: -5.110505104064941

Token 25: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24002431333065033
    2. '0' → logprob: -1.7400243282318115
    3. '[]' → logprob: -4.490024089813232
    4. ' ' → logprob: -4.615024089813232
    5. '=' → logprob: -4.865024089813232
    6. '+' → logprob: -5.740024089813232
    7. ' =' → logprob: -6.740024089813232
    8. '[n' → logprob: -7.365024089813232
    9. ')' → logprob: -7.490024089813232
    10. ' +' → logprob: -7.615024089813232

Token 26: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08894045650959015
    2. ' ' → logprob: -2.463940382003784
    3. ' ' → logprob: -14.963940620422363
    4. '  ' → logprob: -16.526439666748047
    5. '```' → logprob: -16.588939666748047
    6. '`' → logprob: -16.588939666748047
    7. '   ' → logprob: -16.651439666748047
    8. '1' → logprob: -16.776439666748047
    9. '<|end|>' → logprob: -17.026439666748047
    10. ' `' → logprob: -17.276439666748047

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234594456851482
    2. ' ' → logprob: -5.255234718322754
    3. '  ' → logprob: -15.755234718322754
    4. 'sum' → logprob: -15.880234718322754
    5. '1' → logprob: -16.317733764648438
    6. 'A' → logprob: -16.567733764648438
    7. '-' → logprob: -17.067733764648438
    8. '   ' → logprob: -17.130233764648438
    9. '۰' → logprob: -17.192733764648438
    10. '０' → logprob: -17.192733764648438

Token 28: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4107988774776459
    2. ' for' → logprob: -1.4107989072799683
    3. ' ' → logprob: -2.7857987880706787
    4. '<|end|>' → logprob: -3.9107987880706787
    5. ')' → logprob: -5.785799026489258
    6. 'while' → logprob: -6.410799026489258
    7. ',' → logprob: -7.035799026489258
    8. '>' → logprob: -7.160799026489258
    9. 'max' → logprob: -7.160799026489258
    10. '0' → logprob: -7.785799026489258

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31353914737701416
    2. '=' → logprob: -1.3135391473770142
    3. ' +=' → logprob: -8.938539505004883
    4. '_' → logprob: -9.063539505004883
    5. '+=' → logprob: -11.313539505004883
    6. '_=' → logprob: -12.063539505004883
    7. ',' → logprob: -12.688539505004883
    8. ' ' → logprob: -13.438539505004883
    9. '＝' → logprob: -14.063539505004883
    10. ':' → logprob: -14.063539505004883

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03419030085206032
    2. ' ' → logprob: -3.4091904163360596
    3. ' float' → logprob: -8.65919017791748
    4. 'float' → logprob: -8.78419017791748
    5. 'len' → logprob: -9.78419017791748
    6. '10' → logprob: -10.15919017791748
    7. 'max' → logprob: -10.65919017791748
    8. ' max' → logprob: -10.90919017791748
    9. '-' → logprob: -11.28419017791748
    10. ' len' → logprob: -11.53419017791748

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005227696383371949
    2. 'float' → logprob: -8.25052261352539
    3. '-' → logprob: -9.37552261352539
    4. '10' → logprob: -10.00052261352539
    5. ' ' → logprob: -10.12552261352539
    6. 'len' → logprob: -10.25052261352539
    7. 'int' → logprob: -10.62552261352539
    8. 'max' → logprob: -11.37552261352539
    9. '1' → logprob: -11.87552261352539
    10. 'N' → logprob: -12.00052261352539

Token 33: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009007352404296398
    2. ' for' → logprob: -4.759007453918457
    3. 'while' → logprob: -8.884007453918457
    4. '<|end|>' → logprob: -9.009007453918457
    5. '
' → logprob: -9.634007453918457
    6. 'n' → logprob: -11.009007453918457
    7. ')' → logprob: -11.509007453918457
    8. ':' → logprob: -11.759007453918457
    9. '```' → logprob: -12.009007453918457
    10. '\n' → logprob: -12.384007453918457

Token 34: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003209084505215287
    2. ' for' → logprob: -5.753209114074707
    3. 'N' → logprob: -11.753209114074707
    4. 'n' → logprob: -12.128209114074707
    5. 'while' → logprob: -12.503209114074707
    6. '1' → logprob: -12.628209114074707
    7. '<|end|>' → logprob: -12.753209114074707
    8. ')' → logprob: -13.003209114074707
    9. '(' → logprob: -13.753209114074707
    10. '0' → logprob: -14.003209114074707

Token 35: ' left' (ID: 3561)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.017917893826961517
    2. ' right' → logprob: -4.767918109893799
    3. 'i' → logprob: -5.392918109893799
    4. ' ' → logprob: -5.767918109893799
    5. ' in' → logprob: -8.14291763305664
    6. ' num' → logprob: -8.39291763305664
    7. ' n' → logprob: -8.39291763305664
    8. ' _' → logprob: -8.51791763305664
    9. 'right' → logprob: -9.14291763305664
    10. ' value' → logprob: -9.64291763305664

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07002657651901245
    2. 'in' → logprob: -2.6950266361236572
    3. ' ' → logprob: -9.445026397705078
    4. ',' → logprob: -13.320026397705078
    5. '	in' → logprob: -13.320026397705078
    6. ')' → logprob: -13.445026397705078
    7. '+' → logprob: -14.195026397705078
    8. '<|end|>' → logprob: -14.320026397705078
    9. ' ,' → logprob: -14.445026397705078
    10. '  ' → logprob: -14.570026397705078

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2014213353395462
    2. 'range' → logprob: -1.7014213800430298
    3. '	range' → logprob: -12.326421737670898
    4. '(range' → logprob: -13.451421737670898
    5. ' ' → logprob: -13.576421737670898
    6. '```' → logprob: -14.951421737670898
    7. ')' → logprob: -15.701421737670898
    8. ' xrange' → logprob: -15.951421737670898
    9. '0' → logprob: -16.5764217376709
    10. '.range' → logprob: -16.8264217376709

Token 38: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05005206912755966
    2. '(len' → logprob: -3.0500521659851074
    3. ' (' → logprob: -6.675052165985107
    4. '(N' → logprob: -9.30005168914795
    5. '(range' → logprob: -9.80005168914795
    6. '(n' → logprob: -10.67505168914795
    7. '(length' → logprob: -11.42505168914795
    8. '(
' → logprob: -12.42505168914795
    9. '(left' → logprob: -12.55005168914795
    10. ')' → logprob: -13.05005168914795

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021634676959365606
    2. ':' → logprob: -6.752163410186768
    3. '):
' → logprob: -7.502163410186768
    4. ')' → logprob: -8.377163887023926
    5. ' ):' → logprob: -8.752163887023926
    6. '+' → logprob: -10.127163887023926
    7. ',' → logprob: -12.752163887023926
    8. '>):' → logprob: -13.502163887023926
    9. '):
' → logprob: -14.002163887023926
    10. '+:' → logprob: -14.127163887023926

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3731754422187805
    2. ' while' → logprob: -1.2481753826141357
    3. 'while' → logprob: -4.623175621032715
    4. '	while' → logprob: -5.373175621032715
    5. '```' → logprob: -5.373175621032715
    6. 'While' → logprob: -6.248175621032715
    7. '<|end|>' → logprob: -7.248175621032715
    8. '  ' → logprob: -7.248175621032715
    9. ':' → logprob: -7.498175621032715
    10. ' ' → logprob: -7.748175621032715

Token 41: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.15665332973003387
    2. '   ' → logprob: -2.53165340423584
    3. 'while' (adapté à ' while') → logprob: -2.78165340423584
    4. '```' → logprob: -5.90665340423584
    5. '	while' → logprob: -7.65665340423584
    6. 'While' → logprob: -8.65665340423584
    7. ' ' → logprob: -9.90665340423584
    8. '``' → logprob: -10.28165340423584
    9. '  ' → logprob: -10.40665340423584
    10. '       ' → logprob: -10.65665340423584

Token 42: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.2519325911998749
    2. 'right' → logprob: -1.5019326210021973
    3. '	right' → logprob: -13.751932144165039
    4. ' ' → logprob: -14.001932144165039
    5. '(right' → logprob: -14.376932144165039
    6. '[right' → logprob: -15.126932144165039
    7. ' sum' → logprob: -15.626932144165039
    8. '   ' → logprob: -15.626932144165039
    9. ' rights' → logprob: -16.00193214416504
    10. '_right' → logprob: -16.62693214416504

Token 43: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.041978951543569565
    2. '<' → logprob: -3.2919788360595703
    3. '<N' → logprob: -5.66697883605957
    4. '<len' → logprob: -7.91697883605957
    5. '<n' → logprob: -9.54197883605957
    6. ' <=' → logprob: -11.54197883605957
    7. ' ' → logprob: -11.66697883605957
    8. '<size' → logprob: -11.79197883605957
    9. '<=' → logprob: -13.04197883605957
    10. '<num' → logprob: -14.04197883605957

Token 44: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005234356038272381
    2. ' N' → logprob: -5.255234241485596
    3. ' ' → logprob: -14.755234718322754
    4. '   ' → logprob: -16.005233764648438
    5. 'n' → logprob: -17.255233764648438
    6. '>N' → logprob: -17.380233764648438
    7. '	N' → logprob: -18.005233764648438
    8. '<N' → logprob: -18.630233764648438
    9. '```' → logprob: -19.005233764648438
    10. ')' → logprob: -19.130233764648438

Token 45: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03822830691933632
    2. 'and' → logprob: -3.2882282733917236
    3. ' ' → logprob: -8.663228034973145
    4. '   ' → logprob: -11.663228034973145
    5. ' и' → logprob: -13.538228034973145
    6. '    ' → logprob: -13.538228034973145
    7. '	and' → logprob: -14.038228034973145
    8. '  ' → logprob: -14.163228034973145
    9. ':' → logprob: -14.788228034973145
    10. ' và' → logprob: -16.03822898864746

Token 46: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.6593908071517944
    2. 'sum' → logprob: -1.2843908071517944
    3. ' (' → logprob: -2.284390926361084
    4. '(sum' → logprob: -2.534390926361084
    5. ' not' → logprob: -4.284390926361084
    6. ' A' → logprob: -6.159390926361084
    7. ' bit' → logprob: -6.159390926361084
    8. '(A' → logprob: -6.409390926361084
    9. 'bit' → logprob: -6.534390926361084
    10. '(bit' → logprob: -7.034390926361084

Token 47: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.06540696322917938
    2. '_' → logprob: -2.8154070377349854
    3. '+' → logprob: -5.815406799316406
    4. ' +' → logprob: -8.440406799316406
    5. '+n' → logprob: -9.690406799316406
    6. '_|' → logprob: -10.315406799316406
    7. '|' → logprob: -10.690406799316406
    8. ' _' → logprob: -10.815406799316406
    9. 'n' → logprob: -10.940406799316406
    10. '```' → logprob: -11.315406799316406

Token 48: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47421324253082275
    2. ' +' → logprob: -0.9742132425308228
    3. '<' → logprob: -9.474213600158691
    4. ' <' → logprob: -10.224213600158691
    5. '＋' → logprob: -12.224213600158691
    6. '<=' → logprob: -12.724213600158691
    7. '+A' → logprob: -12.849213600158691
    8. ' ' → logprob: -12.974213600158691
    9. ' <=' → logprob: -13.349213600158691
    10. '+a' → logprob: -13.599213600158691

Token 49: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00020771251001860946
    2. ' A' → logprob: -8.500207901000977
    3. '(A' → logprob: -13.000207901000977
    4. '   ' → logprob: -14.250207901000977
    5. 'bit' → logprob: -15.000207901000977
    6. '>A' → logprob: -15.375207901000977
    7. '=A' → logprob: -15.500207901000977
    8. '	A' → logprob: -16.000207901000977
    9. ' ' → logprob: -16.500207901000977
    10. '(' → logprob: -16.500207901000977

Token 50: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -1.306760805164231e-05
    2. 'right' → logprob: -11.87501335144043
    3. '[' → logprob: -12.12501335144043
    4. '\[' → logprob: -15.50001335144043
    5. '[left' → logprob: -15.87501335144043
    6. '```' → logprob: -16.25001335144043
    7. '	right' → logprob: -16.37501335144043
    8. ' [' → logprob: -17.75001335144043
    9. '[
' → logprob: -17.87501335144043
    10. '   ' → logprob: -18.12501335144043

Token 51: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001577236340381205
    2. ']<=' → logprob: -7.376577377319336
    3. '[' → logprob: -7.626577377319336
    4. ' ]' → logprob: -8.001577377319336
    5. '[]' → logprob: -11.001577377319336
    6. ']>=' → logprob: -11.251577377319336
    7. '<=' → logprob: -11.376577377319336
    8. ']==' → logprob: -11.376577377319336
    9. '[right' → logprob: -11.501577377319336
    10. ']>' → logprob: -11.626577377319336

Token 52: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.0698007345199585
    2. '<=' → logprob: -1.0698007345199585
    3. ' &' → logprob: -2.694800853729248
    4. '==' → logprob: -2.694800853729248
    5. ' ==' → logprob: -2.694800853729248
    6. '&' → logprob: -3.069800853729248
    7. '<' → logprob: -4.069800853729248
    8. ' <' → logprob: -4.319800853729248
    9. '+' → logprob: -4.819800853729248
    10. '|' → logprob: -5.194800853729248

Token 53: ' sum' (ID: 4215)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.01930389553308487
    2. ' sum' → logprob: -4.894303798675537
    3. 'bit' → logprob: -5.019303798675537
    4. ' (' → logprob: -6.019303798675537
    5. '(bit' → logprob: -6.519303798675537
    6. ' ' → logprob: -7.519303798675537
    7. 'sum' → logprob: -8.019304275512695
    8. '0' → logprob: -9.019304275512695
    9. '(' → logprob: -10.019304275512695
    10. '_bit' → logprob: -10.894304275512695

Token 54: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.001452494296245277
    2. '_' → logprob: -6.626452445983887
    3. '+' → logprob: -10.501452445983887
    4. ' _' → logprob: -10.876452445983887
    5. 's' → logprob: -11.001452445983887
    6. '__' → logprob: -11.626452445983887
    7. '```' → logprob: -12.126452445983887
    8. ' +' → logprob: -12.501452445983887
    9. 'right' → logprob: -12.501452445983887
    10. '   ' → logprob: -12.501452445983887

Token 55: ' ^' (ID: 7602)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08232320100069046
    2. '+' → logprob: -2.5823233127593994
    3. ' ' → logprob: -5.95732307434082
    4. 'A' → logprob: -8.33232307434082
    5. ' bit' → logprob: -8.83232307434082
    6. '+A' → logprob: -9.20732307434082
    7. ' A' → logprob: -9.33232307434082
    8. '   ' → logprob: -9.70732307434082
    9. '0' → logprob: -9.95732307434082
    10. '    ' → logprob: -10.45732307434082

Token 56: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.13167372345924377
    2. ' A' → logprob: -2.131673812866211
    3. 'bit' → logprob: -6.131673812866211
    4. ' bit' → logprob: -6.256673812866211
    5. ' ' → logprob: -7.506673812866211
    6. '(bit' → logprob: -10.006673812866211
    7. '   ' → logprob: -11.506673812866211
    8. ' (' → logprob: -11.756673812866211
    9. '  ' → logprob: -12.256673812866211
    10. '_bit' → logprob: -12.381673812866211

Token 57: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.0011167617049068213
    2. '[' → logprob: -7.501116752624512
    3. 'right' → logprob: -7.501116752624512
    4. '[r' → logprob: -12.751116752624512
    5. '[
' → logprob: -13.126116752624512
    6. '[left' → logprob: -13.126116752624512
    7. '```' → logprob: -13.751116752624512
    8. '	right' → logprob: -14.501116752624512
    9. '\[' → logprob: -15.001116752624512
    10. '[n' → logprob: -15.501116752624512

Token 58: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0921797975897789
    2. '):
' → logprob: -2.467179775238037
    3. ')' → logprob: -6.342179775238037
    4. ':' → logprob: -6.967179775238037
    5. '):
' → logprob: -8.592180252075195
    6. ' ):' → logprob: -8.592180252075195
    7. '   ' → logprob: -9.967180252075195
    8. '):

' → logprob: -10.592180252075195
    9. ' ):
' → logprob: -10.592180252075195
    10. ' ' → logprob: -11.092180252075195

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09208651632070541
    2. ' ' → logprob: -2.9670865535736084
    3. '    ' → logprob: -4.467086315155029
    4. '   ' → logprob: -4.842086315155029
    5. ':' → logprob: -5.467086315155029
    6. '+' → logprob: -5.592086315155029
    7. '<|end|>' → logprob: -5.592086315155029
    8. '        ' → logprob: -5.842086315155029
    9. '  ' → logprob: -7.717086315155029
    10. ' :' → logprob: -7.842086315155029

Token 60: ' sum' (ID: 4215)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.070648431777954
    2. '        ' → logprob: -1.195648431777954
    3. ' ' → logprob: -2.445648431777954
    4. ' A' → logprob: -2.820648431777954
    5. '            ' → logprob: -3.320648431777954
    6. '       ' → logprob: -3.320648431777954
    7. 'right' → logprob: -3.445648431777954
    8. ' right' → logprob: -3.445648431777954
    9. '           ' → logprob: -3.945648431777954
    10. 'A' → logprob: -4.320648193359375

Token 61: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.00046439285506494343
    2. '_' → logprob: -7.75046443939209
    3. '+' → logprob: -10.62546443939209
    4. '+=' → logprob: -13.25046443939209
    5. '   ' → logprob: -13.50046443939209
    6. '+n' → logprob: -13.62546443939209
    7. '```' → logprob: -13.87546443939209
    8. ' _' → logprob: -14.00046443939209
    9. ' +=' → logprob: -14.12546443939209
    10. '_add' → logprob: -15.00046443939209

Token 62: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25426504015922546
    2. ' +' → logprob: -1.5042650699615479
    3. ' +=' → logprob: -6.254264831542969
    4. '+=' → logprob: -8.004264831542969
    5. '<|end|>' → logprob: -10.879264831542969
    6. '=' → logprob: -11.504264831542969
    7. ' ' → logprob: -11.504264831542969
    8. ' ' → logprob: -11.879264831542969
    9. ')' → logprob: -12.129264831542969
    10. '    ' → logprob: -12.629264831542969

Token 63: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.474078506231308
    2. ' A' → logprob: -0.9740785360336304
    3. '	A' → logprob: -14.349078178405762
    4. '<|end|>' → logprob: -15.224078178405762
    5. ' ' → logprob: -15.599078178405762
    6. '   ' → logprob: -16.349079132080078
    7. '>A' → logprob: -16.474079132080078
    8. ' ' → logprob: -16.849079132080078
    9. '_A' → logprob: -17.099079132080078
    10. '```' → logprob: -17.224079132080078

Token 64: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -8.685467764735222e-05
    2. 'right' → logprob: -9.750086784362793
    3. '[' → logprob: -10.625086784362793
    4. '[left' → logprob: -13.125086784362793
    5. '[
' → logprob: -14.125086784362793
    6. '```' → logprob: -14.875086784362793
    7. '	right' → logprob: -15.000086784362793
    8. '\[' → logprob: -15.500086784362793
    9. '[r' → logprob: -15.750086784362793
    10. '   ' → logprob: -16.50008773803711

Token 65: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1540238857269287
    2. ']
' → logprob: -2.0290238857269287
    3. '[right' → logprob: -4.529024124145508
    4. ']
' → logprob: -9.154024124145508
    5. '       ' → logprob: -9.279024124145508
    6. 'right' → logprob: -9.279024124145508
    7. ')' → logprob: -9.404024124145508
    8. ' ]' → logprob: -10.404024124145508
    9. '   ' → logprob: -11.029024124145508
    10. ')
' → logprob: -11.154024124145508

Token 66: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3869202435016632
    2. ' ^' → logprob: -1.3869202136993408
    3. '<|end|>' → logprob: -3.386920213699341
    4. '[right' → logprob: -5.01192045211792
    5. '       ' → logprob: -5.26192045211792
    6. '   ' → logprob: -5.51192045211792
    7. '    ' → logprob: -5.63692045211792
    8. ' ^=' → logprob: -5.63692045211792
    9. '^' → logprob: -5.63692045211792
    10. ' ' → logprob: -6.01192045211792

Token 67: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.14582683145999908
    2. 'bit' (adapté à ' bit') → logprob: -2.020826816558838
    3. ' right' → logprob: -6.020826816558838
    4. 'right' → logprob: -7.270826816558838
    5. ' sum' → logprob: -12.520827293395996
    6. ' ' → logprob: -12.645827293395996
    7. '_bit' → logprob: -12.645827293395996
    8. '(bit' → logprob: -13.395827293395996
    9. '   ' → logprob: -13.520827293395996
    10. 'bits' → logprob: -14.020827293395996

Token 68: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.054500666621607e-06
    2. '_' → logprob: -12.75000286102295
    3. '_bit' → logprob: -17.125003814697266
    4. '<|end|>' → logprob: -17.625003814697266
    5. '```' → logprob: -17.750003814697266
    6. ' _' → logprob: -18.000003814697266
    7. '_x' → logprob: -18.500003814697266
    8. 'bit' → logprob: -18.500003814697266
    9. '_bits' → logprob: -19.250003814697266
    10. '__' → logprob: -19.375003814697266

Token 69: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.5501347780227661
    2. '|' → logprob: -1.1751347780227661
    3. ' |=' → logprob: -2.4251346588134766
    4. '^' → logprob: -3.6751346588134766
    5. ' ' → logprob: -7.925134658813477
    6. '=' → logprob: -9.550134658813477
    7. ' ^' → logprob: -10.675134658813477
    8. '```' → logprob: -11.050134658813477
    9. '   ' → logprob: -11.425134658813477
    10. '  ' → logprob: -12.050134658813477

Token 70: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.008614926598966122
    2. ' A' → logprob: -4.758615016937256
    3. '   ' → logprob: -16.008615493774414
    4. ' ' → logprob: -16.258615493774414
    5. '<|end|>' → logprob: -16.508615493774414
    6. '	A' → logprob: -17.383615493774414
    7. '  ' → logprob: -18.383615493774414
    8. '_A' → logprob: -18.508615493774414
    9. '>A' → logprob: -18.883615493774414
    10. '```' → logprob: -19.008615493774414

Token 71: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.0020912576001137495
    2. 'right' → logprob: -6.252091407775879
    3. '[' → logprob: -8.752091407775879
    4. '[left' → logprob: -13.252091407775879
    5. '[
' → logprob: -14.377091407775879
    6. '	right' → logprob: -14.877091407775879
    7. '```' → logprob: -14.877091407775879
    8. '[r' → logprob: -14.877091407775879
    9. ' right' → logprob: -15.127091407775879
    10. '[user' → logprob: -16.002090454101562

Token 72: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21527829766273499
    2. '       ' → logprob: -2.340278387069702
    3. ')
' → logprob: -2.965278387069702
    4. '[right' → logprob: -3.715278387069702
    5. ']' → logprob: -4.090278148651123
    6. 'right' → logprob: -5.840278148651123
    7. ']
' → logprob: -7.215278148651123
    8. '<|end|>' → logprob: -7.465278148651123
    9. '   ' → logprob: -8.590278625488281
    10. '           ' → logprob: -9.715278625488281

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008799002389423549
    2. ' right' → logprob: -8.125880241394043
    3. 'right' → logprob: -8.375880241394043
    4. '   ' → logprob: -8.500880241394043
    5. '[right' → logprob: -9.875880241394043
    6. '<|end|>' → logprob: -10.375880241394043
    7. '	right' → logprob: -10.875880241394043
    8. '           ' → logprob: -11.500880241394043
    9. '    ' → logprob: -12.250880241394043
    10. ',' → logprob: -12.375880241394043

Token 74: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.08150141686201096
    2. ' right' → logprob: -2.5815014839172363
    3. '       ' → logprob: -5.956501483917236
    4. '	right' → logprob: -11.581501007080078
    5. '   ' → logprob: -11.956501007080078
    6. '           ' → logprob: -13.706501007080078
    7. 'Right' → logprob: -14.456501007080078
    8. '[right' → logprob: -14.956501007080078
    9. ' ' → logprob: -15.081501007080078
    10. '.right' → logprob: -15.331501007080078

Token 75: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02703109383583069
    2. '+=' → logprob: -3.652031183242798
    3. ' +=' → logprob: -7.277030944824219
    4. '<|end|>' → logprob: -10.777030944824219
    5. '++' → logprob: -12.027030944824219
    6. ' +' → logprob: -12.527030944824219
    7. '+++' → logprob: -12.777030944824219
    8. '+='' → logprob: -13.652030944824219
    9. '=' → logprob: -13.777030944824219
    10. ']+=' → logprob: -14.027030944824219

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.500123977661133
    4. '```' → logprob: -18.625123977661133
    5. '１' → logprob: -19.000123977661133
    6. '  ' → logprob: -19.125123977661133
    7. '       ' → logprob: -19.375123977661133
    8. '۱' → logprob: -20.500123977661133
    9. '0' → logprob: -20.875123977661133
    10. '    ' → logprob: -21.500123977661133

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -18.625001907348633
    4. '１' → logprob: -19.125001907348633
    5. '   ' → logprob: -20.187501907348633
    6. '۱' → logprob: -20.562501907348633
    7. '१' → logprob: -21.187501907348633
    8. '0' → logprob: -21.375001907348633
    9. '`' → logprob: -21.562501907348633
    10. '১' → logprob: -21.625001907348633

Token 78: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007453164551407099
    2. '       ' → logprob: -5.382452964782715
    3. '```' → logprob: -6.757452964782715
    4. '<|end|>' → logprob: -7.007452964782715
    5. ' ' → logprob: -9.007452964782715
    6. '  ' → logprob: -9.507452964782715
    7. 'if' → logprob: -9.507452964782715
    8. 'ans' → logprob: -9.632452964782715
    9. '
' → logprob: -9.757452964782715
    10. '...' → logprob: -9.757452964782715

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014895804226398468
    2. 'ans' → logprob: -4.639895915985107
    3. '       ' → logprob: -6.014895915985107
    4. 'if' → logprob: -6.889895915985107
    5. '<|end|>' → logprob: -7.139895915985107
    6. '```' → logprob: -8.01489543914795
    7. '	ans' → logprob: -8.76489543914795
    8. ' if' → logprob: -9.01489543914795
    9. '  ' → logprob: -9.51489543914795
    10. ' ' → logprob: -10.13989543914795

Token 80: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0019000787287950516
    2. '   ' → logprob: -6.6269001960754395
    3. ' ans' → logprob: -8.001899719238281
    4. 'if' → logprob: -8.501899719238281
    5. '	ans' → logprob: -11.001899719238281
    6. '(ans' → logprob: -11.376899719238281
    7. 'sum' → logprob: -13.501899719238281
    8. '```' → logprob: -13.751899719238281
    9. '_ans' → logprob: -13.751899719238281
    10. ' if' → logprob: -13.876899719238281

Token 81: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.011052302084863186
    2. '+=' → logprob: -4.511052131652832
    3. '+=(' → logprob: -13.011052131652832
    4. '+' → logprob: -13.761052131652832
    5. ']+=' → logprob: -15.011052131652832
    6. '+='' → logprob: -15.636052131652832
    7. ' =' → logprob: -15.761052131652832
    8. '+="' → logprob: -16.13605308532715
    9. ' -=' → logprob: -16.38605308532715
    10. '  ' → logprob: -16.63605308532715

Token 82: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0012566609075292945
    2. ' right' → logprob: -6.751256465911865
    3. '(right' → logprob: -9.376256942749023
    4. '[right' → logprob: -14.001256942749023
    5. ' (' → logprob: -15.501256942749023
    6. ' ' → logprob: -15.626256942749023
    7. '   ' → logprob: -15.876256942749023
    8. '	right' → logprob: -16.001256942749023
    9. '右' → logprob: -16.376256942749023
    10. 'r' → logprob: -17.251256942749023

Token 83: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4821093678474426
    2. ' -' → logprob: -0.9821093678474426
    3. '-left' → logprob: -4.857109546661377
    4. '-l' → logprob: -9.107109069824219
    5. '-user' → logprob: -10.857109069824219
    6. '-token' → logprob: -11.107109069824219
    7. '-length' → logprob: -11.232109069824219
    8. '-code' → logprob: -11.982109069824219
    9. '−' → logprob: -11.982109069824219
    10. '-n' → logprob: -12.232109069824219

Token 84: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0007115975022315979
    2. ' left' → logprob: -7.250711441040039
    3. '	left' → logprob: -14.000711441040039
    4. '[left' → logprob: -14.875711441040039
    5. ':left' → logprob: -15.750711441040039
    6. '(left' → logprob: -15.750711441040039
    7. '1' → logprob: -16.12571144104004
    8. '   ' → logprob: -16.87571144104004
    9. '<|end|>' → logprob: -17.37571144104004
    10. '_left' → logprob: -18.00071144104004

Token 85: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5170471668243408
    2. '   ' → logprob: -1.5170471668243408
    3. ' if' → logprob: -2.392047166824341
    4. 'sum' → logprob: -2.392047166824341
    5. ' sum' → logprob: -6.892046928405762
    6. '```' → logprob: -8.142046928405762
    7. ' ' → logprob: -10.267046928405762
    8. 'bit' → logprob: -10.392046928405762
    9. '    
' → logprob: -10.767046928405762
    10. '  ' → logprob: -11.142046928405762

Token 86: '   ' (ID: 271)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6605894565582275
    2. '   ' → logprob: -0.9105894565582275
    3. 'if' → logprob: -2.5355894565582275
    4. '```' → logprob: -6.285589218139648
    5. '``' → logprob: -10.410589218139648
    6. '  ' → logprob: -10.785589218139648
    7. ' if' → logprob: -11.285589218139648
    8. '	sum' → logprob: -12.035589218139648
    9. ' sum' → logprob: -12.535589218139648
    10. '       ' → logprob: -12.785589218139648

Token 87: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009579830802977085
    2. 'sum' → logprob: -5.134579658508301
    3. '   ' → logprob: -5.634579658508301
    4. ' if' → logprob: -9.8845796585083
    5. '```' → logprob: -10.8845796585083
    6. '``' → logprob: -14.2595796585083
    7. '#' → logprob: -14.2595796585083
    8. 'to' → logprob: -15.3845796585083
    9. '    
' → logprob: -15.6345796585083
    10. '  ' → logprob: -15.7595796585083

Token 88: ' right' (ID: 1849)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.13978061079978943
    2. ' left' → logprob: -2.1397805213928223
    3. 'right' → logprob: -4.514780521392822
    4. ' right' → logprob: -6.389780521392822
    5. '   ' → logprob: -9.38978099822998
    6. ' A' → logprob: -11.01478099822998
    7. '	left' → logprob: -11.01478099822998
    8. 'A' → logprob: -11.26478099822998
    9. ' ' → logprob: -11.63978099822998
    10. '  ' → logprob: -13.01478099822998

Token 89: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01845051907002926
    2. ' ==' → logprob: -4.643450736999512
    3. '>' → logprob: -4.768450736999512
    4. '=' → logprob: -9.268450736999512
    5. '!=' → logprob: -10.393450736999512
    6. '   ' → logprob: -11.768450736999512
    7. ' >' → logprob: -11.893450736999512
    8. '==
' → logprob: -12.018450736999512
    9. ' ' → logprob: -12.393450736999512
    10. '```' → logprob: -12.643450736999512

Token 90: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00035072024911642075
    2. ' left' → logprob: -8.000350952148438
    3. '	left' → logprob: -11.375350952148438
    4. '  ' → logprob: -13.625350952148438
    5. '   ' → logprob: -13.625350952148438
    6. ' ' → logprob: -14.250350952148438
    7. '[left' → logprob: -15.375350952148438
    8. ':left' → logprob: -15.625350952148438
    9. 'N' → logprob: -15.875350952148438
    10. '=' → logprob: -16.000350952148438

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02352299727499485
    2. '   ' → logprob: -4.898522853851318
    3. ' :' → logprob: -5.148522853851318
    4. ':
' → logprob: -5.523522853851318
    5. 'else' → logprob: -6.023522853851318
    6. ' else' → logprob: -6.773522853851318
    7. ':return' → logprob: -6.773522853851318
    8. ' ' → logprob: -7.898522853851318
    9. '  ' → logprob: -8.773523330688477
    10. '==' → logprob: -9.023523330688477

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2958267331123352
    2. '   ' → logprob: -1.4208266735076904
    3. 'right' → logprob: -4.2958269119262695
    4. ' right' → logprob: -7.1708269119262695
    5. 'sum' → logprob: -9.67082691192627
    6. '	right' → logprob: -10.17082691192627
    7. '```' → logprob: -10.42082691192627
    8. '    ' → logprob: -11.42082691192627
    9. '           ' → logprob: -12.42082691192627
    10. '     ' → logprob: -12.67082691192627

Token 93: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0735006108880043
    2. '       ' → logprob: -2.948500633239746
    3. '   ' → logprob: -4.073500633239746
    4. '           ' → logprob: -6.948500633239746
    5. ' right' → logprob: -8.073500633239746
    6. '	right' → logprob: -9.073500633239746
    7. '```' → logprob: -10.448500633239746
    8. ' ' → logprob: -12.573500633239746
    9. ',right' → logprob: -13.698500633239746
    10. '               ' → logprob: -13.698500633239746

Token 94: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14596755802631378
    2. '+=' → logprob: -2.020967483520508
    3. '<|end|>' → logprob: -6.395967483520508
    4. ' +=' → logprob: -7.270967483520508
    5. '```' → logprob: -7.395967483520508
    6. '1' → logprob: -9.020967483520508
    7. '++' → logprob: -9.395967483520508
    8. '   ' → logprob: -11.020967483520508
    9. '<|end|>' → logprob: -11.145967483520508
    10. '=' → logprob: -11.270967483520508

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.87508487701416
    4. '0' → logprob: -17.750085830688477
    5. '```' → logprob: -18.500085830688477
    6. '  ' → logprob: -19.625085830688477
    7. '<|end|>' → logprob: -20.375085830688477
    8. '+' → logprob: -21.125085830688477
    9. '       ' → logprob: -21.625085830688477
    10. '１' → logprob: -21.625085830688477

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -18.625
    4. '   ' → logprob: -18.875
    5. '0' → logprob: -19.875
    6. '<|end|>' → logprob: -20.375
    7. '`' → logprob: -22.5
    8. '１' → logprob: -22.625
    9. '+' → logprob: -22.625
    10. '  ' → logprob: -22.75

Token 97: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07902087271213531
    2. '   ' → logprob: -2.5790209770202637
    3. ' else' → logprob: -9.204020500183105
    4. '```' → logprob: -10.579020500183105
    5. 'elif' → logprob: -13.829020500183105
    6. '  ' → logprob: -14.079020500183105
    7. '``' → logprob: -14.204020500183105
    8. '	else' → logprob: -14.329020500183105
    9. 'sum' → logprob: -14.329020500183105
    10. '       ' → logprob: -15.579020500183105

Token 98: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0010241165291517973
    2. '   ' → logprob: -7.00102424621582
    3. ' else' → logprob: -9.12602424621582
    4. '```' → logprob: -12.75102424621582
    5. '	else' → logprob: -15.00102424621582
    6. 'elif' → logprob: -15.50102424621582
    7. '  ' → logprob: -16.37602424621582
    8. '``' → logprob: -16.62602424621582
    9. '#else' → logprob: -16.75102424621582
    10. '_else' → logprob: -17.12602424621582

Token 99: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0005234848940744996
    2. 'sum' → logprob: -8.500523567199707
    3. ' else' → logprob: -8.625523567199707
    4. '   ' → logprob: -8.875523567199707
    5. '```' → logprob: -14.875523567199707
    6. 'elif' → logprob: -15.250523567199707
    7. 'if' → logprob: -17.00052261352539
    8. '#else' → logprob: -17.62552261352539
    9. '	else' → logprob: -17.62552261352539
    10. '  ' → logprob: -17.87552261352539

Token 100: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21683837473392487
    2. ':' → logprob: -1.7168383598327637
    3. '   ' → logprob: -4.216838359832764
    4. '       ' → logprob: -8.091838836669922
    5. ' :
' → logprob: -8.716838836669922
    6. ':
' → logprob: -10.841838836669922
    7. '```' → logprob: -10.966838836669922
    8. '):
' → logprob: -11.091838836669922
    9. ' :' → logprob: -11.591838836669922
    10. ':

' → logprob: -11.591838836669922

Token 101: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47413867712020874
    2. '       ' → logprob: -0.9741386771202087
    3. 'sum' → logprob: -9.974138259887695
    4. ' sum' → logprob: -12.224138259887695
    5. '    ' → logprob: -12.349138259887695
    6. '```' → logprob: -12.599138259887695
    7. '     ' → logprob: -14.724138259887695
    8. '           ' → logprob: -14.849138259887695
    9. ' ' → logprob: -15.099138259887695
    10. '      ' → logprob: -15.349138259887695

Token 102: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.14230692386627197
    2. '   ' → logprob: -2.6423068046569824
    3. ' sum' → logprob: -3.2673068046569824
    4. '       ' → logprob: -3.7673068046569824
    5. 'bit' → logprob: -9.14230728149414
    6. '	sum' → logprob: -10.01730728149414
    7. ' ' → logprob: -10.64230728149414
    8. ' bit' → logprob: -10.76730728149414
    9. '    ' → logprob: -11.64230728149414
    10. '  ' → logprob: -11.76730728149414

Token 103: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -4.787507714354433e-05
    2. '_' → logprob: -10.00004768371582
    3. '```' → logprob: -13.87504768371582
    4. ' -=' → logprob: -14.62504768371582
    5. '-=' → logprob: -15.25004768371582
    6. ' _' → logprob: -15.25004768371582
    7. '   ' → logprob: -15.25004768371582
    8. '-_' → logprob: -17.00004768371582
    9. '__' → logprob: -17.12504768371582
    10. 'n' → logprob: -17.25004768371582

Token 104: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.025784963741898537
    2. '-' → logprob: -4.150784969329834
    3. ' -=' → logprob: -4.650784969329834
    4. '   ' → logprob: -9.650784492492676
    5. '=' → logprob: -10.650784492492676
    6. '       ' → logprob: -10.775784492492676
    7. '```' → logprob: -11.275784492492676
    8. '  ' → logprob: -11.650784492492676
    9. ' -' → logprob: -12.275784492492676
    10. '#' → logprob: -12.400784492492676

Token 105: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.011047935113310814
    2. ' A' → logprob: -4.511047840118408
    3. '   ' → logprob: -16.51104736328125
    4. '	A' → logprob: -17.01104736328125
    5. '>A' → logprob: -19.88604736328125
    6. ' ' → logprob: -20.13604736328125
    7. '_A' → logprob: -20.13604736328125
    8. '```' → logprob: -20.26104736328125
    9. '=A' → logprob: -20.88604736328125
    10. '(A' → logprob: -21.13604736328125

Token 106: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -2.935296834039036e-06
    2. 'left' → logprob: -13.00000286102295
    3. '[' → logprob: -14.75000286102295
    4. '[right' → logprob: -16.750003814697266
    5. '   ' → logprob: -17.000003814697266
    6. '```' → logprob: -17.500003814697266
    7. ' [' → logprob: -19.000003814697266
    8. '(left' → logprob: -19.250003814697266
    9. '\[' → logprob: -19.250003814697266
    10. ' left' → logprob: -20.000003814697266

Token 107: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.17286862432956696
    2. ']' → logprob: -1.9228686094284058
    3. ')
' → logprob: -4.672868728637695
    4. '       ' → logprob: -6.172868728637695
    5. ')' → logprob: -7.047868728637695
    6. ']
' → logprob: -8.547868728637695
    7. ' ]
' → logprob: -11.297868728637695
    8. '   ' → logprob: -11.422868728637695
    9. ' ]' → logprob: -11.797868728637695
    10. '<|end|>' → logprob: -11.922868728637695

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8879213929176331
    2. ' bit' → logprob: -0.8879213929176331
    3. 'bit' → logprob: -1.7629213333129883
    4. '   ' → logprob: -5.387921333312988
    5. '```' → logprob: -7.262921333312988
    6. ' ' → logprob: -10.012921333312988
    7. '(bit' → logprob: -10.387921333312988
    8. '``' → logprob: -11.137921333312988
    9. '      ' → logprob: -11.387921333312988
    10. '.bit' → logprob: -11.512921333312988

Token 109: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.0019287518225610256
    2. ' bit' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.626928329467773
    4. '(bit' → logprob: -17.376928329467773
    5. ' ' → logprob: -18.126928329467773
    6. '```' → logprob: -18.251928329467773
    7. '       ' → logprob: -18.376928329467773
    8. '.bit' → logprob: -19.501928329467773
    9. 'bitr' → logprob: -20.126928329467773
    10. 'bits' → logprob: -20.251928329467773

Token 110: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -7.822646693966817e-06
    2. 'bit' → logprob: -12.625007629394531
    3. '_' → logprob: -13.250007629394531
    4. '```' → logprob: -13.625007629394531
    5. ' _' → logprob: -14.500007629394531
    6. 'n' → logprob: -14.625007629394531
    7. '_^' → logprob: -16.37500762939453
    8. '​' → logprob: -17.12500762939453
    9. '__' → logprob: -17.25000762939453
    10. '^' → logprob: -17.25000762939453

Token 111: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.5759420990943909
    2. '^' → logprob: -0.8259420990943909
    3. ' ^' → logprob: -13.450942039489746
    4. '=' → logprob: -14.200942039489746
    5. '^^' → logprob: -15.325942039489746
    6. ' ' → logprob: -15.950942039489746
    7. ' ' → logprob: -16.950942993164062
    8. '   ' → logprob: -17.200942993164062
    9. '_^' → logprob: -17.575942993164062
    10. '```' → logprob: -18.075942993164062

Token 112: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.38687169551849365
    2. ' A' → logprob: -1.1368716955184937
    3. '   ' → logprob: -15.261871337890625
    4. '	A' → logprob: -15.511871337890625
    5. ' ' → logprob: -15.761871337890625
    6. '<|end|>' → logprob: -16.761871337890625
    7. '  ' → logprob: -18.011871337890625
    8. '_A' → logprob: -18.136871337890625
    9. '```' → logprob: -18.386871337890625
    10. '(A' → logprob: -18.511871337890625

Token 113: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -4.4060561776859686e-05
    2. 'left' → logprob: -10.125043869018555
    3. '```' → logprob: -13.250043869018555
    4. 'A' → logprob: -14.125043869018555
    5. '[' → logprob: -14.250043869018555
    6. '[
' → logprob: -15.375043869018555
    7. '[A' → logprob: -15.625043869018555
    8. '   ' → logprob: -16.000043869018555
    9. '\[' → logprob: -16.375043869018555
    10. '[right' → logprob: -16.625043869018555

Token 114: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003221802646294236
    2. ')' → logprob: -5.8782219886779785
    3. ']
' → logprob: -8.62822151184082
    4. '<|end|>' → logprob: -9.12822151184082
    5. '   ' → logprob: -10.37822151184082
    6. '}' → logprob: -10.37822151184082
    7. '']' → logprob: -10.62822151184082
    8. '```' → logprob: -11.50322151184082
    9. ' ]' → logprob: -11.62822151184082
    10. '"]' → logprob: -12.25322151184082

Token 115: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0007148159202188253
    2. '(' → logprob: -7.2507147789001465
    3. ' (' → logprob: -13.125715255737305
    4. '()' → logprob: -13.375715255737305
    5. 'ans' → logprob: -14.000715255737305
    6. '(answer' → logprob: -15.125715255737305
    7. '(
' → logprob: -15.750715255737305
    8. '(sum' → logprob: -17.875715255737305
    9. '(a' → logprob: -18.250715255737305
    10. '('' → logprob: -18.250715255737305

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')`' → logprob: -14.875000953674316
    3. '`)' → logprob: -15.500000953674316
    4. '))' → logprob: -15.625000953674316
    5. ' )' → logprob: -15.625000953674316
    6. ')
' → logprob: -15.750000953674316
    7. '）' → logprob: -17.125001907348633
    8. '')' → logprob: -17.375001907348633
    9. '()' → logprob: -17.500001907348633
    10. '())' → logprob: -17.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 115
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 95
Précision stricte (1ère position): 37.39%
Précision adaptée (1ère position): 43.48%
Précision (top 10): 82.61%
================================================================================
