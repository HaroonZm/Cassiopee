================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from itertools import islice
from functools import partial

readline = stdin.readline
N, K = map(int, readline().split())
Q = range(N + 1)
bit = 1 << N

d = [[0] * bit for _ in Q]
f = [[0] * bit for _ in Q]

# Reading data with advanced unpacking/map
for i, line in enumerate(islice(stdin, N + 1)):
    d[i][:] = list(map(int, line.strip()))

# Efficient computation of f using comprehension and bitwise operation
for i in range(1, N + 1):
    for j in range(1 << i):
        t = (j >> (i - 1)) & 1
        r = next((r for r in range(i) if ((j >> (i - 1 - r)) & 1) != t), i)
        f[i][j] = r

I = J = 0
for i in Q:
    for k in range(i + 1, N + 1):
        z, m = k - i, (1 << (k - i)) - 1
        for j in range(1 << k):
            dj = d[k][j]
            idx = j >> z
            d[i][idx] += dj
            r = f[z][j & m]
            if r != z:
                mask = (1 << (z - r)) - 1
                target = (j >> z << (z - r)) | (j & mask)
                d[k - r][target] += dj
    # Early break with walrus where possible
    for j in range(1 << i):
        if d[i][j] >= K:
            I, J = i, j
            break
    if I: break

print(bin(J)[2:].zfill(I) if (I or J) else '')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.09144724160432816
    2. ' argv' → logprob: -2.716447353363037
    3. 'exit' → logprob: -4.466447353363037
    4. ' exit' → logprob: -5.466447353363037
    5. 'import' → logprob: -5.966447353363037
    6. 'stdout' → logprob: -6.466447353363037
    7. 'stdin' → logprob: -7.716447353363037
    8. 'path' → logprob: -7.716447353363037
    9. 'version' → logprob: -8.591446876525879
    10. ' import' → logprob: -9.216446876525879

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006454797694459558
    2. '.readline' → logprob: -8.250645637512207
    3. '\n' → logprob: -8.500645637512207
    4. '.
' → logprob: -10.125645637512207
    5. 'import' → logprob: -10.250645637512207
    6. '\' → logprob: -10.375645637512207
    7. '```' → logprob: -10.875645637512207
    8. '.read' → logprob: -10.875645637512207
    9. '' → logprob: -12.000645637512207
    10. ',' → logprob: -12.125645637512207

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06320580840110779
    2. '.readline' → logprob: -3.5632057189941406
    3. 'for' → logprob: -4.563205718994141
    4. '\n' → logprob: -4.688205718994141
    5. '
' → logprob: -5.938205718994141
    6. 'import' → logprob: -5.938205718994141
    7. 'print' → logprob: -6.188205718994141
    8. '.read' → logprob: -6.688205718994141
    9. '```' → logprob: -7.313205718994141
    10. ',' → logprob: -7.313205718994141

Token 6: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03390835225582123
    2. ' sys' → logprob: -3.7839083671569824
    3. ' io' → logprob: -4.783908367156982
    4. ' math' → logprob: -7.283908367156982
    5. ' typing' → logprob: -7.658908367156982
    6. 'os' → logprob: -7.908908367156982
    7. ' stdout' → logprob: -9.033907890319824
    8. ' itertools' → logprob: -9.033907890319824
    9. ' subprocess' → logprob: -9.283907890319824
    10. ' space' → logprob: -9.408907890319824

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.020581480115652084
    2. 'import' → logprob: -3.8955814838409424
    3. ' ' → logprob: -11.020581245422363
    4. '	import' → logprob: -11.645581245422363
    5. '.' → logprob: -12.395581245422363
    6. '_import' → logprob: -12.770581245422363
    7. ' im' → logprob: -13.645581245422363
    8. ' itertools' → logprob: -13.770581245422363
    9. '.import' → logprob: -13.770581245422363
    10. ' .' → logprob: -14.145581245422363

Token 8: ' is' (ID: 382)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0406745672225952
    2. 'is' → logprob: -1.2906745672225952
    3. 'per' → logprob: -2.2906746864318848
    4. 'product' → logprob: -2.4156746864318848
    5. 'chain' → logprob: -2.7906746864318848
    6. 'group' → logprob: -3.2906746864318848
    7. 'cycle' → logprob: -3.4156746864318848
    8. ' permutations' → logprob: -4.290674686431885
    9. 'com' → logprob: -4.540674686431885
    10. 'import' → logprob: -4.665674686431885

Token 9: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.0031304247677326202
    2. 'l' → logprob: -6.8781304359436035
    3. 'n' → logprob: -7.1281304359436035
    4. '```' → logprob: -8.503129959106445
    5. 'lic' → logprob: -8.753129959106445
    6. 'ertools' → logprob: -9.003129959106445
    7. '>' → logprob: -9.253129959106445
    8. '#' → logprob: -9.253129959106445
    9. 'cycle' → logprob: -9.628129959106445
    10. '1' → logprob: -9.753129959106445

Token 10: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4337475895881653
    2. 'for' → logprob: -1.6837475299835205
    3. '\' → logprob: -2.1837475299835205
    4. 'newline' → logprob: -4.0587477684021
    5. '' → logprob: -4.6837477684021
    6. '(' → logprob: -5.4337477684021
    7. '.' → logprob: -5.6837477684021
    8. 'print' → logprob: -5.6837477684021
    9. '
' → logprob: -6.3087477684021
    10. ',' → logprob: -6.4337477684021

Token 11: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2568919360637665
    2. '\' → logprob: -2.631891965866089
    3. 'for' → logprob: -3.381891965866089
    4. 'def' → logprob: -3.381891965866089
    5. 'import' → logprob: -3.506891965866089
    6. '```' → logprob: -3.881891965866089
    7. '' → logprob: -4.75689172744751
    8. '.' → logprob: -5.00689172744751
    9. 'data' → logprob: -5.13189172744751
    10. ',' → logprob: -6.13189172744751

Token 12: ' functools' (ID: 142636)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.1991639137268066
    2. 'collections' → logprob: -1.4491639137268066
    3. ' collections' → logprob: -1.5741639137268066
    4. 'math' → logprob: -1.9491639137268066
    5. ' functools' → logprob: -3.0741639137268066
    6. ' os' → logprob: -4.074163913726807
    7. 'operator' → logprob: -4.574163913726807
    8. 'os' → logprob: -4.699163913726807
    9. ' operator' → logprob: -4.699163913726807
    10. ' typing' → logprob: -5.074163913726807

Token 13: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.004815768916159868
    2. 'import' → logprob: -5.379815578460693
    3. ' ' → logprob: -9.254816055297852
    4. '_import' → logprob: -9.629816055297852
    5. '.' → logprob: -11.254816055297852
    6. '	import' → logprob: -11.879816055297852
    7. ' .' → logprob: -12.379816055297852
    8. ' _' → logprob: -12.754816055297852
    9. '_' → logprob: -13.254816055297852
    10. ' im' → logprob: -14.129816055297852

Token 14: ' partial' (ID: 13664)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9508599042892456
    2. ' l' → logprob: -1.5758599042892456
    3. 'partial' → logprob: -1.7008599042892456
    4. 'reduce' → logprob: -1.8258599042892456
    5. ' partial' → logprob: -3.075860023498535
    6. ' reduce' → logprob: -4.450860023498535
    7. 'wrap' → logprob: -6.075860023498535
    8. ' wraps' → logprob: -6.825860023498535
    9. 'cache' → logprob: -6.825860023498535
    10. 'cached' → logprob: -7.950860023498535

Token 15: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.965313732624054
    2. '

' → logprob: -1.2153136730194092
    3. '
' → logprob: -2.340313673019409
    4. '\' → logprob: -2.465313673019409
    5. '\n' → logprob: -2.840313673019409
    6. 'd' → logprob: -3.965313673019409
    7. '' → logprob: -4.340313911437988
    8. '```' → logprob: -4.340313911437988
    9. ',' → logprob: -4.965313911437988
    10. 'import' → logprob: -5.215313911437988

Token 16: 'read' (ID: 1293)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.30453139543533325
    2. 'def' → logprob: -1.4295313358306885
    3. '\' → logprob: -4.804531574249268
    4. '`' → logprob: -5.054531574249268
    5. '@' → logprob: -6.554531574249268
    6. '```' → logprob: -6.804531574249268
    7. '#' → logprob: -7.179531574249268
    8. 'n' → logprob: -7.179531574249268
    9. '\n' → logprob: -7.304531574249268
    10. 'data' → logprob: -7.429531574249268

Token 17: 'line' (ID: 1137)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05440189689397812
    2. '_' → logprob: -3.1794018745422363
    3. ')' → logprob: -5.804401874542236
    4. ' (' → logprob: -6.304401874542236
    5. '_line' → logprob: -6.429401874542236
    6. '=' → logprob: -6.554401874542236
    7. ' ' → logprob: -6.804401874542236
    8. ' =' → logprob: -6.929401874542236
    9. '(stdin' → logprob: -8.304402351379395
    10. 'line' → logprob: -8.429402351379395

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1987837702035904
    2. '(' → logprob: -2.0737838745117188
    3. ' =' → logprob: -2.9487838745117188
    4. ')' → logprob: -6.823783874511719
    5. ',' → logprob: -7.823783874511719
    6. '```' → logprob: -9.073783874511719
    7. '()' → logprob: -9.198783874511719
    8. ':' → logprob: -10.073783874511719
    9. '<|end|>' → logprob: -10.073783874511719
    10. '_' → logprob: -10.323783874511719

Token 19: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.006658892147243023
    2. ' stdin' → logprob: -5.256659030914307
    3. 'partial' → logprob: -6.631659030914307
    4. '(stdin' → logprob: -9.506658554077148
    5. ' partial' → logprob: -10.631658554077148
    6. '.stdin' → logprob: -12.381658554077148
    7. 'stdout' → logprob: -13.756658554077148
    8. 'read' → logprob: -14.256658554077148
    9. 'lambda' → logprob: -14.881658554077148
    10. 'input' → logprob: -15.131658554077148

Token 20: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0007100477814674377
    2. '.' → logprob: -7.5007100105285645
    3. '.read' → logprob: -8.875710487365723
    4. '.readlines' → logprob: -11.125710487365723
    5. '.buffer' → logprob: -14.375710487365723
    6. '.__' → logprob: -14.500710487365723
    7. 'read' → logprob: -14.625710487365723
    8. '<|end|>' → logprob: -14.625710487365723
    9. '._' → logprob: -15.500710487365723
    10. '```' → logprob: -16.125709533691406

Token 21: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49014583230018616
    2. '
' → logprob: -1.6151458024978638
    3. '(
' → logprob: -2.2401459217071533
    4. '\n' → logprob: -3.7401459217071533
    5. '()' → logprob: -3.8651459217071533
    6. 'def' → logprob: -4.990145683288574
    7. ')' → logprob: -5.115145683288574
    8. ',' → logprob: -5.240145683288574
    9. '

' → logprob: -5.740145683288574
    10. '(

' → logprob: -5.865145683288574

Token 22: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28807532787323
    2. 'for' → logprob: -1.53807532787323
    3. '()' → logprob: -4.2880754470825195
    4. '(' → logprob: -5.1630754470825195
    5. 'n' → logprob: -5.5380754470825195
    6. 'data' → logprob: -6.4130754470825195
    7. '\n' → logprob: -6.5380754470825195
    8. '(
' → logprob: -6.6630754470825195
    9. '#' → logprob: -6.7880754470825195
    10. ' for' → logprob: -7.0380754470825195

Token 23: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13061898946762085
    2. '=' → logprob: -2.2556190490722656
    3. ' ' → logprob: -4.380619049072266
    4. ',' → logprob: -5.505619049072266
    5. '.' → logprob: -8.130619049072266
    6. '_' → logprob: -8.380619049072266
    7. ' ,' → logprob: -8.880619049072266
    8. ')' → logprob: -9.130619049072266
    9. '  ' → logprob: -9.380619049072266
    10. ' =
' → logprob: -10.630619049072266

Token 24: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.7955029010772705
    2. 'M' → logprob: -1.1705029010772705
    3. ' K' → logprob: -1.9205029010772705
    4. ' M' → logprob: -2.6705029010772705
    5. 'Q' → logprob: -5.295502662658691
    6. ' ' → logprob: -5.295502662658691
    7. '_' → logprob: -5.670502662658691
    8. '=' → logprob: -6.295502662658691
    9. 'space' → logprob: -6.420502662658691
    10. ' =' → logprob: -6.795502662658691

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0264881644397974
    2. '=' → logprob: -3.6514880657196045
    3. ',' → logprob: -8.776488304138184
    4. ' ' → logprob: -10.651488304138184
    5. ' ,' → logprob: -11.776488304138184
    6. ' =
' → logprob: -14.651488304138184
    7. ')' → logprob: -14.776488304138184
    8. ' =",' → logprob: -15.276488304138184
    9. '=int' → logprob: -15.526488304138184
    10. ' =)' → logprob: -16.026487350463867

Token 26: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.00036382899270392954
    2. 'map' → logprob: -8.000364303588867
    3. ' read' → logprob: -11.250364303588867
    4. ' ' → logprob: -11.375364303588867
    5. ' readline' → logprob: -13.125364303588867
    6. ' list' → logprob: -13.625364303588867
    7. ' [' → logprob: -15.375364303588867
    8. ' tuple' → logprob: -15.625364303588867
    9. '	map' → logprob: -16.500364303588867
    10. ' int' → logprob: -16.875364303588867

Token 27: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3537236154079437
    2. '(int' → logprob: -1.4787236452102661
    3. '(lambda' → logprob: -3.3537235260009766
    4. '(str' → logprob: -3.6037235260009766
    5. '<|end|>' → logprob: -5.353723526000977
    6. '(read' → logprob: -6.478723526000977
    7. '()' → logprob: -8.228723526000977
    8. ' (' → logprob: -8.603723526000977
    9. '<|end|>' → logprob: -9.228723526000977
    10. '(input' → logprob: -9.353723526000977

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007419686880894005
    2. ' ,' → logprob: -7.875741958618164
    3. '(read' → logprob: -9.000741958618164
    4. ',input' → logprob: -9.125741958618164
    5. '.readline' → logprob: -10.125741958618164
    6. ',int' → logprob: -10.875741958618164
    7. '(' → logprob: -11.125741958618164
    8. ',line' → logprob: -11.125741958618164
    9. ' readline' → logprob: -11.750741958618164
    10. '(stdin' → logprob: -11.875741958618164

Token 29: ' readline' (ID: 179561)
  Prédit: ' readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' readline' → logprob: -0.476293683052063
    2. 'read' → logprob: -0.976293683052063
    3. ' read' → logprob: -6.226293563842773
    4. '.readline' → logprob: -9.476293563842773
    5. ')' → logprob: -9.601293563842773
    6. 'stdin' → logprob: -10.226293563842773
    7. 'input' → logprob: -10.726293563842773
    8. '(read' → logprob: -11.101293563842773
    9. ' stdin' → logprob: -12.101293563842773
    10. ' input' → logprob: -12.351293563842773

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4415970742702484
    2. '())' → logprob: -1.3165971040725708
    3. '()' → logprob: -2.4415969848632812
    4. ')' → logprob: -6.441596984863281
    5. '()))' → logprob: -9.066596984863281
    6. '()[' → logprob: -9.316596984863281
    7. '()),' → logprob: -10.566596984863281
    8. '());' → logprob: -11.066596984863281
    9. '()
' → logprob: -11.316596984863281
    10. '();)' → logprob: -11.316596984863281

Token 31: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.12863655388355255
    2. 'split' → logprob: -2.128636598587036
    3. 'rstrip' → logprob: -6.378636360168457
    4. 'read' → logprob: -12.128636360168457
    5. ' strip' → logprob: -12.878636360168457
    6. ')' → logprob: -14.503636360168457
    7. ' split' → logprob: -14.753636360168457
    8. '```' → logprob: -15.753636360168457
    9. '(strip' → logprob: -16.253637313842773
    10. '()' → logprob: -16.378637313842773

Token 32: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005317719653248787
    2. '))' → logprob: -5.255317687988281
    3. '())' → logprob: -10.005317687988281
    4. '()' → logprob: -10.255317687988281
    5. '),' → logprob: -13.630317687988281
    6. '`)' → logprob: -14.630317687988281
    7. ')))' → logprob: -14.755317687988281
    8. ')
' → logprob: -15.130317687988281
    9. ')`' → logprob: -15.255317687988281
    10. '()))' → logprob: -15.380317687988281

Token 33: 'Q' (ID: 48)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006766175851225853
    2. '
' → logprob: -6.381766319274902
    3. ')' → logprob: -6.881766319274902
    4. 'data' → logprob: -7.006766319274902
    5. '\n' → logprob: -7.381766319274902
    6. 'for' → logprob: -7.881766319274902
    7. ' 
' → logprob: -8.006766319274902
    8. '' → logprob: -8.256766319274902
    9. 'def' → logprob: -8.506766319274902
    10. '  
' → logprob: -8.881766319274902

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05043027549982071
    2. '=' → logprob: -3.6754302978515625
    3. 's' → logprob: -3.9254302978515625
    4. ',' → logprob: -6.9254302978515625
    5. '_' → logprob: -7.0504302978515625
    6. '.' → logprob: -7.3004302978515625
    7. ' ' → logprob: -7.4254302978515625
    8. 'S' → logprob: -7.8004302978515625
    9. '[' → logprob: -8.925430297851562
    10. 'u' → logprob: -9.925430297851562

Token 35: ' range' (ID: 3352)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04042680934071541
    2. '[]' → logprob: -3.540426731109619
    3. '[int' → logprob: -5.790426731109619
    4. 'K' → logprob: -5.915426731109619
    5. ' int' → logprob: -5.915426731109619
    6. ' []' → logprob: -6.665426731109619
    7. ' K' → logprob: -7.915426731109619
    8. 'N' → logprob: -8.915427207946777
    9. 'list' → logprob: -9.415427207946777
    10. 'map' → logprob: -9.540427207946777

Token 36: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07874204218387604
    2. '(K' → logprob: -2.953742027282715
    3. '(N' → logprob: -3.828742027282715
    4. '(Q' → logprob: -6.328742027282715
    5. '(-' → logprob: -10.828742027282715
    6. '((' → logprob: -11.578742027282715
    7. '(len' → logprob: -12.328742027282715
    8. '(int' → logprob: -12.703742027282715
    9. '(n' → logprob: -12.828742027282715
    10. '(M' → logprob: -13.203742027282715

Token 37: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012237003829795867
    2. ' )' → logprob: -10.0001220703125
    3. ',' → logprob: -10.7501220703125
    4. '-K' → logprob: -11.2501220703125
    5. '-' → logprob: -11.3751220703125
    6. ')
' → logprob: -12.1251220703125
    7. '//' → logprob: -12.6251220703125
    8. '+' → logprob: -12.7501220703125
    9. '),' → logprob: -12.7501220703125
    10. ' -' → logprob: -12.7501220703125

Token 38: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01850610412657261
    2. 'K' → logprob: -4.643506050109863
    3. ' ' → logprob: -5.268506050109863
    4. ' K' → logprob: -5.643506050109863
    5. '2' → logprob: -12.518506050109863
    6. '	K' → logprob: -13.268506050109863
    7. '-' → logprob: -13.393506050109863
    8. '(' → logprob: -13.393506050109863
    9. '   ' → logprob: -13.643506050109863
    10. ' -' → logprob: -13.643506050109863

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12731768190860748
    2. 'K' → logprob: -2.1273176670074463
    3. ' K' → logprob: -8.377317428588867
    4. ' ' → logprob: -9.502317428588867
    5. '2' → logprob: -10.627317428588867
    6. '(' → logprob: -11.377317428588867
    7. 'Q' → logprob: -11.377317428588867
    8. '10' → logprob: -11.627317428588867
    9. '100' → logprob: -12.252317428588867
    10. '5' → logprob: -12.627317428588867

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016630393220111728
    2. ',' → logprob: -6.6266632080078125
    3. ')[' → logprob: -9.376663208007812
    4. ' )' → logprob: -9.501663208007812
    5. '-' → logprob: -10.251663208007812
    6. '+' → logprob: -10.876663208007812
    7. '),' → logprob: -11.001663208007812
    8. ' -' → logprob: -11.126663208007812
    9. '))' → logprob: -11.126663208007812
    10. ')
' → logprob: -11.376663208007812

Token 41: 'bit' (ID: 6516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6733366250991821
    2. 'dp' → logprob: -1.9233366250991821
    3. '[' → logprob: -2.1733365058898926
    4. 'a' → logprob: -2.4233365058898926
    5. 'A' → logprob: -2.5483365058898926
    6. 'def' → logprob: -3.1733365058898926
    7. 'positions' → logprob: -4.048336505889893
    8. 'for' → logprob: -4.048336505889893
    9. '_' → logprob: -4.173336505889893
    10. 'M' → logprob: -4.173336505889893

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01308564655482769
    2. '=' → logprob: -4.388085842132568
    3. 's' → logprob: -7.638085842132568
    4. 'size' → logprob: -10.51308536529541
    5. 'tree' → logprob: -11.01308536529541
    6. '_size' → logprob: -11.13808536529541
    7. '=[]' → logprob: -11.26308536529541
    8. '_' → logprob: -12.13808536529541
    9. 'array' → logprob: -12.63808536529541
    10. '_s' → logprob: -12.76308536529541

Token 43: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006004755850881338
    2. ' [' → logprob: -5.131004810333252
    3. '[N' → logprob: -9.506004333496094
    4. '[n' → logprob: -14.756004333496094
    5. '[-' → logprob: -14.756004333496094
    6. ' ' → logprob: -15.381004333496094
    7. '[int' → logprob: -16.006004333496094
    8. '0' → logprob: -16.131004333496094
    9. '[q' → logprob: -16.256004333496094
    10. '[K' → logprob: -16.256004333496094

Token 44: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005253680050373077
    2. '[N' → logprob: -5.255253791809082
    3. ' [' → logprob: -11.005253791809082
    4. '[int' → logprob: -14.130253791809082
    5. '[n' → logprob: -14.630253791809082
    6. '[K' → logprob: -14.630253791809082
    7. '[I' → logprob: -14.880253791809082
    8. '0' → logprob: -14.880253791809082
    9. '[-' → logprob: -15.255253791809082
    10. '[len' → logprob: -15.630253791809082

Token 45: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.08761917054653168
    2. ' <<' → logprob: -2.5876190662384033
    3. '0' → logprob: -4.962619304656982
    4. '<<(' → logprob: -7.587619304656982
    5. ' <<=' → logprob: -8.337618827819824
    6. '<' → logprob: -8.337618827819824
    7. '1' → logprob: -9.087618827819824
    8. '+' → logprob: -9.212618827819824
    9. '6' → logprob: -9.462618827819824
    10. '2' → logprob: -9.462618827819824

Token 46: ' N' (ID: 478)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.40652990341186523
    2. 'K' → logprob: -1.1565299034118652
    3. '17' → logprob: -5.031529903411865
    4. '10' → logprob: -6.281529903411865
    5. '30' → logprob: -6.281529903411865
    6. '0' → logprob: -6.781529903411865
    7. '21' → logprob: -6.781529903411865
    8. '19' → logprob: -7.031529903411865
    9. 'N' → logprob: -7.156529903411865
    10. '18' → logprob: -7.406529903411865

Token 47: '

' (ID: 279)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5455875396728516
    2. ')' → logprob: -1.7955875396728516
    3. '[' → logprob: -1.9205875396728516
    4. '.' → logprob: -4.045587539672852
    5. '**' → logprob: -4.295587539672852
    6. '#' → logprob: -4.670587539672852
    7. ' -' → logprob: -5.045587539672852
    8. '```' → logprob: -5.045587539672852
    9. '+' → logprob: -5.170587539672852
    10. ']' → logprob: -5.420587539672852

Token 48: 'd' (ID: 67)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3469136655330658
    2. ')' → logprob: -2.3469135761260986
    3. '#' → logprob: -3.4719135761260986
    4. '[' → logprob: -3.4719135761260986
    5. ':' → logprob: -3.9719135761260986
    6. '+' → logprob: -3.9719135761260986
    7. '0' → logprob: -4.471913814544678
    8. ' ' → logprob: -4.596913814544678
    9. '_' → logprob: -4.846913814544678
    10. 'for' → logprob: -4.846913814544678

Token 49: ' =' (ID: 314)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.20943686366081238
    2. 'e' → logprob: -1.8344368934631348
    3. '=' → logprob: -4.084436893463135
    4. ' =' → logprob: -4.584436893463135
    5. 'ata' → logprob: -8.334436416625977
    6. 'f' → logprob: -8.459436416625977
    7. 'efe' → logprob: -8.459436416625977
    8. 'efs' → logprob: -8.709436416625977
    9. ' ' → logprob: -8.834436416625977
    10. 'i' → logprob: -8.834436416625977

Token 50: ' [[' (ID: 9237)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -1.009596347808838
    2. ' [' → logprob: -1.759596347808838
    3. ' ' → logprob: -2.134596347808838
    4. ' K' → logprob: -2.884596347808838
    5. '{}' → logprob: -3.134596347808838
    6. '0' → logprob: -3.134596347808838
    7. ' []' → logprob: -3.134596347808838
    8. ' {' → logprob: -3.259596347808838
    9. '[' → logprob: -3.259596347808838
    10. ' dict' → logprob: -3.759596347808838

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01859503984451294
    2. 'False' → logprob: -4.393595218658447
    3. '-' → logprob: -5.893595218658447
    4. '(' → logprob: -7.518595218658447
    5. 'None' → logprob: -7.893595218658447
    6. '1' → logprob: -7.893595218658447
    7. 'float' → logprob: -8.018594741821289
    8. ']' → logprob: -8.268594741821289
    9. '[]' → logprob: -8.393594741821289
    10. 'N' → logprob: -8.518594741821289

Token 52: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2720426917076111
    2. ' for' → logprob: -2.647042751312256
    3. ']*' → logprob: -2.647042751312256
    4. 'for' → logprob: -2.772042751312256
    5. ']*(' → logprob: -3.397042751312256
    6. ' ]' → logprob: -8.772042274475098
    7. ']+' → logprob: -8.897042274475098
    8. ',' → logprob: -10.022042274475098
    9. ' ' → logprob: -10.147042274475098
    10. '	for' → logprob: -11.147042274475098

Token 53: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8484697937965393
    2. ']' → logprob: -1.2234697341918945
    3. ' for' → logprob: -1.8484697341918945
    4. ']*(' → logprob: -2.4734697341918945
    5. ']*' → logprob: -3.3484697341918945
    6. ']+' → logprob: -7.3484697341918945
    7. ' ]' → logprob: -10.473469734191895
    8. '][' → logprob: -10.598469734191895
    9. '	for' → logprob: -10.723469734191895
    10. '   ' → logprob: -10.848469734191895

Token 54: ' bit' (ID: 3546)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.6577054858207703
    2. '(N' → logprob: -1.532705545425415
    3. '(' → logprob: -2.157705545425415
    4. '(bit' → logprob: -2.782705545425415
    5. ' (' → logprob: -3.282705545425415
    6. 'bit' → logprob: -3.782705545425415
    7. 'K' → logprob: -4.532705307006836
    8. 'N' → logprob: -4.907705307006836
    9. ' bit' → logprob: -5.032705307006836
    10. ' K' → logprob: -7.407705307006836

Token 55: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4290449917316437
    2. ' for' → logprob: -1.0540449619293213
    3. ']' → logprob: -8.054044723510742
    4. '	for' → logprob: -11.429044723510742
    5. ')' → logprob: -11.679044723510742
    6. ' ' → logprob: -13.054044723510742
    7. '[' → logprob: -13.929044723510742
    8. '   ' → logprob: -14.304044723510742
    9. ' ]' → logprob: -14.554044723510742
    10. '```' → logprob: -14.679044723510742

Token 56: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.43384233117103577
    2. '_' → logprob: -1.0588423013687134
    3. ' ' → logprob: -6.058842182159424
    4. ' range' → logprob: -6.433842182159424
    5. ' in' → logprob: -7.183842182159424
    6. ' i' → logprob: -8.683842658996582
    7. 'range' → logprob: -9.683842658996582
    8. '_range' → logprob: -9.683842658996582
    9. '(' → logprob: -10.808842658996582
    10. '_i' → logprob: -11.058842658996582

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08971860259771347
    2. 'in' → logprob: -2.4647185802459717
    3. 'range' → logprob: -7.464718818664551
    4. 'd' → logprob: -9.58971881866455
    5. ' ' → logprob: -9.71471881866455
    6. ' range' → logprob: -10.83971881866455
    7. '(range' → logprob: -11.46471881866455
    8. 'N' → logprob: -12.08971881866455
    9. '(' → logprob: -12.21471881866455
    10. 'Q' → logprob: -12.33971881866455

Token 58: ' Q' (ID: 1486)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7527622580528259
    2. 'range' → logprob: -1.3777623176574707
    3. 'Q' → logprob: -1.5027623176574707
    4. ' Q' → logprob: -3.0027623176574707
    5. '[' → logprob: -6.002762317657471
    6. 'N' → logprob: -6.752762317657471
    7. ' N' → logprob: -8.627761840820312
    8. ' ' → logprob: -8.752761840820312
    9. '[N' → logprob: -8.752761840820312
    10. ' xrange' → logprob: -9.127761840820312

Token 59: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12871097028255463
    2. ')]' → logprob: -2.128710985183716
    3. ')' → logprob: -6.503710746765137
    4. '])' → logprob: -8.253710746765137
    5. ']
' → logprob: -11.628710746765137
    6. ' ]' → logprob: -12.628710746765137
    7. '])]' → logprob: -12.628710746765137
    8. '()]' → logprob: -13.003710746765137
    9. ')])' → logprob: -13.628710746765137
    10. '`]' → logprob: -13.878710746765137

Token 60: 'f' (ID: 69)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06891392171382904
    2. ' for' → logprob: -3.3189139366149902
    3. ')' → logprob: -4.31891393661499
    4. ']' → logprob: -4.69391393661499
    5. 'd' → logprob: -5.94391393661499
    6. 'i' → logprob: -6.06891393661499
    7. '0' → logprob: -7.31891393661499
    8. '[' → logprob: -7.44391393661499
    9. '^' → logprob: -8.693913459777832
    10. '_' → logprob: -9.068913459777832

Token 61: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.005345940124243498
    2. ' =' → logprob: -5.505345821380615
    3. 'rom' → logprob: -8.130346298217773
    4. 'o' → logprob: -8.255346298217773
    5. '=' → logprob: -8.755346298217773
    6. 'ull' → logprob: -9.005346298217773
    7. 'i' → logprob: -10.130346298217773
    8. '0' → logprob: -10.130346298217773
    9. 'a' → logprob: -10.380346298217773
    10. 'orget' → logprob: -10.505346298217773

Token 62: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.6239033341407776
    2. '[' → logprob: -1.2489032745361328
    3. ' [[' → logprob: -2.498903274536133
    4. ' [' → logprob: -2.623903274536133
    5. 'd' → logprob: -4.748903274536133
    6. '[d' → logprob: -5.623903274536133
    7. ' d' → logprob: -5.873903274536133
    8. '0' → logprob: -6.873903274536133
    9. ' partial' → logprob: -6.873903274536133
    10. ' lambda' → logprob: -7.248903274536133

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022091392893344164
    2. 'float' → logprob: -6.877209186553955
    3. '-' → logprob: -7.502209186553955
    4. 'False' → logprob: -7.752209186553955
    5. '1' → logprob: -10.377208709716797
    6. 'inf' → logprob: -10.377208709716797
    7. '(' → logprob: -10.752208709716797
    8. '-inf' → logprob: -10.877208709716797
    9. '[' → logprob: -11.002208709716797
    10. ' ' → logprob: -11.127208709716797

Token 64: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002344730542972684
    2. ' ]' → logprob: -6.252344608306885
    3. ')' → logprob: -8.502345085144043
    4. ']*' → logprob: -8.877345085144043
    5. ' *' → logprob: -10.627345085144043
    6. '*' → logprob: -11.627345085144043
    7. ')]' → logprob: -11.752345085144043
    8. ']*(' → logprob: -11.877345085144043
    9. ' ' → logprob: -12.502345085144043
    10. '<|end|>' → logprob: -12.627345085144043

Token 65: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11000577360391617
    2. ' *' → logprob: -2.3600058555603027
    3. '*' → logprob: -5.610005855560303
    4. ' ]' → logprob: -5.860005855560303
    5. ']*' → logprob: -6.235005855560303
    6. ' bit' → logprob: -7.360005855560303
    7. ')' → logprob: -8.110005378723145
    8. ' ' → logprob: -9.110005378723145
    9. '(bit' → logprob: -9.360005378723145
    10. 'bit' → logprob: -10.110005378723145

Token 66: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5095123648643494
    2. ' bit' → logprob: -1.1345124244689941
    3. ' (' → logprob: -4.009512424468994
    4. 'Q' → logprob: -4.259512424468994
    5. '(N' → logprob: -4.759512424468994
    6. ' Q' → logprob: -5.009512424468994
    7. '(bit' → logprob: -5.009512424468994
    8. 'K' → logprob: -5.384512424468994
    9. '(Q' → logprob: -5.509512424468994
    10. ' K' → logprob: -5.759512424468994

Token 67: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03805112838745117
    2. 'for' → logprob: -3.288051128387451
    3. ' ' → logprob: -12.41305160522461
    4. '	for' → logprob: -13.53805160522461
    5. '[' → logprob: -13.66305160522461
    6. ']' → logprob: -14.03805160522461
    7. ')' → logprob: -14.03805160522461
    8. ' in' → logprob: -15.28805160522461
    9. ' from' → logprob: -15.28805160522461
    10. 'from' → logprob: -16.16305160522461

Token 68: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48538413643836975
    2. ' Q' → logprob: -1.2353841066360474
    3. ' _' → logprob: -2.485384225845337
    4. 'Q' → logprob: -4.985383987426758
    5. ' in' → logprob: -5.985383987426758
    6. ' ' → logprob: -7.860383987426758
    7. '_Q' → logprob: -8.485383987426758
    8. ' range' → logprob: -8.610383987426758
    9. ' d' → logprob: -9.110383987426758
    10. 'd' → logprob: -9.860383987426758

Token 69: ' in' (ID: 306)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.18234868347644806
    2. ' Q' → logprob: -1.8073487281799316
    3. ' in' → logprob: -6.057348728179932
    4. 'range' → logprob: -9.307348251342773
    5. ' range' → logprob: -10.307348251342773
    6. ' ' → logprob: -10.432348251342773
    7. '(Q' → logprob: -10.682348251342773
    8. 'in' → logprob: -10.807348251342773
    9. '_' → logprob: -11.307348251342773
    10. 'd' → logprob: -11.682348251342773

Token 70: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.38776740431785583
    2. ' Q' → logprob: -1.1377674341201782
    3. ' range' → logprob: -8.012767791748047
    4. 'range' → logprob: -8.512767791748047
    5. ' ' → logprob: -9.012767791748047
    6. 'd' → logprob: -9.387767791748047
    7. '(Q' → logprob: -9.387767791748047
    8. ' d' → logprob: -11.262767791748047
    9. '	Q' → logprob: -11.512767791748047
    10. 'N' → logprob: -11.887767791748047

Token 71: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022084240335971117
    2. ')]' → logprob: -6.127208232879639
    3. ' ]' → logprob: -11.502208709716797
    4. '()]' → logprob: -12.002208709716797
    5. '`]' → logprob: -13.002208709716797
    6. ']
' → logprob: -13.627208709716797
    7. ']]' → logprob: -13.877208709716797
    8. '[' → logprob: -14.752208709716797
    9. ']

' → logprob: -14.877208709716797
    10. '>]' → logprob: -14.877208709716797

Token 72: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043698593974113464
    2. ')' → logprob: -3.54369854927063
    3. ']' → logprob: -5.418698787689209
    4. ' for' → logprob: -6.043698787689209
    5. '#' → logprob: -6.293698787689209
    6. 'd' → logprob: -7.168698787689209
    7. '<|end|>' → logprob: -7.168698787689209
    8. 'def' → logprob: -7.418698787689209
    9. 'f' → logprob: -7.543698787689209
    10. '[' → logprob: -7.793698787689209

Token 73: ' Reading' (ID: 23353)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10376615077257156
    2. ' for' → logprob: -2.3537662029266357
    3. 'def' → logprob: -6.603765964508057
    4. 'i' → logprob: -6.853765964508057
    5. '#' → logprob: -8.478766441345215
    6. 'f' → logprob: -8.978766441345215
    7. ' i' → logprob: -9.228766441345215
    8. 'd' → logprob: -9.603766441345215
    9. 'from' → logprob: -9.853766441345215
    10. '_' → logprob: -9.978766441345215

Token 74: ' data' (ID: 1238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4450940787792206
    2. '<|end|>' → logprob: -2.070094108581543
    3. ' for' → logprob: -2.570094108581543
    4. 'data' → logprob: -2.820094108581543
    5. '<|end|>' → logprob: -3.695094108581543
    6. 'the' → logprob: -4.695094108581543
    7. '...' → logprob: -4.820094108581543
    8. 'input' → logprob: -5.445094108581543
    9. ' the' → logprob: -5.570094108581543
    10. 'values' → logprob: -5.695094108581543

Token 75: ' with' (ID: 483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025622878223657608
    2. ' for' → logprob: -4.025622844696045
    3. '<|end|>' → logprob: -5.525622844696045
    4. ')' → logprob: -6.150622844696045
    5. '<|end|>' → logprob: -7.900622844696045
    6. ']' → logprob: -8.275623321533203
    7. '#' → logprob: -9.275623321533203
    8. '...' → logprob: -9.275623321533203
    9. ',' → logprob: -9.775623321533203
    10. 'n' → logprob: -9.900623321533203

Token 76: ' advanced' (ID: 12990)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0907294750213623
    2. 'is' → logprob: -1.4657294750213623
    3. 'partial' → logprob: -2.0907294750213623
    4. ' for' → logprob: -2.3407294750213623
    5. ' partial' → logprob: -2.4657294750213623
    6. ' is' → logprob: -2.9657294750213623
    7. 'read' → logprob: -3.8407294750213623
    8. 'list' → logprob: -5.465729713439941
    9. 'bit' → logprob: -5.590729713439941
    10. 'd' → logprob: -5.590729713439941

Token 77: ' unpack' (ID: 61704)
  Prédit: ' techniques'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' techniques' → logprob: -0.5291289687156677
    2. ' slicing' → logprob: -1.4041290283203125
    3. ' indexing' → logprob: -2.2791290283203125
    4. ' bit' → logprob: -4.1541290283203125
    5. 's' → logprob: -4.5291290283203125
    6. 'bit' → logprob: -4.7791290283203125
    7. ' technique' → logprob: -5.0291290283203125
    8. ' input' → logprob: -6.2791290283203125
    9. 'slice' → logprob: -6.4041290283203125
    10. 'for' → logprob: -6.5291290283203125

Token 78: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.00040958117460832
    2. 'ng' → logprob: -8.625409126281738
    3. '*' → logprob: -9.625409126281738
    4. '=' → logprob: -9.750409126281738
    5. '_' → logprob: -11.250409126281738
    6. '<|end|>' → logprob: -11.250409126281738
    7. '_unpack' → logprob: -11.250409126281738
    8. 'ings' → logprob: -11.500409126281738
    9. 'partial' → logprob: -12.125409126281738
    10. 'ling' → logprob: -12.250409126281738

Token 79: '/map' (ID: 89146)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011742709903046489
    2. ' for' → logprob: -6.876174449920654
    3. 'data' → logprob: -10.376173973083496
    4. '
' → logprob: -11.001173973083496
    5. '<|end|>' → logprob: -11.501173973083496
    6. '```' → logprob: -11.626173973083496
    7. 'line' → logprob: -12.001173973083496
    8. 'read' → logprob: -12.001173973083496
    9. ')' → logprob: -12.126173973083496
    10. 'i' → logprob: -12.126173973083496

Token 80: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011198836378753185
    2. 'data' → logprob: -5.261198997497559
    3. ' for' → logprob: -5.886198997497559
    4. ']' → logprob: -8.136198997497559
    5. 'a' → logprob: -8.136198997497559
    6. 'lines' → logprob: -8.136198997497559
    7. 'values' → logprob: -8.261198997497559
    8. '*' → logprob: -8.386198997497559
    9. 'A' → logprob: -8.636198997497559
    10. ')' → logprob: -8.636198997497559

Token 81: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006986741907894611
    2. 'data' → logprob: -5.756986618041992
    3. ' for' → logprob: -6.756986618041992
    4. 'a' → logprob: -7.631986618041992
    5. 'A' → logprob: -7.881986618041992
    6. 'lines' → logprob: -8.131986618041992
    7. 'values' → logprob: -8.506986618041992
    8. ']' → logprob: -8.756986618041992
    9. 'arr' → logprob: -8.881986618041992
    10. 'points' → logprob: -9.381986618041992

Token 82: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.34910672903060913
    2. ' _' → logprob: -1.349106788635254
    3. '_' → logprob: -3.974106788635254
    4. 'i' → logprob: -4.474106788635254
    5. ' x' → logprob: -6.599106788635254
    6. '_i' → logprob: -7.099106788635254
    7. ' ' → logprob: -7.599106788635254
    8. ' v' → logprob: -7.849106788635254
    9. ' k' → logprob: -8.224106788635254
    10. ' a' → logprob: -8.349106788635254

Token 83: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.359273225069046
    2. 'in' → logprob: -1.2342731952667236
    3. ',' → logprob: -4.609273433685303
    4. ' ' → logprob: -7.859273433685303
    5. ' ,' → logprob: -8.484272956848145
    6. '_' → logprob: -9.109272956848145
    7. ',_' → logprob: -10.734272956848145
    8. ' _' → logprob: -10.984272956848145
    9. '_in' → logprob: -11.484272956848145
    10. ',n' → logprob: -11.734272956848145

Token 84: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.875643789768219
    2. ' line' → logprob: -1.3756437301635742
    3. 'x' → logprob: -2.750643730163574
    4. 'a' → logprob: -2.875643730163574
    5. 'row' → logprob: -3.750643730163574
    6. 's' → logprob: -3.750643730163574
    7. 'v' → logprob: -4.375643730163574
    8. 'raw' → logprob: -4.625643730163574
    9. 'vals' → logprob: -4.625643730163574
    10. 'val' → logprob: -4.750643730163574

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16036853194236755
    2. 'in' → logprob: -1.91036856174469
    3. 's' → logprob: -9.660368919372559
    4. ',' → logprob: -10.535368919372559
    5. ' ' → logprob: -10.660368919372559
    6. ')' → logprob: -11.785368919372559
    7. 'n' → logprob: -13.035368919372559
    8. 'as' → logprob: -13.472868919372559
    9. 'In' → logprob: -13.785368919372559
    10. '=' → logprob: -13.847868919372559

Token 86: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.1003120169043541
    2. ' enumerate' → logprob: -2.3503119945526123
    3. 'is' → logprob: -9.475312232971191
    4. '(en' → logprob: -11.475312232971191
    5. ' is' → logprob: -12.350312232971191
    6. 'en' → logprob: -12.475312232971191
    7. 'zip' → logprob: -12.600312232971191
    8. 'enum' → logprob: -13.350312232971191
    9. '```' → logprob: -13.350312232971191
    10. 'enqueue' → logprob: -14.350312232971191

Token 87: '(is' (ID: 16171)
  Prédit: '(is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.18074347078800201
    2. '(map' → logprob: -2.055743455886841
    3. '(read' → logprob: -3.430743455886841
    4. '(iter' → logprob: -6.55574369430542
    5. '(stdin' → logprob: -6.80574369430542
    6. 'is' → logprob: -7.05574369430542
    7. '(range' → logprob: -7.55574369430542
    8. '(' → logprob: -7.93074369430542
    9. '(st' → logprob: -8.555743217468262
    10. '(part' → logprob: -8.930743217468262

Token 88: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -5.466968650580384e-05
    2. 'slice' → logprob: -9.875054359436035
    3. 'line' → logprob: -13.875054359436035
    4. 'lace' → logprob: -14.125054359436035
    5. '_slice' → logprob: -14.625054359436035
    6. 'lices' → logprob: -15.250054359436035
    7. '```' → logprob: -15.375054359436035
    8. 'li' → logprob: -15.625054359436035
    9. 'liced' → logprob: -16.50005531311035
    10. 'plit' → logprob: -16.75005531311035

Token 89: '(stdin' (ID: 176594)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.16030079126358032
    2. '(stdin' → logprob: -1.9103007316589355
    3. '(' → logprob: -9.785301208496094
    4. 'read' → logprob: -11.160301208496094
    5. 'stdin' → logprob: -13.160301208496094
    6. ' (' → logprob: -13.910301208496094
    7. '(std' → logprob: -14.160301208496094
    8. ')(' → logprob: -14.910301208496094
    9. '(
' → logprob: -15.035301208496094
    10. ' readline' → logprob: -15.285301208496094

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016314705833792686
    2. '(),' → logprob: -5.266314506530762
    3. '(' → logprob: -5.391314506530762
    4. ' ,' → logprob: -5.641314506530762
    5. '(N' → logprob: -6.266314506530762
    6. '(Q' → logprob: -9.016314506530762
    7. ',N' → logprob: -9.016314506530762
    8. ',Q' → logprob: -9.016314506530762
    9. ' ' → logprob: -9.516314506530762
    10. '(','' → logprob: -9.766314506530762

Token 91: ' N' (ID: 478)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.05281159281730652
    2. ' K' → logprob: -3.177811622619629
    3. 'N' → logprob: -4.677811622619629
    4. ' N' → logprob: -8.177811622619629
    5. ' ' → logprob: -9.427811622619629
    6. 'Q' → logprob: -9.802811622619629
    7. 'i' → logprob: -10.927811622619629
    8. '1' → logprob: -12.052811622619629
    9. '0' → logprob: -12.177811622619629
    10. ' i' → logprob: -12.177811622619629

Token 92: ' +' (ID: 659)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.16644181311130524
    2. ',' → logprob: -2.0414419174194336
    3. ')):
' → logprob: -4.916441917419434
    4. '):' → logprob: -5.041441917419434
    5. '))' → logprob: -5.541441917419434
    6. ',K' → logprob: -6.541441917419434
    7. ' ,' → logprob: -7.041441917419434
    8. '+' → logprob: -7.291441917419434
    9. '-' → logprob: -7.791441917419434
    10. 'K' → logprob: -7.791441917419434

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.49794816970825195
    2. 'K' → logprob: -1.497948169708252
    3. ' ' → logprob: -2.247948169708252
    4. ' K' → logprob: -2.872948169708252
    5. 'N' → logprob: -6.622948169708252
    6. '2' → logprob: -6.747948169708252
    7. '3' → logprob: -7.622948169708252
    8. '6' → logprob: -7.747948169708252
    9. ' N' → logprob: -7.872948169708252
    10. '  ' → logprob: -7.872948169708252

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21540287137031555
    2. 'K' → logprob: -1.7154028415679932
    3. 'N' → logprob: -5.715403079986572
    4. ' ' → logprob: -5.840403079986572
    5. ' K' → logprob: -5.840403079986572
    6. '2' → logprob: -6.465403079986572
    7. 'i' → logprob: -6.465403079986572
    8. 'Q' → logprob: -7.590403079986572
    9. '10' → logprob: -8.465402603149414
    10. '5' → logprob: -8.590402603149414

Token 95: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.05638941749930382
    2. '):' → logprob: -3.681389331817627
    3. '))' → logprob: -4.681389331817627
    4. ')):
' → logprob: -4.806389331817627
    5. '),' → logprob: -4.806389331817627
    6. ',' → logprob: -6.056389331817627
    7. ')):
' → logprob: -7.181389331817627
    8. ')' → logprob: -7.806389331817627
    9. ':' → logprob: -8.431389808654785
    10. '):
' → logprob: -9.806389808654785

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09443498402833939
    2. ' a' → logprob: -4.594435214996338
    3. ' values' → logprob: -4.594435214996338
    4. ' vals' → logprob: -4.594435214996338
    5. ' s' → logprob: -4.719435214996338
    6. ' data' → logprob: -5.344435214996338
    7. 'a' → logprob: -5.344435214996338
    8. ' parts' → logprob: -5.469435214996338
    9. 'vals' → logprob: -5.969435214996338
    10. ' items' → logprob: -6.219435214996338

Token 97: ' d' (ID: 272)
  Prédit: ' vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vals' → logprob: -1.4618948698043823
    2. '   ' → logprob: -1.8368948698043823
    3. ' values' → logprob: -1.9618948698043823
    4. 'vals' → logprob: -2.211894989013672
    5. ' nums' → logprob: -2.461894989013672
    6. ' a' → logprob: -3.336894989013672
    7. 'values' → logprob: -3.461894989013672
    8. ' data' → logprob: -3.461894989013672
    9. 'nums' → logprob: -3.461894989013672
    10. 'a' → logprob: -4.086894989013672

Token 98: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001907855912577361
    2. '[' → logprob: -9.375190734863281
    3. 'i' → logprob: -9.625190734863281
    4. '][' → logprob: -11.250190734863281
    5. ' [' → logprob: -12.375190734863281
    6. ' =' → logprob: -12.500190734863281
    7. '=' → logprob: -12.750190734863281
    8. ')[' → logprob: -13.375190734863281
    9. '\[' → logprob: -13.375190734863281
    10. ']' → logprob: -13.625190734863281

Token 99: '][:' (ID: 63357)
  Prédit: '][:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][:' → logprob: -0.7673222422599792
    2. ']' → logprob: -0.8923222422599792
    3. '][' → logprob: -2.642322301864624
    4. '].' → logprob: -3.392322301864624
    5. ']=' → logprob: -4.017322063446045
    6. '])' → logprob: -6.392322063446045
    7. ']+=' → logprob: -7.892322063446045
    8. '[:' → logprob: -8.142322540283203
    9. '],' → logprob: -8.642322540283203
    10. ' ]' → logprob: -9.017322540283203

Token 100: ']' (ID: 60)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.4257691204547882
    2. 'len' → logprob: -1.1757690906524658
    3. 'N' → logprob: -3.550769090652466
    4. ']' → logprob: -5.300769329071045
    5. 'int' → logprob: -7.050769329071045
    6. 'K' → logprob: -7.300769329071045
    7. ':' → logprob: -7.425769329071045
    8. ' bit' → logprob: -8.050768852233887
    9. '1' → logprob: -8.175768852233887
    10. ' len' → logprob: -8.300768852233887

Token 101: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0014756986638531089
    2. ' =' → logprob: -7.001475811004639
    3. '=list' → logprob: -7.876475811004639
    4. '[:]' → logprob: -8.87647533416748
    5. ',' → logprob: -10.62647533416748
    6. '[:' → logprob: -11.00147533416748
    7. '=line' → logprob: -13.00147533416748
    8. '[' → logprob: -14.50147533416748
    9. ',map' → logprob: -15.50147533416748
    10. '=data' → logprob: -15.75147533416748

Token 102: ' list' (ID: 1562)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.015344219282269478
    2. ' map' → logprob: -4.765344142913818
    3. 'list' → logprob: -5.015344142913818
    4. ' list' → logprob: -9.640344619750977
    5. 'line' → logprob: -13.015344619750977
    6. '	map' → logprob: -13.140344619750977
    7. ' ' → logprob: -14.390344619750977
    8. '   ' → logprob: -14.765344619750977
    9. '(map' → logprob: -14.890344619750977
    10. '[' → logprob: -15.515344619750977

Token 103: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0008086714660748839
    2. 'map' → logprob: -7.3758087158203125
    3. '(' → logprob: -8.625808715820312
    4. ',map' → logprob: -14.375808715820312
    5. '	map' → logprob: -14.625808715820312
    6. '(int' → logprob: -14.875808715820312
    7. '(
' → logprob: -15.000808715820312
    8. ' map' → logprob: -15.125808715820312
    9. '(zip' → logprob: -15.500808715820312
    10. '   ' → logprob: -16.500808715820312

Token 104: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001026854501105845
    2. '(float' → logprob: -7.251026630401611
    3. '(' → logprob: -8.25102710723877
    4. 'int' → logprob: -10.25102710723877
    5. ',int' → logprob: -12.00102710723877
    6. '   ' → logprob: -12.12602710723877
    7. ')' → logprob: -13.00102710723877
    8. '(lambda' → logprob: -13.12602710723877
    9. ' int' → logprob: -14.12602710723877
    10. '	int' → logprob: -14.37602710723877

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43841663002967834
    2. ',line' → logprob: -1.563416600227356
    3. '(line' → logprob: -1.938416600227356
    4. ' ,' → logprob: -6.938416481018066
    5. 'line' → logprob: -8.063416481018066
    6. '(' → logprob: -8.813416481018066
    7. ',map' → logprob: -10.188416481018066
    8. '#line' → logprob: -10.313416481018066
    9. '   ' → logprob: -11.188416481018066
    10. ' line' → logprob: -11.438416481018066

Token 106: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.008686074987053871
    2. ' line' → logprob: -4.758686065673828
    3. '(line' → logprob: -10.508686065673828
    4. 'partial' → logprob: -11.508686065673828
    5. '   ' → logprob: -11.633686065673828
    6. ' ' → logprob: -12.008686065673828
    7. '	line' → logprob: -12.383686065673828
    8. 'read' → logprob: -12.758686065673828
    9. '#line' → logprob: -13.383686065673828
    10. ')' → logprob: -13.633686065673828

Token 107: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.010724129155278206
    2. '.split' → logprob: -5.260724067687988
    3. '.strip' → logprob: -5.260724067687988
    4. '.rstrip' → logprob: -9.010724067687988
    5. 'split' → logprob: -10.010724067687988
    6. '.' → logprob: -10.135724067687988
    7. ' .' → logprob: -10.135724067687988
    8. '()' → logprob: -11.760724067687988
    9. 'rstrip' → logprob: -11.760724067687988
    10. '.readline' → logprob: -11.760724067687988

Token 108: '()))

' (ID: 125972)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -3.857719275401905e-05
    2. '()' → logprob: -10.250038146972656
    3. ' ().' → logprob: -13.125038146972656
    4. '.split' → logprob: -14.125038146972656
    5. 'split' → logprob: -15.625038146972656
    6. ' .' → logprob: -16.750038146972656
    7. '.' → logprob: -17.250038146972656
    8. ')' → logprob: -17.375038146972656
    9. ' ()' → logprob: -18.000038146972656
    10. '()
' → logprob: -18.000038146972656

Token 109: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052132099866867065
    2. '<|end|>' → logprob: -3.8021321296691895
    3. '[:-' → logprob: -5.0521321296691895
    4. '   ' → logprob: -5.5521321296691895
    5. '[:' → logprob: -5.9271321296691895
    6. '[' → logprob: -6.0521321296691895
    7. '[::-' → logprob: -6.0521321296691895
    8. '[:]' → logprob: -6.1771321296691895
    9. 'for' → logprob: -6.4271321296691895
    10. '[i' → logprob: -6.8021321296691895

Token 110: ' Efficient' (ID: 130988)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043058112263679504
    2. ' for' → logprob: -3.168058156967163
    3. 'f' → logprob: -10.668058395385742
    4. '   ' → logprob: -11.918058395385742
    5. '#' → logprob: -12.418058395385742
    6. ')' → logprob: -12.543058395385742
    7. 'range' → logprob: -12.793058395385742
    8. '
' → logprob: -13.043058395385742
    9. '```' → logprob: -13.043058395385742
    10. 'def' → logprob: -13.168058395385742

Token 111: ' computation' (ID: 76411)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7652927041053772
    2. ' for' → logprob: -1.5152926445007324
    3. 'def' → logprob: -1.5152926445007324
    4. 'range' → logprob: -4.015292644500732
    5. 'dp' → logprob: -4.640292644500732
    6. ' calculation' → logprob: -5.140292644500732
    7. ' range' → logprob: -5.265292644500732
    8. ' traversal' → logprob: -5.390292644500732
    9. 'bit' → logprob: -5.515292644500732
    10. 'update' → logprob: -5.515292644500732

Token 112: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7910246253013611
    2. 'for' → logprob: -1.1660246849060059
    3. ' for' → logprob: -1.7910246849060059
    4. '<|end|>' → logprob: -3.541024684906006
    5. '):' → logprob: -4.541024684906006
    6. ',' → logprob: -4.916024684906006
    7. ' ' → logprob: -5.291024684906006
    8. '   ' → logprob: -5.291024684906006
    9. '
' → logprob: -6.291024684906006
    10. ':' → logprob: -6.416024684906006

Token 113: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.35065487027168274
    2. ' f' → logprob: -2.1006548404693604
    3. 'd' → logprob: -3.7256548404693604
    4. ' range' → logprob: -3.9756548404693604
    5. 'range' → logprob: -4.1006550788879395
    6. ' bit' → logprob: -4.3506550788879395
    7. 'bit' → logprob: -4.3506550788879395
    8. ' subsets' → logprob: -4.4756550788879395
    9. ' subset' → logprob: -4.6006550788879395
    10. ' the' → logprob: -4.6006550788879395

Token 114: ' using' (ID: 2360)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08618021011352539
    2. ' for' → logprob: -2.9611802101135254
    3. ')' → logprob: -3.8361802101135254
    4. '
' → logprob: -6.461180210113525
    5. '[' → logprob: -6.711180210113525
    6. '<|end|>' → logprob: -6.711180210113525
    7. '0' → logprob: -7.211180210113525
    8. ':' → logprob: -7.336180210113525
    9. ',' → logprob: -7.461180210113525
    10. '   ' → logprob: -7.586180210113525

Token 115: ' comprehension' (ID: 91423)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.3655845522880554
    2. 'lambda' → logprob: -2.1155846118927
    3. 'range' → logprob: -2.3655846118927
    4. 'for' → logprob: -3.6155846118927
    5. 'Q' → logprob: -4.115584373474121
    6. 'd' → logprob: -4.365584373474121
    7. 'enumer' → logprob: -4.740584373474121
    8. 'bit' → logprob: -4.865584373474121
    9. 'f' → logprob: -4.865584373474121
    10. 'sum' → logprob: -6.365584373474121

Token 116: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13021470606327057
    2. 'f' → logprob: -2.1302146911621094
    3. ']' → logprob: -6.630214691162109
    4. ' for' → logprob: -6.755214691162109
    5. '[' → logprob: -8.50521469116211
    6. 'd' → logprob: -9.00521469116211
    7. '[f' → logprob: -9.75521469116211
    8. '=' → logprob: -10.00521469116211
    9. '```' → logprob: -10.00521469116211
    10. '[i' → logprob: -10.25521469116211

Token 117: ' bit' (ID: 3546)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.831775426864624
    2. ' range' → logprob: -1.581775426864624
    3. 'for' → logprob: -1.956775426864624
    4. ' for' → logprob: -2.331775426864624
    5. 'enumer' → logprob: -3.456775426864624
    6. ' nested' → logprob: -3.706775426864624
    7. 'sum' → logprob: -4.331775665283203
    8. 'zip' → logprob: -4.581775665283203
    9. ' sum' → logprob: -4.956775665283203
    10. 'd' → logprob: -5.206775665283203

Token 118: 'wise' (ID: 7480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18008150160312653
    2. ')' → logprob: -3.180081605911255
    3. 'mask' → logprob: -3.680081605911255
    4. 'd' → logprob: -3.930081605911255
    5. '   ' → logprob: -4.555081367492676
    6. 'wise' → logprob: -4.805081367492676
    7. ' for' → logprob: -4.805081367492676
    8. 'm' → logprob: -5.180081367492676
    9. 'f' → logprob: -5.680081367492676
    10. ']' → logprob: -5.680081367492676

Token 119: ' operation' (ID: 9506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05018835514783859
    2. 'f' → logprob: -4.0501885414123535
    3. ' for' → logprob: -4.4251885414123535
    4. '[' → logprob: -5.3001885414123535
    5. '=' → logprob: -5.4251885414123535
    6. 's' → logprob: -5.4251885414123535
    7. ' =' → logprob: -6.1751885414123535
    8. '[
' → logprob: -6.8001885414123535
    9. 'd' → logprob: -7.3001885414123535
    10. ']' → logprob: -8.175188064575195

Token 120: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009415811859071255
    2. ' for' → logprob: -4.884415626525879
    3. ']' → logprob: -6.884415626525879
    4. 'f' → logprob: -8.009415626525879
    5. '[' → logprob: -9.509415626525879
    6. '=' → logprob: -9.634415626525879
    7. '
' → logprob: -10.009415626525879
    8. ':' → logprob: -10.259415626525879
    9. '   ' → logprob: -10.259415626525879
    10. ']=' → logprob: -10.259415626525879

Token 121: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008975337259471416
    2. 'f' → logprob: -4.758975505828857
    3. ' for' → logprob: -9.0089750289917
    4. '[' → logprob: -9.7589750289917
    5. '```' → logprob: -9.8839750289917
    6. '[
' → logprob: -10.1339750289917
    7. ']' → logprob: -10.6339750289917
    8. '[f' → logprob: -10.7589750289917
    9. '
' → logprob: -11.3839750289917
    10. '[(' → logprob: -11.6339750289917

Token 122: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.615639328956604
    2. 'i' → logprob: -0.865639328956604
    3. ' j' → logprob: -4.7406392097473145
    4. 'j' → logprob: -5.2406392097473145
    5. ' k' → logprob: -5.3656392097473145
    6. ' x' → logprob: -5.4906392097473145
    7. 'k' → logprob: -5.4906392097473145
    8. 'x' → logprob: -5.7406392097473145
    9. ' mask' → logprob: -7.2406392097473145
    10. '_i' → logprob: -7.3656392097473145

Token 123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2632676959037781
    2. 'in' → logprob: -1.5132677555084229
    3. ',' → logprob: -4.513267517089844
    4. ' ' → logprob: -8.763267517089844
    5. ' ,' → logprob: -9.763267517089844
    6. '_' → logprob: -11.013267517089844
    7. '	in' → logprob: -11.638267517089844
    8. ',_' → logprob: -11.638267517089844
    9. ')' → logprob: -12.138267517089844
    10. '0' → logprob: -12.263267517089844

Token 124: ' range' (ID: 3352)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.39689818024635315
    2. 'range' → logprob: -1.1468981504440308
    3. ' range' → logprob: -4.89689826965332
    4. ' Q' → logprob: -6.02189826965332
    5. '(Q' → logprob: -11.02189826965332
    6. 'N' → logprob: -11.77189826965332
    7. 're' → logprob: -12.02189826965332
    8. '(range' → logprob: -12.39689826965332
    9. '(' → logprob: -12.45939826965332
    10. 'Range' → logprob: -12.70939826965332

Token 125: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6343083381652832
    2. '(N' → logprob: -0.7593083381652832
    3. '(K' → logprob: -6.759308338165283
    4. '(Q' → logprob: -8.009307861328125
    5. '(len' → logprob: -8.759307861328125
    6. '(n' → logprob: -10.134307861328125
    7. '1' → logprob: -12.759307861328125
    8. '((' → logprob: -12.884307861328125
    9. '(M' → logprob: -13.134307861328125
    10. ' (' → logprob: -13.134307861328125

Token 126: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.015337411314249039
    2. '1' → logprob: -4.2653374671936035
    3. 'K' → logprob: -7.1403374671936035
    4. 'Q' → logprob: -8.890336990356445
    5. 'len' → logprob: -9.140336990356445
    6. ' N' → logprob: -10.015336990356445
    7. '(N' → logprob: -10.390336990356445
    8. '(' → logprob: -10.765336990356445
    9. 'bit' → logprob: -11.390336990356445
    10. '0' → logprob: -11.390336990356445

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001784418011084199
    2. ' ,' → logprob: -6.876784324645996
    3. ',N' → logprob: -7.751784324645996
    4. '(N' → logprob: -8.251784324645996
    5. '(' → logprob: -10.626784324645996
    6. ',Q' → logprob: -11.001784324645996
    7. ',K' → logprob: -11.876784324645996
    8. '(Q' → logprob: -12.376784324645996
    9. '   ' → logprob: -13.376784324645996
    10. ',len' → logprob: -13.751784324645996

Token 128: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0017465773271396756
    2. ' N' → logprob: -6.626746654510498
    3. 'K' → logprob: -7.876746654510498
    4. 'Q' → logprob: -11.00174617767334
    5. 'len' → logprob: -11.25174617767334
    6. ' ' → logprob: -12.25174617767334
    7. '   ' → logprob: -12.75174617767334
    8. ' K' → logprob: -14.00174617767334
    9. '  ' → logprob: -14.25174617767334
    10. '1' → logprob: -14.37674617767334

Token 129: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.143689826130867
    2. ' +' → logprob: -2.0186898708343506
    3. '):
' → logprob: -7.1436896324157715
    4. '):' → logprob: -8.64369010925293
    5. ',' → logprob: -10.26869010925293
    6. '+
' → logprob: -12.64369010925293
    7. '   ' → logprob: -13.51869010925293
    8. '
' → logprob: -13.64369010925293
    9. '```' → logprob: -13.64369010925293
    10. '1' → logprob: -13.89369010925293

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002445317804813385
    2. 'bit' → logprob: -9.250244140625
    3. '2' → logprob: -9.750244140625
    4. ' ' → logprob: -10.625244140625
    5. 'N' → logprob: -11.000244140625
    6. 'K' → logprob: -11.000244140625
    7. '+' → logprob: -11.250244140625
    8. 'i' → logprob: -11.625244140625
    9. '(' → logprob: -12.875244140625
    10. ')' → logprob: -13.875244140625

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15970125794410706
    2. 'bit' → logprob: -2.034701347351074
    3. 'N' → logprob: -4.659701347351074
    4. 'K' → logprob: -5.784701347351074
    5. '+' → logprob: -5.784701347351074
    6. ' bit' → logprob: -7.659701347351074
    7. '(bit' → logprob: -8.034701347351074
    8. '(' → logprob: -8.659701347351074
    9. 'i' → logprob: -9.784701347351074
    10. ' ' → logprob: -10.284701347351074

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23191562294960022
    2. '):
' → logprob: -1.6069155931472778
    3. ':' → logprob: -5.106915473937988
    4. ')' → logprob: -8.731915473937988
    5. ':
' → logprob: -9.231915473937988
    6. '   ' → logprob: -9.356915473937988
    7. '):
' → logprob: -10.481915473937988
    8. ',' → logprob: -10.481915473937988
    9. 'for' → logprob: -12.106915473937988
    10. ' ):' → logprob: -12.356915473937988

Token 133: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7323729395866394
    2. '   ' → logprob: -0.8573729395866394
    3. 'for' → logprob: -2.357372999191284
    4. ' ' → logprob: -9.232373237609863
    5. ' f' → logprob: -9.982373237609863
    6. '	for' → logprob: -9.982373237609863
    7. '   ' → logprob: -10.232373237609863
    8. ' j' → logprob: -11.357373237609863
    9. '    ' → logprob: -11.732373237609863
    10. 'f' → logprob: -11.857373237609863

Token 134: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00696022342890501
    2. 'f' → logprob: -5.881960391998291
    3. ' for' → logprob: -6.131960391998291
    4. '   ' → logprob: -7.006960391998291
    5. 'mask' → logprob: -7.131960391998291
    6. 'j' → logprob: -8.881959915161133
    7. 'bit' → logprob: -10.256959915161133
    8. ' ' → logprob: -11.131959915161133
    9. 'bits' → logprob: -11.756959915161133
    10. ' f' → logprob: -11.756959915161133

Token 135: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.43815165758132935
    2. 'mask' → logprob: -2.1881515979766846
    3. 'b' → logprob: -2.9381515979766846
    4. 'k' → logprob: -3.0631515979766846
    5. 's' → logprob: -3.0631515979766846
    6. 'x' → logprob: -3.3131515979766846
    7. 'bit' → logprob: -4.063151836395264
    8. 'S' → logprob: -4.563151836395264
    9. ' j' → logprob: -5.188151836395264
    10. 'subset' → logprob: -5.313151836395264

Token 136: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020570149645209312
    2. 'in' → logprob: -3.8955700397491455
    3. ',' → logprob: -11.520569801330566
    4. 'd' → logprob: -12.020569801330566
    5. ' ' → logprob: -13.020569801330566
    6. '   ' → logprob: -13.395569801330566
    7. 'range' → logprob: -13.645569801330566
    8. 'In' → logprob: -14.395569801330566
    9. 'to' → logprob: -14.520569801330566
    10. ')' → logprob: -14.645569801330566

Token 137: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.039505794644355774
    2. ' range' → logprob: -3.41450572013855
    3. 'Q' → logprob: -5.164505958557129
    4. ' Q' → logprob: -9.289505958557129
    5. 'bit' → logprob: -11.164505958557129
    6. '(range' → logprob: -11.789505958557129
    7. '(' → logprob: -12.664505958557129
    8. '(Q' → logprob: -12.914505958557129
    9. ' ' → logprob: -14.352005958557129
    10. '	range' → logprob: -14.789505958557129

Token 138: '(' (ID: 7)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.6907848715782166
    2. '(' → logprob: -0.9407848715782166
    3. '(Q' → logprob: -2.4407849311828613
    4. '(N' → logprob: -4.440784931182861
    5. '(K' → logprob: -5.440784931182861
    6. '(range' → logprob: -5.940784931182861
    7. '((' → logprob: -6.315784931182861
    8. '(i' → logprob: -8.315784454345703
    9. '(Bit' → logprob: -9.315784454345703
    10. 'range' → logprob: -9.315784454345703

Token 139: '1' (ID: 16)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.14091473817825317
    2. '1' → logprob: -2.1409146785736084
    3. 'N' → logprob: -5.5159149169921875
    4. '(' → logprob: -5.5159149169921875
    5. 'range' → logprob: -6.1409149169921875
    6. '(bit' → logprob: -6.7659149169921875
    7. 'i' → logprob: -6.8909149169921875
    8. 'K' → logprob: -7.0159149169921875
    9. ' bit' → logprob: -8.640914916992188
    10. '0' → logprob: -9.015914916992188

Token 140: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1370723694562912
    2. '(bit' → logprob: -2.1370723247528076
    3. '(N' → logprob: -5.137072563171387
    4. '(' → logprob: -6.387072563171387
    5. ' ,' → logprob: -6.887072563171387
    6. 'bit' → logprob: -7.262072563171387
    7. '(i' → logprob: -8.512072563171387
    8. ',N' → logprob: -9.137072563171387
    9. ' bit' → logprob: -9.262072563171387
    10. '(K' → logprob: -9.387072563171387

Token 141: ' i' (ID: 575)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.022070173174142838
    2. '(N' → logprob: -4.522070407867432
    3. 'K' → logprob: -5.397070407867432
    4. 'i' → logprob: -5.522070407867432
    5. '(i' → logprob: -6.522070407867432
    6. '(' → logprob: -7.772070407867432
    7. 'j' → logprob: -8.397069931030273
    8. '(K' → logprob: -8.647069931030273
    9. '(j' → logprob: -10.022069931030273
    10. ' N' → logprob: -10.397069931030273

Token 142: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10062306374311447
    2. '):
' → logprob: -2.35062313079834
    3. ' ):' → logprob: -8.47562313079834
    4. '):
' → logprob: -9.10062313079834
    5. '   ' → logprob: -10.35062313079834
    6. '       ' → logprob: -11.35062313079834
    7. ')' → logprob: -11.60062313079834
    8. ' ):
' → logprob: -11.85062313079834
    9. ',' → logprob: -11.97562313079834
    10. ')):' → logprob: -12.35062313079834

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005578791256994009
    2. ' f' → logprob: -5.505578994750977
    3. 'f' → logprob: -6.755578994750977
    4. ',' → logprob: -9.880578994750977
    5. '           ' → logprob: -9.880578994750977
    6. ' for' → logprob: -10.255578994750977
    7. 's' → logprob: -10.630578994750977
    8. '   ' → logprob: -10.630578994750977
    9. 'd' → logprob: -10.880578994750977
    10. ' if' → logprob: -10.880578994750977

Token 144: ' t' (ID: 260)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.005813010036945343
    2. 'if' → logprob: -6.005813121795654
    3. '       ' → logprob: -6.505813121795654
    4. ' f' → logprob: -7.255813121795654
    5. '   ' → logprob: -8.505812644958496
    6. 'x' → logprob: -8.630812644958496
    7. 'mask' → logprob: -8.755812644958496
    8. 'prev' → logprob: -9.005812644958496
    9. 'd' → logprob: -9.130812644958496
    10. '           ' → logprob: -9.880812644958496

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5789185762405396
    2. ' =' → logprob: -1.0789185762405396
    3. 'f' → logprob: -2.95391845703125
    4. ']' → logprob: -4.45391845703125
    5. '[i' → logprob: -4.45391845703125
    6. 's' → logprob: -5.82891845703125
    7. '[' → logprob: -5.82891845703125
    8. '[j' → logprob: -5.95391845703125
    9. '][' → logprob: -5.95391845703125
    10. ',' → logprob: -6.07891845703125

Token 146: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0403069257736206
    2. 'd' → logprob: -1.2903069257736206
    3. 'f' → logprob: -1.2903069257736206
    4. '(j' → logprob: -3.29030704498291
    5. '(d' → logprob: -4.41530704498291
    6. '(i' → logprob: -5.04030704498291
    7. '(f' → logprob: -5.04030704498291
    8. '0' → logprob: -5.16530704498291
    9. 'max' → logprob: -5.16530704498291
    10. '(' → logprob: -5.41530704498291

Token 147: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11037734150886536
    2. 'f' → logprob: -2.610377311706543
    3. 'd' → logprob: -4.485377311706543
    4. 'bit' → logprob: -4.610377311706543
    5. 'i' → logprob: -4.985377311706543
    6. '(j' → logprob: -6.860377311706543
    7. '1' → logprob: -7.485377311706543
    8. '(i' → logprob: -8.485377311706543
    9. ' j' → logprob: -8.610377311706543
    10. '(' → logprob: -8.860377311706543

Token 148: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.4812667667865753
    2. '&' → logprob: -1.106266736984253
    3. '^' → logprob: -3.606266736984253
    4. ' &' → logprob: -4.481266975402832
    5. '|' → logprob: -5.231266975402832
    6. ' ^' → logprob: -6.356266975402832
    7. '-' → logprob: -6.606266975402832
    8. ')' → logprob: -6.856266975402832
    9. ' >>' → logprob: -6.856266975402832
    10. '<<' → logprob: -7.106266975402832

Token 149: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16222406923770905
    2. '(i' → logprob: -1.9122240543365479
    3. '(N' → logprob: -6.912224292755127
    4. 'i' → logprob: -7.912224292755127
    5. '(' → logprob: -8.037223815917969
    6. '0' → logprob: -8.787223815917969
    7. ' (' → logprob: -9.787223815917969
    8. '(j' → logprob: -10.162223815917969
    9. '(K' → logprob: -10.787223815917969
    10. ' ' → logprob: -10.912223815917969

Token 150: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5915791988372803
    2. 'i' → logprob: -0.8415791988372803
    3. '1' → logprob: -4.216579437255859
    4. '0' → logprob: -7.716579437255859
    5. '(' → logprob: -8.21657943725586
    6. ' (' → logprob: -10.59157943725586
    7. '(N' → logprob: -11.59157943725586
    8. ' i' → logprob: -11.96657943725586
    9. ')' → logprob: -12.71657943725586
    10. 'N' → logprob: -13.09157943725586

Token 151: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25553998351097107
    2. '1' → logprob: -1.5055400133132935
    3. ' -' → logprob: -5.755539894104004
    4. ' ' → logprob: -8.130539894104004
    5. ')' → logprob: -9.255539894104004
    6. '2' → logprob: -11.380539894104004
    7. '0' → logprob: -11.380539894104004
    8. '   ' → logprob: -12.255539894104004
    9. '−' → logprob: -12.255539894104004
    10. '```' → logprob: -12.380539894104004

Token 152: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5928495486150496e-05
    2. ' ' → logprob: -11.250016212463379
    3. '2' → logprob: -13.125016212463379
    4. '   ' → logprob: -15.375016212463379
    5. '```' → logprob: -15.875016212463379
    6. ')' → logprob: -16.562515258789062
    7. 'i' → logprob: -17.125015258789062
    8. '0' → logprob: -17.250015258789062
    9. '
' → logprob: -17.312515258789062
    10. '' → logprob: -17.500015258789062

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.375006675720215
    3. '2' → logprob: -13.750006675720215
    4. ')' → logprob: -15.937506675720215
    5. '```' → logprob: -16.0000057220459
    6. '
' → logprob: -16.1250057220459
    7. 'i' → logprob: -16.6250057220459
    8. '   ' → logprob: -16.6250057220459
    9. '0' → logprob: -17.3125057220459
    10. '' → logprob: -17.4375057220459

Token 154: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5240418314933777
    2. ')' → logprob: -0.8990418314933777
    3. '1' → logprob: -7.524041652679443
    4. ')&' → logprob: -8.399042129516602
    5. '&' → logprob: -9.399042129516602
    6. ' )' → logprob: -10.899042129516602
    7. ' ))' → logprob: -11.649042129516602
    8. ' ' → logprob: -12.149042129516602
    9. '```' → logprob: -12.399042129516602
    10. '0' → logprob: -12.649042129516602

Token 155: ' &' (ID: 827)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.47036775946617126
    2. '&' → logprob: -1.7203677892684937
    3. '+' → logprob: -2.345367670059204
    4. '|' → logprob: -3.095367670059204
    5. ' ^' → logprob: -3.845367670059204
    6. '       ' → logprob: -4.095367908477783
    7. ' &' → logprob: -5.345367908477783
    8. '
' → logprob: -5.845367908477783
    9. ')' → logprob: -6.095367908477783
    10. ' +' → logprob: -6.345367908477783

Token 156: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. 'bit' → logprob: -16.500123977661133
    4. '0' → logprob: -17.250123977661133
    5. '   ' → logprob: -17.750123977661133
    6. '(' → logprob: -17.875123977661133
    7. '01' → logprob: -18.250123977661133
    8. '`' → logprob: -18.750123977661133
    9. '
' → logprob: -18.750123977661133
    10. 'j' → logprob: -18.875123977661133

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '0' → logprob: -16.125003814697266
    4. 'bit' → logprob: -17.000003814697266
    5. '(' → logprob: -17.625003814697266
    6. '3' → logprob: -18.000003814697266
    7. '
' → logprob: -18.125003814697266
    8. '`' → logprob: -18.375003814697266
    9. '01' → logprob: -18.500003814697266
    10. '' → logprob: -18.750003814697266

Token 158: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012066547758877277
    2. '
' → logprob: -4.76206636428833
    3. 'f' → logprob: -6.63706636428833
    4. ')' → logprob: -7.38706636428833
    5. 'd' → logprob: -7.38706636428833
    6. 's' → logprob: -8.637066841125488
    7. ',' → logprob: -8.762066841125488
    8. '<|end|>' → logprob: -9.387066841125488
    9. ')
' → logprob: -9.512066841125488
    10. '0' → logprob: -9.762066841125488

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01612762361764908
    2. 'f' → logprob: -4.891127586364746
    3. ' f' → logprob: -4.891127586364746
    4. '           ' → logprob: -8.141127586364746
    5. 'd' → logprob: -8.641127586364746
    6. '
' → logprob: -9.641127586364746
    7. '        
' → logprob: -9.641127586364746
    8. '<|end|>' → logprob: -9.766127586364746
    9. '=' → logprob: -10.016127586364746
    10. ' if' → logprob: -10.016127586364746

Token 160: ' r' (ID: 428)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06381495296955109
    2. ' f' → logprob: -2.813814878463745
    3. '       ' → logprob: -7.313815116882324
    4. 'for' → logprob: -7.813815116882324
    5. 'if' → logprob: -8.188815116882324
    6. 'd' → logprob: -9.063815116882324
    7. '0' → logprob: -9.063815116882324
    8. ' for' → logprob: -10.063815116882324
    9. ' if' → logprob: -10.313815116882324
    10. ' d' → logprob: -10.563815116882324

Token 161: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.45323899388313293
    2. ' =' → logprob: -1.3282389640808105
    3. '=' → logprob: -3.0782389640808105
    4. '[' → logprob: -4.0782389640808105
    5. ' ' → logprob: -4.3282389640808105
    6. 'ight' → logprob: -5.7032389640808105
    7. '=i' → logprob: -5.9532389640808105
    8. '=[' → logprob: -6.0782389640808105
    9. 'eturn' → logprob: -6.4532389640808105
    10. '   ' → logprob: -6.4532389640808105

Token 162: ' next' (ID: 2613)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.26428768038749695
    2. ' f' → logprob: -1.7642877101898193
    3. 'd' → logprob: -3.5142877101898193
    4. ' d' → logprob: -4.13928747177124
    5. 'j' → logprob: -5.76428747177124
    6. '(f' → logprob: -6.51428747177124
    7. ' (' → logprob: -6.51428747177124
    8. '0' → logprob: -6.63928747177124
    9. ' j' → logprob: -6.76428747177124
    10. 'bit' → logprob: -7.01428747177124

Token 163: '((' (ID: 2054)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.5538264513015747
    2. '(x' → logprob: -1.5538264513015747
    3. '((' → logprob: -1.8038264513015747
    4. '(' → logprob: -4.678826332092285
    5. '(f' → logprob: -4.678826332092285
    6. '(i' → logprob: -4.928826332092285
    7. '(
' → logprob: -5.553826332092285
    8. '(iter' → logprob: -5.928826332092285
    9. 'k' → logprob: -6.053826332092285
    10. '(p' → logprob: -6.303826332092285

Token 164: 'r' (ID: 81)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3484058082103729
    2. 'k' → logprob: -1.3484058380126953
    3. 'idx' → logprob: -4.473405838012695
    4. '(x' → logprob: -4.973405838012695
    5. '(k' → logprob: -5.723405838012695
    6. 'm' → logprob: -5.848405838012695
    7. 'l' → logprob: -5.973405838012695
    8. 'p' → logprob: -6.848405838012695
    9. 'y' → logprob: -7.098405838012695
    10. 'q' → logprob: -7.473405838012695

Token 165: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39600929617881775
    2. 'k' → logprob: -2.2710092067718506
    3. 'x' → logprob: -2.7710092067718506
    4. ' for' → logprob: -3.0210092067718506
    5. '(x' → logprob: -3.1460092067718506
    6. '(k' → logprob: -3.3960092067718506
    7. '(r' → logprob: -4.02100944519043
    8. 'r' → logprob: -5.02100944519043
    9. 'idx' → logprob: -6.27100944519043
    10. '(m' → logprob: -6.89600944519043

Token 166: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18292227387428284
    2. 'range' → logprob: -1.9329222440719604
    3. 'Q' → logprob: -4.68292236328125
    4. ' range' → logprob: -4.80792236328125
    5. ' r' → logprob: -5.80792236328125
    6. 'k' → logprob: -6.93292236328125
    7. 'x' → logprob: -8.30792236328125
    8. 'q' → logprob: -8.80792236328125
    9. ' Q' → logprob: -9.05792236328125
    10. 'f' → logprob: -9.30792236328125

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015293962322175503
    2. 'in' → logprob: -4.765294075012207
    3. ',' → logprob: -5.015294075012207
    4. 'range' → logprob: -11.890294075012207
    5. ' ' → logprob: -12.140294075012207
    6. ',r' → logprob: -12.765294075012207
    7. ' ,' → logprob: -13.890294075012207
    8. 'i' → logprob: -14.265294075012207
    9. ')' → logprob: -14.515294075012207
    10. 'r' → logprob: -15.015294075012207

Token 168: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.052512913942337036
    2. ' range' → logprob: -3.1775128841400146
    3. 'Q' → logprob: -4.677513122558594
    4. ' Q' → logprob: -9.427513122558594
    5. 're' → logprob: -10.427513122558594
    6. '(range' → logprob: -10.677513122558594
    7. 'r' → logprob: -11.802513122558594
    8. 'f' → logprob: -12.427513122558594
    9. '(' → logprob: -12.927513122558594
    10. 'bit' → logprob: -13.177513122558594

Token 169: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.04706810414791107
    2. 'i' → logprob: -4.172068119049072
    3. '(K' → logprob: -4.172068119049072
    4. '(N' → logprob: -4.797068119049072
    5. '(' → logprob: -5.672068119049072
    6. 'K' → logprob: -6.172068119049072
    7. 'N' → logprob: -8.047067642211914
    8. '1' → logprob: -9.297067642211914
    9. '(t' → logprob: -9.297067642211914
    10. '           ' → logprob: -9.297067642211914

Token 170: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5125076174736023
    2. ')' → logprob: -1.637507677078247
    3. '-' → logprob: -2.262507677078247
    4. 'if' → logprob: -2.762507677078247
    5. ' -' → logprob: -3.637507677078247
    6. '           ' → logprob: -5.762507438659668
    7. ' ' → logprob: -6.262507438659668
    8. '+' → logprob: -6.387507438659668
    9. ',' → logprob: -6.512507438659668
    10. '          ' → logprob: -6.637507438659668

Token 171: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.014183484017848969
    2. 'if' → logprob: -4.264183521270752
    3. '           ' → logprob: -11.139183044433594
    4. '       ' → logprob: -13.264183044433594
    5. '        ' → logprob: -14.264183044433594
    6. ')' → logprob: -14.264183044433594
    7. ' ' → logprob: -14.389183044433594
    8. '
' → logprob: -14.764183044433594
    9. '            ' → logprob: -14.889183044433594
    10. '          ' → logprob: -15.264183044433594

Token 172: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.0397521257400513
    2. ' not' → logprob: -1.6647521257400513
    3. '(d' → logprob: -2.1647520065307617
    4. '(t' → logprob: -2.4147520065307617
    5. ' (' → logprob: -2.5397520065307617
    6. 't' → logprob: -3.2897520065307617
    7. ' ((' → logprob: -3.4147520065307617
    8. 'not' → logprob: -3.4147520065307617
    9. '(((' → logprob: -4.289752006530762
    10. '(f' → logprob: -4.539752006530762

Token 173: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.020764581859111786
    2. '(j' → logprob: -5.020764350891113
    3. 'f' → logprob: -5.270764350891113
    4. 'bit' → logprob: -5.770764350891113
    5. 'd' → logprob: -6.145764350891113
    6. 't' → logprob: -7.020764350891113
    7. '((' → logprob: -7.645764350891113
    8. 'Q' → logprob: -7.895764350891113
    9. ' j' → logprob: -8.020764350891113
    10. 'not' → logprob: -8.270764350891113

Token 174: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.006472475361078978
    2. '&' → logprob: -5.881472587585449
    3. ' &' → logprob: -6.131472587585449
    4. ' >>' → logprob: -6.756472587585449
    5. '>>(' → logprob: -8.50647258758545
    6. ')' → logprob: -9.88147258758545
    7. '>>>' → logprob: -11.50647258758545
    8. '&r' → logprob: -11.50647258758545
    9. '&(' → logprob: -11.75647258758545
    10. '&gt' → logprob: -11.88147258758545

Token 175: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0011852304451167583
    2. 'i' → logprob: -7.626185417175293
    3. ' r' → logprob: -7.751185417175293
    4. '(r' → logprob: -9.251185417175293
    5. '(i' → logprob: -9.501185417175293
    6. '(N' → logprob: -10.751185417175293
    7. '(' → logprob: -10.876185417175293
    8. 'Q' → logprob: -11.376185417175293
    9. ' ' → logprob: -11.376185417175293
    10. '(Q' → logprob: -11.751185417175293

Token 176: 'i' (ID: 72)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0017896592617034912
    2. 'i' → logprob: -6.501789569854736
    3. '(i' → logprob: -9.376790046691895
    4. ' r' → logprob: -9.626790046691895
    5. '(r' → logprob: -9.876790046691895
    6. 'Q' → logprob: -10.501790046691895
    7. ')' → logprob: -11.126790046691895
    8. '(' → logprob: -11.126790046691895
    9. '(Q' → logprob: -11.501790046691895
    10. ' ' → logprob: -12.376790046691895

Token 177: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7191251516342163
    2. 'r' → logprob: -0.7191251516342163
    3. ')' → logprob: -4.094125270843506
    4. '1' → logprob: -5.469125270843506
    5. ' -' → logprob: -5.844125270843506
    6. '   ' → logprob: -7.219125270843506
    7. ' ' → logprob: -8.094124794006348
    8. '-r' → logprob: -8.094124794006348
    9. '
' → logprob: -8.344124794006348
    10. ' r' → logprob: -9.844124794006348

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2832416892051697
    2. 'r' → logprob: -1.4082417488098145
    3. '2' → logprob: -6.2832417488098145
    4. ' r' → logprob: -9.283241271972656
    5. ' ' → logprob: -10.283241271972656
    6. '   ' → logprob: -10.908241271972656
    7. ')' → logprob: -11.033241271972656
    8. 't' → logprob: -11.033241271972656
    9. '0' → logprob: -11.408241271972656
    10. '
' → logprob: -11.783241271972656

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38749250769615173
    2. 'r' → logprob: -1.1374925374984741
    3. '0' → logprob: -8.512492179870605
    4. '2' → logprob: -8.762492179870605
    5. 'i' → logprob: -9.637492179870605
    6. ' r' → logprob: -10.387492179870605
    7. 't' → logprob: -10.387492179870605
    8. ' ' → logprob: -10.637492179870605
    9. '
' → logprob: -10.637492179870605
    10. '(r' → logprob: -10.762492179870605

Token 180: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021642940118908882
    2. '-' → logprob: -4.021643161773682
    3. '-r' → logprob: -6.396643161773682
    4. ')&' → logprob: -7.021643161773682
    5. '-i' → logprob: -7.771643161773682
    6. ' -' → logprob: -8.521642684936523
    7. ' )' → logprob: -9.021642684936523
    8. '+' → logprob: -10.396642684936523
    9. 'r' → logprob: -10.396642684936523
    10. '))' → logprob: -10.521642684936523

Token 181: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002956591488327831
    2. ' r' → logprob: -8.500295639038086
    3. '1' → logprob: -9.750295639038086
    4. '(' → logprob: -11.000295639038086
    5. '(r' → logprob: -11.375295639038086
    6. 'i' → logprob: -13.250295639038086
    7. ')' → logprob: -13.875295639038086
    8. ' ' → logprob: -14.500295639038086
    9. ' (' → logprob: -14.625295639038086
    10. '```' → logprob: -15.250295639038086

Token 182: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002502535644453019
    2. ')&' → logprob: -8.875249862670898
    3. '))' → logprob: -9.625249862670898
    4. ' )' → logprob: -10.250249862670898
    5. '```' → logprob: -13.875249862670898
    6. ')))' → logprob: -14.000249862670898
    7. ')>>' → logprob: -14.125249862670898
    8. '')' → logprob: -14.250249862670898
    9. '`)' → logprob: -14.250249862670898
    10. '+' → logprob: -14.375249862670898

Token 183: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017432784661650658
    2. ')&' → logprob: -4.142432689666748
    3. ' )' → logprob: -6.892432689666748
    4. '&' → logprob: -8.517433166503906
    5. ' &' → logprob: -9.267433166503906
    6. '>>' → logprob: -10.267433166503906
    7. ')>>' → logprob: -10.892433166503906
    8. ')
' → logprob: -12.017433166503906
    9. '   ' → logprob: -12.142433166503906
    10. '))' → logprob: -12.829933166503906

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003267314750701189
    2. ' ' → logprob: -5.753267288208008
    3. 'r' → logprob: -10.003267288208008
    4. 't' → logprob: -10.753267288208008
    5. '7' → logprob: -12.565767288208008
    6. '0' → logprob: -12.690767288208008
    7. '(' → logprob: -12.753267288208008
    8. '3' → logprob: -13.440767288208008
    9. ' r' → logprob: -13.628267288208008
    10. ' (' → logprob: -13.628267288208008

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019662656995933503
    2. ' ' → logprob: -9.00019645690918
    3. 'r' → logprob: -10.50019645690918
    4. 't' → logprob: -10.62519645690918
    5. '(' → logprob: -12.12519645690918
    6. '7' → logprob: -12.62519645690918
    7. '31' → logprob: -13.25019645690918
    8. '3' → logprob: -13.37519645690918
    9. '0' → logprob: -13.37519645690918
    10. '
' → logprob: -13.81269645690918

Token 186: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02773909643292427
    2. ')==' → logprob: -3.6527390480041504
    3. '))' → logprob: -7.52773904800415
    4. ' )' → logprob: -7.77773904800415
    5. '())' → logprob: -8.652739524841309
    6. '==' → logprob: -9.527739524841309
    7. ')!=' → logprob: -9.777739524841309
    8. ')>>' → logprob: -10.527739524841309
    9. ')))' → logprob: -11.027739524841309
    10. ' ==' → logprob: -11.152739524841309

Token 187: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5260989665985107
    2. ')' → logprob: -1.6510989665985107
    3. ')==' → logprob: -1.6510989665985107
    4. ' ==' → logprob: -4.27609920501709
    5. '),' → logprob: -5.40109920501709
    6. 'and' → logprob: -6.15109920501709
    7. '!=' → logprob: -6.77609920501709
    8. ' and' → logprob: -6.77609920501709
    9. '):' → logprob: -7.02609920501709
    10. ')!=' → logprob: -7.15109920501709

Token 188: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08346566557884216
    2. '((' → logprob: -2.833465576171875
    3. ' t' → logprob: -4.583465576171875
    4. '0' → logprob: -5.583465576171875
    5. ' ((' → logprob: -5.583465576171875
    6. '(t' → logprob: -5.958465576171875
    7. ' (' → logprob: -8.833465576171875
    8. ' ' → logprob: -9.083465576171875
    9. '(' → logprob: -9.208465576171875
    10. '(((' → logprob: -9.208465576171875

Token 189: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0010360259329900146
    2. ' ),' → logprob: -8.376035690307617
    3. '))' → logprob: -8.501035690307617
    4. ')),' → logprob: -8.626035690307617
    5. '):' → logprob: -9.001035690307617
    6. ':' → logprob: -9.126035690307617
    7. '       ' → logprob: -9.501035690307617
    8. ',' → logprob: -10.126035690307617
    9. ')' → logprob: -10.126035690307617
    10. '           ' → logprob: -11.626035690307617

Token 190: ' i' (ID: 575)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.7199161648750305
    2. ' None' → logprob: -0.8449161648750305
    3. 'i' → logprob: -3.5949161052703857
    4. 'r' → logprob: -3.5949161052703857
    5. ' i' → logprob: -4.094916343688965
    6. ' r' → logprob: -4.719916343688965
    7. '0' → logprob: -6.844916343688965
    8. '-' → logprob: -7.594916343688965
    9. ' ' → logprob: -7.719916343688965
    10. ' -' → logprob: -7.844916343688965

Token 191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029104314744472504
    2. ')
' → logprob: -6.127910614013672
    3. '       ' → logprob: -7.377910614013672
    4. '):' → logprob: -11.002910614013672
    5. ' )' → logprob: -11.252910614013672
    6. '   ' → logprob: -11.377910614013672
    7. '-' → logprob: -11.502910614013672
    8. '+' → logprob: -11.752910614013672
    9. '))' → logprob: -12.127910614013672
    10. ')+' → logprob: -12.252910614013672

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21631298959255219
    2. 'f' → logprob: -2.341312885284424
    3. 'for' → logprob: -3.466312885284424
    4. ' for' → logprob: -4.216312885284424
    5. ')' → logprob: -4.216312885284424
    6. ' if' → logprob: -4.591312885284424
    7. 'if' → logprob: -5.091312885284424
    8. '<|end|>' → logprob: -5.216312885284424
    9. '           ' → logprob: -5.341312885284424
    10. ' f' → logprob: -5.466312885284424

Token 193: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.45339512825012207
    2. '       ' → logprob: -1.203395128250122
    3. 'if' → logprob: -3.703395128250122
    4. ' f' → logprob: -3.828395128250122
    5. ' if' → logprob: -4.828394889831543
    6. 'for' → logprob: -5.078394889831543
    7. ' for' → logprob: -6.703394889831543
    8. '           ' → logprob: -7.328394889831543
    9. 's' → logprob: -7.453394889831543
    10. 'd' → logprob: -8.203394889831543

Token 194: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. '[I' → logprob: -13.000006675720215
    3. '[' → logprob: -13.625006675720215
    4. '[j' → logprob: -13.875006675720215
    5. '][' → logprob: -13.875006675720215
    6. '```' → logprob: -15.500006675720215
    7. 'i' → logprob: -15.875006675720215
    8. ' [' → logprob: -16.1250057220459
    9. ')[' → logprob: -16.3750057220459
    10. '[
' → logprob: -16.3750057220459

Token 195: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004251727368682623
    2. '[j' → logprob: -5.629251956939697
    3. ']' → logprob: -8.004251480102539
    4. '[i' → logprob: -8.254251480102539
    5. ' ][' → logprob: -10.254251480102539
    6. '[' → logprob: -12.129251480102539
    7. '   ' → logprob: -12.754251480102539
    8. ')[' → logprob: -13.254251480102539
    9. ']=' → logprob: -13.504251480102539
    10. '[f' → logprob: -13.879251480102539

Token 196: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.692145012086257e-05
    2. ' j' → logprob: -10.125046730041504
    3. '   ' → logprob: -12.875046730041504
    4. '[j' → logprob: -13.625046730041504
    5. ']' → logprob: -13.875046730041504
    6. ' ' → logprob: -14.500046730041504
    7. 'bit' → logprob: -14.875046730041504
    8. '(j' → logprob: -15.500046730041504
    9. 'r' → logprob: -16.00004768371582
    10. '
' → logprob: -16.12504768371582

Token 197: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01745433732867241
    2. ']=' → logprob: -4.517454147338867
    3. '=' → logprob: -5.392454147338867
    4. ']+=' → logprob: -6.392454147338867
    5. '|' → logprob: -10.267454147338867
    6. ' ]' → logprob: -10.392454147338867
    7. '[' → logprob: -10.517454147338867
    8. '[j' → logprob: -11.017454147338867
    9. '^' → logprob: -11.142454147338867
    10. ' =' → logprob: -11.267454147338867

Token 198: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013327636756002903
    2. ' =' → logprob: -4.388327598571777
    3. '+=' → logprob: -7.263327598571777
    4. ' +=' → logprob: -9.388327598571777
    5. ' |=' → logprob: -11.388327598571777
    6. '|' → logprob: -11.388327598571777
    7. ' ^=' → logprob: -12.138327598571777
    8. '^' → logprob: -13.388327598571777
    9. '[' → logprob: -14.138327598571777
    10. ']' → logprob: -14.388327598571777

Token 199: ' r' (ID: 428)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.433413028717041
    2. 'max' → logprob: -1.183413028717041
    3. 'sum' → logprob: -4.433413028717041
    4. '(f' → logprob: -4.558413028717041
    5. 'min' → logprob: -5.433413028717041
    6. 'd' → logprob: -5.558413028717041
    7. '(max' → logprob: -6.058413028717041
    8. ' max' → logprob: -6.683413028717041
    9. '(i' → logprob: -6.683413028717041
    10. ' f' → logprob: -6.808413028717041

Token 200: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0794239044189453
    2. '+' → logprob: -1.2044239044189453
    3. '<|end|>' → logprob: -2.4544239044189453
    4. ')' → logprob: -2.8294239044189453
    5. '#' → logprob: -3.4544239044189453
    6. 'print' → logprob: -3.4544239044189453
    7. ']' → logprob: -3.5794239044189453
    8. ' for' → logprob: -4.079423904418945
    9. '[' → logprob: -4.204423904418945
    10. '   ' → logprob: -4.454423904418945

Token 201: 'I' (ID: 40)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4314083158969879
    2. '<|end|>' → logprob: -1.9314082860946655
    3. '#' → logprob: -2.556408405303955
    4. ')' → logprob: -2.681408405303955
    5. 'f' → logprob: -4.431408405303955
    6. 'print' → logprob: -4.681408405303955
    7. ']' → logprob: -4.806408405303955
    8. '[' → logprob: -5.306408405303955
    9. '```' → logprob: -5.306408405303955
    10. '
' → logprob: -5.931408405303955

Token 202: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.13737301528453827
    2. 'n' → logprob: -3.5123729705810547
    3. 'nd' → logprob: -3.6373729705810547
    4. '[' → logprob: -3.6373729705810547
    5. '=' → logprob: -4.387372970581055
    6. 's' → logprob: -5.012372970581055
    7. ' =' → logprob: -5.387372970581055
    8. 'F' → logprob: -5.762372970581055
    9. 't' → logprob: -5.762372970581055
    10. '[n' → logprob: -6.137372970581055

Token 203: ' J' (ID: 643)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6249610781669617
    2. ' [' → logprob: -1.4999611377716064
    3. ' ' → logprob: -2.7499611377716064
    4. '[' → logprob: -2.9999611377716064
    5. ' bit' → logprob: -3.3749611377716064
    6. ' K' → logprob: -3.8749611377716064
    7. ' N' → logprob: -4.374960899353027
    8. ' range' → logprob: -4.624960899353027
    9. 'bit' → logprob: -4.624960899353027
    10. '1' → logprob: -4.999960899353027

Token 204: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3087526261806488
    2. '=' → logprob: -2.5587525367736816
    3. '+' → logprob: -3.3087525367736816
    4. '[I' → logprob: -3.4337525367736816
    5. '0' → logprob: -3.5587525367736816
    6. ',' → logprob: -3.8087525367736816
    7. ' =' → logprob: -4.058752536773682
    8. '[i' → logprob: -4.433752536773682
    9. '_' → logprob: -4.558752536773682
    10. 'I' → logprob: -5.183752536773682

Token 205: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034507866948843
    2. ' ' → logprob: -3.5345077514648438
    3. 'K' → logprob: -6.159507751464844
    4. ' K' → logprob: -7.034507751464844
    5. 'N' → logprob: -7.284507751464844
    6. '1' → logprob: -7.659507751464844
    7. 'bit' → logprob: -8.284507751464844
    8. ' N' → logprob: -8.909507751464844
    9. ' bit' → logprob: -9.159507751464844
    10. 'Q' → logprob: -11.159507751464844

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013713262043893337
    2. 'K' → logprob: -4.513713359832764
    3. 'N' → logprob: -6.888713359832764
    4. 'bit' → logprob: -7.763713359832764
    5. ' ' → logprob: -7.763713359832764
    6. '1' → logprob: -8.138712882995605
    7. 'Q' → logprob: -9.138712882995605
    8. ' K' → logprob: -9.638712882995605
    9. 'i' → logprob: -9.763712882995605
    10. '-' → logprob: -10.013712882995605

Token 207: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17090794444084167
    2. ' i' → logprob: -2.545907974243164
    3. ' _' → logprob: -2.920907974243164
    4. 'i' → logprob: -3.920907974243164
    5. ' range' → logprob: -6.420907974243164
    6. '_i' → logprob: -7.045907974243164
    7. ' K' → logprob: -7.295907974243164
    8. ' in' → logprob: -7.420907974243164
    9. ' k' → logprob: -7.795907974243164
    10. 'k' → logprob: -8.420907974243164

Token 210: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3896506726741791
    2. 'in' → logprob: -1.1396507024765015
    3. ',' → logprob: -6.014650821685791
    4. ' ' → logprob: -8.639650344848633
    5. '1' → logprob: -9.514650344848633
    6. 'range' → logprob: -10.264650344848633
    7. ' ,' → logprob: -11.139650344848633
    8. '0' → logprob: -12.014650344848633
    9. '+' → logprob: -12.264650344848633
    10. '_' → logprob: -12.639650344848633

Token 211: ' Q' (ID: 1486)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20151196420192719
    2. ' range' → logprob: -1.7015119791030884
    3. '_' → logprob: -10.576512336730957
    4. '1' → logprob: -11.326512336730957
    5. 'Q' → logprob: -11.451512336730957
    6. 'I' → logprob: -11.576512336730957
    7. 'in' → logprob: -11.826512336730957
    8. ' ' → logprob: -12.076512336730957
    9. ' in' → logprob: -12.076512336730957
    10. 'N' → logprob: -12.201512336730957

Token 212: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5557259917259216
    2. ',' → logprob: -0.9307259917259216
    3. ':
' → logprob: -3.6807260513305664
    4. ' in' → logprob: -5.555726051330566
    5. 'in' → logprob: -7.055726051330566
    6. '   ' → logprob: -7.180726051330566
    7. '+' → logprob: -7.930726051330566
    8. ',
' → logprob: -8.055726051330566
    9. ' ,' → logprob: -8.305726051330566
    10. ' :' → logprob: -9.555726051330566

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10619137436151505
    2. ' for' → logprob: -2.356191396713257
    3. 'for' → logprob: -5.731191158294678
    4. ' if' → logprob: -6.606191158294678
    5. ':' → logprob: -7.606191158294678
    6. '       ' → logprob: -8.481191635131836
    7. ' ' → logprob: -8.856191635131836
    8. '<|end|>' → logprob: -9.856191635131836
    9. ' range' → logprob: -10.106191635131836
    10. '    
' → logprob: -10.231191635131836

Token 214: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12455388158559799
    2. 'for' (adapté à ' for') → logprob: -2.749553918838501
    3. '   ' → logprob: -2.999553918838501
    4. ' j' → logprob: -6.124553680419922
    5. ' J' → logprob: -7.624553680419922
    6. 'J' → logprob: -9.124553680419922
    7. ' ' → logprob: -9.499553680419922
    8. 'j' → logprob: -9.499553680419922
    9. '    ' → logprob: -9.499553680419922
    10. ' if' → logprob: -9.874553680419922

Token 215: ' k' (ID: 372)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1005479246377945
    2. ' j' → logprob: -2.350548028945923
    3. 'J' → logprob: -8.350547790527344
    4. ' J' → logprob: -10.475547790527344
    5. '   ' → logprob: -10.725547790527344
    6. ' bit' → logprob: -11.475547790527344
    7. 'bit' → logprob: -11.600547790527344
    8. ' ' → logprob: -11.850547790527344
    9. '_j' → logprob: -12.350547790527344
    10. 'range' → logprob: -12.350547790527344

Token 216: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07902847975492477
    2. 'in' → logprob: -2.579028367996216
    3. '   ' → logprob: -9.454028129577637
    4. ' ' → logprob: -10.204028129577637
    5. '    ' → logprob: -12.079028129577637
    6. '	in' → logprob: -12.579028129577637
    7. ',' → logprob: -12.954028129577637
    8. '  ' → logprob: -13.079028129577637
    9. '=' → logprob: -13.579028129577637
    10. '0' → logprob: -13.704028129577637

Token 217: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3625040650367737
    2. 'Q' → logprob: -1.487504005432129
    3. ' range' → logprob: -2.612504005432129
    4. ' Q' → logprob: -5.487504005432129
    5. 'K' → logprob: -7.862504005432129
    6. 'bit' → logprob: -9.612504005432129
    7. ' ' → logprob: -10.237504005432129
    8. 'J' → logprob: -10.362504005432129
    9. '   ' → logprob: -11.237504005432129
    10. '(range' → logprob: -11.237504005432129

Token 218: '(i' (ID: 3649)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.22653789818286896
    2. '(' → logprob: -2.1015379428863525
    3. '(i' → logprob: -3.2265379428863525
    4. '(N' → logprob: -3.4765379428863525
    5. '(bit' → logprob: -5.101537704467773
    6. '(k' → logprob: -6.476537704467773
    7. 'K' → logprob: -7.101537704467773
    8. '1' → logprob: -7.101537704467773
    9. '(I' → logprob: -8.101537704467773
    10. 'bit' → logprob: -9.601537704467773

Token 219: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0888480693101883
    2. ' +' → logprob: -2.588848114013672
    3. '):
' → logprob: -5.213848114013672
    4. '):' → logprob: -5.713848114013672
    5. '   ' → logprob: -7.463848114013672
    6. ',' → logprob: -7.588848114013672
    7. '       ' → logprob: -10.463848114013672
    8. '-' → logprob: -11.088848114013672
    9. '    ' → logprob: -11.963848114013672
    10. '+i' → logprob: -12.088848114013672

Token 220: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032021927181631327
    2. ' ' → logprob: -5.753201961517334
    3. '2' → logprob: -11.003202438354492
    4. ')' → logprob: -13.378202438354492
    5. '   ' → logprob: -13.690702438354492
    6. '(i' → logprob: -14.315702438354492
    7. ' i' → logprob: -14.440702438354492
    8. 'i' → logprob: -14.503202438354492
    9. '
' → logprob: -14.690702438354492
    10. '(' → logprob: -14.940702438354492

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010306637705070898
    2. ' ' → logprob: -9.375102996826172
    3. 'K' → logprob: -12.000102996826172
    4. 'i' → logprob: -12.625102996826172
    5. 'k' → logprob: -13.000102996826172
    6. '2' → logprob: -13.500102996826172
    7. '(i' → logprob: -13.750102996826172
    8. 'N' → logprob: -14.375102996826172
    9. '(' → logprob: -14.500102996826172
    10. '(N' → logprob: -14.812602996826172

Token 222: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3927461802959442
    2. '):' → logprob: -1.1427462100982666
    3. '   ' → logprob: -5.3927459716796875
    4. ':' → logprob: -7.1427459716796875
    5. '       ' → logprob: -8.142745971679688
    6. ',' → logprob: -9.142745971679688
    7. ':
' → logprob: -10.267745971679688
    8. '):
' → logprob: -10.642745971679688
    9. '():
' → logprob: -10.892745971679688
    10. ' ' → logprob: -12.017745971679688

Token 223: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4895213544368744
    2. 'i' → logprob: -1.1145213842391968
    3. 'K' → logprob: -3.8645212650299072
    4. ' N' → logprob: -4.114521503448486
    5. ' i' → logprob: -4.614521503448486
    6. 'min' → logprob: -5.114521503448486
    7. 'bit' → logprob: -6.489521503448486
    8. ' min' → logprob: -6.864521503448486
    9. ' K' → logprob: -7.239521503448486
    10. '1' → logprob: -7.489521503448486

Token 224: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759450793266296
    2. ' +' → logprob: -0.8259450793266296
    3. ' +
' → logprob: -13.700944900512695
    4. '+
' → logprob: -13.825944900512695
    5. '
' → logprob: -14.450944900512695
    6. '1' → logprob: -14.575944900512695
    7. '):
' → logprob: -14.700944900512695
    8. '()+' → logprob: -14.700944900512695
    9. ' ' → logprob: -14.950944900512695
    10. '```' → logprob: -15.200944900512695

Token 225: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025275684311054647
    2. ' ' → logprob: -9.000252723693848
    3. '2' → logprob: -9.125252723693848
    4. 'bit' → logprob: -11.375252723693848
    5. ' bit' → logprob: -13.000252723693848
    6. 'N' → logprob: -13.250252723693848
    7. 'K' → logprob: -14.062752723693848
    8. 'i' → logprob: -14.500252723693848
    9. '```' → logprob: -14.687752723693848
    10. '
' → logprob: -14.875252723693848

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.3822154111694545e-05
    2. ' ' → logprob: -10.375043869018555
    3. '2' → logprob: -11.500043869018555
    4. 'K' → logprob: -14.750043869018555
    5. 'N' → logprob: -15.062543869018555
    6. 'bit' → logprob: -15.187543869018555
    7. 'Q' → logprob: -15.312543869018555
    8. 'i' → logprob: -15.437543869018555
    9. '```' → logprob: -15.562543869018555
    10. '3' → logprob: -16.312543869018555

Token 227: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.782569408416748
    2. ':' → logprob: -0.907569408416748
    3. ':
' → logprob: -2.282569408416748
    4. '):' → logprob: -3.532569408416748
    5. '+' → logprob: -5.157569408416748
    6. '():
' → logprob: -7.282569408416748
    7. '       ' → logprob: -7.282569408416748
    8. '   ' → logprob: -7.782569408416748
    9. ',' → logprob: -8.282569885253906
    10. '=' → logprob: -9.282569885253906

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02185779996216297
    2. ' if' → logprob: -4.646857738494873
    3. ' for' → logprob: -5.271857738494873
    4. ':' → logprob: -6.521857738494873
    5. '<|end|>' → logprob: -6.896857738494873
    6. '   ' → logprob: -7.021857738494873
    7. '[' → logprob: -7.396857738494873
    8. ',' → logprob: -7.771857738494873
    9. '        
' → logprob: -8.021858215332031
    10. '           ' → logprob: -8.146858215332031

Token 229: ' z' (ID: 579)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41639578342437744
    2. ' if' → logprob: -2.291395664215088
    3. 'for' → logprob: -3.166395664215088
    4. 'x' → logprob: -3.416395664215088
    5. '       ' → logprob: -3.666395664215088
    6. 's' → logprob: -4.166395664215088
    7. ' for' → logprob: -4.666395664215088
    8. 'f' → logprob: -4.791395664215088
    9. 'v' → logprob: -4.916395664215088
    10. 'm' → logprob: -5.041395664215088

Token 230: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20288746058940887
    2. '=' → logprob: -1.7028874158859253
    3. '   ' → logprob: -8.327887535095215
    4. '=j' → logprob: -8.827887535095215
    5. ' +=' → logprob: -8.952887535095215
    6. '+=' → logprob: -8.952887535095215
    7. '=f' → logprob: -9.327887535095215
    8. 'for' → logprob: -9.327887535095215
    9. ',' → logprob: -9.452887535095215
    10. '=d' → logprob: -9.452887535095215

Token 231: ' m' (ID: 284)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9747089147567749
    2. 'y' → logprob: -1.349708914756775
    3. 'w' → logprob: -2.4747090339660645
    4. ' y' → logprob: -3.3497090339660645
    5. 'l' → logprob: -3.8497090339660645
    6. ' x' → logprob: -3.9747090339660645
    7. 's' → logprob: -4.2247090339660645
    8. 'm' → logprob: -4.3497090339660645
    9. 'r' → logprob: -4.3497090339660645
    10. 'j' → logprob: -4.3497090339660645

Token 232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023295672610402107
    2. ' =' → logprob: -3.7732956409454346
    3. '=f' → logprob: -10.898295402526855
    4. '=d' → logprob: -11.898295402526855
    5. ',' → logprob: -12.023295402526855
    6. '=z' → logprob: -12.148295402526855
    7. '=k' → logprob: -12.273295402526855
    8. '=j' → logprob: -12.523295402526855
    9. '=i' → logprob: -13.648295402526855
    10. ' ' → logprob: -15.148295402526855

Token 233: ' k' (ID: 372)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11927522718906403
    2. 'float' → logprob: -2.7442753314971924
    3. 'f' → logprob: -3.9942753314971924
    4. 'd' → logprob: -4.619275093078613
    5. ' ' → logprob: -5.744275093078613
    6. 'max' → logprob: -5.869275093078613
    7. 'bit' → logprob: -5.869275093078613
    8. '1' → logprob: -6.244275093078613
    9. 'N' → logprob: -6.619275093078613
    10. 'K' → logprob: -6.744275093078613

Token 234: ' -' (ID: 533)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0428876876831055
    2. '-' → logprob: -1.5428876876831055
    3. ',' → logprob: -1.6678876876831055
    4. ' =' → logprob: -1.6678876876831055
    5. ' -' → logprob: -4.2928876876831055
    6. '+' → logprob: -5.2928876876831055
    7. ' ' → logprob: -5.6678876876831055
    8. '   ' → logprob: -5.7928876876831055
    9. 'I' → logprob: -6.0428876876831055
    10. '0' → logprob: -6.1678876876831055

Token 235: ' i' (ID: 575)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5766608715057373
    2. 'i' → logprob: -0.8266608715057373
    3. 'k' → logprob: -8.076661109924316
    4. ' i' → logprob: -9.326661109924316
    5. '(i' → logprob: -9.451661109924316
    6. 'I' → logprob: -9.451661109924316
    7. 'N' → logprob: -10.451661109924316
    8. 'Q' → logprob: -10.701661109924316
    9. ' ' → logprob: -10.951661109924316
    10. 'f' → logprob: -10.951661109924316

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2796027362346649
    2. '-' → logprob: -2.6546027660369873
    3. '+' → logprob: -2.9046027660369873
    4. ' -' → logprob: -3.1546027660369873
    5. '
' → logprob: -3.4046027660369873
    6. ' +' → logprob: -3.7796027660369873
    7. ' =' → logprob: -5.404602527618408
    8. '=' → logprob: -5.529602527618408
    9. ' ,' → logprob: -6.404602527618408
    10. 'd' → logprob: -6.654602527618408

Token 237: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4769178330898285
    2. 'z' → logprob: -2.2269177436828613
    3. 'bit' → logprob: -3.1019177436828613
    4. 'd' → logprob: -3.4769177436828613
    5. 'K' → logprob: -3.7269177436828613
    6. '1' → logprob: -3.9769177436828613
    7. 'k' → logprob: -4.101917743682861
    8. 'f' → logprob: -4.101917743682861
    9. 'float' → logprob: -4.226917743682861
    10. 'min' → logprob: -4.351917743682861

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3042404353618622
    2. 'bit' → logprob: -2.4292404651641846
    3. 'K' → logprob: -2.8042404651641846
    4. 'z' → logprob: -2.9292404651641846
    5. 'N' → logprob: -4.0542402267456055
    6. 'k' → logprob: -4.0542402267456055
    7. '(' → logprob: -4.1792402267456055
    8. 'd' → logprob: -5.4292402267456055
    9. 'j' → logprob: -6.9292402267456055
    10. 'f' → logprob: -7.0542402267456055

Token 239: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.009929620660841465
    2. ' <<' → logprob: -4.634929656982422
    3. ')' → logprob: -9.634929656982422
    4. '1' → logprob: -10.009929656982422
    5. '<' → logprob: -10.634929656982422
    6. '>>' → logprob: -11.384929656982422
    7. '<<(' → logprob: -11.509929656982422
    8. '<<<' → logprob: -12.384929656982422
    9. ')<<' → logprob: -13.384929656982422
    10. '+' → logprob: -13.384929656982422

Token 240: ' (' (ID: 350)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.03843618929386139
    2. '(i' → logprob: -4.538436412811279
    3. '(z' → logprob: -4.538436412811279
    4. '(k' → logprob: -5.038436412811279
    5. 'i' → logprob: -5.538436412811279
    6. '(N' → logprob: -5.788436412811279
    7. 'k' → logprob: -6.288436412811279
    8. '(K' → logprob: -8.163435935974121
    9. 'N' → logprob: -8.663435935974121
    10. '(' → logprob: -8.788435935974121

Token 241: 'k' (ID: 74)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.11386772990226746
    2. '(z' → logprob: -2.98886775970459
    3. '(N' → logprob: -4.23886775970459
    4. 'k' → logprob: -4.48886775970459
    5. '(i' → logprob: -4.61386775970459
    6. 'N' → logprob: -4.86386775970459
    7. '(k' → logprob: -4.86386775970459
    8. 'i' → logprob: -5.36386775970459
    9. ' (' → logprob: -7.86386775970459
    10. '   ' → logprob: -7.86386775970459

Token 242: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6490697860717773
    2. '-i' → logprob: -1.1490697860717773
    3. ')' → logprob: -2.5240697860717773
    4. ' -' → logprob: -2.7740697860717773
    5. '-z' → logprob: -5.149069786071777
    6. ')-' → logprob: -5.524069786071777
    7. 'm' → logprob: -6.524069786071777
    8. '   ' → logprob: -6.649069786071777
    9. 'i' → logprob: -6.899069786071777
    10. 'z' → logprob: -6.899069786071777

Token 243: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.205934077501297
    2. '(i' → logprob: -1.8309340476989746
    3. 'z' → logprob: -5.080934047698975
    4. '1' → logprob: -5.080934047698975
    5. '(k' → logprob: -5.705934047698975
    6. '(z' → logprob: -5.830934047698975
    7. '(N' → logprob: -5.955934047698975
    8. ' (' → logprob: -6.580934047698975
    9. 'k' → logprob: -6.705934047698975
    10. '(' → logprob: -7.955934047698975

Token 244: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3512488603591919
    2. '))' → logprob: -1.226248860359192
    3. 'z' → logprob: -7.101248741149902
    4. '))-' → logprob: -7.226248741149902
    5. ')-' → logprob: -7.601248741149902
    6. ' )' → logprob: -8.476248741149902
    7. '1' → logprob: -8.601248741149902
    8. '-' → logprob: -9.226248741149902
    9. ' ' → logprob: -9.601248741149902
    10. ' ))' → logprob: -10.226248741149902

Token 245: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3974696695804596
    2. ' -' → logprob: -1.1474696397781372
    3. ')' → logprob: -5.772469520568848
    4. ')-' → logprob: -6.647469520568848
    5. '       ' → logprob: -7.022469520568848
    6. '
' → logprob: -7.022469520568848
    7. '()-' → logprob: -7.022469520568848
    8. 'z' → logprob: -7.647469520568848
    9. '1' → logprob: -8.022469520568848
    10. 'for' → logprob: -8.022469520568848

Token 246: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. 'z' → logprob: -16.375019073486328
    4. '```' → logprob: -17.500019073486328
    5. ')' → logprob: -17.750019073486328
    6. ' z' → logprob: -18.125019073486328
    7. '
' → logprob: -18.125019073486328
    8. '<|end|>' → logprob: -18.250019073486328
    9. '(' → logprob: -18.625019073486328
    10. '2' → logprob: -19.125019073486328

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '```' → logprob: -15.875012397766113
    4. 'z' → logprob: -17.000011444091797
    5. ')' → logprob: -17.500011444091797
    6. '2' → logprob: -17.625011444091797
    7. '(' → logprob: -17.687511444091797
    8. '
' → logprob: -17.812511444091797
    9. '`' → logprob: -17.937511444091797
    10. '<|end|>' → logprob: -18.125011444091797

Token 248: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18063144385814667
    2. '
' → logprob: -1.930631399154663
    3. 'for' → logprob: -5.180631637573242
    4. '<|end|>' → logprob: -5.680631637573242
    5. ' for' → logprob: -5.930631637573242
    6. 'if' → logprob: -6.430631637573242
    7. '        
' → logprob: -6.930631637573242
    8. 'x' → logprob: -7.055631637573242
    9. ',' → logprob: -7.180631637573242
    10. ' if' → logprob: -7.430631637573242

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25862205028533936
    2. '<|end|>' → logprob: -2.758622169494629
    3. ' for' → logprob: -3.133622169494629
    4. ' if' → logprob: -3.258622169494629
    5. 'for' → logprob: -3.883622169494629
    6. 'if' → logprob: -4.133622169494629
    7. 'x' → logprob: -5.133622169494629
    8. 's' → logprob: -5.258622169494629
    9. 'sum' → logprob: -5.758622169494629
    10. ',' → logprob: -6.008622169494629

Token 250: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.033501267433166504
    2. 's' → logprob: -4.658501148223877
    3. 'if' → logprob: -4.658501148223877
    4. 'x' → logprob: -5.658501148223877
    5. 'v' → logprob: -6.408501148223877
    6. 'm' → logprob: -7.033501148223877
    7. ' for' → logprob: -7.158501148223877
    8. '       ' → logprob: -7.408501148223877
    9. 'dp' → logprob: -7.408501148223877
    10. 'f' → logprob: -7.658501148223877

Token 251: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02055882103741169
    2. 'x' → logprob: -4.395558834075928
    3. 'l' → logprob: -5.270558834075928
    4. 'p' → logprob: -7.520558834075928
    5. 'y' → logprob: -7.645558834075928
    6. 's' → logprob: -8.14555835723877
    7. 'z' → logprob: -8.64555835723877
    8. 'b' → logprob: -8.77055835723877
    9. 'w' → logprob: -9.14555835723877
    10. 'u' → logprob: -9.14555835723877

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1427163928747177
    2. 'in' → logprob: -2.017716407775879
    3. '   ' → logprob: -11.142716407775879
    4. 'range' → logprob: -11.392716407775879
    5. '	in' → logprob: -12.892716407775879
    6. ' ' → logprob: -13.017716407775879
    7. '```' → logprob: -13.267716407775879
    8. ')' → logprob: -13.642716407775879
    9. '    ' → logprob: -13.767716407775879
    10. 'd' → logprob: -14.392716407775879

Token 253: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03232725337147713
    2. 'Q' → logprob: -4.032327175140381
    3. ' range' → logprob: -4.282327175140381
    4. ' Q' → logprob: -8.782327651977539
    5. '(range' → logprob: -10.657327651977539
    6. 'in' → logprob: -10.907327651977539
    7. 'J' → logprob: -11.032327651977539
    8. 'q' → logprob: -11.532327651977539
    9. '(Q' → logprob: -11.782327651977539
    10. ' in' → logprob: -12.282327651977539

Token 254: '(' (ID: 7)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.3260311484336853
    2. '(m' → logprob: -2.07603120803833
    3. '(' → logprob: -2.45103120803833
    4. '(bit' → logprob: -2.82603120803833
    5. '((' → logprob: -6.07603120803833
    6. '(k' → logprob: -6.20103120803833
    7. 'bit' → logprob: -6.70103120803833
    8. 'z' → logprob: -7.32603120803833
    9. 'm' → logprob: -7.95103120803833
    10. '1' → logprob: -8.201030731201172

Token 255: '1' (ID: 16)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.6497226357460022
    2. 'm' → logprob: -1.0247225761413574
    3. '1' → logprob: -2.7747225761413574
    4. 'bit' → logprob: -3.5247225761413574
    5. '(' → logprob: -4.024722576141357
    6. '(z' → logprob: -5.274722576141357
    7. '(m' → logprob: -6.399722576141357
    8. '(bit' → logprob: -6.774722576141357
    9. '0' → logprob: -7.774722576141357
    10. ' z' → logprob: -8.899723052978516

Token 256: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.47581589221954346
    2. '<<' → logprob: -0.9758158922195435
    3. '<<(' → logprob: -6.975815773010254
    4. ',' → logprob: -7.225815773010254
    5. ',z' → logprob: -10.975815773010254
    6. '(z' → logprob: -11.600815773010254
    7. ')' → logprob: -11.975815773010254
    8. '   ' → logprob: -12.100815773010254
    9. '(' → logprob: -12.225815773010254
    10. 'z' → logprob: -12.350815773010254

Token 257: ' k' (ID: 372)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0026026491541415453
    2. '(z' → logprob: -7.002602577209473
    3. '(N' → logprob: -7.252602577209473
    4. '(i' → logprob: -7.752602577209473
    5. '(k' → logprob: -8.377602577209473
    6. 'N' → logprob: -9.377602577209473
    7. 'i' → logprob: -9.377602577209473
    8. ' z' → logprob: -10.127602577209473
    9. 'k' → logprob: -10.252602577209473
    10. ' (' → logprob: -11.127602577209473

Token 258: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28261280059814453
    2. '):' → logprob: -1.4076128005981445
    3. '       ' → logprob: -8.032612800598145
    4. '           ' → logprob: -8.282612800598145
    5. '):
' → logprob: -8.407612800598145
    6. '+' → logprob: -8.782612800598145
    7. ')' → logprob: -9.532612800598145
    8. '   ' → logprob: -9.782612800598145
    9. ' ):
' → logprob: -9.782612800598145
    10. ':' → logprob: -9.907612800598145

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1961398720741272
    2. ' if' → logprob: -2.6961398124694824
    3. '<|end|>' → logprob: -3.0711398124694824
    4. ':' → logprob: -3.3211398124694824
    5. ' ' → logprob: -4.821139812469482
    6. 'if' → logprob: -5.446139812469482
    7. '               ' → logprob: -6.071139812469482
    8. '            ' → logprob: -6.446139812469482
    9. '```' → logprob: -6.446139812469482
    10. '[' → logprob: -6.571139812469482

Token 260: ' dj' (ID: 43267)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27843177318573
    2. ' if' → logprob: -1.77843177318573
    3. '           ' → logprob: -3.4034318923950195
    4. 'x' → logprob: -4.4034318923950195
    5. 's' → logprob: -5.2784318923950195
    6. 'f' → logprob: -5.2784318923950195
    7. 'c' → logprob: -5.2784318923950195
    8. 'v' → logprob: -5.9034318923950195
    9. 't' → logprob: -6.6534318923950195
    10. '               ' → logprob: -6.9034318923950195

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.991867184638977
    2. '[i' → logprob: -1.241867184638977
    3. '=' → logprob: -1.491867184638977
    4. '[j' → logprob: -2.9918670654296875
    5. '][' → logprob: -3.9918670654296875
    6. '[' → logprob: -4.4918670654296875
    7. '[k' → logprob: -4.6168670654296875
    8. ']' → logprob: -4.7418670654296875
    9. '=i' → logprob: -5.7418670654296875
    10. '=j' → logprob: -5.9918670654296875

Token 262: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.48449185490608215
    2. ' d' → logprob: -0.9844918251037598
    3. 'f' → logprob: -5.35949182510376
    4. ' f' → logprob: -5.85949182510376
    5. ' bit' → logprob: -7.48449182510376
    6. 'bit' → logprob: -7.48449182510376
    7. 'j' → logprob: -7.60949182510376
    8. ' j' → logprob: -8.109492301940918
    9. ' ' → logprob: -8.734492301940918
    10. '0' → logprob: -8.734492301940918

Token 263: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2027343511581421
    2. '[k' → logprob: -1.702734351158142
    3. '[j' → logprob: -6.827734470367432
    4. '[I' → logprob: -9.327733993530273
    5. 'k' → logprob: -9.827733993530273
    6. 'i' → logprob: -10.077733993530273
    7. '[' → logprob: -10.327733993530273
    8. ' [' → logprob: -12.827733993530273
    9. '[f' → logprob: -12.952733993530273
    10. '[[' → logprob: -13.452733993530273

Token 264: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011279003694653511
    2. '[j' → logprob: -4.636279106140137
    3. ']' → logprob: -7.386279106140137
    4. ' ][' → logprob: -7.511279106140137
    5. '[' → logprob: -8.886279106140137
    6. 'j' → logprob: -10.386279106140137
    7. ')[' → logprob: -10.386279106140137
    8. '   ' → logprob: -11.136279106140137
    9. '           ' → logprob: -11.136279106140137
    10. '][:' → logprob: -11.261279106140137

Token 265: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006455893162637949
    2. '(j' → logprob: -5.256455898284912
    3. ' j' → logprob: -7.881455898284912
    4. '((' → logprob: -8.006455421447754
    5. 'J' → logprob: -8.631455421447754
    6. 'I' → logprob: -9.006455421447754
    7. 'i' → logprob: -10.006455421447754
    8. '(' → logprob: -10.256455421447754
    9. ' (' → logprob: -10.506455421447754
    10. '[j' → logprob: -11.506455421447754

Token 266: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08871784806251526
    2. ' ^' → logprob: -3.0887179374694824
    3. '^' → logprob: -3.8387179374694824
    4. '[j' → logprob: -4.838717937469482
    5. ']^' → logprob: -5.338717937469482
    6. '][' → logprob: -5.838717937469482
    7. ']+' → logprob: -7.338717937469482
    8. '[' → logprob: -7.838717937469482
    9. ']
' → logprob: -8.213717460632324
    10. ' ]' → logprob: -8.338717460632324

Token 267: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08025580644607544
    2. ' if' → logprob: -2.8302557468414307
    3. 'if' → logprob: -4.70525598526001
    4. '<|end|>' → logprob: -5.58025598526001
    5. '+' → logprob: -6.95525598526001
    6. ',' → logprob: -7.20525598526001
    7. '            
' → logprob: -7.45525598526001
    8. ' +' → logprob: -7.70525598526001
    9. '=' → logprob: -7.70525598526001
    10. '
' → logprob: -8.330255508422852

Token 268: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.058313462883234024
    2. 'f' → logprob: -3.3083133697509766
    3. 'for' → logprob: -4.558313369750977
    4. '           ' → logprob: -5.808313369750977
    5. 'm' → logprob: -6.683313369750977
    6. ' if' → logprob: -6.933313369750977
    7. 'continue' → logprob: -7.058313369750977
    8. 'd' → logprob: -7.058313369750977
    9. 'z' → logprob: -7.433313369750977
    10. 'x' → logprob: -8.183313369750977

Token 269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1428149789571762
    2. ' =' → logprob: -2.017814874649048
    3. '=j' → logprob: -10.017814636230469
    4. '+' → logprob: -10.642814636230469
    5. ']' → logprob: -10.892814636230469
    6. ' ' → logprob: -11.392814636230469
    7. '=k' → logprob: -11.517814636230469
    8. ',' → logprob: -12.392814636230469
    9. 'k' → logprob: -12.767814636230469
    10. '+=' → logprob: -13.017814636230469

Token 270: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4382813572883606
    2. '(j' → logprob: -1.4382812976837158
    3. '((' → logprob: -2.438281297683716
    4. ' j' → logprob: -4.438281536102295
    5. ' (' → logprob: -4.688281536102295
    6. ' ((' → logprob: -6.063281536102295
    7. '(((' → logprob: -6.063281536102295
    8. '(i' → logprob: -6.688281536102295
    9. '(' → logprob: -7.063281536102295
    10. '(k' → logprob: -7.438281536102295

Token 271: ' >>' (ID: 6832)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.9325842261314392
    2. '&' → logprob: -1.182584285736084
    3. '^' → logprob: -1.557584285736084
    4. ' &' → logprob: -2.807584285736084
    5. '>>' → logprob: -4.432584285736084
    6. '-' → logprob: -4.932584285736084
    7. ' -' → logprob: -5.307584285736084
    8. '+' → logprob: -6.557584285736084
    9. '|' → logprob: -6.932584285736084
    10. ' >>' → logprob: -7.557584285736084

Token 272: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.319527268409729
    2. '(z' → logprob: -1.444527268409729
    3. '(k' → logprob: -3.9445271492004395
    4. '(i' → logprob: -4.8195271492004395
    5. '(m' → logprob: -5.5695271492004395
    6. 'm' → logprob: -6.1945271492004395
    7. '(' → logprob: -6.4445271492004395
    8. '(N' → logprob: -6.6945271492004395
    9. ' (' → logprob: -7.6945271492004395
    10. '1' → logprob: -8.569527626037598

Token 273: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6780696511268616
    2. '<|end|>' → logprob: -1.6780695915222168
    3. ',' → logprob: -2.303069591522217
    4. ')' → logprob: -3.178069591522217
    5. ' ^' → logprob: -4.053069591522217
    6. ' if' → logprob: -4.178069591522217
    7. ']' → logprob: -4.303069591522217
    8. ' &' → logprob: -4.303069591522217
    9. '
' → logprob: -4.428069591522217
    10. ' ' → logprob: -4.678069591522217

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21701139211654663
    2. ' if' → logprob: -1.9670114517211914
    3. 'if' → logprob: -4.467011451721191
    4. '<|end|>' → logprob: -4.592011451721191
    5. ' for' → logprob: -4.967011451721191
    6. ' f' → logprob: -4.967011451721191
    7. ' and' → logprob: -5.717011451721191
    8. '
' → logprob: -6.217011451721191
    9. 'f' → logprob: -6.217011451721191
    10. ',' → logprob: -6.217011451721191

Token 275: ' d' (ID: 272)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7284352779388428
    2. 'd' (adapté à ' d') → logprob: -1.3534352779388428
    3. 'if' → logprob: -1.8534352779388428
    4. ' f' → logprob: -3.6034352779388428
    5. 'val' → logprob: -3.8534352779388428
    6. 'm' → logprob: -4.603435516357422
    7. '           ' → logprob: -4.728435516357422
    8. ' d' → logprob: -5.103435516357422
    9. 'for' → logprob: -5.103435516357422
    10. ' if' → logprob: -5.103435516357422

Token 276: '[i' (ID: 1768)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.030126133933663368
    2. '[i' → logprob: -3.5301260948181152
    3. '[idx' → logprob: -8.280126571655273
    4. 'k' → logprob: -10.655126571655273
    5. '[m' → logprob: -10.655126571655273
    6. '[' → logprob: -11.030126571655273
    7. ' [' → logprob: -11.280126571655273
    8. '[I' → logprob: -11.405126571655273
    9. '[j' → logprob: -11.530126571655273
    10. '[q' → logprob: -11.655126571655273

Token 277: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06993943452835083
    2. '[j' → logprob: -3.194939374923706
    3. '[idx' → logprob: -4.319939613342285
    4. '[' → logprob: -5.319939613342285
    5. '[k' → logprob: -5.694939613342285
    6. '[i' → logprob: -6.194939613342285
    7. ' ][' → logprob: -6.819939613342285
    8. ']' → logprob: -6.944939613342285
    9. 'idx' → logprob: -8.569939613342285
    10. ' [' → logprob: -8.569939613342285

Token 278: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.002778012305498123
    2. 'j' → logprob: -6.377778053283691
    3. ' idx' → logprob: -7.127778053283691
    4. '(idx' → logprob: -8.502778053283691
    5. 'i' → logprob: -10.627778053283691
    6. 'index' → logprob: -11.502778053283691
    7. '(' → logprob: -11.627778053283691
    8. '[idx' → logprob: -12.252778053283691
    9. '_idx' → logprob: -12.502778053283691
    10. 'k' → logprob: -12.502778053283691

Token 279: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09499896317720413
    2. '|' → logprob: -3.094999074935913
    3. ']+=' → logprob: -3.594999074935913
    4. '^' → logprob: -4.719998836517334
    5. '][' → logprob: -5.969998836517334
    6. ']|' → logprob: -6.219998836517334
    7. ']^' → logprob: -6.219998836517334
    8. ']=' → logprob: -7.219998836517334
    9. '[' → logprob: -7.969998836517334
    10. ' ^=' → logprob: -8.469999313354492

Token 280: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.36256730556488037
    2. '=' → logprob: -1.9875673055648804
    3. '^' → logprob: -2.36256742477417
    4. '|' → logprob: -2.73756742477417
    5. ' ^=' → logprob: -5.61256742477417
    6. '[' → logprob: -6.86256742477417
    7. '-=' → logprob: -6.98756742477417
    8. ' +=' → logprob: -7.23756742477417
    9. ' =' → logprob: -7.61256742477417
    10. ' |=' → logprob: -8.487566947937012

Token 281: ' dj' (ID: 43267)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.0013213115744292736
    2. ' dj' → logprob: -6.876321315765381
    3. 'd' → logprob: -8.251320838928223
    4. '           ' → logprob: -11.876320838928223
    5. '   ' → logprob: -12.126320838928223
    6. ' ' → logprob: -12.751320838928223
    7. '       ' → logprob: -13.376320838928223
    8. '               ' → logprob: -13.751320838928223
    9. '                   ' → logprob: -13.751320838928223
    10. '(d' → logprob: -13.876320838928223

Token 282: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 283: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 284: ' r' (ID: 428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3251405954360962
    2. '<|end|>' → logprob: -1.3251405954360962
    3. 'd' → logprob: -2.4501404762268066
    4. ' if' → logprob: -2.7001404762268066
    5. ' d' → logprob: -3.0751404762268066
    6. ' f' → logprob: -3.0751404762268066
    7. '           ' → logprob: -3.4501404762268066
    8. 'f' → logprob: -3.4501404762268066
    9. 'if' → logprob: -3.9501404762268066
    10. '0' → logprob: -4.325140476226807

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28217223286628723
    2. '=' → logprob: -1.4071722030639648
    3. '=f' → logprob: -7.032172203063965
    4. 'f' → logprob: -9.782172203063965
    5. ' f' → logprob: -10.907172203063965
    6. ' ' → logprob: -11.157172203063965
    7. '+=' → logprob: -11.407172203063965
    8. '=r' → logprob: -11.657172203063965
    9. ' +=' → logprob: -12.157172203063965
    10. '[f' → logprob: -12.157172203063965

Token 286: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.005829491186887026
    2. ' f' → logprob: -5.505829334259033
    3. 'bit' → logprob: -8.005829811096191
    4. 'k' → logprob: -8.130829811096191
    5. 'j' → logprob: -8.505829811096191
    6. 'd' → logprob: -8.755829811096191
    7. '(k' → logprob: -9.005829811096191
    8. '(f' → logprob: -9.505829811096191
    9. 'K' → logprob: -9.505829811096191
    10. 'r' → logprob: -9.505829811096191

Token 287: '[z' (ID: 105082)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.4288976788520813
    2. '[i' → logprob: -1.0538976192474365
    3. 'k' → logprob: -9.178897857666016
    4. '[j' → logprob: -10.428897857666016
    5. 'i' → logprob: -10.553897857666016
    6. '[' → logprob: -11.178897857666016
    7. '```' → logprob: -11.928897857666016
    8. '[I' → logprob: -12.553897857666016
    9. '[f' → logprob: -12.678897857666016
    10. ' [' → logprob: -13.678897857666016

Token 288: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013694096356630325
    2. '[j' → logprob: -4.5136942863464355
    3. ']' → logprob: -6.3886942863464355
    4. '[' → logprob: -7.5136942863464355
    5. '[k' → logprob: -9.013693809509277
    6. '[idx' → logprob: -9.888693809509277
    7. '[z' → logprob: -9.888693809509277
    8. ' ][' → logprob: -10.138693809509277
    9. '[m' → logprob: -10.138693809509277
    10. '```' → logprob: -11.513693809509277

Token 289: 'j' (ID: 73)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6002084016799927
    2. 'j' → logprob: -0.8502084016799927
    3. '(j' → logprob: -4.600208282470703
    4. '(m' → logprob: -4.850208282470703
    5. 'idx' → logprob: -5.850208282470703
    6. '((' → logprob: -5.975208282470703
    7. '(idx' → logprob: -8.350208282470703
    8. ' j' → logprob: -9.100208282470703
    9. '(' → logprob: -9.725208282470703
    10. ' m' → logprob: -9.850208282470703

Token 290: ' &' (ID: 827)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008167242631316185
    2. '])' → logprob: -5.133167266845703
    3. ']&' → logprob: -7.133167266845703
    4. ']
' → logprob: -7.508167266845703
    5. '&' → logprob: -7.883167266845703
    6. '^' → logprob: -9.258167266845703
    7. ']^' → logprob: -9.508167266845703
    8. ')]' → logprob: -10.008167266845703
    9. ' ^' → logprob: -10.133167266845703
    10. ' &' → logprob: -10.133167266845703

Token 291: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0003362966235727072
    2. ' m' → logprob: -8.000336647033691
    3. '(m' → logprob: -14.250336647033691
    4. '```' → logprob: -16.000335693359375
    5. '	m' → logprob: -16.750335693359375
    6. ' ' → logprob: -17.500335693359375
    7. '(' → logprob: -17.875335693359375
    8. 'mask' → logprob: -18.500335693359375
    9. ')m' → logprob: -19.000335693359375
    10. '   ' → logprob: -19.000335693359375

Token 292: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008849739097058773
    2. ']
' → logprob: -4.758849620819092
    3. '])' → logprob: -9.63385009765625
    4. ')]' → logprob: -9.88385009765625
    5. ' ]' → logprob: -10.00885009765625
    6. ']
' → logprob: -10.38385009765625
    7. '()]' → logprob: -11.75885009765625
    8. ']

' → logprob: -11.88385009765625
    9. 'r' → logprob: -12.00885009765625
    10. ')' → logprob: -12.50885009765625

Token 293: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7508944272994995
    2. '+' → logprob: -1.3758944272994995
    3. 'if' → logprob: -1.8758944272994995
    4. ' +' → logprob: -3.125894546508789
    5. '           ' → logprob: -3.750894546508789
    6. '<|end|>' → logprob: -3.875894546508789
    7. '
' → logprob: -4.250894546508789
    8. ']' → logprob: -4.750894546508789
    9. ' ' → logprob: -6.125894546508789
    10. '0' → logprob: -6.875894546508789

Token 294: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07677414268255234
    2. ' if' → logprob: -3.2017741203308105
    3. 'f' → logprob: -4.0767741203308105
    4. 'd' → logprob: -4.9517741203308105
    5. 'I' → logprob: -5.2017741203308105
    6. '           ' → logprob: -6.7017741203308105
    7. 'J' → logprob: -6.9517741203308105
    8. ' f' → logprob: -7.3267741203308105
    9. ' d' → logprob: -7.8267741203308105
    10. ' I' → logprob: -9.701774597167969

Token 295: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7359389662742615
    2. ' r' → logprob: -0.8609389662742615
    3. ' d' → logprob: -2.8609390258789062
    4. 'd' → logprob: -3.6109390258789062
    5. ' k' → logprob: -5.735939025878906
    6. 'k' → logprob: -5.985939025878906
    7. ' i' → logprob: -6.360939025878906
    8. ' f' → logprob: -7.110939025878906
    9. 'i' → logprob: -7.110939025878906
    10. ' t' → logprob: -7.235939025878906

Token 296: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6275382041931152
    2. ' !=' → logprob: -1.5025382041931152
    3. '==' → logprob: -2.2525382041931152
    4. ' >' → logprob: -3.0025382041931152
    5. '!=' → logprob: -3.6275382041931152
    6. '>' → logprob: -3.7525382041931152
    7. ' >=' → logprob: -4.252538204193115
    8. ' <' → logprob: -4.502538204193115
    9. ' <=' → logprob: -5.127538204193115
    10. '<' → logprob: -6.252538204193115

Token 297: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.18629546463489532
    2. '0' → logprob: -2.811295509338379
    3. 'i' → logprob: -2.936295509338379
    4. '-' → logprob: -4.186295509338379
    5. 'K' → logprob: -4.311295509338379
    6. ' z' → logprob: -4.561295509338379
    7. 'k' → logprob: -5.061295509338379
    8. ' ' → logprob: -5.436295509338379
    9. 'f' → logprob: -6.186295509338379
    10. ' -' → logprob: -6.561295509338379

Token 298: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5781142711639404
    2. ':' → logprob: -0.8281142711639404
    3. ' and' → logprob: -6.4531145095825195
    4. '           ' → logprob: -8.57811450958252
    5. ' :
' → logprob: -9.45311450958252
    6. 'and' → logprob: -9.82811450958252
    7. '):
' → logprob: -9.95311450958252
    8. '               ' → logprob: -9.95311450958252
    9. '                           ' → logprob: -10.07811450958252
    10. ' :' → logprob: -11.07811450958252

Token 299: '               ' (ID: 506)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10304690152406693
    2. '               ' → logprob: -2.6030468940734863
    3. 'd' → logprob: -4.103046894073486
    4. '           ' → logprob: -6.603046894073486
    5. ' I' → logprob: -6.603046894073486
    6. ' f' → logprob: -7.228046894073486
    7. '                ' → logprob: -7.478046894073486
    8. 'I' → logprob: -7.603046894073486
    9. ' J' → logprob: -7.978046894073486
    10. '            ' → logprob: -8.228047370910645

Token 300: ' mask' (ID: 10910)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13318122923374176
    2. 'f' → logprob: -3.13318133354187
    3. 'I' → logprob: -3.63318133354187
    4. ' d' → logprob: -3.63318133354187
    5. 'J' → logprob: -4.258181095123291
    6. 'i' → logprob: -5.508181095123291
    7. 'if' → logprob: -5.633181095123291
    8. ' f' → logprob: -6.508181095123291
    9. ' J' → logprob: -7.508181095123291
    10. 'x' → logprob: -7.508181095123291

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520332336425781
    2. '=' → logprob: -1.5020332336425781
    3. 'd' → logprob: -10.752033233642578
    4. '=j' → logprob: -10.877033233642578
    5. '=(' → logprob: -11.252033233642578
    6. ')' → logprob: -11.377033233642578
    7. ' ' → logprob: -11.752033233642578
    8. '```' → logprob: -13.002033233642578
    9. 'j' → logprob: -13.127033233642578
    10. ' ' → logprob: -13.127033233642578

Token 302: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5142977237701416
    2. '1' → logprob: -1.0142977237701416
    3. '((' → logprob: -3.5142977237701416
    4. ' (' → logprob: -6.1392974853515625
    5. '(m' → logprob: -6.6392974853515625
    6. '(j' → logprob: -6.7642974853515625
    7. '~' → logprob: -7.0142974853515625
    8. '(~' → logprob: -7.0142974853515625
    9. '(d' → logprob: -7.6392974853515625
    10. 'm' → logprob: -7.6392974853515625

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1312505304813385
    2. '(' → logprob: -2.5062506198883057
    3. '((' → logprob: -3.8812506198883057
    4. '3' → logprob: -5.006250381469727
    5. 'm' → logprob: -5.506250381469727
    6. '(m' → logprob: -6.006250381469727
    7. '(d' → logprob: -6.506250381469727
    8. 'd' → logprob: -6.756250381469727
    9. 'z' → logprob: -7.006250381469727
    10. '(k' → logprob: -7.256250381469727

Token 304: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.42935967445373535
    2. '<<' → logprob: -1.0543596744537354
    3. '<<(' → logprob: -7.429359436035156
    4. '<<<' → logprob: -10.429359436035156
    5. ')' → logprob: -10.554359436035156
    6. '<' → logprob: -13.304359436035156
    7. ' <<=' → logprob: -13.429359436035156
    8. ')<<' → logprob: -14.054359436035156
    9. '<<<<' → logprob: -14.429359436035156
    10. '   ' → logprob: -14.429359436035156

Token 305: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.2953749895095825
    2. '(z' → logprob: -2.045374870300293
    3. 'r' → logprob: -2.295374870300293
    4. '(' → logprob: -4.545374870300293
    5. '(k' → logprob: -5.045374870300293
    6. '(N' → logprob: -6.170374870300293
    7. '(j' → logprob: -6.170374870300293
    8. '(i' → logprob: -6.295374870300293
    9. ' (' → logprob: -6.920374870300293
    10. '(K' → logprob: -7.670374870300293

Token 306: 'z' (ID: 89)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.849436342716217
    2. 'z' → logprob: -1.2244362831115723
    3. '(k' → logprob: -2.3494362831115723
    4. 'r' → logprob: -2.7244362831115723
    5. '(r' → logprob: -3.2244362831115723
    6. 'k' → logprob: -3.4744362831115723
    7. '(i' → logprob: -3.4744362831115723
    8. 'i' → logprob: -4.599436283111572
    9. '(N' → logprob: -6.349436283111572
    10. '(' → logprob: -6.474436283111572

Token 307: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27888384461402893
    2. 'r' → logprob: -2.528883934020996
    3. '-' → logprob: -2.778883934020996
    4. ' -' → logprob: -2.778883934020996
    5. '+' → logprob: -3.653883934020996
    6. '))' → logprob: -4.778883934020996
    7. ' )' → logprob: -6.653883934020996
    8. '>>' → logprob: -7.528883934020996
    9. ')-' → logprob: -7.528883934020996
    10. '(r' → logprob: -7.653883934020996

Token 308: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11842218786478043
    2. '(r' → logprob: -2.618422269821167
    3. '(' → logprob: -3.743422269821167
    4. '1' → logprob: -4.243422031402588
    5. ' (' → logprob: -7.493422031402588
    6. ' r' → logprob: -9.243422508239746
    7. '(z' → logprob: -10.618422508239746
    8. '(j' → logprob: -12.243422508239746
    9. ' ' → logprob: -12.618422508239746
    10. '(i' → logprob: -12.743422508239746

Token 309: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033764876425266266
    2. '))' → logprob: -3.4087648391723633
    3. ' )' → logprob: -9.783764839172363
    4. '))-' → logprob: -10.283764839172363
    5. ')-' → logprob: -10.658764839172363
    6. ' ))' → logprob: -13.783764839172363
    7. ')
' → logprob: -14.283764839172363
    8. ')}' → logprob: -14.408764839172363
    9. '1' → logprob: -14.533764839172363
    10. '```' → logprob: -15.033764839172363

Token 310: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7002366185188293
    2. ' -' → logprob: -0.7002366185188293
    3. ')-' → logprob: -5.325236797332764
    4. ')' → logprob: -6.200236797332764
    5. '               ' → logprob: -10.200236320495605
    6. ' ' → logprob: -10.700236320495605
    7. '```' → logprob: -10.825236320495605
    8. '()-' → logprob: -10.950236320495605
    9. '}-' → logprob: -11.825236320495605
    10. 'd' → logprob: -11.950236320495605

Token 311: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006280870293267071
    2. ' ' → logprob: -7.3756279945373535
    3. '(' → logprob: -14.500628471374512
    4. ')' → logprob: -15.000628471374512
    5. '           ' → logprob: -15.250628471374512
    6. ' (' → logprob: -15.625628471374512
    7. '0' → logprob: -16.375627517700195
    8. '```' → logprob: -16.375627517700195
    9. '               ' → logprob: -17.563127517700195
    10. '                   ' → logprob: -17.563127517700195

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -18.250003814697266
    4. '0' → logprob: -18.875003814697266
    5. ')' → logprob: -19.687503814697266
    6. '(' → logprob: -20.187503814697266
    7. '<|end|>' → logprob: -20.687503814697266
    8. '۱' → logprob: -20.875003814697266
    9. '
' → logprob: -21.187503814697266
    10. '' → logprob: -21.375003814697266

Token 313: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.290534496307373
    2. '<<' → logprob: -1.540534496307373
    3. 'd' → logprob: -2.165534496307373
    4. '<|end|>' → logprob: -2.415534496307373
    5. '                               ' → logprob: -2.665534496307373
    6. '               ' → logprob: -2.915534496307373
    7. '                   ' → logprob: -3.540534496307373
    8. ' d' → logprob: -3.665534496307373
    9. '                           ' → logprob: -4.165534496307373
    10. ' <<=' → logprob: -4.290534496307373

Token 315: ' target' (ID: 3783)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3599753677845001
    2. ' d' → logprob: -1.3599753379821777
    3. 'idx' → logprob: -4.359975337982178
    4. ' idx' → logprob: -4.484975337982178
    5. 'shift' → logprob: -5.734975337982178
    6. 'i' → logprob: -6.484975337982178
    7. ' shift' → logprob: -6.609975337982178
    8. 'f' → logprob: -6.609975337982178
    9. '               ' → logprob: -6.734975337982178
    10. ' f' → logprob: -6.859975337982178

Token 316: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28202611207962036
    2. ' =' → logprob: -1.4070260524749756
    3. ']' → logprob: -8.282026290893555
    4. '[' → logprob: -9.282026290893555
    5. '[j' → logprob: -9.657026290893555
    6. ')' → logprob: -9.657026290893555
    7. '_idx' → logprob: -9.657026290893555
    8. '[i' → logprob: -10.407026290893555
    9. '_' → logprob: -10.657026290893555
    10. 'j' → logprob: -10.782026290893555

Token 317: ' (' (ID: 350)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.4973293542861938
    2. 'j' → logprob: -1.6223293542861938
    3. '(i' → logprob: -1.9973293542861938
    4. ' idx' → logprob: -2.2473292350769043
    5. 'i' → logprob: -2.4973292350769043
    6. '((' → logprob: -2.8723292350769043
    7. '(idx' → logprob: -3.2473292350769043
    8. ' (' → logprob: -3.3723292350769043
    9. '(j' → logprob: -3.6223292350769043
    10. ' j' → logprob: -3.6223292350769043

Token 318: 'j' (ID: 73)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.27208808064460754
    2. 'i' → logprob: -2.022088050842285
    3. 'j' → logprob: -3.397088050842285
    4. '(i' → logprob: -3.772088050842285
    5. 'k' → logprob: -3.897088050842285
    6. '(idx' → logprob: -4.147088050842285
    7. '(k' → logprob: -5.272088050842285
    8. '((' → logprob: -5.647088050842285
    9. '(' → logprob: -6.647088050842285
    10. '(j' → logprob: -6.772088050842285

Token 319: ' >>' (ID: 6832)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -1.0468552112579346
    2. '>>' → logprob: -1.4218552112579346
    3. ' >>' → logprob: -1.4218552112579346
    4. '&' → logprob: -1.9218552112579346
    5. ' ^' → logprob: -4.1718549728393555
    6. ')' → logprob: -6.2968549728393555
    7. '^' → logprob: -7.4218549728393555
    8. ' ' → logprob: -7.5468549728393555
    9. '<<' → logprob: -7.6718549728393555
    10. '>>(' → logprob: -8.171854972839355

Token 320: ' z' (ID: 579)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.05217713862657547
    2. '(z' → logprob: -3.1771771907806396
    3. 'r' → logprob: -5.5521769523620605
    4. ' (' → logprob: -5.6771769523620605
    5. '((' → logprob: -6.8021769523620605
    6. '(k' → logprob: -7.9271769523620605
    7. '(i' → logprob: -9.052177429199219
    8. '(j' → logprob: -9.302177429199219
    9. '(' → logprob: -9.677177429199219
    10. ' r' → logprob: -10.677177429199219

Token 321: ' <<' (ID: 2256)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013344056205824018
    2. ' )' → logprob: -7.251334190368652
    3. '<<' → logprob: -8.876334190368652
    4. '&' → logprob: -9.251334190368652
    5. '(r' → logprob: -9.376334190368652
    6. 'r' → logprob: -9.751334190368652
    7. '               ' → logprob: -10.376334190368652
    8. '+' → logprob: -10.501334190368652
    9. '|' → logprob: -10.501334190368652
    10. ')&' → logprob: -10.626334190368652

Token 322: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.40971991419792175
    2. '(r' → logprob: -1.2847199440002441
    3. '(z' → logprob: -3.034719944000244
    4. '(k' → logprob: -5.284719944000244
    5. '(i' → logprob: -5.784719944000244
    6. ' (' → logprob: -7.159719944000244
    7. 'k' → logprob: -7.534719944000244
    8. 'z' → logprob: -7.784719944000244
    9. '(K' → logprob: -7.909719944000244
    10. '(j' → logprob: -8.159719467163086

Token 323: 'z' (ID: 89)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6080698370933533
    2. '(z' → logprob: -0.8580698370933533
    3. '(r' → logprob: -3.608069896697998
    4. 'z' → logprob: -5.483069896697998
    5. '(' → logprob: -8.98306941986084
    6. ' (' → logprob: -9.35806941986084
    7. '(k' → logprob: -10.10806941986084
    8. ' r' → logprob: -10.73306941986084
    9. 'k' → logprob: -10.85806941986084
    10. 'mask' → logprob: -11.60806941986084

Token 324: ' -' (ID: 533)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.055859148502349854
    2. ')' → logprob: -2.930859088897705
    3. ' r' → logprob: -8.055859565734863
    4. '(r' → logprob: -8.680859565734863
    5. ' )' → logprob: -9.055859565734863
    6. ')+' → logprob: -9.430859565734863
    7. '+' → logprob: -9.680859565734863
    8. '```' → logprob: -9.930859565734863
    9. ' (' → logprob: -10.055859565734863
    10. '))' → logprob: -10.055859565734863

Token 325: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00035072024911642075
    2. ' r' → logprob: -8.000350952148438
    3. '(r' → logprob: -12.000350952148438
    4. 'mask' → logprob: -12.875350952148438
    5. '1' → logprob: -13.250350952148438
    6. '(' → logprob: -13.250350952148438
    7. ' (' → logprob: -13.875350952148438
    8. '
' → logprob: -15.000350952148438
    9. '```' → logprob: -15.125350952148438
    10. ' ' → logprob: -15.250350952148438

Token 326: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010020548506872728
    2. ' )' → logprob: -9.875100135803223
    3. '|' → logprob: -10.375100135803223
    4. '               ' → logprob: -12.000100135803223
    5. ')|' → logprob: -13.000100135803223
    6. ')+' → logprob: -13.125100135803223
    7. 'r' → logprob: -13.750100135803223
    8. '+' → logprob: -14.125100135803223
    9. '                   ' → logprob: -14.125100135803223
    10. ')
' → logprob: -14.250100135803223

Token 327: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.022247513756155968
    2. ' |' → logprob: -3.897247552871704
    3. '+' → logprob: -6.522247314453125
    4. ' +' → logprob: -8.772247314453125
    5. ')' → logprob: -10.147247314453125
    6. '^' → logprob: -11.272247314453125
    7. ' ^' → logprob: -12.397247314453125
    8. '|
' → logprob: -12.647247314453125
    9. '|(' → logprob: -12.772247314453125
    10. ' ' → logprob: -13.022247314453125

Token 328: ' (' (ID: 350)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.685939610004425
    2. '(j' → logprob: -1.1859395503997803
    3. '(mask' → logprob: -2.3109395503997803
    4. '(idx' → logprob: -3.1859395503997803
    5. '(k' → logprob: -3.3109395503997803
    6. ' (' → logprob: -5.810939788818359
    7. '(r' → logprob: -5.935939788818359
    8. '(m' → logprob: -6.185939788818359
    9. '(i' → logprob: -6.435939788818359
    10. 'mask' → logprob: -6.435939788818359

Token 329: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.21092991530895233
    2. '((' → logprob: -2.2109298706054688
    3. '(mask' → logprob: -4.085929870605469
    4. 'j' → logprob: -4.210929870605469
    5. '(idx' → logprob: -4.335929870605469
    6. 'mask' → logprob: -4.710929870605469
    7. 'r' → logprob: -4.710929870605469
    8. '(r' → logprob: -5.585929870605469
    9. '(m' → logprob: -5.710929870605469
    10. 'm' → logprob: -5.835929870605469

Token 330: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.14371831715106964
    2. ' &' → logprob: -2.0187182426452637
    3. '&m' → logprob: -7.518718242645264
    4. '>>' → logprob: -8.393718719482422
    5. '&r' → logprob: -8.518718719482422
    6. '&
' → logprob: -11.143718719482422
    7. '&p' → logprob: -11.268718719482422
    8. '<<' → logprob: -11.768718719482422
    9. '&t' → logprob: -12.018718719482422
    10. '&amp' → logprob: -12.268718719482422

Token 331: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.02835887484252453
    2. 'm' → logprob: -3.7783589363098145
    3. ' mask' → logprob: -6.1533589363098145
    4. '(mask' → logprob: -6.4033589363098145
    5. '((' → logprob: -6.7783589363098145
    6. '(m' → logprob: -9.153358459472656
    7. ' ((' → logprob: -10.028358459472656
    8. ' m' → logprob: -10.903358459472656
    9. '(' → logprob: -12.278358459472656
    10. ' (' → logprob: -12.403358459472656

Token 332: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009222590364515781
    2. '<|end|>' → logprob: -5.759222507476807
    3. ' )' → logprob: -5.884222507476807
    4. '|' → logprob: -6.009222507476807
    5. ' |' → logprob: -8.384222984313965
    6. ')
' → logprob: -8.384222984313965
    7. ')+' → logprob: -9.509222984313965
    8. '               ' → logprob: -10.134222984313965
    9. '+' → logprob: -10.509222984313965
    10. ')|' → logprob: -10.634222984313965

Token 333: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1562466621398926
    2. '               ' → logprob: -2.1562466621398926
    3. '<|end|>' → logprob: -2.2812466621398926
    4. ' d' → logprob: -2.4062466621398926
    5. ')' → logprob: -2.6562466621398926
    6. '                               ' → logprob: -2.9062466621398926
    7. 'd' → logprob: -3.0312466621398926
    8. '+' → logprob: -3.0312466621398926
    9. '                   ' → logprob: -3.2812466621398926
    10. '                           ' → logprob: -3.5312466621398926

Token 334: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.10044712573289871
    2. ' d' → logprob: -2.350447177886963
    3. '+' → logprob: -8.725446701049805
    4. '                   ' → logprob: -11.100446701049805
    5. ' ' → logprob: -11.850446701049805
    6. '               ' → logprob: -12.350446701049805
    7. '+=' → logprob: -12.475446701049805
    8. '```' → logprob: -12.600446701049805
    9. '           ' → logprob: -12.850446701049805
    10. 'I' → logprob: -12.975446701049805

Token 335: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006282062386162579
    2. '[k' → logprob: -7.6256279945373535
    3. '[target' → logprob: -9.375628471374512
    4. '[' → logprob: -10.375628471374512
    5. 'i' → logprob: -10.875628471374512
    6. '[I' → logprob: -13.500628471374512
    7. '```' → logprob: -14.125628471374512
    8. '[j' → logprob: -15.000628471374512
    9. ' [' → logprob: -15.125628471374512
    10. '[s' → logprob: -15.250628471374512

Token 336: ' -' (ID: 533)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.026187308132648468
    2. '[j' → logprob: -4.276187419891357
    3. '[target' → logprob: -4.901187419891357
    4. '[' → logprob: -5.901187419891357
    5. ')[' → logprob: -7.026187419891357
    6. ']' → logprob: -8.4011869430542
    7. '[k' → logprob: -8.5261869430542
    8. ' ][' → logprob: -8.7761869430542
    9. '[idx' → logprob: -8.9011869430542
    10. '```' → logprob: -10.6511869430542

Token 337: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5754368305206299
    2. 'z' → logprob: -1.3254368305206299
    3. 'i' → logprob: -1.9504368305206299
    4. '1' → logprob: -4.325436592102051
    5. ' r' → logprob: -5.075436592102051
    6. ' z' → logprob: -5.200436592102051
    7. ' i' → logprob: -5.575436592102051
    8. 'k' → logprob: -7.700436592102051
    9. ' ' → logprob: -8.70043659210205
    10. 'j' → logprob: -9.20043659210205

Token 338: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013814250705763698
    2. ']' → logprob: -7.1263813972473145
    3. '[target' → logprob: -8.251381874084473
    4. '[' → logprob: -8.501381874084473
    5. ' ][' → logprob: -10.126381874084473
    6. '[j' → logprob: -10.626381874084473
    7. '[idx' → logprob: -10.751381874084473
    8. ''][' → logprob: -12.501381874084473
    9. ']][' → logprob: -12.876381874084473
    10. ')[' → logprob: -13.001381874084473

Token 339: 'target' (ID: 10857)
  Prédit: 'target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -9.460291767027229e-05
    2. ' target' → logprob: -9.625094413757324
    3. 'j' → logprob: -11.000094413757324
    4. '
' → logprob: -12.625094413757324
    5. '(target' → logprob: -13.000094413757324
    6. 'idx' → logprob: -13.125094413757324
    7. '   ' → logprob: -14.000094413757324
    8. '[target' → logprob: -14.125094413757324
    9. 'index' → logprob: -14.250094413757324
    10. '	target' → logprob: -14.625094413757324

Token 340: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8410601615905762
    2. ']+=' → logprob: -1.0910601615905762
    3. ' +=' → logprob: -1.8410601615905762
    4. '+=' → logprob: -2.716060161590576
    5. ' ]' → logprob: -5.466060161590576
    6. '+' → logprob: -5.841060161590576
    7. ']+' → logprob: -7.341060161590576
    8. '+]' → logprob: -8.716060638427734
    9. ')' → logprob: -9.591060638427734
    10. '[' → logprob: -10.466060638427734

Token 341: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0020479592494666576
    2. ' +=' → logprob: -6.252048015594482
    3. ']+=' → logprob: -9.752047538757324
    4. '=' → logprob: -10.877047538757324
    5. '-=' → logprob: -11.002047538757324
    6. '+' → logprob: -11.002047538757324
    7. '>' → logprob: -13.127047538757324
    8. '[' → logprob: -13.752047538757324
    9. '+=(' → logprob: -13.877047538757324
    10. '<' → logprob: -13.877047538757324

Token 342: ' dj' (ID: 43267)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.0012716623023152351
    2. ' dj' → logprob: -7.126271724700928
    3. 'd' → logprob: -8.12627124786377
    4. '1' → logprob: -8.75127124786377
    5. ' ' → logprob: -12.75127124786377
    6. '   ' → logprob: -13.50127124786377
    7. '           ' → logprob: -14.25127124786377
    8. 'dk' → logprob: -14.25127124786377
    9. '                   ' → logprob: -14.37627124786377
    10. ' d' → logprob: -14.37627124786377

Token 343: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 346: ' Early' (ID: 34533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 347: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -1.0651155710220337
    2. 'break' → logprob: -1.5651155710220337
    3. ' continue' → logprob: -1.8151155710220337
    4. 'continue' → logprob: -1.9401155710220337
    5. '   ' → logprob: -3.315115451812744
    6. ' stopping' → logprob: -3.440115451812744
    7. ' ' → logprob: -4.065115451812744
    8. 'stop' → logprob: -4.815115451812744
    9. ' return' → logprob: -5.190115451812744
    10. '    ' → logprob: -5.190115451812744

Token 348: ' with' (ID: 483)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3237788677215576
    2. 'if' → logprob: -1.3237788677215576
    3. '   ' → logprob: -4.573779106140137
    4. '
' → logprob: -9.573779106140137
    5. ' ' → logprob: -10.698779106140137
    6. 'break' → logprob: -11.448779106140137
    7. '       ' → logprob: -11.948779106140137
    8. ' break' → logprob: -12.073779106140137
    9. '<|end|>' → logprob: -12.198779106140137
    10. ' 
' → logprob: -12.323779106140137

Token 349: ' wal' (ID: 17995)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.15337373316287994
    2. ' K' → logprob: -2.2783737182617188
    3. 'i' → logprob: -3.9033737182617188
    4. 'd' → logprob: -5.028373718261719
    5. ' i' → logprob: -5.278373718261719
    6. ' d' → logprob: -6.403373718261719
    7. 'k' → logprob: -6.403373718261719
    8. 'if' → logprob: -6.903373718261719
    9. 'break' → logprob: -7.278373718261719
    10. 'I' → logprob: -7.528373718261719

Token 350: 'rus' (ID: 28116)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2576640248298645
    2. 'k' → logprob: -1.5076639652252197
    3. 'break' → logprob: -5.507664203643799
    4. 'r' → logprob: -7.757664203643799
    5. 'f' → logprob: -8.13266372680664
    6. 'b' → logprob: -8.38266372680664
    7. 'd' → logprob: -8.50766372680664
    8. 'king' → logprob: -9.13266372680664
    9. 'lf' → logprob: -9.38266372680664
    10. 't' → logprob: -9.38266372680664

Token 351: ' where' (ID: 1919)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3695887327194214
    2. ' if' → logprob: -1.2445887327194214
    3. ' (' → logprob: -4.619588851928711
    4. '(n' → logprob: -5.994588851928711
    5. '(if' → logprob: -6.494588851928711
    6. ':=' → logprob: -6.744588851928711
    7. '((' → logprob: -6.994588851928711
    8. '(i' → logprob: -7.619588851928711
    9. '(' → logprob: -7.869588851928711
    10. ' n' → logprob: -7.994588851928711

Token 352: ' possible' (ID: 4149)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.8436834812164307
    2. '(i' → logprob: -2.2186834812164307
    3. '(j' → logprob: -2.2186834812164307
    4. '(d' → logprob: -2.3436834812164307
    5. '(line' → logprob: -2.3436834812164307
    6. '(b' → logprob: -2.9686834812164307
    7. '(m' → logprob: -3.0936834812164307
    8. '(n' → logprob: -3.2186834812164307
    9. '(found' → logprob: -3.5936834812164307
    10. '(len' → logprob: -3.9686834812164307

Token 353: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07952778041362762
    2. ' if' → logprob: -2.5795278549194336
    3. '   ' → logprob: -8.079527854919434
    4. '
' → logprob: -8.579527854919434
    5. '```' → logprob: -8.954527854919434
    6. 'for' → logprob: -12.454527854919434
    7. 'while' → logprob: -13.829527854919434
    8. ' for' → logprob: -13.954527854919434
    9. 'break' → logprob: -14.454527854919434
    10. '`' → logprob: -14.704527854919434

Token 354: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.286886602640152
    2. ' if' → logprob: -1.5368865728378296
    3. '   ' → logprob: -4.161886692047119
    4. 'for' → logprob: -5.036886692047119
    5. '```' → logprob: -5.286886692047119
    6. ' for' → logprob: -5.661886692047119
    7. 'break' → logprob: -7.286886692047119
    8. 'val' → logprob: -7.286886692047119
    9. 'while' → logprob: -7.411886692047119
    10. '
' → logprob: -8.161886215209961

Token 355: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07762902975082397
    2. ' if' → logprob: -3.0776290893554688
    3. 'val' → logprob: -4.702629089355469
    4. 'found' → logprob: -5.577629089355469
    5. 'break' → logprob: -5.702629089355469
    6. 'res' → logprob: -5.952629089355469
    7. 'total' → logprob: -6.577629089355469
    8. '   ' → logprob: -6.702629089355469
    9. 'max' → logprob: -7.327629089355469
    10. 'count' → logprob: -7.702629089355469

Token 356: ' j' (ID: 441)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.047792159020900726
    2. 'j' → logprob: -3.1727921962738037
    3. ' k' → logprob: -6.422791957855225
    4. 'x' → logprob: -6.672791957855225
    5. 'K' → logprob: -6.797791957855225
    6. ' j' → logprob: -8.172792434692383
    7. 'i' → logprob: -9.172792434692383
    8. '_k' → logprob: -9.797792434692383
    9. 'J' → logprob: -9.922792434692383
    10. 'idx' → logprob: -10.422792434692383

Token 357: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07242312282323837
    2. ' in' → logprob: -2.822423219680786
    3. ',' → logprob: -4.572422981262207
    4. ' ,' → logprob: -10.322422981262207
    5. ' ' → logprob: -11.322422981262207
    6. '   ' → logprob: -12.072422981262207
    7. ')' → logprob: -12.447422981262207
    8. 'n' → logprob: -12.697422981262207
    9. '```' → logprob: -12.697422981262207
    10. '0' → logprob: -13.697422981262207

Token 358: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.021848121657967567
    2. ' range' → logprob: -3.896848201751709
    3. 'Q' → logprob: -7.271848201751709
    4. 'd' → logprob: -8.52184772491455
    5. 'bit' → logprob: -8.89684772491455
    6. '1' → logprob: -9.39684772491455
    7. '0' → logprob: -9.89684772491455
    8. ' Q' → logprob: -10.52184772491455
    9. '(' → logprob: -10.64684772491455
    10. 'in' → logprob: -10.64684772491455

Token 359: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08147459477186203
    2. '(bit' → logprob: -2.706474542617798
    3. '((' → logprob: -5.456474781036377
    4. '1' → logprob: -6.081474781036377
    5. '(N' → logprob: -6.456474781036377
    6. '(len' → logprob: -7.081474781036377
    7. '(I' → logprob: -7.206474781036377
    8. '(d' → logprob: -7.831474781036377
    9. '(i' → logprob: -7.831474781036377
    10. 'bit' → logprob: -8.581474304199219

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30039677023887634
    2. '(' → logprob: -1.9253968000411987
    3. 'bit' → logprob: -2.800396680831909
    4. 'N' → logprob: -3.550396680831909
    5. 'i' → logprob: -4.925396919250488
    6. '(bit' → logprob: -4.925396919250488
    7. '(i' → logprob: -5.425396919250488
    8. '(N' → logprob: -6.050396919250488
    9. 'len' → logprob: -7.300396919250488
    10. 'd' → logprob: -7.425396919250488

Token 361: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.4957088828086853
    2. ' <<' → logprob: -1.12070894241333
    3. ' ' → logprob: -3.62070894241333
    4. '(i' → logprob: -4.49570894241333
    5. ',' → logprob: -4.62070894241333
    6. '   ' → logprob: -4.74570894241333
    7. '(' → logprob: -5.74570894241333
    8. '  ' → logprob: -6.74570894241333
    9. 'i' → logprob: -7.12070894241333
    10. ' (' → logprob: -7.49570894241333

Token 362: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.022550133988261223
    2. '(i' → logprob: -4.397550106048584
    3. 'N' → logprob: -4.897550106048584
    4. '(N' → logprob: -6.147550106048584
    5. '(' → logprob: -9.397550582885742
    6. ' i' → logprob: -9.522550582885742
    7. 'K' → logprob: -9.772550582885742
    8. '   ' → logprob: -10.022550582885742
    9. 'Q' → logprob: -10.272550582885742
    10. ' (' → logprob: -10.272550582885742

Token 363: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008937290869653225
    2. '):' → logprob: -4.758937358856201
    3. '   ' → logprob: -8.633936882019043
    4. '):
' → logprob: -9.508936882019043
    5. ':' → logprob: -10.883936882019043
    6. '       ' → logprob: -11.008936882019043
    7. '():
' → logprob: -11.383936882019043
    8. ':
' → logprob: -12.258936882019043
    9. '()):
' → logprob: -12.633936882019043
    10. ' ):
' → logprob: -12.758936882019043

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5592119693756104
    2. 'if' → logprob: -0.9342119693756104
    3. ' if' → logprob: -3.8092119693756104
    4. '   ' → logprob: -5.309211730957031
    5. '```' → logprob: -5.309211730957031
    6. 'val' → logprob: -6.934211730957031
    7. '           ' → logprob: -8.184211730957031
    8. 'value' → logprob: -8.434211730957031
    9. 'd' → logprob: -8.809211730957031
    10. '(val' → logprob: -8.934211730957031

Token 365: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.26948627829551697
    2. ' if' → logprob: -2.64448618888855
    3. '       ' → logprob: -2.64448618888855
    4. 'val' → logprob: -3.14448618888855
    5. 's' → logprob: -4.269486427307129
    6. '           ' → logprob: -5.019486427307129
    7. 'v' → logprob: -5.144486427307129
    8. ' val' → logprob: -5.269486427307129
    9. 'x' → logprob: -5.769486427307129
    10. 'total' → logprob: -6.144486427307129

Token 366: ' d' (ID: 272)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.10566628724336624
    2. ' (' → logprob: -3.105666399002075
    3. 'd' → logprob: -4.480666160583496
    4. '(val' → logprob: -4.855666160583496
    5. '(f' → logprob: -4.980666160583496
    6. '(not' → logprob: -5.730666160583496
    7. '(v' → logprob: -5.980666160583496
    8. '(x' → logprob: -6.105666160583496
    9. '(tmp' → logprob: -6.230666160583496
    10. '   ' → logprob: -6.480666160583496

Token 367: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.070975071750581e-05
    2. 'i' → logprob: -11.375030517578125
    3. '[j' → logprob: -11.375030517578125
    4. ' [' → logprob: -12.750030517578125
    5. '[I' → logprob: -13.375030517578125
    6. '   ' → logprob: -13.875030517578125
    7. '[' → logprob: -14.250030517578125
    8. ' ' → logprob: -14.625030517578125
    9. '[k' → logprob: -14.875030517578125
    10. '```' → logprob: -15.375030517578125

Token 368: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0012208210537210107
    2. '[i' → logprob: -7.251220703125
    3. '][' → logprob: -8.251220703125
    4. '[' → logprob: -9.251220703125
    5. ')[' → logprob: -9.501220703125
    6. ' [' → logprob: -11.126220703125
    7. '[I' → logprob: -11.501220703125
    8. '```' → logprob: -11.751220703125
    9. '   ' → logprob: -11.876220703125
    10. '
' → logprob: -12.001220703125

Token 369: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.028536492725834e-05
    2. '[j' → logprob: -10.125070571899414
    3. ' j' → logprob: -10.500070571899414
    4. '   ' → logprob: -14.500070571899414
    5. '```' → logprob: -14.625070571899414
    6. '
' → logprob: -14.750070571899414
    7. ']' → logprob: -14.750070571899414
    8. '	j' → logprob: -15.500070571899414
    9. '][' → logprob: -15.750070571899414
    10. '       ' → logprob: -15.875070571899414

Token 370: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05211716517806053
    2. ']>' → logprob: -3.927117109298706
    3. ']>=' → logprob: -3.927117109298706
    4. ']+=' → logprob: -5.802117347717285
    5. '>' → logprob: -6.177117347717285
    6. ']!=' → logprob: -6.302117347717285
    7. ']==' → logprob: -6.677117347717285
    8. ' ]' → logprob: -6.927117347717285
    9. ':=' → logprob: -7.302117347717285
    10. ' :=' → logprob: -8.302117347717285

Token 371: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8964486718177795
    2. '==' → logprob: -1.1464486122131348
    3. '!=' → logprob: -2.0214486122131348
    4. '=' → logprob: -3.2714486122131348
    5. ':=' → logprob: -3.3964486122131348
    6. '>=' → logprob: -3.7714486122131348
    7. ' ==' → logprob: -3.8964486122131348
    8. ' >' → logprob: -4.646448612213135
    9. ' !=' → logprob: -5.146448612213135
    10. ':' → logprob: -6.146448612213135

Token 372: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0019294669618830085
    2. ' K' → logprob: -6.25192928314209
    3. '   ' → logprob: -15.00192928314209
    4. '       ' → logprob: -15.50192928314209
    5. '           ' → logprob: -15.75192928314209
    6. ' ' → logprob: -16.251930236816406
    7. '    ' → logprob: -17.376930236816406
    8. '	K' → logprob: -17.626930236816406
    9. '               ' → logprob: -18.251930236816406
    10. 'Q' → logprob: -18.626930236816406

Token 373: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0921311005949974
    2. ':
' → logprob: -2.4671311378479004
    3. '           ' → logprob: -6.5921311378479
    4. '       ' → logprob: -6.8421311378479
    5. ':return' → logprob: -7.5921311378479
    6. ' :' → logprob: -9.717130661010742
    7. ' and' → logprob: -10.217130661010742
    8. '):' → logprob: -10.217130661010742
    9. '):
' → logprob: -10.967130661010742
    10. '          ' → logprob: -11.092130661010742

Token 374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08188053965568542
    2. ':' → logprob: -2.706880569458008
    3. ':
' → logprob: -5.081880569458008
    4. '       ' → logprob: -6.456880569458008
    5. ' :' → logprob: -6.831880569458008
    6. '```' → logprob: -6.956880569458008
    7. 'break' → logprob: -7.706880569458008
    8. '():' → logprob: -7.956880569458008
    9. ' break' → logprob: -8.206880569458008
    10. '               ' → logprob: -8.706880569458008

Token 375: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' (adapté à ' I') → logprob: -0.0562153160572052
    2. 'J' → logprob: -3.431215286254883
    3. 'print' → logprob: -3.931215286254883
    4. ' I' → logprob: -6.306215286254883
    5. 'break' → logprob: -8.431215286254883
    6. '(I' → logprob: -8.681215286254883
    7. '   ' → logprob: -8.931215286254883
    8. ' J' → logprob: -9.306215286254883
    9. '       ' → logprob: -9.556215286254883
    10. ' print' → logprob: -10.056215286254883

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38934919238090515
    2. '=' → logprob: -1.1393492221832275
    3. ' =' → logprob: -6.139348983764648
    4. ',j' → logprob: -8.764348983764648
    5. ',J' → logprob: -8.889348983764648
    6. '=j' → logprob: -11.389348983764648
    7. ' ,' → logprob: -11.889348983764648
    8. 'J' → logprob: -13.139348983764648
    9. '+=' → logprob: -14.139348983764648
    10. ',K' → logprob: -14.139348983764648

Token 377: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.014256702736020088
    2. ' J' → logprob: -4.264256477355957
    3. 'i' → logprob: -9.389256477355957
    4. ' i' → logprob: -12.139256477355957
    5. 'j' → logprob: -12.514256477355957
    6. ' ' → logprob: -15.264256477355957
    7. ' j' → logprob: -15.889256477355957
    8. 'I' → logprob: -16.764257431030273
    9. ' =' → logprob: -16.764257431030273
    10. '   ' → logprob: -17.139257431030273

Token 378: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013546408154070377
    2. ' =' → logprob: -6.626354694366455
    3. '=i' → logprob: -10.751354217529297
    4. '=j' → logprob: -11.876354217529297
    5. ',' → logprob: -15.876354217529297
    6. '=(' → logprob: -16.126354217529297
    7. '=
' → logprob: -16.626354217529297
    8. '=}' → logprob: -16.876354217529297
    9. '=k' → logprob: -17.501354217529297
    10. '=n' → logprob: -18.001354217529297

Token 379: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031910240650177
    2. ' i' → logprob: -5.753190994262695
    3. '(i' → logprob: -11.503190994262695
    4. '   ' → logprob: -13.628190994262695
    5. 'I' → logprob: -14.878190994262695
    6. ' ' → logprob: -15.003190994262695
    7. ' (' → logprob: -15.128190994262695
    8. '
' → logprob: -15.253190994262695
    9. '{i' → logprob: -16.128190994262695
    10. '	i' → logprob: -16.253190994262695

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008810154162347317
    2. ',j' → logprob: -4.883810043334961
    3. ' ,' → logprob: -6.758810043334961
    4. ' j' → logprob: -10.758810043334961
    5. ',
' → logprob: -12.008810043334961
    6. '       ' → logprob: -12.633810043334961
    7. ',J' → logprob: -12.758810043334961
    8. 'j' → logprob: -12.883810043334961
    9. '           ' → logprob: -13.633810043334961
    10. '
' → logprob: -13.758810043334961

Token 381: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002477200934663415
    2. ' j' → logprob: -6.002477169036865
    3. '   ' → logprob: -13.627477645874023
    4. '    ' → logprob: -16.127477645874023
    5. ' ' → logprob: -16.252477645874023
    6. '  ' → logprob: -17.002477645874023
    7. '	j' → logprob: -17.127477645874023
    8. ' ' → logprob: -17.377477645874023
    9. '       ' → logprob: -17.502477645874023
    10. '     ' → logprob: -19.002477645874023

Token 382: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004749915096908808
    2. '<|end|>' → logprob: -6.379749774932861
    3. '
' → logprob: -6.879749774932861
    4. '       ' → logprob: -7.879749774932861
    5. '               ' → logprob: -8.12975025177002
    6. '            
' → logprob: -8.50475025177002
    7. '		' → logprob: -8.50475025177002
    8. '   ' → logprob: -9.12975025177002
    9. ',' → logprob: -9.12975025177002
    10. 'break' → logprob: -9.37975025177002

Token 383: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021855637896806002
    2. '       ' → logprob: -9.375218391418457
    3. '               ' → logprob: -10.250218391418457
    4. '		' → logprob: -10.875218391418457
    5. 'break' → logprob: -11.000218391418457
    6. '   ' → logprob: -11.125218391418457
    7. '```' → logprob: -11.500218391418457
    8. '                           ' → logprob: -11.500218391418457
    9. '<|end|>' → logprob: -11.750218391418457
    10. '                   ' → logprob: -12.000218391418457

Token 384: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.005298977252095938
    2. '           ' → logprob: -5.255299091339111
    3. ' break' → logprob: -10.630298614501953
    4. '       ' → logprob: -10.630298614501953
    5. '               ' → logprob: -11.755298614501953
    6. 'return' → logprob: -13.380298614501953
    7. '   ' → logprob: -13.380298614501953
    8. '_break' → logprob: -13.755298614501953
    9. 'print' → logprob: -14.005298614501953
    10. '	break' → logprob: -14.005298614501953

Token 385: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38936516642570496
    2. 'else' → logprob: -2.1393651962280273
    3. '   ' → logprob: -2.8893651962280273
    4. '       ' → logprob: -3.2643651962280273
    5. 'print' → logprob: -3.6393651962280273
    6. '<|end|>' → logprob: -3.7643651962280273
    7. '           ' → logprob: -3.8893651962280273
    8. ' if' → logprob: -4.014365196228027
    9. ' ' → logprob: -5.264365196228027
    10. '```' → logprob: -5.389365196228027

Token 386: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.739980161190033
    2. 'else' → logprob: -0.864980161190033
    3. 'print' → logprob: -2.6149802207946777
    4. '<|end|>' → logprob: -4.364980220794678
    5. '   ' → logprob: -5.489980220794678
    6. '       ' → logprob: -6.114980220794678
    7. '```' → logprob: -6.114980220794678
    8. ' else' → logprob: -6.489980220794678
    9. ' if' → logprob: -6.614980220794678
    10. '...' → logprob: -6.739980220794678

Token 388: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.26549288630485535
    2. ' I' → logprob: -1.5154929161071777
    3. '(I' → logprob: -4.390492916107178
    4. ' (' → logprob: -7.015492916107178
    5. ' d' → logprob: -9.76549243927002
    6. ' ' → logprob: -10.01549243927002
    7. '(' → logprob: -10.64049243927002
    8. 'd' → logprob: -10.64049243927002
    9. '   ' → logprob: -11.51549243927002
    10. ' not' → logprob: -11.76549243927002

Token 389: ':' (ID: 25)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4325961172580719
    2. '==' → logprob: -1.3075960874557495
    3. ' >=' → logprob: -2.807596206665039
    4. '>=' → logprob: -4.057596206665039
    5. ' and' → logprob: -6.432596206665039
    6. ' !=' → logprob: -7.557596206665039
    7. '!=' → logprob: -8.432596206665039
    8. '   ' → logprob: -8.557596206665039
    9. '>' → logprob: -8.682596206665039
    10. ' >' → logprob: -9.307596206665039

Token 390: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004170873435214162
    2. '   ' → logprob: -8.00041675567627
    3. '           ' → logprob: -10.12541675567627
    4. '	' → logprob: -11.25041675567627
    5. ' break' → logprob: -11.50041675567627
    6. 'break' → logprob: -12.00041675567627
    7. '	break' → logprob: -13.00041675567627
    8. '	   ' → logprob: -13.00041675567627
    9. '    ' → logprob: -13.62541675567627
    10. '      ' → logprob: -13.75041675567627

Token 391: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11559542268514633
    2. '<|end|>' → logprob: -3.1155953407287598
    3. '
' → logprob: -3.9905953407287598
    4. '#' → logprob: -4.49059534072876
    5. ')' → logprob: -4.61559534072876
    6. 'if' → logprob: -4.86559534072876
    7. '(' → logprob: -5.49059534072876
    8. '```' → logprob: -5.61559534072876
    9. 'I' → logprob: -5.99059534072876
    10. 'return' → logprob: -6.36559534072876

Token 392: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0031373165547847748
    2. 'if' → logprob: -6.503137111663818
    3. 'return' → logprob: -6.878137111663818
    4. 'for' → logprob: -8.628137588500977
    5. '```' → logprob: -8.878137588500977
    6. '
' → logprob: -9.503137588500977
    7. '#' → logprob: -10.128137588500977
    8. 'I' → logprob: -10.253137588500977
    9. 'result' → logprob: -10.878137588500977
    10. 'pr' → logprob: -11.003137588500977

Token 393: '(bin' (ID: 117327)
  Prédit: '(I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(I' → logprob: -6.706686690449715e-05
    2. '(f' → logprob: -10.000066757202148
    3. 'I' → logprob: -11.375066757202148
    4. '(' → logprob: -11.750066757202148
    5. '((' → logprob: -13.625066757202148
    6. '()' → logprob: -14.625066757202148
    7. 'f' → logprob: -15.375066757202148
    8. '(i' → logprob: -15.750066757202148
    9. '(*' → logprob: -16.87506675720215
    10. ' (' → logprob: -17.00006675720215

Token 394: '(J' (ID: 25268)
  Prédit: '(J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(J' → logprob: -0.021115267649292946
    2. '(I' → logprob: -3.896115303039551
    3. '(' → logprob: -8.02111530303955
    4. '(j' → logprob: -8.77111530303955
    5. '[J' → logprob: -10.14611530303955
    6. ')' → logprob: -11.02111530303955
    7. '(d' → logprob: -11.64611530303955
    8. '((' → logprob: -12.02111530303955
    9. ')(' → logprob: -12.52111530303955
    10. 'J' → logprob: -12.52111530303955

Token 395: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.03553150221705437
    2. '())[' → logprob: -4.160531520843506
    3. '()[' → logprob: -4.285531520843506
    4. '))' → logprob: -6.285531520843506
    5. '[I' → logprob: -6.535531520843506
    6. '[J' → logprob: -7.660531520843506
    7. '()))' → logprob: -7.785531520843506
    8. ')' → logprob: -7.785531520843506
    9. '[' → logprob: -8.160531044006348
    10. '())' → logprob: -8.160531044006348

Token 396: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2574025094509125
    2. 'I' → logprob: -1.5074025392532349
    3. 'i' → logprob: -6.382402420043945
    4. ':I' → logprob: -6.757402420043945
    5. '(I' → logprob: -7.132402420043945
    6. ':' → logprob: -7.257402420043945
    7. '[I' → logprob: -8.007402420043945
    8. ':i' → logprob: -9.007402420043945
    9. ')[' → logprob: -9.007402420043945
    10. '][' → logprob: -9.132402420043945

Token 397: ':].' (ID: 193388)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.08737179636955261
    2. ':].' → logprob: -2.587371826171875
    3. '())' → logprob: -5.462371826171875
    4. '()' → logprob: -6.837371826171875
    5. '():' → logprob: -7.212371826171875
    6. '(I' → logprob: -7.337371826171875
    7. '()).' → logprob: -7.962371826171875
    8. ':)' → logprob: -8.337371826171875
    9. '(),' → logprob: -8.837371826171875
    10. ':' → logprob: -8.837371826171875

Token 398: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00048238897579722106
    2. 'r' → logprob: -7.875482559204102
    3. '```' → logprob: -9.750482559204102
    4. '.z' → logprob: -10.250482559204102
    5. ' z' → logprob: -12.000482559204102
    6. 'fill' → logprob: -14.625482559204102
    7. 'rstrip' → logprob: -15.000482559204102
    8. ').' → logprob: -15.000482559204102
    9. ')' → logprob: -15.250482559204102
    10. '
' → logprob: -15.375482559204102

Token 399: 'fill' (ID: 12413)
  Prédit: 'fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -8.53050296427682e-05
    2. 'filled' → logprob: -9.50008487701416
    3. 'pad' → logprob: -12.12508487701416
    4. 'strip' → logprob: -13.37508487701416
    5. '_fill' → logprob: -14.25008487701416
    6. '-fill' → logprob: -14.50008487701416
    7. '```' → logprob: -14.50008487701416
    8. 'ip' → logprob: -14.75008487701416
    9. '(fill' → logprob: -15.37508487701416
    10. 'f' → logprob: -15.37508487701416

Token 400: '(I' (ID: 16705)
  Prédit: '(I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(I' → logprob: -0.001178916310891509
    2. 'I' → logprob: -7.376178741455078
    3. '(N' → logprob: -7.626178741455078
    4. 'N' → logprob: -10.376178741455078
    5. '(i' → logprob: -10.376178741455078
    6. '(' → logprob: -13.501178741455078
    7. '((' → logprob: -14.501178741455078
    8. '```' → logprob: -15.501178741455078
    9. '[I' → logprob: -16.251178741455078
    10. '(
' → logprob: -16.501178741455078

Token 401: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001807864406146109
    2. ')' → logprob: -6.376807689666748
    3. '()))' → logprob: -10.001808166503906
    4. '))
' → logprob: -10.126808166503906
    5. ' ))' → logprob: -11.876808166503906
    6. ')))' → logprob: -12.126808166503906
    7. '),' → logprob: -13.376808166503906
    8. ''))' → logprob: -13.626808166503906
    9. '+' → logprob: -13.876808166503906
    10. ')
' → logprob: -14.501808166503906

Token 402: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015142656629905105
    2. '))' → logprob: -6.501514434814453
    3. ')))' → logprob: -12.001514434814453
    4. ')`' → logprob: -13.501514434814453
    5. '`)' → logprob: -14.001514434814453
    6. '())' → logprob: -14.376514434814453
    7. '[' → logprob: -14.501514434814453
    8. '')' → logprob: -14.751514434814453
    9. '])' → logprob: -15.126514434814453
    10. ')
' → logprob: -15.376514434814453

Token 403: ' (' (ID: 350)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -6.623244553338736e-05
    2. ' I' → logprob: -9.625065803527832
    3. 'not' → logprob: -16.50006675720215
    4. ' ' → logprob: -18.00006675720215
    5. '(I' → logprob: -18.75006675720215
    6. 'i' → logprob: -19.00006675720215
    7. ' not' → logprob: -19.12506675720215
    8. '_I' → logprob: -19.12506675720215
    9. 'print' → logprob: -19.62506675720215
    10. '	I' → logprob: -19.75006675720215

Token 404: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.00023488728038500994
    2. ' I' → logprob: -8.375234603881836
    3. ' ' → logprob: -13.875234603881836
    4. 'i' → logprob: -14.000234603881836
    5. 'J' → logprob: -14.500234603881836
    6. '   ' → logprob: -14.875234603881836
    7. '(I' → logprob: -15.000234603881836
    8. 'not' → logprob: -15.125234603881836
    9. 'K' → logprob: -15.375234603881836
    10. ')' → logprob: -15.500234603881836

Token 405: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.874951958656311
    2. ')' → logprob: -1.124951958656311
    3. 'and' → logprob: -1.624951958656311
    4. '>' → logprob: -3.2499518394470215
    5. ')>' → logprob: -3.9999518394470215
    6. ' >' → logprob: -5.9999518394470215
    7. ' )' → logprob: -6.9999518394470215
    8. '!=' → logprob: -7.3749518394470215
    9. ' else' → logprob: -8.87495231628418
    10. ' !=' → logprob: -9.12495231628418

Token 406: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.005583894904702902
    2. 'K' → logprob: -5.630583763122559
    3. ' J' → logprob: -6.255583763122559
    4. '   ' → logprob: -11.505583763122559
    5. ' ' → logprob: -11.630583763122559
    6. ' K' → logprob: -11.880583763122559
    7. 'True' → logprob: -11.880583763122559
    8. 'not' → logprob: -12.130583763122559
    9. '  ' → logprob: -12.255583763122559
    10. 'print' → logprob: -12.380583763122559

Token 407: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011093381908722222
    2. ' )' → logprob: -9.750110626220703
    3. ')!=' → logprob: -10.875110626220703
    4. ' else' → logprob: -10.875110626220703
    5. 'else' → logprob: -12.250110626220703
    6. ')>' → logprob: -12.375110626220703
    7. '))' → logprob: -12.375110626220703
    8. ')==' → logprob: -14.875110626220703
    9. 'and' → logprob: -15.125110626220703
    10. ')
' → logprob: -15.875110626220703

Token 408: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5651659369468689
    2. ' else' → logprob: -1.3151659965515137
    3. 'else' → logprob: -1.8151659965515137
    4. ' )' → logprob: -7.940165996551514
    5. '==' → logprob: -9.815165519714355
    6. '!=' → logprob: -9.815165519714355
    7. 'and' → logprob: -12.065165519714355
    8. '>' → logprob: -12.065165519714355
    9. '))' → logprob: -12.190165519714355
    10. ')!=' → logprob: -13.315165519714355

Token 409: ' '')' (ID: 25755)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0641751289367676
    2. '-' → logprob: -1.0641751289367676
    3. ''-' → logprob: -2.0641751289367676
    4. '"' → logprob: -2.4391751289367676
    5. '0' → logprob: -2.5641751289367676
    6. '"-' → logprob: -4.064175128936768
    7. ' ' → logprob: -8.43917465209961
    8. ' '' → logprob: -8.56417465209961
    9. ' -' → logprob: -8.93917465209961
    10. ''N' → logprob: -9.06417465209961


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 407
Tokens correctement prédits (1ère position, stricte): 115
Tokens correctement prédits (1ère position, avec adaptation): 124
Tokens correctement prédits (top 10): 308
Précision stricte (1ère position): 28.26%
Précision adaptée (1ère position): 30.47%
Précision (top 10): 75.68%
================================================================================
