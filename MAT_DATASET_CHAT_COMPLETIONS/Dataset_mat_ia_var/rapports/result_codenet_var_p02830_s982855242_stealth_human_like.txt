================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s, t = input().split()
# Bon, on va mélanger les deux chaînes...

mix = ''
for index in range(n):
    # Ouais, on ajoute un caractère de chaque, ça devrait marcher...
    mix = mix + s[index] + t[index]

print(mix)
# Voilà, c'est fait, normalement c'est ça.
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '("("' → logprob: -12.375107765197754
    8. '()' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0521364212036133
    2. 'for' → logprob: -1.3021364212036133
    3. 'if' → logprob: -1.4271364212036133
    4. 's' → logprob: -3.1771364212036133
    5. 'f' → logprob: -4.177136421203613
    6. 'x' → logprob: -4.177136421203613
    7. 'a' → logprob: -4.552136421203613
    8. ')' → logprob: -4.677136421203613
    9. ' ' → logprob: -4.677136421203613
    10. '*' → logprob: -4.927136421203613

Token 6: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9085284471511841
    2. 'um' → logprob: -1.408528447151184
    3. '[' → logprob: -2.0335283279418945
    4. '=' → logprob: -2.2835283279418945
    5. '.' → logprob: -2.6585283279418945
    6. 'u' → logprob: -4.6585283279418945
    7. 'tr' → logprob: -4.9085283279418945
    8. ' +=' → logprob: -5.2835283279418945
    9. '[i' → logprob: -5.9085283279418945
    10. '_' → logprob: -5.9085283279418945

Token 7: ' t' (ID: 260)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4497523307800293
    2. ' =' → logprob: -1.4497523307800293
    3. ' ' → logprob: -2.1997523307800293
    4. '_' → logprob: -4.449752330780029
    5. ',' → logprob: -6.824752330780029
    6. 'a' → logprob: -7.699752330780029
    7. '=input' → logprob: -8.199752807617188
    8. '[' → logprob: -8.324752807617188
    9. ' []' → logprob: -8.324752807617188
    10. 'input' → logprob: -8.324752807617188

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42943888902664185
    2. '=' → logprob: -1.054438829421997
    3. ',' → logprob: -7.554439067840576
    4. '_' → logprob: -9.429438591003418
    5. ' ' → logprob: -9.929438591003418
    6. '[' → logprob: -10.179438591003418
    7. ' ,' → logprob: -11.679438591003418
    8. '  ' → logprob: -11.929438591003418
    9. ')' → logprob: -12.179438591003418
    10. ''' → logprob: -12.179438591003418

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21231898665428162
    2. '"' → logprob: -2.5873188972473145
    3. '0' → logprob: -3.5873188972473145
    4. 'map' → logprob: -3.7123188972473145
    5. ''' → logprob: -3.8373188972473145
    6. '"",' → logprob: -4.4623188972473145
    7. '''' → logprob: -4.5873188972473145
    8. '""' → logprob: -5.0873188972473145
    9. ''',' → logprob: -5.0873188972473145
    10. ' input' → logprob: -5.5873188972473145

Token 10: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.476569801568985
    2. '()' → logprob: -0.9765697717666626
    3. ')' → logprob: -6.851569652557373
    4. '('' → logprob: -7.476569652557373
    5. '().' → logprob: -8.476570129394531
    6. ''' → logprob: -8.726570129394531
    7. '```' → logprob: -9.351570129394531
    8. '())' → logprob: -9.476570129394531
    9. '("("' → logprob: -9.851570129394531
    10. '(
' → logprob: -10.601570129394531

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001290454383706674
    2. 'strip' → logprob: -9.000128746032715
    3. 'spl' → logprob: -13.125128746032715
    4. 's' → logprob: -14.000128746032715
    5. 'replace' → logprob: -14.125128746032715
    6. ' split' → logprob: -14.125128746032715
    7. 'rstrip' → logprob: -14.125128746032715
    8. 'sp' → logprob: -15.125128746032715
    9. 'rs' → logprob: -15.500128746032715
    10. '(split' → logprob: -17.00012969970703

Token 12: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43976402282714844
    2. '()' → logprob: -1.4397640228271484
    3. '('' → logprob: -2.3147640228271484
    4. '("("' → logprob: -4.314764022827148
    5. '("' → logprob: -5.439764022827148
    6. '`' → logprob: -7.814764022827148
    7. '`()' → logprob: -7.814764022827148
    8. '(`' → logprob: -8.314764022827148
    9. '```' → logprob: -8.314764022827148
    10. '(()' → logprob: -8.564764022827148

Token 13: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04354042559862137
    2. 'result' → logprob: -3.7935404777526855
    3. 'if' → logprob: -4.9185404777526855
    4. 'i' → logprob: -6.1685404777526855
    5. 'u' → logprob: -6.5435404777526855
    6. 'count' → logprob: -6.6685404777526855
    7. 'r' → logprob: -6.6685404777526855
    8. 'a' → logprob: -6.6685404777526855
    9. 'd' → logprob: -7.0435404777526855
    10. 'res' → logprob: -7.2935404777526855

Token 14: ' Bon' (ID: 12658)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47323358058929443
    2. 'd' → logprob: -2.223233699798584
    3. 'result' → logprob: -3.098233699798584
    4. 'count' → logprob: -3.223233699798584
    5. ' for' → logprob: -3.598233699798584
    6. 'ans' → logprob: -3.598233699798584
    7. 'c' → logprob: -3.973233699798584
    8. 'f' → logprob: -4.098233699798584
    9. 'l' → logprob: -4.598233699798584
    10. 'if' → logprob: -4.598233699798584

Token 15: ',' (ID: 11)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.19590498507022858
    2. 'k' → logprob: -2.6959049701690674
    3. 'e' → logprob: -3.8209049701690674
    4. 'j' → logprob: -4.1959052085876465
    5. 'a' → logprob: -4.4459052085876465
    6. 'd' → logprob: -5.0709052085876465
    7. 'u' → logprob: -5.0709052085876465
    8. '#' → logprob: -5.1959052085876465
    9. 'jou' → logprob: -5.4459052085876465
    10. 'n' → logprob: -5.6959052085876465

Token 16: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.6549136638641357
    2. 'for' → logprob: -2.1549136638641357
    3. ' n' → logprob: -2.2799136638641357
    4. 's' → logprob: -2.2799136638641357
    5. ' ' → logprob: -2.2799136638641357
    6. 'd' → logprob: -2.7799136638641357
    7. ' d' → logprob: -2.9049136638641357
    8. 'n' → logprob: -3.0299136638641357
    9. 'a' → logprob: -3.2799136638641357
    10. ' a' → logprob: -3.5299136638641357

Token 17: ' va' (ID: 3423)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.4617588520050049
    2. '_' → logprob: -1.9617588520050049
    3. 's' → logprob: -2.086758852005005
    4. 'c' → logprob: -2.336758852005005
    5. 'n' → logprob: -2.836758852005005
    6. 't' → logprob: -3.211758852005005
    7. 'ne' → logprob: -3.336758852005005
    8. ' ' → logprob: -3.336758852005005
    9. '```' → logprob: -3.711758852005005
    10. ' n' → logprob: -3.836758852005005

Token 18: ' mél' (ID: 50838)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -2.100198745727539
    2. ' essayer' → logprob: -2.350198745727539
    3. 'f' → logprob: -2.475198745727539
    4. ' faire' → logprob: -2.475198745727539
    5. 'tr' → logprob: -2.600198745727539
    6. 's' → logprob: -2.850198745727539
    7. 'p' → logprob: -3.100198745727539
    8. 'l' → logprob: -3.225198745727539
    9. ' ' → logprob: -3.475198745727539
    10. 'print' → logprob: -3.600198745727539

Token 19: 'anger' (ID: 5249)
  Prédit: 'anger'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anger' → logprob: -0.011125635355710983
    2. '#' → logprob: -6.261125564575195
    3. 'er' → logprob: -6.636125564575195
    4. 'ang' → logprob: -6.636125564575195
    5. 'angé' → logprob: -7.011125564575195
    6. 'ange' → logprob: -7.261125564575195
    7. '|' → logprob: -7.761125564575195
    8. 'ger' → logprob: -7.886125564575195
    9. 'an' → logprob: -7.886125564575195
    10. 'a' → logprob: -8.386125564575195

Token 20: ' les' (ID: 1341)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3243134319782257
    2. ' ' → logprob: -2.3243134021759033
    3. 'r' → logprob: -2.9493134021759033
    4. 'd' → logprob: -3.8243134021759033
    5. 'a' → logprob: -4.324313640594482
    6. 'u' → logprob: -4.449313640594482
    7. 'm' → logprob: -4.449313640594482
    8. 'f' → logprob: -4.574313640594482
    9. 'n' → logprob: -4.574313640594482
    10. 'result' → logprob: -4.824313640594482

Token 21: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2520652711391449
    2. 's' → logprob: -3.0020651817321777
    3. ' deux' → logprob: -3.5020651817321777
    4. 'cart' → logprob: -4.002065181732178
    5. 'd' → logprob: -4.127065181732178
    6. 'car' → logprob: -4.252065181732178
    7. 'strings' → logprob: -4.377065181732178
    8. ' cartes' → logprob: -4.627065181732178
    9. 'chars' → logprob: -5.002065181732178
    10. 'cha' → logprob: -5.252065181732178

Token 22: ' chaînes' (ID: 179904)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18321333825588226
    2. 'for' → logprob: -2.808213233947754
    3. 's' → logprob: -3.058213233947754
    4. 'result' → logprob: -3.683213233947754
    5. 'res' → logprob: -5.058213233947754
    6. 'a' → logprob: -5.183213233947754
    7. ' for' → logprob: -5.808213233947754
    8. 'n' → logprob: -5.933213233947754
    9. 'd' → logprob: -6.058213233947754
    10. 'f' → logprob: -6.058213233947754

Token 23: '...

' (ID: 2161)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6989989280700684
    2. 'result' → logprob: -1.5739989280700684
    3. 'for' → logprob: -2.3239989280700684
    4. 'res' → logprob: -3.1989989280700684
    5. 's' → logprob: -3.1989989280700684
    6. ' ' → logprob: -3.6989989280700684
    7. ' for' → logprob: -3.6989989280700684
    8. 'f' → logprob: -4.573998928070068
    9. 'd' → logprob: -4.823998928070068
    10. 'n' → logprob: -5.073998928070068

Token 24: 'mix' (ID: 69015)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0304971933364868
    2. 'result' → logprob: -1.0304971933364868
    3. 'res' → logprob: -2.6554970741271973
    4. 'c' → logprob: -2.7804970741271973
    5. 'for' → logprob: -3.1554970741271973
    6. 'u' → logprob: -3.4054970741271973
    7. 'm' → logprob: -3.4054970741271973
    8. 's' → logprob: -4.905497074127197
    9. 'mixed' → logprob: -4.905497074127197
    10. 'a' → logprob: -5.030497074127197

Token 25: ' =' (ID: 314)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.5482025146484375
    2. ' =' → logprob: -1.0482025146484375
    3. 'd' → logprob: -3.4232025146484375
    4. '=' → logprob: -3.9232025146484375
    5. 'e' → logprob: -4.6732025146484375
    6. 'er' → logprob: -5.1732025146484375
    7. 'ing' → logprob: -6.1732025146484375
    8. '_str' → logprob: -8.173202514648438
    9. 't' → logprob: -8.423202514648438
    10. '_' → logprob: -8.423202514648438

Token 26: ' ''
' (ID: 25366)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.23058860003948212
    2. '''' → logprob: -2.355588674545288
    3. 's' → logprob: -3.105588674545288
    4. '[]' → logprob: -3.230588674545288
    5. '"' → logprob: -3.855588674545288
    6. '[s' → logprob: -6.355588436126709
    7. 'list' → logprob: -6.605588436126709
    8. '"s' → logprob: -7.230588436126709
    9. '[' → logprob: -7.605588436126709
    10. ''s' → logprob: -8.105588912963867

Token 27: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02459484338760376
    2. 'i' → logprob: -4.274594783782959
    3. 'f' → logprob: -5.149594783782959
    4. ' for' → logprob: -5.399594783782959
    5. ' ' → logprob: -11.149595260620117
    6. '_' → logprob: -11.649595260620117
    7. 'fo' → logprob: -11.649595260620117
    8. '=' → logprob: -11.774595260620117
    9. ' i' → logprob: -12.649595260620117
    10. 's' → logprob: -13.149595260620117

Token 28: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09200920909643173
    2. ' _' → logprob: -3.0920093059539795
    3. ' ' → logprob: -3.5920093059539795
    4. '_' → logprob: -5.2170090675354
    5. ' c' → logprob: -5.2170090675354
    6. 'i' → logprob: -5.5920090675354
    7. 'c' → logprob: -8.592009544372559
    8. '  ' → logprob: -9.467009544372559
    9. '_i' → logprob: -10.467009544372559
    10. ' ' → logprob: -10.967009544372559

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009630238637328148
    2. ' ' → logprob: -5.00963020324707
    3. 'in' → logprob: -6.50963020324707
    4. ',' → logprob: -6.63463020324707
    5. ' ,' → logprob: -9.63463020324707
    6. 's' → logprob: -10.75963020324707
    7. '  ' → logprob: -12.38463020324707
    8. '```' → logprob: -12.50963020324707
    9. '<|end|>' → logprob: -12.75963020324707
    10. ')' → logprob: -13.38463020324707

Token 30: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00525154173374176
    2. 'range' → logprob: -5.255251407623291
    3. ' ' → logprob: -11.50525188446045
    4. '(range' → logprob: -13.50525188446045
    5. '	range' → logprob: -13.63025188446045
    6. ' rang' → logprob: -13.88025188446045
    7. ' ran' → logprob: -14.13025188446045
    8. '  ' → logprob: -14.50525188446045
    9. ' ra' → logprob: -14.63025188446045
    10. ' s' → logprob: -14.63025188446045

Token 31: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.060453955084085464
    2. '(len' → logprob: -3.3104538917541504
    3. '(' → logprob: -3.8104538917541504
    4. ' (' → logprob: -10.685454368591309
    5. '(min' → logprob: -14.185454368591309
    6. '(max' → logprob: -14.935454368591309
    7. '(
' → logprob: -15.060454368591309
    8. ' n' → logprob: -15.435454368591309
    9. '(length' → logprob: -15.810454368591309
    10. '(s' → logprob: -15.810454368591309

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004313803277909756
    2. ' ):' → logprob: -5.879313945770264
    3. ')' → logprob: -6.504313945770264
    4. '):
' → logprob: -12.254313468933105
    5. ' )' → logprob: -12.379313468933105
    6. ':' → logprob: -14.004313468933105
    7. ' ' → logprob: -15.629313468933105
    8. '*' → logprob: -16.004314422607422
    9. ')):' → logprob: -16.129314422607422
    10. ')：' → logprob: -16.379314422607422

Token 33: '   ' (ID: 271)
  Prédit: ' mix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mix' → logprob: -0.3829788267612457
    2. '   ' → logprob: -1.3829787969589233
    3. 'mix' → logprob: -3.132978916168213
    4. ' ' → logprob: -4.257978916168213
    5. ' s' → logprob: -5.882978916168213
    6. 'm' → logprob: -6.007978916168213
    7. ' m' → logprob: -6.757978916168213
    8. '    ' → logprob: -7.882978916168213
    9. 's' → logprob: -7.882978916168213
    10. '	m' → logprob: -8.132978439331055

Token 34: ' #' (ID: 1069)
  Prédit: 'mix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mix' → logprob: -0.31440043449401855
    2. ' mix' → logprob: -1.3144004344940186
    3. '   ' → logprob: -7.814400672912598
    4. 'm' → logprob: -7.939400672912598
    5. ' ' → logprob: -9.564400672912598
    6. ' if' → logprob: -9.564400672912598
    7. 'mixed' → logprob: -9.814400672912598
    8. ' m' → logprob: -10.439400672912598
    9. 's' → logprob: -10.564400672912598
    10. ' mixed' → logprob: -10.814400672912598

Token 35: ' Ou' (ID: 33134)
  Prédit: 'mix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mix' → logprob: -0.28876057267189026
    2. ' mix' → logprob: -1.4137605428695679
    3. ' if' → logprob: -5.538760662078857
    4. 'if' → logprob: -6.038760662078857
    5. ' ' → logprob: -7.663760662078857
    6. '   ' → logprob: -7.663760662078857
    7. 'm' → logprob: -9.0387601852417
    8. 'mixed' → logprob: -9.5387601852417
    9. ' mixed' → logprob: -10.7262601852417
    10. '  ' → logprob: -11.1637601852417

Token 36: 'ais' (ID: 1873)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5891255140304565
    2. ' bien' → logprob: -1.8391255140304565
    3. '```' → logprob: -1.8391255140304565
    4. 'i' → logprob: -2.714125633239746
    5. '   ' → logprob: -2.839125633239746
    6. 'p' → logprob: -2.839125633239746
    7. 't' → logprob: -3.964125633239746
    8. ' on' → logprob: -3.964125633239746
    9. 'r' → logprob: -4.276625633239746
    10. 'bien' → logprob: -4.339125633239746

Token 37: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9456247687339783
    2. 'mix' → logprob: -0.9456247687339783
    3. ' mix' → logprob: -2.195624828338623
    4. 's' → logprob: -3.320624828338623
    5. 'm' → logprob: -4.320624828338623
    6. 'space' → logprob: -4.445624828338623
    7. ' if' → logprob: -4.570624828338623
    8. ' `' → logprob: -4.945624828338623
    9. ' s' → logprob: -5.070624828338623
    10. ',' → logprob: -5.195624828338623

Token 38: ' on' (ID: 402)
  Prédit: ' mix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mix' → logprob: -0.09099707752466202
    2. 'mix' → logprob: -2.4659969806671143
    3. ' if' → logprob: -6.840997219085693
    4. ' ' → logprob: -8.215996742248535
    5. ' m' → logprob: -8.965996742248535
    6. 'm' → logprob: -9.215996742248535
    7. ' mixing' → logprob: -9.340996742248535
    8. ' ' → logprob: -9.465996742248535
    9. ' mixed' → logprob: -9.590996742248535
    10. '   ' → logprob: -10.090996742248535

Token 39: ' ajoute' (ID: 91611)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' va' → logprob: -1.3391839265823364
    2. 'append' → logprob: -1.7141839265823364
    3. ' mélange' → logprob: -2.089183807373047
    4. ' ajoute' → logprob: -2.089183807373047
    5. ' append' → logprob: -2.339183807373047
    6. ' mix' → logprob: -2.589183807373047
    7. ' prend' → logprob: -2.839183807373047
    8. 'mix' → logprob: -4.589183807373047
    9. ' ' → logprob: -4.839183807373047
    10. ' a' → logprob: -5.214183807373047

Token 40: ' un' (ID: 537)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06414482742547989
    2. 's' → logprob: -2.8141448497772217
    3. ' mix' → logprob: -6.939144611358643
    4. 'mix' → logprob: -7.314144611358643
    5. ' ' → logprob: -8.6891450881958
    6. '   ' → logprob: -8.9391450881958
    7. ' t' → logprob: -9.1891450881958
    8. '  ' → logprob: -10.0641450881958
    9. '    ' → logprob: -10.5641450881958
    10. 't' → logprob: -10.8141450881958

Token 41: ' caractère' (ID: 80509)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4498927593231201
    2. 's' → logprob: -1.0748927593231201
    3. ' ' → logprob: -4.824892997741699
    4. 't' → logprob: -5.574892997741699
    5. ' t' → logprob: -5.949892997741699
    6. 'car' → logprob: -6.324892997741699
    7. 'e' → logprob: -6.699892997741699
    8. ' caractère' → logprob: -7.449892997741699
    9. ' caract' → logprob: -7.699892997741699
    10. 'mix' → logprob: -7.949892997741699

Token 42: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8074079751968384
    2. 'mix' → logprob: -1.5574079751968384
    3. '   ' → logprob: -2.057407855987549
    4. ' mix' → logprob: -2.432407855987549
    5. ' s' → logprob: -2.932407855987549
    6. ' +' → logprob: -4.307407855987549
    7. '+' → logprob: -4.682407855987549
    8. ' à' → logprob: -4.807407855987549
    9. ' =' → logprob: -4.807407855987549
    10. ' ' → logprob: -5.557407855987549

Token 43: ' chaque' (ID: 21194)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.37949132919311523
    2. 's' → logprob: -1.2544913291931152
    3. ' chacune' → logprob: -4.379491329193115
    4. ' each' → logprob: -5.129491329193115
    5. ' chaque' → logprob: -5.254491329193115
    6. ' chacun' → logprob: -5.504491329193115
    7. ' ' → logprob: -7.504491329193115
    8. 'ch' → logprob: -7.504491329193115
    9. 'cha' → logprob: -7.629491329193115
    10. ' t' → logprob: -8.254491806030273

Token 44: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6145324110984802
    2. ' s' → logprob: -0.8645324110984802
    3. ' ' → logprob: -3.489532470703125
    4. 'mix' → logprob: -6.489532470703125
    5. '(s' → logprob: -6.614532470703125
    6. ' mix' → logprob: -6.614532470703125
    7. '   ' → logprob: -7.114532470703125
    8. '  ' → logprob: -8.239532470703125
    9. ')' → logprob: -8.364532470703125
    10. ' à' → logprob: -8.489532470703125

Token 45: ' ça' (ID: 13590)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4432016611099243
    2. ' s' → logprob: -1.1932016611099243
    3. ' ' → logprob: -3.5682015419006348
    4. ' mix' → logprob: -4.443201541900635
    5. 'mix' → logprob: -4.568201541900635
    6. ' '' → logprob: -6.318201541900635
    7. '<|end|>' → logprob: -7.818201541900635
    8. ''s' → logprob: -7.943201541900635
    9. ')' → logprob: -8.193202018737793
    10. 'space' → logprob: -8.568202018737793

Token 46: ' devrait' (ID: 52773)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1919187754392624
    2. ' +' → logprob: -2.0669188499450684
    3. ' ' → logprob: -3.8169188499450684
    4. ' +=' → logprob: -4.566918849945068
    5. ' va' → logprob: -5.441918849945068
    6. 's' → logprob: -5.566918849945068
    7. ' s' → logprob: -6.566918849945068
    8. '.' → logprob: -7.816918849945068
    9. ' a' → logprob: -7.941918849945068
    10. '+=' → logprob: -7.941918849945068

Token 47: ' marcher' (ID: 171848)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12043152004480362
    2. '+' → logprob: -3.120431423187256
    3. ' faire' → logprob: -4.245431423187256
    4. 's' → logprob: -4.495431423187256
    5. ' +' → logprob: -5.120431423187256
    6. '   ' → logprob: -5.245431423187256
    7. ' suff' → logprob: -5.870431423187256
    8. ''' → logprob: -5.995431423187256
    9. 'faire' → logprob: -5.995431423187256
    10. '  ' → logprob: -6.120431423187256

Token 48: '...
' (ID: 4908)
  Prédit: 'mix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mix' → logprob: -0.3648318648338318
    2. '
' → logprob: -2.3648319244384766
    3. 's' → logprob: -3.1148319244384766
    4. '    
' → logprob: -3.2398319244384766
    5. '   ' → logprob: -3.3648319244384766
    6. ' mix' → logprob: -3.3648319244384766
    7. '<|end|>' → logprob: -3.7398319244384766
    8. ' 
' → logprob: -4.489831924438477
    9. 'm' → logprob: -4.614831924438477
    10. ' ' → logprob: -5.489831924438477

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23565834760665894
    2. 'mix' → logprob: -1.8606584072113037
    3. ' mix' → logprob: -2.9856584072113037
    4. '    
' → logprob: -6.860658168792725
    5. ' ' → logprob: -6.985658168792725
    6. 'm' → logprob: -7.610658168792725
    7. '
' → logprob: -7.985658168792725
    8. '  ' → logprob: -8.360658645629883
    9. '    ' → logprob: -8.485658645629883
    10. ' 
' → logprob: -8.610658645629883

Token 50: ' mix' (ID: 9762)
  Prédit: 'mix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mix' (adapté à ' mix') → logprob: -0.013303406536579132
    2. ' mix' → logprob: -4.388303279876709
    3. '   ' → logprob: -7.263303279876709
    4. 'm' → logprob: -10.763303756713867
    5. ' ' → logprob: -10.763303756713867
    6. 'mixed' → logprob: -10.763303756713867
    7. '  ' → logprob: -12.138303756713867
    8. '
' → logprob: -12.825803756713867
    9. '    
' → logprob: -12.825803756713867
    10. 'if' → logprob: -12.888303756713867

Token 51: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.14436207711696625
    2. '+=' → logprob: -2.019361972808838
    3. '+' → logprob: -6.644361972808838
    4. ' +' → logprob: -8.644362449645996
    5. '+='' → logprob: -9.269362449645996
    6. '+="' → logprob: -9.644362449645996
    7. '+=(' → logprob: -10.394362449645996
    8. '   ' → logprob: -12.269362449645996
    9. '```' → logprob: -12.894362449645996
    10. ' ' → logprob: -13.144362449645996

Token 52: ' mix' (ID: 9762)
  Prédit: ' mix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mix' → logprob: -0.5237047076225281
    2. 'mix' → logprob: -0.8987047076225281
    3. 's' → logprob: -8.023704528808594
    4. ' s' → logprob: -8.773704528808594
    5. 'm' → logprob: -10.023704528808594
    6. ' ' → logprob: -10.648704528808594
    7. '+' → logprob: -12.273704528808594
    8. 'mixed' → logprob: -12.648704528808594
    9. ' mixing' → logprob: -12.961204528808594
    10. ' m' → logprob: -12.961204528808594

Token 53: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11286979913711548
    2. ' +' → logprob: -2.2378697395324707
    3. '+s' → logprob: -10.487870216369629
    4. 's' → logprob: -12.362870216369629
    5. '+i' → logprob: -12.362870216369629
    6. ' plus' → logprob: -12.862870216369629
    7. '+t' → logprob: -13.362870216369629
    8. '+c' → logprob: -13.487870216369629
    9. '+n' → logprob: -13.612870216369629
    10. '+m' → logprob: -14.112870216369629

Token 54: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11282549798488617
    2. ' s' → logprob: -2.237825393676758
    3. ' ' → logprob: -13.862825393676758
    4. '(s' → logprob: -13.987825393676758
    5. 't' → logprob: -14.362825393676758
    6. '   ' → logprob: -14.987825393676758
    7. '	s' → logprob: -15.987825393676758
    8. ' t' → logprob: -16.237825393676758
    9. '_s' → logprob: -16.612825393676758
    10. ' ' → logprob: -16.737825393676758

Token 55: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -1.1756367712223437e-05
    2. '[' → logprob: -11.500011444091797
    3. '[ind' → logprob: -14.125011444091797
    4. '[i' → logprob: -15.375011444091797
    5. 'index' → logprob: -15.500011444091797
    6. '[Index' → logprob: -16.125011444091797
    7. '```' → logprob: -16.875011444091797
    8. '[in' → logprob: -16.875011444091797
    9. ' [' → logprob: -17.500011444091797
    10. ' ' → logprob: -17.625011444091797

Token 56: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007937820046208799
    2. ' ]' → logprob: -7.250793933868408
    3. ']+' → logprob: -9.75079345703125
    4. '']' → logprob: -11.37579345703125
    5. '+' → logprob: -11.87579345703125
    6. ']
' → logprob: -12.37579345703125
    7. '   ' → logprob: -14.12579345703125
    8. '"]' → logprob: -14.37579345703125
    9. ' ' → logprob: -14.50079345703125
    10. ' +' → logprob: -15.12579345703125

Token 57: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3630540072917938
    2. ' +' → logprob: -1.2380540370941162
    3. '+t' → logprob: -4.363053798675537
    4. 't' → logprob: -6.738053798675537
    5. '   ' → logprob: -7.988053798675537
    6. ' t' → logprob: -9.113054275512695
    7. ' ' → logprob: -9.488054275512695
    8. '<|end|>' → logprob: -10.363054275512695
    9. ' +
' → logprob: -12.363054275512695
    10. 's' → logprob: -12.363054275512695

Token 58: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.0450570322573185
    2. 't' → logprob: -3.1700570583343506
    3. ' ' → logprob: -6.2950568199157715
    4. ''' → logprob: -9.42005729675293
    5. 's' → logprob: -9.67005729675293
    6. '	t' → logprob: -10.92005729675293
    7. ' ' → logprob: -11.17005729675293
    8. '<|end|>' → logprob: -11.92005729675293
    9. '    ' → logprob: -12.17005729675293
    10. '  ' → logprob: -12.29505729675293

Token 59: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -7.696077227592468e-05
    2. '[' → logprob: -9.750077247619629
    3. 'index' → logprob: -11.250077247619629
    4. ' [' → logprob: -13.625077247619629
    5. '[ind' → logprob: -13.875077247619629
    6. '[Index' → logprob: -14.375077247619629
    7. '```' → logprob: -14.375077247619629
    8. '[
' → logprob: -14.500077247619629
    9. '#index' → logprob: -14.625077247619629
    10. ' ' → logprob: -15.375077247619629

Token 60: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026379724964499474
    2. ']' → logprob: -3.6513798236846924
    3. '}' → logprob: -11.026379585266113
    4. '']' → logprob: -11.151379585266113
    5. '）' → logprob: -11.401379585266113
    6. ')]' → logprob: -11.401379585266113
    7. ')
' → logprob: -11.651379585266113
    8. '])' → logprob: -11.901379585266113
    9. ' )' → logprob: -12.151379585266113
    10. '')' → logprob: -12.776379585266113

Token 61: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4140441635390744e-05
    2. ' print' → logprob: -11.500014305114746
    3. ')' → logprob: -13.625014305114746
    4. '#print' → logprob: -13.750014305114746
    5. '<|end|>' → logprob: -14.125014305114746
    6. '#' → logprob: -14.500014305114746
    7. '(print' → logprob: -15.875014305114746
    8. 'pr' → logprob: -16.50001335144043
    9. '```' → logprob: -17.00001335144043
    10. 'prin' → logprob: -17.00001335144043

Token 62: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038541145622730255
    2. '(m' → logprob: -3.288541078567505
    3. '('' → logprob: -7.663541316986084
    4. '()' → logprob: -10.788540840148926
    5. '("("' → logprob: -12.038540840148926
    6. '((' → logprob: -14.288540840148926
    7. '(`' → logprob: -14.413540840148926
    8. ' (' → logprob: -14.788540840148926
    9. '("' → logprob: -15.038540840148926
    10. '(M' → logprob: -15.163540840148926

Token 63: 'ix' (ID: 1128)
  Prédit: 'ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -1.9862216504407115e-05
    2. 'i' → logprob: -10.875020027160645
    3. 'mix' → logprob: -14.875020027160645
    4. ' ix' → logprob: -15.000020027160645
    5. ')' → logprob: -17.000019073486328
    6. '```' → logprob: -17.250019073486328
    7. 'Ix' → logprob: -17.375019073486328
    8. 'ixed' → logprob: -17.625019073486328
    9. 'ixe' → logprob: -17.750019073486328
    10. 'iz' → logprob: -17.875019073486328

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.5
    3. '))' → logprob: -17.25
    4. ')`' → logprob: -19.0
    5. '')' → logprob: -19.25
    6. ')
' → logprob: -20.375
    7. ')}' → logprob: -21.125
    8. '`)' → logprob: -21.5
    9. '）' → logprob: -21.75
    10. '")' → logprob: -22.5

Token 65: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7901988625526428
    2. '<|end|>' → logprob: -0.7901988625526428
    3. '\n' → logprob: -3.040198802947998
    4. '#' → logprob: -4.165198802947998
    5. '
' → logprob: -4.415198802947998
    6. ' ' → logprob: -5.040198802947998
    7. '```' → logprob: -5.290198802947998
    8. '<|end|>' → logprob: -5.915198802947998
    9. '\' → logprob: -7.165198802947998
    10. 'n' → logprob: -8.165199279785156

Token 66: ' Voilà' (ID: 149427)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' c' (ID: 274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.03228846937417984
    2. ''' → logprob: -3.7822885513305664
    3. '#' → logprob: -5.782288551330566
    4. ''s' → logprob: -6.782288551330566
    5. 'est' → logprob: -7.032288551330566
    6. ' fini' → logprob: -7.032288551330566
    7. 'tout' → logprob: -7.782288551330566
    8. ''était' → logprob: -7.907288551330566
    9. ''#' → logprob: -8.282288551330566
    10. ' tout' → logprob: -8.282288551330566

Token 70: ' fait' (ID: 7473)
  Prédit: ' fini'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fini' → logprob: -0.3484708368778229
    2. 'tout' → logprob: -1.9734708070755005
    3. ' tout' → logprob: -2.47347092628479
    4. 'f' → logprob: -3.59847092628479
    5. ' terminé' → logprob: -4.223470687866211
    6. 'mix' → logprob: -4.973470687866211
    7. 'fin' → logprob: -5.348470687866211
    8. ' parfait' → logprob: -5.473470687866211
    9. 'fait' → logprob: -5.973470687866211
    10. ' mél' → logprob: -5.973470687866211

Token 71: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' normalement' (ID: 164432)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' c' (ID: 274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.6347702741622925
    2. ''' → logprob: -1.2597702741622925
    3. ''a' → logprob: -2.009770393371582
    4. 'a' → logprob: -3.884770393371582
    5. ''.' → logprob: -5.009770393371582
    6. ''#' → logprob: -5.009770393371582
    7. '!' → logprob: -5.134770393371582
    8. ''e' → logprob: -5.759770393371582
    9. 'e' → logprob: -6.509770393371582
    10. 'est' → logprob: -6.759770393371582

Token 75: ' ça' (ID: 13590)
  Prédit: 'bon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bon' → logprob: -0.3001916706562042
    2. ' bon' → logprob: -1.8001916408538818
    3. 'tout' → logprob: -2.550191640853882
    4. 'ok' → logprob: -4.800191879272461
    5. 'good' → logprob: -6.300191879272461
    6. ' tout' → logprob: -6.550191879272461
    7. 'mix' → logprob: -6.550191879272461
    8. 'correct' → logprob: -7.550191879272461
    9. 'ça' → logprob: -7.925191879272461
    10. ' OK' → logprob: -8.425191879272461

Token 76: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 74
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 18
Tokens correctement prédits (top 10): 35
Précision stricte (1ère position): 22.97%
Précision adaptée (1ère position): 24.32%
Précision (top 10): 47.30%
================================================================================
