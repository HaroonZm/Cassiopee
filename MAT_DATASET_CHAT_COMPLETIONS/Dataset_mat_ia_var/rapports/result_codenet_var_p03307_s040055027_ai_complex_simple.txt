================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul

N = int(input())

actions = [
    lambda x: print(x),
    lambda x: print(reduce(mul, [2, x]))
]

index = int(any([N % 2]))
actions[index](N)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006976079195737839
    2. '(lambda' → logprob: -5.131976127624512
    3. ' (' → logprob: -7.756976127624512
    4. ',' → logprob: -8.506976127624512
    5. '```' → logprob: -9.256976127624512
    6. '.' → logprob: -9.381976127624512
    7. 'def' → logprob: -9.506976127624512
    8. '(
' → logprob: -10.256976127624512
    9. 'lambda' → logprob: -10.756976127624512
    10. '\(' → logprob: -10.881976127624512

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9289020299911499
    2. ' operator' → logprob: -1.42890202999115
    3. ' itertools' → logprob: -1.55390202999115
    4. ' collections' → logprob: -1.92890202999115
    5. ' os' → logprob: -4.9289021492004395
    6. 'operator' → logprob: -7.4289021492004395
    7. ' sys' → logprob: -8.553901672363281
    8. ' typing' → logprob: -8.553901672363281
    9. 'collections' → logprob: -8.928901672363281
    10. 'math' → logprob: -9.053901672363281

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.044668834656476974
    2. 'import' → logprob: -3.6696689128875732
    3. '.' → logprob: -4.169668674468994
    4. ' ' → logprob: -6.044668674468994
    5. ' .' → logprob: -8.419669151306152
    6. '.import' → logprob: -9.169669151306152
    7. '	import' → logprob: -11.419669151306152
    8. '_import' → logprob: -11.544669151306152
    9. '<|end|>' → logprob: -11.794669151306152
    10. ' Import' → logprob: -13.169669151306152

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.13038945198059082
    2. ' import' → logprob: -2.630389451980591
    3. 'add' → logprob: -3.755389451980591
    4. ' mul' → logprob: -4.005389213562012
    5. ' ' → logprob: -5.505389213562012
    6. 'import' → logprob: -5.755389213562012
    7. 'mul' → logprob: -7.130389213562012
    8. ' item' → logprob: -8.380389213562012
    9. ' icon' → logprob: -10.130389213562012
    10. '_add' → logprob: -10.380389213562012

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13796253502368927
    2. '*' → logprob: -2.762962579727173
    3. '\' → logprob: -3.512962579727173
    4. '\n' → logprob: -4.512962341308594
    5. '(
' → logprob: -4.762962341308594
    6. ',' → logprob: -5.137962341308594
    7. '`' → logprob: -6.012962341308594
    8. '#' → logprob: -6.512962341308594
    9. 'a' → logprob: -6.637962341308594
    10. '\(' → logprob: -6.762962341308594

Token 10: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08071117103099823
    2. '\' → logprob: -3.5807111263275146
    3. '(
' → logprob: -3.5807111263275146
    4. 'def' → logprob: -4.330711364746094
    5. '`' → logprob: -6.080711364746094
    6. '```' → logprob: -6.705711364746094
    7. '\(' → logprob: -6.830711364746094
    8. '*' → logprob: -6.955711364746094
    9. '#' → logprob: -7.330711364746094
    10. 'a' → logprob: -7.705711364746094

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34325236082077026
    2. ' =' → logprob: -1.843252420425415
    3. '_' → logprob: -2.968252420425415
    4. ' ' → logprob: -3.468252420425415
    5. ',' → logprob: -3.968252420425415
    6. ')' → logprob: -4.093252182006836
    7. ' )' → logprob: -5.468252182006836
    8. 'u' → logprob: -6.093252182006836
    9. '.' → logprob: -6.343252182006836
    10. ' ,' → logprob: -6.468252182006836

Token 12: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01427104789763689
    2. '10' → logprob: -4.389271259307861
    3. '100' → logprob: -7.514271259307861
    4. '5' → logprob: -7.639271259307861
    5. '20' → logprob: -8.514270782470703
    6. '1' → logprob: -8.639270782470703
    7. '0' → logprob: -9.014270782470703
    8. '32' → logprob: -9.764270782470703
    9. 'int' → logprob: -10.014270782470703
    10. ' int' → logprob: -10.264270782470703

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003908735525328666
    2. '(input' → logprob: -8.375391006469727
    3. '('' → logprob: -9.750391006469727
    4. '(N' → logprob: -10.375391006469727
    5. ' (' → logprob: -10.875391006469727
    6. '()' → logprob: -11.375391006469727
    7. '(
' → logprob: -12.000391006469727
    8. '(`' → logprob: -12.250391006469727
    9. '```' → logprob: -12.500391006469727
    10. ''' → logprob: -13.000391006469727

Token 14: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5744504332542419
    2. '(' → logprob: -0.9494504332542419
    3. '()' → logprob: -3.1994504928588867
    4. '())' → logprob: -4.824450492858887
    5. '(
' → logprob: -7.699450492858887
    6. '))' → logprob: -8.324450492858887
    7. '('' → logprob: -8.699450492858887
    8. '')' → logprob: -9.074450492858887
    9. '(

' → logprob: -9.574450492858887
    10. '`)' → logprob: -10.199450492858887

Token 15: 'actions' (ID: 6711)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08904590457677841
    2. 'factor' → logprob: -3.339046001434326
    3. 'fact' → logprob: -4.339046001434326
    4. 'f' → logprob: -4.589046001434326
    5. 'numbers' → logprob: -4.839046001434326
    6. 'arr' → logprob: -5.214046001434326
    7. 'print' → logprob: -5.339046001434326
    8. 'product' → logprob: -5.964046001434326
    9. 'res' → logprob: -6.589046001434326
    10. 'answer' → logprob: -7.214046001434326

Token 16: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3373377025127411
    2. '.' → logprob: -1.3373377323150635
    3. '=' → logprob: -4.087337493896484
    4. '_' → logprob: -5.962337493896484
    5. ' =' → logprob: -6.337337493896484
    6. '(' → logprob: -7.587337493896484
    7. ')' → logprob: -7.962337493896484
    8. ''' → logprob: -7.962337493896484
    9. '[:]' → logprob: -7.962337493896484
    10. '['' → logprob: -8.587337493896484

Token 17: ' [
' (ID: 4240)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.43935418128967285
    2. '[' → logprob: -1.8143541812896729
    3. ' []' → logprob: -2.564354181289673
    4. '[input' → logprob: -2.814354181289673
    5. 'list' → logprob: -3.814354181289673
    6. '['' → logprob: -4.439353942871094
    7. ' [' → logprob: -4.814353942871094
    8. '[list' → logprob: -5.439353942871094
    9. ' list' → logprob: -5.814353942871094
    10. '[int' → logprob: -6.189353942871094

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24997016787528992
    2. '(' → logprob: -2.6249701976776123
    3. '(lambda' → logprob: -3.3749701976776123
    4. ']' → logprob: -3.4999701976776123
    5. '[' → logprob: -3.8749701976776123
    6. ' (' → logprob: -3.9999701976776123
    7. '0' → logprob: -4.124969959259033
    8. ')' → logprob: -5.124969959259033
    9. 'lambda' → logprob: -5.374969959259033
    10. '1' → logprob: -5.874969959259033

Token 19: ' lambda' (ID: 27871)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.750705897808075
    2. '(lambda' → logprob: -1.5007059574127197
    3. '   ' → logprob: -2.2507059574127197
    4. '(int' → logprob: -3.5007059574127197
    5. 'lambda' (adapté à ' lambda') → logprob: -3.5007059574127197
    6. '[' → logprob: -3.8757059574127197
    7. ']' → logprob: -4.250705718994141
    8. '0' → logprob: -4.375705718994141
    9. ''*' → logprob: -4.375705718994141
    10. '('' → logprob: -4.625705718994141

Token 20: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.39173591136932373
    2. 'x' → logprob: -1.1417359113693237
    3. ' n' → logprob: -6.516736030578613
    4. ' a' → logprob: -7.016736030578613
    5. 'a' → logprob: -7.266736030578613
    6. 'n' → logprob: -7.891736030578613
    7. ' lst' → logprob: -7.891736030578613
    8. ' s' → logprob: -8.516736030578613
    9. 's' → logprob: -9.016736030578613
    10. ' acc' → logprob: -9.516736030578613

Token 21: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004703999496996403
    2. ',' → logprob: -5.629703998565674
    3. ' :' → logprob: -7.004703998565674
    4. ':x' → logprob: -9.004704475402832
    5. ' x' → logprob: -11.379704475402832
    6. ',x' → logprob: -11.379704475402832
    7. ' ,' → logprob: -11.754704475402832
    8. '+' → logprob: -12.254704475402832
    9. 'x' → logprob: -12.254704475402832
    10. '+:' → logprob: -12.379704475402832

Token 22: ' print' (ID: 2123)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3133474588394165
    2. 'x' → logprob: -1.3133474588394165
    3. ' ' → logprob: -10.438347816467285
    4. '2' → logprob: -10.688347816467285
    5. ' (' → logprob: -11.188347816467285
    6. '(x' → logprob: -11.938347816467285
    7. '(' → logprob: -12.938347816467285
    8. '3' → logprob: -13.688347816467285
    9. '1' → logprob: -13.813347816467285
    10. 'pow' → logprob: -13.938347816467285

Token 23: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2580133080482483
    2. '(' → logprob: -1.5080132484436035
    3. '((' → logprob: -5.8830132484436035
    4. '(f' → logprob: -6.6330132484436035
    5. '('' → logprob: -7.1330132484436035
    6. '(N' → logprob: -8.258013725280762
    7. '(len' → logprob: -8.508013725280762
    8. '("' → logprob: -8.508013725280762
    9. '(int' → logprob: -9.258013725280762
    10. '(n' → logprob: -9.258013725280762

Token 24: '),
' (ID: 2313)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6205339431762695
    2. '+' → logprob: -1.4955339431762695
    3. ' *' → logprob: -2.6205339431762695
    4. ')' → logprob: -2.7455339431762695
    5. ' +' → logprob: -2.9955339431762695
    6. '),' → logprob: -3.4955339431762695
    7. '**' → logprob: -4.1205339431762695
    8. ',' → logprob: -6.4955339431762695
    9. '),
' → logprob: -6.9955339431762695
    10. ' **' → logprob: -7.7455339431762695

Token 25: '   ' (ID: 271)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.3157467246055603
    2. 'lambda' → logprob: -1.315746784210205
    3. '   ' → logprob: -6.565746784210205
    4. '(lambda' → logprob: -7.565746784210205
    5. '    ' → logprob: -7.940746784210205
    6. '=lambda' → logprob: -10.190746307373047
    7. ')' → logprob: -10.315746307373047
    8. '```' → logprob: -11.128246307373047
    9. ' ' → logprob: -11.253246307373047
    10. ' x' → logprob: -11.503246307373047

Token 26: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.3880729675292969
    2. ' lambda' → logprob: -1.1380729675292969
    3. '(lambda' → logprob: -7.263072967529297
    4. '=lambda' → logprob: -9.138072967529297
    5. '    ' → logprob: -9.263072967529297
    6. '   ' → logprob: -9.513072967529297
    7. ' ' → logprob: -10.325572967529297
    8. ')' → logprob: -10.763072967529297
    9. 'x' → logprob: -10.825572967529297
    10. ' x' → logprob: -11.200572967529297

Token 27: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.030816834419965744
    2. 'x' → logprob: -3.5308167934417725
    3. ' lambda' → logprob: -8.530817031860352
    4. ' ' → logprob: -8.655817031860352
    5. ' n' → logprob: -9.280817031860352
    6. ':' → logprob: -9.343317031860352
    7. ' y' → logprob: -9.655817031860352
    8. ' a' → logprob: -10.030817031860352
    9. 'lambda' → logprob: -10.343317031860352
    10. ' (' → logprob: -10.405817031860352

Token 28: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11367131769657135
    2. '**' → logprob: -3.61367130279541
    3. '*' → logprob: -3.73867130279541
    4. ' +' → logprob: -3.98867130279541
    5. '+' → logprob: -4.11367130279541
    6. ' *' → logprob: -4.48867130279541
    7. ' :' → logprob: -5.11367130279541
    8. ' **' → logprob: -6.86367130279541
    9. '+:' → logprob: -6.98867130279541
    10. ',' → logprob: -7.11367130279541

Token 29: ' print' (ID: 2123)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0957049131393433
    2. 'print' → logprob: -1.3457049131393433
    3. ' print' → logprob: -1.3457049131393433
    4. 'x' → logprob: -2.095705032348633
    5. ' reduce' → logprob: -4.345705032348633
    6. 'reduce' → logprob: -5.345705032348633
    7. 'pow' → logprob: -7.283205032348633
    8. ' ' → logprob: -7.658205032348633
    9. ' pow' → logprob: -7.783205032348633
    10. ' mul' → logprob: -8.033205032348633

Token 30: '(re' (ID: 8178)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.389716237783432
    2. '(' → logprob: -1.1397162675857544
    3. '('' → logprob: -6.889716148376465
    4. '()' → logprob: -8.014716148376465
    5. '("' → logprob: -8.014716148376465
    6. '((' → logprob: -8.139716148376465
    7. '(f' → logprob: -8.514716148376465
    8. '(s' → logprob: -8.889716148376465
    9. '(-' → logprob: -9.639716148376465
    10. '(pow' → logprob: -9.639716148376465

Token 31: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.0019201948307454586
    2. 'd' → logprob: -6.376920223236084
    3. 'verse' → logprob: -8.876919746398926
    4. 'duced' → logprob: -9.751919746398926
    5. 'dux' → logprob: -12.251919746398926
    6. 'x' → logprob: -12.626919746398926
    7. 'move' → logprob: -13.251919746398926
    8. 'du' → logprob: -13.376919746398926
    9. 'versed' → logprob: -13.501919746398926
    10. '(x' → logprob: -14.126919746398926

Token 32: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.16819296777248383
    2. '(' → logprob: -1.918192982673645
    3. '(operator' → logprob: -6.0431928634643555
    4. '(lambda' → logprob: -6.1681928634643555
    5. 'mul' → logprob: -6.2931928634643555
    6. '_mul' → logprob: -6.9181928634643555
    7. ')' → logprob: -8.293192863464355
    8. '(mu' → logprob: -9.043192863464355
    9. '(mult' → logprob: -9.543192863464355
    10. ' mul' → logprob: -10.168192863464355

Token 33: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -3.869639476761222e-05
    2. 'u' → logprob: -10.750039100646973
    3. '<ul' → logprob: -12.000039100646973
    4. ' ul' → logprob: -12.875039100646973
    5. 'mul' → logprob: -13.375039100646973
    6. 'ult' → logprob: -13.375039100646973
    7. 'ultiply' → logprob: -13.750039100646973
    8. ' mul' → logprob: -14.125039100646973
    9. '   ' → logprob: -14.625039100646973
    10. ' ' → logprob: -14.750039100646973

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002132656052708626
    2. ',x' → logprob: -6.377132892608643
    3. ' ,' → logprob: -8.002132415771484
    4. '*,' → logprob: -10.377132415771484
    5. ',*' → logprob: -10.627132415771484
    6. '(x' → logprob: -11.752132415771484
    7. '(' → logprob: -12.127132415771484
    8. ',[' → logprob: -12.252132415771484
    9. 'x' → logprob: -12.627132415771484
    10. ',(' → logprob: -13.002132415771484

Token 35: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5412363409996033
    2. ' range' → logprob: -1.541236400604248
    3. 'x' → logprob: -1.791236400604248
    4. ' x' → logprob: -3.916236400604248
    5. '(range' → logprob: -5.041236400604248
    6. '[' → logprob: -5.416236400604248
    7. '[x' → logprob: -6.166236400604248
    8. 'list' → logprob: -6.791236400604248
    9. ')' → logprob: -6.916236400604248
    10. '(x' → logprob: -7.291236400604248

Token 36: '2' (ID: 17)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1499403864145279
    2. ' range' → logprob: -2.5249404907226562
    3. 'x' → logprob: -3.3999404907226562
    4. 'i' → logprob: -4.899940490722656
    5. 'map' → logprob: -5.399940490722656
    6. 'int' → logprob: -5.524940490722656
    7. 'list' → logprob: -5.524940490722656
    8. '(range' → logprob: -6.524940490722656
    9. '   ' → logprob: -6.774940490722656
    10. ' map' → logprob: -7.399940490722656

Token 37: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0045627355575562
    2. '**' → logprob: -1.2545627355575562
    3. ',' → logprob: -2.0045628547668457
    4. '*i' → logprob: -2.5045628547668457
    5. ']+' → logprob: -2.6295628547668457
    6. '*x' → logprob: -3.8795628547668457
    7. '+i' → logprob: -4.379562854766846
    8. ' **' → logprob: -5.129562854766846
    9. ']*' → logprob: -5.879562854766846
    10. ' +' → logprob: -5.879562854766846

Token 38: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4144941568374634
    2. ' x' → logprob: -1.1644941568374634
    3. ' ' → logprob: -4.539494037628174
    4. '*x' → logprob: -5.039494037628174
    5. ' *' → logprob: -5.414494037628174
    6. '*' → logprob: -6.414494037628174
    7. '3' → logprob: -6.914494037628174
    8. '1' → logprob: -7.789494037628174
    9. '   ' → logprob: -8.164494514465332
    10. '2' → logprob: -8.289494514465332

Token 39: ']))
' (ID: 24801)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.6093321442604065
    2. ']))' → logprob: -0.9843321442604065
    3. '+' → logprob: -3.3593320846557617
    4. ']' → logprob: -3.7343320846557617
    5. '])))' → logprob: -4.734332084655762
    6. '])),' → logprob: -4.984332084655762
    7. ',' → logprob: -5.734332084655762
    8. ' ' → logprob: -7.109332084655762
    9. '),' → logprob: -7.359332084655762
    10. ' ],' → logprob: -7.359332084655762

Token 40: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5009108781814575
    2. ',' → logprob: -1.7509108781814575
    3. '),' → logprob: -2.125910758972168
    4. ')]' → logprob: -3.000910758972168
    5. '   ' → logprob: -4.000910758972168
    6. ']' → logprob: -4.875910758972168
    7. ')])' → logprob: -5.000910758972168
    8. ',)' → logprob: -5.625910758972168
    9. '),
' → logprob: -6.125910758972168
    10. ')],' → logprob: -6.375910758972168

Token 41: 'index' (ID: 2257)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15590369701385498
    2. 'actions' → logprob: -2.1559038162231445
    3. 'x' → logprob: -5.2809038162231445
    4. 'if' → logprob: -5.5309038162231445
    5. '[
' → logprob: -5.6559038162231445
    6. '```' → logprob: -6.4059038162231445
    7. '[' → logprob: -6.5309038162231445
    8. 'while' → logprob: -6.6559038162231445
    9. '_' → logprob: -6.6559038162231445
    10. 'print' → logprob: -6.7809038162231445

Token 42: ' =' (ID: 314)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.4745047688484192
    2. '_' → logprob: -1.7245047092437744
    3. ']' → logprob: -2.7245047092437744
    4. '[' → logprob: -2.7245047092437744
    5. '(' → logprob: -2.9745047092437744
    6. 's' → logprob: -5.0995049476623535
    7. 'ed' → logprob: -5.8495049476623535
    8. ')' → logprob: -6.0995049476623535
    9. ' ' → logprob: -6.3495049476623535
    10. '_s' → logprob: -6.8495049476623535

Token 43: ' int' (ID: 677)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028068913146853447
    2. ' ' → logprob: -3.653069019317627
    3. 'int' → logprob: -6.528069019317627
    4. ' int' → logprob: -8.528068542480469
    5. 'N' → logprob: -10.528068542480469
    6. '1' → logprob: -11.028068542480469
    7. ' N' → logprob: -11.153068542480469
    8. '[int' → logprob: -11.278068542480469
    9. 'input' → logprob: -11.528068542480469
    10. 'len' → logprob: -12.278068542480469

Token 44: '(any' (ID: 68951)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.100285604596138
    2. '(' → logprob: -2.350285530090332
    3. ' (' → logprob: -10.100285530090332
    4. 'input' → logprob: -10.475285530090332
    5. '()' → logprob: -12.725285530090332
    6. '(
' → logprob: -13.100285530090332
    7. '('' → logprob: -13.850285530090332
    8. ' ' → logprob: -14.350285530090332
    9. '=input' → logprob: -14.475285530090332
    10. ' input' → logprob: -14.850285530090332

Token 45: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2914641499519348
    2. '(actions' → logprob: -2.04146409034729
    3. '(input' → logprob: -3.16646409034729
    4. '(N' → logprob: -3.54146409034729
    5. '(x' → logprob: -3.91646409034729
    6. ' (' → logprob: -4.416464328765869
    7. '(index' → logprob: -5.166464328765869
    8. '(s' → logprob: -6.291464328765869
    9. '(
' → logprob: -6.791464328765869
    10. ')' → logprob: -6.791464328765869

Token 46: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1955966353416443
    2. 'x' → logprob: -2.195596694946289
    3. ' N' → logprob: -4.070596694946289
    4. 'i' → logprob: -4.070596694946289
    5. ' x' → logprob: -5.445596694946289
    6. 'actions' → logprob: -5.570596694946289
    7. 'index' → logprob: -5.695596694946289
    8. '(N' → logprob: -5.945596694946289
    9. 'a' → logprob: -6.070596694946289
    10. ' i' → logprob: -6.070596694946289

Token 47: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5762465596199036
    2. ' ==' → logprob: -1.5762465000152588
    3. ',' → logprob: -3.201246500015259
    4. ' ,' → logprob: -3.201246500015259
    5. ' >=' → logprob: -3.201246500015259
    6. '>' → logprob: -3.451246500015259
    7. ' ' → logprob: -3.576246500015259
    8. '==' → logprob: -3.826246500015259
    9. ' <' → logprob: -5.326246738433838
    10. ' %' → logprob: -5.451246738433838

Token 48: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18729819357395172
    2. ' ' → logprob: -2.06229829788208
    3. '1' → logprob: -4.31229829788208
    4. '3' → logprob: -4.43729829788208
    5. 'i' → logprob: -5.06229829788208
    6. ' i' → logprob: -5.56229829788208
    7. '4' → logprob: -6.31229829788208
    8. '5' → logprob: -6.81229829788208
    9. '10' → logprob: -6.93729829788208
    10. 'x' → logprob: -7.68729829788208

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04202524945139885
    2. 'i' → logprob: -4.417025089263916
    3. '3' → logprob: -4.542025089263916
    4. '1' → logprob: -4.792025089263916
    5. ' ' → logprob: -6.042025089263916
    6. '5' → logprob: -6.792025089263916
    7. '10' → logprob: -6.792025089263916
    8. '4' → logprob: -7.042025089263916
    9. 'x' → logprob: -7.167025089263916
    10. 'a' → logprob: -7.667025089263916

Token 50: ']))
' (ID: 24801)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3452295958995819
    2. ' ,' → logprob: -1.9702296257019043
    3. ' ==' → logprob: -2.4702296257019043
    4. '==' → logprob: -2.9702296257019043
    5. ' ' → logprob: -4.220229625701904
    6. '2' → logprob: -7.345229625701904
    7. ',
' → logprob: -8.845229148864746
    8. ' ]' → logprob: -8.970229148864746
    9. ']' → logprob: -9.095229148864746
    10. ')' → logprob: -9.220229148864746

Token 51: 'actions' (ID: 6711)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0861479043960571
    2. ')' → logprob: -1.2111479043960571
    3. ']' → logprob: -1.7111479043960571
    4. '[' → logprob: -2.4611477851867676
    5. ' ' → logprob: -3.4611477851867676
    6. ' (' → logprob: -4.086147785186768
    7. '+' → logprob: -4.586147785186768
    8. '(
' → logprob: -4.836147785186768
    9. '])' → logprob: -5.711147785186768
    10. '(N' → logprob: -5.961147785186768

Token 52: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.01620480790734291
    2. '[' → logprob: -4.141204833984375
    3. '[
' → logprob: -9.891204833984375
    4. '```' → logprob: -10.016204833984375
    5. '[Index' → logprob: -10.516204833984375
    6. '\[' → logprob: -11.391204833984375
    7. 'index' → logprob: -11.641204833984375
    8. '(index' → logprob: -11.766204833984375
    9. '[int' → logprob: -12.891204833984375
    10. '<|end|>' → logprob: -13.141204833984375

Token 53: '](' (ID: 20614)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.665276825428009
    2. ')(' → logprob: -0.915276825428009
    3. '](' → logprob: -2.6652767658233643
    4. ']' → logprob: -5.165277004241943
    5. '(N' → logprob: -5.290277004241943
    6. ')]' → logprob: -5.915277004241943
    7. '])' → logprob: -6.915277004241943
    8. ')])' → logprob: -7.665277004241943
    9. '(' → logprob: -7.915277004241943
    10. '])(' → logprob: -8.040276527404785

Token 54: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019408921943977475
    2. ' N' → logprob: -6.251940727233887
    3. '(N' → logprob: -11.501940727233887
    4. ')' → logprob: -13.501940727233887
    5. ' ' → logprob: -15.626940727233887
    6. '	N' → logprob: -16.251941680908203
    7. '<N' → logprob: -16.376941680908203
    8. '[N' → logprob: -16.501941680908203
    9. '   ' → logprob: -16.626941680908203
    10. '(' → logprob: -16.626941680908203

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8193366486229934e-05
    2. ' )' → logprob: -11.250018119812012
    3. '))' → logprob: -12.500018119812012
    4. ')
' → logprob: -13.875018119812012
    5. ')#' → logprob: -16.625019073486328
    6. ')`' → logprob: -16.625019073486328
    7. ')))' → logprob: -17.125019073486328
    8. ')}' → logprob: -17.375019073486328
    9. '+' → logprob: -17.500019073486328
    10. ')

' → logprob: -17.500019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 53
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 33
Précision stricte (1ère position): 30.19%
Précision adaptée (1ère position): 32.08%
Précision (top 10): 62.26%
================================================================================
