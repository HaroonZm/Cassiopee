================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
result = n * n
result = result * 3
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00043007321073673666
    2. ''' → logprob: -8.6254301071167
    3. '('' → logprob: -9.3754301071167
    4. '(n' → logprob: -9.8754301071167
    5. '```' → logprob: -10.3754301071167
    6. '`' → logprob: -10.7504301071167
    7. '(
' → logprob: -11.0004301071167
    8. '("("' → logprob: -11.1254301071167
    9. ')' → logprob: -11.7504301071167
    10. '()' → logprob: -12.2504301071167

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5984873175621033
    2. ')' → logprob: -0.8484873175621033
    3. '()' → logprob: -3.973487377166748
    4. '())' → logprob: -6.223487377166748
    5. '(
' → logprob: -7.473487377166748
    6. '")' → logprob: -8.97348690032959
    7. '('' → logprob: -9.09848690032959
    8. '')' → logprob: -9.22348690032959
    9. '```' → logprob: -9.47348690032959
    10. '))' → logprob: -9.72348690032959

Token 5: 'result' (ID: 2521)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.105031132698059
    2. 'i' → logprob: -1.230031132698059
    3. 'for' → logprob: -1.730031132698059
    4. 's' → logprob: -2.4800310134887695
    5. 'x' → logprob: -3.8550310134887695
    6. ' ' → logprob: -3.8550310134887695
    7. 'a' → logprob: -4.6050310134887695
    8. ''' → logprob: -4.8550310134887695
    9. '#' → logprob: -4.9800310134887695
    10. ')' → logprob: -4.9800310134887695

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.243391215801239
    2. '=' → logprob: -2.243391275405884
    3. '+' → logprob: -2.743391275405884
    4. ' =' → logprob: -3.868391275405884
    5. '(' → logprob: -5.243391036987305
    6. ' +=' → logprob: -5.243391036987305
    7. ')' → logprob: -5.618391036987305
    8. '_' → logprob: -6.368391036987305
    9. ' ' → logprob: -6.618391036987305
    10. '[:]' → logprob: -6.743391036987305

Token 7: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7714402079582214
    2. '0' → logprob: -1.3964402675628662
    3. ' n' → logprob: -1.6464402675628662
    4. 'n' → logprob: -2.521440267562866
    5. '"' → logprob: -5.271440029144287
    6. ' []' → logprob: -5.521440029144287
    7. '1' → logprob: -5.771440029144287
    8. 'sum' → logprob: -6.521440029144287
    9. ' sum' → logprob: -7.021440029144287
    10. ' "' → logprob: -7.271440029144287

Token 8: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14651401340961456
    2. '*' → logprob: -2.3965139389038086
    3. ' ' → logprob: -4.896513938903809
    4. '**' → logprob: -5.021513938903809
    5. ' +' → logprob: -5.146513938903809
    6. '%' → logprob: -5.521513938903809
    7. ')' → logprob: -5.521513938903809
    8. ''' → logprob: -5.896513938903809
    9. '[' → logprob: -6.146513938903809
    10. '<|end|>' → logprob: -6.271513938903809

Token 9: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36947545409202576
    2. '2' → logprob: -1.2444754838943481
    3. ' n' → logprob: -3.9944753646850586
    4. 'n' → logprob: -6.244475364685059
    5. '4' → logprob: -8.744475364685059
    6. '3' → logprob: -9.119475364685059
    7. '10' → logprob: -9.744475364685059
    8. '1' → logprob: -10.369475364685059
    9. ''' → logprob: -11.244475364685059
    10. '5' → logprob: -11.494475364685059

Token 10: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7324546575546265
    2. '\n' → logprob: -1.6074546575546265
    3. '*' → logprob: -1.7324546575546265
    4. '
' → logprob: -2.982454776763916
    5. '\' → logprob: -3.232454776763916
    6. '+
' → logprob: -4.357454776763916
    7. '(' → logprob: -4.607454776763916
    8. '```' → logprob: -4.857454776763916
    9. '#' → logprob: -5.607454776763916
    10. 'newline' → logprob: -5.732454776763916

Token 11: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.022279463708400726
    2. '\n' → logprob: -4.897279262542725
    3. '*' → logprob: -5.272279262542725
    4. '#' → logprob: -5.647279262542725
    5. '+' → logprob: -6.522279262542725
    6. 'p' → logprob: -6.647279262542725
    7. '\' → logprob: -7.022279262542725
    8. '```' → logprob: -7.272279262542725
    9. '
' → logprob: -7.772279262542725
    10. 'n' → logprob: -8.522279739379883

Token 12: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 13: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.26216697692871094
    2. ' n' → logprob: -2.387166976928711
    3. 'result' → logprob: -2.512166976928711
    4. ' ' → logprob: -3.137166976928711
    5. 'n' → logprob: -4.387166976928711
    6. '0' → logprob: -7.387166976928711
    7. ''' → logprob: -8.512166976928711
    8. '"' → logprob: -9.012166976928711
    9. ' int' → logprob: -9.137166976928711
    10. ' max' → logprob: -9.637166976928711

Token 14: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6844751238822937
    2. ' ' → logprob: -1.1844751834869385
    3. '<|end|>' → logprob: -2.3094751834869385
    4. '**' → logprob: -3.4344751834869385
    5. ' +' → logprob: -3.9344751834869385
    6. '*' → logprob: -4.684474945068359
    7. '```' → logprob: -5.059474945068359
    8. '\' → logprob: -5.184474945068359
    9. '\n' → logprob: -5.809474945068359
    10. ' **' → logprob: -5.934474945068359

Token 15: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1910524368286133
    2. ' n' → logprob: -1.1910524368286133
    3. ' ' → logprob: -1.4410524368286133
    4. 'n' → logprob: -1.9410524368286133
    5. '10' → logprob: -5.816052436828613
    6. ' result' → logprob: -5.816052436828613
    7. '3' → logprob: -6.066052436828613
    8. 'result' → logprob: -6.316052436828613
    9. '4' → logprob: -6.566052436828613
    10. '6' → logprob: -8.691052436828613

Token 16: '3' (ID: 18)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4082155227661133
    2. '2' → logprob: -1.1582155227661133
    3. 'result' → logprob: -4.033215522766113
    4. '3' → logprob: -6.283215522766113
    5. '10' → logprob: -6.908215522766113
    6. '4' → logprob: -8.408215522766113
    7. ' n' → logprob: -8.658215522766113
    8. ' ' → logprob: -9.783215522766113
    9. '1' → logprob: -10.533215522766113
    10. '5' → logprob: -11.408215522766113

Token 17: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6708462834358215
    2. '+' → logprob: -1.0458462238311768
    3. '#' → logprob: -2.7958462238311768
    4. '\' → logprob: -3.1708462238311768
    5. '\n' → logprob: -4.295846462249756
    6. '**' → logprob: -5.045846462249756
    7. '<|end|>' → logprob: -5.795846462249756
    8. ')' → logprob: -6.170846462249756
    9. ' ' → logprob: -6.670846462249756
    10. '.' → logprob: -6.670846462249756

Token 18: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09260758757591248
    2. '*' → logprob: -2.7176074981689453
    3. '#' → logprob: -4.717607498168945
    4. '\' → logprob: -4.842607498168945
    5. '\n' → logprob: -5.842607498168945
    6. '+
' → logprob: -7.467607498168945
    7. '**' → logprob: -8.092607498168945
    8. '-' → logprob: -8.092607498168945
    9. '```' → logprob: -8.592607498168945
    10. ' +' → logprob: -8.717607498168945

Token 19: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036361846141517162
    2. '(result' → logprob: -5.628636360168457
    3. '("("' → logprob: -10.878636360168457
    4. '('' → logprob: -12.003636360168457
    5. ' (' → logprob: -13.003636360168457
    6. '(n' → logprob: -13.503636360168457
    7. '()' → logprob: -13.503636360168457
    8. '((' → logprob: -13.503636360168457
    9. '(

' → logprob: -14.128636360168457
    10. '(`' → logprob: -14.378636360168457

Token 20: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. '))' → logprob: -13.375001907348633
    3. ' )' → logprob: -14.625001907348633
    4. ')
' → logprob: -17.250001907348633
    5. ')`' → logprob: -17.250001907348633
    6. '`)' → logprob: -17.875001907348633
    7. '')' → logprob: -18.000001907348633
    8. '(' → logprob: -19.000001907348633
    9. '）' → logprob: -19.375001907348633
    10. ')))' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 18
Tokens correctement prédits (1ère position, stricte): 2
Tokens correctement prédits (1ère position, avec adaptation): 2
Tokens correctement prédits (top 10): 9
Précision stricte (1ère position): 11.11%
Précision adaptée (1ère position): 11.11%
Précision (top 10): 50.00%
================================================================================
