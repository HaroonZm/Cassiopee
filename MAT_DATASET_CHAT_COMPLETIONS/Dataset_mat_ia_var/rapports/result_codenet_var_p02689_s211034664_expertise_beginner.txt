================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, m = map(int, input().split())
h = list(map(int, input().split()))
ab = []
for _ in range(m):
    a, b = map(int, input().split())
    ab.append([a, b])

check = [0] + [-1] * n

for pair in ab:
    a = pair[0]
    b = pair[1]
    if h[a-1] > h[b-1]:
        check[b] = -4
    elif h[a-1] == h[b-1]:
        check[a] = -4
        check[b] = -4
    else:
        check[a] = -4

bad = 0
for i in range(1, n+1):
    if check[i] == -4:
        bad += 1

print(n - bad)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' m' (ID: 284)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14440903067588806
    2. ',' → logprob: -2.269408941268921
    3. ' =' → logprob: -3.519408941268921
    4. ';' → logprob: -8.0194091796875
    5. ')' → logprob: -8.1444091796875
    6. '```' → logprob: -8.2694091796875
    7. '.' → logprob: -9.0194091796875
    8. '#' → logprob: -9.5194091796875
    9. '*' → logprob: -9.7694091796875
    10. ' ' → logprob: -9.8944091796875

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8872450590133667
    2. ' map' → logprob: -0.8872450590133667
    3. 'map' → logprob: -2.3872451782226562
    4. '0' → logprob: -3.3872451782226562
    5. 'input' → logprob: -3.7622451782226562
    6. ' input' → logprob: -3.8872451782226562
    7. '10' → logprob: -5.262245178222656
    8. '1' → logprob: -8.012245178222656
    9. 'int' → logprob: -8.137245178222656
    10. ' int' → logprob: -8.137245178222656

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20391696691513062
    2. '<|end|>' → logprob: -1.8289170265197754
    3. '```' → logprob: -4.953917026519775
    4. '(lambda' → logprob: -5.328917026519775
    5. ')' → logprob: -5.578917026519775
    6. '<|end|>' → logprob: -5.828917026519775
    7. 'user' → logprob: -7.328917026519775
    8. '(int' → logprob: -7.703917026519775
    9. '(user' → logprob: -7.891417026519775
    10. '[' → logprob: -8.453916549682617

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24891790747642517
    2. '(input' → logprob: -2.123917818069458
    3. ')' → logprob: -2.498917818069458
    4. '(user' → logprob: -5.748918056488037
    5. '(n' → logprob: -6.123918056488037
    6. '(str' → logprob: -6.373918056488037
    7. '(int' → logprob: -6.373918056488037
    8. '```' → logprob: -6.498918056488037
    9. '(token' → logprob: -6.998918056488037
    10. '(range' → logprob: -6.998918056488037

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931565999984741
    2. ' input' → logprob: -0.6931565999984741
    3. '(input' → logprob: -11.693156242370605
    4. ')' → logprob: -14.318156242370605
    5. ',input' → logprob: -14.943156242370605
    6. '=input' → logprob: -16.693157196044922
    7. '	input' → logprob: -17.318157196044922
    8. '<input' → logprob: -17.443157196044922
    9. ' )' → logprob: -17.818157196044922
    10. '```' → logprob: -18.318157196044922

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9563953876495361
    2. '()' → logprob: -1.0813953876495361
    3. ')' → logprob: -2.331395387649536
    4. '(' → logprob: -2.456395387649536
    5. '('' → logprob: -3.081395387649536
    6. '().' → logprob: -3.581395387649536
    7. '(""))' → logprob: -5.331395149230957
    8. '`()' → logprob: -5.331395149230957
    9. '("")' → logprob: -7.081395149230957
    10. '`)' → logprob: -7.081395149230957

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001966343028470874
    2. 'strip' → logprob: -6.25196647644043
    3. 'rstrip' → logprob: -10.62696647644043
    4. ')' → logprob: -12.00196647644043
    5. ' split' → logprob: -12.37696647644043
    6. 'read' → logprob: -12.87696647644043
    7. '(split' → logprob: -14.87696647644043
    8. '_split' → logprob: -16.62696647644043
    9. 'spl' → logprob: -16.75196647644043
    10. 'startswith' → logprob: -16.87696647644043

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03453158587217331
    2. '))' → logprob: -3.784531593322754
    3. '())' → logprob: -4.534531593322754
    4. '()' → logprob: -8.534531593322754
    5. '`)' → logprob: -8.784531593322754
    6. '(' → logprob: -10.159531593322754
    7. '()))' → logprob: -10.409531593322754
    8. ')`' → logprob: -10.534531593322754
    9. ')))' → logprob: -11.659531593322754
    10. '')' → logprob: -12.159531593322754

Token 11: 'h' (ID: 71)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20007184147834778
    2. 'for' → logprob: -2.8250718116760254
    3. '\' → logprob: -3.5750718116760254
    4. '#' → logprob: -4.200071811676025
    5. '```' → logprob: -4.325071811676025
    6. '
' → logprob: -4.325071811676025
    7. '`' → logprob: -4.575071811676025
    8. 'x' → logprob: -4.950071811676025
    9. 'a' → logprob: -5.450071811676025
    10. ',' → logprob: -5.450071811676025

Token 12: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.24517397582530975
    2. '[' → logprob: -2.745173931121826
    3. ' =' → logprob: -2.745173931121826
    4. '[i' → logprob: -2.870173931121826
    5. '=' → logprob: -3.995173931121826
    6. '_' → logprob: -5.870173931121826
    7. 't' → logprob: -5.995173931121826
    8. 'i' → logprob: -6.370173931121826
    9. 'ights' → logprob: -6.745173931121826
    10. 'eight' → logprob: -7.245173931121826

Token 13: ' list' (ID: 1562)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.000019907951355
    2. ' [' → logprob: -1.125019907951355
    3. '[' → logprob: -2.3750200271606445
    4. '[]' → logprob: -2.7500200271606445
    5. ' list' → logprob: -3.2500200271606445
    6. 'list' → logprob: -3.3750200271606445
    7. '[n' → logprob: -3.3750200271606445
    8. ' []' → logprob: -3.5000200271606445
    9. '[list' → logprob: -6.1250200271606445
    10. '[m' → logprob: -6.5000200271606445

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014053520280867815
    2. '(range' → logprob: -7.001405239105225
    3. '(h' → logprob: -8.001405715942383
    4. '```' → logprob: -10.126405715942383
    5. '(n' → logprob: -10.876405715942383
    6. '(.' → logprob: -11.751405715942383
    7. '((' → logprob: -11.876405715942383
    8. '(
' → logprob: -12.001405715942383
    9. ' (' → logprob: -12.001405715942383
    10. '(np' → logprob: -12.126405715942383

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023548845201730728
    2. '(' → logprob: -3.7735488414764404
    3. '(input' → logprob: -8.89854907989502
    4. '[int' → logprob: -10.02354907989502
    5. ')' → logprob: -10.14854907989502
    6. '<int' → logprob: -10.64854907989502
    7. 'int' → logprob: -10.89854907989502
    8. '(str' → logprob: -11.27354907989502
    9. '=int' → logprob: -11.39854907989502
    10. '```' → logprob: -12.52354907989502

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22740064561367035
    2. ',input' → logprob: -1.6024006605148315
    3. '(input' → logprob: -6.852400779724121
    4. ',int' → logprob: -7.602400779724121
    5. '(' → logprob: -8.102400779724121
    6. ' ,' → logprob: -9.477400779724121
    7. ',(' → logprob: -10.727400779724121
    8. '(int' → logprob: -12.227400779724121
    9. ',float' → logprob: -12.477400779724121
    10. '`,' → logprob: -12.727400779724121

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2014191895723343
    2. ' input' → logprob: -1.7014192342758179
    3. '(input' → logprob: -12.45141887664795
    4. ',input' → logprob: -14.20141887664795
    5. ')' → logprob: -14.70141887664795
    6. '=input' → logprob: -15.07641887664795
    7. '<input' → logprob: -15.57641887664795
    8. '	input' → logprob: -15.70141887664795
    9. '_input' → logprob: -16.451419830322266
    10. '[input' → logprob: -16.576419830322266

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.026299605146050453
    2. '()' → logprob: -3.7762997150421143
    3. '()))' → logprob: -6.276299476623535
    4. '(' → logprob: -7.401299476623535
    5. '())' → logprob: -8.276299476623535
    6. '()));' → logprob: -9.901299476623535
    7. '()(' → logprob: -10.026299476623535
    8. '(),' → logprob: -10.276299476623535
    9. ' ().' → logprob: -10.901299476623535
    10. '().__' → logprob: -11.026299476623535

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.822646693966817e-06
    2. 'strip' → logprob: -12.125007629394531
    3. ' split' → logprob: -13.875007629394531
    4. '(split' → logprob: -13.875007629394531
    5. 'spl' → logprob: -15.250007629394531
    6. 'rstrip' → logprob: -15.500007629394531
    7. ')' → logprob: -17.75000762939453
    8. 'plit' → logprob: -18.25000762939453
    9. 's' → logprob: -19.37500762939453
    10. '```' → logprob: -20.12500762939453

Token 20: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.34496748447418213
    2. '))' → logprob: -1.3449674844741821
    3. '())' → logprob: -3.9699673652648926
    4. ')' → logprob: -4.594967365264893
    5. '()' → logprob: -6.469967365264893
    6. '(' → logprob: -7.344967365264893
    7. '()))
' → logprob: -11.46996784210205
    8. '()));' → logprob: -11.96996784210205
    9. ')))' → logprob: -12.71996784210205
    10. '()))

' → logprob: -12.96996784210205

Token 21: 'ab' (ID: 378)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6706085801124573
    2. 'd' → logprob: -1.4206085205078125
    3. 'c' → logprob: -2.9206085205078125
    4. 'a' → logprob: -3.0456085205078125
    5. 'count' → logprob: -3.6706085205078125
    6. 'max' → logprob: -4.0456085205078125
    7. 's' → logprob: -4.0456085205078125
    8. 'dp' → logprob: -4.4206085205078125
    9. 'i' → logprob: -4.5456085205078125
    10. 'f' → logprob: -5.0456085205078125

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44897547364234924
    2. ' =' → logprob: -1.0739754438400269
    3. '[' → logprob: -4.198975563049316
    4. 's' → logprob: -5.823975563049316
    5. '[]' → logprob: -6.948975563049316
    6. '_' → logprob: -7.823975563049316
    7. ')' → logprob: -8.198975563049316
    8. '[i' → logprob: -8.948975563049316
    9. ' ' → logprob: -9.323975563049316
    10. '.' → logprob: -10.073975563049316

Token 23: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3922676146030426
    2. '[list' → logprob: -1.1422675848007202
    3. '[int' → logprob: -6.01726770401001
    4. '[]' → logprob: -7.14226770401001
    5. ' [' → logprob: -7.14226770401001
    6. 'list' → logprob: -7.26726770401001
    7. '(list' → logprob: -8.767267227172852
    8. '[List' → logprob: -9.017267227172852
    9. '[input' → logprob: -9.017267227172852
    10. '[len' → logprob: -9.892267227172852

Token 24: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015920029545668513
    2. ' for' → logprob: -9.50015926361084
    3. '[' → logprob: -10.00015926361084
    4. '=' → logprob: -10.75015926361084
    5. '.' → logprob: -11.50015926361084
    6. '.for' → logprob: -13.12515926361084
    7. '_' → logprob: -13.87515926361084
    8. '[]' → logprob: -13.87515926361084
    9. '```' → logprob: -14.62515926361084
    10. 'f' → logprob: -14.75015926361084

Token 25: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3532159626483917
    2. '_' → logprob: -1.9782159328460693
    3. ' ' → logprob: -2.1032159328460693
    4. ' _' → logprob: -3.7282159328460693
    5. 'i' → logprob: -4.353216171264648
    6. ' ‌' → logprob: -8.853216171264648
    7. '  ' → logprob: -9.728216171264648
    8. ' ' → logprob: -10.228216171264648
    9. '_i' → logprob: -10.728216171264648
    10. ' ▁' → logprob: -11.228216171264648

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.061246756464242935
    2. 'in' → logprob: -2.936246871948242
    3. ' i' → logprob: -6.061246871948242
    4. ' ' → logprob: -6.186246871948242
    5. 'i' → logprob: -6.311246871948242
    6. 'n' → logprob: -9.561246871948242
    7. '  ' → logprob: -10.436246871948242
    8. ' n' → logprob: -11.811246871948242
    9. '_' → logprob: -11.936246871948242
    10. 'a' → logprob: -12.186246871948242

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018164927139878273
    2. ' range' → logprob: -4.018165111541748
    3. 'm' → logprob: -12.14316463470459
    4. 'ab' → logprob: -12.39316463470459
    5. 'h' → logprob: -13.39316463470459
    6. '(range' → logprob: -13.64316463470459
    7. ' h' → logprob: -14.01816463470459
    8. 'ran' → logprob: -14.51816463470459
    9. '_range' → logprob: -15.39316463470459
    10. 'r' → logprob: -15.39316463470459

Token 28: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011200252920389175
    2. '(n' → logprob: -4.511200428009033
    3. '(m' → logprob: -9.261199951171875
    4. ' (' → logprob: -10.011199951171875
    5. '(int' → logprob: -12.636199951171875
    6. '(
' → logprob: -12.636199951171875
    7. '(range' → logprob: -13.011199951171875
    8. '(len' → logprob: -13.511199951171875
    9. '(s' → logprob: -13.886199951171875
    10. '(i' → logprob: -14.761199951171875

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017353941220790148
    2. ')' → logprob: -6.751735210418701
    3. ':' → logprob: -8.37673568725586
    4. '):
' → logprob: -8.50173568725586
    5. ' ):' → logprob: -9.00173568725586
    6. '():' → logprob: -12.87673568725586
    7. '):
' → logprob: -13.87673568725586
    8. ',' → logprob: -14.37673568725586
    9. ''):' → logprob: -14.62673568725586
    10. ']:' → logprob: -14.62673568725586

Token 30: '   ' (ID: 271)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.43872132897377014
    2. ' ab' → logprob: -1.3137212991714478
    3. '   ' → logprob: -2.5637214183807373
    4. '```' → logprob: -5.313721179962158
    5. 'a' → logprob: -6.063721179962158
    6. ' a' → logprob: -7.313721179962158
    7. '(ab' → logprob: -7.813721179962158
    8. ' ' → logprob: -8.438721656799316
    9. '`' → logprob: -8.938721656799316
    10. 'abc' → logprob: -8.938721656799316

Token 31: ' a' (ID: 261)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.005313328001648188
    2. 'a' (adapté à ' a') → logprob: -5.630313396453857
    3. ' ab' → logprob: -6.380313396453857
    4. '_ab' → logprob: -12.2553129196167
    5. 'abl' → logprob: -12.6303129196167
    6. '```' → logprob: -13.1303129196167
    7. 'abc' → logprob: -13.2553129196167
    8. '   ' → logprob: -13.5053129196167
    9. ' a' → logprob: -14.1303129196167
    10. '_' → logprob: -14.8803129196167

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03737416863441467
    2. ',b' → logprob: -3.662374258041382
    3. 'b' → logprob: -4.662374019622803
    4. ' ,' → logprob: -6.537374019622803
    5. ' b' → logprob: -9.037374496459961
    6. '_,' → logprob: -14.787374496459961
    7. ' ' → logprob: -15.662374496459961
    8. '‌,' → logprob: -15.912374496459961
    9. '[' → logprob: -16.16237449645996
    10. 's' → logprob: -16.16237449645996

Token 33: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4740850329399109
    2. ' b' → logprob: -0.9740850329399109
    3. '<|end|>' → logprob: -12.099084854125977
    4. ' ' → logprob: -12.974084854125977
    5. '_b' → logprob: -17.349084854125977
    6. '>b' → logprob: -17.474084854125977
    7. '<|end|>' → logprob: -17.474084854125977
    8. 's' → logprob: -17.974084854125977
    9. ' ' → logprob: -18.349084854125977
    10. '_' → logprob: -18.349084854125977

Token 34: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931489109992981
    2. ' =' → logprob: -0.6931489109992981
    3. ')' → logprob: -13.693148612976074
    4. ',' → logprob: -15.818148612976074
    5. ' ' → logprob: -15.818148612976074
    6. '＝' → logprob: -16.19314956665039
    7. '   ' → logprob: -16.44314956665039
    8. '=int' → logprob: -17.31814956665039
    9. ')=' → logprob: -17.56814956665039
    10. '  ' → logprob: -17.69314956665039

Token 35: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.005234594456851482
    2. 'map' → logprob: -5.255234718322754
    3. ' list' → logprob: -14.505234718322754
    4. '	map' → logprob: -15.755234718322754
    5. ' ' → logprob: -16.755233764648438
    6. '   ' → logprob: -17.630233764648438
    7. 'list' → logprob: -18.880233764648438
    8. ' ' → logprob: -18.880233764648438
    9. ' mapa' → logprob: -18.880233764648438
    10. ' tuple' → logprob: -19.130233764648438

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.860340752406046e-05
    2. '(' → logprob: -10.5000581741333
    3. '<int' → logprob: -11.1250581741333
    4. '[int' → logprob: -11.5000581741333
    5. 'int' → logprob: -12.7500581741333
    6. '=int' → logprob: -13.1250581741333
    7. ',int' → logprob: -14.7500581741333
    8. ' (' → logprob: -15.2500581741333
    9. ']int' → logprob: -15.3750581741333
    10. '(str' → logprob: -16.000059127807617

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017644320614635944
    2. ',input' → logprob: -6.376764297485352
    3. ',int' → logprob: -10.376764297485352
    4. '(),' → logprob: -10.876764297485352
    5. ' ,' → logprob: -12.501764297485352
    6. '```' → logprob: -13.501764297485352
    7. '`,' → logprob: -13.626764297485352
    8. ')' → logprob: -14.001764297485352
    9. '(' → logprob: -14.251764297485352
    10. '',' → logprob: -14.376764297485352

Token 38: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759414434432983
    2. ' input' → logprob: -0.8259414434432983
    3. '(input' → logprob: -14.32594108581543
    4. ')' → logprob: -14.82594108581543
    5. '=input' → logprob: -14.95094108581543
    6. ',input' → logprob: -15.20094108581543
    7. ' ' → logprob: -16.20094108581543
    8. '	input' → logprob: -16.32594108581543
    9. '_input' → logprob: -16.82594108581543
    10. '[input' → logprob: -17.32594108581543

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.065608562901616e-05
    2. '()' → logprob: -9.500081062316895
    3. ')' → logprob: -13.000081062316895
    4. ' ().' → logprob: -13.375081062316895
    5. '.' → logprob: -13.750081062316895
    6. '   ' → logprob: -15.875081062316895
    7. '.readline' → logprob: -16.375080108642578
    8. '.py' → logprob: -16.500080108642578
    9. '.split' → logprob: -16.500080108642578
    10. '('').' → logprob: -16.625080108642578

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. 'strip' → logprob: -14.625000953674316
    3. ' split' → logprob: -16.25
    4. 'plit' → logprob: -17.0
    5. 'spl' → logprob: -17.0
    6. '(split' → logprob: -17.25
    7. 'rstrip' → logprob: -17.625
    8. ')' → logprob: -18.375
    9. '_split' → logprob: -19.625
    10. '())' → logprob: -20.375

Token 41: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18668723106384277
    2. '())' → logprob: -1.9366872310638428
    3. '()' → logprob: -3.6866872310638428
    4. '))' → logprob: -7.686687469482422
    5. '())
' → logprob: -7.936687469482422
    6. ')
' → logprob: -8.561687469482422
    7. '()
' → logprob: -10.686687469482422
    8. '()))' → logprob: -11.561687469482422
    9. '(' → logprob: -12.561687469482422
    10. ')`' → logprob: -12.936687469482422

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009995942935347557
    2. 'ab' → logprob: -4.759995937347412
    3. '    
' → logprob: -8.25999641418457
    4. '```' → logprob: -8.25999641418457
    5. '	' → logprob: -8.88499641418457
    6. '<|end|>' → logprob: -9.13499641418457
    7. '       ' → logprob: -9.25999641418457
    8. '\t' → logprob: -9.75999641418457
    9. '(ab' → logprob: -9.75999641418457
    10. ')' → logprob: -9.88499641418457

Token 43: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' (adapté à ' ab') → logprob: -0.12786562740802765
    2. '   ' → logprob: -2.1278655529022217
    3. ' ab' → logprob: -7.127865791320801
    4. '    
' → logprob: -10.8778657913208
    5. '_ab' → logprob: -11.0028657913208
    6. '(ab' → logprob: -11.0028657913208
    7. 'a' → logprob: -11.1278657913208
    8. '       ' → logprob: -11.5028657913208
    9. '```' → logprob: -11.6278657913208
    10. '	' → logprob: -11.7528657913208

Token 44: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002546885749325156
    2. '.' → logprob: -6.002546787261963
    3. '.app' → logprob: -10.252547264099121
    4. '.ap' → logprob: -11.377547264099121
    5. '.push' → logprob: -12.002547264099121
    6. '.extend' → logprob: -12.252547264099121
    7. '.setdefault' → logprob: -12.502547264099121
    8. ').' → logprob: -13.252547264099121
    9. ' .' → logprob: -13.252547264099121
    10. '.py' → logprob: -13.877547264099121

Token 45: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00034821697045117617
    2. '(' → logprob: -8.000348091125488
    3. '(ab' → logprob: -11.750348091125488
    4. '(a' → logprob: -12.375348091125488
    5. '([' → logprob: -15.625348091125488
    6. '(((' → logprob: -16.125349044799805
    7. '(abs' → logprob: -16.375349044799805
    8. '(
' → logprob: -16.500349044799805
    9. '(('' → logprob: -16.875349044799805
    10. '```' → logprob: -17.500349044799805

Token 46: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.596781946020201e-05
    2. ' a' → logprob: -10.000045776367188
    3. ')a' → logprob: -15.125045776367188
    4. '   ' → logprob: -16.250045776367188
    5. ''a' → logprob: -16.250045776367188
    6. '(a' → logprob: -17.125045776367188
    7. '	a' → logprob: -17.875045776367188
    8. 'b' → logprob: -18.250045776367188
    9. ' ' → logprob: -18.500045776367188
    10. '[a' → logprob: -18.875045776367188

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.63456130027771
    2. '-' → logprob: -0.88456130027771
    3. ' -' → logprob: -3.13456130027771
    4. ',b' → logprob: -4.634561538696289
    5. ' ,' → logprob: -5.634561538696289
    6. '-,' → logprob: -9.259561538696289
    7. ' ' → logprob: -11.384561538696289
    8. '1' → logprob: -12.259561538696289
    9. '[' → logprob: -12.759561538696289
    10. 'b' → logprob: -12.884561538696289

Token 48: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4740792512893677
    2. ' b' → logprob: -0.9740792512893677
    3. ' ' → logprob: -13.724079132080078
    4. '	b' → logprob: -15.224079132080078
    5. ' ' → logprob: -15.349079132080078
    6. ')b' → logprob: -15.724079132080078
    7. ',b' → logprob: -15.849079132080078
    8. ' б' → logprob: -16.599079132080078
    9. '```' → logprob: -17.099079132080078
    10. ' 
' → logprob: -17.661579132080078

Token 49: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0003556039300747216
    2. ')' → logprob: -8.12535572052002
    3. ')])' → logprob: -10.50035572052002
    4. '])
' → logprob: -11.25035572052002
    5. ']' → logprob: -12.25035572052002
    6. ' ])' → logprob: -12.50035572052002
    7. '   ' → logprob: -12.75035572052002
    8. ')]' → logprob: -13.00035572052002
    9. '))' → logprob: -13.62535572052002
    10. ']])' → logprob: -13.62535572052002

Token 50: 'check' (ID: 3416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8651370406150818
    2. '#' → logprob: -1.8651371002197266
    3. '[' → logprob: -2.3651371002197266
    4. ']' → logprob: -3.1151371002197266
    5. 'result' → logprob: -3.1151371002197266
    6. '<|end|>' → logprob: -3.1151371002197266
    7. '```' → logprob: -3.2401371002197266
    8. '\n' → logprob: -3.6151371002197266
    9. 'for' → logprob: -4.115137100219727
    10. 'ans' → logprob: -4.115137100219727

Token 51: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26603683829307556
    2. ' =' → logprob: -1.516036868095398
    3. '_' → logprob: -4.5160369873046875
    4. 's' → logprob: -6.6410369873046875
    5. '=[]' → logprob: -7.2660369873046875
    6. '[' → logprob: -8.016036987304688
    7. '[]' → logprob: -8.891036987304688
    8. '(' → logprob: -9.516036987304688
    9. '_list' → logprob: -9.516036987304688
    10. '=set' → logprob: -9.516036987304688

Token 52: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010526961414143443
    2. '[n' → logprob: -7.2510528564453125
    3. '[]' → logprob: -9.001052856445312
    4. '[h' → logprob: -9.001052856445312
    5. '[a' → logprob: -10.001052856445312
    6. ' [' → logprob: -11.001052856445312
    7. 'set' → logprob: -11.751052856445312
    8. '[m' → logprob: -12.001052856445312
    9. '[len' → logprob: -12.126052856445312
    10. '[b' → logprob: -12.251052856445312

Token 53: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.17626838386058807
    2. '0' → logprob: -2.1762683391571045
    3. 'True' → logprob: -3.0512683391571045
    4. '1' → logprob: -8.051268577575684
    5. ' False' → logprob: -8.176268577575684
    6. '-' → logprob: -8.926268577575684
    7. ']' → logprob: -9.926268577575684
    8. ' True' → logprob: -10.301268577575684
    9. ' ' → logprob: -11.801268577575684
    10. 'n' → logprob: -12.301268577575684

Token 54: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013035518117249012
    2. ']*' → logprob: -4.513035297393799
    3. ']*(' → logprob: -6.388035297393799
    4. ' for' → logprob: -8.513035774230957
    5. ' ]' → logprob: -10.013035774230957
    6. 'for' → logprob: -10.013035774230957
    7. ')' → logprob: -12.513035774230957
    8. ']+' → logprob: -12.638035774230957
    9. ',' → logprob: -13.138035774230957
    10. ')]' → logprob: -13.263035774230957

Token 55: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1028597354888916
    2. ']*(' → logprob: -1.1028597354888916
    3. ']' → logprob: -1.9778597354888916
    4. ']*' → logprob: -2.3528597354888916
    5. '*(' → logprob: -2.6028597354888916
    6. '*n' → logprob: -3.7278597354888916
    7. '(n' → logprob: -6.6028594970703125
    8. 'for' → logprob: -6.9778594970703125
    9. '*m' → logprob: -7.2278594970703125
    10. ' *' → logprob: -7.7278594970703125

Token 56: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7594071626663208
    2. 'h' → logprob: -0.7594071626663208
    3. '[h' → logprob: -2.7594070434570312
    4. ' [' → logprob: -7.884407043457031
    5. ' h' → logprob: -8.634407043457031
    6. '[n' → logprob: -8.759407043457031
    7. '[-' → logprob: -11.259407043457031
    8. '[a' → logprob: -11.509407043457031
    9. 'list' → logprob: -11.884407043457031
    10. '[list' → logprob: -12.134407043457031

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004936986370012164
    2. '10' → logprob: -8.625494003295898
    3. 'h' → logprob: -8.750494003295898
    4. '100' → logprob: -9.875494003295898
    5. '(' → logprob: -10.625494003295898
    6. 'float' → logprob: -10.750494003295898
    7. '-' → logprob: -11.000494003295898
    8. '(-' → logprob: -11.375494003295898
    9. '2' → logprob: -11.500494003295898
    10. '999' → logprob: -12.500494003295898

Token 58: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10653189569711685
    2. ']*(' → logprob: -2.856531858444214
    3. ']*' → logprob: -3.856531858444214
    4. ' for' → logprob: -3.856531858444214
    5. 'for' → logprob: -7.356532096862793
    6. '0' → logprob: -8.481532096862793
    7. '1' → logprob: -8.606532096862793
    8. ')' → logprob: -9.106532096862793
    9. ',' → logprob: -9.856532096862793
    10. ' *' → logprob: -10.356532096862793

Token 59: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8369908928871155
    2. ' *' → logprob: -0.9619908928871155
    3. '*(' → logprob: -1.9619908332824707
    4. '*n' → logprob: -4.461990833282471
    5. ']*(' → logprob: -4.711990833282471
    6. '[n' → logprob: -4.836990833282471
    7. '[' → logprob: -5.086990833282471
    8. ' for' → logprob: -6.086990833282471
    9. '*[' → logprob: -6.461990833282471
    10. '```' → logprob: -6.961990833282471

Token 60: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009818419814109802
    2. '(n' → logprob: -4.6348185539245605
    3. '(' → logprob: -10.259818077087402
    4. ' n' → logprob: -11.509818077087402
    5. 'm' → logprob: -12.009818077087402
    6. '100' → logprob: -12.384818077087402
    7. ' (' → logprob: -13.134818077087402
    8. '(m' → logprob: -13.634818077087402
    9. '_n' → logprob: -13.634818077087402
    10. '	n' → logprob: -14.134818077087402

Token 61: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06723944842815399
    2. '<|end|>' → logprob: -3.31723952293396
    3. '\n' → logprob: -3.94223952293396
    4. '
' → logprob: -5.442239284515381
    5. '```' → logprob: -6.067239284515381
    6. ' 
' → logprob: -7.192239284515381
    7. '  
' → logprob: -7.317239284515381
    8. '<|end|>' → logprob: -7.817239284515381
    9. '' → logprob: -8.692239761352539
    10. 'newline' → logprob: -9.317239761352539

Token 62: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6444618105888367
    2. 'for' → logprob: -1.6444618701934814
    3. '\n' → logprob: -2.0194618701934814
    4. '```' → logprob: -2.7694618701934814
    5. '<|end|>' → logprob: -3.0194618701934814
    6. ' for' → logprob: -3.3944618701934814
    7. ')' → logprob: -7.269461631774902
    8. '0' → logprob: -7.394461631774902
    9. '`' → logprob: -7.894461631774902
    10. '\' → logprob: -8.144461631774902

Token 63: ' pair' (ID: 10610)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18182483315467834
    2. ' a' → logprob: -2.0568249225616455
    3. 'i' → logprob: -4.306824684143066
    4. ' _' → logprob: -4.931824684143066
    5. 'a' → logprob: -5.056824684143066
    6. ' ab' → logprob: -5.306824684143066
    7. '_' → logprob: -5.306824684143066
    8. ' ' → logprob: -7.681824684143066
    9. 'ab' → logprob: -8.306824684143066
    10. ' (' → logprob: -8.931824684143066

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09210902452468872
    2. 'in' → logprob: -2.467108964920044
    3. 's' → logprob: -6.217109203338623
    4. '[' → logprob: -7.342109203338623
    5. ',' → logprob: -8.592108726501465
    6. ' ' → logprob: -9.092108726501465
    7. '   ' → logprob: -10.092108726501465
    8. '_' → logprob: -10.467108726501465
    9. 'a' → logprob: -10.717108726501465
    10. '1' → logprob: -11.092108726501465

Token 65: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.04304121062159538
    2. ' ab' → logprob: -3.168041229248047
    3. '(ab' → logprob: -10.168041229248047
    4. '   ' → logprob: -13.793041229248047
    5. 'range' → logprob: -14.293041229248047
    6. '_ab' → logprob: -15.043041229248047
    7. ' ' → logprob: -15.043041229248047
    8. ''ab' → logprob: -15.418041229248047
    9. 'abbr' → logprob: -15.793041229248047
    10. 'abc' → logprob: -15.918041229248047

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005742399953305721
    2. ':
' → logprob: -7.750574111938477
    3. '[' → logprob: -9.250574111938477
    4. '<|end|>' → logprob: -10.750574111938477
    5. ',' → logprob: -11.875574111938477
    6. '):' → logprob: -12.125574111938477
    7. '.' → logprob: -13.250574111938477
    8. ':

' → logprob: -13.500574111938477
    9. '[:]' → logprob: -13.625574111938477
    10. '<|end|>' → logprob: -13.875574111938477

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.555227518081665
    2. '[' → logprob: -1.180227518081665
    3. ' ' → logprob: -3.055227518081665
    4. ':' → logprob: -3.180227518081665
    5. ' if' → logprob: -4.555227279663086
    6. '  
' → logprob: -5.680227279663086
    7. '    
' → logprob: -5.930227279663086
    8. '<|end|>' → logprob: -6.305227279663086
    9. ',' → logprob: -6.555227279663086
    10. ' 
' → logprob: -6.805227279663086

Token 68: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.1524401605129242
    2. ' a' → logprob: -2.777440071105957
    3. 'if' → logprob: -3.152440071105957
    4. ' if' → logprob: -3.652440071105957
    5. '   ' → logprob: -5.277440071105957
    6. ' pair' → logprob: -5.777440071105957
    7. 'pair' → logprob: -6.277440071105957
    8. ' ' → logprob: -9.652440071105957
    9. ')' → logprob: -10.027440071105957
    10. ',' → logprob: -10.027440071105957

Token 69: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11916644126176834
    2. ' ,' → logprob: -2.244166374206543
    3. '[' → logprob: -6.369166374206543
    4. ' ' → logprob: -6.369166374206543
    5. '-' → logprob: -6.744166374206543
    6. ' -' → logprob: -7.244166374206543
    7. ' =' → logprob: -7.494166374206543
    8. ' -=' → logprob: -9.494166374206543
    9. ']' → logprob: -9.869166374206543
    10. '=' → logprob: -10.119166374206543

Token 70: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.011085192672908306
    2. 'pair' → logprob: -4.511085033416748
    3. '(pair' → logprob: -10.386085510253906
    4. '[' → logprob: -13.386085510253906
    5. ' ' → logprob: -13.511085510253906
    6. '1' → logprob: -13.886085510253906
    7. '<pair' → logprob: -14.011085510253906
    8. '_pair' → logprob: -14.511085510253906
    9. '0' → logprob: -15.136085510253906
    10. ' [' → logprob: -15.636085510253906

Token 71: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.496052371105179e-05
    2. '-' → logprob: -9.62509536743164
    3. '[-' → logprob: -11.37509536743164
    4. ' [' → logprob: -11.50009536743164
    5. '0' → logprob: -12.50009536743164
    6. ' -' → logprob: -13.50009536743164
    7. '   ' → logprob: -14.75009536743164
    8. '```' → logprob: -15.00009536743164
    9. '[
' → logprob: -15.31259536743164
    10. '][' → logprob: -15.87509536743164

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001664717128733173
    2. ' ' → logprob: -9.375166893005371
    3. '-' → logprob: -9.625166893005371
    4. '1' → logprob: -11.625166893005371
    5. ' -' → logprob: -12.875166893005371
    6. '   ' → logprob: -13.562666893005371
    7. '[' → logprob: -15.000166893005371
    8. '```' → logprob: -15.250166893005371
    9. ']' → logprob: -15.812666893005371
    10. ')' → logprob: -15.875166893005371

Token 73: ']
' (ID: 1592)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4659166932106018
    2. ']' → logprob: -1.715916633605957
    3. ' -' → logprob: -1.715916633605957
    4. ']-' → logprob: -4.590916633605957
    5. ' ]' → logprob: -6.465916633605957
    6. '<|end|>' → logprob: -7.715916633605957
    7. ' ' → logprob: -8.215916633605957
    8. ')' → logprob: -8.965916633605957
    9. '   ' → logprob: -9.465916633605957
    10. '1' → logprob: -10.465916633605957

Token 74: '   ' (ID: 271)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5046018958091736
    2. ' b' → logprob: -1.7546019554138184
    3. ' ' → logprob: -2.1296019554138184
    4. 'b' → logprob: -2.5046019554138184
    5. ' -' → logprob: -4.129601955413818
    6. '   ' → logprob: -5.629601955413818
    7. ',b' → logprob: -6.879601955413818
    8. ',' → logprob: -7.879601955413818
    9. ' 
' → logprob: -8.37960147857666
    10. '    ' → logprob: -8.87960147857666

Token 75: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0024704246316105127
    2. ' b' → logprob: -6.75247049331665
    3. '1' → logprob: -7.00247049331665
    4. '-' → logprob: -8.002470016479492
    5. ' ' → logprob: -9.877470016479492
    6. ' -' → logprob: -13.127470016479492
    7. '-b' → logprob: -13.877470016479492
    8. '   ' → logprob: -15.502470016479492
    9. '	b' → logprob: -16.002470016479492
    10. 'a' → logprob: -16.127470016479492

Token 76: ' =' (ID: 314)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.916472315788269
    2. '<|end|>' → logprob: -1.416472315788269
    3. ' ' → logprob: -1.916472315788269
    4. ' -' → logprob: -2.6664724349975586
    5. ' =' → logprob: -3.0414724349975586
    6. '=' → logprob: -3.6664724349975586
    7. ')' → logprob: -3.7914724349975586
    8. ']' → logprob: -4.416472434997559
    9. '<|end|>' → logprob: -4.541472434997559
    10. '   ' → logprob: -4.666472434997559

Token 77: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.6931568384170532
    2. 'pair' → logprob: -0.6931568384170532
    3. '(pair' → logprob: -12.068157196044922
    4. ' ' → logprob: -13.443157196044922
    5. '1' → logprob: -13.943157196044922
    6. ' b' → logprob: -14.568157196044922
    7. 'b' → logprob: -14.818157196044922
    8. '0' → logprob: -16.068157196044922
    9. '<pair' → logprob: -16.068157196044922
    10. '   ' → logprob: -16.193157196044922

Token 78: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010835404973477125
    2. '1' → logprob: -7.1260833740234375
    3. '-' → logprob: -8.876083374023438
    4. '```' → logprob: -9.251083374023438
    5. '][' → logprob: -11.251083374023438
    6. '0' → logprob: -11.501083374023438
    7. '   ' → logprob: -12.501083374023438
    8. ' [' → logprob: -12.876083374023438
    9. '[-' → logprob: -12.876083374023438
    10. '[
' → logprob: -13.001083374023438

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004096093121916056
    2. '0' → logprob: -5.504096031188965
    3. '-' → logprob: -11.254096031188965
    4. ' ' → logprob: -12.754096031188965
    5. ']' → logprob: -14.004096031188965
    6. '])' → logprob: -14.504096031188965
    7. '```' → logprob: -16.62909698486328
    8. ')' → logprob: -16.75409698486328
    9. '4' → logprob: -16.75409698486328
    10. '2' → logprob: -17.12909698486328

Token 80: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12442883104085922
    2. ')' → logprob: -2.9994287490844727
    3. '<|end|>' → logprob: -3.2494287490844727
    4. '
' → logprob: -4.124428749084473
    5. '+' → logprob: -5.499428749084473
    6. '   ' → logprob: -5.874428749084473
    7. '<|end|>' → logprob: -6.749428749084473
    8. ' ' → logprob: -7.124428749084473
    9. ' ]' → logprob: -7.249428749084473
    10. ']
' → logprob: -7.249428749084473

Token 81: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1366162300109863
    2. '<|end|>' → logprob: -1.1366162300109863
    3. ' 
' → logprob: -1.8866162300109863
    4. '   ' → logprob: -2.1366162300109863
    5. '  
' → logprob: -3.6366162300109863
    6. '    
' → logprob: -4.136616230010986
    7. ' if' → logprob: -4.761616230010986
    8. '   
' → logprob: -4.886616230010986
    9. '
' → logprob: -4.886616230010986
    10. '\n' → logprob: -5.261616230010986

Token 82: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2909976840019226
    2. 'if' (adapté à ' if') → logprob: -2.2909977436065674
    3. ' ' → logprob: -2.7909977436065674
    4. '   ' → logprob: -3.0409977436065674
    5. ' check' → logprob: -3.6659977436065674
    6. 'check' → logprob: -5.665997505187988
    7. '-' → logprob: -5.790997505187988
    8. ')' → logprob: -6.540997505187988
    9. '+' → logprob: -6.665997505187988
    10. '<|end|>' → logprob: -6.790997505187988

Token 83: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5933790802955627
    2. 'h' → logprob: -0.8433790802955627
    3. ' check' → logprob: -4.593379020690918
    4. 'check' → logprob: -5.093379020690918
    5. ' ' → logprob: -8.343379020690918
    6. ' abs' → logprob: -8.968379020690918
    7. ' not' → logprob: -9.343379020690918
    8. ' b' → logprob: -9.343379020690918
    9. ' (' → logprob: -9.468379020690918
    10. 'b' → logprob: -9.593379020690918

Token 84: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0001596771035110578
    2. '[' → logprob: -9.12515926361084
    3. 'a' → logprob: -10.25015926361084
    4. '[b' → logprob: -11.62515926361084
    5. '[h' → logprob: -12.25015926361084
    6. '```' → logprob: -14.00015926361084
    7. '[
' → logprob: -15.50015926361084
    8. ' [' → logprob: -16.250160217285156
    9. ' a' → logprob: -16.625160217285156
    10. '[u' → logprob: -16.750160217285156

Token 85: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0360255129635334
    2. '[' → logprob: -3.9110255241394043
    3. ']>' → logprob: -4.536025524139404
    4. '>' → logprob: -6.411025524139404
    5. '[a' → logprob: -6.911025524139404
    6. '-' → logprob: -7.286025524139404
    7. '']' → logprob: -8.286025047302246
    8. '```' → logprob: -8.536025047302246
    9. ' ]' → logprob: -8.911025047302246
    10. 'a' → logprob: -8.911025047302246

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.598092684522271e-05
    2. ']' → logprob: -10.125056266784668
    3. ' ' → logprob: -11.625056266784668
    4. ']>' → logprob: -12.125056266784668
    5. '```' → logprob: -15.250056266784668
    6. '-' → logprob: -15.375056266784668
    7. '   ' → logprob: -15.875056266784668
    8. '0' → logprob: -16.00005531311035
    9. '2' → logprob: -16.25005531311035
    10. '>' → logprob: -16.37505531311035

Token 87: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0009673224412836134
    2. '">' → logprob: -8.125967025756836
    3. ' >' → logprob: -8.250967025756836
    4. '```' → logprob: -9.125967025756836
    5. ']' → logprob: -9.250967025756836
    6. ')' → logprob: -10.125967025756836
    7. ']>' → logprob: -10.125967025756836
    8. ')>' → logprob: -10.500967025756836
    9. '   ' → logprob: -11.250967025756836
    10. ''>' → logprob: -11.625967025756836

Token 88: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0025078821927309036
    2. ' >' → logprob: -6.00250768661499
    3. '">' → logprob: -11.502508163452148
    4. '<' → logprob: -12.127508163452148
    5. '>=' → logprob: -12.377508163452148
    6. '```' → logprob: -12.377508163452148
    7. '>

' → logprob: -13.252508163452148
    8. '<=' → logprob: -14.002508163452148
    9. '()>' → logprob: -14.127508163452148
    10. ' ' → logprob: -14.127508163452148

Token 89: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0031837786082178354
    2. ' h' → logprob: -5.753183841705322
    3. '=' → logprob: -13.253183364868164
    4. ' ' → logprob: -13.378183364868164
    5. '   ' → logprob: -14.003183364868164
    6. '	h' → logprob: -14.253183364868164
    7. '  ' → logprob: -14.878183364868164
    8. '=h' → logprob: -15.378183364868164
    9. '<h' → logprob: -16.565683364868164
    10. '>' → logprob: -16.628183364868164

Token 90: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.5570885807392187e-05
    2. 'b' → logprob: -11.500015258789062
    3. '[h' → logprob: -12.500015258789062
    4. '[' → logprob: -13.625015258789062
    5. '[a' → logprob: -15.375015258789062
    6. ' b' → logprob: -16.500015258789062
    7. '   ' → logprob: -16.625015258789062
    8. ' [' → logprob: -16.875015258789062
    9. '```' → logprob: -17.000015258789062
    10. ' ' → logprob: -17.500015258789062

Token 91: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.491498531133402e-06
    2. ' -' → logprob: -12.000009536743164
    3. '1' → logprob: -13.375009536743164
    4. '[' → logprob: -13.625009536743164
    5. '[-' → logprob: -15.750009536743164
    6. ']-' → logprob: -16.125009536743164
    7. '   ' → logprob: -16.625009536743164
    8. ']' → logprob: -17.000009536743164
    9. ' ' → logprob: -17.125009536743164
    10. '])' → logprob: -17.125009536743164

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.875009536743164
    3. '2' → logprob: -13.875009536743164
    4. '-' → logprob: -14.500009536743164
    5. '```' → logprob: -15.000009536743164
    6. '   ' → logprob: -15.750009536743164
    7. '１' → logprob: -16.187509536743164
    8. ']' → logprob: -16.250009536743164
    9. '11' → logprob: -16.500009536743164
    10. '۱' → logprob: -16.625009536743164

Token 93: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015774378553032875
    2. ']:' → logprob: -4.765774250030518
    3. ' and' → logprob: -5.390774250030518
    4. '):' → logprob: -6.390774250030518
    5. 'and' → logprob: -7.765774250030518
    6. ':
' → logprob: -8.765774726867676
    7. ' :' → logprob: -9.015774726867676
    8. ']' → logprob: -9.265774726867676
    9. ' ):' → logprob: -10.390774726867676
    10. ')' → logprob: -11.015774726867676

Token 94: '       ' (ID: 309)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.10764362663030624
    2. '   ' → logprob: -3.1076436042785645
    3. '0' → logprob: -3.7326436042785645
    4. ' check' → logprob: -3.9826436042785645
    5. '       ' → logprob: -4.8576436042785645
    6. 'and' → logprob: -5.9826436042785645
    7. ' ' → logprob: -6.4826436042785645
    8. ' and' → logprob: -6.6076436042785645
    9. '1' → logprob: -7.7326436042785645
    10. 'if' → logprob: -8.482644081115723

Token 95: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -0.05101259797811508
    2. ' check' → logprob: -3.0510125160217285
    3. '   ' → logprob: -6.6760125160217285
    4. '
' → logprob: -7.4260125160217285
    5. 'if' → logprob: -8.301012992858887
    6. '       ' → logprob: -9.426012992858887
    7. ' ' → logprob: -10.176012992858887
    8. '           ' → logprob: -10.301012992858887
    9. '	check' → logprob: -10.551012992858887
    10. '```' → logprob: -10.926012992858887

Token 96: '[b' (ID: 40800)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.9875325708417222e-05
    2. '[b' → logprob: -10.750029563903809
    3. '[' → logprob: -12.250029563903809
    4. 'a' → logprob: -12.750029563903809
    5. ' [' → logprob: -15.000029563903809
    6. '```' → logprob: -15.750029563903809
    7. '[h' → logprob: -17.500030517578125
    8. '[c' → logprob: -17.625030517578125
    9. '[s' → logprob: -17.625030517578125
    10. ' a' → logprob: -17.625030517578125

Token 97: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06381965428590775
    2. '-' → logprob: -2.813819646835327
    3. ' ]' → logprob: -6.938819885253906
    4. ' -' → logprob: -8.063819885253906
    5. ']=' → logprob: -8.563819885253906
    6. ']-' → logprob: -9.063819885253906
    7. '<|end|>' → logprob: -9.688819885253906
    8. '1' → logprob: -9.813819885253906
    9. '']' → logprob: -10.188819885253906
    10. '[' → logprob: -10.813819885253906

Token 98: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6336330771446228
    2. ']' → logprob: -1.3836331367492676
    3. ']=' → logprob: -1.7586331367492676
    4. ' =' → logprob: -3.7586331367492676
    5. '<|end|>' → logprob: -4.508633136749268
    6. ' ]' → logprob: -5.383633136749268
    7. '[' → logprob: -5.758633136749268
    8. '0' → logprob: -6.633633136749268
    9. '```' → logprob: -7.633633136749268
    10. ' ' → logprob: -7.633633136749268

Token 99: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13308408856391907
    2. '1' → logprob: -2.1330840587615967
    3. ' ' → logprob: -5.883084297180176
    4. 'a' → logprob: -6.258084297180176
    5. 'max' → logprob: -6.758084297180176
    6. ' max' → logprob: -9.383084297180176
    7. '-' → logprob: -9.383084297180176
    8. '2' → logprob: -10.383084297180176
    9. 'b' → logprob: -11.133084297180176
    10. '   ' → logprob: -11.570584297180176

Token 100: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2297644317150116
    2. '2' → logprob: -1.604764461517334
    3. '10' → logprob: -6.104764461517334
    4. '0' → logprob: -7.229764461517334
    5. '100' → logprob: -7.479764461517334
    6. 'float' → logprob: -8.229763984680176
    7. '999' → logprob: -8.854763984680176
    8. '101' → logprob: -9.979763984680176
    9. 'check' → logprob: -10.104763984680176
    10. '5' → logprob: -10.229763984680176

Token 101: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.5330879092216492
    2. 'elif' (adapté à ' elif') → logprob: -0.9080879092216492
    3. '   ' → logprob: -5.408087730407715
    4. '<|end|>' → logprob: -5.908087730407715
    5. '	elif' → logprob: -6.408087730407715
    6. ' else' → logprob: -8.033087730407715
    7. 'else' → logprob: -8.408087730407715
    8. ' ' → logprob: -8.658087730407715
    9. ' if' → logprob: -9.158087730407715
    10. '  ' → logprob: -9.283087730407715

Token 104: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5233862996101379
    2. 'h' → logprob: -0.8983862996101379
    3. 'check' → logprob: -9.523386001586914
    4. ' check' → logprob: -9.523386001586914
    5. '   ' → logprob: -9.898386001586914
    6. ' ' → logprob: -10.273386001586914
    7. '    ' → logprob: -11.398386001586914
    8. '  ' → logprob: -11.898386001586914
    9. ' ' → logprob: -12.023386001586914
    10. '	h' → logprob: -13.335886001586914

Token 105: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0002087853499688208
    2. '[b' → logprob: -8.625208854675293
    3. 'a' → logprob: -10.875208854675293
    4. '[' → logprob: -11.750208854675293
    5. ' [' → logprob: -14.375208854675293
    6. '```' → logprob: -14.500208854675293
    7. '[
' → logprob: -15.250208854675293
    8. '<a' → logprob: -15.250208854675293
    9. ' a' → logprob: -15.625208854675293
    10. '>a' → logprob: -15.750208854675293

Token 106: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.248469718324486e-05
    2. '[' → logprob: -10.875022888183594
    3. ' -' → logprob: -13.000022888183594
    4. '[-' → logprob: -14.250022888183594
    5. '<|end|>' → logprob: -16.000022888183594
    6. '1' → logprob: -16.500022888183594
    7. ']' → logprob: -16.875022888183594
    8. '#' → logprob: -16.875022888183594
    9. ']-' → logprob: -17.000022888183594
    10. '   ' → logprob: -17.000022888183594

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.333223139634356e-05
    2. ' ' → logprob: -10.875033378601074
    3. '4' → logprob: -12.000033378601074
    4. '[' → logprob: -13.000033378601074
    5. '-' → logprob: -13.250033378601074
    6. '<|end|>' → logprob: -13.250033378601074
    7. 'b' → logprob: -13.750033378601074
    8. '   ' → logprob: -15.187533378601074
    9. '<|end|>' → logprob: -15.312533378601074
    10. '```' → logprob: -15.500033378601074

Token 108: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0364927314221859
    2. ' >' → logprob: -4.036492824554443
    3. '>' → logprob: -4.536492824554443
    4. ' ]' → logprob: -6.036492824554443
    5. '[' → logprob: -6.161492824554443
    6. ' ' → logprob: -6.411492824554443
    7. ']>' → logprob: -7.661492824554443
    8. ' <' → logprob: -7.911492824554443
    9. ')' → logprob: -8.161492347717285
    10. '-' → logprob: -9.786492347717285

Token 109: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6951245069503784
    2. ' <' → logprob: -0.6951245069503784
    3. '==' → logprob: -6.820124626159668
    4. '>' → logprob: -7.820124626159668
    5. ' ==' → logprob: -8.570124626159668
    6. ' >' → logprob: -9.320124626159668
    7. ' ' → logprob: -9.320124626159668
    8. '<=' → logprob: -9.695124626159668
    9. ' <=' → logprob: -10.445124626159668
    10. ')' → logprob: -12.070124626159668

Token 110: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.009760929271578789
    2. ' h' → logprob: -4.634760856628418
    3. ' ' → logprob: -13.134760856628418
    4. '   ' → logprob: -13.384760856628418
    5. '[h' → logprob: -14.509760856628418
    6. '	h' → logprob: -14.884760856628418
    7. '  ' → logprob: -15.009760856628418
    8. '<h' → logprob: -16.384761810302734
    9. 'b' → logprob: -17.134761810302734
    10. '```' → logprob: -17.322261810302734

Token 111: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -8.180258191714529e-06
    2. 'b' → logprob: -11.750008583068848
    3. '[h' → logprob: -15.625008583068848
    4. '[' → logprob: -16.12500762939453
    5. '```' → logprob: -17.25000762939453
    6. '[a' → logprob: -17.75000762939453
    7. '	b' → logprob: -17.75000762939453
    8. ' [' → logprob: -18.50000762939453
    9. '(b' → logprob: -19.25000762939453
    10. '[
' → logprob: -19.75000762939453

Token 112: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000837384897749871
    2. '[' → logprob: -7.125837326049805
    3. '[-' → logprob: -11.125837326049805
    4. ' -' → logprob: -11.250837326049805
    5. '1' → logprob: -13.250837326049805
    6. '```' → logprob: -14.375837326049805
    7. '   ' → logprob: -14.625837326049805
    8. ' ' → logprob: -15.000837326049805
    9. '<|end|>' → logprob: -15.125837326049805
    10. '–' → logprob: -15.563337326049805

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6895233531831764e-05
    2. '-' → logprob: -11.25002670288086
    3. '4' → logprob: -11.25002670288086
    4. ' ' → logprob: -14.12502670288086
    5. '[' → logprob: -17.12502670288086
    6. '   ' → logprob: -18.12502670288086
    7. ']' → logprob: -18.68752670288086
    8. 'b' → logprob: -18.87502670288086
    9. '_' → logprob: -18.93752670288086
    10. '3' → logprob: -19.06252670288086

Token 114: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034178778529167175
    2. '):' → logprob: -4.159178733825684
    3. ':
' → logprob: -4.284178733825684
    4. '):
' → logprob: -5.534178733825684
    5. ']:' → logprob: -9.534178733825684
    6. '   ' → logprob: -9.784178733825684
    7. ' :' → logprob: -10.284178733825684
    8. '       ' → logprob: -10.659178733825684
    9. ' and' → logprob: -11.159178733825684
    10. 'and' → logprob: -11.784178733825684

Token 115: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23445001244544983
    2. 'check' → logprob: -1.7344499826431274
    3. '       ' → logprob: -3.484450101852417
    4. '```' → logprob: -6.859449863433838
    5. ' check' → logprob: -7.609449863433838
    6. '``' → logprob: -9.609450340270996
    7. '
' → logprob: -9.734450340270996
    8. ' ' → logprob: -10.109450340270996
    9. '	check' → logprob: -10.234450340270996
    10. '-' → logprob: -10.359450340270996

Token 116: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -0.0015406885650008917
    2. '   ' → logprob: -6.501540660858154
    3. ' check' → logprob: -10.626541137695312
    4. '
' → logprob: -11.751541137695312
    5. '```' → logprob: -12.626541137695312
    6. '       ' → logprob: -13.501541137695312
    7. '	check' → logprob: -15.001541137695312
    8. '``' → logprob: -15.251541137695312
    9. '-check' → logprob: -15.376541137695312
    10. ' ' → logprob: -15.626541137695312

Token 117: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -13.750003814697266
    3. '[b' → logprob: -13.750003814697266
    4. 'a' → logprob: -13.875003814697266
    5. '

' → logprob: -15.125003814697266
    6. '```' → logprob: -16.000003814697266
    7. ' [' → logprob: -16.375003814697266
    8. ' a' → logprob: -17.375003814697266
    9. '[A' → logprob: -17.375003814697266
    10. '[i' → logprob: -17.375003814697266

Token 118: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00624326104298234
    2. '-' → logprob: -5.5062432289123535
    3. ']=' → logprob: -6.2562432289123535
    4. ' ]' → logprob: -9.506243705749512
    5. ']==' → logprob: -9.631243705749512
    6. '=' → logprob: -10.006243705749512
    7. ']=-' → logprob: -10.506243705749512
    8. ' -' → logprob: -12.256243705749512
    9. '-=' → logprob: -12.381243705749512
    10. ')' → logprob: -12.506243705749512

Token 119: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006771261338144541
    2. ' =' → logprob: -5.006771087646484
    3. '-=' → logprob: -10.631771087646484
    4. '=-' → logprob: -11.256771087646484
    5. '-' → logprob: -11.756771087646484
    6. '   ' → logprob: -12.506771087646484
    7. ' -=' → logprob: -13.256771087646484
    8. ' ' → logprob: -13.881771087646484
    9. ']' → logprob: -13.881771087646484
    10. ',' → logprob: -14.006771087646484

Token 120: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03178326413035393
    2. '0' → logprob: -3.65678334236145
    3. ' -' → logprob: -5.906783103942871
    4. '1' → logprob: -6.656783103942871
    5. ' ' → logprob: -7.156783103942871
    6. 'max' → logprob: -7.656783103942871
    7. '4' → logprob: -9.656783103942871
    8. ' max' → logprob: -9.906783103942871
    9. 'check' → logprob: -10.531783103942871
    10. '2' → logprob: -10.531783103942871

Token 121: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.13935469090938568
    2. '2' → logprob: -2.264354705810547
    3. '3' → logprob: -4.264354705810547
    4. '1' → logprob: -4.514354705810547
    5. '5' → logprob: -6.889354705810547
    6. '0' → logprob: -10.014354705810547
    7. '42' → logprob: -10.764354705810547
    8. '44' → logprob: -11.451854705810547
    9. ' ' → logprob: -11.701854705810547
    10. '-' → logprob: -12.264354705810547

Token 122: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015825890004634857
    2. '<|end|>' → logprob: -4.5158257484436035
    3. '   ' → logprob: -5.8908257484436035
    4. '
' → logprob: -6.3908257484436035
    5. '<|end|>' → logprob: -9.015826225280762
    6. '	' → logprob: -9.765826225280762
    7. '[' → logprob: -10.515826225280762
    8. ' ' → logprob: -10.765826225280762
    9. '```' → logprob: -11.390826225280762
    10. ' or' → logprob: -11.765826225280762

Token 123: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4061586856842041
    2. '       ' → logprob: -1.281158685684204
    3. 'check' → logprob: -2.906158685684204
    4. ' check' → logprob: -6.656158447265625
    5. '	check' → logprob: -10.406158447265625
    6. '<|end|>' → logprob: -10.906158447265625
    7. '```' → logprob: -10.906158447265625
    8. '    ' → logprob: -11.781158447265625
    9. '(check' → logprob: -12.531158447265625
    10. ' ' → logprob: -12.531158447265625

Token 124: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -3.8889261304575484e-06
    2. '   ' → logprob: -13.125003814697266
    3. ' check' → logprob: -13.250003814697266
    4. '       ' → logprob: -16.625003814697266
    5. '	check' → logprob: -18.000003814697266
    6. '           ' → logprob: -20.000003814697266
    7. '  ' → logprob: -20.375003814697266
    8. '```' → logprob: -21.625003814697266
    9. ' ' → logprob: -21.750003814697266
    10. '(check' → logprob: -21.750003814697266

Token 125: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.339278580620885e-06
    2. 'b' → logprob: -13.125001907348633
    3. '[' → logprob: -15.375001907348633
    4. ' [' → logprob: -18.875001907348633
    5. '	b' → logprob: -19.250001907348633
    6. ' b' → logprob: -19.250001907348633
    7. '[a' → logprob: -19.750001907348633
    8. '```' → logprob: -20.000001907348633
    9. '[B' → logprob: -21.500001907348633
    10. ' ' → logprob: -21.625001907348633

Token 126: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01132013276219368
    2. ']=' → logprob: -4.886320114135742
    3. '=' → logprob: -5.636320114135742
    4. ' ]' → logprob: -9.511320114135742
    5. ')' → logprob: -10.636320114135742
    6. ' =' → logprob: -10.761320114135742
    7. '<|end|>' → logprob: -12.011320114135742
    8. '[' → logprob: -12.136320114135742
    9. ']==' → logprob: -12.386320114135742
    10. ')=' → logprob: -13.636320114135742

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00017982252757064998
    2. ' =' → logprob: -8.6251802444458
    3. '[' → logprob: -15.7501802444458
    4. '=
' → logprob: -17.875179290771484
    5. '＝' → logprob: -18.000179290771484
    6. ')' → logprob: -18.375179290771484
    7. '<|end|>' → logprob: -18.750179290771484
    8. ']=' → logprob: -19.000179290771484
    9. '=-' → logprob: -19.250179290771484
    10. ']' → logprob: -19.250179290771484

Token 128: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.1782583391759545e-05
    2. ' -' → logprob: -10.375031471252441
    3. '4' → logprob: -14.625031471252441
    4. '   ' → logprob: -18.375032424926758
    5. ' ' → logprob: -19.125032424926758
    6. '  ' → logprob: -19.750032424926758
    7. '−' → logprob: -20.750032424926758
    8. '‌' → logprob: -21.500032424926758
    9. '```' → logprob: -21.500032424926758
    10. '–' → logprob: -21.875032424926758

Token 129: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.704273118884885e-07
    2. '৪' → logprob: -15.875000953674316
    3. '४' → logprob: -16.25
    4. '1' → logprob: -16.625
    5. '۴' → logprob: -16.625
    6. '<|end|>' → logprob: -16.625
    7. ' ' → logprob: -17.0
    8. '４' → logprob: -17.25
    9. '٤' → logprob: -17.75
    10. '' → logprob: -17.875

Token 130: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0606621503829956
    2. '   ' → logprob: -1.6856621503829956
    3. ')' → logprob: -2.060662269592285
    4. 'print' → logprob: -2.185662269592285
    5. '<|end|>' → logprob: -2.560662269592285
    6. '\n' → logprob: -2.685662269592285
    7. '  
' → logprob: -3.810662269592285
    8. '    
' → logprob: -4.060662269592285
    9. '  ' → logprob: -4.810662269592285
    10. 'n' → logprob: -5.060662269592285

Token 131: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10791665315628052
    2. ' else' → logprob: -2.6079165935516357
    3. 'elif' → logprob: -4.357916831970215
    4. ')' → logprob: -5.357916831970215
    5. '   ' → logprob: -5.607916831970215
    6. '<|end|>' → logprob: -5.732916831970215
    7. 'print' → logprob: -6.982916831970215
    8. 'continue' → logprob: -7.982916831970215
    9. '```' → logprob: -7.982916831970215
    10. ']' → logprob: -7.982916831970215

Token 133: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010487641207873821
    2. 'check' → logprob: -5.6354875564575195
    3. ':
' → logprob: -5.6354875564575195
    4. ':' → logprob: -6.2604875564575195
    5. '   ' → logprob: -6.8854875564575195
    6. ' check' → logprob: -8.38548755645752
    7. '```' → logprob: -9.88548755645752
    8. '
' → logprob: -10.63548755645752
    9. '        
' → logprob: -10.88548755645752
    10. '[' → logprob: -11.88548755645752

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17688524723052979
    2. 'check' → logprob: -2.3018851280212402
    3. ' check' → logprob: -2.8018851280212402
    4. '   ' → logprob: -6.67688512802124
    5. '	check' → logprob: -10.051885604858398
    6. '```' → logprob: -10.801885604858398
    7. ' ' → logprob: -12.051885604858398
    8. '        
' → logprob: -12.176885604858398
    9. '     ' → logprob: -12.301885604858398
    10. '    ' → logprob: -12.301885604858398

Token 135: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -0.00025680975522845984
    2. ' check' → logprob: -8.500256538391113
    3. '   ' → logprob: -9.875256538391113
    4. '       ' → logprob: -13.625256538391113
    5. '	check' → logprob: -15.125256538391113
    6. ' ' → logprob: -16.25025749206543
    7. '  ' → logprob: -16.37525749206543
    8. '           ' → logprob: -17.00025749206543
    9. '```' → logprob: -17.62525749206543
    10. 'chec' → logprob: -17.75025749206543

Token 136: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.5690089639974758e-05
    2. '[' → logprob: -11.250015258789062
    3. 'a' → logprob: -13.375015258789062
    4. '=' → logprob: -15.000015258789062
    5. '   ' → logprob: -15.250015258789062
    6. '=a' → logprob: -15.500015258789062
    7. ' [' → logprob: -16.250015258789062
    8. '```' → logprob: -16.625015258789062
    9. ' ' → logprob: -18.125015258789062
    10. '<a' → logprob: -18.250015258789062

Token 137: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10777999460697174
    2. ']' → logprob: -2.7327799797058105
    3. ' =' → logprob: -3.3577799797058105
    4. ']=' → logprob: -6.1077799797058105
    5. ']=-' → logprob: -9.982780456542969
    6. '=-' → logprob: -10.982780456542969
    7. ' ]' → logprob: -11.232780456542969
    8. ')' → logprob: -11.482780456542969
    9. ' ' → logprob: -12.357780456542969
    10. '   ' → logprob: -12.732780456542969

Token 138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007100477814674377
    2. ' =' → logprob: -7.2507100105285645
    3. '=-' → logprob: -15.875710487365723
    4. ' ' → logprob: -17.750709533691406
    5. '=
' → logprob: -19.500709533691406
    6. ')' → logprob: -19.875709533691406
    7. '＝' → logprob: -19.875709533691406
    8. '[' → logprob: -20.125709533691406
    9. ']' → logprob: -20.250709533691406
    10. '=

' → logprob: -20.375709533691406

Token 139: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006656142068095505
    2. ' -' → logprob: -7.375665664672852
    3. '4' → logprob: -10.750665664672852
    4. '0' → logprob: -11.125665664672852
    5. ' ' → logprob: -13.250665664672852
    6. '   ' → logprob: -15.375665664672852
    7. '1' → logprob: -15.875665664672852
    8. '  ' → logprob: -16.00066566467285
    9. '-l' → logprob: -16.75066566467285
    10. '−' → logprob: -17.12566566467285

Token 140: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -8.65707261255011e-06
    2. '1' → logprob: -11.750008583068848
    3. ' ' → logprob: -14.750008583068848
    4. '2' → logprob: -15.875008583068848
    5. '3' → logprob: -17.562509536743164
    6. '۴' → logprob: -17.687509536743164
    7. '' → logprob: -17.750009536743164
    8. '৪' → logprob: -17.750009536743164
    9. '४' → logprob: -17.937509536743164
    10. '<|end|>' → logprob: -18.000009536743164

Token 141: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2588058412075043
    2. '\n' → logprob: -2.133805751800537
    3. ')' → logprob: -2.758805751800537
    4. '<|end|>' → logprob: -3.383805751800537
    5. '  
' → logprob: -5.758805751800537
    6. '+' → logprob: -6.133805751800537
    7. '

' → logprob: -7.008805751800537
    8. ' 
' → logprob: -7.008805751800537
    9. 'print' → logprob: -7.258805751800537
    10. 'for' → logprob: -7.383805751800537

Token 142: 'bad' (ID: 22023)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1474349945783615
    2. 'for' → logprob: -2.147434949874878
    3. '\n' → logprob: -5.397435188293457
    4. '<|end|>' → logprob: -5.772435188293457
    5. ')' → logprob: -6.022435188293457
    6. 'sum' → logprob: -6.147435188293457
    7. '+' → logprob: -6.272435188293457
    8. '
' → logprob: -6.397435188293457
    9. '_' → logprob: -6.897435188293457
    10. '```' → logprob: -6.897435188293457

Token 143: ' =' (ID: 314)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.7002314925193787
    2. '_' → logprob: -2.4502315521240234
    3. ' =' → logprob: -2.4502315521240234
    4. ' +=' → logprob: -2.9502315521240234
    5. '_places' → logprob: -2.9502315521240234
    6. '=' → logprob: -3.0752315521240234
    7. 's' → logprob: -3.3252315521240234
    8. '+=' → logprob: -3.5752315521240234
    9. '_nodes' → logprob: -3.7002315521240234
    10. '_points' → logprob: -3.9502315521240234

Token 144: ' ' (ID: 220)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.48153045773506165
    2. 'sum' → logprob: -0.9815304279327393
    3. 'len' → logprob: -5.981530666351318
    4. '0' → logprob: -6.231530666351318
    5. ' check' → logprob: -6.356530666351318
    6. ' sum' → logprob: -7.106530666351318
    7. '[' → logprob: -8.60653018951416
    8. '[n' → logprob: -10.60653018951416
    9. 'n' → logprob: -10.73153018951416
    10. 'max' → logprob: -10.85653018951416

Token 145: '0' (ID: 15)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.7035988569259644
    2. 'sum' → logprob: -0.7035988569259644
    3. '0' → logprob: -4.953598976135254
    4. 'len' → logprob: -5.953598976135254
    5. '[' → logprob: -7.703598976135254
    6. 'set' → logprob: -9.453598976135254
    7. '[len' → logprob: -10.328598976135254
    8. ' check' → logprob: -10.453598976135254
    9. '[n' → logprob: -10.578598976135254
    10. ' sum' → logprob: -10.828598976135254

Token 146: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.2127087504486553e-05
    2. ' for' → logprob: -11.250021934509277
    3. '
' → logprob: -11.625021934509277
    4. '```' → logprob: -16.750022888183594
    5. '+' → logprob: -17.375022888183594
    6. '\n' → logprob: -19.000022888183594
    7. '[' → logprob: -19.250022888183594
    8. '+
' → logprob: -19.750022888183594
    9. 'bad' → logprob: -19.750022888183594
    10. 'print' → logprob: -19.875022888183594

Token 147: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.8889261304575484e-06
    2. ' for' → logprob: -13.125003814697266
    3. '
' → logprob: -13.250003814697266
    4. '```' → logprob: -16.375003814697266
    5. 'print' → logprob: -18.375003814697266
    6. '	for' → logprob: -19.500003814697266
    7. '   ' → logprob: -19.625003814697266
    8. '<|end|>' → logprob: -20.000003814697266
    9. '\n' → logprob: -20.500003814697266
    10. '  
' → logprob: -20.500003814697266

Token 148: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04294130206108093
    2. ' i' → logprob: -3.4179413318634033
    3. 'c' → logprob: -4.917941093444824
    4. 'x' → logprob: -7.292941093444824
    5. 'num' → logprob: -7.917941093444824
    6. ' c' → logprob: -8.292941093444824
    7. 'v' → logprob: -8.417941093444824
    8. 'check' → logprob: -9.417941093444824
    9. 'idx' → logprob: -9.792941093444824
    10. 'val' → logprob: -10.042941093444824

Token 149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012755432166159153
    2. 'in' → logprob: -4.387755393981934
    3. ' ' → logprob: -8.387755393981934
    4. ',' → logprob: -11.512755393981934
    5. 'range' → logprob: -12.137755393981934
    6. ' range' → logprob: -13.762755393981934
    7. '	in' → logprob: -14.512755393981934
    8. ' i' → logprob: -14.637755393981934
    9. '  ' → logprob: -14.887755393981934
    10. ' ,' → logprob: -15.762755393981934

Token 150: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011055129580199718
    2. ' range' → logprob: -4.511054992675781
    3. 'check' → logprob: -11.886054992675781
    4. ' ' → logprob: -15.511054992675781
    5. '(range' → logprob: -16.26105499267578
    6. '   ' → logprob: -16.51105499267578
    7. 'r' → logprob: -17.01105499267578
    8. ' check' → logprob: -17.26105499267578
    9. '  ' → logprob: -18.13605499267578
    10. '	range' → logprob: -18.26105499267578

Token 151: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010962257510982454
    2. '(n' → logprob: -9.125109672546387
    3. '(len' → logprob: -15.000109672546387
    4. '1' → logprob: -15.375109672546387
    5. ' (' → logprob: -16.62510871887207
    6. '(
' → logprob: -17.62510871887207
    7. 'n' → logprob: -18.12510871887207
    8. '   ' → logprob: -18.62510871887207
    9. '(N' → logprob: -18.62510871887207
    10. ' ' → logprob: -19.37510871887207

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8789383830153383e-05
    2. 'n' → logprob: -11.125019073486328
    3. ' ' → logprob: -13.375019073486328
    4. 'len' → logprob: -13.625019073486328
    5. '   ' → logprob: -14.250019073486328
    6. '(' → logprob: -14.500019073486328
    7. '(n' → logprob: -17.750019073486328
    8. '2' → logprob: -18.125019073486328
    9. ' n' → logprob: -19.375019073486328
    10. '-' → logprob: -19.750019073486328

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004278434440493584
    2. ',n' → logprob: -5.504278659820557
    3. ' ,' → logprob: -8.629278182983398
    4. ',len' → logprob: -11.129278182983398
    5. ',
' → logprob: -12.629278182983398
    6. 'n' → logprob: -13.004278182983398
    7. 'len' → logprob: -15.004278182983398
    8. '   ' → logprob: -15.379278182983398
    9. ',num' → logprob: -15.879278182983398
    10. ' n' → logprob: -16.3792781829834

Token 154: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001549089647596702
    2. ' n' → logprob: -9.000154495239258
    3. 'len' → logprob: -10.375154495239258
    4. '   ' → logprob: -16.000154495239258
    5. ' len' → logprob: -17.000154495239258
    6. '(n' → logprob: -17.375154495239258
    7. '	n' → logprob: -17.875154495239258
    8. ' ' → logprob: -19.125154495239258
    9. '  ' → logprob: -19.250154495239258
    10. '    ' → logprob: -20.500154495239258

Token 155: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005798388738185167
    2. ' +' → logprob: -7.750579833984375
    3. '):
' → logprob: -9.250579833984375
    4. '):' → logprob: -10.375579833984375
    5. '+n' → logprob: -11.500579833984375
    6. '+
' → logprob: -11.625579833984375
    7. '```' → logprob: -14.000579833984375
    8. '+:' → logprob: -14.250579833984375
    9. ':' → logprob: -15.250579833984375
    10. 'n' → logprob: -16.000579833984375

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '):
' → logprob: -18.375001907348633
    6. ')' → logprob: -19.125001907348633
    7. '):' → logprob: -20.875001907348633
    8. '+' → logprob: -21.000001907348633
    9. '``' → logprob: -21.000001907348633
    10. 'n' → logprob: -21.375001907348633

Token 157: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20172323286533356
    2. '):' → logprob: -1.7017232179641724
    3. ':' → logprob: -8.826723098754883
    4. ' ):
' → logprob: -9.076723098754883
    5. ' ):' → logprob: -10.951723098754883
    6. ':
' → logprob: -10.951723098754883
    7. '):
' → logprob: -11.701723098754883
    8. '):

' → logprob: -12.951723098754883
    9. '   ' → logprob: -13.701723098754883
    10. ')' → logprob: -13.701723098754883

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021132626570761204
    2. ' if' → logprob: -6.377113342285156
    3. 'if' → logprob: -7.877113342285156
    4. '	if' → logprob: -10.752113342285156
    5. '<|end|>' → logprob: -12.377113342285156
    6. ' ' → logprob: -12.627113342285156
    7. '```' → logprob: -14.002113342285156
    8. '  ' → logprob: -14.627113342285156
    9. '       ' → logprob: -14.752113342285156
    10. '    ' → logprob: -15.502113342285156

Token 159: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008052896708250046
    2. '   ' → logprob: -5.008052825927734
    3. ' if' → logprob: -6.633052825927734
    4. ' ' → logprob: -11.258052825927734
    5. 'bad' → logprob: -12.758052825927734
    6. '	if' → logprob: -13.383052825927734
    7. '       ' → logprob: -13.633052825927734
    8. '  ' → logprob: -13.883052825927734
    9. '```' → logprob: -14.008052825927734
    10. '    ' → logprob: -15.758052825927734

Token 160: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.25196152925491333
    2. ' check' → logprob: -1.5019614696502686
    3. '   ' → logprob: -11.126961708068848
    4. ' ' → logprob: -12.001961708068848
    5. '	check' → logprob: -12.001961708068848
    6. ' not' → logprob: -13.376961708068848
    7. 'not' → logprob: -13.501961708068848
    8. 'chec' → logprob: -13.876961708068848
    9. '(check' → logprob: -14.251961708068848
    10. '  ' → logprob: -14.751961708068848

Token 161: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.392202976712724e-06
    2. '[' → logprob: -12.750006675720215
    3. '[a' → logprob: -13.000006675720215
    4. ' [' → logprob: -14.375006675720215
    5. '```' → logprob: -15.125006675720215
    6. '\[' → logprob: -15.625006675720215
    7. '[b' → logprob: -17.5000057220459
    8. 'i' → logprob: -17.6250057220459
    9. '   ' → logprob: -18.0000057220459
    10. '[
' → logprob: -18.2500057220459

Token 162: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14188869297504425
    2. '!=' → logprob: -2.7668886184692383
    3. '<' → logprob: -3.3918886184692383
    4. '==-' → logprob: -3.8918886184692383
    5. ' ==' → logprob: -5.266888618469238
    6. ']' → logprob: -5.641888618469238
    7. ']==' → logprob: -5.766888618469238
    8. ')' → logprob: -6.516888618469238
    9. '>=' → logprob: -7.016888618469238
    10. ' !=' → logprob: -7.766888618469238

Token 163: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.40132367610931396
    2. '!=' → logprob: -1.276323676109314
    3. '==-' → logprob: -3.7763237953186035
    4. '<' → logprob: -3.9013237953186035
    5. ' ==' → logprob: -5.2763237953186035
    6. ' !=' → logprob: -6.2763237953186035
    7. '!=-' → logprob: -7.5263237953186035
    8. '>=' → logprob: -8.276323318481445
    9. ']==' → logprob: -8.776323318481445
    10. ')' → logprob: -9.276323318481445

Token 164: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03353019803762436
    2. ' -' → logprob: -4.033530235290527
    3. '0' → logprob: -4.408530235290527
    4. ' ' → logprob: -5.783530235290527
    5. '   ' → logprob: -11.908530235290527
    6. '4' → logprob: -12.908530235290527
    7. '  ' → logprob: -13.783530235290527
    8. '[-' → logprob: -14.846030235290527
    9. '−' → logprob: -15.533530235290527
    10. ' ' → logprob: -15.658530235290527

Token 165: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.6240566083070007e-06
    2. '1' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.125001907348633
    4. '<|end|>' → logprob: -19.125001907348633
    5. '４' → logprob: -19.250001907348633
    6. '۴' → logprob: -19.250001907348633
    7. '' → logprob: -19.625001907348633
    8. '   ' → logprob: -19.750001907348633
    9. '```' → logprob: -20.000001907348633
    10. '৪' → logprob: -20.250001907348633

Token 166: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020686816424131393
    2. ':
' → logprob: -3.8956868648529053
    3. ' or' → logprob: -9.395687103271484
    4. ' :' → logprob: -10.520687103271484
    5. '   ' → logprob: -11.520687103271484
    6. ' :
' → logprob: -11.645687103271484
    7. ' and' → logprob: -12.395687103271484
    8. '):
' → logprob: -12.520687103271484
    9. '):' → logprob: -13.145687103271484
    10. '       ' → logprob: -13.520687103271484

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015077205607667565
    2. 'bad' → logprob: -7.001507759094238
    3. '   ' → logprob: -7.876507759094238
    4. 'continue' → logprob: -9.126507759094238
    5. '```' → logprob: -10.876507759094238
    6. ' continue' → logprob: -11.126507759094238
    7. '           ' → logprob: -11.126507759094238
    8. ':' → logprob: -11.251507759094238
    9. '     ' → logprob: -11.376507759094238
    10. ' bad' → logprob: -11.626507759094238

Token 168: ' bad' (ID: 4790)
  Prédit: 'bad'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bad' (adapté à ' bad') → logprob: -0.057477571070194244
    2. '   ' → logprob: -3.0574774742126465
    3. ' bad' → logprob: -4.8074774742126465
    4. '       ' → logprob: -7.9324774742126465
    5. 'continue' → logprob: -8.557477951049805
    6. ' continue' → logprob: -10.182477951049805
    7. ' ' → logprob: -10.307477951049805
    8. '     ' → logprob: -11.182477951049805
    9. '           ' → logprob: -11.182477951049805
    10. '  ' → logprob: -11.557477951049805

Token 169: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0032245332840830088
    2. ' +=' → logprob: -5.7532243728637695
    3. '+' → logprob: -10.00322437286377
    4. '=' → logprob: -14.00322437286377
    5. '   ' → logprob: -14.50322437286377
    6. ']+=' → logprob: -15.50322437286377
    7. '+="' → logprob: -18.253225326538086
    8. '+=(' → logprob: -18.378225326538086
    9. '-=' → logprob: -18.628225326538086
    10. '```' → logprob: -18.753225326538086

Token 170: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '0' → logprob: -21.500001907348633
    4. '   ' → logprob: -22.250001907348633
    5. '<|end|>' → logprob: -22.375001907348633
    6. '１' → logprob: -22.500001907348633
    7. '```' → logprob: -23.500001907348633
    8. '-' → logprob: -23.625001907348633
    9. '۱' → logprob: -24.250001907348633
    10. '  ' → logprob: -24.750001907348633

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '-' → logprob: -21.375
    4. '１' → logprob: -21.75
    5. '0' → logprob: -22.0
    6. '   ' → logprob: -22.0
    7. '<|end|>' → logprob: -22.0
    8. '```' → logprob: -22.125
    9. '۱' → logprob: -23.4375
    10. '4' → logprob: -23.75

Token 172: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07031696289777756
    2. '
' → logprob: -2.695317029953003
    3. ')' → logprob: -9.070317268371582
    4. ')
' → logprob: -9.195317268371582
    5. '

' → logprob: -10.070317268371582
    6. '
' → logprob: -10.445317268371582
    7. '    
' → logprob: -10.570317268371582
    8. '```' → logprob: -10.820317268371582
    9. '  
' → logprob: -11.195317268371582
    10. ' print' → logprob: -11.445317268371582

Token 173: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00023476807109545916
    2. '
' → logprob: -8.375234603881836
    3. ' print' → logprob: -13.625234603881836
    4. '```' → logprob: -13.750234603881836
    5. '  
' → logprob: -14.375234603881836
    6. ')' → logprob: -15.250234603881836
    7. '    
' → logprob: -15.375234603881836
    8. '
' → logprob: -15.500234603881836
    9. 'good' → logprob: -15.625234603881836
    10. 'ans' → logprob: -16.125234603881836

Token 174: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02365689165890217
    2. '(' → logprob: -3.8986568450927734
    3. '(b' → logprob: -5.898656845092773
    4. '(len' → logprob: -8.148656845092773
    5. '((' → logprob: -10.273656845092773
    6. ' (' → logprob: -11.523656845092773
    7. '("("' → logprob: -11.648656845092773
    8. '('' → logprob: -11.898656845092773
    9. '(max' → logprob: -12.273656845092773
    10. '()' → logprob: -13.273656845092773

Token 175: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.39446547627449036
    2. '-' → logprob: -1.144465446472168
    3. '-b' → logprob: -4.894465446472168
    4. ')' → logprob: -9.519465446472168
    5. ' ' → logprob: -13.269465446472168
    6. '-end' → logprob: -14.894465446472168
    7. '-good' → logprob: -15.019465446472168
    8. ' ' → logprob: -15.144465446472168
    9. ' )' → logprob: -15.269465446472168
    10. '   ' → logprob: -15.394465446472168

Token 176: ' bad' (ID: 4790)
  Prédit: 'bad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bad' → logprob: -0.0024756586644798517
    2. ' bad' → logprob: -6.002475738525391
    3. '_bad' → logprob: -17.75247573852539
    4. '.bad' → logprob: -18.25247573852539
    5. 'good' → logprob: -18.37747573852539
    6. ' ' → logprob: -18.50247573852539
    7. 'b' → logprob: -18.62747573852539
    8. 'badge' → logprob: -19.75247573852539
    9. '   ' → logprob: -20.87747573852539
    10. '```' → logprob: -21.37747573852539

Token 177: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.700132997939363e-05
    2. ' )' → logprob: -11.000017166137695
    3. ')
' → logprob: -15.375017166137695
    4. '))' → logprob: -18.250017166137695
    5. ')`' → logprob: -18.250017166137695
    6. '）' → logprob: -18.750017166137695
    7. ')#' → logprob: -19.250017166137695
    8. '`)' → logprob: -20.125017166137695
    9. '#' → logprob: -20.500017166137695
    10. '")' → logprob: -20.500017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 175
Tokens correctement prédits (1ère position, stricte): 72
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 153
Précision stricte (1ère position): 41.14%
Précision adaptée (1ère position): 46.86%
Précision (top 10): 87.43%
================================================================================
