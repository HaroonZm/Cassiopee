================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Début du programme Python

# Lecture d'un entier à partir de l'entrée standard.
# input() capture l'entrée en tant que chaîne de caractères (string), 
# donc int(...) la convertit explicitement en entier.
n = int(input())

# Déclaration d'une liste s3, qui est une liste de chaînes de caractères.
# Chaque élément de cette liste est une chaîne explicitement écrite.
s3 = ["abb", "a.d", "ccd"]

# Déclaration d'une liste nommée 's', qui elle-même contient plusieurs sous-listes.
# Chaque sous-liste contient des chaînes de caractères, 
# donc 's' est une liste de listes de chaînes (liste 2D).
# Chaque sous-liste correspond à un cas particulier utilisé dans la logique ultérieure.
s = [
    ["abcc", "abdd", "ddba", "ccba"],
    ["dccdd", "daa.c", "c..bc", "c..bd", "ddccd"],
    ["abbc..", "a.ac..", "bba.cc", "a..aab", "a..b.b", ".aabaa"],
    ["aba....", "aba....", "bab....", "bab....", "a..bbaa", "a..aabb", ".aabbaa"]
]

# Premier test conditionnel pour vérifier si la variable 'n' contient la valeur 2.
# Le double égal vérifie l'égalité entre deux valeurs.
if n == 2:
    # Si n vaut exactement 2, on affiche la valeur entière -1.
    print(-1)
# Deuxième test conditionnel pour vérifier si 'n' vaut 3.
elif n == 3:
    # Si n vaut 3, on parcourt chaque élément (chaîne) dans la liste s3,
    # et pour chacun, on l'affiche séparément avec print.
    # Cette syntaxe correspond à une compréhension de liste 
    # utilisée uniquement pour ses effets de bord (affichage).
    [print(x) for x in s3]
# Si aucun des cas précédents n'est vrai (n != 2 et n != 3),
# donc pour tous les autres cas où n > 3 en particulier.
else:
    # Utilisation de la fonction divmod() pour effectuer à la fois
    # une division entière et obtenir le reste de la division de n par 4.
    # divmod(n, 4) retourne un tuple (quotient, reste), qui est 
    # ici, décompressé en deux variables : d et m.
    d, m = divmod(n, 4)
    # On décrémente la variable d de 1. Cela équivaut à d = d - 1.
    d -= 1
    # On incrémente la variable m de 4 pour ajuster le reste.
    # Cela correspond à m = m + 4.
    m += 4
    
    # On effectue une boucle for, indexée par 'i' allant de 0 à d-1 inclus.
    # range(d) génère une séquence de valeurs entières de 0 inclus à d exclus.
    for i in range(d):
        # Pour chaque valeur de 'i', on parcourt tous les éléments dans la première sous-liste de 's'.
        # s[0] correspond à ["abcc", "abdd", "ddba", "ccba"].
        # Pour chaque élément 'x' de cette sous-liste, on construit et affiche une nouvelle chaîne :
        # - "." * 4 * i produit une suite de points dont la longueur est 4 fois la valeur de i.
        # - x ajoute la chaîne courante.
        # - "." * (4 * (d - i - 1) + m) produit une autre suite de points,
        #   ici la longueur dépend de d, i, et m.
        # L'utilisation de la compréhension de liste ici est détournée pour ses effets secondaires avec print.
        [print("." * 4 * i + x + "." * (4 * (d - i - 1) + m)) for x in s[0]]

    # À la fin de la boucle précédente (ou si d vaut 0, la boucle n'est pas exécutée),
    # on cherche à afficher une sous-liste de 's', exactement la (m - 4)-ième sous-liste.
    # On parcourt maintenant chaque élément 'x' dans cette sous-liste.
    # On affiche chaque élément précédé de "." * 4 * d, c'est-à-dire une suite de points de longueur 4*d.
    [print("." * 4 * d + x) for x in s[m - 4]]

# Fin du programme
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dé' (ID: 27247)
  → Token d'amorce (pas de prédiction)

Token 2: 'but' (ID: 8293)
  → Token d'amorce (pas de prédiction)

Token 3: ' du' (ID: 1462)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2144927978515625
    2. '#' → logprob: -1.4644927978515625
    3. '\n' → logprob: -1.8394927978515625
    4. ':' → logprob: -2.2144927978515625
    5. '\' → logprob: -2.3394927978515625
    6. ' ' → logprob: -3.5894927978515625
    7. ' #' → logprob: -3.8394927978515625
    8. ' :' → logprob: -4.3394927978515625
    9. ' ```' → logprob: -4.3394927978515625
    10. '_' → logprob: -5.0894927978515625

Token 4: ' programme' (ID: 18190)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4602891206741333
    2. ' #' → logprob: -1.5852891206741333
    3. ' script' → logprob: -1.9602891206741333
    4. 'programme' → logprob: -2.0852890014648438
    5. '#' → logprob: -2.2102890014648438
    6. ' code' → logprob: -2.4602890014648438
    7. 'code' → logprob: -3.5852890014648438
    8. ' programme' → logprob: -3.7102890014648438
    9. 'script' → logprob: -4.210289001464844
    10. ' ' → logprob: -4.710289001464844

Token 5: ' Python' (ID: 26534)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.11419904232025146
    2. '\' → logprob: -2.364199161529541
    3. '#' → logprob: -4.989199161529541
    4. '```' → logprob: -5.864199161529541
    5. '
' → logprob: -7.239199161529541
    6. ':' → logprob: -7.239199161529541
    7. 'n' → logprob: -7.739199161529541
    8. ' 

' → logprob: -8.239198684692383
    9. '\u' → logprob: -8.364198684692383
    10. '\r' → logprob: -8.489198684692383

Token 6: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.15088775753974915
    2. '
' → logprob: -2.6508877277374268
    3. '#' → logprob: -3.1508877277374268
    4. '\' → logprob: -4.150887966156006
    5. '```' → logprob: -5.525887966156006
    6. ' 
' → logprob: -6.275887966156006
    7. '  
' → logprob: -6.775887966156006
    8. '

' → logprob: -6.900887966156006
    9. 'print' → logprob: -7.150887966156006
    10. '' → logprob: -7.900887966156006

Token 7: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48603183031082153
    2. '\n' → logprob: -1.2360317707061768
    3. '\' → logprob: -2.4860317707061768
    4. '```' → logprob: -5.486032009124756
    5. '
' → logprob: -6.236032009124756
    6. 'print' → logprob: -6.486032009124756
    7. ':' → logprob: -6.986032009124756
    8. '  
' → logprob: -7.861032009124756
    9. 'n' → logprob: -8.111031532287598
    10. '' → logprob: -8.361031532287598

Token 8: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008259357884526253
    2. ' import' → logprob: -5.758259296417236
    3. ' #' → logprob: -6.508259296417236
    4. 'import' → logprob: -6.508259296417236
    5. ' ﻿' → logprob: -7.383259296417236
    6. ' ' → logprob: -8.133259773254395
    7. '#' → logprob: -8.383259773254395
    8. ' ```' → logprob: -8.383259773254395
    9. '!' → logprob: -8.758259773254395
    10. ' -*-' → logprob: -9.258259773254395

Token 9: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5538356304168701
    2. 'd' → logprob: -2.80383563041687
    3. 's' → logprob: -2.80383563041687
    4. ' ' → logprob: -2.80383563041687
    5. '(' → logprob: -3.05383563041687
    6. ')' → logprob: -3.42883563041687
    7. ' de' → logprob: -3.92883563041687
    8. ' =' → logprob: -4.178835868835449
    9. '=' → logprob: -4.428835868835449
    10. 'de' → logprob: -4.428835868835449

Token 10: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1567464917898178
    2. ''' → logprob: -2.9067463874816895
    3. 'u' → logprob: -3.4067463874816895
    4. ' ' → logprob: -3.4067463874816895
    5. ''une' → logprob: -4.7817463874816895
    6. '_' → logprob: -5.6567463874816895
    7. ''un' → logprob: -6.0317463874816895
    8. ' e' → logprob: -6.0317463874816895
    9. 'es' → logprob: -6.1567463874816895
    10. ''entrée' → logprob: -6.7817463874816895

Token 11: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09682265669107437
    2. ' fichier' → logprob: -2.471822738647461
    3. 'f' → logprob: -5.096822738647461
    4. ' f' → logprob: -6.846822738647461
    5. 'e' → logprob: -8.096822738647461
    6. '_' → logprob: -9.221822738647461
    7. ' fich' → logprob: -10.096822738647461
    8. '  ' → logprob: -10.346822738647461
    9. '_f' → logprob: -10.721822738647461
    10. 's' → logprob: -11.096822738647461

Token 12: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05779198184609413
    2. 'ent' → logprob: -3.6827919483184814
    3. 'nombre' → logprob: -4.0577921867370605
    4. 'x' → logprob: -5.4327921867370605
    5. ' entier' → logprob: -6.3077921867370605
    6. 'a' → logprob: -6.3077921867370605
    7. 'e' → logprob: -6.4327921867370605
    8. ' ' → logprob: -6.9327921867370605
    9. 'i' → logprob: -7.6827921867370605
    10. '_' → logprob: -7.6827921867370605

Token 13: ' partir' (ID: 12100)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11915311217308044
    2. ' l' → logprob: -2.4941530227661133
    3. ' partir' → logprob: -4.369153022766113
    4. 'part' → logprob: -5.619153022766113
    5. '```' → logprob: -5.869153022766113
    6. '   ' → logprob: -6.744153022766113
    7. ' saisir' → logprob: -6.744153022766113
    8. '#' → logprob: -7.119153022766113
    9. 'la' → logprob: -7.244153022766113
    10. '_' → logprob: -7.244153022766113

Token 14: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07964623719453812
    2. ' de' → logprob: -2.829646348953247
    3. 'd' → logprob: -4.704646110534668
    4. ' du' → logprob: -4.954646110534668
    5. ' ' → logprob: -7.704646110534668
    6. 's' → logprob: -8.829646110534668
    7. '_' → logprob: -8.954646110534668
    8. 'de' → logprob: -9.079646110534668
    9. 'du' → logprob: -9.079646110534668
    10. '<|end|>' → logprob: -9.204646110534668

Token 15: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.47964951395988464
    2. ' input' → logprob: -1.604649543762207
    3. ' l' → logprob: -2.354649543762207
    4. 'input' → logprob: -2.604649543762207
    5. ' la' → logprob: -5.354649543762207
    6. 'la' → logprob: -5.729649543762207
    7. ' ' → logprob: -6.979649543762207
    8. '=input' → logprob: -8.104649543762207
    9. '_' → logprob: -8.354649543762207
    10. 's' → logprob: -8.479649543762207

Token 16: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11368323862552643
    2. ''entrée' → logprob: -2.8636832237243652
    3. '_' → logprob: -3.6136832237243652
    4. 'e' → logprob: -4.988683223724365
    5. 'a' → logprob: -5.238683223724365
    6. ''utilisateur' → logprob: -5.863683223724365
    7. 'u' → logprob: -6.613683223724365
    8. ''_' → logprob: -6.738683223724365
    9. '\'' → logprob: -7.238683223724365
    10. ''a' → logprob: -7.363683223724365

Token 17: ' standard' (ID: 7024)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12512795627117157
    2. 'ent' → logprob: -2.8751280307769775
    3. 'x' → logprob: -3.5001280307769775
    4. 'nombre' → logprob: -3.6251280307769775
    5. 'a' → logprob: -6.750127792358398
    6. 'e' → logprob: -6.875127792358398
    7. '```' → logprob: -7.375127792358398
    8. ' entier' → logprob: -8.125127792358398
    9. 'number' → logprob: -8.375127792358398
    10. '#' → logprob: -8.750127792358398

Token 18: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.030561652034521103
    2. 'ent' → logprob: -4.280561447143555
    3. 'x' → logprob: -5.155561447143555
    4. 'e' → logprob: -5.405561447143555
    5. 'nombre' → logprob: -5.530561447143555
    6. '#' → logprob: -7.155561447143555
    7. '```' → logprob: -7.530561447143555
    8. 'i' → logprob: -8.405561447143555
    9. 'a' → logprob: -8.530561447143555
    10. '`' → logprob: -9.155561447143555

Token 19: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03540126234292984
    2. 'ent' → logprob: -3.7854013442993164
    3. 'x' → logprob: -5.410401344299316
    4. 'e' → logprob: -5.910401344299316
    5. 'nombre' → logprob: -6.035401344299316
    6. ' entier' → logprob: -6.785401344299316
    7. '```' → logprob: -7.535401344299316
    8. 'i' → logprob: -8.785401344299316
    9. '#' → logprob: -9.160401344299316
    10. ' n' → logprob: -9.410401344299316

Token 20: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19446244835853577
    2. 'ent' → logprob: -2.569462537765503
    3. ' entier' → logprob: -3.319462537765503
    4. ' n' → logprob: -3.444462537765503
    5. 'nombre' → logprob: -3.569462537765503
    6. ' nombre' → logprob: -6.569462299346924
    7. 'x' → logprob: -7.319462299346924
    8. 'num' → logprob: -7.569462299346924
    9. 'number' → logprob: -8.194462776184082
    10. 'val' → logprob: -8.569462776184082

Token 21: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3490571975708008
    2. '()' → logprob: -1.2240571975708008
    3. '_' → logprob: -8.9740571975708
    4. '('' → logprob: -9.3490571975708
    5. '("")' → logprob: -9.3490571975708
    6. '(
' → logprob: -9.5990571975708
    7. '("' → logprob: -10.3490571975708
    8. '().' → logprob: -10.5990571975708
    9. 's' → logprob: -10.9740571975708
    10. '_parent' → logprob: -11.0990571975708

Token 22: ' capture' (ID: 19374)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03993268311023712
    2. ')' → logprob: -4.664932727813721
    3. '()' → logprob: -4.789932727813721
    4. '.' → logprob: -4.914932727813721
    5. '#' → logprob: -5.789932727813721
    6. ' ' → logprob: -6.289932727813721
    7. '[' → logprob: -6.414932727813721
    8. '(
' → logprob: -6.414932727813721
    9. ' (' → logprob: -6.414932727813721
    10. '_' → logprob: -7.164932727813721

Token 23: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6547833681106567
    2. ' la' → logprob: -1.6547833681106567
    3. ' une' → logprob: -1.7797833681106567
    4. '()' → logprob: -2.529783248901367
    5. 'l' → logprob: -3.529783248901367
    6. '(' → logprob: -5.529783248901367
    7. 's' → logprob: -6.529783248901367
    8. ' ' → logprob: -7.154783248901367
    9. 'une' → logprob: -7.154783248901367
    10. ' un' → logprob: -7.279783248901367

Token 24: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14496655762195587
    2. 'a' → logprob: -2.7699666023254395
    3. 'e' → logprob: -2.8949666023254395
    4. ''a' → logprob: -4.7699666023254395
    5. ''entrée' → logprob: -5.6449666023254395
    6. ''ent' → logprob: -6.6449666023254395
    7. ''e' → logprob: -7.1449666023254395
    8. ''utilisateur' → logprob: -7.2699666023254395
    9. ''espace' → logprob: -7.6449666023254395
    10. ''é' → logprob: -8.144966125488281

Token 25: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08895909041166306
    2. '()' → logprob: -3.463958978652954
    3. ' ' → logprob: -4.338959217071533
    4. ' (' → logprob: -4.838959217071533
    5. 's' → logprob: -5.088959217071533
    6. '(
' → logprob: -5.213959217071533
    7. '.' → logprob: -5.338959217071533
    8. 'user' → logprob: -5.463959217071533
    9. ')' → logprob: -5.963959217071533
    10. ',' → logprob: -6.713959217071533

Token 26: ' tant' (ID: 16235)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.4231610596179962
    2. 'chaine' → logprob: -1.6731610298156738
    3. ' forme' → logprob: -3.298161029815674
    4. ' chaine' → logprob: -3.548161029815674
    5. 'cha' → logprob: -3.923161029815674
    6. ' string' → logprob: -4.423161029815674
    7. 'texte' → logprob: -4.548161029815674
    8. ' tant' → logprob: -4.548161029815674
    9. ' texte' → logprob: -4.673161029815674
    10. '```' → logprob: -5.548161029815674

Token 27: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.05004912614822388
    2. 'que' → logprob: -3.050049066543579
    3. 'qu' → logprob: -7.425049304962158
    4. ' qu' → logprob: -7.675049304962158
    5. 'q' → logprob: -8.425048828125
    6. ' ' → logprob: -9.175048828125
    7. '_' → logprob: -10.800048828125
    8. 'Que' → logprob: -11.300048828125
    9. ' q' → logprob: -11.800048828125
    10. '_che' → logprob: -11.800048828125

Token 28: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.02936127409338951
    2. 'chaine' → logprob: -4.154361248016357
    3. ' chaine' → logprob: -5.154361248016357
    4. 'cha' → logprob: -5.279361248016357
    5. 'str' → logprob: -6.904361248016357
    6. ' string' → logprob: -7.279361248016357
    7. 'string' → logprob: -7.654361248016357
    8. ' ' → logprob: -10.029361724853516
    9. ' chaînes' → logprob: -10.029361724853516
    10. 's' → logprob: -10.404361724853516

Token 29: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.311750888824463
    2. ' ' → logprob: -1.561750888824463
    3. 'n' → logprob: -1.686750888824463
    4. 's' → logprob: -2.561750888824463
    5. '.' → logprob: -2.686750888824463
    6. 'v' → logprob: -3.686750888824463
    7. 'e' → logprob: -4.436750888824463
    8. ' 
' → logprob: -4.436750888824463
    9. ' ,' → logprob: -4.436750888824463
    10. '\' → logprob: -4.561750888824463

Token 30: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.48062190413475037
    2. ' caractères' → logprob: -0.9806219339370728
    3. 'texte' → logprob: -5.355621814727783
    4. ' caractère' → logprob: -7.355621814727783
    5. ' caract' → logprob: -7.480621814727783
    6. ' caracteres' → logprob: -7.855621814727783
    7. 'chaine' → logprob: -9.230622291564941
    8. '```' → logprob: -10.355622291564941
    9. 's' → logprob: -10.855622291564941
    10. 'str' → logprob: -11.480622291564941

Token 31: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10751859843730927
    2. 'ent' → logprob: -3.3575186729431152
    3. 'nombre' → logprob: -3.6075186729431152
    4. '#' → logprob: -4.732518672943115
    5. ',' → logprob: -5.232518672943115
    6. '\n' → logprob: -5.357518672943115
    7. 'a' → logprob: -5.482518672943115
    8. 'x' → logprob: -5.732518672943115
    9. '' → logprob: -6.107518672943115
    10. 's' → logprob: -6.232518672943115

Token 32: 'string' (ID: 1655)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008069691248238087
    2. ' )' → logprob: -5.3830695152282715
    3. '),' → logprob: -6.0080695152282715
    4. ').' → logprob: -7.3830695152282715
    5. 'string' → logprob: -9.88306999206543
    6. '))' → logprob: -10.13306999206543
    7. ' ),' → logprob: -10.25806999206543
    8. ',' → logprob: -10.63306999206543
    9. 'str' → logprob: -10.63306999206543
    10. '')' → logprob: -10.63306999206543

Token 33: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002601460786536336
    2. '),' → logprob: -6.502601623535156
    3. ' )' → logprob: -7.252601623535156
    4. ').' → logprob: -8.252601623535156
    5. ',' → logprob: -10.377601623535156
    6. '')' → logprob: -11.127601623535156
    7. '#' → logprob: -11.127601623535156
    8. ')#' → logprob: -11.377601623535156
    9. ')
' → logprob: -11.502601623535156
    10. '))' → logprob: -11.627601623535156

Token 34: ' 
' (ID: 793)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -1.3546284437179565
    2. ' donc' → logprob: -1.8546284437179565
    3. 'int' → logprob: -2.104628562927246
    4. ' et' → logprob: -2.229628562927246
    5. ' convert' → logprob: -2.729628562927246
    6. ' il' → logprob: -2.979628562927246
    7. ' convertir' → logprob: -3.354628562927246
    8. ' la' → logprob: -3.729628562927246
    9. 'convert' → logprob: -3.854628562927246
    10. ' int' → logprob: -3.854628562927246

Token 35: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43725481629371643
    2. 'ent' → logprob: -1.687254786491394
    3. 'e' → logprob: -2.6872549057006836
    4. '#' → logprob: -2.6872549057006836
    5. ' n' → logprob: -4.562254905700684
    6. 'nombre' → logprob: -5.562254905700684
    7. 'a' → logprob: -6.187254905700684
    8. ' #' → logprob: -6.187254905700684
    9. 'int' → logprob: -6.937254905700684
    10. 'x' → logprob: -6.937254905700684

Token 36: ' donc' (ID: 14206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8677302598953247
    2. 'n' → logprob: -1.3677302598953247
    3. ' n' → logprob: -2.117730140686035
    4. 'int' → logprob: -2.617730140686035
    5. 'ent' → logprob: -3.617730140686035
    6. ' #' → logprob: -4.242730140686035
    7. 'x' → logprob: -4.492730140686035
    8. 'num' → logprob: -4.492730140686035
    9. ' il' → logprob: -4.617730140686035
    10. ' donc' → logprob: -4.867730140686035

Token 37: ' int' (ID: 677)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.6820075511932373
    2. ' int' → logprob: -1.6820075511932373
    3. 'int' → logprob: -2.1820075511932373
    4. ' on' → logprob: -2.9320075511932373
    5. ' ' → logprob: -3.3070075511932373
    6. ' ' → logprob: -3.4320075511932373
    7. ' n' → logprob: -4.057007789611816
    8. ' a' → logprob: -4.182007789611816
    9. 'n' → logprob: -4.432007789611816
    10. ' l' → logprob: -4.807007789611816

Token 38: '(...)' (ID: 96375)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017908512381836772
    2. '()' → logprob: -6.376791000366211
    3. '(
' → logprob: -10.501791000366211
    4. '(input' → logprob: -10.751791000366211
    5. '('' → logprob: -11.626791000366211
    6. '(int' → logprob: -12.376791000366211
    7. '(...)' → logprob: -12.376791000366211
    8. '("' → logprob: -12.376791000366211
    9. '(convert' → logprob: -12.626791000366211
    10. '("""' → logprob: -12.751791000366211

Token 39: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006164124351926148
    2. '()' → logprob: -8.125616073608398
    3. '(
' → logprob: -8.625616073608398
    4. ')' → logprob: -10.250616073608398
    5. '(convert' → logprob: -10.250616073608398
    6. 'convert' → logprob: -10.875616073608398
    7. '(...)' → logprob: -11.750616073608398
    8. '(

' → logprob: -12.125616073608398
    9. '(int' → logprob: -12.250616073608398
    10. 's' → logprob: -12.750616073608398

Token 40: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.8475213050842285
    2. ' transforme' → logprob: -1.0975213050842285
    3. 'convert' → logprob: -1.4725213050842285
    4. ' convertir' → logprob: -5.0975213050842285
    5. ' converts' → logprob: -6.9725213050842285
    6. '_convert' → logprob: -7.8475213050842285
    7. ' conversion' → logprob: -8.34752082824707
    8. '转换' → logprob: -8.84752082824707
    9. 'Convert' → logprob: -9.34752082824707
    10. ' преобраз' → logprob: -9.34752082824707

Token 41: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00035119339008815587
    2. 'i' → logprob: -8.500350952148438
    3. ' it' → logprob: -9.000350952148438
    4. 'et' → logprob: -11.625350952148438
    5. '

' → logprob: -12.875350952148438
    6. '```' → logprob: -13.000350952148438
    7. '   ' → logprob: -13.125350952148438
    8. 'ît' → logprob: -13.750350952148438
    9. '_it' → logprob: -14.125350952148438
    10. 't' → logprob: -14.500350952148438

Token 42: ' explicit' (ID: 23141)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002807963639497757
    2. '(
' → logprob: -6.377808094024658
    3. ')' → logprob: -8.0028076171875
    4. ' en' → logprob: -8.1278076171875
    5. ' (' → logprob: -8.7528076171875
    6. '()' → logprob: -9.7528076171875
    7. '(en' → logprob: -10.0028076171875
    8. '(int' → logprob: -10.6278076171875
    9. '("""' → logprob: -10.8778076171875
    10. '#' → logprob: -11.0028076171875

Token 43: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0002084277366520837
    2. 'ément' → logprob: -8.875208854675293
    3. 'e' → logprob: -11.125208854675293
    4. 'emente' → logprob: -11.250208854675293
    5. 'EMENT' → logprob: -11.500208854675293
    6. 'emment' → logprob: -11.750208854675293
    7. '   ' → logprob: -12.125208854675293
    8. 'emen' → logprob: -12.875208854675293
    9. 'emento' → logprob: -12.875208854675293
    10. ' e' → logprob: -13.250208854675293

Token 44: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06598710268735886
    2. '(
' → logprob: -3.6909871101379395
    3. 'n' → logprob: -4.3159871101379395
    4. 'nombre' → logprob: -5.4409871101379395
    5. '(ent' → logprob: -5.6909871101379395
    6. ')' → logprob: -5.8159871101379395
    7. '(n' → logprob: -6.1909871101379395
    8. '(nombre' → logprob: -6.4409871101379395
    9. 'a' → logprob: -6.5659871101379395
    10. 'e' → logprob: -6.8159871101379395

Token 45: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7654600739479065
    2. ' entier' → logprob: -0.8904600739479065
    3. 'ent' → logprob: -2.8904600143432617
    4. ' int' → logprob: -3.3904600143432617
    5. 'un' → logprob: -4.390460014343262
    6. ' ' → logprob: -4.640460014343262
    7. 'int' → logprob: -5.140460014343262
    8. ' nombre' → logprob: -6.015460014343262
    9. ' espace' → logprob: -6.515460014343262
    10. ' ent' → logprob: -6.765460014343262

Token 46: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10175783932209015
    2. 'x' → logprob: -2.476757764816284
    3. 'nombre' → logprob: -4.976758003234863
    4. 'e' → logprob: -6.476758003234863
    5. 'a' → logprob: -7.226758003234863
    6. '```' → logprob: -7.226758003234863
    7. '#' → logprob: -7.351758003234863
    8. 'ent' → logprob: -7.351758003234863
    9. 'i' → logprob: -7.726758003234863
    10. '' → logprob: -8.226758003234863

Token 47: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09437262266874313
    2. 'nombre' → logprob: -2.844372510910034
    3. 'ent' → logprob: -3.969372510910034
    4. 'x' → logprob: -4.594372749328613
    5. 'age' → logprob: -6.844372749328613
    6. 'a' → logprob: -7.469372749328613
    7. 'number' → logprob: -7.969372749328613
    8. '```' → logprob: -8.469372749328613
    9. 'val' → logprob: -8.844372749328613
    10. 'nb' → logprob: -9.344372749328613

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01825037971138954
    2. '=' → logprob: -4.018250465393066
    3. ' ' → logprob: -9.268250465393066
    4. ' ' → logprob: -13.268250465393066
    5. '=int' → logprob: -13.518250465393066
    6. ' =
' → logprob: -14.018250465393066
    7. '  ' → logprob: -14.268250465393066
    8. '   ' → logprob: -15.268250465393066
    9. 'space' → logprob: -15.518250465393066
    10. ',' → logprob: -15.643250465393066

Token 49: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0010349531657993793
    2. 'int' → logprob: -6.876034736633301
    3. ' ' → logprob: -13.8760347366333
    4. ' input' → logprob: -14.6260347366333
    5. ' ' → logprob: -15.1260347366333
    6. '=int' → logprob: -15.5010347366333
    7. '<int' → logprob: -16.376035690307617
    8. ' in' → logprob: -16.751035690307617
    9. '[int' → logprob: -16.876035690307617
    10. '	int' → logprob: -17.126035690307617

Token 50: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2519541084766388
    2. '(' → logprob: -1.5019540786743164
    3. 'input' → logprob: -11.876954078674316
    4. '()' → logprob: -12.126954078674316
    5. '(
' → logprob: -12.126954078674316
    6. ' (' → logprob: -12.751954078674316
    7. '('' → logprob: -13.751954078674316
    8. '(

' → logprob: -14.251954078674316
    9. '(int' → logprob: -14.376954078674316
    10. '(user' → logprob: -14.751954078674316

Token 51: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06274956464767456
    2. '()' → logprob: -2.8127496242523193
    3. '(' → logprob: -7.31274938583374
    4. '()))' → logprob: -9.812749862670898
    5. ' ())' → logprob: -10.312749862670898
    6. ')' → logprob: -11.812749862670898
    7. '();)' → logprob: -12.312749862670898
    8. '(""))' → logprob: -13.187749862670898
    9. '("' → logprob: -13.312749862670898
    10. '()]' → logprob: -13.437749862670898

Token 52: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5968743562698364
    2. ' ' → logprob: -1.5968743562698364
    3. 'i' → logprob: -1.7218743562698364
    4. ')' → logprob: -2.346874237060547
    5. ':' → logprob: -2.721874237060547
    6. 's' → logprob: -3.096874237060547
    7. 'for' → logprob: -3.221874237060547
    8. 'if' → logprob: -3.596874237060547
    9. ',' → logprob: -3.721874237060547
    10. '
' → logprob: -3.971874237060547

Token 53: ' Dé' (ID: 27247)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4020740985870361
    2. 'if' → logprob: -1.5270740985870361
    3. ' for' → logprob: -1.7770740985870361
    4. ' if' → logprob: -1.7770740985870361
    5. ' ' → logprob: -2.152074098587036
    6. '#' → logprob: -2.902074098587036
    7. 'i' → logprob: -4.902073860168457
    8. ' #' → logprob: -5.027073860168457
    9. 's' → logprob: -5.152073860168457
    10. ' ' → logprob: -6.652073860168457

Token 54: 'claration' (ID: 21396)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4207039475440979
    2. 'fin' → logprob: -1.1707038879394531
    3. 'print' → logprob: -4.420703887939453
    4. 'if' → logprob: -5.295703887939453
    5. 'for' → logprob: -5.670703887939453
    6. '#' → logprob: -5.920703887939453
    7. 'fi' → logprob: -6.545703887939453
    8. '```' → logprob: -6.795703887939453
    9. 'x' → logprob: -7.045703887939453
    10. 'but' → logprob: -7.295703887939453

Token 55: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3760725259780884
    2. ' d' → logprob: -1.7510725259780884
    3. ' des' → logprob: -3.001072406768799
    4. ' de' → logprob: -3.376072406768799
    5. '  ' → logprob: -4.001072406768799
    6. '_' → logprob: -5.251072406768799
    7. 's' → logprob: -5.376072406768799
    8. ')' → logprob: -5.501072406768799
    9. ' n' → logprob: -5.626072406768799
    10. 'n' → logprob: -5.626072406768799

Token 56: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.8337880969047546
    2. ''un' → logprob: -0.9587880969047546
    3. ''' → logprob: -2.5837881565093994
    4. 'e' → logprob: -3.2087881565093994
    5. ' un' → logprob: -3.8337881565093994
    6. ' ' → logprob: -4.20878791809082
    7. ' une' → logprob: -4.83378791809082
    8. ' e' → logprob: -5.08378791809082
    9. ' '' → logprob: -5.83378791809082
    10. ' a' → logprob: -6.08378791809082

Token 57: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.11917057633399963
    2. ' ' → logprob: -2.869170665740967
    3. ' variable' → logprob: -3.744170665740967
    4. '_' → logprob: -4.494170665740967
    5. ' ' → logprob: -5.744170665740967
    6. 'liste' → logprob: -6.369170665740967
    7. ' boucle' → logprob: -6.744170665740967
    8. ' list' → logprob: -6.744170665740967
    9. ' chaîne' → logprob: -6.869170665740967
    10. 's' → logprob: -6.994170665740967

Token 58: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0870749950408936
    2. '[]' → logprob: -1.4620749950408936
    3. '[' → logprob: -2.2120749950408936
    4. ' []' → logprob: -2.5870749950408936
    5. ' ' → logprob: -2.5870749950408936
    6. ' =' → logprob: -3.0870749950408936
    7. '_' → logprob: -4.462075233459473
    8. '()' → logprob: -4.462075233459473
    9. ' my' → logprob: -4.712075233459473
    10. '```' → logprob: -4.837075233459473

Token 59: '3' (ID: 18)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36343297362327576
    2. 'omme' → logprob: -1.7384330034255981
    3. '=[]' → logprob: -2.6134328842163086
    4. '=' → logprob: -3.9884328842163086
    5. 'quares' → logprob: -3.9884328842163086
    6. 'ommes' → logprob: -5.113432884216309
    7. '=[' → logprob: -6.113432884216309
    8. '[]' → logprob: -6.863432884216309
    9. '=[]
' → logprob: -6.863432884216309
    10. 'um' → logprob: -7.363432884216309

Token 60: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17060153186321259
    2. 's' → logprob: -1.920601487159729
    3. '=[]' → logprob: -5.6706013679504395
    4. '[]' → logprob: -5.9206013679504395
    5. '=' → logprob: -6.7956013679504395
    6. '3' → logprob: -7.0456013679504395
    7. '_s' → logprob: -7.0456013679504395
    8. ' ' → logprob: -7.6706013679504395
    9. '_' → logprob: -8.295601844787598
    10. '[' → logprob: -8.545601844787598

Token 61: ' qui' (ID: 2780)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.527783215045929
    2. ' []' → logprob: -1.2777831554412842
    3. 's' → logprob: -2.652783155441284
    4. '[]' → logprob: -3.152783155441284
    5. ' [' → logprob: -4.527783393859863
    6. ' =' → logprob: -5.777783393859863
    7. ' ' → logprob: -6.652783393859863
    8. '[' → logprob: -6.777783393859863
    9. '[:]' → logprob: -7.527783393859863
    10. '=[]' → logprob: -8.027783393859863

Token 62: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10188057273626328
    2. '=' → logprob: -3.3518805503845215
    3. 'cont' → logprob: -3.8518805503845215
    4. '=[]' → logprob: -3.8518805503845215
    5. ' cont' → logprob: -5.1018805503845215
    6. ' contient' → logprob: -5.6018805503845215
    7. 's' → logprob: -5.9768805503845215
    8. ' sera' → logprob: -6.2268805503845215
    9. ' va' → logprob: -7.6018805503845215
    10. '_cont' → logprob: -7.6018805503845215

Token 63: ' une' (ID: 2463)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.18504926562309265
    2. ' []' → logprob: -1.935049295425415
    3. ' [' → logprob: -4.435049057006836
    4. '[' → logprob: -4.435049057006836
    5. ' une' → logprob: -7.935049057006836
    6. 'une' → logprob: -9.310049057006836
    7. '[:]' → logprob: -9.685049057006836
    8. '["' → logprob: -10.060049057006836
    9. '['' → logprob: -10.185049057006836
    10. '=[]' → logprob: -10.310049057006836

Token 64: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.18729017674922943
    2. 'liste' → logprob: -2.6872901916503906
    3. ' []' → logprob: -2.8122901916503906
    4. ' nouvelle' → logprob: -4.812290191650391
    5. ' list' → logprob: -4.937290191650391
    6. '=[]' → logprob: -5.062290191650391
    7. '[]' → logprob: -5.312290191650391
    8. ' copie' → logprob: -5.812290191650391
    9. ' =' → logprob: -5.937290191650391
    10. 's' → logprob: -5.937290191650391

Token 65: ' de' (ID: 334)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.795806348323822
    2. '<|end|>' → logprob: -1.5458064079284668
    3. 'vide' → logprob: -1.6708064079284668
    4. '[' → logprob: -3.545806407928467
    5. ' =' → logprob: -3.545806407928467
    6. '=[]' → logprob: -4.170806407928467
    7. 's' → logprob: -4.295806407928467
    8. 'des' → logprob: -4.295806407928467
    9. ' des' → logprob: -4.545806407928467
    10. '```' → logprob: -5.170806407928467

Token 66: ' chaînes' (ID: 179904)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.7888540029525757
    2. ' listes' → logprob: -1.7888540029525757
    3. ' chaînes' → logprob: -1.7888540029525757
    4. 'int' → logprob: -2.6638541221618652
    5. '_' → logprob: -3.2888541221618652
    6. '3' → logprob: -3.2888541221618652
    7. '[' → logprob: -3.5388541221618652
    8. ' strings' → logprob: -3.5388541221618652
    9. '0' → logprob: -3.6638541221618652
    10. 'n' → logprob: -3.6638541221618652

Token 67: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8988527059555054
    2. 'vide' → logprob: -1.5238527059555054
    3. 'de' → logprob: -1.6488527059555054
    4. '[]' → logprob: -2.148852825164795
    5. 's' → logprob: -3.523852825164795
    6. ' =' → logprob: -4.773852825164795
    7. '=[]' → logprob: -4.773852825164795
    8. '[str' → logprob: -4.898852825164795
    9. ' vide' → logprob: -6.148852825164795
    10. '[' → logprob: -6.273852825164795

Token 68: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.22566930949687958
    2. ' caractères' → logprob: -1.600669264793396
    3. ' caract' → logprob: -9.725668907165527
    4. ' caracteres' → logprob: -9.850668907165527
    5. ' caractère' → logprob: -10.475668907165527
    6. 's' → logprob: -10.600668907165527
    7. ' car' → logprob: -10.725668907165527
    8. 'char' → logprob: -11.600668907165527
    9. 'strings' → logprob: -11.600668907165527
    10. 'str' → logprob: -11.975668907165527

Token 69: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6075310111045837
    2. ' =' → logprob: -1.2325310707092285
    3. '[]' → logprob: -2.9825310707092285
    4. '=[]' → logprob: -2.9825310707092285
    5. '()' → logprob: -3.3575310707092285
    6. '=' → logprob: -4.2325310707092285
    7. ' s' → logprob: -4.8575310707092285
    8. '[:]' → logprob: -6.9825310707092285
    9. ',' → logprob: -7.2325310707092285
    10. '=[]
' → logprob: -7.4825310707092285

Token 70: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001958251930773258
    2. ' s' → logprob: -6.25195837020874
    3. 'strings' → logprob: -11.501957893371582
    4. '```' → logprob: -11.501957893371582
    5. '_s' → logprob: -13.126957893371582
    6. '`s' → logprob: -13.626957893371582
    7. '[]' → logprob: -13.751957893371582
    8. ' =' → logprob: -13.876957893371582
    9. ''s' → logprob: -14.001957893371582
    10. 'n' → logprob: -14.126957893371582

Token 71: ' Chaque' (ID: 94758)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016072731465101242
    2. ' s' → logprob: -4.141072750091553
    3. 'strings' → logprob: -10.766072273254395
    4. '```' → logprob: -11.766072273254395
    5. ' strings' → logprob: -13.766072273254395
    6. '`s' → logprob: -13.891072273254395
    7. 'n' → logprob: -14.266072273254395
    8. 'names' → logprob: -14.391072273254395
    9. '[]' → logprob: -14.891072273254395
    10. 'str' → logprob: -15.016072273254395

Token 72: ' élément' (ID: 99627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.882891058921814
    2. '_' → logprob: -1.257891058921814
    3. 'élé' → logprob: -2.0078911781311035
    4. ' _' → logprob: -2.5078911781311035
    5. ' chaîne' → logprob: -3.6328911781311035
    6. ' élément' → logprob: -3.7578911781311035
    7. ' s' → logprob: -4.2578911781311035
    8. 's' → logprob: -5.2578911781311035
    9. 'chaine' → logprob: -6.0078911781311035
    10. ' =' → logprob: -6.6328911781311035

Token 73: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11396356672048569
    2. 'de' → logprob: -2.7389636039733887
    3. 's' → logprob: -4.113963603973389
    4. ' s' → logprob: -4.113963603973389
    5. ' est' → logprob: -5.363963603973389
    6. ' =' → logprob: -5.738963603973389
    7. ' of' → logprob: -7.613963603973389
    8. ' ' → logprob: -7.863963603973389
    9. ' sera' → logprob: -8.73896312713623
    10. ' représente' → logprob: -8.73896312713623

Token 74: ' cette' (ID: 7696)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.08928272873163223
    2. 's' → logprob: -2.589282751083374
    3. ' la' → logprob: -4.714282512664795
    4. ' l' → logprob: -7.964282512664795
    5. 'la' → logprob: -8.089282989501953
    6. ' strings' → logprob: -8.214282989501953
    7. ' chaînes' → logprob: -9.089282989501953
    8. 'strings' → logprob: -9.339282989501953
    9. ' chaîne' → logprob: -9.964282989501953
    10. ' ' → logprob: -10.464282989501953

Token 75: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.01837129332125187
    2. 'liste' → logprob: -4.143371105194092
    3. 's' → logprob: -7.018371105194092
    4. ' list' → logprob: -7.143371105194092
    5. ' s' → logprob: -8.51837158203125
    6. 'list' → logprob: -9.01837158203125
    7. ' listes' → logprob: -9.39337158203125
    8. ' ' → logprob: -10.01837158203125
    9. ' chaîne' → logprob: -10.39337158203125
    10. ' ligne' → logprob: -10.76837158203125

Token 76: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.750117301940918
    2. 's' → logprob: -2.125117301940918
    3. ' s' → logprob: -2.125117301940918
    4. ' ' → logprob: -2.250117301940918
    5. ' est' → logprob: -2.625117301940918
    6. '=' → logprob: -4.750117301940918
    7. ' représente' → logprob: -4.750117301940918
    8. ' a' → logprob: -4.875117301940918
    9. ' contient' → logprob: -4.875117301940918
    10. '[' → logprob: -5.000117301940918

Token 77: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.07350160926580429
    2. 'une' → logprob: -3.9485015869140625
    3. ' un' → logprob: -3.9485015869140625
    4. ' ' → logprob: -5.0735015869140625
    5. ' '' → logprob: -5.0735015869140625
    6. ''une' → logprob: -5.0735015869140625
    7. ' "' → logprob: -5.5735015869140625
    8. ' a' → logprob: -5.6985015869140625
    9. ''un' → logprob: -6.3235015869140625
    10. ''' → logprob: -7.3235015869140625

Token 78: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.4649762809276581
    2. ' ' → logprob: -1.4649763107299805
    3. ' ligne' → logprob: -2.9649763107299805
    4. 's' → logprob: -3.5899763107299805
    5. ' liste' → logprob: -4.2149763107299805
    6. 'chaine' → logprob: -4.7149763107299805
    7. ' chaine' → logprob: -4.8399763107299805
    8. ' s' → logprob: -5.2149763107299805
    9. ' phrase' → logprob: -5.9649763107299805
    10. ' string' → logprob: -6.0899763107299805

Token 79: ' explicit' (ID: 23141)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1684551239013672
    2. 's' → logprob: -1.4184551239013672
    3. 'de' → logprob: -1.9184551239013672
    4. '[]' → logprob: -2.918455123901367
    5. ' =' → logprob: -3.043455123901367
    6. 'vide' → logprob: -3.293455123901367
    7. '<|end|>' → logprob: -3.793455123901367
    8. '"' → logprob: -3.793455123901367
    9. '[' → logprob: -3.918455123901367
    10. '"""' → logprob: -4.043455123901367

Token 80: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.03827671706676483
    2. 'e' → logprob: -3.6632766723632812
    3. ''' → logprob: -4.788276672363281
    4. '"' → logprob: -6.913276672363281
    5. ''ent' → logprob: -7.163276672363281
    6. 'ément' → logprob: -8.163276672363281
    7. ' e' → logprob: -8.288276672363281
    8. '   ' → logprob: -8.413276672363281
    9. ''e' → logprob: -8.413276672363281
    10. '```' → logprob: -9.288276672363281

Token 81: ' écr' (ID: 33691)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2080949544906616
    2. ''' → logprob: -1.7080949544906616
    3. '"' → logprob: -1.8330949544906616
    4. ' ' → logprob: -2.083095073699951
    5. ' "' → logprob: -3.083095073699951
    6. ' '' → logprob: -3.583095073699951
    7. '=' → logprob: -3.958095073699951
    8. '[:]' → logprob: -3.958095073699951
    9. '"""' → logprob: -4.333095073699951
    10. '[' → logprob: -4.833095073699951

Token 82: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.01593230478465557
    2. 'it' → logprob: -4.265932083129883
    3. '#' → logprob: -7.390932083129883
    4. '```' → logprob: -9.140932083129883
    5. 'rite' → logprob: -9.390932083129883
    6. ' ite' → logprob: -9.453432083129883
    7. 'ivée' → logprob: -9.578432083129883
    8. ' it' → logprob: -9.765932083129883
    9. 'i' → logprob: -9.765932083129883
    10. '"' → logprob: -9.765932083129883

Token 83: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8812306523323059
    2. 's' → logprob: -1.1312305927276611
    3. '[' → logprob: -1.7562305927276611
    4. '=' → logprob: -3.881230592727661
    5. ' ' → logprob: -4.38123083114624
    6. '[]' → logprob: -4.75623083114624
    7. 'es' → logprob: -5.38123083114624
    8. '=['' → logprob: -5.50623083114624
    9. '=["' → logprob: -5.63123083114624
    10. ' s' → logprob: -6.00623083114624

Token 84: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.718606891809031e-05
    2. ' s' → logprob: -10.250066757202148
    3. '[' → logprob: -11.000066757202148
    4. ']' → logprob: -12.375066757202148
    5. '```' → logprob: -12.750066757202148
    6. '[
' → logprob: -12.875066757202148
    7. ' =' → logprob: -13.375066757202148
    8. ''s' → logprob: -13.750066757202148
    9. 'S' → logprob: -14.875066757202148
    10. '`s' → logprob: -14.875066757202148

Token 85: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.6405310816480778e-05
    2. ' ' → logprob: -11.250016212463379
    3. ' =' → logprob: -13.250016212463379
    4. '_' → logprob: -14.750016212463379
    5. '٣' → logprob: -15.125016212463379
    6. '³' → logprob: -15.625016212463379
    7. '۳' → logprob: -15.750016212463379
    8. '３' → logprob: -15.875016212463379
    9. '৩' → logprob: -16.125017166137695
    10. '=' → logprob: -16.250017166137695

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016500916332006454
    2. '[' → logprob: -4.766500949859619
    3. '=' → logprob: -5.016500949859619
    4. ' ' → logprob: -7.766500949859619
    5. ' =[' → logprob: -8.016500473022461
    6. '.' → logprob: -8.141500473022461
    7. ' [' → logprob: -9.891500473022461
    8. '=[' → logprob: -10.266500473022461
    9. '=[]' → logprob: -10.391500473022461
    10. '[]' → logprob: -11.016500473022461

Token 87: ' ["' (ID: 9129)
  Prédit: ' ["'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ["' → logprob: -0.47928497195243835
    2. ' ['' → logprob: -1.8542850017547607
    3. ' [' → logprob: -2.2292850017547607
    4. '["' → logprob: -2.4792850017547607
    5. '[' → logprob: -4.229284763336182
    6. '['' → logprob: -4.354284763336182
    7. ' [
' → logprob: -5.479284763336182
    8. ' []' → logprob: -7.604284763336182
    9. '[
' → logprob: -8.10428524017334
    10. ' [

' → logprob: -8.47928524017334

Token 88: 'abb' (ID: 13538)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0594847202301025
    2. 'Bonjour' → logprob: -2.0594847202301025
    3. 'abc' → logprob: -2.9344847202301025
    4. 'Hello' → logprob: -3.3094847202301025
    5. 'bonjour' → logprob: -3.3094847202301025
    6. 'p' → logprob: -3.4344847202301025
    7. 'apple' → logprob: -3.8094847202301025
    8. 'Python' → logprob: -3.9344847202301025
    9. 'P' → logprob: -4.184484481811523
    10. 'hello' → logprob: -4.309484481811523

Token 89: '",' (ID: 672)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19670209288597107
    2. '"' → logprob: -2.571702003479004
    3. '"]' → logprob: -4.571702003479004
    4. 'b' → logprob: -4.696702003479004
    5. 'c' → logprob: -4.696702003479004
    6. 'aac' → logprob: -4.696702003479004
    7. 'ccc' → logprob: -4.821702003479004
    8. 'ac' → logprob: -4.821702003479004
    9. 'e' → logprob: -5.446702003479004
    10. '",' → logprob: -5.696702003479004

Token 90: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5273032784461975
    2. ' "' → logprob: -0.9023032784461975
    3. '"a' → logprob: -5.902303218841553
    4. ' ' → logprob: -7.277303218841553
    5. ''' → logprob: -8.277303695678711
    6. 'a' → logprob: -9.277303695678711
    7. ' '' → logprob: -9.527303695678711
    8. '"s' → logprob: -9.839803695678711
    9. ' a' → logprob: -10.152303695678711
    10. ' ' → logprob: -10.589803695678711

Token 91: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5247308015823364
    2. 'abc' → logprob: -2.024730682373047
    3. 'b' → logprob: -2.524730682373047
    4. 'aba' → logprob: -2.649730682373047
    5. 'c' → logprob: -2.774730682373047
    6. 'ac' → logprob: -3.024730682373047
    7. 'acc' → logprob: -3.024730682373047
    8. 'abb' → logprob: -3.274730682373047
    9. 'ba' → logprob: -3.399730682373047
    10. 'bbc' → logprob: -3.524730682373047

Token 92: '.d' (ID: 1380)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.9754218459129333
    2. 'b' → logprob: -1.3504219055175781
    3. 'a' → logprob: -1.9754219055175781
    4. 'bc' → logprob: -2.850421905517578
    5. 'ab' → logprob: -2.975421905517578
    6. 'ba' → logprob: -3.225421905517578
    7. 'cc' → logprob: -4.100421905517578
    8. 'c' → logprob: -4.350421905517578
    9. 'bbc' → logprob: -4.725421905517578
    10. 'abb' → logprob: -5.100421905517578

Token 93: '",' (ID: 672)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6681148409843445
    2. 'c' → logprob: -1.4181149005889893
    3. 'b' → logprob: -1.6681149005889893
    4. '"' → logprob: -4.66811466217041
    5. 'd' → logprob: -4.66811466217041
    6. '.' → logprob: -4.91811466217041
    7. 'f' → logprob: -5.16811466217041
    8. 'ac' → logprob: -5.54311466217041
    9. 'e' → logprob: -5.66811466217041
    10. 'ab' → logprob: -6.04311466217041

Token 94: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.6425350904464722
    2. '"' → logprob: -0.7675350904464722
    3. '"a' → logprob: -5.017535209655762
    4. ' ' → logprob: -7.392535209655762
    5. '"s' → logprob: -7.517535209655762
    6. ' ' → logprob: -8.580035209655762
    7. ']' → logprob: -8.642535209655762
    8. ' '' → logprob: -8.705035209655762
    9. ' ""' → logprob: -8.955035209655762
    10. '"d' → logprob: -8.955035209655762

Token 95: 'ccd' (ID: 199062)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.723794937133789
    2. 'c' → logprob: -1.723794937133789
    3. 'a' → logprob: -1.973794937133789
    4. '"' → logprob: -2.348794937133789
    5. 'bb' → logprob: -2.848794937133789
    6. 'abc' → logprob: -3.223794937133789
    7. 'bc' → logprob: -3.348794937133789
    8. 'ab' → logprob: -3.348794937133789
    9. 'ac' → logprob: -3.598794937133789
    10. 'cd' → logprob: -3.723794937133789

Token 96: '"]

' (ID: 57728)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.10248833149671555
    2. '",' → logprob: -2.9774882793426514
    3. 'f' → logprob: -3.6024882793426514
    4. 'd' → logprob: -5.2274885177612305
    5. 'e' → logprob: -5.6024885177612305
    6. 'a' → logprob: -5.6024885177612305
    7. 'c' → logprob: -6.3524885177612305
    8. 'b' → logprob: -6.4774885177612305
    9. '"' → logprob: -6.7274885177612305
    10. '?' → logprob: -8.22748851776123

Token 97: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.475186288356781
    2. 's' → logprob: -1.4751863479614258
    3. 'for' → logprob: -2.725186347961426
    4. '#' → logprob: -3.350186347961426
    5. '
' → logprob: -4.225186347961426
    6. 'n' → logprob: -4.975186347961426
    7. '[' → logprob: -5.225186347961426
    8. '.
' → logprob: -5.225186347961426
    9. 'f' → logprob: -5.350186347961426
    10. 'i' → logprob: -5.975186347961426

Token 98: ' Dé' (ID: 27247)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1373148262500763
    2. 'for' → logprob: -2.512314796447754
    3. '#' → logprob: -3.512314796447754
    4. 'i' → logprob: -4.637314796447754
    5. ' for' → logprob: -6.262314796447754
    6. 'p' → logprob: -6.387314796447754
    7. 'r' → logprob: -6.762314796447754
    8. 's' → logprob: -6.887314796447754
    9. ' ' → logprob: -7.887314796447754
    10. 'n' → logprob: -8.387314796447754

Token 99: 'claration' (ID: 21396)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5694293975830078
    2. 'fin' → logprob: -1.6944293975830078
    3. 'for' → logprob: -2.069429397583008
    4. '#' → logprob: -2.944429397583008
    5. 'claration' → logprob: -3.569429397583008
    6. 'but' → logprob: -3.694429397583008
    7. 'veloppement' → logprob: -5.319429397583008
    8. 'fi' → logprob: -5.444429397583008
    9. 's' → logprob: -6.694429397583008
    10. 'c' → logprob: -6.694429397583008

Token 100: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0323258638381958
    2. 's' → logprob: -4.032325744628906
    3. 'd' → logprob: -4.532325744628906
    4. ' s' → logprob: -6.657325744628906
    5. '<|end|>' → logprob: -7.032325744628906
    6. ' of' → logprob: -7.407325744628906
    7. ' de' → logprob: -8.032325744628906
    8. ' ' → logprob: -9.157325744628906
    9. '<|end|>' → logprob: -10.532325744628906
    10. '[]' → logprob: -10.907325744628906

Token 101: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.15568000078201294
    2. 'e' → logprob: -3.030679941177368
    3. 'a' → logprob: -3.155679941177368
    4. ''un' → logprob: -4.155680179595947
    5. 'une' → logprob: -4.155680179595947
    6. 's' → logprob: -4.780680179595947
    7. 'es' → logprob: -5.405680179595947
    8. 'u' → logprob: -5.655680179595947
    9. ''' → logprob: -6.530680179595947
    10. '’une' → logprob: -6.530680179595947

Token 102: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.07595542818307877
    2. 's' → logprob: -3.450955390930176
    3. 'liste' → logprob: -3.825955390930176
    4. ' chaîne' → logprob: -5.450955390930176
    5. ' variable' → logprob: -5.575955390930176
    6. ' nouvelle' → logprob: -6.200955390930176
    7. ' autre' → logprob: -6.200955390930176
    8. ' s' → logprob: -6.450955390930176
    9. 'list' → logprob: -6.825955390930176
    10. ' ' → logprob: -7.075955390930176

Token 103: ' nom' (ID: 8080)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.019343171268701553
    2. ' s' → logprob: -4.644343376159668
    3. '<|end|>' → logprob: -5.269343376159668
    4. ' =' → logprob: -5.519343376159668
    5. ' de' → logprob: -9.144343376159668
    6. '_s' → logprob: -9.894343376159668
    7. ' des' → logprob: -10.269343376159668
    8. ' ' → logprob: -10.394343376159668
    9. '(s' → logprob: -10.894343376159668
    10. ' d' → logprob: -11.019343376159668

Token 104: 'm' (ID: 76)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06619598716497421
    2. ' =' → logprob: -3.1911959648132324
    3. 'm' → logprob: -4.816195964813232
    4. '=' → logprob: -4.816195964813232
    5. '=s' → logprob: -6.191195964813232
    6. 'e' → logprob: -7.191195964813232
    7. '_s' → logprob: -7.441195964813232
    8. 'ée' → logprob: -7.441195964813232
    9. 'es' → logprob: -7.566195964813232
    10. '="' → logprob: -7.691195964813232

Token 105: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.025267256423830986
    2. 'é' → logprob: -3.9002673625946045
    3. 'm' → logprob: -5.400267124176025
    4. 'e' → logprob: -9.150267601013184
    5. 'lée' → logprob: -10.150267601013184
    6. '#' → logprob: -11.400267601013184
    7. 'ed' → logprob: -11.400267601013184
    8. '=' → logprob: -12.025267601013184
    9. 'uée' → logprob: -12.025267601013184
    10. 'née' → logprob: -12.275267601013184

Token 106: ' '' (ID: 461)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20363068580627441
    2. 's' → logprob: -1.7036306858062744
    3. ' result' → logprob: -8.328630447387695
    4. 'result' → logprob: -8.953630447387695
    5. 'patterns' → logprob: -9.078630447387695
    6. ' pattern' → logprob: -9.391130447387695
    7. '(s' → logprob: -9.641130447387695
    8. 'pattern' → logprob: -9.766130447387695
    9. 'indices' → logprob: -9.766130447387695
    10. ' strings' → logprob: -9.828630447387695

Token 107: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.382560133934021
    2. ' s' → logprob: -1.757560133934021
    3. 'patterns' → logprob: -3.3825602531433105
    4. 'result' → logprob: -4.0075602531433105
    5. 'pattern' → logprob: -4.5075602531433105
    6. 'res' → logprob: -4.8825602531433105
    7. 'm' → logprob: -5.3825602531433105
    8. 'regex' → logprob: -5.4450602531433105
    9. 'l' → logprob: -5.7575602531433105
    10. 'lst' → logprob: -5.8200602531433105

Token 108: '',' (ID: 787)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.17856618762016296
    2. '2' → logprob: -2.8035662174224854
    3. '4' → logprob: -2.8035662174224854
    4. '1' → logprob: -3.3035662174224854
    5. 's' → logprob: -5.803565979003906
    6. '5' → logprob: -7.928565979003906
    7. 't' → logprob: -8.803565979003906
    8. 'u' → logprob: -8.928565979003906
    9. 'list' → logprob: -9.178565979003906
    10. 'e' → logprob: -9.178565979003906

Token 109: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7746753692626953
    2. ' s' → logprob: -1.1496753692626953
    3. 's' → logprob: -1.6496753692626953
    4. ' []' → logprob: -4.024675369262695
    5. ' [' → logprob: -5.774675369262695
    6. '[]' → logprob: -6.274675369262695
    7. '=' → logprob: -6.524675369262695
    8. ' [
' → logprob: -6.899675369262695
    9. ' ['' → logprob: -6.899675369262695
    10. '=[]' → logprob: -7.024675369262695

Token 110: ' elle' (ID: 11451)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026124024763703346
    2. '<|end|>' → logprob: -4.276124000549316
    3. '=' → logprob: -4.901124000549316
    4. 's' → logprob: -5.651124000549316
    5. ' s' → logprob: -7.651124000549316
    6. '=[]' → logprob: -9.151124000549316
    7. '<|end|>' → logprob: -9.776124000549316
    8. ' contient' → logprob: -9.901124000549316
    9. ' ' → logprob: -10.151124000549316
    10. '[]' → logprob: -10.401124000549316

Token 111: '-même' (ID: 41085)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10554294288158417
    2. '=' → logprob: -2.4805428981781006
    3. 's' → logprob: -4.85554313659668
    4. ' est' → logprob: -6.23054313659668
    5. ' contient' → logprob: -6.35554313659668
    6. '3' → logprob: -7.10554313659668
    7. ' s' → logprob: -7.23054313659668
    8. '=[]' → logprob: -7.48054313659668
    9. 'cont' → logprob: -8.10554313659668
    10. ',' → logprob: -8.23054313659668

Token 112: ' contient' (ID: 89067)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0565488301217556
    2. '=' → logprob: -3.681548833847046
    3. '<|end|>' → logprob: -4.056548595428467
    4. 's' → logprob: -4.556548595428467
    5. '=[
' → logprob: -7.931548595428467
    6. ' is' → logprob: -8.306549072265625
    7. '=[]' → logprob: -8.306549072265625
    8. '[' → logprob: -8.556549072265625
    9. '<|end|>' → logprob: -8.681549072265625
    10. '[]' → logprob: -8.806549072265625

Token 113: ' plusieurs' (ID: 20875)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4974922835826874
    2. '[' → logprob: -1.4974923133850098
    3. '<|end|>' → logprob: -2.6224923133850098
    4. '[]' → logprob: -3.1224923133850098
    5. ' ' → logprob: -3.9974923133850098
    6. '[
' → logprob: -4.62249231338501
    7. '[s' → logprob: -5.49749231338501
    8. '3' → logprob: -5.62249231338501
    9. 'des' → logprob: -6.12249231338501
    10. '["' → logprob: -6.12249231338501

Token 114: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24951010942459106
    2. '<|end|>' → logprob: -2.4995100498199463
    3. ' listes' → logprob: -2.9995100498199463
    4. 'list' → logprob: -3.1245100498199463
    5. 'élé' → logprob: -4.374510288238525
    6. 'lists' → logprob: -4.624510288238525
    7. ' s' → logprob: -5.624510288238525
    8. ' lignes' → logprob: -5.624510288238525
    9. ' éléments' → logprob: -6.124510288238525
    10. 'l' → logprob: -6.749510288238525

Token 115: '-list' (ID: 18463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.15175998210906982
    2. '-list' → logprob: -2.5267601013183594
    3. '-l' → logprob: -3.5267601013183594
    4. '-' → logprob: -4.526760101318359
    5. 'lists' → logprob: -5.151760101318359
    6. '_list' → logprob: -5.151760101318359
    7. 'l' → logprob: -6.151760101318359
    8. 'listas' → logprob: -6.151760101318359
    9. 'liste' → logprob: -6.151760101318359
    10. ' listes' → logprob: -6.776760101318359

Token 116: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.01338727306574583
    2. 's' → logprob: -4.388387203216553
    3. 'ées' → logprob: -8.138387680053711
    4. 'ections' → logprob: -9.013387680053711
    5. 'e' → logprob: -9.138387680053711
    6. '<|end|>' → logprob: -9.513387680053711
    7. 'ues' → logprob: -10.388387680053711
    8. '```' → logprob: -10.388387680053711
    9. 'ettes' → logprob: -10.513387680053711
    10. 'ess' → logprob: -11.388387680053711

Token 117: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.034075092524290085
    2. ' =' → logprob: -3.5340750217437744
    3. ' s' → logprob: -6.4090752601623535
    4. '=' → logprob: -6.5340752601623535
    5. '[' → logprob: -7.2840752601623535
    6. '=[
' → logprob: -8.784074783325195
    7. '<|end|>' → logprob: -8.909074783325195
    8. ',' → logprob: -9.409074783325195
    9. '=[]' → logprob: -10.409074783325195
    10. '=[' → logprob: -11.034074783325195

Token 118: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07040641456842422
    2. ' =' → logprob: -2.820406436920166
    3. '=' → logprob: -5.445406436920166
    4. '[' → logprob: -6.070406436920166
    5. ' s' → logprob: -6.570406436920166
    6. '<|end|>' → logprob: -9.320405960083008
    7. '[
' → logprob: -9.945405960083008
    8. '[s' → logprob: -10.320405960083008
    9. '=[
' → logprob: -10.320405960083008
    10. ',' → logprob: -10.695405960083008

Token 119: ' Chaque' (ID: 94758)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.038949862122535706
    2. ' s' → logprob: -3.288949966430664
    3. '[
' → logprob: -7.538949966430664
    4. ' [
' → logprob: -8.538949966430664
    5. '[' → logprob: -8.788949966430664
    6. ' [' → logprob: -10.788949966430664
    7. '[s' → logprob: -12.663949966430664
    8. ' [["' → logprob: -14.413949966430664
    9. 'n' → logprob: -14.538949966430664
    10. ' ' → logprob: -14.538949966430664

Token 120: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24086713790893555
    2. ' sous' → logprob: -1.9908671379089355
    3. 'sub' → logprob: -3.7408671379089355
    4. ' s' → logprob: -3.9908671379089355
    5. ' sub' → logprob: -3.9908671379089355
    6. ' ' → logprob: -4.8658671379089355
    7. ' =' → logprob: -5.7408671379089355
    8. ' liste' → logprob: -6.3658671379089355
    9. ' under' → logprob: -6.6158671379089355
    10. '=' → logprob: -7.6158671379089355

Token 121: '-l' (ID: 2887)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.558928370475769
    2. '_list' → logprob: -1.558928370475769
    3. '_lists' → logprob: -2.8089284896850586
    4. '<|end|>' → logprob: -2.8089284896850586
    5. 'liste' → logprob: -2.9339284896850586
    6. 's' → logprob: -4.808928489685059
    7. '_l' → logprob: -5.183928489685059
    8. '   ' → logprob: -5.558928489685059
    9. 'list' → logprob: -5.808928489685059
    10. '-list' → logprob: -6.183928489685059

Token 122: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.006595528684556484
    2. 'igne' → logprob: -5.506595611572266
    3. 'is' → logprob: -6.756595611572266
    4. 'ist' → logprob: -8.006595611572266
    5. 'i' → logprob: -8.256595611572266
    6. '[' → logprob: -9.006595611572266
    7. '[
' → logprob: -9.256595611572266
    8. 'a' → logprob: -9.506595611572266
    9. '['' → logprob: -9.881595611572266
    10. '#' → logprob: -9.881595611572266

Token 123: ' contient' (ID: 89067)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.23913730680942535
    2. 'des' → logprob: -2.1141374111175537
    3. '[' → logprob: -3.1141374111175537
    4. '["' → logprob: -3.9891374111175537
    5. 's' → logprob: -4.489137172698975
    6. '['' → logprob: -5.364137172698975
    7. '[
' → logprob: -5.614137172698975
    8. '[]' → logprob: -6.114137172698975
    9. '<|end|>' → logprob: -6.114137172698975
    10. ' ["' → logprob: -6.739137172698975

Token 125: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.023646406829357147
    2. ' des' → logprob: -4.898646354675293
    3. 's' → logprob: -5.648646354675293
    4. 'strings' → logprob: -5.898646354675293
    5. ' strings' → logprob: -6.773646354675293
    6. 'élé' → logprob: -6.773646354675293
    7. 'cha' → logprob: -6.898646354675293
    8. ' chain' → logprob: -6.898646354675293
    9. 'chain' → logprob: -7.023646354675293
    10. 'des' → logprob: -7.398646354675293

Token 126: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.15994885563850403
    2. '<|end|>' → logprob: -3.4099488258361816
    3. 's' → logprob: -3.5349488258361816
    4. '[' → logprob: -3.5349488258361816
    5. 'de' → logprob: -3.9099488258361816
    6. ' ' → logprob: -4.159948825836182
    7. '[
' → logprob: -4.659948825836182
    8. '  ' → logprob: -6.534948825836182
    9. '[str' → logprob: -6.659948825836182
    10. ' [
' → logprob: -6.909948825836182

Token 127: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.008663260377943516
    2. ' caractères' → logprob: -4.758663177490234
    3. 'char' → logprob: -11.508663177490234
    4. 'strings' → logprob: -12.008663177490234
    5. 'chars' → logprob: -12.508663177490234
    6. 'cha' → logprob: -12.633663177490234
    7. 'characters' → logprob: -12.883663177490234
    8. ' car' → logprob: -12.883663177490234
    9. ' caracteres' → logprob: -12.883663177490234
    10. ' ' → logprob: -13.008663177490234

Token 128: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06531896442174911
    2. ' s' → logprob: -3.940319061279297
    3. ',' → logprob: -4.190319061279297
    4. ']' → logprob: -4.565319061279297
    5. '[
' → logprob: -4.940319061279297
    6. ' =' → logprob: -5.065319061279297
    7. '[' → logprob: -7.065319061279297
    8. '=[
' → logprob: -7.315319061279297
    9. '.' → logprob: -7.440319061279297
    10. '=["' → logprob: -7.690319061279297

Token 129: ' 
' (ID: 793)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.47334402799606323
    2. ' [
' → logprob: -1.598344087600708
    3. '[' → logprob: -2.348344087600708
    4. 's' → logprob: -2.723344087600708
    5. ' s' → logprob: -4.973343849182129
    6. ' [' → logprob: -5.598343849182129
    7. '["' → logprob: -7.223343849182129
    8. '   ' → logprob: -7.348343849182129
    9. ' ["' → logprob: -7.598343849182129
    10. '[s' → logprob: -8.348343849182129

Token 130: '#' (ID: 2)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.9274879693984985
    2. ' [
' → logprob: -1.3024879693984985
    3. '[' → logprob: -1.8024879693984985
    4. 's' → logprob: -2.302487850189209
    5. ' [' → logprob: -3.427487850189209
    6. ' s' → logprob: -3.927487850189209
    7. '   ' → logprob: -4.677487850189209
    8. '#' → logprob: -5.677487850189209
    9. '["' → logprob: -7.052487850189209
    10. ' ["' → logprob: -7.302487850189209

Token 131: ' donc' (ID: 14206)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '["' → logprob: -1.207232117652893
    2. '[
' → logprob: -1.207232117652893
    3. '#' → logprob: -1.707232117652893
    4. '[' → logprob: -2.7072319984436035
    5. ' ["' → logprob: -3.2072319984436035
    6. '['' → logprob: -3.5822319984436035
    7. ' [
' → logprob: -3.7072319984436035
    8. '"' → logprob: -4.5822319984436035
    9. '   ' → logprob: -4.5822319984436035
    10. 's' → logprob: -4.9572319984436035

Token 132: ' '' (ID: 461)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5215674042701721
    2. '[
' → logprob: -2.0215673446655273
    3. 's' → logprob: -2.2715673446655273
    4. ' [
' → logprob: -2.6465673446655273
    5. '["' → logprob: -3.7715673446655273
    6. '[' → logprob: -4.021567344665527
    7. ' ["' → logprob: -4.396567344665527
    8. 'des' → logprob: -4.521567344665527
    9. ' s' → logprob: -4.646567344665527
    10. '['' → logprob: -5.396567344665527

Token 133: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005985678173601627
    2. '[
' → logprob: -6.130985736846924
    3. ' s' → logprob: -6.380985736846924
    4. ''s' → logprob: -6.880985736846924
    5. '"s' → logprob: -8.005985260009766
    6. '"' → logprob: -8.505985260009766
    7. '[' → logprob: -9.005985260009766
    8. ''' → logprob: -9.380985260009766
    9. '['' → logprob: -9.505985260009766
    10. '["' → logprob: -9.630985260009766

Token 134: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00386801571585238
    2. '=' → logprob: -6.253868103027344
    3. '3' → logprob: -7.253868103027344
    4. ''' → logprob: -7.878868103027344
    5. '=['' → logprob: -8.503868103027344
    6. 's' → logprob: -9.003868103027344
    7. ' =[' → logprob: -9.003868103027344
    8. '[' → logprob: -9.253868103027344
    9. '=[' → logprob: -9.503868103027344
    10. '=[
' → logprob: -9.753868103027344

Token 135: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007735356921330094
    2. '=' → logprob: -7.3757734298706055
    3. '[' → logprob: -9.250773429870605
    4. 's' → logprob: -10.875773429870605
    5. ' ' → logprob: -11.375773429870605
    6. ' =[' → logprob: -11.375773429870605
    7. '=[' → logprob: -12.875773429870605
    8. ' s' → logprob: -13.625773429870605
    9. ' is' → logprob: -13.875773429870605
    10. '.append' → logprob: -14.500773429870605

Token 136: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.16501593589782715
    2. ' [' → logprob: -2.915015935897827
    3. ' [
' → logprob: -3.040015935897827
    4. '[' → logprob: -3.290015935897827
    5. '[
' → logprob: -5.165016174316406
    6. ' un' → logprob: -5.540016174316406
    7. 's' → logprob: -6.915016174316406
    8. 'une' → logprob: -7.040016174316406
    9. ' a' → logprob: -7.665016174316406
    10. ' =' → logprob: -8.165016174316406

Token 137: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.49172723293304443
    2. 'liste' → logprob: -1.1167272329330444
    3. 'list' → logprob: -2.866727352142334
    4. ' list' → logprob: -5.616727352142334
    5. '```' → logprob: -8.616726875305176
    6. ' ' → logprob: -9.366726875305176
    7. 's' → logprob: -9.366726875305176
    8. 'l' → logprob: -10.241726875305176
    9. ' listes' → logprob: -10.991726875305176
    10. '2' → logprob: -11.116726875305176

Token 138: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8634156584739685
    2. ' de' → logprob: -0.8634156584739685
    3. '[
' → logprob: -3.1134157180786133
    4. 'de' → logprob: -3.2384157180786133
    5. '[]' → logprob: -3.9884157180786133
    6. ' of' → logprob: -4.113415718078613
    7. ' =' → logprob: -4.613415718078613
    8. 's' → logprob: -4.613415718078613
    9. '[list' → logprob: -5.613415718078613
    10. '[List' → logprob: -5.988415718078613

Token 139: ' listes' (ID: 179198)
  Prédit: ' listes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' listes' → logprob: -0.012955501675605774
    2. 'list' → logprob: -4.637955665588379
    3. ' list' → logprob: -6.637955665588379
    4. ' liste' → logprob: -6.887955665588379
    5. ' lists' → logprob: -8.012955665588379
    6. '```' → logprob: -9.012955665588379
    7. 's' → logprob: -9.137955665588379
    8. ' chaînes' → logprob: -9.262955665588379
    9. 'liste' → logprob: -9.762955665588379
    10. 'List' → logprob: -9.887955665588379

Token 140: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37494492530822754
    2. ' de' → logprob: -1.4999449253082275
    3. 'de' → logprob: -3.7499449253082275
    4. '[' → logprob: -3.8749449253082275
    5. '<|end|>' → logprob: -3.8749449253082275
    6. '[str' → logprob: -4.374944686889648
    7. '[]' → logprob: -6.374944686889648
    8. ' s' → logprob: -6.499944686889648
    9. ' =' → logprob: -6.499944686889648
    10. '[
' → logprob: -6.874944686889648

Token 141: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.0013624972198158503
    2. ' strings' → logprob: -7.376362323760986
    3. ' chain' → logprob: -7.626362323760986
    4. 'str' → logprob: -9.751362800598145
    5. 's' → logprob: -9.876362800598145
    6. 'strings' → logprob: -10.251362800598145
    7. 'chain' → logprob: -10.626362800598145
    8. ' ' → logprob: -10.876362800598145
    9. ' chaîne' → logprob: -11.876362800598145
    10. ' s' → logprob: -11.876362800598145

Token 142: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0104937553405762
    2. 'de' → logprob: -1.1354937553405762
    3. ' de' → logprob: -1.5104937553405762
    4. '_de' → logprob: -2.635493755340576
    5. '[' → logprob: -4.635493755340576
    6. '[]' → logprob: -6.135493755340576
    7. '[str' → logprob: -6.135493755340576
    8. ']' → logprob: -6.885493755340576
    9. '_' → logprob: -6.885493755340576
    10. '_strings' → logprob: -7.010493755340576

Token 143: 'liste' (ID: 69656)
  Prédit: ' strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.4594164788722992
    2. 'strings' → logprob: -2.209416389465332
    3. ' caractères' → logprob: -2.334416389465332
    4. ' de' → logprob: -2.584416389465332
    5. ')' → logprob: -2.834416389465332
    6. 's' → logprob: -4.459416389465332
    7. 'de' → logprob: -5.584416389465332
    8. ' )' → logprob: -6.334416389465332
    9. ' caracteres' → logprob: -6.334416389465332
    10. 'str' → logprob: -6.459416389465332

Token 144: ' ' (ID: 220)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.33353254199028015
    2. ' de' → logprob: -1.7085325717926025
    3. '[' → logprob: -2.8335325717926025
    4. ' of' → logprob: -4.583532333374023
    5. '[List' → logprob: -4.583532333374023
    6. 'de' → logprob: -5.083532333374023
    7. '[list' → logprob: -5.083532333374023
    8. '[
' → logprob: -5.708532333374023
    9. ')' → logprob: -6.208532333374023
    10. '<|end|>' → logprob: -6.583532333374023

Token 145: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9288199543952942
    2. '[str' → logprob: -1.0538198947906494
    3. ' de' → logprob: -2.5538198947906494
    4. '[List' → logprob: -2.8038198947906494
    5. 'de' → logprob: -3.0538198947906494
    6. '=' → logprob: -4.1788201332092285
    7. '[
' → logprob: -4.3038201332092285
    8. 's' → logprob: -4.6788201332092285
    9. '[list' → logprob: -4.6788201332092285
    10. ' =' → logprob: -5.1788201332092285

Token 146: 'D' (ID: 35)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7306063771247864
    2. '-' → logprob: -0.9806063771247864
    3. '-d' → logprob: -3.2306063175201416
    4. 'd' → logprob: -3.7306063175201416
    5. '-de' → logprob: -3.8556063175201416
    6. 'de' → logprob: -4.605606555938721
    7. ']' → logprob: -4.855606555938721
    8. ' -' → logprob: -4.980606555938721
    9. 'D' → logprob: -4.980606555938721
    10. ' d' → logprob: -5.230606555938721

Token 147: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062051597982645035
    2. ']' → logprob: -4.187051773071289
    3. ' )' → logprob: -4.437051773071289
    4. ').' → logprob: -4.562051773071289
    5. '])' → logprob: -4.937051773071289
    6. 's' → logprob: -5.187051773071289
    7. ' ]' → logprob: -5.937051773071289
    8. ' de' → logprob: -6.437051773071289
    9. '<|end|>' → logprob: -6.687051773071289
    10. 'strings' → logprob: -7.312051773071289

Token 148: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -8.888114098226652e-05
    2. ' s' → logprob: -9.375088691711426
    3. ' =' → logprob: -13.875088691711426
    4. '[' → logprob: -14.000088691711426
    5. '[
' → logprob: -14.500088691711426
    6. ' 
' → logprob: -15.125088691711426
    7. '
' → logprob: -15.500088691711426
    8. 'n' → logprob: -15.625088691711426
    9. '```' → logprob: -16.000089645385742
    10. ',' → logprob: -16.250089645385742

Token 149: ' Chaque' (ID: 94758)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00977297406643629
    2. ' s' → logprob: -4.634772777557373
    3. '[
' → logprob: -11.759773254394531
    4. ' =' → logprob: -12.759773254394531
    5. '[' → logprob: -13.259773254394531
    6. ' [
' → logprob: -13.509773254394531
    7. '```' → logprob: -14.634773254394531
    8. '
' → logprob: -15.009773254394531
    9. '=' → logprob: -15.134773254394531
    10. '_s' → logprob: -15.384773254394531

Token 150: ' sous' (ID: 14487)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6573784947395325
    2. 's' → logprob: -1.1573784351348877
    3. ' s' → logprob: -2.2823784351348877
    4. ' ' → logprob: -3.5323784351348877
    5. '=' → logprob: -4.032378673553467
    6. '_' → logprob: -5.282378673553467
    7. ' sous' → logprob: -5.657378673553467
    8. ' des' → logprob: -6.157378673553467
    9. '_s' → logprob: -6.657378673553467
    10. ' élément' → logprob: -6.907378673553467

Token 151: '-l' (ID: 2887)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36341363191604614
    2. ' =' → logprob: -1.4884135723114014
    3. '=' → logprob: -2.9884135723114014
    4. '[' → logprob: -4.9884138107299805
    5. '=[
' → logprob: -5.1134138107299805
    6. '[
' → logprob: -5.4884138107299805
    7. 'liste' → logprob: -5.6134138107299805
    8. '=[' → logprob: -5.8634138107299805
    9. '_s' → logprob: -6.6134138107299805
    10. '_list' → logprob: -7.7384138107299805

Token 152: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.0026401029899716377
    2. '```' → logprob: -7.877640247344971
    3. 's' → logprob: -8.252639770507812
    4. 'ist' → logprob: -8.502639770507812
    5. 'e' → logprob: -8.627639770507812
    6. 'a' → logprob: -8.752639770507812
    7. 'i' → logprob: -8.752639770507812
    8. 'site' → logprob: -8.877639770507812
    9. 'liste' → logprob: -9.002639770507812
    10. 'is' → logprob: -9.377639770507812

Token 153: ' correspond' (ID: 11095)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7002013325691223
    2. ' =' → logprob: -1.7002012729644775
    3. ' s' → logprob: -2.5752012729644775
    4. ' est' → logprob: -2.8252012729644775
    5. ' représente' → logprob: -2.8252012729644775
    6. '=' → logprob: -3.7002012729644775
    7. ' contient' → logprob: -3.8252012729644775
    8. ' de' → logprob: -4.075201511383057
    9. ' correspond' → logprob: -4.450201511383057
    10. 'de' → logprob: -5.200201511383057

Token 154: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2294839322566986
    2. ' au' → logprob: -2.6044838428497314
    3. ' aux' → logprob: -2.9794838428497314
    4. ' =' → logprob: -3.3544838428497314
    5. ' ' → logprob: -4.2294840812683105
    6. 's' → logprob: -4.7294840812683105
    7. '=' → logprob: -4.9794840812683105
    8. ' a' → logprob: -5.7294840812683105
    9. 'aux' → logprob: -6.2294840812683105
    10. 'à' → logprob: -6.2294840812683105

Token 155: ' un' (ID: 537)
  Prédit: ' [
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [
' → logprob: -0.49173831939697266
    2. '[
' → logprob: -1.4917383193969727
    3. ' ["' → logprob: -2.9917383193969727
    4. ' [' → logprob: -2.9917383193969727
    5. '[' → logprob: -3.4917383193969727
    6. '["' → logprob: -3.9917383193969727
    7. ' une' → logprob: -5.366738319396973
    8. ' ['' → logprob: -5.866738319396973
    9. ' des' → logprob: -6.366738319396973
    10. 's' → logprob: -6.866738319396973

Token 156: ' cas' (ID: 2108)
  Prédit: ' motif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' motif' → logprob: -1.761909008026123
    2. ' type' → logprob: -1.886909008026123
    3. ' groupe' → logprob: -2.386909008026123
    4. ' niveau' → logprob: -2.636909008026123
    5. ' mot' → logprob: -2.761909008026123
    6. ' jour' → logprob: -3.261909008026123
    7. 'niveau' → logprob: -3.261909008026123
    8. ' thème' → logprob: -3.761909008026123
    9. 'jour' → logprob: -3.824409008026123
    10. 'mot' → logprob: -3.886909008026123

Token 157: ' particulier' (ID: 47842)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16823628544807434
    2. ' =' → logprob: -2.918236255645752
    3. ',' → logprob: -4.418236255645752
    4. '_' → logprob: -4.543236255645752
    5. ' ' → logprob: -4.668236255645752
    6. '[]' → logprob: -4.668236255645752
    7. ' de' → logprob: -4.793236255645752
    8. '[' → logprob: -4.918236255645752
    9. ' s' → logprob: -5.043236255645752
    10. ' d' → logprob: -5.043236255645752

Token 158: ' utilisé' (ID: 53138)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07322634011507034
    2. ' =' → logprob: -3.0732264518737793
    3. ' s' → logprob: -5.073226451873779
    4. ',' → logprob: -5.198226451873779
    5. '[
' → logprob: -5.698226451873779
    6. '[' → logprob: -6.198226451873779
    7. '=' → logprob: -6.323226451873779
    8. ']' → logprob: -6.448226451873779
    9. '=[
' → logprob: -7.323226451873779
    10. '.' → logprob: -7.823226451873779

Token 159: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3425824642181396
    2. ' dans' → logprob: -1.5925824642181396
    3. '=' → logprob: -2.3425824642181396
    4. ' =' → logprob: -2.4675824642181396
    5. 'dans' → logprob: -2.4675824642181396
    6. ',' → logprob: -3.2175824642181396
    7. ' for' → logprob: -3.2175824642181396
    8. ' pour' → logprob: -3.3425824642181396
    9. 'for' → logprob: -3.4675824642181396
    10. '   ' → logprob: -3.5925824642181396

Token 160: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5454259514808655
    2. ' la' → logprob: -2.4204258918762207
    3. ' s' → logprob: -2.5454258918762207
    4. 'le' → logprob: -2.6704258918762207
    5. ' l' → logprob: -3.0454258918762207
    6. 's' → logprob: -3.2954258918762207
    7. 'l' → logprob: -3.7954258918762207
    8. ' un' → logprob: -3.7954258918762207
    9. ' les' → logprob: -4.545425891876221
    10. 'la' → logprob: -4.670425891876221

Token 161: ' logique' (ID: 115350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6552491784095764
    2. ' code' → logprob: -2.4052491188049316
    3. ' test' → logprob: -2.7802491188049316
    4. ' s' → logprob: -3.1552491188049316
    5. ' tests' → logprob: -3.1552491188049316
    6. '#' → logprob: -3.5302491188049316
    7. 'suite' → logprob: -3.5302491188049316
    8. 'tests' → logprob: -3.6552491188049316
    9. ' programmation' → logprob: -3.6552491188049316
    10. 'pro' → logprob: -3.7802491188049316

Token 162: ' ult' (ID: 11619)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5676600337028503
    2. ' s' → logprob: -1.0676600933074951
    3. ',' → logprob: -3.442660093307495
    4. ')' → logprob: -4.942659854888916
    5. ' =' → logprob: -4.942659854888916
    6. ' de' → logprob: -4.942659854888916
    7. '[' → logprob: -5.067659854888916
    8. ']' → logprob: -5.192659854888916
    9. ' ' → logprob: -5.192659854888916
    10. ' ,' → logprob: -5.192659854888916

Token 163: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.0020533124916255474
    2. 'érieur' → logprob: -6.252053260803223
    3. 'é' → logprob: -9.627053260803223
    4. 'érie' → logprob: -11.002053260803223
    5. 'ime' → logprob: -11.252053260803223
    6. 'érieures' → logprob: -11.502053260803223
    7. 'érieurs' → logprob: -13.002053260803223
    8. 'éri' → logprob: -13.252053260803223
    9. 'ér' → logprob: -13.252053260803223
    10. '   ' → logprob: -13.502053260803223

Token 164: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009637444280087948
    2. ']' → logprob: -5.384637355804443
    3. ' s' → logprob: -5.884637355804443
    4. ' =' → logprob: -7.009637355804443
    5. '[
' → logprob: -8.009637832641602
    6. ',' → logprob: -8.634637832641602
    7. '=' → logprob: -8.634637832641602
    8. '[' → logprob: -9.009637832641602
    9. '
' → logprob: -9.384637832641602
    10. ']
' → logprob: -9.509637832641602

Token 165: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.73052782076411e-05
    2. ' s' → logprob: -9.625067710876465
    3. ' =' → logprob: -14.625067710876465
    4. '[
' → logprob: -15.250067710876465
    5. '[' → logprob: -16.00006675720215
    6. '_s' → logprob: -16.62506675720215
    7. ']' → logprob: -16.62506675720215
    8. '=' → logprob: -16.62506675720215
    9. ',' → logprob: -17.37506675720215
    10. '=s' → logprob: -17.87506675720215

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0004648696631193161
    2. '=' → logprob: -7.875464916229248
    3. 's' → logprob: -9.87546443939209
    4. '3' → logprob: -11.25046443939209
    5. ' ' → logprob: -12.00046443939209
    6. ' ' → logprob: -12.37546443939209
    7. ' =[' → logprob: -12.50046443939209
    8. '=[' → logprob: -12.62546443939209
    9. ' s' → logprob: -14.25046443939209
    10. '=['' → logprob: -14.37546443939209

Token 167: ' [
' (ID: 4240)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6030068397521973
    2. ' [' → logprob: -1.2280068397521973
    3. ' [
' → logprob: -2.4780068397521973
    4. '[
' → logprob: -3.2280068397521973
    5. ' [["' → logprob: -3.3530068397521973
    6. '[['' → logprob: -7.228006839752197
    7. '[[' → logprob: -8.478006362915039
    8. ' [[' → logprob: -9.103006362915039
    9. ' [
' → logprob: -9.228006362915039
    10. ' [['' → logprob: -9.353006362915039

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23896291851997375
    2. '["' → logprob: -1.7389628887176514
    3. ' ["' → logprob: -3.3639628887176514
    4. ' ' → logprob: -6.9889631271362305
    5. '[' → logprob: -7.6139631271362305
    6. '[]' → logprob: -7.9889631271362305
    7. '       ' → logprob: -8.48896312713623
    8. '[
' → logprob: -9.23896312713623
    9. ' [' → logprob: -9.98896312713623
    10. '   ' → logprob: -10.36396312713623

Token 169: ' ["' (ID: 9129)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '["' (adapté à ' ["') → logprob: -0.015414168126881123
    2. '   ' → logprob: -4.390414237976074
    3. ' ["' → logprob: -6.515414237976074
    4. '[
' → logprob: -7.265414237976074
    5. '[' → logprob: -8.015414237976074
    6. ' ' → logprob: -8.390414237976074
    7. '       ' → logprob: -9.765414237976074
    8. '[]' → logprob: -10.140414237976074
    9. '['' → logprob: -10.390414237976074
    10. '  ' → logprob: -12.140414237976074

Token 170: 'ab' (ID: 378)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0276156663894653
    2. 'abb' → logprob: -1.6526156663894653
    3. 'abc' → logprob: -1.9026156663894653
    4. 'ab' → logprob: -1.9026156663894653
    5. 'aa' → logprob: -3.277615547180176
    6. 'aaa' → logprob: -3.277615547180176
    7. 'aba' → logprob: -4.652615547180176
    8. 'b' → logprob: -4.902615547180176
    9. 'bb' → logprob: -5.152615547180176
    10. 'bbb' → logprob: -5.277615547180176

Token 171: 'cc' (ID: 710)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029891062527894974
    2. 'c' → logprob: -4.154891014099121
    3. '"' → logprob: -4.529891014099121
    4. '",' → logprob: -7.154891014099121
    5. 'bc' → logprob: -7.529891014099121
    6. '"]' → logprob: -7.904891014099121
    7. '","' → logprob: -8.154891014099121
    8. 'a' → logprob: -8.279891014099121
    9. '"],' → logprob: -8.279891014099121
    10. 'ba' → logprob: -9.279891014099121

Token 172: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.03842838481068611
    2. 'c' → logprob: -3.78842830657959
    3. '","' → logprob: -5.28842830657959
    4. 'b' → logprob: -5.66342830657959
    5. 'a' → logprob: -6.41342830657959
    6. '"' → logprob: -6.41342830657959
    7. 'd' → logprob: -7.03842830657959
    8. '"]' → logprob: -7.66342830657959
    9. 'ab' → logprob: -7.91342830657959
    10. '"],' → logprob: -8.16342830657959

Token 173: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.454137921333313
    2. '"' → logprob: -1.079137921333313
    3. '"a' → logprob: -3.9541378021240234
    4. '"d' → logprob: -5.579137802124023
    5. ' ' → logprob: -7.454137802124023
    6. ' ""' → logprob: -8.704137802124023
    7. 'a' → logprob: -8.829137802124023
    8. ' "",' → logprob: -8.829137802124023
    9. '"s' → logprob: -8.829137802124023
    10. 'd' → logprob: -9.454137802124023

Token 174: 'ab' (ID: 378)
  Prédit: 'abb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abb' → logprob: -1.6550345420837402
    2. 'a' → logprob: -1.7800345420837402
    3. 'abc' → logprob: -1.9050345420837402
    4. 'ab' → logprob: -2.2800345420837402
    5. 'abd' → logprob: -2.6550345420837402
    6. 'b' → logprob: -3.0300345420837402
    7. 'ad' → logprob: -3.6550345420837402
    8. 'bb' → logprob: -4.03003454208374
    9. 'c' → logprob: -4.28003454208374
    10. 'ac' → logprob: -4.28003454208374

Token 175: 'dd' (ID: 1183)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8558743596076965
    2. 'c' → logprob: -1.1058743000030518
    3. 'bc' → logprob: -2.9808743000030518
    4. 'cc' → logprob: -3.2308743000030518
    5. 'd' → logprob: -3.3558743000030518
    6. 'a' → logprob: -3.7308743000030518
    7. 'bcc' → logprob: -3.8558743000030518
    8. 'bd' → logprob: -4.355874538421631
    9. 'cd' → logprob: -4.480874538421631
    10. 'ab' → logprob: -4.480874538421631

Token 176: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.015313341282308102
    2. '"]' → logprob: -4.765313148498535
    3. '"],' → logprob: -5.640313148498535
    4. '"' → logprob: -6.890313148498535
    5. 'c' → logprob: -7.015313148498535
    6. 'cc' → logprob: -8.265313148498535
    7. 'd' → logprob: -8.515313148498535
    8. 'a' → logprob: -8.640313148498535
    9. '","' → logprob: -8.765313148498535
    10. 'b' → logprob: -9.765313148498535

Token 177: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.1146794930100441
    2. '"' → logprob: -2.2396795749664307
    3. ' ' → logprob: -6.989679336547852
    4. '"a' → logprob: -7.864679336547852
    5. '   ' → logprob: -9.114679336547852
    6. '"d' → logprob: -9.677179336547852
    7. 'ab' → logprob: -10.427179336547852
    8. 'a' → logprob: -10.427179336547852
    9. ' ""' → logprob: -10.427179336547852
    10. '"s' → logprob: -10.739679336547852

Token 178: 'dd' (ID: 1183)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.8591833710670471
    2. 'a' → logprob: -2.4841833114624023
    3. 'ab' → logprob: -2.6091833114624023
    4. 'c' → logprob: -2.6091833114624023
    5. 'ccd' → logprob: -2.6091833114624023
    6. 'cd' → logprob: -3.3591833114624023
    7. 'ac' → logprob: -3.4841833114624023
    8. 'acc' → logprob: -3.6091833114624023
    9. 'bb' → logprob: -4.109183311462402
    10. 'abb' → logprob: -4.359183311462402

Token 179: 'ba' (ID: 3103)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5904144048690796
    2. '"]' → logprob: -1.7154144048690796
    3. 'cc' → logprob: -1.8404144048690796
    4. '"]]' → logprob: -1.9654144048690796
    5. 'c' → logprob: -2.340414524078369
    6. 'dd' → logprob: -2.840414524078369
    7. 'a' → logprob: -3.215414524078369
    8. '"],' → logprob: -3.715414524078369
    9. 'b' → logprob: -4.215414524078369
    10. 'e' → logprob: -4.590414524078369

Token 180: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.5680252909660339
    2. '"],' → logprob: -1.3180253505706787
    3. '"]' → logprob: -2.0680253505706787
    4. '"],
' → logprob: -3.9430253505706787
    5. 'a' → logprob: -5.1930251121521
    6. 'c' → logprob: -5.6930251121521
    7. '"]
' → logprob: -5.8180251121521
    8. '"' → logprob: -5.9430251121521
    9. 'd' → logprob: -6.1930251121521
    10. 'b' → logprob: -6.6930251121521

Token 181: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.2061145156621933
    2. '"' → logprob: -1.7061145305633545
    3. '   ' → logprob: -6.956114292144775
    4. ' ' → logprob: -6.956114292144775
    5. '"a' → logprob: -7.081114292144775
    6. '"d' → logprob: -7.206114292144775
    7. '    ' → logprob: -8.081114768981934
    8. '"s' → logprob: -8.956114768981934
    9. '  ' → logprob: -9.206114768981934
    10. 'a' → logprob: -10.081114768981934

Token 182: 'cc' (ID: 710)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -1.8818203210830688
    2. 'cc' → logprob: -1.8818203210830688
    3. 'a' → logprob: -2.5068202018737793
    4. 'dd' → logprob: -2.6318202018737793
    5. 'cd' → logprob: -3.2568202018737793
    6. 'bb' → logprob: -3.2568202018737793
    7. 'ac' → logprob: -3.2568202018737793
    8. 'd' → logprob: -3.2568202018737793
    9. 'abba' → logprob: -3.2568202018737793
    10. 'abb' → logprob: -3.3818202018737793

Token 183: 'ba' (ID: 3103)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.5965973734855652
    2. 'a' → logprob: -2.09659743309021
    3. 'c' → logprob: -2.59659743309021
    4. '",' → logprob: -2.97159743309021
    5. 'cc' → logprob: -3.09659743309021
    6. '"]]' → logprob: -3.09659743309021
    7. 'b' → logprob: -3.47159743309021
    8. 'd' → logprob: -3.97159743309021
    9. '"],' → logprob: -4.596597194671631
    10. 'ab' → logprob: -4.596597194671631

Token 184: '"],
' (ID: 15666)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.6921098828315735
    2. '"],' → logprob: -1.3171098232269287
    3. '"],
' → logprob: -1.8171098232269287
    4. '"]' → logprob: -2.8171098232269287
    5. '"]
' → logprob: -5.317110061645508
    6. '   ' → logprob: -6.442110061645508
    7. '"' → logprob: -6.692110061645508
    8. '"],
' → logprob: -7.442110061645508
    9. ' "' → logprob: -8.317110061645508
    10. '",
' → logprob: -9.192110061645508

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010306637705070898
    2. '[' → logprob: -10.000102996826172
    3. '["' → logprob: -10.750102996826172
    4. '       ' → logprob: -11.000102996826172
    5. '[
' → logprob: -11.250102996826172
    6. '	' → logprob: -13.375102996826172
    7. '    ' → logprob: -13.750102996826172
    8. '   ' → logprob: -14.000102996826172
    9. '    
' → logprob: -14.250102996826172
    10. '  ' → logprob: -14.250102996826172

Token 186: ' ["' (ID: 9129)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047079019248485565
    2. '["' (adapté à ' ["') → logprob: -3.172079086303711
    3. ' ["' → logprob: -5.797079086303711
    4. '[
' → logprob: -7.797079086303711
    5. '[' → logprob: -7.922079086303711
    6. '       ' → logprob: -8.922079086303711
    7. ' ' → logprob: -10.672079086303711
    8. '  ' → logprob: -10.672079086303711
    9. ' [
' → logprob: -10.672079086303711
    10. '    ' → logprob: -11.422079086303711

Token 187: 'dcc' (ID: 181447)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.733684778213501
    2. 'a' → logprob: -1.983684778213501
    3. '"' → logprob: -2.733684778213501
    4. 'abb' → logprob: -2.983684778213501
    5. 'abc' → logprob: -3.233684778213501
    6. 'cc' → logprob: -3.358684778213501
    7. 'aa' → logprob: -3.608684778213501
    8. 'ac' → logprob: -3.858684778213501
    9. 'cd' → logprob: -4.233684539794922
    10. 'abcd' → logprob: -4.483684539794922

Token 188: 'dd' (ID: 1183)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '",' → logprob: -0.21120750904083252
    2. 'a' → logprob: -2.336207389831543
    3. 'b' → logprob: -2.836207389831543
    4. 'c' → logprob: -4.461207389831543
    5. '"' → logprob: -4.836207389831543
    6. 'ba' → logprob: -5.586207389831543
    7. '"]' → logprob: -5.711207389831543
    8. 'ab' → logprob: -6.336207389831543
    9. 'd' → logprob: -6.461207389831543
    10. '","' → logprob: -6.836207389831543

Token 189: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.004702107049524784
    2. '"]' → logprob: -5.629702091217041
    3. '"],' → logprob: -7.504702091217041
    4. '"' → logprob: -8.5047025680542
    5. '","' → logprob: -9.0047025680542
    6. 'd' → logprob: -9.2547025680542
    7. ' ",' → logprob: -9.3797025680542
    8. ',' → logprob: -12.0047025680542
    9. '',' → logprob: -12.0047025680542
    10. ']' → logprob: -12.1297025680542

Token 190: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.4624367952346802
    2. '"' → logprob: -1.0874367952346802
    3. '"d' → logprob: -3.4624366760253906
    4. '   ' → logprob: -7.212436676025391
    5. ' ' → logprob: -7.337436676025391
    6. '    ' → logprob: -9.21243667602539
    7. 'd' → logprob: -10.21243667602539
    8. '  ' → logprob: -10.58743667602539
    9. '"a' → logprob: -10.58743667602539
    10. ' ["' → logprob: -10.58743667602539

Token 191: 'daa' (ID: 90964)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dd' → logprob: -1.889753818511963
    2. 'cc' → logprob: -2.014753818511963
    3. 'ab' → logprob: -2.389753818511963
    4. 'dcc' → logprob: -2.889753818511963
    5. 'd' → logprob: -3.014753818511963
    6. 'a' → logprob: -3.014753818511963
    7. 'abb' → logprob: -3.264753818511963
    8. 'c' → logprob: -3.514753818511963
    9. '"' → logprob: -3.514753818511963
    10. 'ac' → logprob: -3.514753818511963

Token 192: '.c' (ID: 1081)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3907063007354736
    2. 'dd' → logprob: -1.5157063007354736
    3. 'd' → logprob: -1.6407063007354736
    4. '",' → logprob: -2.7657063007354736
    5. 'b' → logprob: -3.0157063007354736
    6. 'ddd' → logprob: -3.1407063007354736
    7. '"' → logprob: -3.2657063007354736
    8. 'bb' → logprob: -4.0157060623168945
    9. 'cc' → logprob: -4.2657060623168945
    10. 'abb' → logprob: -4.3907060623168945

Token 193: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.11684433370828629
    2. 'c' → logprob: -2.616844415664673
    3. '"]' → logprob: -3.991844415664673
    4. 'd' → logprob: -4.866844177246094
    5. '"' → logprob: -4.991844177246094
    6. '","' → logprob: -6.866844177246094
    7. '"]]' → logprob: -6.991844177246094
    8. '"],' → logprob: -7.616844177246094
    9. 'a' → logprob: -7.866844177246094
    10. 'cd' → logprob: -8.366844177246094

Token 194: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.22972112894058228
    2. ' "' → logprob: -1.6047210693359375
    3. '"d' → logprob: -5.6047210693359375
    4. ' ' → logprob: -8.854721069335938
    5. '",' → logprob: -9.229721069335938
    6. '   ' → logprob: -10.104721069335938
    7. '"a' → logprob: -10.104721069335938
    8. ']' → logprob: -10.229721069335938
    9. '""' → logprob: -10.479721069335938
    10. '"s' → logprob: -10.479721069335938

Token 195: 'c' (ID: 66)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.26408156752586365
    2. '"a' → logprob: -3.3890814781188965
    3. '"d' → logprob: -3.6390814781188965
    4. 'cc' → logprob: -3.6390814781188965
    5. 'dd' → logprob: -3.8890814781188965
    6. 'd' → logprob: -4.0140814781188965
    7. 'a' → logprob: -4.0140814781188965
    8. 'c' → logprob: -4.3890814781188965
    9. '".' → logprob: -4.6390814781188965
    10. 'cd' → logprob: -4.7640814781188965

Token 196: '..' (ID: 485)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8707265853881836
    2. 'cd' → logprob: -2.3707265853881836
    3. 'dd' → logprob: -2.8707265853881836
    4. 'd' → logprob: -2.8707265853881836
    5. 'cb' → logprob: -2.8707265853881836
    6. 'a' → logprob: -3.4957265853881836
    7. 'cc' → logprob: -3.4957265853881836
    8. 'b' → logprob: -3.6207265853881836
    9. 'dda' → logprob: -3.8707265853881836
    10. 'cca' → logprob: -3.9957265853881836

Token 197: 'bc' (ID: 16715)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6107584238052368
    2. 'a' → logprob: -2.3607583045959473
    3. 'b' → logprob: -2.4857583045959473
    4. 'bb' → logprob: -2.9857583045959473
    5. 'cb' → logprob: -3.2357583045959473
    6. 'ba' → logprob: -3.4857583045959473
    7. 'cc' → logprob: -3.6107583045959473
    8. 'd' → logprob: -3.6107583045959473
    9. 'aa' → logprob: -4.235758304595947
    10. 'cd' → logprob: -4.360758304595947

Token 198: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.09774915128946304
    2. '"]' → logprob: -2.5977492332458496
    3. '"]
' → logprob: -5.34774923324585
    4. '"],' → logprob: -5.47274923324585
    5. 'd' → logprob: -5.97274923324585
    6. '"' → logprob: -6.22274923324585
    7. '"],
' → logprob: -6.22274923324585
    8. 'c' → logprob: -6.72274923324585
    9. 'b' → logprob: -7.59774923324585
    10. 'a' → logprob: -7.97274923324585

Token 199: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.3914838433265686
    2. '"' → logprob: -1.1414837837219238
    3. '"d' → logprob: -5.891483783721924
    4. '   ' → logprob: -7.766483783721924
    5. ' ' → logprob: -7.766483783721924
    6. ']' → logprob: -9.016484260559082
    7. '    ' → logprob: -9.266484260559082
    8. ' ["' → logprob: -9.391484260559082
    9. '["' → logprob: -9.516484260559082
    10. '...' → logprob: -9.641484260559082

Token 200: 'c' (ID: 66)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.5589067935943604
    2. 'cc' → logprob: -1.9339067935943604
    3. 'c' → logprob: -2.4339067935943604
    4. 'dd' → logprob: -2.6839067935943604
    5. 'b' → logprob: -3.0589067935943604
    6. 'd' → logprob: -3.0589067935943604
    7. 'bcc' → logprob: -3.1839067935943604
    8. 'a' → logprob: -3.4339067935943604
    9. 'bb' → logprob: -3.4339067935943604
    10. 'cb' → logprob: -3.5589067935943604

Token 201: '..' (ID: 485)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6232688426971436
    2. 'cb' → logprob: -2.3732688426971436
    3. 'b' → logprob: -2.4982688426971436
    4. 'cbc' → logprob: -2.6232688426971436
    5. 'cca' → logprob: -4.123269081115723
    6. 'd' → logprob: -4.123269081115723
    7. 'ccb' → logprob: -4.123269081115723
    8. '..' → logprob: -4.248269081115723
    9. 'a' → logprob: -4.498269081115723
    10. 'bcc' → logprob: -4.498269081115723

Token 202: 'bd' (ID: 10733)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1494371891021729
    2. 'ba' → logprob: -1.6494371891021729
    3. 'c' → logprob: -1.8994371891021729
    4. 'cb' → logprob: -2.149437189102173
    5. 'bc' → logprob: -2.899437189102173
    6. 'bb' → logprob: -3.649437189102173
    7. 'bac' → logprob: -4.024436950683594
    8. 'cc' → logprob: -4.024436950683594
    9. 'cbc' → logprob: -4.149436950683594
    10. 'bcc' → logprob: -4.274436950683594

Token 203: '",' (ID: 672)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.2860783636569977
    2. '",' → logprob: -1.9110783338546753
    3. '"],' → logprob: -2.411078453063965
    4. '"],
' → logprob: -4.786078453063965
    5. ']' → logprob: -6.661078453063965
    6. '"]
' → logprob: -7.411078453063965
    7. '   ' → logprob: -7.661078453063965
    8. '"' → logprob: -8.536078453063965
    9. '],' → logprob: -9.536078453063965
    10. ' "]' → logprob: -10.286078453063965

Token 204: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7338923811912537
    2. ' "' → logprob: -0.7338923811912537
    3. '"d' → logprob: -3.6088924407958984
    4. '   ' → logprob: -4.858892440795898
    5. ' ' → logprob: -6.733892440795898
    6. ']' → logprob: -7.358892440795898
    7. '["' → logprob: -7.483892440795898
    8. '    ' → logprob: -7.483892440795898
    9. ' ["' → logprob: -7.858892440795898
    10. '       ' → logprob: -7.983892440795898

Token 205: 'dd' (ID: 1183)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09175953269004822
    2. '"d' → logprob: -3.091759443283081
    3. '"..' → logprob: -4.71675968170166
    4. '"a' → logprob: -4.96675968170166
    5. '".' → logprob: -5.46675968170166
    6. ''' → logprob: -5.59175968170166
    7. 'c' → logprob: -5.71675968170166
    8. 'cc' → logprob: -5.84175968170166
    9. 'dcc' → logprob: -6.34175968170166
    10. ''d' → logprob: -6.96675968170166

Token 206: 'ccd' (ID: 199062)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.832622766494751
    2. 'c' → logprob: -2.332622766494751
    3. 'b' → logprob: -2.332622766494751
    4. 'ba' → logprob: -2.332622766494751
    5. 'd' → logprob: -2.707622766494751
    6. '"' → logprob: -4.082622528076172
    7. 'cc' → logprob: -4.082622528076172
    8. '"]' → logprob: -4.332622528076172
    9. 'bc' → logprob: -4.332622528076172
    10. '"]]' → logprob: -4.332622528076172

Token 207: '"],
' (ID: 15666)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.20655038952827454
    2. '",' → logprob: -2.081550359725952
    3. '"],' → logprob: -2.831550359725952
    4. '"],
' → logprob: -6.081550598144531
    5. '"]
' → logprob: -8.456550598144531
    6. ']' → logprob: -8.706550598144531
    7. '   ' → logprob: -9.456550598144531
    8. '"' → logprob: -9.456550598144531
    9. ' "]' → logprob: -10.706550598144531
    10. '"]]' → logprob: -10.831550598144531

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.3795937522663735e-05
    2. '[' → logprob: -11.50002384185791
    3. ']' → logprob: -12.00002384185791
    4. '[
' → logprob: -12.75002384185791
    5. '       ' → logprob: -12.87502384185791
    6. '["' → logprob: -14.00002384185791
    7. '    ' → logprob: -14.37502384185791
    8. '  ' → logprob: -15.12502384185791
    9. '   ' → logprob: -16.375022888183594
    10. '	' → logprob: -16.500022888183594

Token 209: ' ["' (ID: 9129)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01672004722058773
    2. '["' (adapté à ' ["') → logprob: -4.391719818115234
    3. '[' → logprob: -6.016719818115234
    4. ']' → logprob: -7.016719818115234
    5. '       ' → logprob: -7.641719818115234
    6. '[
' → logprob: -8.141719818115234
    7. ' ["' → logprob: -9.891719818115234
    8. '  ' → logprob: -11.516719818115234
    9. '   ' → logprob: -11.891719818115234
    10. '[]' → logprob: -12.016719818115234

Token 210: 'abb' (ID: 13538)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '["' → logprob: -0.5800685882568359
    2. '"' → logprob: -0.9550685882568359
    3. '"d' → logprob: -4.205068588256836
    4. '"a' → logprob: -4.580068588256836
    5. '[' → logprob: -5.455068588256836
    6. '"..' → logprob: -5.830068588256836
    7. '".' → logprob: -6.080068588256836
    8. '[
' → logprob: -6.205068588256836
    9. 'dcc' → logprob: -6.205068588256836
    10. '...' → logprob: -6.455068588256836

Token 211: 'c' (ID: 66)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.009298058226704597
    2. '"]' → logprob: -4.884297847747803
    3. 'd' → logprob: -7.634297847747803
    4. '"' → logprob: -8.134298324584961
    5. '","' → logprob: -8.134298324584961
    6. 'a' → logprob: -8.634298324584961
    7. '"]]' → logprob: -8.759298324584961
    8. '"],' → logprob: -8.884298324584961
    9. 'c' → logprob: -10.134298324584961
    10. ' ",' → logprob: -10.509298324584961

Token 212: '..' (ID: 485)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '",' → logprob: -0.006947191432118416
    2. '"]' → logprob: -5.256947040557861
    3. '"' → logprob: -7.506947040557861
    4. 'd' → logprob: -7.881947040557861
    5. 'c' → logprob: -8.25694751739502
    6. '","' → logprob: -8.50694751739502
    7. 'b' → logprob: -9.13194751739502
    8. 'a' → logprob: -9.25694751739502
    9. ' ",' → logprob: -10.25694751739502
    10. '",
' → logprob: -11.63194751739502

Token 213: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.16859842836856842
    2. '"]' → logprob: -1.9185984134674072
    3. '["' → logprob: -6.168598651885986
    4. '"' → logprob: -6.293598651885986
    5. '[' → logprob: -6.668598651885986
    6. '"],' → logprob: -6.668598651885986
    7. '","' → logprob: -7.793598651885986
    8. '"]]' → logprob: -8.293598175048828
    9. '",
' → logprob: -8.793598175048828
    10. ']' → logprob: -9.043598175048828

Token 214: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.5272822976112366
    2. '"' → logprob: -0.9022822976112366
    3. '"d' → logprob: -6.652282238006592
    4. '"a' → logprob: -7.152282238006592
    5. ' ' → logprob: -7.652282238006592
    6. ' ".' → logprob: -7.902282238006592
    7. ' "..' → logprob: -8.27728271484375
    8. '"s' → logprob: -8.40228271484375
    9. '".' → logprob: -8.40228271484375
    10. ' ["' → logprob: -9.15228271484375

Token 215: 'a' (ID: 64)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1050732135772705
    2. 'a' → logprob: -2.1050732135772705
    3. '".' → logprob: -2.2300732135772705
    4. '"..' → logprob: -2.4800732135772705
    5. 'ab' → logprob: -2.7300732135772705
    6. 'abb' → logprob: -2.9800732135772705
    7. '"a' → logprob: -2.9800732135772705
    8. 'c' → logprob: -3.3550732135772705
    9. 'cc' → logprob: -3.7300732135772705
    10. '..' → logprob: -3.7300732135772705

Token 216: '.ac' (ID: 25905)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7317175269126892
    2. 'dd' → logprob: -2.106717586517334
    3. 'd' → logprob: -2.231717586517334
    4. 'ad' → logprob: -2.606717586517334
    5. '..' → logprob: -2.856717586517334
    6. 'add' → logprob: -3.981717586517334
    7. '...' → logprob: -3.981717586517334
    8. '.dd' → logprob: -4.481717586517334
    9. 'b' → logprob: -4.606717586517334
    10. 'bd' → logprob: -4.731717586517334

Token 217: '..' (ID: 485)
  Prédit: '.",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.",' → logprob: -1.0805468559265137
    2. '",' → logprob: -1.3305468559265137
    3. '.' → logprob: -1.4555468559265137
    4. '..' → logprob: -2.8305468559265137
    5. '."' → logprob: -3.4555468559265137
    6. 'c' → logprob: -3.5805468559265137
    7. '"]' → logprob: -4.080546855926514
    8. '"' → logprob: -4.455546855926514
    9. '.","' → logprob: -5.705546855926514
    10. 'e' → logprob: -6.455546855926514

Token 218: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.12073225528001785
    2. '"]' → logprob: -2.245732307434082
    3. '"' → logprob: -5.745732307434082
    4. '"],' → logprob: -6.370732307434082
    5. '.",' → logprob: -7.495732307434082
    6. '.' → logprob: -7.745732307434082
    7. '..' → logprob: -7.745732307434082
    8. '...' → logprob: -8.370732307434082
    9. 'c' → logprob: -8.495732307434082
    10. '","' → logprob: -8.620732307434082

Token 219: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.28813180327415466
    2. ' "' → logprob: -1.413131833076477
    3. '".' → logprob: -6.4131317138671875
    4. ' ' → logprob: -6.5381317138671875
    5. '["' → logprob: -7.4131317138671875
    6. '"d' → logprob: -7.6631317138671875
    7. '"a' → logprob: -7.9131317138671875
    8. '   ' → logprob: -7.9131317138671875
    9. ' ["' → logprob: -8.038131713867188
    10. ' ".' → logprob: -8.038131713867188

Token 220: 'b' (ID: 65)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.6613976955413818
    2. '"' → logprob: -2.286397695541382
    3. 'cc' → logprob: -2.286397695541382
    4. 'b' → logprob: -2.411397695541382
    5. 'a' → logprob: -2.661397695541382
    6. '..' → logprob: -3.036397695541382
    7. 'd' → logprob: -3.036397695541382
    8. 'bb' → logprob: -3.411397695541382
    9. 'dd' → logprob: -3.536397695541382
    10. '".' → logprob: -3.536397695541382

Token 221: 'ba' (ID: 3103)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5757919549942017
    2. '..' → logprob: -1.7007919549942017
    3. 'bcc' → logprob: -2.325791835784912
    4. 'bc' → logprob: -2.950791835784912
    5. '...' → logprob: -3.450791835784912
    6. 'c' → logprob: -4.075791835784912
    7. 'bd' → logprob: -4.575791835784912
    8. 'cc' → logprob: -4.575791835784912
    9. 'bb' → logprob: -4.950791835784912
    10. '.b' → logprob: -5.700791835784912

Token 222: '.cc' (ID: 36329)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '..' → logprob: -0.47476521134376526
    2. 'c' → logprob: -1.5997651815414429
    3. 'a' → logprob: -2.7247653007507324
    4. '...' → logprob: -3.8497653007507324
    5. '"' → logprob: -4.224765300750732
    6. '"..' → logprob: -4.224765300750732
    7. 'cc' → logprob: -4.474765300750732
    8. 'b' → logprob: -4.474765300750732
    9. '".' → logprob: -5.224765300750732
    10. '.' → logprob: -5.349765300750732

Token 223: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.7113783955574036
    2. '"]' → logprob: -0.7113783955574036
    3. '..' → logprob: -4.961378574371338
    4. '"],' → logprob: -5.461378574371338
    5. '.' → logprob: -5.961378574371338
    6. '...' → logprob: -6.586378574371338
    7. '.",' → logprob: -7.211378574371338
    8. '","' → logprob: -7.336378574371338
    9. '"' → logprob: -7.836378574371338
    10. '"]]' → logprob: -8.33637809753418

Token 224: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6608039140701294
    2. ' "' → logprob: -0.7858039140701294
    3. '   ' → logprob: -4.91080379486084
    4. '["' → logprob: -5.53580379486084
    5. ' ["' → logprob: -5.53580379486084
    6. '".' → logprob: -6.16080379486084
    7. ' "..' → logprob: -6.41080379486084
    8. ' ' → logprob: -6.53580379486084
    9. '    ' → logprob: -7.03580379486084
    10. ' ".' → logprob: -7.03580379486084

Token 225: 'a' (ID: 64)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.3943026065826416
    2. 'c' → logprob: -1.7693026065826416
    3. 'b' → logprob: -2.1443026065826416
    4. 'a' → logprob: -2.2693026065826416
    5. 'cc' → logprob: -2.8943026065826416
    6. '".' → logprob: -2.8943026065826416
    7. '"..' → logprob: -2.8943026065826416
    8. '..' → logprob: -3.1443026065826416
    9. 'd' → logprob: -3.7693026065826416
    10. 'bb' → logprob: -4.0193023681640625

Token 226: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -1.1602436304092407
    2. 'a' → logprob: -2.035243511199951
    3. '.cc' → logprob: -2.035243511199951
    4. 'c' → logprob: -2.785243511199951
    5. '...' → logprob: -2.785243511199951
    6. 'ac' → logprob: -2.910243511199951
    7. '.' → logprob: -3.160243511199951
    8. '.c' → logprob: -3.410243511199951
    9. 'cc' → logprob: -3.535243511199951
    10. 'b' → logprob: -3.660243511199951

Token 227: 'a' (ID: 64)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.9676565527915955
    2. 'cc' → logprob: -1.5926566123962402
    3. 'c' → logprob: -1.7176566123962402
    4. 'a' → logprob: -2.4676566123962402
    5. 'ac' → logprob: -3.2176566123962402
    6. '.cc' → logprob: -3.4676566123962402
    7. 'bcc' → logprob: -4.09265661239624
    8. '...' → logprob: -4.34265661239624
    9. 'acc' → logprob: -4.71765661239624
    10. 'b' → logprob: -5.09265661239624

Token 228: 'ab' (ID: 378)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '..' → logprob: -0.026580100879073143
    2. 'cc' → logprob: -4.151580333709717
    3. '"]' → logprob: -6.276580333709717
    4. '"]]' → logprob: -6.276580333709717
    5. '.."' → logprob: -6.651580333709717
    6. 'c' → logprob: -6.776580333709717
    7. '...' → logprob: -7.151580333709717
    8. '.' → logprob: -7.276580333709717
    9. '"],' → logprob: -7.276580333709717
    10. '",' → logprob: -7.401580333709717

Token 229: '",' (ID: 672)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.23896010220050812
    2. '",' → logprob: -1.7389601469039917
    3. '"],' → logprob: -3.738960027694702
    4. '..' → logprob: -5.863960266113281
    5. '"]
' → logprob: -5.988960266113281
    6. '"],
' → logprob: -6.238960266113281
    7. '...' → logprob: -6.488960266113281
    8. '"]]' → logprob: -6.613960266113281
    9. '.' → logprob: -7.113960266113281
    10. ']' → logprob: -7.363960266113281

Token 230: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3236120939254761
    2. ' "' → logprob: -1.323612093925476
    3. '"s' → logprob: -5.948612213134766
    4. '   ' → logprob: -6.198612213134766
    5. ']' → logprob: -6.948612213134766
    6. '"a' → logprob: -7.073612213134766
    7. '"d' → logprob: -7.198612213134766
    8. ' ' → logprob: -7.573612213134766
    9. '"...' → logprob: -8.073612213134766
    10. '...' → logprob: -8.073612213134766

Token 231: 'a' (ID: 64)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0595266819000244
    2. 'b' → logprob: -1.5595266819000244
    3. 'a' → logprob: -2.1845266819000244
    4. 'c' → logprob: -2.3095266819000244
    5. 'cc' → logprob: -3.1845266819000244
    6. '"..' → logprob: -3.8095266819000244
    7. 'bb' → logprob: -3.9345266819000244
    8. 'd' → logprob: -4.184526443481445
    9. 'bcc' → logprob: -4.184526443481445
    10. 'ab' → logprob: -4.434526443481445

Token 232: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.04608035832643509
    2. '...' → logprob: -3.7960803508758545
    3. 'a' → logprob: -4.921080589294434
    4. '.bb' → logprob: -5.546080589294434
    5. 'b' → logprob: -6.046080589294434
    6. 'bb' → logprob: -6.546080589294434
    7. '.' → logprob: -6.671080589294434
    8. '....' → logprob: -7.046080589294434
    9. '.cc' → logprob: -7.171080589294434
    10. 'ab' → logprob: -7.546080589294434

Token 233: 'b' (ID: 65)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '..' → logprob: -0.3419187664985657
    2. 'a' → logprob: -1.966918706893921
    3. 'ac' → logprob: -3.341918706893921
    4. 'bcc' → logprob: -4.2169189453125
    5. 'abb' → logprob: -4.3419189453125
    6. 'ab' → logprob: -4.3419189453125
    7. '.a' → logprob: -4.5919189453125
    8. 'cc' → logprob: -4.8419189453125
    9. '.cc' → logprob: -4.8419189453125
    10. 'abc' → logprob: -4.9669189453125

Token 234: '.b' (ID: 1292)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6414568424224854
    2. '..' → logprob: -1.3914568424224854
    3. 'c' → logprob: -2.5164568424224854
    4. 'cc' → logprob: -2.7664568424224854
    5. 'bc' → logprob: -3.6414568424224854
    6. 'bcc' → logprob: -3.7664568424224854
    7. 'bd' → logprob: -5.516456604003906
    8. '...' → logprob: -5.641456604003906
    9. '.cc' → logprob: -5.641456604003906
    10. '.' → logprob: -5.891456604003906

Token 235: '",' (ID: 672)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.03575870022177696
    2. '",' → logprob: -3.6607587337493896
    3. '"],' → logprob: -5.0357584953308105
    4. '"]
' → logprob: -7.1607584953308105
    5. ']' → logprob: -7.7857584953308105
    6. '.' → logprob: -7.7857584953308105
    7. '"],
' → logprob: -7.9107584953308105
    8. '"' → logprob: -8.410758972167969
    9. '..' → logprob: -8.660758972167969
    10. '...' → logprob: -8.785758972167969

Token 236: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.17859730124473572
    2. ' "' → logprob: -2.1785972118377686
    3. '   ' → logprob: -3.9285972118377686
    4. '"a' → logprob: -4.303597450256348
    5. ']' → logprob: -4.678597450256348
    6. ' ' → logprob: -6.803597450256348
    7. '"d' → logprob: -7.053597450256348
    8. '"...' → logprob: -7.428597450256348
    9. '"s' → logprob: -7.553597450256348
    10. '...' → logprob: -7.553597450256348

Token 237: 'a' (ID: 64)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.10787010192871094
    2. '.' → logprob: -2.482870101928711
    3. 'a' → logprob: -5.607870101928711
    4. '...' → logprob: -5.607870101928711
    5. '".' → logprob: -5.607870101928711
    6. '.a' → logprob: -7.107870101928711
    7. ''.' → logprob: -7.232870101928711
    8. '"' → logprob: -7.357870101928711
    9. '"..' → logprob: -7.357870101928711
    10. '.b' → logprob: -7.607870101928711

Token 238: 'abaa' (ID: 180726)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '..' → logprob: -0.5686522126197815
    2. 'a' → logprob: -1.4436521530151367
    3. '...' → logprob: -3.0686521530151367
    4. '.cc' → logprob: -3.5686521530151367
    5. 'ab' → logprob: -4.193652153015137
    6. 'cc' → logprob: -4.193652153015137
    7. '.bb' → logprob: -4.318652153015137
    8. 'b' → logprob: -4.568652153015137
    9. 'ac' → logprob: -4.693652153015137
    10. 'abb' → logprob: -4.818652153015137

Token 239: '"],
' (ID: 15666)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.0252825990319252
    2. '",' → logprob: -4.400282382965088
    3. '.' → logprob: -4.900282382965088
    4. '"],' → logprob: -6.025282382965088
    5. '"]]' → logprob: -7.400282382965088
    6. '"' → logprob: -7.900282382965088
    7. '...' → logprob: -8.150282859802246
    8. '."' → logprob: -8.275282859802246
    9. '"]
' → logprob: -8.275282859802246
    10. ']' → logprob: -8.400282859802246

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05506225675344467
    2. ']' → logprob: -2.9300622940063477
    3. '"]' → logprob: -9.680062294006348
    4. '	' → logprob: -10.430062294006348
    5. '       ' → logprob: -10.555062294006348
    6. '["' → logprob: -11.305062294006348
    7. ' ]' → logprob: -11.680062294006348
    8. '"' → logprob: -12.055062294006348
    9. '  ' → logprob: -12.055062294006348
    10. '...' → logprob: -12.055062294006348

Token 241: ' ["' (ID: 9129)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03145075961947441
    2. '["' (adapté à ' ["') → logprob: -3.6564507484436035
    3. ']' → logprob: -5.6564507484436035
    4. '[' → logprob: -6.9064507484436035
    5. '       ' → logprob: -8.781451225280762
    6. ' ' → logprob: -9.031451225280762
    7. ' ["' → logprob: -9.031451225280762
    8. '[
' → logprob: -9.281451225280762
    9. '  ' → logprob: -9.531451225280762
    10. '    ' → logprob: -10.781451225280762

Token 242: 'aba' (ID: 4216)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1713179349899292
    2. 'a' → logprob: -1.2963179349899292
    3. 'ab' → logprob: -2.4213180541992188
    4. '"a' → logprob: -2.5463180541992188
    5. '".' → logprob: -2.7963180541992188
    6. '"..' → logprob: -3.1713180541992188
    7. '..' → logprob: -4.046318054199219
    8. 'abb' → logprob: -4.046318054199219
    9. 'cc' → logprob: -4.546318054199219
    10. '...' → logprob: -4.671318054199219

Token 243: '....' (ID: 2358)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0944783687591553
    2. 'cc' → logprob: -1.2194783687591553
    3. '",' → logprob: -1.2194783687591553
    4. 'a' → logprob: -4.594478607177734
    5. 'b' → logprob: -4.594478607177734
    6. 'cbc' → logprob: -4.844478607177734
    7. 'bc' → logprob: -4.969478607177734
    8. 'ac' → logprob: -5.094478607177734
    9. 'bcc' → logprob: -5.219478607177734
    10. 'cb' → logprob: -5.844478607177734

Token 244: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.2324294000864029
    2. '"]' → logprob: -1.6074293851852417
    3. '"' → logprob: -5.982429504394531
    4. '"],' → logprob: -6.357429504394531
    5. '...' → logprob: -6.857429504394531
    6. ']' → logprob: -7.857429504394531
    7. '","' → logprob: -8.607429504394531
    8. '.' → logprob: -8.857429504394531
    9. '"]]' → logprob: -8.857429504394531
    10. 'a' → logprob: -8.982429504394531

Token 245: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.24643155932426453
    2. ' "' → logprob: -2.121431589126587
    3. '".' → logprob: -2.996431589126587
    4. '"a' → logprob: -3.496431589126587
    5. ' ".' → logprob: -4.371431350708008
    6. '"..' → logprob: -6.496431350708008
    7. '"...' → logprob: -7.121431350708008
    8. ' "..' → logprob: -7.246431350708008
    9. '"d' → logprob: -7.496431350708008
    10. ' ' → logprob: -7.621431350708008

Token 246: 'aba' (ID: 4216)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8812758922576904
    2. '".' → logprob: -1.8812758922576904
    3. 'a' → logprob: -2.0062758922576904
    4. '"a' → logprob: -2.0062758922576904
    5. '"..' → logprob: -3.0062758922576904
    6. 'ab' → logprob: -3.1312758922576904
    7. 'abb' → logprob: -4.0062761306762695
    8. '"...' → logprob: -4.2562761306762695
    9. 'b' → logprob: -4.8812761306762695
    10. '...' → logprob: -5.8812761306762695

Token 247: '....' (ID: 2358)
  Prédit: '....'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '....' → logprob: -0.3186107575893402
    2. '.....' → logprob: -1.5686107873916626
    3. '...' → logprob: -2.943610668182373
    4. '..' → logprob: -5.193610668182373
    5. '......' → logprob: -5.568610668182373
    6. 'a' → logprob: -7.193610668182373
    7. '.' → logprob: -7.818610668182373
    8. 'b' → logprob: -8.318611145019531
    9. 'aaaa' → logprob: -8.693611145019531
    10. '.......' → logprob: -8.693611145019531

Token 248: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.030639687553048134
    2. '"]' → logprob: -3.5306396484375
    3. '"' → logprob: -8.0306396484375
    4. '...' → logprob: -8.2806396484375
    5. '...",' → logprob: -9.2806396484375
    6. ' ",' → logprob: -10.2806396484375
    7. '.' → logprob: -10.4056396484375
    8. '"],' → logprob: -10.5306396484375
    9. '.",' → logprob: -10.5306396484375
    10. '..' → logprob: -11.0306396484375

Token 249: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.527152955532074
    2. ' "' → logprob: -0.902152955532074
    3. '".' → logprob: -6.652153015136719
    4. ' ".' → logprob: -7.277153015136719
    5. ' ' → logprob: -7.527153015136719
    6. '   ' → logprob: -7.652153015136719
    7. '    ' → logprob: -8.527153015136719
    8. '"...' → logprob: -9.277153015136719
    9. '...' → logprob: -9.277153015136719
    10. '"a' → logprob: -9.277153015136719

Token 250: 'bab' (ID: 86485)
  Prédit: 'aba'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aba' → logprob: -0.48680001497268677
    2. '"' → logprob: -1.611799955368042
    3. 'ab' → logprob: -2.986799955368042
    4. 'a' → logprob: -3.611799955368042
    5. '".' → logprob: -3.861799955368042
    6. '...' → logprob: -3.986799955368042
    7. '....' → logprob: -4.861800193786621
    8. '.' → logprob: -4.986800193786621
    9. 'abaab' → logprob: -4.986800193786621
    10. 'abb' → logprob: -5.236800193786621

Token 251: '....' (ID: 2358)
  Prédit: '....'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '....' → logprob: -0.004691306967288256
    2. '...' → logprob: -6.129691123962402
    3. '.....' → logprob: -6.129691123962402
    4. '..' → logprob: -8.754691123962402
    5. '.' → logprob: -9.254691123962402
    6. '......' → logprob: -10.129691123962402
    7. '..."' → logprob: -11.379691123962402
    8. 'aaaa' → logprob: -12.879691123962402
    9. '...]' → logprob: -12.879691123962402
    10. '.......' → logprob: -13.504691123962402

Token 252: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.1651412695646286
    2. '"]' → logprob: -1.915141224861145
    3. '...' → logprob: -6.1651411056518555
    4. '"' → logprob: -7.2901411056518555
    5. '...",' → logprob: -7.4151411056518555
    6. '....' → logprob: -7.6651411056518555
    7. '"],' → logprob: -7.9151411056518555
    8. '"...' → logprob: -9.040141105651855
    9. '",
' → logprob: -9.165141105651855
    10. '.' → logprob: -9.165141105651855

Token 253: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08424847573041916
    2. ' "' → logprob: -2.5842485427856445
    3. '".' → logprob: -6.0842485427856445
    4. '"a' → logprob: -7.5842485427856445
    5. ' ".' → logprob: -7.7092485427856445
    6. '"...' → logprob: -7.7092485427856445
    7. '"s' → logprob: -7.8342485427856445
    8. ' ' → logprob: -8.084248542785645
    9. '"..' → logprob: -8.084248542785645
    10. '"d' → logprob: -8.834248542785645

Token 254: 'bab' (ID: 86485)
  Prédit: 'bab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bab' → logprob: -0.633855402469635
    2. 'aba' → logprob: -1.0088553428649902
    3. 'ab' → logprob: -3.2588553428649902
    4. 'abab' → logprob: -4.38385534286499
    5. '"' → logprob: -4.63385534286499
    6. '...' → logprob: -4.75885534286499
    7. 'b' → logprob: -4.75885534286499
    8. 'abb' → logprob: -5.50885534286499
    9. '....' → logprob: -5.88385534286499
    10. 'abaab' → logprob: -5.88385534286499

Token 255: '....' (ID: 2358)
  Prédit: '....'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '....' → logprob: -0.0007054025190882385
    2. '...' → logprob: -7.750705242156982
    3. '.....' → logprob: -8.75070571899414
    4. '..' → logprob: -9.62570571899414
    5. '.' → logprob: -10.37570571899414
    6. '[' → logprob: -12.50070571899414
    7. '...]' → logprob: -12.75070571899414
    8. '......' → logprob: -12.87570571899414
    9. '"]' → logprob: -12.87570571899414
    10. ']' → logprob: -13.62570571899414

Token 256: '",' (ID: 672)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.4761201739311218
    2. '",' → logprob: -0.9761201739311218
    3. '   ' → logprob: -6.7261199951171875
    4. ']' → logprob: -7.7261199951171875
    5. '"],' → logprob: -8.726119995117188
    6. '"' → logprob: -9.476119995117188
    7. '",
' → logprob: -10.226119995117188
    8. '","' → logprob: -10.226119995117188
    9. '"]]' → logprob: -10.851119995117188
    10. ',' → logprob: -11.226119995117188

Token 257: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16267256438732147
    2. ' "' → logprob: -1.912672519683838
    3. '   ' → logprob: -6.912672519683838
    4. '".' → logprob: -7.912672519683838
    5. ' ' → logprob: -8.412672996520996
    6. ' ".' → logprob: -8.537672996520996
    7. '"s' → logprob: -9.162672996520996
    8. '"...' → logprob: -9.537672996520996
    9. '"a' → logprob: -9.537672996520996
    10. '"]' → logprob: -10.037672996520996

Token 258: 'a' (ID: 64)
  Prédit: 'bab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bab' → logprob: -0.5191565752029419
    2. '"' → logprob: -1.644156575202942
    3. 'ab' → logprob: -3.0191564559936523
    4. 'aba' → logprob: -3.3941564559936523
    5. 'abab' → logprob: -3.5191564559936523
    6. '....' → logprob: -4.019156455993652
    7. 'b' → logprob: -4.394156455993652
    8. '...' → logprob: -4.394156455993652
    9. 'a' → logprob: -4.644156455993652
    10. '".' → logprob: -5.144156455993652

Token 259: '..' (ID: 485)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.3999738693237305
    2. 'a' → logprob: -1.5249738693237305
    3. 'ba' → logprob: -1.6499738693237305
    4. '...' → logprob: -2.1499738693237305
    5. '......' → logprob: -3.0249738693237305
    6. '....' → logprob: -3.0249738693237305
    7. '..' → logprob: -3.1499738693237305
    8. '.....' → logprob: -3.5249738693237305
    9. 'aa' → logprob: -4.2749738693237305
    10. 'ab' → logprob: -4.6499738693237305

Token 260: 'b' (ID: 65)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.8469001054763794
    2. 'a' → logprob: -1.0969001054763794
    3. '....' → logprob: -2.34689998626709
    4. '..' → logprob: -2.84689998626709
    5. 'b' → logprob: -3.22189998626709
    6. '.....' → logprob: -3.59689998626709
    7. 'ba' → logprob: -5.22189998626709
    8. 'aa' → logprob: -5.72189998626709
    9. '......' → logprob: -6.09689998626709
    10. 'ab' → logprob: -6.84689998626709

Token 261: 'baa' (ID: 85636)
  Prédit: '....'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '....' → logprob: -0.0043951054103672504
    2. '.....' → logprob: -5.879395008087158
    3. '...' → logprob: -6.879395008087158
    4. '..' → logprob: -7.879395008087158
    5. '.' → logprob: -10.129395484924316
    6. '......' → logprob: -10.504395484924316
    7. 'b' → logprob: -10.504395484924316
    8. 'a' → logprob: -11.129395484924316
    9. 'aaaa' → logprob: -11.379395484924316
    10. '.b' → logprob: -11.879395484924316

Token 262: '",' (ID: 672)
  Prédit: '....'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '....' → logprob: -0.739011287689209
    2. '",' → logprob: -1.114011287689209
    3. '...' → logprob: -2.614011287689209
    4. '"]' → logprob: -2.864011287689209
    5. '..' → logprob: -3.489011287689209
    6. '...",' → logprob: -3.739011287689209
    7. '"' → logprob: -6.239011287689209
    8. '.....' → logprob: -6.364011287689209
    9. '"],' → logprob: -6.614011287689209
    10. '.' → logprob: -6.739011287689209

Token 263: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.23988504707813263
    2. ' "' → logprob: -1.8648850917816162
    3. '"a' → logprob: -3.114885091781616
    4. '   ' → logprob: -4.614884853363037
    5. ' ' → logprob: -6.864884853363037
    6. '".' → logprob: -7.364884853363037
    7. '    ' → logprob: -7.864884853363037
    8. '"s' → logprob: -7.989884853363037
    9. '"...' → logprob: -8.614885330200195
    10. ' ".' → logprob: -8.614885330200195

Token 264: 'a' (ID: 64)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5847380757331848
    2. '"a' → logprob: -1.95973801612854
    3. 'a' → logprob: -2.20973801612854
    4. 'bab' → logprob: -2.33473801612854
    5. '".' → logprob: -3.33473801612854
    6. '"..' → logprob: -4.084738254547119
    7. 'ab' → logprob: -4.709738254547119
    8. 'b' → logprob: -4.709738254547119
    9. ''a' → logprob: -5.459738254547119
    10. ''b' → logprob: -5.459738254547119

Token 265: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.16243577003479004
    2. 'a' → logprob: -2.03743577003479
    3. 'ab' → logprob: -5.162435531616211
    4. '...' → logprob: -5.162435531616211
    5. 'b' → logprob: -5.537435531616211
    6. '....' → logprob: -6.537435531616211
    7. 'abb' → logprob: -6.787435531616211
    8. '.....' → logprob: -8.037435531616211
    9. 'bab' → logprob: -8.912435531616211
    10. '.a' → logprob: -9.162435531616211

Token 266: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.24468156695365906
    2. 'bb' → logprob: -2.2446815967559814
    3. 'a' → logprob: -2.8696815967559814
    4. '..' → logprob: -3.7446815967559814
    5. 'ab' → logprob: -4.369681358337402
    6. 'abb' → logprob: -4.744681358337402
    7. 'abba' → logprob: -5.369681358337402
    8. '.bb' → logprob: -6.494681358337402
    9. '...' → logprob: -6.869681358337402
    10. '.b' → logprob: -7.869681358337402

Token 267: 'abb' (ID: 13538)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6028623580932617
    2. 'ab' → logprob: -1.9778623580932617
    3. 'b' → logprob: -2.7278623580932617
    4. 'baa' → logprob: -2.7278623580932617
    5. 'abaa' → logprob: -2.8528623580932617
    6. 'aa' → logprob: -2.9778623580932617
    7. 'abba' → logprob: -4.102862358093262
    8. '..' → logprob: -4.227862358093262
    9. 'abb' → logprob: -4.352862358093262
    10. '...' → logprob: -4.727862358093262

Token 268: '",' (ID: 672)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.14480999112129211
    2. '",' → logprob: -2.6448099613189697
    3. '"],' → logprob: -2.7698099613189697
    4. '   ' → logprob: -7.394810199737549
    5. ']' → logprob: -8.01980972290039
    6. '"],
' → logprob: -9.64480972290039
    7. '],' → logprob: -10.64480972290039
    8. '"' → logprob: -10.76980972290039
    9. '","' → logprob: -11.14480972290039
    10. '",
' → logprob: -11.64480972290039

Token 269: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1926933228969574
    2. ' "' → logprob: -2.3176932334899902
    3. '"a' → logprob: -2.6926932334899902
    4. '   ' → logprob: -5.19269323348999
    5. '"s' → logprob: -6.56769323348999
    6. ']' → logprob: -7.19269323348999
    7. ' ' → logprob: -7.44269323348999
    8. '  ' → logprob: -9.567693710327148
    9. '    ' → logprob: -9.567693710327148
    10. 'a' → logprob: -9.942693710327148

Token 270: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5571848154067993
    2. 'ab' → logprob: -1.9321848154067993
    3. '..' → logprob: -2.3071846961975098
    4. 'bab' → logprob: -2.9321846961975098
    5. 'aa' → logprob: -3.1821846961975098
    6. 'abb' → logprob: -3.5571846961975098
    7. 'aba' → logprob: -4.30718469619751
    8. '...' → logprob: -4.55718469619751
    9. 'b' → logprob: -4.93218469619751
    10. 'bb' → logprob: -5.18218469619751

Token 271: 'ab' (ID: 378)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.17274808883667
    2. 'ab' → logprob: -1.54774808883667
    3. 'a' → logprob: -1.67274808883667
    4. 'bab' → logprob: -2.67274808883667
    5. '..' → logprob: -3.04774808883667
    6. 'bb' → logprob: -3.17274808883667
    7. 'ba' → logprob: -3.79774808883667
    8. '...' → logprob: -4.04774808883667
    9. 'abaa' → logprob: -4.17274808883667
    10. 'abb' → logprob: -4.29774808883667

Token 272: 'baa' (ID: 85636)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9900997281074524
    2. 'aa' → logprob: -1.1150996685028076
    3. 'aaa' → logprob: -1.8650996685028076
    4. '...' → logprob: -2.7400996685028076
    5. '....' → logprob: -3.6150996685028076
    6. 'baa' → logprob: -3.9900996685028076
    7. 'aba' → logprob: -4.740099906921387
    8. '.' → logprob: -5.115099906921387
    9. '..' → logprob: -5.240099906921387
    10. 'b' → logprob: -5.865099906921387

Token 273: '"]
' (ID: 14510)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.1488855928182602
    2. '",' → logprob: -2.023885488510132
    3. '"],' → logprob: -5.273885726928711
    4. '...' → logprob: -8.023885726928711
    5. '.' → logprob: -8.148885726928711
    6. '"]]' → logprob: -9.023885726928711
    7. ']' → logprob: -9.148885726928711
    8. '"' → logprob: -9.773885726928711
    9. '","' → logprob: -10.273885726928711
    10. '']' → logprob: -10.648885726928711

Token 274: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004091935232281685
    2. ',' → logprob: -5.879091739654541
    3. '   ' → logprob: -6.754091739654541
    4. ',
' → logprob: -9.3790922164917
    5. ' ]' → logprob: -11.1290922164917
    6. '],' → logprob: -11.6290922164917
    7. ']
' → logprob: -12.6290922164917
    8. '"]' → logprob: -13.0040922164917
    9. '}' → logprob: -13.7540922164917
    10. '<|end|>' → logprob: -13.8790922164917

Token 275: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19196176528930664
    2. '#' → logprob: -2.9419617652893066
    3. '.' → logprob: -3.0669617652893066
    4. ' ' → logprob: -3.5669617652893066
    5. ']' → logprob: -4.316961765289307
    6. 'n' → logprob: -4.566961765289307
    7. '<|end|>' → logprob: -5.566961765289307
    8. ',' → logprob: -5.816961765289307
    9. '_' → logprob: -5.816961765289307
    10. 's' → logprob: -6.191961765289307

Token 276: ' Premier' (ID: 27686)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8047120571136475
    2. 'for' → logprob: -0.8047120571136475
    3. 'def' → logprob: -2.6797120571136475
    4. 'result' → logprob: -3.8047120571136475
    5. 'if' → logprob: -5.554712295532227
    6. 'i' → logprob: -6.054712295532227
    7. 'n' → logprob: -6.304712295532227
    8. 'print' → logprob: -7.054712295532227
    9. 'r' → logprob: -7.304712295532227
    10. 's' → logprob: -7.429712295532227

Token 277: ' test' (ID: 1746)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6253688335418701
    2. '_' → logprob: -2.00036883354187
    3. 'i' → logprob: -2.12536883354187
    4. '=' → logprob: -3.12536883354187
    5. '#' → logprob: -3.75036883354187
    6. ' ' → logprob: -3.75036883354187
    7. 'n' → logprob: -3.87536883354187
    8. 's' → logprob: -3.87536883354187
    9. ' =' → logprob: -4.000369071960449
    10. ' for' → logprob: -4.500369071960449

Token 278: ' condition' (ID: 7060)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07601618766784668
    2. 'i' → logprob: -3.3260161876678467
    3. 'n' → logprob: -4.701016426086426
    4. '[' → logprob: -4.701016426086426
    5. 'for' → logprob: -5.076016426086426
    6. ':' → logprob: -5.576016426086426
    7. '#' → logprob: -5.701016426086426
    8. '=' → logprob: -6.201016426086426
    9. ' if' → logprob: -6.826016426086426
    10. 's' → logprob: -7.201016426086426

Token 279: 'nel' (ID: 10085)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0068187350407242775
    2. 'e' → logprob: -5.256818771362305
    3. ' if' → logprob: -6.506818771362305
    4. 's' → logprob: -10.381818771362305
    5. ' =' → logprob: -10.756818771362305
    6. '=' → logprob: -11.256818771362305
    7. 'al' → logprob: -12.006818771362305
    8. 'n' → logprob: -12.131818771362305
    9. '_' → logprob: -12.256818771362305
    10. '_if' → logprob: -13.756818771362305

Token 280: ' pour' (ID: 1930)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0020832857117056847
    2. 'i' → logprob: -6.3770833015441895
    3. ' if' → logprob: -8.127082824707031
    4. ':' → logprob: -10.002082824707031
    5. 'n' → logprob: -11.002082824707031
    6. '
' → logprob: -11.002082824707031
    7. ':
' → logprob: -13.127082824707031
    8. 'x' → logprob: -13.252082824707031
    9. '```' → logprob: -14.377082824707031
    10. '#' → logprob: -14.627082824707031

Token 281: ' vérifier' (ID: 93671)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.15605556964874268
    2. 'n' → logprob: -2.031055450439453
    3. 'if' → logprob: -4.906055450439453
    4. ' vérifier' → logprob: -5.656055450439453
    5. ' if' → logprob: -6.531055450439453
    6. 's' → logprob: -8.281055450439453
    7. 'i' → logprob: -8.531055450439453
    8. 'v' → logprob: -8.906055450439453
    9. 'val' → logprob: -9.531055450439453
    10. ' i' → logprob: -10.281055450439453

Token 282: ' si' (ID: 1784)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.008389982394874096
    2. 'n' → logprob: -5.383389949798584
    3. ' if' → logprob: -5.883389949798584
    4. 'if' → logprob: -7.008389949798584
    5. ' ' → logprob: -9.883390426635742
    6. ' ' → logprob: -11.508390426635742
    7. ' len' → logprob: -13.008390426635742
    8. ' si' → logprob: -13.133390426635742
    9. ' la' → logprob: -13.383390426635742
    10. '  ' → logprob: -13.508390426635742

Token 283: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.043024998158216476
    2. 'n' → logprob: -3.168025016784668
    3. ' s' → logprob: -11.668025016784668
    4. ' ' → logprob: -11.668025016784668
    5. ' ' → logprob: -12.043025016784668
    6. 's' → logprob: -13.293025016784668
    7. '(n' → logprob: -14.418025016784668
    8. '	n' → logprob: -15.168025016784668
    9. ' (' → logprob: -16.16802406311035
    10. ' not' → logprob: -16.29302406311035

Token 284: ' variable' (ID: 11076)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5761422514915466
    2. ' n' → logprob: -0.8261422514915466
    3. 's' → logprob: -9.076142311096191
    4. ' ' → logprob: -10.826142311096191
    5. ' s' → logprob: -11.201142311096191
    6. ' ' → logprob: -11.326142311096191
    7. ' condition' → logprob: -11.451142311096191
    8. 'condition' → logprob: -12.201142311096191
    9. '(n' → logprob: -12.701142311096191
    10. ' valeur' → logprob: -12.951142311096191

Token 285: ' '' (ID: 461)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.28162306547164917
    2. 'n' → logprob: -1.406623125076294
    3. ' s' → logprob: -8.406622886657715
    4. 's' → logprob: -8.531622886657715
    5. ' ' → logprob: -10.656622886657715
    6. ' ' → logprob: -11.156622886657715
    7. ' '' → logprob: -12.906622886657715
    8. '_n' → logprob: -13.156622886657715
    9. '	n' → logprob: -13.281622886657715
    10. '(n' → logprob: -13.531622886657715

Token 286: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08029354363679886
    2. ' n' → logprob: -2.580293655395508
    3. 's' → logprob: -6.705293655395508
    4. ' s' → logprob: -8.705293655395508
    5. ' ' → logprob: -12.955293655395508
    6. '(n' → logprob: -13.080293655395508
    7. ' ' → logprob: -13.330293655395508
    8. '	n' → logprob: -13.830293655395508
    9. '`' → logprob: -14.580293655395508
    10. 'name' → logprob: -15.080293655395508

Token 287: ''' (ID: 6)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04382376745343208
    2. '==' → logprob: -3.918823719024658
    3. ' <=' → logprob: -4.418823719024658
    4. ' >=' → logprob: -5.793823719024658
    5. ' <' → logprob: -5.918823719024658
    6. ')' → logprob: -6.418823719024658
    7. ' )' → logprob: -6.918823719024658
    8. ' ' → logprob: -7.043823719024658
    9. ' >' → logprob: -7.168823719024658
    10. '<=' → logprob: -7.668823719024658

Token 288: ' contient' (ID: 89067)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1274738609790802
    2. '==' → logprob: -2.377473831176758
    3. ' <=' → logprob: -4.252473831176758
    4. ' >=' → logprob: -5.377473831176758
    5. ' <' → logprob: -5.752473831176758
    6. '<=' → logprob: -6.002473831176758
    7. ' in' → logprob: -6.752473831176758
    8. '>=' → logprob: -7.627473831176758
    9. ' >' → logprob: -8.502473831176758
    10. ' ' → logprob: -8.502473831176758

Token 289: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8032739758491516
    2. ' ==' → logprob: -1.5532739162445068
    3. '1' → logprob: -2.303273916244507
    4. ' n' → logprob: -2.678273916244507
    5. ' <=' → logprob: -3.178273916244507
    6. '==' → logprob: -3.303273916244507
    7. '0' → logprob: -3.553273916244507
    8. ' un' → logprob: -4.303274154663086
    9. ' in' → logprob: -4.678274154663086
    10. ' a' → logprob: -5.053274154663086

Token 290: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5424070954322815
    2. '0' → logprob: -1.5424070358276367
    3. '1' → logprob: -1.9174070358276367
    4. '4' → logprob: -3.5424070358276367
    5. '3' → logprob: -4.542407035827637
    6. '2' → logprob: -5.167407035827637
    7. 's' → logprob: -6.042407035827637
    8. '=' → logprob: -6.417407035827637
    9. ' in' → logprob: -6.792407035827637
    10. '  ' → logprob: -7.167407035827637

Token 291: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5876309871673584
    2. ' ' → logprob: -1.3376309871673584
    3. '1' → logprob: -1.9626309871673584
    4. '4' → logprob: -3.4626309871673584
    5. '3' → logprob: -5.2126312255859375
    6. '2' → logprob: -5.7126312255859375
    7. '5' → logprob: -8.462631225585938
    8. ' ==' → logprob: -8.587631225585938
    9. ' n' → logprob: -8.712631225585938
    10. '7' → logprob: -8.962631225585938

Token 292: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33327117562294006
    2. ' ' → logprob: -1.7082711458206177
    3. '1' → logprob: -2.7082712650299072
    4. '3' → logprob: -3.4582712650299072
    5. '4' → logprob: -5.958271026611328
    6. '2' → logprob: -6.708271026611328
    7. '5' → logprob: -9.208271026611328
    8. '6' → logprob: -10.083271026611328
    9. '  ' → logprob: -10.083271026611328
    10. '7' → logprob: -10.458271026611328

Token 293: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0217266995459795
    2. 'if' → logprob: -4.021726608276367
    3. ':
' → logprob: -6.396726608276367
    4. ' if' → logprob: -6.771726608276367
    5. ' :' → logprob: -7.896726608276367
    6. '[' → logprob: -8.646726608276367
    7. ' and' → logprob: -9.521726608276367
    8. ',' → logprob: -10.771726608276367
    9. '.' → logprob: -10.771726608276367
    10. '<|end|>' → logprob: -11.146726608276367

Token 294: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002501343551557511
    2. 'i' → logprob: -8.500249862670898
    3. ' if' → logprob: -10.000249862670898
    4. '```' → logprob: -14.375249862670898
    5. ':' → logprob: -14.750249862670898
    6. 'If' → logprob: -16.1252498626709
    7. '
' → logprob: -16.5002498626709
    8. 'n' → logprob: -16.8752498626709
    9. 'ifs' → logprob: -17.5002498626709
    10. '#' → logprob: -17.8752498626709

Token 295: ' Le' (ID: 2018)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002549024939071387
    2. ' if' → logprob: -8.75025463104248
    3. 'i' → logprob: -9.25025463104248
    4. '
' → logprob: -16.125255584716797
    5. ' i' → logprob: -16.125255584716797
    6. '#' → logprob: -16.625255584716797
    7. ' 
' → logprob: -17.000255584716797
    8. '```' → logprob: -17.125255584716797
    9. 'n' → logprob: -17.500255584716797
    10. ' ' → logprob: -19.250255584716797

Token 296: ' double' (ID: 3503)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5594319701194763
    2. 'if' → logprob: -1.184432029724121
    3. ' ' → logprob: -2.184432029724121
    4. 'n' → logprob: -6.059432029724121
    5. 'i' → logprob: -6.309432029724121
    6. ' i' → logprob: -6.559432029724121
    7. ' n' → logprob: -6.684432029724121
    8. ' ' → logprob: -6.684432029724121
    9. ' :' → logprob: -7.309432029724121
    10. ':' → logprob: -7.434432029724121

Token 297: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005381268449127674
    2. ' =' → logprob: -6.005381107330322
    3. '==' → logprob: -6.630381107330322
    4. ' ==' → logprob: -7.130381107330322
    5. ' equals' → logprob: -8.25538158416748
    6. 'equals' → logprob: -8.63038158416748
    7. ' equal' → logprob: -9.38038158416748
    8. 'equal' → logprob: -9.63038158416748
    9. ' égal' → logprob: -9.75538158416748
    10. 'if' → logprob: -10.00538158416748

Token 298: ' vér' (ID: 42524)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.597591757774353
    2. '==' → logprob: -0.847591757774353
    3. ' (' → logprob: -4.097591876983643
    4. '(' → logprob: -6.222591876983643
    5. ' ' → logprob: -6.472591876983643
    6. 's' → logprob: -8.097591400146484
    7. ' `' → logprob: -8.597591400146484
    8. '=' → logprob: -9.097591400146484
    9. ')' → logprob: -9.472591400146484
    10. ')==' → logprob: -9.472591400146484

Token 299: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.009403170086443424
    2. 'if' → logprob: -4.759403228759766
    3. 'al' → logprob: -8.259403228759766
    4. 'ifi' → logprob: -8.759403228759766
    5. 'ale' → logprob: -9.134403228759766
    6. 'a' → logprob: -9.134403228759766
    7. 'ifié' → logprob: -10.634403228759766
    8. 'i' → logprob: -10.634403228759766
    9. '==' → logprob: -10.759403228759766
    10. 'ifiant' → logprob: -10.759403228759766

Token 300: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.34552720189094543
    2. ' si' → logprob: -1.470527172088623
    3. ' ' → logprob: -3.970527172088623
    4. ' if' → logprob: -4.720527172088623
    5. ' la' → logprob: -4.970527172088623
    6. ' ' → logprob: -4.970527172088623
    7. ' n' → logprob: -5.095527172088623
    8. 'si' → logprob: -5.220527172088623
    9. 'l' → logprob: -5.845527172088623
    10. 'n' → logprob: -6.595527172088623

Token 301: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2633526027202606
    2. 'e' → logprob: -1.763352632522583
    3. '=' → logprob: -3.263352632522583
    4. 'a' → logprob: -4.138352394104004
    5. '==' → logprob: -6.388352394104004
    6. 's' → logprob: -7.138352394104004
    7. 'u' → logprob: -7.513352394104004
    8. ''espace' → logprob: -8.013352394104004
    9. ' ==' → logprob: -8.263352394104004
    10. 'es' → logprob: -8.763352394104004

Token 302: 'égalité' (ID: 165530)
  Prédit: 'égalité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égalité' → logprob: -0.6612743735313416
    2. 'e' → logprob: -1.5362744331359863
    3. ' égal' → logprob: -2.5362744331359863
    4. ' n' → logprob: -2.9112744331359863
    5. 'n' → logprob: -3.2862744331359863
    6. ''' → logprob: -3.2862744331359863
    7. 'egal' → logprob: -3.6612744331359863
    8. '=' → logprob: -4.536274433135986
    9. 'a' → logprob: -5.036274433135986
    10. 'eg' → logprob: -5.161274433135986

Token 303: ' entre' (ID: 3853)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14365945756435394
    2. 'if' → logprob: -3.2686593532562256
    3. 'n' → logprob: -3.8936593532562256
    4. ' if' → logprob: -4.018659591674805
    5. ' :' → logprob: -4.393659591674805
    6. ' (' → logprob: -4.518659591674805
    7. '.' → logprob: -4.893659591674805
    8. ',' → logprob: -5.518659591674805
    9. ' ' → logprob: -5.518659591674805
    10. ' n' → logprob: -5.518659591674805

Token 304: ' deux' (ID: 10301)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20151060819625854
    2. 'n' → logprob: -1.7015106678009033
    3. ' ' → logprob: -9.701510429382324
    4. ' ' → logprob: -10.451510429382324
    5. '	n' → logprob: -13.451510429382324
    6. '(n' → logprob: -14.076510429382324
    7. ' deux' → logprob: -14.201510429382324
    8. '2' → logprob: -14.451510429382324
    9. ' la' → logprob: -14.451510429382324
    10. ' ' → logprob: -14.576510429382324

Token 305: ' valeurs' (ID: 73668)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.45215579867362976
    2. ' n' → logprob: -1.7021558284759521
    3. '=' → logprob: -3.202155828475952
    4. ' ' → logprob: -3.202155828475952
    5. ' =' → logprob: -3.202155828475952
    6. 'n' → logprob: -3.327155828475952
    7. ' espace' → logprob: -5.452155590057373
    8. ' nombres' → logprob: -5.452155590057373
    9. ' ' → logprob: -5.577155590057373
    10. ' ==' → logprob: -6.202155590057373

Token 306: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05832314118742943
    2. ' :' → logprob: -3.3083231449127197
    3. 'if' → logprob: -5.308322906494141
    4. ' ' → logprob: -5.808322906494141
    5. ' and' → logprob: -5.808322906494141
    6. ' if' → logprob: -5.808322906494141
    7. ',' → logprob: -6.683322906494141
    8. ':
' → logprob: -6.808322906494141
    9. 'n' → logprob: -7.183322906494141
    10. '   ' → logprob: -7.683322906494141

Token 307: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.363617962459102e-05
    2. ' if' → logprob: -9.500083923339844
    3. 'i' → logprob: -11.750083923339844
    4. '```' → logprob: -14.500083923339844
    5. ':' → logprob: -15.500083923339844
    6. 'n' → logprob: -15.875083923339844
    7. 'If' → logprob: -17.875083923339844
    8. '2' → logprob: -19.125083923339844
    9. '[' → logprob: -19.125083923339844
    10. ' ' → logprob: -19.250083923339844

Token 308: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0033232688438147306
    2. 'n' → logprob: -5.753323078155518
    3. ' ' → logprob: -9.003323554992676
    4. ' ' → logprob: -10.753323554992676
    5. '	n' → logprob: -14.378323554992676
    6. ' ' → logprob: -15.128323554992676
    7. '(n' → logprob: -16.12832260131836
    8. '_n' → logprob: -16.62832260131836
    9. ' (' → logprob: -16.87832260131836
    10. ')' → logprob: -17.00332260131836

Token 309: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0052849845960736275
    2. '==' → logprob: -5.255284786224365
    3. ' ' → logprob: -10.755285263061523
    4. ' =' → logprob: -11.380285263061523
    5. '=' → logprob: -11.630285263061523
    6. ')' → logprob: -12.505285263061523
    7. ' ' → logprob: -13.130285263061523
    8. '2' → logprob: -14.380285263061523
    9. ' <=' → logprob: -14.380285263061523
    10. ' )' → logprob: -14.505285263061523

Token 310: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023245595395565033
    2. '2' → logprob: -3.7732455730438232
    3. '1' → logprob: -15.898245811462402
    4. '0' → logprob: -17.148244857788086
    5. ' ' → logprob: -17.648244857788086
    6. '  ' → logprob: -18.398244857788086
    7. '<|end|>' → logprob: -19.023244857788086
    8. '```' → logprob: -19.148244857788086
    9. ')' → logprob: -19.273244857788086
    10. ' n' → logprob: -19.398244857788086

Token 311: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020413640595506877
    2. ' ' → logprob: -8.500204086303711
    3. '0' → logprob: -14.375204086303711
    4. '1' → logprob: -17.00020408630371
    5. '3' → logprob: -17.37520408630371
    6. '  ' → logprob: -19.00020408630371
    7. '   ' → logprob: -19.75020408630371
    8. '```' → logprob: -20.00020408630371
    9. '۲' → logprob: -21.68770408630371
    10. '２' → logprob: -21.93770408630371

Token 312: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009644615347497165
    2. ' :' → logprob: -7.125964641571045
    3. ':
' → logprob: -8.750964164733887
    4. ' :
' → logprob: -13.875964164733887
    5. ' and' → logprob: -15.250964164733887
    6. '[' → logprob: -15.375964164733887
    7. ':

' → logprob: -16.500965118408203
    8. '   ' → logprob: -16.625965118408203
    9. ':
' → logprob: -17.000965118408203
    10. '):' → logprob: -17.125965118408203

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43969160318374634
    2. ':' → logprob: -1.0646915435791016
    3. ':
' → logprob: -5.314691543579102
    4. ' :' → logprob: -5.689691543579102
    5. '[' → logprob: -6.689691543579102
    6. '    
' → logprob: -7.564691543579102
    7. 'print' → logprob: -8.689691543579102
    8. ' :
' → logprob: -8.689691543579102
    9. ' ' → logprob: -9.439691543579102
    10. ' print' → logprob: -9.814691543579102

Token 314: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9873285889625549
    2. 'for' → logprob: -0.9873285889625549
    3. ' for' → logprob: -1.8623285293579102
    4. ' print' → logprob: -2.48732852935791
    5. '   ' → logprob: -4.98732852935791
    6. 's' → logprob: -6.23732852935791
    7. 'result' → logprob: -6.73732852935791
    8. ' s' → logprob: -6.98732852935791
    9. '#' (adapté à ' #') → logprob: -7.11232852935791
    10. ' ' → logprob: -7.48732852935791

Token 315: ' Si' (ID: 7832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5349336266517639
    2. 'print' → logprob: -0.9099336266517639
    3. 'result' → logprob: -5.534933567047119
    4. '#' → logprob: -6.409933567047119
    5. 'if' → logprob: -6.534933567047119
    6. ' for' → logprob: -6.909933567047119
    7. 'pass' → logprob: -6.909933567047119
    8. 's' → logprob: -7.034933567047119
    9. 'res' → logprob: -7.784933567047119
    10. 'r' → logprob: -8.784934043884277

Token 316: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6681252121925354
    2. ' s' → logprob: -1.2931251525878906
    3. ' ' → logprob: -2.4181251525878906
    4. ' True' → logprob: -2.7931251525878906
    5. ' len' → logprob: -3.5431251525878906
    6. '   ' → logprob: -5.043125152587891
    7. '    ' → logprob: -5.168125152587891
    8. 's' → logprob: -5.168125152587891
    9. 'n' → logprob: -5.418125152587891
    10. '  ' → logprob: -5.668125152587891

Token 317: ' vaut' (ID: 83004)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006608195602893829
    2. '==' → logprob: -5.256608009338379
    3. ' <=' → logprob: -7.881608009338379
    4. ' ' → logprob: -8.631608009338379
    5. ' <' → logprob: -8.756608009338379
    6. ':' → logprob: -9.131608009338379
    7. ' >=' → logprob: -9.381608009338379
    8. ' =' → logprob: -9.381608009338379
    9. ' >' → logprob: -9.506608009338379
    10. '   ' → logprob: -9.631608009338379

Token 318: ' exactement' (ID: 108701)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25947004556655884
    2. ' True' → logprob: -2.384469985961914
    3. '0' → logprob: -2.634469985961914
    4. ' "' → logprob: -3.759469985961914
    5. '1' → logprob: -4.009469985961914
    6. ' s' → logprob: -4.759469985961914
    7. '"' → logprob: -4.884469985961914
    8. '3' → logprob: -6.384469985961914
    9. 'True' → logprob: -6.634469985961914
    10. '2' → logprob: -6.884469985961914

Token 319: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41636958718299866
    2. '0' → logprob: -1.5413695573806763
    3. '1' → logprob: -2.666369676589966
    4. '2' → logprob: -3.416369676589966
    5. '"' → logprob: -4.916369438171387
    6. '3' → logprob: -5.041369438171387
    7. ' "' → logprob: -5.041369438171387
    8. ' True' → logprob: -6.916369438171387
    9. ' s' → logprob: -7.041369438171387
    10. '"s' → logprob: -7.541369438171387

Token 320: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008123667794279754
    2. ' ' → logprob: -7.625812530517578
    3. '0' → logprob: -8.250812530517578
    4. '1' → logprob: -9.875812530517578
    5. '3' → logprob: -12.125812530517578
    6. '4' → logprob: -13.250812530517578
    7. '   ' → logprob: -13.750812530517578
    8. '  ' → logprob: -13.875812530517578
    9. '"' → logprob: -14.125812530517578
    10. 'n' → logprob: -14.625812530517578

Token 321: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04193985462188721
    2. ':
' → logprob: -3.5419397354125977
    3. ' :' → logprob: -4.791939735412598
    4. ' :
' → logprob: -6.541939735412598
    5. ',' → logprob: -6.791939735412598
    6. 'print' → logprob: -7.666939735412598
    7. '   ' → logprob: -7.791939735412598
    8. ' print' → logprob: -8.416939735412598
    9. 's' → logprob: -10.541939735412598
    10. '.' → logprob: -10.666939735412598

Token 322: ' on' (ID: 402)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.06919952481985092
    2. 'print' → logprob: -3.319199562072754
    3. ' for' → logprob: -3.819199562072754
    4. 'for' → logprob: -5.944199562072754
    5. '   ' → logprob: -6.444199562072754
    6. ' pass' → logprob: -6.569199562072754
    7. ' ' → logprob: -7.069199562072754
    8. ' s' → logprob: -7.194199562072754
    9. '    ' → logprob: -7.944199562072754
    10. ' ' → logprob: -8.694199562072754

Token 323: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.24994046986103058
    2. 'print' → logprob: -1.9999405145645142
    3. '   ' → logprob: -2.7499403953552246
    4. ' affiche' → logprob: -5.124940395355225
    5. ' imprime' → logprob: -5.624940395355225
    6. ' continue' → logprob: -5.624940395355225
    7. 'aff' → logprob: -6.249940395355225
    8. '    ' → logprob: -6.999940395355225
    9. 'for' → logprob: -6.999940395355225
    10. ' ' → logprob: -7.499940395355225

Token 324: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.606524646282196
    2. '(s' → logprob: -1.3565247058868408
    3. '("' → logprob: -2.731524705886841
    4. ' s' → logprob: -3.481524705886841
    5. '(' → logprob: -3.481524705886841
    6. '"' → logprob: -3.606524705886841
    7. '(len' → logprob: -4.356524467468262
    8. 'len' → logprob: -4.481524467468262
    9. '"s' → logprob: -5.606524467468262
    10. ' len' → logprob: -5.606524467468262

Token 325: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16397015750408173
    2. ' s' → logprob: -3.2889702320098877
    3. ' ' → logprob: -3.4139702320098877
    4. '"' → logprob: -4.038969993591309
    5. 'prem' → logprob: -4.038969993591309
    6. 'r' → logprob: -5.538969993591309
    7. 'chaine' → logprob: -5.663969993591309
    8. 'a' → logprob: -5.788969993591309
    9. ' string' → logprob: -5.913969993591309
    10. 'e' → logprob: -5.913969993591309

Token 326: ' entière' (ID: 61583)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.504815399646759
    2. ' s' → logprob: -1.1298153400421143
    3. '"' → logprob: -3.3798153400421143
    4. ' "' → logprob: -4.629815578460693
    5. ' ' → logprob: -4.754815578460693
    6. '(' → logprob: -5.504815578460693
    7. '(s' → logprob: -5.504815578460693
    8. '   ' → logprob: -5.629815578460693
    9. ' n' → logprob: -6.004815578460693
    10. ' de' → logprob: -6.379815578460693

Token 327: ' -' (ID: 533)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2986429035663605
    2. '0' → logprob: -2.173642873764038
    3. '(' → logprob: -2.798642873764038
    4. '1' → logprob: -3.048642873764038
    5. '3' → logprob: -4.548643112182617
    6. '(n' → logprob: -5.298643112182617
    7. '10' → logprob: -5.423643112182617
    8. 'n' → logprob: -5.423643112182617
    9. '   ' → logprob: -5.798643112182617
    10. ' ' → logprob: -5.798643112182617

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5002560615539551
    2. '2' → logprob: -1.625256061553955
    3. ' ' → logprob: -2.625256061553955
    4. '0' → logprob: -3.125256061553955
    5. '3' → logprob: -4.000256061553955
    6. '10' → logprob: -4.125256061553955
    7. ' n' → logprob: -4.625256061553955
    8. '5' → logprob: -5.125256061553955
    9. '4' → logprob: -5.500256061553955
    10. '100' → logprob: -5.500256061553955

Token 329: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1984170824289322
    2. '
' → logprob: -2.3234171867370605
    3. ')' → logprob: -2.9484171867370605
    4. 'print' → logprob: -3.9484171867370605
    5. ')
' → logprob: -5.8234171867370605
    6. ':
' → logprob: -6.4484171867370605
    7. ':' → logprob: -6.4484171867370605
    8. '    
' → logprob: -6.9484171867370605
    9. '       ' → logprob: -7.1984171867370605
    10. '\n' → logprob: -7.4484171867370605

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01286088302731514
    2. ':' → logprob: -5.8878607749938965
    3. '
' → logprob: -5.8878607749938965
    4. 'print' → logprob: -5.8878607749938965
    5. ' print' → logprob: -6.1378607749938965
    6. '       ' → logprob: -7.1378607749938965
    7. '\n' → logprob: -7.5128607749938965
    8. '    
' → logprob: -7.7628607749938965
    9. '    ' → logprob: -9.137861251831055
    10. ' 
' → logprob: -9.262861251831055

Token 331: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1467219889163971
    2. '
' → logprob: -2.5217220783233643
    3. 'print' (adapté à ' print') → logprob: -3.3967220783233643
    4. ' print' → logprob: -3.8967220783233643
    5. '    
' → logprob: -7.271721839904785
    6. '\n' → logprob: -7.521721839904785
    7. ' 
' → logprob: -7.521721839904785
    8. '       ' → logprob: -7.896721839904785
    9. '    ' → logprob: -9.396721839904785
    10. '
' → logprob: -10.521721839904785

Token 332: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.007624018471688032
    2. '(' → logprob: -4.88262414932251
    3. ' (-' → logprob: -11.382623672485352
    4. ' (' → logprob: -13.007623672485352
    5. '(
' → logprob: -13.132623672485352
    6. '-' → logprob: -13.882623672485352
    7. '("' → logprob: -14.632623672485352
    8. '()' → logprob: -15.007623672485352
    9. ' -' → logprob: -15.382623672485352
    10. '('' → logprob: -16.00762367248535

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -20.0625
    4. ')' → logprob: -20.1875
    5. '１' → logprob: -20.5625
    6. '2' → logprob: -21.0
    7. '۱' → logprob: -21.125
    8. '```' → logprob: -21.1875
    9. '१' → logprob: -21.5
    10. '  ' → logprob: -21.6875

Token 334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ')
' → logprob: -11.50001049041748
    3. ' )' → logprob: -15.50001049041748
    4. '))' → logprob: -16.750011444091797
    5. ')`' → logprob: -18.000011444091797
    6. '')' → logprob: -18.500011444091797
    7. '),' → logprob: -18.500011444091797
    8. ')

' → logprob: -19.000011444091797
    9. ')#' → logprob: -19.250011444091797
    10. '`)' → logprob: -19.250011444091797

Token 335: '#' (ID: 2)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5830296874046326
    2. 'else' → logprob: -1.0830297470092773
    3. '<|end|>' → logprob: -2.3330297470092773
    4. '
' → logprob: -5.458029747009277
    5. ')' → logprob: -7.583029747009277
    6. '```' → logprob: -7.833029747009277
    7. ' else' → logprob: -8.208029747009277
    8. '   ' → logprob: -8.708029747009277
    9. '\n' → logprob: -8.958029747009277
    10. '<|end|>' → logprob: -9.458029747009277

Token 336: ' Deux' (ID: 92086)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.10037499666213989
    2. 'else' → logprob: -2.350374937057495
    3. ' elif' → logprob: -9.100375175476074
    4. ' else' → logprob: -9.850375175476074
    5. 'el' → logprob: -13.350375175476074
    6. 'if' → logprob: -13.600375175476074
    7. '```' → logprob: -14.600375175476074
    8. 'elseif' → logprob: -15.225375175476074
    9. '#' → logprob: -15.850375175476074
    10. 'endif' → logprob: -16.225374221801758

Token 337: 'ième' (ID: 41126)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.03455013409256935
    2. ' elif' → logprob: -3.534550189971924
    3. 'el' → logprob: -6.034550189971924
    4. 'e' → logprob: -6.659550189971924
    5. 'else' → logprob: -7.159550189971924
    6. 'eli' → logprob: -9.034549713134766
    7. ' else' → logprob: -9.159549713134766
    8. 'els' → logprob: -10.784549713134766
    9. 'l' → logprob: -11.284549713134766
    10. 'é' → logprob: -11.409549713134766

Token 338: ' test' (ID: 1746)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.04869035631418228
    2. ' elif' → logprob: -3.0486903190612793
    3. 'el' → logprob: -9.798690795898438
    4. 'if' → logprob: -10.798690795898438
    5. 'else' → logprob: -11.423690795898438
    6. 'e' → logprob: -11.673690795898438
    7. ' else' → logprob: -14.048690795898438
    8. 'é' → logprob: -14.048690795898438
    9. 'eli' → logprob: -14.173690795898438
    10. ' if' → logprob: -14.298690795898438

Token 339: ' condition' (ID: 7060)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.055051207542419434
    2. 'elif' → logprob: -2.930051326751709
    3. ' el' → logprob: -10.18005084991455
    4. ' eli' → logprob: -10.30505084991455
    5. ' ' → logprob: -10.43005084991455
    6. ' n' → logprob: -11.30505084991455
    7. '   ' → logprob: -11.43005084991455
    8. 'el' → logprob: -11.55505084991455
    9. ' if' → logprob: -11.55505084991455
    10. ' ' → logprob: -12.68005084991455

Token 340: 'nel' (ID: 10085)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.11517214775085449
    2. 'el' → logprob: -2.2401721477508545
    3. ' elif' → logprob: -6.490172386169434
    4. 'nel' → logprob: -8.240172386169434
    5. 'al' → logprob: -8.240172386169434
    6. 'if' → logprob: -8.365172386169434
    7. 'else' → logprob: -10.115172386169434
    8. 'él' → logprob: -11.865172386169434
    9. 'eli' → logprob: -12.615172386169434
    10. 'é' → logprob: -13.115172386169434

Token 341: ' pour' (ID: 1930)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0036828552838414907
    2. ' elif' → logprob: -5.628683090209961
    3. 'el' → logprob: -9.878683090209961
    4. 'if' → logprob: -10.503683090209961
    5. 'eli' → logprob: -13.753683090209961
    6. 'else' → logprob: -14.378683090209961
    7. 'n' → logprob: -14.878683090209961
    8. 'El' → logprob: -14.878683090209961
    9. ' el' → logprob: -15.003683090209961
    10. ' if' → logprob: -15.378683090209961

Token 342: ' vérifier' (ID: 93671)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07325360178947449
    2. 'n' → logprob: -2.948253631591797
    3. 'elif' → logprob: -4.573253631591797
    4. ' elif' → logprob: -4.948253631591797
    5. ' (' → logprob: -8.323253631591797
    6. '(n' → logprob: -8.448253631591797
    7. ' ' → logprob: -9.448253631591797
    8. '(' → logprob: -9.823253631591797
    9. 'else' → logprob: -10.573253631591797
    10. 'if' → logprob: -10.573253631591797

Token 343: ' si' (ID: 1784)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4442305266857147
    2. ' elif' → logprob: -1.319230556488037
    3. 'elif' → logprob: -2.569230556488037
    4. 'n' → logprob: -4.694230556488037
    5. ' if' → logprob: -5.694230556488037
    6. 'if' → logprob: -6.819230556488037
    7. ' ' → logprob: -7.694230556488037
    8. ' (' → logprob: -8.444230079650879
    9. ' ' → logprob: -8.944230079650879
    10. ' isinstance' → logprob: -10.194230079650879

Token 344: ' '' (ID: 461)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07929841428995132
    2. 'n' → logprob: -2.579298496246338
    3. ' ' → logprob: -8.07929801940918
    4. ' ' → logprob: -10.95429801940918
    5. '0' → logprob: -11.07929801940918
    6. ' s' → logprob: -11.57929801940918
    7. ' (' → logprob: -11.57929801940918
    8. '1' → logprob: -11.95429801940918
    9. '(n' → logprob: -12.07929801940918
    10. 's' → logprob: -12.45429801940918

Token 345: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02024906314909458
    2. ' n' → logprob: -4.020248889923096
    3. '2' → logprob: -6.770248889923096
    4. '3' → logprob: -8.270249366760254
    5. '1' → logprob: -8.395249366760254
    6. '0' → logprob: -8.520249366760254
    7. '4' → logprob: -9.770249366760254
    8. ' ' → logprob: -9.770249366760254
    9. '7' → logprob: -10.270249366760254
    10. 's' → logprob: -10.395249366760254

Token 346: ''' (ID: 6)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014818049967288971
    2. '==' → logprob: -4.38981819152832
    3. ' ' → logprob: -6.63981819152832
    4. ' !=' → logprob: -8.13981819152832
    5. ' >' → logprob: -8.26481819152832
    6. ' <' → logprob: -8.88981819152832
    7. ' >=' → logprob: -9.01481819152832
    8. ' <=' → logprob: -9.01481819152832
    9. '>' → logprob: -11.13981819152832
    10. 'elif' → logprob: -11.13981819152832

Token 347: ' vaut' (ID: 83004)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04119448363780975
    2. '==' → logprob: -3.291194438934326
    3. ' >' → logprob: -6.541194438934326
    4. ' ' → logprob: -7.291194438934326
    5. ' <' → logprob: -7.791194438934326
    6. ' !=' → logprob: -8.791194915771484
    7. '>' → logprob: -8.791194915771484
    8. ' >=' → logprob: -9.041194915771484
    9. 'elif' → logprob: -9.916194915771484
    10. ' <=' → logprob: -10.166194915771484

Token 348: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0896085575222969
    2. ' ' → logprob: -3.339608669281006
    3. '4' → logprob: -3.589608669281006
    4. '1' → logprob: -4.339608669281006
    5. '0' → logprob: -4.839608669281006
    6. '5' → logprob: -7.464608669281006
    7. '6' → logprob: -8.339608192443848
    8. 'not' → logprob: -8.464608192443848
    9. '2' → logprob: -8.714608192443848
    10. '10' → logprob: -9.464608192443848

Token 349: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.028359802439808846
    2. '1' → logprob: -4.153359889984131
    3. '4' → logprob: -4.903359889984131
    4. '0' → logprob: -5.778359889984131
    5. '5' → logprob: -7.528359889984131
    6. ' ' → logprob: -7.528359889984131
    7. '6' → logprob: -8.153359413146973
    8. '7' → logprob: -9.403359413146973
    9. '10' → logprob: -9.528359413146973
    10. '8' → logprob: -10.028359413146973

Token 350: '.
' (ID: 558)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.00455437321215868
    2. ' elif' → logprob: -5.879554271697998
    3. ':' → logprob: -6.379554271697998
    4. 'el' → logprob: -10.629554748535156
    5. 'if' → logprob: -10.754554748535156
    6. ' or' → logprob: -13.754554748535156
    7. '	elif' → logprob: -13.879554748535156
    8. ':
' → logprob: -13.879554748535156
    9. ' :' → logprob: -14.504554748535156
    10. '   ' → logprob: -15.129554748535156

Token 351: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -3.2020991056924686e-05
    2. 'el' → logprob: -10.875032424926758
    3. ' elif' → logprob: -11.500032424926758
    4. 'if' → logprob: -12.875032424926758
    5. 'El' → logprob: -15.750032424926758
    6. 'eli' → logprob: -16.250032424926758
    7. 'else' → logprob: -16.875032424926758
    8. '```' → logprob: -16.875032424926758
    9. 'elseif' → logprob: -17.625032424926758
    10. 'e' → logprob: -18.375032424926758

Token 352: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.023247109726071358
    2. 'n' → logprob: -3.773247003555298
    3. ' ' → logprob: -13.648246765136719
    4. ' ' → logprob: -15.273246765136719
    5. '	n' → logprob: -16.27324676513672
    6. '(n' → logprob: -17.27324676513672
    7. ' (' → logprob: -17.64824676513672
    8. 's' → logprob: -17.77324676513672
    9. '   ' → logprob: -18.39824676513672
    10. ' ' → logprob: -18.89824676513672

Token 353: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0019300628919154406
    2. '==' → logprob: -6.251930236816406
    3. ' ' → logprob: -13.501930236816406
    4. ' ' → logprob: -17.501930236816406
    5. ' =' → logprob: -17.626930236816406
    6. '=' → logprob: -18.376930236816406
    7. ' ==
' → logprob: -18.501930236816406
    8. '   ' → logprob: -19.001930236816406
    9. ' <=' → logprob: -19.001930236816406
    10. '==
' → logprob: -19.001930236816406

Token 354: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.28139427304267883
    2. ' ' → logprob: -1.4063942432403564
    3. '4' → logprob: -8.906394004821777
    4. '1' → logprob: -9.656394004821777
    5. '2' → logprob: -10.406394004821777
    6. '0' → logprob: -12.156394004821777
    7. '5' → logprob: -12.656394004821777
    8. '  ' → logprob: -13.406394004821777
    9. '   ' → logprob: -13.718894004821777
    10. '7' → logprob: -14.156394004821777

Token 355: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0009354014764539897
    2. ' ' → logprob: -7.0009355545043945
    3. '4' → logprob: -11.500935554504395
    4. '1' → logprob: -12.000935554504395
    5. '2' → logprob: -12.750935554504395
    6. '0' → logprob: -13.000935554504395
    7. '   ' → logprob: -14.250935554504395
    8. '5' → logprob: -14.688435554504395
    9. '  ' → logprob: -15.188435554504395
    10. '7' → logprob: -15.375935554504395

Token 356: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033715322613716125
    2. ':
' → logprob: -3.40871524810791
    3. '   ' → logprob: -10.15871524810791
    4. ' :' → logprob: -10.78371524810791
    5. ' :
' → logprob: -12.78371524810791
    6. '=' → logprob: -13.03371524810791
    7. ':

' → logprob: -13.40871524810791
    8. ':
' → logprob: -13.65871524810791
    9. '==' → logprob: -14.53371524810791
    10. '):' → logprob: -14.90871524810791

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007030773907899857
    2. 'print' → logprob: -5.132030963897705
    3. ':' → logprob: -7.007030963897705
    4. ' print' → logprob: -8.757030487060547
    5. ':
' → logprob: -11.382030487060547
    6. '	print' → logprob: -11.882030487060547
    7. 'for' → logprob: -12.382030487060547
    8. '   ' → logprob: -12.632030487060547
    9. '    
' → logprob: -12.882030487060547
    10. '       ' → logprob: -13.507030487060547

Token 358: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6416150331497192
    2. 'print' → logprob: -0.7666150331497192
    3. 'for' → logprob: -5.51661491394043
    4. ' print' → logprob: -5.64161491394043
    5. ':' → logprob: -7.01661491394043
    6. ' for' → logprob: -8.51661491394043
    7. ' ' → logprob: -9.89161491394043
    8. 's' → logprob: -10.14161491394043
    9. '    
' → logprob: -10.26661491394043
    10. '       ' → logprob: -10.39161491394043

Token 359: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1184716448187828
    2. '   ' → logprob: -2.618471622467041
    3. 'for' → logprob: -3.493471622467041
    4. ' print' → logprob: -4.993471622467041
    5. ' for' → logprob: -6.618471622467041
    6. 's' → logprob: -9.3684720993042
    7. 'if' → logprob: -10.2434720993042
    8. '    
' → logprob: -10.4934720993042
    9. ' ' → logprob: -10.6184720993042
    10. '#' → logprob: -10.7434720993042

Token 360: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3212410509586334
    2. ' s' → logprob: -1.821241021156311
    3. 'n' → logprob: -2.8212411403656006
    4. ' True' → logprob: -3.8212411403656006
    5. 's' → logprob: -4.1962409019470215
    6. 'True' → logprob: -4.8212409019470215
    7. ' ' → logprob: -6.1962409019470215
    8. ' len' → logprob: -6.1962409019470215
    9. '"' → logprob: -7.0712409019470215
    10. 'len' → logprob: -7.6962409019470215

Token 361: ' vaut' (ID: 83004)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.041873443871736526
    2. '==' → logprob: -3.2918734550476074
    3. '   ' → logprob: -6.916873455047607
    4. ' <=' → logprob: -7.166873455047607
    5. ':' → logprob: -8.04187297821045
    6. ' in' → logprob: -8.16687297821045
    7. ' >=' → logprob: -8.16687297821045
    8. ' <' → logprob: -8.29187297821045
    9. ' ' → logprob: -8.91687297821045
    10. ' >' → logprob: -9.29187297821045

Token 362: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7343462705612183
    2. '2' → logprob: -1.7343462705612183
    3. '0' → logprob: -2.109346389770508
    4. '1' → logprob: -2.484346389770508
    5. '4' → logprob: -2.484346389770508
    6. '3' → logprob: -3.609346389770508
    7. '-' → logprob: -4.109346389770508
    8. ' -' → logprob: -5.359346389770508
    9. '5' → logprob: -6.109346389770508
    10. '   ' → logprob: -6.234346389770508

Token 363: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20006871223449707
    2. '3' → logprob: -2.700068712234497
    3. '1' → logprob: -3.075068712234497
    4. '-' → logprob: -3.200068712234497
    5. '0' → logprob: -4.325068473815918
    6. '4' → logprob: -4.450068473815918
    7. ' ' → logprob: -6.825068473815918
    8. '5' → logprob: -7.575068473815918
    9. '6' → logprob: -8.700068473815918
    10. '7' → logprob: -8.950068473815918

Token 364: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028363630175590515
    2. ':
' → logprob: -3.6533637046813965
    3. '   ' → logprob: -6.2783637046813965
    4. ' :' → logprob: -9.403363227844238
    5. ',' → logprob: -9.903363227844238
    6. ' :
' → logprob: -10.528363227844238
    7. ' print' → logprob: -12.153363227844238
    8. 'print' → logprob: -12.153363227844238
    9. '==' → logprob: -13.028363227844238
    10. ' and' → logprob: -13.028363227844238

Token 365: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2794855535030365
    2. ' print' → logprob: -1.6544855833053589
    3. ' for' → logprob: -3.6544854640960693
    4. 'print' → logprob: -3.7794854640960693
    5. 'for' → logprob: -5.779485702514648
    6. '    ' → logprob: -7.904485702514648
    7. '    
' → logprob: -9.966985702514648
    8. '	print' → logprob: -10.029485702514648
    9. '   ' → logprob: -10.091985702514648
    10. ' ' → logprob: -10.279485702514648

Token 366: ' parc' (ID: 22138)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1939592361450195
    2. ' print' → logprob: -1.1939592361450195
    3. ':' → logprob: -1.6939592361450195
    4. '   ' → logprob: -1.9439592361450195
    5. ' for' → logprob: -3.3189592361450195
    6. 'for' → logprob: -3.6939592361450195
    7. ':
' → logprob: -6.5689592361450195
    8. '    ' → logprob: -7.1939592361450195
    9. 's' → logprob: -7.6939592361450195
    10. '=' → logprob: -7.6939592361450195

Token 367: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.00143678137101233
    2. 'oure' → logprob: -7.376436710357666
    3. 'our' → logprob: -7.626436710357666
    4. 'ourt' → logprob: -8.501437187194824
    5. 'ourse' → logprob: -10.251437187194824
    6. '#' → logprob: -10.876437187194824
    7. '```' → logprob: -11.501437187194824
    8. '_' → logprob: -11.626437187194824
    9. '>' → logprob: -11.626437187194824
    10. 'ou' → logprob: -12.251437187194824

Token 368: ' chaque' (ID: 21194)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.049358002841472626
    2. ' range' → logprob: -3.7993578910827637
    3. 's' → logprob: -4.299357891082764
    4. ' ' → logprob: -4.674357891082764
    5. ' la' → logprob: -6.549357891082764
    6. ' for' → logprob: -7.424357891082764
    7. 'range' → logprob: -8.299358367919922
    8. ' i' → logprob: -9.424358367919922
    9. ' l' → logprob: -9.549358367919922
    10. '  ' → logprob: -9.549358367919922

Token 369: ' élément' (ID: 99627)
  Prédit: ' element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' element' → logprob: -1.2336833477020264
    2. ' s' → logprob: -1.6086833477020264
    3. ' i' → logprob: -1.7336833477020264
    4. 's' → logprob: -3.3586833477020264
    5. ' e' → logprob: -3.3586833477020264
    6. ' c' → logprob: -3.4836833477020264
    7. ' chaine' → logprob: -3.4836833477020264
    8. 'e' → logprob: -3.6086833477020264
    9. ' elem' → logprob: -3.8586833477020264
    10. 'element' → logprob: -4.1086835861206055

Token 370: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6058360934257507
    2. ' de' → logprob: -0.9808360934257507
    3. ' ' → logprob: -2.9808361530303955
    4. 'in' → logprob: -3.9808361530303955
    5. 's' → logprob: -5.855835914611816
    6. ' of' → logprob: -5.855835914611816
    7. ' s' → logprob: -6.355835914611816
    8. 'de' → logprob: -7.605835914611816
    9. '   ' → logprob: -7.730835914611816
    10. '_' → logprob: -7.980835914611816

Token 371: 'cha' (ID: 3836)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.476441353559494
    2. 'chaine' → logprob: -2.6014413833618164
    3. 'elem' → logprob: -2.8514413833618164
    4. 's' → logprob: -3.3514413833618164
    5. 'i' → logprob: -3.4764413833618164
    6. 'mot' → logprob: -3.6014413833618164
    7. 'ch' → logprob: -3.9764413833618164
    8. 'c' → logprob: -3.9764413833618164
    9. 'element' → logprob: -4.101441383361816
    10. 'e' → logprob: -4.476441383361816

Token 372: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.08160568028688431
    2. '#' → logprob: -3.8316056728363037
    3. 'ine' → logprob: -3.8316056728363037
    4. 'ne' → logprob: -4.331605911254883
    5. '   ' → logprob: -4.706605911254883
    6. 'me' → logprob: -4.706605911254883
    7. '```' → logprob: -7.081605911254883
    8. 'que' → logprob: -7.206605911254883
    9. '^' → logprob: -7.706605911254883
    10. 'ïne' → logprob: -7.956605911254883

Token 373: ')' (ID: 8)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.48363617062568665
    2. ' in' → logprob: -1.2336361408233643
    3. 'in' → logprob: -2.9836361408233643
    4. ')' → logprob: -4.358636379241943
    5. 'de' → logprob: -4.858636379241943
    6. 's' → logprob: -5.233636379241943
    7. ' ' → logprob: -5.358636379241943
    8. ' s' → logprob: -5.608636379241943
    9. '    ' → logprob: -5.858636379241943
    10. '   ' → logprob: -6.233636379241943

Token 374: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.27258914709091187
    2. 'in' → logprob: -1.7725892066955566
    3. ' de' → logprob: -2.7725892066955566
    4. ' ' → logprob: -6.397589206695557
    5. 's' → logprob: -6.897589206695557
    6. 'de' → logprob: -6.897589206695557
    7. ' dans' → logprob: -7.022589206695557
    8. ' of' → logprob: -7.022589206695557
    9. 'dans' → logprob: -8.522588729858398
    10. '   ' → logprob: -9.022588729858398

Token 375: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02326865680515766
    2. ' s' → logprob: -3.773268699645996
    3. '   ' → logprob: -10.898268699645996
    4. ' ' → logprob: -13.398268699645996
    5. 'range' → logprob: -13.523268699645996
    6. '	s' → logprob: -14.523268699645996
    7. ' range' → logprob: -15.023268699645996
    8. '    ' → logprob: -15.148268699645996
    9. '  ' → logprob: -15.273268699645996
    10. '[s' → logprob: -16.27326774597168

Token 376: ' liste' (ID: 31719)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006764040794223547
    2. ' s' → logprob: -5.006763935089111
    3. 'for' → logprob: -10.63176441192627
    4. 'range' → logprob: -11.25676441192627
    5. ' for' → logprob: -12.63176441192627
    6. ' range' → logprob: -12.75676441192627
    7. 'n' → logprob: -13.75676441192627
    8. '
' → logprob: -13.88176441192627
    9. '   ' → logprob: -13.88176441192627
    10. ' ' → logprob: -14.38176441192627

Token 377: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.42875269055366516
    2. ' s' → logprob: -1.0537526607513428
    3. '(s' → logprob: -10.928752899169922
    4. '   ' → logprob: -11.178752899169922
    5. ' in' → logprob: -12.178752899169922
    6. ' ' → logprob: -12.678752899169922
    7. 'in' → logprob: -12.803752899169922
    8. ' for' → logprob: -13.303752899169922
    9. 'for' → logprob: -13.678752899169922
    10. 'n' → logprob: -13.803752899169922

Token 378: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.003814210882410407
    2. 's' → logprob: -6.003814220428467
    3. ':' → logprob: -7.878814220428467
    4. '[' → logprob: -8.003813743591309
    5. '[n' → logprob: -8.378813743591309
    6. '   ' → logprob: -9.003813743591309
    7. ':
' → logprob: -9.753813743591309
    8. 'for' → logprob: -10.003813743591309
    9. '[s' → logprob: -10.128813743591309
    10. 'in' → logprob: -10.253813743591309

Token 379: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015465259784832597
    2. ':
' → logprob: -6.501546382904053
    3. '   ' → logprob: -10.626546859741211
    4. ' :' → logprob: -11.376546859741211
    5. 'for' → logprob: -12.376546859741211
    6. ' for' → logprob: -12.876546859741211
    7. ' :
' → logprob: -14.626546859741211
    8. ',' → logprob: -15.376546859741211
    9. ':
' → logprob: -15.376546859741211
    10. '):' → logprob: -15.751546859741211

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030480583664029837
    2. '       ' → logprob: -6.003047943115234
    3. 'for' → logprob: -8.128047943115234
    4. ' for' → logprob: -8.503047943115234
    5. '#' → logprob: -10.503047943115234
    6. '  ' → logprob: -10.878047943115234
    7. '    ' → logprob: -11.628047943115234
    8. 'print' → logprob: -12.378047943115234
    9. '   ' → logprob: -12.503047943115234
    10. ' ' → logprob: -13.128047943115234

Token 381: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05852799862623215
    2. 'for' → logprob: -3.308527946472168
    3. '       ' → logprob: -4.308527946472168
    4. ' for' → logprob: -5.558527946472168
    5. 'print' → logprob: -6.433527946472168
    6. '#' (adapté à ' #') → logprob: -7.933527946472168
    7. ' print' → logprob: -8.183527946472168
    8. '    ' → logprob: -8.308527946472168
    9. '  ' → logprob: -8.808527946472168
    10. ' ' → logprob: -9.308527946472168

Token 382: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15902948379516602
    2. 'print' → logprob: -2.534029483795166
    3. ' print' → logprob: -3.659029483795166
    4. '       ' → logprob: -3.909029483795166
    5. 'for' → logprob: -4.034029483795166
    6. ' for' → logprob: -5.784029483795166
    7. '    ' → logprob: -7.659029483795166
    8. ' ' → logprob: -8.909029006958008
    9. ' ' → logprob: -9.284029006958008
    10. '   ' → logprob: -9.284029006958008

Token 383: ' pour' (ID: 1930)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.40406060218811035
    2. 'print' → logprob: -1.5290606021881104
    3. '   ' → logprob: -2.4040606021881104
    4. ' for' → logprob: -4.279060363769531
    5. 'for' → logprob: -4.529060363769531
    6. '    ' → logprob: -8.529060363769531
    7. ' ' → logprob: -8.654060363769531
    8. ' ' → logprob: -9.029060363769531
    9. '  ' → logprob: -10.154060363769531
    10. '	print' → logprob: -10.529060363769531

Token 384: ' chacun' (ID: 52136)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' token' → logprob: -1.0574395656585693
    2. ' c' → logprob: -1.8074395656585693
    3. ' i' → logprob: -2.1824395656585693
    4. ' s' → logprob: -2.1824395656585693
    5. ' print' → logprob: -2.6824395656585693
    6. '   ' → logprob: -3.4324395656585693
    7. ' ' → logprob: -3.6824395656585693
    8. ' element' → logprob: -3.9324395656585693
    9. 'c' → logprob: -4.057439804077148
    10. ' ch' → logprob: -4.057439804077148

Token 385: ',' (ID: 11)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2042522132396698
    2. '    ' → logprob: -2.829252243041992
    3. '   ' → logprob: -3.079252243041992
    4. 'print' → logprob: -3.454252243041992
    5. ':' → logprob: -3.829252243041992
    6. ' s' → logprob: -4.079252243041992
    7. ' in' → logprob: -6.079252243041992
    8. ' :' → logprob: -6.079252243041992
    9. 'in' → logprob: -7.329252243041992
    10. '       ' → logprob: -7.329252243041992

Token 386: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20208825170993805
    2. ' print' → logprob: -1.7020882368087769
    3. '   ' → logprob: -7.327088356018066
    4. '	print' → logprob: -11.952088356018066
    5. '    ' → logprob: -12.577088356018066
    6. '       ' → logprob: -12.952088356018066
    7. ' ' → logprob: -13.327088356018066
    8. 'for' → logprob: -14.327088356018066
    9. '```' → logprob: -14.702088356018066
    10. '    
' → logprob: -14.952088356018066

Token 387: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16024108231067657
    2. ' print' → logprob: -1.9102411270141602
    3. '   ' → logprob: -11.91024112701416
    4. 'for' → logprob: -12.41024112701416
    5. ':' → logprob: -13.03524112701416
    6. '	print' → logprob: -13.78524112701416
    7. ' for' → logprob: -13.91024112701416
    8. ' prints' → logprob: -15.16024112701416
    9. 'prints' → logprob: -15.53524112701416
    10. 's' → logprob: -15.91024112701416

Token 388: ''aff' (ID: 53397)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4337972104549408
    2. ' print' → logprob: -1.1837972402572632
    3. '   ' → logprob: -3.8087971210479736
    4. 'for' → logprob: -4.433797359466553
    5. ' for' → logprob: -6.058797359466553
    6. '.print' → logprob: -6.183797359466553
    7. 'e' → logprob: -6.683797359466553
    8. ''aff' → logprob: -7.058797359466553
    9. '```' → logprob: -7.558797359466553
    10. ' imprime' → logprob: -7.808797359466553

Token 389: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0006288022268563509
    2. 'icher' → logprob: -7.50062894821167
    3. 'che' → logprob: -10.500628471374512
    4. 'ich' → logprob: -11.375628471374512
    5. '#' → logprob: -11.625628471374512
    6. 'ichage' → logprob: -11.625628471374512
    7. 'ic' → logprob: -11.875628471374512
    8. 'r' → logprob: -12.250628471374512
    9. ' iche' → logprob: -13.625628471374512
    10. 'ric' → logprob: -14.125628471374512

Token 390: ' sépar' (ID: 97160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07546529173851013
    2. '   ' → logprob: -3.075465202331543
    3. ' :' → logprob: -3.950465202331543
    4. ':
' → logprob: -5.950465202331543
    5. '       ' → logprob: -6.700465202331543
    6. 'print' → logprob: -7.575465202331543
    7. '()' → logprob: -7.700465202331543
    8. '(' → logprob: -7.825465202331543
    9. '():' → logprob: -7.950465202331543
    10. ' :
' → logprob: -7.950465202331543

Token 391: 'ément' (ID: 17645)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.18527591228485107
    2. 'ément' → logprob: -1.810275912284851
    3. 'ement' → logprob: -5.810276031494141
    4. 'ée' → logprob: -6.310276031494141
    5. 'e' → logprob: -8.31027603149414
    6. 'er' → logprob: -9.06027603149414
    7. 'ment' → logprob: -9.43527603149414
    8. '#' → logprob: -9.68527603149414
    9. '```' → logprob: -10.06027603149414
    10. ' par' → logprob: -10.56027603149414

Token 392: ' avec' (ID: 3937)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004834515042603016
    2. ' :' → logprob: -6.2548346519470215
    3. ':
' → logprob: -6.2548346519470215
    4. '   ' → logprob: -7.0048346519470215
    5. ' :
' → logprob: -10.504834175109863
    6. 'for' → logprob: -11.379834175109863
    7. '.' → logprob: -11.629834175109863
    8. '       ' → logprob: -12.004834175109863
    9. ' for' → logprob: -12.004834175109863
    10. ':\' → logprob: -12.754834175109863

Token 393: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08755189925432205
    2. ' print' → logprob: -2.5875518321990967
    3. 'end' → logprob: -6.337552070617676
    4. ')' → logprob: -6.462552070617676
    5. '   ' → logprob: -6.712552070617676
    6. ' une' → logprob: -6.712552070617676
    7. ' la' → logprob: -6.837552070617676
    8. 'une' → logprob: -7.462552070617676
    9. ' )' → logprob: -8.462552070617676
    10. ' ' → logprob: -8.712552070617676

Token 394: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48971182107925415
    2. '(s' → logprob: -1.6147117614746094
    3. '()' → logprob: -2.6147117614746094
    4. '(i' → logprob: -3.1147117614746094
    5. '(item' → logprob: -3.2397117614746094
    6. '(line' → logprob: -4.614711761474609
    7. '(e' → logprob: -5.239711761474609
    8. '(elem' → logprob: -5.239711761474609
    9. '(element' → logprob: -6.114711761474609
    10. '(word' → logprob: -6.989711761474609

Token 395: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46852269768714905
    2. '   ' → logprob: -1.2185226678848267
    3. 'for' → logprob: -3.093522787094116
    4. ' for' → logprob: -3.468522787094116
    5. ':
' → logprob: -6.593522548675537
    6. '       ' → logprob: -7.718522548675537
    7. ' :' → logprob: -9.718523025512695
    8. '```' → logprob: -11.843523025512695
    9. '  ' → logprob: -12.218523025512695
    10. ' ' → logprob: -12.843523025512695

Token 396: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7764837145805359
    2. 'for' → logprob: -0.7764837145805359
    3. ' for' → logprob: -2.5264837741851807
    4. '	for' → logprob: -11.151483535766602
    5. '       ' → logprob: -13.151483535766602
    6. ' ' → logprob: -13.776483535766602
    7. '   ' → logprob: -14.401483535766602
    8. '```' → logprob: -15.151483535766602
    9. '
' → logprob: -15.651483535766602
    10. '  ' → logprob: -15.651483535766602

Token 397: ' Cette' (ID: 27383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2555531859397888
    2. ' for' → logprob: -1.5055532455444336
    3. '   ' → logprob: -5.630553245544434
    4. '	for' → logprob: -11.005553245544434
    5. ' ' → logprob: -11.630553245544434
    6. '       ' → logprob: -13.130553245544434
    7. ' ' → logprob: -13.880553245544434
    8. '  ' → logprob: -14.005553245544434
    9. '    ' → logprob: -14.630553245544434
    10. 'print' → logprob: -14.755553245544434

Token 398: ' syntax' (ID: 45440)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5832821726799011
    2. ' for' → logprob: -0.8332821726799011
    3. ' code' → logprob: -6.208281993865967
    4. ' ' → logprob: -6.583281993865967
    5. ' espace' → logprob: -6.833281993865967
    6. ' ' → logprob: -7.333281993865967
    7. ' 
' → logprob: -7.958281993865967
    8. ' space' → logprob: -8.458282470703125
    9. ' a' → logprob: -8.708282470703125
    10. ' est' → logprob: -8.833282470703125

Token 399: 'e' (ID: 68)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.5767124891281128
    2. 'e' → logprob: -0.8267124891281128
    3. 'ique' → logprob: -7.326712608337402
    4. 'que' → logprob: -9.951712608337402
    5. ' e' → logprob: -11.326712608337402
    6. '#' → logprob: -11.326712608337402
    7. 'me' → logprob: -11.576712608337402
    8. 'ues' → logprob: -11.576712608337402
    9. 'u' → logprob: -11.826712608337402
    10. ' ue' → logprob: -12.951712608337402

Token 400: ' correspond' (ID: 11095)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8929737210273743
    2. ':' → logprob: -1.0179736614227295
    3. 'for' → logprob: -1.7679736614227295
    4. ' :' → logprob: -2.8929736614227295
    5. ':
' → logprob: -7.017973899841309
    6. ' :
' → logprob: -7.267973899841309
    7. '(' → logprob: -7.767973899841309
    8. ' in' → logprob: -8.017973899841309
    9. 'in' → logprob: -8.767973899841309
    10. '():' → logprob: -9.392973899841309

Token 401: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.02493523433804512
    2. ' a' → logprob: -4.899935245513916
    3. ' au' → logprob: -5.274935245513916
    4. ' to' → logprob: -5.399935245513916
    5. ' aux' → logprob: -5.774935245513916
    6. ' ' → logprob: -6.524935245513916
    7. 'à' → logprob: -7.149935245513916
    8. 'au' → logprob: -7.649935245513916
    9. '   ' → logprob: -7.899935245513916
    10. '(' → logprob: -7.899935245513916

Token 402: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012088033836334944
    2. ' for' → logprob: -6.751208782196045
    3. 'print' → logprob: -11.001209259033203
    4. '   ' → logprob: -11.501209259033203
    5. ':' → logprob: -11.876209259033203
    6. '```' → logprob: -13.251209259033203
    7. '
' → logprob: -14.251209259033203
    8. '       ' → logprob: -15.376209259033203
    9. ':
' → logprob: -15.501209259033203
    10. ' ' → logprob: -15.751209259033203

Token 403: ' compréhension' (ID: 142333)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28082120418548584
    2. ' boucle' → logprob: -2.0308213233947754
    3. 'bou' → logprob: -2.9058213233947754
    4. ' for' → logprob: -2.9058213233947754
    5. 'pour' → logprob: -6.405821323394775
    6. ' bou' → logprob: -6.655821323394775
    7. ':' → logprob: -8.280820846557617
    8. ' simple' → logprob: -8.905820846557617
    9. ' pour' → logprob: -9.030820846557617
    10. ' ' → logprob: -9.280820846557617

Token 404: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20478883385658264
    2. ' for' → logprob: -1.7047888040542603
    3. 's' → logprob: -6.454788684844971
    4. ':' → logprob: -7.329788684844971
    5. '[' → logprob: -7.704788684844971
    6. '_for' → logprob: -7.954788684844971
    7. ' de' → logprob: -9.704789161682129
    8. 'print' → logprob: -9.954789161682129
    9. '[n' → logprob: -10.329789161682129
    10. 'n' → logprob: -11.079789161682129

Token 405: ' liste' (ID: 31719)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05274578183889389
    2. 'liste' → logprob: -3.677745819091797
    3. 's' → logprob: -4.302745819091797
    4. ' for' → logprob: -6.052745819091797
    5. 'ligne' → logprob: -6.177745819091797
    6. 'list' → logprob: -6.552745819091797
    7. 'la' → logprob: -6.677745819091797
    8. 'print' → logprob: -6.927745819091797
    9. 'l' → logprob: -7.052745819091797
    10. 'chaine' → logprob: -7.427745819091797

Token 406: ' 
' (ID: 793)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6992203593254089
    2. ':' → logprob: -1.0742204189300537
    3. ' for' → logprob: -1.9492204189300537
    4. 's' → logprob: -4.824220180511475
    5. '[' → logprob: -4.949220180511475
    6. ':
' → logprob: -6.324220180511475
    7. '[n' → logprob: -7.574220180511475
    8. '[:]' → logprob: -7.824220180511475
    9. ' :' → logprob: -8.074220657348633
    10. '[::-' → logprob: -8.824220657348633

Token 407: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6564478278160095
    2. ' for' → logprob: -1.2814478874206543
    3. ':' → logprob: -1.9064478874206543
    4. '   ' → logprob: -3.1564478874206543
    5. '[' → logprob: -4.781447887420654
    6. '[:]' → logprob: -7.156447887420654
    7. '[n' → logprob: -7.531447887420654
    8. ':
' → logprob: -7.656447887420654
    9. ' :' → logprob: -7.906447887420654
    10. 's' → logprob: -8.156447410583496

Token 408: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20960767567157745
    2. ' for' → logprob: -2.0846076011657715
    3. ':' → logprob: -2.9596076011657715
    4. '[' → logprob: -4.8346076011657715
    5. '#' (adapté à ' #') → logprob: -6.7096076011657715
    6. ':
' → logprob: -7.2096076011657715
    7. 'print' → logprob: -7.4596076011657715
    8. 's' → logprob: -8.08460807800293
    9. ' :' → logprob: -8.20960807800293
    10. ' pour' → logprob: -8.70960807800293

Token 409: ' utilisée' (ID: 106548)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.059889260679483414
    2. ' for' → logprob: -3.184889316558838
    3. '[' → logprob: -4.434889316558838
    4. ':' → logprob: -5.684889316558838
    5. 'print' → logprob: -7.934889316558838
    6. 'pour' → logprob: -8.55988883972168
    7. ' [' → logprob: -8.80988883972168
    8. '[n' → logprob: -8.93488883972168
    9. '#' → logprob: -9.18488883972168
    10. '[:]' → logprob: -9.43488883972168

Token 410: ' uniquement' (ID: 65527)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.109079360961914
    2. ' for' → logprob: -1.234079360961914
    3. 'for' → logprob: -1.359079360961914
    4. ' pour' → logprob: -3.609079360961914
    5. '[' → logprob: -4.109079360961914
    6. ' en' → logprob: -4.359079360961914
    7. ' implicit' → logprob: -4.859079360961914
    8. ' simplement' → logprob: -4.984079360961914
    9. 'à' → logprob: -5.234079360961914
    10. ':' → logprob: -5.234079360961914

Token 411: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -1.1830534934997559
    2. 'for' → logprob: -1.1830534934997559
    3. 'pour' → logprob: -1.3080534934997559
    4. ' for' → logprob: -2.933053493499756
    5. ' en' → logprob: -4.308053493499756
    6. 'en' → logprob: -4.433053493499756
    7. ' à' → logprob: -4.558053493499756
    8. ' ici' → logprob: -4.808053493499756
    9. ' dans' → logprob: -5.933053493499756
    10. 'dans' → logprob: -6.058053493499756

Token 412: ' ses' (ID: 6707)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0062323808670044
    2. 'print' → logprob: -1.0062323808670044
    3. ' print' → logprob: -2.256232261657715
    4. ' s' → logprob: -3.006232261657715
    5. ' _' → logprob: -3.006232261657715
    6. 's' → logprob: -3.631232261657715
    7. ' side' → logprob: -5.381232261657715
    8. 'side' → logprob: -5.631232261657715
    9. ' line' → logprob: -5.881232261657715
    10. '[' → logprob: -5.881232261657715

Token 413: ' effets' (ID: 72414)
  Prédit: ' side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.27126333117485046
    2. '_' → logprob: -2.021263360977173
    3. 'side' → logprob: -3.146263360977173
    4. ' actions' → logprob: -4.646263122558594
    5. 'actions' → logprob: -4.896263122558594
    6. ' ' → logprob: -5.021263122558594
    7. ' _' → logprob: -5.021263122558594
    8. ' effets' → logprob: -5.271263122558594
    9. 'eff' → logprob: -6.021263122558594
    10. 'for' → logprob: -6.146263122558594

Token 414: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8957424163818359
    2. ':' → logprob: -1.395742416381836
    3. ' for' → logprob: -1.645742416381836
    4. '_' → logprob: -3.020742416381836
    5. '[' → logprob: -3.270742416381836
    6. ' de' → logprob: -4.395742416381836
    7. 's' → logprob: -4.520742416381836
    8. ' :' → logprob: -4.645742416381836
    9. ' d' → logprob: -4.770742416381836
    10. ' ' → logprob: -5.645742416381836

Token 415: ' bord' (ID: 26431)
  Prédit: 'bord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bord' → logprob: -0.4646826982498169
    2. 'side' → logprob: -1.714682698249817
    3. 'print' → logprob: -2.3396825790405273
    4. 'b' → logprob: -2.7146825790405273
    5. 'bou' → logprob: -4.089682579040527
    6. 's' → logprob: -5.714682579040527
    7. 'ligne' → logprob: -5.839682579040527
    8. 'eff' → logprob: -6.214682579040527
    9. 'for' → logprob: -6.839682579040527
    10. 'bloc' → logprob: -7.839682579040527

Token 416: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37572675943374634
    2. 'for' → logprob: -1.7507266998291016
    3. ' for' → logprob: -2.2507266998291016
    4. ':
' → logprob: -4.250726699829102
    5. '[' → logprob: -4.375726699829102
    6. '   ' → logprob: -5.500726699829102
    7. 's' → logprob: -7.000726699829102
    8. ' :' → logprob: -7.125726699829102
    9. '[:]' → logprob: -8.000726699829102
    10. ',' → logprob: -8.250726699829102

Token 417: 'aff' (ID: 2857)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9540241360664368
    2. 'print' → logprob: -1.204024076461792
    3. 'for' → logprob: -1.954024076461792
    4. '[' → logprob: -2.829024076461792
    5. ' _' → logprob: -3.454024076461792
    6. ' for' → logprob: -3.579024076461792
    7. 's' → logprob: -4.079024314880371
    8. ' print' → logprob: -4.329024314880371
    9. ' s' → logprob: -4.954024314880371
    10. ')' → logprob: -4.954024314880371

Token 418: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.03169585391879082
    2. 'icher' → logprob: -3.53169584274292
    3. '#' → logprob: -7.15669584274292
    4. 'iche' → logprob: -7.78169584274292
    5. 'ich' → logprob: -8.281696319580078
    6. '   ' → logprob: -8.906696319580078
    7. 'ic' → logprob: -9.781696319580078
    8. '>' → logprob: -10.281696319580078
    9. '```' → logprob: -10.281696319580078
    10. '

' → logprob: -10.531696319580078

Token 419: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.34607070684432983
    2. ')' → logprob: -1.5960707664489746
    3. '):
' → logprob: -3.3460707664489746
    4. ':' → logprob: -3.5960707664489746
    5. 'for' → logprob: -4.221070766448975
    6. ' for' → logprob: -5.846070766448975
    7. ' ):' → logprob: -6.221070766448975
    8. 's' → logprob: -6.346070766448975
    9. ').' → logprob: -6.971070766448975
    10. ' :' → logprob: -7.096070766448975

Token 420: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013600016012787819
    2. ' for' → logprob: -4.888599872589111
    3. '[' → logprob: -5.263599872589111
    4. ':' → logprob: -8.38860034942627
    5. '   ' → logprob: -8.63860034942627
    6. '[s' → logprob: -8.88860034942627
    7. ':
' → logprob: -9.26360034942627
    8. 'print' → logprob: -9.63860034942627
    9. '[i' → logprob: -10.01360034942627
    10. ' [' → logprob: -11.51360034942627

Token 421: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -0.0017688281368464231
    2. 'for' → logprob: -6.501769065856934
    3. 'print' → logprob: -9.126769065856934
    4. '_' → logprob: -9.626769065856934
    5. '[_' → logprob: -10.001769065856934
    6. ' [' → logprob: -10.251769065856934
    7. '_[' → logprob: -12.501769065856934
    8. '[s' → logprob: -13.376769065856934
    9. '[
' → logprob: -13.626769065856934
    10. ' for' → logprob: -13.751769065856934

Token 422: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.625
    3. '(print' → logprob: -20.625
    4. '#print' → logprob: -22.25
    5. '```' → logprob: -22.5
    6. 'prin' → logprob: -22.625
    7. 'printf' → logprob: -23.25
    8. '   ' → logprob: -23.25
    9. '
' → logprob: -23.5
    10. 'pr' → logprob: -24.375

Token 423: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3025035262107849
    2. '(i' → logprob: -2.0525035858154297
    3. '(s' → logprob: -3.1775035858154297
    4. '(elem' → logprob: -3.5525035858154297
    5. '(e' → logprob: -4.42750358581543
    6. '(c' → logprob: -4.55250358581543
    7. '(word' → logprob: -4.67750358581543
    8. '(item' → logprob: -5.42750358581543
    9. '(k' → logprob: -5.55250358581543
    10. '(element' → logprob: -6.05250358581543

Token 424: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002346488763578236
    2. '()' → logprob: -9.625234603881836
    3. '())' → logprob: -9.750234603881836
    4. '(x' → logprob: -10.250234603881836
    5. ' )' → logprob: -10.375234603881836
    6. '(s' → logprob: -10.875234603881836
    7. '(' → logprob: -11.500234603881836
    8. 'for' → logprob: -12.500234603881836
    9. ')
' → logprob: -13.250234603881836
    10. 's' → logprob: -13.375234603881836

Token 425: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06225918233394623
    2. ' for' → logprob: -2.8122591972351074
    3. '(x' → logprob: -9.18725872039795
    4. '(' → logprob: -9.56225872039795
    5. ')' → logprob: -9.56225872039795
    6. '()' → logprob: -10.68725872039795
    7. ']' → logprob: -11.31225872039795
    8. '(s' → logprob: -12.56225872039795
    9. ' ' → logprob: -12.68725872039795
    10. '   ' → logprob: -13.31225872039795

Token 426: ' x' (ID: 1215)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11906951665878296
    2. ' s' → logprob: -2.2440695762634277
    3. 'x' → logprob: -5.119069576263428
    4. ' x' → logprob: -8.36906909942627
    5. '	s' → logprob: -12.36906909942627
    6. ' ' → logprob: -12.49406909942627
    7. '   ' → logprob: -13.24406909942627
    8. '  ' → logprob: -13.49406909942627
    9. ')' → logprob: -14.61906909942627
    10. ']' → logprob: -14.80656909942627

Token 427: ' in' (ID: 306)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.39363569021224976
    2. 's' → logprob: -1.1436357498168945
    3. ' in' → logprob: -5.1436357498168945
    4. 'in' → logprob: -7.0186357498168945
    5. 'x' → logprob: -12.393635749816895
    6. '(s' → logprob: -12.643635749816895
    7. ' ' → logprob: -14.393635749816895
    8. ']' → logprob: -14.393635749816895
    9. ')' → logprob: -15.143635749816895
    10. ',' → logprob: -15.393635749816895

Token 428: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05488679185509682
    2. ' s' → logprob: -2.929886817932129
    3. '   ' → logprob: -13.304886817932129
    4. ' ' → logprob: -13.429886817932129
    5. '	s' → logprob: -14.429886817932129
    6. '  ' → logprob: -15.179886817932129
    7. '(s' → logprob: -15.554886817932129
    8. '    ' → logprob: -15.679886817932129
    9. '
' → logprob: -16.679885864257812
    10. ']' → logprob: -16.929885864257812

Token 429: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.20734242349863e-05
    2. '[' → logprob: -9.625072479248047
    3. ' ' → logprob: -12.125072479248047
    4. '   ' → logprob: -14.875072479248047
    5. ' [' → logprob: -17.437572479248047
    6. '[n' → logprob: -17.625072479248047
    7. '۳' → logprob: -17.875072479248047
    8. ']' → logprob: -18.250072479248047
    9. '  ' → logprob: -18.312572479248047
    10. ')' → logprob: -18.375072479248047

Token 430: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018363336857873946
    2. ' ]' → logprob: -8.625184059143066
    3. ']
' → logprob: -12.750184059143066
    4. '   ' → logprob: -14.750184059143066
    5. ']

' → logprob: -15.375184059143066
    6. ']:' → logprob: -15.875184059143066
    7. '];' → logprob: -15.875184059143066
    8. ')]' → logprob: -16.62518310546875
    9. ']
' → logprob: -16.62518310546875
    10. '()]' → logprob: -17.00018310546875

Token 431: '#' (ID: 2)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.014264225959777832
    2. 'else' → logprob: -4.264264106750488
    3. '<|end|>' → logprob: -9.639264106750488
    4. '```' → logprob: -11.139264106750488
    5. ' elif' → logprob: -11.639264106750488
    6. '
' → logprob: -12.264264106750488
    7. 'elseif' → logprob: -13.389264106750488
    8. '#' → logprob: -13.639264106750488
    9. '#elif' → logprob: -14.014264106750488
    10. '\n' → logprob: -14.264264106750488

Token 432: ' Si' (ID: 7832)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.38687169551849365
    2. 'else' → logprob: -1.1368716955184937
    3. ' else' → logprob: -15.011871337890625
    4. ' elif' → logprob: -15.011871337890625
    5. 'elseif' → logprob: -17.636871337890625
    6. '```' → logprob: -17.886871337890625
    7. '#' → logprob: -18.511871337890625
    8. 'el' → logprob: -19.386871337890625
    9. '#elif' → logprob: -19.511871337890625
    10. 'if' → logprob: -19.886871337890625

Token 433: ' aucun' (ID: 41678)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.055901989340782166
    2. 'n' → logprob: -2.9309020042419434
    3. ' ' → logprob: -7.555902004241943
    4. 'elif' → logprob: -8.430901527404785
    5. 'else' → logprob: -9.055901527404785
    6. '  ' → logprob: -10.055901527404785
    7. ' elif' → logprob: -10.555901527404785
    8. ' else' → logprob: -10.680901527404785
    9. 'e' → logprob: -10.930901527404785
    10. '   ' → logprob: -10.930901527404785

Token 434: ' des' (ID: 731)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.006520683411508799
    2. 'elif' → logprob: -6.256520748138428
    3. ' autre' → logprob: -6.506520748138428
    4. 'n' → logprob: -6.631520748138428
    5. ' n' → logprob: -7.756520748138428
    6. ' e' → logprob: -8.00652027130127
    7. 'else' → logprob: -8.00652027130127
    8. ' elif' → logprob: -9.13152027130127
    9. 'es' → logprob: -9.25652027130127
    10. ' other' → logprob: -9.25652027130127

Token 435: ' cas' (ID: 2108)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.90508633852005
    2. 'elif' → logprob: -1.7800862789154053
    3. 'tests' → logprob: -2.2800862789154053
    4. ' tests' → logprob: -2.5300862789154053
    5. 'cas' → logprob: -2.6550862789154053
    6. ' cas' → logprob: -2.7800862789154053
    7. 'e' → logprob: -3.1550862789154053
    8. 'conditions' → logprob: -3.5300862789154053
    9. ' conditions' → logprob: -4.155086517333984
    10. ' if' → logprob: -5.280086517333984

Token 436: ' précéd' (ID: 55435)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9597717523574829
    2. ' n' → logprob: -0.9597717523574829
    3. 'e' → logprob: -2.2097716331481934
    4. 'else' → logprob: -2.9597716331481934
    5. 'elif' → logprob: -3.2097716331481934
    6. ':' → logprob: -4.584771633148193
    7. ' else' → logprob: -4.959771633148193
    8. ' elif' → logprob: -5.334771633148193
    9. 'ne' → logprob: -5.709771633148193
    10. ' ne' → logprob: -6.209771633148193

Token 437: 'ents' (ID: 1094)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.07896248996257782
    2. 'ents' → logprob: -2.578962564468384
    3. 'elif' → logprob: -10.578962326049805
    4. 'entes' → logprob: -10.953962326049805
    5. 'if' → logprob: -11.078962326049805
    6. 'e' → logprob: -12.828962326049805
    7. 'ant' → logprob: -12.828962326049805
    8. 'é' → logprob: -12.953962326049805
    9. 'ént' → logprob: -13.578962326049805
    10. ' elif' → logprob: -14.203962326049805

Token 438: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04011077061295509
    2. 'else' → logprob: -3.2901108264923096
    3. 'elif' → logprob: -6.4151105880737305
    4. ' else' → logprob: -8.29011058807373
    5. ':
' → logprob: -9.54011058807373
    6. 'n' → logprob: -10.04011058807373
    7. 'e' → logprob: -10.91511058807373
    8. ' :' → logprob: -11.29011058807373
    9. ' n' → logprob: -11.91511058807373
    10. ',' → logprob: -12.41511058807373

Token 439: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.44686421751976013
    2. 'elif' → logprob: -1.3218642473220825
    3. 'est' → logprob: -2.571864128112793
    4. 'e' → logprob: -5.321864128112793
    5. '#' → logprob: -5.571864128112793
    6. '’est' → logprob: -5.821864128112793
    7. ''' → logprob: -7.071864128112793
    8. 'n' → logprob: -7.071864128112793
    9. 'es' → logprob: -7.571864128112793
    10. ''était' → logprob: -7.821864128112793

Token 440: ' vrai' (ID: 42682)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.20215415954589844
    2. 'v' → logprob: -2.0771541595458984
    3. 's' → logprob: -3.7021541595458984
    4. 'True' → logprob: -4.452154159545898
    5. ' pas' → logprob: -5.327154159545898
    6. ' True' → logprob: -5.952154159545898
    7. 'respect' → logprob: -5.952154159545898
    8. 'n' → logprob: -6.327154159545898
    9. 'else' → logprob: -6.327154159545898
    10. 'true' → logprob: -6.577154159545898

Token 441: ' (' (ID: 350)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.26002055406570435
    2. ':' → logprob: -1.5100204944610596
    3. 'elif' → logprob: -4.885020732879639
    4. ' else' → logprob: -7.635020732879639
    5. ':
' → logprob: -12.01002025604248
    6. 'e' → logprob: -12.26002025604248
    7. ' elif' → logprob: -13.38502025604248
    8. ',' → logprob: -14.13502025604248
    9. '_else' → logprob: -14.38502025604248
    10. 'elser' → logprob: -14.76002025604248

Token 442: 'n' (ID: 77)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.29054123163223267
    2. 'elif' → logprob: -1.540541172027588
    3. ' else' → logprob: -4.290541172027588
    4. ')' → logprob: -4.790541172027588
    5. ':' → logprob: -4.790541172027588
    6. 'n' → logprob: -6.165541172027588
    7. ' n' → logprob: -6.165541172027588
    8. ' elif' → logprob: -6.540541172027588
    9. '):' → logprob: -7.165541172027588
    10. '):
' → logprob: -8.040541648864746

Token 443: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.389399915933609
    2. ' ==' → logprob: -1.1393998861312866
    3. '>' → logprob: -6.889400005340576
    4. '>=' → logprob: -7.889400005340576
    5. 'elif' → logprob: -8.014399528503418
    6. '=' → logprob: -8.389399528503418
    7. 'else' → logprob: -8.764399528503418
    8. ' >' → logprob: -9.014399528503418
    9. ' >=' → logprob: -9.139399528503418
    10. '!=' → logprob: -10.639399528503418

Token 444: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06362055242061615
    2. ' ' → logprob: -2.8136205673217773
    3. '4' → logprob: -7.063620567321777
    4. '1' → logprob: -7.188620567321777
    5. '0' → logprob: -10.813620567321777
    6. '3' → logprob: -11.563620567321777
    7. '   ' → logprob: -12.438620567321777
    8. '  ' → logprob: -12.938620567321777
    9. '```' → logprob: -14.063620567321777
    10. '
' → logprob: -14.313620567321777

Token 445: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008524148724973202
    2. '4' → logprob: -4.883523941040039
    3. '1' → logprob: -7.883523941040039
    4. ' ' → logprob: -7.883523941040039
    5. '3' → logprob: -9.008523941040039
    6. '0' → logprob: -10.258523941040039
    7. '-' → logprob: -12.883523941040039
    8. '5' → logprob: -13.883523941040039
    9. '   ' → logprob: -14.633523941040039
    10. '  ' → logprob: -15.008523941040039

Token 446: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22084325551986694
    2. '):' → logprob: -2.7208433151245117
    3. 'and' → logprob: -2.8458433151245117
    4. '),' → logprob: -3.3458433151245117
    5. ')' → logprob: -3.9708433151245117
    6. ' et' → logprob: -4.595843315124512
    7. 'elif' → logprob: -5.845843315124512
    8. 'et' → logprob: -6.095843315124512
    9. ',' → logprob: -6.345843315124512
    10. '):
' → logprob: -6.970843315124512

Token 447: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3534964621067047
    2. 'n' → logprob: -1.2284964323043823
    3. '4' → logprob: -5.728496551513672
    4. ' ' → logprob: -6.853496551513672
    5. '3' → logprob: -7.728496551513672
    6. 'elif' → logprob: -9.228496551513672
    7. '5' → logprob: -10.228496551513672
    8. '  ' → logprob: -10.478496551513672
    9. ' elif' → logprob: -10.603496551513672
    10. '   ' → logprob: -10.978496551513672

Token 448: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4045967161655426
    2. '==' → logprob: -1.2795966863632202
    3. ' !=' → logprob: -3.0295968055725098
    4. '!=' → logprob: -5.15459680557251
    5. '=' → logprob: -8.654596328735352
    6. 'elif' → logprob: -9.029596328735352
    7. ' ' → logprob: -9.529596328735352
    8. ')' → logprob: -10.154596328735352
    9. ' elif' → logprob: -10.654596328735352
    10. '>' → logprob: -11.279596328735352

Token 449: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2519359588623047
    2. ' ' → logprob: -1.5019359588623047
    3. '4' → logprob: -12.376935958862305
    4. '1' → logprob: -13.501935958862305
    5. '  ' → logprob: -14.751935958862305
    6. '   ' → logprob: -15.626935958862305
    7. ' ' → logprob: -15.876935958862305
    8. ')' → logprob: -16.439435958862305
    9. '0' → logprob: -16.689435958862305
    10. 's' → logprob: -16.689435958862305

Token 450: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.003032255917787552
    2. '4' → logprob: -6.128032207489014
    3. ' ' → logprob: -7.128032207489014
    4. '1' → logprob: -10.128032684326172
    5. '   ' → logprob: -13.878032684326172
    6. '```' → logprob: -14.003032684326172
    7. '5' → logprob: -14.065532684326172
    8. '  ' → logprob: -14.753032684326172
    9. '2' → logprob: -15.065532684326172
    10. '0' → logprob: -15.440532684326172

Token 451: '),
' (ID: 2313)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.035977791994810104
    2. ':' → logprob: -4.410977840423584
    3. '):
' → logprob: -4.535977840423584
    4. 'elif' → logprob: -5.160977840423584
    5. '),' → logprob: -5.535977840423584
    6. 'else' → logprob: -6.910977840423584
    7. ')' → logprob: -7.285977840423584
    8. ' and' → logprob: -8.285977363586426
    9. ' ):' → logprob: -8.285977363586426
    10. '):

' → logprob: -8.785977363586426

Token 452: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.011398515664041042
    2. 'elif' → logprob: -4.5113983154296875
    3. ':' → logprob: -8.136398315429688
    4. ' else' → logprob: -10.136398315429688
    5. 'for' → logprob: -12.011398315429688
    6. 'e' → logprob: -12.636398315429688
    7. '#' → logprob: -12.761398315429688
    8. 'els' → logprob: -13.386398315429688
    9. 'if' → logprob: -13.636398315429688
    10. 'el' → logprob: -13.761398315429688

Token 453: ' donc' (ID: 14206)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0743240937590599
    2. 'elif' → logprob: -3.074324131011963
    3. ':' → logprob: -3.699324131011963
    4. 'for' → logprob: -7.824324131011963
    5. 'if' → logprob: -9.199323654174805
    6. 'print' → logprob: -9.824323654174805
    7. ' else' → logprob: -9.949323654174805
    8. '   ' → logprob: -10.949323654174805
    9. '[' → logprob: -11.324323654174805
    10. 'e' → logprob: -11.449323654174805

Token 454: ' pour' (ID: 1930)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5880275368690491
    2. ' n' → logprob: -0.8380275368690491
    3. 'elif' → logprob: -4.838027477264404
    4. '   ' → logprob: -6.838027477264404
    5. 'else' → logprob: -7.213027477264404
    6. ':' → logprob: -7.338027477264404
    7. ' ' → logprob: -7.588027477264404
    8. '  ' → logprob: -7.963027477264404
    9. ' elif' → logprob: -8.213027954101562
    10. ' else' → logprob: -9.213027954101562

Token 455: ' tous' (ID: 10688)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4813181757926941
    2. ' n' → logprob: -0.9813181757926941
    3. ' ' → logprob: -5.98131799697876
    4. 'else' → logprob: -6.10631799697876
    5. 'elif' → logprob: -7.48131799697876
    6. '0' → logprob: -8.356318473815918
    7. '  ' → logprob: -8.606318473815918
    8. '1' → logprob: -8.606318473815918
    9. ' else' → logprob: -8.731318473815918
    10. '4' → logprob: -9.106318473815918

Token 456: ' les' (ID: 1341)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.3969860076904297
    2. 'else' → logprob: -1.5219860076904297
    3. ' n' → logprob: -1.7719860076904297
    4. ' autres' → logprob: -2.5219860076904297
    5. 'n' → logprob: -2.7719860076904297
    6. ' else' → logprob: -2.8969860076904297
    7. ' ' → logprob: -3.2719860076904297
    8. ' elif' → logprob: -3.3969860076904297
    9. 'e' → logprob: -4.02198600769043
    10. '  ' → logprob: -4.14698600769043

Token 457: ' autres' (ID: 18701)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19177964329719543
    2. ' autres' → logprob: -2.441779613494873
    3. ' n' → logprob: -2.941779613494873
    4. 'aut' → logprob: -4.316779613494873
    5. 'else' → logprob: -4.566779613494873
    6. 'elif' → logprob: -5.316779613494873
    7. ' other' → logprob: -6.566779613494873
    8. ' else' → logprob: -6.691779613494873
    9. 'other' → logprob: -6.941779613494873
    10. 'i' → logprob: -7.316779613494873

Token 458: ' cas' (ID: 2108)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003251508343964815
    2. 'else' → logprob: -5.878251552581787
    3. ' :' → logprob: -9.128251075744629
    4. 'elif' → logprob: -9.128251075744629
    5. 'n' → logprob: -9.253251075744629
    6. ':
' → logprob: -9.753251075744629
    7. ' else' → logprob: -10.628251075744629
    8. 's' → logprob: -11.253251075744629
    9. 'e' → logprob: -11.378251075744629
    10. ' cases' → logprob: -11.628251075744629

Token 459: ' où' (ID: 15113)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20325671136379242
    2. 'else' → logprob: -1.7032567262649536
    3. ':
' → logprob: -6.328256607055664
    4. 'elif' → logprob: -10.453256607055664
    5. ' else' → logprob: -10.578256607055664
    6. 'e' → logprob: -13.953256607055664
    7. ':

' → logprob: -14.578256607055664
    8. ' :' → logprob: -15.828256607055664
    9. '_else' → logprob: -16.453256607055664
    10. '```' → logprob: -16.453256607055664

Token 460: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09579067677259445
    2. ' n' → logprob: -2.5957906246185303
    3. '2' → logprob: -4.470790863037109
    4. '1' → logprob: -6.595790863037109
    5. '3' → logprob: -6.720790863037109
    6. '4' → logprob: -6.720790863037109
    7. ' ' → logprob: -7.220790863037109
    8. '5' → logprob: -8.22079086303711
    9. '   ' → logprob: -9.22079086303711
    10. '7' → logprob: -9.22079086303711

Token 461: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4098055064678192
    2. ' >=' → logprob: -1.4098055362701416
    3. '>' → logprob: -3.5348055362701416
    4. ' !=' → logprob: -3.9098055362701416
    5. ' <' → logprob: -3.9098055362701416
    6. '>=' → logprob: -4.4098052978515625
    7. ' <=' → logprob: -5.5348052978515625
    8. ' not' → logprob: -6.1598052978515625
    9. '!=' → logprob: -6.5348052978515625
    10. ' in' → logprob: -7.0348052978515625

Token 462: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5204182863235474
    2. '4' → logprob: -1.5204182863235474
    3. '3' → logprob: -2.020418167114258
    4. '1' → logprob: -3.395418167114258
    5. '0' → logprob: -4.770418167114258
    6. '2' → logprob: -5.020418167114258
    7. '=' → logprob: -5.145418167114258
    8. '  ' → logprob: -10.020418167114258
    9. ' =' → logprob: -11.395418167114258
    10. '   ' → logprob: -12.020418167114258

Token 463: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004592349752783775
    2. '0' → logprob: -5.629592418670654
    3. '4' → logprob: -7.379592418670654
    4. ' ' → logprob: -8.754591941833496
    5. '=' → logprob: -9.004591941833496
    6. '1' → logprob: -9.504591941833496
    7. '2' → logprob: -12.004591941833496
    8. '   ' → logprob: -13.004591941833496
    9. ' =' → logprob: -13.254591941833496
    10. '  ' → logprob: -14.629591941833496

Token 464: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004068395064678043
    2. ':
' → logprob: -8.125407218933105
    3. 'else' → logprob: -9.875407218933105
    4. 'elif' → logprob: -10.000407218933105
    5. ',' → logprob: -12.500407218933105
    6. ' and' → logprob: -12.625407218933105
    7. 'if' → logprob: -13.375407218933105
    8. 'and' → logprob: -13.375407218933105
    9. ' or' → logprob: -13.500407218933105
    10. ' :' → logprob: -14.375407218933105

Token 465: ' particulier' (ID: 47842)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.780760645866394
    2. ':' → logprob: -2.0307607650756836
    3. 't' → logprob: -2.0307607650756836
    4. 'tre' → logprob: -2.6557607650756836
    5. 'ter' → logprob: -3.1557607650756836
    6. 'core' → logprob: -3.4057607650756836
    7. 's' → logprob: -3.5307607650756836
    8. 'tr' → logprob: -4.530760765075684
    9. ' suite' → logprob: -4.905760765075684
    10. ' in' → logprob: -5.030760765075684

Token 466: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027350971940904856
    2. 'else' → logprob: -6.002735137939453
    3. 'elif' → logprob: -9.002735137939453
    4. ':
' → logprob: -9.002735137939453
    5. ' :' → logprob: -12.252735137939453
    6. ' else' → logprob: -12.502735137939453
    7. ',' → logprob: -13.502735137939453
    8. 'if' → logprob: -13.627735137939453
    9. 'e' → logprob: -14.127735137939453
    10. ':

' → logprob: -15.252735137939453

Token 467: 'else' (ID: 2807)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1611216962337494
    2. 'else' → logprob: -1.9111217260360718
    3. 'elif' → logprob: -7.536121845245361
    4. ':
' → logprob: -8.411121368408203
    5. 'for' → logprob: -10.286121368408203
    6. ' else' → logprob: -10.286121368408203
    7. '[' → logprob: -10.286121368408203
    8. 'e' → logprob: -11.411121368408203
    9. ' :' → logprob: -11.786121368408203
    10. '   ' → logprob: -12.286121368408203

Token 468: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00043460296001285315
    2. ':
' → logprob: -7.750434398651123
    3. ' :' → logprob: -12.875434875488281
    4. '   ' → logprob: -13.875434875488281
    5. '[' → logprob: -15.875434875488281
    6. ':
' → logprob: -16.12543487548828
    7. ':

' → logprob: -16.12543487548828
    8. ' :
' → logprob: -17.00043487548828
    9. ',' → logprob: -17.37543487548828
    10. ':list' → logprob: -18.50043487548828

Token 469: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025056155398488045
    2. '[' → logprob: -3.7750561237335205
    3. ' for' → logprob: -6.9000563621521
    4. ' [' → logprob: -7.7750563621521
    5. 'for' → logprob: -8.275055885314941
    6. ' print' → logprob: -9.775055885314941
    7. '   ' → logprob: -10.525055885314941
    8. 'print' → logprob: -10.900055885314941
    9. '```' → logprob: -11.150055885314941
    10. '	' → logprob: -13.650055885314941

Token 470: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18510156869888306
    2. 'for' → logprob: -1.8101015090942383
    3. '   ' → logprob: -5.810101509094238
    4. 's' → logprob: -7.185101509094238
    5. 'print' → logprob: -7.435101509094238
    6. '[s' → logprob: -8.185101509094238
    7. ' for' → logprob: -8.310101509094238
    8. ' [' → logprob: -9.185101509094238
    9. 'l' → logprob: -10.060101509094238
    10. 'if' → logprob: -10.185101509094238

Token 471: ' Util' (ID: 13564)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39651578664779663
    2. 'for' → logprob: -1.1465158462524414
    3. 'print' → logprob: -4.896515846252441
    4. 's' → logprob: -7.271515846252441
    5. 'if' → logprob: -7.896515846252441
    6. ' for' → logprob: -8.396515846252441
    7. '   ' → logprob: -8.646515846252441
    8. 'i' → logprob: -9.021515846252441
    9. '#' → logprob: -9.646515846252441
    10. 'l' → logprob: -9.896515846252441

Token 472: 'isation' (ID: 6993)
  Prédit: 'ise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.4259987473487854
    2. 'iser' → logprob: -1.8009986877441406
    3. 'er' → logprob: -2.4259986877441406
    4. 'ate' → logprob: -3.6759986877441406
    5. 'e' → logprob: -4.050998687744141
    6. 'isation' → logprob: -4.675998687744141
    7. '#' → logprob: -5.175998687744141
    8. 'print' → logprob: -5.300998687744141
    9. 'isez' → logprob: -5.300998687744141
    10. 'isateur' → logprob: -5.675998687744141

Token 473: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8220803141593933
    2. 'for' → logprob: -1.447080373764038
    3. ':' → logprob: -1.572080373764038
    4. ' for' → logprob: -2.447080373764038
    5. '[' → logprob: -5.072080135345459
    6. '    ' → logprob: -5.197080135345459
    7. ' n' → logprob: -5.572080135345459
    8. 'n' → logprob: -6.072080135345459
    9. 's' → logprob: -6.197080135345459
    10. ' s' → logprob: -6.447080135345459

Token 474: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8122446537017822
    2. 's' → logprob: -1.6872446537017822
    3. 'n' → logprob: -1.8122446537017822
    4. '[n' → logprob: -2.8122446537017822
    5. 'range' → logprob: -2.9372446537017822
    6. 'len' → logprob: -3.4372446537017822
    7. 'for' → logprob: -3.9372446537017822
    8. '[s' → logprob: -4.312244415283203
    9. '[' → logprob: -4.562244415283203
    10. ' n' → logprob: -4.687244415283203

Token 475: ' fonction' (ID: 17610)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2571338415145874
    2. 'print' → logprob: -2.007133960723877
    3. 'range' → logprob: -2.882133960723877
    4. 's' → logprob: -4.507133960723877
    5. 'len' → logprob: -4.757133960723877
    6. ' for' → logprob: -4.882133960723877
    7. 'n' → logprob: -5.632133960723877
    8. '[n' → logprob: -6.882133960723877
    9. 'enumer' → logprob: -7.007133960723877
    10. '
' → logprob: -7.507133960723877

Token 476: ' div' (ID: 4223)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.028573105111718178
    2. ' print' → logprob: -4.153573036193848
    3. 'for' → logprob: -4.778573036193848
    4. 's' → logprob: -6.028573036193848
    5. ' for' → logprob: -7.403573036193848
    6. 'range' → logprob: -7.653573036193848
    7. ' s' → logprob: -7.903573036193848
    8. ' range' → logprob: -9.903573036193848
    9. '[s' → logprob: -10.278573036193848
    10. 'n' → logprob: -10.653573036193848

Token 477: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3913677930831909
    2. 'ision' → logprob: -1.141367793083191
    3. 'isi' → logprob: -6.3913679122924805
    4. 'ise' → logprob: -7.1413679122924805
    5. 'is' → logprob: -7.6413679122924805
    6. '   ' → logprob: -8.01636791229248
    7. '#' → logprob: -8.51636791229248
    8. 'i' → logprob: -8.76636791229248
    9. 'e' → logprob: -9.01636791229248
    10. 'ide' → logprob: -9.39136791229248

Token 478: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004892042838037014
    2. '   ' → logprob: -6.504891872406006
    3. '(' → logprob: -6.754891872406006
    4. ' (' → logprob: -7.254891872406006
    5. 'div' → logprob: -7.379891872406006
    6. '(div' → logprob: -8.129892349243164
    7. ',' → logprob: -8.629892349243164
    8. ' =' → logprob: -8.754892349243164
    9. 'result' → logprob: -9.379892349243164
    10. '_result' → logprob: -9.879892349243164

Token 479: ' pour' (ID: 1930)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1403040587902069
    2. '   ' → logprob: -2.1403040885925293
    3. ',' → logprob: -5.015304088592529
    4. ' (' → logprob: -6.015304088592529
    5. 'result' → logprob: -6.890304088592529
    6. '(' → logprob: -7.265304088592529
    7. '(div' → logprob: -7.765304088592529
    8. '_result' → logprob: -7.890304088592529
    9. 'div' → logprob: -8.015303611755371
    10. ' =' → logprob: -8.390303611755371

Token 480: ' effectuer' (ID: 98625)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2305554151535034
    2. 'q' → logprob: -1.2305554151535034
    3. 'quot' → logprob: -1.9805554151535034
    4. 'div' → logprob: -2.355555534362793
    5. ' div' → logprob: -2.355555534362793
    6. ' n' → logprob: -3.230555534362793
    7. ' q' → logprob: -3.605555534362793
    8. ' quotient' → logprob: -4.980555534362793
    9. '   ' → logprob: -5.230555534362793
    10. 'd' → logprob: -6.230555534362793

Token 481: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5687822103500366
    2. 'div' → logprob: -1.1937822103500366
    3. ' div' → logprob: -2.818782329559326
    4. ' n' → logprob: -2.943782329559326
    5. '(n' → logprob: -4.193782329559326
    6. 'q' → logprob: -6.693782329559326
    7. 'quot' → logprob: -7.193782329559326
    8. '   ' → logprob: -7.818782329559326
    9. '(div' → logprob: -7.943782329559326
    10. ' (' → logprob: -8.818781852722168

Token 482: ' la' (ID: 557)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.23077715933322906
    2. ' div' → logprob: -2.1057772636413574
    3. 'n' → logprob: -3.1057772636413574
    4. '(n' → logprob: -3.6057772636413574
    5. ' n' → logprob: -4.855777263641357
    6. '   ' → logprob: -6.730777263641357
    7. '(div' → logprob: -6.855777263641357
    8. 'quot' → logprob: -6.980777263641357
    9. ',' → logprob: -7.980777263641357
    10. '7' → logprob: -8.6057767868042

Token 483: ' fois' (ID: 14697)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0260222889482975
    2. 'quot' → logprob: -4.276022434234619
    3. ' div' → logprob: -5.276022434234619
    4. 'n' → logprob: -6.151022434234619
    5. 'quo' → logprob: -6.276022434234619
    6. '#' → logprob: -7.276022434234619
    7. 'print' → logprob: -7.526022434234619
    8. ',' → logprob: -8.026021957397461
    9. 't' → logprob: -8.276021957397461
    10. '//' → logprob: -8.901021957397461

Token 484: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7192429304122925
    2. 'div' → logprob: -1.4692429304122925
    3. ' n' → logprob: -2.094243049621582
    4. '(n' → logprob: -2.219243049621582
    5. ' div' → logprob: -3.219243049621582
    6. 'division' → logprob: -5.594243049621582
    7. '   ' → logprob: -5.969243049621582
    8. 'quot' → logprob: -5.969243049621582
    9. '(div' → logprob: -7.719243049621582
    10. 'q' → logprob: -7.719243049621582

Token 485: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20573709905147552
    2. ' div' → logprob: -2.8307371139526367
    3. ' (' → logprob: -2.8307371139526367
    4. 'div' → logprob: -3.4557371139526367
    5. 'n' → logprob: -4.080737113952637
    6. ' n' → logprob: -4.205737113952637
    7. '(div' → logprob: -6.580737113952637
    8. 'quot' → logprob: -6.705737113952637
    9. '   ' → logprob: -6.955737113952637
    10. ',' → logprob: -8.580737113952637

Token 486: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5015450119972229
    2. ' n' → logprob: -1.0015449523925781
    3. '(n' → logprob: -4.126544952392578
    4. 'div' → logprob: -5.001544952392578
    5. ' div' → logprob: -6.001544952392578
    6. '   ' → logprob: -7.001544952392578
    7. ' (' → logprob: -8.501544952392578
    8. 'division' → logprob: -9.001544952392578
    9. 'quot' → logprob: -9.126544952392578
    10. ' division' → logprob: -9.751544952392578

Token 487: ' une' (ID: 2463)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10277944058179855
    2. ' n' → logprob: -3.1027793884277344
    3. 'div' → logprob: -3.2277793884277344
    4. ' div' → logprob: -5.477779388427734
    5. '(n' → logprob: -5.477779388427734
    6. 'quot' → logprob: -6.227779388427734
    7. '   ' → logprob: -6.477779388427734
    8. 'q' → logprob: -6.977779388427734
    9. ' q' → logprob: -10.102779388427734
    10. 'division' → logprob: -10.102779388427734

Token 488: ' division' (ID: 21629)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0429322719573975
    2. 'n' → logprob: -1.4179322719573975
    3. 'div' → logprob: -1.7929322719573975
    4. ' div' → logprob: -2.5429322719573975
    5. '(n' → logprob: -2.7929322719573975
    6. 'quot' → logprob: -3.0429322719573975
    7. ' division' → logprob: -3.4179322719573975
    8. ' quotient' → logprob: -4.792932510375977
    9. 'division' → logprob: -4.917932510375977
    10. 'quo' → logprob: -6.667932510375977

Token 489: ' entière' (ID: 61583)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0388827323913574
    2. 'quot' → logprob: -1.4138827323913574
    3. '(n' → logprob: -1.4138827323913574
    4. 'n' → logprob: -3.1638827323913574
    5. '   ' → logprob: -3.5388827323913574
    6. 'result' → logprob: -3.5388827323913574
    7. 'q' → logprob: -4.163882732391357
    8. 'et' → logprob: -4.288882732391357
    9. 's' → logprob: -5.538882732391357
    10. ' (' → logprob: -5.913882732391357

Token 490: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2665959298610687
    2. '(n' → logprob: -1.5165959596633911
    3. ' (' → logprob: -5.891595840454102
    4. ' ,' → logprob: -6.016595840454102
    5. 'n' → logprob: -6.016595840454102
    6. 'quot' → logprob: -6.141595840454102
    7. 's' → logprob: -6.641595840454102
    8. '(' → logprob: -7.516595840454102
    9. ' et' → logprob: -7.641595840454102
    10. '   ' → logprob: -7.766595840454102

Token 491: ' obtenir' (ID: 54423)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.9963416457176208
    2. ' une' → logprob: -1.1213417053222656
    3. ' un' → logprob: -1.7463417053222656
    4. ' modulo' → logprob: -2.8713417053222656
    5. ' modulus' → logprob: -3.6213417053222656
    6. 'un' → logprob: -4.246341705322266
    7. ' la' → logprob: -4.496341705322266
    8. 'une' → logprob: -4.871341705322266
    9. ' reste' → logprob: -6.371341705322266
    10. ' mod' → logprob: -6.371341705322266

Token 492: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1813308000564575
    2. ' n' → logprob: -1.3063308000564575
    3. '(n' → logprob: -1.3063308000564575
    4. 'quot' → logprob: -2.556330680847168
    5. 'div' → logprob: -4.056330680847168
    6. 'q' → logprob: -4.431330680847168
    7. ' (' → logprob: -4.806330680847168
    8. ' quotient' → logprob: -4.806330680847168
    9. ',' → logprob: -5.056330680847168
    10. '   ' → logprob: -5.306330680847168

Token 493: ' reste' (ID: 26769)
  Prédit: 'quot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quot' → logprob: -0.04309533163905144
    2. ' quotient' → logprob: -3.543095350265503
    3. ',' → logprob: -5.918095111846924
    4. 'n' → logprob: -6.168095111846924
    5. 'q' → logprob: -6.293095111846924
    6. ' reste' → logprob: -6.418095111846924
    7. 'div' → logprob: -6.543095111846924
    8. 'quo' → logprob: -7.168095111846924
    9. 'rest' → logprob: -7.293095111846924
    10. 'reste' → logprob: -7.418095111846924

Token 494: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7942241430282593
    2. '(n' → logprob: -0.7942241430282593
    3. '   ' → logprob: -2.669224262237549
    4. ' (' → logprob: -4.794224262237549
    5. 'quot' → logprob: -5.669224262237549
    6. ' ,' → logprob: -5.794224262237549
    7. 'result' → logprob: -5.794224262237549
    8. 'n' → logprob: -6.544224262237549
    9. 'div' → logprob: -6.669224262237549
    10. 'q' → logprob: -7.044224262237549

Token 495: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6925925016403198
    2. 'n' → logprob: -0.8175925016403198
    3. 'div' → logprob: -3.3175926208496094
    4. '(n' → logprob: -4.067592620849609
    5. ' div' → logprob: -5.442592620849609
    6. '(div' → logprob: -8.19259262084961
    7. ' (' → logprob: -9.31759262084961
    8. ' ' → logprob: -10.06759262084961
    9. ')n' → logprob: -10.81759262084961
    10. '(' → logprob: -11.06759262084961

Token 496: ' division' (ID: 21629)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.6013484597206116
    2. 'n' → logprob: -1.1013484001159668
    3. ' division' → logprob: -3.226348400115967
    4. ' n' → logprob: -3.476348400115967
    5. ' div' → logprob: -3.601348400115967
    6. 'division' → logprob: -3.851348400115967
    7. '(n' → logprob: -9.101348876953125
    8. 'quot' → logprob: -9.476348876953125
    9. ' ' → logprob: -9.726348876953125
    10. ' quotient' → logprob: -11.226348876953125

Token 497: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4026978015899658
    2. ' (' → logprob: -2.277697801589966
    3. '   ' → logprob: -2.402697801589966
    4. 'n' → logprob: -3.152697801589966
    5. ',' → logprob: -3.527697801589966
    6. ' n' → logprob: -3.902697801589966
    7. 'div' → logprob: -4.527697563171387
    8. 'quot' → logprob: -4.652697563171387
    9. ' div' → logprob: -5.527697563171387
    10. '(' → logprob: -5.527697563171387

Token 498: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01685309410095215
    2. ' n' → logprob: -4.141853332519531
    3. '(n' → logprob: -7.266853332519531
    4. 'div' → logprob: -9.516853332519531
    5. '   ' → logprob: -10.391853332519531
    6. ' div' → logprob: -12.141853332519531
    7. ' ' → logprob: -12.266853332519531
    8. '	n' → logprob: -13.391853332519531
    9. ' (' → logprob: -13.516853332519531
    10. '  ' → logprob: -14.391853332519531

Token 499: ' par' (ID: 686)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06134451925754547
    2. ',' → logprob: -2.936344623565674
    3. ' (' → logprob: -5.936344623565674
    4. '(' → logprob: -6.436344623565674
    5. ' ,' → logprob: -7.311344623565674
    6. '   ' → logprob: -7.686344623565674
    7. ' by' → logprob: -7.811344623565674
    8. ',n' → logprob: -9.186344146728516
    9. 'n' → logprob: -9.686344146728516
    10. ' ' → logprob: -9.686344146728516

Token 500: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.2703689634799957
    2. '3' → logprob: -2.145369052886963
    3. '2' → logprob: -2.270369052886963
    4. ' ' → logprob: -4.270369052886963
    5. 'len' → logprob: -7.020369052886963
    6. '6' → logprob: -7.395369052886963
    7. '7' → logprob: -7.520369052886963
    8. '5' → logprob: -7.895369052886963
    9. 'n' → logprob: -9.770368576049805
    10. '10' → logprob: -10.270368576049805

Token 501: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.09658555686473846
    2. '3' → logprob: -2.846585512161255
    3. '2' → logprob: -4.096585750579834
    4. 'len' → logprob: -4.471585750579834
    5. '6' → logprob: -5.846585750579834
    6. '5' → logprob: -6.721585750579834
    7. '7' → logprob: -7.096585750579834
    8. ' ' → logprob: -7.596585750579834
    9. '10' → logprob: -7.846585750579834
    10. ' len' → logprob: -9.971585273742676

Token 502: '.
' (ID: 558)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5295685529708862
    2. '   ' → logprob: -1.4045685529708862
    3. 'quot' → logprob: -2.904568672180176
    4. ' q' → logprob: -3.029568672180176
    5. '(q' → logprob: -3.779568672180176
    6. ',' → logprob: -4.029568672180176
    7. 'div' → logprob: -5.654568672180176
    8. '(n' → logprob: -5.779568672180176
    9. 'n' → logprob: -6.654568672180176
    10. '(' → logprob: -6.779568672180176

Token 503: '   ' (ID: 271)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3965180516242981
    2. ' q' → logprob: -1.5215179920196533
    3. '   ' → logprob: -3.0215179920196533
    4. 'k' → logprob: -3.6465179920196533
    5. ' k' → logprob: -4.521518230438232
    6. 'quot' → logprob: -4.896518230438232
    7. ' quotient' → logprob: -5.896518230438232
    8. 'i' → logprob: -6.271518230438232
    9. 'a' → logprob: -6.521518230438232
    10. ' i' → logprob: -6.521518230438232

Token 504: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.012829700484871864
    2. 'k' → logprob: -5.637829780578613
    3. 'quot' → logprob: -5.762829780578613
    4. ' q' → logprob: -6.012829780578613
    5. 'd' → logprob: -6.637829780578613
    6. '   ' → logprob: -7.387829780578613
    7. 'a' → logprob: -8.012829780578613
    8. 'div' → logprob: -8.262829780578613
    9. 't' → logprob: -8.512829780578613
    10. 'r' → logprob: -9.262829780578613

Token 505: ' div' (ID: 4223)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.010868002660572529
    2. 'k' → logprob: -5.510868072509766
    3. 'd' → logprob: -6.135868072509766
    4. 'quot' → logprob: -6.635868072509766
    5. 'a' → logprob: -6.760868072509766
    6. 'i' → logprob: -8.010868072509766
    7. 'div' → logprob: -8.135868072509766
    8. 't' → logprob: -8.760868072509766
    9. 'm' → logprob: -8.885868072509766
    10. 'x' → logprob: -9.010868072509766

Token 506: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -8.895480277715251e-06
    2. 'm' → logprob: -12.500008583068848
    3. ' mod' → logprob: -13.125008583068848
    4. '_mod' → logprob: -13.625008583068848
    5. '   ' → logprob: -14.375008583068848
    6. ',' → logprob: -14.625008583068848
    7. 'mode' → logprob: -16.000009536743164
    8. 'mods' → logprob: -16.000009536743164
    9. 'md' → logprob: -16.125009536743164
    10. 'mol' → logprob: -16.250009536743164

Token 507: '(n' (ID: 2406)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.7705914378166199
    2. '(n' → logprob: -1.1455914974212646
    3. '_val' → logprob: -2.2705914974212646
    4. '_' → logprob: -3.7705914974212646
    5. '_q' → logprob: -4.0205912590026855
    6. 'q' → logprob: -4.3955912590026855
    7. 'result' → logprob: -4.7705912590026855
    8. 'val' → logprob: -4.8955912590026855
    9. ' =' → logprob: -5.0205912590026855
    10. '_div' → logprob: -5.1455912590026855

Token 508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004563276655972004
    2. '(n' → logprob: -5.879563331604004
    3. ' ,' → logprob: -7.129563331604004
    4. '(' → logprob: -7.754563331604004
    5. ',n' → logprob: -8.129563331604004
    6. '4' → logprob: -9.379563331604004
    7. ')' → logprob: -9.629563331604004
    8. 'n' → logprob: -10.254563331604004
    9. 's' → logprob: -11.754563331604004
    10. ' (' → logprob: -12.254563331604004

Token 509: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0046249874867498875
    2. ' ' → logprob: -5.379624843597412
    3. ')' → logprob: -12.50462532043457
    4. '   ' → logprob: -14.62962532043457
    5. ' ' → logprob: -15.25462532043457
    6. '' → logprob: -15.87962532043457
    7. '  ' → logprob: -16.12962532043457
    8. '```' → logprob: -17.25462532043457
    9. '2' → logprob: -17.50462532043457
    10. '0' → logprob: -18.06712532043457

Token 510: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.273621405242011e-05
    2. ' ' → logprob: -10.375032424926758
    3. ')' → logprob: -13.625032424926758
    4. '   ' → logprob: -16.875032424926758
    5. '' → logprob: -17.250032424926758
    6. '```' → logprob: -17.250032424926758
    7. '2' → logprob: -17.625032424926758
    8. '3' → logprob: -18.000032424926758
    9. '  ' → logprob: -18.250032424926758
    10. '1' → logprob: -18.375032424926758

Token 511: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024643904180265963
    2. ')[' → logprob: -9.000246047973633
    3. ')
' → logprob: -9.625246047973633
    4. ' )' → logprob: -10.625246047973633
    5. ')`' → logprob: -10.625246047973633
    6. ')n' → logprob: -12.625246047973633
    7. ')
' → logprob: -14.125246047973633
    8. '(n' → logprob: -14.125246047973633
    9. '))' → logprob: -14.250246047973633
    10. ')

' → logprob: -14.375246047973633

Token 512: ' retourne' (ID: 178818)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5804717540740967
    2. ',' → logprob: -1.9554717540740967
    3. 'quot' → logprob: -2.7054717540740967
    4. 'div' → logprob: -2.8304717540740967
    5. 'quo' → logprob: -3.4554717540740967
    6. ':' → logprob: -4.080471992492676
    7. '   ' → logprob: -4.080471992492676
    8. 'returns' → logprob: -4.705471992492676
    9. '[' → logprob: -4.955471992492676
    10. '(n' → logprob: -4.955471992492676

Token 513: ' un' (ID: 537)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8782846927642822
    2. '(n' → logprob: -1.1282846927642822
    3. '(q' → logprob: -2.0032846927642822
    4. '(' → logprob: -2.1282846927642822
    5. '(qu' → logprob: -6.378284454345703
    6. ' q' → logprob: -7.378284454345703
    7. '(div' → logprob: -7.378284454345703
    8. 'q' → logprob: -7.378284454345703
    9. 'quot' → logprob: -7.628284454345703
    10. ' quotient' → logprob: -7.753284454345703

Token 514: ' tuple' (ID: 31311)
  Prédit: 'quot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quot' → logprob: -0.829538106918335
    2. '(' → logprob: -1.954538106918335
    3. 'tuple' → logprob: -1.954538106918335
    4. '(q' → logprob: -2.704538106918335
    5. ' (' → logprob: -2.954538106918335
    6. ' quotient' → logprob: -2.954538106918335
    7. ' tuple' → logprob: -3.079538106918335
    8. 'q' → logprob: -3.454538106918335
    9. '(tuple' → logprob: -3.954538106918335
    10. '(qu' → logprob: -4.829538345336914

Token 515: ' (' (ID: 350)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.6178615689277649
    2. '   ' → logprob: -1.7428615093231201
    3. '(' → logprob: -2.74286150932312
    4. 'q' → logprob: -3.11786150932312
    5. 'quot' → logprob: -3.49286150932312
    6. '(n' → logprob: -3.61786150932312
    7. ' (' → logprob: -3.61786150932312
    8. '(div' → logprob: -4.117861747741699
    9. '(a' → logprob: -4.492861747741699
    10. '(qu' → logprob: -4.742861747741699

Token 516: 'quot' (ID: 17555)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.042571112513542175
    2. 'n' → logprob: -3.9175710678100586
    3. ' q' → logprob: -4.542571067810059
    4. 'quot' → logprob: -5.417571067810059
    5. 'k' → logprob: -6.542571067810059
    6. 'div' → logprob: -6.792571067810059
    7. 'd' → logprob: -7.042571067810059
    8. ' n' → logprob: -7.042571067810059
    9. 'a' → logprob: -7.542571067810059
    10. '(n' → logprob: -7.792571067810059

Token 517: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.20150981843471527
    2. ',' → logprob: -1.7015098333358765
    3. ',i' → logprob: -10.826509475708008
    4. ' ,' → logprob: -11.076509475708008
    5. 'ien' → logprob: -11.701509475708008
    6. 'ent' → logprob: -11.701509475708008
    7. ',
' → logprob: -11.826509475708008
    8. 'i' → logprob: -12.201509475708008
    9. ',e' → logprob: -12.701509475708008
    10. 'ie' → logprob: -13.076509475708008

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044318195432424545
    2. ' ,' → logprob: -8.125443458557129
    3. ',q' → logprob: -10.000443458557129
    4. 'q' → logprob: -10.750443458557129
    5. ',
' → logprob: -10.875443458557129
    6. ',n' → logprob: -11.250443458557129
    7. 'quot' → logprob: -11.500443458557129
    8. 's' → logprob: -11.875443458557129
    9. '),' → logprob: -12.375443458557129
    10. ')' → logprob: -12.875443458557129

Token 519: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.30280616879463196
    2. ' reste' → logprob: -2.0528061389923096
    3. ' remainder' → logprob: -2.6778061389923096
    4. 're' → logprob: -3.0528061389923096
    5. 'rest' → logprob: -4.677806377410889
    6. 'r' → logprob: -5.302806377410889
    7. 'mod' → logprob: -6.427806377410889
    8. 'rem' → logprob: -8.30280590057373
    9. ' ' → logprob: -8.55280590057373
    10. ' rest' → logprob: -9.05280590057373

Token 520: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006736572831869125
    2. '),' → logprob: -6.006736755371094
    3. 'quot' → logprob: -6.881736755371094
    4. ',' → logprob: -7.006736755371094
    5. 'q' → logprob: -7.881736755371094
    6. ')=' → logprob: -8.131736755371094
    7. '(n' → logprob: -8.256736755371094
    8. ')
' → logprob: -8.756736755371094
    9. 'div' → logprob: -9.131736755371094
    10. '_q' → logprob: -9.131736755371094

Token 521: ' qui' (ID: 2780)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.14276723563671112
    2. ' q' → logprob: -2.5177671909332275
    3. 'quot' → logprob: -3.2677671909332275
    4. '   ' → logprob: -4.767767429351807
    5. ' quotient' → logprob: -6.517767429351807
    6. 'quo' → logprob: -7.267767429351807
    7. '(q' → logprob: -7.517767429351807
    8. 'r' → logprob: -7.767767429351807
    9. 'k' → logprob: -7.767767429351807
    10. 'div' → logprob: -8.267766952514648

Token 522: ' est' (ID: 893)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.8347032070159912
    2. 'quot' → logprob: -0.8347032070159912
    3. ' q' → logprob: -2.834703207015991
    4. 'quo' → logprob: -3.709703207015991
    5. ' quotient' → logprob: -4.08470344543457
    6. ' quot' → logprob: -4.83470344543457
    7. ',' → logprob: -5.95970344543457
    8. ' quo' → logprob: -6.08470344543457
    9. ' =' → logprob: -6.20970344543457
    10. 'div' → logprob: -6.33470344543457

Token 523: ' 
' (ID: 793)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1976870894432068
    2. ' q' → logprob: -2.5726871490478516
    3. 'quot' → logprob: -2.6976871490478516
    4. '   ' → logprob: -4.197687149047852
    5. ' quotient' → logprob: -5.197687149047852
    6. 'div' → logprob: -5.322687149047852
    7. '(' → logprob: -6.572687149047852
    8. ' div' → logprob: -6.822687149047852
    9. '(q' → logprob: -6.822687149047852
    10. ' (' → logprob: -7.072687149047852

Token 524: '   ' (ID: 271)
  Prédit: 'quot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quot' → logprob: -1.0588304996490479
    2. 'q' → logprob: -1.1838304996490479
    3. ' quotient' → logprob: -2.058830499649048
    4. ' q' → logprob: -2.558830499649048
    5. '   ' → logprob: -3.058830499649048
    6. ' quot' → logprob: -3.558830499649048
    7. ' (' → logprob: -4.308830261230469
    8. 'div' → logprob: -4.308830261230469
    9. '(' → logprob: -5.433830261230469
    10. ' div' → logprob: -5.433830261230469

Token 525: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.05165424197912216
    2. 'quot' → logprob: -3.92665433883667
    3. ' q' → logprob: -4.30165433883667
    4. '   ' → logprob: -5.55165433883667
    5. 'div' → logprob: -6.05165433883667
    6. 'k' → logprob: -6.42665433883667
    7. '(q' → logprob: -6.80165433883667
    8. 'd' → logprob: -6.92665433883667
    9. 'n' → logprob: -6.92665433883667
    10. 'a' → logprob: -7.17665433883667

Token 526: ' ici' (ID: 27994)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.19666390120983124
    2. 'quot' → logprob: -1.9466638565063477
    3. ' q' → logprob: -4.321663856506348
    4. '(' → logprob: -5.446663856506348
    5. ' quotient' → logprob: -5.446663856506348
    6. 'div' → logprob: -5.696663856506348
    7. '(q' → logprob: -5.696663856506348
    8. 'quo' → logprob: -6.821663856506348
    9. '   ' → logprob: -7.071663856506348
    10. 'k' → logprob: -7.446663856506348

Token 527: ',' (ID: 11)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.19837142527103424
    2. 'quot' → logprob: -2.448371410369873
    3. '   ' → logprob: -3.323371410369873
    4. ' q' → logprob: -3.573371410369873
    5. 'div' → logprob: -3.948371410369873
    6. ' div' → logprob: -6.073371410369873
    7. ' quotient' → logprob: -6.698371410369873
    8. 'quo' → logprob: -6.948371410369873
    9. ' quot' → logprob: -7.573371410369873
    10. '    
' → logprob: -7.948371410369873

Token 528: ' dé' (ID: 2393)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2247580587863922
    2. ' q' → logprob: -2.2247581481933594
    3. 'quot' → logprob: -3.4747581481933594
    4. ' quotient' → logprob: -3.8497581481933594
    5. '   ' → logprob: -4.474758148193359
    6. 'k' → logprob: -5.599758148193359
    7. 'i' → logprob: -5.974758148193359
    8. 'div' → logprob: -6.099758148193359
    9. ' div' → logprob: -6.412258148193359
    10. 'a' → logprob: -6.599758148193359

Token 529: 'compress' (ID: 69636)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4451003968715668
    2. 'com' → logprob: -1.5701004266738892
    3. 'comp' → logprob: -2.8201003074645996
    4. 'cal' → logprob: -4.0701003074646
    5. 'fin' → logprob: -4.5701003074646
    6. 'un' → logprob: -4.9451003074646
    7. 'pa' → logprob: -5.3201003074646
    8. 'u' → logprob: -5.4451003074646
    9. 'p' → logprob: -5.4451003074646
    10. 'q' → logprob: -5.6951003074646

Token 530: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0005620885640382767
    2. 'e' → logprob: -8.125561714172363
    3. '(' → logprob: -9.625561714172363
    4. 'ed' → logprob: -9.750561714172363
    5. 'ée' → logprob: -10.125561714172363
    6. 't' → logprob: -10.375561714172363
    7. 'ion' → logprob: -10.750561714172363
    8. 'té' → logprob: -11.750561714172363
    9. '=' → logprob: -12.500561714172363
    10. 'è' → logprob: -12.750561714172363

Token 531: ' en' (ID: 469)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0338166281580925
    2. '   ' → logprob: -4.408816814422607
    3. ' q' → logprob: -4.783816814422607
    4. '(q' → logprob: -5.658816814422607
    5. 'quot' → logprob: -5.783816814422607
    6. 'a' → logprob: -6.158816814422607
    7. ',' → logprob: -6.908816814422607
    8. 'k' → logprob: -7.283816814422607
    9. 'i' → logprob: -8.15881633758545
    10. 'd' → logprob: -8.28381633758545

Token 532: ' deux' (ID: 10301)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.08951939642429352
    2. 'quot' → logprob: -2.714519500732422
    3. ' q' → logprob: -5.589519500732422
    4. 'k' → logprob: -5.839519500732422
    5. 'a' → logprob: -6.464519500732422
    6. 'd' → logprob: -6.589519500732422
    7. 'i' → logprob: -6.589519500732422
    8. ' quotient' → logprob: -6.964519500732422
    9. 'quo' → logprob: -6.964519500732422
    10. 'quart' → logprob: -7.214519500732422

Token 533: ' variables' (ID: 13955)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03893747553229332
    2. ' q' → logprob: -4.163937568664551
    3. 'quot' → logprob: -4.163937568664551
    4. ',' → logprob: -6.413937568664551
    5. 'a' → logprob: -7.038937568664551
    6. 'k' → logprob: -7.163937568664551
    7. '   ' → logprob: -7.163937568664551
    8. 'i' → logprob: -7.788937568664551
    9. 'quo' → logprob: -7.788937568664551
    10. ' quotient' → logprob: -7.788937568664551

Token 534: ' :' (ID: 712)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10147137939929962
    2. 'quot' → logprob: -2.976471424102783
    3. ' q' → logprob: -3.601471424102783
    4. 'k' → logprob: -5.226471424102783
    5. '   ' → logprob: -5.851471424102783
    6. 'a' → logprob: -6.726471424102783
    7. '(q' → logprob: -6.726471424102783
    8. ' quotient' → logprob: -6.726471424102783
    9. 'i' → logprob: -6.976471424102783
    10. 'quo' → logprob: -6.976471424102783

Token 535: ' d' (ID: 272)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03656698763370514
    2. 'quot' → logprob: -4.536567211151123
    3. 'd' → logprob: -5.161567211151123
    4. 'a' → logprob: -5.161567211151123
    5. 'k' → logprob: -5.411567211151123
    6. 'i' → logprob: -6.286567211151123
    7. 'x' → logprob: -6.786567211151123
    8. ' q' → logprob: -6.911567211151123
    9. 'p' → logprob: -7.036567211151123
    10. 'div' → logprob: -7.036567211151123

Token 536: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013615436619147658
    2. 'iv' → logprob: -7.62636137008667
    3. ',d' → logprob: -8.251361846923828
    4. ',i' → logprob: -8.376361846923828
    5. ' ,' → logprob: -9.501361846923828
    6. ',q' → logprob: -9.751361846923828
    7. ',u' → logprob: -9.751361846923828
    8. ',v' → logprob: -10.251361846923828
    9. 'u' → logprob: -10.501361846923828
    10. ',e' → logprob: -10.626361846923828

Token 537: ' m' (ID: 284)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5231705904006958
    2. 'r' → logprob: -0.8981705904006958
    3. ' ' → logprob: -11.523170471191406
    4. 'm' → logprob: -11.523170471191406
    5. ' m' → logprob: -11.648170471191406
    6. '	r' → logprob: -12.898170471191406
    7. 'rest' → logprob: -12.898170471191406
    8. ' ' → logprob: -13.023170471191406
    9. 'q' → logprob: -13.148170471191406
    10. ' q' → logprob: -13.648170471191406

Token 538: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38718974590301514
    2. 'd' → logprob: -1.2621897459030151
    3. '=' → logprob: -4.012189865112305
    4. ' d' → logprob: -4.762189865112305
    5. '=d' → logprob: -5.637189865112305
    6. ',' → logprob: -5.887189865112305
    7. '   ' → logprob: -5.887189865112305
    8. '(d' → logprob: -6.387189865112305
    9. ',d' → logprob: -8.637189865112305
    10. ')' → logprob: -9.137189865112305

Token 539: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007699491921812296
    2. ' d' → logprob: -4.882699489593506
    3. '   ' → logprob: -9.632699966430664
    4. '(d' → logprob: -11.007699966430664
    5. ' (' → logprob: -12.757699966430664
    6. ' ' → logprob: -13.382699966430664
    7. '	d' → logprob: -13.632699966430664
    8. '(' → logprob: -13.757699966430664
    9. ',' → logprob: -13.757699966430664
    10. ' =' → logprob: -14.257699966430664

Token 540: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.00023250321100931615
    2. ' d' → logprob: -8.375232696533203
    3. '   ' → logprob: -13.875232696533203
    4. '(d' → logprob: -14.000232696533203
    5. '	d' → logprob: -17.000232696533203
    6. ' (' → logprob: -17.375232696533203
    7. ')d' → logprob: -17.625232696533203
    8. ' ' → logprob: -18.250232696533203
    9. '(' → logprob: -18.625232696533203
    10. '    
' → logprob: -18.625232696533203

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.015305552864447e-05
    2. ',m' → logprob: -10.000060081481934
    3. '=' → logprob: -11.750060081481934
    4. ' ,' → logprob: -12.250060081481934
    5. ',d' → logprob: -13.375060081481934
    6. ' =' → logprob: -15.375060081481934
    7. ',n' → logprob: -16.75006103515625
    8. ',
' → logprob: -17.50006103515625
    9. ',v' → logprob: -17.50006103515625
    10. 'm' → logprob: -18.12506103515625

Token 542: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3868725895881653
    2. 'm' → logprob: -1.1368725299835205
    3. ' ' → logprob: -13.761872291564941
    4. ' ' → logprob: -15.136872291564941
    5. ' =' → logprob: -16.011873245239258
    6. '	m' → logprob: -16.636873245239258
    7. '=' → logprob: -16.886873245239258
    8. 's' → logprob: -18.386873245239258
    9. ' ' → logprob: -18.511873245239258
    10. '<|end|>' → logprob: -18.511873245239258

Token 543: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193020701408386
    2. ' =' → logprob: -1.5019302368164062
    3. ')' → logprob: -14.251930236816406
    4. ',' → logprob: -15.251930236816406
    5. ' ' → logprob: -17.376930236816406
    6. ' ' → logprob: -17.376930236816406
    7. ')=' → logprob: -17.501930236816406
    8. ']' → logprob: -17.626930236816406
    9. '=
' → logprob: -17.626930236816406
    10. '.' → logprob: -18.001930236816406

Token 544: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.014163747429847717
    2. ' div' → logprob: -4.264163970947266
    3. '	div' → logprob: -15.639163970947266
    4. '   ' → logprob: -17.389163970947266
    5. '(div' → logprob: -18.139163970947266
    6. '<div' → logprob: -18.889163970947266
    7. ' ' → logprob: -19.389163970947266
    8. 'Div' → logprob: -20.764163970947266
    9. '  ' → logprob: -20.889163970947266
    10. '_div' → logprob: -21.014163970947266

Token 545: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.704273118884885e-07
    2. ' mod' → logprob: -15.125000953674316
    3. 'm' → logprob: -15.500000953674316
    4. 'n' → logprob: -16.625
    5. 'md' → logprob: -18.0
    6. '	mod' → logprob: -19.125
    7. '(n' → logprob: -19.375
    8. '_mod' → logprob: -19.375
    9. 'mid' → logprob: -19.625
    10. 'mode' → logprob: -19.75

Token 546: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.707997428951785e-05
    2. '(' → logprob: -9.500077247619629
    3. 'n' → logprob: -13.125077247619629
    4. ' (' → logprob: -16.375076293945312
    5. ' n' → logprob: -18.250076293945312
    6. '(
' → logprob: -18.750076293945312
    7. '	n' → logprob: -21.500076293945312
    8. ' ' → logprob: -22.500076293945312
    9. '_n' → logprob: -23.000076293945312
    10. ',n' → logprob: -23.000076293945312

Token 547: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011289127171039581
    2. ' ,' → logprob: -4.511289119720459
    3. '4' → logprob: -8.386289596557617
    4. ' ' → logprob: -11.636289596557617
    5. ')' → logprob: -13.261289596557617
    6. '   ' → logprob: -13.636289596557617
    7. '(' → logprob: -14.636289596557617
    8. ',
' → logprob: -15.511289596557617
    9. ',n' → logprob: -16.011289596557617
    10. 'd' → logprob: -16.136289596557617

Token 548: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0006271334132179618
    2. ' ' → logprob: -7.375627040863037
    3. '   ' → logprob: -14.625627517700195
    4. ')' → logprob: -17.250627517700195
    5. '```' → logprob: -18.375627517700195
    6. '' → logprob: -18.500627517700195
    7. '  ' → logprob: -18.500627517700195
    8. '٤' → logprob: -20.125627517700195
    9. '４' → logprob: -20.188127517700195
    10. '۴' → logprob: -20.563127517700195

Token 549: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.62501335144043
    4. ')' → logprob: -19.12501335144043
    5. '' → logprob: -19.37501335144043
    6. '```' → logprob: -20.25001335144043
    7. '４' → logprob: -20.62501335144043
    8. '  ' → logprob: -20.87501335144043
    9. '٤' → logprob: -20.87501335144043
    10. '۴' → logprob: -21.12501335144043

Token 550: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001589618914294988
    2. ')
' → logprob: -8.75015926361084
    3. ')

' → logprob: -14.87515926361084
    4. ' )' → logprob: -16.750158309936523
    5. ')
' → logprob: -16.875158309936523
    6. ')#' → logprob: -16.875158309936523
    7. ')`' → logprob: -18.625158309936523
    8. '   ' → logprob: -18.625158309936523
    9. '))' → logprob: -18.750158309936523
    10. '),' → logprob: -19.000158309936523

Token 551: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5627792477607727
    2. '   ' → logprob: -0.9377792477607727
    3. '    
' → logprob: -3.562779188156128
    4. '[' → logprob: -6.062779426574707
    5. 'for' → logprob: -6.312779426574707
    6. ' 
' → logprob: -7.187779426574707
    7. '
' → logprob: -7.312779426574707
    8. '  
' → logprob: -7.437779426574707
    9. 'print' → logprob: -7.437779426574707
    10. ' for' → logprob: -7.437779426574707

Token 552: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9126792550086975
    2. '   ' → logprob: -1.0376791954040527
    3. 'print' → logprob: -2.2876791954040527
    4. 'if' → logprob: -2.6626791954040527
    5. 'i' → logprob: -3.7876791954040527
    6. '#' (adapté à ' #') → logprob: -4.412679195404053
    7. 'result' → logprob: -4.787679195404053
    8. ' for' → logprob: -4.912679195404053
    9. 'r' → logprob: -5.662679195404053
    10. '    
' → logprob: -5.787679195404053

Token 553: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0533226877450943
    2. 'if' → logprob: -3.9283227920532227
    3. 'result' → logprob: -4.053322792053223
    4. 'print' → logprob: -5.303322792053223
    5. 'res' → logprob: -5.428322792053223
    6. 'r' → logprob: -6.178322792053223
    7. '#' → logprob: -6.678322792053223
    8. 'i' → logprob: -8.053322792053223
    9. 'p' → logprob: -8.678322792053223
    10. 'm' → logprob: -8.803322792053223

Token 554: ' décr' (ID: 123041)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7359522581100464
    2. 'for' → logprob: -1.1109522581100464
    3. 'print' → logprob: -2.360952377319336
    4. ' print' → logprob: -2.610952377319336
    5. '   ' → logprob: -4.360952377319336
    6. 'if' → logprob: -5.735952377319336
    7. '#' → logprob: -6.110952377319336
    8. ' if' → logprob: -6.235952377319336
    9. ' #' → logprob: -6.485952377319336
    10. 'p' → logprob: -8.360952377319336

Token 555: 'é' (ID: 377)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.7057790756225586
    2. 'it' → logprob: -0.9557790756225586
    3. 'oit' → logprob: -2.7057790756225586
    4. '#' → logprob: -3.4557790756225586
    5. 'ète' → logprob: -5.705779075622559
    6. '   ' → logprob: -5.955779075622559
    7. 'crit' → logprob: -6.580779075622559
    8. 'nit' → logprob: -6.705779075622559
    9. 'iv' → logprob: -7.080779075622559
    10. 'ete' → logprob: -7.205779075622559

Token 556: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.38769209384918213
    2. 'ment' → logprob: -1.1376920938491821
    3. 'mental' → logprob: -8.38769245147705
    4. 'mentation' → logprob: -8.88769245147705
    5. 'm' → logprob: -9.26269245147705
    6. 'ments' → logprob: -9.51269245147705
    7. 'mented' → logprob: -9.51269245147705
    8. 'mentar' → logprob: -9.88769245147705
    9. ' mente' → logprob: -10.26269245147705
    10. '#' → logprob: -11.01269245147705

Token 557: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03165670111775398
    2. ' d' → logprob: -3.5316567420959473
    3. '   ' → logprob: -6.406656742095947
    4. 'n' → logprob: -8.781656265258789
    5. ' n' → logprob: -10.156656265258789
    6. 'm' → logprob: -10.406656265258789
    7. 's' → logprob: -11.156656265258789
    8. '	d' → logprob: -12.281656265258789
    9. ' ' → logprob: -12.656656265258789
    10. ' m' → logprob: -12.656656265258789

Token 558: ' variable' (ID: 11076)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00487483898177743
    2. 'm' → logprob: -5.8798747062683105
    3. ' d' → logprob: -6.6298747062683105
    4. 'n' → logprob: -7.5048747062683105
    5. 'if' → logprob: -10.379875183105469
    6. ' m' → logprob: -10.629875183105469
    7. '   ' → logprob: -11.004875183105469
    8. 'print' → logprob: -11.129875183105469
    9. ' if' → logprob: -11.254875183105469
    10. ' variable' → logprob: -11.379875183105469

Token 559: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.009837429039180279
    2. ' d' → logprob: -4.634837627410889
    3. '   ' → logprob: -9.50983715057373
    4. 'n' → logprob: -12.75983715057373
    5. '	d' → logprob: -13.50983715057373
    6. 's' → logprob: -13.75983715057373
    7. 't' → logprob: -14.50983715057373
    8. 'm' → logprob: -14.88483715057373
    9. ' ' → logprob: -15.00983715057373
    10. ' n' → logprob: -15.88483715057373

Token 560: ' de' (ID: 334)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.33232876658439636
    2. '-=' → logprob: -1.3323287963867188
    3. '-' → logprob: -4.332328796386719
    4. '=' → logprob: -6.082328796386719
    5. '   ' → logprob: -6.582328796386719
    6. 'd' → logprob: -6.707328796386719
    7. ' d' → logprob: -7.957328796386719
    8. ' =' → logprob: -8.207328796386719
    9. ' -' → logprob: -8.832328796386719
    10. ' ' → logprob: -9.707328796386719

Token 561: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031808018684387207
    2. ' ' → logprob: -5.753180980682373
    3. '   ' → logprob: -13.628180503845215
    4. '2' → logprob: -14.378180503845215
    5. ' ' → logprob: -14.503180503845215
    6. 'd' → logprob: -14.753180503845215
    7. '-' → logprob: -16.12818145751953
    8. '  ' → logprob: -16.25318145751953
    9. 'un' → logprob: -16.75318145751953
    10. '3' → logprob: -17.37818145751953

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.4192871175473556e-05
    2. ' ' → logprob: -9.875054359436035
    3. '2' → logprob: -13.000054359436035
    4. '   ' → logprob: -15.250054359436035
    5. '-' → logprob: -17.00005340576172
    6. 'd' → logprob: -17.00005340576172
    7. '3' → logprob: -17.12505340576172
    8. '4' → logprob: -17.12505340576172
    9. '```' → logprob: -17.75005340576172
    10. 'un' → logprob: -17.87505340576172

Token 563: '.' (ID: 13)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.051209233701229095
    2. '   ' → logprob: -3.8012092113494873
    3. '
' → logprob: -4.301209449768066
    4. '<|end|>' → logprob: -4.426209449768066
    5. '    
' → logprob: -7.426209449768066
    6. '-' → logprob: -7.801209449768066
    7. '-d' → logprob: -8.676209449768066
    8. ' d' → logprob: -8.801209449768066
    9. '#' → logprob: -8.926209449768066
    10. ')' → logprob: -9.176209449768066

Token 564: ' Cela' (ID: 44403)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3873792886734009
    2. '   ' → logprob: -1.1373792886734009
    3. ' d' → logprob: -7.637379169464111
    4. '	d' → logprob: -10.88737964630127
    5. '
' → logprob: -12.63737964630127
    6. '  ' → logprob: -13.26237964630127
    7. ' ' → logprob: -13.76237964630127
    8. '    
' → logprob: -14.13737964630127
    9. '    ' → logprob: -15.76237964630127
    10. '.d' → logprob: -16.637378692626953

Token 565: ' équ' (ID: 18899)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18134406208992004
    2. ' d' → logprob: -1.9313440322875977
    3. '
' → logprob: -4.306344032287598
    4. '<|end|>' → logprob: -5.431344032287598
    5. '#' → logprob: -6.306344032287598
    6. ' is' → logprob: -8.806344032287598
    7. '.' → logprob: -8.806344032287598
    8. ')' → logprob: -9.306344032287598
    9. ' #' → logprob: -9.306344032287598
    10. ' =' → logprob: -9.556344032287598

Token 566: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.0015662844525650144
    2. 'd' → logprob: -7.126566410064697
    3. 'ival' → logprob: -8.126565933227539
    4. 'ivalent' → logprob: -8.751565933227539
    5. 'iva' → logprob: -9.751565933227539
    6. ' d' → logprob: -9.876565933227539
    7. 'i' → logprob: -10.001565933227539
    8. 'ale' → logprob: -10.251565933227539
    9. 'a' → logprob: -10.501565933227539
    10. '   ' → logprob: -10.751565933227539

Token 567: 'aut' (ID: 1828)
  Prédit: 'aut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.7011937499046326
    2. 'ale' → logprob: -1.5761938095092773
    3. 'a' → logprob: -1.7011938095092773
    4. 'd' → logprob: -3.2011938095092773
    5. 'al' → logprob: -3.3261938095092773
    6. 'aux' → logprob: -4.076193809509277
    7. 'e' → logprob: -4.326193809509277
    8. '#' → logprob: -6.076193809509277
    9. '   ' → logprob: -7.076193809509277
    10. 'ault' → logprob: -7.826193809509277

Token 568: ' à' (ID: 1221)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5518592596054077
    2. ' d' → logprob: -0.9268592596054077
    3. ' à' → logprob: -3.9268593788146973
    4. ' to' → logprob: -5.301859378814697
    5. '   ' → logprob: -6.301859378814697
    6. '=' → logprob: -7.301859378814697
    7. 'to' → logprob: -8.676858901977539
    8. 'à' → logprob: -8.801858901977539
    9. '	d' → logprob: -9.051858901977539
    10. ' ' → logprob: -9.176858901977539

Token 569: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11283167451620102
    2. ' d' → logprob: -2.2378315925598145
    3. '	d' → logprob: -12.612832069396973
    4. '   ' → logprob: -12.862832069396973
    5. ' ' → logprob: -13.237832069396973
    6. '```' → logprob: -15.237832069396973
    7. '  ' → logprob: -15.487832069396973
    8. ' ' → logprob: -15.612832069396973
    9. ' ' → logprob: -15.737832069396973
    10. '`' → logprob: -15.862832069396973

Token 570: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.10367555171251297
    2. '-=' → logprob: -2.353675603866577
    3. '=' → logprob: -6.353675365447998
    4. ' =' → logprob: -6.478675365447998
    5. '-' → logprob: -8.603675842285156
    6. ' -' → logprob: -12.978675842285156
    7. ' +=' → logprob: -14.353675842285156
    8. '+=' → logprob: -15.478675842285156
    9. ' ' → logprob: -15.603675842285156
    10. ' ' → logprob: -16.478675842285156

Token 571: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.126935675740242
    2. 'd' → logprob: -2.1269357204437256
    3. '	d' → logprob: -12.751935958862305
    4. ' ' → logprob: -13.126935958862305
    5. ' ' → logprob: -13.751935958862305
    6. '   ' → logprob: -14.126935958862305
    7. '1' → logprob: -15.376935958862305
    8. '-' → logprob: -15.501935958862305
    9. '  ' → logprob: -15.751935958862305
    10. '    ' → logprob: -16.126935958862305

Token 572: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03806685656309128
    2. '-' → logprob: -3.288066864013672
    3. 'd' → logprob: -11.413066864013672
    4. ' ' → logprob: -11.538066864013672
    5. ' ' → logprob: -13.413066864013672
    6. ' -=' → logprob: -13.788066864013672
    7. '1' → logprob: -14.538066864013672
    8. '   ' → logprob: -14.788066864013672
    9. ' d' → logprob: -15.038066864013672
    10. ')' → logprob: -15.413066864013672

Token 573: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00975868571549654
    2. ' ' → logprob: -4.634758472442627
    3. '   ' → logprob: -12.884758949279785
    4. ' ' → logprob: -16.13475799560547
    5. '  ' → logprob: -16.38475799560547
    6. '	' → logprob: -17.13475799560547
    7. '```' → logprob: -17.88475799560547
    8. '2' → logprob: -18.00975799560547
    9. '    ' → logprob: -18.00975799560547
    10. '' → logprob: -19.32225799560547

Token 574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007114782347343862
    2. ' ' → logprob: -7.250711441040039
    3. '   ' → logprob: -13.750711441040039
    4. '2' → logprob: -15.875711441040039
    5. '  ' → logprob: -16.00071144104004
    6. '```' → logprob: -16.00071144104004
    7. ' ' → logprob: -17.31321144104004
    8. '	' → logprob: -17.87571144104004
    9. '    ' → logprob: -18.12571144104004
    10. '4' → logprob: -18.31321144104004

Token 575: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6113045811653137
    2. 'd' → logprob: -1.486304521560669
    3. '<|end|>' → logprob: -1.486304521560669
    4. '
' → logprob: -6.111304759979248
    5. '<|end|>' → logprob: -7.361304759979248
    6. ' d' → logprob: -7.736304759979248
    7. '	d' → logprob: -7.736304759979248
    8. '    
' → logprob: -8.23630428314209
    9. ' ' → logprob: -8.36130428314209
    10. '  ' → logprob: -8.48630428314209

Token 576: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08446180075407028
    2. '   ' → logprob: -2.5844616889953613
    3. '
' → logprob: -5.834461688995361
    4. ' d' → logprob: -6.709461688995361
    5. '<|end|>' → logprob: -7.084461688995361
    6. '	d' → logprob: -7.834461688995361
    7. '    
' → logprob: -10.08446216583252
    8. '\' → logprob: -11.08446216583252
    9. '```' → logprob: -11.20946216583252
    10. ',d' → logprob: -11.20946216583252

Token 577: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0022801498416811228
    2. '   ' → logprob: -6.252280235290527
    3. ' d' → logprob: -8.002280235290527
    4. '	d' → logprob: -11.002280235290527
    5. ' ' → logprob: -16.75227928161621
    6. '  ' → logprob: -16.75227928161621
    7. '```' → logprob: -18.75227928161621
    8. '
' → logprob: -19.00227928161621
    9. '    
' → logprob: -19.12727928161621
    10. '.d' → logprob: -20.12727928161621

Token 578: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.10927451401948929
    2. '-=' → logprob: -2.3592746257781982
    3. '=' → logprob: -5.109274387359619
    4. ' =' → logprob: -5.859274387359619
    5. '-' → logprob: -8.984274864196777
    6. ' +=' → logprob: -12.484274864196777
    7. '+=' → logprob: -13.359274864196777
    8. ',' → logprob: -13.484274864196777
    9. ' ' → logprob: -15.359274864196777
    10. '   ' → logprob: -15.734274864196777

Token 579: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.250295639038086
    4. '	' → logprob: -20.125295639038086
    5. '  ' → logprob: -20.500295639038086
    6. '
' → logprob: -20.750295639038086
    7. '```' → logprob: -20.750295639038086
    8. '１' → logprob: -21.250295639038086
    9. '۱' → logprob: -21.625295639038086
    10. ' ' → logprob: -21.750295639038086

Token 580: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.12509536743164
    4. '  ' → logprob: -19.50009536743164
    5. '```' → logprob: -19.50009536743164
    6. '' → logprob: -19.75009536743164
    7. '１' → logprob: -19.87509536743164
    8. '	' → logprob: -20.00009536743164
    9. '۱' → logprob: -20.37509536743164
    10. '2' → logprob: -20.50009536743164

Token 581: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052430782467126846
    2. 'for' → logprob: -3.8024308681488037
    3. 'print' → logprob: -3.9274308681488037
    4. '
' → logprob: -5.802430629730225
    5. 'if' → logprob: -6.052430629730225
    6. '    
' → logprob: -6.677430629730225
    7. '#' → logprob: -7.302430629730225
    8. 's' → logprob: -7.802430629730225
    9. 'while' → logprob: -8.177431106567383
    10. ' for' → logprob: -8.427431106567383

Token 582: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22376316785812378
    2. 'print' → logprob: -2.0987632274627686
    3. 'if' → logprob: -3.2237632274627686
    4. 'for' → logprob: -3.7237632274627686
    5. '
' → logprob: -5.8487629890441895
    6. 'm' → logprob: -6.2237629890441895
    7. 's' → logprob: -6.3487629890441895
    8. '#' → logprob: -6.5987629890441895
    9. 'i' → logprob: -7.0987629890441895
    10. 'n' → logprob: -7.2237629890441895

Token 583: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7716678977012634
    2. '   ' → logprob: -1.7716679573059082
    3. 'if' → logprob: -2.146667957305908
    4. '#' (adapté à ' #') → logprob: -2.646667957305908
    5. 'print' → logprob: -2.646667957305908
    6. 'result' → logprob: -3.771667957305908
    7. 'r' → logprob: -3.896667957305908
    8. 'res' → logprob: -4.396667957305908
    9. 'p' → logprob: -4.521667957305908
    10. 'i' → logprob: -5.146667957305908

Token 584: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2890459895133972
    2. 'if' → logprob: -2.039046049118042
    3. 'print' → logprob: -2.914046049118042
    4. '#' → logprob: -3.914046049118042
    5. 'result' → logprob: -4.039045810699463
    6. 'res' → logprob: -5.164045810699463
    7. 'r' → logprob: -5.164045810699463
    8. 'i' → logprob: -5.539045810699463
    9. 'm' → logprob: -5.914045810699463
    10. 'd' → logprob: -6.414045810699463

Token 585: ' incr' (ID: 52395)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8716801404953003
    2. 'print' → logprob: -1.3716801404953003
    3. ' for' → logprob: -2.37168025970459
    4. 'for' → logprob: -2.62168025970459
    5. ' if' → logprob: -3.24668025970459
    6. 'm' → logprob: -3.87168025970459
    7. 'if' → logprob: -3.99668025970459
    8. ' m' → logprob: -3.99668025970459
    9. ' p' → logprob: -4.37168025970459
    10. 'p' → logprob: -4.37168025970459

Token 586: 'é' (ID: 377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.568653404712677
    2. 'ement' → logprob: -1.0686533451080322
    3. 'ément' → logprob: -3.0686533451080322
    4. 'm' → logprob: -3.8186533451080322
    5. 'é' → logprob: -4.943653583526611
    6. 'rement' → logprob: -6.068653583526611
    7. 'd' → logprob: -6.443653583526611
    8. '  ' → logprob: -6.568653583526611
    9. 'emente' → logprob: -6.568653583526611
    10. 'e' → logprob: -6.943653583526611

Token 587: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.071906179189682
    2. 'ment' → logprob: -2.696906089782715
    3. 'm' → logprob: -6.821906089782715
    4. 'ments' → logprob: -7.821906089782715
    5. 'mentation' → logprob: -8.821906089782715
    6. 'mented' → logprob: -9.071906089782715
    7. 'd' → logprob: -9.946906089782715
    8. 'mentar' → logprob: -10.571906089782715
    9. ' mente' → logprob: -10.821906089782715
    10. 'mental' → logprob: -10.946906089782715

Token 588: ' la' (ID: 557)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0935080274939537
    2. 'd' → logprob: -2.968508005142212
    3. ' m' → logprob: -3.343508005142212
    4. ' d' → logprob: -6.093508243560791
    5. 'n' → logprob: -9.343507766723633
    6. 's' → logprob: -9.718507766723633
    7. 'l' → logprob: -10.218507766723633
    8. '   ' → logprob: -10.218507766723633
    9. '	m' → logprob: -10.468507766723633
    10. ' ' → logprob: -10.843507766723633

Token 589: ' variable' (ID: 11076)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0025997955817729235
    2. 'd' → logprob: -6.752599716186523
    3. ' m' → logprob: -7.502599716186523
    4. 'variable' → logprob: -8.377599716186523
    5. 'if' → logprob: -8.752599716186523
    6. 'n' → logprob: -9.252599716186523
    7. 'for' → logprob: -9.252599716186523
    8. 'print' → logprob: -9.752599716186523
    9. ' variable' → logprob: -10.252599716186523
    10. 'i' → logprob: -10.377599716186523

Token 590: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.17168615758419037
    2. ' m' → logprob: -1.9216861724853516
    3. '   ' → logprob: -5.046686172485352
    4. 'd' → logprob: -5.546686172485352
    5. ' d' → logprob: -7.421686172485352
    6. 'n' → logprob: -8.171686172485352
    7. ' n' → logprob: -9.546686172485352
    8. '    ' → logprob: -10.546686172485352
    9. '	m' → logprob: -10.796686172485352
    10. ' ' → logprob: -10.796686172485352

Token 591: ' de' (ID: 334)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014198530465364456
    2. ' +=' → logprob: -4.264198303222656
    3. '+' → logprob: -11.139198303222656
    4. '   ' → logprob: -11.264198303222656
    5. '=' → logprob: -11.889198303222656
    6. ']+=' → logprob: -15.514198303222656
    7. ' ' → logprob: -15.764198303222656
    8. '1' → logprob: -15.764198303222656
    9. '  ' → logprob: -15.889198303222656
    10. '+="' → logprob: -16.889198303222656

Token 592: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008506194688379765
    2. ' ' → logprob: -5.2585062980651855
    3. '4' → logprob: -6.3835062980651855
    4. '2' → logprob: -6.8835062980651855
    5. '3' → logprob: -7.7585062980651855
    6. '   ' → logprob: -9.883505821228027
    7. '+' → logprob: -11.258505821228027
    8. '5' → logprob: -11.383505821228027
    9. '7' → logprob: -11.508505821228027
    10. '6' → logprob: -11.883505821228027

Token 593: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1908712238073349
    2. '3' → logprob: -2.565871238708496
    3. '2' → logprob: -2.815871238708496
    4. '4' → logprob: -3.440871238708496
    5. 'd' → logprob: -6.065871238708496
    6. ' ' → logprob: -7.190871238708496
    7. '5' → logprob: -7.690871238708496
    8. 'len' → logprob: -7.815871238708496
    9. '6' → logprob: -8.065871238708496
    10. '7' → logprob: -8.565871238708496

Token 594: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6464604735374451
    2. '+' → logprob: -0.8964604735374451
    3. ' +' → logprob: -3.02146053314209
    4. '+m' → logprob: -4.14646053314209
    5. 'm' → logprob: -6.77146053314209
    6. ' m' → logprob: -7.27146053314209
    7. '    
' → logprob: -8.14646053314209
    8. '+
' → logprob: -8.14646053314209
    9. '4' → logprob: -8.52146053314209
    10. ' +=' → logprob: -8.52146053314209

Token 595: ' ajust' (ID: 32650)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3968212604522705
    2. 'm' → logprob: -1.3968212604522705
    3. ' comp' → logprob: -3.3968212604522705
    4. ' obtenir' → logprob: -4.896821022033691
    5. ' garantir' → logprob: -5.021821022033691
    6. '   ' → logprob: -5.146821022033691
    7. ' pouvoir' → logprob: -5.396821022033691
    8. ' assurer' → logprob: -5.896821022033691
    9. ' éviter' → logprob: -6.271821022033691
    10. '#' → logprob: -6.521821022033691

Token 596: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0027089386712759733
    2. 'ment' → logprob: -6.377708911895752
    3. '   ' → logprob: -7.377708911895752
    4. 'ement' → logprob: -9.00270938873291
    5. 'm' → logprob: -9.37770938873291
    6. ' m' → logprob: -9.37770938873291
    7. 'enter' → logprob: -10.37770938873291
    8. '#' → logprob: -11.00270938873291
    9. 'ément' → logprob: -11.25270938873291
    10. '+' → logprob: -11.87770938873291

Token 597: ' le' (ID: 505)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.23200467228889465
    2. ' m' → logprob: -1.6070046424865723
    3. '4' → logprob: -5.357004642486572
    4. '   ' → logprob: -7.357004642486572
    5. ' the' → logprob: -7.607004642486572
    6. ' ' → logprob: -8.48200511932373
    7. 'the' → logprob: -9.35700511932373
    8. '    ' → logprob: -9.48200511932373
    9. 's' → logprob: -10.10700511932373
    10. '.' → logprob: -10.35700511932373

Token 598: ' reste' (ID: 26769)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.6147080063819885
    2. 'm' → logprob: -0.8647080063819885
    3. ' index' → logprob: -4.489707946777344
    4. 'index' → logprob: -5.614707946777344
    5. 'indice' → logprob: -5.614707946777344
    6. '   ' → logprob: -5.864707946777344
    7. '#' → logprob: -5.864707946777344
    8. ' value' → logprob: -6.239707946777344
    9. ' indice' → logprob: -6.489707946777344
    10. ' ' → logprob: -6.739707946777344

Token 599: '.
' (ID: 558)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5903283953666687
    2. '+' → logprob: -1.2153284549713135
    3. '   ' → logprob: -1.9653284549713135
    4. '    ' → logprob: -5.590328216552734
    5. '+m' → logprob: -6.215328216552734
    6. ' +=' → logprob: -6.340328216552734
    7. '<|end|>' → logprob: -7.840328216552734
    8. ' m' → logprob: -8.215328216552734
    9. ' ' → logprob: -8.465328216552734
    10. '+=' → logprob: -8.465328216552734

Token 600: '   ' (ID: 271)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4908965826034546
    2. '   ' → logprob: -0.9908965826034546
    3. ' m' → logprob: -4.115896701812744
    4. '+m' → logprob: -8.740896224975586
    5. '+' → logprob: -9.115896224975586
    6. '	m' → logprob: -9.740896224975586
    7. ' +' → logprob: -11.115896224975586
    8. '    
' → logprob: -11.865896224975586
    9. '  ' → logprob: -12.365896224975586
    10. ' ' → logprob: -12.365896224975586

Token 601: ' #' (ID: 1069)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05358124524354935
    2. ' m' → logprob: -3.0535812377929688
    3. '   ' → logprob: -5.303581237792969
    4. '	m' → logprob: -11.928581237792969
    5. ' ' → logprob: -14.428581237792969
    6. '  ' → logprob: -14.678581237792969
    7. '    ' → logprob: -17.30358123779297
    8. '+' → logprob: -18.05358123779297
    9. '+m' → logprob: -18.17858123779297
    10. '    
' → logprob: -18.67858123779297

Token 602: ' Cela' (ID: 44403)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005343805067241192
    2. '   ' → logprob: -5.255343914031982
    3. ' m' → logprob: -9.130343437194824
    4. '	m' → logprob: -13.505343437194824
    5. '  ' → logprob: -15.755343437194824
    6. ' ' → logprob: -16.25534439086914
    7. '    ' → logprob: -19.50534439086914
    8. '    
' → logprob: -19.75534439086914
    9. '```' → logprob: -20.63034439086914
    10. '       ' → logprob: -20.88034439086914

Token 603: ' correspond' (ID: 11095)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.39367955923080444
    2. '   ' → logprob: -1.6436796188354492
    3. '+=' → logprob: -2.268679618835449
    4. 'm' → logprob: -4.018679618835449
    5. ' m' → logprob: -4.643679618835449
    6. ' =' → logprob: -7.518679618835449
    7. '=' → logprob: -8.14367961883545
    8. '  ' → logprob: -9.39367961883545
    9. '    ' → logprob: -9.76867961883545
    10. ' ' → logprob: -10.14367961883545

Token 604: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.23820893466472626
    2. '=' → logprob: -2.1132090091705322
    3. ' =' → logprob: -3.1132090091705322
    4. '   ' → logprob: -3.7382090091705322
    5. ' a' → logprob: -5.113208770751953
    6. ' +=' → logprob: -5.113208770751953
    7. 'à' → logprob: -6.113208770751953
    8. ' m' → logprob: -6.238208770751953
    9. ' ' → logprob: -6.488208770751953
    10. ' to' → logprob: -6.613208770751953

Token 605: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12775075435638428
    2. ' m' → logprob: -2.127750873565674
    3. '   ' → logprob: -7.627750873565674
    4. '4' → logprob: -8.502750396728516
    5. '+' → logprob: -10.252750396728516
    6. ' ' → logprob: -10.627750396728516
    7. 's' → logprob: -10.877750396728516
    8. '	m' → logprob: -11.502750396728516
    9. '#' → logprob: -11.627750396728516
    10. 'd' → logprob: -11.877750396728516

Token 606: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1625625342130661
    2. '+=' → logprob: -1.9125624895095825
    3. ' =' → logprob: -6.662562370300293
    4. '=' → logprob: -7.162562370300293
    5. '+' → logprob: -8.662562370300293
    6. ' +' → logprob: -9.287562370300293
    7. ' -=' → logprob: -11.287562370300293
    8. '-=' → logprob: -13.412562370300293
    9. '   ' → logprob: -13.537562370300293
    10. ' ' → logprob: -14.662562370300293

Token 607: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6935021877288818
    2. ' m' → logprob: -0.6935021877288818
    3. '4' → logprob: -8.068502426147461
    4. ' ' → logprob: -10.568502426147461
    5. '   ' → logprob: -12.068502426147461
    6. '	m' → logprob: -12.818502426147461
    7. '+' → logprob: -13.193502426147461
    8. ' ' → logprob: -13.568502426147461
    9. 'n' → logprob: -13.943502426147461
    10. '  ' → logprob: -14.068502426147461

Token 608: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2016327977180481
    2. '+' → logprob: -1.7016327381134033
    3. ' ' → logprob: -8.701632499694824
    4. ' m' → logprob: -11.076632499694824
    5. '   ' → logprob: -11.201632499694824
    6. '+m' → logprob: -11.451632499694824
    7. 'm' → logprob: -12.076632499694824
    8. '  ' → logprob: -12.951632499694824
    9. ' plus' → logprob: -13.326632499694824
    10. ' +=' → logprob: -13.451632499694824

Token 609: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0067182136699557304
    2. ' ' → logprob: -5.006718158721924
    3. '1' → logprob: -13.631718635559082
    4. '   ' → logprob: -14.381718635559082
    5. ' m' → logprob: -15.131718635559082
    6. '  ' → logprob: -15.631718635559082
    7. '3' → logprob: -15.881718635559082
    8. 'm' → logprob: -16.006717681884766
    9. '```' → logprob: -16.006717681884766
    10. ' ' → logprob: -16.256717681884766

Token 610: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0013267839094623923
    2. ' ' → logprob: -6.626326560974121
    3. '   ' → logprob: -15.001326560974121
    4. '1' → logprob: -15.251326560974121
    5. '```' → logprob: -16.001327514648438
    6. 'm' → logprob: -16.938827514648438
    7. '  ' → logprob: -17.063827514648438
    8. '' → logprob: -17.251327514648438
    9. '`' → logprob: -17.313827514648438
    10. ' ' → logprob: -17.626327514648438

Token 611: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8394415378570557
    2. '<|end|>' → logprob: -0.8394415378570557
    3. 'm' → logprob: -2.4644415378570557
    4. ' m' → logprob: -4.089441299438477
    5. '+' → logprob: -4.464441299438477
    6. ')' → logprob: -5.214441299438477
    7. ' ' → logprob: -5.339441299438477
    8. '+m' → logprob: -6.214441299438477
    9. '
' → logprob: -6.339441299438477
    10. '  ' → logprob: -6.339441299438477

Token 612: '   ' (ID: 271)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6389159560203552
    2. '   ' → logprob: -0.7639159560203552
    3. '
' → logprob: -6.013916015625
    4. ' m' → logprob: -6.263916015625
    5. '    
' → logprob: -7.138916015625
    6. 's' → logprob: -7.388916015625
    7. '	m' → logprob: -9.013916015625
    8. 'd' → logprob: -9.638916015625
    9. 'print' → logprob: -10.138916015625
    10. '  ' → logprob: -10.138916015625

Token 613: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.017205730080604553
    2. '   ' → logprob: -4.142205715179443
    3. ' m' → logprob: -6.767205715179443
    4. '	m' → logprob: -11.642206192016602
    5. ' ' → logprob: -13.017206192016602
    6. '+' → logprob: -13.142206192016602
    7. '    
' → logprob: -13.142206192016602
    8. '  ' → logprob: -13.392206192016602
    9. '
' → logprob: -13.642206192016602
    10. '```' → logprob: -14.767206192016602

Token 614: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08078692853450775
    2. '=' → logprob: -3.205786943435669
    3. ' +=' → logprob: -3.330786943435669
    4. '+' → logprob: -6.70578670501709
    5. ' =' → logprob: -9.33078670501709
    6. ' +' → logprob: -13.95578670501709
    7. '   ' → logprob: -14.08078670501709
    8. '+='' → logprob: -14.08078670501709
    9. ']+=' → logprob: -14.58078670501709
    10. '+="' → logprob: -14.58078670501709

Token 615: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.004423943813890219
    2. ' ' → logprob: -5.629424095153809
    3. '1' → logprob: -7.504424095153809
    4. 'd' → logprob: -9.004424095153809
    5. '0' → logprob: -9.504424095153809
    6. '-' → logprob: -10.504424095153809
    7. '3' → logprob: -11.004424095153809
    8. 'm' → logprob: -11.379424095153809
    9. ' d' → logprob: -12.004424095153809
    10. '   ' → logprob: -12.754424095153809

Token 616: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00017624642350710928
    2. ' ' → logprob: -9.125176429748535
    3. '1' → logprob: -10.625176429748535
    4. '-' → logprob: -10.750176429748535
    5. 'd' → logprob: -11.625176429748535
    6. '0' → logprob: -11.875176429748535
    7. 'm' → logprob: -13.000176429748535
    8. '3' → logprob: -13.250176429748535
    9. 's' → logprob: -14.875176429748535
    10. ' -' → logprob: -15.687676429748535

Token 617: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06925781071186066
    2. 'for' → logprob: -3.3192577362060547
    3. 'print' → logprob: -3.5692577362060547
    4. '#' → logprob: -7.444257736206055
    5. 's' → logprob: -7.444257736206055
    6. 'if' → logprob: -7.694257736206055
    7. 'result' → logprob: -8.069257736206055
    8. '    
' → logprob: -8.319257736206055
    9. ' for' → logprob: -9.819257736206055
    10. 'p' → logprob: -9.944257736206055

Token 618: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6905449032783508
    2. 'print' → logprob: -0.8155449032783508
    3. 'if' → logprob: -3.690544843673706
    4. '   ' → logprob: -4.065545082092285
    5. ' for' → logprob: -5.690545082092285
    6. '#' → logprob: -6.190545082092285
    7. 's' → logprob: -6.565545082092285
    8. 'result' → logprob: -6.690545082092285
    9. 'r' → logprob: -6.940545082092285
    10. '[' → logprob: -7.315545082092285

Token 619: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10434115678071976
    2. '#' (adapté à ' #') → logprob: -2.4793412685394287
    3. 'if' → logprob: -5.22934103012085
    4. '   ' → logprob: -5.60434103012085
    5. 'print' → logprob: -6.10434103012085
    6. 'result' → logprob: -6.60434103012085
    7. 'r' → logprob: -7.60434103012085
    8. 'i' → logprob: -7.97934103012085
    9. 'while' → logprob: -7.97934103012085
    10. 'res' → logprob: -8.354341506958008

Token 620: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043192606419324875
    2. '#' → logprob: -3.9181926250457764
    3. 'result' → logprob: -5.043192386627197
    4. 'if' → logprob: -5.543192386627197
    5. 'print' → logprob: -5.918192386627197
    6. 'res' → logprob: -6.043192386627197
    7. 'r' → logprob: -6.168192386627197
    8. 'i' → logprob: -6.418192386627197
    9. 'm' → logprob: -7.418192386627197
    10. 'p' → logprob: -8.043192863464355

Token 621: ' effect' (ID: 3159)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4962834417819977
    2. 'print' → logprob: -1.4962834119796753
    3. ' for' → logprob: -2.246283531188965
    4. ' print' → logprob: -3.746283531188965
    5. '   ' → logprob: -3.996283531188965
    6. 'if' → logprob: -4.871283531188965
    7. '#' → logprob: -5.371283531188965
    8. ' #' → logprob: -6.871283531188965
    9. 'while' → logprob: -7.246283531188965
    10. ' if' → logprob: -7.246283531188965

Token 622: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.000998751842416823
    2. 'u' → logprob: -7.7509989738464355
    3. '   ' → logprob: -8.500998497009277
    4. 'uer' → logprob: -9.125998497009277
    5. 'uate' → logprob: -9.125998497009277
    6. 'ure' → logprob: -9.875998497009277
    7. '#' → logprob: -10.500998497009277
    8. 'ute' → logprob: -10.750998497009277
    9. 'uez' → logprob: -11.000998497009277
    10. 'ues' → logprob: -12.125998497009277

Token 623: ' une' (ID: 2463)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2128938436508179
    2. 'for' → logprob: -1.2128938436508179
    3. '   ' → logprob: -1.9628938436508179
    4. ' for' → logprob: -2.3378939628601074
    5. ' print' → logprob: -2.3378939628601074
    6. ' un' → logprob: -3.8378939628601074
    7. ' une' → logprob: -3.8378939628601074
    8. '#' → logprob: -4.212893962860107
    9. 'result' → logprob: -6.212893962860107
    10. 'un' → logprob: -6.212893962860107

Token 624: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.031348057091236115
    2. ' for' → logprob: -4.03134822845459
    3. 'print' → logprob: -4.40634822845459
    4. '#' → logprob: -8.40634822845459
    5. 'bou' → logprob: -8.78134822845459
    6. '   ' → logprob: -9.03134822845459
    7. 'while' → logprob: -9.40634822845459
    8. ' print' → logprob: -9.78134822845459
    9. 'range' → logprob: -9.90634822845459
    10. 'if' → logprob: -10.15634822845459

Token 625: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31821295619010925
    2. ' for' → logprob: -1.4432129859924316
    3. 'for' → logprob: -3.3182129859924316
    4. ' in' → logprob: -10.318212509155273
    5. '	for' → logprob: -10.318212509155273
    6. ' range' → logprob: -10.818212509155273
    7. 'range' → logprob: -10.818212509155273
    8. ' i' → logprob: -11.568212509155273
    9. ':' → logprob: -12.193212509155273
    10. '    ' → logprob: -12.193212509155273

Token 626: ',' (ID: 11)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6917232871055603
    2. ' for' → logprob: -1.191723346710205
    3. ' in' → logprob: -1.816723346710205
    4. '   ' → logprob: -4.191723346710205
    5. ' _' → logprob: -4.816723346710205
    6. 'for' → logprob: -5.566723346710205
    7. '_' → logprob: -6.566723346710205
    8. ' range' → logprob: -6.691723346710205
    9. ' en' → logprob: -6.941723346710205
    10. 'in' → logprob: -7.816723346710205

Token 627: ' index' (ID: 3472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04343689978122711
    2. ' for' → logprob: -3.7934370040893555
    3. 'for' → logprob: -3.9184370040893555
    4. ' range' → logprob: -10.043437004089355
    5. ' i' → logprob: -10.543437004089355
    6. 'range' → logprob: -11.043437004089355
    7. '    ' → logprob: -11.293437004089355
    8. '	for' → logprob: -11.668437004089355
    9. 'i' → logprob: -12.418437004089355
    10. '   ' → logprob: -13.793437004089355

Token 628: 'ée' (ID: 2894)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4789818823337555
    2. 'i' → logprob: -0.9789818525314331
    3. ' for' → logprob: -6.728981971740723
    4. ' in' → logprob: -6.728981971740723
    5. '   ' → logprob: -7.228981971740723
    6. 'e' → logprob: -7.228981971740723
    7. ' ' → logprob: -7.853981971740723
    8. 'for' → logprob: -8.603981971740723
    9. 'in' → logprob: -9.478981971740723
    10. ' _' → logprob: -9.853981971740723

Token 629: ' par' (ID: 686)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2223440557718277
    2. 'i' → logprob: -2.097344160079956
    3. ' in' → logprob: -2.847344160079956
    4. '   ' → logprob: -4.722343921661377
    5. '_' → logprob: -5.472343921661377
    6. 'in' → logprob: -6.722343921661377
    7. ' for' → logprob: -7.097343921661377
    8. ' range' → logprob: -7.097343921661377
    9. ' _' → logprob: -7.597343921661377
    10. '	i' → logprob: -7.597343921661377

Token 630: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09067388623952866
    2. ' i' → logprob: -2.7156739234924316
    3. '_' → logprob: -4.090673923492432
    4. '_i' → logprob: -6.715673923492432
    5. 'x' → logprob: -6.840673923492432
    6. 'k' → logprob: -7.840673923492432
    7. 'j' → logprob: -7.965673923492432
    8. ' _' → logprob: -8.340673446655273
    9. 'a' → logprob: -9.840673446655273
    10. 'range' → logprob: -9.965673446655273

Token 631: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04707856476306915
    2. '_' → logprob: -3.9220786094665527
    3. '_i' → logprob: -4.547078609466553
    4. 'j' → logprob: -5.297078609466553
    5. ' i' → logprob: -5.297078609466553
    6. 'k' → logprob: -6.172078609466553
    7. 'x' → logprob: -6.797078609466553
    8. 'a' → logprob: -8.297078132629395
    9. ' _' → logprob: -8.422078132629395
    10. 'y' → logprob: -8.422078132629395

Token 632: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09098456054925919
    2. 'in' → logprob: -2.465984582901001
    3. ',' → logprob: -6.715984344482422
    4. 'range' → logprob: -7.715984344482422
    5. '   ' → logprob: -9.215984344482422
    6. ' ' → logprob: -9.340984344482422
    7. ')' → logprob: -10.715984344482422
    8. ' en' → logprob: -10.715984344482422
    9. ' range' → logprob: -11.215984344482422
    10. 'en' → logprob: -11.215984344482422

Token 633: ' allant' (ID: 122150)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23375755548477173
    2. ' for' → logprob: -2.483757495880127
    3. 'for' → logprob: -2.733757495880127
    4. ' in' → logprob: -3.358757495880127
    5. 'in' → logprob: -3.733757495880127
    6. ',' → logprob: -7.358757495880127
    7. 'range' → logprob: -8.358757972717285
    8. ' range' → logprob: -8.858757972717285
    9. ' =' → logprob: -9.108757972717285
    10. '    ' → logprob: -9.858757972717285

Token 634: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28496724367141724
    2. 'in' → logprob: -1.4099671840667725
    3. 'range' → logprob: -6.159967422485352
    4. ' range' → logprob: -7.409967422485352
    5. 'from' → logprob: -7.534967422485352
    6. 'en' → logprob: -8.909967422485352
    7. '   ' → logprob: -8.909967422485352
    8. ' en' → logprob: -9.409967422485352
    9. 'de' → logprob: -9.409967422485352
    10. ' de' → logprob: -9.659967422485352

Token 635: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008599330671131611
    2. ' ' → logprob: -5.258599281311035
    3. ' range' → logprob: -6.633599281311035
    4. 'range' → logprob: -6.758599281311035
    5. 'd' → logprob: -7.383599281311035
    6. '4' → logprob: -9.133599281311035
    7. '1' → logprob: -9.383599281311035
    8. ' d' → logprob: -10.133599281311035
    9. '   ' → logprob: -11.133599281311035
    10. '2' → logprob: -13.133599281311035

Token 636: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001494153286330402
    2. 'd' → logprob: -6.75149393081665
    3. ' ' → logprob: -9.001494407653809
    4. 'range' → logprob: -9.251494407653809
    5. '1' → logprob: -9.876494407653809
    6. '4' → logprob: -10.251494407653809
    7. ' range' → logprob: -12.001494407653809
    8. ' d' → logprob: -12.876494407653809
    9. '(' → logprob: -12.876494407653809
    10. '2' → logprob: -13.251494407653809

Token 637: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9763511419296265
    2. ' to' → logprob: -1.7263511419296265
    3. ' jusqu' → logprob: -2.476351261138916
    4. '   ' → logprob: -2.601351261138916
    5. 'to' → logprob: -2.851351261138916
    6. '    ' → logprob: -2.851351261138916
    7. ',' → logprob: -2.976351261138916
    8. 'import' → logprob: -3.476351261138916
    9. ' jusque' → logprob: -3.601351261138916
    10. 'd' → logprob: -4.476351261138916

Token 638: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12058613449335098
    2. ' d' → logprob: -2.7455861568450928
    3. 'm' → logprob: -3.9955861568450928
    4. '4' → logprob: -4.245585918426514
    5. ' m' → logprob: -5.495585918426514
    6. 'n' → logprob: -5.495585918426514
    7. '3' → logprob: -5.495585918426514
    8. ' n' → logprob: -6.370585918426514
    9. ' ' → logprob: -6.745585918426514
    10. '5' → logprob: -7.995585918426514

Token 639: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20565257966518402
    2. ' +' → logprob: -1.8306525945663452
    3. ':' → logprob: -4.830652713775635
    4. '   ' → logprob: -4.955652713775635
    5. 'for' → logprob: -5.080652713775635
    6. 'range' → logprob: -5.705652713775635
    7. ' range' → logprob: -8.080652236938477
    8. ' for' → logprob: -8.330652236938477
    9. ' in' → logprob: -9.205652236938477
    10. 'in' → logprob: -9.705652236938477

Token 640: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9451807141304016
    2. ':' → logprob: -1.4451806545257568
    3. ' +' → logprob: -2.820180654525757
    4. '1' → logprob: -2.945180654525757
    5. ' ' → logprob: -3.070180654525757
    6. ')' → logprob: -3.195180654525757
    7. '   ' → logprob: -3.195180654525757
    8. 'range' → logprob: -3.445180654525757
    9. ' range' → logprob: -3.570180654525757
    10. ' :' → logprob: -4.320180892944336

Token 641: ' inclus' (ID: 11891)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22758370637893677
    2. 'for' → logprob: -1.727583646774292
    3. ' for' → logprob: -3.727583646774292
    4. ':' → logprob: -6.852583885192871
    5. ':
' → logprob: -7.852583885192871
    6. '	for' → logprob: -8.227583885192871
    7. '
' → logprob: -10.852583885192871
    8. '    
' → logprob: -11.602583885192871
    9. '```' → logprob: -11.727583885192871
    10. ',' → logprob: -11.852583885192871

Token 642: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09026879072189331
    2. ':' → logprob: -2.965268850326538
    3. 'for' → logprob: -3.590268850326538
    4. ':
' → logprob: -5.215268611907959
    5. ' for' → logprob: -6.715268611907959
    6. '	for' → logprob: -8.840269088745117
    7. '
' → logprob: -9.215269088745117
    8. '    
' → logprob: -9.715269088745117
    9. ',' → logprob: -9.840269088745117
    10. '[i' → logprob: -10.090269088745117

Token 643: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1874646246433258
    2. 'for' → logprob: -1.8124645948410034
    3. ' for' → logprob: -4.937464714050293
    4. '	for' → logprob: -8.437464714050293
    5. 'print' → logprob: -8.687464714050293
    6. 'i' → logprob: -9.187464714050293
    7. ' i' → logprob: -11.437464714050293
    8. '```' → logprob: -12.312464714050293
    9. '       ' → logprob: -12.562464714050293
    10. ':' → logprob: -13.187464714050293

Token 644: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6589697003364563
    2. 'for' → logprob: -0.7839697003364563
    3. ' for' → logprob: -3.6589696407318115
    4. '	for' → logprob: -9.15896987915039
    5. '```' → logprob: -9.53396987915039
    6. 'i' → logprob: -10.15896987915039
    7. '    
' → logprob: -10.78396987915039
    8. '
' → logprob: -11.40896987915039
    9. ' i' → logprob: -12.40896987915039
    10. ':' → logprob: -12.78396987915039

Token 645: ' range' (ID: 3352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6589542031288147
    2. 'for' → logprob: -0.9089542031288147
    3. ' for' → logprob: -2.53395414352417
    4. 'i' → logprob: -9.283954620361328
    5. ' i' → logprob: -9.283954620361328
    6. 'print' → logprob: -9.533954620361328
    7. '	for' → logprob: -10.158954620361328
    8. ' print' → logprob: -11.533954620361328
    9. '       ' → logprob: -12.658954620361328
    10. ' ' → logprob: -13.283954620361328

Token 646: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.001933992956764996
    2. '(' → logprob: -6.251934051513672
    3. '(m' → logprob: -13.376934051513672
    4. '(
' → logprob: -14.001934051513672
    5. '(i' → logprob: -14.001934051513672
    6. '(n' → logprob: -14.251934051513672
    7. ' (' → logprob: -14.376934051513672
    8. '(range' → logprob: -15.001934051513672
    9. 'd' → logprob: -15.126934051513672
    10. '((' → logprob: -15.876934051513672

Token 647: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.053963083773851395
    2. '):
' → logprob: -3.4289631843566895
    3. ')' → logprob: -3.9289631843566895
    4. '+' → logprob: -8.303962707519531
    5. ' ):' → logprob: -9.678962707519531
    6. '   ' → logprob: -10.053962707519531
    7. 'd' → logprob: -11.053962707519531
    8. '):
' → logprob: -11.178962707519531
    9. '-' → logprob: -11.303962707519531
    10. ':' → logprob: -11.428962707519531

Token 648: ' gén' (ID: 15330)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01113625057041645
    2. ':
' → logprob: -4.636136054992676
    3. '   ' → logprob: -7.136136054992676
    4. 'for' → logprob: -7.636136054992676
    5. ' for' → logprob: -9.886136054992676
    6. '):' → logprob: -10.636136054992676
    7. ' :' → logprob: -12.011136054992676
    8. '[' → logprob: -12.636136054992676
    9. '[i' → logprob: -12.761136054992676
    10. '       ' → logprob: -12.761136054992676

Token 649: 'ère' (ID: 4346)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4498477578163147
    2. 'er' → logprob: -1.82484769821167
    3. 'enerate' → logprob: -2.07484769821167
    4. '=' → logprob: -3.82484769821167
    5. 'enerated' → logprob: -4.94984769821167
    6. '(range' → logprob: -4.94984769821167
    7. 'érer' → logprob: -5.07484769821167
    8. 'en' → logprob: -5.19984769821167
    9. 'ner' → logprob: -5.44984769821167
    10. '#' → logprob: -5.44984769821167

Token 650: ' une' (ID: 2463)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5235949754714966
    2. ' d' → logprob: -1.0235949754714966
    3. '(d' → logprob: -3.148594856262207
    4. ' range' → logprob: -6.148594856262207
    5. '(' → logprob: -6.523594856262207
    6. 'range' → logprob: -7.398594856262207
    7. '   ' → logprob: -8.148594856262207
    8. ' (' → logprob: -8.523594856262207
    9. 'i' → logprob: -8.648594856262207
    10. ')' → logprob: -8.898594856262207

Token 651: ' sé' (ID: 7462)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2871432900428772
    2. ' range' → logprob: -1.4121432304382324
    3. 'd' → logprob: -6.287143230438232
    4. 'for' → logprob: -6.537143230438232
    5. ' for' → logprob: -7.412143230438232
    6. ' d' → logprob: -7.662143230438232
    7. '   ' → logprob: -7.912143230438232
    8. ')' → logprob: -7.912143230438232
    9. ' ' → logprob: -8.28714370727539
    10. ' sequence' → logprob: -8.41214370727539

Token 652: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.025146014988422394
    2. 'ries' → logprob: -4.275146007537842
    3. 'rie' → logprob: -4.525146007537842
    4. 'QUENCE' → logprob: -10.150146484375
    5. 'quences' → logprob: -11.025146484375
    6. 'q' → logprob: -11.150146484375
    7. 'range' → logprob: -12.025146484375
    8. 'r' → logprob: -12.275146484375
    9. 'qu' → logprob: -13.150146484375
    10. 'rence' → logprob: -13.525146484375

Token 653: ' de' (ID: 334)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00730145676061511
    2. '(' → logprob: -5.007301330566406
    3. '(range' → logprob: -7.757301330566406
    4. '(n' → logprob: -10.132301330566406
    5. '(i' → logprob: -10.257301330566406
    6. '(m' → logprob: -10.632301330566406
    7. 'd' → logprob: -11.132301330566406
    8. 'range' → logprob: -11.507301330566406
    9. ':' → logprob: -11.632301330566406
    10. ' range' → logprob: -11.882301330566406

Token 654: ' valeurs' (ID: 73668)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08558475971221924
    2. ' d' → logprob: -2.5855846405029297
    3. 'i' → logprob: -5.58558464050293
    4. ' i' → logprob: -6.58558464050293
    5. 'range' → logprob: -7.33558464050293
    6. ' range' → logprob: -7.71058464050293
    7. '4' → logprob: -8.46058464050293
    8. '0' → logprob: -9.71058464050293
    9. ' ' → logprob: -9.83558464050293
    10. '1' → logprob: -10.08558464050293

Token 655: ' ent' (ID: 1121)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.38877958059310913
    2. '   ' → logprob: -2.388779640197754
    3. '(d' → logprob: -2.388779640197754
    4. '(' → logprob: -2.763779640197754
    5. 'for' → logprob: -3.263779640197754
    6. ':' → logprob: -4.513779640197754
    7. ' for' → logprob: -4.513779640197754
    8. '(n' → logprob: -5.263779640197754
    9. '(range' → logprob: -5.513779640197754
    10. 'range' → logprob: -6.513779640197754

Token 656: 'ières' (ID: 44864)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.38205769658088684
    2. '   ' → logprob: -1.3820576667785645
    3. '```' → logprob: -3.8820576667785645
    4. 'range' → logprob: -4.1320576667785645
    5. 'd' → logprob: -5.2570576667785645
    6. 'g' → logprob: -5.2570576667785645
    7. '       ' → logprob: -5.3820576667785645
    8. 'e' → logprob: -6.0070576667785645
    9. 'ger' → logprob: -6.1320576667785645
    10. ' ' → logprob: -6.6320576667785645

Token 657: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5765782594680786
    2. '(d' → logprob: -1.5765782594680786
    3. '(i' → logprob: -2.576578140258789
    4. '   ' → logprob: -2.701578140258789
    5. ':' → logprob: -2.826578140258789
    6. '(range' → logprob: -4.326578140258789
    7. ' :' → logprob: -5.451578140258789
    8. ' (' → logprob: -5.826578140258789
    9. '(m' → logprob: -5.951578140258789
    10. '(n' → logprob: -5.951578140258789

Token 658: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08047988265752792
    2. 'i' → logprob: -2.705479860305786
    3. ' i' → logprob: -5.330480098724365
    4. 'range' → logprob: -5.830480098724365
    5. 'd' → logprob: -6.705480098724365
    6. ' ' → logprob: -7.080480098724365
    7. ' range' → logprob: -7.455480098724365
    8. ' d' → logprob: -10.205479621887207
    9. '4' → logprob: -10.830479621887207
    10. '   ' → logprob: -12.080479621887207

Token 659: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01435024756938219
    2. 'd' → logprob: -4.264350414276123
    3. 'i' → logprob: -9.014349937438965
    4. 'range' → logprob: -10.014349937438965
    5. ' ' → logprob: -11.264349937438965
    6. ' d' → logprob: -12.014349937438965
    7. ' i' → logprob: -14.139349937438965
    8. ' range' → logprob: -14.889349937438965
    9. '```' → logprob: -16.38935089111328
    10. '4' → logprob: -16.76435089111328

Token 660: ' inclus' (ID: 11891)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7159396409988403
    2. ':' → logprob: -1.3409396409988403
    3. ',' → logprob: -2.715939521789551
    4. '   ' → logprob: -2.840939521789551
    5. ')' → logprob: -3.590939521789551
    6. ',d' → logprob: -3.590939521789551
    7. ' d' → logprob: -3.965939521789551
    8. 'for' → logprob: -4.590939521789551
    9. 'd' → logprob: -4.965939521789551
    10. ' for' → logprob: -5.340939521789551

Token 661: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0481300912797451
    2. '   ' → logprob: -3.6731300354003906
    3. ')' → logprob: -5.423130035400391
    4. ' ,' → logprob: -5.423130035400391
    5. ' à' → logprob: -5.423130035400391
    6. ' jusqu' → logprob: -5.548130035400391
    7. ',d' → logprob: -6.298130035400391
    8. ' to' → logprob: -7.423130035400391
    9. '),' → logprob: -7.923130035400391
    10. ' d' → logprob: -8.04813003540039

Token 662: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02326749451458454
    2. ' d' → logprob: -3.7732675075531006
    3. '	d' → logprob: -10.89826774597168
    4. '   ' → logprob: -13.14826774597168
    5. ' ' → logprob: -14.27326774597168
    6. '```' → logprob: -14.77326774597168
    7. '    ' → logprob: -16.39826774597168
    8. '(d' → logprob: -16.77326774597168
    9. ' ' → logprob: -16.77326774597168
    10. '  ' → logprob: -17.14826774597168

Token 663: ' exclus' (ID: 9398)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05144704878330231
    2. '-' → logprob: -3.8014471530914307
    3. '<|end|>' → logprob: -4.176446914672852
    4. 'exclusive' → logprob: -6.051446914672852
    5. '   ' → logprob: -6.301446914672852
    6. ' -' → logprob: -6.551446914672852
    7. '```' → logprob: -6.551446914672852
    8. 'excluded' → logprob: -7.051446914672852
    9. ' excl' → logprob: -7.176446914672852
    10. '(ex' → logprob: -7.676446914672852

Token 664: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012618189677596092
    2. ':
' → logprob: -5.137618064880371
    3. '   ' → logprob: -5.387618064880371
    4. '):' → logprob: -6.512618064880371
    5. 'for' → logprob: -7.887618064880371
    6. ')' → logprob: -9.512618064880371
    7. ' :' → logprob: -10.387618064880371
    8. '):
' → logprob: -10.387618064880371
    9. ' for' → logprob: -10.762618064880371
    10. ':i' → logprob: -11.012618064880371

Token 665: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03375265747308731
    2. 'for' → logprob: -3.658752679824829
    3. ' for' → logprob: -5.15875244140625
    4. ':' → logprob: -6.65875244140625
    5. '	for' → logprob: -8.03375244140625
    6. ':
' → logprob: -10.78375244140625
    7. '[' → logprob: -11.40875244140625
    8. '```' → logprob: -11.53375244140625
    9. '   ' → logprob: -12.03375244140625
    10. '[i' → logprob: -12.28375244140625

Token 666: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2032792866230011
    2. 'for' (adapté à ' for') → logprob: -1.9532792568206787
    3. 'print' → logprob: -3.4532792568206787
    4. ' for' → logprob: -4.578279495239258
    5. ' print' → logprob: -8.828279495239258
    6. 'i' → logprob: -10.328279495239258
    7. '       ' → logprob: -10.703279495239258
    8. ' i' → logprob: -11.828279495239258
    9. '```' → logprob: -12.453279495239258
    10. '	for' → logprob: -12.828279495239258

Token 667: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.201453298330307
    2. ' i' → logprob: -1.7014533281326294
    3. '_i' → logprob: -10.95145320892334
    4. '	i' → logprob: -11.07645320892334
    5. '_' → logprob: -12.82645320892334
    6. ' _' → logprob: -13.45145320892334
    7. '   ' → logprob: -13.95145320892334
    8. ' ' → logprob: -14.07645320892334
    9. ' ' → logprob: -14.45145320892334
    10. ' in' → logprob: -14.82645320892334

Token 668: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01106644794344902
    2. 'in' → logprob: -4.511066436767578
    3. ' ' → logprob: -12.136066436767578
    4. ')' → logprob: -13.136066436767578
    5. '	in' → logprob: -13.261066436767578
    6. '   ' → logprob: -13.511066436767578
    7. ',' → logprob: -13.511066436767578
    8. 'import' → logprob: -13.886066436767578
    9. 'range' → logprob: -13.886066436767578
    10. '0' → logprob: -14.011066436767578

Token 669: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06197306513786316
    2. 'range' → logprob: -2.8119730949401855
    3. 'd' → logprob: -13.561972618103027
    4. '	range' → logprob: -13.686972618103027
    5. ' ' → logprob: -13.936972618103027
    6. '   ' → logprob: -14.311972618103027
    7. '(range' → logprob: -14.561972618103027
    8. '  ' → logprob: -15.436972618103027
    9. ' rang' → logprob: -15.811972618103027
    10. ' d' → logprob: -16.061973571777344

Token 670: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -8.673547563375905e-05
    2. '(' → logprob: -9.375086784362793
    3. ' (' → logprob: -13.625086784362793
    4. 'd' → logprob: -15.250086784362793
    5. '(
' → logprob: -15.500086784362793
    6. '	d' → logprob: -16.625085830688477
    7. '   ' → logprob: -17.125085830688477
    8. ' d' → logprob: -17.375085830688477
    9. '((' → logprob: -19.000085830688477
    10. '(i' → logprob: -19.375085830688477

Token 671: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06324318051338196
    2. '):
' → logprob: -2.8132431507110596
    3. '+' → logprob: -6.938243389129639
    4. '   ' → logprob: -8.68824291229248
    5. ')' → logprob: -9.43824291229248
    6. ' ):' → logprob: -10.56324291229248
    7. '):
' → logprob: -10.68824291229248
    8. ':' → logprob: -12.81324291229248
    9. ' +' → logprob: -13.43824291229248
    10. ' ):
' → logprob: -13.81324291229248

Token 672: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10329431295394897
    2. '   ' → logprob: -2.3532943725585938
    3. 'print' → logprob: -5.853294372558594
    4. ' print' → logprob: -8.853294372558594
    5. 'for' → logprob: -9.978294372558594
    6. ' for' → logprob: -11.228294372558594
    7. '           ' → logprob: -13.228294372558594
    8. '    ' → logprob: -13.478294372558594
    9. '   ' → logprob: -13.478294372558594
    10. ' ' → logprob: -13.853294372558594

Token 673: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06669638305902481
    2. '   ' → logprob: -2.8166964054107666
    3. 'for' → logprob: -5.4416961669921875
    4. ' print' → logprob: -7.9416961669921875
    5. ' for' → logprob: -11.441696166992188
    6. '       ' → logprob: -12.191696166992188
    7. '	print' → logprob: -12.316696166992188
    8. ' ' → logprob: -12.566696166992188
    9. '[' → logprob: -13.566696166992188
    10. '  ' → logprob: -13.941696166992188

Token 674: ' Pour' (ID: 13931)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.032797686755657196
    2. 'for' → logprob: -3.5327975749969482
    3. '   ' → logprob: -6.032797813415527
    4. ' print' → logprob: -7.907797813415527
    5. '[' → logprob: -9.282797813415527
    6. 'if' → logprob: -9.407797813415527
    7. ' for' → logprob: -9.782797813415527
    8. ' ' → logprob: -11.407797813415527
    9. '       ' → logprob: -11.782797813415527
    10. 'pass' → logprob: -12.157797813415527

Token 675: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39137932658195496
    2. 'x' → logprob: -1.7663793563842773
    3. 'print' → logprob: -2.5163793563842773
    4. 's' → logprob: -3.6413793563842773
    5. 'line' → logprob: -4.641379356384277
    6. 'j' → logprob: -4.641379356384277
    7. ' i' → logprob: -5.016379356384277
    8. '_' → logprob: -5.641379356384277
    9. 'row' → logprob: -5.891379356384277
    10. 'k' → logprob: -6.266379356384277

Token 676: ' valeur' (ID: 41664)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1065189838409424
    2. 'x' → logprob: -1.7315189838409424
    3. 'for' → logprob: -2.1065189838409424
    4. 'row' → logprob: -2.2315189838409424
    5. 'j' → logprob: -2.3565189838409424
    6. 'line' → logprob: -2.6065189838409424
    7. 'i' → logprob: -3.7315189838409424
    8. ' line' → logprob: -4.356518745422363
    9. 's' → logprob: -4.606518745422363
    10. ' row' → logprob: -4.731518745422363

Token 677: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23962852358818054
    2. 'i' → logprob: -2.739628553390503
    3. 'print' → logprob: -2.864628553390503
    4. ' in' → logprob: -3.364628553390503
    5. ' i' → logprob: -3.989628553390503
    6. 'in' → logprob: -4.114628314971924
    7. 's' → logprob: -5.114628314971924
    8. 'for' → logprob: -5.239628314971924
    9. ' for' → logprob: -5.864628314971924
    10. 'j' → logprob: -6.614628314971924

Token 678: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017535287886857986
    2. 'range' → logprob: -4.767535209655762
    3. 'print' → logprob: -5.767535209655762
    4. 'm' → logprob: -6.017535209655762
    5. 's' → logprob: -6.392535209655762
    6. ' i' → logprob: -6.517535209655762
    7. ' range' → logprob: -9.142535209655762
    8. 'for' → logprob: -11.267535209655762
    9. ' ' → logprob: -11.392535209655762
    10. '   ' → logprob: -11.517535209655762

Token 679: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008410084992647171
    2. 'm' → logprob: -5.0084099769592285
    3. ' i' → logprob: -7.0084099769592285
    4. 'range' → logprob: -7.8834099769592285
    5. 's' → logprob: -8.383410453796387
    6. 'print' → logprob: -8.883410453796387
    7. ' range' → logprob: -11.633410453796387
    8. ' ' → logprob: -11.758410453796387
    9. '   ' → logprob: -11.758410453796387
    10. ' m' → logprob: -12.633410453796387

Token 680: '',' (ID: 787)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.647186279296875
    2. ',' → logprob: -0.897186279296875
    3. '   ' → logprob: -4.147186279296875
    4. ':
' → logprob: -4.272186279296875
    5. 'print' → logprob: -4.772186279296875
    6. ' :' → logprob: -4.897186279296875
    7. ' ,' → logprob: -4.897186279296875
    8. '):' → logprob: -5.272186279296875
    9. '       ' → logprob: -5.397186279296875
    10. '):
' → logprob: -6.772186279296875

Token 681: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16137363016605377
    2. ' print' → logprob: -2.1613736152648926
    3. '   ' → logprob: -3.5363736152648926
    4. '       ' → logprob: -5.661373615264893
    5. 'for' → logprob: -7.161373615264893
    6. ' for' → logprob: -7.911373615264893
    7. '	print' → logprob: -10.53637409210205
    8. '    ' → logprob: -10.66137409210205
    9. ' ' → logprob: -10.78637409210205
    10. '           ' → logprob: -10.91137409210205

Token 682: ' parc' (ID: 22138)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006563199567608535
    2. 'for' → logprob: -7.6256561279296875
    3. ' print' → logprob: -9.000656127929688
    4. '   ' → logprob: -10.250656127929688
    5. ' for' → logprob: -12.000656127929688
    6. '       ' → logprob: -14.125656127929688
    7. '#print' → logprob: -14.250656127929688
    8. ')' → logprob: -15.250656127929688
    9. 'pass' → logprob: -15.250656127929688
    10. ' ' → logprob: -15.375656127929688

Token 683: 'ourt' (ID: 38600)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.18684813380241394
    2. 'inte' → logprob: -2.0618481636047363
    3. '#' → logprob: -4.436848163604736
    4. 'r' → logprob: -4.561848163604736
    5. 'nte' → logprob: -5.561848163604736
    6. 'ute' → logprob: -5.561848163604736
    7. 'print' → logprob: -6.061848163604736
    8. 't' → logprob: -6.436848163604736
    9. 'ente' → logprob: -6.561848163604736
    10. 'ut' → logprob: -6.561848163604736

Token 684: ' tous' (ID: 10688)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7606101632118225
    2. 'range' → logprob: -1.2606101036071777
    3. ' range' → logprob: -1.8856101036071777
    4. ' s' → logprob: -2.3856101036071777
    5. '   ' → logprob: -5.510610103607178
    6. 'for' → logprob: -7.885610103607178
    7. ' ' → logprob: -8.135610580444336
    8. ' for' → logprob: -8.760610580444336
    9. 'print' → logprob: -9.135610580444336
    10. '    ' → logprob: -9.885610580444336

Token 685: ' les' (ID: 1341)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36604222655296326
    2. ' s' → logprob: -1.2410422563552856
    3. '   ' → logprob: -4.866042137145996
    4. '(s' → logprob: -5.491042137145996
    5. 'x' → logprob: -6.366042137145996
    6. ' x' → logprob: -7.241042137145996
    7. 'range' → logprob: -7.241042137145996
    8. ' in' → logprob: -7.866042137145996
    9. 'j' → logprob: -7.991042137145996
    10. ' (' → logprob: -8.116042137145996

Token 686: ' éléments' (ID: 57375)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016207880107685924
    2. 'for' → logprob: -6.751620769500732
    3. 's' → logprob: -8.25162124633789
    4. 'x' → logprob: -9.50162124633789
    5. ' print' → logprob: -10.12662124633789
    6. 'j' → logprob: -10.25162124633789
    7. 'element' → logprob: -12.00162124633789
    8. ' for' → logprob: -12.62662124633789
    9. '   ' → logprob: -12.62662124633789
    10. 'car' → logprob: -12.62662124633789

Token 687: ' dans' (ID: 2671)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.24324290454387665
    2. '   ' → logprob: -1.993242859840393
    3. 's' → logprob: -3.3682429790496826
    4. ' in' → logprob: -3.7432429790496826
    5. 'in' → logprob: -4.4932427406311035
    6. ' s' → logprob: -5.7432427406311035
    7. ' (' → logprob: -5.9932427406311035
    8. '       ' → logprob: -6.4932427406311035
    9. 'for' → logprob: -6.8682427406311035
    10. '#' → logprob: -7.4932427406311035

Token 688: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0038068529684096575
    2. ' s' → logprob: -5.628807067871094
    3. '   ' → logprob: -8.503807067871094
    4. ' ' → logprob: -13.753807067871094
    5. 'print' → logprob: -14.003807067871094
    6. '	s' → logprob: -14.503807067871094
    7. '(s' → logprob: -14.878807067871094
    8. '  ' → logprob: -15.378807067871094
    9. '    ' → logprob: -15.378807067871094
    10. '[s' → logprob: -15.503807067871094

Token 689: ' première' (ID: 23423)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005948548787273467
    2. ' s' → logprob: -7.5005950927734375
    3. '   ' → logprob: -10.125595092773438
    4. ' ' → logprob: -14.625595092773438
    5. '(s' → logprob: -15.125595092773438
    6. '[s' → logprob: -15.125595092773438
    7. 'print' → logprob: -15.375595092773438
    8. '  ' → logprob: -16.000595092773438
    9. '[' → logprob: -16.250595092773438
    10. '    ' → logprob: -16.500595092773438

Token 690: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02376260608434677
    2. ' s' → logprob: -3.8987627029418945
    3. '   ' → logprob: -5.8987627029418945
    4. 'for' → logprob: -8.898762702941895
    5. 'range' → logprob: -9.023762702941895
    6. ' ' → logprob: -10.023762702941895
    7. 'print' → logprob: -10.023762702941895
    8. ']' → logprob: -10.773762702941895
    9. ' for' → logprob: -11.023762702941895
    10. '[s' → logprob: -11.023762702941895

Token 691: '-l' (ID: 2887)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0813419818878174
    2. 's' → logprob: -1.4563419818878174
    3. '   ' → logprob: -1.5813419818878174
    4. 'for' → logprob: -1.9563419818878174
    5. 'list' → logprob: -3.5813419818878174
    6. '[' → logprob: -3.8313419818878174
    7. 'liste' → logprob: -4.456341743469238
    8. ' s' → logprob: -5.456341743469238
    9. ' for' → logprob: -5.581341743469238
    10. ']' → logprob: -5.831341743469238

Token 692: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.01509625930339098
    2. 'ist' → logprob: -4.265096187591553
    3. 'is' → logprob: -8.515096664428711
    4. 's' → logprob: -8.515096664428711
    5. '[' → logprob: -8.890096664428711
    6. '   ' → logprob: -10.015096664428711
    7. 'liste' → logprob: -10.015096664428711
    8. '#' → logprob: -10.015096664428711
    9. 'e' → logprob: -10.390096664428711
    10. 'ise' → logprob: -10.515096664428711

Token 693: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20720157027244568
    2. '   ' → logprob: -2.0822014808654785
    3. '(s' → logprob: -2.8322014808654785
    4. ' s' → logprob: -6.0822014808654785
    5. '[s' → logprob: -7.2072014808654785
    6. '[' → logprob: -8.457201957702637
    7. '       ' → logprob: -9.082201957702637
    8. ' of' → logprob: -9.457201957702637
    9. ' (' → logprob: -9.707201957702637
    10. ' ' → logprob: -11.082201957702637

Token 694: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010362643515691161
    2. ' s' → logprob: -6.876036167144775
    3. '   ' → logprob: -13.001036643981934
    4. '`s' → logprob: -13.876036643981934
    5. '(s' → logprob: -15.626036643981934
    6. '```' → logprob: -16.751035690307617
    7. ''s' → logprob: -17.251035690307617
    8. ' ' → logprob: -17.626035690307617
    9. '	s' → logprob: -17.876035690307617
    10. '
' → logprob: -18.001035690307617

Token 695: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5094070477061905e-05
    2. ' s' → logprob: -11.125015258789062
    3. '`s' → logprob: -15.375015258789062
    4. '(s' → logprob: -17.750015258789062
    5. ''s' → logprob: -18.625015258789062
    6. '   ' → logprob: -18.625015258789062
    7. '```' → logprob: -18.750015258789062
    8. '[s' → logprob: -20.750015258789062
    9. ')s' → logprob: -21.250015258789062
    10. '"s' → logprob: -21.250015258789062

Token 696: ''.
' (ID: 49980)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005238025914877653
    2. '   ' → logprob: -5.505238056182861
    3. '       ' → logprob: -7.130238056182861
    4. '0' → logprob: -9.380237579345703
    5. ' [' → logprob: -9.380237579345703
    6. '][' → logprob: -9.630237579345703
    7. 's' → logprob: -10.755237579345703
    8. '#' → logprob: -11.130237579345703
    9. '           ' → logprob: -11.505237579345703
    10. '[m' → logprob: -11.505237579345703

Token 697: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08768873661756516
    2. ' for' → logprob: -3.212688684463501
    3. 'print' → logprob: -3.962688684463501
    4. 'for' → logprob: -4.08768892288208
    5. ' print' → logprob: -5.21268892288208
    6. '           ' → logprob: -6.21268892288208
    7. '[' → logprob: -8.337688446044922
    8. '   ' → logprob: -9.087688446044922
    9. ' s' → logprob: -9.962688446044922
    10. ' [' → logprob: -11.337688446044922

Token 698: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.268127977848053
    2. 'print' → logprob: -2.143127918243408
    3. 'for' → logprob: -2.518127918243408
    4. ' for' → logprob: -3.643127918243408
    5. ' print' → logprob: -4.768127918243408
    6. '   ' → logprob: -6.643127918243408
    7. '[' → logprob: -7.393127918243408
    8. '           ' → logprob: -7.393127918243408
    9. ' [' → logprob: -10.018128395080566
    10. ' ' → logprob: -11.018128395080566

Token 699: ' s' (ID: 265)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3527631163597107
    2. '       ' → logprob: -1.7277631759643555
    3. 'for' → logprob: -2.3527631759643555
    4. ' print' → logprob: -4.3527631759643555
    5. ' for' → logprob: -4.6027631759643555
    6. '   ' → logprob: -6.6027631759643555
    7. '           ' → logprob: -8.727763175964355
    8. ' ' → logprob: -10.602763175964355
    9. '[' → logprob: -11.602763175964355
    10. '	print' → logprob: -11.852763175964355

Token 700: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00030566859641112387
    2. '[i' → logprob: -8.750306129455566
    3. '0' → logprob: -10.750306129455566
    4. '   ' → logprob: -11.000306129455566
    5. 'for' → logprob: -11.250306129455566
    6. ' [' → logprob: -11.250306129455566
    7. '1' → logprob: -11.375306129455566
    8. '][' → logprob: -11.375306129455566
    9. '[m' → logprob: -11.375306129455566
    10. 's' → logprob: -11.500306129455566

Token 701: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010039894841611385
    2. 'm' → logprob: -7.001004219055176
    3. 'i' → logprob: -10.501004219055176
    4. ' ' → logprob: -10.501004219055176
    5. '[' → logprob: -11.626004219055176
    6. '   ' → logprob: -11.751004219055176
    7. '][' → logprob: -12.251004219055176
    8. '1' → logprob: -12.501004219055176
    9. '```' → logprob: -12.501004219055176
    10. 'd' → logprob: -13.126004219055176

Token 702: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4862169325351715
    2. ']' → logprob: -0.9862169027328491
    3. '[i' → logprob: -4.486217021942139
    4. '[' → logprob: -8.11121654510498
    5. ' ][' → logprob: -8.98621654510498
    6. '   ' → logprob: -9.36121654510498
    7. '][]' → logprob: -9.61121654510498
    8. ']
' → logprob: -10.48621654510498
    9. '[j' → logprob: -10.48621654510498
    10. '])' → logprob: -10.48621654510498

Token 703: ' correspond' (ID: 11095)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5947314500808716
    2. '[i' → logprob: -0.9697314500808716
    3. '[' → logprob: -3.844731330871582
    4. '   ' → logprob: -3.969731330871582
    5. 'for' → logprob: -4.719731330871582
    6. ':
' → logprob: -5.594731330871582
    7. '       ' → logprob: -5.594731330871582
    8. ')' → logprob: -5.719731330871582
    9. ' for' → logprob: -5.719731330871582
    10. '):' → logprob: -6.844731330871582

Token 704: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37282946705818176
    2. ' à' → logprob: -1.6228294372558594
    3. ' to' → logprob: -2.6228294372558594
    4. 'to' → logprob: -4.997829437255859
    5. ' s' → logprob: -5.122829437255859
    6. '    ' → logprob: -5.247829437255859
    7. 's' → logprob: -5.247829437255859
    8. ' au' → logprob: -5.747829437255859
    9. '       ' → logprob: -6.122829437255859
    10. ')' → logprob: -6.122829437255859

Token 705: ' ["' (ID: 9129)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.252334862947464
    2. ' s' → logprob: -1.5023348331451416
    3. '["' → logprob: -8.002334594726562
    4. ' ["' → logprob: -10.377334594726562
    5. '   ' → logprob: -11.627334594726562
    6. ' ' → logprob: -11.752334594726562
    7. '[' → logprob: -12.252334594726562
    8. '[
' → logprob: -12.377334594726562
    9. 'range' → logprob: -12.627334594726562
    10. '['' → logprob: -12.752334594726562

Token 706: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.22607216238975525
    2. '"' → logprob: -1.7260721921920776
    3. ''ab' → logprob: -3.726072072982788
    4. ''' → logprob: -8.726072311401367
    5. ' ab' → logprob: -10.601072311401367
    6. 'print' → logprob: -10.851072311401367
    7. 'abcd' → logprob: -11.601072311401367
    8. 's' → logprob: -11.726072311401367
    9. '   ' → logprob: -11.726072311401367
    10. ' "' → logprob: -12.476072311401367

Token 707: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0001649220648687333
    2. '"' → logprob: -8.875164985656738
    3. 'c' → logprob: -11.000164985656738
    4. ''' → logprob: -12.500164985656738
    5. 'cccc' → logprob: -13.375164985656738
    6. 'bcc' → logprob: -14.250164985656738
    7. 'ccc' → logprob: -14.750164985656738
    8. '```' → logprob: -15.125164985656738
    9. '   ' → logprob: -15.375164985656738
    10. '[' → logprob: -15.750164985656738

Token 708: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0007947356207296252
    2. ' ",' → logprob: -7.875794887542725
    3. '"]' → logprob: -8.500794410705566
    4. '"' → logprob: -9.625794410705566
    5. ',' → logprob: -9.750794410705566
    6. '","' → logprob: -10.125794410705566
    7. '   ' → logprob: -10.500794410705566
    8. ']' → logprob: -12.500794410705566
    9. ' ,' → logprob: -12.625794410705566
    10. '',' → logprob: -12.750794410705566

Token 709: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.5778142809867859
    2. '"' → logprob: -0.8278142809867859
    3. ''ab' → logprob: -7.452814102172852
    4. ' '' → logprob: -8.202814102172852
    5. ' ' → logprob: -8.327814102172852
    6. ''' → logprob: -8.452814102172852
    7. '",' → logprob: -8.827814102172852
    8. '   ' → logprob: -9.327814102172852
    9. ',' → logprob: -9.702814102172852
    10. '"s' → logprob: -10.202814102172852

Token 710: 'ab' (ID: 378)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005572979338467121
    2. ' "' → logprob: -5.50557279586792
    3. ''ab' → logprob: -6.75557279586792
    4. 'ab' → logprob: -8.130573272705078
    5. '",' → logprob: -11.255573272705078
    6. '#ab' → logprob: -11.880573272705078
    7. '   ' → logprob: -12.505573272705078
    8. ' ' → logprob: -12.505573272705078
    9. ' ab' → logprob: -13.005573272705078
    10. ''' → logprob: -13.255573272705078

Token 711: 'dd' (ID: 1183)
  Prédit: 'dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -3.292907877039397e-06
    2. 'cc' → logprob: -13.37500286102295
    3. 'bd' → logprob: -14.50000286102295
    4. '"' → logprob: -14.62500286102295
    5. 'bb' → logprob: -15.75000286102295
    6. ' dd' → logprob: -15.87500286102295
    7. '```' → logprob: -16.375003814697266
    8. 'd' → logprob: -16.500003814697266
    9. '
' → logprob: -17.000003814697266
    10. 'cd' → logprob: -17.000003814697266

Token 712: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.010170615278184414
    2. ',' → logprob: -5.2601704597473145
    3. '"]' → logprob: -5.3851704597473145
    4. ']' → logprob: -9.135170936584473
    5. '   ' → logprob: -9.385170936584473
    6. '"' → logprob: -9.760170936584473
    7. ' ",' → logprob: -10.635170936584473
    8. ' ,' → logprob: -10.885170936584473
    9. ',",' → logprob: -11.010170936584473
    10. '","' → logprob: -12.135170936584473

Token 713: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47418874502182007
    2. ' "' → logprob: -0.9741887450218201
    3. ' ' → logprob: -10.224188804626465
    4. ''' → logprob: -10.974188804626465
    5. '",' → logprob: -11.099188804626465
    6. '   ' → logprob: -11.474188804626465
    7. ',' → logprob: -11.474188804626465
    8. ' '' → logprob: -12.474188804626465
    9. ',"' → logprob: -13.099188804626465
    10. '    ' → logprob: -13.224188804626465

Token 714: 'dd' (ID: 1183)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0019044855143874884
    2. 'dd' → logprob: -6.751904487609863
    3. ' "' → logprob: -7.501904487609863
    4. ' dd' → logprob: -9.376904487609863
    5. ''' → logprob: -9.751904487609863
    6. ' ' → logprob: -11.501904487609863
    7. '(dd' → logprob: -11.751904487609863
    8. '",' → logprob: -12.376904487609863
    9. '   ' → logprob: -12.376904487609863
    10. ',"' → logprob: -13.126904487609863

Token 715: 'ba' (ID: 3103)
  Prédit: 'ba'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ba' → logprob: -0.0004141072859056294
    2. '"' → logprob: -8.37541389465332
    3. '```' → logprob: -9.25041389465332
    4. 'b' → logprob: -10.00041389465332
    5. ']' → logprob: -12.50041389465332
    6. '
' → logprob: -12.50041389465332
    7. 'ба' → logprob: -12.62541389465332
    8. '...' → logprob: -13.00041389465332
    9. '")' → logprob: -13.12541389465332
    10. ''' → logprob: -13.25041389465332

Token 716: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.03351925313472748
    2. '"]' → logprob: -3.9085192680358887
    3. ',' → logprob: -5.158519268035889
    4. '"]:' → logprob: -5.533519268035889
    5. '   ' → logprob: -6.533519268035889
    6. ' ,' → logprob: -7.783519268035889
    7. ']' → logprob: -7.908519268035889
    8. ' ",' → logprob: -8.28351879119873
    9. '"' → logprob: -8.78351879119873
    10. '       ' → logprob: -9.03351879119873

Token 717: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2812695801258087
    2. ' "' → logprob: -1.4062695503234863
    3. ' ' → logprob: -9.906270027160645
    4. ' s' → logprob: -10.906270027160645
    5. '",' → logprob: -11.156270027160645
    6. '"s' → logprob: -11.781270027160645
    7. ' cc' → logprob: -11.906270027160645
    8. '   ' → logprob: -12.156270027160645
    9. ''' → logprob: -12.656270027160645
    10. ',' → logprob: -12.906270027160645

Token 718: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.474233478307724
    2. '"' → logprob: -0.9742335081100464
    3. ' cc' → logprob: -9.349233627319336
    4. ''' → logprob: -9.974233627319336
    5. '"s' → logprob: -11.849233627319336
    6. 's' → logprob: -12.099233627319336
    7. ']' → logprob: -13.099233627319336
    8. 'c' → logprob: -13.349233627319336
    9. '"]' → logprob: -13.724233627319336
    10. '	cc' → logprob: -13.849233627319336

Token 719: 'ba' (ID: 3103)
  Prédit: 'ba'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ba' → logprob: -0.0005547016044147313
    2. '[' → logprob: -7.75055456161499
    3. '```' → logprob: -9.750555038452148
    4. 'b' → logprob: -10.625555038452148
    5. '[
' → logprob: -11.750555038452148
    6. 'ба' → logprob: -12.500555038452148
    7. '
' → logprob: -12.500555038452148
    8. ']' → logprob: -12.625555038452148
    9. '   ' → logprob: -12.875555038452148
    10. 'a' → logprob: -12.875555038452148

Token 720: '"]' (ID: 2601)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1748475581407547
    2. ']:
' → logprob: -2.4248476028442383
    3. '"]:' → logprob: -3.2998476028442383
    4. ']' → logprob: -4.174847602844238
    5. '"]:
' → logprob: -4.549847602844238
    6. '       ' → logprob: -5.424847602844238
    7. '   ' → logprob: -6.174847602844238
    8. ']:
' → logprob: -6.924847602844238
    9. '"]' → logprob: -7.049847602844238
    10. ':' → logprob: -8.799847602844238

Token 721: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06638050824403763
    2. ':' → logprob: -2.816380500793457
    3. '   ' → logprob: -6.566380500793457
    4. ':
' → logprob: -6.816380500793457
    5. 'for' → logprob: -6.941380500793457
    6. ' for' → logprob: -7.441380500793457
    7. '           ' → logprob: -8.816380500793457
    8. '[' → logprob: -9.566380500793457
    9. '	' → logprob: -10.816380500793457
    10. 'print' → logprob: -11.191380500793457

Token 722: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11995995789766312
    2. 'for' → logprob: -2.369960069656372
    3. ' for' → logprob: -3.994960069656372
    4. '           ' → logprob: -7.119959831237793
    5. '   ' → logprob: -8.619959831237793
    6. 'print' → logprob: -8.994959831237793
    7. '[' → logprob: -10.744959831237793
    8. ' print' → logprob: -12.119959831237793
    9. '	for' → logprob: -13.369959831237793
    10. '      ' → logprob: -13.494959831237793

Token 723: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.961479663848877
    2. 'for' → logprob: -1.836479663848877
    3. '   ' → logprob: -1.961479663848877
    4. ' for' → logprob: -1.961479663848877
    5. '       ' → logprob: -2.211479663848877
    6. ' print' → logprob: -2.711479663848877
    7. '           ' → logprob: -7.836479663848877
    8. ' ' → logprob: -8.211479187011719
    9. '[' → logprob: -8.711479187011719
    10. '  ' → logprob: -10.211479187011719

Token 724: ' Pour' (ID: 13931)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2008151262998581
    2. 'for' → logprob: -2.075815200805664
    3. '       ' → logprob: -3.950815200805664
    4. ' print' → logprob: -4.075815200805664
    5. ' for' → logprob: -4.450815200805664
    6. '   ' → logprob: -4.825815200805664
    7. '[' → logprob: -8.075815200805664
    8. '           ' → logprob: -9.200815200805664
    9. ' ' → logprob: -9.450815200805664
    10. ' [' → logprob: -10.700815200805664

Token 725: ' chaque' (ID: 21194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.34197041392326355
    2. 'j' → logprob: -2.466970443725586
    3. 'elem' → logprob: -3.591970443725586
    4. ' x' → logprob: -3.841970443725586
    5. 'word' → logprob: -3.966970443725586
    6. 'y' → logprob: -3.966970443725586
    7. 'w' → logprob: -4.716970443725586
    8. ' j' → logprob: -4.716970443725586
    9. 'element' → logprob: -4.841970443725586
    10. 'el' → logprob: -5.216970443725586

Token 726: ' élément' (ID: 99627)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.049066465348005295
    2. ' x' → logprob: -4.049066543579102
    3. 'j' → logprob: -4.549066543579102
    4. 'word' → logprob: -5.049066543579102
    5. 'elem' → logprob: -5.799066543579102
    6. 'y' → logprob: -6.299066543579102
    7. ' j' → logprob: -6.924066543579102
    8. 'w' → logprob: -7.049066543579102
    9. 'item' → logprob: -7.174066543579102
    10. ' mot' → logprob: -7.299066543579102

Token 727: ' '' (ID: 461)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2849944233894348
    2. 'in' → logprob: -1.40999436378479
    3. ' de' → logprob: -7.159994602203369
    4. 's' → logprob: -7.284994602203369
    5. 'de' → logprob: -7.284994602203369
    6. '   ' → logprob: -7.784994602203369
    7. ' ' → logprob: -8.409994125366211
    8. ' s' → logprob: -8.659994125366211
    9. 'print' → logprob: -9.034994125366211
    10. '	in' → logprob: -9.409994125366211

Token 728: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04779341071844101
    2. 'word' → logprob: -4.547793388366699
    3. 'w' → logprob: -5.172793388366699
    4. 'j' → logprob: -5.297793388366699
    5. 'elem' → logprob: -5.422793388366699
    6. 'c' → logprob: -5.922793388366699
    7. 'e' → logprob: -5.922793388366699
    8. 'el' → logprob: -6.297793388366699
    9. 's' → logprob: -6.672793388366699
    10. ' x' → logprob: -6.672793388366699

Token 729: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16518573462963104
    2. 'in' → logprob: -1.9151856899261475
    3. ')' → logprob: -5.415185928344727
    4. ']' → logprob: -8.540185928344727
    5. 's' → logprob: -9.290185928344727
    6. '   ' → logprob: -9.540185928344727
    7. ''' → logprob: -11.040185928344727
    8. '')' → logprob: -11.040185928344727
    9. '"' → logprob: -11.415185928344727
    10. ' ' → logprob: -11.415185928344727

Token 730: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2817521393299103
    2. 'in' → logprob: -1.406752109527588
    3. '   ' → logprob: -8.781752586364746
    4. 's' → logprob: -8.906752586364746
    5. ' ' → logprob: -9.531752586364746
    6. ')' → logprob: -9.656752586364746
    7. '    ' → logprob: -10.281752586364746
    8. '  ' → logprob: -10.656752586364746
    9. ',' → logprob: -11.031752586364746
    10. 'de' → logprob: -11.156752586364746

Token 731: ' cette' (ID: 7696)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016036715358495712
    2. ' s' → logprob: -4.141036510467529
    3. ' ' → logprob: -13.766036987304688
    4. '(s' → logprob: -14.266036987304688
    5. '	s' → logprob: -15.016036987304688
    6. '   ' → logprob: -16.016036987304688
    7. '`s' → logprob: -16.391036987304688
    8. '=s' → logprob: -16.891036987304688
    9. '  ' → logprob: -17.141036987304688
    10. '    ' → logprob: -17.516036987304688

Token 732: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03954017162322998
    2. '[' → logprob: -3.2895402908325195
    3. ' s' → logprob: -6.5395402908325195
    4. '0' → logprob: -11.28954029083252
    5. ' [' → logprob: -11.53954029083252
    6. '   ' → logprob: -12.28954029083252
    7. 'for' → logprob: -12.41454029083252
    8. '#' → logprob: -12.91454029083252
    9. 'range' → logprob: -12.91454029083252
    10. '```' → logprob: -13.16454029083252

Token 733: '-l' (ID: 2887)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.2084902822971344
    2. 'list' → logprob: -2.5834903717041016
    3. 's' → logprob: -2.7084903717041016
    4. '[' → logprob: -3.4584903717041016
    5. 'lst' → logprob: -5.333490371704102
    6. '_list' → logprob: -6.458490371704102
    7. '_l' → logprob: -6.458490371704102
    8. 'l' → logprob: -6.583490371704102
    9. 'lista' → logprob: -6.833490371704102
    10. '   ' → logprob: -7.083490371704102

Token 734: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.16870196163654327
    2. '[' → logprob: -2.2937018871307373
    3. 's' → logprob: -3.5437018871307373
    4. 'liste' → logprob: -4.543702125549316
    5. ']' → logprob: -5.668702125549316
    6. 'ist' → logprob: -5.793702125549316
    7. 'is' → logprob: -7.168702125549316
    8. 'ite' → logprob: -7.168702125549316
    9. '[i' → logprob: -7.293702125549316
    10. '[]' → logprob: -7.418702125549316

Token 735: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06123318523168564
    2. ':
' → logprob: -2.9362332820892334
    3. '           ' → logprob: -6.061233043670654
    4. '       ' → logprob: -6.561233043670654
    5. '   ' → logprob: -7.186233043670654
    6. ',' → logprob: -7.311233043670654
    7. '):' → logprob: -7.811233043670654
    8. ' :' → logprob: -8.561233520507812
    9. ')' → logprob: -8.936233520507812
    10. 'print' → logprob: -9.436233520507812

Token 736: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22400064766407013
    2. ' print' → logprob: -1.9740006923675537
    3. '           ' → logprob: -2.8490006923675537
    4. '       ' → logprob: -5.849000453948975
    5. ' for' → logprob: -8.099000930786133
    6. 'for' → logprob: -8.224000930786133
    7. '   ' → logprob: -8.474000930786133
    8. '        ' → logprob: -9.724000930786133
    9. '	print' → logprob: -10.474000930786133
    10. '    ' → logprob: -10.974000930786133

Token 737: ' construit' (ID: 119882)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0024373778142035007
    2. ' print' → logprob: -6.127437591552734
    3. '   ' → logprob: -8.627437591552734
    4. 'for' → logprob: -10.252437591552734
    5. '       ' → logprob: -10.877437591552734
    6. ' for' → logprob: -11.752437591552734
    7. '	print' → logprob: -12.377437591552734
    8. '.print' → logprob: -13.627437591552734
    9. '#print' → logprob: -13.627437591552734
    10. '    ' → logprob: -13.752437591552734

Token 738: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9464160203933716
    2. 'x' → logprob: -1.4464160203933716
    3. ' x' → logprob: -2.321415901184082
    4. '"' → logprob: -2.696415901184082
    5. 's' → logprob: -2.696415901184082
    6. ' print' → logprob: -3.196415901184082
    7. ' s' → logprob: -3.321415901184082
    8. '       ' → logprob: -3.821415901184082
    9. '"x' → logprob: -3.946415901184082
    10. '   ' → logprob: -4.696415901184082

Token 739: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06440305709838867
    2. ' print' → logprob: -2.9394030570983887
    3. '       ' → logprob: -5.064403057098389
    4. '   ' → logprob: -6.939403057098389
    5. '#' → logprob: -7.814403057098389
    6. 'aff' → logprob: -8.064403533935547
    7. 'for' → logprob: -8.689403533935547
    8. '```' → logprob: -8.939403533935547
    9. ' imprime' → logprob: -9.314403533935547
    10. '           ' → logprob: -9.564403533935547

Token 740: ' une' (ID: 2463)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.09871355444192886
    2. 'x' → logprob: -2.7237136363983154
    3. '(' → logprob: -5.098713397979736
    4. 'print' → logprob: -5.473713397979736
    5. '   ' → logprob: -5.598713397979736
    6. ' x' → logprob: -5.598713397979736
    7. 'f' → logprob: -6.098713397979736
    8. ' (' → logprob: -6.223713397979736
    9. '       ' → logprob: -6.598713397979736
    10. 's' → logprob: -6.973713397979736

Token 741: ' nouvelle' (ID: 24562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0030332093592733145
    2. ' print' → logprob: -5.87803316116333
    3. 'x' → logprob: -9.128033638000488
    4. 'for' → logprob: -9.878033638000488
    5. ' x' → logprob: -11.378033638000488
    6. '   ' → logprob: -11.753033638000488
    7. 'string' → logprob: -11.878033638000488
    8. '       ' → logprob: -12.128033638000488
    9. 's' → logprob: -12.128033638000488
    10. ' for' → logprob: -12.378033638000488

Token 742: ' chaîne' (ID: 89288)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.144707590341568
    2. ' print' → logprob: -2.519707679748535
    3. 'string' → logprob: -4.019707679748535
    4. 'for' → logprob: -4.644707679748535
    5. 'x' → logprob: -5.394707679748535
    6. ' string' → logprob: -5.394707679748535
    7. '   ' → logprob: -5.644707679748535
    8. ' for' → logprob: -5.769707679748535
    9. ' x' → logprob: -5.894707679748535
    10. 'chaine' → logprob: -6.269707679748535

Token 743: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0595359802246094
    2. '(x' → logprob: -1.4345359802246094
    3. '=' → logprob: -1.8095359802246094
    4. '           ' → logprob: -2.3095359802246094
    5. '       ' → logprob: -2.6845359802246094
    6. 's' → logprob: -3.5595359802246094
    7. '(' → logprob: -4.809535980224609
    8. '   ' → logprob: -5.309535980224609
    9. ' +=' → logprob: -5.559535980224609
    10. 'print' → logprob: -5.559535980224609

Token 744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7789905071258545
    2. 'print' → logprob: -1.2789905071258545
    3. ' print' → logprob: -1.4039905071258545
    4. '           ' → logprob: -4.278990745544434
    5. ' for' → logprob: -7.028990745544434
    6. 'for' → logprob: -7.153990745544434
    7. '   ' → logprob: -7.278990745544434
    8. '        ' → logprob: -7.403990745544434
    9. '    ' → logprob: -9.903990745544434
    10. ' ' → logprob: -10.153990745544434

Token 745: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09712550044059753
    2. ' print' → logprob: -2.72212553024292
    3. '       ' → logprob: -3.84712553024292
    4. 'for' → logprob: -5.84712553024292
    5. '           ' → logprob: -6.59712553024292
    6. ' for' → logprob: -7.34712553024292
    7. '   ' → logprob: -7.84712553024292
    8. '        ' → logprob: -9.972125053405762
    9. '"' → logprob: -10.597125053405762
    10. '	print' → logprob: -10.972125053405762

Token 746: ' -' (ID: 533)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10954506695270538
    2. ' print' → logprob: -2.4845449924468994
    3. '       ' → logprob: -4.2345452308654785
    4. 'for' → logprob: -5.9845452308654785
    5. '           ' → logprob: -6.3595452308654785
    6. ' for' → logprob: -7.2345452308654785
    7. '   ' → logprob: -7.3595452308654785
    8. '        ' → logprob: -8.85954475402832
    9. '    ' → logprob: -10.85954475402832
    10. ' ' → logprob: -10.98454475402832

Token 747: ' "."' (ID: 50107)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1928616464138031
    2. ' print' → logprob: -2.692861557006836
    3. 'x' → logprob: -2.817861557006836
    4. ' x' → logprob: -4.067861557006836
    5. '"' → logprob: -4.317861557006836
    6. 'for' → logprob: -4.817861557006836
    7. ' for' → logprob: -6.442861557006836
    8. '"x' → logprob: -6.567861557006836
    9. ' "' → logprob: -6.942861557006836
    10. '   ' → logprob: -7.067861557006836

Token 748: ' *' (ID: 425)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9725759029388428
    2. '*' → logprob: -1.0975759029388428
    3. '+' → logprob: -2.7225759029388428
    4. 'join' → logprob: -2.9725759029388428
    5. 'print' → logprob: -3.0975759029388428
    6. '.join' → logprob: -3.0975759029388428
    7. ' *' → logprob: -3.4725759029388428
    8. ' +' → logprob: -4.222576141357422
    9. '"' → logprob: -4.597576141357422
    10. ',' → logprob: -5.347576141357422

Token 749: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.09076108783483505
    2. 'm' → logprob: -3.215761184692383
    3. 'n' → logprob: -4.215761184692383
    4. 'i' → logprob: -4.715761184692383
    5. '2' → logprob: -5.215761184692383
    6. '3' → logprob: -5.715761184692383
    7. '(' → logprob: -5.715761184692383
    8. '(n' → logprob: -5.965761184692383
    9. '(m' → logprob: -6.090761184692383
    10. '8' → logprob: -6.215761184692383

Token 750: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.009107300080358982
    2. '3' → logprob: -6.1341071128845215
    3. '8' → logprob: -6.1341071128845215
    4. '2' → logprob: -6.3841071128845215
    5. 'len' → logprob: -6.5091071128845215
    6. 'i' → logprob: -7.8841071128845215
    7. '7' → logprob: -8.00910758972168
    8. '6' → logprob: -8.50910758972168
    9. '5' → logprob: -8.75910758972168
    10. 'm' → logprob: -9.25910758972168

Token 751: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5336577296257019
    2. ' +' → logprob: -0.9086577296257019
    3. '       ' → logprob: -5.533657550811768
    4. ')' → logprob: -6.283657550811768
    5. '           ' → logprob: -6.783657550811768
    6. ',' → logprob: -7.158657550811768
    7. '   ' → logprob: -7.158657550811768
    8. '*' → logprob: -7.533657550811768
    9. 'print' → logprob: -8.033658027648926
    10. ' *' → logprob: -8.283658027648926

Token 752: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2586379945278168
    2. '(i' → logprob: -1.8836380243301392
    3. ' i' → logprob: -3.3836379051208496
    4. ' (' → logprob: -3.5086379051208496
    5. '(' → logprob: -5.13363790512085
    6. '(n' → logprob: -6.38363790512085
    7. '(d' → logprob: -6.38363790512085
    8. 'd' → logprob: -7.13363790512085
    9. 'n' → logprob: -7.75863790512085
    10. '(m' → logprob: -8.133638381958008

Token 753: ' produit' (ID: 29429)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26181837916374207
    2. '   ' → logprob: -2.6368184089660645
    3. ' +' → logprob: -3.0118184089660645
    4. ')' → logprob: -3.2618184089660645
    5. ' *' → logprob: -4.1368184089660645
    6. '*' → logprob: -4.3868184089660645
    7. '+' → logprob: -4.6368184089660645
    8. '           ' → logprob: -4.8868184089660645
    9. '<|end|>' → logprob: -4.8868184089660645
    10. '"' → logprob: -5.7618184089660645

Token 754: ' une' (ID: 2463)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5544370412826538
    2. '"."' → logprob: -1.1794370412826538
    3. '".' → logprob: -2.9294371604919434
    4. ''.' → logprob: -3.6794371604919434
    5. ''' → logprob: -3.9294371604919434
    6. ' "' → logprob: -5.054437160491943
    7. ' "."' → logprob: -5.179437160491943
    8. ' '.'' → logprob: -6.429437160491943
    9. '("."' → logprob: -6.679437160491943
    10. ' '' → logprob: -6.679437160491943

Token 755: ' suite' (ID: 13800)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.7039471864700317
    2. '.' → logprob: -1.5789471864700317
    3. '".' → logprob: -1.9539471864700317
    4. '"' → logprob: -2.328947067260742
    5. ''.' → logprob: -2.953947067260742
    6. '("."' → logprob: -5.578947067260742
    7. ' "."' → logprob: -7.078947067260742
    8. '('.')' → logprob: -7.203947067260742
    9. '...' → logprob: -7.453947067260742
    10. ' .' → logprob: -8.453947067260742

Token 756: ' de' (ID: 334)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.7274138927459717
    2. '"' → logprob: -1.7274138927459717
    3. '".' → logprob: -2.1024138927459717
    4. '.' → logprob: -2.3524138927459717
    5. ' de' → logprob: -3.1024138927459717
    6. '       ' → logprob: -3.8524138927459717
    7. '   ' → logprob: -4.227414131164551
    8. ' of' → logprob: -4.477414131164551
    9. '("."' → logprob: -4.477414131164551
    10. 'de' → logprob: -4.602414131164551

Token 757: ' points' (ID: 5571)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.06838424503803253
    2. ''.' → logprob: -3.1933841705322266
    3. '".' → logprob: -3.9433841705322266
    4. '.' → logprob: -5.443384170532227
    5. '"' → logprob: -7.318384170532227
    6. '4' → logprob: -8.193384170532227
    7. ' "."' → logprob: -8.193384170532227
    8. ' '.'' → logprob: -10.068384170532227
    9. '("."' → logprob: -10.193384170532227
    10. '('.')' → logprob: -11.068384170532227

Token 758: ' dont' (ID: 11562)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9724010229110718
    2. '       ' → logprob: -0.9724010229110718
    3. ' +' → logprob: -2.7224011421203613
    4. '           ' → logprob: -3.0974011421203613
    5. '<|end|>' → logprob: -3.3474011421203613
    6. '+' → logprob: -3.4724011421203613
    7. '   ' → logprob: -3.9724011421203613
    8. '        ' → logprob: -5.347401142120361
    9. '*' → logprob: -5.347401142120361
    10. ')' → logprob: -5.472401142120361

Token 759: ' la' (ID: 557)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.46433207392692566
    2. 'la' → logprob: -1.714332103729248
    3. 'len' → logprob: -2.464332103729248
    4. ' la' → logprob: -3.214332103729248
    5. 'l' → logprob: -4.464332103729248
    6. '<|end|>' → logprob: -4.589332103729248
    7. '4' → logprob: -4.714332103729248
    8. 'le' → logprob: -4.839332103729248
    9. 'the' → logprob: -5.214332103729248
    10. 'long' → logprob: -5.589332103729248

Token 760: ' longueur' (ID: 104613)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.04942607879638672
    2. 'long' → logprob: -3.7994260787963867
    3. ' length' → logprob: -4.424426078796387
    4. ' longueur' → logprob: -4.424426078796387
    5. 'count' → logprob: -7.299426078796387
    6. 'len' → logprob: -7.924426078796387
    7. 'nombre' → logprob: -7.924426078796387
    8. 'multip' → logprob: -8.424426078796387
    9. 'tail' → logprob: -10.174426078796387
    10. 'leng' → logprob: -10.424426078796387

Token 761: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 762: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.004860496148467064
    2. ' ' → logprob: -5.3798604011535645
    3. '"' → logprob: -9.754860877990723
    4. '   ' → logprob: -9.879860877990723
    5. '    ' → logprob: -10.129860877990723
    6. 'i' → logprob: -10.504860877990723
    7. '(' → logprob: -10.629860877990723
    8. ' i' → logprob: -11.129860877990723
    9. ' (' → logprob: -11.629860877990723
    10. '(i' → logprob: -12.379860877990723

Token 763: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.002010241150856018
    2. ' ' → logprob: -6.252010345458984
    3. '   ' → logprob: -10.127010345458984
    4. '(' → logprob: -11.127010345458984
    5. '0' → logprob: -11.377010345458984
    6. '    ' → logprob: -11.877010345458984
    7. ' (' → logprob: -12.502010345458984
    8. '"' → logprob: -13.002010345458984
    9. '```' → logprob: -14.502010345458984
    10. 'i' → logprob: -14.877010345458984

Token 764: ' fois' (ID: 14697)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16241469979286194
    2. '*' → logprob: -2.037414789199829
    3. '<|end|>' → logprob: -4.03741455078125
    4. ')' → logprob: -7.16241455078125
    5. '       ' → logprob: -8.28741455078125
    6. '*i' → logprob: -8.53741455078125
    7. '   ' → logprob: -8.91241455078125
    8. '<|end|>' → logprob: -9.16241455078125
    9. '    ' → logprob: -9.28741455078125
    10. ' ' → logprob: -9.66241455078125

Token 765: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013294579461216927
    2. ' i' → logprob: -4.388294696807861
    3. '(i' → logprob: -7.388294696807861
    4. ' (' → logprob: -9.763294219970703
    5. '(' → logprob: -10.513294219970703
    6. '<|end|>' → logprob: -10.763294219970703
    7. '4' → logprob: -11.138294219970703
    8. ' ' → logprob: -11.263294219970703
    9. '	i' → logprob: -11.638294219970703
    10. '    ' → logprob: -11.888294219970703

Token 766: ' valeur' (ID: 41664)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001302374730585143
    2. ' i' → logprob: -9.000130653381348
    3. '(i' → logprob: -12.500130653381348
    4. ' ' → logprob: -14.000130653381348
    5. '   ' → logprob: -14.250130653381348
    6. ' (' → logprob: -14.250130653381348
    7. '`' → logprob: -15.500130653381348
    8. '(' → logprob: -15.625130653381348
    9. '	i' → logprob: -15.750130653381348
    10. '*i' → logprob: -16.25012969970703

Token 767: ' de' (ID: 334)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8436136841773987
    2. '"' → logprob: -1.843613624572754
    3. '.' → logprob: -2.093613624572754
    4. '(' → logprob: -2.968613624572754
    5. ' ' → logprob: -3.218613624572754
    6. '   ' → logprob: -3.218613624572754
    7. 'i' → logprob: -3.343613624572754
    8. '    ' → logprob: -3.593613624572754
    9. ' *' → logprob: -3.843613624572754
    10. ''' → logprob: -3.968613624572754

Token 768: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00029744720086455345
    2. ' i' → logprob: -8.125297546386719
    3. ''i' → logprob: -14.250297546386719
    4. '	i' → logprob: -15.000297546386719
    5. ' ' → logprob: -15.500297546386719
    6. '   ' → logprob: -16.62529754638672
    7. '(i' → logprob: -17.00029754638672
    8. '  ' → logprob: -17.75029754638672
    9. '`' → logprob: -17.75029754638672
    10. '    ' → logprob: -18.87529754638672

Token 769: '.
' (ID: 558)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8359639048576355
    2. '+' → logprob: -1.3359639644622803
    3. ')' → logprob: -1.7109639644622803
    4. '       ' → logprob: -2.4609639644622803
    5. '   ' → logprob: -4.460963726043701
    6. '<|end|>' → logprob: -5.085963726043701
    7. '),' → logprob: -5.460963726043701
    8. '           ' → logprob: -5.585963726043701
    9. '    ' → logprob: -6.210963726043701
    10. ',' → logprob: -6.585963726043701

Token 770: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23837238550186157
    2. 'print' → logprob: -1.7383723258972168
    3. 'for' → logprob: -4.238372325897217
    4. ' print' → logprob: -4.363372325897217
    5. ' for' → logprob: -5.363372325897217
    6. '   ' → logprob: -5.988372325897217
    7. '[' → logprob: -6.988372325897217
    8. '           ' → logprob: -7.863372325897217
    9. ' +' → logprob: -8.363372802734375
    10. '"' → logprob: -9.238372802734375

Token 771: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08443320542573929
    2. '       ' → logprob: -2.7094333171844482
    3. ' print' → logprob: -4.584433078765869
    4. 'for' → logprob: -5.834433078765869
    5. '   ' → logprob: -6.959433078765869
    6. ' for' → logprob: -8.584433555603027
    7. '[' → logprob: -9.584433555603027
    8. '           ' → logprob: -11.084433555603027
    9. ' ' → logprob: -11.584433555603027
    10. '	print' → logprob: -11.959433555603027

Token 772: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5731268525123596
    2. 'print' → logprob: -0.9481268525123596
    3. '       ' → logprob: -3.573126792907715
    4. ' for' → logprob: -4.198126792907715
    5. ' print' → logprob: -5.573126792907715
    6. '   ' → logprob: -6.323126792907715
    7. '[' → logprob: -10.448126792907715
    8. ' ' → logprob: -10.573126792907715
    9. '           ' → logprob: -11.323126792907715
    10. '	for' → logprob: -12.198126792907715

Token 773: ' x' (ID: 1215)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09765195101499557
    2. 'x' → logprob: -2.472651958465576
    3. ' print' → logprob: -5.347651958465576
    4. ' x' → logprob: -6.097651958465576
    5. 'for' → logprob: -6.847651958465576
    6. '   ' → logprob: -8.097651481628418
    7. ' for' → logprob: -9.597651481628418
    8. '       ' → logprob: -9.722651481628418
    9. '"' → logprob: -10.097651481628418
    10. 's' → logprob: -10.722651481628418

Token 774: ' ajoute' (ID: 91611)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8018564581871033
    2. '       ' → logprob: -1.176856517791748
    3. '           ' → logprob: -2.676856517791748
    4. '+' → logprob: -3.301856517791748
    5. ')' → logprob: -3.426856517791748
    6. '   ' → logprob: -3.551856517791748
    7. 'for' → logprob: -4.176856517791748
    8. ' +' → logprob: -4.301856517791748
    9. '...' → logprob: -4.926856517791748
    10. ':' → logprob: -5.051856517791748

Token 775: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4286695122718811
    2. ' x' → logprob: -1.3036694526672363
    3. 's' → logprob: -2.9286694526672363
    4. '"x' → logprob: -4.428669452667236
    5. '"' → logprob: -5.678669452667236
    6. ' s' → logprob: -5.803669452667236
    7. '.' → logprob: -6.178669452667236
    8. '(x' → logprob: -6.928669452667236
    9. '"s' → logprob: -8.178669929504395
    10. '(s' → logprob: -8.303669929504395

Token 776: ' chaîne' (ID: 89288)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20115725696086884
    2. '<|end|>' → logprob: -3.201157331466675
    3. 'x' → logprob: -3.326157331466675
    4. 's' → logprob: -3.326157331466675
    5. ' x' → logprob: -3.576157331466675
    6. '"x' → logprob: -3.826157331466675
    7. '""' → logprob: -5.701157093048096
    8. ' "' → logprob: -6.076157093048096
    9. ''' → logprob: -6.201157093048096
    10. ' ' → logprob: -6.451157093048096

Token 777: ' cour' (ID: 2871)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 778: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.008875139988958836
    2. 'r' → logprob: -5.758875370025635
    3. 'ant' → logprob: -6.383875370025635
    4. 'te' → logprob: -6.633875370025635
    5. 't' → logprob: -7.008875370025635
    6. 'u' → logprob: -7.258875370025635
    7. 'amment' → logprob: -7.758875370025635
    8. 'onnée' → logprob: -8.883874893188477
    9. 's' → logprob: -9.008874893188477
    10. 'onne' → logprob: -9.133874893188477

Token 779: '.
' (ID: 558)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4438076615333557
    2. '+' → logprob: -1.443807601928711
    3. ')' → logprob: -3.193807601928711
    4. '       ' → logprob: -3.443807601928711
    5. ',' → logprob: -3.568807601928711
    6. '           ' → logprob: -4.318807601928711
    7. '   ' → logprob: -6.193807601928711
    8. '<|end|>' → logprob: -6.193807601928711
    9. '),' → logprob: -7.818807601928711
    10. ')+' → logprob: -7.943807601928711

Token 780: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21451951563358307
    2. 'print' → logprob: -1.7145195007324219
    3. 'for' → logprob: -5.214519500732422
    4. '   ' → logprob: -5.714519500732422
    5. ' for' → logprob: -6.089519500732422
    6. ' print' → logprob: -6.714519500732422
    7. '.' → logprob: -8.214519500732422
    8. ')' → logprob: -8.839519500732422
    9. '           ' → logprob: -9.089519500732422
    10. '.print' → logprob: -10.339519500732422

Token 781: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2686889171600342
    2. '       ' → logprob: -1.5186889171600342
    3. ' print' → logprob: -4.518689155578613
    4. 'for' → logprob: -5.518689155578613
    5. '   ' → logprob: -6.893689155578613
    6. ' for' → logprob: -7.643689155578613
    7. '.' → logprob: -9.893689155578613
    8. '           ' → logprob: -9.893689155578613
    9. ' ' → logprob: -10.018689155578613
    10. '        
' → logprob: -11.893689155578613

Token 782: ' -' (ID: 533)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8551552295684814
    2. 'for' → logprob: -1.2301552295684814
    3. '       ' → logprob: -1.3551552295684814
    4. '   ' → logprob: -4.355154991149902
    5. ' for' → logprob: -4.605154991149902
    6. ' print' → logprob: -6.605154991149902
    7. '           ' → logprob: -8.730154991149902
    8. '[' → logprob: -8.980154991149902
    9. ' ' → logprob: -9.355154991149902
    10. '	for' → logprob: -11.855154991149902

Token 783: ' "."' (ID: 50107)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6712712645530701
    2. '"."' → logprob: -0.9212712645530701
    3. '"' → logprob: -2.671271324157715
    4. ' print' → logprob: -4.921271324157715
    5. ' "."' → logprob: -5.421271324157715
    6. '""' → logprob: -5.671271324157715
    7. '("."' → logprob: -6.046271324157715
    8. '".' → logprob: -6.171271324157715
    9. ' ' → logprob: -7.671271324157715
    10. '   ' → logprob: -7.921271324157715

Token 784: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25282397866249084
    2. ' *' → logprob: -1.5028239488601685
    3. '"' → logprob: -7.502823829650879
    4. '*(' → logprob: -9.627823829650879
    5. '   ' → logprob: -9.877823829650879
    6. ' ' → logprob: -10.252823829650879
    7. '(' → logprob: -10.377823829650879
    8. ' "' → logprob: -10.877823829650879
    9. '**' → logprob: -11.127823829650879
    10. 's' → logprob: -11.127823829650879

Token 785: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6750712394714355
    2. '4' → logprob: -0.8000712394714355
    3. ' (' → logprob: -3.6750712394714355
    4. ' ' → logprob: -4.1750712394714355
    5. '((' → logprob: -7.4250712394714355
    6. '(m' → logprob: -9.300071716308594
    7. ' ((' → logprob: -9.925071716308594
    8. '   ' → logprob: -10.300071716308594
    9. 'm' → logprob: -10.925071716308594
    10. ' m' → logprob: -11.550071716308594

Token 786: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.20533302426338196
    2. '(' → logprob: -1.7053329944610596
    3. ' ' → logprob: -5.955333232879639
    4. ' (' → logprob: -7.205333232879639
    5. 'm' → logprob: -8.45533275604248
    6. '(m' → logprob: -8.70533275604248
    7. '((' → logprob: -9.95533275604248
    8. 'max' → logprob: -10.08033275604248
    9. '   ' → logprob: -10.45533275604248
    10. '(n' → logprob: -10.95533275604248

Token 787: ' *' (ID: 425)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5212541222572327
    2. '(m' → logprob: -1.021254062652588
    3. ' (' → logprob: -4.146254062652588
    4. '(d' → logprob: -4.271254062652588
    5. 'm' → logprob: -4.771254062652588
    6. '*' → logprob: -5.646254062652588
    7. '*(' → logprob: -5.646254062652588
    8. 'd' → logprob: -8.396254539489746
    9. ' ' → logprob: -9.021254539489746
    10. '(n' → logprob: -9.521254539489746

Token 788: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.7046389579772949
    2. '(' → logprob: -1.454638957977295
    3. '(m' → logprob: -1.829638957977295
    4. 'm' → logprob: -2.329638957977295
    5. 'd' → logprob: -4.829638957977295
    6. ' (' → logprob: -5.704638957977295
    7. '(i' → logprob: -5.954638957977295
    8. 'i' → logprob: -9.204639434814453
    9. '((' → logprob: -9.329639434814453
    10. '(n' → logprob: -9.454639434814453

Token 789: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1276310384273529
    2. 'i' → logprob: -2.2526309490203857
    3. '(d' → logprob: -4.877631187438965
    4. '(i' → logprob: -5.502631187438965
    5. 'm' → logprob: -6.002631187438965
    6. '(m' → logprob: -8.127631187438965
    7. '(' → logprob: -8.877631187438965
    8. 'n' → logprob: -10.502631187438965
    9. ' d' → logprob: -10.627631187438965
    10. '1' → logprob: -11.377631187438965

Token 790: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22557179629802704
    2. ' -' → logprob: -1.8505717515945435
    3. '-m' → logprob: -4.100571632385254
    4. '1' → logprob: -4.350571632385254
    5. 'm' → logprob: -4.850571632385254
    6. '+' → logprob: -6.100571632385254
    7. '-i' → logprob: -6.725571632385254
    8. '(' → logprob: -6.850571632385254
    9. '   ' → logprob: -7.100571632385254
    10. ' ' → logprob: -7.725571632385254

Token 791: ' i' (ID: 575)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6460406184196472
    2. 'i' → logprob: -0.7710406184196472
    3. ' i' → logprob: -4.896040439605713
    4. '(i' → logprob: -5.896040439605713
    5. '(' → logprob: -6.396040439605713
    6. ' ' → logprob: -7.021040439605713
    7. ' (' → logprob: -8.146040916442871
    8. '   ' → logprob: -8.771040916442871
    9. 'm' → logprob: -9.396040916442871
    10. '  ' → logprob: -12.396040916442871

Token 792: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012374957092106342
    2. ' -' → logprob: -4.8873748779296875
    3. '))' → logprob: -5.8873748779296875
    4. ')' → logprob: -6.2623748779296875
    5. '1' → logprob: -10.762374877929688
    6. ' ' → logprob: -10.762374877929688
    7. '   ' → logprob: -11.137374877929688
    8. ')))' → logprob: -12.137374877929688
    9. ')-' → logprob: -13.012374877929688
    10. '0' → logprob: -13.137374877929688

Token 793: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001605115394340828
    2. ' ' → logprob: -8.750160217285156
    3. '2' → logprob: -13.750160217285156
    4. '   ' → logprob: -14.500160217285156
    5. ')' → logprob: -15.875160217285156
    6. '  ' → logprob: -16.250160217285156
    7. '```' → logprob: -17.312660217285156
    8. '-' → logprob: -17.375160217285156
    9. '))' → logprob: -18.437660217285156
    10. '0' → logprob: -18.500160217285156

Token 794: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.967624019831419e-05
    2. ' ' → logprob: -10.375060081481934
    3. '2' → logprob: -10.500060081481934
    4. '   ' → logprob: -14.375060081481934
    5. ')' → logprob: -15.875060081481934
    6. '```' → logprob: -16.375059127807617
    7. '  ' → logprob: -17.000059127807617
    8. '-' → logprob: -17.812559127807617
    9. '3' → logprob: -18.437559127807617
    10. '0' → logprob: -18.625059127807617

Token 795: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0014896272914484143
    2. ')' → logprob: -7.126489639282227
    3. ')))' → logprob: -8.126489639282227
    4. '))
' → logprob: -8.751489639282227
    5. ' ))' → logprob: -9.126489639282227
    6. '       ' → logprob: -10.126489639282227
    7. '   ' → logprob: -10.251489639282227
    8. '))

' → logprob: -11.376489639282227
    9. ' ' → logprob: -11.501489639282227
    10. ')),' → logprob: -11.501489639282227

Token 796: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044926130794920027
    2. '))' → logprob: -9.125449180603027
    3. '       ' → logprob: -9.250449180603027
    4. ' )' → logprob: -9.375449180603027
    5. '   ' → logprob: -9.875449180603027
    6. ')
' → logprob: -10.125449180603027
    7. ')))' → logprob: -10.500449180603027
    8. '),' → logprob: -11.625449180603027
    9. ')+' → logprob: -12.625449180603027
    10. ')}}' → logprob: -12.750449180603027

Token 797: ' m' (ID: 284)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.10699933767318726
    2. '3' → logprob: -2.856999397277832
    3. 'm' → logprob: -3.731999397277832
    4. '1' → logprob: -4.481999397277832
    5. '2' → logprob: -5.606999397277832
    6. '0' → logprob: -5.981999397277832
    7. ' ' → logprob: -6.481999397277832
    8. '8' → logprob: -8.106999397277832
    9. '5' → logprob: -8.481999397277832
    10. ' m' → logprob: -8.981999397277832

Token 798: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00377573911100626
    2. '))' → logprob: -5.878775596618652
    3. '       ' → logprob: -8.253775596618652
    4. ')
' → logprob: -8.753775596618652
    5. ')))' → logprob: -8.878775596618652
    6. '   ' → logprob: -8.878775596618652
    7. ' )' → logprob: -9.128775596618652
    8. '+' → logprob: -9.878775596618652
    9. '")' → logprob: -11.253775596618652
    10. '),' → logprob: -11.253775596618652

Token 799: ' produit' (ID: 29429)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14972980320453644
    2. ')' → logprob: -2.2747297286987305
    3. '+' → logprob: -4.1497297286987305
    4. 'print' → logprob: -4.5247297286987305
    5. ' +' → logprob: -5.5247297286987305
    6. '   ' → logprob: -6.2747297286987305
    7. '           ' → logprob: -7.0247297286987305
    8. '):' → logprob: -7.2747297286987305
    9. '<|end|>' → logprob: -7.6497297286987305
    10. ':' → logprob: -7.6497297286987305

Token 800: ' une' (ID: 2463)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.7714051008224487
    2. '"' → logprob: -1.1464051008224487
    3. '".' → logprob: -1.8964051008224487
    4. '.' → logprob: -2.7714052200317383
    5. ' "."' → logprob: -5.521405220031738
    6. ''.' → logprob: -6.521405220031738
    7. ' "' → logprob: -7.146405220031738
    8. ''' → logprob: -8.771405220031738
    9. ' .' → logprob: -9.021405220031738
    10. '("."' → logprob: -9.146405220031738

Token 801: ' autre' (ID: 20278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05115271732211113
    2. ' "' → logprob: -3.9261527061462402
    3. '.' → logprob: -4.67615270614624
    4. 'space' → logprob: -5.17615270614624
    5. ''' → logprob: -5.92615270614624
    6. ' espace' → logprob: -5.92615270614624
    7. ' space' → logprob: -6.17615270614624
    8. 'suite' → logprob: -6.67615270614624
    9. 's' → logprob: -7.05115270614624
    10. 'es' → logprob: -7.55115270614624

Token 802: ' suite' (ID: 13800)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07831929624080658
    2. '"."' → logprob: -3.0783193111419678
    3. ' .' → logprob: -4.578319072723389
    4. '".' → logprob: -4.828319072723389
    5. '"' → logprob: -4.953319072723389
    6. ''.' → logprob: -7.078319072723389
    7. '...' → logprob: -7.453319072723389
    8. '('.')' → logprob: -7.578319072723389
    9. '....' → logprob: -7.703319072723389
    10. '("."' → logprob: -7.703319072723389

Token 803: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.17731517553329468
    2. '.' → logprob: -2.4273152351379395
    3. '   ' → logprob: -3.4273152351379395
    4. '    ' → logprob: -3.9273152351379395
    5. 'de' → logprob: -4.8023152351379395
    6. ' of' → logprob: -4.9273152351379395
    7. '       ' → logprob: -5.3023152351379395
    8. ' d' → logprob: -8.427314758300781
    9. '        ' → logprob: -8.802314758300781
    10. '           ' → logprob: -8.802314758300781

Token 804: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.5947312712669373
    2. '.' → logprob: -0.8447312712669373
    3. '"."' → logprob: -4.719731330871582
    4. '".' → logprob: -5.219731330871582
    5. ''.' → logprob: -5.969731330871582
    6. 'dots' → logprob: -7.094731330871582
    7. ' points' → logprob: -7.594731330871582
    8. '.points' → logprob: -8.719731330871582
    9. 'point' → logprob: -9.969731330871582
    10. 'period' → logprob: -10.094731330871582

Token 805: ',
' (ID: 412)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 806: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8807905316352844
    2. ')' → logprob: -1.2557904720306396
    3. '"\' → logprob: -2.1307904720306396
    4. '   ' → logprob: -3.0057904720306396
    5. '       ' → logprob: -3.3807904720306396
    6. ''\' → logprob: -3.7557904720306396
    7. '"' → logprob: -3.8807904720306396
    8. '```' → logprob: -4.880790710449219
    9. '\' → logprob: -5.005790710449219
    10. '<|end|>' → logprob: -5.130790710449219

Token 807: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07634460180997849
    2. '   ' → logprob: -4.0763444900512695
    3. '.' → logprob: -4.2013444900512695
    4. '#' (adapté à ' #') → logprob: -4.8263444900512695
    5. ')' → logprob: -4.8263444900512695
    6. '"' → logprob: -4.9513444900512695
    7. '*' → logprob: -5.5763444900512695
    8. '           ' → logprob: -5.7013444900512695
    9. '...' → logprob: -5.9513444900512695
    10. '4' → logprob: -6.0763444900512695

Token 808: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17220672965049744
    2. '   ' → logprob: -2.6722066402435303
    3. ')' → logprob: -3.1722066402435303
    4. '<|end|>' → logprob: -3.5472066402435303
    5. ')
' → logprob: -5.797206878662109
    6. ' ' → logprob: -6.297206878662109
    7. '\n' → logprob: -6.297206878662109
    8. '...' → logprob: -6.297206878662109
    9. '           ' → logprob: -6.672206878662109
    10. '"\' → logprob: -6.672206878662109

Token 809: ' ici' (ID: 27994)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1163170337677002
    2. '"\' → logprob: -1.2413170337677002
    3. '"' → logprob: -2.2413170337677
    4. '   ' → logprob: -2.4913170337677
    5. '\n' → logprob: -2.9913170337677
    6. '")' → logprob: -3.2413170337677
    7. ')
' → logprob: -3.3663170337677
    8. '       ' → logprob: -4.241316795349121
    9. ' end' → logprob: -4.616316795349121
    10. ' ' → logprob: -4.991316795349121

Token 810: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 811: ' longueur' (ID: 104613)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 812: ' dépend' (ID: 68660)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3860032260417938
    2. ' =' → logprob: -2.511003255844116
    3. ' est' → logprob: -2.511003255844116
    4. ')' → logprob: -2.761003255844116
    5. ' is' → logprob: -3.261003255844116
    6. '   ' → logprob: -4.011003017425537
    7. '<|end|>' → logprob: -4.511003017425537
    8. ' ' → logprob: -4.886003017425537
    9. ' )' → logprob: -5.386003017425537
    10. ' de' → logprob: -5.761003017425537

Token 813: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.46532681584358215
    2. '   ' → logprob: -2.0903267860412598
    3. ' des' → logprob: -2.8403267860412598
    4. 'de' → logprob: -2.9653267860412598
    5. ')' → logprob: -3.4653267860412598
    6. '=' → logprob: -3.5903267860412598
    7. ' ' → logprob: -3.9653267860412598
    8. '  ' → logprob: -4.34032678604126
    9. 'des' → logprob: -4.46532678604126
    10. '    ' → logprob: -4.71532678604126

Token 814: ' d' (ID: 272)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.7222735285758972
    2. ' ' → logprob: -1.847273588180542
    3. 'm' → logprob: -2.222273588180542
    4. ' m' → logprob: -2.347273588180542
    5. ')' → logprob: -2.847273588180542
    6. '<|end|>' → logprob: -3.222273588180542
    7. ' (' → logprob: -3.722273588180542
    8. ' )' → logprob: -4.472273349761963
    9. '(' → logprob: -4.847273349761963
    10. '1' → logprob: -5.972273349761963

Token 815: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5256413221359253
    2. '   ' → logprob: -2.150641441345215
    3. ' *' → logprob: -2.150641441345215
    4. '-' → logprob: -2.400641441345215
    5. ')' → logprob: -3.025641441345215
    6. '*' → logprob: -3.775641441345215
    7. ' ' → logprob: -5.775641441345215
    8. ' (' → logprob: -5.900641441345215
    9. '(' → logprob: -6.275641441345215
    10. '    ' → logprob: -6.775641441345215

Token 816: ' i' (ID: 575)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.3776387572288513
    2. '   ' → logprob: -2.127638816833496
    3. ' ' → logprob: -2.877638816833496
    4. ')' → logprob: -3.127638816833496
    5. 'm' → logprob: -3.502638816833496
    6. '    ' → logprob: -4.502638816833496
    7. '1' → logprob: -4.627638816833496
    8. ' m' → logprob: -5.127638816833496
    9. '  ' → logprob: -5.127638816833496
    10. '<|end|>' → logprob: -5.127638816833496

Token 817: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.873042106628418
    2. '   ' → logprob: -1.373042106628418
    3. ' -' → logprob: -1.748042106628418
    4. ',' → logprob: -2.498042106628418
    5. '-' → logprob: -3.373042106628418
    6. '+' → logprob: -4.123042106628418
    7. '  ' → logprob: -4.373042106628418
    8. ' ' → logprob: -6.123042106628418
    9. ' +' → logprob: -6.623042106628418
    10. '    ' → logprob: -6.748042106628418

Token 818: ' et' (ID: 859)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.33565881848335266
    2. '4' → logprob: -2.0856587886810303
    3. '   ' → logprob: -2.9606587886810303
    4. ')' → logprob: -3.5856587886810303
    5. ' m' → logprob: -3.5856587886810303
    6. ' ' → logprob: -3.8356587886810303
    7. '    ' → logprob: -4.710659027099609
    8. '  ' → logprob: -5.335659027099609
    9. ' )' → logprob: -5.835659027099609
    10. '     ' → logprob: -6.210659027099609

Token 819: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00045557913836091757
    2. ' m' → logprob: -7.750455379486084
    3. '4' → logprob: -11.000455856323242
    4. '(m' → logprob: -12.625455856323242
    5. ' ' → logprob: -13.000455856323242
    6. '(' → logprob: -14.125455856323242
    7. ' (' → logprob: -14.875455856323242
    8. '+' → logprob: -14.875455856323242
    9. '   ' → logprob: -15.125455856323242
    10. '```' → logprob: -16.125455856323242

Token 820: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7326831817626953
    2. '       ' → logprob: -0.9826831817626953
    3. '   ' → logprob: -2.2326831817626953
    4. '.' → logprob: -4.107683181762695
    5. '")' → logprob: -5.107683181762695
    6. '<|end|>' → logprob: -5.357683181762695
    7. ']' → logprob: -6.232683181762695
    8. ')
' → logprob: -6.482683181762695
    9. ').' → logprob: -6.482683181762695
    10. '           ' → logprob: -7.357683181762695

Token 821: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003301016695331782
    2. '           ' → logprob: -8.375329971313477
    3. ' for' → logprob: -10.375329971313477
    4. 'for' → logprob: -10.375329971313477
    5. '   ' → logprob: -10.625329971313477
    6. '	' → logprob: -11.875329971313477
    7. '               ' → logprob: -13.500329971313477
    8. 'print' → logprob: -14.500329971313477
    9. '	   ' → logprob: -14.500329971313477
    10. '```' → logprob: -14.500329971313477

Token 822: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011834424221888185
    2. 'for' → logprob: -7.25118350982666
    3. '           ' → logprob: -8.75118350982666
    4. '   ' → logprob: -9.00118350982666
    5. ' for' → logprob: -9.12618350982666
    6. 'print' → logprob: -9.50118350982666
    7. '	' → logprob: -13.50118350982666
    8. '               ' → logprob: -13.50118350982666
    9. ' print' → logprob: -13.62618350982666
    10. '```' → logprob: -13.75118350982666

Token 823: ' L' (ID: 451)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022086622193455696
    2. '           ' → logprob: -6.377208709716797
    3. '   ' → logprob: -8.377208709716797
    4. ' for' → logprob: -9.002208709716797
    5. 'for' → logprob: -9.127208709716797
    6. 'print' → logprob: -10.502208709716797
    7. ' print' → logprob: -12.252208709716797
    8. '               ' → logprob: -12.627208709716797
    9. '	' → logprob: -12.752208709716797
    10. ' ' → logprob: -13.752208709716797

Token 824: ''utilisation' (ID: 73991)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6210106611251831
    2. 'e' → logprob: -1.996010661125183
    3. 'print' → logprob: -2.3710107803344727
    4. '   ' → logprob: -2.4960107803344727
    5. '=' → logprob: -3.6210107803344727
    6. ' for' → logprob: -3.7460107803344727
    7. 'i' → logprob: -4.371010780334473
    8. '       ' → logprob: -4.496010780334473
    9. ')' → logprob: -4.496010780334473
    10. ' =' → logprob: -4.746010780334473

Token 825: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4061078727245331
    2. '   ' → logprob: -1.9061079025268555
    3. '    ' → logprob: -2.0311079025268555
    4. ' of' → logprob: -4.6561079025268555
    5. '       ' → logprob: -4.7811079025268555
    6. ' d' → logprob: -4.7811079025268555
    7. ' des' → logprob: -5.2811079025268555
    8. ' ' → logprob: -5.5311079025268555
    9. '        ' → logprob: -5.7811079025268555
    10. ')' → logprob: -5.7811079025268555

Token 826: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.46495965123176575
    2. '+' → logprob: -1.3399596214294434
    3. '"' → logprob: -3.0899596214294434
    4. 'f' → logprob: -3.8399596214294434
    5. 'end' → logprob: -4.964959621429443
    6. ' f' → logprob: -5.089959621429443
    7. ' print' → logprob: -5.089959621429443
    8. ' +' → logprob: -5.339959621429443
    9. ''' → logprob: -5.589959621429443
    10. 's' → logprob: -5.714959621429443

Token 827: ' compréhension' (ID: 142333)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19728219509124756
    2. 'for' → logprob: -2.447282314300537
    3. 'join' → logprob: -3.447282314300537
    4. '+' → logprob: -3.572282314300537
    5. 'f' → logprob: -4.197282314300537
    6. ' print' → logprob: -5.572282314300537
    7. 'end' → logprob: -5.822282314300537
    8. ' for' → logprob: -6.447282314300537
    9. 'plus' → logprob: -6.447282314300537
    10. 'format' → logprob: -6.697282314300537

Token 828: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029920566827058792
    2. ' [' → logprob: -3.7799205780029297
    3. '[
' → logprob: -5.27992057800293
    4. ' [
' → logprob: -7.90492057800293
    5. '[x' → logprob: -7.90492057800293
    6. '_list' → logprob: -8.40492057800293
    7. '_' → logprob: -8.90492057800293
    8. 'print' → logprob: -9.02992057800293
    9. 's' → logprob: -9.27992057800293
    10. 'list' → logprob: -9.90492057800293

Token 829: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.37781256437301636
    2. 'list' → logprob: -1.6278126239776611
    3. '[' → logprob: -2.252812623977661
    4. 'print' → logprob: -4.877812385559082
    5. '[x' → logprob: -5.752812385559082
    6. ' liste' → logprob: -6.627812385559082
    7. '[
' → logprob: -8.252812385559082
    8. 'x' → logprob: -8.627812385559082
    9. 'l' → logprob: -9.127812385559082
    10. '[l' → logprob: -9.252812385559082

Token 830: ' ici' (ID: 27994)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028918512165546417
    2. ' [' → logprob: -3.653918504714966
    3. '[
' → logprob: -7.028918743133545
    4. 'print' → logprob: -8.153918266296387
    5. 's' → logprob: -8.278918266296387
    6. '   ' → logprob: -8.278918266296387
    7. '[x' → logprob: -8.778918266296387
    8. ' s' → logprob: -8.778918266296387
    9. '["' → logprob: -9.153918266296387
    10. '[s' → logprob: -9.403918266296387

Token 831: ' est' (ID: 893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.019407596439123154
    2. ' [' → logprob: -4.269407749176025
    3. '       ' → logprob: -6.394407749176025
    4. ' =' → logprob: -6.644407749176025
    5. ' for' → logprob: -7.394407749176025
    6. 'for' → logprob: -7.644407749176025
    7. '   ' → logprob: -7.769407749176025
    8. '=' → logprob: -8.644407272338867
    9. '           ' → logprob: -9.144407272338867
    10. '[
' → logprob: -9.519407272338867

Token 832: ' dét' (ID: 31931)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0022918060421943665
    2. 'print' → logprob: -6.377291679382324
    3. ' [' → logprob: -7.752291679382324
    4. '[p' → logprob: -9.877291679382324
    5. 'None' → logprob: -10.252291679382324
    6. '[
' → logprob: -10.877291679382324
    7. '[x' → logprob: -11.377291679382324
    8. 'for' → logprob: -12.252291679382324
    9. '[[' → logprob: -12.252291679382324
    10. ' None' → logprob: -12.627291679382324

Token 833: 'ourn' (ID: 4727)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7633234858512878
    2. 'ermin' → logprob: -2.1383235454559326
    3. 'print' → logprob: -2.3883235454559326
    4. 'ourn' → logprob: -2.8883235454559326
    5. 'endue' → logprob: -2.8883235454559326
    6. '[]' → logprob: -3.0133235454559326
    7. 'ected' → logprob: -3.2633235454559326
    8. 'for' → logprob: -3.6383235454559326
    9. 'ach' → logprob: -3.7633235454559326
    10. '   ' → logprob: -4.1383233070373535

Token 834: 'ée' (ID: 2894)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.06265170872211456
    2. 'ée' → logprob: -2.9376516342163086
    3. '[' → logprob: -4.937651634216309
    4. 'i' → logprob: -8.562651634216309
    5. 'e' → logprob: -9.187651634216309
    6. 'é' → logprob: -9.812651634216309
    7. 'issement' → logprob: -9.937651634216309
    8. 'ee' → logprob: -10.187651634216309
    9. 'it' → logprob: -10.812651634216309
    10. 'ies' → logprob: -11.187651634216309

Token 835: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5136869549751282
    2. 'for' → logprob: -1.7636868953704834
    3. ' for' → logprob: -2.1386868953704834
    4. '[x' → logprob: -3.2636868953704834
    5. '       ' → logprob: -3.7636868953704834
    6. '   ' → logprob: -4.0136871337890625
    7. '           ' → logprob: -4.6386871337890625
    8. ']' → logprob: -5.1386871337890625
    9. '(x' → logprob: -5.8886871337890625
    10. ' [' → logprob: -6.0136871337890625

Token 836: ' ses' (ID: 6707)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6517953872680664
    2. '[' → logprob: -1.1517953872680664
    3. '_' → logprob: -2.0267953872680664
    4. ' print' → logprob: -4.026795387268066
    5. 'aff' → logprob: -5.401795387268066
    6. ' _' → logprob: -6.026795387268066
    7. 'for' → logprob: -6.276795387268066
    8. ' [' → logprob: -7.401795387268066
    9. '_[' → logprob: -7.401795387268066
    10. ' afficher' → logprob: -7.526795387268066

Token 837: ' effets' (ID: 72414)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5013493895530701
    2. ' effets' → logprob: -1.8763494491577148
    3. 'eff' → logprob: -2.001349449157715
    4. 'print' → logprob: -2.501349449157715
    5. '[' → logprob: -4.876349449157715
    6. 'effects' → logprob: -5.126349449157715
    7. '_eff' → logprob: -6.126349449157715
    8. ' effects' → logprob: -6.876349449157715
    9. 'b' → logprob: -7.126349449157715
    10. ' effet' → logprob: -7.376349449157715

Token 838: ' secondaires' (ID: 170305)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.42987942695617676
    2. 'de' → logprob: -1.0548794269561768
    3. '_de' → logprob: -7.554879188537598
    4. 'b' → logprob: -8.179879188537598
    5. 'd' → logprob: -9.304879188537598
    6. '_' → logprob: -9.804879188537598
    7. '   ' → logprob: -10.304879188537598
    8. '[' → logprob: -10.679879188537598
    9. 'side' → logprob: -10.804879188537598
    10. '    ' → logprob: -10.929879188537598

Token 839: ' avec' (ID: 3937)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02676941081881523
    2. '       ' → logprob: -4.151769638061523
    3. ' [' → logprob: -4.651769638061523
    4. '   ' → logprob: -7.901769638061523
    5. '[x' → logprob: -8.526769638061523
    6. ':' → logprob: -8.776769638061523
    7. 'print' → logprob: -9.026769638061523
    8. '           ' → logprob: -9.276769638061523
    9. 'for' → logprob: -10.901769638061523
    10. ' for' → logprob: -11.026769638061523

Token 840: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009120052680373192
    2. '[' → logprob: -4.759119987487793
    3. ' print' → logprob: -7.634119987487793
    4. ' [' → logprob: -11.134119987487793
    5. '(print' → logprob: -12.884119987487793
    6. '[
' → logprob: -13.384119987487793
    7. '```' → logprob: -13.384119987487793
    8. '
' → logprob: -14.884119987487793
    9. '   ' → logprob: -15.634119987487793
    10. '#print' → logprob: -15.884119987487793

Token 841: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1216258704662323
    2. '[x' → logprob: -3.1216259002685547
    3. '   ' → logprob: -3.6216259002685547
    4. '       ' → logprob: -3.8716259002685547
    5. ' [' → logprob: -3.9966259002685547
    6. '(x' → logprob: -7.621625900268555
    7. '           ' → logprob: -7.621625900268555
    8. ' =' → logprob: -7.996625900268555
    9. '[
' → logprob: -7.996625900268555
    10. '[i' → logprob: -8.246625900268555

Token 842: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.577327311038971
    2. '       ' → logprob: -0.827327311038971
    3. '   ' → logprob: -7.077327251434326
    4. ' [' → logprob: -7.702327251434326
    5. '           ' → logprob: -10.202327728271484
    6. '[x' → logprob: -11.577327728271484
    7. 'print' → logprob: -12.202327728271484
    8. ' ' → logprob: -12.327327728271484
    9. '	' → logprob: -12.452327728271484
    10. '[[' → logprob: -12.452327728271484

Token 843: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -0.001291904947720468
    2. '["' → logprob: -7.001291751861572
    3. '   ' → logprob: -8.62629222869873
    4. '[[' → logprob: -9.12629222869873
    5. ' [' → logprob: -10.25129222869873
    6. '       ' → logprob: -10.37629222869873
    7. '['' → logprob: -12.00129222869873
    8. '[
' → logprob: -12.00129222869873
    9. 'print' → logprob: -12.37629222869873
    10. '           ' → logprob: -13.75129222869873

Token 844: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.0
    3. '(print' → logprob: -18.375
    4. 'printf' → logprob: -21.25
    5. 'prin' → logprob: -21.375
    6. '   ' → logprob: -21.875
    7. '
' → logprob: -22.0
    8. 'prints' → logprob: -22.625
    9. ' ' → logprob: -22.625
    10. '#print' → logprob: -22.875

Token 845: '("."' (ID: 190511)
  Prédit: '("."'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("."' → logprob: -0.017339065670967102
    2. '("' → logprob: -4.76733922958374
    3. '(x' → logprob: -5.14233922958374
    4. '(".' → logprob: -6.76733922958374
    5. '('.' → logprob: -7.14233922958374
    6. '(' → logprob: -7.51733922958374
    7. '(f' → logprob: -8.642338752746582
    8. ' ("' → logprob: -10.517338752746582
    9. '(("' → logprob: -11.017338752746582
    10. '   ' → logprob: -11.017338752746582

Token 846: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.013256576843559742
    2. ' *' → logprob: -4.388256549835205
    3. ')' → logprob: -7.763256549835205
    4. ')*' → logprob: -9.138257026672363
    5. '*x' → logprob: -9.638257026672363
    6. '	' → logprob: -10.513257026672363
    7. '*"' → logprob: -10.888257026672363
    8. '*)' → logprob: -11.138257026672363
    9. '"' → logprob: -11.263257026672363
    10. '(x' → logprob: -11.638257026672363

Token 847: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06230040267109871
    2. '4' → logprob: -2.812300443649292
    3. ' (' → logprob: -8.062300682067871
    4. ' ' → logprob: -11.312300682067871
    5. '   ' → logprob: -12.687300682067871
    6. '{' → logprob: -13.562300682067871
    7. ')' → logprob: -15.562300682067871
    8. '[' → logprob: -16.312299728393555
    9. '(
' → logprob: -16.562299728393555
    10. '(int' → logprob: -16.562299728393555

Token 848: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5232238173484802
    2. '(' → logprob: -0.8982238173484802
    3. ' (' → logprob: -9.398223876953125
    4. ' ' → logprob: -11.398223876953125
    5. '{' → logprob: -13.398223876953125
    6. '   ' → logprob: -13.398223876953125
    7. '(i' → logprob: -13.648223876953125
    8. 'i' → logprob: -14.898223876953125
    9. ')' → logprob: -15.023223876953125
    10. '(
' → logprob: -15.398223876953125

Token 849: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7159523963928223
    2. '*i' → logprob: -0.7159523963928223
    3. ' *' → logprob: -4.340952396392822
    4. 'i' → logprob: -4.715952396392822
    5. ' i' → logprob: -8.590951919555664
    6. ')' → logprob: -8.590951919555664
    7. '   ' → logprob: -9.215951919555664
    8. ')*' → logprob: -10.840951919555664
    9. '[i' → logprob: -11.340951919555664
    10. '	i' → logprob: -11.465951919555664

Token 850: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.735893965815194e-05
    2. ' i' → logprob: -11.000017166137695
    3. '	i' → logprob: -15.125017166137695
    4. '   ' → logprob: -15.875017166137695
    5. '(i' → logprob: -16.875017166137695
    6. '*i' → logprob: -17.500017166137695
    7. ')i' → logprob: -18.000017166137695
    8. ' ' → logprob: -18.125017166137695
    9. '(' → logprob: -18.625017166137695
    10. '       ' → logprob: -19.125017166137695

Token 851: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10043375939130783
    2. ' +' → logprob: -2.350433826446533
    3. '+x' → logprob: -9.725433349609375
    4. ',' → logprob: -10.100433349609375
    5. ')' → logprob: -10.475433349609375
    6. '   ' → logprob: -10.725433349609375
    7. '       ' → logprob: -11.100433349609375
    8. '        ' → logprob: -11.225433349609375
    9. '    ' → logprob: -11.600433349609375
    10. '+
' → logprob: -11.975433349609375

Token 852: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.13388703338569e-06
    2. ' x' → logprob: -11.625009536743164
    3. '"x' → logprob: -16.875009536743164
    4. ')x' → logprob: -18.250009536743164
    5. '	x' → logprob: -18.375009536743164
    6. 's' → logprob: -18.875009536743164
    7. ''x' → logprob: -19.125009536743164
    8. '(x' → logprob: -19.250009536743164
    9. 'xab' → logprob: -19.375009536743164
    10. '   ' → logprob: -19.625009536743164

Token 853: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931772828102112
    2. ' +' → logprob: -0.6931772828102112
    3. ' ' → logprob: -11.818177223205566
    4. '        ' → logprob: -12.568177223205566
    5. '+"' → logprob: -12.568177223205566
    6. '          ' → logprob: -12.943177223205566
    7. '   ' → logprob: -13.068177223205566
    8. '            ' → logprob: -13.193177223205566
    9. '    ' → logprob: -13.318177223205566
    10. '                ' → logprob: -14.068177223205566

Token 854: ' "."' (ID: 50107)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.004364609718322754
    2. ' "."' → logprob: -5.754364490509033
    3. '("."' → logprob: -6.754364490509033
    4. '"' → logprob: -11.004364967346191
    5. '".' → logprob: -13.004364967346191
    6. ''.' → logprob: -14.004364967346191
    7. ' ' → logprob: -15.629364967346191
    8. '   ' → logprob: -15.879364967346191
    9. ' ("' → logprob: -16.129364013671875
    10. '.' → logprob: -16.254364013671875

Token 855: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07012927532196045
    2. ' *' → logprob: -2.69512939453125
    3. '*(' → logprob: -9.07012939453125
    4. '(' → logprob: -10.44512939453125
    5. '"' → logprob: -10.94512939453125
    6. '   ' → logprob: -11.44512939453125
    7. ' ' → logprob: -11.94512939453125
    8. ')' → logprob: -12.57012939453125
    9. '"*' → logprob: -12.57012939453125
    10. ' (' → logprob: -13.19512939453125

Token 856: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015062900492921472
    2. ' (' → logprob: -6.501506328582764
    3. '((' → logprob: -12.501505851745605
    4. ' ' → logprob: -16.001506805419922
    5. '   ' → logprob: -16.251506805419922
    6. '  ' → logprob: -16.751506805419922
    7. '4' → logprob: -17.376506805419922
    8. ' ((' → logprob: -18.001506805419922
    9. '(
' → logprob: -18.126506805419922
    10. '    ' → logprob: -18.626506805419922

Token 857: '4' (ID: 19)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036111166700720787
    2. '4' → logprob: -5.753611087799072
    3. ' (' → logprob: -7.753611087799072
    4. ' ' → logprob: -12.87861156463623
    5. '   ' → logprob: -14.25361156463623
    6. '((' → logprob: -15.50361156463623
    7. '{' → logprob: -15.62861156463623
    8. '  ' → logprob: -15.87861156463623
    9. '[' → logprob: -16.503610610961914
    10. '(
' → logprob: -16.753610610961914

Token 858: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.18985165655612946
    2. ' *' → logprob: -1.8148516416549683
    3. '*(' → logprob: -4.939851760864258
    4. '(m' → logprob: -6.689851760864258
    5. '(' → logprob: -7.439851760864258
    6. '(d' → logprob: -7.564851760864258
    7. ' (' → logprob: -7.689851760864258
    8. ' ' → logprob: -10.314851760864258
    9. '   ' → logprob: -11.314851760864258
    10. '((' → logprob: -11.314851760864258

Token 859: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0004957250785082579
    2. ' (' → logprob: -7.875495910644531
    3. '(m' → logprob: -9.750495910644531
    4. '(' → logprob: -9.875495910644531
    5. '((' → logprob: -12.250495910644531
    6. '   ' → logprob: -14.125495910644531
    7. '  ' → logprob: -16.12549591064453
    8. ' ' → logprob: -17.12549591064453
    9. '(n' → logprob: -17.37549591064453
    10. 'd' → logprob: -17.62549591064453

Token 860: 'd' (ID: 67)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0898008793592453
    2. 'd' → logprob: -2.4648008346557617
    3. '(' → logprob: -7.464800834655762
    4. ' (' → logprob: -8.214800834655762
    5. ' d' → logprob: -12.089800834655762
    6. '   ' → logprob: -12.464800834655762
    7. '(
' → logprob: -12.589800834655762
    8. ' ' → logprob: -13.964800834655762
    9. '	d' → logprob: -14.089800834655762
    10. '     ' → logprob: -14.714800834655762

Token 861: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14280031621456146
    2. ' -' → logprob: -2.0178003311157227
    3. '-i' → logprob: -9.142800331115723
    4. '(' → logprob: -12.517800331115723
    5. ' ' → logprob: -12.517800331115723
    6. 'm' → logprob: -13.017800331115723
    7. '   ' → logprob: -13.392800331115723
    8. 'd' → logprob: -13.392800331115723
    9. ' (' → logprob: -13.767800331115723
    10. '[' → logprob: -13.892800331115723

Token 862: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011098993010818958
    2. ' i' → logprob: -4.511098861694336
    3. '   ' → logprob: -11.011098861694336
    4. '(i' → logprob: -11.136098861694336
    5. ' (' → logprob: -11.261098861694336
    6. '(' → logprob: -13.136098861694336
    7. '	i' → logprob: -13.636098861694336
    8. ' ' → logprob: -14.011098861694336
    9. '[i' → logprob: -14.011098861694336
    10. '  ' → logprob: -14.761098861694336

Token 863: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06212139502167702
    2. ' -' → logprob: -2.8121213912963867
    3. '1' → logprob: -9.437121391296387
    4. ')' → logprob: -10.812121391296387
    5. ' ' → logprob: -10.937121391296387
    6. '[' → logprob: -11.062121391296387
    7. '<|end|>' → logprob: -11.312121391296387
    8. '<|end|>' → logprob: -12.937121391296387
    9. '   ' → logprob: -13.187121391296387
    10. ')-' → logprob: -14.062121391296387

Token 864: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002043748099822551
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.250204086303711
    4. '<|end|>' → logprob: -16.87520408630371
    5. '[' → logprob: -17.12520408630371
    6. '```' → logprob: -17.25020408630371
    7. '  ' → logprob: -17.87520408630371
    8. '-' → logprob: -18.25020408630371
    9. '       ' → logprob: -18.50020408630371
    10. ')' → logprob: -18.50020408630371

Token 865: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.613945101387799e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.375085830688477
    4. '-' → logprob: -16.187585830688477
    5. '
' → logprob: -16.375085830688477
    6. '(' → logprob: -16.500085830688477
    7. '```' → logprob: -16.625085830688477
    8. '[' → logprob: -16.750085830688477
    9. ')' → logprob: -16.875085830688477
    10. 'print' → logprob: -16.937585830688477

Token 866: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012440544553101063
    2. '-' → logprob: -5.1374406814575195
    3. '+' → logprob: -5.6374406814575195
    4. ')+' → logprob: -6.0124406814575195
    5. ' +' → logprob: -8.88744068145752
    6. '   ' → logprob: -9.26244068145752
    7. ' -' → logprob: -9.38744068145752
    8. ' )' → logprob: -10.01244068145752
    9. '```' → logprob: -10.26244068145752
    10. ' ' → logprob: -10.76244068145752

Token 867: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25216323137283325
    2. ' +' → logprob: -1.5021631717681885
    3. ')' → logprob: -9.25216293334961
    4. '   ' → logprob: -10.12716293334961
    5. ' ' → logprob: -10.50216293334961
    6. ')+' → logprob: -10.87716293334961
    7. '```' → logprob: -11.37716293334961
    8. '  ' → logprob: -11.75216293334961
    9. '    ' → logprob: -12.37716293334961
    10. '[' → logprob: -12.37716293334961

Token 868: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0028086788952350616
    2. ' m' → logprob: -5.877808570861816
    3. '4' → logprob: -13.877808570861816
    4. ' ' → logprob: -14.002808570861816
    5. '   ' → logprob: -14.752808570861816
    6. '(m' → logprob: -14.877808570861816
    7. ' ' → logprob: -14.877808570861816
    8. ')' → logprob: -15.252808570861816
    9. '  ' → logprob: -16.252809524536133
    10. ')m' → logprob: -16.252809524536133

Token 869: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0037629054859280586
    2. ')' → logprob: -5.878762722015381
    3. ' ))' → logprob: -7.628762722015381
    4. ')]' → logprob: -8.253763198852539
    5. '   ' → logprob: -9.253763198852539
    6. '))
' → logprob: -10.128763198852539
    7. ' )' → logprob: -10.253763198852539
    8. '    ' → logprob: -11.378763198852539
    9. '       ' → logprob: -11.503763198852539
    10. '])' → logprob: -12.378763198852539

Token 870: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16603244841098785
    2. 'for' → logprob: -2.416032552719116
    3. '       ' → logprob: -2.916032552719116
    4. ']' → logprob: -5.791032314300537
    5. '	for' → logprob: -6.416032314300537
    6. '        ' → logprob: -6.666032314300537
    7. ' ]' → logprob: -7.166032314300537
    8. '   ' → logprob: -7.291032314300537
    9. ')' → logprob: -7.416032314300537
    10. '           ' → logprob: -7.541032314300537

Token 871: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005247514229267836
    2. ' x' → logprob: -5.255247592926025
    3. 's' → logprob: -11.380247116088867
    4. '	x' → logprob: -13.880247116088867
    5. ' ' → logprob: -15.005247116088867
    6. '(x' → logprob: -15.630247116088867
    7. '   ' → logprob: -15.755247116088867
    8. ' s' → logprob: -16.130247116088867
    9. '"x' → logprob: -16.130247116088867
    10. '_x' → logprob: -16.255247116088867

Token 872: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09290193021297455
    2. ' s' → logprob: -2.4679019451141357
    3. '(s' → logprob: -5.592901706695557
    4. '   ' → logprob: -9.842902183532715
    5. ' in' → logprob: -9.842902183532715
    6. ' (' → logprob: -10.592902183532715
    7. ']' → logprob: -10.717902183532715
    8. '[' → logprob: -10.717902183532715
    9. '[s' → logprob: -10.717902183532715
    10. '       ' → logprob: -11.842902183532715

Token 873: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005937448237091303
    2. ' s' → logprob: -5.130937576293945
    3. '   ' → logprob: -12.255937576293945
    4. '(s' → logprob: -13.630937576293945
    5. ' ' → logprob: -14.130937576293945
    6. '	s' → logprob: -14.505937576293945
    7. ']' → logprob: -15.130937576293945
    8. '    ' → logprob: -15.505937576293945
    9. '  ' → logprob: -15.630937576293945
    10. '[s' → logprob: -15.630937576293945

Token 874: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004279734566807747
    2. '0' → logprob: -5.504279613494873
    3. '   ' → logprob: -9.254280090332031
    4. '[
' → logprob: -10.004280090332031
    5. ' [' → logprob: -10.379280090332031
    6. '][' → logprob: -11.629280090332031
    7. '(' → logprob: -12.754280090332031
    8. ' ' → logprob: -12.879280090332031
    9. '```' → logprob: -13.129280090332031
    10. ']' → logprob: -13.566780090332031

Token 875: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.019237768370658e-05
    2. ' ' → logprob: -9.625090599060059
    3. '   ' → logprob: -11.750090599060059
    4. 'i' → logprob: -12.250090599060059
    5. '[' → logprob: -12.750090599060059
    6. '1' → logprob: -12.750090599060059
    7. 'd' → logprob: -13.500090599060059
    8. 'm' → logprob: -13.687590599060059
    9. '
' → logprob: -14.187590599060059
    10. '(' → logprob: -14.687590599060059

Token 876: ']]

' (ID: 84024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010485442908247933
    2. ' ]' → logprob: -10.250104904174805
    3. ')]' → logprob: -10.500104904174805
    4. ']]' → logprob: -11.125104904174805
    5. '>]' → logprob: -11.500104904174805
    6. '()]' → logprob: -12.250104904174805
    7. '}]' → logprob: -12.750104904174805
    8. ']}' → logprob: -13.000104904174805
    9. ']
' → logprob: -13.250104904174805
    10. '`]' → logprob: -13.500104904174805

Token 877: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1340365707874298
    2. '   ' → logprob: -2.5090365409851074
    3. 'for' → logprob: -3.5090365409851074
    4. '.' → logprob: -5.634036540985107
    5. 'print' → logprob: -5.634036540985107
    6. '#' → logprob: -6.009036540985107
    7. '<|end|>' → logprob: -6.759036540985107
    8. '[n' → logprob: -6.884036540985107
    9. 'if' → logprob: -7.634036540985107
    10. '```' → logprob: -7.884036540985107

Token 878: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03730732202529907
    2. '   ' → logprob: -3.9123072624206543
    3. 'for' → logprob: -4.162307262420654
    4. 'print' → logprob: -7.537307262420654
    5. '#' (adapté à ' #') → logprob: -8.162307739257812
    6. '[i' → logprob: -9.537307739257812
    7. '.' → logprob: -9.912307739257812
    8. '[m' → logprob: -10.412307739257812
    9. ' for' → logprob: -11.162307739257812
    10. 'if' → logprob: -11.662307739257812

Token 879: ' À' (ID: 27643)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1636631190776825
    2. 'for' → logprob: -2.413663148880005
    3. 'print' → logprob: -3.163663148880005
    4. 'if' → logprob: -4.163662910461426
    5. 'm' → logprob: -6.288662910461426
    6. '[m' → logprob: -6.788662910461426
    7. 'd' → logprob: -8.788662910461426
    8. '#' → logprob: -8.913662910461426
    9. '[i' → logprob: -9.788662910461426
    10. 'n' → logprob: -10.038662910461426

Token 880: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3564910292625427
    2. '#' → logprob: -1.9814910888671875
    3. '[' → logprob: -2.9814910888671875
    4. 'l' → logprob: -3.1064910888671875
    5. 'for' → logprob: -3.8564910888671875
    6. 'm' → logprob: -4.1064910888671875
    7. ' [' → logprob: -5.2314910888671875
    8. '   ' → logprob: -6.2314910888671875
    9. 'if' → logprob: -6.3564910888671875
    10. ' la' → logprob: -6.3564910888671875

Token 881: ' fin' (ID: 2131)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7272607088088989
    2. 'elif' → logprob: -1.727260708808899
    3. '#' → logprob: -1.852260708808899
    4. 'else' → logprob: -3.3522605895996094
    5. 'range' → logprob: -3.4772605895996094
    6. 'print' → logprob: -3.7272605895996094
    7. '[' → logprob: -3.9772605895996094
    8. ' for' → logprob: -4.352260589599609
    9. 'suite' → logprob: -4.477260589599609
    10. 'l' → logprob: -4.727260589599609

Token 882: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5154166221618652
    2. '[' → logprob: -1.0154166221618652
    3. 'for' → logprob: -3.5154166221618652
    4. ' for' → logprob: -5.390416622161865
    5. ' [' → logprob: -6.515416622161865
    6. 'print' → logprob: -6.765416622161865
    7. '#' → logprob: -7.265416622161865
    8. '[m' → logprob: -7.515416622161865
    9. '[
' → logprob: -7.515416622161865
    10. '[n' → logprob: -7.640416622161865

Token 883: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5439290404319763
    2. 'l' → logprob: -1.793929100036621
    3. 'la' → logprob: -2.168929100036621
    4. 'for' → logprob: -2.418929100036621
    5. '#' → logprob: -4.293929100036621
    6. 'print' → logprob: -4.918929100036621
    7. 'else' → logprob: -5.293929100036621
    8. 'if' → logprob: -5.668929100036621
    9. ' la' → logprob: -5.668929100036621
    10. 's' → logprob: -5.918929100036621

Token 884: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.591775119304657
    2. ' boucle' → logprob: -1.0917751789093018
    3. 'for' → logprob: -2.3417751789093018
    4. 'else' → logprob: -5.091774940490723
    5. 'loop' → logprob: -5.966774940490723
    6. '#' → logprob: -6.466774940490723
    7. ' for' → logprob: -6.716774940490723
    8. 'ligne' → logprob: -6.841774940490723
    9. 'fonction' → logprob: -7.841774940490723
    10. 'elif' → logprob: -8.091774940490723

Token 885: ' précédente' (ID: 177319)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5578784942626953
    2. '[' → logprob: -0.9328784942626953
    3. 'for' → logprob: -4.682878494262695
    4. ' for' → logprob: -4.932878494262695
    5. '[m' → logprob: -5.182878494262695
    6. '[n' → logprob: -5.682878494262695
    7. '#' → logprob: -5.682878494262695
    8. ' [' → logprob: -6.557878494262695
    9. 'print' → logprob: -6.932878494262695
    10. 'if' → logprob: -7.057878494262695

Token 886: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29612135887145996
    2. '[' → logprob: -1.42112135887146
    3. ',' → logprob: -5.421121597290039
    4. ' [' → logprob: -6.171121597290039
    5. ':' → logprob: -6.421121597290039
    6. '#' → logprob: -6.671121597290039
    7. '
' → logprob: -6.671121597290039
    8. 'for' → logprob: -7.046121597290039
    9. ':
' → logprob: -7.046121597290039
    10. ' for' → logprob: -7.421121597290039

Token 887: 'ou' (ID: 283)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7432799339294434
    2. '   ' → logprob: -0.7432799339294434
    3. '#' → logprob: -4.243279933929443
    4. 'for' → logprob: -4.618279933929443
    5. ')' → logprob: -4.743279933929443
    6. 'print' → logprob: -5.618279933929443
    7. ' for' → logprob: -5.743279933929443
    8. ' [' → logprob: -5.743279933929443
    9. '    
' → logprob: -6.743279933929443
    10. '
' → logprob: -6.868279933929443

Token 888: ' si' (ID: 1784)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5556202530860901
    2. '#' → logprob: -2.3056201934814453
    3. 'print' → logprob: -3.1806201934814453
    4. ' else' → logprob: -3.3056201934814453
    5. ' ailleurs' → logprob: -3.6806201934814453
    6. ' après' → logprob: -3.8056201934814453
    7. ' la' → logprob: -3.8056201934814453
    8. 'for' → logprob: -4.305620193481445
    9. 'elif' → logprob: -4.305620193481445
    10. 'au' → logprob: -4.305620193481445

Token 889: ' d' (ID: 272)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4992750883102417
    2. ' n' → logprob: -0.9992750883102417
    3. 'm' → logprob: -4.249275207519531
    4. ' m' → logprob: -5.124275207519531
    5. 'True' → logprob: -6.499275207519531
    6. ' True' → logprob: -6.499275207519531
    7. 'd' → logprob: -7.749275207519531
    8. ' d' → logprob: -8.124275207519531
    9. 'False' → logprob: -8.749275207519531
    10. ')' → logprob: -9.249275207519531

Token 890: ' vaut' (ID: 83004)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3985658884048462
    2. '==' → logprob: -1.5235658884048462
    3. ' >' → logprob: -2.6485657691955566
    4. '>' → logprob: -3.6485657691955566
    5. ' <' → logprob: -5.023565769195557
    6. ' !=' → logprob: -5.898565769195557
    7. ' >=' → logprob: -7.023565769195557
    8. '<' → logprob: -7.148565769195557
    9. '!=' → logprob: -7.273565769195557
    10. ' <=' → logprob: -7.398565769195557

Token 891: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0051916553638875484
    2. ' ' → logprob: -5.380191802978516
    3. '-' → logprob: -8.255191802978516
    4. '1' → logprob: -8.880191802978516
    5. '   ' → logprob: -9.630191802978516
    6. ' -' → logprob: -10.005191802978516
    7. '=' → logprob: -10.130191802978516
    8. '4' → logprob: -12.380191802978516
    9. '==' → logprob: -12.380191802978516
    10. 'None' → logprob: -12.880191802978516

Token 892: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4764461815357208
    2. '-' → logprob: -0.9764461517333984
    3. ' -' → logprob: -6.726446151733398
    4. ' ' → logprob: -7.226446151733398
    5. '=' → logprob: -7.851446151733398
    6. '   ' → logprob: -10.851446151733398
    7. '<' → logprob: -11.476446151733398
    8. '=-' → logprob: -11.851446151733398
    9. '1' → logprob: -12.101446151733398
    10. '==' → logprob: -13.101446151733398

Token 893: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5184791684150696
    2. ':' → logprob: -1.5184791088104248
    3. ')' → logprob: -2.393479108810425
    4. '   ' → logprob: -2.768479108810425
    5. '),' → logprob: -4.268479347229004
    6. '):
' → logprob: -4.643479347229004
    7. ',' → logprob: -5.268479347229004
    8. '[' → logprob: -7.018479347229004
    9. 'for' → logprob: -7.768479347229004
    10. ':
' → logprob: -7.893479347229004

Token 894: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3576906621456146
    2. '[' → logprob: -1.732690691947937
    3. '#' → logprob: -3.2326905727386475
    4. ' [' → logprob: -3.3576905727386475
    5. ' for' → logprob: -3.3576905727386475
    6. 'for' → logprob: -5.107690811157227
    7. ')' → logprob: -5.732690811157227
    8. '[n' → logprob: -7.107690811157227
    9. '
' → logprob: -7.232690811157227
    10. '       ' → logprob: -7.857690811157227

Token 895: ' boucle' (ID: 174211)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31206056475639343
    2. '#' → logprob: -2.062060594558716
    3. 'for' → logprob: -2.312060594558716
    4. 'print' → logprob: -3.812060594558716
    5. ' for' → logprob: -5.437060356140137
    6. ' [' → logprob: -5.937060356140137
    7. 'if' → logprob: -6.312060356140137
    8. ':' → logprob: -6.312060356140137
    9. '[m' → logprob: -6.437060356140137
    10. '   ' → logprob: -6.937060356140137

Token 896: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8757950067520142
    2. ':' → logprob: -1.2507950067520142
    3. ' n' → logprob: -2.0007948875427246
    4. 'for' → logprob: -3.2507948875427246
    5. ' for' → logprob: -3.2507948875427246
    6. '[' → logprob: -3.3757948875427246
    7. 'n' → logprob: -3.8757948875427246
    8. '#' → logprob: -5.250794887542725
    9. ' est' → logprob: -5.375794887542725
    10. ' continue' → logprob: -5.750794887542725

Token 897: ''est' (ID: 6616)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5156500935554504
    2. ' n' → logprob: -1.5156500339508057
    3. 'ne' → logprob: -2.7656500339508057
    4. '   ' → logprob: -3.1406500339508057
    5. '#' → logprob: -3.6406500339508057
    6. ' ne' → logprob: -3.8906500339508057
    7. 'a' → logprob: -5.515650272369385
    8. 's' → logprob: -5.640650272369385
    9. 'pas' → logprob: -5.765650272369385
    10. '==' → logprob: -5.890650272369385

Token 898: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.12720485031604767
    2. ' pas' → logprob: -2.1272048950195312
    3. ' jamais' → logprob: -9.252204895019531
    4. '#' → logprob: -9.502204895019531
    5. '   ' → logprob: -11.377204895019531
    6. 'pass' → logprob: -11.377204895019531
    7. 'for' → logprob: -11.627204895019531
    8. 'p' → logprob: -11.752204895019531
    9. '```' → logprob: -11.877204895019531
    10. '_pas' → logprob: -11.877204895019531

Token 899: ' exécut' (ID: 165350)
  Prédit: 'execut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'execut' → logprob: -0.4904753565788269
    2. 'ex' → logprob: -1.2404754161834717
    3. ' exécut' → logprob: -2.4904754161834717
    4. 'entrée' → logprob: -5.365475177764893
    5. 'exec' → logprob: -5.740475177764893
    6. ' execut' → logprob: -5.990475177764893
    7. 'execute' → logprob: -6.740475177764893
    8. ' parcour' → logprob: -6.865475177764893
    9. 'entr' → logprob: -7.115475177764893
    10. 'enter' → logprob: -7.865475177764893

Token 900: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00803917832672596
    2. 'é' → logprob: -5.1330389976501465
    3. 'e' → logprob: -6.5080389976501465
    4. 'ee' → logprob: -7.5080389976501465
    5. '#' → logprob: -10.133039474487305
    6. 'rée' → logprob: -12.133039474487305
    7. 'ed' → logprob: -12.383039474487305
    8. ']' → logprob: -12.633039474487305
    9. ')' → logprob: -12.883039474487305
    10. '   ' → logprob: -13.258039474487305

Token 901: '),
' (ID: 2313)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0399715900421143
    2. ':' → logprob: -1.1649715900421143
    3. '[' → logprob: -1.1649715900421143
    4. ':
' → logprob: -4.664971351623535
    5. 'for' → logprob: -5.289971351623535
    6. ',' → logprob: -6.164971351623535
    7. ' for' → logprob: -6.414971351623535
    8. ' [' → logprob: -6.914971351623535
    9. ')' → logprob: -7.164971351623535
    10. '):' → logprob: -7.539971351623535

Token 902: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003254715586081147
    2. '   ' → logprob: -5.8782548904418945
    3. 'print' → logprob: -8.503254890441895
    4. 'for' → logprob: -8.503254890441895
    5. '[m' → logprob: -11.378254890441895
    6. ' [' → logprob: -11.503254890441895
    7. 'if' → logprob: -12.253254890441895
    8. '#' → logprob: -12.378254890441895
    9. '```' → logprob: -13.378254890441895
    10. '    
' → logprob: -13.628254890441895

Token 903: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004106658045202494
    2. 'for' → logprob: -5.754106521606445
    3. 'print' → logprob: -8.129106521606445
    4. '   ' → logprob: -8.129106521606445
    5. 'if' → logprob: -8.629106521606445
    6. '[m' → logprob: -9.754106521606445
    7. '#' (adapté à ' #') → logprob: -10.129106521606445
    8. 'm' → logprob: -10.629106521606445
    9. ' [' → logprob: -11.754106521606445
    10. 'd' → logprob: -12.129106521606445

Token 904: ' on' (ID: 402)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001556759118102491
    2. 'print' → logprob: -7.126556873321533
    3. 'for' → logprob: -7.501556873321533
    4. '   ' → logprob: -9.751556396484375
    5. '[m' → logprob: -9.876556396484375
    6. 'm' → logprob: -10.626556396484375
    7. ' [' → logprob: -11.001556396484375
    8. 'if' → logprob: -11.001556396484375
    9. '#' → logprob: -12.251556396484375
    10. '       ' → logprob: -12.626556396484375

Token 905: ' cherche' (ID: 52345)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0721859261393547
    2. 'for' → logprob: -3.19718599319458
    3. 'print' → logprob: -3.69718599319458
    4. ' [' → logprob: -6.32218599319458
    5. ' for' → logprob: -7.32218599319458
    6. '#' → logprob: -7.69718599319458
    7. '   ' → logprob: -8.197185516357422
    8. 'if' → logprob: -8.197185516357422
    9. 'm' → logprob: -8.947185516357422
    10. ' print' → logprob: -9.947185516357422

Token 906: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9105562567710876
    2. '[' → logprob: -1.2855563163757324
    3. ' à' → logprob: -2.1605563163757324
    4. ' [' → logprob: -2.9105563163757324
    5. 'for' → logprob: -2.9105563163757324
    6. ' for' → logprob: -3.6605563163757324
    7. 'à' → logprob: -4.785556316375732
    8. ' ' → logprob: -5.035556316375732
    9. 'print' → logprob: -5.285556316375732
    10. ' to' → logprob: -5.410556316375732

Token 907: ' afficher' (ID: 146524)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41129669547080994
    2. 'print' → logprob: -1.1612967252731323
    3. 'for' → logprob: -3.9112966060638428
    4. ' [' → logprob: -6.161296844482422
    5. '
' → logprob: -7.911296844482422
    6. ' for' → logprob: -8.161296844482422
    7. '#' → logprob: -8.411296844482422
    8. '   ' → logprob: -8.536296844482422
    9. ' print' → logprob: -8.786296844482422
    10. 'if' → logprob: -9.286296844482422

Token 908: ' une' (ID: 2463)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.7034329771995544
    2. '("."' → logprob: -1.3284330368041992
    3. 's' → logprob: -1.5784330368041992
    4. '"' → logprob: -4.578433036804199
    5. '[s' → logprob: -5.328433036804199
    6. '."' → logprob: -5.703433036804199
    7. '".' → logprob: -5.828433036804199
    8. '"s' → logprob: -5.953433036804199
    9. '[' → logprob: -6.078433036804199
    10. ' "."' → logprob: -6.703433036804199

Token 909: ' sous' (ID: 14487)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.019628901034593582
    2. 'for' → logprob: -4.519629001617432
    3. 'print' → logprob: -5.019629001617432
    4. 's' → logprob: -8.144628524780273
    5. '[
' → logprob: -8.269628524780273
    6. '.' → logprob: -8.519628524780273
    7. ' [' → logprob: -8.644628524780273
    8. '[m' → logprob: -8.769628524780273
    9. '["' → logprob: -8.894628524780273
    10. '#' → logprob: -9.019628524780273

Token 910: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.15265989303588867
    2. 'liste' → logprob: -2.2776598930358887
    3. '[l' → logprob: -3.7776598930358887
    4. '[' → logprob: -4.777659893035889
    5. '   ' → logprob: -5.652659893035889
    6. '[-' → logprob: -6.902659893035889
    7. 'Liste' → logprob: -7.027659893035889
    8. '_l' → logprob: -7.652659893035889
    9. ' liste' → logprob: -7.902659893035889
    10. 'l' → logprob: -8.152660369873047

Token 911: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.00162043038289994
    2. 'ist' → logprob: -7.876620292663574
    3. 'liste' → logprob: -8.001620292663574
    4. '[' → logprob: -8.251620292663574
    5. 'site' → logprob: -8.501620292663574
    6. '#' → logprob: -8.751620292663574
    7. 'is' → logprob: -9.251620292663574
    8. 'ste' → logprob: -10.501620292663574
    9. 'im' → logprob: -10.876620292663574
    10. 'isted' → logprob: -11.251620292663574

Token 912: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9605289101600647
    2. '(s' → logprob: -0.9605289101600647
    3. '   ' → logprob: -2.21052885055542
    4. '[s' → logprob: -2.58552885055542
    5. 'for' → logprob: -4.33552885055542
    6. 's' → logprob: -4.58552885055542
    7. 'print' → logprob: -4.83552885055542
    8. '(' → logprob: -5.08552885055542
    9. '[i' → logprob: -6.21052885055542
    10. '[n' → logprob: -6.46052885055542

Token 913: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07893297076225281
    2. ' s' → logprob: -2.578933000564575
    3. '   ' → logprob: -11.578932762145996
    4. '[s' → logprob: -11.703932762145996
    5. '(s' → logprob: -11.828932762145996
    6. ' la' → logprob: -12.703932762145996
    7. ' ' → logprob: -12.703932762145996
    8. '[' → logprob: -12.703932762145996
    9. '`s' → logprob: -13.203932762145996
    10. '	s' → logprob: -13.453932762145996

Token 914: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00030412263004109263
    2. ' s' → logprob: -8.125304222106934
    3. '[s' → logprob: -12.875304222106934
    4. '[' → logprob: -13.000304222106934
    5. '(s' → logprob: -13.500304222106934
    6. '`s' → logprob: -14.625304222106934
    7. 'print' → logprob: -15.250304222106934
    8. '   ' → logprob: -15.500304222106934
    9. '```' → logprob: -15.750304222106934
    10. '
' → logprob: -15.875304222106934

Token 915: '',' (ID: 787)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.0008795426110737026
    2. 'm' → logprob: -7.625879764556885
    3. '   ' → logprob: -8.875879287719727
    4. '[' → logprob: -9.250879287719727
    5. '[d' → logprob: -9.750879287719727
    6. '[n' → logprob: -9.875879287719727
    7. ' [' → logprob: -11.875879287719727
    8. '[len' → logprob: -12.625879287719727
    9. ',' → logprob: -12.750879287719727
    10. '[
' → logprob: -12.875879287719727

Token 916: ' exactement' (ID: 108701)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.05174661800265312
    2. 'm' → logprob: -4.301746845245361
    3. '   ' → logprob: -4.426746845245361
    4. '[' → logprob: -4.676746845245361
    5. 'for' → logprob: -5.176746845245361
    6. ' for' → logprob: -5.676746845245361
    7. '[n' → logprob: -6.051746845245361
    8. '[s' → logprob: -7.426746845245361
    9. ' m' → logprob: -7.801746845245361
    10. '[d' → logprob: -7.926746845245361

Token 917: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15883129835128784
    2. '[s' → logprob: -2.4088313579559326
    3. '   ' → logprob: -3.2838313579559326
    4. '[' → logprob: -4.9088311195373535
    5. '(s' → logprob: -5.5338311195373535
    6. ' s' → logprob: -5.7838311195373535
    7. '[m' → logprob: -6.4088311195373535
    8. 'for' → logprob: -7.2838311195373535
    9. '[len' → logprob: -7.2838311195373535
    10. '[n' → logprob: -7.9088311195373535

Token 918: ' (' (ID: 350)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.09664171934127808
    2. 'm' → logprob: -2.721641778945923
    3. 's' → logprob: -4.721641540527344
    4. 'print' → logprob: -5.096641540527344
    5. '[d' → logprob: -5.846641540527344
    6. '[' → logprob: -6.221641540527344
    7. '[n' → logprob: -6.971641540527344
    8. 'n' → logprob: -6.971641540527344
    9. '   ' → logprob: -7.096641540527344
    10. '[s' → logprob: -7.096641540527344

Token 919: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.13714656233787537
    2. 'n' → logprob: -2.262146472930908
    3. ' m' → logprob: -4.512146472930908
    4. 'd' → logprob: -5.387146472930908
    5. ' n' → logprob: -5.512146472930908
    6. '   ' → logprob: -6.512146472930908
    7. '[m' → logprob: -6.512146472930908
    8. 's' → logprob: -7.762146472930908
    9. ' d' → logprob: -8.512146949768066
    10. '1' → logprob: -8.887146949768066

Token 920: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08010990917682648
    2. ' -' → logprob: -3.2051098346710205
    3. '[' → logprob: -4.0801100730896
    4. '[m' → logprob: -4.3301100730896
    5. ')' → logprob: -6.0801100730896
    6. '][' → logprob: -6.5801100730896
    7. ')[' → logprob: -7.2051100730896
    8. '[-' → logprob: -7.7051100730896
    9. ']' → logprob: -8.080109596252441
    10. 'm' → logprob: -8.580109596252441

Token 921: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12861065566539764
    2. '4' → logprob: -2.378610610961914
    3. ' ' → logprob: -4.378610610961914
    4. '2' → logprob: -4.628610610961914
    5. '3' → logprob: -5.253610610961914
    6. '5' → logprob: -8.003610610961914
    7. '   ' → logprob: -9.253610610961914
    8. '```' → logprob: -11.128610610961914
    9. '  ' → logprob: -12.003610610961914
    10. '-' → logprob: -12.503610610961914

Token 922: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006901554297655821
    2. '2' → logprob: -7.62568998336792
    3. '3' → logprob: -9.250690460205078
    4. '4' → logprob: -9.625690460205078
    5. ' ' → logprob: -10.625690460205078
    6. '5' → logprob: -12.125690460205078
    7. '```' → logprob: -12.125690460205078
    8. '   ' → logprob: -13.500690460205078
    9. '[' → logprob: -13.875690460205078
    10. ']' → logprob: -14.375690460205078

Token 923: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21256005764007568
    2. ']' → logprob: -2.5875601768493652
    3. ')[' → logprob: -3.5875601768493652
    4. '-' → logprob: -3.7125601768493652
    5. ')]' → logprob: -4.087560176849365
    6. ')-' → logprob: -4.337560176849365
    7. '])' → logprob: -4.462560176849365
    8. '][' → logprob: -4.962560176849365
    9. '[' → logprob: -5.837560176849365
    10. ' -' → logprob: -5.962560176849365

Token 924: 'ième' (ID: 41126)
  Prédit: 'ième'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ième' → logprob: -0.5325413346290588
    2. 'ème' → logprob: -1.782541275024414
    3. ']' → logprob: -1.907541275024414
    4. '[' → logprob: -3.532541275024414
    5. '[m' → logprob: -4.282541275024414
    6. 'index' → logprob: -4.532541275024414
    7. 'é' → logprob: -4.907541275024414
    8. 'e' → logprob: -5.157541275024414
    9. '[i' → logprob: -5.157541275024414
    10. '][' → logprob: -5.657541275024414

Token 925: ' sous' (ID: 14487)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5691442489624023
    2. 's' → logprob: -1.0691442489624023
    3. '][' → logprob: -3.3191442489624023
    4. 'print' → logprob: -3.6941442489624023
    5. '[' → logprob: -3.9441442489624023
    6. 'sub' → logprob: -6.444144248962402
    7. '[m' → logprob: -6.694144248962402
    8. 'index' → logprob: -6.819144248962402
    9. ' ' → logprob: -6.944144248962402
    10. 'm' → logprob: -7.444144248962402

Token 926: '-l' (ID: 2887)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.004284603521227837
    2. '-l' → logprob: -6.254284381866455
    3. 'list' → logprob: -7.129284381866455
    4. 'Liste' → logprob: -7.754284381866455
    5. '[]' → logprob: -8.004284858703613
    6. ' liste' → logprob: -8.254284858703613
    7. '[' → logprob: -8.504284858703613
    8. ']' → logprob: -9.629284858703613
    9. 's' → logprob: -9.754284858703613
    10. '-list' → logprob: -9.879284858703613

Token 927: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.0023936061188578606
    2. 'ist' → logprob: -6.25239372253418
    3. '[' → logprob: -8.75239372253418
    4. 'liste' → logprob: -9.25239372253418
    5. 'is' → logprob: -10.00239372253418
    6. 'i' → logprob: -10.50239372253418
    7. 'ste' → logprob: -10.62739372253418
    8. '#' → logprob: -10.87739372253418
    9. 's' → logprob: -11.00239372253418
    10. '   ' → logprob: -11.50239372253418

Token 928: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7014642357826233
    2. '   ' → logprob: -0.8264642357826233
    3. '(s' → logprob: -3.9514641761779785
    4. ' s' → logprob: -4.2014641761779785
    5. 'print' → logprob: -4.7014641761779785
    6. '[' → logprob: -5.2014641761779785
    7. '[s' → logprob: -5.2014641761779785
    8. 'for' → logprob: -6.0764641761779785
    9. '[]' → logprob: -6.7014641761779785
    10. ']' → logprob: -6.8264641761779785

Token 929: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03190058469772339
    2. '   ' → logprob: -3.531900644302368
    3. 'for' → logprob: -6.406900405883789
    4. '[s' → logprob: -8.031900405883789
    5. 'print' → logprob: -9.281900405883789
    6. ' for' → logprob: -10.656900405883789
    7. 's' → logprob: -10.906900405883789
    8. ' [' → logprob: -11.031900405883789
    9. '[
' → logprob: -11.406900405883789
    10. '[len' → logprob: -13.156900405883789

Token 930: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0032275060657411814
    2. 'print' → logprob: -6.503227710723877
    3. 'for' → logprob: -6.753227710723877
    4. '   ' → logprob: -7.628227710723877
    5. ' [' → logprob: -11.128227233886719
    6. '[
' → logprob: -11.128227233886719
    7. ' for' → logprob: -11.378227233886719
    8. '[s' → logprob: -11.503227233886719
    9. 's' → logprob: -12.253227233886719
    10. '
' → logprob: -12.628227233886719

Token 931: ' On' (ID: 2160)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.045900024473667145
    2. 'for' → logprob: -3.5459001064300537
    3. '   ' → logprob: -4.795899868011475
    4. 'print' → logprob: -5.295899868011475
    5. '[s' → logprob: -6.545899868011475
    6. '[m' → logprob: -7.170899868011475
    7. ' for' → logprob: -8.920900344848633
    8. ' [' → logprob: -8.920900344848633
    9. '[n' → logprob: -10.045900344848633
    10. '[
' → logprob: -10.045900344848633

Token 932: ' parc' (ID: 22138)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09953037649393082
    2. 'for' → logprob: -2.7245304584503174
    3. '[' → logprob: -4.224530220031738
    4. ' for' → logprob: -5.099530220031738
    5. ' print' → logprob: -5.474530220031738
    6. '   ' → logprob: -5.974530220031738
    7. '#' → logprob: -7.974530220031738
    8. '[
' → logprob: -8.349530220031738
    9. ' [' → logprob: -8.599530220031738
    10. ']' → logprob: -8.849530220031738

Token 933: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -1.07089364528656
    2. 'ourt' → logprob: -1.07089364528656
    3. 'urse' → logprob: -2.3208937644958496
    4. 'ore' → logprob: -2.3208937644958496
    5. 'oure' → logprob: -3.4458937644958496
    6. 'ur' → logprob: -4.44589376449585
    7. 'e' → logprob: -4.57089376449585
    8. 'ours' → logprob: -4.69589376449585
    9. 'or' → logprob: -5.32089376449585
    10. 'ure' → logprob: -5.32089376449585

Token 934: ' maintenant' (ID: 35735)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16873449087142944
    2. ' s' → logprob: -2.793734550476074
    3. '[s' → logprob: -3.043734550476074
    4. 'x' → logprob: -4.043734550476074
    5. '(s' → logprob: -4.293734550476074
    6. '[x' → logprob: -5.168734550476074
    7. ' [' → logprob: -5.543734550476074
    8. 'for' → logprob: -6.668734550476074
    9. '[' → logprob: -6.918734550476074
    10. ' for' → logprob: -7.168734550476074

Token 935: ' chaque' (ID: 21194)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02960270829498768
    2. ' s' → logprob: -4.154602527618408
    3. '(s' → logprob: -5.154602527618408
    4. '[s' → logprob: -5.654602527618408
    5. 'x' → logprob: -6.279602527618408
    6. '   ' → logprob: -6.779602527618408
    7. 'for' → logprob: -7.404602527618408
    8. '[x' → logprob: -8.654603004455566
    9. ' for' → logprob: -9.029603004455566
    10. ' [' → logprob: -9.904603004455566

Token 936: ' élément' (ID: 99627)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12775808572769165
    2. 'print' → logprob: -2.127758026123047
    3. 'for' → logprob: -7.752758026123047
    4. 'y' → logprob: -8.502758026123047
    5. ' x' → logprob: -9.377758026123047
    6. ' print' → logprob: -9.877758026123047
    7. 'element' → logprob: -11.252758026123047
    8. ' for' → logprob: -12.377758026123047
    9. '(x' → logprob: -12.377758026123047
    10. 'e' → logprob: -12.502758026123047

Token 937: ' '' (ID: 461)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.3838022947311401
    2. 'in' → logprob: -1.7588022947311401
    3. ' in' → logprob: -1.7588022947311401
    4. ' de' → logprob: -1.7588022947311401
    5. 's' → logprob: -2.2588024139404297
    6. '   ' → logprob: -3.1338024139404297
    7. '(s' → logprob: -3.3838024139404297
    8. ' of' → logprob: -4.00880241394043
    9. ' s' → logprob: -5.00880241394043
    10. 'of' → logprob: -5.25880241394043

Token 938: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03855651244521141
    2. 's' → logprob: -3.6635565757751465
    3. 'print' → logprob: -5.0385565757751465
    4. ' x' → logprob: -5.5385565757751465
    5. ' s' → logprob: -7.0385565757751465
    6. '(s' → logprob: -7.9135565757751465
    7. '(x' → logprob: -8.538556098937988
    8. ' print' → logprob: -9.288556098937988
    9. 'y' → logprob: -9.788556098937988
    10. ' in' → logprob: -10.413556098937988

Token 939: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5259668231010437
    2. 'in' → logprob: -0.9009668231010437
    3. 's' → logprob: -7.025966644287109
    4. ')' → logprob: -7.400966644287109
    5. 'for' → logprob: -8.15096664428711
    6. '   ' → logprob: -8.90096664428711
    7. 'dans' → logprob: -8.90096664428711
    8. ' of' → logprob: -9.02596664428711
    9. ' dans' → logprob: -9.02596664428711
    10. ' ' → logprob: -9.15096664428711

Token 940: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.348906546831131
    2. ' in' → logprob: -1.2239065170288086
    3. 'for' → logprob: -8.098906517028809
    4. ' for' → logprob: -9.723906517028809
    5. ')' → logprob: -9.848906517028809
    6. 's' → logprob: -10.598906517028809
    7. ']' → logprob: -12.098906517028809
    8. ' ' → logprob: -12.598906517028809
    9. ' of' → logprob: -13.223906517028809
    10. '   ' → logprob: -13.473906517028809

Token 941: ' cette' (ID: 7696)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012513063848018646
    2. ' s' → logprob: -4.387513160705566
    3. '   ' → logprob: -12.887513160705566
    4. '(s' → logprob: -14.387513160705566
    5. ' ' → logprob: -15.637513160705566
    6. '	s' → logprob: -16.13751220703125
    7. '[s' → logprob: -17.13751220703125
    8. '`s' → logprob: -17.38751220703125
    9. '  ' → logprob: -17.51251220703125
    10. '    ' → logprob: -17.88751220703125

Token 942: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0016495913732796907
    2. ' s' → logprob: -6.626649379730225
    3. '[s' → logprob: -8.751649856567383
    4. '[m' → logprob: -9.376649856567383
    5. '[' → logprob: -10.126649856567383
    6. '   ' → logprob: -11.251649856567383
    7. 'm' → logprob: -12.251649856567383
    8. '(s' → logprob: -12.251649856567383
    9. '```' → logprob: -12.501649856567383
    10. ' ' → logprob: -12.751649856567383

Token 943: '-l' (ID: 2887)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.45143991708755493
    2. 's' → logprob: -1.0764398574829102
    3. 'list' → logprob: -4.32643985748291
    4. '[' → logprob: -5.45143985748291
    5. '-l' → logprob: -5.82643985748291
    6. 'Liste' → logprob: -8.07643985748291
    7. '   ' → logprob: -8.20143985748291
    8. 'lists' → logprob: -8.20143985748291
    9. 'l' → logprob: -8.70143985748291
    10. '_list' → logprob: -8.82643985748291

Token 944: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.01941005513072014
    2. 's' → logprob: -4.269410133361816
    3. '[' → logprob: -6.519410133361816
    4. 'ste' → logprob: -7.144410133361816
    5. 'liste' → logprob: -7.144410133361816
    6. 'ist' → logprob: -7.519410133361816
    7. 'site' → logprob: -8.019410133361816
    8. 'ite' → logprob: -8.394410133361816
    9. 'is' → logprob: -8.894410133361816
    10. '   ' → logprob: -9.519410133361816

Token 945: '.
' (ID: 558)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.6978393793106079
    2. '   ' → logprob: -1.697839379310608
    3. 's' → logprob: -1.822839379310608
    4. ' in' → logprob: -3.3228392601013184
    5. '[s' → logprob: -3.4478392601013184
    6. 'for' → logprob: -3.5728392601013184
    7. 'in' → logprob: -3.9478392601013184
    8. ' s' → logprob: -3.9478392601013184
    9. ' for' → logprob: -4.572839260101318
    10. ']' → logprob: -5.572839260101318

Token 946: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0505976676940918
    2. 'for' → logprob: -3.050597667694092
    3. '   ' → logprob: -6.550597667694092
    4. ' for' → logprob: -7.675597667694092
    5. 'print' → logprob: -9.67559814453125
    6. ' [' → logprob: -10.55059814453125
    7. 's' → logprob: -12.80059814453125
    8. '       ' → logprob: -12.80059814453125
    9. '[m' → logprob: -13.17559814453125
    10. 'x' → logprob: -13.67559814453125

Token 947: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10481142997741699
    2. 'for' → logprob: -2.354811429977417
    3. ' for' → logprob: -6.479811668395996
    4. '   ' → logprob: -6.479811668395996
    5. 'print' → logprob: -6.729811668395996
    6. ' [' → logprob: -8.354811668395996
    7. 's' → logprob: -10.354811668395996
    8. 'x' → logprob: -11.104811668395996
    9. '[s' → logprob: -12.104811668395996
    10. '[x' → logprob: -12.229811668395996

Token 948: ' On' (ID: 2160)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03381650894880295
    2. 'for' → logprob: -3.4088165760040283
    3. 'print' → logprob: -9.65881633758545
    4. ' for' → logprob: -10.15881633758545
    5. '   ' → logprob: -10.40881633758545
    6. ' [' → logprob: -10.78381633758545
    7. '[m' → logprob: -12.15881633758545
    8. '[s' → logprob: -12.78381633758545
    9. '       ' → logprob: -13.28381633758545
    10. 's' → logprob: -13.65881633758545

Token 949: ' affiche' (ID: 127479)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.054076362401247025
    2. 'for' → logprob: -3.4290764331817627
    3. 'print' → logprob: -4.054076194763184
    4. ' for' → logprob: -6.929076194763184
    5. ' [' → logprob: -7.304076194763184
    6. '   ' → logprob: -8.054076194763184
    7. '.' → logprob: -8.929076194763184
    8. '[
' → logprob: -9.429076194763184
    9. ' print' → logprob: -9.679076194763184
    10. 's' → logprob: -9.804076194763184

Token 950: ' chaque' (ID: 21194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5423814654350281
    2. '[' → logprob: -1.4173815250396729
    3. '(x' → logprob: -1.9173815250396729
    4. '[x' → logprob: -4.042381286621094
    5. 'print' → logprob: -4.667381286621094
    6. '(print' → logprob: -6.917381286621094
    7. '(' → logprob: -8.042381286621094
    8. 'for' → logprob: -8.167381286621094
    9. '("."' → logprob: -8.792381286621094
    10. ' x' → logprob: -8.917381286621094

Token 951: ' élément' (ID: 99627)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07031473517417908
    2. 'x' → logprob: -2.945314645767212
    3. '(x' → logprob: -4.195314884185791
    4. ' print' → logprob: -8.820314407348633
    5. '(print' → logprob: -9.820314407348633
    6. ' x' → logprob: -10.570314407348633
    7. '   ' → logprob: -11.945314407348633
    8. ' ' → logprob: -12.570314407348633
    9. '[x' → logprob: -13.695314407348633
    10. 'for' → logprob: -13.820314407348633

Token 952: ' précéd' (ID: 55435)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6955274343490601
    2. '   ' → logprob: -2.1955275535583496
    3. 'for' → logprob: -2.1955275535583496
    4. '(s' → logprob: -2.3205275535583496
    5. ' for' → logprob: -2.5705275535583496
    6. '[x' → logprob: -2.8205275535583496
    7. 's' → logprob: -4.44552755355835
    8. '[' → logprob: -4.94552755355835
    9. ' in' → logprob: -4.94552755355835
    10. 'x' → logprob: -5.07052755355835

Token 953: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.014669937081634998
    2. 'e' → logprob: -5.764669895172119
    3. 'ée' → logprob: -6.014669895172119
    4. 'de' → logprob: -6.264669895172119
    5. 'ed' → logprob: -6.264669895172119
    6. 'ant' → logprob: -6.264669895172119
    7. 'x' → logprob: -7.014669895172119
    8. '+' → logprob: -7.389669895172119
    9. 'éd' → logprob: -8.139670372009277
    10. 'ent' → logprob: -8.139670372009277

Token 954: ' de' (ID: 334)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.40437051653862
    2. '("."' → logprob: -1.4043705463409424
    3. '   ' → logprob: -3.0293705463409424
    4. '(' → logprob: -4.029370307922363
    5. '(".' → logprob: -4.404370307922363
    6. '('' → logprob: -5.654370307922363
    7. '"' → logprob: -6.279370307922363
    8. '       ' → logprob: -7.029370307922363
    9. '("")' → logprob: -7.779370307922363
    10. '("("' → logprob: -8.029370307922363

Token 955: ' "."' (ID: 50107)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"."' → logprob: -1.0367424488067627
    2. '"' → logprob: -1.1617424488067627
    3. '""' → logprob: -2.1617424488067627
    4. '4' → logprob: -3.0367424488067627
    5. 'x' → logprob: -3.0367424488067627
    6. '".' → logprob: -3.6617424488067627
    7. 'print' → logprob: -4.161742210388184
    8. '"x' → logprob: -4.286742210388184
    9. 'm' → logprob: -4.411742210388184
    10. ''' → logprob: -4.536742210388184

Token 956: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7670344710350037
    2. '   ' → logprob: -1.2670345306396484
    3. '*' → logprob: -2.1420345306396484
    4. '"' → logprob: -2.6420345306396484
    5. '[' → logprob: -4.017034530639648
    6. ' +' → logprob: -4.017034530639648
    7. '.' → logprob: -4.892034530639648
    8. '+' → logprob: -5.142034530639648
    9. ' "' → logprob: -5.642034530639648
    10. '    ' → logprob: -5.892034530639648

Token 957: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8051292896270752
    2. '(d' → logprob: -1.3051292896270752
    3. '(' → logprob: -1.6801292896270752
    4. '(m' → logprob: -3.305129289627075
    5. '4' → logprob: -3.680129289627075
    6. 'm' → logprob: -4.430129051208496
    7. '((' → logprob: -4.805129051208496
    8. '(n' → logprob: -5.555129051208496
    9. 'n' → logprob: -5.680129051208496
    10. ' (' → logprob: -6.055129051208496

Token 958: '4' (ID: 19)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4438830614089966
    2. 'd' → logprob: -1.3188830614089966
    3. '(d' → logprob: -3.068882942199707
    4. '4' → logprob: -3.318882942199707
    5. '(n' → logprob: -5.693882942199707
    6. 'n' → logprob: -6.318882942199707
    7. ' (' → logprob: -7.193882942199707
    8. '0' → logprob: -7.318882942199707
    9. '(m' → logprob: -7.443882942199707
    10. '((' → logprob: -7.568882942199707

Token 959: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5765861868858337
    2. '*' → logprob: -0.9515861868858337
    3. '*(' → logprob: -3.3265862464904785
    4. '   ' → logprob: -4.9515862464904785
    5. '*m' → logprob: -5.3265862464904785
    6. '(m' → logprob: -6.0765862464904785
    7. '[m' → logprob: -7.4515862464904785
    8. '(' → logprob: -7.5765862464904785
    9. '[' → logprob: -8.57658576965332
    10. ' ' → logprob: -8.57658576965332

Token 960: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001841536839492619
    2. '(d' → logprob: -6.5018415451049805
    3. ' d' → logprob: -8.12684154510498
    4. '   ' → logprob: -11.00184154510498
    5. '(' → logprob: -11.25184154510498
    6. 'n' → logprob: -12.75184154510498
    7. '(n' → logprob: -12.75184154510498
    8. ' (' → logprob: -13.00184154510498
    9. '	d' → logprob: -13.25184154510498
    10. ' ' → logprob: -13.75184154510498

Token 961: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40046244859695435
    2. '   ' → logprob: -1.4004623889923096
    3. 'for' → logprob: -2.6504623889923096
    4. ' for' → logprob: -4.650462627410889
    5. '.' → logprob: -6.525462627410889
    6. '
' → logprob: -7.400462627410889
    7. '    
' → logprob: -7.650462627410889
    8. '       ' → logprob: -8.65046215057373
    9. '[
' → logprob: -9.02546215057373
    10. ' [' → logprob: -9.15046215057373

Token 962: ' c' (ID: 274)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39183348417282104
    2. '   ' → logprob: -1.7668335437774658
    3. '       ' → logprob: -2.141833543777466
    4. 'print' → logprob: -4.141833305358887
    5. '["' → logprob: -5.016833305358887
    6. 'for' → logprob: -5.266833305358887
    7. '"."' → logprob: -5.641833305358887
    8. '"' → logprob: -5.891833305358887
    9. ' [' → logprob: -7.641833305358887
    10. '           ' → logprob: -7.891833305358887

Token 963: ''est' (ID: 6616)
  Prédit: 'omme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.8547360301017761
    2. 'ar' → logprob: -1.229736089706421
    3. '"' → logprob: -2.729736089706421
    4. 'ont' → logprob: -2.979736089706421
    5. 'eux' → logprob: -3.229736089706421
    6. 'e' → logprob: -3.354736089706421
    7. 'om' → logprob: -3.979736089706421
    8. ''est' → logprob: -4.979735851287842
    9. ''om' → logprob: -4.979735851287842
    10. ''' → logprob: -5.229735851287842

Token 964: '-à' (ID: 56297)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.11341135203838348
    2. '   ' → logprob: -2.6134114265441895
    3. '"' → logprob: -3.8634114265441895
    4. '.' → logprob: -4.7384114265441895
    5. '".' → logprob: -6.6134114265441895
    6. '("."' → logprob: -6.9884114265441895
    7. '       ' → logprob: -7.4884114265441895
    8. ' "."' → logprob: -7.7384114265441895
    9. '."' → logprob: -8.113410949707031
    10. '""' → logprob: -8.238410949707031

Token 965: '-dire' (ID: 76064)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.2110937088727951
    2. '"' → logprob: -2.5860936641693115
    3. '".' → logprob: -3.7110936641693115
    4. '"."' → logprob: -3.8360936641693115
    5. 'la' → logprob: -4.211093902587891
    6. 'l' → logprob: -4.461093902587891
    7. '."' → logprob: -4.711093902587891
    8. '.' → logprob: -5.086093902587891
    9. 'quoi' → logprob: -5.336093902587891
    10. 'f' → logprob: -5.586093902587891

Token 966: ' une' (ID: 2463)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.012149573303759098
    2. ' "."' → logprob: -4.887149810791016
    3. '"' → logprob: -5.887149810791016
    4. '("."' → logprob: -7.012149810791016
    5. '   ' → logprob: -7.762149810791016
    6. '".' → logprob: -8.137149810791016
    7. ''.' → logprob: -9.262149810791016
    8. '       ' → logprob: -11.012149810791016
    9. '.' → logprob: -11.262149810791016
    10. ' ' → logprob: -13.137149810791016

Token 967: ' suite' (ID: 13800)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.40069469809532166
    2. '.' → logprob: -1.150694727897644
    3. '"' → logprob: -5.150694847106934
    4. '."' → logprob: -5.400694847106934
    5. '".' → logprob: -6.650694847106934
    6. '("."' → logprob: -6.650694847106934
    7. ''.' → logprob: -8.150694847106934
    8. '   ' → logprob: -8.400694847106934
    9. ' "."' → logprob: -8.650694847106934
    10. ' .' → logprob: -10.150694847106934

Token 968: ' de' (ID: 334)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.13651207089424133
    2. '.' → logprob: -2.386512041091919
    3. '   ' → logprob: -3.761512041091919
    4. '"' → logprob: -4.761512279510498
    5. '".' → logprob: -6.386512279510498
    6. '("."' → logprob: -6.886512279510498
    7. '."' → logprob: -8.13651180267334
    8. ' of' → logprob: -8.38651180267334
    9. ' "."' → logprob: -8.38651180267334
    10. '*' → logprob: -9.13651180267334

Token 969: ' points' (ID: 5571)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.01950744353234768
    2. '".' → logprob: -4.39450740814209
    3. '.' → logprob: -5.01950740814209
    4. '4' → logprob: -8.89450740814209
    5. ''.' → logprob: -9.14450740814209
    6. '"' → logprob: -9.76950740814209
    7. ' "."' → logprob: -10.26950740814209
    8. '("."' → logprob: -11.01950740814209
    9. '   ' → logprob: -12.01950740814209
    10. '."' → logprob: -12.14450740814209

Token 970: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1199854388833046
    2. '*' → logprob: -2.619985342025757
    3. ' *' → logprob: -4.494985580444336
    4. '+' → logprob: -4.619985580444336
    5. '       ' → logprob: -4.994985580444336
    6. '.' → logprob: -5.619985580444336
    7. ' +' → logprob: -6.119985580444336
    8. '[' → logprob: -6.244985580444336
    9. '"' → logprob: -6.744985580444336
    10. '	' → logprob: -6.869985580444336

Token 971: ' longueur' (ID: 104613)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.12627626955509186
    2. '4' → logprob: -3.1262762546539307
    3. '"' → logprob: -3.6262762546539307
    4. '   ' → logprob: -3.7512762546539307
    5. '.' → logprob: -4.37627649307251
    6. '".' → logprob: -5.12627649307251
    7. '("."' → logprob: -5.75127649307251
    8. '."' → logprob: -7.12627649307251
    9. ''.' → logprob: -7.37627649307251
    10. ' "."' → logprob: -7.37627649307251

Token 972: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.008762763813138008
    2. '   ' → logprob: -5.133762836456299
    3. ' ' → logprob: -5.883762836456299
    4. '(' → logprob: -11.00876235961914
    5. '"' → logprob: -11.38376235961914
    6. '    ' → logprob: -12.00876235961914
    7. ' (' → logprob: -13.13376235961914
    8. '0' → logprob: -13.25876235961914
    9. 'd' → logprob: -13.25876235961914
    10. '  ' → logprob: -13.38376235961914

Token 973: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.003930929582566023
    2. '(' → logprob: -5.628931045532227
    3. ' ' → logprob: -8.253931045532227
    4. '   ' → logprob: -10.253931045532227
    5. ' (' → logprob: -10.628931045532227
    6. 'd' → logprob: -12.003931045532227
    7. '0' → logprob: -12.628931045532227
    8. '  ' → logprob: -14.503931045532227
    9. '(d' → logprob: -14.628931045532227
    10. '    ' → logprob: -16.003931045532227

Token 974: '*d' (ID: 81685)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.022082533687353134
    2. ' *' → logprob: -3.897082567214966
    3. '   ' → logprob: -6.772082328796387
    4. '*d' → logprob: -7.897082328796387
    5. ' ' → logprob: -11.897082328796387
    6. 'd' → logprob: -12.147082328796387
    7. ' ' → logprob: -12.272082328796387
    8. '	' → logprob: -13.272082328796387
    9. '  ' → logprob: -14.022082328796387
    10. '**' → logprob: -14.147082328796387

Token 975: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3373304605484009
    2. '[' → logprob: -1.8373304605484009
    3. 'for' → logprob: -2.0873303413391113
    4. ' for' → logprob: -6.337330341339111
    5. '       ' → logprob: -7.337330341339111
    6. 'print' → logprob: -9.33733081817627
    7. '+' → logprob: -9.83733081817627
    8. ':' → logprob: -10.21233081817627
    9. '
' → logprob: -10.21233081817627
    10. '.' → logprob: -10.21233081817627

Token 976: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09224415570497513
    2. '   ' → logprob: -2.4672441482543945
    3. 'for' → logprob: -6.8422441482543945
    4. ' [' → logprob: -6.9672441482543945
    5. ' for' → logprob: -7.7172441482543945
    6. '.' → logprob: -7.8422441482543945
    7. '       ' → logprob: -8.217244148254395
    8. '    ' → logprob: -10.342244148254395
    9. '	' → logprob: -10.717244148254395
    10. '  ' → logprob: -10.967244148254395

Token 977: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -0.04192980006337166
    2. '   ' → logprob: -3.2919297218322754
    3. 'for' → logprob: -5.666929721832275
    4. '.' → logprob: -8.666930198669434
    5. ' [' → logprob: -9.416930198669434
    6. ' for' → logprob: -9.541930198669434
    7. '       ' → logprob: -11.041930198669434
    8. '["' → logprob: -11.166930198669434
    9. '[d' → logprob: -11.166930198669434
    10. 'print' → logprob: -11.666930198669434

Token 978: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.75
    3. '(print' → logprob: -22.375
    4. '.print' → logprob: -24.625
    5. '   ' → logprob: -25.5
    6. '	print' → logprob: -25.625
    7. 'prints' → logprob: -25.875
    8. '#print' → logprob: -26.125
    9. ' ' → logprob: -26.375
    10. 'import' → logprob: -26.625

Token 979: '("."' (ID: 190511)
  Prédit: '("."'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("."' → logprob: -0.00013691288768313825
    2. '"."' → logprob: -9.000137329101562
    3. '("' → logprob: -11.625137329101562
    4. '(' → logprob: -13.000137329101562
    5. '('.' → logprob: -13.500137329101562
    6. ' ("' → logprob: -15.250137329101562
    7. '(".' → logprob: -15.625137329101562
    8. ' "."' → logprob: -15.750137329101562
    9. '(""' → logprob: -16.125137329101562
    10. '(".",' → logprob: -17.250137329101562

Token 980: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.34939488768577576
    2. ' *' → logprob: -1.2243949174880981
    3. '"' → logprob: -7.224394798278809
    4. '(' → logprob: -9.349394798278809
    5. '"*' → logprob: -10.349394798278809
    6. ' ' → logprob: -10.724394798278809
    7. '   ' → logprob: -11.099394798278809
    8. 's' → logprob: -11.224394798278809
    9. ')' → logprob: -11.224394798278809
    10. '**' → logprob: -12.224394798278809

Token 981: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00030388421146199107
    2. ' ' → logprob: -8.500304222106934
    3. 'd' → logprob: -9.750304222106934
    4. '(' → logprob: -10.125304222106934
    5. ' d' → logprob: -13.875304222106934
    6. ' (' → logprob: -14.250304222106934
    7. '   ' → logprob: -14.875304222106934
    8. '(d' → logprob: -16.250303268432617
    9. '  ' → logprob: -17.625303268432617
    10. '    ' → logprob: -19.625303268432617

Token 982: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0024294056929647923
    2. 'd' → logprob: -6.502429485321045
    3. '(' → logprob: -7.002429485321045
    4. ' ' → logprob: -11.502429008483887
    5. '(d' → logprob: -12.752429008483887
    6. ' (' → logprob: -13.002429008483887
    7. ' d' → logprob: -13.502429008483887
    8. '   ' → logprob: -14.752429008483887
    9. '  ' → logprob: -17.627429962158203
    10. '{' → logprob: -18.627429962158203

Token 983: ' *' (ID: 425)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003762786276638508
    2. ' d' → logprob: -6.378762722015381
    3. '*d' → logprob: -6.503762722015381
    4. '*' → logprob: -7.503762722015381
    5. ' *' → logprob: -11.753763198852539
    6. '   ' → logprob: -14.253763198852539
    7. '	d' → logprob: -14.503763198852539
    8. ' ' → logprob: -15.253763198852539
    9. '(d' → logprob: -16.62876319885254
    10. '`' → logprob: -17.12876319885254

Token 984: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0206720617134124e-05
    2. ' d' → logprob: -11.50001049041748
    3. '	d' → logprob: -17.625009536743164
    4. '(d' → logprob: -19.125009536743164
    5. '   ' → logprob: -19.250009536743164
    6. ')d' → logprob: -20.000009536743164
    7. '```' → logprob: -20.250009536743164
    8. '`' → logprob: -21.125009536743164
    9. ' ' → logprob: -21.375009536743164
    10. '
' → logprob: -21.500009536743164

Token 985: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25199052691459656
    2. ' +' → logprob: -1.501990556716919
    3. '+x' → logprob: -9.75199031829834
    4. ' ' → logprob: -13.62699031829834
    5. '   ' → logprob: -14.25199031829834
    6. '+
' → logprob: -14.62699031829834
    7. '  ' → logprob: -15.12699031829834
    8. '    ' → logprob: -15.75199031829834
    9. '＋' → logprob: -16.126991271972656
    10. '        ' → logprob: -16.751991271972656

Token 986: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1756367712223437e-05
    2. ' x' → logprob: -11.375011444091797
    3. '"x' → logprob: -16.000011444091797
    4. '   ' → logprob: -17.500011444091797
    5. '(x' → logprob: -17.750011444091797
    6. '	x' → logprob: -18.125011444091797
    7. 's' → logprob: -18.500011444091797
    8. '```' → logprob: -18.500011444091797
    9. ' ' → logprob: -18.937511444091797
    10. '  ' → logprob: -19.000011444091797

Token 987: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.045823566731997e-05
    2. '")' → logprob: -11.375020027160645
    3. ' )' → logprob: -12.125020027160645
    4. '+' → logprob: -13.000020027160645
    5. 'for' → logprob: -14.000020027160645
    6. ' +' → logprob: -16.62502098083496
    7. ']' → logprob: -16.75002098083496
    8. ')
' → logprob: -16.87502098083496
    9. '))' → logprob: -16.87502098083496
    10. ')`' → logprob: -17.00002098083496

Token 988: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47408467531204224
    2. ' for' → logprob: -0.9740846753120422
    3. '	for' → logprob: -12.099084854125977
    4. '   ' → logprob: -13.974084854125977
    5. ')' → logprob: -14.224084854125977
    6. '    ' → logprob: -14.849084854125977
    7. ']' → logprob: -16.474084854125977
    8. ' ' → logprob: -17.099084854125977
    9. '.for' → logprob: -17.974084854125977
    10. '       ' → logprob: -17.974084854125977

Token 989: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001515696058049798
    2. ' x' → logprob: -7.126515865325928
    3. 's' → logprob: -7.251515865325928
    4. ' s' → logprob: -14.25151538848877
    5. '(x' → logprob: -14.50151538848877
    6. '	x' → logprob: -15.62651538848877
    7. ' ' → logprob: -16.251516342163086
    8. ' ' → logprob: -16.501516342163086
    9. '_x' → logprob: -16.751516342163086
    10. '"x' → logprob: -16.751516342163086

Token 990: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3143429160118103
    2. 'in' → logprob: -1.314342975616455
    3. 's' → logprob: -7.314342975616455
    4. '(s' → logprob: -7.814342975616455
    5. '(' → logprob: -12.189342498779297
    6. ' (' → logprob: -13.064342498779297
    7. ' s' → logprob: -13.814342498779297
    8. ' ' → logprob: -14.064342498779297
    9. ']' → logprob: -14.314342498779297
    10. 'x' → logprob: -15.689342498779297

Token 991: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0067156096920371056
    2. ' s' → logprob: -5.006715774536133
    3. '(s' → logprob: -16.006715774536133
    4. '   ' → logprob: -16.381715774536133
    5. ' ' → logprob: -17.506715774536133
    6. '    ' → logprob: -18.006715774536133
    7. '  ' → logprob: -18.381715774536133
    8. '	s' → logprob: -18.381715774536133
    9. '[s' → logprob: -18.631715774536133
    10. '`s' → logprob: -19.131715774536133

Token 992: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.001248804503120482
    2. '[' → logprob: -7.001248836517334
    3. ' [' → logprob: -8.751248359680176
    4. 'm' → logprob: -9.001248359680176
    5. '[(' → logprob: -11.126248359680176
    6. '(m' → logprob: -11.501248359680176
    7. '][' → logprob: -11.751248359680176
    8. '   ' → logprob: -12.251248359680176
    9. '```' → logprob: -12.501248359680176
    10. '[int' → logprob: -13.376248359680176

Token 993: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018959006294608116
    2. ' -' → logprob: -4.143959045410156
    3. '[' → logprob: -5.893959045410156
    4. '<|end|>' → logprob: -10.018959045410156
    5. ']' → logprob: -10.643959045410156
    6. ' ' → logprob: -10.768959045410156
    7. '4' → logprob: -10.768959045410156
    8. '<|end|>' → logprob: -10.893959045410156
    9. '[-' → logprob: -11.518959045410156
    10. '   ' → logprob: -12.143959045410156

Token 994: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -17.125059127807617
    4. '   ' → logprob: -17.375059127807617
    5. '  ' → logprob: -17.875059127807617
    6. '' → logprob: -18.312559127807617
    7. '1' → logprob: -19.000059127807617
    8. '۴' → logprob: -19.000059127807617
    9. '４' → logprob: -19.062559127807617
    10. '٤' → logprob: -19.312559127807617

Token 995: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -17.12506675720215
    4. '1' → logprob: -17.25006675720215
    5. '' → logprob: -17.75006675720215
    6. '```' → logprob: -18.37506675720215
    7. '  ' → logprob: -18.62506675720215
    8. '0' → logprob: -19.25006675720215
    9. '４' → logprob: -19.93756675720215
    10. 'len' → logprob: -20.00006675720215

Token 996: ']]

' (ID: 84024)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.8500670194625854
    2. ']' → logprob: -1.2250670194625854
    3. ']]' → logprob: -1.6000670194625854
    4. '])]' → logprob: -2.975067138671875
    5. '][' → logprob: -3.975067138671875
    6. ')]' → logprob: -5.100067138671875
    7. ']])' → logprob: -7.975067138671875
    8. ' ])' → logprob: -8.725067138671875
    9. ' ]]' → logprob: -9.350067138671875
    10. ' ]' → logprob: -9.475067138671875

Token 997: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 998: ' Fin' (ID: 7772)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 999: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1000: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.22867357730865479
    2. 'program' → logprob: -1.7286735773086548
    3. ' programme' → logprob: -3.7286734580993652
    4. ' code' → logprob: -6.728673458099365
    5. 'code' → logprob: -7.103673458099365
    6. ' program' → logprob: -7.478673458099365
    7. 'programm' → logprob: -8.853673934936523
    8. '_program' → logprob: -9.853673934936523
    9. 'f' → logprob: -10.603673934936523
    10. 'programma' → logprob: -10.728673934936523


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 998
Tokens correctement prédits (1ère position, stricte): 231
Tokens correctement prédits (1ère position, avec adaptation): 238
Tokens correctement prédits (top 10): 549
Précision stricte (1ère position): 23.15%
Précision adaptée (1ère position): 23.85%
Précision (top 10): 55.01%
================================================================================
