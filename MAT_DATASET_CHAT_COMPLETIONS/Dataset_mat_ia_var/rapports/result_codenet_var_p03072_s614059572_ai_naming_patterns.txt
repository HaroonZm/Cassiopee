================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_value = int(input())
input_list = list(map(int, input().split()))
current_max = 0
count_greater_equal = 0
for element in input_list:
    if current_max <= element:
        current_max = element
        count_greater_equal += 1
print(count_greater_equal)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2533738315105438
    2. '"' → logprob: -2.628373861312866
    3. 'input' → logprob: -2.628373861312866
    4. ' input' → logprob: -3.253373861312866
    5. ' "' → logprob: -4.003373622894287
    6. ''' → logprob: -4.503373622894287
    7. ' '' → logprob: -5.753373622894287
    8. '0' → logprob: -6.003373622894287
    9. ' a' → logprob: -6.753373622894287
    10. '_' → logprob: -7.003373622894287

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025887389201670885
    2. '(input' → logprob: -6.377588748931885
    3. '```' → logprob: -7.877588748931885
    4. '('' → logprob: -9.377588272094727
    5. '[' → logprob: -9.502588272094727
    6. '`' → logprob: -9.752588272094727
    7. ''' → logprob: -10.127588272094727
    8. '("("' → logprob: -10.252588272094727
    9. '()' → logprob: -10.377588272094727
    10. ' (' → logprob: -10.502588272094727

Token 5: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11737767606973648
    2. '(' → logprob: -2.742377758026123
    3. '())' → logprob: -3.242377758026123
    4. '()' → logprob: -4.992377758026123
    5. '))' → logprob: -8.492377281188965
    6. '")' → logprob: -9.867377281188965
    7. '')' → logprob: -9.992377281188965
    8. '[' → logprob: -10.992377281188965
    9. '`)' → logprob: -11.117377281188965
    10. ' )' → logprob: -11.242377281188965

Token 6: 'input' (ID: 2586)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5129709839820862
    2. 'if' → logprob: -1.8879709243774414
    3. '*' → logprob: -2.2629709243774414
    4. '%' → logprob: -2.5129709243774414
    5. ' if' → logprob: -3.7629709243774414
    6. '```' → logprob: -4.637970924377441
    7. '+
' → logprob: -4.762970924377441
    8. '\n' → logprob: -4.887970924377441
    9. '**' → logprob: -5.262970924377441
    10. ')' → logprob: -6.137970924377441

Token 7: '_list' (ID: 4162)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0071021514013409615
    2. '()' → logprob: -5.632102012634277
    3. '(' → logprob: -6.632102012634277
    4. '_' → logprob: -6.757102012634277
    5. ')' → logprob: -8.257102012634277
    6. '_val' → logprob: -8.632102012634277
    7. '())' → logprob: -9.257102012634277
    8. '_values' → logprob: -9.257102012634277
    9. 'Value' → logprob: -9.507102012634277
    10. '('_' → logprob: -9.882102012634277

Token 8: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4429023861885071
    2. '[' → logprob: -1.1929023265838623
    3. '.append' → logprob: -3.0679023265838623
    4. '```' → logprob: -6.067902565002441
    5. '[]' → logprob: -6.817902565002441
    6. '.setdefault' → logprob: -6.817902565002441
    7. ')' → logprob: -7.817902565002441
    8. '_' → logprob: -8.192902565002441
    9. '[:]' → logprob: -8.192902565002441
    10. '[input' → logprob: -8.317902565002441

Token 9: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.0029925592243671417
    2. '[]' → logprob: -6.377992630004883
    3. ' [' → logprob: -7.627992630004883
    4. ' ' → logprob: -8.127992630004883
    5. ' list' → logprob: -8.252992630004883
    6. '[input' → logprob: -9.377992630004883
    7. ' input' → logprob: -9.627992630004883
    8. 'list' → logprob: -9.752992630004883
    9. 'input' → logprob: -10.752992630004883
    10. '[' → logprob: -11.752992630004883

Token 10: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024964679032564163
    2. '(input' → logprob: -6.252496242523193
    3. '```' → logprob: -8.752496719360352
    4. '((' → logprob: -9.877496719360352
    5. '(user' → logprob: -9.877496719360352
    6. '`' → logprob: -10.002496719360352
    7. '(range' → logprob: -10.127496719360352
    8. '("("' → logprob: -10.502496719360352
    9. '(
' → logprob: -10.627496719360352
    10. '()' → logprob: -10.752496719360352

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.14303621649742126
    2. '(' → logprob: -2.393036127090454
    3. '(input' → logprob: -3.393036127090454
    4. '(lambda' → logprob: -5.143036365509033
    5. '(str' → logprob: -6.268036365509033
    6. ')' → logprob: -9.018035888671875
    7. 'int' → logprob: -9.143035888671875
    8. '<int' → logprob: -9.393035888671875
    9. '(eval' → logprob: -9.518035888671875
    10. '```' → logprob: -10.143035888671875

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0017056517535820603
    2. ',input' → logprob: -6.751705646514893
    3. '(' → logprob: -8.62670612335205
    4. '))' → logprob: -8.62670612335205
    5. 'input' → logprob: -9.25170612335205
    6. ',' → logprob: -10.25170612335205
    7. ')' → logprob: -11.25170612335205
    8. '=input' → logprob: -11.37670612335205
    9. ' (' → logprob: -12.25170612335205
    10. ' input' → logprob: -12.50170612335205

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.043019168078899384
    2. ' input' → logprob: -3.1680190563201904
    3. '(input' → logprob: -11.04301929473877
    4. ')' → logprob: -13.54301929473877
    5. ',input' → logprob: -13.91801929473877
    6. 'str' → logprob: -14.54301929473877
    7. 'list' → logprob: -15.41801929473877
    8. 'range' → logprob: -15.54301929473877
    9. '))' → logprob: -15.79301929473877
    10. ' ' → logprob: -16.043018341064453

Token 14: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7030994296073914
    2. '()))' → logprob: -0.9530994296073914
    3. '())' → logprob: -2.578099489212036
    4. '().' → logprob: -3.703099489212036
    5. '(' → logprob: -4.203099250793457
    6. '())))' → logprob: -6.953099250793457
    7. ')' → logprob: -7.203099250793457
    8. '()));' → logprob: -7.578099250793457
    9. '))' → logprob: -7.828099250793457
    10. '('' → logprob: -8.578099250793457

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005614925175905228
    2. 'strip' → logprob: -7.500561714172363
    3. 'rstrip' → logprob: -11.875561714172363
    4. ' split' → logprob: -14.375561714172363
    5. '(split' → logprob: -14.625561714172363
    6. 'spl' → logprob: -14.875561714172363
    7. ')' → logprob: -16.000560760498047
    8. '.split' → logprob: -17.500560760498047
    9. 'read' → logprob: -18.000560760498047
    10. 'sp' → logprob: -19.375560760498047

Token 16: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2660648822784424
    2. '))' → logprob: -1.5160648822784424
    3. '()' → logprob: -5.016064643859863
    4. '(' → logprob: -5.391064643859863
    5. '())' → logprob: -6.141064643859863
    6. ')' → logprob: -7.391064643859863
    7. '()))
' → logprob: -10.516064643859863
    8. ')))' → logprob: -11.641064643859863
    9. '())))' → logprob: -11.891064643859863
    10. ''))' → logprob: -12.016064643859863

Token 17: 'current' (ID: 5804)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6423586010932922
    2. 'for' → logprob: -1.8923585414886475
    3. ')' → logprob: -2.2673585414886475
    4. '[' → logprob: -2.3923585414886475
    5. '\n' → logprob: -3.3923585414886475
    6. '```' → logprob: -4.142358779907227
    7. 'sum' → logprob: -4.142358779907227
    8. ' if' → logprob: -4.267358779907227
    9. '.' → logprob: -4.642358779907227
    10. 'result' → logprob: -5.142358779907227

Token 18: '_max' (ID: 13731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013175057247281075
    2. '_value' → logprob: -4.513175010681152
    3. ' _' → logprob: -7.763175010681152
    4. '_)' → logprob: -7.888175010681152
    5. '_token' → logprob: -8.388175010681152
    6. '_val' → logprob: -8.388175010681152
    7. ')' → logprob: -8.888175010681152
    8. '_sum' → logprob: -8.888175010681152
    9. '_space' → logprob: -9.263175010681152
    10. '_line' → logprob: -9.388175010681152

Token 19: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.036227997392416
    2. ' =' → logprob: -3.6612279415130615
    3. '=' → logprob: -5.161228179931641
    4. ' _' → logprob: -5.661228179931641
    5. '_=' → logprob: -8.53622817993164
    6. ')' → logprob: -8.78622817993164
    7. '_space' → logprob: -9.28622817993164
    8. ' ' → logprob: -10.03622817993164
    9. ',' → logprob: -10.16122817993164
    10. 'space' → logprob: -10.41122817993164

Token 20: ' ' (ID: 220)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3803981840610504
    2. '0' → logprob: -1.505398154258728
    3. ' input' → logprob: -3.3803982734680176
    4. '-' → logprob: -3.5053982734680176
    5. ' ' → logprob: -4.380398273468018
    6. 'float' → logprob: -4.630398273468018
    7. ' -' → logprob: -5.255398273468018
    8. ' float' → logprob: -6.005398273468018
    9. 'int' → logprob: -8.75539779663086
    10. '-input' → logprob: -9.00539779663086

Token 21: '0' (ID: 15)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05345061793923378
    2. '0' → logprob: -3.178450584411621
    3. '-' → logprob: -5.178450584411621
    4. 'float' → logprob: -5.678450584411621
    5. '-input' → logprob: -7.053450584411621
    6. ' input' → logprob: -8.428450584411621
    7. ' ' → logprob: -9.428450584411621
    8. 'int' → logprob: -10.053450584411621
    9. ' -' → logprob: -10.053450584411621
    10. '-in' → logprob: -10.928450584411621

Token 22: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14384499192237854
    2. '
' → logprob: -2.6438450813293457
    3. ' for' → logprob: -2.8938450813293457
    4. '\n' → logprob: -5.893845081329346
    5. 'if' → logprob: -6.143845081329346
    6. '<|end|>' → logprob: -7.268845081329346
    7. '' → logprob: -8.143844604492188
    8. 'i' → logprob: -8.393844604492188
    9. '```' → logprob: -8.393844604492188
    10. ' 
' → logprob: -8.518844604492188

Token 23: 'count' (ID: 5420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005051348707638681
    2. ' for' → logprob: -8.250505447387695
    3. '```' → logprob: -9.000505447387695
    4. 'if' → logprob: -9.375505447387695
    5. '
' → logprob: -11.625505447387695
    6. 'i' → logprob: -11.625505447387695
    7. '\n' → logprob: -11.875505447387695
    8. 'f' → logprob: -12.375505447387695
    9. '`' → logprob: -13.625505447387695
    10. '' → logprob: -13.750505447387695

Token 24: '_g' (ID: 5439)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07607022672891617
    2. '=' → logprob: -3.2010703086853027
    3. '_' → logprob: -3.5760703086853027
    4. ' ' → logprob: -5.576070308685303
    5. ' +=' → logprob: -8.451069831848145
    6. '<|end|>' → logprob: -9.076069831848145
    7. '  ' → logprob: -9.326069831848145
    8. '_space' → logprob: -9.576069831848145
    9. '_=' → logprob: -9.826069831848145
    10. ' _' → logprob: -10.326069831848145

Token 25: 'reater' (ID: 110926)
  Prédit: 'reater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reater' → logprob: -0.055169086903333664
    2. 'r' → logprob: -3.180169105529785
    3. 'e' → logprob: -5.180169105529785
    4. 'reat' → logprob: -5.930169105529785
    5. 'reate' → logprob: -7.680169105529785
    6. '>' → logprob: -7.680169105529785
    7. 'a' → logprob: -8.180169105529785
    8. 't' → logprob: -8.305169105529785
    9. 'roup' → logprob: -8.305169105529785
    10. '=' → logprob: -8.430169105529785

Token 26: '_equal' (ID: 27882)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08179078996181488
    2. ' =' → logprob: -3.2067906856536865
    3. '_' → logprob: -3.3317906856536865
    4. '_=' → logprob: -6.831790924072266
    5. '_than' → logprob: -7.706790924072266
    6. ' ' → logprob: -8.081790924072266
    7. ')' → logprob: -9.081790924072266
    8. '>' → logprob: -9.581790924072266
    9. '+=' → logprob: -9.581790924072266
    10. '_equal' → logprob: -9.956790924072266

Token 27: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6975284218788147
    2. ' =' → logprob: -0.6975284218788147
    3. ' ' → logprob: -6.32252836227417
    4. '_' → logprob: -6.57252836227417
    5. '_than' → logprob: -8.072528839111328
    6. '_to' → logprob: -8.322528839111328
    7. ')' → logprob: -8.322528839111328
    8. ' +=' → logprob: -8.947528839111328
    9. '+=' → logprob: -9.572528839111328
    10. 'to' → logprob: -10.947528839111328

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759459137916565
    2. ' ' → logprob: -0.8259459137916565
    3. ' current' → logprob: -13.200945854187012
    4. 'current' → logprob: -13.325945854187012
    5. ' ' → logprob: -13.825945854187012
    6. '1' → logprob: -13.950945854187012
    7. '  ' → logprob: -15.200945854187012
    8. '<|end|>' → logprob: -15.638445854187012
    9. 'int' → logprob: -15.763445854187012
    10. ')' → logprob: -16.638446807861328

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003242716658860445
    2. ' ' → logprob: -5.753242492675781
    3. 'current' → logprob: -9.878242492675781
    4. '1' → logprob: -12.503242492675781
    5. 'input' → logprob: -13.128242492675781
    6. ' current' → logprob: -13.128242492675781
    7. 'int' → logprob: -13.628242492675781
    8. '[' → logprob: -14.128242492675781
    9. '[]' → logprob: -14.128242492675781
    10. 'len' → logprob: -14.628242492675781

Token 30: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0936000868678093
    2. '
' → logprob: -2.593600034713745
    3. ' for' → logprob: -4.343600273132324
    4. 'if' → logprob: -7.343600273132324
    5. '\n' → logprob: -7.718600273132324
    6. '```' → logprob: -8.218600273132324
    7. '<|end|>' → logprob: -9.718600273132324
    8. '' → logprob: -9.718600273132324
    9. 'i' → logprob: -10.718600273132324
    10. ':' → logprob: -10.843600273132324

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005045388825237751
    2. ' for' → logprob: -8.000504493713379
    3. '
' → logprob: -9.250504493713379
    4. '\n' → logprob: -10.375504493713379
    5. '```' → logprob: -10.375504493713379
    6. 'if' → logprob: -12.625504493713379
    7. ':' → logprob: -12.750504493713379
    8. '' → logprob: -13.125504493713379
    9. '\' → logprob: -14.375504493713379
    10. '	for' → logprob: -15.375504493713379

Token 32: ' element' (ID: 3577)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7051111459732056
    2. ' i' → logprob: -0.7051111459732056
    3. ' value' → logprob: -5.455111026763916
    4. ' _' → logprob: -5.705111026763916
    5. ' x' → logprob: -7.205111026763916
    6. '  ' → logprob: -7.205111026763916
    7. ' item' → logprob: -7.330111026763916
    8. ' input' → logprob: -7.455111026763916
    9. ' num' → logprob: -7.830111026763916
    10. ' val' → logprob: -7.955111026763916

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021789311431348324
    2. 'in' → logprob: -6.252179145812988
    3. ' ' → logprob: -8.502179145812988
    4. '  ' → logprob: -10.877179145812988
    5. '<|end|>' → logprob: -11.377179145812988
    6. ' ,' → logprob: -12.252179145812988
    7. '<|end|>' → logprob: -13.127179145812988
    8. 's' → logprob: -13.627179145812988
    9. ',' → logprob: -13.752179145812988
    10. ' i' → logprob: -13.752179145812988

Token 34: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04302111268043518
    2. 'input' → logprob: -3.1680212020874023
    3. ' ' → logprob: -11.168021202087402
    4. '(input' → logprob: -13.043021202087402
    5. '_input' → logprob: -13.793021202087402
    6. '=input' → logprob: -14.293021202087402
    7. ' current' → logprob: -14.418021202087402
    8. '<input' → logprob: -14.543021202087402
    9. ' user' → logprob: -14.668021202087402
    10. '	input' → logprob: -14.793021202087402

Token 35: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0002354832977289334
    2. '_value' → logprob: -8.375235557556152
    3. ')_' → logprob: -13.500235557556152
    4. '_' → logprob: -13.625235557556152
    5. ' _' → logprob: -13.750235557556152
    6. '_values' → logprob: -14.875235557556152
    7. '[_' → logprob: -15.000235557556152
    8. 'List' → logprob: -15.875235557556152
    9. '```' → logprob: -16.125234603881836
    10. ')' → logprob: -16.625234603881836

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011319868644932285
    2. ' :' → logprob: -9.750113487243652
    3. ':
' → logprob: -10.250113487243652
    4. '>' → logprob: -11.625113487243652
    5. ':**' → logprob: -12.750113487243652
    6. '   ' → logprob: -13.250113487243652
    7. '>:' → logprob: -13.250113487243652
    8. '=' → logprob: -13.750113487243652
    9. '<|end|>' → logprob: -14.500113487243652
    10. ' if' → logprob: -14.750113487243652

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06650567054748535
    2. ':' → logprob: -3.9415056705474854
    3. '<|end|>' → logprob: -3.9415056705474854
    4. '    ' → logprob: -4.191505432128906
    5. ' ' → logprob: -5.566505432128906
    6. '    
' → logprob: -5.816505432128906
    7. '```' → logprob: -7.191505432128906
    8. ' if' → logprob: -7.316505432128906
    9. ' 
' → logprob: -7.441505432128906
    10. '<|end|>' → logprob: -7.441505432128906

Token 38: ' if' (ID: 538)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.2925679385662079
    2. '   ' → logprob: -2.2925679683685303
    3. ' ' → logprob: -2.7925679683685303
    4. '     
' → logprob: -2.9175679683685303
    5. ' if' → logprob: -4.167567729949951
    6. '```' → logprob: -4.917567729949951
    7. ' 
' → logprob: -5.292567729949951
    8. '    
' → logprob: -5.792567729949951
    9. '<|end|>' → logprob: -6.167567729949951
    10. ' ```' → logprob: -6.917567729949951

Token 39: ' current' (ID: 2208)
  Prédit: ' element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.00026455431361682713
    2. 'element' → logprob: -8.250264167785645
    3. ' ' → logprob: -13.250264167785645
    4. ' ' → logprob: -14.875264167785645
    5. '	element' → logprob: -15.000264167785645
    6. ' input' → logprob: -15.125264167785645
    7. '(element' → logprob: -15.250264167785645
    8. ' current' → logprob: -15.625264167785645
    9. ' elemento' → logprob: -16.00026512145996
    10. ' élément' → logprob: -16.87526512145996

Token 40: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0016926733078435063
    2. '_' → logprob: -7.126692771911621
    3. ' _' → logprob: -7.626692771911621
    4. 'max' → logprob: -8.376692771911621
    5. ' <' → logprob: -9.251692771911621
    6. ' >' → logprob: -11.251692771911621
    7. 'Max' → logprob: -11.626692771911621
    8. '>' → logprob: -11.876692771911621
    9. ' max' → logprob: -11.876692771911621
    10. '<' → logprob: -11.876692771911621

Token 41: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0466175340116024
    2. ' <=' → logprob: -3.2966175079345703
    3. ' ==' → logprob: -5.67161750793457
    4. ' >=' → logprob: -6.04661750793457
    5. '<' → logprob: -6.79661750793457
    6. ' >' → logprob: -7.42161750793457
    7. ' ' → logprob: -7.79661750793457
    8. ' is' → logprob: -8.42161750793457
    9. '   ' → logprob: -8.79661750793457
    10. '<=' → logprob: -9.42161750793457

Token 42: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.31326404213905334
    2. 'element' → logprob: -1.313264012336731
    3. '	element' → logprob: -13.563263893127441
    4. ' ' → logprob: -14.313263893127441
    5. '(element' → logprob: -16.063264846801758
    6. '_element' → logprob: -16.563264846801758
    7. '[element' → logprob: -16.938264846801758
    8. ' элемент' → logprob: -17.188264846801758
    9. ' élément' → logprob: -17.313264846801758
    10. ' ' → logprob: -17.313264846801758

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009074339643120766
    2. ':
' → logprob: -5.0090742111206055
    3. ' :' → logprob: -6.3840742111206055
    4. '       ' → logprob: -8.134074211120605
    5. '   ' → logprob: -8.384074211120605
    6. ' :
' → logprob: -9.759074211120605
    7. '):' → logprob: -11.009074211120605
    8. ' and' → logprob: -11.134074211120605
    9. '=' → logprob: -11.259074211120605
    10. '    ' → logprob: -11.634074211120605

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3394380807876587
    2. ':' → logprob: -1.3394380807876587
    3. ' :' → logprob: -4.464437961578369
    4. '   ' → logprob: -5.714437961578369
    5. ' current' → logprob: -6.214437961578369
    6. 'current' → logprob: -6.339437961578369
    7. '    ' → logprob: -6.339437961578369
    8. ':
' → logprob: -6.464437961578369
    9. '):' → logprob: -6.964437961578369
    10. '```' → logprob: -7.089437961578369

Token 45: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6876134872436523
    2. 'current' (adapté à ' current') → logprob: -0.9376134872436523
    3. '       ' → logprob: -2.4376134872436523
    4. ' 
' → logprob: -5.437613487243652
    5. '        
' → logprob: -5.687613487243652
    6. '   ' → logprob: -5.937613487243652
    7. '```' → logprob: -6.187613487243652
    8. '    ' → logprob: -6.812613487243652
    9. '_current' → logprob: -7.187613487243652
    10. '        ' → logprob: -7.812613487243652

Token 46: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0002821928064804524
    2. '_' → logprob: -9.000282287597656
    3. 'max' → logprob: -9.000282287597656
    4. ' _' → logprob: -11.875282287597656
    5. 'Max' → logprob: -12.000282287597656
    6. '=' → logprob: -12.375282287597656
    7. '_MAX' → logprob: -12.500282287597656
    8. ' =' → logprob: -13.125282287597656
    9. '_s' → logprob: -13.125282287597656
    10. '_min' → logprob: -13.375282287597656

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021853535436093807
    2. '=' → logprob: -6.127185344696045
    3. ' +=' → logprob: -16.002185821533203
    4. ' ' → logprob: -16.502185821533203
    5. ' =
' → logprob: -17.752185821533203
    6. ' =)' → logprob: -18.127185821533203
    7. ',' → logprob: -18.627185821533203
    8. ')' → logprob: -18.752185821533203
    9. '    ' → logprob: -18.877185821533203
    10. ' ==' → logprob: -19.127185821533203

Token 48: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.03364765644073486
    2. 'element' → logprob: -3.4086475372314453
    3. ' ' → logprob: -14.033647537231445
    4. '	element' → logprob: -14.158647537231445
    5. ' ' → logprob: -15.783647537231445
    6. '(element' → logprob: -16.158647537231445
    7. ' élément' → logprob: -17.033647537231445
    8. ' elemento' → logprob: -17.158647537231445
    9. '_element' → logprob: -17.158647537231445
    10. '[element' → logprob: -17.658647537231445

Token 49: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007948233745992184
    2. '<|end|>' → logprob: -6.257948398590088
    3. '        
' → logprob: -6.757948398590088
    4. '```' → logprob: -6.757948398590088
    5. ' and' → logprob: -6.882948398590088
    6. '
' → logprob: -7.257948398590088
    7. ',' → logprob: -7.507948398590088
    8. '   ' → logprob: -7.882948398590088
    9. '+' → logprob: -8.13294792175293
    10. ':' → logprob: -8.75794792175293

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00575422216206789
    2. '
' → logprob: -6.130753993988037
    3. '        
' → logprob: -7.255753993988037
    4. '   ' → logprob: -7.380753993988037
    5. '```' → logprob: -7.380753993988037
    6. '<|end|>' → logprob: -7.380753993988037
    7. '+' → logprob: -8.255754470825195
    8. ' and' → logprob: -9.380754470825195
    9. ',' → logprob: -9.380754470825195
    10. '\n' → logprob: -9.505754470825195

Token 51: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.018843432888388634
    2. ' count' → logprob: -4.018843650817871
    3. '       ' → logprob: -7.893843650817871
    4. '   ' → logprob: -8.143843650817871
    5. '	count' → logprob: -11.268843650817871
    6. '_count' → logprob: -12.643843650817871
    7. '    ' → logprob: -13.143843650817871
    8. 'if' → logprob: -13.393843650817871
    9. '<count' → logprob: -13.768843650817871
    10. '$count' → logprob: -13.768843650817871

Token 52: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.0003612065047491342
    2. '_' → logprob: -8.000361442565918
    3. '_ge' → logprob: -12.125361442565918
    4. '_equal' → logprob: -12.250361442565918
    5. 'greater' → logprob: -13.375361442565918
    6. '_count' → logprob: -13.375361442565918
    7. '_s' → logprob: -13.625361442565918
    8. ' +=' → logprob: -13.750361442565918
    9. ' _' → logprob: -13.750361442565918
    10. ' ' → logprob: -14.250361442565918

Token 53: 'reater' (ID: 110926)
  Prédit: 'reater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reater' → logprob: -0.01829463243484497
    2. 'reate' → logprob: -4.393294811248779
    3. 'r' → logprob: -5.768294811248779
    4. 'e' → logprob: -6.643294811248779
    5. 're' → logprob: -7.518294811248779
    6. 'reat' → logprob: -7.893294811248779
    7. '_' → logprob: -8.518294334411621
    8. 't' → logprob: -10.018294334411621
    9. 'er' → logprob: -10.268294334411621
    10. 'rea' → logprob: -10.393294334411621

Token 54: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.004149749409407377
    2. '_' → logprob: -6.129149913787842
    3. '_e' → logprob: -6.379149913787842
    4. '_eq' → logprob: -9.254149436950684
    5. '_=' → logprob: -9.504149436950684
    6. '_equ' → logprob: -9.879149436950684
    7. ' _' → logprob: -11.004149436950684
    8. '_equals' → logprob: -11.504149436950684
    9. '=_' → logprob: -12.129149436950684
    10. '=' → logprob: -12.379149436950684

Token 55: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.05162707343697548
    2. '+=' → logprob: -3.1766271591186523
    3. '+' → logprob: -4.801627159118652
    4. ' +' → logprob: -8.051627159118652
    5. '<|end|>' → logprob: -10.926627159118652
    6. ']+=' → logprob: -11.551627159118652
    7. ' ' → logprob: -11.676627159118652
    8. '=' → logprob: -12.426627159118652
    9. '   ' → logprob: -12.801627159118652
    10. '+='' → logprob: -13.051627159118652

Token 56: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804149478673935
    2. ' ' → logprob: -3.288041591644287
    3. ' ' → logprob: -18.663042068481445
    4. '+' → logprob: -19.038042068481445
    5. '   ' → logprob: -19.663042068481445
    6. ' +' → logprob: -20.288042068481445
    7. '  ' → logprob: -20.538042068481445
    8. '```' → logprob: -20.538042068481445
    9. '１' → logprob: -20.663042068481445
    10. '0' → logprob: -20.788042068481445

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '+' → logprob: -19.0000057220459
    4. '   ' → logprob: -19.5000057220459
    5. '```' → logprob: -20.2500057220459
    6. '<|end|>' → logprob: -20.7500057220459
    7. '  ' → logprob: -21.0000057220459
    8. '１' → logprob: -21.5000057220459
    9. '۱' → logprob: -21.6250057220459
    10. '0' → logprob: -22.1250057220459

Token 58: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005982242990285158
    2. '(count' → logprob: -5.130982398986816
    3. '(current' → logprob: -11.505982398986816
    4. '('' → logprob: -11.505982398986816
    5. '()' → logprob: -11.630982398986816
    6. '("("' → logprob: -12.130982398986816
    7. ' (' → logprob: -12.380982398986816
    8. '((' → logprob: -12.880982398986816
    9. '(print' → logprob: -13.130982398986816
    10. '(end' → logprob: -13.255982398986816

Token 61: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.003643311094492674
    2. ')' → logprob: -6.37864351272583
    3. '_' → logprob: -6.37864351272583
    4. '_)' → logprob: -8.378643035888672
    5. ')_' → logprob: -11.628643035888672
    6. 'greater' → logprob: -14.128643035888672
    7. '_equal' → logprob: -14.503643035888672
    8. '_gt' → logprob: -14.753643035888672
    9. ' _' → logprob: -15.003643035888672
    10. '_ge' → logprob: -15.753643035888672

Token 62: 'reater' (ID: 110926)
  Prédit: 'reater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reater' → logprob: -0.00024739265791140497
    2. 'reate' → logprob: -8.50024700164795
    3. 'r' → logprob: -11.25024700164795
    4. 're' → logprob: -11.37524700164795
    5. 'reat' → logprob: -11.87524700164795
    6. 'ater' → logprob: -12.00024700164795
    7. 'greater' → logprob: -12.62524700164795
    8. '>' → logprob: -13.87524700164795
    9. 'rea' → logprob: -14.25024700164795
    10. 'e' → logprob: -14.62524700164795

Token 63: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.0004827465454582125
    2. ')' → logprob: -8.625482559204102
    3. '_' → logprob: -8.750482559204102
    4. '_)' → logprob: -10.000482559204102
    5. '_eq' → logprob: -10.250482559204102
    6. '_e' → logprob: -10.500482559204102
    7. 'equal' → logprob: -10.500482559204102
    8. '_equ' → logprob: -13.375482559204102
    9. '_equals' → logprob: -13.500482559204102
    10. '_EQUAL' → logprob: -13.750482559204102

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.0
    3. '))' → logprob: -16.125
    4. ')
' → logprob: -17.875
    5. '')' → logprob: -17.875
    6. ')`' → logprob: -18.0
    7. ')}' → logprob: -19.25
    8. '`)' → logprob: -19.375
    9. '(' → logprob: -19.625
    10. '}' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 62
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 49
Précision stricte (1ère position): 41.94%
Précision adaptée (1ère position): 43.55%
Précision (top 10): 79.03%
================================================================================
