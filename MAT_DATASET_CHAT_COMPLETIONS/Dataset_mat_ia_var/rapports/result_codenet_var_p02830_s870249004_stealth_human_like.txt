================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s, t = input().split()
res = []
# On va parcourir chaque caractère des deux chaînes
for i in range(n):
    res += s[i]
    res.append(t[i])  # j'utilise append ici, c'est pareil normalement
# Bon, on affiche le résultat final
print(''.join(res))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0521364212036133
    2. 'for' → logprob: -1.3021364212036133
    3. 'if' → logprob: -1.4271364212036133
    4. 's' → logprob: -3.1771364212036133
    5. 'f' → logprob: -4.177136421203613
    6. 'x' → logprob: -4.177136421203613
    7. 'a' → logprob: -4.552136421203613
    8. ')' → logprob: -4.677136421203613
    9. ' ' → logprob: -4.677136421203613
    10. '*' → logprob: -4.927136421203613

Token 6: ',' (ID: 11)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.1446903944015503
    2. ' =' → logprob: -1.2696903944015503
    3. '=' → logprob: -1.8946903944015503
    4. 'tr' → logprob: -2.39469051361084
    5. '.' → logprob: -2.76969051361084
    6. '[' → logprob: -3.01969051361084
    7. 't' → logprob: -4.14469051361084
    8. 'trip' → logprob: -5.64469051361084
    9. 'u' → logprob: -5.76969051361084
    10. '[i' → logprob: -5.89469051361084

Token 7: ' t' (ID: 260)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4387992024421692
    2. ' =' → logprob: -1.1887991428375244
    3. ' ' → logprob: -3.9387991428375244
    4. '_' → logprob: -4.3137993812561035
    5. 's' → logprob: -5.5637993812561035
    6. 't' → logprob: -5.6887993812561035
    7. ' []' → logprob: -6.5637993812561035
    8. ',' → logprob: -6.5637993812561035
    9. '"' → logprob: -6.9387993812561035
    10. 'i' → logprob: -7.3137993812561035

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38700801134109497
    2. '=' → logprob: -1.1370079517364502
    3. ',' → logprob: -9.012007713317871
    4. ' ' → logprob: -12.137007713317871
    5. ')' → logprob: -13.012007713317871
    6. '_' → logprob: -13.012007713317871
    7. '[' → logprob: -13.387007713317871
    8. ' ,' → logprob: -14.012007713317871
    9. ' =
' → logprob: -14.887007713317871
    10. 's' → logprob: -14.887007713317871

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21231898665428162
    2. '"' → logprob: -2.5873188972473145
    3. '0' → logprob: -3.5873188972473145
    4. 'map' → logprob: -3.7123188972473145
    5. ''' → logprob: -3.8373188972473145
    6. '"",' → logprob: -4.4623188972473145
    7. '''' → logprob: -4.5873188972473145
    8. '""' → logprob: -5.0873188972473145
    9. ''',' → logprob: -5.0873188972473145
    10. ' input' → logprob: -5.5873188972473145

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47511380910873413
    2. '(' → logprob: -0.9751138091087341
    3. ')' → logprob: -7.725113868713379
    4. '```' → logprob: -9.100113868713379
    5. '('' → logprob: -9.475113868713379
    6. '().' → logprob: -9.725113868713379
    7. '())' → logprob: -9.725113868713379
    8. '`()' → logprob: -9.725113868713379
    9. ' ()' → logprob: -10.225113868713379
    10. '()`' → logprob: -10.350113868713379

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026622318546287715
    2. 'strip' → logprob: -8.250266075134277
    3. ' split' → logprob: -13.625266075134277
    4. 'rstrip' → logprob: -13.625266075134277
    5. 'spl' → logprob: -14.000266075134277
    6. 'rs' → logprob: -14.000266075134277
    7. 'replace' → logprob: -14.750266075134277
    8. 's' → logprob: -15.375266075134277
    9. 'sp' → logprob: -15.750266075134277
    10. '(split' → logprob: -16.875267028808594

Token 12: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43976402282714844
    2. '()' → logprob: -1.4397640228271484
    3. '('' → logprob: -2.3147640228271484
    4. '("("' → logprob: -4.314764022827148
    5. '("' → logprob: -5.439764022827148
    6. '`' → logprob: -7.814764022827148
    7. '`()' → logprob: -7.814764022827148
    8. '(`' → logprob: -8.314764022827148
    9. '```' → logprob: -8.314764022827148
    10. '(()' → logprob: -8.564764022827148

Token 13: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04354042559862137
    2. 'result' → logprob: -3.7935404777526855
    3. 'if' → logprob: -4.9185404777526855
    4. 'i' → logprob: -6.1685404777526855
    5. 'u' → logprob: -6.5435404777526855
    6. 'count' → logprob: -6.6685404777526855
    7. 'r' → logprob: -6.6685404777526855
    8. 'a' → logprob: -6.6685404777526855
    9. 'd' → logprob: -7.0435404777526855
    10. 'res' → logprob: -7.2935404777526855

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11858905851840973
    2. '=' → logprob: -2.368589162826538
    3. '[' → logprob: -4.868588924407959
    4. '_' → logprob: -6.118588924407959
    5. '[]' → logprob: -6.118588924407959
    6. '[:]' → logprob: -6.368588924407959
    7. 's' → logprob: -6.993588924407959
    8. '.' → logprob: -6.993588924407959
    9. 'ult' → logprob: -7.493588924407959
    10. ' ' → logprob: -7.868588924407959

Token 15: ' []
' (ID: 8911)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.2968360185623169
    2. '[]' → logprob: -1.671836018562317
    3. '"' → logprob: -3.1718358993530273
    4. '''' → logprob: -4.046835899353027
    5. '0' → logprob: -5.671835899353027
    6. ''' → logprob: -6.296835899353027
    7. ' []' → logprob: -6.671835899353027
    8. ' ""' → logprob: -7.046835899353027
    9. '"s' → logprob: -7.546835899353027
    10. 's' → logprob: -7.796835899353027

Token 16: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3782830137643032e-05
    2. ' for' → logprob: -11.75001335144043
    3. '```' → logprob: -12.12501335144043
    4. 'i' → logprob: -15.25001335144043
    5. '\n' → logprob: -16.75001335144043
    6. 'f' → logprob: -16.87501335144043
    7. '`' → logprob: -17.00001335144043
    8. '	for' → logprob: -17.87501335144043
    9. 'n' → logprob: -18.25001335144043
    10. '``' → logprob: -18.37501335144043

Token 17: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016043050214648247
    2. ' for' → logprob: -4.141043186187744
    3. '```' → logprob: -12.391042709350586
    4. ' ' → logprob: -13.391042709350586
    5. 'f' → logprob: -13.766042709350586
    6. 'For' → logprob: -14.266042709350586
    7. 's' → logprob: -14.891042709350586
    8. '_' → logprob: -16.016042709350586
    9. '#' → logprob: -16.016042709350586
    10. 'i' → logprob: -16.141042709350586

Token 18: ' va' (ID: 3423)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10961269587278366
    2. ' for' → logprob: -2.7346127033233643
    3. ' e' → logprob: -3.6096127033233643
    4. '_' → logprob: -5.359612464904785
    5. 'for' → logprob: -5.734612464904785
    6. ' ' → logprob: -6.109612464904785
    7. ' range' → logprob: -7.609612464904785
    8. 'l' → logprob: -8.359612464904785
    9. 's' → logprob: -9.109612464904785
    10. 'E' → logprob: -9.234612464904785

Token 19: ' parcour' (ID: 130642)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08188316971063614
    2. ' for' → logprob: -3.456883192062378
    3. ' iter' → logprob: -4.081882953643799
    4. '_' → logprob: -5.081882953643799
    5. ' append' → logprob: -5.331882953643799
    6. ' range' → logprob: -5.831882953643799
    7. 'for' → logprob: -6.081882953643799
    8. ' f' → logprob: -6.456882953643799
    9. 'l' → logprob: -6.956882953643799
    10. ' iterate' → logprob: -7.081882953643799

Token 20: 'ir' (ID: 380)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20651771128177643
    2. 'ir' → logprob: -1.7065176963806152
    3. 'ant' → logprob: -5.456517696380615
    4. 't' → logprob: -8.206518173217773
    5. 'nt' → logprob: -8.331518173217773
    6. 'er' → logprob: -9.206518173217773
    7. 'i' → logprob: -10.331518173217773
    8. '#' → logprob: -10.331518173217773
    9. 's' → logprob: -11.081518173217773
    10. 'u' → logprob: -11.206518173217773

Token 21: ' chaque' (ID: 21194)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6770230531692505
    2. '(range' → logprob: -1.5520230531692505
    3. 'range' → logprob: -1.8020230531692505
    4. ' s' → logprob: -3.552022933959961
    5. ' la' → logprob: -4.177022933959961
    6. ' for' → logprob: -4.427022933959961
    7. ' n' → logprob: -4.802022933959961
    8. ' ' → logprob: -4.802022933959961
    9. '(len' → logprob: -4.802022933959961
    10. 's' → logprob: -5.052022933959961

Token 22: ' caractère' (ID: 80509)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.21391159296035767
    2. 'i' → logprob: -2.338911533355713
    3. ' ' → logprob: -2.963911533355713
    4. ' caract' → logprob: -4.213911533355713
    5. ' caractère' → logprob: -4.213911533355713
    6. 'car' → logprob: -4.588911533355713
    7. '  ' → logprob: -6.963911533355713
    8. ' car' → logprob: -7.713911533355713
    9. ' c' → logprob: -7.838911533355713
    10. 'c' → logprob: -7.838911533355713

Token 23: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9840182662010193
    2. ' i' → logprob: -1.234018325805664
    3. ' ' → logprob: -1.984018325805664
    4. 's' → logprob: -2.609018325805664
    5. ' for' → logprob: -2.609018325805664
    6. 'i' → logprob: -3.984018325805664
    7. 'for' → logprob: -4.359018325805664
    8. ',' → logprob: -5.484018325805664
    9. 'de' → logprob: -5.609018325805664
    10. ' of' → logprob: -6.109018325805664

Token 24: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.34465959668159485
    2. ' chaînes' → logprob: -2.0946595668792725
    3. ' deux' → logprob: -3.4696595668792725
    4. ' ' → logprob: -3.5946595668792725
    5. 's' → logprob: -3.7196595668792725
    6. 'strings' → logprob: -3.8446595668792725
    7. ' strings' → logprob: -3.9696595668792725
    8. 'chain' → logprob: -4.469659805297852
    9. '2' → logprob: -4.844659805297852
    10. 'chaine' → logprob: -4.969659805297852

Token 25: ' chaînes' (ID: 179904)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.22110025584697723
    2. ' chaînes' → logprob: -1.9711002111434937
    3. 'string' → logprob: -4.221100330352783
    4. 's' → logprob: -4.221100330352783
    5. ' strings' → logprob: -4.471100330352783
    6. 'chain' → logprob: -4.721100330352783
    7. 'chaine' → logprob: -5.221100330352783
    8. ' chain' → logprob: -6.596100330352783
    9. 'for' → logprob: -7.971100330352783
    10. ' s' → logprob: -7.971100330352783

Token 26: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19572994112968445
    2. ' ' → logprob: -2.695729970932007
    3. 'for' → logprob: -2.695729970932007
    4. ',' → logprob: -3.820729970932007
    5. ' ,' → logprob: -4.445729732513428
    6. '<|end|>' → logprob: -6.070729732513428
    7. ' i' → logprob: -6.570729732513428
    8. 's' → logprob: -6.820729732513428
    9. '.' → logprob: -6.945729732513428
    10. ' pour' → logprob: -7.320729732513428

Token 27: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5233351588249207
    2. ' for' → logprob: -0.8983351588249207
    3. '```' → logprob: -9.398335456848145
    4. 'n' → logprob: -10.148335456848145
    5. ',' → logprob: -10.273335456848145
    6. '<|end|>' → logprob: -10.648335456848145
    7. ' ' → logprob: -11.773335456848145
    8. ':' → logprob: -12.898335456848145
    9. 'i' → logprob: -12.898335456848145
    10. '<|end|>' → logprob: -13.273335456848145

Token 28: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01706382818520069
    2. ' ' → logprob: -4.642063617706299
    3. 'i' → logprob: -5.017063617706299
    4. ' _' → logprob: -8.017064094543457
    5. '_' → logprob: -8.267064094543457
    6. '  ' → logprob: -9.767064094543457
    7. ' ' → logprob: -12.517064094543457
    8. ' s' → logprob: -13.142064094543457
    9. ' c' → logprob: -13.392064094543457
    10. ' ‌' → logprob: -13.892064094543457

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05525098741054535
    2. 'in' → logprob: -2.930250883102417
    3. ' ' → logprob: -8.180251121520996
    4. ',' → logprob: -11.180251121520996
    5. ' i' → logprob: -11.430251121520996
    6. '  ' → logprob: -11.680251121520996
    7. ' =' → logprob: -11.805251121520996
    8. '=' → logprob: -11.930251121520996
    9. '<|end|>' → logprob: -11.930251121520996
    10. '_' → logprob: -12.430251121520996

Token 30: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014165041036903858
    2. 'range' → logprob: -4.264164924621582
    3. '	range' → logprob: -14.014164924621582
    4. ' ' → logprob: -15.639164924621582
    5. ' xrange' → logprob: -16.1391658782959
    6. 'ange' → logprob: -16.3891658782959
    7. ' rang' → logprob: -16.3891658782959
    8. '(range' → logprob: -17.0141658782959
    9. '_range' → logprob: -17.5141658782959
    10. '.range' → logprob: -17.6391658782959

Token 31: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741315543651581
    2. '(n' → logprob: -0.9741315841674805
    3. ' (' → logprob: -10.22413158416748
    4. '(len' → logprob: -11.72413158416748
    5. '(
' → logprob: -12.59913158416748
    6. '(i' → logprob: -13.47413158416748
    7. 'n' → logprob: -13.72413158416748
    8. '(

' → logprob: -13.97413158416748
    9. '(s' → logprob: -14.34913158416748
    10. '(`' → logprob: -14.47413158416748

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005196047481149435
    2. ')' → logprob: -5.3801960945129395
    3. ' ):' → logprob: -7.5051960945129395
    4. ':' → logprob: -11.130195617675781
    5. '):
' → logprob: -12.255195617675781
    6. ' )' → logprob: -12.505195617675781
    7. ' ' → logprob: -14.130195617675781
    8. '+' → logprob: -15.130195617675781
    9. ')：' → logprob: -15.755195617675781
    10. '）：' → logprob: -16.25519561767578

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07919126749038696
    2. ' ' → logprob: -2.704191207885742
    3. ' if' → logprob: -5.079191207885742
    4. '    ' → logprob: -7.204191207885742
    5. ' res' → logprob: -7.329191207885742
    6. '    
' → logprob: -8.204191207885742
    7. '  ' → logprob: -8.454191207885742
    8. 'if' → logprob: -8.704191207885742
    9. ' 
' → logprob: -8.954191207885742
    10. 'res' → logprob: -8.954191207885742

Token 34: ' res' (ID: 694)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1933106631040573
    2. 'if' → logprob: -1.9433106184005737
    3. '   ' → logprob: -4.193310737609863
    4. '    ' → logprob: -4.943310737609863
    5. ' ' → logprob: -5.193310737609863
    6. 'res' (adapté à ' res') → logprob: -6.318310737609863
    7. ' res' → logprob: -6.943310737609863
    8. '```' → logprob: -7.443310737609863
    9. ' ```' → logprob: -7.943310737609863
    10. 'i' → logprob: -8.693310737609863

Token 35: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4741666316986084
    2. '.' → logprob: -0.9741666316986084
    3. '.extend' → logprob: -9.599166870117188
    4. ' .' → logprob: -12.349166870117188
    5. '.Append' → logprob: -12.599166870117188
    6. 'append' → logprob: -12.724166870117188
    7. '.app' → logprob: -13.099166870117188
    8. ' +=' → logprob: -13.474166870117188
    9. '.add' → logprob: -13.599166870117188
    10. '.=' → logprob: -13.724166870117188

Token 36: ' s' (ID: 265)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.0392863750457764
    2. '[' → logprob: -1.6642863750457764
    3. ' s' → logprob: -1.7892863750457764
    4. 's' → logprob: -2.0392863750457764
    5. '[s' → logprob: -2.0392863750457764
    6. '[t' → logprob: -4.4142866134643555
    7. ' t' → logprob: -4.9142866134643555
    8. 't' → logprob: -6.0392866134643555
    9. ' ' → logprob: -6.9142866134643555
    10. ''s' → logprob: -7.0392866134643555

Token 37: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00030281138606369495
    2. '[' → logprob: -8.125303268432617
    3. 'i' → logprob: -12.500303268432617
    4. 's' → logprob: -13.875303268432617
    5. '[
' → logprob: -15.000303268432617
    6. '[I' → logprob: -15.375303268432617
    7. '```' → logprob: -15.375303268432617
    8. ' ' → logprob: -15.500303268432617
    9. '[s' → logprob: -15.625303268432617
    10. ' i' → logprob: -15.750303268432617

Token 38: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5144988894462585
    2. ']' → logprob: -1.1394989490509033
    3. ')' → logprob: -4.139498710632324
    4. 'if' → logprob: -4.514498710632324
    5. '==' → logprob: -4.514498710632324
    6. '+t' → logprob: -4.639498710632324
    7. ' +' → logprob: -4.889498710632324
    8. '!=' → logprob: -5.014498710632324
    9. ']+' → logprob: -5.639498710632324
    10. ' if' → logprob: -5.889498710632324

Token 39: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4939545691013336
    2. 'if' → logprob: -1.2439545392990112
    3. ' if' → logprob: -2.868954658508301
    4. '==' → logprob: -4.618954658508301
    5. 't' → logprob: -4.993954658508301
    6. ',' → logprob: -5.118954658508301
    7. '=' → logprob: -5.118954658508301
    8. '+=' → logprob: -5.493954658508301
    9. '   ' → logprob: -6.118954658508301
    10. ' ==' → logprob: -6.118954658508301

Token 40: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5457231402397156
    2. '+' → logprob: -1.5457231998443604
    3. ' if' → logprob: -2.7957231998443604
    4. 't' → logprob: -2.9207231998443604
    5. '   ' → logprob: -3.6707231998443604
    6. ' ' → logprob: -3.7957231998443604
    7. ' ==' → logprob: -4.545722961425781
    8. '==' → logprob: -4.670722961425781
    9. ' +' → logprob: -4.670722961425781
    10. ' t' → logprob: -5.795722961425781

Token 41: '.append' (ID: 3709)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8713246583938599
    2. '+' → logprob: -1.2463246583938599
    3. '+=' → logprob: -1.2463246583938599
    4. ' +' → logprob: -5.87132453918457
    5. '==' → logprob: -6.87132453918457
    6. '   ' → logprob: -7.24632453918457
    7. '=' → logprob: -7.24632453918457
    8. ' ==' → logprob: -7.49632453918457
    9. '[' → logprob: -8.24632453918457
    10. '+='' → logprob: -9.49632453918457

Token 42: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.018190911039710045
    2. '(' → logprob: -4.018190860748291
    3. '('' → logprob: -10.26819133758545
    4. '(s' → logprob: -12.51819133758545
    5. '("("' → logprob: -13.39319133758545
    6. '((' → logprob: -14.39319133758545
    7. 't' → logprob: -15.64319133758545
    8. '(
' → logprob: -16.143190383911133
    9. '(`' → logprob: -16.143190383911133
    10. '(T' → logprob: -16.393190383911133

Token 43: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0921942703134846e-05
    2. '[' → logprob: -11.62501049041748
    3. ')' → logprob: -14.12501049041748
    4. ' [' → logprob: -15.12501049041748
    5. ']' → logprob: -15.37501049041748
    6. '[I' → logprob: -15.62501049041748
    7. '[
' → logprob: -16.125011444091797
    8. '[j' → logprob: -16.250011444091797
    9. '```' → logprob: -16.375011444091797
    10. '[n' → logprob: -16.375011444091797

Token 44: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47459664940834045
    2. '])' → logprob: -0.9745966196060181
    3. ']' → logprob: -8.349596977233887
    4. ''])' → logprob: -9.474596977233887
    5. ')])' → logprob: -9.599596977233887
    6. '))' → logprob: -9.724596977233887
    7. ')]' → logprob: -10.974596977233887
    8. '`)' → logprob: -11.099596977233887
    9. ')
' → logprob: -11.224596977233887
    10. '})' → logprob: -11.724596977233887

Token 45: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5587678551673889
    2. ')' → logprob: -1.3087677955627441
    3. '[' → logprob: -2.683767795562744
    4. ']' → logprob: -3.433767795562744
    5. '<|end|>' → logprob: -3.558767795562744
    6. '#' → logprob: -4.558767795562744
    7. '```' → logprob: -5.308767795562744
    8. '\' → logprob: -5.933767795562744
    9. '(' → logprob: -6.558767795562744
    10. '
' → logprob: -6.558767795562744

Token 46: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4504406154155731
    2. '[' → logprob: -1.9504406452178955
    3. ')' → logprob: -2.0754406452178955
    4. '```' → logprob: -4.075440406799316
    5. '<|end|>' → logprob: -4.200440406799316
    6. ']' → logprob: -4.200440406799316
    7. '#' → logprob: -4.450440406799316
    8. 'r' → logprob: -4.825440406799316
    9. 's' → logprob: -5.575440406799316
    10. '\' → logprob: -5.825440406799316

Token 47: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4283049404621124
    2. ')' → logprob: -1.42830491065979
    3. '[' → logprob: -3.30330491065979
    4. ']' → logprob: -3.67830491065979
    5. '<|end|>' → logprob: -4.178305149078369
    6. 's' → logprob: -5.053305149078369
    7. 'r' → logprob: -5.053305149078369
    8. '
' → logprob: -5.678305149078369
    9. '```' → logprob: -5.803305149078369
    10. ''s' → logprob: -6.553305149078369

Token 48: ''util' (ID: 37761)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2099416255950928
    2. '<|end|>' → logprob: -1.9599416255950928
    3. ']' → logprob: -2.2099416255950928
    4. '.' → logprob: -2.3349416255950928
    5. '+' → logprob: -2.4599416255950928
    6. '#' → logprob: -2.5849416255950928
    7. '[' → logprob: -3.0849416255950928
    8. '=' → logprob: -3.0849416255950928
    9. ' ' → logprob: -3.0849416255950928
    10. '\' → logprob: -4.459941864013672

Token 49: 'ise' (ID: 1096)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4974583387374878
    2. 'se' → logprob: -1.3724583387374878
    3. 'ser' → logprob: -1.9974583387374878
    4. '#' → logprob: -6.247458457946777
    5. 't' → logprob: -8.997458457946777
    6. 'sers' → logprob: -9.497458457946777
    7. 'sert' → logprob: -9.497458457946777
    8. 'sement' → logprob: -9.497458457946777
    9. 'sera' → logprob: -9.622458457946777
    10. 'ses' → logprob: -9.622458457946777

Token 50: ' append' (ID: 17147)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9747151136398315
    2. '.' → logprob: -1.4747151136398315
    3. ' ' → logprob: -2.099715232849121
    4. '[]' → logprob: -2.349715232849121
    5. 's' → logprob: -2.974715232849121
    6. '(' → logprob: -3.349715232849121
    7. ')' → logprob: -3.599715232849121
    8. '_' → logprob: -3.599715232849121
    9. '<|end|>' → logprob: -3.974715232849121
    10. ''' → logprob: -6.099715232849121

Token 51: ' ici' (ID: 27994)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6903430819511414
    2. '[' → logprob: -1.3153431415557861
    3. '(' → logprob: -1.8153431415557861
    4. ']' → logprob: -3.440343141555786
    5. ' ' → logprob: -4.190342903137207
    6. '```' → logprob: -5.690342903137207
    7. '<|end|>' → logprob: -5.815342903137207
    8. 'r' → logprob: -6.190342903137207
    9. '\' → logprob: -6.690342903137207
    10. '#' → logprob: -6.690342903137207

Token 52: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6402223110198975
    2. '[' → logprob: -1.3902223110198975
    3. ' ' → logprob: -2.1402223110198975
    4. ']' → logprob: -2.7652223110198975
    5. '(' → logprob: -4.140222549438477
    6. '```' → logprob: -4.765222549438477
    7. '<|end|>' → logprob: -5.015222549438477
    8. '.' → logprob: -6.140222549438477
    9. 'r' → logprob: -6.140222549438477
    10. 's' → logprob: -7.015222549438477

Token 53: ' c' (ID: 274)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2195291370153427
    2. ' ' → logprob: -2.844529151916504
    3. '<|end|>' → logprob: -2.844529151916504
    4. '```' → logprob: -3.469529151916504
    5. ' because' → logprob: -4.594529151916504
    6. ' but' → logprob: -4.844529151916504
    7. '<|end|>' → logprob: -5.219529151916504
    8. 's' → logprob: -5.594529151916504
    9. '#' → logprob: -5.844529151916504
    10. ''' → logprob: -6.094529151916504

Token 54: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -1.3692257404327393
    2. ''' → logprob: -1.6192257404327393
    3. 'ar' → logprob: -1.7442257404327393
    4. 'car' → logprob: -2.1192257404327393
    5. 'e' → logprob: -2.9942257404327393
    6. '#' → logprob: -2.9942257404327393
    7. ''#' → logprob: -3.6192257404327393
    8. 'est' → logprob: -3.8692257404327393
    9. '`' → logprob: -4.24422550201416
    10. '```' → logprob: -4.36922550201416

Token 55: ' pareil' (ID: 155569)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.9009271264076233
    2. 'une' → logprob: -2.0259270668029785
    3. ' mieux' → logprob: -2.9009270668029785
    4. 'bien' → logprob: -2.9009270668029785
    5. ' une' → logprob: -3.1509270668029785
    6. 'correct' → logprob: -3.2759270668029785
    7. ' plus' → logprob: -3.5259270668029785
    8. 'moins' → logprob: -3.6509270668029785
    9. 'm' → logprob: -3.9009270668029785
    10. 'co' → logprob: -4.1509270668029785

Token 56: ' normalement' (ID: 164432)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6105790138244629
    2. ' ' → logprob: -1.235579013824463
    3. ')' → logprob: -2.485579013824463
    4. '<|end|>' → logprob: -3.485579013824463
    5. ']' → logprob: -3.985579013824463
    6. 'r' → logprob: -5.235579013824463
    7. '(' → logprob: -5.610579013824463
    8. '
' → logprob: -5.610579013824463
    9. '```' → logprob: -5.610579013824463
    10. '[]' → logprob: -5.985579013824463

Token 57: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4031062126159668
    2. '<|end|>' → logprob: -1.5281062126159668
    3. '
' → logprob: -1.6531062126159668
    4. '[' → logprob: -2.028106212615967
    5. ' ' → logprob: -2.653106212615967
    6. ']' → logprob: -3.028106212615967
    7. '```' → logprob: -3.528106212615967
    8. '#' → logprob: -3.778106212615967
    9. '<|end|>' → logprob: -4.778106212615967
    10. '[]' → logprob: -5.403106212615967

Token 58: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.898553729057312
    2. ')' → logprob: -1.398553729057312
    3. '
' → logprob: -1.898553729057312
    4. ' ' → logprob: -2.7735538482666016
    5. '<|end|>' → logprob: -3.2735538482666016
    6. ']' → logprob: -3.5235538482666016
    7. '```' → logprob: -4.148553848266602
    8. '#' → logprob: -4.398553848266602
    9. '\' → logprob: -5.023553848266602
    10. '[
' → logprob: -5.648553848266602

Token 59: ' Bon' (ID: 12658)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014731991104781628
    2. ' print' → logprob: -7.501473426818848
    3. '#' → logprob: -7.751473426818848
    4. ')' → logprob: -8.876473426818848
    5. '
' → logprob: -9.001473426818848
    6. '```' → logprob: -9.876473426818848
    7. '#print' → logprob: -10.501473426818848
    8. 'result' → logprob: -10.876473426818848
    9. '<|end|>' → logprob: -11.001473426818848
    10. '[' → logprob: -11.251473426818848

Token 60: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4930216372013092
    2. ' ' → logprob: -1.1180216073989868
    3. ')' → logprob: -3.7430217266082764
    4. '#' → logprob: -3.8680217266082764
    5. '
' → logprob: -5.993021488189697
    6. '<|end|>' → logprob: -6.118021488189697
    7. '```' → logprob: -6.368021488189697
    8. 's' → logprob: -6.493021488189697
    9. ']' → logprob: -6.493021488189697
    10. 'result' → logprob: -6.618021488189697

Token 61: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12454672157764435
    2. 'res' → logprob: -2.999546766281128
    3. 'result' → logprob: -3.749546766281128
    4. ' print' → logprob: -3.874546766281128
    5. ' but' → logprob: -4.624546527862549
    6. 's' → logprob: -6.249546527862549
    7. 'rés' → logprob: -6.749546527862549
    8. ' on' → logprob: -6.999546527862549
    9. ' ' → logprob: -7.124546527862549
    10. '#' → logprob: -7.249546527862549

Token 62: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15781164169311523
    2. '.' → logprob: -3.2828116416931152
    3. '.append' → logprob: -3.4078116416931152
    4. '#' → logprob: -3.6578116416931152
    5. ' print' → logprob: -4.907811641693115
    6. 's' → logprob: -5.282811641693115
    7. ' =' → logprob: -5.282811641693115
    8. '.print' → logprob: -5.657811641693115
    9. 'final' → logprob: -5.657811641693115
    10. '=' → logprob: -6.032811641693115

Token 63: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015762288123369217
    2. '(' → logprob: -4.2657623291015625
    3. ' print' → logprob: -7.0157623291015625
    4. '('' → logprob: -8.015762329101562
    5. '"' → logprob: -9.765762329101562
    6. '()' → logprob: -9.890762329101562
    7. '("' → logprob: -9.890762329101562
    8. '```' → logprob: -10.265762329101562
    9. '("")' → logprob: -10.390762329101562
    10. '(print' → logprob: -10.515762329101562

Token 64: ' résultat' (ID: 62556)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.23497651517391205
    2. '''.' → logprob: -1.6099765300750732
    3. 'result' → logprob: -5.734976291656494
    4. 'final' → logprob: -6.109976291656494
    5. '""' → logprob: -6.609976291656494
    6. '''' → logprob: -7.109976291656494
    7. ''' → logprob: -7.859976291656494
    8. '.' → logprob: -7.984976291656494
    9. ' ''.' → logprob: -8.109976768493652
    10. ' "".' → logprob: -8.234976768493652

Token 65: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00026538874953985214
    2. ' print' → logprob: -8.625265121459961
    3. '```' → logprob: -9.625265121459961
    4. '
' → logprob: -11.750265121459961
    5. ')' → logprob: -12.500265121459961
    6. '`' → logprob: -13.125265121459961
    7. '``' → logprob: -13.125265121459961
    8. '(' → logprob: -14.250265121459961
    9. 'p' → logprob: -14.625265121459961
    10. 'pr' → logprob: -14.625265121459961

Token 66: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.697387966094539e-05
    2. ' print' → logprob: -9.750086784362793
    3. '```' → logprob: -10.875086784362793
    4. '
' → logprob: -11.875086784362793
    5. '``' → logprob: -14.125086784362793
    6. '`' → logprob: -14.750086784362793
    7. ')' → logprob: -14.875086784362793
    8. '.' → logprob: -15.500086784362793
    9. 'pr' → logprob: -15.625086784362793
    10. '.print' → logprob: -16.12508773803711

Token 67: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -13.375001907348633
    3. ' print' → logprob: -15.000001907348633
    4. '
' → logprob: -15.875001907348633
    5. 'pr' → logprob: -16.000001907348633
    6. 'prin' → logprob: -16.875001907348633
    7. 'for' → logprob: -17.375001907348633
    8. '#print' → logprob: -17.875001907348633
    9. '``' → logprob: -18.125001907348633
    10. ')' → logprob: -18.375001907348633

Token 68: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8696179389953613
    2. '('' → logprob: -1.1196179389953613
    3. '("' → logprob: -1.3696179389953613
    4. '("("' → logprob: -8.369617462158203
    5. '("")' → logprob: -10.744617462158203
    6. '(""' → logprob: -11.744617462158203
    7. '(*' → logprob: -12.244617462158203
    8. '"' → logprob: -12.619617462158203
    9. '()' → logprob: -12.869617462158203
    10. '(`' → logprob: -13.119617462158203

Token 69: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0007399422465823591
    2. ' ''.' → logprob: -7.750740051269531
    3. '"' → logprob: -8.750740051269531
    4. '''' → logprob: -9.875740051269531
    5. '.join' → logprob: -10.000740051269531
    6. ''' → logprob: -10.625740051269531
    7. ''.' → logprob: -10.875740051269531
    8. '.' → logprob: -11.875740051269531
    9. 'join' → logprob: -13.750740051269531
    10. '".' → logprob: -14.000740051269531

Token 70: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.650518920039758e-06
    2. 'jo' → logprob: -12.875003814697266
    3. 'j' → logprob: -14.375003814697266
    4. ' join' → logprob: -15.250003814697266
    5. '''.' → logprob: -16.500003814697266
    6. '```' → logprob: -17.375003814697266
    7. 'joint' → logprob: -17.625003814697266
    8. 'jon' → logprob: -17.750003814697266
    9. ' ' → logprob: -18.250003814697266
    10. '.' → logprob: -18.250003814697266

Token 71: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.002481246367096901
    2. '(' → logprob: -6.002481460571289
    3. ')' → logprob: -12.252481460571289
    4. 'res' → logprob: -14.377481460571289
    5. ' (' → logprob: -15.627481460571289
    6. '(rest' → logprob: -17.12748146057129
    7. '(s' → logprob: -17.62748146057129
    8. '(
' → logprob: -18.00248146057129
    9. ',res' → logprob: -18.12748146057129
    10. ')(' → logprob: -18.25248146057129

Token 72: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1602276712656021
    2. ')' → logprob: -1.910227656364441
    3. ')))' → logprob: -12.78522777557373
    4. '])' → logprob: -15.41022777557373
    5. '))
' → logprob: -16.160226821899414
    6. ' ))' → logprob: -16.660226821899414
    7. ''))' → logprob: -17.035226821899414
    8. '),' → logprob: -17.160226821899414
    9. ' )' → logprob: -17.160226821899414
    10. '()' → logprob: -17.160226821899414


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 70
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 38
Précision stricte (1ère position): 24.29%
Précision adaptée (1ère position): 24.29%
Précision (top 10): 54.29%
================================================================================
