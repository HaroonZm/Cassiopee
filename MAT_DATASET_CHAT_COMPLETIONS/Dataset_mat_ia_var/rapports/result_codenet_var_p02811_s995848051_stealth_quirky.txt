================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Version avec quelques choix de conception non-conventionnels

lambda _: [(__import__('builtins').exec("print('Yes')" if 500*int(__import__('sys').stdin.read().split()[0])>=int(__import__('sys').stdin.read().split()[1]) else "print('No')"))][0](__import__('sys').stdin)

# Notes :
# - Utilisation de __import__('builtins').exec pour contourner l'utilisation directe de exec().
# - Lecture de l'entrée via sys.stdin (deux fois, volontairement non conventionnel !).
# - Tout est en une ligne avec une lambda non utile.
# - Parenthésage "inutile" pour accentuer le style.
# - Utilisation d'un indice sur une liste de taille 1 pour exécuter le code.
# - Pas de variables intermédiaires nommées.
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Version' (ID: 10004)
  → Token d'amorce (pas de prédiction)

Token 2: ' avec' (ID: 3937)
  → Token d'amorce (pas de prédiction)

Token 3: ' quelques' (ID: 17687)
  Prédit: 'comment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comment' → logprob: -2.3162715435028076
    2. 'une' → logprob: -2.8162715435028076
    3. 'optim' → logprob: -2.8162715435028076
    4. 'Commentaires' → logprob: -2.8162715435028076
    5. '#' → logprob: -2.9412715435028076
    6. 'python' → logprob: -3.1912715435028076
    7. 'int' → logprob: -3.3162715435028076
    8. 'un' → logprob: -3.4412715435028076
    9. 'aj' → logprob: -3.5662715435028076
    10. 'Python' → logprob: -3.6912715435028076

Token 4: ' choix' (ID: 28642)
  Prédit: 'optim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'optim' → logprob: -0.9325369596481323
    2. 'am' → logprob: -1.8075369596481323
    3. 'mod' → logprob: -2.057537078857422
    4. 'aj' → logprob: -2.432537078857422
    5. '#' → logprob: -2.557537078857422
    6. 'comment' → logprob: -3.432537078857422
    7. '```' → logprob: -4.182537078857422
    8. ' commentaires' → logprob: -4.432537078857422
    9. 'é' → logprob: -4.682537078857422
    10. 'cor' → logprob: -4.932537078857422

Token 5: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3773927688598633
    2. ' :' → logprob: -1.6273927688598633
    3. ' ' → logprob: -2.7523927688598633
    4. '#' → logprob: -3.8773927688598633
    5. ' =' → logprob: -4.752392768859863
    6. '```' → logprob: -5.002392768859863
    7. ' #' → logprob: -5.752392768859863
    8. '_' → logprob: -6.002392768859863
    9. 's' → logprob: -6.002392768859863
    10. '=' → logprob: -6.377392768859863

Token 6: ' conception' (ID: 51081)
  Prédit: 'lang'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lang' → logprob: -0.753766655921936
    2. 'style' → logprob: -2.2537665367126465
    3. 'configuration' → logprob: -2.3787665367126465
    4. 'nom' → logprob: -3.3787665367126465
    5. 'structure' → logprob: -3.5037665367126465
    6. 'l' → logprob: -3.6287665367126465
    7. 'format' → logprob: -3.8787665367126465
    8. 'variables' → logprob: -4.0037665367126465
    9. 'param' → logprob: -4.1287665367126465
    10. '```' → logprob: -4.2537665367126465

Token 7: ' non' (ID: 2893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9157983064651489
    2. '```' → logprob: -1.290798306465149
    3. 'def' → logprob: -2.0407981872558594
    4. ' :' → logprob: -2.6657981872558594
    5. '#' → logprob: -3.5407981872558594
    6. ' ' → logprob: -3.6657981872558594
    7. 'import' → logprob: -3.7907981872558594
    8. 's' → logprob: -4.665798187255859
    9. '_' → logprob: -4.790798187255859
    10. ' ```' → logprob: -5.290798187255859

Token 8: '-con' (ID: 21675)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -1.7300214767456055
    2. '```' → logprob: -1.8550214767456055
    3. 's' → logprob: -2.7300214767456055
    4. ' respect' → logprob: -3.1050214767456055
    5. ' classiques' → logprob: -3.1050214767456055
    6. 'tr' → logprob: -3.2300214767456055
    7. 'standard' → logprob: -3.2300214767456055
    8. 'class' → logprob: -3.6050214767456055
    9. ' convention' → logprob: -3.7300214767456055
    10. ' ' → logprob: -3.7300214767456055

Token 9: 'vention' (ID: 9584)
  Prédit: 'vention'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vention' → logprob: -0.35107120871543884
    2. 's' → logprob: -2.1010711193084717
    3. 'serv' → logprob: -2.9760711193084717
    4. 'formes' → logprob: -3.7260711193084717
    5. 'st' → logprob: -3.9760711193084717
    6. 'tour' → logprob: -4.351071357727051
    7. 'ventions' → logprob: -4.601071357727051
    8. 'f' → logprob: -4.851071357727051
    9. 'ventional' → logprob: -4.976071357727051
    10. 'test' → logprob: -5.101071357727051

Token 10: 'nels' (ID: 24956)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7090486884117126
    2. 'nelles' → logprob: -1.5840487480163574
    3. 'nels' → logprob: -1.8340487480163574
    4. '_' → logprob: -3.2090487480163574
    5. 'nelle' → logprob: -3.2090487480163574
    6. '```' → logprob: -4.334048748016357
    7. ' ' → logprob: -4.709048748016357
    8. 'al' → logprob: -4.959048748016357
    9. ',' → logprob: -5.084048748016357
    10. '.' → logprob: -5.584048748016357

Token 11: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.300113558769226
    2. '#' → logprob: -1.425113558769226
    3. '```' → logprob: -1.675113558769226
    4. '\' → logprob: -2.5501136779785156
    5. '
' → logprob: -3.1751136779785156
    6. '_' → logprob: -3.3001136779785156
    7. '\n' → logprob: -3.3001136779785156
    8. ' ' → logprob: -3.5501136779785156
    9. ' :' → logprob: -3.9251136779785156
    10. 'import' → logprob: -4.425113677978516

Token 12: 'lambda' (ID: 35280)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4459433853626251
    2. ' :' → logprob: -1.6959433555603027
    3. '```' → logprob: -2.9459433555603027
    4. '_' → logprob: -3.0709433555603027
    5. '#' → logprob: -3.6959433555603027
    6. 'import' → logprob: -4.195943355560303
    7. ' ' → logprob: -4.320943355560303
    8. '`' → logprob: -5.195943355560303
    9. 'def' → logprob: -5.570943355560303
    10. ',' → logprob: -6.070943355560303

Token 13: ' _:' (ID: 133568)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02097320556640625
    2. ' (' → logprob: -4.270973205566406
    3. '_' → logprob: -5.645973205566406
    4. '(' → logprob: -7.020973205566406
    5. 's' → logprob: -7.520973205566406
    6. ' x' → logprob: -7.520973205566406
    7. '  ' → logprob: -7.895973205566406
    8. ' space' → logprob: -8.895973205566406
    9. ' s' → logprob: -9.270973205566406
    10. ' )' → logprob: -9.395973205566406

Token 14: ' [' (ID: 723)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21147219836711884
    2. ' _' → logprob: -2.711472272872925
    3. '(lambda' → logprob: -3.336472272872925
    4. '(' → logprob: -3.961472272872925
    5. ' None' → logprob: -4.211472034454346
    6. 'lambda' → logprob: -4.586472034454346
    7. ' lambda' → logprob: -5.086472034454346
    8. 'None' → logprob: -5.461472034454346
    9. ' (' → logprob: -5.586472034454346
    10. '_.' → logprob: -5.836472034454346

Token 15: '(__' (ID: 11782)
  Prédit: '_]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_]' → logprob: -0.8623863458633423
    2. '_' → logprob: -0.9873863458633423
    3. '(_' → logprob: -2.9873862266540527
    4. '(' → logprob: -3.6123862266540527
    5. 'print' → logprob: -3.8623862266540527
    6. '0' → logprob: -3.9873862266540527
    7. '_.' → logprob: -4.362386226654053
    8. '_[' → logprob: -4.487386226654053
    9. 'None' → logprob: -4.612386226654053
    10. 'lambda' → logprob: -4.612386226654053

Token 16: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.010968825779855251
    2. '_' → logprob: -5.7609686851501465
    3. 'name' → logprob: -6.2609686851501465
    4. 'i' → logprob: -6.5109686851501465
    5. 'lambda' → logprob: -6.6359686851501465
    6. 'class' → logprob: -7.6359686851501465
    7. 'next' → logprob: -7.7609686851501465
    8. '_.' → logprob: -8.385969161987305
    9. '_:' → logprob: -8.510969161987305
    10. 'x' → logprob: -8.510969161987305

Token 17: '__('' (ID: 54460)
  Prédit: '__(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__('' → logprob: -0.1761399507522583
    2. '__' → logprob: -2.3011398315429688
    3. '__("' → logprob: -3.4261398315429688
    4. '('__' → logprob: -4.801139831542969
    5. '('' → logprob: -4.926139831542969
    6. '(' → logprob: -5.676139831542969
    7. '_' → logprob: -5.676139831542969
    8. ''' → logprob: -6.426139831542969
    9. '__(' → logprob: -6.426139831542969
    10. '("__' → logprob: -7.551139831542969

Token 18: 'built' (ID: 81936)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.6462293863296509
    2. 'math' → logprob: -1.1462293863296509
    3. 'built' → logprob: -2.6462292671203613
    4. 'random' → logprob: -3.3962292671203613
    5. 'sys' → logprob: -4.521229267120361
    6. 'base' → logprob: -5.021229267120361
    7. 'code' → logprob: -5.271229267120361
    8. 'it' → logprob: -5.396229267120361
    9. 'collections' → logprob: -5.396229267120361
    10. 'fun' → logprob: -5.771229267120361

Token 19: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -3.128163257315464e-07
    2. 'in' → logprob: -15.625
    3. 'i' → logprob: -16.5
    4. '__' → logprob: -20.5
    5. 'ints' → logprob: -20.5
    6. '-ins' → logprob: -20.625
    7. '```' → logprob: -20.75
    8. 'int' → logprob: -21.25
    9. 'als' → logprob: -21.25
    10. 'incs' → logprob: -21.375

Token 20: '').' (ID: 3426)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38549789786338806
    2. '').' → logprob: -2.385497808456421
    3. '.__' → logprob: -2.510497808456421
    4. '')' → logprob: -3.135497808456421
    5. '.')' → logprob: -4.010498046875
    6. ').__' → logprob: -4.135498046875
    7. ''),' → logprob: -4.385498046875
    8. ').' → logprob: -4.510498046875
    9. ')' → logprob: -4.635498046875
    10. '.'' → logprob: -5.010498046875

Token 21: 'exec' (ID: 31592)
  Prédit: 'exec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exec' → logprob: -1.3922334909439087
    2. 'eval' → logprob: -1.3922334909439087
    3. '__' → logprob: -1.5172334909439087
    4. 'print' → logprob: -1.8922334909439087
    5. 'globals' → logprob: -3.142233371734619
    6. 'exit' → logprob: -3.767233371734619
    7. 'get' → logprob: -4.017233371734619
    8. 'vars' → logprob: -4.142233371734619
    9. 'set' → logprob: -4.642233371734619
    10. 'compile' → logprob: -5.267233371734619

Token 22: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6642749905586243
    2. '('' → logprob: -0.7892749905586243
    3. ')' → logprob: -5.539275169372559
    4. '("("' → logprob: -5.539275169372559
    5. '<|end|>' → logprob: -5.539275169372559
    6. ')(' → logprob: -5.914275169372559
    7. '("' → logprob: -5.914275169372559
    8. '("""' → logprob: -6.039275169372559
    9. '(('' → logprob: -6.414275169372559
    10. ')(__' → logprob: -6.414275169372559

Token 23: 'print' (ID: 1598)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.381332516670227
    2. '"' → logprob: -1.756332516670227
    3. 'input' → logprob: -1.881332516670227
    4. ''' → logprob: -2.1313323974609375
    5. 'print' → logprob: -2.2563323974609375
    6. 'import' → logprob: -3.1313323974609375
    7. 'f' → logprob: -3.3813323974609375
    8. '_' → logprob: -3.8813323974609375
    9. 'exec' → logprob: -4.3813323974609375
    10. 'open' → logprob: -4.7563323974609375

Token 24: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.032455239444971085
    2. '(' → logprob: -3.7824552059173584
    3. '("' → logprob: -5.0324554443359375
    4. '(x' → logprob: -7.7824554443359375
    5. '(i' → logprob: -8.032455444335938
    6. '(\"' → logprob: -8.407455444335938
    7. '(__' → logprob: -8.407455444335938
    8. '(f' → logprob: -8.532455444335938
    9. '(_' → logprob: -8.532455444335938
    10. '(chr' → logprob: -8.782455444335938

Token 25: 'Yes' (ID: 13022)
  Prédit: 'Hello'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Hello' → logprob: -0.2584559917449951
    2. 'hello' → logprob: -2.383455991744995
    3. 'Salut' → logprob: -3.633455991744995
    4. 'Bonjour' → logprob: -3.758455991744995
    5. 'sal' → logprob: -4.883456230163574
    6. 'C' → logprob: -5.383456230163574
    7. 'H' → logprob: -5.570956230163574
    8. 'c' → logprob: -5.633456230163574
    9. 'lambda' → logprob: -5.883456230163574
    10. '1' → logprob: -5.945956230163574

Token 26: '')"' (ID: 112048)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.024334484711289406
    2. '!' → logprob: -4.02433443069458
    3. ',' → logprob: -6.02433443069458
    4. '')"' → logprob: -7.27433443069458
    5. ' yes' → logprob: -7.52433443069458
    6. '');' → logprob: -8.024334907531738
    7. ' Yes' → logprob: -8.024334907531738
    8. ' oui' → logprob: -8.399334907531738
    9. '')")
' → logprob: -8.399334907531738
    10. ' ')' → logprob: -8.399334907531738

Token 27: ' if' (ID: 538)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1828230917453766
    2. ')' → logprob: -1.8078230619430542
    3. ')))' → logprob: -6.182823181152344
    4. '),' → logprob: -8.182823181152344
    5. ')]' → logprob: -8.932823181152344
    6. ')")' → logprob: -8.932823181152344
    7. ')),' → logprob: -9.057823181152344
    8. ')])' → logprob: -9.307823181152344
    9. '));' → logprob: -10.057823181152344
    10. ',' → logprob: -10.557823181152344

Token 28: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39767348766326904
    2. ' _' → logprob: -1.147673487663269
    3. ' True' → logprob: -5.897673606872559
    4. ' _)' → logprob: -6.647673606872559
    5. ' _.' → logprob: -7.022673606872559
    6. '_[' → logprob: -7.147673606872559
    7. '_)' → logprob: -7.147673606872559
    8. ' ' → logprob: -7.397673606872559
    9. '_.' → logprob: -8.022673606872559
    10. ' not' → logprob: -8.022673606872559

Token 29: '500' (ID: 3234)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04890765622258186
    2. ' _' → logprob: -3.42390775680542
    3. '_)' → logprob: -5.04890775680542
    4. 'True' → logprob: -6.42390775680542
    5. ' True' → logprob: -6.42390775680542
    6. '_[' → logprob: -6.92390775680542
    7. '__' → logprob: -7.54890775680542
    8. ' _)' → logprob: -7.67390775680542
    9. '_.' → logprob: -8.048907279968262
    10. 'eval' → logprob: -8.486407279968262

Token 30: '*' (ID: 9)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6651012301445007
    2. ' >' → logprob: -1.6651012897491455
    3. '<' → logprob: -2.6651012897491455
    4. ' ' → logprob: -3.1651012897491455
    5. ' <' → logprob: -3.2901012897491455
    6. '_' → logprob: -3.5401012897491455
    7. '==' → logprob: -3.7901012897491455
    8. '%' → logprob: -3.7901012897491455
    9. '>=' → logprob: -3.7901012897491455
    10. ' >=' → logprob: -4.665101051330566

Token 31: 'int' (ID: 491)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6403148174285889
    2. '500' → logprob: -1.5153148174285889
    3. '100' → logprob: -2.765314817428589
    4. ' ' → logprob: -3.265314817428589
    5. '2' → logprob: -3.765314817428589
    6. ' _' → logprob: -3.890314817428589
    7. '1' → logprob: -4.015315055847168
    8. ''' → logprob: -4.390315055847168
    9. '50' → logprob: -4.765315055847168
    10. '499' → logprob: -4.890315055847168

Token 32: '(__' (ID: 11782)
  Prédit: '(_)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_)' → logprob: -0.16064397990703583
    2. '(_' → logprob: -2.160644054412842
    3. '_' → logprob: -4.410644054412842
    4. '(' → logprob: -4.910644054412842
    5. '('' → logprob: -5.035644054412842
    6. '(_.' → logprob: -5.410644054412842
    7. '(__' → logprob: -7.160644054412842
    8. '("' → logprob: -8.410643577575684
    9. '_)' → logprob: -8.410643577575684
    10. '('_' → logprob: -8.410643577575684

Token 33: 'import' (ID: 561)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02854055166244507
    2. '_)' → logprob: -3.90354061126709
    3. '_.' → logprob: -6.02854061126709
    4. 'import' → logprob: -6.52854061126709
    5. '_

' → logprob: -6.90354061126709
    6. '(_)' → logprob: -7.27854061126709
    7. '(_' → logprob: -7.27854061126709
    8. '_[' → logprob: -7.77854061126709
    9. '_:' → logprob: -7.90354061126709
    10. '_(' → logprob: -8.52854061126709

Token 34: '__('' (ID: 54460)
  Prédit: '__(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__('' → logprob: -0.004158652853220701
    2. '__' → logprob: -6.1291584968566895
    3. '__("' → logprob: -7.1291584968566895
    4. '('' → logprob: -7.5041584968566895
    5. '('__' → logprob: -7.6291584968566895
    6. '__(' → logprob: -9.754158973693848
    7. '__(
' → logprob: -10.379158973693848
    8. '__((' → logprob: -11.504158973693848
    9. '(' → logprob: -12.004158973693848
    10. '_' → logprob: -12.004158973693848

Token 35: 'sys' (ID: 17324)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2525695562362671
    2. 'input' → logprob: -3.0025696754455566
    3. '_)' → logprob: -3.0025696754455566
    4. '__' → logprob: -3.1275696754455566
    5. '_:' → logprob: -3.8775696754455566
    6. '_.' → logprob: -4.502569675445557
    7. ''' → logprob: -5.002569675445557
    8. '_

' → logprob: -5.252569675445557
    9. '_-' → logprob: -5.377569675445557
    10. '')' → logprob: -5.377569675445557

Token 36: '').' (ID: 3426)
  Prédit: '.argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.argv' → logprob: -0.05164190009236336
    2. '.version' → logprob: -3.0516419410705566
    3. '.stdin' → logprob: -6.426641941070557
    4. '.' → logprob: -6.926641941070557
    5. '.stdout' → logprob: -8.801641464233398
    6. '.modules' → logprob: -9.051641464233398
    7. ' .' → logprob: -9.176641464233398
    8. '.stderr' → logprob: -11.051641464233398
    9. '._' → logprob: -11.426641464233398
    10. 'argv' → logprob: -11.426641464233398

Token 37: 'stdin' (ID: 132953)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.018641725182533264
    2. 'version' → logprob: -4.143641948699951
    3. 'stdin' → logprob: -6.018641948699951
    4. '.argv' → logprob: -10.018641471862793
    5. 'arg' → logprob: -10.143641471862793
    6. ' argv' → logprob: -10.393641471862793
    7. 'modules' → logprob: -11.268641471862793
    8. 'stdout' → logprob: -11.268641471862793
    9. 'argc' → logprob: -11.768641471862793
    10. 'exit' → logprob: -12.268641471862793

Token 38: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.07905689626932144
    2. '.read' → logprob: -2.579056978225708
    3. '.' → logprob: -8.954056739807129
    4. '.readlines' → logprob: -10.829056739807129
    5. 'read' → logprob: -11.829056739807129
    6. ' readline' → logprob: -12.954056739807129
    7. '```' → logprob: -13.329056739807129
    8. '().' → logprob: -13.454056739807129
    9. ').' → logprob: -13.579056739807129
    10. '.Read' → logprob: -13.704056739807129

Token 39: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6950653195381165
    2. '())' → logprob: -0.9450653195381165
    3. '(' → logprob: -2.8200652599334717
    4. '().' → logprob: -3.8200652599334717
    5. 'line' → logprob: -3.9450652599334717
    6. '()[' → logprob: -5.695065498352051
    7. '()==' → logprob: -6.195065498352051
    8. '()))' → logprob: -6.195065498352051
    9. '()>' → logprob: -7.320065498352051
    10. '(),' → logprob: -8.07006549835205

Token 40: 'split' (ID: 13627)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.08889256417751312
    2. 'strip' → logprob: -2.7138924598693848
    3. 'rstrip' → logprob: -4.213892459869385
    4. ' readline' → logprob: -6.713892459869385
    5. 'decode' → logprob: -6.963892459869385
    6. ')' → logprob: -7.088892459869385
    7. 'split' → logprob: -8.588892936706543
    8. 'replace' → logprob: -8.838892936706543
    9. '.readline' → logprob: -8.838892936706543
    10. '```' → logprob: -9.338892936706543

Token 41: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.01847217045724392
    2. '()' → logprob: -4.018472194671631
    3. '().__' → logprob: -8.768471717834473
    4. '()\' → logprob: -10.393471717834473
    5. '('\' → logprob: -10.518471717834473
    6. '())' → logprob: -10.893471717834473
    7. '('' → logprob: -10.893471717834473
    8. '('.')[' → logprob: -11.268471717834473
    9. 'lines' → logprob: -11.393471717834473
    10. '().' → logprob: -11.393471717834473

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05584538355469704
    2. '1' → logprob: -3.4308454990386963
    3. '-' → logprob: -3.9308454990386963
    4. ' ' → logprob: -6.930845260620117
    5. '2' → logprob: -7.055845260620117
    6. '3' → logprob: -8.930845260620117
    7. '[' → logprob: -9.055845260620117
    8. '4' → logprob: -9.430845260620117
    9. '   ' → logprob: -10.305845260620117
    10. ' -' → logprob: -10.430845260620117

Token 43: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.615839421749115
    2. ')>' → logprob: -1.4908394813537598
    3. ')>=' → logprob: -2.1158394813537598
    4. ')<' → logprob: -2.8658394813537598
    5. ')<=' → logprob: -3.3658394813537598
    6. ' )' → logprob: -4.36583948135376
    7. ')==' → logprob: -5.36583948135376
    8. '>' → logprob: -6.99083948135376
    9. '%' → logprob: -7.24083948135376
    10. '>)' → logprob: -7.74083948135376

Token 44: '>=' (ID: 20974)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5525777339935303
    2. '==' → logprob: -2.1775777339935303
    3. ' else' → logprob: -2.6775777339935303
    4. '>=' → logprob: -2.8025777339935303
    5. ' >' → logprob: -2.9275777339935303
    6. '<' → logprob: -3.5525777339935303
    7. ' ==' → logprob: -3.8025777339935303
    8. 'else' → logprob: -3.9275777339935303
    9. ')' → logprob: -4.052577972412109
    10. '%' → logprob: -4.802577972412109

Token 45: 'int' (ID: 491)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6477147340774536
    2. '250' → logprob: -1.5227147340774536
    3. '500' → logprob: -2.397714614868164
    4. '10' → logprob: -3.022714614868164
    5. ' ' → logprob: -3.147714614868164
    6. '200' → logprob: -4.147714614868164
    7. '300' → logprob: -4.147714614868164
    8. '1' → logprob: -5.397714614868164
    9. '400' → logprob: -5.897714614868164
    10. '600' → logprob: -5.897714614868164

Token 46: '(__' (ID: 11782)
  Prédit: '(__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.041844967752695084
    2. '('' → logprob: -3.7918450832366943
    3. '(' → logprob: -4.541844844818115
    4. '("' → logprob: -5.791844844818115
    5. ' __' → logprob: -6.166844844818115
    6. '__' → logprob: -6.541844844818115
    7. ' (__' → logprob: -7.916844844818115
    8. ''' → logprob: -8.291845321655273
    9. '"' → logprob: -9.541845321655273
    10. '(_' → logprob: -9.791845321655273

Token 47: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.07164266705513
    2. '__('' → logprob: -3.6966426372528076
    3. '.import' → logprob: -3.9466426372528076
    4. ''import' → logprob: -4.196642875671387
    5. '_import' → logprob: -5.071642875671387
    6. '__' → logprob: -7.571642875671387
    7. '.__' → logprob: -7.696642875671387
    8. '('' → logprob: -7.946642875671387
    9. '-import' → logprob: -8.071642875671387
    10. '.stdin' → logprob: -8.696642875671387

Token 48: '__('' (ID: 54460)
  Prédit: '__(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__('' → logprob: -0.47821053862571716
    2. '('' → logprob: -0.9782105684280396
    3. '('__' → logprob: -5.85321044921875
    4. '('_' → logprob: -7.97821044921875
    5. '(' → logprob: -8.22821044921875
    6. '(','' → logprob: -8.60321044921875
    7. '__' → logprob: -8.85321044921875
    8. '_' → logprob: -8.97821044921875
    9. '(_('' → logprob: -9.35321044921875
    10. '(('' → logprob: -10.47821044921875

Token 49: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02662850171327591
    2. ''s' → logprob: -4.151628494262695
    3. '__' → logprob: -5.901628494262695
    4. ''' → logprob: -6.151628494262695
    5. '__('' → logprob: -6.651628494262695
    6. 'built' → logprob: -7.026628494262695
    7. 'stdin' → logprob: -7.151628494262695
    8. '(sys' → logprob: -8.026628494262695
    9. '___' → logprob: -8.151628494262695
    10. '('' → logprob: -8.401628494262695

Token 50: '').' (ID: 3426)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.04531146585941315
    2. '.stdout' → logprob: -3.420311450958252
    3. '').' → logprob: -5.170311450958252
    4. ').' → logprob: -5.920311450958252
    5. '.stderr' → logprob: -6.545311450958252
    6. '.' → logprob: -7.420311450958252
    7. '.argv' → logprob: -7.670311450958252
    8. '.readline' → logprob: -8.67031192779541
    9. '')' → logprob: -9.29531192779541
    10. '.modules' → logprob: -9.42031192779541

Token 51: 'stdin' (ID: 132953)
  Prédit: 'stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.0002181987656513229
    2. 'argv' → logprob: -9.125218391418457
    3. ' stdin' → logprob: -10.125218391418457
    4. 'stdout' → logprob: -10.500218391418457
    5. '.stdin' → logprob: -11.125218391418457
    6. 'stderr' → logprob: -11.250218391418457
    7. 'std' → logprob: -12.125218391418457
    8. '(stdin' → logprob: -12.250218391418457
    9. 'stdlib' → logprob: -13.250218391418457
    10. 'st' → logprob: -14.000218391418457

Token 52: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.021514715626835823
    2. '.readline' → logprob: -3.896514654159546
    3. 'read' → logprob: -7.146514892578125
    4. '.readlines' → logprob: -8.771514892578125
    5. '.' → logprob: -11.396514892578125
    6. '.write' → logprob: -11.521514892578125
    7. ' .' → logprob: -12.271514892578125
    8. ' read' → logprob: -13.521514892578125
    9. '```' → logprob: -14.521514892578125
    10. '.buffer' → logprob: -14.521514892578125

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018130512908101082
    2. '.read' → logprob: -4.518130302429199
    3. '.readline' → logprob: -5.893130302429199
    4. '()' → logprob: -6.393130302429199
    5. '())' → logprob: -6.768130302429199
    6. '.' → logprob: -7.893130302429199
    7. ')' → logprob: -8.2681303024292
    8. '()[' → logprob: -8.2681303024292
    9. 'read' → logprob: -9.2681303024292
    10. '.readlines' → logprob: -9.3931303024292

Token 54: 'split' (ID: 13627)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -6.253713218029588e-05
    2. '.readline' → logprob: -10.125062942504883
    3. 'split' → logprob: -11.750062942504883
    4. '.read' → logprob: -12.125062942504883
    5. ' readline' → logprob: -12.750062942504883
    6. ' read' → logprob: -12.875062942504883
    7. ' ' → logprob: -14.500062942504883
    8. '0' → logprob: -14.625062942504883
    9. '```' → logprob: -14.625062942504883
    10. ')' → logprob: -15.250062942504883

Token 55: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.05575621873140335
    2. '[' → logprob: -2.9307563304901123
    3. '()' → logprob: -7.430756092071533
    4. '('.')[' → logprob: -9.180756568908691
    5. '('' → logprob: -10.180756568908691
    6. ''[' → logprob: -10.430756568908691
    7. '(' → logprob: -11.055756568908691
    8. '().__' → logprob: -11.555756568908691
    9. '()][' → logprob: -11.680756568908691
    10. '0' → logprob: -11.930756568908691

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3151420056819916
    2. '0' → logprob: -1.315142035484314
    3. ' ' → logprob: -6.5651421546936035
    4. '[' → logprob: -8.565141677856445
    5. '-' → logprob: -9.440141677856445
    6. '2' → logprob: -10.065141677856445
    7. '   ' → logprob: -10.190141677856445
    8. ']' → logprob: -10.690141677856445
    9. '```' → logprob: -10.815141677856445
    10. '  ' → logprob: -11.065141677856445

Token 57: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011279234662652016
    2. ' else' → logprob: -5.136279106140137
    3. '')' → logprob: -6.261279106140137
    4. '))' → logprob: -6.261279106140137
    5. 'else' → logprob: -7.636279106140137
    6. ' )' → logprob: -7.761279106140137
    7. '])' → logprob: -8.386279106140137
    8. '")' → logprob: -9.886279106140137
    9. ')))' → logprob: -9.886279106140137
    10. ']' → logprob: -10.511279106140137

Token 58: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.14975011348724365
    2. ')' → logprob: -2.274750232696533
    3. '))' → logprob: -4.024750232696533
    4. 'else' → logprob: -4.149750232696533
    5. ')))' → logprob: -6.899750232696533
    6. ',' → logprob: -7.524750232696533
    7. ' )' → logprob: -8.524749755859375
    8. '")' → logprob: -8.649749755859375
    9. '')' → logprob: -9.149749755859375
    10. '+' → logprob: -9.399749755859375

Token 59: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006275724619626999
    2. ' "' → logprob: -5.256275653839111
    3. 'print' → logprob: -7.506275653839111
    4. ' ' → logprob: -8.25627613067627
    5. ' print' → logprob: -8.88127613067627
    6. ''' → logprob: -10.88127613067627
    7. '#print' → logprob: -11.13127613067627
    8. '"value' → logprob: -11.75627613067627
    9. '""' → logprob: -11.88127613067627
    10. '"'' → logprob: -12.13127613067627

Token 60: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.043858665972948074
    2. '"' → logprob: -3.668858766555786
    3. '"No' → logprob: -4.418858528137207
    4. 'No' → logprob: -5.418858528137207
    5. ''' → logprob: -7.793858528137207
    6. ' print' → logprob: -8.793858528137207
    7. ' ' → logprob: -9.293858528137207
    8. '#print' → logprob: -9.668858528137207
    9. '```' → logprob: -10.418858528137207
    10. '   ' → logprob: -10.668858528137207

Token 61: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00015788905147928745
    2. '(' → logprob: -8.875158309936523
    3. '("' → logprob: -11.250158309936523
    4. ''' → logprob: -13.000158309936523
    5. '(\'' → logprob: -14.000158309936523
    6. ' ('' → logprob: -14.875158309936523
    7. '(No' → logprob: -15.375158309936523
    8. '()' → logprob: -15.750158309936523
    9. '(False' → logprob: -15.750158309936523
    10. '(None' → logprob: -16.125158309936523

Token 62: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0004896456957794726
    2. ' No' → logprob: -8.375489234924316
    3. 'Yes' → logprob: -9.125489234924316
    4. ''' → logprob: -9.750489234924316
    5. 'N' → logprob: -10.875489234924316
    6. 'Non' → logprob: -11.000489234924316
    7. ' ' → logprob: -11.625489234924316
    8. '"No' → logprob: -12.000489234924316
    9. 'Not' → logprob: -12.500489234924316
    10. '('' → logprob: -12.500489234924316

Token 63: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0007280402351170778
    2. '')"' → logprob: -7.625728130340576
    3. ''' → logprob: -8.750727653503418
    4. '')")
' → logprob: -10.250727653503418
    5. '")' → logprob: -10.500727653503418
    6. ''))' → logprob: -11.000727653503418
    7. ')")' → logprob: -14.125727653503418
    8. ')' → logprob: -14.625727653503418
    9. '')");
' → logprob: -14.875727653503418
    10. '');' → logprob: -15.500727653503418

Token 64: '"))' (ID: 5063)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6341031193733215
    2. '")' → logprob: -1.7591030597686768
    3. '"))' → logprob: -2.0091030597686768
    4. ''))' → logprob: -2.3841030597686768
    5. ')' → logprob: -3.0091030597686768
    6. ')")' → logprob: -4.509103298187256
    7. ''' → logprob: -5.009103298187256
    8. '))' → logprob: -6.884103298187256
    9. '')))' → logprob: -7.134103298187256
    10. '')"' → logprob: -7.384103298187256

Token 65: '][' (ID: 2696)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6509891748428345
    2. ')]' → logprob: -1.4009891748428345
    3. ')])' → logprob: -1.7759891748428345
    4. ']' → logprob: -3.400989055633545
    5. '])' → logprob: -4.025989055633545
    6. '))' → logprob: -5.775989055633545
    7. ' )' → logprob: -5.900989055633545
    8. '])]' → logprob: -6.275989055633545
    9. ']))' → logprob: -7.150989055633545
    10. ',' → logprob: -7.650989055633545

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.7292167184641585e-05
    2. ' ' → logprob: -10.500057220458984
    3. '-' → logprob: -10.625057220458984
    4. ')' → logprob: -13.500057220458984
    5. '_' → logprob: -14.250057220458984
    6. '1' → logprob: -14.625057220458984
    7. '(' → logprob: -14.875057220458984
    8. ' -' → logprob: -14.937557220458984
    9. '
' → logprob: -15.187557220458984
    10. '   ' → logprob: -15.250057220458984

Token 67: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8863446712493896
    2. ']' → logprob: -1.1363446712493896
    3. ')]' → logprob: -1.3863446712493896
    4. '])' → logprob: -4.136344909667969
    5. ')])' → logprob: -7.386344909667969
    6. '))' → logprob: -9.511344909667969
    7. '])]' → logprob: -10.011344909667969
    8. ' )' → logprob: -10.386344909667969
    9. ' ]' → logprob: -10.636344909667969
    10. ']))' → logprob: -11.511344909667969

Token 68: '(__' (ID: 11782)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24496471881866455
    2. '(' → logprob: -2.244964599609375
    3. '<|end|>' → logprob: -2.494964599609375
    4. ' ' → logprob: -3.744964599609375
    5. '
' → logprob: -6.244964599609375
    6. '(
' → logprob: -7.244964599609375
    7. '<|end|>' → logprob: -7.869964599609375
    8. '  
' → logprob: -7.869964599609375
    9. ' )' → logprob: -8.119964599609375
    10. ' 
' → logprob: -8.244964599609375

Token 69: 'import' (ID: 561)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4369589388370514
    2. '_)' → logprob: -1.311958909034729
    3. ')' → logprob: -2.5619590282440186
    4. '))' → logprob: -6.4369587898254395
    5. '_
' → logprob: -7.0619587898254395
    6. '__)' → logprob: -7.3119587898254395
    7. ')_' → logprob: -7.5619587898254395
    8. '_

' → logprob: -7.6869587898254395
    9. '_[' → logprob: -7.8119587898254395
    10. '_\' → logprob: -8.561959266662598

Token 70: '__('' (ID: 54460)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2933967113494873
    2. '('_' → logprob: -1.7933967113494873
    3. '__('' → logprob: -3.1683967113494873
    4. '_' → logprob: -3.6683967113494873
    5. '('__' → logprob: -4.668396949768066
    6. '(' → logprob: -5.043396949768066
    7. ''s' → logprob: -6.418396949768066
    8. ')' → logprob: -6.668396949768066
    9. '<|end|>' → logprob: -7.793396949768066
    10. ''' → logprob: -8.293396949768066

Token 71: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.16292814910411835
    2. 'built' → logprob: -1.9129281044006348
    3. '__' → logprob: -6.537928104400635
    4. ''' → logprob: -7.787928104400635
    5. 'builtin' → logprob: -8.787928581237793
    6. '_sys' → logprob: -9.037928581237793
    7. '_' → logprob: -9.287928581237793
    8. '__)' → logprob: -9.412928581237793
    9. ''s' → logprob: -10.037928581237793
    10. ')' → logprob: -10.037928581237793

Token 72: '').' (ID: 3426)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.3217028081417084
    2. '.stdin' → logprob: -1.9467028379440308
    3. ')' → logprob: -2.196702718734741
    4. '))' → logprob: -4.07170295715332
    5. ')))' → logprob: -6.82170295715332
    6. '.stdout' → logprob: -7.19670295715332
    7. ').__' → logprob: -7.19670295715332
    8. ''))' → logprob: -8.19670295715332
    9. '').' → logprob: -8.32170295715332
    10. '')' → logprob: -8.82170295715332

Token 73: 'stdin' (ID: 132953)
  Prédit: 'stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.0009232500451616943
    2. 'stdout' → logprob: -7.750923156738281
    3. ' stdin' → logprob: -9.125923156738281
    4. ')' → logprob: -9.375923156738281
    5. 'argv' → logprob: -9.500923156738281
    6. 'std' → logprob: -9.750923156738281
    7. '.stdin' → logprob: -9.750923156738281
    8. 'exit' → logprob: -10.125923156738281
    9. 'stderr' → logprob: -10.250923156738281
    10. '(stdin' → logprob: -11.500923156738281

Token 74: ')

' (ID: 1029)
  Prédit: '.read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.03626513481140137
    2. '.readline' → logprob: -3.6612651348114014
    3. '.' → logprob: -5.5362653732299805
    4. ').' → logprob: -6.0362653732299805
    5. 'read' → logprob: -6.1612653732299805
    6. ')' → logprob: -7.4112653732299805
    7. ' read' → logprob: -7.5362653732299805
    8. '.readlines' → logprob: -8.66126537322998
    9. '<|end|>' → logprob: -9.66126537322998
    10. '.write' → logprob: -10.16126537322998

Token 75: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012500470504164696
    2. '[' → logprob: -5.262500286102295
    3. '(' → logprob: -5.512500286102295
    4. '<|end|>' → logprob: -6.637500286102295
    5. '.' → logprob: -7.137500286102295
    6. ' ' → logprob: -8.262500762939453
    7. '```' → logprob: -8.512500762939453
    8. '(
' → logprob: -8.762500762939453
    9. '<|end|>' → logprob: -9.512500762939453
    10. '[
' → logprob: -9.637500762939453

Token 76: ' Notes' (ID: 32157)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022396737709641457
    2. '.' → logprob: -4.397396564483643
    3. '[' → logprob: -6.022396564483643
    4. ' ' → logprob: -6.022396564483643
    5. '<|end|>' → logprob: -6.397396564483643
    6. '(' → logprob: -6.647396564483643
    7. '#' → logprob: -7.772396564483643
    8. ' )' → logprob: -8.0223970413208
    9. '```' → logprob: -8.6473970413208
    10. ':' → logprob: -8.8973970413208

Token 77: ' :
' (ID: 10039)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04549531638622284
    2. '.' → logprob: -3.7954952716827393
    3. '[' → logprob: -4.420495510101318
    4. '(' → logprob: -5.920495510101318
    5. '<|end|>' → logprob: -6.045495510101318
    6. ' ' → logprob: -6.170495510101318
    7. '```' → logprob: -7.420495510101318
    8. ':' → logprob: -8.04549503326416
    9. '[
' → logprob: -8.04549503326416
    10. '(
' → logprob: -8.42049503326416

Token 78: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012665743008255959
    2. ' ' → logprob: -5.137665748596191
    3. '<|end|>' → logprob: -5.762665748596191
    4. '[' → logprob: -6.887665748596191
    5. '(' → logprob: -7.262665748596191
    6. ' )' → logprob: -7.387665748596191
    7. '.' → logprob: -7.637665748596191
    8. '```' → logprob: -8.137665748596191
    9. '#' → logprob: -9.262665748596191
    10. '<|end|>' → logprob: -10.262665748596191

Token 79: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8074399828910828
    2. ' ' → logprob: -1.3074400424957275
    3. '<|end|>' → logprob: -1.3074400424957275
    4. '<|end|>' → logprob: -5.307439804077148
    5. '#' → logprob: -6.057439804077148
    6. '```' → logprob: -6.432439804077148
    7. ' )' → logprob: -6.682439804077148
    8. ' 
' → logprob: -6.932439804077148
    9. '[' → logprob: -8.182439804077148
    10. '\n' → logprob: -8.182439804077148

Token 80: ' Util' (ID: 13564)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0668325424194336
    2. ' ' → logprob: -3.4418325424194336
    3. '<|end|>' → logprob: -3.6918325424194336
    4. ' )' → logprob: -5.441832542419434
    5. '#' → logprob: -6.441832542419434
    6. '<|end|>' → logprob: -7.191832542419434
    7. '```' → logprob: -8.191832542419434
    8. '\n' → logprob: -8.941832542419434
    9. '[' → logprob: -9.441832542419434
    10. '')' → logprob: -9.566832542419434

Token 81: 'isation' (ID: 6993)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011166195385158062
    2. '[' → logprob: -5.636166095733643
    3. '.' → logprob: -6.386166095733643
    4. ' ' → logprob: -6.511166095733643
    5. '<|end|>' → logprob: -6.761166095733643
    6. '(' → logprob: -7.011166095733643
    7. '_' → logprob: -7.511166095733643
    8. ' )' → logprob: -7.636166095733643
    9. '(
' → logprob: -8.7611665725708
    10. '#' → logprob: -9.0111665725708

Token 82: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.1825345754623413
    2. ' __' → logprob: -1.8075345754623413
    3. 'sys' → logprob: -1.9325345754623413
    4. 'read' → logprob: -2.057534694671631
    5. 'split' → logprob: -2.682534694671631
    6. ' sys' → logprob: -3.307534694671631
    7. 'lambda' → logprob: -3.807534694671631
    8. 'stdin' → logprob: -3.807534694671631
    9. ' read' → logprob: -3.932534694671631
    10. 'eval' → logprob: -4.307534694671631

Token 84: 'import' (ID: 561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: '__('' (ID: 54460)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12207872420549393
    2. '.' → logprob: -2.8720786571502686
    3. '[' → logprob: -3.3720786571502686
    4. ' ' → logprob: -5.622078895568848
    5. '(' → logprob: -5.747078895568848
    6. '')' → logprob: -5.872078895568848
    7. '(
' → logprob: -6.247078895568848
    8. '[
' → logprob: -6.372078895568848
    9. '```' → logprob: -6.747078895568848
    10. ' )' → logprob: -6.872078895568848

Token 86: 'built' (ID: 81936)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4020216763019562
    2. 'built' → logprob: -1.1520216464996338
    3. '__' → logprob: -4.527021884918213
    4. 'builtin' → logprob: -7.027021884918213
    5. ' built' → logprob: -7.277021884918213
    6. 'system' → logprob: -7.527021884918213
    7. 'b' → logprob: -7.902021884918213
    8. ')' → logprob: -8.402021408081055
    9. '')' → logprob: -8.402021408081055
    10. ' sys' → logprob: -8.402021408081055

Token 87: 'ins' (ID: 1564)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1807488650083542
    2. '__' → logprob: -2.68074893951416
    3. '')' → logprob: -3.30574893951416
    4. '_' → logprob: -3.68074893951416
    5. ''' → logprob: -4.43074893951416
    6. '__('' → logprob: -5.05574893951416
    7. '(' → logprob: -5.80574893951416
    8. '<|end|>' → logprob: -6.05574893951416
    9. '[' → logprob: -6.30574893951416
    10. '__)' → logprob: -6.68074893951416

Token 88: '').' (ID: 3426)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017146894242614508
    2. '[' → logprob: -6.876714706420898
    3. '')' → logprob: -8.626714706420898
    4. ' )' → logprob: -9.001714706420898
    5. ']' → logprob: -9.251714706420898
    6. '.' → logprob: -9.751714706420898
    7. ').' → logprob: -10.376714706420898
    8. '))' → logprob: -10.376714706420898
    9. ')
' → logprob: -10.876714706420898
    10. ')])' → logprob: -10.876714706420898

Token 89: 'exec' (ID: 31592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03909501060843468
    2. '(' → logprob: -4.164094924926758
    3. '.' → logprob: -4.414094924926758
    4. '[' → logprob: -5.414094924926758
    5. ' ' → logprob: -6.414094924926758
    6. '<|end|>' → logprob: -6.789094924926758
    7. '(
' → logprob: -7.539094924926758
    8. '```' → logprob: -8.039094924926758
    9. ' (' → logprob: -8.039094924926758
    10. ',' → logprob: -8.164094924926758

Token 90: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04065793380141258
    2. '(' → logprob: -3.4156579971313477
    3. '.' → logprob: -5.915657997131348
    4. '[' → logprob: -6.915657997131348
    5. '(
' → logprob: -7.665657997131348
    6. '<|end|>' → logprob: -7.665657997131348
    7. ' ' → logprob: -7.790657997131348
    8. ',' → logprob: -8.040657997131348
    9. ':' → logprob: -8.040657997131348
    10. '#' → logprob: -8.165657997131348

Token 91: ' contour' (ID: 66089)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.5369305610656738
    2. ' ex' → logprob: -2.036930561065674
    3. 'é' → logprob: -2.411930561065674
    4. ')' → logprob: -2.911930561065674
    5. 'execut' → logprob: -4.661930561065674
    6. 'eval' → logprob: -4.786930561065674
    7. 'contin' → logprob: -4.786930561065674
    8. ' éx' → logprob: -4.911930561065674
    9. 'coder' → logprob: -4.911930561065674
    10. 'inject' → logprob: -4.911930561065674

Token 92: 'ner' (ID: 1247)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06069640815258026
    2. ''' → logprob: -3.5606963634490967
    3. '<|end|>' → logprob: -4.810696601867676
    4. '_' → logprob: -5.310696601867676
    5. '')' → logprob: -5.560696601867676
    6. '('' → logprob: -6.310696601867676
    7. 'er' → logprob: -6.435696601867676
    8. '(' → logprob: -6.560696601867676
    9. '_)' → logprob: -6.810696601867676
    10. '"' → logprob: -6.935696601867676

Token 93: ' l' (ID: 305)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09205879271030426
    2. '(' → logprob: -2.9670588970184326
    3. ' ' → logprob: -4.3420586585998535
    4. '<|end|>' → logprob: -4.4670586585998535
    5. '[' → logprob: -5.2170586585998535
    6. ' (' → logprob: -6.3420586585998535
    7. ' )' → logprob: -6.4670586585998535
    8. ']' → logprob: -7.7170586585998535
    9. '\' → logprob: -7.7170586585998535
    10. ',' → logprob: -7.8420586585998535

Token 94: ''utilisation' (ID: 73991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0697489008307457
    2. ' ' → logprob: -3.194748878479004
    3. '_' → logprob: -4.194748878479004
    4. ' )' → logprob: -5.694748878479004
    5. ''' → logprob: -6.319748878479004
    6. '(' → logprob: -6.819748878479004
    7. '\' → logprob: -7.194748878479004
    8. '\n' → logprob: -7.319748878479004
    9. '[' → logprob: -7.694748878479004
    10. '<|end|>' → logprob: -7.944748878479004

Token 95: ' directe' (ID: 80071)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012452318333089352
    2. '(' → logprob: -5.512452125549316
    3. ' ' → logprob: -5.512452125549316
    4. '<|end|>' → logprob: -6.137452125549316
    5. ' )' → logprob: -7.512452125549316
    6. '_' → logprob: -8.387452125549316
    7. ' (' → logprob: -8.637452125549316
    8. ''' → logprob: -8.762452125549316
    9. '\' → logprob: -8.887452125549316
    10. ']' → logprob: -8.887452125549316

Token 96: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018227091059088707
    2. ' ' → logprob: -5.0182271003723145
    3. '<|end|>' → logprob: -5.2682271003723145
    4. '(' → logprob: -5.3932271003723145
    5. ' )' → logprob: -7.2682271003723145
    6. '[' → logprob: -8.643226623535156
    7. '.' → logprob: -8.768226623535156
    8. '(
' → logprob: -9.143226623535156
    9. '```' → logprob: -9.393226623535156
    10. '
' → logprob: -9.393226623535156

Token 97: ' exec' (ID: 25398)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.19138573110103607
    2. 'exec' → logprob: -1.9413857460021973
    3. 'print' → logprob: -4.191385746002197
    4. ' eval' → logprob: -5.441385746002197
    5. 'input' → logprob: -5.816385746002197
    6. 'import' → logprob: -6.066385746002197
    7. '__' → logprob: -6.066385746002197
    8. 'python' → logprob: -6.941385746002197
    9. ' exec' → logprob: -7.191385746002197
    10. 'lambda' → logprob: -8.191385269165039

Token 98: '().
' (ID: 58434)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017790254205465317
    2. '(' → logprob: -4.6427903175354
    3. ' ' → logprob: -5.2677903175354
    4. '<|end|>' → logprob: -6.5177903175354
    5. ' )' → logprob: -7.6427903175354
    6. '[' → logprob: -8.142789840698242
    7. '(
' → logprob: -8.767789840698242
    8. '.' → logprob: -9.017789840698242
    9. '#' → logprob: -10.142789840698242
    10. ' (' → logprob: -10.267789840698242

Token 99: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03423567861318588
    2. '(' → logprob: -3.909235715866089
    3. ' ' → logprob: -4.78423547744751
    4. '<|end|>' → logprob: -6.15923547744751
    5. '[' → logprob: -7.15923547744751
    6. '.' → logprob: -7.78423547744751
    7. ' )' → logprob: -7.90923547744751
    8. '(
' → logprob: -7.90923547744751
    9. '#' → logprob: -8.409235954284668
    10. ':' → logprob: -9.034235954284668

Token 100: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010340284556150436
    2. '(' → logprob: -5.385340213775635
    3. ' ' → logprob: -6.135340213775635
    4. '[' → logprob: -6.760340213775635
    5. '.' → logprob: -7.260340213775635
    6. ' )' → logprob: -7.635340213775635
    7. '<|end|>' → logprob: -7.760340213775635
    8. '#' → logprob: -9.010340690612793
    9. ':' → logprob: -9.010340690612793
    10. '(
' → logprob: -9.260340690612793

Token 101: ' Lecture' (ID: 106534)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011448841542005539
    2. '#' → logprob: -5.261448860168457
    3. ' ' → logprob: -6.261448860168457
    4. '<|end|>' → logprob: -6.511448860168457
    5. ' )' → logprob: -7.011448860168457
    6. ''' → logprob: -7.136448860168457
    7. '<|end|>' → logprob: -8.011448860168457
    8. '')' → logprob: -8.511448860168457
    9. '__' → logprob: -9.011448860168457
    10. '"' → logprob: -9.386448860168457

Token 102: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.9228484034538269
    2. 'l' → logprob: -1.4228484630584717
    3. '__' → logprob: -1.7978484630584717
    4. 'stdin' → logprob: -3.0478484630584717
    5. ' sys' → logprob: -3.5478484630584717
    6. ' deux' → logprob: -4.422848224639893
    7. ' la' → logprob: -4.422848224639893
    8. 'la' → logprob: -4.672848224639893
    9. ' l' → logprob: -4.797848224639893
    10. 'de' → logprob: -4.797848224639893

Token 104: ''entrée' (ID: 115820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.596589207649231
    2. '_' → logprob: -0.971589207649231
    3. '__' → logprob: -3.5965890884399414
    4. ' ' → logprob: -4.346589088439941
    5. '<|end|>' → logprob: -4.721589088439941
    6. '')' → logprob: -5.721589088439941
    7. ' )' → logprob: -5.971589088439941
    8. ''' → logprob: -6.471589088439941
    9. '<|end|>' → logprob: -6.846589088439941
    10. '_)' → logprob: -6.846589088439941

Token 105: ' via' (ID: 4493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007814581505954266
    2. ' )' → logprob: -5.757814407348633
    3. ' ' → logprob: -6.507814407348633
    4. '<|end|>' → logprob: -6.507814407348633
    5. '[' → logprob: -8.132814407348633
    6. ',' → logprob: -8.632814407348633
    7. '<|end|>' → logprob: -9.007814407348633
    8. '  ' → logprob: -9.257814407348633
    9. '.split' → logprob: -9.382814407348633
    10. '))' → logprob: -9.382814407348633

Token 106: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5401679873466492
    2. '__' → logprob: -1.165168046951294
    3. ' sys' → logprob: -2.790168046951294
    4. ' __' → logprob: -3.165168046951294
    5. 'stdin' → logprob: -7.540167808532715
    6. 'split' → logprob: -7.790167808532715
    7. ')' → logprob: -8.165167808532715
    8. 'read' → logprob: -8.915167808532715
    9. '__)' → logprob: -10.290167808532715
    10. '_sys' → logprob: -10.290167808532715

Token 107: '.stdin' (ID: 93480)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007601061835885048
    2. '<|end|>' → logprob: -5.757601261138916
    3. '.readline' → logprob: -6.757601261138916
    4. '[' → logprob: -7.132601261138916
    5. '.' → logprob: -7.507601261138916
    6. '.read' → logprob: -7.507601261138916
    7. ' )' → logprob: -7.882601261138916
    8. ' ' → logprob: -8.382600784301758
    9. '<|end|>' → logprob: -8.507600784301758
    10. ').' → logprob: -9.007600784301758

Token 108: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006795066874474287
    2. ' )' → logprob: -6.0067949295043945
    3. ' ' → logprob: -6.1317949295043945
    4. '<|end|>' → logprob: -6.3817949295043945
    5. '[' → logprob: -9.131794929504395
    6. '.' → logprob: -9.631794929504395
    7. '#' → logprob: -10.256794929504395
    8. '<|end|>' → logprob: -10.256794929504395
    9. '(' → logprob: -10.756794929504395
    10. '\n' → logprob: -10.756794929504395

Token 109: 'de' (ID: 613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049135006964206696
    2. '))' → logprob: -3.1741349697113037
    3. ')))' → logprob: -6.424135208129883
    4. ' )' → logprob: -7.049135208129883
    5. ').' → logprob: -7.424135208129883
    6. '.readline' → logprob: -7.424135208129883
    7. ')])' → logprob: -7.674135208129883
    8. '.read' → logprob: -8.049135208129883
    9. '<|end|>' → logprob: -8.174135208129883
    10. '),' → logprob: -9.049135208129883

Token 110: 'ux' (ID: 1778)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6884632706642151
    2. 'split' → logprob: -1.1884632110595703
    3. '))' → logprob: -2.5634632110595703
    4. '.readline' → logprob: -3.9384632110595703
    5. '__' → logprob: -4.06346321105957
    6. 'sys' → logprob: -4.56346321105957
    7. ')))' → logprob: -4.81346321105957
    8. ' ' → logprob: -4.93846321105957
    9. 's' → logprob: -5.31346321105957
    10. ' )' → logprob: -5.31346321105957

Token 111: ' fois' (ID: 14697)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.0107760429382324
    2. ')' → logprob: -1.2607760429382324
    3. ' )' → logprob: -2.7607760429382324
    4. '.read' → logprob: -3.0107760429382324
    5. ' .' → logprob: -3.3857760429382324
    6. ' tokens' → logprob: -3.5107760429382324
    7. 'tokens' → logprob: -3.8857760429382324
    8. ' lines' → logprob: -4.135776042938232
    9. ')]' → logprob: -4.260776042938232
    10. '))' → logprob: -4.510776042938232

Token 112: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030446199234575033
    2. ' )' → logprob: -6.128044605255127
    3. '<|end|>' → logprob: -8.253045082092285
    4. '))' → logprob: -9.628045082092285
    5. '.readline' → logprob: -10.128045082092285
    6. '.split' → logprob: -10.128045082092285
    7. ');' → logprob: -10.253045082092285
    8. ' ' → logprob: -10.503045082092285
    9. '[' → logprob: -10.753045082092285
    10. ',' → logprob: -10.753045082092285

Token 113: ' volontaire' (ID: 170473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04833660647273064
    2. ' )' → logprob: -3.1733365058898926
    3. ' ' → logprob: -6.923336505889893
    4. '<|end|>' → logprob: -7.548336505889893
    5. '))' → logprob: -7.798336505889893
    6. '  ' → logprob: -7.923336505889893
    7. '__' → logprob: -8.04833698272705
    8. 'split' → logprob: -8.04833698272705
    9. ' ' → logprob: -8.67333698272705
    10. '),' → logprob: -8.79833698272705

Token 114: 'ment' (ID: 508)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0068171969614923
    2. '_)' → logprob: -6.63181734085083
    3. '_' → logprob: -6.75681734085083
    4. ' )' → logprob: -7.13181734085083
    5. '__' → logprob: -7.25681734085083
    6. '<|end|>' → logprob: -7.38181734085083
    7. '__)' → logprob: -7.88181734085083
    8. ')__' → logprob: -8.256816864013672
    9. 'token' → logprob: -8.881816864013672
    10. '')' → logprob: -9.006816864013672

Token 115: ' non' (ID: 2893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038898612838238478
    2. ' )' → logprob: -5.628890037536621
    3. ' ' → logprob: -9.128890037536621
    4. '<|end|>' → logprob: -9.253890037536621
    5. '[' → logprob: -10.878890037536621
    6. ')
' → logprob: -11.753890037536621
    7. '\n' → logprob: -12.378890037536621
    8. '#' → logprob: -12.628890037536621
    9. '')' → logprob: -12.878890037536621
    10. '<|end|>' → logprob: -13.003890037536621

Token 116: ' convention' (ID: 39395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9869402050971985
    2. 'read' → logprob: -1.6119401454925537
    3. 're' → logprob: -3.1119401454925537
    4. 'import' → logprob: -3.1119401454925537
    5. ' read' → logprob: -3.2369401454925537
    6. ' nécessaire' → logprob: -3.7369401454925537
    7. ' readline' → logprob: -3.9869401454925537
    8. 'necessary' → logprob: -3.9869401454925537
    9. 'compatible' → logprob: -3.9869401454925537
    10. 'f' → logprob: -4.111940383911133

Token 117: 'nel' (ID: 10085)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025109970942139626
    2. '_' → logprob: -4.650109767913818
    3. ' )' → logprob: -5.900109767913818
    4. '_)' → logprob: -6.025109767913818
    5. '))' → logprob: -6.275109767913818
    6. '__' → logprob: -6.650109767913818
    7. '__)' → logprob: -6.900109767913818
    8. ' ' → logprob: -7.025109767913818
    9. '_token' → logprob: -7.150109767913818
    10. 'token' → logprob: -7.275109767913818

Token 118: ' !' (ID: 1073)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0049827974289655685
    2. ' )' → logprob: -5.379982948303223
    3. ' ' → logprob: -8.754982948303223
    4. ')
' → logprob: -10.004982948303223
    5. '[' → logprob: -10.379982948303223
    6. '))' → logprob: -10.754982948303223
    7. '<|end|>' → logprob: -11.379982948303223
    8. ']' → logprob: -11.754982948303223
    9. ')])' → logprob: -12.129982948303223
    10. ')]' → logprob: -12.254982948303223

Token 119: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001532355323433876
    2. ' )' → logprob: -6.626532554626465
    3. ' ' → logprob: -9.501532554626465
    4. '<|end|>' → logprob: -10.626532554626465
    5. ')
' → logprob: -10.751532554626465
    6. '))' → logprob: -11.001532554626465
    7. '[' → logprob: -11.626532554626465
    8. ']' → logprob: -11.751532554626465
    9. ')])' → logprob: -12.501532554626465
    10. ')

' → logprob: -12.626532554626465

Token 120: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017623133957386017
    2. ' ' → logprob: -4.517622947692871
    3. ' )' → logprob: -6.142622947692871
    4. '[' → logprob: -6.267622947692871
    5. '.' → logprob: -6.892622947692871
    6. '(' → logprob: -7.017622947692871
    7. '<|end|>' → logprob: -9.267622947692871
    8. ']' → logprob: -9.642622947692871
    9. '#' → logprob: -9.892622947692871
    10. '(
' → logprob: -10.017622947692871

Token 121: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024826733861118555
    2. ' ' → logprob: -7.502482891082764
    3. '[' → logprob: -7.627482891082764
    4. '.' → logprob: -8.002482414245605
    5. '(' → logprob: -8.502482414245605
    6. '  
' → logprob: -8.627482414245605
    7. ' )' → logprob: -9.127482414245605
    8. ')
' → logprob: -9.252482414245605
    9. '\n' → logprob: -9.752482414245605
    10. '#' → logprob: -9.877482414245605

Token 122: ' Tout' (ID: 45412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008366815745830536
    2. '<|end|>' → logprob: -4.883366584777832
    3. ' ' → logprob: -8.758366584777832
    4. '<|end|>' → logprob: -8.883366584777832
    5. '#' → logprob: -9.258366584777832
    6. '```' → logprob: -9.383366584777832
    7. '\n' → logprob: -9.758366584777832
    8. '[' → logprob: -9.883366584777832
    9. ' )' → logprob: -10.008366584777832
    10. ']' → logprob: -11.383366584777832

Token 123: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00746523542329669
    2. '<|end|>' → logprob: -5.132465362548828
    3. ' ' → logprob: -7.382465362548828
    4. ' )' → logprob: -8.382465362548828
    5. '_' → logprob: -8.632465362548828
    6. '#' → logprob: -9.132465362548828
    7. '\n' → logprob: -9.507465362548828
    8. '<|end|>' → logprob: -9.632465362548828
    9. '[' → logprob: -10.007465362548828
    10. '__' → logprob: -10.382465362548828

Token 124: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1546800583600998
    2. '_' → logprob: -2.279680013656616
    3. ' done' → logprob: -3.904680013656616
    4. 'done' → logprob: -5.279680252075195
    5. ']' → logprob: -5.529680252075195
    6. ' )' → logprob: -6.529680252075195
    7. '__' → logprob: -6.654680252075195
    8. ')_' → logprob: -6.904680252075195
    9. ' on' → logprob: -7.279680252075195
    10. ' valid' → logprob: -7.529680252075195

Token 125: ' une' (ID: 2463)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41614624857902527
    2. ' one' → logprob: -1.6661462783813477
    3. 'one' → logprob: -3.1661462783813477
    4. ' une' → logprob: -3.6661462783813477
    5. ')' → logprob: -4.416146278381348
    6. ' a' → logprob: -4.541146278381348
    7. '_one' → logprob: -4.791146278381348
    8. ' un' → logprob: -4.916146278381348
    9. 'un' → logprob: -5.166146278381348
    10. 'une' → logprob: -5.291146278381348

Token 126: ' ligne' (ID: 19583)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3630456328392029
    2. 'token' → logprob: -1.8630456924438477
    3. '_' → logprob: -2.7380456924438477
    4. ' )' → logprob: -4.488045692443848
    5. ' token' → logprob: -4.738045692443848
    6. '<|end|>' → logprob: -4.988045692443848
    7. '#' → logprob: -5.238045692443848
    8. ' seul' → logprob: -5.363045692443848
    9. '_token' → logprob: -5.488045692443848
    10. ' seule' → logprob: -5.488045692443848

Token 127: ' avec' (ID: 3937)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035898564383387566
    2. '(' → logprob: -7.003589630126953
    3. ' ' → logprob: -7.378589630126953
    4. '[' → logprob: -7.628589630126953
    5. ' )' → logprob: -7.753589630126953
    6. '.' → logprob: -8.128589630126953
    7. ')
' → logprob: -8.878589630126953
    8. '(
' → logprob: -9.128589630126953
    9. ']' → logprob: -9.378589630126953
    10. '  
' → logprob: -9.753589630126953

Token 128: ' une' (ID: 2463)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.129357099533081
    2. 'lambda' → logprob: -1.254357099533081
    3. ' no' → logprob: -2.504357099533081
    4. ' lambda' → logprob: -3.129357099533081
    5. '__' → logprob: -3.379357099533081
    6. 'une' → logprob: -4.00435733795166
    7. 'a' → logprob: -4.00435733795166
    8. 'no' → logprob: -4.12935733795166
    9. ' un' → logprob: -4.25435733795166
    10. 'l' → logprob: -4.62935733795166

Token 129: ' lambda' (ID: 27871)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.0740697383880615
    2. ')' → logprob: -1.5740697383880615
    3. ' parent' → logprob: -2.6990697383880615
    4. ';' → logprob: -3.0740697383880615
    5. 'lambda' → logprob: -3.4490697383880615
    6. ');' → logprob: -3.5740697383880615
    7. '#' → logprob: -3.6990697383880615
    8. 'space' → logprob: -4.449069976806641
    9. ' )' → logprob: -4.574069976806641
    10. '\n' → logprob: -4.699069976806641

Token 130: ' non' (ID: 2893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00661056861281395
    2. '(' → logprob: -6.00661039352417
    3. ' ' → logprob: -6.50661039352417
    4. '[' → logprob: -7.00661039352417
    5. '<|end|>' → logprob: -7.13161039352417
    6. ' )' → logprob: -8.006610870361328
    7. '  
' → logprob: -9.381610870361328
    8. '.' → logprob: -9.631610870361328
    9. '\n' → logprob: -9.756610870361328
    10. '(
' → logprob: -10.006610870361328

Token 131: ' utile' (ID: 68237)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3335176110267639
    2. '_' → logprob: -2.708517551422119
    3. ' None' → logprob: -2.708517551422119
    4. 'local' → logprob: -3.458517551422119
    5. 'None' → logprob: -3.708517551422119
    6. 'named' → logprob: -3.833517551422119
    7. ' )' → logprob: -4.083517551422119
    8. ' named' → logprob: -4.083517551422119
    9. '):' → logprob: -4.833517551422119
    10. '_)' → logprob: -5.208517551422119

Token 132: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004710056819021702
    2. '(' → logprob: -6.0047101974487305
    3. ' ' → logprob: -7.0047101974487305
    4. '<|end|>' → logprob: -7.6297101974487305
    5. '[' → logprob: -8.37971019744873
    6. ' )' → logprob: -8.50471019744873
    7. '.' → logprob: -8.50471019744873
    8. '  
' → logprob: -10.62971019744873
    9. '(
' → logprob: -10.87971019744873
    10. '\' → logprob: -11.00471019744873

Token 133: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003942567389458418
    2. '(' → logprob: -6.753942489624023
    3. ' ' → logprob: -7.003942489624023
    4. '[' → logprob: -7.878942489624023
    5. ' )' → logprob: -7.878942489624023
    6. '\n' → logprob: -8.628942489624023
    7. '<|end|>' → logprob: -9.128942489624023
    8. '(
' → logprob: -9.128942489624023
    9. '.' → logprob: -9.378942489624023
    10. '  
' → logprob: -9.378942489624023

Token 134: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035419787745922804
    2. '(' → logprob: -6.378541946411133
    3. ' ' → logprob: -6.878541946411133
    4. '[' → logprob: -8.253541946411133
    5. ' )' → logprob: -8.753541946411133
    6. '.' → logprob: -9.503541946411133
    7. ']' → logprob: -10.128541946411133
    8. '#' → logprob: -10.253541946411133
    9. '<|end|>' → logprob: -10.253541946411133
    10. '\n' → logprob: -10.628541946411133

Token 135: ' Parent' (ID: 33156)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007975964690558612
    2. '<|end|>' → logprob: -7.375797748565674
    3. '__' → logprob: -9.625797271728516
    4. ' )' → logprob: -10.750797271728516
    5. ' ' → logprob: -10.750797271728516
    6. '_' → logprob: -11.000797271728516
    7. '\n' → logprob: -12.000797271728516
    8. '<|end|>' → logprob: -12.500797271728516
    9. '```' → logprob: -12.750797271728516
    10. '\' → logprob: -13.000797271728516

Token 136: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.033772945404052734
    2. 'heses' → logprob: -3.4087729454040527
    3. 'hesis' → logprob: -9.658773422241211
    4. 'hes' → logprob: -10.158773422241211
    5. ')' → logprob: -11.533773422241211
    6. 'èses' → logprob: -12.283773422241211
    7. '#' → logprob: -12.408773422241211
    8. 'hs' → logprob: -13.408773422241211
    9. 'èse' → logprob: -13.783773422241211
    10. 'hétique' → logprob: -14.158773422241211

Token 137: 'és' (ID: 1756)
  Prédit: 'èses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'èses' → logprob: -0.6909992098808289
    2. 'heses' → logprob: -1.4409992694854736
    3. 'h' → logprob: -1.5659992694854736
    4. ')' → logprob: -3.0659992694854736
    5. 'èse' → logprob: -5.1909990310668945
    6. '))' → logprob: -8.190999031066895
    7. '#' → logprob: -8.440999031066895
    8. 'hesis' → logprob: -8.565999031066895
    9. ')`' → logprob: -9.690999031066895
    10. 'hes' → logprob: -9.815999031066895

Token 138: 'age' (ID: 477)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.1521821916103363
    2. 'èses' → logprob: -2.152182102203369
    3. 'èse' → logprob: -4.027182102203369
    4. 'eses' → logprob: -5.277182102203369
    5. ')' → logprob: -6.402182102203369
    6. 'ès' → logprob: -9.152182579040527
    7. 'esis' → logprob: -9.652182579040527
    8. 'és' → logprob: -10.152182579040527
    9. 'esized' → logprob: -11.027182579040527
    10. 'ése' → logprob: -11.152182579040527

Token 139: ' "' (ID: 392)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006856293766759336
    2. '<|end|>' → logprob: -8.500685691833496
    3. ' )' → logprob: -9.000685691833496
    4. '(' → logprob: -9.250685691833496
    5. '[' → logprob: -9.625685691833496
    6. ' ' → logprob: -9.625685691833496
    7. ']' → logprob: -11.000685691833496
    8. ')))' → logprob: -11.375685691833496
    9. '.' → logprob: -11.625685691833496
    10. '))' → logprob: -11.750685691833496

Token 140: 'inut' (ID: 58529)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022525427863001823
    2. ')))' → logprob: -4.772525310516357
    3. '<|end|>' → logprob: -4.772525310516357
    4. '))' → logprob: -5.647525310516357
    5. '<|end|>' → logprob: -8.522525787353516
    6. '...' → logprob: -8.647525787353516
    7. '[' → logprob: -9.022525787353516
    8. ' )' → logprob: -9.022525787353516
    9. ')}}' → logprob: -9.022525787353516
    10. '(' → logprob: -9.022525787353516

Token 141: 'ile' (ID: 554)
  Prédit: 'éré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.681017279624939
    2. 'ial' → logprob: -1.681017279624939
    3. 'éral' → logprob: -2.4310173988342285
    4. ')' → logprob: -2.9310173988342285
    5. 'érant' → logprob: -3.8060173988342285
    6. 'ère' → logprob: -4.0560173988342285
    7. 'érieur' → logprob: -4.1810173988342285
    8. 'éraire' → logprob: -4.3060173988342285
    9. 'er' → logprob: -4.5560173988342285
    10. 'é' → logprob: -4.6810173988342285

Token 142: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009155054576694965
    2. ' )' → logprob: -7.50091552734375
    3. '))' → logprob: -9.62591552734375
    4. '[' → logprob: -9.75091552734375
    5. '_' → logprob: -10.25091552734375
    6. '<|end|>' → logprob: -10.37591552734375
    7. ' ' → logprob: -10.50091552734375
    8. ')))' → logprob: -10.50091552734375
    9. ']' → logprob: -10.62591552734375
    10. '(' → logprob: -10.62591552734375

Token 143: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018674137070775032
    2. '(' → logprob: -4.143674373626709
    3. ' ' → logprob: -7.143674373626709
    4. '.' → logprob: -7.393674373626709
    5. '[' → logprob: -7.518674373626709
    6. ' )' → logprob: -8.64367389678955
    7. '<|end|>' → logprob: -8.64367389678955
    8. '(
' → logprob: -9.76867389678955
    9. ',' → logprob: -10.01867389678955
    10. ' (' → logprob: -10.26867389678955

Token 144: ' accent' (ID: 37652)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1664575338363647
    2. 'la' → logprob: -1.2914575338363647
    3. 'le' → logprob: -2.1664576530456543
    4. 'clar' → logprob: -3.4164576530456543
    5. '[' → logprob: -3.9164576530456543
    6. 'eval' → logprob: -4.166457653045654
    7. 'respect' → logprob: -4.541457653045654
    8. 'mettre' → logprob: -4.541457653045654
    9. 'r' → logprob: -4.666457653045654
    10. ' la' → logprob: -4.666457653045654

Token 145: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.08722584694623947
    2. ')' → logprob: -3.587225914001465
    3. 'u' → logprob: -3.962225914001465
    4. 'uant' → logprob: -4.462225914001465
    5. 'ué' → logprob: -4.962225914001465
    6. 'uation' → logprob: -5.087225914001465
    7. 'ue' → logprob: -5.212225914001465
    8. 'er' → logprob: -6.837225914001465
    9. '))' → logprob: -7.712225914001465
    10. 'uate' → logprob: -7.837225914001465

Token 146: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016839146614074707
    2. '(' → logprob: -4.891839027404785
    3. '.' → logprob: -5.266839027404785
    4. ' ' → logprob: -6.516839027404785
    5. '[' → logprob: -7.141839027404785
    6. ' )' → logprob: -7.766839027404785
    7. '<|end|>' → logprob: -8.016839027404785
    8. ',' → logprob: -8.641839027404785
    9. '(
' → logprob: -8.641839027404785
    10. '#' → logprob: -9.641839027404785

Token 147: ' style' (ID: 2713)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.2254282385110855
    2. ' caractère' → logprob: -2.850428342819214
    3. 'ob' → logprob: -3.350428342819214
    4. 'non' → logprob: -3.600428342819214
    5. 'style' → logprob: -3.975428342819214
    6. 'conf' → logprob: -4.225428104400635
    7. ' côté' → logprob: -4.350428104400635
    8. 'c' → logprob: -4.600428104400635
    9. 'code' → logprob: -5.225428104400635
    10. ' style' → logprob: -5.225428104400635

Token 148: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016164226457476616
    2. '(' → logprob: -4.516164302825928
    3. ' ' → logprob: -6.266164302825928
    4. '[' → logprob: -6.891164302825928
    5. '.' → logprob: -7.016164302825928
    6. ' )' → logprob: -8.01616382598877
    7. '<|end|>' → logprob: -8.01616382598877
    8. '(
' → logprob: -8.89116382598877
    9. ',' → logprob: -9.26616382598877
    10. ' (' → logprob: -9.76616382598877

Token 149: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02652101032435894
    2. '(' → logprob: -4.5265212059021
    3. ' ' → logprob: -4.6515212059021
    4. '[' → logprob: -6.2765212059021
    5. '.' → logprob: -6.6515212059021
    6. '  
' → logprob: -7.1515212059021
    7. ' )' → logprob: -7.7765212059021
    8. '<|end|>' → logprob: -8.151520729064941
    9. '(
' → logprob: -8.651520729064941
    10. '\n' → logprob: -8.901520729064941

Token 150: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010212026536464691
    2. '(' → logprob: -5.010211944580078
    3. '[' → logprob: -6.635211944580078
    4. ' ' → logprob: -7.385211944580078
    5. '<|end|>' → logprob: -8.260211944580078
    6. ' )' → logprob: -8.510211944580078
    7. '(
' → logprob: -8.510211944580078
    8. '
' → logprob: -9.010211944580078
    9. '\n' → logprob: -9.010211944580078
    10. 'newline' → logprob: -9.010211944580078

Token 151: ' Util' (ID: 13564)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017420848831534386
    2. '<|end|>' → logprob: -4.642420768737793
    3. '__' → logprob: -5.392420768737793
    4. '#' → logprob: -6.267420768737793
    5. '_' → logprob: -8.392420768737793
    6. '<|end|>' → logprob: -8.767420768737793
    7. '')' → logprob: -9.392420768737793
    8. ')__' → logprob: -9.392420768737793
    9. '[' → logprob: -9.642420768737793
    10. ']' → logprob: -9.642420768737793

Token 152: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.4873935580253601
    2. 'isé' → logprob: -1.3623936176300049
    3. 'es' → logprob: -3.737393617630005
    4. '#' → logprob: -3.987393617630005
    5. 'ation' → logprob: -4.237393379211426
    6. 's' → logprob: -4.237393379211426
    7. 'iser' → logprob: -4.362393379211426
    8. ')' → logprob: -4.987393379211426
    9. 'é' → logprob: -5.112393379211426
    10. 'is' → logprob: -5.362393379211426

Token 153: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.3677740097045898
    2. ')' → logprob: -1.6177740097045898
    3. ' de' → logprob: -2.36777400970459
    4. '(' → logprob: -2.61777400970459
    5. ''' → logprob: -2.86777400970459
    6. 'd' → logprob: -2.99277400970459
    7. 'de' → logprob: -2.99277400970459
    8. ' of' → logprob: -3.24277400970459
    9. 'des' → logprob: -3.24277400970459
    10. '('' → logprob: -3.49277400970459

Token 154: ''un' (ID: 9788)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6596018671989441
    2. '_' → logprob: -1.2846019268035889
    3. ''' → logprob: -1.9096019268035889
    4. ')' → logprob: -4.15960168838501
    5. '___' → logprob: -4.53460168838501
    6. '(' → logprob: -4.78460168838501
    7. '[' → logprob: -5.90960168838501
    8. '.' → logprob: -6.53460168838501
    9. ''s' → logprob: -6.65960168838501
    10. '"' → logprob: -6.65960168838501

Token 155: ' indice' (ID: 90848)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.94464510679245
    2. '__' → logprob: -1.0696451663970947
    3. ')' → logprob: -2.1946451663970947
    4. '[' → logprob: -2.9446451663970947
    5. 'lambda' → logprob: -3.8196451663970947
    6. ''' → logprob: -4.069644927978516
    7. '#' → logprob: -4.819644927978516
    8. 'list' → logprob: -5.194644927978516
    9. 'split' → logprob: -5.319644927978516
    10. '"' → logprob: -5.569644927978516

Token 156: ' sur' (ID: 1512)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.44630515575408936
    2. '[' → logprob: -1.5713051557540894
    3. ']' → logprob: -2.321305274963379
    4. ')' → logprob: -3.446305274963379
    5. '__' → logprob: -4.946305274963379
    6. '<|end|>' → logprob: -5.446305274963379
    7. '][' → logprob: -6.321305274963379
    8. ' ' → logprob: -6.946305274963379
    9. '_' → logprob: -7.196305274963379
    10. '[
' → logprob: -7.196305274963379

Token 157: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08602326363325119
    2. '__' → logprob: -3.5860233306884766
    3. '0' → logprob: -3.8360233306884766
    4. '(lambda' → logprob: -4.836023330688477
    5. '__[' → logprob: -5.211023330688477
    6. '(__' → logprob: -5.586023330688477
    7. 'lambda' → logprob: -6.086023330688477
    8. ' [' → logprob: -6.336023330688477
    9. ')' → logprob: -6.461023330688477
    10. '[]' → logprob: -6.461023330688477

Token 158: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6678566932678223
    2. 'liste' → logprob: -0.7928566932678223
    3. 'lambda' → logprob: -3.6678566932678223
    4. ' liste' → logprob: -5.542856693267822
    5. '[' → logprob: -5.917856693267822
    6. 'tuple' → logprob: -7.417856693267822
    7. '__' → logprob: -8.167856216430664
    8. 'chaine' → logprob: -8.667856216430664
    9. ' list' → logprob: -8.667856216430664
    10. ' lambda' → logprob: -8.792856216430664

Token 159: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015421106480062008
    2. '(' → logprob: -4.515420913696289
    3. ' ' → logprob: -6.390420913696289
    4. '<|end|>' → logprob: -6.515420913696289
    5. '[' → logprob: -7.765420913696289
    6. ' )' → logprob: -8.765420913696289
    7. '.' → logprob: -9.265420913696289
    8. '(
' → logprob: -9.515420913696289
    9. '  
' → logprob: -9.515420913696289
    10. '\n' → logprob: -9.765420913696289

Token 160: ' taille' (ID: 41644)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0629492700099945
    2. '1' → logprob: -3.5629491806030273
    3. '[' → logprob: -4.312949180603027
    4. 'lambda' → logprob: -4.437949180603027
    5. '__' → logprob: -6.687949180603027
    6. '(' → logprob: -7.062949180603027
    7. 'tokens' → logprob: -7.312949180603027
    8. 'fonction' → logprob: -7.437949180603027
    9. 'None' → logprob: -7.562949180603027
    10. '(lambda' → logprob: -7.687949180603027

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10780718177556992
    2. '2' → logprob: -2.357807159423828
    3. '0' → logprob: -4.982807159423828
    4. ' ' → logprob: -7.482807159423828
    5. '[' → logprob: -10.357807159423828
    6. ')' → logprob: -10.732807159423828
    7. 'de' → logprob: -10.982807159423828
    8. '```' → logprob: -11.795307159423828
    9. ']' → logprob: -11.857807159423828
    10. 'un' → logprob: -11.982807159423828

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00791192427277565
    2. '2' → logprob: -4.8829121589660645
    3. '0' → logprob: -8.507911682128906
    4. ' ' → logprob: -9.507911682128906
    5. '[' → logprob: -11.632911682128906
    6. '(' → logprob: -12.132911682128906
    7. '`' → logprob: -12.757911682128906
    8. '```' → logprob: -12.757911682128906
    9. ')' → logprob: -13.382911682128906
    10. '-' → logprob: -13.382911682128906

Token 163: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011392275802791119
    2. '(' → logprob: -5.136392116546631
    3. ' ' → logprob: -6.136392116546631
    4. '[' → logprob: -6.636392116546631
    5. '<|end|>' → logprob: -7.511392116546631
    6. ' )' → logprob: -8.261392593383789
    7. '(
' → logprob: -8.511392593383789
    8. '  
' → logprob: -8.636392593383789
    9. '
' → logprob: -8.886392593383789
    10. '\n' → logprob: -9.136392593383789

Token 164: ' ex' (ID: 513)
  Prédit: 'forcer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forcer' → logprob: -0.7318769693374634
    2. 'for' → logprob: -1.1068769693374634
    3. ' for' → logprob: -2.731876850128174
    4. 'sim' → logprob: -3.731876850128174
    5. 'ob' → logprob: -3.731876850128174
    6. 'acc' → logprob: -4.856876850128174
    7. 'app' → logprob: -4.981876850128174
    8. 'faire' → logprob: -5.106876850128174
    9. 'ex' → logprob: -5.231876850128174
    10. 'ap' → logprob: -5.356876850128174

Token 165: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.3663891851902008
    2. 'ecut' → logprob: -2.991389274597168
    3. 'ec' → logprob: -3.116389274597168
    4. 'é' → logprob: -3.241389274597168
    5. 'ecute' → logprob: -3.491389274597168
    6. 'écut' → logprob: -3.616389274597168
    7. 'e' → logprob: -3.616389274597168
    8. 'ister' → logprob: -4.241389274597168
    9. 'p' → logprob: -4.616389274597168
    10. 'cut' → logprob: -4.741389274597168

Token 166: 'uter' (ID: 23469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09038238972425461
    2. 'uter' → logprob: -3.0903823375701904
    3. 'ute' → logprob: -4.5903825759887695
    4. 'cut' → logprob: -4.7153825759887695
    5. 'ution' → logprob: -5.4653825759887695
    6. '[' → logprob: -5.7153825759887695
    7. ']' → logprob: -6.5903825759887695
    8. '])' → logprob: -6.7153825759887695
    9. '(' → logprob: -6.8403825759887695
    10. 'ecute' → logprob: -6.9653825759887695

Token 167: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004086116328835487
    2. ']' → logprob: -6.254086017608643
    3. '(' → logprob: -7.629086017608643
    4. ' ' → logprob: -8.2540864944458
    5. '[' → logprob: -8.3790864944458
    6. '<|end|>' → logprob: -8.3790864944458
    7. '__' → logprob: -9.0040864944458
    8. ' )' → logprob: -9.1290864944458
    9. ')
' → logprob: -9.2540864944458
    10. '\n' → logprob: -9.5040864944458

Token 168: ' code' (ID: 3490)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.1990148425102234
    2. 'code' → logprob: -2.074014902114868
    3. ' lambda' → logprob: -3.074014902114868
    4. ' code' → logprob: -5.199014663696289
    5. 'fonction' → logprob: -7.324014663696289
    6. '(lambda' → logprob: -7.574014663696289
    7. 'call' → logprob: -7.949014663696289
    8. 'exec' → logprob: -8.199014663696289
    9. 'token' → logprob: -8.324014663696289
    10. 'print' → logprob: -8.324014663696289

Token 169: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01846947893500328
    2. '(' → logprob: -4.393469333648682
    3. '[' → logprob: -6.393469333648682
    4. ' ' → logprob: -6.518469333648682
    5. '.' → logprob: -6.893469333648682
    6. ' )' → logprob: -7.768469333648682
    7. '<|end|>' → logprob: -7.768469333648682
    8. '(
' → logprob: -8.89346981048584
    9. ',' → logprob: -9.39346981048584
    10. ':' → logprob: -9.89346981048584

Token 170: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022695928812026978
    2. '(' → logprob: -5.022696018218994
    3. ' ' → logprob: -5.147696018218994
    4. '[' → logprob: -5.397696018218994
    5. '  
' → logprob: -6.897696018218994
    6. '(
' → logprob: -7.147696018218994
    7. '.' → logprob: -7.397696018218994
    8. ' )' → logprob: -7.647696018218994
    9. '\n' → logprob: -8.147695541381836
    10. '<|end|>' → logprob: -8.397695541381836

Token 171: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030207445845007896
    2. '(' → logprob: -3.905207395553589
    3. ' ' → logprob: -5.155207633972168
    4. '<|end|>' → logprob: -6.780207633972168
    5. '[' → logprob: -7.155207633972168
    6. ' )' → logprob: -7.655207633972168
    7. '  
' → logprob: -8.655207633972168
    8. '(
' → logprob: -8.655207633972168
    9. '
' → logprob: -8.655207633972168
    10. '\n' → logprob: -9.030207633972168

Token 172: ' Pas' (ID: 18323)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005566582549363375
    2. '<|end|>' → logprob: -5.255566596984863
    3. ' )' → logprob: -9.630566596984863
    4. '#' → logprob: -9.755566596984863
    5. ' ' → logprob: -10.005566596984863
    6. '[' → logprob: -10.380566596984863
    7. '<|end|>' → logprob: -10.630566596984863
    8. '__' → logprob: -10.630566596984863
    9. '```' → logprob: -11.005566596984863
    10. ']' → logprob: -11.380566596984863

Token 173: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46946489810943604
    2. '<|end|>' → logprob: -1.594464898109436
    3. ']' → logprob: -1.844464898109436
    4. '#' → logprob: -4.9694647789001465
    5. '<|end|>' → logprob: -6.5944647789001465
    6. ' ' → logprob: -6.9694647789001465
    7. ')]' → logprob: -7.0944647789001465
    8. '.' → logprob: -7.4694647789001465
    9. '[' → logprob: -7.7194647789001465
    10. '])' → logprob: -7.7194647789001465

Token 174: ' variables' (ID: 13955)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004881723318248987
    2. '<|end|>' → logprob: -5.754881858825684
    3. 'newline' → logprob: -7.254881858825684
    4. ']' → logprob: -7.754881858825684
    5. '#' → logprob: -8.254881858825684
    6. ' ' → logprob: -9.629881858825684
    7. ' )' → logprob: -10.754881858825684
    8. '))' → logprob: -10.754881858825684
    9. '<|end|>' → logprob: -11.129881858825684
    10. '')' → logprob: -11.254881858825684

Token 175: ' interm' (ID: 120489)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031165504828095436
    2. '(' → logprob: -4.031165599822998
    3. '[' → logprob: -5.281165599822998
    4. '.' → logprob: -6.281165599822998
    5. ' ' → logprob: -6.406165599822998
    6. ' )' → logprob: -7.031165599822998
    7. '(
' → logprob: -7.406165599822998
    8. '<|end|>' → logprob: -8.15616512298584
    9. '()' → logprob: -8.28116512298584
    10. ']' → logprob: -8.28116512298584

Token 176: 'édia' (ID: 49296)
  Prédit: 'édiaire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'édiaire' → logprob: -0.46129369735717773
    2. 'édia' → logprob: -1.2112936973571777
    3. ')' → logprob: -3.2112936973571777
    4. 'édi' → logprob: -5.336293697357178
    5. 'éra' → logprob: -5.836293697357178
    6. '#' → logprob: -5.961293697357178
    7. 'é' → logprob: -6.086293697357178
    8. 'iaires' → logprob: -6.461293697357178
    9. 'edia' → logprob: -6.711293697357178
    10. 'iaire' → logprob: -6.836293697357178

Token 177: 'ires' (ID: 5255)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7972903847694397
    2. 'ires' → logprob: -1.422290325164795
    3. 's' → logprob: -1.922290325164795
    4. 'aires' → logprob: -2.672290325164795
    5. 'es' → logprob: -3.547290325164795
    6. 'ères' → logprob: -4.297290325164795
    7. 'n' → logprob: -4.797290325164795
    8. ')' → logprob: -4.922290325164795
    9. 't' → logprob: -5.422290325164795
    10. 're' → logprob: -5.672290325164795

Token 178: ' nom' (ID: 8080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05032133683562279
    2. '(' → logprob: -3.425321340560913
    3. ' ' → logprob: -5.050321102142334
    4. '[' → logprob: -5.925321102142334
    5. '\n' → logprob: -6.300321102142334
    6. '  
' → logprob: -6.675321102142334
    7. '(
' → logprob: -7.300321102142334
    8. '.' → logprob: -7.550321102142334
    9. ' )' → logprob: -7.675321102142334
    10. '<|end|>' → logprob: -7.800321102142334

Token 179: 'm' (ID: 76)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010872723534703255
    2. ' )' → logprob: -5.260872840881348
    3. '_' → logprob: -6.135872840881348
    4. '__' → logprob: -7.385872840881348
    5. ']' → logprob: -8.010872840881348
    6. ' ' → logprob: -8.135872840881348
    7. '))' → logprob: -8.385872840881348
    8. '<|end|>' → logprob: -8.510872840881348
    9. '[' → logprob: -9.010872840881348
    10. '_token' → logprob: -9.135872840881348

Token 180: 'ées' (ID: 5161)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.4616761803627014
    2. ')' → logprob: -1.4616761207580566
    3. 'ées' → logprob: -2.3366761207580566
    4. 'és' → logprob: -3.8366761207580566
    5. 'é' → logprob: -4.961676120758057
    6. 'ed' → logprob: -4.961676120758057
    7. 's' → logprob: -6.336676120758057
    8. 'nées' → logprob: -7.461676120758057
    9. 'e' → logprob: -7.586676120758057
    10. 'érées' → logprob: -7.961676120758057

Token 181: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012684219516813755
    2. '(' → logprob: -5.512684345245361
    3. '[' → logprob: -6.012684345245361
    4. ' ' → logprob: -6.012684345245361
    5. '<|end|>' → logprob: -6.137684345245361
    6. ' )' → logprob: -7.762684345245361
    7. '  
' → logprob: -8.762683868408203
    8. '\n' → logprob: -9.012683868408203
    9. '(
' → logprob: -9.262683868408203
    10. '
' → logprob: -9.262683868408203


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 179
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 72
Précision stricte (1ère position): 17.88%
Précision adaptée (1ère position): 17.88%
Précision (top 10): 40.22%
================================================================================
