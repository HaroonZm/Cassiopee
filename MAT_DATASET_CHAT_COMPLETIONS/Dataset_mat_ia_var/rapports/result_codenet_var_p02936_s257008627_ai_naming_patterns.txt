================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

node_count, query_count = map(int, input().split())

adjacency_list = [[] for _ in range(node_count + 1)]
for edge_index in range(node_count - 1):
    node_a, node_b = map(int, input().split())
    adjacency_list[node_a].append(node_b)
    adjacency_list[node_b].append(node_a)

value_list = [0 for _ in range(node_count + 1)]
for query_index in range(query_count):
    update_node, update_value = map(int, input().split())
    value_list[update_node] += update_value

traversal_stack = deque()
traversal_stack.append(1)
visited_nodes = set()
while traversal_stack:
    current_node = traversal_stack.pop()
    visited_nodes.add(current_node)
    for adjacent_node in adjacency_list[current_node]:
        if adjacent_node not in visited_nodes:
            traversal_stack.append(adjacent_node)
            value_list[adjacent_node] += value_list[current_node]

print(*value_list[1:])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -1.0459650754928589
    2. 'deque' → logprob: -1.2959650754928589
    3. ' defaultdict' → logprob: -1.4209650754928589
    4. ' abc' → logprob: -2.9209651947021484
    5. 'default' → logprob: -3.0459651947021484
    6. 'Counter' → logprob: -4.420965194702148
    7. ' deque' → logprob: -4.545965194702148
    8. ' Counter' → logprob: -5.545965194702148
    9. 'named' → logprob: -6.170965194702148
    10. '```' → logprob: -6.420965194702148

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010959392413496971
    2. '.' → logprob: -5.385959625244141
    3. '\(' → logprob: -5.760959625244141
    4. '\' → logprob: -6.510959625244141
    5. '```' → logprob: -7.885959625244141
    6. '[' → logprob: -8.51095962524414
    7. '\[' → logprob: -8.51095962524414
    8. ',' → logprob: -8.63595962524414
    9. '\n' → logprob: -9.13595962524414
    10. 'newline' → logprob: -9.13595962524414

Token 5: 'node' (ID: 7005)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02784970961511135
    2. 'd' → logprob: -5.4028496742248535
    3. '\' → logprob: -5.5278496742248535
    4. '[' → logprob: -5.6528496742248535
    5. ',' → logprob: -5.7778496742248535
    6. '.' → logprob: -6.0278496742248535
    7. 'a' → logprob: -6.1528496742248535
    8. '\(' → logprob: -6.7778496742248535
    9. ' (' → logprob: -6.9028496742248535
    10. '\n' → logprob: -6.9028496742248535

Token 6: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2831054627895355
    2. '.' → logprob: -1.408105492591858
    3. ' .' → logprob: -6.908105373382568
    4. ' ' → logprob: -8.158105850219727
    5. ' =' → logprob: -8.283105850219727
    6. ')' → logprob: -8.658105850219727
    7. ' s' → logprob: -9.658105850219727
    8. '[' → logprob: -9.783105850219727
    9. '=' → logprob: -10.783105850219727
    10. '.s' → logprob: -11.033105850219727

Token 7: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7480340600013733
    2. ' =' → logprob: -0.9980340600013733
    3. ' ' → logprob: -2.6230340003967285
    4. ')' → logprob: -2.7480340003967285
    5. '_' → logprob: -4.9980340003967285
    6. '[' → logprob: -5.1230340003967285
    7. ',' → logprob: -6.4980340003967285
    8. '  ' → logprob: -6.6230340003967285
    9. '>' → logprob: -6.8730340003967285
    10. '<|end|>' → logprob: -7.2480340003967285

Token 8: ' query' (ID: 5703)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.4617379605770111
    2. 'edges' → logprob: -2.211737871170044
    3. ' ' → logprob: -3.086737871170044
    4. ' edge' → logprob: -3.336737871170044
    5. ' =' → logprob: -3.711737871170044
    6. ' space' → logprob: -3.711737871170044
    7. 'space' → logprob: -4.086738109588623
    8. ' max' → logprob: -4.336738109588623
    9. ' node' → logprob: -4.336738109588623
    10. 'edge' → logprob: -4.586738109588623

Token 9: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2485150247812271
    2. '_' → logprob: -2.1235151290893555
    3. ' =' → logprob: -2.6235151290893555
    4. '_count' → logprob: -3.9985151290893555
    5. '=' → logprob: -5.3735151290893555
    6. '_s' → logprob: -5.4985151290893555
    7. '_space' → logprob: -9.123515129089355
    8. '_amount' → logprob: -9.248515129089355
    9. ' ' → logprob: -9.373515129089355
    10. '_size' → logprob: -9.373515129089355

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006160693243145943
    2. '=' → logprob: -5.131160736083984
    3. '<|end|>' → logprob: -9.256160736083984
    4. ',' → logprob: -9.506160736083984
    5. ')' → logprob: -10.756160736083984
    6. ' ' → logprob: -11.006160736083984
    7. '```' → logprob: -12.256160736083984
    8. ' ,' → logprob: -12.256160736083984
    9. '_' → logprob: -12.756160736083984
    10. '<|end|>' → logprob: -13.131160736083984

Token 11: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0022265026345849037
    2. 'map' → logprob: -6.12722635269165
    3. ' ' → logprob: -10.377226829528809
    4. '0' → logprob: -12.127226829528809
    5. ' int' → logprob: -13.377226829528809
    6. ' input' → logprob: -13.502226829528809
    7. ' list' → logprob: -14.002226829528809
    8. '	map' → logprob: -15.002226829528809
    9. ' tuple' → logprob: -15.377226829528809
    10. '(map' → logprob: -16.002225875854492

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07284781336784363
    2. '(' → logprob: -2.697847843170166
    3. '(str' → logprob: -6.197847843170166
    4. 'int' → logprob: -7.822847843170166
    5. '(lambda' → logprob: -7.822847843170166
    6. '[int' → logprob: -10.822847366333008
    7. '```' → logprob: -11.572847366333008
    8. '<int' → logprob: -11.947847366333008
    9. 'str' → logprob: -12.072847366333008
    10. '=int' → logprob: -12.322847366333008

Token 13: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12157278507947922
    2. ',' → logprob: -2.621572732925415
    3. '```' → logprob: -4.496572971343994
    4. '(input' → logprob: -4.746572971343994
    5. '(int' → logprob: -5.121572971343994
    6. '(' → logprob: -5.371572971343994
    7. 'input' → logprob: -5.746572971343994
    8. '<|end|>' → logprob: -5.871572971343994
    9. ',input' → logprob: -6.871572971343994
    10. ')(' → logprob: -6.996572971343994

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38695913553237915
    2. ' input' → logprob: -1.1369590759277344
    3. ')' → logprob: -9.386959075927734
    4. ' )' → logprob: -12.886959075927734
    5. '(input' → logprob: -13.886959075927734
    6. '=input' → logprob: -14.886959075927734
    7. ',input' → logprob: -15.511959075927734
    8. 'str' → logprob: -17.011959075927734
    9. '	input' → logprob: -17.136959075927734
    10. '```' → logprob: -17.136959075927734

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.43818995356559753
    2. '()' → logprob: -1.93818998336792
    3. '())' → logprob: -2.18818998336792
    4. ')' → logprob: -2.43818998336792
    5. '(' → logprob: -5.18818998336792
    6. '`()' → logprob: -6.31318998336792
    7. '('' → logprob: -7.68818998336792
    8. '`)' → logprob: -7.93818998336792
    9. '```' → logprob: -7.93818998336792
    10. '))' → logprob: -8.063189506530762

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007131471065804362
    2. 'strip' → logprob: -7.250713348388672
    3. 'rstrip' → logprob: -12.875713348388672
    4. '(split' → logprob: -14.875713348388672
    5. ' split' → logprob: -15.750713348388672
    6. 'read' → logprob: -16.375713348388672
    7. ')' → logprob: -17.750713348388672
    8. 'spl' → logprob: -17.750713348388672
    9. '```' → logprob: -19.000713348388672
    10. 'startswith' → logprob: -19.000713348388672

Token 17: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030099764466285706
    2. '))' → logprob: -3.780099868774414
    3. '())' → logprob: -5.030099868774414
    4. '()' → logprob: -8.655099868774414
    5. '()))' → logprob: -10.530099868774414
    6. '`)' → logprob: -10.780099868774414
    7. '(' → logprob: -11.405099868774414
    8. ')))' → logprob: -11.530099868774414
    9. '),' → logprob: -11.780099868774414
    10. '>)' → logprob: -11.905099868774414

Token 18: 'adj' (ID: 57001)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.010382885113358498
    2. 'tree' → logprob: -5.010382652282715
    3. 'edges' → logprob: -6.135382652282715
    4. ' graph' → logprob: -7.510382652282715
    5. 'nodes' → logprob: -7.885382652282715
    6. 'adj' → logprob: -8.635382652282715
    7. 'parent' → logprob: -8.885382652282715
    8. 'neighbors' → logprob: -9.760382652282715
    9. '```' → logprob: -9.760382652282715
    10. ' edges' → logprob: -10.635382652282715

Token 19: 'acency' (ID: 118557)
  Prédit: 'acency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.0996113047003746
    2. '[' → logprob: -2.599611282348633
    3. 'acent' → logprob: -4.349611282348633
    4. ' =' → logprob: -5.349611282348633
    5. '=' → logprob: -6.599611282348633
    6. '_list' → logprob: -7.974611282348633
    7. '_' → logprob: -8.474611282348633
    8. 'ac' → logprob: -8.599611282348633
    9. '[]' → logprob: -8.599611282348633
    10. '[u' → logprob: -8.599611282348633

Token 20: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.23101617395877838
    2. '[' → logprob: -2.231016159057617
    3. '_' → logprob: -2.481016159057617
    4. '_lists' → logprob: -5.356016159057617
    5. ' =' → logprob: -5.481016159057617
    6. '=' → logprob: -6.231016159057617
    7. '[]' → logprob: -6.481016159057617
    8. 'List' → logprob: -6.981016159057617
    9. '[_' → logprob: -8.106016159057617
    10. ')' → logprob: -8.231016159057617

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01417714636772871
    2. '=' → logprob: -4.264177322387695
    3. '[' → logprob: -11.389177322387695
    4. ' =[' → logprob: -14.639177322387695
    5. 's' → logprob: -14.889177322387695
    6. '=[]' → logprob: -14.889177322387695
    7. '[:]' → logprob: -15.014177322387695
    8. '[]' → logprob: -15.389177322387695
    9. ' ' → logprob: -15.514177322387695
    10. ')' → logprob: -16.389177322387695

Token 22: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02607198804616928
    2. ' [[]' → logprob: -3.7760720252990723
    3. ' [' → logprob: -6.026072025299072
    4. '{' → logprob: -8.276071548461914
    5. '[]' → logprob: -9.651071548461914
    6. '{}' → logprob: -10.401071548461914
    7. 'default' → logprob: -10.776071548461914
    8. ' {' → logprob: -11.401071548461914
    9. ' defaultdict' → logprob: -11.401071548461914
    10. '[:]' → logprob: -11.526071548461914

Token 23: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04463966190814972
    2. '[node' → logprob: -3.6696395874023438
    3. ']' → logprob: -4.794639587402344
    4. '(node' → logprob: -5.044639587402344
    5. 'for' → logprob: -6.669639587402344
    6. ' for' → logprob: -7.544639587402344
    7. ',' → logprob: -7.544639587402344
    8. ')]' → logprob: -8.294639587402344
    9. '[' → logprob: -8.419639587402344
    10. '])' → logprob: -8.544639587402344

Token 24: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7734981179237366
    2. ' range' → logprob: -0.7734981179237366
    3. ' _' → logprob: -2.648498058319092
    4. 'range' → logprob: -5.273498058319092
    5. ' ' → logprob: -7.398498058319092
    6. '_range' → logprob: -7.523498058319092
    7. ' in' → logprob: -9.64849853515625
    8. '(range' → logprob: -9.64849853515625
    9. ' i' → logprob: -11.02349853515625
    10. ' the' → logprob: -11.77349853515625

Token 25: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4294785261154175
    2. ' in' → logprob: -1.0544785261154175
    3. 'range' → logprob: -7.304478645324707
    4. '(' → logprob: -9.554478645324707
    5. '(range' → logprob: -11.429478645324707
    6. ' ' → logprob: -11.554478645324707
    7. ' range' → logprob: -12.304478645324707
    8. 'node' → logprob: -12.429478645324707
    9. '(node' → logprob: -14.179478645324707
    10. ' (' → logprob: -14.304478645324707

Token 26: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009148012613877654
    2. ' range' → logprob: -7.000914573669434
    3. '(range' → logprob: -12.625914573669434
    4. ')' → logprob: -18.37591552734375
    5. '	range' → logprob: -19.12591552734375
    6. 'node' → logprob: -19.87591552734375
    7. '(' → logprob: -20.25091552734375
    8. ' ' → logprob: -21.00091552734375
    9. '0' → logprob: -21.12591552734375
    10. '_range' → logprob: -21.12591552734375

Token 27: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -9.65101717156358e-05
    2. '(' → logprob: -9.250096321105957
    3. '(n' → logprob: -14.875096321105957
    4. ' (' → logprob: -17.375097274780273
    5. 'node' → logprob: -17.625097274780273
    6. '(nodes' → logprob: -18.125097274780273
    7. ' node' → logprob: -19.625097274780273
    8. '(
' → logprob: -20.375097274780273
    9. '(num' → logprob: -20.500097274780273
    10. '(Node' → logprob: -20.625097274780273

Token 28: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.659005157416686e-05
    2. '_s' → logprob: -10.625066757202148
    3. ')_' → logprob: -10.625066757202148
    4. 's' → logprob: -11.250066757202148
    5. ' _' → logprob: -13.500066757202148
    6. '_counts' → logprob: -14.125066757202148
    7. ']_' → logprob: -14.375066757202148
    8. ')' → logprob: -14.500066757202148
    9. '_' → logprob: -15.000066757202148
    10. '_cnt' → logprob: -15.375066757202148

Token 29: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.723352049040841e-06
    2. ')' → logprob: -13.125004768371582
    3. ']' → logprob: -13.125004768371582
    4. ' )' → logprob: -15.125004768371582
    5. ')],' → logprob: -16.125003814697266
    6. '])]' → logprob: -16.250003814697266
    7. '])' → logprob: -16.375003814697266
    8. ')])' → logprob: -16.500003814697266
    9. ')]
' → logprob: -16.875003814697266
    10. '')]' → logprob: -17.375003814697266

Token 30: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00861468818038702
    2. ' ' → logprob: -4.758614540100098
    3. '```' → logprob: -16.508615493774414
    4. ')' → logprob: -17.633615493774414
    5. '2' → logprob: -18.008615493774414
    6. ' ' → logprob: -18.383615493774414
    7. '0' → logprob: -18.758615493774414
    8. '   ' → logprob: -19.383615493774414
    9. '`' → logprob: -19.696115493774414
    10. ' )' → logprob: -19.946115493774414

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -18.000001907348633
    4. '2' → logprob: -20.125001907348633
    5. '0' → logprob: -20.125001907348633
    6. '   ' → logprob: -20.250001907348633
    7. ')' → logprob: -20.375001907348633
    8. '(' → logprob: -20.875001907348633
    9. '``' → logprob: -22.000001907348633
    10. '`' → logprob: -22.250001907348633

Token 32: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006905130576342344
    2. ']' → logprob: -7.875690460205078
    3. ')' → logprob: -8.250690460205078
    4. '])' → logprob: -10.250690460205078
    5. '])]' → logprob: -11.625690460205078
    6. ')])' → logprob: -12.625690460205078
    7. ' )' → logprob: -14.500690460205078
    8. ')],' → logprob: -14.750690460205078
    9. ' ]' → logprob: -15.625690460205078
    10. '')]' → logprob: -15.750690460205078

Token 33: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004341261519584805
    2. ' for' → logprob: -7.750433921813965
    3. 'query' → logprob: -13.625433921813965
    4. '```' → logprob: -13.625433921813965
    5. '
' → logprob: -15.625433921813965
    6. '<|end|>' → logprob: -15.625433921813965
    7. '	for' → logprob: -15.875433921813965
    8. 'queries' → logprob: -16.12543487548828
    9. 'For' → logprob: -16.25043487548828
    10. 'n' → logprob: -16.75043487548828

Token 34: ' edge' (ID: 11165)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5370599031448364
    2. ' _' → logprob: -1.1620599031448364
    3. ' i' → logprob: -2.537059783935547
    4. ' ' → logprob: -3.787059783935547
    5. ' range' → logprob: -7.662059783935547
    6. ' node' → logprob: -8.912059783935547
    7. 'i' → logprob: -9.162059783935547
    8. ' ' → logprob: -9.537059783935547
    9. '  ' → logprob: -9.912059783935547
    10. ' in' → logprob: -9.912059783935547

Token 35: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17385610938072205
    2. '_' → logprob: -1.9238561391830444
    3. '_in' → logprob: -5.548856258392334
    4. 'in' → logprob: -5.798856258392334
    5. '_index' → logprob: -6.423856258392334
    6. '_i' → logprob: -6.548856258392334
    7. '_count' → logprob: -6.798856258392334
    8. ' _' → logprob: -7.173856258392334
    9. '_idx' → logprob: -7.298856258392334
    10. 's' → logprob: -8.548855781555176

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014246364124119282
    2. 'in' → logprob: -4.264246463775635
    3. ' ' → logprob: -9.514245986938477
    4. ',' → logprob: -12.514245986938477
    5. '_' → logprob: -12.889245986938477
    6. 's' → logprob: -15.014245986938477
    7. 'range' → logprob: -15.139245986938477
    8. ')' → logprob: -15.264245986938477
    9. '_in' → logprob: -15.264245986938477
    10. '```' → logprob: -15.389245986938477

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029751179739832878
    2. 'range' → logprob: -3.5297510623931885
    3. ' ' → logprob: -14.52975082397461
    4. '	range' → logprob: -15.40475082397461
    5. '(range' → logprob: -17.77975082397461
    6. '  ' → logprob: -18.52975082397461
    7. '_' → logprob: -19.02975082397461
    8. '_range' → logprob: -19.02975082397461
    9. ' ' → logprob: -20.15475082397461
    10. ' xrange' → logprob: -20.90475082397461

Token 38: '(node' (ID: 13356)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006732660811394453
    2. '(node' → logprob: -5.00673246383667
    3. ' (' → logprob: -11.381732940673828
    4. '(
' → logprob: -12.131732940673828
    5. '(

' → logprob: -15.381732940673828
    6. '(n' → logprob: -16.881732940673828
    7. ' node' → logprob: -17.006732940673828
    8. '(nodes' → logprob: -17.256732940673828
    9. '1' → logprob: -17.631732940673828
    10. '(int' → logprob: -18.006732940673828

Token 39: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.980854959692806e-05
    2. '_' → logprob: -9.750069618225098
    3. ')_' → logprob: -12.500069618225098
    4. ' _' → logprob: -13.375069618225098
    5. '_counts' → logprob: -13.375069618225098
    6. '_c' → logprob: -13.750069618225098
    7. ')' → logprob: -13.875069618225098
    8. '_COUNT' → logprob: -14.375069618225098
    9. '```' → logprob: -14.750069618225098
    10. '_)' → logprob: -15.125069618225098

Token 40: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05596420541405678
    2. '-' → logprob: -2.930964231491089
    3. '):' → logprob: -7.30596399307251
    4. ')' → logprob: -8.055964469909668
    5. ' ):' → logprob: -9.930964469909668
    6. ' )' → logprob: -10.680964469909668
    7. '):
' → logprob: -11.430964469909668
    8. '1' → logprob: -12.805964469909668
    9. ' ' → logprob: -12.805964469909668
    10. ' ):
' → logprob: -13.680964469909668

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0059290360659360886
    2. ' ' → logprob: -5.130928993225098
    3. '<|end|>' → logprob: -16.005929946899414
    4. '2' → logprob: -16.255929946899414
    5. '```' → logprob: -17.005929946899414
    6. '0' → logprob: -17.755929946899414
    7. '   ' → logprob: -18.255929946899414
    8. ')' → logprob: -18.380929946899414
    9. ' ' → logprob: -18.630929946899414
    10. '<|end|>' → logprob: -18.755929946899414

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -18.500001907348633
    4. '2' → logprob: -18.875001907348633
    5. ')' → logprob: -19.500001907348633
    6. '１' → logprob: -19.625001907348633
    7. '۱' → logprob: -19.875001907348633
    8. '0' → logprob: -20.250001907348633
    9. '১' → logprob: -20.500001907348633
    10. '१' → logprob: -20.625001907348633

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014038024237379432
    2. ')' → logprob: -7.50140380859375
    3. ' ):' → logprob: -7.62640380859375
    4. ':' → logprob: -8.37640380859375
    5. '):
' → logprob: -9.00140380859375
    6. ']:' → logprob: -12.00140380859375
    7. ' )' → logprob: -13.62640380859375
    8. '```' → logprob: -14.50140380859375
    9. '):
' → logprob: -14.62640380859375
    10. ' ' → logprob: -15.12640380859375

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21531760692596436
    2. ' 
' → logprob: -2.340317726135254
    3. '    
' → logprob: -3.215317726135254
    4. '```' → logprob: -4.215317726135254
    5. ' node' → logprob: -4.340317726135254
    6. ' input' → logprob: -4.715317726135254
    7. '<|end|>' → logprob: -5.590317726135254
    8. ' ' → logprob: -5.840317726135254
    9. '   
' → logprob: -6.215317726135254
    10. '    ' → logprob: -6.340317726135254

Token 45: ' node' (ID: 4596)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.005676703527569771
    2. 'u' → logprob: -5.380676746368408
    3. ' node' → logprob: -7.255676746368408
    4. ' parent' → logprob: -9.13067626953125
    5. ' edge' → logprob: -9.88067626953125
    6. ' line' → logprob: -10.00567626953125
    7. ' from' → logprob: -10.38067626953125
    8. ' a' → logprob: -10.50567626953125
    9. ' start' → logprob: -10.88067626953125
    10. ' source' → logprob: -10.88067626953125

Token 46: '_a' (ID: 10852)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1857464760541916
    2. 's' → logprob: -2.435746431350708
    3. '_' → logprob: -2.935746431350708
    4. '_a' → logprob: -4.310746669769287
    5. '_u' → logprob: -5.310746669769287
    6. ',' → logprob: -6.310746669769287
    7. 'A' → logprob: -6.310746669769287
    8. '_from' → logprob: -6.560746669769287
    9. ')' → logprob: -7.060746669769287
    10. ' =' → logprob: -7.060746669769287

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6344965100288391
    2. ' ,' → logprob: -0.7594965100288391
    3. '<|end|>' → logprob: -6.634496688842773
    4. ')' → logprob: -8.134496688842773
    5. '<|end|>' → logprob: -9.509496688842773
    6. ' ' → logprob: -10.384496688842773
    7. '.' → logprob: -10.509496688842773
    8. '.append' → logprob: -10.884496688842773
    9. ' .' → logprob: -11.134496688842773
    10. ' )' → logprob: -11.134496688842773

Token 48: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.014622355811297894
    2. 'node' → logprob: -4.264622211456299
    3. ' ' → logprob: -7.889622211456299
    4. '<|end|>' → logprob: -9.764622688293457
    5. '	node' → logprob: -12.139622688293457
    6. ',node' → logprob: -12.264622688293457
    7. '=node' → logprob: -12.264622688293457
    8. ' space' → logprob: -13.264622688293457
    9. ' ' → logprob: -13.264622688293457
    10. 'space' → logprob: -13.264622688293457

Token 49: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0060219415463507175
    2. '_' → logprob: -5.131021976470947
    3. '_a' → logprob: -9.631021499633789
    4. 'b' → logprob: -11.631021499633789
    5. '<|end|>' → logprob: -12.006021499633789
    6. '_c' → logprob: -12.506021499633789
    7. ' _' → logprob: -12.756021499633789
    8. '<|end|>' → logprob: -13.381021499633789
    9. '```' → logprob: -14.131021499633789
    10. '_=' → logprob: -14.381021499633789

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300365224480629
    2. '=' → logprob: -3.168003559112549
    3. ',' → logprob: -13.293004035949707
    4. ' ' → logprob: -13.668004035949707
    5. ')' → logprob: -14.043004035949707
    6. '=input' → logprob: -14.918004035949707
    7. '   ' → logprob: -15.418004035949707
    8. ' =
' → logprob: -15.793004035949707
    9. '    ' → logprob: -17.04300308227539
    10. ' ,' → logprob: -17.16800308227539

Token 51: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.00043138445471413434
    2. 'map' → logprob: -7.750431537628174
    3. '	map' → logprob: -15.000431060791016
    4. ' list' → logprob: -16.125431060791016
    5. ' input' → logprob: -16.875431060791016
    6. ' mapa' → logprob: -17.000431060791016
    7. ' ' → logprob: -17.125431060791016
    8. ' ' → logprob: -17.375431060791016
    9. '.map' → logprob: -17.875431060791016
    10. '(map' → logprob: -18.375431060791016

Token 52: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003802680876106024
    2. '(' → logprob: -8.000380516052246
    3. '<int' → logprob: -10.875380516052246
    4. 'int' → logprob: -11.125380516052246
    5. '=int' → logprob: -12.625380516052246
    6. '[int' → logprob: -13.000380516052246
    7. '(str' → logprob: -13.625380516052246
    8. '(input' → logprob: -13.875380516052246
    9. '<|end|>' → logprob: -14.000380516052246
    10. ',int' → logprob: -14.125380516052246

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10150368511676788
    2. '(input' → logprob: -2.851503610610962
    3. ',input' → logprob: -3.601503610610962
    4. ')' → logprob: -5.351503849029541
    5. 'input' → logprob: -5.601503849029541
    6. '(' → logprob: -5.851503849029541
    7. '=input' → logprob: -9.976503372192383
    8. '(),' → logprob: -10.601503372192383
    9. ' ,' → logprob: -10.851503372192383
    10. ' input' → logprob: -10.851503372192383

Token 54: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868713676929474
    2. ' input' → logprob: -1.136871337890625
    3. ')' → logprob: -16.511871337890625
    4. ' ' → logprob: -16.636871337890625
    5. '	input' → logprob: -16.636871337890625
    6. '=input' → logprob: -16.636871337890625
    7. '(input' → logprob: -17.261871337890625
    8. ',input' → logprob: -17.511871337890625
    9. '<input' → logprob: -17.886871337890625
    10. '_input' → logprob: -18.636871337890625

Token 55: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00018399098189547658
    2. '()' → logprob: -8.625184059143066
    3. ')' → logprob: -13.375184059143066
    4. '.' → logprob: -13.875184059143066
    5. ' ().' → logprob: -13.875184059143066
    6. '()
' → logprob: -15.000184059143066
    7. '(' → logprob: -15.125184059143066
    8. '.readline' → logprob: -15.625184059143066
    9. ' .' → logprob: -16.37518310546875
    10. '.split' → logprob: -16.37518310546875

Token 56: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. '(split' → logprob: -15.375000953674316
    3. ' split' → logprob: -15.500000953674316
    4. 'strip' → logprob: -16.75
    5. 'spl' → logprob: -16.75
    6. ')' → logprob: -17.625
    7. 'plit' → logprob: -18.125
    8. '_split' → logprob: -19.75
    9. 'rstrip' → logprob: -20.375
    10. 's' → logprob: -20.75

Token 57: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5830397009849548
    2. ')' → logprob: -0.8330397009849548
    3. '()' → logprob: -5.2080397605896
    4. '))' → logprob: -6.5830397605896
    5. '()))' → logprob: -9.708039283752441
    6. '(' → logprob: -10.083039283752441
    7. '())
' → logprob: -10.083039283752441
    8. '`)' → logprob: -10.208039283752441
    9. ')`' → logprob: -11.708039283752441
    10. '')' → logprob: -11.958039283752441

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013459247536957264
    2. '    
' → logprob: -4.888459205627441
    3. '```' → logprob: -5.888459205627441
    4. '
' → logprob: -6.513459205627441
    5. '<|end|>' → logprob: -7.888459205627441
    6. ' adjacency' → logprob: -8.138459205627441
    7. '``' → logprob: -8.388459205627441
    8. '  
' → logprob: -8.763459205627441
    9. ' 
' → logprob: -8.763459205627441
    10. '   
' → logprob: -9.263459205627441

Token 59: ' adjacency' (ID: 177015)
  Prédit: ' adjacency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.08036120235919952
    2. '   ' → logprob: -3.4553611278533936
    3. 'adj' → logprob: -3.5803611278533936
    4. '    
' → logprob: -4.580361366271973
    5. ' 
' → logprob: -5.080361366271973
    6. '
' → logprob: -7.705361366271973
    7. '   
' → logprob: -8.330361366271973
    8. '```' → logprob: -8.330361366271973
    9. '  
' → logprob: -9.330361366271973
    10. ' adj' → logprob: -10.080361366271973

Token 60: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.512236498361744e-07
    2. '[_' → logprob: -15.625000953674316
    3. '_lists' → logprob: -16.75
    4. '_' → logprob: -17.0
    5. 'List' → logprob: -17.0
    6. ' _' → logprob: -17.0
    7. '```' → logprob: -17.0
    8. 's' → logprob: -17.375
    9. '_lst' → logprob: -17.875
    10. '_line' → logprob: -18.5

Token 61: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.1517960956552997e-05
    2. '[' → logprob: -11.375011444091797
    3. '[user' → logprob: -17.500011444091797
    4. '[token' → logprob: -18.875011444091797
    5. '[
' → logprob: -19.500011444091797
    6. '```' → logprob: -19.750011444091797
    7. '[cell' → logprob: -19.750011444091797
    8. '[word' → logprob: -20.125011444091797
    9. '[int' → logprob: -20.750011444091797
    10. '[line' → logprob: -20.750011444091797

Token 62: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -5.319370302458992e-06
    2. '_' → logprob: -12.625005722045898
    3. 'a' → logprob: -13.875005722045898
    4. ' _' → logprob: -15.000005722045898
    5. '_b' → logprob: -15.250005722045898
    6. '[_' → logprob: -16.2500057220459
    7. ')_' → logprob: -16.6250057220459
    8. '```' → logprob: -16.8750057220459
    9. ']_' → logprob: -17.0000057220459
    10. '[' → logprob: -17.6250057220459

Token 63: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.3403952419757843
    2. '.append' → logprob: -1.340395212173462
    3. '.' → logprob: -3.715395212173462
    4. ').' → logprob: -6.215395450592041
    5. ']' → logprob: -8.590394973754883
    6. '[' → logprob: -9.090394973754883
    7. ' .' → logprob: -10.465394973754883
    8. '.Append' → logprob: -11.215394973754883
    9. '.setdefault' → logprob: -11.215394973754883
    10. '[].' → logprob: -11.465394973754883

Token 64: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.25
    3. '.append' → logprob: -16.75
    4. 'Append' → logprob: -17.75
    5. '_append' → logprob: -18.125
    6. 'appen' → logprob: -18.625
    7. '	append' → logprob: -19.5
    8. '```' → logprob: -19.875
    9. 'app' → logprob: -20.875
    10. 'add' → logprob: -20.875

Token 65: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.00015872348740231246
    2. '(' → logprob: -8.750158309936523
    3. 'node' → logprob: -15.625158309936523
    4. '(
' → logprob: -17.000158309936523
    5. ' (' → logprob: -17.375158309936523
    6. ' node' → logprob: -18.250158309936523
    7. '(Node' → logprob: -18.500158309936523
    8. '((' → logprob: -19.875158309936523
    9. ',node' → logprob: -20.000158309936523
    10. '(n' → logprob: -20.750158309936523

Token 66: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.15441757265944e-05
    2. '_a' → logprob: -10.375031471252441
    3. ')_' → logprob: -15.625031471252441
    4. '_' → logprob: -15.875031471252441
    5. '_)' → logprob: -18.000032424926758
    6. ' _' → logprob: -18.125032424926758
    7. '"_' → logprob: -18.625032424926758
    8. ')' → logprob: -18.875032424926758
    9. '}_' → logprob: -19.250032424926758
    10. '```' → logprob: -20.375032424926758

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.194110756041482e-05
    2. ' )' → logprob: -9.875061988830566
    3. ')
' → logprob: -12.000061988830566
    4. '   ' → logprob: -12.500061988830566
    5. '<|end|>' → logprob: -15.375061988830566
    6. '),' → logprob: -15.750061988830566
    7. ')

' → logprob: -17.50006103515625
    8. ')}' → logprob: -17.75006103515625
    9. ')#' → logprob: -17.87506103515625
    10. ' ' → logprob: -18.12506103515625

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012198820477351546
    2. '    
' → logprob: -7.251219749450684
    3. '<|end|>' → logprob: -8.126219749450684
    4. ' adjacency' → logprob: -9.876219749450684
    5. ' ' → logprob: -10.001219749450684
    6. '  
' → logprob: -10.626219749450684
    7. '    ' → logprob: -10.751219749450684
    8. ' 
' → logprob: -10.876219749450684
    9. '  ' → logprob: -11.001219749450684
    10. '```' → logprob: -11.376219749450684

Token 69: ' adjacency' (ID: 177015)
  Prédit: ' adjacency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.3649750053882599
    2. 'adj' → logprob: -1.2399749755859375
    3. '   ' → logprob: -4.1149749755859375
    4. 'ad' → logprob: -10.239974975585938
    5. ' adj' → logprob: -11.114974975585938
    6. '.ad' → logprob: -12.864974975585938
    7. 'Adj' → logprob: -12.864974975585938
    8. 'space' → logprob: -12.989974975585938
    9. '    ' → logprob: -13.114974975585938
    10. ' ' → logprob: -13.364974975585938

Token 70: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.088346359931165e-07
    2. 'List' → logprob: -14.250000953674316
    3. '```' → logprob: -16.0
    4. '_' → logprob: -17.125
    5. '[_' → logprob: -17.375
    6. '_s' → logprob: -17.875
    7. 'list' → logprob: -18.125
    8. '_LIST' → logprob: -18.625
    9. ' _' → logprob: -18.75
    10. '[' → logprob: -18.875

Token 71: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -9.253090865968261e-06
    2. '[' → logprob: -11.625009536743164
    3. '[user' → logprob: -15.750009536743164
    4. '_node' → logprob: -17.250009536743164
    5. '_[' → logprob: -18.125009536743164
    6. '(node' → logprob: -18.250009536743164
    7. 'node' → logprob: -18.250009536743164
    8. '[_' → logprob: -18.375009536743164
    9. '[
' → logprob: -18.625009536743164
    10. '```' → logprob: -19.125009536743164

Token 72: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0019306590547785163
    2. '_a' → logprob: -6.2519307136535645
    3. 'a' → logprob: -13.876930236816406
    4. '_' → logprob: -14.751930236816406
    5. 'b' → logprob: -15.251930236816406
    6. ']_' → logprob: -17.001930236816406
    7. 's' → logprob: -17.126930236816406
    8. ')_' → logprob: -17.126930236816406
    9. '<|end|>' → logprob: -17.251930236816406
    10. 'A' → logprob: -17.251930236816406

Token 73: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0810016617178917
    2. '].' → logprob: -2.7060017585754395
    3. ')' → logprob: -5.2060017585754395
    4. '.append' → logprob: -5.3310017585754395
    5. '.' → logprob: -7.4560017585754395
    6. ']' → logprob: -10.706001281738281
    7. '}.' → logprob: -10.706001281738281
    8. '[' → logprob: -10.956001281738281
    9. '   ' → logprob: -11.331001281738281
    10. '`.' → logprob: -12.581001281738281

Token 74: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. 'appen' → logprob: -15.75
    3. ' append' → logprob: -17.75
    4. '.append' → logprob: -17.875
    5. '	append' → logprob: -18.5
    6. 'adj' → logprob: -21.0
    7. 'add' → logprob: -21.125
    8. 'app' → logprob: -21.375
    9. '_append' → logprob: -21.625
    10. '```' → logprob: -22.625

Token 75: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0007111206650733948
    2. '(' → logprob: -7.250710964202881
    3. '(
' → logprob: -14.250711441040039
    4. '(Node' → logprob: -15.250711441040039
    5. ' (' → logprob: -16.87571144104004
    6. '(nodes' → logprob: -18.12571144104004
    7. '(n' → logprob: -18.50071144104004
    8. '[node' → logprob: -19.50071144104004
    9. ')' → logprob: -19.50071144104004
    10. '(
' → logprob: -19.62571144104004

Token 76: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.020268576219677925
    2. '_)' → logprob: -4.020268440246582
    3. '_' → logprob: -6.395268440246582
    4. ')' → logprob: -7.895268440246582
    5. '_b' → logprob: -9.645268440246582
    6. ')_' → logprob: -12.145268440246582
    7. '_]' → logprob: -13.145268440246582
    8. 'a' → logprob: -13.645268440246582
    9. '_)
' → logprob: -14.520268440246582
    10. '__)' → logprob: -15.395268440246582

Token 77: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3795937522663735e-05
    2. ')
' → logprob: -10.75002384185791
    3. ' )' → logprob: -13.12502384185791
    4. '   ' → logprob: -15.75002384185791
    5. '`)' → logprob: -17.500022888183594
    6. ')

' → logprob: -18.125022888183594
    7. ')
' → logprob: -18.750022888183594
    8. '```' → logprob: -19.000022888183594
    9. ')`' → logprob: -19.125022888183594
    10. '),' → logprob: -19.250022888183594

Token 78: 'value' (ID: 1594)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6846528053283691
    2. 'distance' → logprob: -1.1846528053283691
    3. 'dist' → logprob: -1.6846528053283691
    4. 'level' → logprob: -6.684652805328369
    5. 'depth' → logprob: -7.059652805328369
    6. 'def' → logprob: -7.309652805328369
    7. 'levels' → logprob: -7.309652805328369
    8. 'parent' → logprob: -8.559652328491211
    9. '```' → logprob: -8.559652328491211
    10. 'color' → logprob: -9.184652328491211

Token 79: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008581006550230086
    2. '_' → logprob: -7.625858306884766
    3. '_s' → logprob: -8.125858306884766
    4. '_values' → logprob: -10.500858306884766
    5. '_array' → logprob: -11.625858306884766
    6. '_list' → logprob: -11.625858306884766
    7. ' =' → logprob: -11.625858306884766
    8. ' s' → logprob: -11.875858306884766
    9. '[]' → logprob: -12.500858306884766
    10. '[' → logprob: -12.875858306884766

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004796307533979416
    2. '=' → logprob: -5.504796504974365
    3. '[' → logprob: -7.379796504974365
    4. '_' → logprob: -10.004796028137207
    5. ' =[' → logprob: -10.879796028137207
    6. ' ' → logprob: -11.504796028137207
    7. '[:]' → logprob: -11.629796028137207
    8. 's' → logprob: -12.129796028137207
    9. ' =
' → logprob: -14.004796028137207
    10. '[]' → logprob: -14.379796028137207

Token 81: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5778764486312866
    2. ' [' → logprob: -1.0778764486312866
    3. '[' → logprob: -2.952876567840576
    4. 'list' → logprob: -3.202876567840576
    5. '[list' → logprob: -5.202876567840576
    6. ' []' → logprob: -9.577876091003418
    7. '[int' → logprob: -9.827876091003418
    8. '[]' → logprob: -9.952876091003418
    9. '[input' → logprob: -11.452876091003418
    10. '=list' → logprob: -11.702876091003418

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002775393659248948
    2. ' ' → logprob: -6.127775192260742
    3. 'int' → logprob: -7.627775192260742
    4. ' int' → logprob: -9.377775192260742
    5. ' 
' → logprob: -11.627775192260742
    6. ']' → logprob: -13.002775192260742
    7. 'None' → logprob: -13.627775192260742
    8. ' ]' → logprob: -13.752775192260742
    9. ' None' → logprob: -13.877775192260742
    10. ')' → logprob: -14.127775192260742

Token 83: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.034334056079387665
    2. ' ]' → logprob: -3.4093339443206787
    3. ' for' → logprob: -7.909334182739258
    4. ',' → logprob: -9.034334182739258
    5. ']+' → logprob: -9.034334182739258
    6. ']*' → logprob: -10.534334182739258
    7. 'for' → logprob: -10.784334182739258
    8. ']*(' → logprob: -11.159334182739258
    9. ' ' → logprob: -11.784334182739258
    10. ')' → logprob: -12.159334182739258

Token 84: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32362794876098633
    2. ' ' → logprob: -2.0736279487609863
    3. ' _' → logprob: -2.0736279487609863
    4. ' range' → logprob: -3.8236279487609863
    5. ' (' → logprob: -6.573627948760986
    6. ' i' → logprob: -7.948627948760986
    7. '(range' → logprob: -7.948627948760986
    8. '_range' → logprob: -8.073627471923828
    9. '<|end|>' → logprob: -8.448627471923828
    10. '(' → logprob: -8.823627471923828

Token 85: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08108597993850708
    2. ' range' → logprob: -2.5810859203338623
    3. ' in' → logprob: -6.456086158752441
    4. '_' → logprob: -8.206086158752441
    5. ' _' → logprob: -9.081086158752441
    6. ' ' → logprob: -9.581086158752441
    7. '(range' → logprob: -9.706086158752441
    8. 'in' → logprob: -10.081086158752441
    9. '_range' → logprob: -10.081086158752441
    10. '	range' → logprob: -11.206086158752441

Token 86: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31330832839012146
    2. 'range' → logprob: -1.3133083581924438
    3. ' ' → logprob: -11.188308715820312
    4. 'r' → logprob: -12.313308715820312
    5. '_' → logprob: -12.313308715820312
    6. ' ran' → logprob: -12.563308715820312
    7. '	range' → logprob: -12.688308715820312
    8. ' rang' → logprob: -12.813308715820312
    9. 'rang' → logprob: -13.063308715820312
    10. 'ran' → logprob: -13.063308715820312

Token 87: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.002850521355867386
    2. 'range' → logprob: -6.752850532531738
    3. '(' → logprob: -7.377850532531738
    4. ' range' → logprob: -7.627850532531738
    5. ' (' → logprob: -8.127850532531738
    6. '(range' → logprob: -8.877850532531738
    7. ' node' → logprob: -9.502850532531738
    8. 'node' → logprob: -9.877850532531738
    9. '(value' → logprob: -13.252850532531738
    10. ')' → logprob: -13.502850532531738

Token 88: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0012151175178587437
    2. '_' → logprob: -6.751214981079102
    3. ' _' → logprob: -10.501214981079102
    4. 'count' → logprob: -12.251214981079102
    5. '_co' → logprob: -12.626214981079102
    6. '_counts' → logprob: -13.126214981079102
    7. '_c' → logprob: -13.376214981079102
    8. ')' → logprob: -13.626214981079102
    9. '_s' → logprob: -14.251214981079102
    10. '_list' → logprob: -14.376214981079102

Token 89: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2326434701681137
    2. ' +' → logprob: -1.607643485069275
    3. ')]' → logprob: -4.9826436042785645
    4. ' )' → logprob: -8.607643127441406
    5. ')' → logprob: -8.982643127441406
    6. '+
' → logprob: -10.982643127441406
    7. ' +
' → logprob: -11.232643127441406
    8. ' ' → logprob: -12.482643127441406
    9. ' ]' → logprob: -13.232643127441406
    10. '1' → logprob: -14.107643127441406

Token 90: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004624868277460337
    2. ' ' → logprob: -5.379624843597412
    3. ')' → logprob: -12.87962532043457
    4. '```' → logprob: -14.37962532043457
    5. '2' → logprob: -14.50462532043457
    6. ' )' → logprob: -14.62962532043457
    7. '<|end|>' → logprob: -15.62962532043457
    8. ' ' → logprob: -16.00462532043457
    9. '
' → logprob: -16.37962532043457
    10. ' 
' → logprob: -16.94212532043457

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002087853499688208
    2. ' ' → logprob: -8.500208854675293
    3. ')' → logprob: -12.875208854675293
    4. '```' → logprob: -14.437708854675293
    5. '2' → logprob: -14.562708854675293
    6. ' )' → logprob: -15.437708854675293
    7. ')]' → logprob: -15.562708854675293
    8. '   ' → logprob: -15.750208854675293
    9. '

' → logprob: -16.000207901000977
    10. '１' → logprob: -16.125207901000977

Token 92: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4031158685684204
    2. ']' → logprob: -1.1531158685684204
    3. ')' → logprob: -4.153115749359131
    4. ']
' → logprob: -8.528116226196289
    5. ' ]' → logprob: -9.028116226196289
    6. '])' → logprob: -10.153116226196289
    7. ')
' → logprob: -11.903116226196289
    8. '`]' → logprob: -12.028116226196289
    9. ')]
' → logprob: -12.153116226196289
    10. ')])' → logprob: -12.153116226196289

Token 93: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04968007653951645
    2. ' for' → logprob: -4.049680233001709
    3. 'query' → logprob: -4.924680233001709
    4. 'b' → logprob: -5.049680233001709
    5. 'visited' → logprob: -5.799680233001709
    6. 'distance' → logprob: -6.174680233001709
    7. 'value' → logprob: -6.299680233001709
    8. 'q' → logprob: -6.799680233001709
    9. '
' → logprob: -7.049680233001709
    10. '\' → logprob: -7.174680233001709

Token 94: ' query' (ID: 5703)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0010182792320847511
    2. '_' → logprob: -7.126018047332764
    3. ' i' → logprob: -8.501018524169922
    4. ' node' → logprob: -12.001018524169922
    5. ' ' → logprob: -12.501018524169922
    6. '_i' → logprob: -15.626018524169922
    7. 'i' → logprob: -15.876018524169922
    8. ' ' → logprob: -16.001018524169922
    9. ' index' → logprob: -16.251018524169922
    10. ' ‌' → logprob: -16.501018524169922

Token 95: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.3598346412181854
    2. '_' → logprob: -1.2348346710205078
    3. ' _' → logprob: -4.734834671020508
    4. ' in' → logprob: -6.109834671020508
    5. '_i' → logprob: -9.359834671020508
    6. '_idx' → logprob: -9.859834671020508
    7. '_count' → logprob: -9.984834671020508
    8. ' ' → logprob: -10.109834671020508
    9. '_in' → logprob: -10.109834671020508
    10. '_query' → logprob: -10.734834671020508

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004378498066216707
    2. 'in' → logprob: -5.504378318786621
    3. ' ' → logprob: -8.129378318786621
    4. '	in' → logprob: -13.004378318786621
    5. ' i' → logprob: -14.129378318786621
    6. ',' → logprob: -14.254378318786621
    7. '_' → logprob: -14.754378318786621
    8. ' ,' → logprob: -15.379378318786621
    9. ' ' → logprob: -15.379378318786621
    10. '  ' → logprob: -15.754378318786621

Token 97: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.001704698195680976
    2. 'range' → logprob: -6.376704692840576
    3. ' ' → logprob: -13.251705169677734
    4. ' ran' → logprob: -15.126705169677734
    5. '	range' → logprob: -15.126705169677734
    6. '(range' → logprob: -17.001705169677734
    7. ' ra' → logprob: -17.126705169677734
    8. ' rang' → logprob: -17.501705169677734
    9. ' ' → logprob: -17.626705169677734
    10. ' r' → logprob: -17.876705169677734

Token 98: '(query' (ID: 19835)
  Prédit: '(query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(query' → logprob: -0.0050576371140778065
    2. '(' → logprob: -5.5050578117370605
    3. 'query' → logprob: -7.1300578117370605
    4. ' query' → logprob: -9.005057334899902
    5. ' (' → logprob: -10.005057334899902
    6. '(q' → logprob: -11.755057334899902
    7. '(
' → logprob: -13.755057334899902
    8. '(Query' → logprob: -15.005057334899902
    9. '=query' → logprob: -15.005057334899902
    10. '1' → logprob: -15.505057334899902

Token 99: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.5690089639974758e-05
    2. 'count' → logprob: -11.500015258789062
    3. '_' → logprob: -12.750015258789062
    4. ')' → logprob: -14.250015258789062
    5. '_c' → logprob: -14.625015258789062
    6. 's' → logprob: -15.125015258789062
    7. '_query' → logprob: -15.625015258789062
    8. '   ' → logprob: -15.875015258789062
    9. ')_' → logprob: -15.875015258789062
    10. '```' → logprob: -16.125015258789062

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005823421524837613
    2. ' ):' → logprob: -8.250582695007324
    3. ':' → logprob: -8.875582695007324
    4. '):
' → logprob: -9.375582695007324
    5. ')' → logprob: -9.625582695007324
    6. ',' → logprob: -10.625582695007324
    7. ']:' → logprob: -12.500582695007324
    8. '():' → logprob: -14.000582695007324
    9. '}:' → logprob: -14.625582695007324
    10. '   ' → logprob: -15.125582695007324

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016557788476347923
    2. '    
' → logprob: -7.001655578613281
    3. '   ' → logprob: -8.376655578613281
    4. '    ' → logprob: -9.126655578613281
    5. '
' → logprob: -10.126655578613281
    6. ' value' → logprob: -10.251655578613281
    7. ',' → logprob: -10.501655578613281
    8. ' ,' → logprob: -10.501655578613281
    9. '‌' → logprob: -10.501655578613281
    10. 'value' → logprob: -10.501655578613281

Token 102: ' update' (ID: 4027)
  Prédit: ' operation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operation' → logprob: -1.2955119609832764
    2. ' u' → logprob: -1.5455119609832764
    3. ' command' → logprob: -1.5455119609832764
    4. ' query' → logprob: -1.6705119609832764
    5. ' node' → logprob: -4.0455121994018555
    6. 'operation' → logprob: -4.4205121994018555
    7. 'command' → logprob: -4.5455121994018555
    8. ' t' → logprob: -4.6705121994018555
    9. '   ' → logprob: -4.6705121994018555
    10. ' op' → logprob: -4.7955121994018555

Token 103: '_node' (ID: 11390)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20447872579097748
    2. '_type' → logprob: -2.3294787406921387
    3. '_node' → logprob: -3.2044787406921387
    4. '_space' → logprob: -4.454478740692139
    5. ' ' → logprob: -4.704478740692139
    6. '_value' → logprob: -5.204478740692139
    7. '_input' → logprob: -5.579478740692139
    8. '_,' → logprob: -5.829478740692139
    9. '_target' → logprob: -5.829478740692139
    10. '_token' → logprob: -6.204478740692139

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015157078392803669
    2. '_,' → logprob: -5.015157222747803
    3. ' ,' → logprob: -5.390157222747803
    4. '_' → logprob: -5.640157222747803
    5. ',_' → logprob: -8.515156745910645
    6. ' ' → logprob: -10.140156745910645
    7. ',value' → logprob: -11.640156745910645
    8. ' _' → logprob: -11.765156745910645
    9. '‌,' → logprob: -12.140156745910645
    10. ')' → logprob: -12.515156745910645

Token 105: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.3815769553184509
    2. 'increment' → logprob: -2.0065770149230957
    3. ' update' → logprob: -2.3815770149230957
    4. 'add' → logprob: -3.1315770149230957
    5. 'value' → logprob: -3.7565770149230957
    6. ' value' → logprob: -4.881577014923096
    7. ' add' → logprob: -5.381577014923096
    8. ' increment' → logprob: -5.381577014923096
    9. 'new' → logprob: -6.631577014923096
    10. 'addition' → logprob: -7.006577014923096

Token 106: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0001366744691040367
    2. '_val' → logprob: -9.125136375427246
    3. '_' → logprob: -11.000136375427246
    4. 'value' → logprob: -11.875136375427246
    5. '_amount' → logprob: -12.750136375427246
    6. '<|end|>' → logprob: -15.125136375427246
    7. '_values' → logprob: -15.250136375427246
    8. '_type' → logprob: -16.375137329101562
    9. '"value' → logprob: -16.500137329101562
    10. 'Value' → logprob: -16.875137329101562

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6334369778633118
    2. '=' → logprob: -0.7584369778633118
    3. ',' → logprob: -7.133437156677246
    4. ' ' → logprob: -10.383437156677246
    5. ' ,' → logprob: -12.133437156677246
    6. '=input' → logprob: -13.758437156677246
    7. '   ' → logprob: -14.633437156677246
    8. '=int' → logprob: -14.633437156677246
    9. ')' → logprob: -14.883437156677246
    10. '    ' → logprob: -15.383437156677246

Token 108: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004626172594726086
    2. 'map' → logprob: -5.379626274108887
    3. ' ' → logprob: -12.504626274108887
    4. '	map' → logprob: -13.379626274108887
    5. ' list' → logprob: -16.00462532043457
    6. ' ' → logprob: -16.25462532043457
    7. ' mapa' → logprob: -16.62962532043457
    8. '    ' → logprob: -16.75462532043457
    9. '   ' → logprob: -17.00462532043457
    10. '(map' → logprob: -17.50462532043457

Token 109: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010163593105971813
    2. '(' → logprob: -9.250102043151855
    3. '<int' → logprob: -13.000102043151855
    4. '=int' → logprob: -13.625102043151855
    5. '(in' → logprob: -13.875102043151855
    6. ',int' → logprob: -15.250102043151855
    7. ' (' → logprob: -15.375102043151855
    8. '[int' → logprob: -15.375102043151855
    9. ']int' → logprob: -15.875102043151855
    10. 'int' → logprob: -16.12510108947754

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017153972294181585
    2. ',input' → logprob: -6.376715183258057
    3. ' ,' → logprob: -12.126715660095215
    4. ',int' → logprob: -12.626715660095215
    5. '(' → logprob: -13.251715660095215
    6. '(),' → logprob: -13.501715660095215
    7. 'input' → logprob: -14.626715660095215
    8. ')' → logprob: -15.126715660095215
    9. '(input' → logprob: -15.126715660095215
    10. ',
' → logprob: -15.751715660095215

Token 111: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2014138251543045
    2. ' input' → logprob: -1.701413869857788
    3. ')' → logprob: -15.326414108276367
    4. '=input' → logprob: -16.326414108276367
    5. ',input' → logprob: -16.326414108276367
    6. '	input' → logprob: -16.701414108276367
    7. '_input' → logprob: -16.951414108276367
    8. '<input' → logprob: -18.076414108276367
    9. 'int' → logprob: -18.326414108276367
    10. ' ' → logprob: -18.451414108276367

Token 112: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002671768015716225
    2. '()' → logprob: -8.250267028808594
    3. ')' → logprob: -12.875267028808594
    4. '()
' → logprob: -13.125267028808594
    5. '(' → logprob: -14.625267028808594
    6. ' ().' → logprob: -14.750267028808594
    7. '())' → logprob: -15.625267028808594
    8. '.' → logprob: -16.375267028808594
    9. '().
' → logprob: -16.625267028808594
    10. '().__' → logprob: -16.875267028808594

Token 113: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.625
    3. 'spl' → logprob: -18.25
    4. 'strip' → logprob: -18.375
    5. '(split' → logprob: -18.375
    6. 'plit' → logprob: -19.625
    7. 'sp' → logprob: -19.75
    8. ')' → logprob: -20.375
    9. '.split' → logprob: -20.75
    10. 's' → logprob: -21.25

Token 114: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004179190844297409
    2. '())' → logprob: -6.129179000854492
    3. '()' → logprob: -6.254179000854492
    4. ')
' → logprob: -10.004179000854492
    5. '))' → logprob: -11.129179000854492
    6. ')`' → logprob: -12.754179000854492
    7. '(' → logprob: -13.129179000854492
    8. ' )' → logprob: -13.129179000854492
    9. '())
' → logprob: -14.379179000854492
    10. '()
' → logprob: -14.879179000854492

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0150842797011137
    2. 'value' → logprob: -4.265084266662598
    3. ' value' → logprob: -7.515084266662598
    4. '
' → logprob: -8.515084266662598
    5. '    
' → logprob: -9.015084266662598
    6. '<|end|>' → logprob: -11.265084266662598
    7. '	value' → logprob: -11.390084266662598
    8. '```' → logprob: -12.390084266662598
    9. ')' → logprob: -12.765084266662598
    10. '       ' → logprob: -13.015084266662598

Token 116: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' (adapté à ' value') → logprob: -0.10392318665981293
    2. ' value' → logprob: -2.9789230823516846
    3. '   ' → logprob: -3.1039230823516846
    4. '
' → logprob: -5.853923320770264
    5. ' ' → logprob: -10.353922843933105
    6. '    
' → logprob: -10.353922843933105
    7. '```' → logprob: -11.103922843933105
    8. 'for' → logprob: -11.853922843933105
    9. '	value' → logprob: -12.228922843933105
    10. '
' → logprob: -12.603922843933105

Token 117: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -13.500003814697266
    3. '_l' → logprob: -13.750003814697266
    4. '_li' → logprob: -15.000003814697266
    5. '_lst' → logprob: -15.625003814697266
    6. '_value' → logprob: -16.125003814697266
    7. 's' → logprob: -16.625003814697266
    8. '[_' → logprob: -16.625003814697266
    9. '_lists' → logprob: -17.000003814697266
    10. '_ls' → logprob: -17.625003814697266

Token 118: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.45848218582978e-06
    2. '[...]' → logprob: -14.37500286102295
    3. '[
' → logprob: -15.00000286102295
    4. ' [' → logprob: -15.25000286102295
    5. '```' → logprob: -15.37500286102295
    6. '[data' → logprob: -15.50000286102295
    7. '[node' → logprob: -15.62500286102295
    8. '[u' → logprob: -16.375001907348633
    9. '
' → logprob: -16.625001907348633
    10. '[:]' → logprob: -16.625001907348633

Token 119: 'update' (ID: 4076)
  Prédit: 'update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.01615319587290287
    2. ' update' → logprob: -4.141153335571289
    3. '[' → logprob: -10.266153335571289
    4. '(update' → logprob: -11.016153335571289
    5. '.update' → logprob: -11.141153335571289
    6. ' ' → logprob: -11.516153335571289
    7. '	update' → logprob: -11.641153335571289
    8. '
' → logprob: -12.141153335571289
    9. 'u' → logprob: -12.266153335571289
    10. ':update' → logprob: -12.516153335571289

Token 120: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.5213274309644476e-05
    2. 'node' → logprob: -11.500015258789062
    3. '_value' → logprob: -13.250015258789062
    4. '_index' → logprob: -13.750015258789062
    5. '_' → logprob: -14.000015258789062
    6. '[node' → logprob: -14.375015258789062
    7. 'Node' → logprob: -15.500015258789062
    8. '_nodes' → logprob: -15.625015258789062
    9. '_Node' → logprob: -15.875015258789062
    10. '_NODE' → logprob: -16.125015258789062

Token 121: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005021936725825071
    2. ']+=' → logprob: -5.380022048950195
    3. ' ]' → logprob: -7.880022048950195
    4. '[' → logprob: -11.255022048950195
    5. ' +=' → logprob: -12.630022048950195
    6. '+=' → logprob: -13.255022048950195
    7. ')' → logprob: -13.630022048950195
    8. '   ' → logprob: -14.130022048950195
    9. '	' → logprob: -14.380022048950195
    10. ']+' → logprob: -14.380022048950195

Token 122: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1305800825357437
    2. ' +=' → logprob: -2.130580186843872
    3. '+' → logprob: -6.255579948425293
    4. '[' → logprob: -7.130579948425293
    5. ']+=' → logprob: -7.255579948425293
    6. '=' → logprob: -8.630579948425293
    7. ' ' → logprob: -11.005579948425293
    8. '+='' → logprob: -12.505579948425293
    9. '   ' → logprob: -13.005579948425293
    10. ']' → logprob: -13.130579948425293

Token 123: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.1002117469906807
    2. 'update' → logprob: -2.3502118587493896
    3. '(update' → logprob: -12.600212097167969
    4. ' ' → logprob: -13.975212097167969
    5. '	update' → logprob: -15.100212097167969
    6. '   ' → logprob: -15.600212097167969
    7. ' ' → logprob: -16.47521209716797
    8. '_update' → logprob: -16.60021209716797
    9. 'upd' → logprob: -17.72521209716797
    10. ' up' → logprob: -17.85021209716797

Token 124: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.8828707804204896e-05
    2. '_' → logprob: -10.250048637390137
    3. '_val' → logprob: -11.375048637390137
    4. 'value' → logprob: -13.875048637390137
    5. ' _' → logprob: -14.625048637390137
    6. '_v' → logprob: -15.375048637390137
    7. '_node' → logprob: -15.500048637390137
    8. '_Value' → logprob: -16.875049591064453
    9. '_va' → logprob: -17.250049591064453
    10. 'alue' → logprob: -17.500049591064453

Token 125: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44499555230140686
    2. 'visited' → logprob: -1.1949955224990845
    3. 'distance' → logprob: -3.819995641708374
    4. 'queue' → logprob: -4.319995403289795
    5. 'deque' → logprob: -4.319995403289795
    6. 'dist' → logprob: -6.444995403289795
    7. '

' → logprob: -6.569995403289795
    8. 'for' → logprob: -6.819995403289795
    9. 'def' → logprob: -6.944995403289795
    10. '#' → logprob: -7.569995403289795

Token 126: 'tr' (ID: 371)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6116511225700378
    2. 'queue' → logprob: -1.3616511821746826
    3. 'deque' → logprob: -1.8616511821746826
    4. 'distance' → logprob: -3.8616511821746826
    5. '
' → logprob: -4.2366509437561035
    6. 'dist' → logprob: -4.7366509437561035
    7. 'q' → logprob: -7.4866509437561035
    8. 'depth' → logprob: -7.8616509437561035
    9. 'def' → logprob: -8.486651420593262
    10. '#' → logprob: -9.111651420593262

Token 127: 'avers' (ID: 29700)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6002765893936157
    2. 'ee' → logprob: -1.9752765893936157
    3. 'ef' → logprob: -2.850276470184326
    4. 'avers' → logprob: -3.100276470184326
    5. 'averse' → logprob: -3.225276470184326
    6. 'ans' → logprob: -3.975276470184326
    7. 'a' → logprob: -4.100276470184326
    8. 'verse' → logprob: -4.475276470184326
    9. 'versed' → logprob: -4.475276470184326
    10. 'versal' → logprob: -4.475276470184326

Token 128: 'al' (ID: 280)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0164156723767519
    2. 'al' → logprob: -4.266415596008301
    3. 'ate' → logprob: -6.266415596008301
    4. 'ge' → logprob: -9.1414155960083
    5. 'ode' → logprob: -9.2664155960083
    6. 'ation' → logprob: -10.3914155960083
    7. 'b' → logprob: -11.0164155960083
    8. 'def' → logprob: -11.5164155960083
    9. 'age' → logprob: -11.7664155960083
    10. 'a' → logprob: -11.8914155960083

Token 129: '_stack' (ID: 35650)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.05791664123535156
    2. ' =' → logprob: -3.6829166412353516
    3. '_' → logprob: -4.307916641235352
    4. '_stack' → logprob: -4.932916641235352
    5. '_order' → logprob: -5.057916641235352
    6. '=' → logprob: -5.557916641235352
    7. 'queue' → logprob: -9.307916641235352
    8. '_list' → logprob: -10.557916641235352
    9. '_de' → logprob: -10.557916641235352
    10. 'deque' → logprob: -10.932916641235352

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00594017468392849
    2. '=' → logprob: -5.130939960479736
    3. ' ' → logprob: -12.130940437316895
    4. ' =
' → logprob: -13.005940437316895
    5. '[' → logprob: -14.005940437316895
    6. ' =[' → logprob: -14.130940437316895
    7. '=[]' → logprob: -14.380940437316895
    8. ',' → logprob: -14.755940437316895
    9. ' ' → logprob: -15.005940437316895
    10. 's' → logprob: -16.068439483642578

Token 131: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.27596983313560486
    2. '[' → logprob: -1.5259698629379272
    3. ' deque' → logprob: -4.275969982147217
    4. ' [' → logprob: -4.775969982147217
    5. '[(' → logprob: -7.525969982147217
    6. '[node' → logprob: -7.650969982147217
    7. '[]' → logprob: -8.650969505310059
    8. 'de' → logprob: -10.275969505310059
    9. '[value' → logprob: -10.275969505310059
    10. '   ' → logprob: -10.650969505310059

Token 132: '()
' (ID: 1234)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.5795935988426208
    2. '([(' → logprob: -1.0795936584472656
    3. '()' → logprob: -2.4545936584472656
    4. '(' → logprob: -4.329593658447266
    5. '([]' → logprob: -7.454593658447266
    6. '((' → logprob: -7.954593658447266
    7. '([...' → logprob: -9.704593658447266
    8. '([
' → logprob: -10.954593658447266
    9. '[(' → logprob: -10.954593658447266
    10. '(['' → logprob: -11.579593658447266

Token 133: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.02519320510327816
    2. ' traversal' → logprob: -3.775193214416504
    3. '0' → logprob: -6.650193214416504
    4. 'visited' → logprob: -8.275193214416504
    5. '[' → logprob: -8.650193214416504
    6. '1' → logprob: -9.025193214416504
    7. '(' → logprob: -10.400193214416504
    8. 'Traversal' → logprob: -10.650193214416504
    9. '(tr' → logprob: -11.400193214416504
    10. 'trans' → logprob: -11.900193214416504

Token 134: 'avers' (ID: 29700)
  Prédit: 'avers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avers' → logprob: -0.009756204672157764
    2. 'a' → logprob: -5.384756088256836
    3. 'av' → logprob: -5.384756088256836
    4. 'avel' → logprob: -8.384756088256836
    5. 'avs' → logprob: -8.884756088256836
    6. 'aves' → logprob: -10.009756088256836
    7. 'averse' → logprob: -10.259756088256836
    8. 'aver' → logprob: -10.384756088256836
    9. 'ave' → logprob: -11.009756088256836
    10. 'e' → logprob: -12.009756088256836

Token 135: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.00011713240382960066
    2. 'val' → logprob: -9.750117301940918
    3. 'a' → logprob: -10.875117301940918
    4. '_stack' → logprob: -11.000117301940918
    5. '_' → logprob: -11.750117301940918
    6. '_val' → logprob: -12.375117301940918
    7. '```' → logprob: -13.000117301940918
    8. '_al' → logprob: -13.625117301940918
    9. '
' → logprob: -13.875117301940918
    10. 'e' → logprob: -14.375117301940918

Token 136: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.007773436605930328
    2. '_' → logprob: -4.882773399353027
    3. '.append' → logprob: -10.132773399353027
    4. '_queue' → logprob: -10.632773399353027
    5. ' _' → logprob: -11.132773399353027
    6. '=' → logprob: -11.257773399353027
    7. '.' → logprob: -11.507773399353027
    8. ' =' → logprob: -11.757773399353027
    9. '_push' → logprob: -11.757773399353027
    10. '_list' → logprob: -12.132773399353027

Token 137: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017319408943876624
    2. '.' → logprob: -6.376731872558594
    3. '.extend' → logprob: -10.876731872558594
    4. 'append' → logprob: -11.751731872558594
    5. ' .' → logprob: -13.626731872558594
    6. '.push' → logprob: -14.501731872558594
    7. '.ap' → logprob: -14.751731872558594
    8. '.app' → logprob: -15.126731872558594
    9. '_append' → logprob: -15.751731872558594
    10. '.pop' → logprob: -15.876731872558594

Token 138: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01815556176006794
    2. '((' → logprob: -4.018155574798584
    3. ' (' → logprob: -13.018155097961426
    4. '(node' → logprob: -13.268155097961426
    5. '([' → logprob: -14.143155097961426
    6. '(
' → logprob: -15.768155097961426
    7. '1' → logprob: -15.893155097961426
    8. '([(' → logprob: -16.268156051635742
    9. '(value' → logprob: -16.393156051635742
    10. '(root' → logprob: -16.768156051635742

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009213464800268412
    2. '(' → logprob: -7.000921249389648
    3. ' ' → logprob: -12.375921249389648
    4. ' (' → logprob: -13.000921249389648
    5. ')' → logprob: -14.000921249389648
    6. '((' → logprob: -14.125921249389648
    7. '[' → logprob: -14.750921249389648
    8. '   ' → logprob: -14.750921249389648
    9. '(
' → logprob: -14.750921249389648
    10. '
' → logprob: -16.81342124938965

Token 140: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.236549335066229e-05
    2. ')
' → logprob: -10.750021934509277
    3. ' )' → logprob: -14.125021934509277
    4. ')

' → logprob: -16.250022888183594
    5. '
' → logprob: -17.125022888183594
    6. '))' → logprob: -17.500022888183594
    7. ')
' → logprob: -18.000022888183594
    8. '),' → logprob: -18.125022888183594
    9. '```' → logprob: -19.125022888183594
    10. ')`' → logprob: -19.375022888183594

Token 141: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.009266166016459465
    2. 'while' → logprob: -4.759266376495361
    3. ' visited' → logprob: -8.134265899658203
    4. ' while' → logprob: -8.634265899658203
    5. 'parent' → logprob: -9.634265899658203
    6. 'seen' → logprob: -10.759265899658203
    7. '```' → logprob: -11.134265899658203
    8. 'depth' → logprob: -11.509265899658203
    9. ' 
' → logprob: -11.634265899658203
    10. '-' → logprob: -12.009265899658203

Token 142: '_nodes' (ID: 34593)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.051385458558797836
    2. '=' → logprob: -3.0513854026794434
    3. '[' → logprob: -5.926385402679443
    4. '_' → logprob: -9.676385879516602
    5. ' ' → logprob: -10.176385879516602
    6. '=set' → logprob: -12.551385879516602
    7. '=[' → logprob: -12.676385879516602
    8. ')' → logprob: -13.051385879516602
    9. '_set' → logprob: -13.051385879516602
    10. '	' → logprob: -13.301385879516602

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003607555292546749
    2. '=' → logprob: -5.628607749938965
    3. '[' → logprob: -12.503607749938965
    4. ' ' → logprob: -12.878607749938965
    5. '=set' → logprob: -14.628607749938965
    6. ' =[' → logprob: -15.003607749938965
    7. ' ' → logprob: -15.753607749938965
    8. '	' → logprob: -16.12860679626465
    9. ')' → logprob: -16.50360679626465
    10. '.' → logprob: -16.87860679626465

Token 144: ' set' (ID: 920)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.07226921617984772
    2. '[' → logprob: -2.8222692012786865
    3. ' set' → logprob: -5.072269439697266
    4. ' {' → logprob: -6.072269439697266
    5. 'set' → logprob: -6.822269439697266
    6. '{' → logprob: -7.447269439697266
    7. '[node' → logprob: -14.447269439697266
    8. ' ' → logprob: -14.697269439697266
    9. '(set' → logprob: -14.822269439697266
    10. ' ' → logprob: -15.322269439697266

Token 145: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009806263260543346
    2. '(' → logprob: -4.634806156158447
    3. '()
' → logprob: -10.759806632995605
    4. '({' → logprob: -11.759806632995605
    5. '()

' → logprob: -12.259806632995605
    6. '();' → logprob: -12.884806632995605
    7. '())' → logprob: -13.134806632995605
    8. ' ()' → logprob: -13.259806632995605
    9. '()\' → logprob: -13.259806632995605
    10. '(),' → logprob: -13.384806632995605

Token 146: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008307348005473614
    2. 'while' → logprob: -5.133307456970215
    3. 'visited' → logprob: -6.633307456970215
    4. '
' → logprob: -7.633307456970215
    5. ' while' → logprob: -8.633307456970215
    6. '\n' → logprob: -8.758307456970215
    7. ' 
' → logprob: -9.758307456970215
    8. '

' → logprob: -10.008307456970215
    9. '  
' → logprob: -10.133307456970215
    10. '```' → logprob: -10.383307456970215

Token 147: ' traversal' (ID: 131388)
  Prédit: ' traversal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traversal' → logprob: -2.8802491215174086e-05
    2. ' len' → logprob: -11.500028610229492
    3. 'tr' → logprob: -11.750028610229492
    4. 'Traversal' → logprob: -12.000028610229492
    5. ' ' → logprob: -13.000028610229492
    6. 'len' → logprob: -13.625028610229492
    7. '	tr' → logprob: -14.125028610229492
    8. ' not' → logprob: -16.125028610229492
    9. '(tr' → logprob: -16.125028610229492
    10. ' ' → logprob: -16.375028610229492

Token 148: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.00013965457037556916
    2. '_' → logprob: -9.125139236450195
    3. 'stack' → logprob: -11.375139236450195
    4. '_st' → logprob: -12.000139236450195
    5. '_
' → logprob: -12.375139236450195
    6. '
' → logprob: -12.750139236450195
    7. '_nodes' → logprob: -13.375139236450195
    8. '   ' → logprob: -14.250139236450195
    9. 'Stack' → logprob: -14.750139236450195
    10. '_STACK' → logprob: -14.875139236450195

Token 149: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003951648832298815
    2. '):' → logprob: -8.250394821166992
    3. ' :' → logprob: -10.000394821166992
    4. ':
' → logprob: -10.250394821166992
    5. '>:' → logprob: -10.375394821166992
    6. '.pop' → logprob: -12.375394821166992
    7. ' and' → logprob: -12.750394821166992
    8. 'and' → logprob: -12.750394821166992
    9. '.:' → logprob: -12.875394821166992
    10. ':**' → logprob: -13.500394821166992

Token 150: '   ' (ID: 271)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.8920925259590149
    2. '   ' → logprob: -1.0170924663543701
    3. ' node' → logprob: -2.01709246635437
    4. 'current' → logprob: -2.89209246635437
    5. 'node' → logprob: -4.267092704772949
    6. ' traversal' → logprob: -4.392092704772949
    7. '    
' → logprob: -5.267092704772949
    8. ' 
' → logprob: -5.892092704772949
    9. '	node' → logprob: -7.392092704772949
    10. 'n' → logprob: -7.517092704772949

Token 151: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.14377912878990173
    2. 'current' (adapté à ' current') → logprob: -2.0187790393829346
    3. ' node' → logprob: -7.393779277801514
    4. '   ' → logprob: -8.393778800964355
    5. 'node' → logprob: -8.893778800964355
    6. '
' → logprob: -9.518778800964355
    7. '    
' → logprob: -11.143778800964355
    8. '```' → logprob: -11.518778800964355
    9. '	current' → logprob: -11.893778800964355
    10. ' 
' → logprob: -11.893778800964355

Token 152: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.029802445322275162
    2. '_' → logprob: -3.5298025608062744
    3. '_nodes' → logprob: -10.779802322387695
    4. ' _' → logprob: -11.779802322387695
    5. ' =' → logprob: -12.029802322387695
    6. '_n' → logprob: -12.404802322387695
    7. '=' → logprob: -12.529802322387695
    8. '_Node' → logprob: -12.904802322387695
    9. '_current' → logprob: -13.654802322387695
    10. '_token' → logprob: -14.279802322387695

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519310414791107
    2. '=' → logprob: -1.501931071281433
    3. ' ' → logprob: -13.376931190490723
    4. ' ' → logprob: -16.001930236816406
    5. ',' → logprob: -16.126930236816406
    6. '	' → logprob: -16.626930236816406
    7. '   ' → logprob: -17.001930236816406
    8. ' =
' → logprob: -17.126930236816406
    9. '＝' → logprob: -17.251930236816406
    10. ')' → logprob: -18.251930236816406

Token 154: ' traversal' (ID: 131388)
  Prédit: ' traversal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traversal' → logprob: -0.3868935704231262
    2. 'tr' → logprob: -1.1368935108184814
    3. '	tr' → logprob: -11.761893272399902
    4. 'Traversal' → logprob: -12.636893272399902
    5. 'trans' → logprob: -12.761893272399902
    6. ' ' → logprob: -13.261893272399902
    7. 'trav' → logprob: -13.261893272399902
    8. ' ' → logprob: -13.511893272399902
    9. '   ' → logprob: -14.636893272399902
    10. '_tr' → logprob: -14.761893272399902

Token 155: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.0002683688362594694
    2. '_' → logprob: -8.25026798248291
    3. '_node' → logprob: -13.25026798248291
    4. '_st' → logprob: -13.25026798248291
    5. 'stack' → logprob: -13.62526798248291
    6. ' _' → logprob: -14.00026798248291
    7. '_
' → logprob: -15.00026798248291
    8. '__' → logprob: -15.25026798248291
    9. 'Stack' → logprob: -15.87526798248291
    10. '_queue' → logprob: -16.000268936157227

Token 156: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.3133552074432373
    2. '.p' → logprob: -1.3133552074432373
    3. '.' → logprob: -9.313355445861816
    4. 'pop' → logprob: -12.938355445861816
    5. ' .' → logprob: -14.313355445861816
    6. '_pop' → logprob: -15.688355445861816
    7. '   ' → logprob: -17.4383544921875
    8. '.Pop' → logprob: -17.4383544921875
    9. '.dequeue' → logprob: -18.0633544921875
    10. '	pop' → logprob: -18.0633544921875

Token 157: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009725636919029057
    2. '(' → logprob: -7.000972747802734
    3. '()
' → logprob: -9.750972747802734
    4. '(
' → logprob: -13.125972747802734
    5. ')' → logprob: -14.500972747802734
    6. ' ()' → logprob: -15.875972747802734
    7. '()
' → logprob: -16.125972747802734
    8. '()

' → logprob: -16.250972747802734
    9. '()`' → logprob: -17.625972747802734
    10. '())' → logprob: -18.125972747802734

Token 158: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018596095964312553
    2. '   ' → logprob: -4.518596172332764
    3. 'visited' → logprob: -5.518596172332764
    4. 'if' → logprob: -6.893596172332764
    5. ' if' → logprob: -6.893596172332764
    6. '    
' → logprob: -7.018596172332764
    7. ' visited' → logprob: -7.768596172332764
    8. ' 
' → logprob: -9.268595695495605
    9. '  
' → logprob: -10.893595695495605
    10. '   
' → logprob: -11.518595695495605

Token 159: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.6345121264457703
    2. ' visited' → logprob: -1.259512186050415
    3. ' if' → logprob: -2.259512186050415
    4. 'if' → logprob: -2.759512186050415
    5. '   ' → logprob: -4.384511947631836
    6. '
' → logprob: -6.134511947631836
    7. ' for' → logprob: -6.384511947631836
    8. 'for' → logprob: -6.884511947631836
    9. '    
' → logprob: -7.384511947631836
    10. ' 
' → logprob: -8.509511947631836

Token 160: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -2.3319124011322856e-05
    2. '_' → logprob: -10.875022888183594
    3. '_current' → logprob: -13.750022888183594
    4. ')_' → logprob: -14.750022888183594
    5. '_tokens' → logprob: -14.750022888183594
    6. 's' → logprob: -15.125022888183594
    7. ' _' → logprob: -15.125022888183594
    8. '_node' → logprob: -15.250022888183594
    9. '_n' → logprob: -16.000022888183594
    10. '_users' → logprob: -16.000022888183594

Token 161: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0015034328680485487
    2. '.' → logprob: -6.5015034675598145
    3. 'add' → logprob: -14.001502990722656
    4. '.update' → logprob: -15.626502990722656
    5. '.setdefault' → logprob: -16.376502990722656
    6. ' .' → logprob: -17.376502990722656
    7. '	add' → logprob: -18.001502990722656
    8. '.ad' → logprob: -18.626502990722656
    9. '.Add' → logprob: -18.751502990722656
    10. ' add' → logprob: -18.876502990722656

Token 162: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.5759422779083252
    2. '(' → logprob: -0.8259422779083252
    3. '(cur' → logprob: -14.325942039489746
    4. '(curr' → logprob: -14.325942039489746
    5. '(
' → logprob: -14.575942039489746
    6. '(Current' → logprob: -15.200942039489746
    7. '((' → logprob: -15.700942039489746
    8. '(

' → logprob: -15.700942039489746
    9. '('' → logprob: -15.950942039489746
    10. ' (' → logprob: -16.200942993164062

Token 163: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0001684981834841892
    2. '_' → logprob: -8.750168800354004
    3. '_nodes' → logprob: -12.750168800354004
    4. ')' → logprob: -12.875168800354004
    5. ')_' → logprob: -13.000168800354004
    6. '_n' → logprob: -14.250168800354004
    7. '_)' → logprob: -14.500168800354004
    8. '_token' → logprob: -14.625168800354004
    9. ' _' → logprob: -15.500168800354004
    10. 'node' → logprob: -16.375167846679688

Token 164: ')
' (ID: 446)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25836947560310364
    2. ')' → logprob: -1.8833694458007812
    3. '   ' → logprob: -2.7583694458007812
    4. '    
' → logprob: -5.008369445800781
    5. ')
' → logprob: -5.633369445800781
    6. ' 
' → logprob: -7.758369445800781
    7. '  
' → logprob: -7.883369445800781
    8. 'for' → logprob: -8.008369445800781
    9. ' for' → logprob: -8.383369445800781
    10. ',' → logprob: -8.508369445800781

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7090279459953308
    2. 'for' → logprob: -0.7090279459953308
    3. ' for' → logprob: -4.2090277671813965
    4. '    
' → logprob: -7.0840277671813965
    5. '```' → logprob: -10.959028244018555
    6. '	for' → logprob: -11.459028244018555
    7. '   ' → logprob: -11.459028244018555
    8. '
' → logprob: -11.834028244018555
    9. ' 
' → logprob: -13.084028244018555
    10. '   
' → logprob: -13.209028244018555

Token 166: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00017123986617662013
    2. ' for' → logprob: -9.000171661376953
    3. '   ' → logprob: -10.125171661376953
    4. '    
' → logprob: -12.125171661376953
    5. 'current' → logprob: -13.375171661376953
    6. 'neighbors' → logprob: -15.250171661376953
    7. '
' → logprob: -15.375171661376953
    8. 'neighbor' → logprob: -16.625171661376953
    9. '	for' → logprob: -17.000171661376953
    10. 'next' → logprob: -17.000171661376953

Token 167: ' adjacent' (ID: 39069)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0630745217204094
    2. ' neighbor' → logprob: -3.4380745887756348
    3. 'adj' → logprob: -4.438074588775635
    4. 'child' → logprob: -4.938074588775635
    5. 'next' → logprob: -4.938074588775635
    6. ' next' → logprob: -6.563074588775635
    7. ' child' → logprob: -7.063074588775635
    8. ' adjacent' → logprob: -7.563074588775635
    9. 'ne' → logprob: -11.188074111938477
    10. ' neighbour' → logprob: -11.688074111938477

Token 168: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.003430792596191168
    2. ' in' → logprob: -6.1284308433532715
    3. '_' → logprob: -6.7534308433532715
    4. 'node' → logprob: -10.003430366516113
    5. ' _' → logprob: -11.503430366516113
    6. '_neighbor' → logprob: -12.003430366516113
    7. 'in' → logprob: -12.128430366516113
    8. ' node' → logprob: -13.003430366516113
    9. '_nodes' → logprob: -13.128430366516113
    10. '_NODE' → logprob: -13.128430366516113

Token 169: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026368457823991776
    2. 'in' → logprob: -3.6513683795928955
    3. ' ' → logprob: -10.151368141174316
    4. '	in' → logprob: -10.776368141174316
    5. '   ' → logprob: -12.776368141174316
    6. '_in' → logprob: -13.776368141174316
    7. '  ' → logprob: -13.901368141174316
    8. 's' → logprob: -14.151368141174316
    9. '    ' → logprob: -14.776368141174316
    10. ' ' → logprob: -15.151368141174316

Token 170: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.12693199515342712
    2. ' adjacency' → logprob: -2.12693190574646
    3. '   ' → logprob: -13.501932144165039
    4. ' adj' → logprob: -13.626932144165039
    5. ' adjacent' → logprob: -14.001932144165039
    6. ' ' → logprob: -15.376932144165039
    7. 'Adj' → logprob: -15.501932144165039
    8. '_adj' → logprob: -17.75193214416504
    9. '	' → logprob: -17.87693214416504
    10. '  ' → logprob: -18.00193214416504

Token 171: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.392202976712724e-06
    2. 'adj' → logprob: -12.875006675720215
    3. 'List' → logprob: -13.875006675720215
    4. 'acency' → logprob: -14.125006675720215
    5. 'ency' → logprob: -14.750006675720215
    6. 'ity' → logprob: -14.875006675720215
    7. 'list' → logprob: -15.000006675720215
    8. '_' → logprob: -15.375006675720215
    9. 'ist' → logprob: -15.625006675720215
    10. 's' → logprob: -15.625006675720215

Token 172: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -9.088346359931165e-07
    2. 'current' → logprob: -14.625000953674316
    3. '[' → logprob: -14.875000953674316
    4. '[cur' → logprob: -16.75
    5. '[
' → logprob: -19.125
    6. ' [' → logprob: -19.25
    7. ' current' → logprob: -19.25
    8. '[curr' → logprob: -19.25
    9. '   ' → logprob: -20.25
    10. '```' → logprob: -20.875

Token 173: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.093505099765025e-05
    2. 'node' → logprob: -11.125020980834961
    3. '_nodes' → logprob: -13.375020980834961
    4. '_list' → logprob: -13.750020980834961
    5. '_' → logprob: -14.000020980834961
    6. 'current' → logprob: -14.125020980834961
    7. ')' → logprob: -15.125020980834961
    8. ')_' → logprob: -15.250020980834961
    9. '[node' → logprob: -15.500020980834961
    10. 's' → logprob: -15.750020980834961

Token 174: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.051999252289533615
    2. ':' → logprob: -3.92699933052063
    3. '):' → logprob: -4.176999092102051
    4. ']' → logprob: -4.926999092102051
    5. ']:
' → logprob: -5.301999092102051
    6. '   ' → logprob: -6.426999092102051
    7. '):
' → logprob: -7.051999092102051
    8. ' ]' → logprob: -7.801999092102051
    9. ']:
' → logprob: -8.67699909210205
    10. '>:' → logprob: -9.80199909210205

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01709768734872341
    2. ' if' → logprob: -4.767097473144531
    3. '   ' → logprob: -5.142097473144531
    4. 'if' → logprob: -6.017097473144531
    5. '    ' → logprob: -10.017097473144531
    6. '<|end|>' → logprob: -10.142097473144531
    7. '```' → logprob: -11.017097473144531
    8. ',' → logprob: -11.267097473144531
    9. '        
' → logprob: -11.642097473144531
    10. '    
' → logprob: -12.142097473144531

Token 176: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.030271179974079132
    2. '   ' → logprob: -4.155271053314209
    3. 'if' (adapté à ' if') → logprob: -4.280271053314209
    4. '       ' → logprob: -8.780271530151367
    5. '    ' → logprob: -9.030271530151367
    6. ' ' → logprob: -11.530271530151367
    7. '
' → logprob: -12.780271530151367
    8. '```' → logprob: -12.905271530151367
    9. ' not' → logprob: -13.030271530151367
    10. '	if' → logprob: -13.405271530151367

Token 177: ' adjacent' (ID: 39069)
  Prédit: ' adjacent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacent' → logprob: -0.38689517974853516
    2. 'adj' → logprob: -1.1368951797485352
    3. 'not' → logprob: -11.761895179748535
    4. '(adj' → logprob: -11.886895179748535
    5. 'Adjacent' → logprob: -12.011895179748535
    6. ' not' → logprob: -13.761895179748535
    7. ' adj' → logprob: -14.136895179748535
    8. '_adj' → logprob: -14.761895179748535
    9. 'ad' → logprob: -15.261895179748535
    10. ' ' → logprob: -15.511895179748535

Token 178: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.6537622034084052e-05
    2. 'ent' → logprob: -11.25002670288086
    3. '_' → logprob: -12.37502670288086
    4. '_nodes' → logprob: -12.87502670288086
    5. 'not' → logprob: -13.12502670288086
    6. 'adj' → logprob: -13.12502670288086
    7. 'node' → logprob: -14.50002670288086
    8. 'n' → logprob: -14.87502670288086
    9. 'e' → logprob: -15.37502670288086
    10. '__' → logprob: -15.62502670288086

Token 179: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16023407876491547
    2. 'not' → logprob: -1.9102340936660767
    3. ' no' → logprob: -11.910234451293945
    4. 'no' → logprob: -13.035234451293945
    5. '	not' → logprob: -14.660234451293945
    6. ')' → logprob: -15.660234451293945
    7. ' ' → logprob: -16.035234451293945
    8. 'n' → logprob: -17.035234451293945
    9. ' n' → logprob: -17.535234451293945
    10. ' in' → logprob: -17.535234451293945

Token 180: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01714116521179676
    2. 'in' → logprob: -4.142141342163086
    3. 'visited' → logprob: -7.017141342163086
    4. ' visited' → logprob: -8.767141342163086
    5. ' ' → logprob: -10.392141342163086
    6. '<|end|>' → logprob: -11.017141342163086
    7. ')' → logprob: -12.892141342163086
    8. '   ' → logprob: -13.517141342163086
    9. 'Visited' → logprob: -14.517141342163086
    10. ' to' → logprob: -14.892141342163086

Token 181: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.575939953327179
    2. 'visited' → logprob: -0.825939953327179
    3. 'Visited' → logprob: -15.200940132141113
    4. ' ' → logprob: -16.200939178466797
    5. 'vis' → logprob: -16.950939178466797
    6. '   ' → logprob: -17.200939178466797
    7. '
' → logprob: -17.450939178466797
    8. '.vis' → logprob: -17.825939178466797
    9. ' ' → logprob: -18.200939178466797
    10. 'vist' → logprob: -18.325939178466797

Token 182: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -8.65707261255011e-06
    2. '_' → logprob: -11.875008583068848
    3. 'visited' → logprob: -14.250008583068848
    4. 'ed' → logprob: -14.500008583068848
    5. 's' → logprob: -15.625008583068848
    6. 'nodes' → logprob: -16.375009536743164
    7. '_
' → logprob: -16.875009536743164
    8. 'd' → logprob: -17.875009536743164
    9. '__' → logprob: -18.125009536743164
    10. '_edges' → logprob: -18.500009536743164

Token 183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2586544454097748
    2. ':
' → logprob: -1.5086544752120972
    3. ' and' → logprob: -5.258654594421387
    4. '       ' → logprob: -7.133654594421387
    5. '):
' → logprob: -8.383654594421387
    6. '           ' → logprob: -8.508654594421387
    7. 'and' → logprob: -9.258654594421387
    8. '   ' → logprob: -9.508654594421387
    9. ' :
' → logprob: -10.633654594421387
    10. ':
' → logprob: -11.008654594421387

Token 184: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.620173990726471
    2. 'value' → logprob: -1.1201739311218262
    3. '           ' → logprob: -2.120173931121826
    4. ' value' → logprob: -4.745173931121826
    5. '   ' → logprob: -5.245173931121826
    6. ':
' → logprob: -7.370173931121826
    7. 'tr' → logprob: -7.745173931121826
    8. '```' → logprob: -8.620174407958984
    9. ':' → logprob: -8.745174407958984
    10. '):
' → logprob: -8.995174407958984

Token 185: ' traversal' (ID: 131388)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.009485119953751564
    2. '               ' → logprob: -5.634485244750977
    3. '           ' → logprob: -5.884485244750977
    4. ' value' → logprob: -6.259485244750977
    5. 'tr' → logprob: -7.509485244750977
    6. '       ' → logprob: -8.009485244750977
    7. '   ' → logprob: -8.384485244750977
    8. '```' → logprob: -11.384485244750977
    9. '
' → logprob: -11.509485244750977
    10. ' ' → logprob: -11.759485244750977

Token 186: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -3.292907877039397e-06
    2. 'stack' → logprob: -13.25000286102295
    3. '_' → logprob: -13.87500286102295
    4. '_value' → logprob: -15.00000286102295
    5. '_st' → logprob: -16.750003814697266
    6. 'value' → logprob: -17.625003814697266
    7. 'Stack' → logprob: -17.625003814697266
    8. '_s' → logprob: -18.000003814697266
    9. '_node' → logprob: -18.000003814697266
    10. '_queue' → logprob: -18.125003814697266

Token 187: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.5928495486150496e-05
    2. '.' → logprob: -11.125016212463379
    3. '.extend' → logprob: -13.875016212463379
    4. 'append' → logprob: -15.875016212463379
    5. '.app' → logprob: -16.875015258789062
    6. ' .' → logprob: -18.000015258789062
    7. '.push' → logprob: -18.250015258789062
    8. '.enqueue' → logprob: -18.750015258789062
    9. '.add' → logprob: -19.000015258789062
    10. '.Append' → logprob: -20.125015258789062

Token 188: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.250004768371582
    3. '(ad' → logprob: -16.6250057220459
    4. 'adj' → logprob: -17.2500057220459
    5. '(
' → logprob: -19.0000057220459
    6. '((' → logprob: -20.2500057220459
    7. '(aux' → logprob: -20.6250057220459
    8. '(current' → logprob: -21.0000057220459
    9. ' (' → logprob: -21.2500057220459
    10. '(indent' → logprob: -21.3750057220459

Token 189: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -14.25000286102295
    3. '_' → logprob: -14.37500286102295
    4. '_node' → logprob: -15.25000286102295
    5. '```' → logprob: -15.25000286102295
    6. '_cent' → logprob: -15.50000286102295
    7. 'cent' → logprob: -16.000003814697266
    8. '=' → logprob: -16.125003814697266
    9. 'ac' → logprob: -16.250003814697266
    10. '_list' → logprob: -16.375003814697266

Token 190: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.7697225252486533e-06
    2. 'node' → logprob: -13.125003814697266
    3. '_' → logprob: -13.500003814697266
    4. 'adj' → logprob: -16.125003814697266
    5. ')_' → logprob: -16.750003814697266
    6. ' _' → logprob: -16.875003814697266
    7. ')' → logprob: -17.125003814697266
    8. '_n' → logprob: -17.625003814697266
    9. '_nodes' → logprob: -17.625003814697266
    10. '_
' → logprob: -17.875003814697266

Token 191: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28215810656547546
    2. ')' → logprob: -2.282158136367798
    3. ')
' → logprob: -2.657158136367798
    4. '
' → logprob: -3.032158136367798
    5. 'value' → logprob: -3.782158136367798
    6. ' value' → logprob: -6.407157897949219
    7. '   ' → logprob: -7.907157897949219
    8. '               ' → logprob: -8.782157897949219
    9. ',' → logprob: -9.282157897949219
    10. '       ' → logprob: -9.782157897949219

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005526865366846323
    2. '       ' → logprob: -5.880527019500732
    3. '   ' → logprob: -6.130527019500732
    4. '```' → logprob: -8.505526542663574
    5. 'value' → logprob: -8.880526542663574
    6. '#' → logprob: -10.130526542663574
    7. '<|end|>' → logprob: -10.255526542663574
    8. '               ' → logprob: -10.380526542663574
    9. '
' → logprob: -10.880526542663574
    10. ' value' → logprob: -11.005526542663574

Token 193: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' (adapté à ' value') → logprob: -1.0325924449716695e-05
    2. ' value' → logprob: -11.50001049041748
    3. '           ' → logprob: -16.125009536743164
    4. '
' → logprob: -18.750009536743164
    5. '.value' → logprob: -19.875009536743164
    6. '   ' → logprob: -20.250009536743164
    7. '"value' → logprob: -20.625009536743164
    8. '	value' → logprob: -21.125009536743164
    9. '_value' → logprob: -21.125009536743164
    10. 'Value' → logprob: -21.375009536743164

Token 194: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.320199877838604e-07
    2. 's' → logprob: -15.625
    3. '_' → logprob: -16.375
    4. '[_' → logprob: -16.875
    5. 'list' → logprob: -17.875
    6. '_value' → logprob: -17.875
    7. '```' → logprob: -17.875
    8. '[' → logprob: -18.0
    9. '_List' → logprob: -19.25
    10. '\' → logprob: -19.25

Token 195: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.008129963040119e-06
    2. '[current' → logprob: -12.500003814697266
    3. '[node' → logprob: -16.750003814697266
    4. 'adj' → logprob: -16.875003814697266
    5. '[value' → logprob: -16.875003814697266
    6. ' [' → logprob: -18.000003814697266
    7. '[arr' → logprob: -18.375003814697266
    8. '[parent' → logprob: -18.625003814697266
    9. '```' → logprob: -19.250003814697266
    10. '[val' → logprob: -19.625003814697266

Token 196: 'adj' (ID: 57001)
  Prédit: 'adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.00034630970912985504
    2. ' adjacent' → logprob: -8.375346183776855
    3. 'current' → logprob: -9.125346183776855
    4. ']' → logprob: -13.625346183776855
    5. '
' → logprob: -13.750346183776855
    6. '(adj' → logprob: -13.875346183776855
    7. 'ad' → logprob: -14.250346183776855
    8. '   ' → logprob: -14.375346183776855
    9. ' current' → logprob: -14.750346183776855
    10. '_adj' → logprob: -15.250346183776855

Token 197: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -6.869017852295656e-06
    2. '[' → logprob: -12.875006675720215
    3. '_node' → logprob: -13.125006675720215
    4. 'ac' → logprob: -14.750006675720215
    5. 'cent' → logprob: -15.500006675720215
    6. '_nodes' → logprob: -15.500006675720215
    7. 'acency' → logprob: -15.500006675720215
    8. ']' → logprob: -15.875006675720215
    9. '+' → logprob: -16.00000762939453
    10. '           ' → logprob: -16.00000762939453

Token 198: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.666993507067673e-05
    2. '_list' → logprob: -10.875036239624023
    3. 'node' → logprob: -11.500036239624023
    4. '_nodes' → logprob: -12.875036239624023
    5. ']' → logprob: -14.125036239624023
    6. ']_' → logprob: -14.375036239624023
    7. '_' → logprob: -14.750036239624023
    8. '
' → logprob: -14.750036239624023
    9. 'Node' → logprob: -14.750036239624023
    10. '_value' → logprob: -15.250036239624023

Token 199: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004421574529260397
    2. ']+=' → logprob: -5.504421710968018
    3. ' ]' → logprob: -8.00442123413086
    4. ' +=' → logprob: -12.75442123413086
    5. ']+' → logprob: -13.37942123413086
    6. '   ' → logprob: -13.75442123413086
    7. '[' → logprob: -13.87942123413086
    8. '+=' → logprob: -14.50442123413086
    9. '    ' → logprob: -14.75442123413086
    10. '```' → logprob: -14.75442123413086

Token 200: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6953579187393188
    2. '+=' → logprob: -0.6953579187393188
    3. '+' → logprob: -6.820357799530029
    4. ']+=' → logprob: -7.445357799530029
    5. '[' → logprob: -7.820357799530029
    6. '=' → logprob: -10.070358276367188
    7. ']' → logprob: -10.695358276367188
    8. '   ' → logprob: -10.820358276367188
    9. ')' → logprob: -11.320358276367188
    10. ' +' → logprob: -11.445358276367188

Token 201: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0011703446507453918
    2. ' value' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.501171112060547
    4. 'current' → logprob: -17.751171112060547
    5. '"value' → logprob: -18.376171112060547
    6. '	value' → logprob: -18.626171112060547
    7. 'values' → logprob: -19.251171112060547
    8. '           ' → logprob: -19.626171112060547
    9. '$value' → logprob: -19.751171112060547
    10. 'val' → logprob: -19.876171112060547

Token 202: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.045823566731997e-05
    2. '_' → logprob: -11.250020027160645
    3. '_l' → logprob: -12.625020027160645
    4. 's' → logprob: -14.125020027160645
    5. '_value' → logprob: -14.125020027160645
    6. '[_' → logprob: -14.125020027160645
    7. 'List' → logprob: -14.375020027160645
    8. ' _' → logprob: -15.000020027160645
    9. 'l' → logprob: -15.125020027160645
    10. '_lst' → logprob: -15.375020027160645

Token 203: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.000712074339389801
    2. 'current' → logprob: -7.250711917877197
    3. '[' → logprob: -13.750712394714355
    4. '[
' → logprob: -14.625712394714355
    5. ' current' → logprob: -15.625712394714355
    6. '[cur' → logprob: -15.625712394714355
    7. '```' → logprob: -15.875712394714355
    8. '$current' → logprob: -16.50071144104004
    9. '[curr' → logprob: -17.00071144104004
    10. '   ' → logprob: -17.25071144104004

Token 204: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -4.1557283111615106e-05
    2. '_token' → logprob: -10.500041961669922
    3. 'node' → logprob: -11.250041961669922
    4. '_' → logprob: -14.625041961669922
    5. ')' → logprob: -15.625041961669922
    6. '_nodes' → logprob: -16.125041961669922
    7. '_NODE' → logprob: -16.125041961669922
    8. ' node' → logprob: -17.125041961669922
    9. 'Node' → logprob: -17.500041961669922
    10. '_)' → logprob: -17.625041961669922

Token 205: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20517826080322266
    2. '<|end|>' → logprob: -1.7051782608032227
    3. ']' → logprob: -6.330178260803223
    4. '
' → logprob: -6.830178260803223
    5. '<|end|>' → logprob: -7.580178260803223
    6. '}' → logprob: -8.705178260803223
    7. '```' → logprob: -8.955178260803223
    8. ')
' → logprob: -10.205178260803223
    9. ' )' → logprob: -11.455178260803223
    10. '[' → logprob: -12.330178260803223

Token 206: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5633397698402405
    2. '(*' → logprob: -1.3133397102355957
    3. '('' → logprob: -2.0633397102355957
    4. '(value' → logprob: -3.5633397102355957
    5. '("' → logprob: -5.313339710235596
    6. '(sum' → logprob: -6.813339710235596
    7. '(
' → logprob: -8.938340187072754
    8. '(*(' → logprob: -9.188340187072754
    9. '(max' → logprob: -9.688340187072754
    10. '(*)' → logprob: -10.938340187072754

Token 208: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -9.615255839889869e-05
    2. ' value' → logprob: -9.250096321105957
    3. '(value' → logprob: -17.25009536743164
    4. 'val' → logprob: -19.37509536743164
    5. ')value' → logprob: -19.87509536743164
    6. 'values' → logprob: -20.25009536743164
    7. ')' → logprob: -20.37509536743164
    8. 'valu' → logprob: -20.37509536743164
    9. '"value' → logprob: -20.37509536743164
    10. '.value' → logprob: -20.75009536743164

Token 209: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.7014437364414334e-05
    2. 'value' → logprob: -11.12502670288086
    3. '_value' → logprob: -11.37502670288086
    4. '_' → logprob: -14.50002670288086
    5. 'list' → logprob: -16.25002670288086
    6. '_l' → logprob: -17.25002670288086
    7. 'List' → logprob: -18.12502670288086
    8. ')' → logprob: -18.37502670288086
    9. ' _' → logprob: -18.37502670288086
    10. '_stack' → logprob: -18.62502670288086

Token 210: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. ')' → logprob: -13.000001907348633
    3. ' [' → logprob: -18.500001907348633
    4. '1' → logprob: -18.625001907348633
    5. '```' → logprob: -19.250001907348633
    6. ' ' → logprob: -19.500001907348633
    7. '[:' → logprob: -19.750001907348633
    8. '(' → logprob: -20.500001907348633
    9. '   ' → logprob: -21.750001907348633
    10. '[
' → logprob: -22.125001907348633

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -16.125
    3. ' ' → logprob: -16.25
    4. '])' → logprob: -17.875
    5. '[' → logprob: -18.25
    6. '
' → logprob: -18.25
    7. '   ' → logprob: -18.625
    8. '```' → logprob: -18.625
    9. '(' → logprob: -19.0
    10. 'range' → logprob: -19.0

Token 212: ':' (ID: 25)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2550710439682007
    2. ':' → logprob: -2.1300711631774902
    3. ')' → logprob: -2.2550711631774902
    4. ':)' → logprob: -6.75507116317749
    5. ']' → logprob: -9.630070686340332
    6. ')])' → logprob: -10.130070686340332
    7. ' ])' → logprob: -10.255070686340332
    8. '))' → logprob: -10.755070686340332
    9. ',)' → logprob: -11.005070686340332
    10. '>)' → logprob: -11.255070686340332

Token 213: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.750000953674316
    3. '))' → logprob: -16.000001907348633
    4. ')
' → logprob: -16.750001907348633
    5. '])' → logprob: -18.250001907348633
    6. ')`' → logprob: -18.250001907348633
    7. '）' → logprob: -19.500001907348633
    8. ']' → logprob: -20.375001907348633
    9. ')#' → logprob: -20.375001907348633
    10. ',)' → logprob: -20.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 211
Tokens correctement prédits (1ère position, stricte): 129
Tokens correctement prédits (1ère position, avec adaptation): 133
Tokens correctement prédits (top 10): 194
Précision stricte (1ère position): 61.14%
Précision adaptée (1ère position): 63.03%
Précision (top 10): 91.94%
================================================================================
