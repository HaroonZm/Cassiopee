================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def max_consecutive_ones_after_flips():
    """
    Lit une chaîne binaire et un nombre d'opérations de flip autorisées (k),
    puis détermine la longueur maximale d'une sous-séquence contiguë d'au plus
    k sous-séquences de '0' qui peuvent être retournées en '1', de manière à obtenir
    la plus longue sous-séquence contiguë possible de '1'.

    Entrée:
        Première ligne : deux entiers n (taille de la chaîne) et k (nombre de sous-séquences '0' que l'on peut retourner)
        Deuxième ligne : chaîne s composée de '0' et '1'

    Sortie:
        Imprime un entier représentant la longueur maximale atteignable sous les contraintes.
    """

    # Lecture des entrées
    n, k = map(int, input().split())  # n: longueur de la chaîne, k: nombre de flips autorisés
    s = input()  # La chaîne binaire
    rest = k     # Nombre de flips restants
    i = 0        # Pointeur sur la position actuelle dans la chaîne

    # Première phase : trouver la plus longue sous-chaîne possible en partant du début
    # en transformant au plus k plages de '0' en '1'
    while i < n:
        if s[i] == '1':
            # Avancer sur les '1'
            i += 1
        else:
            # Dès qu'on rencontre un '0'
            if rest == 0:
                # Plus de flips disponibles, on arrête
                break
            rest -= 1  # Utilisation d'un flip
            # Avancer sur tous les '0' consécutifs (une plage)
            while i < n and s[i] == '0':
                i += 1

    ans = i  # Longueur de la fenêtre maximale atteinte en partant du début

    # Deuxième phase : faire glisser la fenêtre pour explorer d'autres positions possibles
    j = 0  # Deuxième pointeur pour marquer le début de la fenêtre
    while i < n:
        # Avancer i sur les '0' consécutifs (sortie d'une plage de '0' ajoutée à la fenêtre)
        while i < n and s[i] == '0':
            i += 1
        # Avancer i sur les '1' atteints juste après cette plage de '0'
        while i < n and s[i] == '1':
            i += 1
        # Avancer j pour sauter la première plage de '1' devenue extérieure à la fenêtre
        while j < n and s[j] == '1':
            j += 1
        # Avancer j pour sortir de la première plage de '0' traitée en début de fenêtre
        while j < n and s[j] == '0':
            j += 1
        # Mettre à jour la réponse maximale trouvée
        ans = max(ans, i - j)

    # Affichage du résultat
    print(ans)


# Appel de la fonction principale qui gère toute la logique
max_consecutive_ones_after_flips()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' max' (ID: 2999)
  → Token d'amorce (pas de prédiction)

Token 2: '_con' (ID: 7531)
  → Token d'amorce (pas de prédiction)

Token 3: 'secutive' (ID: 165873)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.022249722853302956
    2. 't' → logprob: -4.647249698638916
    3. '_t' → logprob: -5.522249698638916
    4. 'c' → logprob: -5.772249698638916
    5. '_c' → logprob: -6.647249698638916
    6. '(a' → logprob: -7.522249698638916
    7. 's' → logprob: -7.772249698638916
    8. '(t' → logprob: -7.772249698638916
    9. '(' → logprob: -7.897249698638916
    10. 'v' → logprob: -7.897249698638916

Token 4: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0028062984347343445
    2. '_s' → logprob: -6.502806186676025
    3. '_v' → logprob: -7.252806186676025
    4. '_count' → logprob: -9.127806663513184
    5. '```' → logprob: -9.502806663513184
    6. '_max' → logprob: -9.627806663513184
    7. '_sub' → logprob: -10.127806663513184
    8. '_occ' → logprob: -10.252806663513184
    9. '_number' → logprob: -10.627806663513184
    10. '_sequence' → logprob: -10.627806663513184

Token 5: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.528249979019165
    2. 'v' → logprob: -1.278249979019165
    3. 'chars' → logprob: -2.903249979019165
    4. 'char' → logprob: -4.028249740600586
    5. 'one' → logprob: -4.153249740600586
    6. 'true' → logprob: -4.653249740600586
    7. 'True' → logprob: -4.653249740600586
    8. 'characters' → logprob: -4.903249740600586
    9. '1' → logprob: -5.403249740600586
    10. 'con' → logprob: -5.903249740600586

Token 6: '_after' (ID: 46788)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02650533616542816
    2. '_' → logprob: -3.7765052318573
    3. '```' → logprob: -6.526505470275879
    4. '(_:' → logprob: -7.901505470275879
    5. '(_' → logprob: -8.526505470275879
    6. '(:' → logprob: -8.651505470275879
    7. '():' → logprob: -8.651505470275879
    8. '(n' → logprob: -8.651505470275879
    9. '(x' → logprob: -9.401505470275879
    10. ':' → logprob: -9.776505470275879

Token 7: '_fl' (ID: 18192)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015907317399978638
    2. '_space' → logprob: -5.140907287597656
    3. '_replace' → logprob: -5.390907287597656
    4. '_flip' → logprob: -6.140907287597656
    5. '_swap' → logprob: -7.140907287597656
    6. '_split' → logprob: -7.640907287597656
    7. '```' → logprob: -7.890907287597656
    8. '_re' → logprob: -8.515907287597656
    9. '_max' → logprob: -9.015907287597656
    10. '_insert' → logprob: -9.140907287597656

Token 8: 'ips' (ID: 3200)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.0007557853823527694
    2. 'ipping' → logprob: -7.625755786895752
    3. '_ip' → logprob: -8.625755310058594
    4. 'i' → logprob: -10.250755310058594
    5. '```' → logprob: -10.875755310058594
    6. 'ipped' → logprob: -11.000755310058594
    7. '_' → logprob: -11.375755310058594
    8. '__' → logprob: -12.875755310058594
    9. '_i' → logprob: -14.375755310058594
    10. '(ip' → logprob: -14.375755310058594

Token 9: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009349907748401165
    2. '_' → logprob: -4.884349822998047
    3. '(:' → logprob: -7.384349822998047
    4. '(_:' → logprob: -7.884349822998047
    5. '```' → logprob: -8.884349822998047
    6. '():' → logprob: -9.009349822998047
    7. '_:' → logprob: -9.134349822998047
    8. '(_' → logprob: -9.634349822998047
    9. ':' → logprob: -9.884349822998047
    10. '(s' → logprob: -10.384349822998047

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06774043291807175
    2. '(' → logprob: -3.0677404403686523
    3. '   ' → logprob: -4.442740440368652
    4. '```' → logprob: -5.692740440368652
    5. '():' → logprob: -6.067740440368652
    6. '(:' → logprob: -7.567740440368652
    7. ''' → logprob: -8.192740440368652
    8. '\' → logprob: -9.067740440368652
    9. '_' → logprob: -9.067740440368652
    10. '    ' → logprob: -9.942740440368652

Token 11: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8634245991706848
    2. ' ' → logprob: -1.48842453956604
    3. '```' → logprob: -2.36342453956604
    4. '(' → logprob: -2.61342453956604
    5. ''' → logprob: -3.11342453956604
    6. '_' → logprob: -3.48842453956604
    7. '[' → logprob: -3.61342453956604
    8. '    ' → logprob: -4.363424777984619
    9. ':' → logprob: -4.488424777984619
    10. ' (' → logprob: -4.863424777984619

Token 12: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.1920814514160156
    2. 'Count' → logprob: -1.4420814514160156
    3. 'Calculate' → logprob: -1.5670814514160156
    4. 'Find' → logprob: -2.5670814514160156
    5. '   ' → logprob: -2.8170814514160156
    6. ' Count' → logprob: -3.3170814514160156
    7. ' Counts' → logprob: -4.567081451416016
    8. 'Returns' → logprob: -4.692081451416016
    9. 'Counts' → logprob: -4.817081451416016
    10. ' Calculate' → logprob: -4.942081451416016

Token 13: ' Lit' (ID: 45595)
  Prédit: 'Count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Count' → logprob: -1.0811731815338135
    2. 'Calculate' → logprob: -1.7061731815338135
    3. 'Returns' → logprob: -1.7061731815338135
    4. 'Find' → logprob: -1.9561731815338135
    5. 'Return' → logprob: -3.0811731815338135
    6. 'Given' → logprob: -3.4561731815338135
    7. 'Calcul' → logprob: -3.9561731815338135
    8. 'Counts' → logprob: -4.081172943115234
    9. '"""' → logprob: -4.081172943115234
    10. '   ' → logprob: -5.081172943115234

Token 14: ' une' (ID: 2463)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.44027087092399597
    2. 'ral' → logprob: -1.6902709007263184
    3. '   ' → logprob: -2.9402709007263184
    4. 'e' → logprob: -3.1902709007263184
    5. 'eral' → logprob: -3.4402709007263184
    6. 'tle' → logprob: -4.565270900726318
    7. 'r' → logprob: -4.940270900726318
    8. '```' → logprob: -5.065270900726318
    9. 'def' → logprob: -5.690270900726318
    10. 'rale' → logprob: -5.940270900726318

Token 15: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.4779767692089081
    2. ' ' → logprob: -2.1029767990112305
    3. 'chaine' → logprob: -2.7279767990112305
    4. 'cha' → logprob: -3.1029767990112305
    5. '   ' → logprob: -3.2279767990112305
    6. ' chaine' → logprob: -3.3529767990112305
    7. ' ligne' → logprob: -3.8529767990112305
    8. ' string' → logprob: -4.6029767990112305
    9. 'ligne' → logprob: -4.6029767990112305
    10. 's' → logprob: -5.7279767990112305

Token 16: ' b' (ID: 287)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.027121828868985176
    2. '   ' → logprob: -4.0271220207214355
    3. 'de' → logprob: -5.4021220207214355
    4. ' d' → logprob: -7.0271220207214355
    5. ' ' → logprob: -7.4021220207214355
    6. '```' → logprob: -7.4021220207214355
    7. ' en' → logprob: -7.6521220207214355
    8. 'e' → logprob: -8.152121543884277
    9. 's' → logprob: -9.152121543884277
    10. 'def' → logprob: -9.277121543884277

Token 17: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.003787012305110693
    2. ''' → logprob: -6.378787040710449
    3. 'in' → logprob: -7.628787040710449
    4. 'inary' → logprob: -7.878787040710449
    5. 'ina' → logprob: -8.00378704071045
    6. 'i' → logprob: -8.62878704071045
    7. 'inar' → logprob: -8.75378704071045
    8. '\'' → logprob: -9.25378704071045
    9. '```' → logprob: -9.37878704071045
    10. '"' → logprob: -9.37878704071045

Token 18: ' et' (ID: 859)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7789342999458313
    2. '   ' → logprob: -1.2789342403411865
    3. '\' → logprob: -2.6539342403411865
    4. ''' → logprob: -3.0289342403411865
    5. '"' → logprob: -4.028934478759766
    6. 'e' → logprob: -4.278934478759766
    7. '```' → logprob: -4.278934478759766
    8. '`' → logprob: -4.403934478759766
    9. ''\' → logprob: -4.403934478759766
    10. ' et' → logprob: -4.653934478759766

Token 19: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0751456022262573
    2. ' retourne' → logprob: -1.4501456022262573
    3. 'ren' → logprob: -2.075145721435547
    4. ' ren' → logprob: -2.575145721435547
    5. 'ret' → logprob: -2.825145721435547
    6. 'return' → logprob: -3.450145721435547
    7. 'dé' → logprob: -4.075145721435547
    8. 'def' → logprob: -4.450145721435547
    9. 'flip' → logprob: -4.825145721435547
    10. ' calc' → logprob: -5.075145721435547

Token 20: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.8295007944107056
    2. ' entier' → logprob: -0.8295007944107056
    3. 'nombre' → logprob: -2.329500675201416
    4. 'ent' → logprob: -3.954500675201416
    5. '   ' → logprob: -5.954500675201416
    6. 'e' → logprob: -6.079500675201416
    7. ' n' → logprob: -6.704500675201416
    8. 'n' → logprob: -6.954500675201416
    9. ' ' → logprob: -7.079500675201416
    10. 'k' → logprob: -8.204501152038574

Token 21: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2849254906177521
    2. ' d' → logprob: -2.1599254608154297
    3. ' maximal' → logprob: -3.2849254608154297
    4. 'de' → logprob: -3.4099254608154297
    5. '   ' → logprob: -3.7849254608154297
    6. ' ' → logprob: -3.9099254608154297
    7. 'd' → logprob: -4.90992546081543
    8. ' ' → logprob: -5.53492546081543
    9. ' n' → logprob: -6.40992546081543
    10. ' max' → logprob: -6.78492546081543

Token 22: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008278265595436096
    2. ''' → logprob: -6.2582783699035645
    3. ' e' → logprob: -6.3832783699035645
    4. ''é' → logprob: -7.5082783699035645
    5. 'é' → logprob: -7.5082783699035645
    6. 'o' → logprob: -7.7582783699035645
    7. 'u' → logprob: -7.7582783699035645
    8. ''autor' → logprob: -7.8832783699035645
    9. ''op' → logprob: -8.133277893066406
    10. 'a' → logprob: -8.508277893066406

Token 23: 'érations' (ID: 152860)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.6343011260032654
    2. 'érations' → logprob: -0.8843011260032654
    3. 'ér' → logprob: -3.75930118560791
    4. 'e' → logprob: -4.13430118560791
    5. 'ération' → logprob: -5.13430118560791
    6. 'er' → logprob: -5.88430118560791
    7. 'p' → logprob: -6.63430118560791
    8. 't' → logprob: -7.00930118560791
    9. '```' → logprob: -7.50930118560791
    10. 'éra' → logprob: -7.50930118560791

Token 24: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01977033168077469
    2. ' ' → logprob: -5.64477014541626
    3. ' à' → logprob: -6.14477014541626
    4. '.' → logprob: -6.39477014541626
    5. 'max' → logprob: -6.51977014541626
    6. 'def' → logprob: -6.51977014541626
    7. ' de' → logprob: -6.76977014541626
    8. '    ' → logprob: -6.89477014541626
    9. ',' → logprob: -6.89477014541626
    10. ' possible' → logprob: -7.14477014541626

Token 25: ' flip' (ID: 29130)
  Prédit: ' flip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flip' → logprob: -0.45170092582702637
    2. 'flip' → logprob: -1.3267009258270264
    3. ' retourn' → logprob: -2.5767009258270264
    4. ' flips' → logprob: -5.0767011642456055
    5. ' remplacement' → logprob: -5.5767011642456055
    6. ' changement' → logprob: -6.3267011642456055
    7. ' flipping' → logprob: -6.3267011642456055
    8. '   ' → logprob: -6.7017011642456055
    9. ' retour' → logprob: -6.8267011642456055
    10. '```' → logprob: -7.0767011642456055

Token 26: ' autor' (ID: 13432)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4042332172393799
    2. 's' → logprob: -1.6542332172393799
    3. ' ' → logprob: -2.77923321723938
    4. '.' → logprob: -4.029232978820801
    5. ' de' → logprob: -4.904232978820801
    6. '(s' → logprob: -4.904232978820801
    7. ',' → logprob: -5.029232978820801
    8. ' (' → logprob: -5.154232978820801
    9. '    ' → logprob: -5.779232978820801
    10. 'def' → logprob: -5.779232978820801

Token 27: 'isées' (ID: 108324)
  Prédit: 'isées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isées' → logprob: -0.2600785195827484
    2. 'isés' → logprob: -1.7600785493850708
    3. 'isé' → logprob: -3.1350784301757812
    4. 'is' → logprob: -4.635078430175781
    5. 'isée' → logprob: -5.635078430175781
    6. 'i' → logprob: -9.635078430175781
    7. '```' → logprob: -9.885078430175781
    8. 'és' → logprob: -11.760078430175781
    9. 'é' → logprob: -11.760078430175781
    10. '``' → logprob: -11.760078430175781

Token 28: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3634784519672394
    2. '.' → logprob: -1.738478422164917
    3. '\n' → logprob: -2.488478422164917
    4. '\' → logprob: -4.113478660583496
    5. 'def' → logprob: -5.238478660583496
    6. '    ' → logprob: -5.613478660583496
    7. ',' → logprob: -5.988478660583496
    8. ' ' → logprob: -6.113478660583496
    9. 'n' → logprob: -6.613478660583496
    10. '(' → logprob: -6.738478660583496

Token 29: 'k' (ID: 74)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23606069386005402
    2. ' )' → logprob: -2.361060619354248
    3. ' ' → logprob: -3.736060619354248
    4. '   ' → logprob: -3.986060619354248
    5. 'n' → logprob: -3.986060619354248
    6. ' n' → logprob: -4.111060619354248
    7. '):' → logprob: -5.361060619354248
    8. '1' → logprob: -5.736060619354248
    9. ' flips' → logprob: -5.861060619354248
    10. ' le' → logprob: -5.986060619354248

Token 30: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20389848947525024
    2. ').' → logprob: -2.4538984298706055
    3. '),' → logprob: -2.5788984298706055
    4. '):' → logprob: -4.0788984298706055
    5. ' )' → logprob: -6.4538984298706055
    6. '):
' → logprob: -6.7038984298706055
    7. 's' → logprob: -7.4538984298706055
    8. '):

' → logprob: -7.4538984298706055
    9. '   ' → logprob: -7.7038984298706055
    10. ':' → logprob: -8.453898429870605

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21591968834400177
    2. ' et' → logprob: -2.5909197330474854
    3. '    ' → logprob: -2.8409197330474854
    4. ' puis' → logprob: -3.2159197330474854
    5. ' ' → logprob: -5.340919494628906
    6. ',' → logprob: -5.965919494628906
    7. ' retourne' → logprob: -6.090919494628906
    8. 'et' → logprob: -6.215919494628906
    9. '  ' → logprob: -6.715919494628906
    10. 'def' → logprob: -7.090919494628906

Token 32: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19182491302490234
    2. ' et' → logprob: -2.5668249130249023
    3. '    ' → logprob: -3.1918249130249023
    4. ' ' → logprob: -4.191824913024902
    5. ' puis' → logprob: -5.566824913024902
    6. ' en' → logprob: -5.566824913024902
    7. 'et' → logprob: -5.691824913024902
    8. ' permettant' → logprob: -5.691824913024902
    9. '\n' → logprob: -5.941824913024902
    10. '"""' → logprob: -6.316824913024902

Token 33: ' dé' (ID: 2393)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.2774907648563385
    2. '   ' → logprob: -1.9024907350540161
    3. ' ren' → logprob: -3.6524908542633057
    4. ' effect' → logprob: -4.652490615844727
    5. ' calc' → logprob: -5.027490615844727
    6. ' return' → logprob: -5.027490615844727
    7. 'ren' → logprob: -5.027490615844727
    8. ' transforme' → logprob: -5.402490615844727
    9. 'return' → logprob: -5.652490615844727
    10. 'effect' → logprob: -5.777490615844727

Token 34: 'term' (ID: 8044)
  Prédit: 'term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.0020624727476388216
    2. 'f' → logprob: -6.6270623207092285
    3. 'tect' → logprob: -8.502062797546387
    4. ' termine' → logprob: -8.877062797546387
    5. '   ' → logprob: -9.877062797546387
    6. '-term' → logprob: -10.002062797546387
    7. 'velop' → logprob: -10.377062797546387
    8. 'plo' → logprob: -10.752062797546387
    9. '\t' → logprob: -10.752062797546387
    10. '\x' → logprob: -11.002062797546387

Token 35: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.0014783211518079042
    2. '   ' → logprob: -6.87647819519043
    3. ' ine' → logprob: -8.25147819519043
    4. '```' → logprob: -9.12647819519043
    5. 'i' → logprob: -10.75147819519043
    6. 'inez' → logprob: -12.25147819519043
    7. 'e' → logprob: -12.50147819519043
    8. 'ines' → logprob: -12.62647819519043
    9. 'îne' → logprob: -12.62647819519043
    10. '\' → logprob: -12.87647819519043

Token 36: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4050118625164032
    2. '   ' → logprob: -1.2800118923187256
    3. ' le' → logprob: -3.2800118923187256
    4. ' l' → logprob: -4.7800116539001465
    5. ' ' → logprob: -5.6550116539001465
    6. 'le' → logprob: -6.7800116539001465
    7. '    ' → logprob: -7.1550116539001465
    8. 's' → logprob: -7.2800116539001465
    9. 'la' → logprob: -7.4050116539001465
    10. '  ' → logprob: -7.5300116539001465

Token 37: ' longueur' (ID: 104613)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3090113699436188
    2. ' longueur' → logprob: -1.8090113401412964
    3. '   ' → logprob: -2.809011459350586
    4. ' plus' → logprob: -4.059011459350586
    5. '  ' → logprob: -4.809011459350586
    6. 's' → logprob: -6.059011459350586
    7. ' maximum' → logprob: -6.184011459350586
    8. ' maximal' → logprob: -6.309011459350586
    9. ' position' → logprob: -7.059011459350586
    10. ' maximale' → logprob: -7.059011459350586

Token 38: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.5630021095275879
    2. '   ' → logprob: -0.9380021095275879
    3. ' maximal' → logprob: -3.938002109527588
    4. ' du' → logprob: -4.813002109527588
    5. '    ' → logprob: -5.313002109527588
    6. '_' → logprob: -6.063002109527588
    7. ' maximum' → logprob: -6.563002109527588
    8. ' d' → logprob: -7.563002109527588
    9. ' de' → logprob: -7.688002109527588
    10. 'max' → logprob: -8.43800163269043

Token 39: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2792016565799713
    2. '   ' → logprob: -2.2792017459869385
    3. '<|end|>' → logprob: -2.5292017459869385
    4. ' possible' → logprob: -3.5292017459869385
    5. ' de' → logprob: -4.404201507568359
    6. ' du' → logprob: -5.279201507568359
    7. ' maximale' → logprob: -5.404201507568359
    8. 'possible' → logprob: -6.029201507568359
    9. 'd' → logprob: -6.529201507568359
    10. '```' → logprob: -6.904201507568359

Token 40: ''une' (ID: 13337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.741928219795227
    2. ''une' → logprob: -0.741928219795227
    3. ''un' → logprob: -3.3669281005859375
    4. 'u' → logprob: -5.6169281005859375
    5. 'e' → logprob: -6.1169281005859375
    6. '’une' → logprob: -6.4919281005859375
    7. ''u' → logprob: -6.4919281005859375
    8. '_' → logprob: -7.2419281005859375
    9. 'a' → logprob: -7.3669281005859375
    10. 'une' → logprob: -7.7419281005859375

Token 41: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.671875536441803
    2. 's' → logprob: -1.6718754768371582
    3. ' sé' → logprob: -2.171875476837158
    4. '_' → logprob: -2.421875476837158
    5. ' ' → logprob: -3.421875476837158
    6. '   ' → logprob: -3.671875476837158
    7. '1' → logprob: -4.796875476837158
    8. 'sé' → logprob: -5.296875476837158
    9. ' subse' → logprob: -5.546875476837158
    10. ' chaîne' → logprob: -5.546875476837158

Token 42: '-s' (ID: 2011)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12450955808162689
    2. '-' → logprob: -2.249509572982788
    3. ' chaîne' → logprob: -5.624509334564209
    4. '_-' → logprob: -5.749509334564209
    5. '   ' → logprob: -6.749509334564209
    6. '-cha' → logprob: -6.999509334564209
    7. '_sequence' → logprob: -7.499509334564209
    8. '_str' → logprob: -7.749509334564209
    9. '_s' → logprob: -7.999509334564209
    10. '_c' → logprob: -8.374509811401367

Token 43: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.16624528169631958
    2. 'ous' → logprob: -3.041245222091675
    3. 'e' → logprob: -3.291245222091675
    4. 'u' → logprob: -3.416245222091675
    5. 'ub' → logprob: -4.916245460510254
    6. '_' → logprob: -5.291245460510254
    7. 'équ' → logprob: -5.291245460510254
    8. '#' → logprob: -5.916245460510254
    9. 'érie' → logprob: -6.666245460510254
    10. '-' → logprob: -6.666245460510254

Token 44: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00827743485569954
    2. 'q' → logprob: -5.383277416229248
    3. 'rie' → logprob: -6.133277416229248
    4. 'qu' → logprob: -7.633277416229248
    5. 'que' → logprob: -8.133277893066406
    6. '-' → logprob: -9.133277893066406
    7. '#' → logprob: -9.133277893066406
    8. '_' → logprob: -9.383277893066406
    9. 'ance' → logprob: -9.758277893066406
    10. '   ' → logprob: -10.008277893066406

Token 45: ' cont' (ID: 836)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1903388947248459
    2. ' d' → logprob: -2.3153388500213623
    3. '_' → logprob: -3.9403388500213623
    4. ' ' → logprob: -4.190339088439941
    5. 'de' → logprob: -5.065339088439941
    6. '   ' → logprob: -5.065339088439941
    7. ' continue' → logprob: -5.565339088439941
    8. '_cont' → logprob: -5.690339088439941
    9. '```' → logprob: -6.065339088439941
    10. ' continu' → logprob: -6.565339088439941

Token 46: 'igu' (ID: 12143)
  Prédit: 'inue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.9849833846092224
    2. 'in' → logprob: -1.1099834442138672
    3. 'inu' → logprob: -1.7349834442138672
    4. 'enue' → logprob: -2.859983444213867
    5. 'enant' → logprob: -4.109983444213867
    6. 'iguous' → logprob: -4.609983444213867
    7. ''' → logprob: -4.984983444213867
    8. 'i' → logprob: -5.234983444213867
    9. '   ' → logprob: -5.484983444213867
    10. 'igu' → logprob: -5.609983444213867

Token 47: 'ë' (ID: 1730)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4051944613456726
    2. 'ue' → logprob: -1.5301945209503174
    3. 'üe' → logprob: -3.2801945209503174
    4. 'uée' → logprob: -3.4051945209503174
    5. 'e' → logprob: -4.780194282531738
    6. '```' → logprob: -5.405194282531738
    7. 'n' → logprob: -5.530194282531738
    8. ' u' → logprob: -5.655194282531738
    9. 'ues' → logprob: -5.780194282531738
    10. '   ' → logprob: -5.780194282531738

Token 48: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1806115359067917
    2. ' d' → logprob: -2.5556116104125977
    3. 'e' → logprob: -3.0556116104125977
    4. '```' → logprob: -4.680611610412598
    5. 'de' → logprob: -4.805611610412598
    6. '   ' → logprob: -5.305611610412598
    7. ' e' → logprob: -5.430611610412598
    8. ' qui' → logprob: -6.555611610412598
    9. '_' → logprob: -6.680611610412598
    10. 'u' → logprob: -6.930611610412598

Token 49: ''au' (ID: 63689)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2936442494392395
    2. ''un' → logprob: -1.6686441898345947
    3. '1' → logprob: -3.1686441898345947
    4. ''une' → logprob: -4.668644428253174
    5. ' ' → logprob: -5.668644428253174
    6. 'e' → logprob: -6.168644428253174
    7. ''ent' → logprob: -6.418644428253174
    8. 'u' → logprob: -6.918644428253174
    9. ''u' → logprob: -7.043644428253174
    10. ''o' → logprob: -7.293644428253174

Token 50: ' plus' (ID: 2932)
  Prédit: ' moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' moins' → logprob: -0.35377517342567444
    2. 'moins' → logprob: -1.228775143623352
    3. '```' → logprob: -6.2287750244140625
    4. '   ' → logprob: -6.2287750244140625
    5. 'mo' → logprob: -7.7287750244140625
    6. 'menos' → logprob: -8.478775024414062
    7. '-mo' → logprob: -8.728775024414062
    8. 'm' → logprob: -9.728775024414062
    9. ' menos' → logprob: -9.728775024414062
    10. ' ' → logprob: -9.853775024414062

Token 51: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1936003863811493
    2. ''' → logprob: -2.8186004161834717
    3. ''un' → logprob: -3.0686004161834717
    4. '1' → logprob: -3.4436004161834717
    5. ' un' → logprob: -4.818600177764893
    6. 'un' → logprob: -4.943600177764893
    7. '```' → logprob: -5.193600177764893
    8. '`' → logprob: -5.818600177764893
    9. 'u' → logprob: -5.818600177764893
    10. ' '' → logprob: -6.193600177764893

Token 52: '   ' (ID: 271)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.18146051466464996
    2. ' ' → logprob: -2.1814606189727783
    3. 'k' → logprob: -3.5564606189727783
    4. '1' → logprob: -4.181460380554199
    5. ' un' → logprob: -5.431460380554199
    6. '  ' → logprob: -6.931460380554199
    7. '```' → logprob: -7.056460380554199
    8. 'un' → logprob: -7.306460380554199
    9. '   ' → logprob: -7.931460380554199
    10. 'n' → logprob: -8.5564603805542

Token 53: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.14973421394824982
    2. 'k' (adapté à ' k') → logprob: -2.0247342586517334
    3. ' ' → logprob: -5.399734020233154
    4. '1' → logprob: -6.774734020233154
    5. '```' → logprob: -7.524734020233154
    6. 'un' → logprob: -8.774734497070312
    7. ' un' → logprob: -9.024734497070312
    8. ''un' → logprob: -9.524734497070312
    9. '`' → logprob: -9.774734497070312
    10. '0' → logprob: -9.899734497070312

Token 54: ' sous' (ID: 14487)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2334082126617432
    2. ' zeros' → logprob: -1.2334082126617432
    3. ' flips' → logprob: -1.9834082126617432
    4. '1' → logprob: -2.108408212661743
    5. '0' → logprob: -2.733408212661743
    6. ' '' → logprob: -3.608408212661743
    7. ' flip' → logprob: -4.608407974243164
    8. ' espaces' → logprob: -4.608407974243164
    9. ' zéro' → logprob: -5.233407974243164
    10. ' flipped' → logprob: -5.358407974243164

Token 55: '-s' (ID: 2011)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7752465605735779
    2. '_' → logprob: -0.7752465605735779
    3. '   ' → logprob: -3.7752466201782227
    4. '_b' → logprob: -4.650246620178223
    5. '-é' → logprob: -5.525246620178223
    6. '-fl' → logprob: -5.775246620178223
    7. '1' → logprob: -6.150246620178223
    8. '_ch' → logprob: -6.275246620178223
    9. '`' → logprob: -6.400246620178223
    10. '_fl' → logprob: -6.400246620178223

Token 56: 'é' (ID: 377)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.31156790256500244
    2. 'é' → logprob: -2.186567783355713
    3. 'quences' → logprob: -3.186567783355713
    4. 'eq' → logprob: -3.811567783355713
    5. 'u' → logprob: -3.936567783355713
    6. 'équ' → logprob: -4.436567783355713
    7. 'uites' → logprob: -4.436567783355713
    8. 'eg' → logprob: -4.936567783355713
    9. 'q' → logprob: -5.561567783355713
    10. 'quence' → logprob: -5.561567783355713

Token 57: 'quences' (ID: 16559)
  Prédit: 'quence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.8053967356681824
    2. 'quences' → logprob: -0.8053967356681824
    3. 'q' → logprob: -2.305396795272827
    4. '```' → logprob: -5.805396556854248
    5. 'r' → logprob: -6.680396556854248
    6. '`' → logprob: -7.930396556854248
    7. 'qu' → logprob: -8.180397033691406
    8. 'quent' → logprob: -8.305397033691406
    9. '_' → logprob: -8.680397033691406
    10. '1' → logprob: -8.680397033691406

Token 58: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0839788913726807
    2. ' de' → logprob: -1.3339788913726807
    3. '_flip' → logprob: -2.7089788913726807
    4. ' flips' → logprob: -2.9589788913726807
    5. ' flip' → logprob: -3.0839788913726807
    6. '```' → logprob: -3.2089788913726807
    7. '_' → logprob: -3.2089788913726807
    8. ' flipped' → logprob: -3.4589788913726807
    9. ' d' → logprob: -4.083978652954102
    10. ' s' → logprob: -4.333978652954102

Token 59: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.13606595993042
    2. ' '' → logprob: -1.38606595993042
    3. ''' → logprob: -1.63606595993042
    4. ' ' → logprob: -2.13606595993042
    5. '1' → logprob: -2.26106595993042
    6. ' z' → logprob: -6.01106595993042
    7. ''un' → logprob: -6.63606595993042
    8. ' zeros' → logprob: -7.13606595993042
    9. ' bits' → logprob: -7.13606595993042
    10. ' flip' → logprob: -7.26106595993042

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09909451752901077
    2. '1' → logprob: -2.7240946292877197
    3. ''' → logprob: -3.5990946292877197
    4. ' ' → logprob: -6.849094390869141
    5. ' '' → logprob: -8.47409439086914
    6. '')' → logprob: -10.34909439086914
    7. ''s' → logprob: -10.47409439086914
    8. '"' → logprob: -11.22409439086914
    9. '```' → logprob: -11.59909439086914
    10. ''''' → logprob: -12.59909439086914

Token 61: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.015355012379586697
    2. ''s' → logprob: -4.515355110168457
    3. 's' → logprob: -5.890355110168457
    4. '')' → logprob: -6.890355110168457
    5. ''''' → logprob: -8.515355110168457
    6. '"' → logprob: -9.015355110168457
    7. '"'' → logprob: -9.640355110168457
    8. '''' → logprob: -10.515355110168457
    9. 'x' → logprob: -11.140355110168457
    10. '1' → logprob: -11.265355110168457

Token 62: ' qui' (ID: 2780)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.8400605916976929
    2. '"""
' → logprob: -1.5900605916976929
    3. 's' → logprob: -1.7150605916976929
    4. '"' → logprob: -2.8400607109069824
    5. '   ' → logprob: -3.4650607109069824
    6. '```' → logprob: -3.4650607109069824
    7. '.' → logprob: -3.8400607109069824
    8. ''' → logprob: -4.340060710906982
    9. 'def' → logprob: -5.840060710906982
    10. '""' → logprob: -5.965060710906982

Token 63: ' peuvent' (ID: 21321)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3281313478946686
    2. 'pe' → logprob: -2.4531314373016357
    3. ' peuvent' → logprob: -2.5781314373016357
    4. 'ont' → logprob: -3.4531314373016357
    5. ' sont' → logprob: -3.9531314373016357
    6. '<|end|>' → logprob: -4.078131198883057
    7. 'a' → logprob: -4.953131198883057
    8. ' peut' → logprob: -4.953131198883057
    9. '```' → logprob: -5.078131198883057
    10. ' a' → logprob: -5.078131198883057

Token 64: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.3671799898147583
    2. ' être' → logprob: -1.4921799898147583
    3. '<|end|>' → logprob: -3.8671798706054688
    4. 'êt' → logprob: -4.117179870605469
    5. 'ê' → logprob: -4.367179870605469
    6. 'êtres' → logprob: -4.492179870605469
    7. ''être' → logprob: -4.742179870605469
    8. ' be' → logprob: -6.117179870605469
    9. '’être' → logprob: -6.617179870605469
    10. ' ê' → logprob: -6.617179870605469

Token 65: ' retourn' (ID: 150215)
  Prédit: 'flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.692805826663971
    2. ' retourn' → logprob: -1.1928057670593262
    3. ' flip' → logprob: -3.067805767059326
    4. ' flipped' → logprob: -3.067805767059326
    5. 'transform' → logprob: -3.317805767059326
    6. 'fl' → logprob: -3.817805767059326
    7. '"""' → logprob: -4.567805767059326
    8. '```' → logprob: -4.692805767059326
    9. ' invers' → logprob: -5.317805767059326
    10. 'convert' → logprob: -5.567805767059326

Token 66: 'ées' (ID: 5161)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.6649153232574463
    2. 'ées' → logprob: -0.9149153232574463
    3. 'és' → logprob: -3.0399153232574463
    4. 'ée' → logprob: -3.2899153232574463
    5. 'è' → logprob: -12.414915084838867
    6. 'es' → logprob: -12.539915084838867
    7. '�' → logprob: -12.539915084838867
    8. '"' → logprob: -12.789915084838867
    9. '```' → logprob: -12.789915084838867
    10. 'ä' → logprob: -13.039915084838867

Token 67: ' en' (ID: 469)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2631962299346924
    2. ')' → logprob: -3.0131962299346924
    3. 's' → logprob: -3.1381962299346924
    4. ' pour' → logprob: -3.6381962299346924
    5. '"""' → logprob: -3.7631962299346924
    6. '```' → logprob: -4.388195991516113
    7. ' ' → logprob: -4.513195991516113
    8. ',' → logprob: -4.513195991516113
    9. ' en' → logprob: -4.763195991516113
    10. 'pour' → logprob: -5.138195991516113

Token 68: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17747239768505096
    2. ' '' → logprob: -2.0524723529815674
    3. '1' → logprob: -3.9274723529815674
    4. ' ' → logprob: -4.6774725914001465
    5. ''un' → logprob: -5.5524725914001465
    6. '"' → logprob: -8.427472114562988
    7. '```' → logprob: -8.427472114562988
    8. ''une' → logprob: -8.927472114562988
    9. '`' → logprob: -9.177472114562988
    10. ''d' → logprob: -9.802472114562988

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004541486850939691
    2. ''' → logprob: -7.875453948974609
    3. ''s' → logprob: -10.12545394897461
    4. ' ' → logprob: -10.87545394897461
    5. '0' → logprob: -12.50045394897461
    6. 's' → logprob: -12.62545394897461
    7. '"' → logprob: -13.37545394897461
    8. '```' → logprob: -13.87545394897461
    9. ' '' → logprob: -14.00045394897461
    10. '''' → logprob: -14.62545394897461

Token 70: '',' (ID: 787)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.28754109144210815
    2. ''' → logprob: -1.662541151046753
    3. 's' → logprob: -3.162541151046753
    4. '"""' → logprob: -4.412540912628174
    5. '"'' → logprob: -6.162540912628174
    6. ''''' → logprob: -6.912540912628174
    7. 'e' → logprob: -7.162540912628174
    8. '')' → logprob: -8.287541389465332
    9. '"""
' → logprob: -8.412541389465332
    10. ''"' → logprob: -8.537541389465332

Token 71: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9593182802200317
    2. ' afin' → logprob: -0.9593182802200317
    3. ' et' → logprob: -2.584318161010742
    4. ' pour' → logprob: -3.084318161010742
    5. ' permettant' → logprob: -3.084318161010742
    6. ' en' → logprob: -4.209318161010742
    7. ' ' → logprob: -5.459318161010742
    8. ' to' → logprob: -5.584318161010742
    9. ' allowing' → logprob: -5.584318161010742
    10. 's' → logprob: -5.584318161010742

Token 72: ' manière' (ID: 35013)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.7713313102722168
    2. 's' → logprob: -2.271331310272217
    3. 'def' → logprob: -2.271331310272217
    4. ' continu' → logprob: -3.021331310272217
    5. ' ' → logprob: -3.271331310272217
    6. 't' → logprob: -3.271331310272217
    7. ' utilisant' → logprob: -3.521331310272217
    8. ' permettant' → logprob: -3.646331310272217
    9. ' '' → logprob: -3.771331310272217
    10. ' un' → logprob: -3.896331310272217

Token 73: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.05258145555853844
    2. ' ' → logprob: -3.802581548690796
    3. ' a' → logprob: -5.427581310272217
    4. 'à' → logprob: -5.552581310272217
    5. ' consistent' → logprob: -5.802581310272217
    6. '   ' → logprob: -6.052581310272217
    7. ' optimale' → logprob: -6.052581310272217
    8. '<|end|>' → logprob: -6.427581310272217
    9. '  ' → logprob: -6.552581310272217
    10. ' to' → logprob: -6.552581310272217

Token 74: ' obtenir' (ID: 54423)
  Prédit: ' maxim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maxim' → logprob: -0.2582482397556305
    2. ' obtenir' → logprob: -1.758248209953308
    3. 'max' → logprob: -3.7582483291625977
    4. ' augmenter' → logprob: -5.258248329162598
    5. 'avoir' → logprob: -5.508248329162598
    6. 'ob' → logprob: -5.758248329162598
    7. ' maximize' → logprob: -5.883248329162598
    8. ' avoir' → logprob: -6.258248329162598
    9. ''obtenir' → logprob: -6.383248329162598
    10. ' ob' → logprob: -6.508248329162598

Token 75: '
' (ID: 198)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.693108081817627
    2. ' une' → logprob: -1.318108081817627
    3. '<|end|>' → logprob: -2.193108081817627
    4. ' un' → logprob: -3.193108081817627
    5. 'une' → logprob: -3.818108081817627
    6. ' a' → logprob: -4.693108081817627
    7. '   ' → logprob: -4.818108081817627
    8. '```' → logprob: -5.318108081817627
    9. 'la' → logprob: -5.568108081817627
    10. ' ' → logprob: -5.568108081817627

Token 76: '   ' (ID: 271)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.11527657508850098
    2. ' une' → logprob: -2.490276575088501
    3. 'une' → logprob: -4.865276336669922
    4. '   ' → logprob: -5.240276336669922
    5. 'la' → logprob: -5.240276336669922
    6. ' un' → logprob: -6.240276336669922
    7. ' ' → logprob: -6.865276336669922
    8. '<|end|>' → logprob: -7.115276336669922
    9. '```' → logprob: -7.615276336669922
    10. ' a' → logprob: -7.740276336669922

Token 77: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1942080557346344
    2. ' une' → logprob: -2.1942081451416016
    3. 'la' (adapté à ' la') → logprob: -3.3192081451416016
    4. 'une' → logprob: -3.6942081451416016
    5. ' un' → logprob: -6.819208145141602
    6. ' ' → logprob: -6.819208145141602
    7. ''une' → logprob: -8.069208145141602
    8. 'un' → logprob: -8.444208145141602
    9. 'a' → logprob: -8.569208145141602
    10. ' ' → logprob: -8.694208145141602

Token 78: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.1431206315755844
    2. ' chaîne' → logprob: -2.893120527267456
    3. 'plus' → logprob: -3.143120527267456
    4. ' longueur' → logprob: -4.518120765686035
    5. ' longest' → logprob: -4.893120765686035
    6. 's' → logprob: -5.143120765686035
    7. ' meilleure' → logprob: -5.893120765686035
    8. 'chaine' → logprob: -6.018120765686035
    9. ' chaine' → logprob: -6.643120765686035
    10. ' ' → logprob: -7.268120765686035

Token 79: ' longue' (ID: 59564)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.7516666054725647
    2. ' longue' → logprob: -0.7516666054725647
    3. ' long' → logprob: -3.62666654586792
    4. ' ' → logprob: -3.87666654586792
    5. 'gr' → logprob: -5.50166654586792
    6. ' grande' → logprob: -6.25166654586792
    7. '   ' → logprob: -6.37666654586792
    8. 'grand' → logprob: -7.62666654586792
    9. '```' → logprob: -8.126667022705078
    10. '	long' → logprob: -8.626667022705078

Token 80: ' sous' (ID: 14487)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.7032424807548523
    2. ' chaîne' → logprob: -2.078242540359497
    3. ' ' → logprob: -2.328242540359497
    4. '_' → logprob: -2.578242540359497
    5. '   ' → logprob: -2.953242540359497
    6. ' contiguous' → logprob: -3.203242540359497
    7. ' possible' → logprob: -3.703242540359497
    8. ' substring' → logprob: -4.203242301940918
    9. ' sé' → logprob: -4.453242301940918
    10. ' subse' → logprob: -4.703242301940918

Token 81: '-s' (ID: 2011)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.034033726900815964
    2. '-s' → logprob: -3.90903377532959
    3. '-cha' → logprob: -5.53403377532959
    4. '_' → logprob: -5.65903377532959
    5. 'sé' → logprob: -6.15903377532959
    6. 'chaine' → logprob: -6.53403377532959
    7. '   ' → logprob: -7.40903377532959
    8. '-se' → logprob: -7.65903377532959
    9. '-string' → logprob: -8.40903377532959
    10. '_sequence' → logprob: -8.53403377532959

Token 82: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.07221321016550064
    2. 'u' → logprob: -2.6972131729125977
    3. 'équ' → logprob: -6.572213172912598
    4. 'e' → logprob: -8.447213172912598
    5. 'ú' → logprob: -8.572213172912598
    6. 'q' → logprob: -9.072213172912598
    7. 'ü' → logprob: -9.322213172912598
    8. 'ée' → logprob: -9.947213172912598
    9. '\' → logprob: -10.197213172912598
    10. '"' → logprob: -10.947213172912598

Token 83: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0022692051716148853
    2. 'q' → logprob: -6.127269268035889
    3. 'quent' → logprob: -10.37726879119873
    4. 'qu' → logprob: -11.62726879119873
    5. '   ' → logprob: -11.62726879119873
    6. '_' → logprob: -11.75226879119873
    7. 'quences' → logprob: -11.87726879119873
    8. '-' → logprob: -12.75226879119873
    9. 'que' → logprob: -12.87726879119873
    10. '`' → logprob: -13.00226879119873

Token 84: ' cont' (ID: 836)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.9439048171043396
    2. ' de' → logprob: -1.6939048767089844
    3. ' contiguous' → logprob: -1.6939048767089844
    4. ' continue' → logprob: -1.9439048767089844
    5. ' d' → logprob: -3.1939048767089844
    6. ' cont' → logprob: -4.193904876708984
    7. ' continu' → logprob: -4.818904876708984
    8. ' continua' → logprob: -4.818904876708984
    9. '_cont' → logprob: -5.818904876708984
    10. ' ' → logprob: -5.818904876708984

Token 85: 'igu' (ID: 12143)
  Prédit: 'igu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igu' → logprob: -0.41554689407348633
    2. 'iguous' → logprob: -1.6655468940734863
    3. 'inue' → logprob: -2.4155468940734863
    4. 'in' → logprob: -3.7905468940734863
    5. 'inu' → logprob: -4.290546894073486
    6. 'ig' → logprob: -4.540546894073486
    7. '   ' → logprob: -5.540546894073486
    8. 'igue' → logprob: -5.665546894073486
    9. 'i' → logprob: -6.290546894073486
    10. 'igua' → logprob: -6.790546894073486

Token 86: 'ë' (ID: 1730)
  Prédit: 'üe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'üe' → logprob: -0.1754528135061264
    2. 'ue' → logprob: -2.175452709197998
    3. 'u' → logprob: -3.675452709197998
    4. 'uée' → logprob: -4.175452709197998
    5. 'ü' → logprob: -6.050452709197998
    6. 'úe' → logprob: -6.175452709197998
    7. 'ué' → logprob: -7.050452709197998
    8. 'ù' → logprob: -8.425453186035156
    9. '   ' → logprob: -8.425453186035156
    10. 'û' → logprob: -8.800453186035156

Token 87: ' possible' (ID: 4149)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.42350924015045166
    2. ' d' → logprob: -1.5485092401504517
    3. ' possible' → logprob: -2.673509120941162
    4. '   ' → logprob: -3.423509120941162
    5. 'de' → logprob: -4.298509120941162
    6. 's' → logprob: -5.673509120941162
    7. ' of' → logprob: -6.048509120941162
    8. ' ' → logprob: -6.673509120941162
    9. 'd' → logprob: -6.673509120941162
    10. '```' → logprob: -7.298509120941162

Token 88: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.826555609703064
    2. '.' → logprob: -2.0765557289123535
    3. '\n' → logprob: -2.4515557289123535
    4. '
' → logprob: -2.8265557289123535
    5. '"' → logprob: -2.8265557289123535
    6. '"""' → logprob: -3.3265557289123535
    7. '"""
' → logprob: -3.3265557289123535
    8. ' 
' → logprob: -3.4515557289123535
    9. '\' → logprob: -3.8265557289123535
    10. ' de' → logprob: -3.9515557289123535

Token 89: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9107289910316467
    2. ' '' → logprob: -1.160728931427002
    3. ' ' → logprob: -1.660728931427002
    4. ''' → logprob: -2.410728931427002
    5. ''un' → logprob: -6.910728931427002
    6. ''s' → logprob: -7.035728931427002
    7. ' uns' → logprob: -7.160728931427002
    8. '```' → logprob: -7.660728931427002
    9. 's' → logprob: -7.785728931427002
    10. ''l' → logprob: -8.78572940826416

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.171581091824919e-05
    2. ' ' → logprob: -9.75007152557373
    3. ''' → logprob: -12.00007152557373
    4. ''s' → logprob: -12.62507152557373
    5. '```' → logprob: -13.25007152557373
    6. 's' → logprob: -13.50007152557373
    7. ' '' → logprob: -14.75007152557373
    8. 'un' → logprob: -16.375072479248047
    9. '0' → logprob: -17.062572479248047
    10. '' → logprob: -17.187572479248047

Token 91: ''.

' (ID: 52121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7108315825462341
    2. ''' → logprob: -1.085831642150879
    3. '"' → logprob: -2.210831642150879
    4. ''s' → logprob: -3.085831642150879
    5. ''"' → logprob: -5.335831642150879
    6. '"""
' → logprob: -5.460831642150879
    7. '"""' → logprob: -5.960831642150879
    8. '"s' → logprob: -6.960831642150879
    9. ''.' → logprob: -7.085831642150879
    10. 'e' → logprob: -8.335831642150879

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10844293236732483
    2. '"""' → logprob: -2.358443021774292
    3. '"""
' → logprob: -5.108442783355713
    4. '```' → logprob: -6.858442783355713
    5. '"' → logprob: -7.358442783355713
    6. '""' → logprob: -8.358443260192871
    7. '\n' → logprob: -9.358443260192871
    8. ' ' → logprob: -10.608443260192871
    9. ')' → logprob: -10.608443260192871
    10. '`' → logprob: -10.858443260192871

Token 93: ' Entr' (ID: 50650)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27180659770965576
    2. '"""' → logprob: -1.7718065977096558
    3. '"""
' → logprob: -3.0218067169189453
    4. '\n' → logprob: -4.771806716918945
    5. '```' → logprob: -4.896806716918945
    6. '"' → logprob: -6.896806716918945
    7. '""' → logprob: -7.146806716918945
    8. '
' → logprob: -7.396806716918945
    9. '    
' → logprob: -8.896806716918945
    10. ')' → logprob: -9.271806716918945

Token 94: 'ée' (ID: 2894)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8230910301208496
    2. 'ée' → logprob: -1.3230910301208496
    3. 'rée' → logprob: -1.5730910301208496
    4. 'ées' → logprob: -2.5730910301208496
    5. 'ré' → logprob: -5.07309103012085
    6. '   ' → logprob: -6.44809103012085
    7. '```' → logprob: -6.69809103012085
    8. 'é' → logprob: -6.69809103012085
    9. '"""
' → logprob: -8.823091506958008
    10. 'rees' → logprob: -9.448091506958008

Token 95: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.5104972124099731
    2. ':' → logprob: -1.3854972124099731
    3. '   ' → logprob: -2.7604970932006836
    4. 's' → logprob: -3.5104970932006836
    5. '(s' → logprob: -3.6354970932006836
    6. ' ' → logprob: -5.135497093200684
    7. ':
' → logprob: -5.760497093200684
    8. '```' → logprob: -5.760497093200684
    9. ' :
' → logprob: -5.760497093200684
    10. '    ' → logprob: -6.635497093200684

Token 96: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27575886249542236
    2. '\n' → logprob: -2.400758743286133
    3. '```' → logprob: -2.775758743286133
    4. '    ' → logprob: -3.150758743286133
    5. 'n' → logprob: -3.650758743286133
    6. '\' → logprob: -5.525758743286133
    7. '"""' → logprob: -6.400758743286133
    8. 's' → logprob: -6.400758743286133
    9. '    
' → logprob: -6.525758743286133
    10. 'input' → logprob: -6.650758743286133

Token 97: ' Première' (ID: 179764)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -1.043270230293274
    2. '   ' → logprob: -1.168270230293274
    3. 'input' → logprob: -1.918270230293274
    4. 'string' → logprob: -2.6682701110839844
    5. 's' → logprob: -2.7932701110839844
    6. ' input' → logprob: -4.293270111083984
    7. ' s' → logprob: -4.668270111083984
    8. 'str' → logprob: -5.293270111083984
    9. ' string' → logprob: -5.543270111083984
    10. 'text' → logprob: -5.668270111083984

Token 98: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1620093584060669
    2. ' ligne' → logprob: -2.4120092391967773
    3. ' line' → logprob: -4.287009239196777
    4. 'l' → logprob: -4.537009239196777
    5. '_' → logprob: -4.912009239196777
    6. '   ' → logprob: -5.037009239196777
    7. 's' → logprob: -5.537009239196777
    8. 'ligne' → logprob: -5.912009239196777
    9. ' l' → logprob: -6.037009239196777
    10. '_l' → logprob: -6.162009239196777

Token 99: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.7876335382461548
    2. ' :' → logprob: -1.7876335382461548
    3. ' =' → logprob: -1.7876335382461548
    4. '   ' → logprob: -2.4126334190368652
    5. 's' → logprob: -2.5376334190368652
    6. ' ' → logprob: -2.7876334190368652
    7. '<|end|>' → logprob: -3.0376334190368652
    8. 'input' → logprob: -3.4126334190368652
    9. ' input' → logprob: -4.037633419036865
    10. '()' → logprob: -4.162633419036865

Token 100: ' deux' (ID: 10301)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.18626558780670166
    2. 'n' → logprob: -2.311265468597412
    3. 's' → logprob: -3.686265468597412
    4. ' s' → logprob: -4.561265468597412
    5. ' str' → logprob: -5.186265468597412
    6. ' input' → logprob: -5.311265468597412
    7. ' binary' → logprob: -5.436265468597412
    8. ' string' → logprob: -5.436265468597412
    9. ' ' → logprob: -5.811265468597412
    10. ' la' → logprob: -5.811265468597412

Token 101: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.1414538323879242
    2. ' integers' → logprob: -2.641453742980957
    3. ' int' → logprob: -3.391453742980957
    4. ' nombres' → logprob: -4.391453742980957
    5. 'ent' → logprob: -5.516453742980957
    6. ' entier' → logprob: -5.516453742980957
    7. ' ' → logprob: -5.641453742980957
    8. ' espaces' → logprob: -6.891453742980957
    9. ' enter' → logprob: -7.141453742980957
    10. ' enti' → logprob: -8.641453742980957

Token 102: 'iers' (ID: 11012)
  Prédit: 'ières'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -1.03940749168396
    2. 'er' → logprob: -2.03940749168396
    3. 'rée' → logprob: -2.03940749168396
    4. 'iers' → logprob: -2.41440749168396
    5. 'es' → logprob: -2.53940749168396
    6. 'r' → logprob: -3.03940749168396
    7. 's' → logprob: -3.28940749168396
    8. 'ré' → logprob: -3.53940749168396
    9. 'ié' → logprob: -4.539407730102539
    10. 't' → logprob: -4.539407730102539

Token 103: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.012669624760746956
    2. 'n' → logprob: -4.387669563293457
    3. ' ' → logprob: -9.387669563293457
    4. '(n' → logprob: -10.387669563293457
    5. ' N' → logprob: -10.637669563293457
    6. ' ,' → logprob: -12.012669563293457
    7. ' )' → logprob: -13.137669563293457
    8. ',' → logprob: -13.137669563293457
    9. ' num' → logprob: -13.637669563293457
    10. ' ' → logprob: -13.637669563293457

Token 104: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0050406791269779205
    2. ' ,' → logprob: -5.380040645599365
    3. ' et' → logprob: -8.005041122436523
    4. ',k' → logprob: -10.380041122436523
    5. ',n' → logprob: -11.005041122436523
    6. 'et' → logprob: -11.255041122436523
    7. ' ' → logprob: -11.505041122436523
    8. ' and' → logprob: -12.130041122436523
    9. '  ' → logprob: -13.255041122436523
    10. ' и' → logprob: -13.630041122436523

Token 105: 'tail' (ID: 20472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6396652460098267
    2. ')' → logprob: -0.7646652460098267
    3. ' ,' → logprob: -5.514665126800537
    4. '),' → logprob: -6.389665126800537
    5. ' )' → logprob: -7.514665126800537
    6. ' n' → logprob: -7.764665126800537
    7. ',n' → logprob: -9.014665603637695
    8. 'n' → logprob: -9.514665603637695
    9. ',k' → logprob: -10.264665603637695
    10. ')n' → logprob: -10.264665603637695

Token 106: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.00018792471382766962
    2. '   ' → logprob: -9.625187873840332
    3. 'ille' → logprob: -10.375187873840332
    4. 'e' → logprob: -11.000187873840332
    5. '_le' → logprob: -11.000187873840332
    6. 'lle' → logprob: -11.125187873840332
    7. 'lé' → logprob: -11.625187873840332
    8. 'les' → logprob: -12.125187873840332
    9. 'let' → logprob: -12.625187873840332
    10. '(le' → logprob: -13.375187873840332

Token 107: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.153037428855896
    2. ' ,' → logprob: -2.0280375480651855
    3. ')' → logprob: -5.1530375480651855
    4. ' )' → logprob: -6.1530375480651855
    5. ',n' → logprob: -7.5280375480651855
    6. 's' → logprob: -7.7780375480651855
    7. ' et' → logprob: -7.7780375480651855
    8. ' n' → logprob: -8.028037071228027
    9. ' ' → logprob: -8.403037071228027
    10. ' de' → logprob: -9.278037071228027

Token 108: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7621921300888062
    2. 'l' → logprob: -0.8871921300888062
    3. ' la' → logprob: -2.3871922492980957
    4. ')' → logprob: -3.8871922492980957
    5. ' l' → logprob: -5.637192249298096
    6. 's' → logprob: -6.012192249298096
    7. ' )' → logprob: -6.887192249298096
    8. 'n' → logprob: -7.887192249298096
    9. ' ' → logprob: -7.887192249298096
    10. ' n' → logprob: -8.137191772460938

Token 109: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.5210428833961487
    2. 'chaine' → logprob: -1.021042823791504
    3. ' chaine' → logprob: -4.146042823791504
    4. 'cha' → logprob: -5.021042823791504
    5. 'table' → logprob: -5.146042823791504
    6. 'string' → logprob: -5.396042823791504
    7. 's' → logprob: -6.271042823791504
    8. 'liste' → logprob: -6.271042823791504
    9. 'chain' → logprob: -6.521042823791504
    10. ' tableau' → logprob: -7.021042823791504

Token 110: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034880463033914566
    2. ' ,' → logprob: -3.7848803997039795
    3. ')' → logprob: -4.659880638122559
    4. ' )' → logprob: -7.159880638122559
    5. ' et' → logprob: -7.534880638122559
    6. ' n' → logprob: -7.659880638122559
    7. 'et' → logprob: -9.034880638122559
    8. '),' → logprob: -9.534880638122559
    9. 'n' → logprob: -10.534880638122559
    10. ' ),' → logprob: -10.784880638122559

Token 111: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06447984278202057
    2. ' ,' → logprob: -2.8144798278808594
    3. '   ' → logprob: -6.689479827880859
    4. ' ' → logprob: -7.064479827880859
    5. ',n' → logprob: -9.06447982788086
    6. ' n' → logprob: -9.56447982788086
    7. '    ' → logprob: -9.81447982788086
    8. '  ' → logprob: -10.56447982788086
    9. ',b' → logprob: -10.56447982788086
    10. ' et' → logprob: -10.93947982788086

Token 112: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.20142951607704163
    2. 'k' → logprob: -1.7014294862747192
    3. ' ' → logprob: -11.95142936706543
    4. ' ' → logprob: -12.32642936706543
    5. '`' → logprob: -14.07642936706543
    6. '	k' → logprob: -14.32642936706543
    7. ' K' → logprob: -14.57642936706543
    8. ' m' → logprob: -14.57642936706543
    9. '```' → logprob: -14.70142936706543
    10. 'K' → logprob: -14.70142936706543

Token 113: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18630942702293396
    2. ')' → logprob: -2.436309337615967
    3. '   ' → logprob: -3.686309337615967
    4. '\n' → logprob: -3.811309337615967
    5. ' )' → logprob: -3.936309337615967
    6. ' ,' → logprob: -5.186309337615967
    7. ' ' → logprob: -6.436309337615967
    8. '<|end|>' → logprob: -6.686309337615967
    9. ' =' → logprob: -6.936309337615967
    10. '```' → logprob: -7.061309337615967

Token 114: 'nombre' (ID: 28576)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.05138919875025749
    2. ' le' → logprob: -3.426389217376709
    3. 'nombre' → logprob: -4.676389217376709
    4. ' )' → logprob: -5.551389217376709
    5. ')' → logprob: -6.051389217376709
    6. ' flips' → logprob: -7.801389217376709
    7. ' la' → logprob: -7.926389217376709
    8. ' nombres' → logprob: -8.17638874053955
    9. ' l' → logprob: -8.55138874053955
    10. 'le' → logprob: -8.67638874053955

Token 115: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0641784816980362
    2. ' de' → logprob: -4.064178466796875
    3. ')' → logprob: -4.189178466796875
    4. ' autor' → logprob: -4.939178466796875
    5. ' )' → logprob: -5.314178466796875
    6. 'max' → logprob: -6.064178466796875
    7. ' maximal' → logprob: -6.189178466796875
    8. ' max' → logprob: -6.314178466796875
    9. ' maximum' → logprob: -6.314178466796875
    10. '  ' → logprob: -6.689178466796875

Token 116: ' sous' (ID: 14487)
  Prédit: ' flips'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flips' → logprob: -0.04827549308538437
    2. 'flip' → logprob: -3.9232754707336426
    3. ' flip' → logprob: -4.423275470733643
    4. 'fl' → logprob: -4.673275470733643
    5. ' retourn' → logprob: -6.423275470733643
    6. ')' → logprob: -6.423275470733643
    7. ' opérations' → logprob: -7.173275470733643
    8. ' )' → logprob: -8.0482759475708
    9. '0' → logprob: -8.2982759475708
    10. 'ret' → logprob: -8.9232759475708

Token 117: '-s' (ID: 2011)
  Prédit: '_sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sequences' → logprob: -0.7936221361160278
    2. '_s' → logprob: -1.1686221361160278
    3. '_' → logprob: -2.2936220169067383
    4. ' sequences' → logprob: -3.0436220169067383
    5. ' sé' → logprob: -3.9186220169067383
    6. 's' → logprob: -3.9186220169067383
    7. 'sé' → logprob: -4.043622016906738
    8. '   ' → logprob: -5.543622016906738
    9. ' flips' → logprob: -5.793622016906738
    10. ' s' → logprob: -6.293622016906738

Token 118: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.1595047265291214
    2. 'équ' → logprob: -2.4095046520233154
    3. 'u' → logprob: -3.9095046520233154
    4. 'quences' → logprob: -4.4095048904418945
    5. 'e' → logprob: -4.5345048904418945
    6. 'eq' → logprob: -5.4095048904418945
    7. '```' → logprob: -6.7845048904418945
    8. 'equ' → logprob: -6.7845048904418945
    9. 'è' → logprob: -7.0345048904418945
    10. 'és' → logprob: -7.0345048904418945

Token 119: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.003400386543944478
    2. 'quence' → logprob: -6.0034003257751465
    3. 'q' → logprob: -7.3784003257751465
    4. 'qu' → logprob: -8.878400802612305
    5. '   ' → logprob: -10.128400802612305
    6. 'ries' → logprob: -10.878400802612305
    7. '1' → logprob: -11.253400802612305
    8. '```' → logprob: -11.503400802612305
    9. 'quent' → logprob: -11.753400802612305
    10. '_' → logprob: -11.878400802612305

Token 120: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3560619354248047
    2. ' à' → logprob: -1.6060619354248047
    3. ' de' → logprob: -1.8560619354248047
    4. ' flip' → logprob: -2.4810619354248047
    5. ' ' → logprob: -2.6060619354248047
    6. ' flips' → logprob: -3.1060619354248047
    7. 'de' → logprob: -3.4810619354248047
    8. ' autor' → logprob: -3.7310619354248047
    9. 'flip' → logprob: -3.9810619354248047
    10. ')' → logprob: -4.231061935424805

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043114058673381805
    2. ' ' → logprob: -3.168113946914673
    3. ' flip' → logprob: -10.043113708496094
    4. 'flip' → logprob: -10.918113708496094
    5. ' flipped' → logprob: -11.293113708496094
    6. ' zeros' → logprob: -11.543113708496094
    7. ' flips' → logprob: -11.793113708496094
    8. ' '' → logprob: -12.730613708496094
    9. ' flipping' → logprob: -12.730613708496094
    10. 'zeros' → logprob: -13.043113708496094

Token 122: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3646143674850464
    2. '')' → logprob: -1.8646143674850464
    3. ' à' → logprob: -2.864614486694336
    4. ' autor' → logprob: -2.989614486694336
    5. ')' → logprob: -4.114614486694336
    6. 's' → logprob: -4.989614486694336
    7. ''),' → logprob: -5.989614486694336
    8. ' retourn' → logprob: -6.114614486694336
    9. ' '' → logprob: -6.364614486694336
    10. ' flip' → logprob: -6.489614486694336

Token 123: ' que' (ID: 661)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3770619332790375
    2. ' )' → logprob: -1.3770619630813599
    3. ' à' → logprob: -3.6270618438720703
    4. ' autor' → logprob: -4.25206184387207
    5. 's' → logprob: -5.00206184387207
    6. '),' → logprob: -5.87706184387207
    7. '):' → logprob: -6.25206184387207
    8. ' flip' → logprob: -6.37706184387207
    9. ' ),' → logprob: -6.37706184387207
    10. ',' → logprob: -7.25206184387207

Token 124: ' l' (ID: 305)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.9861048460006714
    2. 'on' → logprob: -1.3611048460006714
    3. 'pe' → logprob: -2.361104965209961
    4. ' l' → logprob: -3.361104965209961
    5. ' can' → logprob: -3.361104965209961
    6. 'l' → logprob: -3.486104965209961
    7. ' ' → logprob: -3.861104965209961
    8. ' pouvoir' → logprob: -3.986104965209961
    9. ' flip' → logprob: -4.111104965209961
    10. 'can' → logprob: -4.111104965209961

Token 125: ''on' (ID: 25812)
  Prédit: ''utilisateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.7911404371261597
    2. 'a' → logprob: -0.9161404371261597
    3. 'u' → logprob: -2.666140556335449
    4. ''on' → logprob: -3.166140556335449
    5. 'on' → logprob: -5.166140556335449
    6. ''a' → logprob: -5.916140556335449
    7. 'util' → logprob: -6.041140556335449
    8. ' utilisateur' → logprob: -6.166140556335449
    9. 'o' → logprob: -6.166140556335449
    10. 's' → logprob: -6.291140556335449

Token 126: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.31755855679512024
    2. 'pe' → logprob: -1.3175585269927979
    3. ' peux' → logprob: -5.817558765411377
    4. ' can' → logprob: -8.192558288574219
    5. ' pe' → logprob: -8.317558288574219
    6. 'can' → logprob: -8.692558288574219
    7. ' autor' → logprob: -9.067558288574219
    8. ')' → logprob: -9.567558288574219
    9. ' flip' → logprob: -9.817558288574219
    10. ' Peut' → logprob: -9.942558288574219

Token 127: ' retourner' (ID: 116656)
  Prédit: 'flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.35363346338272095
    2. ' flip' → logprob: -1.4786334037780762
    3. ' retourner' → logprob: -2.728633403778076
    4. 'fl' → logprob: -5.853633403778076
    5. 'ret' → logprob: -7.478633403778076
    6. ' flips' → logprob: -7.478633403778076
    7. 'return' → logprob: -8.853633880615234
    8. ' retourn' → logprob: -9.228633880615234
    9. ' flipped' → logprob: -9.728633880615234
    10. '.flip' → logprob: -9.728633880615234

Token 128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06704236567020416
    2. ' en' → logprob: -2.942042350769043
    3. ' )' → logprob: -4.942042350769043
    4. ').' → logprob: -6.567042350769043
    5. 'en' → logprob: -6.942042350769043
    6. ')
' → logprob: -7.067042350769043
    7. '),' → logprob: -7.567042350769043
    8. '')' → logprob: -8.067042350769043
    9. '")' → logprob: -8.317042350769043
    10. ',' → logprob: -9.067042350769043

Token 129: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.672931432723999
    2. '   ' → logprob: -1.297931432723999
    3. ')' → logprob: -2.047931432723999
    4. ',' → logprob: -3.547931432723999
    5. '"""' → logprob: -3.922931432723999
    6. '
' → logprob: -4.172931671142578
    7. '"""
' → logprob: -5.047931671142578
    8. '```' → logprob: -5.547931671142578
    9. '")' → logprob: -6.047931671142578
    10. '.' → logprob: -6.422931671142578

Token 130: ' Deux' (ID: 92086)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10026739537715912
    2. '\n' → logprob: -2.6002674102783203
    3. '"""
' → logprob: -4.47526741027832
    4. '
' → logprob: -4.97526741027832
    5. '"""' → logprob: -7.22526741027832
    6. '       ' → logprob: -7.72526741027832
    7. '\' → logprob: -8.47526741027832
    8. 'n' → logprob: -8.47526741027832
    9. '```' → logprob: -8.85026741027832
    10. 'def' → logprob: -8.85026741027832

Token 131: 'ième' (ID: 41126)
  Prédit: 'ième'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ième' → logprob: -0.07443861663341522
    2. 'e' → logprob: -3.0744385719299316
    3. 'ème' → logprob: -4.449438571929932
    4. 'ieme' → logprob: -4.574438571929932
    5. 'i' → logprob: -6.699438571929932
    6. 'iem' → logprob: -7.949438571929932
    7. 'def' → logprob: -7.949438571929932
    8. 'eme' → logprob: -8.07443904876709
    9. 'me' → logprob: -8.57443904876709
    10. 'ême' → logprob: -8.82443904876709

Token 132: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.025467973202466965
    2. 'ligne' → logprob: -3.900467872619629
    3. ' line' → logprob: -5.525467872619629
    4. ' ' → logprob: -7.650467872619629
    5. ' ' → logprob: -9.150467872619629
    6. 'line' → logprob: -9.650467872619629
    7. '   ' → logprob: -10.150467872619629
    8. 'l' → logprob: -10.275467872619629
    9. ' lign' → logprob: -10.275467872619629
    10. 'def' → logprob: -10.900467872619629

Token 133: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.0017355133313685656
    2. ':' → logprob: -6.626735687255859
    3. ' =' → logprob: -8.37673568725586
    4. ' ' → logprob: -9.50173568725586
    5. '   ' → logprob: -9.50173568725586
    6. ' ,' → logprob: -10.87673568725586
    7. '  ' → logprob: -12.87673568725586
    8. ' :
' → logprob: -13.00173568725586
    9. ',' → logprob: -13.37673568725586
    10. ' s' → logprob: -13.62673568725586

Token 134: ' chaîne' (ID: 89288)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1864401251077652
    2. ' la' → logprob: -2.6864402294158936
    3. 's' → logprob: -3.4364402294158936
    4. ' binary' → logprob: -3.6864402294158936
    5. ' input' → logprob: -3.9364402294158936
    6. ' une' → logprob: -4.8114399909973145
    7. ' str' → logprob: -5.3114399909973145
    8. 'input' → logprob: -6.1864399909973145
    9. 'b' → logprob: -6.8114399909973145
    10. ' b' → logprob: -6.8114399909973145

Token 135: ' s' (ID: 265)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.23769588768482208
    2. ' b' → logprob: -2.1126959323883057
    3. 'b' → logprob: -3.8626959323883057
    4. ' binary' → logprob: -3.9876959323883057
    5. ' =' → logprob: -4.362695693969727
    6. 'de' → logprob: -4.487695693969727
    7. ' s' → logprob: -5.112695693969727
    8. '   ' → logprob: -5.237695693969727
    9. ' ' → logprob: -5.862695693969727
    10. ' 
' → logprob: -6.237695693969727

Token 136: ' composée' (ID: 146865)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02639063447713852
    2. '
' → logprob: -4.026390552520752
    3. '    
' → logprob: -5.526390552520752
    4. '\n' → logprob: -6.776390552520752
    5. '):' → logprob: -7.276390552520752
    6. ':' → logprob: -7.901390552520752
    7. ')' → logprob: -8.02639102935791
    8. '):
' → logprob: -8.15139102935791
    9. '  
' → logprob: -8.77639102935791
    10. '(n' → logprob: -9.15139102935791

Token 137: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.12563177943229675
    2. ' de' → logprob: -2.375631809234619
    3. ' of' → logprob: -5.000631809234619
    4. ' ' → logprob: -5.250631809234619
    5. '   ' → logprob: -5.250631809234619
    6. ' uniquement' → logprob: -5.625631809234619
    7. 'de' → logprob: -6.750631809234619
    8. 'd' → logprob: -6.750631809234619
    9. '  ' → logprob: -7.625631809234619
    10. '    ' → logprob: -7.750631809234619

Token 138: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7267698049545288
    2. ' '' → logprob: -1.2267698049545288
    3. ' ' → logprob: -1.7267698049545288
    4. ''' → logprob: -3.2267699241638184
    5. ' caractères' → logprob: -5.351769924163818
    6. '1' → logprob: -7.726769924163818
    7. ' espaces' → logprob: -8.85176944732666
    8. ' bits' → logprob: -9.22676944732666
    9. ' caracteres' → logprob: -9.22676944732666
    10. '012' → logprob: -10.60176944732666

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06199413165450096
    2. '01' → logprob: -2.8119940757751465
    3. '1' → logprob: -11.811994552612305
    4. '010' → logprob: -12.186994552612305
    5. '10' → logprob: -12.186994552612305
    6. ' ' → logprob: -12.311994552612305
    7. ''' → logprob: -12.436994552612305
    8. '012' → logprob: -16.311994552612305
    9. '011' → logprob: -17.311994552612305
    10. '4' → logprob: -18.061994552612305

Token 140: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -8.180258191714529e-06
    2. ''s' → logprob: -12.250008583068848
    3. ' '' → logprob: -13.375008583068848
    4. 's' → logprob: -14.250008583068848
    5. ''et' → logprob: -14.250008583068848
    6. '1' → logprob: -16.00000762939453
    7. 'et' → logprob: -16.25000762939453
    8. '0' → logprob: -16.50000762939453
    9. ' et' → logprob: -16.87500762939453
    10. ''e' → logprob: -17.50000762939453

Token 141: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.31952300667762756
    2. ''' → logprob: -2.0695230960845947
    3. 's' → logprob: -2.0695230960845947
    4. 'et' → logprob: -3.9445230960845947
    5. ''et' → logprob: -7.319522857666016
    6. ' ' → logprob: -7.944522857666016
    7. ''s' → logprob: -8.069522857666016
    8. '1' → logprob: -9.444522857666016
    9. ' ou' → logprob: -10.069522857666016
    10. 'es' → logprob: -10.069522857666016

Token 142: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5330953598022461
    2. ''' → logprob: -1.033095359802246
    3. '1' → logprob: -2.908095359802246
    4. ' ' → logprob: -7.033095359802246
    5. ''un' → logprob: -7.533095359802246
    6. 's' → logprob: -7.533095359802246
    7. '<|end|>' → logprob: -8.283095359802246
    8. ''s' → logprob: -9.783095359802246
    9. ''user' → logprob: -10.158095359802246
    10. ''en' → logprob: -10.158095359802246

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ''' → logprob: -13.12500286102295
    3. ' ' → logprob: -14.37500286102295
    4. ''s' → logprob: -15.62500286102295
    5. 's' → logprob: -16.625003814697266
    6. ''''' → logprob: -18.750003814697266
    7. '```' → logprob: -18.875003814697266
    8. ' '' → logprob: -18.875003814697266
    9. '11' → logprob: -19.375003814697266
    10. '')' → logprob: -19.375003814697266

Token 144: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06279893964529037
    2. '')' → logprob: -3.3127989768981934
    3. '"' → logprob: -4.062798976898193
    4. '')"' → logprob: -5.937798976898193
    5. 's' → logprob: -6.562798976898193
    6. ''"' → logprob: -6.812798976898193
    7. '")' → logprob: -7.562798976898193
    8. '')
' → logprob: -7.812798976898193
    9. '"'' → logprob: -8.312798500061035
    10. ')'' → logprob: -8.812798500061035

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20360726118087769
    2. '"""' → logprob: -1.7036073207855225
    3. ' """' → logprob: -7.203607082366943
    4. '"""
' → logprob: -7.203607082366943
    5. '```' → logprob: -7.703607082366943
    6. '""' → logprob: -9.328607559204102
    7. '"' → logprob: -9.828607559204102
    8. 'def' → logprob: -10.203607559204102
    9. ' """
' → logprob: -10.203607559204102
    10. ')' → logprob: -10.953607559204102

Token 146: ' Sort' (ID: 25945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020641623064875603
    2. '"""' → logprob: -4.145641803741455
    3. 'def' → logprob: -5.770641803741455
    4. '"""
' → logprob: -7.020641803741455
    5. '```' → logprob: -8.145641326904297
    6. ' """' → logprob: -9.020641326904297
    7. ' """
' → logprob: -10.145641326904297
    8. ' def' → logprob: -10.270641326904297
    9. '
' → logprob: -10.770641326904297
    10. '    
' → logprob: -10.895641326904297

Token 147: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.000933017407078296
    2. 'i' → logprob: -7.1259331703186035
    3. '
' → logprob: -9.750932693481445
    4. 'ée' → logprob: -10.375932693481445
    5. '   ' → logprob: -12.000932693481445
    6. ' ie' → logprob: -12.125932693481445
    7. 'ies' → logprob: -12.250932693481445
    8. 'ue' → logprob: -12.500932693481445
    9. '

' → logprob: -12.750932693481445
    10. '"' → logprob: -13.250932693481445

Token 148: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.03387574106454849
    2. ':' → logprob: -3.4088757038116455
    3. ' :
' → logprob: -8.658875465393066
    4. ':
' → logprob: -10.158875465393066
    5. '   ' → logprob: -11.158875465393066
    6. ' ' → logprob: -14.158875465393066
    7. ' :
' → logprob: -14.283875465393066
    8. ' ' → logprob: -14.533875465393066
    9. ' =' → logprob: -15.033875465393066
    10. '  ' → logprob: -15.033875465393066

Token 149: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022940635681152344
    2. '    ' → logprob: -6.127294063568115
    3. '       ' → logprob: -10.002294540405273
    4. '    
' → logprob: -10.752294540405273
    5. '   ' → logprob: -11.502294540405273
    6. ' 
' → logprob: -12.252294540405273
    7. '   ' → logprob: -12.252294540405273
    8. '  ' → logprob: -12.627294540405273
    9. '"' → logprob: -12.752294540405273
    10. 'La' → logprob: -12.877294540405273

Token 150: ' Im' (ID: 3133)
  Prédit: 'La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'La' → logprob: -0.5961289405822754
    2. 'Ent' → logprob: -1.8461289405822754
    3. 'Un' → logprob: -1.8461289405822754
    4. 'int' → logprob: -2.2211289405822754
    5. 'Long' → logprob: -5.096128940582275
    6. 'L' → logprob: -5.471128940582275
    7. ' int' → logprob: -5.846128940582275
    8. 'ent' → logprob: -5.846128940582275
    9. 'un' → logprob: -6.221128940582275
    10. '   ' → logprob: -6.346128940582275

Token 151: 'prime' (ID: 46441)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01338585838675499
    2. 'port' → logprob: -5.638385772705078
    3. 'm' → logprob: -5.888385772705078
    4. 'um' → logprob: -6.513385772705078
    5. 'prime' → logprob: -7.138385772705078
    6. 'age' → logprob: -7.263385772705078
    7. 'possible' → logprob: -7.513385772705078
    8. 'pl' → logprob: -7.638385772705078
    9. 'primer' → logprob: -7.763385772705078
    10. 'prim' → logprob: -8.013385772705078

Token 152: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0005624461336992681
    2. ' l' → logprob: -8.87556266784668
    3. '   ' → logprob: -9.62556266784668
    4. ' the' → logprob: -9.62556266784668
    5. ' le' → logprob: -9.75056266784668
    6. '(max' → logprob: -10.12556266784668
    7. '()' → logprob: -10.25056266784668
    8. ' length' → logprob: -10.62556266784668
    9. ' max' → logprob: -10.87556266784668
    10. ' len' → logprob: -10.87556266784668

Token 153: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0055898213759064674
    2. ' entier' → logprob: -5.380589962005615
    3. 'ent' → logprob: -7.005589962005615
    4. ' e' → logprob: -9.880589485168457
    5. ' nombre' → logprob: -12.880589485168457
    6. ' ent' → logprob: -13.005589485168457
    7. ' ' → logprob: -13.755589485168457
    8. 'nombre' → logprob: -13.880589485168457
    9. 'int' → logprob: -14.130589485168457
    10. '_ent' → logprob: -14.255589485168457

Token 154: ' représentant' (ID: 136122)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.15185071527957916
    2. '   ' → logprob: -2.151850700378418
    3. '
' → logprob: -4.026850700378418
    4. '\' → logprob: -6.026850700378418
    5. '    
' → logprob: -6.026850700378418
    6. ':' → logprob: -7.401850700378418
    7. '  
' → logprob: -7.526850700378418
    8. '   
' → logprob: -8.401850700378418
    9. ' 
' → logprob: -8.651850700378418
    10. '```' → logprob: -9.151850700378418

Token 155: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.06619185954332352
    2. 'la' → logprob: -2.8161919116973877
    3. 'l' → logprob: -6.691191673278809
    4. ' l' → logprob: -6.691191673278809
    5. 'le' → logprob: -7.816191673278809
    6. ' le' → logprob: -7.941191673278809
    7. ' ' → logprob: -8.941191673278809
    8. '   ' → logprob: -9.066191673278809
    9. 'La' → logprob: -9.191191673278809
    10. 'the' → logprob: -9.316191673278809

Token 156: ' longueur' (ID: 104613)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.8591506481170654
    2. 'maximum' → logprob: -1.6091506481170654
    3. 'max' → logprob: -1.7341506481170654
    4. 'nombre' → logprob: -2.7341506481170654
    5. ' maximum' → logprob: -3.1091506481170654
    6. 'plus' → logprob: -3.4841506481170654
    7. ' maximale' → logprob: -4.3591508865356445
    8. ' nombre' → logprob: -4.7341508865356445
    9. ' longueur' → logprob: -4.8591508865356445
    10. 'e' → logprob: -5.1091508865356445

Token 157: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.012939613312482834
    2. ' maximal' → logprob: -4.637939453125
    3. ' maximum' → logprob: -6.137939453125
    4. '   ' → logprob: -8.387939453125
    5. ' du' → logprob: -8.387939453125
    6. ' maxim' → logprob: -8.512939453125
    7. ' max' → logprob: -8.637939453125
    8. ' de' → logprob: -9.637939453125
    9. '_max' → logprob: -9.887939453125
    10. 'max' → logprob: -10.512939453125

Token 158: ' atte' (ID: 43312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018569061532616615
    2. '    
' → logprob: -5.518568992614746
    3. ' ' → logprob: -5.768568992614746
    4. '    ' → logprob: -5.768568992614746
    5. ' de' → logprob: -6.018568992614746
    6. ' 
' → logprob: -6.393568992614746
    7. '\n' → logprob: -7.393568992614746
    8. ' possible' → logprob: -7.643568992614746
    9. '  ' → logprob: -8.143568992614746
    10. 'def' → logprob: -8.268568992614746

Token 159: 'ign' (ID: 733)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.04600556567311287
    2. 'ign' → logprob: -3.1710054874420166
    3. 'i' → logprob: -6.921005725860596
    4. 'ind' → logprob: -7.046005725860596
    5. 'indre' → logprob: -8.296005249023438
    6. 'int' → logprob: -8.421005249023438
    7. 'e' → logprob: -9.421005249023438
    8. 'u' → logprob: -9.671005249023438
    9. 'nte' → logprob: -9.671005249023438
    10. 'ing' → logprob: -9.796005249023438

Token 160: 'able' (ID: 562)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.24749454855918884
    2. 'able' → logprob: -1.7474945783615112
    3. 'ue' → logprob: -3.1224944591522217
    4. 'ble' → logprob: -7.997494697570801
    5. 'gn' → logprob: -9.1224946975708
    6. 'nable' → logprob: -9.2474946975708
    7. 'g' → logprob: -9.3724946975708
    8. 'u' → logprob: -10.3724946975708
    9. 'uble' → logprob: -10.4974946975708
    10. 'enable' → logprob: -10.6224946975708

Token 161: ' sous' (ID: 14487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13689450919628143
    2. '\n' → logprob: -2.761894464492798
    3. ':' → logprob: -2.886894464492798
    4. '
' → logprob: -6.011894702911377
    5. '\' → logprob: -6.136894702911377
    6. ':
' → logprob: -6.761894702911377
    7. '    
' → logprob: -6.886894702911377
    8. '  
' → logprob: -8.011894226074219
    9. ' :' → logprob: -8.011894226074219
    10. '   
' → logprob: -8.386894226074219

Token 162: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3096669316291809
    2. 'une' → logprob: -2.059666872024536
    3. '   ' → logprob: -3.309666872024536
    4. ' une' → logprob: -3.434666872024536
    5. ''une' → logprob: -4.059667110443115
    6. '-' → logprob: -4.309667110443115
    7. 'chaine' → logprob: -4.934667110443115
    8. '```' → logprob: -5.184667110443115
    9. ' la' → logprob: -5.809667110443115
    10. '\n' → logprob: -5.934667110443115

Token 163: ' contraintes' (ID: 167366)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2903323173522949
    2. '-' → logprob: -2.290332317352295
    3. 'plus' → logprob: -2.790332317352295
    4. '_' → logprob: -4.165332317352295
    5. 'quences' → logprob: -4.290332317352295
    6. ''' → logprob: -5.040332317352295
    7. 'quel' → logprob: -5.290332317352295
    8. ' sequences' → logprob: -5.415332317352295
    9. ' plus' → logprob: -5.665332317352295
    10. ''un' → logprob: -5.915332317352295

Token 164: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13404230773448944
    2. '
' → logprob: -2.509042263031006
    3. '\n' → logprob: -3.509042263031006
    4. '    
' → logprob: -4.384042263031006
    5. '  
' → logprob: -7.509042263031006
    6. '   
' → logprob: -7.509042263031006
    7. ' 
' → logprob: -8.509042739868164
    8. ':' → logprob: -9.259042739868164
    9. '\' → logprob: -9.759042739868164
    10. '```' → logprob: -10.009042739868164

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10185667127370834
    2. '"""' → logprob: -2.3518567085266113
    3. '"""
' → logprob: -6.976856708526611
    4. '```' → logprob: -7.976856708526611
    5. '"' → logprob: -8.476856231689453
    6. '""' → logprob: -9.851856231689453
    7. ' """' → logprob: -9.976856231689453
    8. '
' → logprob: -10.101856231689453
    9. '\n' → logprob: -12.226856231689453
    10. 'def' → logprob: -12.476856231689453

Token 166: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2530795633792877
    2. '"""' → logprob: -1.5030795335769653
    3. '```' → logprob: -7.753079414367676
    4. '"""
' → logprob: -8.128079414367676
    5. ' """' → logprob: -8.503079414367676
    6. '""' → logprob: -9.253079414367676
    7. 'def' → logprob: -9.878079414367676
    8. '    ' → logprob: -10.128079414367676
    9. '"' → logprob: -11.003079414367676
    10. '    
' → logprob: -12.503079414367676

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004665441811084747
    2. 'n' → logprob: -6.004665374755859
    3. ' n' → logprob: -6.129665374755859
    4. 'import' → logprob: -12.25466537475586
    5. 'def' → logprob: -12.87966537475586
    6. '	n' → logprob: -14.25466537475586
    7. ' import' → logprob: -14.50466537475586
    8. '    
' → logprob: -14.50466537475586
    9. ' def' → logprob: -14.87966537475586
    10. '    ' → logprob: -15.12966537475586

Token 168: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01913151890039444
    2. ' n' → logprob: -4.269131660461426
    3. 'import' → logprob: -5.769131660461426
    4. '   ' → logprob: -6.394131660461426
    5. ' import' → logprob: -9.269131660461426
    6. 'input' → logprob: -9.769131660461426
    7. ' input' → logprob: -12.394131660461426
    8. '	n' → logprob: -12.894131660461426
    9. '#' (adapté à ' #') → logprob: -13.394131660461426
    10. '```' → logprob: -14.019131660461426

Token 169: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11302269250154495
    2. ' n' → logprob: -2.488022804260254
    3. 'input' → logprob: -4.488022804260254
    4. '   ' → logprob: -4.863022804260254
    5. ' input' → logprob: -5.738022804260254
    6. 'import' → logprob: -6.613022804260254
    7. 'def' → logprob: -8.863022804260254
    8. ' import' → logprob: -10.363022804260254
    9. '	n' → logprob: -10.863022804260254
    10. 'line' → logprob: -11.113022804260254

Token 170: ' des' (ID: 731)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.512586772441864
    2. '   ' → logprob: -1.2625868320465088
    3. ' n' → logprob: -2.137586832046509
    4. '	n' → logprob: -9.51258659362793
    5. '    
' → logprob: -10.01258659362793
    6. '       ' → logprob: -11.01258659362793
    7. '(n' → logprob: -11.38758659362793
    8. 'input' → logprob: -11.51258659362793
    9. ' ' → logprob: -12.13758659362793
    10. '    ' → logprob: -12.13758659362793

Token 171: ' entr' (ID: 7072)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3913886845111847
    2. 'n' → logprob: -1.1413886547088623
    3. ' données' → logprob: -6.391388893127441
    4. ' input' → logprob: -7.016388893127441
    5. 'input' → logprob: -8.016388893127441
    6. ' inputs' → logprob: -8.391388893127441
    7. 'l' → logprob: -8.516388893127441
    8. ' data' → logprob: -8.641388893127441
    9. ' lignes' → logprob: -8.641388893127441
    10. ' entr' → logprob: -8.766388893127441

Token 172: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0009246804984286427
    2. 'ees' → logprob: -7.125924587249756
    3. '   ' → logprob: -9.750925064086914
    4. 'ée' → logprob: -10.750925064086914
    5. 'es' → logprob: -11.125925064086914
    6. 'é' → logprob: -11.125925064086914
    7. 'ies' → logprob: -12.625925064086914
    8. 'és' → logprob: -13.125925064086914
    9. 'er' → logprob: -13.750925064086914
    10. 'e' → logprob: -14.000925064086914

Token 173: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22234675288200378
    2. '   ' → logprob: -1.7223467826843262
    3. ' n' → logprob: -3.972346782684326
    4. '    
' → logprob: -6.972346782684326
    5. '
' → logprob: -7.347346782684326
    6. '\n' → logprob: -8.597346305847168
    7. '	n' → logprob: -9.972346305847168
    8. '(n' → logprob: -11.347346305847168
    9. '```' → logprob: -11.472346305847168
    10. 'input' → logprob: -11.472346305847168

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22787503898143768
    2. 'n' → logprob: -1.727874994277954
    3. '
' → logprob: -4.227875232696533
    4. ' n' → logprob: -5.102875232696533
    5. '    
' → logprob: -5.352875232696533
    6. ' 
' → logprob: -7.727875232696533
    7. '\n' → logprob: -9.102874755859375
    8. '	n' → logprob: -9.977874755859375
    9. '(n' → logprob: -10.227874755859375
    10. '   
' → logprob: -10.602874755859375

Token 175: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.28217455744743347
    2. 'n' (adapté à ' n') → logprob: -1.4071745872497559
    3. '   ' → logprob: -6.907174587249756
    4. '	n' → logprob: -11.532174110412598
    5. 'import' → logprob: -12.032174110412598
    6. ' line' → logprob: -13.282174110412598
    7. '```' → logprob: -13.782174110412598
    8. 'input' → logprob: -13.907174110412598
    9. ' input' → logprob: -14.032174110412598
    10. ' import' → logprob: -14.157174110412598

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018113377154804766
    2. ',k' → logprob: -8.625181198120117
    3. ',n' → logprob: -14.750181198120117
    4. ' ,' → logprob: -15.000181198120117
    5. ',s' → logprob: -15.125181198120117
    6. 'k' → logprob: -16.625181198120117
    7. ',int' → logprob: -17.000181198120117
    8. ',t' → logprob: -17.500181198120117
    9. ',j' → logprob: -17.500181198120117
    10. ',c' → logprob: -17.625181198120117

Token 177: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.11284413188695908
    2. 'k' → logprob: -2.237844228744507
    3. ' ' → logprob: -11.987844467163086
    4. '<|end|>' → logprob: -12.487844467163086
    5. ' ' → logprob: -12.612844467163086
    6. '	k' → logprob: -12.862844467163086
    7. ' ' → logprob: -13.612844467163086
    8. 'space' → logprob: -13.737844467163086
    9. '_k' → logprob: -14.112844467163086
    10. '=k' → logprob: -14.612844467163086

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759413838386536
    2. ' =' → logprob: -0.8259413838386536
    3. '=input' → logprob: -13.45094108581543
    4. ',' → logprob: -14.70094108581543
    5. '=int' → logprob: -17.32594108581543
    6. ')' → logprob: -17.57594108581543
    7. ' ' → logprob: -18.07594108581543
    8. '   ' → logprob: -18.95094108581543
    9. ' =
' → logprob: -18.95094108581543
    10. '=

' → logprob: -18.95094108581543

Token 179: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.018150296062231064
    2. 'map' → logprob: -4.018150329589844
    3. '	map' → logprob: -16.018150329589844
    4. ' input' → logprob: -16.518150329589844
    5. ' list' → logprob: -17.018150329589844
    6. 'input' → logprob: -17.268150329589844
    7. ' ' → logprob: -17.393150329589844
    8. '(map' → logprob: -18.893150329589844
    9. 'list' → logprob: -19.393150329589844
    10. '[' → logprob: -19.393150329589844

Token 180: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009667263948358595
    2. '(' → logprob: -7.000966548919678
    3. '(input' → logprob: -10.375967025756836
    4. 'int' → logprob: -10.875967025756836
    5. '(str' → logprob: -12.375967025756836
    6. '<int' → logprob: -15.250967025756836
    7. '[int' → logprob: -15.500967025756836
    8. '(
' → logprob: -15.750967025756836
    9. '=int' → logprob: -16.000967025756836
    10. ' int' → logprob: -16.500967025756836

Token 181: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3963666260242462
    2. '(input' → logprob: -1.1463665962219238
    3. ',input' → logprob: -5.271366596221924
    4. ')' → logprob: -5.771366596221924
    5. ' input' → logprob: -7.396366596221924
    6. ',' → logprob: -7.771366596221924
    7. '(' → logprob: -9.521367073059082
    8. '   ' → logprob: -9.896367073059082
    9. '=input' → logprob: -10.521367073059082
    10. '[input' → logprob: -12.396367073059082

Token 182: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0031777136027812958
    2. ' input' → logprob: -5.753177642822266
    3. '(input' → logprob: -17.378177642822266
    4. '=input' → logprob: -19.128177642822266
    5. '   ' → logprob: -19.753177642822266
    6. ' ' → logprob: -19.878177642822266
    7. '	input' → logprob: -21.253177642822266
    8. ')' → logprob: -21.503177642822266
    9. ',input' → logprob: -21.503177642822266
    10. '[input' → logprob: -22.628177642822266

Token 183: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.580929347255733e-05
    2. '()' → logprob: -11.125016212463379
    3. '())' → logprob: -14.000016212463379
    4. ' ().' → logprob: -16.875015258789062
    5. '()
' → logprob: -17.375015258789062
    6. '()[' → logprob: -18.500015258789062
    7. ')' → logprob: -18.875015258789062
    8. '().
' → logprob: -19.125015258789062
    9. '(' → logprob: -19.250015258789062
    10. '("").' → logprob: -20.250015258789062

Token 184: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001502717612311244
    2. 'strip' → logprob: -6.501502513885498
    3. ' split' → logprob: -15.876502990722656
    4. 'rstrip' → logprob: -15.876502990722656
    5. 'spl' → logprob: -17.376502990722656
    6. '(split' → logprob: -17.751502990722656
    7. '().' → logprob: -17.751502990722656
    8. '_split' → logprob: -19.251502990722656
    9. '.split' → logprob: -19.626502990722656
    10. ')' → logprob: -19.626502990722656

Token 185: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.025652160868048668
    2. ')' → logprob: -3.7756521701812744
    3. '()' → logprob: -6.150651931762695
    4. '()))' → logprob: -8.650651931762695
    5. '))' → logprob: -9.775651931762695
    6. '())
' → logprob: -11.025651931762695
    7. '(' → logprob: -11.025651931762695
    8. '('' → logprob: -12.900651931762695
    9. ' ())' → logprob: -13.150651931762695
    10. ' )' → logprob: -13.775651931762695

Token 186: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3923811614513397
    2. 's' → logprob: -1.892381191253662
    3. '   ' → logprob: -1.892381191253662
    4. ' s' → logprob: -4.517381191253662
    5. '    
' → logprob: -4.767381191253662
    6. '  
' → logprob: -6.017381191253662
    7. ' 
' → logprob: -7.767381191253662
    8. '   
' → logprob: -8.017380714416504
    9. '  ' → logprob: -8.642380714416504
    10. 'n' → logprob: -9.267380714416504

Token 187: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04039910435676575
    2. '
' → logprob: -3.2903990745544434
    3. ' s' → logprob: -6.665399074554443
    4. '   ' → logprob: -7.415399074554443
    5. ')' → logprob: -9.165399551391602
    6. '  
' → logprob: -9.290399551391602
    7. '    
' → logprob: -9.415399551391602
    8. ')
' → logprob: -9.665399551391602
    9. 'n' → logprob: -9.915399551391602
    10. ' 
' → logprob: -10.540399551391602

Token 188: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5233033895492554
    2. ' s' → logprob: -0.8983033895492554
    3. 'n' → logprob: -9.023303031921387
    4. ' n' → logprob: -9.898303031921387
    5. '   ' → logprob: -13.273303031921387
    6. ' ' → logprob: -13.398303031921387
    7. '`s' → logprob: -14.023303031921387
    8. '	s' → logprob: -14.148303031921387
    9. '```' → logprob: -14.148303031921387
    10. '(s' → logprob: -14.273303031921387

Token 189: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40613287687301636
    2. ' ,' → logprob: -1.1561329364776611
    3. ')' → logprob: -4.906132698059082
    4. ',n' → logprob: -5.781132698059082
    5. ' )' → logprob: -6.156132698059082
    6. ' n' → logprob: -6.656132698059082
    7. '   ' → logprob: -7.156132698059082
    8. ',k' → logprob: -7.156132698059082
    9. ' =' → logprob: -7.156132698059082
    10. '<|end|>' → logprob: -7.156132698059082

Token 190: ' longueur' (ID: 104613)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.5230585932731628
    2. 'nombre' → logprob: -2.0230586528778076
    3. ' la' → logprob: -2.3980586528778076
    4. ' nombre' → logprob: -3.1480586528778076
    5. 'n' → logprob: -3.5230586528778076
    6. ' taille' → logprob: -3.6480586528778076
    7. 'len' → logprob: -3.7730586528778076
    8. 'length' → logprob: -3.8980586528778076
    9. ' n' → logprob: -4.2730584144592285
    10. 'size' → logprob: -5.1480584144592285

Token 191: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09764190018177032
    2. ' ,' → logprob: -3.472641944885254
    3. 's' → logprob: -3.722641944885254
    4. ' de' → logprob: -3.847641944885254
    5. ' s' → logprob: -4.472641944885254
    6. 'de' → logprob: -6.097641944885254
    7. '   ' → logprob: -6.097641944885254
    8. ',s' → logprob: -8.972641944885254
    9. ' of' → logprob: -9.347641944885254
    10. '  ' → logprob: -9.722641944885254

Token 192: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.032126639038324356
    2. 's' → logprob: -3.9071266651153564
    3. ' la' → logprob: -4.532126426696777
    4. 'l' → logprob: -7.907126426696777
    5. ' s' → logprob: -7.907126426696777
    6. 'chaine' → logprob: -11.157126426696777
    7. 'input' → logprob: -13.157126426696777
    8. 'string' → logprob: -13.407126426696777
    9. 'a' → logprob: -13.407126426696777
    10. ' ' → logprob: -14.282126426696777

Token 193: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.18942975997924805
    2. 'cha' → logprob: -2.814429759979248
    3. 's' → logprob: -2.939429759979248
    4. ' chaîne' → logprob: -3.064429759979248
    5. 'string' → logprob: -4.439429759979248
    6. ' s' → logprob: -7.939429759979248
    7. ' chaine' → logprob: -8.189430236816406
    8. 'str' → logprob: -8.189430236816406
    9. 'chain' → logprob: -8.814430236816406
    10. 'input' → logprob: -9.689430236816406

Token 194: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21626372635364532
    2. ' s' → logprob: -2.216263771057129
    3. ',' → logprob: -2.841263771057129
    4. '
' → logprob: -3.966263771057129
    5. '<|end|>' → logprob: -5.841263771057129
    6. 'n' → logprob: -6.716263771057129
    7. '  
' → logprob: -6.841263771057129
    8. '   ' → logprob: -7.716263771057129
    9. ',s' → logprob: -7.716263771057129
    10. '    
' → logprob: -7.966263771057129

Token 195: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.47407880425453186
    2. ' k' → logprob: -0.9740787744522095
    3. ' ' → logprob: -13.724079132080078
    4. '	k' → logprob: -14.349079132080078
    5. ' ' → logprob: -16.599079132080078
    6. '  ' → logprob: -17.974079132080078
    7. '   ' → logprob: -17.974079132080078
    8. '_k' → logprob: -19.099079132080078
    9. ' s' → logprob: -19.599079132080078
    10. ' ' → logprob: -19.849079132080078

Token 196: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8362377285957336
    2. ' =' → logprob: -0.8362377285957336
    3. ')' → logprob: -2.086237668991089
    4. ',' → logprob: -5.711237907409668
    5. '<|end|>' → logprob: -5.711237907409668
    6. ' )' → logprob: -7.336237907409668
    7. '),' → logprob: -7.586237907409668
    8. ')=' → logprob: -7.961237907409668
    9. '#' → logprob: -8.711237907409668
    10. 'def' → logprob: -8.961237907409668

Token 197: ' nombre' (ID: 9733)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5416571497917175
    2. ' k' → logprob: -1.4166572093963623
    3. ' nombre' → logprob: -2.1666572093963623
    4. 'nombre' → logprob: -3.1666572093963623
    5. ' allowed' → logprob: -4.916656970977783
    6. 'max' → logprob: -5.666656970977783
    7. ' flips' → logprob: -6.166656970977783
    8. 'allowed' → logprob: -6.291656970977783
    9. ' permitted' → logprob: -7.291656970977783
    10. ' max' → logprob: -7.291656970977783

Token 198: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: ' flips' (ID: 169694)
  Prédit: ' flips'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flips' → logprob: -0.06059947609901428
    2. 'fl' → logprob: -3.5605995655059814
    3. ' flip' → logprob: -4.560599327087402
    4. 'flip' → logprob: -5.185599327087402
    5. '0' → logprob: -5.435599327087402
    6. ' ' → logprob: -6.185599327087402
    7. ' sous' → logprob: -6.310599327087402
    8. ' retourn' → logprob: -6.435599327087402
    9. 'sub' → logprob: -6.935599327087402
    10. ' ret' → logprob: -7.685599327087402

Token 200: ' autor' (ID: 13432)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11778524518013
    2. '
' → logprob: -2.4927852153778076
    3. '   ' → logprob: -4.117785453796387
    4. ' s' → logprob: -4.617785453796387
    5. '    
' → logprob: -6.867785453796387
    6. '  
' → logprob: -7.867785453796387
    7. '<|end|>' → logprob: -8.117785453796387
    8. '(s' → logprob: -9.242785453796387
    9. '   
' → logprob: -9.492785453796387
    10. '  ' → logprob: -9.617785453796387

Token 201: 'isés' (ID: 58890)
  Prédit: 'isés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isés' → logprob: -0.0488111637532711
    2. 'isées' → logprob: -3.048811197280884
    3. 'is' → logprob: -9.048810958862305
    4. 'isé' → logprob: -9.673810958862305
    5. 'ises' → logprob: -11.173810958862305
    6. '   ' → logprob: -11.673810958862305
    7. 'isée' → logprob: -11.798810958862305
    8. 'ités' → logprob: -12.423810958862305
    9. 'és' → logprob: -12.423810958862305
    10. '```' → logprob: -13.548810958862305

Token 202: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05167993903160095
    2. '
' → logprob: -3.926679849624634
    3. '   ' → logprob: -4.051680088043213
    4. ' s' → logprob: -4.676680088043213
    5. '<|end|>' → logprob: -6.426680088043213
    6. '    
' → logprob: -7.426680088043213
    7. '```' → logprob: -7.426680088043213
    8. '(s' → logprob: -8.051679611206055
    9. '<|end|>' → logprob: -8.551679611206055
    10. '  
' → logprob: -8.676679611206055

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5410297513008118
    2. 's' → logprob: -0.9160297513008118
    3. '
' → logprob: -4.541029930114746
    4. ' s' → logprob: -5.041029930114746
    5. '    
' → logprob: -7.666029930114746
    6. '	s' → logprob: -9.666029930114746
    7. '  ' → logprob: -10.791029930114746
    8. '  
' → logprob: -11.416029930114746
    9. '    ' → logprob: -11.541029930114746
    10. ' 
' → logprob: -11.791029930114746

Token 204: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.038048259913921356
    2. ' s' → logprob: -3.288048267364502
    3. '   ' → logprob: -11.913047790527344
    4. '	s' → logprob: -16.788047790527344
    5. ' ' → logprob: -17.288047790527344
    6. 'n' → logprob: -17.913047790527344
    7. '(s' → logprob: -18.038047790527344
    8. 'string' → logprob: -18.163047790527344
    9. '
' → logprob: -18.163047790527344
    10. '_s' → logprob: -18.288047790527344

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759577751159668
    2. '=' → logprob: -0.8259577751159668
    3. '=input' → logprob: -10.950958251953125
    4. ')' → logprob: -15.575958251953125
    5. ' ' → logprob: -15.950958251953125
    6. '   ' → logprob: -16.200958251953125
    7. ' ' → logprob: -16.575958251953125
    8. '_' → logprob: -16.700958251953125
    9. '[' → logprob: -16.825958251953125
    10. '.' → logprob: -16.950958251953125

Token 206: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07888978719711304
    2. 'input' → logprob: -2.578889846801758
    3. '=input' → logprob: -17.328889846801758
    4. ' ' → logprob: -17.453889846801758
    5. '(input' → logprob: -18.078889846801758
    6. '	input' → logprob: -18.203889846801758
    7. '   ' → logprob: -18.828889846801758
    8. '<input' → logprob: -19.328889846801758
    9. '.input' → logprob: -20.203889846801758
    10. '_input' → logprob: -20.703889846801758

Token 207: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003013809327967465
    2. '().' → logprob: -8.125301361083984
    3. ' ()' → logprob: -12.875301361083984
    4. '())' → logprob: -14.000301361083984
    5. '()>' → logprob: -14.750301361083984
    6. '()`' → logprob: -14.875301361083984
    7. '()
' → logprob: -15.125301361083984
    8. '(' → logprob: -15.250301361083984
    9. ')' → logprob: -15.750301361083984
    10. '()[' → logprob: -16.500301361083984

Token 208: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012678928673267365
    2. '   ' → logprob: -4.887679100036621
    3. '    
' → logprob: -5.512679100036621
    4. '  
' → logprob: -7.762679100036621
    5. '   
' → logprob: -8.637679100036621
    6. ' 
' → logprob: -8.637679100036621
    7. '
' → logprob: -9.512679100036621
    8. '

' → logprob: -9.512679100036621
    9. '```' → logprob: -10.262679100036621
    10. 'n' → logprob: -10.637679100036621

Token 209: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.260469526052475
    2. '
' → logprob: -1.6354695558547974
    3. '    
' → logprob: -4.010469436645508
    4. 'n' → logprob: -5.635469436645508
    5. '   
' → logprob: -6.385469436645508
    6. 'def' → logprob: -6.385469436645508
    7. 'start' → logprob: -6.635469436645508
    8. 'window' → logprob: -6.635469436645508
    9. 'left' → logprob: -6.760469436645508
    10. '  
' → logprob: -6.885469436645508

Token 210: ' La' (ID: 3038)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3874737024307251
    2. 's' → logprob: -1.137473702430725
    3. 'input' → logprob: -8.012474060058594
    4. ' input' → logprob: -8.887474060058594
    5. ' ' → logprob: -9.512474060058594
    6. '"' → logprob: -10.762474060058594
    7. 'str' → logprob: -11.887474060058594
    8. ' "' → logprob: -12.262474060058594
    9. ' '' → logprob: -12.512474060058594
    10. '_s' → logprob: -12.637474060058594

Token 211: ' chaîne' (ID: 89288)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.08775206655263901
    2. ' chaîne' → logprob: -3.337752103805542
    3. ' ' → logprob: -3.837752103805542
    4. 's' → logprob: -4.087751865386963
    5. ' string' → logprob: -5.337751865386963
    6. ' chaine' → logprob: -5.962751865386963
    7. 'chaine' → logprob: -6.462751865386963
    8. 'string' → logprob: -7.587751865386963
    9. '  ' → logprob: -8.462752342224121
    10. ' chain' → logprob: -8.962752342224121

Token 212: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00595427630469203
    2. 'n' → logprob: -6.255954265594482
    3. '
' → logprob: -7.630954265594482
    4. '    
' → logprob: -7.630954265594482
    5. 'left' → logprob: -8.13095474243164
    6. 'window' → logprob: -8.13095474243164
    7. 'length' → logprob: -8.25595474243164
    8. ' =' → logprob: -8.38095474243164
    9. '```' → logprob: -8.38095474243164
    10. '  ' → logprob: -8.50595474243164

Token 213: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.00012642296496778727
    2. 'in' → logprob: -9.375126838684082
    3. '"' → logprob: -11.375126838684082
    4. 'inary' → logprob: -11.500126838684082
    5. 'ina' → logprob: -12.625126838684082
    6. '#' → logprob: -12.625126838684082
    7. '```' → logprob: -12.875126838684082
    8. 'inar' → logprob: -13.000126838684082
    9. ''' → logprob: -13.125126838684082
    10. '   ' → logprob: -13.750126838684082

Token 214: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06382882595062256
    2. '   ' → logprob: -2.938828945159912
    3. '    
' → logprob: -4.938828945159912
    4. '
' → logprob: -8.313828468322754
    5. '  
' → logprob: -8.313828468322754
    6. '

' → logprob: -8.313828468322754
    7. '   
' → logprob: -8.438828468322754
    8. '```' → logprob: -8.563828468322754
    9. '
    
' → logprob: -8.688828468322754
    10. ' 
' → logprob: -8.813828468322754

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004809010773897171
    2. '    
' → logprob: -5.6298089027404785
    3. '
' → logprob: -7.0048089027404785
    4. 'left' → logprob: -9.379809379577637
    5. '   
' → logprob: -9.879809379577637
    6. ' left' → logprob: -10.004809379577637
    7. '  
' → logprob: -10.629809379577637
    8. '```' → logprob: -10.879809379577637
    9. 'start' → logprob: -11.254809379577637
    10. '  ' → logprob: -11.504809379577637

Token 216: ' rest' (ID: 2867)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.33562129735946655
    2. ' left' → logprob: -1.4606213569641113
    3. '   ' → logprob: -2.9606213569641113
    4. 'l' → logprob: -7.460621356964111
    5. 'start' → logprob: -8.085620880126953
    6. 'window' → logprob: -9.460620880126953
    7. ' start' → logprob: -9.585620880126953
    8. '    
' → logprob: -9.960620880126953
    9. ' l' → logprob: -10.085620880126953
    10. '
' → logprob: -10.585620880126953

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030778110027313232
    2. '=' → logprob: -5.280777931213379
    3. '_' → logprob: -5.405777931213379
    4. '_length' → logprob: -5.405777931213379
    5. '_left' → logprob: -5.405777931213379
    6. '_k' → logprob: -5.780777931213379
    7. 'art' → logprob: -6.905777931213379
    8. 'r' → logprob: -7.030777931213379
    9. '_len' → logprob: -7.280777931213379
    10. 'e' → logprob: -7.405777931213379

Token 218: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5378403663635254
    2. ' k' → logprob: -1.6628403663635254
    3. '0' → logprob: -1.9128403663635254
    4. 'k' → logprob: -3.1628403663635254
    5. ' n' → logprob: -4.162840366363525
    6. ' [' → logprob: -5.287840366363525
    7. 'n' → logprob: -6.162840366363525
    8. '{}' → logprob: -6.287840366363525
    9. ' {}' → logprob: -6.412840366363525
    10. ' -' → logprob: -6.537840366363525

Token 219: '    ' (ID: 257)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0601351261138916
    2. '
' → logprob: -1.5601351261138916
    3. '   ' → logprob: -2.1851351261138916
    4. ' ' → logprob: -2.3101351261138916
    5. ',' → logprob: -2.4351351261138916
    6. '=' → logprob: -3.1851351261138916
    7. '  ' → logprob: -3.8101351261138916
    8. ' for' → logprob: -4.5601348876953125
    9. '0' → logprob: -4.8101348876953125
    10. 'count' → logprob: -4.8101348876953125

Token 220: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.282472163438797
    2. '=' → logprob: -2.0324721336364746
    3. '
' → logprob: -2.7824721336364746
    4. ' =' → logprob: -3.6574721336364746
    5. ' +' → logprob: -4.282472133636475
    6. '0' → logprob: -5.657472133636475
    7. 'rest' → logprob: -5.782472133636475
    8. 'count' → logprob: -7.282472133636475
    9. '  ' → logprob: -7.407472133636475
    10. ' ' → logprob: -7.532472133636475

Token 221: ' Nombre' (ID: 70208)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1582467555999756
    2. ' rest' → logprob: -1.5332467555999756
    3. ' ' → logprob: -1.6582467555999756
    4. 'rest' → logprob: -2.5332467555999756
    5. ' k' → logprob: -2.5332467555999756
    6. 'k' → logprob: -2.9082467555999756
    7. ' s' → logprob: -3.5332467555999756
    8. 's' → logprob: -3.9082467555999756
    9. ' n' → logprob: -5.408246994018555
    10. 'n' → logprob: -5.658246994018555

Token 222: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -1.8097807168960571
    2. '_remaining' → logprob: -1.8097807168960571
    3. '_fl' → logprob: -2.0597805976867676
    4. '_rest' → logprob: -2.3097805976867676
    5. '_con' → logprob: -2.5597805976867676
    6. '_flip' → logprob: -2.6847805976867676
    7. '<|end|>' → logprob: -2.8097805976867676
    8. ' de' → logprob: -2.8097805976867676
    9. ' =' → logprob: -3.0597805976867676
    10. '_des' → logprob: -3.1847805976867676

Token 223: ' flips' (ID: 169694)
  Prédit: ' flips'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flips' → logprob: -0.03658250346779823
    2. '0' → logprob: -4.2865824699401855
    3. 'fl' → logprob: -4.6615824699401855
    4. ' ' → logprob: -5.1615824699401855
    5. 'flip' → logprob: -5.7865824699401855
    6. ' flip' → logprob: -6.1615824699401855
    7. ' zeros' → logprob: -7.7865824699401855
    8. ' flipped' → logprob: -7.9115824699401855
    9. ' sous' → logprob: -8.286582946777344
    10. ' flipping' → logprob: -8.411582946777344

Token 224: ' rest' (ID: 2867)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36775878071784973
    2. '_used' → logprob: -2.7427587509155273
    3. '_remaining' → logprob: -2.8677587509155273
    4. '_rest' → logprob: -3.1177587509155273
    5. '_left' → logprob: -3.3677587509155273
    6. '_available' → logprob: -3.9927587509155273
    7. '_allowed' → logprob: -3.9927587509155273
    8. '_possible' → logprob: -4.242758750915527
    9. ' utilisés' → logprob: -4.742758750915527
    10. ' disponibles' → logprob: -5.117758750915527

Token 225: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.09105977416038513
    2. 'ant' → logprob: -2.466059684753418
    3. 'antes' → logprob: -6.716059684753418
    4. 'raints' → logprob: -8.341059684753418
    5. 'r' → logprob: -8.466059684753418
    6. 'aurants' → logprob: -9.091059684753418
    7. 'a' → logprob: -9.216059684753418
    8. 'à' → logprob: -9.716059684753418
    9. 'au' → logprob: -9.966059684753418
    10. '   ' → logprob: -11.216059684753418

Token 226: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.320819228887558
    2. '
' → logprob: -1.6958192586898804
    3. ' left' → logprob: -2.945819139480591
    4. 'left' → logprob: -3.945819139480591
    5. '    
' → logprob: -4.94581937789917
    6. 'start' → logprob: -5.94581937789917
    7. ' start' → logprob: -6.19581937789917
    8. ' l' → logprob: -6.69581937789917
    9. ' window' → logprob: -6.82081937789917
    10. ',' → logprob: -6.94581937789917

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006272528320550919
    2. ' start' → logprob: -6.506272315979004
    3. ' left' → logprob: -6.756272315979004
    4. '    
' → logprob: -7.006272315979004
    5. '
' → logprob: -7.256272315979004
    6. 'start' → logprob: -7.506272315979004
    7. 'left' → logprob: -7.506272315979004
    8. ' i' → logprob: -8.131272315979004
    9. '```' → logprob: -9.006272315979004
    10. ',' → logprob: -9.506272315979004

Token 228: ' i' (ID: 575)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5375095009803772
    2. ' left' → logprob: -0.9125095009803772
    3. 'start' → logprob: -4.912509441375732
    4. 'l' → logprob: -6.037509441375732
    5. ' start' → logprob: -6.037509441375732
    6. '   ' → logprob: -7.037509441375732
    7. ' l' → logprob: -7.787509441375732
    8. 'i' (adapté à ' i') → logprob: -8.16250991821289
    9. 'max' → logprob: -8.78750991821289
    10. ' i' → logprob: -9.41250991821289

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1092466190457344
    2. ',' → logprob: -2.4842467308044434
    3. '=' → logprob: -3.9842467308044434
    4. ' ,' → logprob: -6.734246730804443
    5. ' ' → logprob: -9.109246253967285
    6. ',j' → logprob: -9.859246253967285
    7. 'n' → logprob: -10.109246253967285
    8. '<|end|>' → logprob: -10.359246253967285
    9. '  ' → logprob: -10.734246253967285
    10. ',n' → logprob: -11.484246253967285

Token 230: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012515183538198471
    2. ' ' → logprob: -4.387515068054199
    3. '   ' → logprob: -12.7625150680542
    4. '  ' → logprob: -13.5125150680542
    5. 'j' → logprob: -14.8875150680542
    6. '<|end|>' → logprob: -15.0125150680542
    7. '    ' → logprob: -16.012516021728516
    8. '1' → logprob: -16.262516021728516
    9. ' j' → logprob: -16.262516021728516
    10. '```' → logprob: -17.075016021728516

Token 231: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014025058771949261
    2. ' ' → logprob: -8.875140190124512
    3. '1' → logprob: -15.875140190124512
    4. '  ' → logprob: -16.750141143798828
    5. '<|end|>' → logprob: -16.750141143798828
    6. '   ' → logprob: -17.000141143798828
    7. '-' → logprob: -17.375141143798828
    8. '```' → logprob: -18.125141143798828
    9. 'i' → logprob: -18.375141143798828
    10. 's' → logprob: -18.750141143798828

Token 232: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012040399014949799
    2. '   ' → logprob: -5.887040615081787
    3. ' 
' → logprob: -6.012040615081787
    4. '<|end|>' → logprob: -6.012040615081787
    5. '  
' → logprob: -6.137040615081787
    6. '    
' → logprob: -6.762040615081787
    7. '<|end|>' → logprob: -8.137040138244629
    8. '   
' → logprob: -8.512040138244629
    9. ',' → logprob: -9.387040138244629
    10. '	
' → logprob: -10.012040138244629

Token 233: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05939490348100662
    2. '<|end|>' → logprob: -3.5593948364257812
    3. 'max' → logprob: -4.809394836425781
    4. '  ' → logprob: -5.684394836425781
    5. ',' → logprob: -5.684394836425781
    6. '   ' → logprob: -5.809394836425781
    7. '  
' → logprob: -6.309394836425781
    8. '    
' → logprob: -6.559394836425781
    9. '<|end|>' → logprob: -7.059394836425781
    10. 'n' → logprob: -7.059394836425781

Token 234: ' P' (ID: 398)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.5763916969299316
    2. 'left' → logprob: -1.7013916969299316
    3. ' left' → logprob: -1.8263916969299316
    4. 'start' → logprob: -1.9513916969299316
    5. 'max' → logprob: -2.4513916969299316
    6. ' j' → logprob: -2.4513916969299316
    7. '0' → logprob: -3.3263916969299316
    8. ' start' → logprob: -3.4513916969299316
    9. ' ' → logprob: -3.4513916969299316
    10. ' max' → logprob: -3.9513916969299316

Token 235: 'oin' (ID: 1979)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1977702379226685
    2. 'oint' → logprob: -1.5727702379226685
    3. 'ivot' → logprob: -2.072770118713379
    4. 'ointer' → logprob: -2.197770118713379
    5. 'rev' → logprob: -2.822770118713379
    6. 'r' → logprob: -2.947770118713379
    7. 'os' → logprob: -3.822770118713379
    8. 'i' → logprob: -3.947770118713379
    9. 'osition' → logprob: -4.197770118713379
    10. '1' → logprob: -4.447770118713379

Token 236: 'teur' (ID: 45262)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.8114091753959656
    2. 'ointer' → logprob: -1.4364092350006104
    3. 'int' → logprob: -2.3114092350006104
    4. 'nt' → logprob: -2.6864092350006104
    5. '   ' → logprob: -2.9364092350006104
    6. 'inte' → logprob: -3.8114092350006104
    7. 'n' → logprob: -4.186408996582031
    8. 'j' → logprob: -4.186408996582031
    9. '  ' → logprob: -4.561408996582031
    10. 'u' → logprob: -4.811408996582031

Token 237: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6741023659706116
    2. 'j' → logprob: -1.9241023063659668
    3. ' j' → logprob: -2.299102306365967
    4. '<|end|>' → logprob: -2.924102306365967
    5. ',' → logprob: -3.424102306365967
    6. ' =' → logprob: -3.549102306365967
    7. 'for' → logprob: -3.924102306365967
    8. ' for' → logprob: -4.049102306365967
    9. ',j' → logprob: -4.049102306365967
    10. '  ' → logprob: -4.174102306365967

Token 238: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.12006547302007675
    2. 'la' → logprob: -2.620065450668335
    3. ' le' → logprob: -4.495065689086914
    4. 's' → logprob: -4.870065689086914
    5. ' ' → logprob: -5.495065689086914
    6. ' s' → logprob: -5.620065689086914
    7. 'le' → logprob: -6.120065689086914
    8. 'l' → logprob: -6.245065689086914
    9. ' l' → logprob: -6.370065689086914
    10. 'j' → logprob: -6.495065689086914

Token 239: ' position' (ID: 4010)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8249427080154419
    2. ' s' → logprob: -1.324942708015442
    3. ' début' → logprob: -2.8249425888061523
    4. 'j' → logprob: -3.3249425888061523
    5. ' j' → logprob: -3.4499425888061523
    6. 'dé' → logprob: -3.5749425888061523
    7. ' string' → logprob: -4.449942588806152
    8. ' window' → logprob: -4.574942588806152
    9. 'window' → logprob: -4.574942588806152
    10. ' fenêtre' → logprob: -4.574942588806152

Token 240: ' actuelle' (ID: 104951)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8941934108734131
    2. 'j' → logprob: -1.019193410873413
    3. ' j' → logprob: -1.644193410873413
    4. '  ' → logprob: -4.769193649291992
    5. ' ' → logprob: -4.894193649291992
    6. 's' → logprob: -5.769193649291992
    7. ',' → logprob: -5.894193649291992
    8. ' =' → logprob: -6.269193649291992
    9. ',j' → logprob: -6.894193649291992
    10. ' gauche' → logprob: -6.894193649291992

Token 241: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.11280611157417297
    2. 's' → logprob: -2.8628060817718506
    3. ' la' → logprob: -3.1128060817718506
    4. 'la' → logprob: -5.48780632019043
    5. ' ' → logprob: -7.36280632019043
    6. ' the' → logprob: -8.61280632019043
    7. 'the' → logprob: -9.86280632019043
    8. '   ' → logprob: -10.48780632019043
    9. 'l' → logprob: -10.73780632019043
    10. '  ' → logprob: -11.23780632019043

Token 243: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4490375518798828
    2. 'chaine' → logprob: -1.3240375518798828
    3. 'string' → logprob: -2.574037551879883
    4. ' chaîne' → logprob: -4.449037551879883
    5. 'cha' → logprob: -5.574037551879883
    6. ' s' → logprob: -6.199037551879883
    7. ' string' → logprob: -7.199037551879883
    8. ' ' → logprob: -7.949037551879883
    9. ' chaine' → logprob: -7.949037551879883
    10. '   ' → logprob: -8.699037551879883

Token 244: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7905344367027283
    2. ' j' → logprob: -1.540534496307373
    3. 'j' → logprob: -2.040534496307373
    4. ' 
' → logprob: -2.540534496307373
    5. '
' → logprob: -3.165534496307373
    6. '    
' → logprob: -4.165534496307373
    7. '  
' → logprob: -4.540534496307373
    8. 'rest' → logprob: -4.540534496307373
    9. ',' → logprob: -4.790534496307373
    10. '```' → logprob: -4.915534496307373

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011793019250035286
    2. ' j' → logprob: -5.01179313659668
    3. 'j' → logprob: -6.76179313659668
    4. '```' → logprob: -7.13679313659668
    5. ' max' → logprob: -7.26179313659668
    6. '    
' → logprob: -7.38679313659668
    7. ' 
' → logprob: -8.38679313659668
    8. 'max' → logprob: -8.38679313659668
    9. 'n' → logprob: -8.51179313659668
    10. '  ' → logprob: -8.51179313659668

Token 246: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07387468218803406
    2. 'j' → logprob: -3.1988747119903564
    3. '   ' → logprob: -3.5738747119903564
    4. ' max' → logprob: -7.323874473571777
    5. 'best' → logprob: -7.823874473571777
    6. 'left' → logprob: -8.198874473571777
    7. 'rest' → logprob: -8.448874473571777
    8. 'res' → logprob: -9.073874473571777
    9. 'result' → logprob: -9.073874473571777
    10. 'start' → logprob: -9.198874473571777

Token 247: ' Première' (ID: 179764)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4775100350379944
    2. ' max' → logprob: -1.3525099754333496
    3. 'j' → logprob: -3.1025099754333496
    4. ' j' → logprob: -3.8525099754333496
    5. 'left' → logprob: -4.22750997543335
    6. 'start' → logprob: -4.97750997543335
    7. ' left' → logprob: -4.97750997543335
    8. 'from' → logprob: -5.35250997543335
    9. 'rest' → logprob: -5.47750997543335
    10. ' rest' → logprob: -5.85250997543335

Token 248: ' phase' (ID: 15222)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4453049898147583
    2. '_window' → logprob: -1.9453049898147583
    3. 'window' → logprob: -2.3203048706054688
    4. '_' → logprob: -2.8203048706054688
    5. '_occ' → logprob: -2.8203048706054688
    6. 'max' → logprob: -3.1953048706054688
    7. '=' → logprob: -3.4453048706054688
    8. '_flip' → logprob: -3.8203048706054688
    9. '_seen' → logprob: -3.8203048706054688
    10. '   ' → logprob: -3.9453048706054688

Token 249: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07100241631269455
    2. ' =' → logprob: -3.32100248336792
    3. ',' → logprob: -4.94600248336792
    4. 'max' → logprob: -4.94600248336792
    5. ':' → logprob: -5.57100248336792
    6. 'def' → logprob: -5.82100248336792
    7. 'rest' → logprob: -6.32100248336792
    8. 'while' → logprob: -6.44600248336792
    9. '=' → logprob: -6.57100248336792
    10. '  ' → logprob: -6.94600248336792

Token 250: ' trouver' (ID: 23195)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.46552708745002747
    2. 'max' → logprob: -1.340527057647705
    3. '   ' → logprob: -3.340527057647705
    4. ' left' → logprob: -3.590527057647705
    5. 'left' → logprob: -4.590527057647705
    6. ' j' → logprob: -4.715527057647705
    7. ' window' → logprob: -4.965527057647705
    8. 'j' → logprob: -5.215527057647705
    9. ' for' → logprob: -6.465527057647705
    10. ' longest' → logprob: -6.465527057647705

Token 251: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6709542870521545
    2. ' le' → logprob: -1.9209542274475098
    3. 'max' → logprob: -2.5459542274475098
    4. 'le' → logprob: -3.2959542274475098
    5. 'la' → logprob: -3.4209542274475098
    6. ' the' → logprob: -3.5459542274475098
    7. ' max' → logprob: -3.5459542274475098
    8. 'the' → logprob: -3.9209542274475098
    9. ' ' → logprob: -4.29595422744751
    10. '   ' → logprob: -4.42095422744751

Token 252: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.15487122535705566
    2. ' max' → logprob: -3.1548712253570557
    3. ' longest' → logprob: -3.6548712253570557
    4. 'long' → logprob: -3.9048712253570557
    5. 'j' → logprob: -4.654870986938477
    6. ' j' → logprob: -4.904870986938477
    7. 'result' → logprob: -5.029870986938477
    8. 'best' → logprob: -5.029870986938477
    9. 'window' → logprob: -5.779870986938477
    10. 'plus' → logprob: -5.904870986938477

Token 253: ' longue' (ID: 59564)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.05246811732649803
    2. ' longue' → logprob: -3.1774680614471436
    3. '_long' → logprob: -5.177468299865723
    4. ' long' → logprob: -6.177468299865723
    5. 'max' → logprob: -7.052468299865723
    6. 'large' → logprob: -8.052468299865723
    7. '   ' → logprob: -8.802468299865723
    8. 'lo' → logprob: -9.677468299865723
    9. ' maximale' → logprob: -9.802468299865723
    10. '```' → logprob: -10.552468299865723

Token 254: ' sous' (ID: 14487)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.35467493534088135
    2. ' window' → logprob: -1.9796749353408813
    3. ' fenêtre' → logprob: -2.979674816131592
    4. 'while' → logprob: -3.479674816131592
    5. '_window' → logprob: -4.229674816131592
    6. 'con' → logprob: -4.229674816131592
    7. 'sequence' → logprob: -4.354674816131592
    8. '   ' → logprob: -5.354674816131592
    9. 'max' → logprob: -5.729674816131592
    10. 'sub' → logprob: -5.729674816131592

Token 255: '-cha' (ID: 163177)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5133815407752991
    2. '_' → logprob: -1.2633814811706543
    3. '_sequence' → logprob: -2.7633814811706543
    4. 'sequence' → logprob: -4.138381481170654
    5. '_s' → logprob: -4.638381481170654
    6. 'chaine' → logprob: -5.013381481170654
    7. '_i' → logprob: -5.888381481170654
    8. '_j' → logprob: -6.013381481170654
    9. '=' → logprob: -6.513381481170654
    10. '_l' → logprob: -6.638381481170654

Token 256: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.011854756623506546
    2. 'ine' → logprob: -4.761854648590088
    3. 'ne' → logprob: -6.386854648590088
    4. 'ïne' → logprob: -7.511854648590088
    5. 'î' → logprob: -7.761854648590088
    6. '   ' → logprob: -8.636855125427246
    7. '_' → logprob: -9.261855125427246
    8. '\' → logprob: -10.136855125427246
    9. 'în' → logprob: -10.136855125427246
    10. 'íne' → logprob: -10.886855125427246

Token 257: ' possible' (ID: 4149)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8527137637138367
    2. 'de' → logprob: -1.8527138233184814
    3. ' continue' → logprob: -1.8527138233184814
    4. '   ' → logprob: -2.3527138233184814
    5. 'continue' → logprob: -3.2277138233184814
    6. 'cont' → logprob: -3.3527138233184814
    7. 'con' → logprob: -4.602713584899902
    8. ' avec' → logprob: -4.977713584899902
    9. ' contiguous' → logprob: -4.977713584899902
    10. ' valide' → logprob: -4.977713584899902

Token 258: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0589570552110672
    2. 'while' → logprob: -4.183957099914551
    3. ' while' → logprob: -4.683957099914551
    4. ' with' → logprob: -5.058957099914551
    5. ' avec' → logprob: -5.183957099914551
    6. ' de' → logprob: -5.433957099914551
    7. 'de' → logprob: -5.558957099914551
    8. 'with' → logprob: -5.933957099914551
    9. '  ' → logprob: -6.683957099914551
    10. ',' → logprob: -6.683957099914551

Token 259: ' part' (ID: 997)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.5652512311935425
    2. ' gl' → logprob: -2.190251350402832
    3. 'util' → logprob: -2.440251350402832
    4. 'gl' → logprob: -2.940251350402832
    5. 'dé' → logprob: -3.190251350402832
    6. ' dé' → logprob: -3.815251350402832
    7. 's' → logprob: -4.190251350402832
    8. ' gard' → logprob: -4.190251350402832
    9. ' avanç' → logprob: -4.315251350402832
    10. '```' → logprob: -4.815251350402832

Token 260: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.2823166847229004
    2. 'ie' → logprob: -1.4073166847229004
    3. '-' → logprob: -7.0323166847229
    4. 'ir' → logprob: -9.657316207885742
    5. 'ies' → logprob: -10.157316207885742
    6. 'i' → logprob: -10.657316207885742
    7. 'out' → logprob: -10.907316207885742
    8. 'ielle' → logprob: -10.907316207885742
    9. 'age' → logprob: -11.282316207885742
    10. '   ' → logprob: -11.282316207885742

Token 261: ' du' (ID: 1462)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4805350601673126
    2. '   ' → logprob: -1.9805350303649902
    3. 'from' → logprob: -2.1055350303649902
    4. ' de' → logprob: -2.3555350303649902
    5. ' from' → logprob: -4.60553503036499
    6. 'd' → logprob: -5.35553503036499
    7. '  ' → logprob: -5.85553503036499
    8. 'à' → logprob: -6.23053503036499
    9. ' du' → logprob: -6.48053503036499
    10. 'du' → logprob: -6.48053503036499

Token 262: ' début' (ID: 29589)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.056215886026620865
    2. '0' → logprob: -3.43121600151062
    3. 'd' → logprob: -5.181215763092041
    4. 'c' → logprob: -5.181215763092041
    5. 'prem' → logprob: -5.931215763092041
    6. 'i' → logprob: -6.056215763092041
    7. 'j' → logprob: -6.181215763092041
    8. 'de' → logprob: -6.931215763092041
    9. 'index' → logprob: -7.556215763092041
    10. 'point' → logprob: -8.4312162399292

Token 263: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7008763551712036
    2. ',' → logprob: -1.4508763551712036
    3. 'while' → logprob: -2.700876235961914
    4. ' while' → logprob: -2.950876235961914
    5. 'max' → logprob: -3.200876235961914
    6. ':' → logprob: -3.450876235961914
    7. '<|end|>' → logprob: -4.075876235961914
    8. ' =' → logprob: -4.450876235961914
    9. ' max' → logprob: -5.200876235961914
    10. ' and' → logprob: -5.450876235961914

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024563202634453773
    2. ' while' → logprob: -4.149563312530518
    3. 'while' → logprob: -4.899563312530518
    4. ',' → logprob: -8.77456283569336
    5. '    
' → logprob: -9.02456283569336
    6. ' for' → logprob: -9.39956283569336
    7. '  ' → logprob: -9.39956283569336
    8. 'rest' → logprob: -9.64956283569336
    9. ' and' → logprob: -9.77456283569336
    10. '
' → logprob: -10.02456283569336

Token 265: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8894707560539246
    2. 'max' → logprob: -1.2644708156585693
    3. ' max' → logprob: -2.0144708156585693
    4. 'j' → logprob: -2.8894708156585693
    5. ' j' → logprob: -3.1394708156585693
    6. ' left' → logprob: -4.13947057723999
    7. 'left' → logprob: -4.26447057723999
    8. 'rest' → logprob: -4.63947057723999
    9. 'while' → logprob: -4.88947057723999
    10. ' while' → logprob: -4.88947057723999

Token 266: ' en' (ID: 469)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.130894660949707
    2. '   ' → logprob: -1.505894660949707
    3. 'while' → logprob: -1.755894660949707
    4. ' for' → logprob: -3.255894660949707
    5. ' left' → logprob: -3.380894660949707
    6. 'rest' → logprob: -3.380894660949707
    7. ' window' → logprob: -3.505894660949707
    8. 'left' → logprob: -3.505894660949707
    9. 'for' → logprob: -4.130894660949707
    10. ' rest' → logprob: -4.130894660949707

Token 267: ' transform' (ID: 7118)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.8051436543464661
    2. 'while' → logprob: -1.5551435947418213
    3. ' while' → logprob: -2.0551435947418213
    4. ' gard' → logprob: -2.8051435947418213
    5. 'util' → logprob: -3.6801435947418213
    6. ' gl' → logprob: -3.9301435947418213
    7. ' avanç' → logprob: -4.4301438331604
    8. 's' → logprob: -4.6801438331604
    9. ' faisant' → logprob: -4.8051438331604
    10. ' suivant' → logprob: -5.0551438331604

Token 268: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0012286811834201217
    2. 'er' → logprob: -7.1262288093566895
    3. '   ' → logprob: -9.126228332519531
    4. 'e' → logprob: -9.751228332519531
    5. 'a' → logprob: -9.876228332519531
    6. '0' → logprob: -10.126228332519531
    7. '```' → logprob: -10.876228332519531
    8. 'es' → logprob: -11.126228332519531
    9. '-' → logprob: -11.251228332519531
    10. 'ent' → logprob: -11.501228332519531

Token 269: ' au' (ID: 2791)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.28260427713394165
    2. 'les' → logprob: -2.532604217529297
    3. ' des' → logprob: -2.657604217529297
    4. 's' → logprob: -3.407604217529297
    5. ' ' → logprob: -4.032604217529297
    6. ' s' → logprob: -4.782604217529297
    7. 'des' → logprob: -4.782604217529297
    8. ' '' → logprob: -5.032604217529297
    9. '0' → logprob: -5.407604217529297
    10. '   ' → logprob: -6.282604217529297

Token 270: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.5136949419975281
    2. 'x' → logprob: -1.3886950016021729
    3. 's' → logprob: -3.388695001602173
    4. 'max' → logprob: -3.638695001602173
    5. 'maximum' → logprob: -3.638695001602173
    6. 'tour' → logprob: -4.013694763183594
    7. 'ax' → logprob: -4.638694763183594
    8. ' plus' → logprob: -5.513694763183594
    9. 'moins' → logprob: -5.513694763183594
    10. 'ssi' → logprob: -5.888694763183594

Token 271: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.049082569777965546
    2. ' k' → logprob: -3.0490825176239014
    3. 'rest' → logprob: -8.54908275604248
    4. 'un' → logprob: -9.42408275604248
    5. ' ' → logprob: -9.67408275604248
    6. 'i' → logprob: -10.17408275604248
    7. 'une' → logprob: -10.67408275604248
    8. ' rest' → logprob: -11.29908275604248
    9. '   ' → logprob: -11.54908275604248
    10. '0' → logprob: -11.54908275604248

Token 272: ' plages' (ID: 153531)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.953517735004425
    2. ' zeros' → logprob: -1.8285176753997803
    3. ' ' → logprob: -2.0785176753997803
    4. ' '' → logprob: -2.2035176753997803
    5. ''' → logprob: -2.9535176753997803
    6. ' des' → logprob: -3.0785176753997803
    7. ' espaces' → logprob: -3.5785176753997803
    8. 'des' → logprob: -4.203517913818359
    9. ' de' → logprob: -4.453517913818359
    10. 'zeros' → logprob: -4.828517913818359

Token 273: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.20784719288349152
    2. 'de' → logprob: -1.832847237586975
    3. '   ' → logprob: -4.4578471183776855
    4. '    ' → logprob: -5.7078471183776855
    5. ' ' → logprob: -5.8328471183776855
    6. 'contin' → logprob: -5.9578471183776855
    7. 'd' → logprob: -6.3328471183776855
    8. ' d' → logprob: -6.8328471183776855
    9. 'cont' → logprob: -7.2078471183776855
    10. ' cont' → logprob: -7.4578471183776855

Token 274: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2431187480688095
    2. '0' → logprob: -1.7431187629699707
    3. 'zeros' → logprob: -4.118118762969971
    4. ' zeros' → logprob: -4.993118762969971
    5. 'z' → logprob: -5.118118762969971
    6. ' '' → logprob: -5.243118762969971
    7. ''z' → logprob: -5.368118762969971
    8. ' z' → logprob: -6.993118762969971
    9. ' ' → logprob: -7.368118762969971
    10. 'zero' → logprob: -9.118118286132812

Token 275: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00031186718842945993
    2. ''' → logprob: -8.125311851501465
    3. ' ' → logprob: -12.000311851501465
    4. ''s' → logprob: -12.125311851501465
    5. '"' → logprob: -13.750311851501465
    6. '000' → logprob: -14.000311851501465
    7. 's' → logprob: -14.500311851501465
    8. '00' → logprob: -14.500311851501465
    9. '   ' → logprob: -15.375311851501465
    10. 'zeros' → logprob: -15.625311851501465

Token 276: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00651167519390583
    2. ' '' → logprob: -5.381511688232422
    3. ''s' → logprob: -6.881511688232422
    4. 's' → logprob: -7.381511688232422
    5. ''.' → logprob: -9.256511688232422
    6. '')' → logprob: -9.381511688232422
    7. ''en' → logprob: -11.256511688232422
    8. ' en' → logprob: -11.381511688232422
    9. '0' → logprob: -11.756511688232422
    10. '',' → logprob: -12.506511688232422

Token 277: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0519276857376099
    2. 'while' → logprob: -1.4269276857376099
    3. 'j' → logprob: -2.0519275665283203
    4. ',' → logprob: -2.0519275665283203
    5. ' j' → logprob: -3.0519275665283203
    6. ' while' → logprob: -3.1769275665283203
    7. 'max' → logprob: -4.17692756652832
    8. 's' → logprob: -5.17692756652832
    9. 'count' → logprob: -5.17692756652832
    10. '_j' → logprob: -5.42692756652832

Token 278: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03227774053812027
    2. ''' → logprob: -4.157277584075928
    3. ' ' → logprob: -4.282277584075928
    4. ' '' → logprob: -6.157277584075928
    5. ''s' → logprob: -10.407278060913086
    6. '111' → logprob: -10.532278060913086
    7. '   ' → logprob: -10.782278060913086
    8. ''un' → logprob: -10.782278060913086
    9. '```' → logprob: -11.282278060913086
    10. 'un' → logprob: -11.907278060913086

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007276826072484255
    2. ''' → logprob: -7.250727653503418
    3. ' ' → logprob: -11.125727653503418
    4. ''s' → logprob: -14.250727653503418
    5. '111' → logprob: -14.625727653503418
    6. '11' → logprob: -14.625727653503418
    7. '')' → logprob: -14.750727653503418
    8. ' '' → logprob: -14.875727653503418
    9. 's' → logprob: -15.875727653503418
    10. '"' → logprob: -16.250728607177734

Token 280: ''
' (ID: 2207)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.33622705936431885
    2. 's' → logprob: -2.0862269401550293
    3. ''' → logprob: -2.3362269401550293
    4. ' ')' → logprob: -3.7112269401550293
    5. ')' → logprob: -3.9612269401550293
    6. ' '' → logprob: -5.086226940155029
    7. '')
' → logprob: -5.836226940155029
    8. '.' → logprob: -6.336226940155029
    9. '   ' → logprob: -6.586226940155029
    10. ',' → logprob: -6.711226940155029

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08467639237642288
    2. 'max' → logprob: -3.084676504135132
    3. 'j' → logprob: -4.209676265716553
    4. 'while' → logprob: -5.209676265716553
    5. ' max' → logprob: -5.459676265716553
    6. 'n' → logprob: -5.834676265716553
    7. ' while' → logprob: -6.334676265716553
    8. ' j' → logprob: -6.584676265716553
    9. 'rest' → logprob: -7.084676265716553
    10. 'left' → logprob: -7.209676265716553

Token 282: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11099664121866226
    2. 'max' → logprob: -2.610996723175049
    3. ' max' → logprob: -4.360996723175049
    4. 'left' → logprob: -4.860996723175049
    5. ' left' → logprob: -5.860996723175049
    6. 'j' → logprob: -6.235996723175049
    7. 'start' → logprob: -6.860996723175049
    8. 'n' → logprob: -7.110996723175049
    9. ' j' → logprob: -7.485996723175049
    10. ' n' → logprob: -7.860996723175049

Token 283: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0035235751420259476
    2. 'i' → logprob: -6.003523349761963
    3. ' rest' → logprob: -7.253523349761963
    4. 'rest' → logprob: -9.003523826599121
    5. ' n' → logprob: -9.878523826599121
    6. ' ' → logprob: -9.878523826599121
    7. ' s' → logprob: -10.253523826599121
    8. ' k' → logprob: -10.753523826599121
    9. ' True' → logprob: -11.128523826599121
    10. '   ' → logprob: -11.753523826599121

Token 284: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.004171356093138456
    2. '<' → logprob: -5.629171371459961
    3. '<len' → logprob: -8.379171371459961
    4. '<n' → logprob: -8.754171371459961
    5. ' ' → logprob: -8.879171371459961
    6. '<|end|>' → logprob: -11.129171371459961
    7. ' <=' → logprob: -11.629171371459961
    8. '[' → logprob: -12.754171371459961
    9. ' <
' → logprob: -13.004171371459961
    10. ' <",' → logprob: -13.004171371459961

Token 285: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029751643538475037
    2. ' n' → logprob: -3.5297515392303467
    3. '   ' → logprob: -14.404751777648926
    4. '	n' → logprob: -15.154751777648926
    5. 'len' → logprob: -15.529751777648926
    6. '_n' → logprob: -16.77975082397461
    7. ' ' → logprob: -17.27975082397461
    8. ')n' → logprob: -17.52975082397461
    9. '<|end|>' → logprob: -17.77975082397461
    10. '
' → logprob: -18.02975082397461

Token 286: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0660180076956749
    2. ':' → logprob: -3.1910181045532227
    3. 'and' → logprob: -3.8160181045532227
    4. ':
' → logprob: -7.441018104553223
    5. '   ' → logprob: -9.316018104553223
    6. ' :' → logprob: -10.441018104553223
    7. ' ' → logprob: -10.566018104553223
    8. ' и' → logprob: -13.066018104553223
    9. '	and' → logprob: -13.566018104553223
    10. '=' → logprob: -13.816018104553223

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10814960300922394
    2. ' if' → logprob: -2.483149528503418
    3. '   ' → logprob: -4.858149528503418
    4. '<|end|>' → logprob: -5.233149528503418
    5. 'if' → logprob: -5.858149528503418
    6. '    ' → logprob: -6.483149528503418
    7. '        
' → logprob: -8.608149528503418
    8. 'rest' → logprob: -8.733149528503418
    9. '        ' → logprob: -9.108149528503418
    10. '      ' → logprob: -9.108149528503418

Token 288: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09579501301050186
    2. 'if' (adapté à ' if') → logprob: -2.470794916152954
    3. '    ' → logprob: -5.845795154571533
    4. '<|end|>' → logprob: -7.095795154571533
    5. '       ' → logprob: -7.220795154571533
    6. ' rest' → logprob: -7.345795154571533
    7. '   ' → logprob: -7.470795154571533
    8. 'rest' → logprob: -7.595795154571533
    9. '        ' → logprob: -8.595794677734375
    10. ' ' → logprob: -9.345794677734375

Token 289: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.10236460715532303
    2. 's' → logprob: -2.3523645401000977
    3. 'rest' → logprob: -6.602364540100098
    4. ' rest' → logprob: -7.227364540100098
    5. ' ' → logprob: -11.352364540100098
    6. ' i' → logprob: -11.727364540100098
    7. '(s' → logprob: -11.789864540100098
    8. '	s' → logprob: -12.039864540100098
    9. 'i' → logprob: -12.414864540100098
    10. ' k' → logprob: -12.477364540100098

Token 290: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.20603168499656e-05
    2. '[' → logprob: -10.000061988830566
    3. ' [' → logprob: -12.125061988830566
    4. ' ==' → logprob: -12.500061988830566
    5. '==' → logprob: -13.250061988830566
    6. '[I' → logprob: -14.000061988830566
    7. '```' → logprob: -14.250061988830566
    8. ' ' → logprob: -14.375061988830566
    9. 'i' → logprob: -14.375061988830566
    10. '[j' → logprob: -14.500061988830566

Token 291: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01163196749985218
    2. ' ]' → logprob: -5.761631965637207
    3. ']==' → logprob: -5.886631965637207
    4. '']' → logprob: -5.886631965637207
    5. '==' → logprob: -6.511631965637207
    6. ' ==' → logprob: -7.011631965637207
    7. ''' → logprob: -8.136631965637207
    8. ']=='' → logprob: -9.261631965637207
    9. ' ' → logprob: -10.761631965637207
    10. '=' → logprob: -10.886631965637207

Token 292: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09493403881788254
    2. '==' → logprob: -2.4699339866638184
    3. '=='' → logprob: -5.219933986663818
    4. ' ' → logprob: -8.219934463500977
    5. ' =='' → logprob: -8.844934463500977
    6. ' '' → logprob: -9.719934463500977
    7. ''' → logprob: -10.969934463500977
    8. '=' → logprob: -11.219934463500977
    9. ']==' → logprob: -11.969934463500977
    10. '	' → logprob: -11.969934463500977

Token 293: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.000455340719781816
    2. ' '' → logprob: -7.750455379486084
    3. '"' → logprob: -11.000454902648926
    4. '1' → logprob: -12.250454902648926
    5. '0' → logprob: -13.750454902648926
    6. ''o' → logprob: -14.250454902648926
    7. ''i' → logprob: -15.375454902648926
    8. ''on' → logprob: -16.000455856323242
    9. ''user' → logprob: -16.000455856323242
    10. ' ' → logprob: -16.375455856323242

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014147937297821
    2. '0' → logprob: -1.7014148235321045
    3. ''' → logprob: -14.638915061950684
    4. '')' → logprob: -15.576415061950684
    5. ' ' → logprob: -15.576415061950684
    6. '```' → logprob: -16.763914108276367
    7. '{'' → logprob: -16.826414108276367
    8. '１' → logprob: -17.013914108276367
    9. ')' → logprob: -17.326414108276367
    10. '۱' → logprob: -17.451414108276367

Token 295: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.2063494473695755
    2. ''' → logprob: -1.706349492073059
    3. '':
' → logprob: -5.9563493728637695
    4. ':' → logprob: -6.4563493728637695
    5. ' '' → logprob: -7.9563493728637695
    6. ' ':' → logprob: -8.45634937286377
    7. ')' → logprob: -9.83134937286377
    8. '):' → logprob: -10.08134937286377
    9. '':
' → logprob: -10.95634937286377
    10. ''or' → logprob: -11.20634937286377

Token 296: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6103338599205017
    2. 'i' → logprob: -1.2353339195251465
    3. ' i' → logprob: -2.2353339195251465
    4. '
' → logprob: -2.9853339195251465
    5. '           ' → logprob: -5.2353339195251465
    6. '   ' → logprob: -6.1103339195251465
    7. ' 
' → logprob: -8.485333442687988
    8. '        
' → logprob: -8.610333442687988
    9. ':
' → logprob: -8.735333442687988
    10. ':' → logprob: -8.735333442687988

Token 297: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5711749792098999
    2. ' i' → logprob: -0.9461749792098999
    3. '       ' → logprob: -3.0711750984191895
    4. '           ' → logprob: -8.196174621582031
    5. '   ' → logprob: -9.571174621582031
    6. '        
' → logprob: -10.071174621582031
    7. '        ' → logprob: -10.071174621582031
    8. '
' → logprob: -10.071174621582031
    9. '	i' → logprob: -10.696174621582031
    10. '    ' → logprob: -11.446174621582031

Token 298: ' Av' (ID: 7541)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12757909297943115
    2. ' i' → logprob: -2.1275792121887207
    3. '       ' → logprob: -7.502579212188721
    4. '   ' → logprob: -9.752578735351562
    5. '           ' → logprob: -10.377578735351562
    6. '    ' → logprob: -12.377578735351562
    7. ' ' → logprob: -13.627578735351562
    8. '	i' → logprob: -14.002578735351562
    9. '
' → logprob: -14.252578735351562
    10. '        ' → logprob: -14.377578735351562

Token 299: 'ancer' (ID: 13358)
  Prédit: 'oid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oid' → logprob: -1.2247211933135986
    2. 'oir' → logprob: -1.3497211933135986
    3. 'oi' → logprob: -2.0997211933135986
    4. 'o' → logprob: -2.0997211933135986
    5. 'ail' → logprob: -2.2247211933135986
    6. 'a' → logprob: -3.3497211933135986
    7. 'ance' → logprob: -3.4747211933135986
    8. 'er' → logprob: -5.2247209548950195
    9. '   ' → logprob: -5.2247209548950195
    10. 'ec' → logprob: -6.2247209548950195

Token 300: ' sur' (ID: 1512)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1008518859744072
    2. ' i' → logprob: -2.3508517742156982
    3. '           ' → logprob: -8.100852012634277
    4. '       ' → logprob: -8.725852012634277
    5. ' ' → logprob: -9.725852012634277
    6. ')' → logprob: -10.475852012634277
    7. '   ' → logprob: -10.600852012634277
    8. '
' → logprob: -11.100852012634277
    9. '               ' → logprob: -11.350852012634277
    10. '=' → logprob: -11.975852012634277

Token 301: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4849148988723755
    2. 'i' → logprob: -0.9849148988723755
    3. '1' → logprob: -5.609914779663086
    4. ' ' → logprob: -6.609914779663086
    5. ' la' → logprob: -6.734914779663086
    6. 'l' → logprob: -6.734914779663086
    7. 's' → logprob: -6.984914779663086
    8. ' l' → logprob: -7.234914779663086
    9. '   ' → logprob: -7.359914779663086
    10. ' s' → logprob: -8.234914779663086

Token 302: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1939760446548462
    2. ' i' → logprob: -2.3189759254455566
    3. ' ' → logprob: -2.9439759254455566
    4. 'i' → logprob: -4.568975925445557
    5. ' '' → logprob: -5.193975925445557
    6. ' ones' → logprob: -6.068975925445557
    7. 's' → logprob: -6.443975925445557
    8. ' next' → logprob: -6.443975925445557
    9. ' one' → logprob: -7.318975925445557
    10. ' s' → logprob: -7.443975925445557

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.722539834911004e-05
    2. ' ' → logprob: -9.375097274780273
    3. ''' → logprob: -11.875097274780273
    4. ' '' → logprob: -13.125097274780273
    5. '0' → logprob: -14.250097274780273
    6. 'i' → logprob: -14.250097274780273
    7. '')' → logprob: -14.500097274780273
    8. ' ')' → logprob: -14.625097274780273
    9. ''s' → logprob: -15.375097274780273
    10. 's' → logprob: -15.375097274780273

Token 304: ''
' (ID: 2207)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6459668278694153
    2. ''' → logprob: -0.8959668278694153
    3. ' ')' → logprob: -3.2709667682647705
    4. ' '' → logprob: -4.89596700668335
    5. ')' → logprob: -5.14596700668335
    6. 'i' → logprob: -5.77096700668335
    7. '           ' → logprob: -6.14596700668335
    8. '       ' → logprob: -6.64596700668335
    9. '<|end|>' → logprob: -6.77096700668335
    10. 's' → logprob: -6.77096700668335

Token 305: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0310794115066528
    2. '       ' → logprob: -1.0310794115066528
    3. '           ' → logprob: -1.7810794115066528
    4. 'i' → logprob: -2.7810792922973633
    5. ' i' → logprob: -3.1560792922973633
    6. ' 
' → logprob: -5.031079292297363
    7. '        
' → logprob: -6.281079292297363
    8. '   ' → logprob: -7.031079292297363
    9. '            
' → logprob: -7.156079292297363
    10. '               ' → logprob: -7.281079292297363

Token 306: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.6961895823478699
    2. ' i' → logprob: -0.6961895823478699
    3. '           ' → logprob: -5.8211894035339355
    4. '       ' → logprob: -9.821189880371094
    5. '	i' → logprob: -12.071189880371094
    6. '               ' → logprob: -12.196189880371094
    7. '   ' → logprob: -12.571189880371094
    8. '            ' → logprob: -13.821189880371094
    9. ' 
' → logprob: -13.946189880371094
    10. ' ' → logprob: -13.946189880371094

Token 307: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31630831956863403
    2. '+=' → logprob: -1.3163082599639893
    3. '+' → logprob: -5.816308498382568
    4. ' +' → logprob: -10.44130802154541
    5. '=' → logprob: -10.56630802154541
    6. ' =' → logprob: -13.31630802154541
    7. ' ' → logprob: -13.81630802154541
    8. ']+=' → logprob: -13.81630802154541
    9. ')' → logprob: -14.06630802154541
    10. '   ' → logprob: -14.19130802154541

Token 308: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '```' → logprob: -19.12603187561035
    4. '   ' → logprob: -20.37603187561035
    5. '  ' → logprob: -21.75103187561035
    6. '１' → logprob: -22.50103187561035
    7. '۱' → logprob: -22.50103187561035
    8. '<|end|>' → logprob: -22.62603187561035
    9. '0' → logprob: -22.75103187561035
    10. ' ' → logprob: -23.00103187561035

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -19.87500762939453
    4. '   ' → logprob: -20.50000762939453
    5. '۱' → logprob: -22.06250762939453
    6. '  ' → logprob: -22.18750762939453
    7. '１' → logprob: -22.31250762939453
    8. '0' → logprob: -22.31250762939453
    9. '`' → logprob: -22.56250762939453
    10. '
' → logprob: -22.87500762939453

Token 310: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026183482259511948
    2. '
' → logprob: -3.7761833667755127
    3. 'else' → logprob: -7.151183605194092
    4. 'elif' → logprob: -7.401183605194092
    5. '           ' → logprob: -7.651183605194092
    6. '<|end|>' → logprob: -7.776183605194092
    7. ' else' → logprob: -8.026183128356934
    8. ' 
' → logprob: -9.401183128356934
    9. ' elif' → logprob: -9.901183128356934
    10. '   ' → logprob: -10.401183128356934

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012742014601826668
    2. 'else' → logprob: -4.512742042541504
    3. 'elif' → logprob: -6.887742042541504
    4. ' else' → logprob: -7.512742042541504
    5. '           ' → logprob: -9.512742042541504
    6. ' elif' → logprob: -11.137742042541504
    7. 'continue' → logprob: -11.762742042541504
    8. '```' → logprob: -11.887742042541504
    9. '   ' → logprob: -12.387742042541504
    10. '<|end|>' → logprob: -12.637742042541504

Token 312: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.15551142394542694
    2. 'elif' → logprob: -2.4055113792419434
    3. ' else' → logprob: -3.1555113792419434
    4. '       ' → logprob: -4.655511379241943
    5. ' elif' → logprob: -6.405511379241943
    6. ':' → logprob: -12.280511856079102
    7. '```' → logprob: -12.405511856079102
    8. '   ' → logprob: -12.780511856079102
    9. '	elif' → logprob: -13.155511856079102
    10. '	else' → logprob: -13.405511856079102

Token 313: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021814880892634392
    2. ':
' → logprob: -3.8968148231506348
    3. '           ' → logprob: -6.896814823150635
    4. ' :' → logprob: -9.646815299987793
    5. ' if' → logprob: -9.771815299987793
    6. '       ' → logprob: -10.146815299987793
    7. '<|end|>' → logprob: -10.271815299987793
    8. '        ' → logprob: -11.396815299987793
    9. ' :
' → logprob: -11.646815299987793
    10. ' and' → logprob: -11.771815299987793

Token 314: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22972245514392853
    2. '           ' → logprob: -1.604722499847412
    3. 'if' → logprob: -5.854722499847412
    4. ' rest' → logprob: -7.354722499847412
    5. '       ' → logprob: -7.479722499847412
    6. '   ' → logprob: -9.854722023010254
    7. 'rest' → logprob: -10.104722023010254
    8. '        ' → logprob: -10.479722023010254
    9. ' #' → logprob: -10.604722023010254
    10. '            ' → logprob: -11.229722023010254

Token 315: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.69092857837677
    2. 'if' → logprob: -0.94092857837677
    3. '           ' → logprob: -3.0659284591674805
    4. ' rest' → logprob: -4.3159284591674805
    5. 'flip' → logprob: -4.4409284591674805
    6. 'rest' → logprob: -4.9409284591674805
    7. ' flips' → logprob: -5.0659284591674805
    8. 'count' → logprob: -5.0659284591674805
    9. ' flip' → logprob: -5.3159284591674805
    10. '#' (adapté à ' #') → logprob: -5.9409284591674805

Token 316: ' Dès' (ID: 140524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29661133885383606
    2. ' if' → logprob: -1.9216113090515137
    3. '           ' → logprob: -3.7966113090515137
    4. '#' → logprob: -3.9216113090515137
    5. 'flip' → logprob: -4.171611309051514
    6. 'count' → logprob: -4.296611309051514
    7. 'rest' → logprob: -4.796611309051514
    8. 'j' → logprob: -5.421611309051514
    9. 'zero' → logprob: -5.546611309051514
    10. ' rest' → logprob: -5.671611309051514

Token 317: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.050382211804389954
    2. ' i' → logprob: -3.675382137298584
    3. 'i' → logprob: -4.425382137298584
    4. 'que' → logprob: -5.175382137298584
    5. '   ' → logprob: -5.925382137298584
    6. 'l' → logprob: -6.675382137298584
    7. ' la' → logprob: -7.550382137298584
    8. ' qu' → logprob: -7.925382137298584
    9. 'le' → logprob: -8.425382614135742
    10. ' l' → logprob: -8.425382614135742

Token 318: ''on' (ID: 25812)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6188064813613892
    2. ' i' → logprob: -0.9938064813613892
    3. 'i' → logprob: -3.2438063621520996
    4. ' rest' → logprob: -3.8688063621520996
    5. 's' → logprob: -4.1188063621521
    6. 'rest' → logprob: -5.1188063621521
    7. '   ' → logprob: -6.6188063621521
    8. ' ' → logprob: -6.6188063621521
    9. '           ' → logprob: -6.7438063621521
    10. ' '' → logprob: -7.3688063621521

Token 319: ' rencontre' (ID: 35953)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.9710426926612854
    2. 'ren' → logprob: -0.9710426926612854
    3. 'enc' → logprob: -1.7210426330566406
    4. ' rencontre' → logprob: -3.4710426330566406
    5. ' trouve' → logprob: -3.8460426330566406
    6. ' ren' → logprob: -5.971042633056641
    7. 'cons' → logprob: -6.221042633056641
    8. 'a' → logprob: -6.721042633056641
    9. 'detect' → logprob: -6.721042633056641
    10. 've' → logprob: -7.471042633056641

Token 320: ' un' (ID: 537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14679640531539917
    2. ' a' → logprob: -3.021796464920044
    3. ' '' → logprob: -3.521796464920044
    4. ''un' → logprob: -4.146796226501465
    5. ' un' → logprob: -4.771796226501465
    6. ' ' → logprob: -4.771796226501465
    7. ''s' → logprob: -4.896796226501465
    8. ' s' → logprob: -5.396796226501465
    9. ' i' → logprob: -5.896796226501465
    10. 's' → logprob: -6.146796226501465

Token 321: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5927520394325256
    2. ''' → logprob: -0.8427520394325256
    3. 'zero' → logprob: -4.717751979827881
    4. ' '' → logprob: -5.717751979827881
    5. ' zéro' → logprob: -6.342751979827881
    6. ' ' → logprob: -6.717751979827881
    7. ' zero' → logprob: -7.217751979827881
    8. ''s' → logprob: -8.717752456665039
    9. '`' → logprob: -9.217752456665039
    10. 'flip' → logprob: -9.342752456665039

Token 322: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0683535037969705e-05
    2. ''' → logprob: -11.87501049041748
    3. ' ' → logprob: -13.75001049041748
    4. '1' → logprob: -14.37501049041748
    5. '```' → logprob: -15.12501049041748
    6. 'zero' → logprob: -15.25001049041748
    7. 'if' → logprob: -15.37501049041748
    8. '')' → logprob: -15.75001049041748
    9. '`' → logprob: -15.87501049041748
    10. 'o' → logprob: -16.000011444091797

Token 323: ''
' (ID: 2207)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21737922728061676
    2. '',' → logprob: -1.7173792123794556
    3. '           ' → logprob: -4.592379093170166
    4. ' ,' → logprob: -6.217379093170166
    5. ''' → logprob: -6.342379093170166
    6. '')' → logprob: -7.092379093170166
    7. ')' → logprob: -8.842379570007324
    8. ' ',' → logprob: -8.842379570007324
    9. ''):
' → logprob: -9.217379570007324
    10. ','' → logprob: -9.467379570007324

Token 324: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4627232253551483
    2. ',' → logprob: -1.5877232551574707
    3. ':' → logprob: -2.5877232551574707
    4. '               ' → logprob: -3.3377232551574707
    5. ' if' → logprob: -3.9627232551574707
    6. ' and' → logprob: -4.337723255157471
    7. ':
' → logprob: -4.712723255157471
    8. '            ' → logprob: -5.962723255157471
    9. ' ,' → logprob: -5.962723255157471
    10. '            
' → logprob: -6.087723255157471

Token 325: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.49382078647613525
    2. 'if' (adapté à ' if') → logprob: -1.1188207864761353
    3. '           ' → logprob: -3.7438206672668457
    4. ' rest' → logprob: -3.8688206672668457
    5. 'rest' → logprob: -4.493820667266846
    6. 'count' → logprob: -6.618820667266846
    7. 'flip' → logprob: -6.743820667266846
    8. ' flip' → logprob: -7.118820667266846
    9. ' flips' → logprob: -7.493820667266846
    10. 'while' → logprob: -8.118821144104004

Token 326: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.14302651584148407
    2. ' rest' → logprob: -2.01802659034729
    3. 'k' → logprob: -8.143026351928711
    4. ' k' → logprob: -9.768026351928711
    5. '(rest' → logprob: -14.143026351928711
    6. 'Rest' → logprob: -14.643026351928711
    7. '_rest' → logprob: -14.893026351928711
    8. ' ' → logprob: -15.143026351928711
    9. 'reste' → logprob: -15.393026351928711
    10. 're' → logprob: -15.518026351928711

Token 327: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.01841435767710209
    2. '>' → logprob: -4.018414497375488
    3. ' ==' → logprob: -8.393414497375488
    4. '==' → logprob: -10.393414497375488
    5. ' ' → logprob: -12.768414497375488
    6. ')' → logprob: -13.268414497375488
    7. ' <=' → logprob: -13.893414497375488
    8. '   ' → logprob: -14.268414497375488
    9. ' ' → logprob: -14.518414497375488
    10. ')>' → logprob: -15.643414497375488

Token 328: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020542005077004433
    2. ' ' → logprob: -3.8955419063568115
    3. '1' → logprob: -16.52054214477539
    4. '>' → logprob: -17.14554214477539
    5. '   ' → logprob: -18.27054214477539
    6. ' ' → logprob: -18.39554214477539
    7. '  ' → logprob: -18.52054214477539
    8. 'k' → logprob: -18.77054214477539
    9. '```' → logprob: -18.89554214477539
    10. '۰' → logprob: -19.45804214477539

Token 329: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'k' → logprob: -21.625001907348633
    4. '>' → logprob: -21.875001907348633
    5. '1' → logprob: -21.875001907348633
    6. '۰' → logprob: -21.875001907348633
    7. '   ' → logprob: -22.125001907348633
    8. '```' → logprob: -23.000001907348633
    9. '  ' → logprob: -23.500001907348633
    10. '    ' → logprob: -23.875001907348633

Token 330: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008980892598628998
    2. ':
' → logprob: -4.758980751037598
    3. ' :' → logprob: -8.258980751037598
    4. '           ' → logprob: -9.758980751037598
    5. '       ' → logprob: -11.633980751037598
    6. '):' → logprob: -11.633980751037598
    7. ' :
' → logprob: -11.758980751037598
    8. ')' → logprob: -12.383980751037598
    9. ':return' → logprob: -13.008980751037598
    10. '   ' → logprob: -13.008980751037598

Token 331: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005598003044724464
    2. '               ' → logprob: -5.255598068237305
    3. ' break' → logprob: -8.005598068237305
    4. '		' → logprob: -12.130598068237305
    5. '            ' → logprob: -12.255598068237305
    6. 'break' → logprob: -12.505598068237305
    7. '       ' → logprob: -12.630598068237305
    8. '   ' → logprob: -12.630598068237305
    9. '	break' → logprob: -13.005598068237305
    10. '                   ' → logprob: -13.255598068237305

Token 332: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06249493733048439
    2. 'break' → logprob: -3.437494993209839
    3. ' break' → logprob: -3.562494993209839
    4. '	break' → logprob: -10.312495231628418
    5. '               ' → logprob: -11.562495231628418
    6. '		' → logprob: -11.687495231628418
    7. '   ' → logprob: -11.812495231628418
    8. '       ' → logprob: -12.062495231628418
    9. '```' → logprob: -12.937495231628418
    10. '_break' → logprob: -14.062495231628418

Token 333: ' Plus' (ID: 11899)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.2970626950263977
    2. ' break' → logprob: -1.422062635421753
    3. '           ' → logprob: -4.172062873840332
    4. '               ' → logprob: -8.047062873840332
    5. '       ' → logprob: -10.797062873840332
    6. '   ' → logprob: -11.547062873840332
    7. '	break' → logprob: -11.922062873840332
    8. 'Break' → logprob: -12.672062873840332
    9. '#' → logprob: -12.922062873840332
    10. '_break' → logprob: -13.922062873840332

Token 334: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8760600090026855
    2. 'de' → logprob: -0.8760600090026855
    3. 'possible' → logprob: -3.0010600090026855
    4. 'long' → logprob: -3.5010600090026855
    5. ' possible' → logprob: -4.2510600090026855
    6. ' besoin' → logprob: -4.3760600090026855
    7. ' longtemps' → logprob: -4.5010600090026855
    8. '```' → logprob: -4.6260600090026855
    9. 'd' → logprob: -4.8760600090026855
    10. ' longue' → logprob: -5.1260600090026855

Token 335: ' flips' (ID: 169694)
  Prédit: ' flips'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flips' → logprob: -0.02471870183944702
    2. ' flip' → logprob: -4.149718761444092
    3. 'flip' → logprob: -5.524718761444092
    4. 'rest' → logprob: -6.274718761444092
    5. ' rest' → logprob: -6.649718761444092
    6. 'fl' → logprob: -7.274718761444092
    7. 'k' → logprob: -7.899718761444092
    8. ' k' → logprob: -9.399718284606934
    9. ' space' → logprob: -9.774718284606934
    10. ' ' → logprob: -9.899718284606934

Token 336: ' disponibles' (ID: 36617)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.689927339553833
    2. ' possible' → logprob: -1.189927339553833
    3. '           ' → logprob: -2.314927339553833
    4. '                   ' → logprob: -3.189927339553833
    5. 'possible' → logprob: -3.314927339553833
    6. ' disponibles' → logprob: -5.564927101135254
    7. ' possibles' → logprob: -5.689927101135254
    8. '   ' → logprob: -5.814927101135254
    9. ' disponible' → logprob: -6.064927101135254
    10. '_possible' → logprob: -6.939927101135254

Token 337: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0164782851934433
    2. '               ' → logprob: -4.141478061676025
    3. 'break' → logprob: -9.141478538513184
    4. ':' → logprob: -9.266478538513184
    5. ' break' → logprob: -9.641478538513184
    6. '		' → logprob: -9.891478538513184
    7. '                   ' → logprob: -10.016478538513184
    8. ',' → logprob: -10.266478538513184
    9. ':
' → logprob: -10.766478538513184
    10. '       ' → logprob: -11.641478538513184

Token 338: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40492576360702515
    2. 'break' → logprob: -1.52992582321167
    3. ' break' → logprob: -2.15492582321167
    4. '               ' → logprob: -8.654925346374512
    5. '       ' → logprob: -8.779925346374512
    6. '	break' → logprob: -9.529925346374512
    7. '   ' → logprob: -9.654925346374512
    8. '_break' → logprob: -11.404925346374512
    9. '		' → logprob: -11.529925346374512
    10. ' ' → logprob: -12.154925346374512

Token 339: ' arr' (ID: 1724)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5339121222496033
    2. '           ' → logprob: -0.9089121222496033
    3. ' break' → logprob: -5.283912181854248
    4. '       ' → logprob: -5.283912181854248
    5. '	break' → logprob: -8.40891170501709
    6. '_break' → logprob: -8.65891170501709
    7. '   ' → logprob: -9.53391170501709
    8. '               ' → logprob: -10.40891170501709
    9. 'b' → logprob: -10.65891170501709
    10. '```' → logprob: -11.28391170501709

Token 340: 'ête' (ID: 16808)
  Prédit: 'êt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êt' → logprob: -0.1401301920413971
    2. 'ête' → logprob: -2.6401302814483643
    3. 'êter' → logprob: -2.8901302814483643
    4. 'ê' → logprob: -6.515130043029785
    5. 'êts' → logprob: -6.890130043029785
    6. 'ive' → logprob: -7.890130043029785
    7. '               ' → logprob: -8.015130043029785
    8. 'et' → logprob: -8.640130043029785
    9. 'êtes' → logprob: -8.765130043029785
    10. '   ' → logprob: -9.390130043029785

Token 341: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02093830518424511
    2. '               ' → logprob: -3.8959383964538574
    3. 'break' → logprob: -8.5209379196167
    4. '       ' → logprob: -8.8959379196167
    5. ' break' → logprob: -10.7709379196167
    6. '.' → logprob: -10.8959379196167
    7. '   ' → logprob: -11.8959379196167
    8. '                   ' → logprob: -12.1459379196167
    9. '		' → logprob: -13.2709379196167
    10. '	break' → logprob: -13.3959379196167

Token 342: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2521008849143982
    2. '               ' → logprob: -1.502100944519043
    3. '                   ' → logprob: -9.877100944519043
    4. 'break' → logprob: -10.127100944519043
    5. ' break' → logprob: -10.627100944519043
    6. '       ' → logprob: -10.627100944519043
    7. '.' → logprob: -11.877100944519043
    8. '		' → logprob: -12.252100944519043
    9. ':' → logprob: -12.502100944519043
    10. '   ' → logprob: -13.002100944519043

Token 343: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.004086947068572044
    2. ' break' → logprob: -5.504086971282959
    3. '           ' → logprob: -12.0040864944458
    4. '	break' → logprob: -13.7540864944458
    5. '       ' → logprob: -14.2540864944458
    6. '   ' → logprob: -14.7540864944458
    7. '```' → logprob: -16.129087448120117
    8. '               ' → logprob: -16.504087448120117
    9. '_break' → logprob: -16.629087448120117
    10. 'Break' → logprob: -18.379087448120117

Token 344: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00104150187689811
    2. '
' → logprob: -7.001041412353516
    3. '            
' → logprob: -9.751041412353516
    4. '       ' → logprob: -10.376041412353516
    5. '    
' → logprob: -11.876041412353516
    6. 'i' → logprob: -12.126041412353516
    7. ' 
' → logprob: -12.376041412353516
    8. '               ' → logprob: -12.751041412353516
    9. ' else' → logprob: -13.126041412353516
    10. ',' → logprob: -13.126041412353516

Token 345: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01909058913588524
    2. '
' → logprob: -4.64409065246582
    3. 'rest' → logprob: -4.76909065246582
    4. ' rest' → logprob: -8.26909065246582
    5. '            
' → logprob: -8.51909065246582
    6. 'else' → logprob: -8.76909065246582
    7. '       ' → logprob: -9.39409065246582
    8. ' else' → logprob: -10.01909065246582
    9. '    
' → logprob: -11.39409065246582
    10. '               ' → logprob: -11.76909065246582

Token 346: ' rest' (ID: 2867)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03443564474582672
    2. 'rest' (adapté à ' rest') → logprob: -3.534435749053955
    3. ' rest' → logprob: -5.784435749053955
    4. '       ' → logprob: -6.534435749053955
    5. '
' → logprob: -9.534435272216797
    6. '            
' → logprob: -10.284435272216797
    7. 'else' → logprob: -11.284435272216797
    8. '        
' → logprob: -12.159435272216797
    9. '   ' → logprob: -12.159435272216797
    10. '               ' → logprob: -12.659435272216797

Token 347: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.04881195351481438
    2. '-=' → logprob: -3.048811912536621
    3. '-' → logprob: -8.423811912536621
    4. '   ' → logprob: -13.173811912536621
    5. '>' → logprob: -13.548811912536621
    6. '=' → logprob: -13.673811912536621
    7. '```' → logprob: -15.673811912536621
    8. '  ' → logprob: -16.173812866210938
    9. ' +=' → logprob: -16.298812866210938
    10. ' -' → logprob: -16.298812866210938

Token 348: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620241466909647
    2. ' ' → logprob: -5.37962007522583
    3. '```' → logprob: -19.379619598388672
    4. '   ' → logprob: -19.504619598388672
    5. '１' → logprob: -20.879619598388672
    6. '  ' → logprob: -21.067119598388672
    7. '0' → logprob: -21.129619598388672
    8. '۱' → logprob: -21.442119598388672
    9. ' ' → logprob: -21.442119598388672
    10. '<|end|>' → logprob: -21.504619598388672

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -21.000001907348633
    4. '```' → logprob: -21.250001907348633
    5. '１' → logprob: -21.812501907348633
    6. '-' → logprob: -22.625001907348633
    7. '۱' → logprob: -22.812501907348633
    8. '  ' → logprob: -23.312501907348633
    9. '0' → logprob: -23.437501907348633
    10. '2' → logprob: -23.687501907348633

Token 350: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00032759839086793363
    2. '
' → logprob: -8.625328063964844
    3. '       ' → logprob: -9.125328063964844
    4. '   ' → logprob: -11.625328063964844
    5. '		' → logprob: -12.000328063964844
    6. 'i' → logprob: -12.000328063964844
    7. '               ' → logprob: -12.125328063964844
    8. ',' → logprob: -12.250328063964844
    9. ' i' → logprob: -12.500328063964844
    10. '	       ' → logprob: -14.250328063964844

Token 351: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19283795356750488
    2. 'while' → logprob: -2.317837953567505
    3. 'i' → logprob: -3.317837953567505
    4. '
' → logprob: -3.442837953567505
    5. ' while' → logprob: -5.567837715148926
    6. '       ' → logprob: -5.692837715148926
    7. ' i' → logprob: -7.317837715148926
    8. '               ' → logprob: -8.692837715148926
    9. '   ' → logprob: -9.067837715148926
    10. '            
' → logprob: -9.317837715148926

Token 352: ' Util' (ID: 13564)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2591436207294464
    2. ' i' → logprob: -1.759143590927124
    3. '#' → logprob: -3.384143590927124
    4. ' flip' → logprob: -5.384143829345703
    5. 'while' → logprob: -5.384143829345703
    6. ' #' → logprob: -5.634143829345703
    7. 'flip' → logprob: -5.884143829345703
    8. ' while' → logprob: -6.009143829345703
    9. ' rest' → logprob: -6.134143829345703
    10. 'rest' → logprob: -8.009143829345703

Token 353: 'isation' (ID: 6993)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.01851031556725502
    2. 'ser' → logprob: -4.768510341644287
    3. 'isation' → logprob: -5.768510341644287
    4. 'ise' → logprob: -5.768510341644287
    5. 'isé' → logprob: -6.393510341644287
    6. 'er' → logprob: -7.518510341644287
    7. '```' → logprob: -7.518510341644287
    8. 'is' → logprob: -8.393509864807129
    9. 'isez' → logprob: -9.643509864807129
    10. 'i' → logprob: -9.643509864807129

Token 354: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0570748969912529
    2. 'd' → logprob: -3.057074785232544
    3. ' de' → logprob: -5.182075023651123
    4. 'de' → logprob: -6.807075023651123
    5. '           ' → logprob: -7.182075023651123
    6. ' of' → logprob: -7.807075023651123
    7. ' du' → logprob: -8.057074546813965
    8. 'du' → logprob: -9.807074546813965
    9. ' rest' → logprob: -9.807074546813965
    10. '   ' → logprob: -10.182074546813965

Token 355: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.07005536556243896
    2. ' un' → logprob: -2.9450554847717285
    3. 'un' → logprob: -4.3200554847717285
    4. ''une' → logprob: -7.3200554847717285
    5. '’un' → logprob: -7.9450554847717285
    6. 'e' → logprob: -7.9450554847717285
    7. ' rest' → logprob: -8.94505500793457
    8. 'rest' → logprob: -9.69505500793457
    9. ' ' → logprob: -10.19505500793457
    10. 'u' → logprob: -10.69505500793457

Token 356: ' flip' (ID: 29130)
  Prédit: 'flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.079064279794693
    2. ' flip' → logprob: -2.57906436920166
    3. 'fl' → logprob: -9.45406436920166
    4. '0' → logprob: -10.07906436920166
    5. 'k' → logprob: -10.82906436920166
    6. 'zero' → logprob: -11.82906436920166
    7. '_flip' → logprob: -12.20406436920166
    8. ' flipped' → logprob: -12.57906436920166
    9. ' flipping' → logprob: -12.57906436920166
    10. ' flips' → logprob: -12.82906436920166

Token 357: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013394330628216267
    2. 'i' → logprob: -4.888394355773926
    3. 'while' → logprob: -6.138394355773926
    4. '       ' → logprob: -6.513394355773926
    5. '
' → logprob: -7.138394355773926
    6. ' i' → logprob: -7.263394355773926
    7. ' while' → logprob: -8.013394355773926
    8. ',' → logprob: -9.138394355773926
    9. '               ' → logprob: -9.763394355773926
    10. '   ' → logprob: -9.888394355773926

Token 358: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020846886560320854
    2. 'i' → logprob: -4.020846843719482
    3. ' i' → logprob: -6.145846843719482
    4. '       ' → logprob: -7.770846843719482
    5. '   ' → logprob: -10.02084732055664
    6. '
' → logprob: -10.02084732055664
    7. '               ' → logprob: -11.02084732055664
    8. ',' → logprob: -12.14584732055664
    9. ',i' → logprob: -12.52084732055664
    10. 'while' → logprob: -12.89584732055664

Token 359: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.477709025144577
    2. 'j' → logprob: -1.9777090549468994
    3. '           ' → logprob: -2.3527090549468994
    4. '#' (adapté à ' #') → logprob: -3.1027090549468994
    5. 'while' → logprob: -3.3527090549468994
    6. 'zero' → logprob: -3.4777090549468994
    7. 'start' → logprob: -4.60270881652832
    8. '       ' → logprob: -4.60270881652832
    9. 'end' → logprob: -5.10270881652832
    10. 'count' → logprob: -6.10270881652832

Token 360: ' Av' (ID: 7541)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.552268922328949
    2. '#' → logprob: -1.6772689819335938
    3. 'j' → logprob: -1.9272689819335938
    4. 'i' → logprob: -2.5522689819335938
    5. 'zero' → logprob: -5.302268981933594
    6. 'start' → logprob: -5.802268981933594
    7. '   ' → logprob: -5.802268981933594
    8. 'end' → logprob: -7.177268981933594
    9. '       ' → logprob: -7.927268981933594
    10. ' while' → logprob: -8.052268981933594

Token 361: 'ancer' (ID: 13358)
  Prédit: 'ancer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancer' → logprob: -0.1609547734260559
    2. 'ance' → logprob: -2.785954713821411
    3. 'er' → logprob: -3.660954713821411
    4. '   ' → logprob: -3.910954713821411
    5. 'ancé' → logprob: -4.16095495223999
    6. '           ' → logprob: -5.41095495223999
    7. 'ancée' → logprob: -5.66095495223999
    8. 'al' → logprob: -6.03595495223999
    9. '       ' → logprob: -6.16095495223999
    10. 'anç' → logprob: -6.28595495223999

Token 362: ' sur' (ID: 1512)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.6074977517127991
    2. 'i' → logprob: -1.6074976921081543
    3. ' i' → logprob: -1.6074976921081543
    4. 'j' → logprob: -4.482497692108154
    5. ' j' → logprob: -4.607497692108154
    6. ' until' → logprob: -4.732497692108154
    7. ' dans' → logprob: -5.107497692108154
    8. 'while' → logprob: -5.732497692108154
    9. ' while' → logprob: -5.857497692108154
    10. '   ' → logprob: -6.232497692108154

Token 363: ' tous' (ID: 10688)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5433048009872437
    2. 'la' → logprob: -2.043304920196533
    3. '0' → logprob: -2.793304920196533
    4. 's' → logprob: -3.043304920196533
    5. ' la' → logprob: -3.168304920196533
    6. 'les' → logprob: -3.668304920196533
    7. 'while' → logprob: -4.043304920196533
    8. 'l' → logprob: -4.418304920196533
    9. ' i' → logprob: -4.418304920196533
    10. 'une' → logprob: -4.793304920196533

Token 364: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2365659922361374
    2. ' i' → logprob: -1.8615659475326538
    3. 'les' → logprob: -3.6115660667419434
    4. ' ' → logprob: -4.611566066741943
    5. ' les' → logprob: -5.236566066741943
    6. '0' → logprob: -5.486566066741943
    7. '   ' → logprob: -5.986566066741943
    8. 's' → logprob: -6.611566066741943
    9. ' la' → logprob: -7.236566066741943
    10. '(i' → logprob: -7.361566066741943

Token 365: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01807701401412487
    2. 'i' → logprob: -4.2680768966674805
    3. 'zeros' → logprob: -6.5180768966674805
    4. ' ' → logprob: -6.6430768966674805
    5. ' zeros' → logprob: -7.8930768966674805
    6. ' i' → logprob: -7.8930768966674805
    7. ''' → logprob: -8.76807689666748
    8. ''i' → logprob: -9.14307689666748
    9. ' '' → logprob: -10.14307689666748
    10. 'z' → logprob: -11.14307689666748

Token 366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3782830137643032e-05
    2. ''' → logprob: -11.50001335144043
    3. ' ' → logprob: -13.50001335144043
    4. 'i' → logprob: -13.62501335144043
    5. '1' → logprob: -14.87501335144043
    6. '```' → logprob: -16.12501335144043
    7. '000' → logprob: -16.62501335144043
    8. 's' → logprob: -16.75001335144043
    9. ''s' → logprob: -17.00001335144043
    10. '۰' → logprob: -17.25001335144043

Token 367: ''' (ID: 6)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8130597472190857
    2. ''' → logprob: -1.8130598068237305
    3. '       ' → logprob: -1.8130598068237305
    4. 'while' → logprob: -2.1880598068237305
    5. ' while' → logprob: -2.9380598068237305
    6. 's' → logprob: -3.9380598068237305
    7. '   ' → logprob: -4.1880598068237305
    8. '[i' → logprob: -4.6880598068237305
    9. '               ' → logprob: -5.1880598068237305
    10. ''s' → logprob: -5.9380598068237305

Token 368: ' cons' (ID: 1473)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24775315821170807
    2. ' while' → logprob: -1.7477531433105469
    3. 'while' → logprob: -3.122753143310547
    4. '       ' → logprob: -7.372753143310547
    5. '	while' → logprob: -8.122753143310547
    6. '   ' → logprob: -8.997753143310547
    7. ',' → logprob: -9.997753143310547
    8. '               ' → logprob: -10.122753143310547
    9. '	       ' → logprob: -11.372753143310547
    10. '		' → logprob: -11.497753143310547

Token 369: 'écut' (ID: 96392)
  Prédit: 'ecut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecut' → logprob: -0.5761645436286926
    2. 'écut' → logprob: -0.8261645436286926
    3. '   ' → logprob: -9.326164245605469
    4. 'cut' → logprob: -10.576164245605469
    5. '```' → logprob: -10.701164245605469
    6. 'e' → logprob: -10.826164245605469
    7. 'icut' → logprob: -11.326164245605469
    8. 'ec' → logprob: -11.326164245605469
    9. 'ect' → logprob: -11.451164245605469
    10. 'secut' → logprob: -11.701164245605469

Token 370: 'ifs' (ID: 14119)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.27027809619903564
    2. 'ifs' → logprob: -2.520277976989746
    3. 'if' → logprob: -2.645277976989746
    4. '   ' → logprob: -3.020277976989746
    5. '       ' → logprob: -3.895277976989746
    6. 'i' → logprob: -5.270277976989746
    7. 'u' → logprob: -5.770277976989746
    8. 'cut' → logprob: -6.520277976989746
    9. 'uts' → logprob: -6.895277976989746
    10. '               ' → logprob: -7.270277976989746

Token 371: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05801473185420036
    2. 'while' → logprob: -3.3080146312713623
    3. ' while' → logprob: -3.9330146312713623
    4. '       ' → logprob: -9.058014869689941
    5. ',' → logprob: -10.183014869689941
    6. '	while' → logprob: -11.683014869689941
    7. '               ' → logprob: -11.808014869689941
    8. '		' → logprob: -12.308014869689941
    9. '	       ' → logprob: -12.558014869689941
    10. '            
' → logprob: -12.933014869689941

Token 372: 'une' (ID: 2561)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.045317839831113815
    2. '           ' → logprob: -3.5453178882598877
    3. ' while' → logprob: -4.420317649841309
    4. 'j' → logprob: -6.295317649841309
    5. ')' → logprob: -6.920317649841309
    6. '```' → logprob: -9.045317649841309
    7. '       ' → logprob: -9.170317649841309
    8. '               ' → logprob: -9.420317649841309
    9. ')
' → logprob: -9.545317649841309
    10. '	while' → logprob: -10.045317649841309

Token 373: ' plage' (ID: 78241)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2184523493051529
    2. ' while' → logprob: -1.8434523344039917
    3. '   ' → logprob: -3.7184524536132812
    4. ' ' → logprob: -6.218452453613281
    5. ' boucle' → logprob: -6.218452453613281
    6. 's' → logprob: -6.468452453613281
    7. ')' → logprob: -6.593452453613281
    8. ' sequence' → logprob: -7.093452453613281
    9. ' fois' → logprob: -7.593452453613281
    10. '  ' → logprob: -7.593452453613281

Token 374: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1632966697216034
    2. 'while' → logprob: -2.663296699523926
    3. ' while' → logprob: -3.538296699523926
    4. ' de' → logprob: -3.913296699523926
    5. 'de' → logprob: -4.663296699523926
    6. '               ' → logprob: -4.913296699523926
    7. ' of' → logprob: -5.413296699523926
    8. ')' → logprob: -6.038296699523926
    9. ' jusqu' → logprob: -6.663296699523926
    10. '       ' → logprob: -6.663296699523926

Token 375: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033630140125751495
    2. 'while' → logprob: -3.533630132675171
    3. ' while' → logprob: -5.78363037109375
    4. '       ' → logprob: -7.28363037109375
    5. '	while' → logprob: -10.90863037109375
    6. ',' → logprob: -11.03363037109375
    7. '	       ' → logprob: -11.03363037109375
    8. '               ' → logprob: -11.15863037109375
    9. '		' → logprob: -11.53363037109375
    10. '   ' → logprob: -11.65863037109375

Token 376: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.08411938697099686
    2. '           ' → logprob: -2.5841193199157715
    3. 'j' → logprob: -5.7091193199157715
    4. ' while' → logprob: -6.3341193199157715
    5. '   ' → logprob: -9.70911979675293
    6. '       ' → logprob: -10.58411979675293
    7. '	while' → logprob: -10.83411979675293
    8. '0' → logprob: -11.58411979675293
    9. 'start' → logprob: -12.83411979675293
    10. ' j' → logprob: -13.08411979675293

Token 377: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42889830470085144
    2. ' i' → logprob: -1.0538983345031738
    3. ' s' → logprob: -9.178897857666016
    4. '   ' → logprob: -10.053897857666016
    5. 's' → logprob: -10.053897857666016
    6. '	i' → logprob: -12.053897857666016
    7. ' ' → logprob: -13.678897857666016
    8. '(i' → logprob: -14.553897857666016
    9. '  ' → logprob: -15.053897857666016
    10. '    ' → logprob: -16.053897857666016

Token 378: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10560610890388489
    2. '<n' → logprob: -2.7306060791015625
    3. '<' → logprob: -3.3556060791015625
    4. '<len' → logprob: -9.355606079101562
    5. '<s' → logprob: -10.980606079101562
    6. '+' → logprob: -11.230606079101562
    7. 'i' → logprob: -11.355606079101562
    8. 'n' → logprob: -11.980606079101562
    9. '<i' → logprob: -12.105606079101562
    10. '<N' → logprob: -12.730606079101562

Token 379: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00861456897109747
    2. ' n' → logprob: -4.758614540100098
    3. '	n' → logprob: -17.383615493774414
    4. '   ' → logprob: -17.883615493774414
    5. ' ' → logprob: -19.383615493774414
    6. ')n' → logprob: -19.758615493774414
    7. '_n' → logprob: -19.883615493774414
    8. 'i' → logprob: -20.383615493774414
    9. '<n' → logprob: -20.633615493774414
    10. 's' → logprob: -20.883615493774414

Token 380: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.38687485456466675
    2. ' and' → logprob: -1.1368749141693115
    3. '   ' → logprob: -12.76187515258789
    4. '       ' → logprob: -15.01187515258789
    5. '    ' → logprob: -15.76187515258789
    6. ' ' → logprob: -15.88687515258789
    7. '           ' → logprob: -16.01187515258789
    8. '      ' → logprob: -16.38687515258789
    9. '  ' → logprob: -16.63687515258789
    10. '     ' → logprob: -16.63687515258789

Token 381: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0002615742268972099
    2. ' s' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.375261306762695
    4. '(s' → logprob: -16.875261306762695
    5. '	s' → logprob: -18.625261306762695
    6. ' ' → logprob: -18.875261306762695
    7. '`s' → logprob: -19.500261306762695
    8. 'not' → logprob: -19.625261306762695
    9. '<s' → logprob: -19.625261306762695
    10. '[s' → logprob: -19.750261306762695

Token 382: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.625000953674316
    3. '```' → logprob: -16.375
    4. 'i' → logprob: -16.75
    5. '[
' → logprob: -17.5
    6. ' [' → logprob: -18.0
    7. '\[' → logprob: -18.25
    8. '][' → logprob: -18.5
    9. '[I' → logprob: -18.625
    10. '   ' → logprob: -18.75

Token 383: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06097784265875816
    2. ' ==' → logprob: -3.9359779357910156
    3. ']==' → logprob: -3.9359779357910156
    4. '==' → logprob: -4.060977935791016
    5. '[i' → logprob: -6.560977935791016
    6. ']=='' → logprob: -7.185977935791016
    7. '=='' → logprob: -8.060977935791016
    8. '[' → logprob: -8.185977935791016
    9. '']' → logprob: -9.810977935791016
    10. '[]' → logprob: -11.185977935791016

Token 384: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16430966556072235
    2. ' ==' → logprob: -1.9143096208572388
    3. '=='' → logprob: -5.539309501647949
    4. '[' → logprob: -9.16430950164795
    5. '[i' → logprob: -11.16430950164795
    6. '=' → logprob: -12.16430950164795
    7. ']==' → logprob: -12.16430950164795
    8. '==
' → logprob: -12.41430950164795
    9. ' ' → logprob: -13.03930950164795
    10. '0' → logprob: -13.03930950164795

Token 385: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014172444120049477
    2. ' '' → logprob: -4.264172554016113
    3. '"' → logprob: -11.764172554016113
    4. '0' → logprob: -14.889172554016113
    5. ' ' → logprob: -15.389172554016113
    6. '   ' → logprob: -16.514171600341797
    7. ''o' → logprob: -16.514171600341797
    8. '`' → logprob: -16.764171600341797
    9. '('' → logprob: -16.889171600341797
    10. '='' → logprob: -17.264171600341797

Token 386: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ''' → logprob: -11.50001049041748
    3. '1' → logprob: -21.000009536743164
    4. ' ' → logprob: -21.375009536743164
    5. ''s' → logprob: -22.000009536743164
    6. '۰' → logprob: -22.625009536743164
    7. '```' → logprob: -22.750009536743164
    8. '')' → logprob: -22.750009536743164
    9. ' '' → logprob: -23.625009536743164
    10. '"' → logprob: -23.750009536743164

Token 387: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3143470883369446
    2. ':' → logprob: -1.8143470287322998
    3. '':
' → logprob: -3.1893470287323
    4. '):
' → logprob: -3.9393470287323
    5. '           ' → logprob: -4.189347267150879
    6. '':' → logprob: -4.439347267150879
    7. '       ' → logprob: -4.564347267150879
    8. ''):
' → logprob: -5.814347267150879
    9. '               ' → logprob: -6.814347267150879
    10. '   ' → logprob: -6.939347267150879

Token 388: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018579475581645966
    2. '           ' → logprob: -4.268579483032227
    3. 'i' → logprob: -6.268579483032227
    4. '       ' → logprob: -6.768579483032227
    5. ' i' → logprob: -6.768579483032227
    6. '   ' → logprob: -9.018579483032227
    7. '                   ' → logprob: -9.768579483032227
    8. '	           ' → logprob: -11.393579483032227
    9. '	       ' → logprob: -11.768579483032227
    10. '```' → logprob: -12.893579483032227

Token 389: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.05078056827187538
    2. ' i' → logprob: -3.0507805347442627
    3. '               ' → logprob: -6.425780773162842
    4. '           ' → logprob: -8.175780296325684
    5. '                   ' → logprob: -8.925780296325684
    6. '   ' → logprob: -8.925780296325684
    7. '	i' → logprob: -11.175780296325684
    8. '       ' → logprob: -11.925780296325684
    9. ' ' → logprob: -13.675780296325684
    10. '	           ' → logprob: -14.550780296325684

Token 390: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2519512474536896
    2. '+=' → logprob: -1.5019512176513672
    3. '+' → logprob: -11.251951217651367
    4. '   ' → logprob: -12.876951217651367
    5. ']+=' → logprob: -12.876951217651367
    6. 'i' → logprob: -13.001951217651367
    7. ' i' → logprob: -15.001951217651367
    8. '    ' → logprob: -15.126951217651367
    9. '=' → logprob: -15.126951217651367
    10. ' +' → logprob: -15.376951217651367

Token 391: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -17.00023078918457
    4. '```' → logprob: -18.12523078918457
    5. 'i' → logprob: -19.37523078918457
    6. '0' → logprob: -19.50023078918457
    7. '１' → logprob: -19.62523078918457
    8. '`' → logprob: -20.25023078918457
    9. '۱' → logprob: -20.31273078918457
    10. ' ' → logprob: -20.62523078918457

Token 392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -17.8125057220459
    4. '   ' → logprob: -18.5000057220459
    5. 'i' → logprob: -18.9375057220459
    6. '１' → logprob: -19.1250057220459
    7. '0' → logprob: -19.6250057220459
    8. '۱' → logprob: -19.7500057220459
    9. '१' → logprob: -20.3125057220459
    10. '`' → logprob: -20.3125057220459

Token 393: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024195559322834015
    2. 'max' → logprob: -3.774195671081543
    3. 'start' → logprob: -8.399195671081543
    4. 'rest' → logprob: -8.524195671081543
    5. 'length' → logprob: -8.649195671081543
    6. '    
' → logprob: -9.149195671081543
    7. 'left' → logprob: -10.024195671081543
    8. '#' → logprob: -10.274195671081543
    9. '```' → logprob: -10.274195671081543
    10. 'end' → logprob: -10.649195671081543

Token 395: ' ans' (ID: 3345)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.21583065390586853
    2. '   ' → logprob: -1.840830683708191
    3. 'start' → logprob: -3.8408305644989014
    4. 'j' → logprob: -5.7158308029174805
    5. 'left' → logprob: -5.7158308029174805
    6. 'rest' → logprob: -5.8408308029174805
    7. 'length' → logprob: -6.7158308029174805
    8. '#' → logprob: -7.3408308029174805
    9. 'result' → logprob: -7.8408308029174805
    10. 'end' → logprob: -7.9658308029174805

Token 396: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1281108558177948
    2. '=' → logprob: -2.128110885620117
    3. '_' → logprob: -6.753110885620117
    4. '_=' → logprob: -12.378110885620117
    5. ' ' → logprob: -12.503110885620117
    6. '   ' → logprob: -12.878110885620117
    7. ' +=' → logprob: -13.753110885620117
    8. '  ' → logprob: -14.253110885620117
    9. '_space' → logprob: -14.378110885620117
    10. 's' → logprob: -14.753110885620117

Token 397: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006841989234089851
    2. ' i' → logprob: -7.3756842613220215
    3. '0' → logprob: -10.000683784484863
    4. 'max' → logprob: -11.500683784484863
    5. '   ' → logprob: -13.375683784484863
    6. ' ' → logprob: -15.500683784484863
    7. ' max' → logprob: -15.750683784484863
    8. '	i' → logprob: -16.87568473815918
    9. 'n' → logprob: -17.25068473815918
    10. 'rest' → logprob: -17.37568473815918

Token 398: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1664903610944748
    2. '
' → logprob: -1.9164903163909912
    3. '    
' → logprob: -6.04149055480957
    4. ',' → logprob: -6.66649055480957
    5. 'while' → logprob: -7.04149055480957
    6. '<|end|>' → logprob: -7.79149055480957
    7. ' while' → logprob: -8.54149055480957
    8. '  
' → logprob: -8.66649055480957
    9. ' 
' → logprob: -9.04149055480957
    10. '\n' → logprob: -9.16649055480957

Token 399: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001058771857060492
    2. 'left' → logprob: -8.126058578491211
    3. 'start' → logprob: -8.376058578491211
    4. '    
' → logprob: -8.376058578491211
    5. '
' → logprob: -9.126058578491211
    6. '```' → logprob: -10.251058578491211
    7. 'rest' → logprob: -10.501058578491211
    8. 'j' → logprob: -10.751058578491211
    9. 'window' → logprob: -10.751058578491211
    10. 'while' → logprob: -11.126058578491211

Token 400: ' Long' (ID: 7790)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -1.06244957447052
    2. ' max' → logprob: -1.43744957447052
    3. '#' → logprob: -1.56244957447052
    4. 'max' → logprob: -2.0624494552612305
    5. 'rest' → logprob: -3.3124494552612305
    6. ' rest' → logprob: -3.9374494552612305
    7. ' i' → logprob: -5.0624494552612305
    8. '   ' → logprob: -5.1874494552612305
    9. 'i' → logprob: -5.8124494552612305
    10. 'result' → logprob: -6.8124494552612305

Token 401: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.000909913913346827
    2. 'ue' → logprob: -7.750909805297852
    3. 'eur' → logprob: -8.250909805297852
    4. 'est' → logprob: -9.125909805297852
    5. 'uest' → logprob: -9.250909805297852
    6. 'e' → logprob: -12.375909805297852
    7. '#' → logprob: -13.750909805297852
    8. '_' → logprob: -13.875909805297852
    9. 'u' → logprob: -13.875909805297852
    10. '_est' → logprob: -14.125909805297852

Token 402: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6429741978645325
    2. 'max' → logprob: -0.8929741978645325
    3. ' maximale' → logprob: -3.5179741382598877
    4. '_max' → logprob: -3.8929741382598877
    5. ' max' → logprob: -4.392974376678467
    6. 'maximum' → logprob: -7.017974376678467
    7. ' maximum' → logprob: -7.892974376678467
    8. ' maximal' → logprob: -8.767973899841309
    9. ' =' → logprob: -9.142973899841309
    10. ' de' → logprob: -9.267973899841309

Token 403: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0011904643615707755
    2. ' la' → logprob: -6.876190662384033
    3. 'l' → logprob: -9.376190185546875
    4. 'max' → logprob: -10.001190185546875
    5. '#' → logprob: -12.001190185546875
    6. 'c' → logprob: -12.126190185546875
    7. 'the' → logprob: -12.751190185546875
    8. 'a' → logprob: -13.126190185546875
    9. 'i' → logprob: -13.376190185546875
    10. 'ma' → logprob: -13.376190185546875

Token 404: ' fenêtre' (ID: 109648)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.5423296689987183
    2. 'prem' → logprob: -0.9173296689987183
    3. 's' → logprob: -4.792329788208008
    4. 'max' → logprob: -5.667329788208008
    5. 'me' → logprob: -5.792329788208008
    6. 'long' → logprob: -6.292329788208008
    7. 'pl' → logprob: -7.417329788208008
    8. 'maximum' → logprob: -7.917329788208008
    9. 'sé' → logprob: -8.417329788208008
    10. 'segment' → logprob: -8.792329788208008

Token 405: ' maximale' (ID: 76380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011486903764307499
    2. 'j' → logprob: -5.261487007141113
    3. 'left' → logprob: -6.386487007141113
    4. 'start' → logprob: -6.511487007141113
    5. 'right' → logprob: -6.886487007141113
    6. ' j' → logprob: -7.136487007141113
    7. '    
' → logprob: -8.386487007141113
    8. ' left' → logprob: -8.636487007141113
    9. 'end' → logprob: -8.761487007141113
    10. 'window' → logprob: -9.011487007141113

Token 406: ' atte' (ID: 43312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0854441300034523
    2. 'left' → logprob: -2.835444211959839
    3. 'j' → logprob: -4.71044397354126
    4. '
' → logprob: -5.08544397354126
    5. ' left' → logprob: -5.96044397354126
    6. 'window' → logprob: -6.71044397354126
    7. '    
' → logprob: -6.83544397354126
    8. 'l' → logprob: -6.96044397354126
    9. 'start' → logprob: -7.08544397354126
    10. ' j' → logprob: -7.71044397354126

Token 407: 'inte' (ID: 18750)
  Prédit: 'inte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.017076944932341576
    2. 'ign' → logprob: -4.1420769691467285
    3. 'indre' → logprob: -8.01707649230957
    4. 'int' → logprob: -8.01707649230957
    5. 'ind' → logprob: -8.64207649230957
    6. 'ignant' → logprob: -9.64207649230957
    7. 'i' → logprob: -10.01707649230957
    8. 'ignée' → logprob: -10.89207649230957
    9. 'igne' → logprob: -11.51707649230957
    10. 'n' → logprob: -11.64207649230957

Token 408: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029671266674995422
    2. '
' → logprob: -6.377967357635498
    3. '    
' → logprob: -7.377967357635498
    4. 'right' → logprob: -8.00296688079834
    5. 'j' → logprob: -9.00296688079834
    6. 'left' → logprob: -9.12796688079834
    7. 'end' → logprob: -11.12796688079834
    8. 'window' → logprob: -11.25296688079834
    9. '```' → logprob: -11.37796688079834
    10. 'start' → logprob: -12.37796688079834

Token 409: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.07114920020103455
    2. 'dé' → logprob: -3.5711491107940674
    3. 'comm' → logprob: -4.0711493492126465
    4. 'trait' → logprob: -5.1961493492126465
    5. 'prem' → logprob: -5.1961493492126465
    6. 'continu' → logprob: -6.5711493492126465
    7. 'initial' → logprob: -6.8211493492126465
    8. 'une' → logprob: -7.0711493492126465
    9. 'convert' → logprob: -7.1961493492126465
    10. 'cons' → logprob: -7.3211493492126465

Token 410: 'ant' (ID: 493)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.5011634826660156
    2. 'ant' → logprob: -1.1261634826660156
    3. '   ' → logprob: -3.3761634826660156
    4. 'i' → logprob: -4.626163482666016
    5. 'de' → logprob: -5.126163482666016
    6. 'enant' → logprob: -5.376163482666016
    7. 'ition' → logprob: -5.376163482666016
    8. 'out' → logprob: -6.501163482666016
    9. 'def' → logprob: -6.876163482666016
    10. 'dé' → logprob: -7.126163482666016

Token 411: ' du' (ID: 1462)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.01132154930382967
    2. ' du' → logprob: -5.011321544647217
    3. '   ' → logprob: -5.636321544647217
    4. 'de' → logprob: -7.636321544647217
    5. 'from' → logprob: -7.636321544647217
    6. 'dep' → logprob: -10.636322021484375
    7. ' from' → logprob: -11.636322021484375
    8. ' ' → logprob: -11.886322021484375
    9. 'dé' → logprob: -12.011322021484375
    10. 'd' → logprob: -12.261322021484375

Token 412: ' début' (ID: 29589)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.006439668592065573
    2. '0' → logprob: -5.131439685821533
    3. 'begin' → logprob: -8.131439208984375
    4. 'de' → logprob: -8.881439208984375
    5. 'd' → logprob: -10.381439208984375
    6. '```' → logprob: -10.881439208984375
    7. ' début' → logprob: -11.881439208984375
    8. 'prem' → logprob: -12.131439208984375
    9. 'deb' → logprob: -12.381439208984375
    10. '1' → logprob: -13.006439208984375

Token 413: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1375943124294281
    2. 'j' → logprob: -2.387594223022461
    3. 'left' → logprob: -4.012594223022461
    4. '
' → logprob: -4.887594223022461
    5. 'right' → logprob: -5.262594223022461
    6. 'start' → logprob: -6.762594223022461
    7. ' j' → logprob: -7.012594223022461
    8. '    
' → logprob: -7.137594223022461
    9. ' left' → logprob: -7.262594223022461
    10. '#' → logprob: -7.262594223022461

Token 414: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01356639713048935
    2. 'j' → logprob: -4.638566493988037
    3. 'left' → logprob: -6.013566493988037
    4. 'right' → logprob: -7.013566493988037
    5. 'start' → logprob: -9.388566017150879
    6. '    
' → logprob: -9.388566017150879
    7. '
' → logprob: -9.388566017150879
    8. 'window' → logprob: -10.013566017150879
    9. 'end' → logprob: -10.388566017150879
    10. ' j' → logprob: -10.388566017150879

Token 415: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6884080171585083
    2. 'j' → logprob: -0.8134080171585083
    3. '   ' → logprob: -3.6884078979492188
    4. 'start' → logprob: -4.438407897949219
    5. '#' (adapté à ' #') → logprob: -4.938407897949219
    6. 'right' → logprob: -5.063407897949219
    7. 'l' → logprob: -6.563407897949219
    8. 'from' → logprob: -6.688407897949219
    9. 'max' → logprob: -7.813407897949219
    10. 'window' → logprob: -8.313407897949219

Token 416: ' Deux' (ID: 92086)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.554877758026123
    2. 'left' → logprob: -1.054877758026123
    3. 'start' → logprob: -3.304877758026123
    4. '#' → logprob: -3.929877758026123
    5. 'right' → logprob: -5.554877758026123
    6. '   ' → logprob: -5.679877758026123
    7. 'rest' → logprob: -5.679877758026123
    8. 'l' → logprob: -5.929877758026123
    9. 'window' → logprob: -5.929877758026123
    10. 'from' → logprob: -6.054877758026123

Token 417: 'ième' (ID: 41126)
  Prédit: 'ième'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ième' → logprob: -0.025206342339515686
    2. 'ème' → logprob: -4.025206565856934
    3. 'nd' → logprob: -6.025206565856934
    4. 'ieme' → logprob: -6.275206565856934
    5. '-pointer' → logprob: -7.525206565856934
    6. 'e' → logprob: -7.525206565856934
    7. 'i' → logprob: -7.650206565856934
    8. 'pointer' → logprob: -8.275206565856934
    9. '_pointer' → logprob: -8.400206565856934
    10. '#' → logprob: -8.650206565856934

Token 418: ' phase' (ID: 15222)
  Prédit: ' phase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' phase' → logprob: -0.4383736848831177
    2. 'phase' → logprob: -1.0633736848831177
    3. '_phase' → logprob: -5.188373565673828
    4. '#' → logprob: -6.438373565673828
    5. ' partie' → logprob: -7.313373565673828
    6. 'part' → logprob: -7.688373565673828
    7. ' #' → logprob: -7.938373565673828
    8. '_' → logprob: -8.438373565673828
    9. ' étape' → logprob: -8.563373565673828
    10. ' part' → logprob: -8.563373565673828

Token 419: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05989554524421692
    2. '
' → logprob: -3.3098955154418945
    3. ':' → logprob: -4.1848955154418945
    4. '#' → logprob: -5.9348955154418945
    5. ' #' → logprob: -6.3098955154418945
    6. '    
' → logprob: -7.3098955154418945
    7. ' :' → logprob: -8.559895515441895
    8. 'left' → logprob: -9.309895515441895
    9. 'rest' → logprob: -9.434895515441895
    10. '```' → logprob: -9.434895515441895

Token 420: ' faire' (ID: 8119)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.5702818632125854
    2. 'left' → logprob: -1.4452818632125854
    3. ' j' → logprob: -2.570281982421875
    4. 'j' → logprob: -2.695281982421875
    5. ' start' → logprob: -4.195281982421875
    6. 'start' → logprob: -4.445281982421875
    7. '   ' → logprob: -4.820281982421875
    8. '#' → logprob: -5.445281982421875
    9. 'l' → logprob: -5.695281982421875
    10. ' #' → logprob: -6.070281982421875

Token 421: ' gl' (ID: 2000)
  Prédit: ' gl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gl' → logprob: -0.12821005284786224
    2. ' sliding' → logprob: -4.003210067749023
    3. ' déf' → logprob: -4.128210067749023
    4. ' def' → logprob: -4.503210067749023
    5. 'def' → logprob: -4.753210067749023
    6. 'gl' → logprob: -4.753210067749023
    7. 'un' → logprob: -5.003210067749023
    8. 'sl' → logprob: -5.253210067749023
    9. ' un' → logprob: -5.378210067749023
    10. ' ' → logprob: -5.503210067749023

Token 422: 'isser' (ID: 31876)
  Prédit: 'isser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isser' → logprob: -8.137130498653278e-05
    2. 'ider' → logprob: -10.625081062316895
    3. 'issement' → logprob: -10.750081062316895
    4. 'isse' → logprob: -10.875081062316895
    5. 'iss' → logprob: -11.875081062316895
    6. 'issant' → logprob: -13.000081062316895
    7. 'issez' → logprob: -13.375081062316895
    8. 'ide' → logprob: -13.500081062316895
    9. 'issante' → logprob: -13.750081062316895
    10. 'iding' → logprob: -14.125081062316895

Token 423: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.30071717500686646
    2. ' la' → logprob: -1.9257171154022217
    3. 'une' → logprob: -3.0507171154022217
    4. 'window' → logprob: -3.4257171154022217
    5. 'fen' → logprob: -4.175717353820801
    6. 'le' → logprob: -5.050717353820801
    7. 'left' → logprob: -5.675717353820801
    8. 'j' → logprob: -5.800717353820801
    9. ' une' → logprob: -6.675717353820801
    10. 'de' → logprob: -7.050717353820801

Token 424: ' fenêtre' (ID: 109648)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.8744724988937378
    2. 'left' → logprob: -1.1244724988937378
    3. 'fen' → logprob: -1.9994724988937378
    4. 'j' → logprob: -2.7494726181030273
    5. 'start' → logprob: -3.4994726181030273
    6. 'i' → logprob: -3.7494726181030273
    7. '```' → logprob: -6.874472618103027
    8. 'de' → logprob: -7.499472618103027
    9. 'windows' → logprob: -7.749472618103027
    10. 'for' → logprob: -7.874472618103027

Token 425: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31202009320259094
    2. 'j' → logprob: -2.5620200634002686
    3. 'left' → logprob: -2.9370200634002686
    4. 'window' → logprob: -3.3120200634002686
    5. 'de' → logprob: -3.8120200634002686
    6. 'start' → logprob: -3.8120200634002686
    7. 'right' → logprob: -4.187020301818848
    8. ',' → logprob: -4.937020301818848
    9. 'i' → logprob: -5.062020301818848
    10. ' j' → logprob: -5.312020301818848

Token 426: ' explorer' (ID: 73961)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.661604106426239
    2. 'tr' → logprob: -1.4116041660308838
    3. 'expl' → logprob: -3.286604166030884
    4. 'contin' → logprob: -3.536604166030884
    5. 'ét' → logprob: -3.911604166030884
    6. 'incl' → logprob: -4.036603927612305
    7. 'dé' → logprob: -4.161603927612305
    8. 'chercher' → logprob: -4.411603927612305
    9. 'optim' → logprob: -4.536603927612305
    10. 'i' → logprob: -4.536603927612305

Token 427: ' d' (ID: 272)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.21688291430473328
    2. 'la' → logprob: -2.0918829441070557
    3. '   ' → logprob: -4.216882705688477
    4. ' le' → logprob: -4.341882705688477
    5. ' i' → logprob: -4.841882705688477
    6. ' les' → logprob: -5.091882705688477
    7. 'i' → logprob: -5.216882705688477
    8. ' l' → logprob: -5.466882705688477
    9. ' ' → logprob: -6.091882705688477
    10. 'l' → logprob: -6.091882705688477

Token 428: ''autres' (ID: 38753)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5254836082458496
    2. 'es' → logprob: -1.0254836082458496
    3. ''autres' → logprob: -3.2754836082458496
    4. 'u' → logprob: -5.15048360824585
    5. 'ans' → logprob: -5.40048360824585
    6. 'eux' → logprob: -7.52548360824585
    7. 'é' → logprob: -8.025484085083008
    8. ''une' → logprob: -8.650484085083008
    9. ''ensemble' → logprob: -9.650484085083008
    10. ''' → logprob: -9.775484085083008

Token 429: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.21967700123786926
    2. ' positions' → logprob: -1.7196769714355469
    3. 'i' → logprob: -5.844676971435547
    4. '   ' → logprob: -5.844676971435547
    5. 'part' → logprob: -6.469676971435547
    6. ' parts' → logprob: -6.719676971435547
    7. 'j' → logprob: -6.844676971435547
    8. ' zones' → logprob: -6.844676971435547
    9. 'indices' → logprob: -6.969676971435547
    10. 'poss' → logprob: -7.094676971435547

Token 430: ' possibles' (ID: 97753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018106751143932343
    2. 'j' → logprob: -4.518106937408447
    3. 'left' → logprob: -5.643106937408447
    4. 'l' → logprob: -7.268106937408447
    5. ' left' → logprob: -7.393106937408447
    6. 'start' → logprob: -7.393106937408447
    7. ' j' → logprob: -7.643106937408447
    8. '
' → logprob: -7.768106937408447
    9. '    
' → logprob: -8.018106460571289
    10. '```' → logprob: -9.393106460571289

Token 431: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024541329592466354
    2. 'left' → logprob: -4.52454137802124
    3. '
' → logprob: -5.14954137802124
    4. 'j' → logprob: -5.39954137802124
    5. '    
' → logprob: -7.14954137802124
    6. 'start' → logprob: -7.14954137802124
    7. 'l' → logprob: -7.27454137802124
    8. ' left' → logprob: -7.89954137802124
    9. '```' → logprob: -9.149540901184082
    10. ' j' → logprob: -9.149540901184082

Token 432: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034449263475835323
    2. '
' → logprob: -6.003445148468018
    3. '    
' → logprob: -7.878445148468018
    4. 'j' → logprob: -9.00344467163086
    5. ' j' → logprob: -9.00344467163086
    6. ' left' → logprob: -9.25344467163086
    7. 'left' → logprob: -9.50344467163086
    8. 'l' → logprob: -10.00344467163086
    9. 'start' → logprob: -10.37844467163086
    10. ' l' → logprob: -11.25344467163086

Token 433: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.7962912917137146
    2. 'left' → logprob: -1.1712913513183594
    3. '   ' → logprob: -2.1712913513183594
    4. ' left' → logprob: -2.6712913513183594
    5. 'l' → logprob: -3.9212913513183594
    6. ' j' → logprob: -3.9212913513183594
    7. 'start' → logprob: -4.296291351318359
    8. ' start' → logprob: -7.046291351318359
    9. ' l' → logprob: -7.421291351318359
    10. 'window' → logprob: -8.17129135131836

Token 434: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193315744400024
    2. '=' → logprob: -1.5019330978393555
    3. ',' → logprob: -12.751933097839355
    4. '   ' → logprob: -15.251933097839355
    5. ' ' → logprob: -15.876933097839355
    6. '=i' → logprob: -15.876933097839355
    7. '0' → logprob: -16.001934051513672
    8. '=j' → logprob: -16.126934051513672
    9. '=int' → logprob: -16.626934051513672
    10. '```' → logprob: -17.126934051513672

Token 435: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004732102679554373
    2. 'ans' → logprob: -8.125473022460938
    3. ' ' → logprob: -8.750473022460938
    4. 'i' → logprob: -11.625473022460938
    5. '1' → logprob: -12.500473022460938
    6. ' ans' → logprob: -13.000473022460938
    7. '=' → logprob: -14.125473022460938
    8. '   ' → logprob: -14.312973022460938
    9. 'k' → logprob: -14.875473022460938
    10. 'a' → logprob: -15.312973022460938

Token 436: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027870500925928354
    2. 'ans' → logprob: -6.002787113189697
    3. ' ' → logprob: -8.752786636352539
    4. '1' → logprob: -9.252786636352539
    5. 'i' → logprob: -10.002786636352539
    6. ' ans' → logprob: -12.877786636352539
    7. '   ' → logprob: -13.502786636352539
    8. 'j' → logprob: -13.752786636352539
    9. 'len' → logprob: -13.940286636352539
    10. '=' → logprob: -14.127786636352539

Token 437: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6508516669273376
    2. ' while' → logprob: -1.9008517265319824
    3. 'while' → logprob: -2.0258517265319824
    4. '   ' → logprob: -2.0258517265319824
    5. ' 
' → logprob: -3.4008517265319824
    6. '	while' → logprob: -4.025851726531982
    7. 'rest' → logprob: -5.400851726531982
    8. '    
' → logprob: -6.275851726531982
    9. ' #' → logprob: -6.400851726531982
    10. '  
' → logprob: -6.525851726531982

Token 438: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14841926097869873
    2. '   ' → logprob: -2.7734193801879883
    3. 'rest' → logprob: -3.5234193801879883
    4. '
' → logprob: -3.8984193801879883
    5. 'for' → logprob: -4.273419380187988
    6. ' while' → logprob: -4.773419380187988
    7. '#' → logprob: -6.898419380187988
    8. 'count' → logprob: -7.023419380187988
    9. ' #' → logprob: -7.898419380187988
    10. ' for' → logprob: -8.273419380187988

Token 439: ' Deux' (ID: 92086)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0803377628326416
    2. 'rest' → logprob: -3.0803377628326416
    3. 'while' → logprob: -4.7053375244140625
    4. 'flip' → logprob: -5.0803375244140625
    5. ' ' → logprob: -5.8303375244140625
    6. '   ' → logprob: -6.2053375244140625
    7. 'count' → logprob: -6.2053375244140625
    8. ' rest' → logprob: -6.5803375244140625
    9. 'start' → logprob: -6.9553375244140625
    10. 'k' → logprob: -6.9553375244140625

Token 440: 'ième' (ID: 41126)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4769527018070221
    2. '   ' → logprob: -1.8519526720046997
    3. 'pointer' → logprob: -2.8519527912139893
    4. ' ' → logprob: -3.1019527912139893
    5. ' pointer' → logprob: -3.3519527912139893
    6. ' =' → logprob: -3.9769527912139893
    7. 'ième' → logprob: -4.22695255279541
    8. 'j' → logprob: -4.47695255279541
    9. '=' → logprob: -4.85195255279541
    10. '  ' → logprob: -5.10195255279541

Token 441: ' poin' (ID: 37259)
  Prédit: 'pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pointer' → logprob: -0.47331979870796204
    2. 'token' → logprob: -2.7233197689056396
    3. ' ' → logprob: -2.8483197689056396
    4. 'window' → logprob: -2.9733197689056396
    5. ' pointer' → logprob: -2.9733197689056396
    6. '   ' → logprob: -3.0983197689056396
    7. 'j' → logprob: -3.7233197689056396
    8. 'fen' → logprob: -4.473320007324219
    9. ' j' → logprob: -4.848320007324219
    10. 't' → logprob: -4.848320007324219

Token 442: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.1447780281305313
    2. 'inter' → logprob: -2.14477801322937
    3. 'ter' → logprob: -4.519778251647949
    4. '   ' → logprob: -6.019778251647949
    5. 't' → logprob: -6.269778251647949
    6. 'ointer' → logprob: -6.769778251647949
    7. 'te' → logprob: -7.269778251647949
    8. 'tr' → logprob: -8.76977825164795
    9. '  ' → logprob: -8.89477825164795
    10. 'tre' → logprob: -9.51977825164795

Token 443: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16699466109275818
    2. '<|end|>' → logprob: -2.541994571685791
    3. ' while' → logprob: -3.291994571685791
    4. 'while' → logprob: -3.541994571685791
    5. '<|end|>' → logprob: -5.791994571685791
    6. '```' → logprob: -6.791994571685791
    7. '	while' → logprob: -7.166994571685791
    8. ' ' → logprob: -7.416994571685791
    9. '  ' → logprob: -7.416994571685791
    10. '    
' → logprob: -7.541994571685791

Token 444: ' mar' (ID: 2674)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3767140507698059
    2. ' avancer' → logprob: -2.001713991165161
    3. ' ' → logprob: -2.876713991165161
    4. ' la' → logprob: -3.251713991165161
    5. 'dé' → logprob: -3.751713991165161
    6. 'j' → logprob: -3.876713991165161
    7. 'la' → logprob: -3.876713991165161
    8. 'i' → logprob: -5.87671422958374
    9. ' déplacer' → logprob: -6.00171422958374
    10. ' gl' → logprob: -6.00171422958374

Token 445: 'quer' (ID: 8054)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.647115170955658
    2. 'quer' → logprob: -1.7721152305603027
    3. 'que' → logprob: -2.5221152305603027
    4. 'ner' → logprob: -2.8971152305603027
    5. 'p' → logprob: -3.5221152305603027
    6. 's' → logprob: -3.5221152305603027
    7. 'rc' → logprob: -4.147115230560303
    8. 'ter' → logprob: -4.147115230560303
    9. 'int' → logprob: -4.272115230560303
    10. 'j' → logprob: -4.772115230560303

Token 446: ' le' (ID: 505)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4503802955150604
    2. ' la' → logprob: -1.8253803253173828
    3. 'le' → logprob: -2.575380325317383
    4. 'la' → logprob: -3.450380325317383
    5. '0' → logprob: -3.575380325317383
    6. ' j' → logprob: -4.075380325317383
    7. ' ' → logprob: -4.825380325317383
    8. ' le' → logprob: -5.075380325317383
    9. '   ' → logprob: -5.325380325317383
    10. 'l' → logprob: -5.450380325317383

Token 447: ' début' (ID: 29589)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.008695053867995739
    2. 'd' → logprob: -5.758695125579834
    3. 'j' → logprob: -6.508695125579834
    4. 'start' → logprob: -6.758695125579834
    5. ' début' → logprob: -7.008695125579834
    6. 'de' → logprob: -7.633695125579834
    7. 'b' → logprob: -8.383694648742676
    8. ' ' → logprob: -8.508694648742676
    9. '0' → logprob: -8.758694648742676
    10. 'bord' → logprob: -8.883694648742676

Token 448: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0405880212783813
    2. ' of' → logprob: -1.4155880212783813
    3. ' de' → logprob: -1.5405880212783813
    4. 'de' → logprob: -2.040587902069092
    5. 'of' → logprob: -3.790587902069092
    6. '<|end|>' → logprob: -4.540587902069092
    7. '```' → logprob: -5.665587902069092
    8. ' du' → logprob: -5.665587902069092
    9. 'while' → logprob: -5.790587902069092
    10. ')' → logprob: -6.040587902069092

Token 449: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.38789859414100647
    2. ' la' → logprob: -1.137898564338684
    3. 'the' → logprob: -8.387898445129395
    4. 'l' → logprob: -8.637898445129395
    5. 'window' → logprob: -9.137898445129395
    6. ' ' → logprob: -9.512898445129395
    7. 'une' → logprob: -9.512898445129395
    8. 'fen' → logprob: -9.762898445129395
    9. 'j' → logprob: -9.887898445129395
    10. 'le' → logprob: -10.137898445129395

Token 450: ' fenêtre' (ID: 109648)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.22795657813549042
    2. 'window' → logprob: -1.6029565334320068
    3. 'while' → logprob: -6.352956771850586
    4. '```' → logprob: -8.352956771850586
    5. ' fenêtre' → logprob: -8.477956771850586
    6. 'windows' → logprob: -9.852956771850586
    7. '
' → logprob: -9.977956771850586
    8. 'f' → logprob: -9.977956771850586
    9. 'interval' → logprob: -10.477956771850586
    10. '   ' → logprob: -10.602956771850586

Token 451: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5857937335968018
    2. '
' → logprob: -1.3357937335968018
    3. 'while' → logprob: -2.2107937335968018
    4. 'count' → logprob: -3.8357937335968018
    5. ' while' → logprob: -4.335793495178223
    6. 'rest' → logprob: -4.335793495178223
    7. '0' → logprob: -5.085793495178223
    8. ' zeros' → logprob: -5.335793495178223
    9. 'zeros' → logprob: -5.585793495178223
    10. '    
' → logprob: -6.335793495178223

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013805803842842579
    2. ' zeros' → logprob: -5.513805866241455
    3. 'count' → logprob: -6.138805866241455
    4. 'rest' → logprob: -6.138805866241455
    5. ' zero' → logprob: -6.888805866241455
    6. 'zeros' → logprob: -7.013805866241455
    7. 'zero' → logprob: -7.138805866241455
    8. '0' → logprob: -7.763805866241455
    9. '
' → logprob: -7.763805866241455
    10. '```' → logprob: -7.763805866241455

Token 453: ' while' (ID: 2049)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.8259645700454712
    2. 'count' → logprob: -1.5759645700454712
    3. 'zeros' → logprob: -1.9509645700454712
    4. 'while' (adapté à ' while') → logprob: -2.8259644508361816
    5. 'fl' → logprob: -3.3259644508361816
    6. 'used' → logprob: -3.4509644508361816
    7. 'rest' → logprob: -3.5759644508361816
    8. 'flip' → logprob: -3.9509644508361816
    9. 'window' → logprob: -4.700964450836182
    10. 'cnt' → logprob: -5.075964450836182

Token 454: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3000730872154236
    2. 'i' → logprob: -1.4250731468200684
    3. ' j' → logprob: -4.425073146820068
    4. 'j' → logprob: -5.175073146820068
    5. ' True' → logprob: -7.925073146820068
    6. 'True' → logprob: -8.30007266998291
    7. ' rest' → logprob: -8.42507266998291
    8. '   ' → logprob: -9.42507266998291
    9. ' s' → logprob: -9.92507266998291
    10. 'rest' → logprob: -10.05007266998291

Token 455: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01186241302639246
    2. '<' → logprob: -4.511862277984619
    3. '<n' → logprob: -7.136862277984619
    4. '<len' → logprob: -11.636862754821777
    5. ' ' → logprob: -13.011862754821777
    6. '<size' → logprob: -13.886862754821777
    7. '<s' → logprob: -13.886862754821777
    8. ')' → logprob: -14.011862754821777
    9. '<m' → logprob: -14.136862754821777
    10. '<N' → logprob: -14.386862754821777

Token 456: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.547789674485102e-05
    2. ' n' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.875036239624023
    4. '	n' → logprob: -18.625036239624023
    5. '
' → logprob: -20.375036239624023
    6. 'len' → logprob: -20.625036239624023
    7. '_n' → logprob: -21.125036239624023
    8. ' ' → logprob: -21.250036239624023
    9. '  ' → logprob: -22.125036239624023
    10. '```' → logprob: -22.125036239624023

Token 457: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.028318550437688828
    2. ':
' → logprob: -4.528318405151367
    3. ':' → logprob: -4.778318405151367
    4. 'and' → logprob: -4.778318405151367
    5. '   ' → logprob: -8.278318405151367
    6. '       ' → logprob: -10.528318405151367
    7. ' or' → logprob: -12.278318405151367
    8. ' ' → logprob: -13.028318405151367
    9. '):
' → logprob: -13.403318405151367
    10. ' :
' → logprob: -13.528318405151367

Token 458: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11151009798049927
    2. ' if' → logprob: -2.6115100383758545
    3. 'if' → logprob: -3.6115100383758545
    4. '   ' → logprob: -5.361510276794434
    5. '        
' → logprob: -8.986510276794434
    6. '```' → logprob: -9.486510276794434
    7. '    ' → logprob: -9.611510276794434
    8. ' ' → logprob: -11.111510276794434
    9. 'j' → logprob: -11.111510276794434
    10. '	if' → logprob: -11.236510276794434

Token 459: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09100403636693954
    2. '       ' → logprob: -2.4660041332244873
    3. ' if' → logprob: -6.591003894805908
    4. '   ' → logprob: -7.341003894805908
    5. '           ' → logprob: -11.091004371643066
    6. '	if' → logprob: -11.841004371643066
    7. 'while' → logprob: -12.216004371643066
    8. 'j' → logprob: -12.591004371643066
    9. '```' → logprob: -12.966004371643066
    10. '    ' → logprob: -12.966004371643066

Token 460: ' Av' (ID: 7541)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0012068998767063022
    2. '       ' → logprob: -6.876206874847412
    3. '   ' → logprob: -8.75120735168457
    4. ' if' → logprob: -11.62620735168457
    5. '           ' → logprob: -12.37620735168457
    6. 'while' → logprob: -13.75120735168457
    7. '#' → logprob: -14.50120735168457
    8. '```' → logprob: -14.75120735168457
    9. '	if' → logprob: -15.25120735168457
    10. '    ' → logprob: -16.00120735168457

Token 461: 'ancer' (ID: 13358)
  Prédit: 'ancer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancer' → logprob: -0.3120720088481903
    2. 'ail' → logprob: -1.8120720386505127
    3. 'er' → logprob: -3.0620720386505127
    4. '       ' → logprob: -4.062071800231934
    5. 'i' → logprob: -4.937071800231934
    6. 'a' → logprob: -5.062071800231934
    7. 'ant' → logprob: -5.187071800231934
    8. 'oi' → logprob: -5.187071800231934
    9. 'ailable' → logprob: -5.687071800231934
    10. '   ' → logprob: -6.187071800231934

Token 462: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04027486965060234
    2. 'j' → logprob: -3.7902748584747314
    3. ' i' → logprob: -4.6652750968933105
    4. '       ' → logprob: -5.6652750968933105
    5. 's' → logprob: -6.1652750968933105
    6. '=' → logprob: -7.5402750968933105
    7. '   ' → logprob: -8.290274620056152
    8. '           ' → logprob: -8.665274620056152
    9. '```' → logprob: -8.790274620056152
    10. ' j' → logprob: -8.915274620056152

Token 463: ' sur' (ID: 1512)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16055291891098022
    2. '+=' → logprob: -1.910552978515625
    3. '+' → logprob: -9.535552978515625
    4. '   ' → logprob: -9.535552978515625
    5. '       ' → logprob: -9.660552978515625
    6. '=' → logprob: -10.035552978515625
    7. 'if' → logprob: -10.660552978515625
    8. '           ' → logprob: -11.660552978515625
    9. '    ' → logprob: -11.910552978515625
    10. ' +' → logprob: -11.910552978515625

Token 464: ' les' (ID: 1341)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2929548025131226
    2. '1' → logprob: -1.4179548025131226
    3. ''s' → logprob: -1.4179548025131226
    4. ''' → logprob: -2.167954921722412
    5. ' ' → logprob: -3.417954921722412
    6. ' s' → logprob: -3.542954921722412
    7. ' '' → logprob: -3.667954921722412
    8. 'i' → logprob: -4.292954921722412
    9. ''i' → logprob: -4.417954921722412
    10. ' i' → logprob: -5.542954921722412

Token 465: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.125787153840065
    2. '1' → logprob: -2.3757872581481934
    3. ''s' → logprob: -4.625787258148193
    4. ' '' → logprob: -5.000787258148193
    5. 's' → logprob: -5.375787258148193
    6. ' ' → logprob: -6.750787258148193
    7. ''i' → logprob: -6.750787258148193
    8. 'i' → logprob: -7.500787258148193
    9. '`' → logprob: -7.750787258148193
    10. ''un' → logprob: -9.000786781311035

Token 466: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010925926035270095
    2. '0' → logprob: -7.001092433929443
    3. ''' → logprob: -8.876092910766602
    4. 's' → logprob: -11.251092910766602
    5. 'i' → logprob: -11.626092910766602
    6. ' ' → logprob: -11.626092910766602
    7. ''s' → logprob: -12.876092910766602
    8. '"' → logprob: -13.876092910766602
    9. '`' → logprob: -13.938592910766602
    10. '```' → logprob: -14.688592910766602

Token 467: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0990680679678917
    2. ']' → logprob: -3.0990681648254395
    3. 's' → logprob: -4.7240681648254395
    4. ' '' → logprob: -4.7240681648254395
    5. ''s' → logprob: -4.8490681648254395
    6. '   ' → logprob: -5.7240681648254395
    7. '']' → logprob: -6.0990681648254395
    8. 'if' → logprob: -6.3490681648254395
    9. '       ' → logprob: -6.3490681648254395
    10. '[i' → logprob: -6.3490681648254395

Token 468: ' cons' (ID: 1473)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.817524790763855
    2. ' and' → logprob: -1.442524790763855
    3. ' if' → logprob: -1.692524790763855
    4. 'if' → logprob: -3.0675249099731445
    5. '   ' → logprob: -3.8175249099731445
    6. 'and' → logprob: -4.1925249099731445
    7. 'or' → logprob: -5.1925249099731445
    8. ' +' → logprob: -5.3175249099731445
    9. '<|end|>' → logprob: -5.3175249099731445
    10. '       ' → logprob: -5.4425249099731445

Token 469: 'écut' (ID: 96392)
  Prédit: 'ecut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecut' → logprob: -0.590225100517273
    2. 'écut' → logprob: -0.840225100517273
    3. 'cut' → logprob: -4.3402252197265625
    4. 'secut' → logprob: -8.090225219726562
    5. 'ec' → logprob: -8.215225219726562
    6. 'u' → logprob: -8.465225219726562
    7. '0' → logprob: -9.465225219726562
    8. 'equ' → logprob: -10.465225219726562
    9. 'ecu' → logprob: -10.465225219726562
    10. 'e' → logprob: -10.590225219726562

Token 470: 'ifs' (ID: 14119)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.3581788539886475
    2. 'if' → logprob: -1.3581788539886475
    3. 'ifs' → logprob: -1.3581788539886475
    4. 'ut' → logprob: -2.6081788539886475
    5. 'cut' → logprob: -2.9831788539886475
    6. '       ' → logprob: -3.2331788539886475
    7. 's' → logprob: -4.108179092407227
    8. 'uts' → logprob: -4.608179092407227
    9. '   ' → logprob: -4.858179092407227
    10. 'atifs' → logprob: -5.733179092407227

Token 471: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02753419615328312
    2. ' and' → logprob: -5.152534008026123
    3. ' if' → logprob: -5.152534008026123
    4. '           ' → logprob: -5.277534008026123
    5. ' or' → logprob: -5.402534008026123
    6. 'if' → logprob: -6.402534008026123
    7. ':' → logprob: -6.902534008026123
    8. ',' → logprob: -7.402534008026123
    9. 'while' → logprob: -7.527534008026123
    10. ':
' → logprob: -7.652534008026123

Token 472: 'sort' (ID: 13373)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3317129611968994
    2. 's' → logprob: -1.9567129611968994
    3. ''' → logprob: -2.8317129611968994
    4. '')' → logprob: -3.7067129611968994
    5. 'i' → logprob: -4.33171272277832
    6. ')' → logprob: -4.58171272277832
    7. 'if' → logprob: -5.20671272277832
    8. ' ' → logprob: -5.45671272277832
    9. '1' → logprob: -5.58171272277832
    10. ''s' → logprob: -5.83171272277832

Token 473: 'ie' (ID: 396)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.458916574716568
    2. 'i' → logprob: -1.5839165449142456
    3. '   ' → logprob: -3.083916664123535
    4. '       ' → logprob: -3.208916664123535
    5. '0' → logprob: -3.583916664123535
    6. 'ant' → logprob: -4.583916664123535
    7. 'e' → logprob: -4.583916664123535
    8. '[i' → logprob: -5.458916664123535
    9. '           ' → logprob: -5.583916664123535
    10. 's' → logprob: -5.708916664123535

Token 474: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5382237434387207
    2. '           ' → logprob: -1.5382237434387207
    3. ')' → logprob: -2.1632237434387207
    4. 's' → logprob: -4.413223743438721
    5. '   ' → logprob: -4.538223743438721
    6. '               ' → logprob: -4.538223743438721
    7. '```' → logprob: -5.413223743438721
    8. '==' → logprob: -5.538223743438721
    9. ' if' → logprob: -5.663223743438721
    10. ' or' → logprob: -5.788223743438721

Token 475: ''une' (ID: 13337)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1594512462615967
    2. ' la' → logprob: -1.2844512462615967
    3. ')' → logprob: -2.0344512462615967
    4. ' s' → logprob: -2.1594512462615967
    5. 'i' → logprob: -3.7844512462615967
    6. ' i' → logprob: -3.9094512462615967
    7. 'if' → logprob: -4.159451484680176
    8. ' '' → logprob: -4.409451484680176
    9. ' if' → logprob: -4.784451484680176
    10. ' ' → logprob: -4.909451484680176

Token 476: ' plage' (ID: 78241)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5466250777244568
    2. '0' → logprob: -1.5466251373291016
    3. ''' → logprob: -2.5466251373291016
    4. ' while' → logprob: -3.0466251373291016
    5. 'if' → logprob: -3.9216251373291016
    6. ' '' → logprob: -4.796625137329102
    7. '1' → logprob: -4.921625137329102
    8. 'pl' → logprob: -5.296625137329102
    9. 'zero' → logprob: -5.421625137329102
    10. '`' → logprob: -5.671625137329102

Token 477: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3279956579208374
    2. '       ' → logprob: -2.202995777130127
    3. '           ' → logprob: -2.827995777130127
    4. 's' → logprob: -3.827995777130127
    5. ' if' → logprob: -3.827995777130127
    6. ' )' → logprob: -4.577995777130127
    7. '')' → logprob: -4.827995777130127
    8. ' s' → logprob: -5.077995777130127
    9. 'if' → logprob: -5.077995777130127
    10. '):' → logprob: -5.452995777130127

Token 478: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4696452021598816
    2. '0' → logprob: -1.0946452617645264
    3. 'zeros' → logprob: -4.594645023345947
    4. ''z' → logprob: -4.594645023345947
    5. 'z' → logprob: -5.094645023345947
    6. ' '' → logprob: -5.219645023345947
    7. ' zeros' → logprob: -5.844645023345947
    8. ''s' → logprob: -6.219645023345947
    9. ' ' → logprob: -6.344645023345947
    10. '`' → logprob: -7.969645023345947

Token 479: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015790171455591917
    2. ''' → logprob: -6.7515788078308105
    3. 'z' → logprob: -8.876579284667969
    4. '1' → logprob: -9.376579284667969
    5. ' ' → logprob: -9.626579284667969
    6. 'zeros' → logprob: -9.626579284667969
    7. ''z' → logprob: -11.001579284667969
    8. ''s' → logprob: -11.376579284667969
    9. ' zeros' → logprob: -11.501579284667969
    10. 'zero' → logprob: -12.126579284667969

Token 480: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9206291437149048
    2. '')' → logprob: -0.9206291437149048
    3. '       ' → logprob: -2.1706290245056152
    4. '           ' → logprob: -3.9206290245056152
    5. 's' → logprob: -4.045629024505615
    6. ''' → logprob: -4.170629024505615
    7. '   ' → logprob: -5.045629024505615
    8. ')'' → logprob: -5.295629024505615
    9. ''):
' → logprob: -5.420629024505615
    10. '0' → logprob: -5.420629024505615

Token 481: ' ajout' (ID: 64605)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39573004841804504
    2. '       ' → logprob: -1.7707300186157227
    3. 'if' → logprob: -3.2707300186157227
    4. ' if' → logprob: -3.5207300186157227
    5. '           ' → logprob: -3.8957300186157227
    6. '):' → logprob: -4.020730018615723
    7. '')' → logprob: -4.395730018615723
    8. '):
' → logprob: -4.520730018615723
    9. ' and' → logprob: -5.270730018615723
    10. ' or' → logprob: -5.645730018615723

Token 482: 'ée' (ID: 2894)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.7733413577079773
    2. 'ée' → logprob: -1.898341417312622
    3. '   ' → logprob: -2.148341417312622
    4. ')' → logprob: -2.398341417312622
    5. 's' → logprob: -2.398341417312622
    6. 'i' → logprob: -3.523341417312622
    7. '       ' → logprob: -4.398341178894043
    8. 'e' → logprob: -4.523341178894043
    9. 'ing' → logprob: -5.148341178894043
    10. '0' → logprob: -5.398341178894043

Token 483: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9334543943405151
    2. ')' → logprob: -1.4334543943405151
    3. '           ' → logprob: -1.4334543943405151
    4. '):
' → logprob: -3.3084545135498047
    5. '):' → logprob: -3.4334545135498047
    6. ' if' → logprob: -3.8084545135498047
    7. 'if' → logprob: -4.683454513549805
    8. '               ' → logprob: -5.183454513549805
    9. '   ' → logprob: -5.558454513549805
    10. ':' → logprob: -5.933454513549805

Token 484: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06486491113901138
    2. 'la' → logprob: -4.1898651123046875
    3. 's' → logprob: -4.4398651123046875
    4. ' i' → logprob: -4.5648651123046875
    5. '1' → logprob: -5.1898651123046875
    6. 'l' → logprob: -5.1898651123046875
    7. ' la' → logprob: -5.8148651123046875
    8. ''' → logprob: -6.5648651123046875
    9. 'flip' → logprob: -6.8148651123046875
    10. ')' → logprob: -6.9398651123046875

Token 485: ' fenêtre' (ID: 109648)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.526488721370697
    2. '1' → logprob: -2.026488780975342
    3. 'fen' → logprob: -2.651488780975342
    4. 'i' → logprob: -2.651488780975342
    5. ' fenêtre' → logprob: -3.276488780975342
    6. ' droite' → logprob: -3.776488780975342
    7. ' ' → logprob: -4.776488780975342
    8. 'distance' → logprob: -4.901488780975342
    9. 'suite' → logprob: -5.026488780975342
    10. 'flip' → logprob: -5.026488780975342

Token 486: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8974296450614929
    2. '           ' → logprob: -1.2724297046661377
    3. '):
' → logprob: -2.0224297046661377
    4. ')' → logprob: -2.1474297046661377
    5. '):' → logprob: -3.8974297046661377
    6. ' if' → logprob: -4.897429466247559
    7. ':
' → logprob: -5.147429466247559
    8. ':' → logprob: -5.522429466247559
    9. '               ' → logprob: -5.647429466247559
    10. 'if' → logprob: -5.647429466247559

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02454993687570095
    2. ' if' → logprob: -4.524549961090088
    3. 'if' → logprob: -5.149549961090088
    4. '   ' → logprob: -5.774549961090088
    5. 'while' → logprob: -6.274549961090088
    6. ' while' → logprob: -7.024549961090088
    7. '        
' → logprob: -7.149549961090088
    8. '           ' → logprob: -7.399549961090088
    9. ',' → logprob: -10.02454948425293
    10. '
' → logprob: -10.52454948425293

Token 488: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6610442399978638
    2. 'while' (adapté à ' while') → logprob: -1.4110442399978638
    3. '       ' → logprob: -2.036044120788574
    4. ' if' → logprob: -2.536044120788574
    5. ' while' → logprob: -3.661044120788574
    6. '   ' → logprob: -5.536044120788574
    7. 'j' → logprob: -9.411044120788574
    8. '```' → logprob: -9.786044120788574
    9. '           ' → logprob: -10.161044120788574
    10. ' ' → logprob: -10.286044120788574

Token 489: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006149077322334051
    2. ' i' → logprob: -5.1311492919921875
    3. 's' → logprob: -8.506149291992188
    4. '   ' → logprob: -11.631149291992188
    5. ' s' → logprob: -12.006149291992188
    6. ' ' → logprob: -13.881149291992188
    7. '	i' → logprob: -14.131149291992188
    8. 'j' → logprob: -15.006149291992188
    9. '  ' → logprob: -15.131149291992188
    10. '(i' → logprob: -15.381149291992188

Token 490: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01052703708410263
    2. '<n' → logprob: -5.13552713394165
    3. '<' → logprob: -5.38552713394165
    4. '<len' → logprob: -13.260526657104492
    5. '<N' → logprob: -13.510526657104492
    6. '<s' → logprob: -13.760526657104492
    7. ' ' → logprob: -15.260526657104492
    8. '[' → logprob: -15.510526657104492
    9. '<size' → logprob: -15.635526657104492
    10. '[n' → logprob: -15.885526657104492

Token 491: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20141392946243286
    2. ' n' → logprob: -1.701413869857788
    3. '   ' → logprob: -15.701414108276367
    4. ' ' → logprob: -15.701414108276367
    5. '	n' → logprob: -15.826414108276367
    6. 's' → logprob: -16.201414108276367
    7. '_n' → logprob: -17.326414108276367
    8. 'i' → logprob: -17.576414108276367
    9. ')n' → logprob: -17.701414108276367
    10. '  ' → logprob: -18.076414108276367

Token 492: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3132665753364563
    2. 'and' → logprob: -1.3132665157318115
    3. '   ' → logprob: -12.81326675415039
    4. ' и' → logprob: -14.43826675415039
    5. ' ' → logprob: -14.81326675415039
    6. '	and' → logprob: -15.06326675415039
    7. '```' → logprob: -15.56326675415039
    8. '       ' → logprob: -16.18826675415039
    9. 'n' → logprob: -16.68826675415039
    10. ' và' → logprob: -16.81326675415039

Token 493: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.051066520740278e-05
    2. ' s' → logprob: -10.000060081481934
    3. 'rest' → logprob: -11.750060081481934
    4. '   ' → logprob: -12.875060081481934
    5. '(s' → logprob: -13.250060081481934
    6. 'i' → logprob: -13.375060081481934
    7. 'j' → logprob: -14.750060081481934
    8. 'k' → logprob: -15.625060081481934
    9. ' ' → logprob: -16.00006103515625
    10. '`s' → logprob: -16.25006103515625

Token 494: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.125000953674316
    3. '[j' → logprob: -16.625
    4. '```' → logprob: -17.125
    5. 'i' → logprob: -17.75
    6. '   ' → logprob: -17.875
    7. ' [' → logprob: -18.125
    8. '[I' → logprob: -18.5
    9. '[
' → logprob: -18.625
    10. '[s' → logprob: -18.875

Token 495: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003774789161980152
    2. ']==' → logprob: -5.753774642944336
    3. ' ]' → logprob: -8.253774642944336
    4. '==' → logprob: -8.503774642944336
    5. ' ==' → logprob: -10.003774642944336
    6. ']=='' → logprob: -10.128774642944336
    7. '[' → logprob: -11.003774642944336
    8. '[i' → logprob: -11.253774642944336
    9. 's' → logprob: -11.878774642944336
    10. '   ' → logprob: -12.503774642944336

Token 496: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6492664813995361
    2. '==' → logprob: -0.7742664813995361
    3. '=='' → logprob: -4.149266242980957
    4. ' =='' → logprob: -8.649266242980957
    5. '=' → logprob: -8.899266242980957
    6. ''' → logprob: -9.024266242980957
    7. 's' → logprob: -9.399266242980957
    8. '[' → logprob: -10.024266242980957
    9. ' '' → logprob: -10.274266242980957
    10. ' ' → logprob: -10.899266242980957

Token 497: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0037949695251882076
    2. '0' → logprob: -6.003795146942139
    3. '1' → logprob: -7.128795146942139
    4. ' '' → logprob: -7.753795146942139
    5. ''s' → logprob: -10.00379467010498
    6. '"' → logprob: -12.12879467010498
    7. ''o' → logprob: -12.25379467010498
    8. ' ' → logprob: -12.37879467010498
    9. ''i' → logprob: -12.37879467010498
    10. '   ' → logprob: -12.62879467010498

Token 498: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.386902779340744
    2. '1' → logprob: -1.1369028091430664
    3. ''' → logprob: -10.886902809143066
    4. ' ' → logprob: -12.449402809143066
    5. ''s' → logprob: -13.074402809143066
    6. '['' → logprob: -14.324402809143066
    7. '```' → logprob: -14.636902809143066
    8. '{'' → logprob: -14.886902809143066
    9. '`' → logprob: -14.949402809143066
    10. '_' → logprob: -15.011902809143066

Token 499: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -1.2929414510726929
    2. ':
' → logprob: -1.4179414510726929
    3. ' and' → logprob: -1.5429414510726929
    4. ''' → logprob: -2.5429415702819824
    5. '       ' → logprob: -3.0429415702819824
    6. '':' → logprob: -3.1679415702819824
    7. '           ' → logprob: -3.1679415702819824
    8. ':' → logprob: -3.2929415702819824
    9. ']:
' → logprob: -4.542941570281982
    10. '']:
' → logprob: -6.417941570281982

Token 500: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9200832843780518
    2. ' and' → logprob: -1.1700832843780518
    3. '           ' → logprob: -1.2950832843780518
    4. ':
' → logprob: -5.295083045959473
    5. '   ' → logprob: -5.420083045959473
    6. '0' → logprob: -6.545083045959473
    7. 'and' → logprob: -6.795083045959473
    8. ' i' → logprob: -6.920083045959473
    9. ':' → logprob: -7.045083045959473
    10. '               ' → logprob: -7.170083045959473

Token 501: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0024052660446614027
    2. '           ' → logprob: -6.377405166625977
    3. ' i' → logprob: -7.752405166625977
    4. 'if' → logprob: -8.877405166625977
    5. '   ' → logprob: -9.377405166625977
    6. '       ' → logprob: -10.377405166625977
    7. '               ' → logprob: -12.002405166625977
    8. 'k' → logprob: -12.627405166625977
    9. 'j' → logprob: -12.752405166625977
    10. 'while' → logprob: -14.127405166625977

Token 502: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.023427506908774376
    2. '+=' → logprob: -3.7734274864196777
    3. '+' → logprob: -8.898427963256836
    4. ' +' → logprob: -10.398427963256836
    5. '=' → logprob: -12.648427963256836
    6. ']+=' → logprob: -13.148427963256836
    7. '   ' → logprob: -13.273427963256836
    8. ' ' → logprob: -13.398427963256836
    9. ' =' → logprob: -13.648427963256836
    10. ' ==' → logprob: -13.648427963256836

Token 503: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.250066757202148
    4. '```' → logprob: -17.37506675720215
    5. '0' → logprob: -18.62506675720215
    6. '  ' → logprob: -19.37506675720215
    7. '       ' → logprob: -19.62506675720215
    8. '           ' → logprob: -19.93756675720215
    9. '`' → logprob: -20.12506675720215
    10. '۱' → logprob: -20.43756675720215

Token 504: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '0' → logprob: -16.6250057220459
    4. '```' → logprob: -17.5000057220459
    5. 'i' → logprob: -17.6875057220459
    6. '   ' → logprob: -18.3125057220459
    7. '۱' → logprob: -19.1250057220459
    8. '`' → logprob: -19.2500057220459
    9. '2' → logprob: -19.4375057220459
    10. '१' → logprob: -19.7500057220459

Token 505: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39381909370422363
    2. '<|end|>' → logprob: -1.2688190937042236
    3. '
' → logprob: -3.7688190937042236
    4. '<|end|>' → logprob: -4.5188188552856445
    5. '        
' → logprob: -5.3938188552856445
    6. ' 
' → logprob: -6.5188188552856445
    7. '           ' → logprob: -6.8938188552856445
    8. '   ' → logprob: -7.2688188552856445
    9. '  
' → logprob: -7.3938188552856445
    10. '    
' → logprob: -7.8938188552856445

Token 506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11754366755485535
    2. 'rest' → logprob: -2.8675436973571777
    3. '           ' → logprob: -3.9925436973571777
    4. ' rest' → logprob: -4.242543697357178
    5. '        
' → logprob: -5.367543697357178
    6. '<|end|>' → logprob: -5.742543697357178
    7. 'if' → logprob: -5.867543697357178
    8. ' if' → logprob: -5.867543697357178
    9. '   ' → logprob: -6.242543697357178
    10. 'j' → logprob: -6.367543697357178

Token 507: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30224865674972534
    2. 'if' → logprob: -2.05224871635437
    3. 'rest' → logprob: -2.92724871635437
    4. '   ' → logprob: -3.30224871635437
    5. 'j' → logprob: -4.177248477935791
    6. 'while' → logprob: -4.427248477935791
    7. ' if' → logprob: -4.677248477935791
    8. ' rest' → logprob: -6.677248477935791
    9. '        
' → logprob: -7.052248477935791
    10. '```' → logprob: -7.302248477935791

Token 508: ' Av' (ID: 7541)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0817303657531738
    2. 'while' → logprob: -1.0817303657531738
    3. 'rest' → logprob: -1.9567303657531738
    4. 'j' → logprob: -1.9567303657531738
    5. 'i' → logprob: -4.081730365753174
    6. '#' → logprob: -4.581730365753174
    7. '   ' → logprob: -5.206730365753174
    8. '0' → logprob: -6.331730365753174
    9. 'ans' → logprob: -6.456730365753174
    10. '       ' → logprob: -7.456730365753174

Token 509: 'ancer' (ID: 13358)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7284147143363953
    2. '       ' → logprob: -1.72841477394104
    3. 'ail' → logprob: -1.85341477394104
    4. '           ' → logprob: -2.60341477394104
    5. '   ' → logprob: -3.60341477394104
    6. 'ailable' → logprob: -3.97841477394104
    7. 'j' → logprob: -4.103414535522461
    8. 'while' → logprob: -4.228414535522461
    9. 'er' → logprob: -4.853414535522461
    10. 'if' → logprob: -5.353414535522461

Token 510: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5152822136878967
    2. ' j' → logprob: -1.515282154083252
    3. 'i' → logprob: -2.140282154083252
    4. ' i' → logprob: -2.765282154083252
    5. '   ' → logprob: -6.640282154083252
    6. 'while' → logprob: -7.890282154083252
    7. ' while' → logprob: -8.26528263092041
    8. '       ' → logprob: -8.76528263092041
    9. ' ' → logprob: -9.39028263092041
    10. '    ' → logprob: -10.39028263092041

Token 511: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0655767917633057
    2. ' +=' → logprob: -1.4405767917633057
    3. ' while' → logprob: -1.5655767917633057
    4. 'while' → logprob: -1.6905767917633057
    5. '+=' → logprob: -4.315576553344727
    6. ' <' → logprob: -6.190576553344727
    7. ' on' → logprob: -6.565576553344727
    8. '   ' → logprob: -6.565576553344727
    9. '           ' → logprob: -6.690576553344727
    10. '	while' → logprob: -7.190576553344727

Token 512: ' les' (ID: 1341)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.1591795682907104
    2. ' s' → logprob: -1.9091795682907104
    3. 's' → logprob: -2.2841796875
    4. ''' → logprob: -2.2841796875
    5. 'n' → logprob: -2.5341796875
    6. ' '' → logprob: -2.7841796875
    7. ' i' → logprob: -2.9091796875
    8. 'i' → logprob: -3.7841796875
    9. 'while' → logprob: -3.7841796875
    10. ' while' → logprob: -4.0341796875

Token 513: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10009558498859406
    2. ' '' → logprob: -2.475095510482788
    3. ''s' → logprob: -5.475095748901367
    4. ''i' → logprob: -6.600095748901367
    5. 'while' → logprob: -6.850095748901367
    6. ' ' → logprob: -6.850095748901367
    7. '1' → logprob: -6.975095748901367
    8. 'i' → logprob: -7.475095748901367
    9. ' while' → logprob: -7.475095748901367
    10. 's' → logprob: -7.725095748901367

Token 514: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003614443587139249
    2. ''' → logprob: -5.62861442565918
    3. ' ' → logprob: -11.37861442565918
    4. ' '' → logprob: -13.00361442565918
    5. '0' → logprob: -15.25361442565918
    6. '')' → logprob: -15.62861442565918
    7. ''s' → logprob: -15.75361442565918
    8. '"' → logprob: -17.75361442565918
    9. '111' → logprob: -17.87861442565918
    10. '`' → logprob: -18.00361442565918

Token 515: ''' (ID: 6)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20060592889785767
    2. ' and' → logprob: -2.325605869293213
    3. '   ' → logprob: -3.825605869293213
    4. ']' → logprob: -4.325605869293213
    5. '<|end|>' → logprob: -4.325605869293213
    6. ''' → logprob: -4.950605869293213
    7. '[i' → logprob: -5.200605869293213
    8. '           ' → logprob: -5.325605869293213
    9. ')' → logprob: -5.700605869293213
    10. ' or' → logprob: -5.825605869293213

Token 516: ' atte' (ID: 43312)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3670060336589813
    2. ' while' → logprob: -1.9920060634613037
    3. 'while' → logprob: -2.9920060634613037
    4. '   ' → logprob: -3.1170060634613037
    5. '<|end|>' → logprob: -3.1170060634613037
    6. ' and' → logprob: -4.367005825042725
    7. '<|end|>' → logprob: -5.492005825042725
    8. ' if' → logprob: -5.617005825042725
    9. '```' → logprob: -6.242005825042725
    10. ' or' → logprob: -6.492005825042725

Token 517: 'ints' (ID: 20448)
  Prédit: 'ints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.0009587471140548587
    2. 'int' → logprob: -7.7509589195251465
    3. 'intes' → logprob: -8.875958442687988
    4. 'ign' → logprob: -9.250958442687988
    5. 'nts' → logprob: -9.375958442687988
    6. 'inte' → logprob: -9.375958442687988
    7. 'ind' → logprob: -10.125958442687988
    8. 'i' → logprob: -10.625958442687988
    9. 'indre' → logprob: -10.750958442687988
    10. 'inds' → logprob: -10.750958442687988

Token 518: ' juste' (ID: 31553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02235034480690956
    2. 'while' → logprob: -4.397350311279297
    3. ' while' → logprob: -5.147350311279297
    4. '           ' → logprob: -6.772350311279297
    5. '<|end|>' → logprob: -7.272350311279297
    6. '   ' → logprob: -8.022350311279297
    7. '<|end|>' → logprob: -8.147350311279297
    8. 's' → logprob: -8.522350311279297
    9. ' and' → logprob: -8.772350311279297
    10. 'i' → logprob: -9.022350311279297

Token 519: ' après' (ID: 16460)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.41412150859832764
    2. '   ' → logprob: -2.664121627807617
    3. '[i' → logprob: -2.914121627807617
    4. '=' → logprob: -3.039121627807617
    5. 'while' → logprob: -3.414121627807617
    6. 'after' → logprob: -3.539121627807617
    7. ' i' → logprob: -4.289121627807617
    8. '==' → logprob: -4.539121627807617
    9. ''' → logprob: -4.789121627807617
    10. '+' → logprob: -4.914121627807617

Token 520: ' cette' (ID: 7696)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7357317209243774
    2. 'i' → logprob: -1.1107317209243774
    3. ' i' → logprob: -1.9857317209243774
    4. 'while' → logprob: -3.610731601715088
    5. ' while' → logprob: -4.735731601715088
    6. '           ' → logprob: -5.360731601715088
    7. '[i' → logprob: -5.735731601715088
    8. '(i' → logprob: -5.735731601715088
    9. ' and' → logprob: -6.735731601715088
    10. '<|end|>' → logprob: -6.860731601715088

Token 521: ' plage' (ID: 78241)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.38251346349716187
    2. '0' → logprob: -1.2575135231018066
    3. ' while' → logprob: -4.382513523101807
    4. 'pl' → logprob: -4.882513523101807
    5. '   ' → logprob: -6.257513523101807
    6. ''' → logprob: -6.257513523101807
    7. ' '' → logprob: -6.632513523101807
    8. ' ' → logprob: -6.632513523101807
    9. '`' → logprob: -6.882513523101807
    10. 'zeros' → logprob: -7.132513523101807

Token 522: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014130128547549248
    2. '           ' → logprob: -5.014130115509033
    3. 'i' → logprob: -6.389130115509033
    4. ' i' → logprob: -6.514130115509033
    5. 'while' → logprob: -6.889130115509033
    6. ':' → logprob: -7.139130115509033
    7. '   ' → logprob: -7.639130115509033
    8. '[i' → logprob: -7.889130115509033
    9. ' while' → logprob: -8.014130592346191
    10. '<|end|>' → logprob: -8.264130592346191

Token 523: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22011472284793854
    2. '0' → logprob: -1.7201147079467773
    3. ' '' → logprob: -4.470114707946777
    4. ''z' → logprob: -5.970114707946777
    5. 'zeros' → logprob: -6.095114707946777
    6. 'z' → logprob: -7.470114707946777
    7. ''s' → logprob: -7.720114707946777
    8. ' zeros' → logprob: -7.720114707946777
    9. '`' → logprob: -7.970114707946777
    10. ' ' → logprob: -8.220114707946777

Token 524: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03372730314731598
    2. ''' → logprob: -3.4087274074554443
    3. 'zeros' → logprob: -10.033727645874023
    4. ''z' → logprob: -11.658727645874023
    5. ' '' → logprob: -11.908727645874023
    6. ''s' → logprob: -12.033727645874023
    7. ' ' → logprob: -12.533727645874023
    8. 'z' → logprob: -13.033727645874023
    9. '`' → logprob: -13.158727645874023
    10. '1' → logprob: -13.158727645874023

Token 525: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3805948793888092
    2. '           ' → logprob: -1.2555948495864868
    3. ':' → logprob: -4.755594730377197
    4. '   ' → logprob: -5.255594730377197
    5. 's' → logprob: -5.255594730377197
    6. '':' → logprob: -5.755594730377197
    7. ''' → logprob: -6.005594730377197
    8. '```' → logprob: -6.630594730377197
    9. ')' → logprob: -7.130594730377197
    10. '.' → logprob: -7.630594730377197

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027333306148648262
    2. 'i' → logprob: -4.1523332595825195
    3. '           ' → logprob: -5.2773332595825195
    4. ' i' → logprob: -5.5273332595825195
    5. '   ' → logprob: -6.5273332595825195
    6. 'while' → logprob: -7.9023332595825195
    7. ' while' → logprob: -8.77733325958252
    8. '```' → logprob: -10.40233325958252
    9. ',' → logprob: -10.90233325958252
    10. ':' → logprob: -11.27733325958252

Token 527: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.14014334976673126
    2. 'i' → logprob: -2.515143394470215
    3. ' while' → logprob: -3.640143394470215
    4. '       ' → logprob: -4.265143394470215
    5. '   ' → logprob: -4.765143394470215
    6. ' i' → logprob: -6.890143394470215
    7. '	while' → logprob: -10.015143394470215
    8. ' ' → logprob: -11.265143394470215
    9. '           ' → logprob: -12.515143394470215
    10. '  ' → logprob: -12.640143394470215

Token 528: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018154039978981018
    2. 'i' → logprob: -4.018154144287109
    3. '   ' → logprob: -12.64315414428711
    4. ' ' → logprob: -15.01815414428711
    5. '    ' → logprob: -15.76815414428711
    6. '	i' → logprob: -16.14315414428711
    7. '(i' → logprob: -16.26815414428711
    8. ' ' → logprob: -16.89315414428711
    9. ' (' → logprob: -17.39315414428711
    10. '       ' → logprob: -17.39315414428711

Token 529: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.004729041364043951
    2. '<' → logprob: -5.879729270935059
    3. '<n' → logprob: -6.254729270935059
    4. '<s' → logprob: -14.879729270935059
    5. '<len' → logprob: -15.129729270935059
    6. '<N' → logprob: -16.504728317260742
    7. '[n' → logprob: -16.754728317260742
    8. '<m' → logprob: -17.129728317260742
    9. '<size' → logprob: -17.254728317260742
    10. '   ' → logprob: -17.254728317260742

Token 530: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020545506849884987
    2. ' n' → logprob: -3.895545482635498
    3. '<n' → logprob: -12.895545959472656
    4. 'i' → logprob: -14.770545959472656
    5. '   ' → logprob: -15.020545959472656
    6. '	n' → logprob: -16.270545959472656
    7. ' <' → logprob: -16.520545959472656
    8. 's' → logprob: -16.770545959472656
    9. ' ' → logprob: -16.895545959472656
    10. ',' → logprob: -17.395545959472656

Token 531: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014238963834941387
    2. 'and' → logprob: -4.3892388343811035
    3. ' <' → logprob: -6.7642388343811035
    4. '   ' → logprob: -8.264239311218262
    5. ' ==' → logprob: -8.764239311218262
    6. '       ' → logprob: -10.014239311218262
    7. '<s' → logprob: -10.264239311218262
    8. '==' → logprob: -10.639239311218262
    9. ' s' → logprob: -10.889239311218262
    10. 's' → logprob: -11.014239311218262

Token 532: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.34845536947250366
    2. 's' → logprob: -1.2234554290771484
    3. '   ' → logprob: -12.473455429077148
    4. ' ' → logprob: -13.223455429077148
    5. '(s' → logprob: -13.473455429077148
    6. ' ' → logprob: -13.473455429077148
    7. '	s' → logprob: -14.348455429077148
    8. ' (' → logprob: -15.098455429077148
    9. '       ' → logprob: -15.785955429077148
    10. '_s' → logprob: -15.785955429077148

Token 533: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.875000953674316
    3. 'i' → logprob: -16.0
    4. '```' → logprob: -17.375
    5. '[j' → logprob: -18.625
    6. '   ' → logprob: -18.625
    7. '\[' → logprob: -18.625
    8. '[I' → logprob: -18.875
    9. '[
' → logprob: -19.125
    10. '[user' → logprob: -19.5

Token 534: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5902183651924133
    2. '==' → logprob: -1.0902183055877686
    3. ' ==' → logprob: -2.4652183055877686
    4. ']==' → logprob: -3.8402183055877686
    5. '[i' → logprob: -6.465218544006348
    6. '[' → logprob: -6.840218544006348
    7. ']=='' → logprob: -8.590218544006348
    8. '   ' → logprob: -9.340218544006348
    9. '=='' → logprob: -9.465218544006348
    10. '=' → logprob: -9.965218544006348

Token 535: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.52375328540802
    2. ' ==' → logprob: -0.89875328540802
    3. '=' → logprob: -8.02375316619873
    4. '=='' → logprob: -8.39875316619873
    5. '[' → logprob: -10.02375316619873
    6. ''' → logprob: -11.64875316619873
    7. ' =='' → logprob: -11.89875316619873
    8. ' =' → logprob: -12.64875316619873
    9. ']==' → logprob: -12.89875316619873
    10. ' ' → logprob: -13.02375316619873

Token 536: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00015943869948387146
    2. '1' → logprob: -9.00015926361084
    3. ' '' → logprob: -10.25015926361084
    4. ' ' → logprob: -14.87515926361084
    5. '"' → logprob: -15.25015926361084
    6. '0' → logprob: -17.875160217285156
    7. '   ' → logprob: -18.125160217285156
    8. '`' → logprob: -18.625160217285156
    9. '  ' → logprob: -19.250160217285156
    10. '('' → logprob: -19.500160217285156

Token 537: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007105246186256409
    2. ''' → logprob: -7.250710487365723
    3. ' ' → logprob: -15.000710487365723
    4. '0' → logprob: -15.375710487365723
    5. '"' → logprob: -17.25071144104004
    6. ' '' → logprob: -17.75071144104004
    7. ''''' → logprob: -18.25071144104004
    8. '')' → logprob: -18.37571144104004
    9. ''s' → logprob: -19.25071144104004
    10. '''' → logprob: -19.37571144104004

Token 538: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18540892004966736
    2. ':' → logprob: -2.1854088306427
    3. '       ' → logprob: -3.8104088306427
    4. '   ' → logprob: -4.560409069061279
    5. '':
' → logprob: -4.935409069061279
    6. '):
' → logprob: -4.935409069061279
    7. '           ' → logprob: -5.310409069061279
    8. '```' → logprob: -6.935409069061279
    9. '':' → logprob: -7.060409069061279
    10. 'i' → logprob: -7.060409069061279

Token 539: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08553791791200638
    2. '       ' → logprob: -2.960537910461426
    3. ':' → logprob: -4.960537910461426
    4. ' i' → logprob: -4.960537910461426
    5. ':
' → logprob: -5.085537910461426
    6. '   ' → logprob: -5.335537910461426
    7. 'i' → logprob: -5.460537910461426
    8. '[i' → logprob: -9.085537910461426
    9. '```' → logprob: -9.085537910461426
    10. ' and' → logprob: -9.210537910461426

Token 540: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0036319077480584383
    2. ' i' → logprob: -5.628632068634033
    3. '           ' → logprob: -11.128631591796875
    4. '   ' → logprob: -11.253631591796875
    5. '	i' → logprob: -13.628631591796875
    6. 's' → logprob: -14.128631591796875
    7. '1' → logprob: -15.003631591796875
    8. '       ' → logprob: -15.003631591796875
    9. '```' → logprob: -15.128631591796875
    10. 'j' → logprob: -15.628631591796875

Token 541: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5763880610466003
    2. '+=' → logprob: -0.8263880610466003
    3. '           ' → logprob: -7.826387882232666
    4. '+' → logprob: -10.701388359069824
    5. '   ' → logprob: -11.576388359069824
    6. 'i' → logprob: -12.076388359069824
    7. '       ' → logprob: -12.701388359069824
    8. '=' → logprob: -13.201388359069824
    9. '            ' → logprob: -13.826388359069824
    10. '               ' → logprob: -13.951388359069824

Token 542: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05488261952996254
    2. ' ' → logprob: -2.929882526397705
    3. '```' → logprob: -15.929883003234863
    4. '   ' → logprob: -16.179882049560547
    5. ' ' → logprob: -16.429882049560547
    6. ')' → logprob: -16.804882049560547
    7. '           ' → logprob: -18.242382049560547
    8. '0' → logprob: -18.554882049560547
    9. '<|end|>' → logprob: -18.679882049560547
    10. '  ' → logprob: -18.679882049560547

Token 543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -18.875003814697266
    4. '   ' → logprob: -19.750003814697266
    5. 'i' → logprob: -20.500003814697266
    6. ')' → logprob: -21.062503814697266
    7. '１' → logprob: -21.500003814697266
    8. '۱' → logprob: -21.562503814697266
    9. '=' → logprob: -22.062503814697266
    10. '  ' → logprob: -22.125003814697266

Token 544: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15910503268241882
    2. '        
' → logprob: -2.534105062484741
    3. '<|end|>' → logprob: -3.659105062484741
    4. '
' → logprob: -4.034104824066162
    5. ' 
' → logprob: -5.159104824066162
    6. '    
' → logprob: -5.284104824066162
    7. '   ' → logprob: -5.284104824066162
    8. '  
' → logprob: -5.659104824066162
    9. '   
' → logprob: -6.784104824066162
    10. '       
' → logprob: -6.784104824066162

Token 546: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7122941017150879
    2. 'while' → logprob: -0.8372941017150879
    3. '       ' → logprob: -2.587294101715088
    4. '   ' → logprob: -7.337294101715088
    5. '#' (adapté à ' #') → logprob: -7.712294101715088
    6. ' if' → logprob: -9.46229362487793
    7. ' while' → logprob: -9.58729362487793
    8. 'j' → logprob: -10.08729362487793
    9. '           ' → logprob: -10.83729362487793
    10. '```' → logprob: -11.46229362487793

Token 547: ' Av' (ID: 7541)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.37577229738235474
    2. 'if' → logprob: -1.25077223777771
    3. '#' → logprob: -4.000772476196289
    4. 'rest' → logprob: -5.875772476196289
    5. 'ans' → logprob: -6.125772476196289
    6. '   ' → logprob: -6.375772476196289
    7. 'j' → logprob: -7.000772476196289
    8. '       ' → logprob: -7.875772476196289
    9. 'zero' → logprob: -8.500772476196289
    10. 'window' → logprob: -9.625772476196289

Token 548: 'ancer' (ID: 13358)
  Prédit: 'ancer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancer' → logprob: -0.002032730495557189
    2. 'ant' → logprob: -7.12703275680542
    3. 'an' → logprob: -8.752032279968262
    4. 'ance' → logprob: -8.877032279968262
    5. 'anc' → logprob: -8.877032279968262
    6. 'anter' → logprob: -8.877032279968262
    7. 'a' → logprob: -9.252032279968262
    8. 'er' → logprob: -9.627032279968262
    9. 'anç' → logprob: -9.752032279968262
    10. 'ancé' → logprob: -9.877032279968262

Token 549: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03166697546839714
    2. ' j' → logprob: -3.5316669940948486
    3. 'while' → logprob: -7.2816667556762695
    4. '   ' → logprob: -7.2816667556762695
    5. ' while' → logprob: -8.15666675567627
    6. 'i' → logprob: -9.90666675567627
    7. '       ' → logprob: -10.03166675567627
    8. ' ' → logprob: -10.40666675567627
    9. '    ' → logprob: -10.65666675567627
    10. '	j' → logprob: -10.90666675567627

Token 550: ' pour' (ID: 1930)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.2017284631729126
    2. 'while' → logprob: -1.2017284631729126
    3. ' while' → logprob: -1.7017284631729126
    4. '       ' → logprob: -1.9517284631729126
    5. '+=' → logprob: -3.201728343963623
    6. '           ' → logprob: -5.201728343963623
    7. '<|end|>' → logprob: -5.326728343963623
    8. '   ' → logprob: -5.826728343963623
    9. ' if' → logprob: -5.826728343963623
    10. '        ' → logprob: -5.951728343963623

Token 551: ' sa' (ID: 880)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.199985072016716
    2. 's' → logprob: -2.8249850273132324
    3. ' while' → logprob: -3.1999850273132324
    4. '0' → logprob: -3.5749850273132324
    5. 'j' → logprob: -3.8249850273132324
    6. '1' → logprob: -4.449985027313232
    7. ' s' → logprob: -5.199985027313232
    8. ' j' → logprob: -5.199985027313232
    9. 'not' → logprob: -6.074985027313232
    10. ' ' → logprob: -6.824985027313232

Token 552: 'uter' (ID: 23469)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.11453098803758621
    2. ' while' → logprob: -2.6145310401916504
    3. ' s' → logprob: -4.86453104019165
    4. ' ' → logprob: -5.23953104019165
    5. 'j' → logprob: -5.73953104019165
    6. ' j' → logprob: -5.86453104019165
    7. 'v' → logprob: -6.11453104019165
    8. '   ' → logprob: -6.11453104019165
    9. 't' → logprob: -6.11453104019165
    10. 'i' → logprob: -6.36453104019165

Token 553: ' la' (ID: 557)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9774653911590576
    2. ' while' → logprob: -1.3524653911590576
    3. ' j' → logprob: -1.7274653911590576
    4. 'j' → logprob: -1.8524653911590576
    5. '       ' → logprob: -5.477465629577637
    6. ' '' → logprob: -5.602465629577637
    7. '[j' → logprob: -5.602465629577637
    8. '   ' → logprob: -6.227465629577637
    9. ''' → logprob: -6.352465629577637
    10. ' ' → logprob: -6.477465629577637

Token 554: ' première' (ID: 23423)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.0399854183197021
    2. ''' → logprob: -1.5399854183197021
    3. '0' → logprob: -1.9149854183197021
    4. ' while' → logprob: -2.164985418319702
    5. 'if' → logprob: -2.789985418319702
    6. ' ' → logprob: -3.414985418319702
    7. ' '' → logprob: -3.539985418319702
    8. ' if' → logprob: -4.039985656738281
    9. '1' → logprob: -4.164985656738281
    10. '   ' → logprob: -5.289985656738281

Token 555: ' plage' (ID: 78241)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0971324443817139
    2. 'if' → logprob: -1.2221324443817139
    3. 'pl' → logprob: -2.097132444381714
    4. 'while' → logprob: -2.472132444381714
    5. ' plage' → logprob: -3.347132444381714
    6. ' if' → logprob: -3.597132444381714
    7. ' '' → logprob: -3.722132444381714
    8. '`' → logprob: -3.847132444381714
    9. ''' → logprob: -3.847132444381714
    10. ' while' → logprob: -5.097132682800293

Token 556: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17850147187709808
    2. ' de' → logprob: -2.8035013675689697
    3. ' of' → logprob: -3.1785013675689697
    4. ' if' → logprob: -4.553501605987549
    5. 'j' → logprob: -5.053501605987549
    6. 'while' → logprob: -5.053501605987549
    7. '   ' → logprob: -5.303501605987549
    8. 'de' → logprob: -5.428501605987549
    9. 'if' → logprob: -5.428501605987549
    10. '```' → logprob: -5.553501605987549

Token 557: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14423443377017975
    2. '0' → logprob: -2.2692344188690186
    3. ' '' → logprob: -3.6442344188690186
    4. 'zeros' → logprob: -6.269234657287598
    5. ' zeros' → logprob: -6.769234657287598
    6. '`' → logprob: -7.519234657287598
    7. ''z' → logprob: -7.769234657287598
    8. ''s' → logprob: -7.894234657287598
    9. ' ' → logprob: -8.394234657287598
    10. 's' → logprob: -10.019234657287598

Token 558: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006113297306001186
    2. ''' → logprob: -5.131113529205322
    3. '1' → logprob: -9.256113052368164
    4. 'zeros' → logprob: -10.506113052368164
    5. ''s' → logprob: -10.756113052368164
    6. ' ' → logprob: -11.006113052368164
    7. ' zeros' → logprob: -12.006113052368164
    8. '   ' → logprob: -12.381113052368164
    9. '`' → logprob: -12.506113052368164
    10. ' '' → logprob: -12.881113052368164

Token 559: ''' (ID: 6)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7772382497787476
    2. 'while' → logprob: -1.7772382497787476
    3. ''' → logprob: -2.027238368988037
    4. '   ' → logprob: -2.902238368988037
    5. 'if' → logprob: -3.152238368988037
    6. '           ' → logprob: -3.277238368988037
    7. ' while' → logprob: -3.527238368988037
    8. '1' → logprob: -3.777238368988037
    9. ' if' → logprob: -4.402238368988037
    10. ' '' → logprob: -4.652238368988037

Token 560: ' devenue' (ID: 134846)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2492806911468506
    2. 'while' → logprob: -1.3742806911468506
    3. ' if' → logprob: -1.6242806911468506
    4. ' while' → logprob: -1.9992806911468506
    5. 'if' → logprob: -2.9992806911468506
    6. '           ' → logprob: -3.6242806911468506
    7. 'j' → logprob: -3.9992806911468506
    8. '   ' → logprob: -4.37428092956543
    9. '[j' → logprob: -4.74928092956543
    10. ' j' → logprob: -5.37428092956543

Token 561: ' extérieure' (ID: 154110)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012438658624887466
    2. ''' → logprob: -4.512438774108887
    3. '```' → logprob: -7.262438774108887
    4. '`' → logprob: -8.262438774108887
    5. ''s' → logprob: -8.762438774108887
    6. 'zero' → logprob: -9.012438774108887
    7. '1' → logprob: -10.262438774108887
    8. ' ' → logprob: -10.637438774108887
    9. 'flip' → logprob: -11.262438774108887
    10. ' '' → logprob: -11.512438774108887

Token 562: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1805601865053177
    2. 'while' → logprob: -2.0555601119995117
    3. ' while' → logprob: -3.5555601119995117
    4. '           ' → logprob: -5.930560111999512
    5. 'j' → logprob: -6.805560111999512
    6. '```' → logprob: -6.930560111999512
    7. '	while' → logprob: -7.180560111999512
    8. '   ' → logprob: -7.430560111999512
    9. '        
' → logprob: -7.680560111999512
    10. ' if' → logprob: -8.180560111999512

Token 563: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.016410745680332184
    2. ' la' → logprob: -4.891410827636719
    3. 'j' → logprob: -5.641410827636719
    4. 'the' → logprob: -5.766410827636719
    5. 'l' → logprob: -7.016410827636719
    6. '   ' → logprob: -7.766410827636719
    7. 'window' → logprob: -8.391410827636719
    8. '```' → logprob: -9.016410827636719
    9. 's' → logprob: -9.266410827636719
    10. '`' → logprob: -10.391410827636719

Token 564: ' fenêtre' (ID: 109648)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.18549348413944244
    2. 'fen' → logprob: -1.9354934692382812
    3. 'while' → logprob: -3.8104934692382812
    4. 'j' → logprob: -6.560493469238281
    5. '```' → logprob: -7.935493469238281
    6. ' fenêtre' → logprob: -8.310493469238281
    7. '   ' → logprob: -8.435493469238281
    8. 'i' → logprob: -8.810493469238281
    9. 'windows' → logprob: -9.185493469238281
    10. '
' → logprob: -9.435493469238281

Token 565: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07159661501646042
    2. ' while' → logprob: -3.446596622467041
    3. 'while' → logprob: -3.571596622467041
    4. '   ' → logprob: -5.696596622467041
    5. '        
' → logprob: -6.071596622467041
    6. '<|end|>' → logprob: -6.821596622467041
    7. '           ' → logprob: -7.821596622467041
    8. 'j' → logprob: -8.196596145629883
    9. '	while' → logprob: -8.446596145629883
    10. ',' → logprob: -8.446596145629883

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09302520751953125
    2. ' while' → logprob: -3.4680252075195312
    3. 'j' → logprob: -3.8430252075195312
    4. '   ' → logprob: -4.218025207519531
    5. 'while' → logprob: -4.593025207519531
    6. ' j' → logprob: -6.093025207519531
    7. '        
' → logprob: -6.343025207519531
    8. '           ' → logprob: -6.593025207519531
    9. ' 
' → logprob: -6.593025207519531
    10. '<|end|>' → logprob: -7.343025207519531

Token 567: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0633973702788353
    2. '       ' → logprob: -2.9383974075317383
    3. ' while' → logprob: -5.813397407531738
    4. '   ' → logprob: -5.938397407531738
    5. 'if' → logprob: -6.063397407531738
    6. 'j' → logprob: -7.938397407531738
    7. '```' → logprob: -9.313397407531738
    8. '	while' → logprob: -9.938397407531738
    9. ' if' → logprob: -11.563397407531738
    10. '        
' → logprob: -12.688397407531738

Token 568: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1774319410324097
    2. ' s' → logprob: -1.4274319410324097
    3. ' j' → logprob: -1.4274319410324097
    4. 's' → logprob: -1.5524319410324097
    5. 'n' → logprob: -9.1774320602417
    6. '   ' → logprob: -9.4274320602417
    7. ' n' → logprob: -9.8024320602417
    8. ' ' → logprob: -10.5524320602417
    9. 'True' → logprob: -10.9274320602417
    10. 'i' → logprob: -11.3024320602417

Token 569: ' <' (ID: 464)
  Prédit: '<n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.30177491903305054
    2. ' <' → logprob: -1.4267749786376953
    3. '<' → logprob: -3.9267749786376953
    4. 'n' → logprob: -7.801774978637695
    5. '<len' → logprob: -9.301774978637695
    6. '<s' → logprob: -9.426774978637695
    7. 'j' → logprob: -9.676774978637695
    8. ' n' → logprob: -10.926774978637695
    9. '[n' → logprob: -11.176774978637695
    10. ' j' → logprob: -11.926774978637695

Token 570: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010981805389747024
    2. 'i' → logprob: -6.876098155975342
    3. ' n' → logprob: -9.7510986328125
    4. '   ' → logprob: -12.5010986328125
    5. 'j' → logprob: -13.5010986328125
    6. ' ' → logprob: -14.1260986328125
    7. ' i' → logprob: -14.7510986328125
    8. '	n' → logprob: -15.3760986328125
    9. '  ' → logprob: -15.8760986328125
    10. '
' → logprob: -16.3760986328125

Token 571: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759458541870117
    2. 'and' → logprob: -0.8259458541870117
    3. '   ' → logprob: -12.450945854187012
    4. ' ' → logprob: -13.950945854187012
    5. 's' → logprob: -14.325945854187012
    6. ' s' → logprob: -15.200945854187012
    7. '=' → logprob: -15.950945854187012
    8. '       ' → logprob: -16.325946807861328
    9. ' и' → logprob: -16.450946807861328
    10. '```' → logprob: -16.700946807861328

Token 572: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00033832306507974863
    2. ' s' → logprob: -8.000338554382324
    3. '   ' → logprob: -13.000338554382324
    4. '(s' → logprob: -14.375338554382324
    5. '(' → logprob: -17.750337600708008
    6. ' (' → logprob: -18.000337600708008
    7. ' ' → logprob: -18.250337600708008
    8. '```' → logprob: -18.500337600708008
    9. '`s' → logprob: -19.125337600708008
    10. 'j' → logprob: -19.500337600708008

Token 573: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.676292231422849e-05
    2. 's' → logprob: -11.625017166137695
    3. '[s' → logprob: -13.125017166137695
    4. '[' → logprob: -13.125017166137695
    5. '[i' → logprob: -13.250017166137695
    6. 'j' → logprob: -13.625017166137695
    7. '==' → logprob: -15.250017166137695
    8. '   ' → logprob: -15.625017166137695
    9. '[n' → logprob: -16.250017166137695
    10. '```' → logprob: -16.500017166137695

Token 574: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.26462042331695557
    2. ' ==' → logprob: -1.6396204233169556
    3. ']' → logprob: -4.014620304107666
    4. '=='' → logprob: -4.514620304107666
    5. '=' → logprob: -5.514620304107666
    6. ']==' → logprob: -5.764620304107666
    7. ''' → logprob: -7.139620304107666
    8. ')' → logprob: -7.389620304107666
    9. ']=='' → logprob: -8.514620780944824
    10. '!=' → logprob: -8.639620780944824

Token 575: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04991089180111885
    2. ' ==' → logprob: -3.2999107837677
    3. '=='' → logprob: -4.924911022186279
    4. '=' → logprob: -5.674911022186279
    5. ''' → logprob: -7.049911022186279
    6. ' '' → logprob: -9.174910545349121
    7. 's' → logprob: -9.924910545349121
    8. '1' → logprob: -10.674910545349121
    9. '==
' → logprob: -11.049910545349121
    10. '='' → logprob: -11.174910545349121

Token 576: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001063536386936903
    2. '1' → logprob: -6.876063346862793
    3. ' '' → logprob: -11.001063346862793
    4. '"' → logprob: -11.501063346862793
    5. '49' → logprob: -13.376063346862793
    6. '`' → logprob: -14.626063346862793
    7. '0' → logprob: -15.001063346862793
    8. ''I' → logprob: -15.751063346862793
    9. ''i' → logprob: -16.00106430053711
    10. '   ' → logprob: -16.12606430053711

Token 577: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08903609216213226
    2. ''' → logprob: -2.464035987854004
    3. '0' → logprob: -9.339035987854004
    4. ' '' → logprob: -12.589035987854004
    5. '"' → logprob: -12.964035987854004
    6. ' ' → logprob: -14.339035987854004
    7. ''''' → logprob: -14.589035987854004
    8. ''s' → logprob: -15.214035987854004
    9. '['' → logprob: -15.526535987854004
    10. '`' → logprob: -15.776535987854004

Token 578: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4212285578250885
    2. ':' → logprob: -1.5462285280227661
    3. 'j' → logprob: -2.7962286472320557
    4. '       ' → logprob: -3.0462286472320557
    5. '           ' → logprob: -5.171228408813477
    6. '   ' → logprob: -5.296228408813477
    7. ' and' → logprob: -5.671228408813477
    8. ' j' → logprob: -6.546228408813477
    9. '[j' → logprob: -6.796228408813477
    10. ':j' → logprob: -6.921228408813477

Token 579: '           ' (ID: 352)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.049570612609386444
    2. ' j' → logprob: -3.4245705604553223
    3. '   ' → logprob: -4.924570560455322
    4. '       ' → logprob: -4.924570560455322
    5. '```' → logprob: -7.299570560455322
    6. '           ' → logprob: -7.799570560455322
    7. '	j' → logprob: -10.17457103729248
    8. ' 
' → logprob: -10.42457103729248
    9. '
' → logprob: -10.54957103729248
    10. ':
' → logprob: -10.67457103729248

Token 580: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.00864908006042242
    2. ' j' → logprob: -4.758648872375488
    3. '   ' → logprob: -11.133648872375488
    4. '       ' → logprob: -11.883648872375488
    5. '           ' → logprob: -11.883648872375488
    6. '	j' → logprob: -12.258648872375488
    7. '```' → logprob: -14.508648872375488
    8. '    ' → logprob: -14.883648872375488
    9. ' 
' → logprob: -16.383649826049805
    10. ' ' → logprob: -16.383649826049805

Token 581: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5765551328659058
    2. '+=' → logprob: -0.8265551328659058
    3. 'j' → logprob: -8.451555252075195
    4. '+' → logprob: -8.576555252075195
    5. '   ' → logprob: -9.076555252075195
    6. '=' → logprob: -10.076555252075195
    7. '           ' → logprob: -11.201555252075195
    8. ' j' → logprob: -11.451555252075195
    9. '       ' → logprob: -11.951555252075195
    10. ' +' → logprob: -11.951555252075195

Token 582: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.250024795532227
    4. '```' → logprob: -19.125024795532227
    5. '0' → logprob: -19.250024795532227
    6. '۱' → logprob: -21.000024795532227
    7. '<|end|>' → logprob: -21.375024795532227
    8. '  ' → logprob: -22.125024795532227
    9. '१' → logprob: -22.125024795532227
    10. '１' → logprob: -22.312524795532227

Token 583: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -18.625
    4. '0' → logprob: -18.875
    5. '   ' → logprob: -20.8125
    6. '１' → logprob: -20.875
    7. '۱' → logprob: -21.25
    8. '१' → logprob: -21.3125
    9. 'i' → logprob: -21.4375
    10. 'j' → logprob: -21.875

Token 584: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7729367613792419
    2. '<|end|>' → logprob: -1.2729368209838867
    3. 'j' → logprob: -1.7729368209838867
    4. 'while' → logprob: -3.3979368209838867
    5. 'if' → logprob: -3.8979368209838867
    6. '   ' → logprob: -4.522936820983887
    7. '```' → logprob: -4.897936820983887
    8. ' while' → logprob: -5.772936820983887
    9. ' if' → logprob: -5.897936820983887
    10. ' 
' → logprob: -6.022936820983887

Token 585: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3408679962158203
    2. '       ' → logprob: -1.3408679962158203
    3. 'j' → logprob: -3.8408679962158203
    4. 'if' → logprob: -6.09086799621582
    5. '```' → logprob: -6.59086799621582
    6. '   ' → logprob: -6.71586799621582
    7. ' while' → logprob: -7.21586799621582
    8. '           ' → logprob: -10.09086799621582
    9. '<|end|>' → logprob: -10.46586799621582
    10. '	while' → logprob: -10.84086799621582

Token 586: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.054748550057411194
    2. 'j' → logprob: -3.80474853515625
    3. '       ' → logprob: -3.80474853515625
    4. 'if' → logprob: -4.80474853515625
    5. '   ' → logprob: -8.17974853515625
    6. '```' → logprob: -9.17974853515625
    7. ' while' → logprob: -9.30474853515625
    8. '#' (adapté à ' #') → logprob: -10.55474853515625
    9. '<|end|>' → logprob: -11.17974853515625
    10. '        
' → logprob: -11.55474853515625

Token 587: ' Av' (ID: 7541)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04776204749941826
    2. 'if' → logprob: -3.172762155532837
    3. 'rest' → logprob: -5.797761917114258
    4. '#' → logprob: -7.422761917114258
    5. '       ' → logprob: -7.672761917114258
    6. 'j' → logprob: -7.922761917114258
    7. '   ' → logprob: -8.547761917114258
    8. 'k' → logprob: -10.047761917114258
    9. ' while' → logprob: -11.547761917114258
    10. 'for' → logprob: -11.672761917114258

Token 588: 'ancer' (ID: 13358)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08399641513824463
    2. 'while' → logprob: -3.208996295928955
    3. 'if' → logprob: -3.708996295928955
    4. ' j' → logprob: -5.208996295928955
    5. 'a' → logprob: -5.833996295928955
    6. 'ail' → logprob: -7.208996295928955
    7. '           ' → logprob: -7.208996295928955
    8. 'ance' → logprob: -7.583996295928955
    9. '_j' → logprob: -7.833996295928955
    10. 'er' → logprob: -7.958996295928955

Token 589: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06197262182831764
    2. ' j' → logprob: -2.8119726181030273
    3. '   ' → logprob: -12.686972618103027
    4. '	j' → logprob: -14.311972618103027
    5. '[j' → logprob: -15.186972618103027
    6. '       ' → logprob: -15.561972618103027
    7. '```' → logprob: -15.686972618103027
    8. 'while' → logprob: -16.061973571777344
    9. '(j' → logprob: -16.311973571777344
    10. ' ' → logprob: -16.436973571777344

Token 590: ' pour' (ID: 1930)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4854483902454376
    2. ' while' → logprob: -0.9854483604431152
    3. '   ' → logprob: -5.360448360443115
    4. 'j' → logprob: -6.110448360443115
    5. '       ' → logprob: -7.110448360443115
    6. '```' → logprob: -7.235448360443115
    7. ' +=' → logprob: -7.360448360443115
    8. '	while' → logprob: -8.235448837280273
    9. ' j' → logprob: -8.360448837280273
    10. '+=' → logprob: -8.360448837280273

Token 591: ' sortir' (ID: 55515)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6550369262695312
    2. ' j' → logprob: -0.7800369262695312
    3. 'while' → logprob: -4.280036926269531
    4. ' while' → logprob: -5.905036926269531
    5. 'i' → logprob: -6.280036926269531
    6. ' s' → logprob: -6.405036926269531
    7. 's' → logprob: -6.905036926269531
    8. ' i' → logprob: -7.155036926269531
    9. 'n' → logprob: -8.905036926269531
    10. '   ' → logprob: -9.780036926269531

Token 592: ' de' (ID: 334)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5032460689544678
    2. ' j' → logprob: -1.3782460689544678
    3. 'while' → logprob: -2.5032460689544678
    4. '       ' → logprob: -4.378246307373047
    5. ' de' → logprob: -4.628246307373047
    6. 'de' → logprob: -4.878246307373047
    7. ' while' → logprob: -5.003246307373047
    8. '```' → logprob: -5.378246307373047
    9. '           ' → logprob: -5.503246307373047
    10. '[j' → logprob: -5.503246307373047

Token 593: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0657387971878052
    2. 'while' → logprob: -1.6907387971878052
    3. 's' → logprob: -2.1907386779785156
    4. ' j' → logprob: -2.4407386779785156
    5. 'n' → logprob: -2.6907386779785156
    6. ''' → logprob: -2.8157386779785156
    7. ' s' → logprob: -3.3157386779785156
    8. 'the' → logprob: -3.4407386779785156
    9. ' la' → logprob: -4.565738677978516
    10. 'la' → logprob: -4.565738677978516

Token 594: ' première' (ID: 23423)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09217870235443115
    2. 'while' → logprob: -2.7171788215637207
    3. '0' → logprob: -3.8421788215637207
    4. ' while' → logprob: -8.217178344726562
    5. ' '' → logprob: -8.467178344726562
    6. '`' → logprob: -10.717178344726562
    7. ' ' → logprob: -11.092178344726562
    8. ''s' → logprob: -11.467178344726562
    9. '"' → logprob: -12.717178344726562
    10. 'first' → logprob: -12.842178344726562

Token 595: ' plage' (ID: 78241)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.8243929743766785
    2. ' plage' → logprob: -0.9493929743766785
    3. '0' → logprob: -2.4493930339813232
    4. ''' → logprob: -3.8243930339813232
    5. ' '' → logprob: -4.324392795562744
    6. ' ' → logprob: -4.324392795562744
    7. '`' → logprob: -4.574392795562744
    8. '   ' → logprob: -4.949392795562744
    9. 'while' → logprob: -5.324392795562744
    10. ' pl' → logprob: -5.824392795562744

Token 596: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.46743103861808777
    2. ' of' → logprob: -1.9674310684204102
    3. ' if' → logprob: -2.46743106842041
    4. 'while' → logprob: -2.96743106842041
    5. 'if' → logprob: -3.59243106842041
    6. 'de' → logprob: -3.59243106842041
    7. ' while' → logprob: -4.46743106842041
    8. '       ' → logprob: -4.96743106842041
    9. 'of' → logprob: -5.21743106842041
    10. 'j' → logprob: -5.21743106842041

Token 597: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0002004410926019773
    2. '0' → logprob: -9.125200271606445
    3. ' '' → logprob: -9.375200271606445
    4. '`' → logprob: -12.250200271606445
    5. '"' → logprob: -14.375200271606445
    6. ' ' → logprob: -15.250200271606445
    7. ''z' → logprob: -16.000200271606445
    8. 'zeros' → logprob: -16.250200271606445
    9. '‘' → logprob: -16.250200271606445
    10. '’' → logprob: -16.250200271606445

Token 598: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0336543433368206
    2. ''' → logprob: -3.4086544513702393
    3. '`' → logprob: -12.40865421295166
    4. '```' → logprob: -13.53365421295166
    5. ' ' → logprob: -13.65865421295166
    6. ' '' → logprob: -14.53365421295166
    7. ''s' → logprob: -14.65865421295166
    8. '"' → logprob: -15.03365421295166
    9. ''''' → logprob: -15.28365421295166
    10. '   ' → logprob: -15.78365421295166

Token 599: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0837807655334473
    2. '       ' → logprob: -1.0837807655334473
    3. '           ' → logprob: -1.8337807655334473
    4. '[j' → logprob: -2.7087807655334473
    5. ']' → logprob: -4.083780765533447
    6. 'j' → logprob: -4.208780765533447
    7. '   ' → logprob: -4.333780765533447
    8. '```' → logprob: -4.833780765533447
    9. ' and' → logprob: -4.958780765533447
    10. '':
' → logprob: -5.208780765533447

Token 600: ' trait' (ID: 15458)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06804730743169785
    2. '           ' → logprob: -2.943047285079956
    3. 'while' → logprob: -4.568047523498535
    4. ' while' → logprob: -6.318047523498535
    5. 'j' → logprob: -7.193047523498535
    6. '```' → logprob: -10.568047523498535
    7. '.' → logprob: -10.693047523498535
    8. ',' → logprob: -10.818047523498535
    9. ' j' → logprob: -10.943047523498535
    10. '   ' → logprob: -10.943047523498535

Token 601: 'ée' (ID: 2894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6143336296081543
    2. 'j' → logprob: -1.7393336296081543
    3. '```' → logprob: -1.8643336296081543
    4. 'ement' → logprob: -1.9893336296081543
    5. 'ée' → logprob: -2.1143336296081543
    6. ' j' → logprob: -2.8643336296081543
    7. 'if' → logprob: -3.2393336296081543
    8. '[j' → logprob: -3.6143336296081543
    9. '           ' → logprob: -3.8643336296081543
    10. 'while' → logprob: -4.364333629608154

Token 602: ' en' (ID: 469)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10444263368844986
    2. '       ' → logprob: -2.729442596435547
    3. ' while' → logprob: -3.604442596435547
    4. '           ' → logprob: -5.729442596435547
    5. 'j' → logprob: -5.854442596435547
    6. '```' → logprob: -8.104442596435547
    7. '   ' → logprob: -8.979442596435547
    8. '	while' → logprob: -9.479442596435547
    9. '<|end|>' → logprob: -10.854442596435547
    10. 'if' → logprob: -11.104442596435547

Token 603: ' début' (ID: 29589)
  Prédit: 'flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.7250666618347168
    2. 'fl' → logprob: -2.225066661834717
    3. 'fen' → logprob: -2.725066661834717
    4. '0' → logprob: -2.725066661834717
    5. 'j' → logprob: -2.975066661834717
    6. 'gl' → logprob: -3.100066661834717
    7. 'plus' → logprob: -3.975066661834717
    8. 'pl' → logprob: -3.975066661834717
    9. '```' → logprob: -3.975066661834717
    10. 's' → logprob: -4.225066661834717

Token 604: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41841405630111694
    2. 'while' → logprob: -1.7934141159057617
    3. '           ' → logprob: -2.5434141159057617
    4. 'j' → logprob: -2.7934141159057617
    5. '   ' → logprob: -3.9184141159057617
    6. ' while' → logprob: -5.793414115905762
    7. ' j' → logprob: -5.918414115905762
    8. '[j' → logprob: -6.043414115905762
    9. 'if' → logprob: -6.293414115905762
    10. '```' → logprob: -6.293414115905762

Token 605: ' fenêtre' (ID: 109648)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.6153144836425781
    2. 'while' → logprob: -1.6153144836425781
    3. 'j' → logprob: -2.115314483642578
    4. 'fen' → logprob: -2.240314483642578
    5. 'la' → logprob: -3.865314483642578
    6. '```' → logprob: -4.865314483642578
    7. ' fenêtre' → logprob: -6.490314483642578
    8. '   ' → logprob: -6.490314483642578
    9. 'fl' → logprob: -7.990314483642578
    10. 'flip' → logprob: -8.115314483642578

Token 606: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04460078477859497
    2. '       ' → logprob: -3.29460072517395
    3. ' while' → logprob: -5.044600963592529
    4. '           ' → logprob: -9.919600486755371
    5. '	while' → logprob: -11.044600486755371
    6. 'j' → logprob: -11.294600486755371
    7. '```' → logprob: -11.544600486755371
    8. '   ' → logprob: -12.294600486755371
    9. '``' → logprob: -14.544600486755371
    10. '        
' → logprob: -14.544600486755371

Token 607: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11643294245004654
    2. 'while' → logprob: -2.2414329051971436
    3. 'j' → logprob: -6.116433143615723
    4. ' while' → logprob: -6.866433143615723
    5. '```' → logprob: -8.991433143615723
    6. '           ' → logprob: -9.241433143615723
    7. '   ' → logprob: -9.366433143615723
    8. 'if' → logprob: -11.491433143615723
    9. '<|end|>' → logprob: -11.491433143615723
    10. '        
' → logprob: -11.616433143615723

Token 608: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0018107218202203512
    2. ' while' → logprob: -6.501810550689697
    3. '       ' → logprob: -8.251811027526855
    4. 'j' → logprob: -10.001811027526855
    5. '	while' → logprob: -14.001811027526855
    6. '           ' → logprob: -14.376811027526855
    7. '   ' → logprob: -14.501811027526855
    8. 'While' → logprob: -16.25181007385254
    9. '```' → logprob: -16.50181007385254
    10. 'if' → logprob: -17.37681007385254

Token 609: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6486387848854065
    2. ' j' → logprob: -0.7736387848854065
    3. ' s' → logprob: -4.773638725280762
    4. 's' → logprob: -4.898638725280762
    5. '   ' → logprob: -12.898638725280762
    6. '	j' → logprob: -14.273638725280762
    7. '[j' → logprob: -14.648638725280762
    8. ' ' → logprob: -14.898638725280762
    9. '(s' → logprob: -15.398638725280762
    10. '(j' → logprob: -15.523638725280762

Token 610: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.045370012521743774
    2. '<' → logprob: -3.295370101928711
    3. '<n' → logprob: -4.920370101928711
    4. '<s' → logprob: -13.170370101928711
    5. '<N' → logprob: -14.045370101928711
    6. '<len' → logprob: -14.295370101928711
    7. ' ' → logprob: -14.420370101928711
    8. ' <=' → logprob: -15.045370101928711
    9. '[n' → logprob: -15.420370101928711
    10. '<=' → logprob: -15.420370101928711

Token 611: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00317783304490149
    2. ' n' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.503177642822266
    4. 'i' → logprob: -17.503177642822266
    5. 'len' → logprob: -18.128177642822266
    6. '	n' → logprob: -18.128177642822266
    7. 'n't' → logprob: -18.503177642822266
    8. ' ' → logprob: -19.628177642822266
    9. 's' → logprob: -19.878177642822266
    10. '_n' → logprob: -20.253177642822266

Token 612: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12692926824092865
    2. 'and' → logprob: -2.12692928314209
    3. '   ' → logprob: -14.37692928314209
    4. ' ' → logprob: -15.25192928314209
    5. ' и' → logprob: -16.001928329467773
    6. '	and' → logprob: -16.376928329467773
    7. ' s' → logprob: -16.876928329467773
    8. '    ' → logprob: -16.876928329467773
    9. '```' → logprob: -17.126928329467773
    10. ' và' → logprob: -17.501928329467773

Token 613: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5231384038925171
    2. 's' → logprob: -0.8981384038925171
    3. '   ' → logprob: -12.023138046264648
    4. ''s' → logprob: -12.648138046264648
    5. '(s' → logprob: -13.648138046264648
    6. ''' → logprob: -14.148138046264648
    7. '```' → logprob: -14.148138046264648
    8. '[s' → logprob: -14.648138046264648
    9. ' ' → logprob: -14.773138046264648
    10. '[' → logprob: -14.773138046264648

Token 614: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.248469718324486e-05
    2. 'j' → logprob: -11.375022888183594
    3. '[' → logprob: -11.500022888183594
    4. '[
' → logprob: -14.875022888183594
    5. '```' → logprob: -15.625022888183594
    6. '[i' → logprob: -15.875022888183594
    7. '[user' → logprob: -17.000022888183594
    8. '	j' → logprob: -17.750022888183594
    9. '   ' → logprob: -18.250022888183594
    10. '[]' → logprob: -18.500022888183594

Token 615: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002648786408826709
    2. ']==' → logprob: -6.002648830413818
    3. ']=='' → logprob: -9.37764835357666
    4. '==' → logprob: -10.00264835357666
    5. ' ==' → logprob: -11.00264835357666
    6. ' ]' → logprob: -11.37764835357666
    7. '']' → logprob: -12.12764835357666
    8. '[' → logprob: -12.25264835357666
    9. '=='' → logprob: -13.50264835357666
    10. '[j' → logprob: -13.75264835357666

Token 616: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.708329975605011
    2. ' ==' → logprob: -0.708329975605011
    3. '=='' → logprob: -4.208330154418945
    4. ''' → logprob: -9.958330154418945
    5. ' =='' → logprob: -9.958330154418945
    6. '=' → logprob: -10.583330154418945
    7. '[' → logprob: -11.208330154418945
    8. ' '' → logprob: -11.208330154418945
    9. '0' → logprob: -11.208330154418945
    10. 's' → logprob: -11.583330154418945

Token 617: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001640876434976235
    2. ' '' → logprob: -9.250164031982422
    3. '0' → logprob: -9.625164031982422
    4. '"' → logprob: -13.875164031982422
    5. '`' → logprob: -15.000164031982422
    6. '('' → logprob: -15.625164031982422
    7. ' ' → logprob: -16.000164031982422
    8. '['' → logprob: -16.625164031982422
    9. '   ' → logprob: -17.375164031982422
    10. '```' → logprob: -17.750164031982422

Token 618: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010329303331673145
    2. ''' → logprob: -6.876032829284668
    3. ' ' → logprob: -17.126033782958984
    4. '1' → logprob: -17.626033782958984
    5. ''s' → logprob: -17.751033782958984
    6. '```' → logprob: -17.751033782958984
    7. '"' → logprob: -18.251033782958984
    8. '`' → logprob: -19.126033782958984
    9. ''''' → logprob: -19.626033782958984
    10. '')' → logprob: -19.626033782958984

Token 619: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2940254509449005
    2. ']:
' → logprob: -1.7940254211425781
    3. ':' → logprob: -3.794025421142578
    4. '':
' → logprob: -4.044025421142578
    5. '       ' → logprob: -4.294025421142578
    6. '           ' → logprob: -4.294025421142578
    7. '():
' → logprob: -4.794025421142578
    8. 'j' → logprob: -5.669025421142578
    9. '']:
' → logprob: -6.169025421142578
    10. '               ' → logprob: -6.544025421142578

Token 620: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33929839730262756
    2. '       ' → logprob: -1.8392983675003052
    3. 'j' → logprob: -2.0892984867095947
    4. '   ' → logprob: -5.589298248291016
    5. '```' → logprob: -6.964298248291016
    6. ' j' → logprob: -8.464298248291016
    7. '               ' → logprob: -9.589298248291016
    8. '	j' → logprob: -10.089298248291016
    9. '	       ' → logprob: -12.214298248291016
    10. '_j' → logprob: -12.839298248291016

Token 621: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.015494237653911114
    2. '           ' → logprob: -4.265494346618652
    3. ' j' → logprob: -7.265494346618652
    4. '       ' → logprob: -7.515494346618652
    5. '   ' → logprob: -9.640494346618652
    6. '	j' → logprob: -11.515494346618652
    7. '```' → logprob: -11.640494346618652
    8. '               ' → logprob: -13.390494346618652
    9. ',j' → logprob: -16.140493392944336
    10. '_j' → logprob: -16.265493392944336

Token 622: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.42935189604759216
    2. ' +=' → logprob: -1.0543519258499146
    3. '           ' → logprob: -7.929351806640625
    4. '   ' → logprob: -9.054351806640625
    5. ']+=' → logprob: -10.054351806640625
    6. '```' → logprob: -10.554351806640625
    7. '+' → logprob: -10.679351806640625
    8. '       ' → logprob: -11.054351806640625
    9. '    ' → logprob: -11.304351806640625
    10. 'j' → logprob: -11.304351806640625

Token 623: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '0' → logprob: -16.625261306762695
    4. '   ' → logprob: -17.750261306762695
    5. '```' → logprob: -17.875261306762695
    6. '           ' → logprob: -18.625261306762695
    7. '۱' → logprob: -20.375261306762695
    8. '       ' → logprob: -20.437761306762695
    9. '１' → logprob: -20.750261306762695
    10. ')' → logprob: -20.812761306762695

Token 624: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '0' → logprob: -17.375001907348633
    4. '```' → logprob: -19.375001907348633
    5. '۱' → logprob: -20.187501907348633
    6. '   ' → logprob: -20.437501907348633
    7. '१' → logprob: -20.875001907348633
    8. '１' → logprob: -21.000001907348633
    9. '-' → logprob: -21.062501907348633
    10. ')' → logprob: -21.187501907348633

Token 625: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024677766487002373
    2. '       ' → logprob: -4.024677753448486
    3. ' if' → logprob: -6.024677753448486
    4. ' i' → logprob: -6.524677753448486
    5. '<|end|>' → logprob: -6.899677753448486
    6. '    
' → logprob: -7.149677753448486
    7. ' while' → logprob: -8.024678230285645
    8. '        
' → logprob: -9.524678230285645
    9. '```' → logprob: -9.649678230285645
    10. ' 
' → logprob: -9.649678230285645

Token 626: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003546020481735468
    2. '```' → logprob: -6.503546237945557
    3. 'rest' → logprob: -7.128546237945557
    4. '       ' → logprob: -7.628546237945557
    5. ' rest' → logprob: -8.378545761108398
    6. ' if' → logprob: -8.503545761108398
    7. ' while' → logprob: -9.003545761108398
    8. 'ans' → logprob: -9.628545761108398
    9. 'while' → logprob: -9.753545761108398
    10. 'if' → logprob: -10.503545761108398

Token 627: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006738699972629547
    2. 'ans' → logprob: -5.006738662719727
    3. ' ans' → logprob: -11.881738662719727
    4. 'rest' → logprob: -12.256738662719727
    5. '	ans' → logprob: -12.256738662719727
    6. 'if' → logprob: -12.506738662719727
    7. '       ' → logprob: -13.881738662719727
    8. 'while' → logprob: -13.881738662719727
    9. '```' → logprob: -14.506738662719727
    10. '(ans' → logprob: -14.756738662719727

Token 628: ' Met' (ID: 7227)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.19506898522377014
    2. '   ' → logprob: -1.8200689554214478
    3. 'rest' → logprob: -4.695068836212158
    4. 'if' → logprob: -5.195068836212158
    5. 'while' → logprob: -8.195069313049316
    6. ' ans' → logprob: -8.945069313049316
    7. '       ' → logprob: -10.570069313049316
    8. 'answer' → logprob: -10.695069313049316
    9. '	ans' → logprob: -11.195069313049316
    10. ' if' → logprob: -11.820069313049316

Token 629: 'tre' (ID: 4086)
  Prédit: 'tre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.019764836877584457
    2. 'a' → logprob: -4.8947649002075195
    3. 'endre' → logprob: -5.8947649002075195
    4. 'if' → logprob: -6.0197649002075195
    5. 'aj' → logprob: -6.6447649002075195
    6. 're' → logprob: -6.8947649002075195
    7. 'ax' → logprob: -7.1447649002075195
    8. 'ans' → logprob: -7.2697649002075195
    9. '   ' → logprob: -7.2697649002075195
    10. '       ' → logprob: -8.39476490020752

Token 630: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.3040682375431061
    2. ' ' → logprob: -3.0540683269500732
    3. 'a' → logprob: -3.1790683269500732
    4. '_' → logprob: -3.3040683269500732
    5. 'ans' → logprob: -3.5540683269500732
    6. ' à' → logprob: -3.6790683269500732
    7. '#' → logprob: -3.9290683269500732
    8. '   ' → logprob: -4.179068088531494
    9. 'aj' → logprob: -5.054068088531494
    10. 'esp' → logprob: -5.179068088531494

Token 631: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.001790374517440796
    2. ' jour' → logprob: -6.876790523529053
    3. 'day' → logprob: -7.376790523529053
    4. '```' → logprob: -10.001790046691895
    5. 'jours' → logprob: -10.376790046691895
    6. ' ' → logprob: -11.001790046691895
    7. 'j' → logprob: -11.501790046691895
    8. '``' → logprob: -11.876790046691895
    9. '   ' → logprob: -12.126790046691895
    10. 'jou' → logprob: -12.501790046691895

Token 632: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.47851869463920593
    2. ' ans' → logprob: -0.9785187244415283
    3. '   ' → logprob: -5.478518486022949
    4. '	ans' → logprob: -8.72851848602295
    5. '(ans' → logprob: -10.10351848602295
    6. ' if' → logprob: -10.72851848602295
    7. 'if' → logprob: -10.72851848602295
    8. '       ' → logprob: -12.60351848602295
    9. '_ans' → logprob: -13.47851848602295
    10. 'answer' → logprob: -13.72851848602295

Token 633: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0035128798335790634
    2. ' ans' → logprob: -6.378512859344482
    3. 'es' → logprob: -7.128512859344482
    4. 'if' → logprob: -7.753512859344482
    5. 'answer' → logprob: -8.37851333618164
    6. 'esp' → logprob: -8.75351333618164
    7. ' if' → logprob: -9.37851333618164
    8. 'space' → logprob: -9.87851333618164
    9. 'max' → logprob: -10.87851333618164
    10. '   ' → logprob: -12.00351333618164

Token 634: ' maximale' (ID: 76380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03518065810203552
    2. '
' → logprob: -4.160180568695068
    3. '       ' → logprob: -4.160180568695068
    4. '    
' → logprob: -6.785180568695068
    5. ' ans' → logprob: -7.035180568695068
    6. '<|end|>' → logprob: -7.910180568695068
    7. '	ans' → logprob: -8.535181045532227
    8. '  
' → logprob: -8.785181045532227
    9. 'ans' → logprob: -9.160181045532227
    10. '        
' → logprob: -9.285181045532227

Token 635: ' trouv' (ID: 40254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22857502102851868
    2. '
' → logprob: -2.4785749912261963
    3. ' ans' → logprob: -3.2285749912261963
    4. 'ans' → logprob: -3.4785749912261963
    5. '       ' → logprob: -3.7285749912261963
    6. '    
' → logprob: -4.603575229644775
    7. '	ans' → logprob: -4.978575229644775
    8. ' 
' → logprob: -6.228575229644775
    9. '  
' → logprob: -6.478575229644775
    10. ' if' → logprob: -6.603575229644775

Token 636: 'ée' (ID: 2894)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.07275348901748657
    2. 'u' → logprob: -2.697753429412842
    3. '   ' → logprob: -6.572753429412842
    4. 'urée' → logprob: -7.822753429412842
    5. 'ans' → logprob: -8.07275390625
    6. 'ur' → logprob: -8.32275390625
    7. 'ée' → logprob: -9.69775390625
    8. '       ' → logprob: -9.82275390625
    9. 'ie' → logprob: -9.94775390625
    10. 'à' → logprob: -10.19775390625

Token 637: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027940938249230385
    2. ' ans' → logprob: -4.52794075012207
    3. 'ans' → logprob: -4.65294075012207
    4. '	ans' → logprob: -6.02794075012207
    5. '       ' → logprob: -6.27794075012207
    6. '    
' → logprob: -6.40294075012207
    7. '
' → logprob: -7.02794075012207
    8. '(ans' → logprob: -9.02794075012207
    9. ' if' → logprob: -9.65294075012207
    10. '```' → logprob: -10.27794075012207

Token 638: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021599777042865753
    2. ' ans' → logprob: -4.146599769592285
    3. 'ans' → logprob: -5.896599769592285
    4. '
' → logprob: -7.146599769592285
    5. '       ' → logprob: -7.271599769592285
    6. ' if' → logprob: -7.521599769592285
    7. '	ans' → logprob: -8.271599769592285
    8. '```' → logprob: -8.646599769592285
    9. '(ans' → logprob: -8.896599769592285
    10. '    
' → logprob: -9.021599769592285

Token 639: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.05719457566738129
    2. '   ' → logprob: -3.057194471359253
    3. ' ans' → logprob: -4.807194709777832
    4. '	ans' → logprob: -8.557194709777832
    5. 'if' → logprob: -8.682194709777832
    6. ' if' → logprob: -11.057194709777832
    7. '(ans' → logprob: -11.932194709777832
    8. '       ' → logprob: -11.932194709777832
    9. 'answer' → logprob: -12.682194709777832
    10. '_ans' → logprob: -13.182194709777832

Token 640: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16058418154716492
    2. '=' → logprob: -1.9105842113494873
    3. '=max' → logprob: -8.035584449768066
    4. '   ' → logprob: -10.660584449768066
    5. 'max' → logprob: -11.535584449768066
    6. ',' → logprob: -14.160584449768066
    7. '    ' → logprob: -14.785584449768066
    8. '	' → logprob: -15.035584449768066
    9. ' max' → logprob: -15.035584449768066
    10. 's' → logprob: -15.285584449768066

Token 641: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.061967913061380386
    2. 'max' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.061967849731445
    4. '	max' → logprob: -16.061967849731445
    5. '(max' → logprob: -17.686967849731445
    6. ' ' → logprob: -18.811967849731445
    7. ' ' → logprob: -19.061967849731445
    8. '=max' → logprob: -19.311967849731445
    9. '_max' → logprob: -20.186967849731445
    10. '    ' → logprob: -20.436967849731445

Token 642: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00015979631280060858
    2. '(' → logprob: -8.750160217285156
    3. 'ans' → logprob: -13.750160217285156
    4. '(i' → logprob: -16.000160217285156
    5. '(
' → logprob: -17.625160217285156
    6. ' (' → logprob: -18.125160217285156
    7. ' ans' → logprob: -18.250160217285156
    8. '	ans' → logprob: -18.375160217285156
    9. '(answer' → logprob: -18.500160217285156
    10. 'Ans' → logprob: -18.875160217285156

Token 643: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2603901015827432e-05
    2. ' ,' → logprob: -11.375022888183594
    3. ' ans' → logprob: -12.500022888183594
    4. ',i' → logprob: -12.750022888183594
    5. '(ans' → logprob: -13.125022888183594
    6. 'ans' → logprob: -13.500022888183594
    7. '   ' → logprob: -14.125022888183594
    8. ',j' → logprob: -15.625022888183594
    9. ',
' → logprob: -16.500022888183594
    10. '(i' → logprob: -17.000022888183594

Token 644: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07890532165765762
    2. ' i' → logprob: -2.5789053440093994
    3. '   ' → logprob: -11.07890510559082
    4. '	i' → logprob: -16.95390510559082
    5. ' ' → logprob: -17.57890510559082
    6. '  ' → logprob: -18.45390510559082
    7. '    ' → logprob: -19.70390510559082
    8. '(i' → logprob: -20.70390510559082
    9. ' 
' → logprob: -20.70390510559082
    10. '
' → logprob: -20.82890510559082

Token 645: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12701399624347687
    2. '-' → logprob: -2.127013921737671
    3. '-j' → logprob: -9.37701416015625
    4. '   ' → logprob: -14.25201416015625
    5. ')' → logprob: -14.87701416015625
    6. ' ' → logprob: -15.62701416015625
    7. ',' → logprob: -17.62701416015625
    8. '−' → logprob: -18.25201416015625
    9. '  ' → logprob: -18.62701416015625
    10. '–' → logprob: -18.75201416015625

Token 646: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011048170737922192
    2. ' j' → logprob: -4.511048316955566
    3. '1' → logprob: -16.13604736328125
    4. '	j' → logprob: -16.51104736328125
    5. '(j' → logprob: -17.01104736328125
    6. ' ' → logprob: -17.26104736328125
    7. ' (' → logprob: -17.76104736328125
    8. '_j' → logprob: -18.76104736328125
    9. '$j' → logprob: -18.76104736328125
    10. '   ' → logprob: -19.01104736328125

Token 647: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.811348480870947e-05
    2. ' )' → logprob: -10.50004768371582
    3. '+' → logprob: -11.00004768371582
    4. ')
' → logprob: -13.00004768371582
    5. ' +' → logprob: -13.62504768371582
    6. '   ' → logprob: -15.50004768371582
    7. '+)' → logprob: -16.25004768371582
    8. '))' → logprob: -17.12504768371582
    9. ')+' → logprob: -17.37504768371582
    10. '```' → logprob: -17.62504768371582

Token 648: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038275104016065598
    2. 'return' → logprob: -5.8788275718688965
    3. '<|end|>' → logprob: -7.2538275718688965
    4. '    
' → logprob: -9.378827095031738
    5. '
' → logprob: -9.378827095031738
    6. '```' → logprob: -9.628827095031738
    7. ' return' → logprob: -10.003827095031738
    8. '	return' → logprob: -11.503827095031738
    9. '\n' → logprob: -11.628827095031738
    10. ':return' → logprob: -12.628827095031738

Token 649: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07938938587903976
    2. 'return' → logprob: -2.5793893337249756
    3. ' return' → logprob: -7.954389572143555
    4. '<|end|>' → logprob: -10.079389572143555
    5. '	return' → logprob: -10.204389572143555
    6. '       ' → logprob: -10.204389572143555
    7. '```' → logprob: -11.454389572143555
    8. '
' → logprob: -12.204389572143555
    9. '    
' → logprob: -12.204389572143555
    10. 'print' → logprob: -12.704389572143555

Token 650: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006143034435808659
    2. '   ' → logprob: -5.256143093109131
    3. 'return' → logprob: -7.006143093109131
    4. ' print' → logprob: -13.131142616271973
    5. '```' → logprob: -14.631142616271973
    6. '    
' → logprob: -17.38114356994629
    7. '#print' → logprob: -17.75614356994629
    8. ' return' → logprob: -17.75614356994629
    9. '	print' → logprob: -18.50614356994629
    10. '  ' → logprob: -18.63114356994629

Token 651: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.005555909126996994
    2. '   ' → logprob: -5.755556106567383
    3. '#' → logprob: -7.255556106567383
    4. 'iche' → logprob: -7.505556106567383
    5. 'ichage' → logprob: -7.505556106567383
    6. 'f' → logprob: -8.005556106567383
    7. '```' → logprob: -9.880556106567383
    8. '  ' → logprob: -10.630556106567383
    9. 'ic' → logprob: -10.755556106567383
    10. 'cher' → logprob: -10.880556106567383

Token 652: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0622747577726841
    2. 'print' → logprob: -2.812274694442749
    3. '```' → logprob: -9.062274932861328
    4. '(ans' → logprob: -9.187274932861328
    5. 'ans' → logprob: -9.437274932861328
    6. '    
' → logprob: -12.437274932861328
    7. ' print' → logprob: -13.062274932861328
    8. '
' → logprob: -13.812274932861328
    9. '(print' → logprob: -14.062274932861328
    10. '``' → logprob: -15.062274932861328

Token 653: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0001093841710826382
    2. ' ans' → logprob: -10.000109672546387
    3. '(ans' → logprob: -10.250109672546387
    4. 'result' → logprob: -11.375109672546387
    5. 'answer' → logprob: -11.375109672546387
    6. 'print' → logprob: -12.125109672546387
    7. 'return' → logprob: -16.37510871887207
    8. '	ans' → logprob: -16.62510871887207
    9. '   ' → logprob: -17.50010871887207
    10. '_ans' → logprob: -18.12510871887207

Token 654: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013875007862225175
    2. 'print' → logprob: -6.751387596130371
    3. '```' → logprob: -9.001387596130371
    4. '
' → logprob: -9.501387596130371
    5. ' print' → logprob: -11.251387596130371
    6. '    
' → logprob: -12.001387596130371
    7. '``' → logprob: -16.376386642456055
    8. '  
' → logprob: -17.251386642456055
    9. '	print' → logprob: -17.751386642456055
    10. '       ' → logprob: -18.376386642456055

Token 655: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38880792260169983
    2. 'print' → logprob: -1.1388078927993774
    3. '```' → logprob: -6.638807773590088
    4. ' print' → logprob: -7.388807773590088
    5. '
' → logprob: -12.013808250427246
    6. '``' → logprob: -13.638808250427246
    7. '    
' → logprob: -14.388808250427246
    8. '	print' → logprob: -14.888808250427246
    9. '       ' → logprob: -17.51380729675293
    10. '`' → logprob: -17.63880729675293

Token 656: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.702754474943504e-05
    2. '   ' → logprob: -10.25003719329834
    3. '```' → logprob: -13.50003719329834
    4. ' print' → logprob: -15.50003719329834
    5. '``' → logprob: -21.375036239624023
    6. '	print' → logprob: -21.875036239624023
    7. '
' → logprob: -22.500036239624023
    8. '    
' → logprob: -23.750036239624023
    9. '`' → logprob: -24.250036239624023
    10. 'return' → logprob: -24.375036239624023

Token 657: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0005541055579669774
    2. '(' → logprob: -7.500554084777832
    3. ' (' → logprob: -14.250554084777832
    4. '(i' → logprob: -15.875554084777832
    5. '()' → logprob: -16.37555503845215
    6. '(max' → logprob: -16.75055503845215
    7. '('' → logprob: -16.75055503845215
    8. 'ans' → logprob: -16.87555503845215
    9. '(abs' → logprob: -16.87555503845215
    10. '(answer' → logprob: -17.37555503845215

Token 658: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.000000953674316
    4. '())' → logprob: -15.125000953674316
    5. '   ' → logprob: -15.500000953674316
    6. ')`' → logprob: -16.875001907348633
    7. ')
' → logprob: -17.625001907348633
    8. '))' → logprob: -18.000001907348633
    9. '')' → logprob: -18.875001907348633
    10. ')}' → logprob: -19.625001907348633

Token 659: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 660: ' App' (ID: 2583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 661: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.031842272728681564
    2. 'max' → logprob: -4.281842231750488
    3. 'le' → logprob: -5.156842231750488
    4. 'def' → logprob: -5.281842231750488
    5. '#' → logprob: -6.531842231750488
    6. 'e' → logprob: -6.656842231750488
    7. 'l' → logprob: -7.281842231750488
    8. 'ly' → logprob: -7.531842231750488
    9. 'elf' → logprob: -7.906842231750488
    10. '```' → logprob: -8.031842231750488

Token 662: ' de' (ID: 334)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0064294831827282906
    2. 'def' → logprob: -5.506429672241211
    3. '(max' → logprob: -7.006429672241211
    4. '()
' → logprob: -7.256429672241211
    5. ' max' → logprob: -7.756429672241211
    6. '()' → logprob: -8.881429672241211
    7. '(
' → logprob: -9.256429672241211
    8. '```' → logprob: -10.631429672241211
    9. '(' → logprob: -11.131429672241211
    10. 'if' → logprob: -11.631429672241211

Token 663: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.1054253011243418e-05
    2. ' max' → logprob: -11.000020980834961
    3. 'def' → logprob: -12.625020980834961
    4. '(max' → logprob: -14.125020980834961
    5. '```' → logprob: -15.500020980834961
    6. 'if' → logprob: -16.37502098083496
    7. 'main' → logprob: -18.25002098083496
    8. '_max' → logprob: -18.37502098083496
    9. 'ma' → logprob: -18.87502098083496
    10. '__' → logprob: -18.87502098083496

Token 664: ' fonction' (ID: 17610)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.016974402591586113
    2. 'def' → logprob: -4.266974449157715
    3. 'if' → logprob: -5.891974449157715
    4. '(max' → logprob: -11.141974449157715
    5. 'function' → logprob: -11.141974449157715
    6. ' max' → logprob: -11.641974449157715
    7. 'main' → logprob: -12.641974449157715
    8. 'fonction' → logprob: -13.516974449157715
    9. '```' → logprob: -14.391974449157715
    10. ' if' → logprob: -14.641974449157715

Token 665: ' principale' (ID: 68926)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1603432446718216
    2. '
' → logprob: -1.9103432893753052
    3. '

' → logprob: -10.035343170166016
    4. '```' → logprob: -10.160343170166016
    5. '
' → logprob: -10.910343170166016
    6. '(max' → logprob: -11.910343170166016
    7. '``' → logprob: -12.410343170166016
    8. ' max' → logprob: -12.535343170166016
    9. '\n' → logprob: -13.785343170166016
    10. '[max' → logprob: -13.785343170166016

Token 666: ' qui' (ID: 2780)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3135872483253479
    2. '
' → logprob: -1.3135871887207031
    3. '```' → logprob: -8.688587188720703
    4. '
' → logprob: -9.938587188720703
    5. '(max' → logprob: -10.563587188720703
    6. '

' → logprob: -10.688587188720703
    7. 'def' → logprob: -10.938587188720703
    8. '``' → logprob: -11.563587188720703
    9. '()
' → logprob: -11.813587188720703
    10. '  
' → logprob: -12.063587188720703

Token 667: ' g' (ID: 329)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35909387469291687
    2. 'max' → logprob: -1.2340939044952393
    3. '()' → logprob: -5.48409366607666
    4. 'def' → logprob: -5.85909366607666
    5. 'est' → logprob: -6.98409366607666
    6. '```' → logprob: -6.98409366607666
    7. ' if' → logprob: -7.48409366607666
    8. ' max' → logprob: -8.10909366607666
    9. '(max' → logprob: -8.60909366607666
    10. 's' → logprob: -8.60909366607666

Token 668: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.009292625822126865
    2. 'ere' → logprob: -5.0092926025390625
    3. 'er' → logprob: -7.5092926025390625
    4. 'è' → logprob: -7.8842926025390625
    5. 'èr' → logprob: -8.134292602539062
    6. 'ére' → logprob: -8.259292602539062
    7. 'estion' → logprob: -8.384292602539062
    8. 'u' → logprob: -8.509292602539062
    9. 'én' → logprob: -8.759292602539062
    10. 'érer' → logprob: -9.384292602539062

Token 669: ' toute' (ID: 16825)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.176056370139122
    2. 'max' → logprob: -1.9260563850402832
    3. 'if' → logprob: -4.301056385040283
    4. '(max' → logprob: -6.551056385040283
    5. 'def' → logprob: -7.551056385040283
    6. '```' → logprob: -9.301055908203125
    7. '()
' → logprob: -10.051055908203125
    8. '_max' → logprob: -10.676055908203125
    9. '()`' → logprob: -11.676055908203125
    10. '(' → logprob: -11.801055908203125

Token 670: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9332090020179749
    2. '()' → logprob: -1.05820894241333
    3. '_' → logprob: -2.05820894241333
    4. '_le' → logprob: -2.68320894241333
    5. '_la' → logprob: -4.18320894241333
    6. '_l' → logprob: -4.43320894241333
    7. 'le' → logprob: -4.55820894241333
    8. 'def' → logprob: -4.68320894241333
    9. '__' → logprob: -5.30820894241333
    10. 'l' → logprob: -5.93320894241333

Token 671: ' logique' (ID: 115350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.47853824496269226
    2. 'log' → logprob: -1.1035382747650146
    3. 'execution' → logprob: -4.7285380363464355
    4. 'import' → logprob: -5.1035380363464355
    5. 'entrée' → logprob: -5.2285380363464355
    6. 'program' → logprob: -5.2285380363464355
    7. 'if' → logprob: -5.2285380363464355
    8. 's' → logprob: -5.6035380363464355
    9. ' logique' → logprob: -5.7285380363464355
    10. 'programm' → logprob: -6.8535380363464355

Token 672: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.31396153569221497
    2. '
' → logprob: -1.3139615058898926
    3. 'def' → logprob: -8.06396198272705
    4. '```' → logprob: -8.43896198272705
    5. '(max' → logprob: -9.56396198272705
    6. ' max' → logprob: -10.81396198272705
    7. '<|end|>' → logprob: -10.81396198272705
    8. '[max' → logprob: -11.31396198272705
    9. 'if' → logprob: -11.56396198272705
    10. '#' → logprob: -11.68896198272705

Token 673: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.9361264946837764e-07
    2. 'if' → logprob: -16.75
    3. ' max' → logprob: -17.0
    4. '```' → logprob: -17.75
    5. 'def' → logprob: -18.5
    6. '
' → logprob: -20.0
    7. '(max' → logprob: -20.75
    8. '[max' → logprob: -21.25
    9. '	max' → logprob: -21.875
    10. '_max' → logprob: -22.0

Token 674: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -1.771655115589965e-05
    2. '_' → logprob: -11.000018119812012
    3. 'con' → logprob: -14.375018119812012
    4. '_cons' → logprob: -15.875018119812012
    5. '_CON' → logprob: -16.625017166137695
    6. 'Con' → logprob: -17.250017166137695
    7. '_cont' → logprob: -17.625017166137695
    8. '$con' → logprob: -17.875017166137695
    9. '_com' → logprob: -18.625017166137695
    10. '_co' → logprob: -18.625017166137695

Token 675: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -3.1186566047836095e-05
    2. 's' → logprob: -11.000031471252441
    3. 'sect' → logprob: -11.875031471252441
    4. 'sec' → logprob: -12.125031471252441
    5. 'se' → logprob: -14.125031471252441
    6. 'es' → logprob: -14.375031471252441
    7. '_' → logprob: -15.000031471252441
    8. 'ess' → logprob: -15.750031471252441
    9. 'max' → logprob: -16.250030517578125
    10. 'ecut' → logprob: -16.750030517578125

Token 676: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.623244553338736e-05
    2. '_con' → logprob: -9.625065803527832
    3. '_one' → logprob: -16.50006675720215
    4. '```' → logprob: -17.50006675720215
    5. '_max' → logprob: -17.87506675720215
    6. ')_' → logprob: -18.37506675720215
    7. '_answers' → logprob: -18.75006675720215
    8. '_possible' → logprob: -19.25006675720215
    9. '\' → logprob: -19.50006675720215
    10. '_
' → logprob: -19.75006675720215

Token 677: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.5
    3. ' ones' → logprob: -16.25
    4. 'one' → logprob: -17.375
    5. '1' → logprob: -18.625
    6. '```' → logprob: -19.0
    7. 'ONES' → logprob: -19.625
    8. 'zeros' → logprob: -20.375
    9. '.ones' → logprob: -21.0
    10. '0' → logprob: -22.625

Token 678: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -0.00027456742827780545
    2. '_' → logprob: -8.250274658203125
    3. '()' → logprob: -11.500274658203125
    4. 'after' → logprob: -13.375274658203125
    5. '_AFTER' → logprob: -14.375274658203125
    6. 'After' → logprob: -15.000274658203125
    7. '_(' → logprob: -16.125274658203125
    8. '_to' → logprob: -16.250274658203125
    9. ' after' → logprob: -16.500274658203125
    10. '(' → logprob: -16.625274658203125

Token 679: '_fl' (ID: 18192)
  Prédit: '_fl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fl' → logprob: -2.534558552724775e-05
    2. 'fl' → logprob: -10.875025749206543
    3. '_' → logprob: -12.250025749206543
    4. '_flip' → logprob: -13.875025749206543
    5. '_sl' → logprob: -15.250025749206543
    6. '(fl' → logprob: -16.000024795532227
    7. '```' → logprob: -16.375024795532227
    8. '(_' → logprob: -17.000024795532227
    9. '_f' → logprob: -17.375024795532227
    10. ' flips' → logprob: -18.000024795532227

Token 680: 'ips' (ID: 3200)
  Prédit: 'ips'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ips' → logprob: -2.570319702499546e-05
    2. 'ip' → logprob: -10.625025749206543
    3. 'ps' → logprob: -14.500025749206543
    4. 'i' → logprob: -14.875025749206543
    5. 'l' → logprob: -16.625024795532227
    6. '_' → logprob: -16.750024795532227
    7. '_ips' → logprob: -17.375024795532227
    8. 'eps' → logprob: -17.500024795532227
    9. 'ipse' → logprob: -17.625024795532227
    10. '(' → logprob: -17.750024795532227

Token 681: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.837811088189483e-05
    2. '(' → logprob: -9.750068664550781
    3. '())' → logprob: -13.125068664550781
    4. '()`' → logprob: -13.250068664550781
    5. '_' → logprob: -13.625068664550781
    6. '()"' → logprob: -14.000068664550781
    7. '()]' → logprob: -14.250068664550781
    8. '()
' → logprob: -14.500068664550781
    9. '().' → logprob: -14.750068664550781
    10. ' ()' → logprob: -14.875068664550781


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 679
Tokens correctement prédits (1ère position, stricte): 209
Tokens correctement prédits (1ère position, avec adaptation): 225
Tokens correctement prédits (top 10): 452
Précision stricte (1ère position): 30.78%
Précision adaptée (1ère position): 33.14%
Précision (top 10): 66.57%
================================================================================
