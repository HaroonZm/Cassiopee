================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Bon, on lit le nombre de lignes à traiter
N = int(input())
stuff = []
for i in range(N):
    # On découpe chaque ligne, simple
    things = input().split()
    stuff.append(things)
    
search = input()

total = 0
found = False

for word, number in stuff:
    if found:
        # On doit additionner si c'est après le mot trouvé
        total = total + int(number)
    if word == search:
        found = True  # trouvé ! on commence le comptage
        # (pas de break ici, c'est voulu)

# On affiche le résultat
print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bon' (ID: 12658)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38941624760627747
    2. 'jour' → logprob: -1.264416217803955
    3. '```' → logprob: -3.889416217803955
    4. '  ' → logprob: -5.639416217803955
    5. ' app' → logprob: -6.014416217803955
    6. '   ' → logprob: -6.014416217803955
    7. 'soir' → logprob: -6.014416217803955
    8. ' j' → logprob: -6.889416217803955
    9. ' je' → logprob: -6.889416217803955
    10. 'jours' → logprob: -7.014416217803955

Token 4: ' lit' (ID: 11980)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7782993912696838
    2. ' va' → logprob: -1.403299331665039
    3. ' continue' → logprob: -3.028299331665039
    4. '```' → logprob: -3.153299331665039
    5. ' a' → logprob: -3.403299331665039
    6. ' ```' → logprob: -3.403299331665039
    7. '_' → logprob: -3.778299331665039
    8. ' ne' → logprob: -4.028299331665039
    9. ' #' → logprob: -4.028299331665039
    10. '#' → logprob: -5.153299331665039

Token 5: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1611806154251099
    2. ' ' → logprob: -1.6611806154251099
    3. 'le' → logprob: -2.0361804962158203
    4. ',' → logprob: -2.5361804962158203
    5. ':' → logprob: -3.0361804962158203
    6. '(' → logprob: -3.1611804962158203
    7. '.' → logprob: -3.4111804962158203
    8. '=' → logprob: -3.5361804962158203
    9. '```' → logprob: -3.6611804962158203
    10. '#' → logprob: -3.7861804962158203

Token 6: ' nombre' (ID: 9733)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.14177562296390533
    2. ' fichier' → logprob: -2.266775608062744
    3. ' ' → logprob: -4.391775608062744
    4. ' f' → logprob: -5.016775608062744
    5. '\n' → logprob: -6.391775608062744
    6. 'texte' → logprob: -6.391775608062744
    7. 'code' → logprob: -7.141775608062744
    8. '#' → logprob: -7.391775608062744
    9. ' fich' → logprob: -7.766775608062744
    10. '_f' → logprob: -8.141776084899902

Token 7: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13358734548091888
    2. '_' → logprob: -2.25858736038208
    3. ' =' → logprob: -4.88358736038208
    4. 's' → logprob: -5.38358736038208
    5. '=' → logprob: -6.38358736038208
    6. ''' → logprob: -6.38358736038208
    7. 'n' → logprob: -6.75858736038208
    8. '`' → logprob: -7.25858736038208
    9. 'space' → logprob: -7.63358736038208
    10. '```' → logprob: -7.63358736038208

Token 8: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1353505700826645
    2. ' lignes' → logprob: -3.510350465774536
    3. 'person' → logprob: -4.135350704193115
    4. 'clients' → logprob: -4.385350704193115
    5. ' ' → logprob: -5.010350704193115
    6. 'd' → logprob: -5.135350704193115
    7. 'li' → logprob: -5.635350704193115
    8. 'v' → logprob: -5.885350704193115
    9. 'cases' → logprob: -5.885350704193115
    10. '```' → logprob: -5.885350704193115

Token 9: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34107106924057007
    2. '```' → logprob: -2.466071128845215
    3. '\n' → logprob: -2.841071128845215
    4. '_' → logprob: -3.091071128845215
    5. 's' → logprob: -3.591071128845215
    6. 'l' → logprob: -3.966071128845215
    7. 'nombre' → logprob: -4.341071128845215
    8. '`' → logprob: -4.716071128845215
    9. 'nb' → logprob: -5.341071128845215
    10. ' ' → logprob: -5.466071128845215

Token 10: ' traiter' (ID: 105852)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0531938076019287
    2. 'import' → logprob: -1.3031938076019287
    3. 'trait' → logprob: -2.1781938076019287
    4. ' traiter' → logprob: -2.8031938076019287
    5. 'scanner' → logprob: -3.0531938076019287
    6. 'su' → logprob: -3.3031938076019287
    7. ' lire' → logprob: -3.8031938076019287
    8. 'aj' → logprob: -4.303194046020508
    9. 'r' → logprob: -4.553194046020508
    10. 'an' → logprob: -4.928194046020508

Token 11: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0051603433676064014
    2. 'nombre' → logprob: -6.130160331726074
    3. 'l' → logprob: -7.005160331726074
    4. 'nb' → logprob: -7.130160331726074
    5. '`' → logprob: -7.755160331726074
    6. '```' → logprob: -8.130160331726074
    7. '_' → logprob: -8.755160331726074
    8. '\n' → logprob: -9.255160331726074
    9. 'num' → logprob: -9.880160331726074
    10. 'lines' → logprob: -10.255160331726074

Token 12: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04653344303369522
    2. '_' → logprob: -3.7965333461761475
    3. 'nombre' → logprob: -4.671533584594727
    4. 'nb' → logprob: -5.921533584594727
    5. 'l' → logprob: -6.046533584594727
    6. 's' → logprob: -6.296533584594727
    7. '\n' → logprob: -6.421533584594727
    8. '```' → logprob: -6.671533584594727
    9. '`' → logprob: -7.671533584594727
    10. '\' → logprob: -7.921533584594727

Token 13: ' =' (ID: 314)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001266613689949736
    2. 'l' → logprob: -9.625126838684082
    3. 'ombre' → logprob: -10.250126838684082
    4. '```' → logprob: -12.000126838684082
    5. '   ' → logprob: -12.875126838684082
    6. 'bl' → logprob: -12.875126838684082
    7. 'ombres' → logprob: -13.125126838684082
    8. 'um' → logprob: -13.375126838684082
    9. '_' → logprob: -13.500126838684082
    10. 'umber' → logprob: -13.875126838684082

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.010700064711272717
    2. ' ' → logprob: -4.885700225830078
    3. 'int' → logprob: -5.885700225830078
    4. ' input' → logprob: -8.260700225830078
    5. ' len' → logprob: -11.260700225830078
    6. '10' → logprob: -11.385700225830078
    7. 'input' → logprob: -11.635700225830078
    8. '=int' → logprob: -12.010700225830078
    9. ' ' → logprob: -13.135700225830078
    10. '0' → logprob: -13.510700225830078

Token 15: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2519477307796478
    2. '(' → logprob: -1.5019477605819702
    3. 'input' → logprob: -12.251947402954102
    4. '(
' → logprob: -12.501947402954102
    5. '()' → logprob: -12.876947402954102
    6. '('' → logprob: -13.001947402954102
    7. ' (' → logprob: -13.126947402954102
    8. '(

' → logprob: -13.251947402954102
    9. '("' → logprob: -15.126947402954102
    10. '(raw' → logprob: -15.501947402954102

Token 16: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.042028214782476425
    2. '()' → logprob: -3.2920281887054443
    3. ')' → logprob: -6.792028427124023
    4. '('' → logprob: -6.917028427124023
    5. '())' → logprob: -7.042028427124023
    6. '("("' → logprob: -7.542028427124023
    7. '("")' → logprob: -8.792028427124023
    8. '(""))' → logprob: -8.917028427124023
    9. '(
' → logprob: -9.792028427124023
    10. '("' → logprob: -10.417028427124023

Token 17: 'stuff' (ID: 91669)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29916858673095703
    2. 'for' → logprob: -1.424168586730957
    3. ' for' → logprob: -4.924168586730957
    4. ' 
' → logprob: -5.924168586730957
    5. '\n' → logprob: -5.924168586730957
    6. '
' → logprob: -6.799168586730957
    7. ' ' → logprob: -7.299168586730957
    8. 's' → logprob: -7.424168586730957
    9. ')' → logprob: -7.549168586730957
    10. '' → logprob: -7.549168586730957

Token 18: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6451892256736755
    2. '.' → logprob: -1.3951892852783203
    3. '_' → logprob: -2.1451892852783203
    4. ' =' → logprob: -3.0201892852783203
    5. ')' → logprob: -3.6451892852783203
    6. 's' → logprob: -4.89518928527832
    7. ' ' → logprob: -4.89518928527832
    8. '=' → logprob: -5.14518928527832
    9. '[]' → logprob: -5.27018928527832
    10. '[:]' → logprob: -6.39518928527832

Token 19: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5350823998451233
    2. ' []' → logprob: -0.9100823998451233
    3. '[input' → logprob: -5.4100823402404785
    4. ' [' → logprob: -5.7850823402404785
    5. '[' → logprob: -6.1600823402404785
    6. 'input' → logprob: -6.6600823402404785
    7. 'list' → logprob: -8.160082817077637
    8. ' input' → logprob: -8.160082817077637
    9. '{}' → logprob: -8.785082817077637
    10. '()' → logprob: -10.285082817077637

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00325994985178113
    2. ' for' → logprob: -5.878260135650635
    3. '
' → logprob: -8.003259658813477
    4. '```' → logprob: -10.003259658813477
    5. '\n' → logprob: -10.253259658813477
    6. '' → logprob: -10.753259658813477
    7. '\' → logprob: -11.628259658813477
    8. ' 
' → logprob: -12.878259658813477
    9. '  
' → logprob: -13.878259658813477
    10. ' ' → logprob: -13.878259658813477

Token 21: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03233429044485092
    2. ' i' → logprob: -3.782334327697754
    3. '  ' → logprob: -5.157334327697754
    4. ' _' → logprob: -6.157334327697754
    5. ' line' → logprob: -7.282334327697754
    6. '_' → logprob: -8.157334327697754
    7. ' item' → logprob: -9.407334327697754
    8. ' ' → logprob: -10.282334327697754
    9. ' l' → logprob: -11.157334327697754
    10. ' ‌' → logprob: -11.532334327697754

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03033662959933281
    2. ' ' → logprob: -4.155336856842041
    3. 'in' → logprob: -4.280336856842041
    4. '  ' → logprob: -8.780336380004883
    5. 'n' → logprob: -8.905336380004883
    6. ' n' → logprob: -10.155336380004883
    7. '_' → logprob: -11.530336380004883
    8. ' i' → logprob: -11.780336380004883
    9. ' ' → logprob: -12.655336380004883
    10. '```' → logprob: -13.405336380004883

Token 23: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02099492773413658
    2. 'range' → logprob: -3.8959949016571045
    3. ' ' → logprob: -7.770995140075684
    4. '	range' → logprob: -12.020995140075684
    5. '```' → logprob: -12.020995140075684
    6. ' xrange' → logprob: -12.270995140075684
    7. '_' → logprob: -12.770995140075684
    8. ')' → logprob: -12.770995140075684
    9. 'rang' → logprob: -13.270995140075684
    10. ' ' → logprob: -13.395995140075684

Token 24: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25203582644462585
    2. '(N' → logprob: -1.5020358562469482
    3. ' (' → logprob: -9.502036094665527
    4. '(n' → logprob: -11.002036094665527
    5. '()' → logprob: -12.752036094665527
    6. '(
' → logprob: -12.877036094665527
    7. '(i' → logprob: -13.002036094665527
    8. '(s' → logprob: -13.127036094665527
    9. '(len' → logprob: -13.377036094665527
    10. '(`' → logprob: -13.752036094665527

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.035941459238529205
    2. ')' → logprob: -3.4109413623809814
    3. ' ):' → logprob: -6.1609416007995605
    4. ':' → logprob: -9.410941123962402
    5. ' )' → logprob: -9.410941123962402
    6. '):
' → logprob: -12.035941123962402
    7. '+' → logprob: -12.160941123962402
    8. ' :' → logprob: -13.160941123962402
    9. '():' → logprob: -13.785941123962402
    10. ' ' → logprob: -14.285941123962402

Token 26: '   ' (ID: 271)
  Prédit: ' stuff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stuff' → logprob: -0.1554103046655655
    2. '   ' → logprob: -2.5304102897644043
    3. ' line' → logprob: -3.5304102897644043
    4. 'stuff' → logprob: -4.780410289764404
    5. ' ' → logprob: -5.155410289764404
    6. '    ' → logprob: -5.280410289764404
    7. ' input' → logprob: -5.405410289764404
    8. '    
' → logprob: -5.655410289764404
    9. ' 
' → logprob: -6.530410289764404
    10. ' data' → logprob: -7.280410289764404

Token 27: ' #' (ID: 1069)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3399171233177185
    2. ' stuff' → logprob: -1.4649171829223633
    3. ' data' → logprob: -3.7149171829223633
    4. 'stuff' → logprob: -3.9649171829223633
    5. 'line' → logprob: -5.464917182922363
    6. ' lines' → logprob: -5.839917182922363
    7. '   ' → logprob: -6.464917182922363
    8. 'data' → logprob: -7.214917182922363
    9. ' ligne' → logprob: -7.214917182922363
    10. ' s' → logprob: -7.964917182922363

Token 28: ' On' (ID: 2160)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.21925123035907745
    2. ' lines' → logprob: -2.5942511558532715
    3. ' data' → logprob: -3.0942511558532715
    4. 'line' → logprob: -3.8442511558532715
    5. ' stuff' → logprob: -4.0942511558532715
    6. ' text' → logprob: -5.0942511558532715
    7. ' input' → logprob: -5.0942511558532715
    8. '   ' → logprob: -5.7192511558532715
    9. ' ligne' → logprob: -5.7192511558532715
    10. ' l' → logprob: -6.3442511558532715

Token 29: ' décou' (ID: 68302)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.25095927715301514
    2. ' =' → logprob: -2.6259593963623047
    3. 'append' → logprob: -4.000959396362305
    4. ' ajoute' → logprob: -4.250959396362305
    5. ' append' → logprob: -4.375959396362305
    6. ' ' → logprob: -4.625959396362305
    7. '=' → logprob: -4.625959396362305
    8. 's' → logprob: -4.750959396362305
    9. ' stuff' → logprob: -5.250959396362305
    10. ' a' → logprob: -5.375959396362305

Token 30: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.013265405781567097
    2. 'p' → logprob: -4.638265609741211
    3. 'page' → logprob: -5.763265609741211
    4. 'per' → logprob: -8.388265609741211
    5. '```' → logprob: -10.388265609741211
    6. 'pa' → logprob: -10.888265609741211
    7. 'pera' → logprob: -11.138265609741211
    8. 'pé' → logprob: -11.513265609741211
    9. 'ppe' → logprob: -12.013265609741211
    10. 'pte' → logprob: -12.138265609741211

Token 31: ' chaque' (ID: 21194)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0252374410629272
    2. 'input' → logprob: -1.1502374410629272
    3. ' input' → logprob: -1.9002374410629272
    4. ' l' → logprob: -3.275237560272217
    5. '_' → logprob: -3.900237560272217
    6. 'line' → logprob: -4.150237560272217
    7. ' line' → logprob: -4.275237560272217
    8. '()' → logprob: -4.525237560272217
    9. 's' → logprob: -4.775237560272217
    10. ' le' → logprob: -4.775237560272217

Token 32: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.6849552989006042
    2. ' ' → logprob: -0.8099552989006042
    3. ' line' → logprob: -3.684955358505249
    4. 'ligne' → logprob: -4.68495512008667
    5. ' input' → logprob: -4.80995512008667
    6. 'input' → logprob: -6.30995512008667
    7. 'line' → logprob: -6.43495512008667
    8. '   ' → logprob: -6.55995512008667
    9. ' phrase' → logprob: -6.93495512008667
    10. 'l' → logprob: -7.55995512008667

Token 33: ',' (ID: 11)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.7848933935165405
    2. 's' → logprob: -2.78489351272583
    3. '   ' → logprob: -2.78489351272583
    4. ' ' → logprob: -3.03489351272583
    5. ' line' → logprob: -3.15989351272583
    6. 'input' → logprob: -3.65989351272583
    7. ')' → logprob: -3.78489351272583
    8. ',' → logprob: -3.90989351272583
    9. '```' → logprob: -3.90989351272583
    10. ' la' → logprob: -4.28489351272583

Token 34: ' simple' (ID: 4705)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.1880861073732376
    2. 'tokens' → logprob: -3.1880860328674316
    3. ' tokens' → logprob: -3.8130860328674316
    4. 'on' → logprob: -3.9380860328674316
    5. ' ' → logprob: -4.438086032867432
    6. ' line' → logprob: -4.688086032867432
    7. ' la' → logprob: -4.938086032867432
    8. 's' → logprob: -4.938086032867432
    9. 'stuff' → logprob: -5.438086032867432
    10. ' stuff' → logprob: -5.688086032867432

Token 35: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2596948146820068
    2. '<|end|>' → logprob: -1.7596948146820068
    3. '()' → logprob: -2.384694814682007
    4. ' =' → logprob: -2.634694814682007
    5. 's' → logprob: -3.009694814682007
    6. '.split' → logprob: -3.134694814682007
    7. ')' → logprob: -3.259694814682007
    8. 'token' → logprob: -3.259694814682007
    9. ',' → logprob: -3.259694814682007
    10. 'split' → logprob: -3.509694814682007

Token 36: '   ' (ID: 271)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7285605072975159
    2. 'tokens' → logprob: -2.228560447692871
    3. ' tokens' → logprob: -2.603560447692871
    4. ' s' → logprob: -2.728560447692871
    5. 'line' → logprob: -3.103560447692871
    6. 's' → logprob: -3.103560447692871
    7. ' ligne' → logprob: -3.603560447692871
    8. ' stuff' → logprob: -4.103560447692871
    9. ' parts' → logprob: -4.103560447692871
    10. ' ' → logprob: -4.228560447692871

Token 37: ' things' (ID: 3283)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9987343549728394
    2. ' stuff' → logprob: -1.1237343549728394
    3. ' parts' → logprob: -2.373734474182129
    4. 'stuff' → logprob: -2.373734474182129
    5. ' lines' → logprob: -3.123734474182129
    6. 'line' → logprob: -3.248734474182129
    7. ' ligne' → logprob: -5.123734474182129
    8. ' data' → logprob: -5.373734474182129
    9. 'parts' → logprob: -5.498734474182129
    10. 'lines' → logprob: -5.873734474182129

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014410175383090973
    2. '=' → logprob: -4.264410018920898
    3. '.' → logprob: -9.514410018920898
    4. '_' → logprob: -10.014410018920898
    5. 's' → logprob: -10.014410018920898
    6. '.append' → logprob: -10.139410018920898
    7. '.extend' → logprob: -11.889410018920898
    8. '=line' → logprob: -12.139410018920898
    9. ')' → logprob: -12.264410018920898
    10. '[:]' → logprob: -12.389410018920898

Token 39: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023269938305020332
    2. ' input' → logprob: -3.7732698917388916
    3. 'list' → logprob: -10.898269653320312
    4. '(input' → logprob: -13.148269653320312
    5. ' list' → logprob: -13.648269653320312
    6. '=input' → logprob: -13.898269653320312
    7. '[input' → logprob: -14.648269653320312
    8. 'line' → logprob: -15.023269653320312
    9. '   ' → logprob: -15.273269653320312
    10. ' ' → logprob: -15.398269653320312

Token 40: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31820914149284363
    2. '().' → logprob: -1.318209171295166
    3. '(' → logprob: -5.318209171295166
    4. '('' → logprob: -11.943208694458008
    5. '())' → logprob: -12.318208694458008
    6. ' ()' → logprob: -12.693208694458008
    7. '("' → logprob: -12.818208694458008
    8. '()`' → logprob: -12.943208694458008
    9. '("("' → logprob: -13.068208694458008
    10. ')' → logprob: -13.068208694458008

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008663497865200043
    2. 'strip' → logprob: -4.758663654327393
    3. 'rstrip' → logprob: -10.008663177490234
    4. ' split' → logprob: -12.633663177490234
    5. 'replace' → logprob: -15.758663177490234
    6. '(split' → logprob: -15.883663177490234
    7. 'spl' → logprob: -15.883663177490234
    8. '```' → logprob: -16.133663177490234
    9. 's' → logprob: -16.758663177490234
    10. '_split' → logprob: -17.883663177490234

Token 42: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.39556625485420227
    2. '(' → logprob: -1.6455662250518799
    3. '()' → logprob: -2.14556622505188
    4. '("("' → logprob: -4.145566463470459
    5. '("' → logprob: -7.645566463470459
    6. '())' → logprob: -9.3955659866333
    7. ''' → logprob: -9.3955659866333
    8. ')' → logprob: -10.5205659866333
    9. '```' → logprob: -10.5205659866333
    10. '(\' → logprob: -10.6455659866333

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12944310903549194
    2. 'stuff' → logprob: -2.8794431686401367
    3. '<|end|>' → logprob: -4.129443168640137
    4. 'st' → logprob: -4.254443168640137
    5. '    ' → logprob: -5.129443168640137
    6. '    
' → logprob: -5.504443168640137
    7. '.' → logprob: -5.629443168640137
    8. '(st' → logprob: -5.754443168640137
    9. ')' → logprob: -5.754443168640137
    10. '[' → logprob: -5.879443168640137

Token 44: ' stuff' (ID: 9350)
  Prédit: 'stuff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stuff' (adapté à ' stuff') → logprob: -0.4905214011669159
    2. '.' → logprob: -1.3655214309692383
    3. '   ' → logprob: -2.7405214309692383
    4. '.st' → logprob: -3.7405214309692383
    5. ')' → logprob: -4.365521430969238
    6. 'st' → logprob: -4.865521430969238
    7. '<|end|>' → logprob: -5.115521430969238
    8. ' ' → logprob: -5.615521430969238
    9. 's' → logprob: -6.240521430969238
    10. '	st' → logprob: -6.365521430969238

Token 45: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2946150004863739
    2. '.extend' → logprob: -1.7946150302886963
    3. '.' → logprob: -2.4196150302886963
    4. '.add' → logprob: -12.044614791870117
    5. '.push' → logprob: -12.169614791870117
    6. ' .' → logprob: -12.169614791870117
    7. '.ext' → logprob: -12.419614791870117
    8. '.app' → logprob: -12.544614791870117
    9. '.setdefault' → logprob: -12.669614791870117
    10. '.concatenate' → logprob: -13.919614791870117

Token 46: '(th' (ID: 53988)
  Prédit: '(th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(th' → logprob: -0.07890190184116364
    2. '(' → logprob: -2.578902006149292
    3. '((' → logprob: -12.578902244567871
    4. '(
' → logprob: -12.828902244567871
    5. '(

' → logprob: -14.203902244567871
    6. '(tuple' → logprob: -14.328902244567871
    7. '(`' → logprob: -14.453902244567871
    8. '(items' → logprob: -14.453902244567871
    9. '(s' → logprob: -14.578902244567871
    10. ' (' → logprob: -14.578902244567871

Token 47: 'ings' (ID: 963)
  Prédit: 'ings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.0010517460759729147
    2. 'gs' → logprob: -6.876051902770996
    3. 'ing' → logprob: -12.501051902770996
    4. 'igs' → logprob: -12.501051902770996
    5. 's' → logprob: -13.126051902770996
    6. '[' → logprob: -13.376051902770996
    7. '(' → logprob: -13.501051902770996
    8. '```' → logprob: -13.501051902770996
    9. 'inks' → logprob: -13.626051902770996
    10. 'ingss' → logprob: -14.251051902770996

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')
' → logprob: -12.750004768371582
    3. '   ' → logprob: -14.000004768371582
    4. ' )' → logprob: -14.375004768371582
    5. '))' → logprob: -14.875004768371582
    6. '`)' → logprob: -16.3750057220459
    7. '[' → logprob: -16.7500057220459
    8. ')`' → logprob: -17.1250057220459
    9. '')' → logprob: -17.5000057220459
    10. ']' → logprob: -17.6250057220459

Token 49: '    
' (ID: 1944)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23123861849308014
    2. '#' → logprob: -1.856238603591919
    3. '```' → logprob: -4.106238842010498
    4. '
' → logprob: -4.356238842010498
    5. '[' → logprob: -4.606238842010498
    6. '<|end|>' → logprob: -5.856238842010498
    7. 'print' → logprob: -6.231238842010498
    8. '.' → logprob: -6.356238842010498
    9. ' for' → logprob: -6.856238842010498
    10. '\n' → logprob: -7.356238842010498

Token 50: 'search' (ID: 2624)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47421175241470337
    2. 'max' → logprob: -1.9742116928100586
    3. '#' → logprob: -2.4742116928100586
    4. 'result' → logprob: -2.9742116928100586
    5. 'total' → logprob: -3.2242116928100586
    6. 'sum' → logprob: -3.5992116928100586
    7. 'print' → logprob: -3.9742116928100586
    8. 's' → logprob: -5.474211692810059
    9. 'res' → logprob: -6.224211692810059
    10. 'answer' → logprob: -6.474211692810059

Token 51: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03294499218463898
    2. '=' → logprob: -4.407945156097412
    3. ' =' → logprob: -4.532945156097412
    4. 'es' → logprob: -6.282945156097412
    5. '_for' → logprob: -6.657945156097412
    6. '_term' → logprob: -6.657945156097412
    7. '_space' → logprob: -7.032945156097412
    8. '(' → logprob: -7.282945156097412
    9. '_items' → logprob: -7.782945156097412
    10. '_terms' → logprob: -8.032944679260254

Token 52: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.41760900616645813
    2. 'stuff' → logprob: -2.0426089763641357
    3. '"' → logprob: -2.7926089763641357
    4. ' input' → logprob: -3.1676089763641357
    5. '[]' → logprob: -3.1676089763641357
    6. ' []' → logprob: -3.5426089763641357
    7. ''' → logprob: -4.042609214782715
    8. ' stuff' → logprob: -5.292609214782715
    9. '[' → logprob: -6.292609214782715
    10. ' "' → logprob: -6.292609214782715

Token 53: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015414038207381964
    2. '(' → logprob: -6.501541614532471
    3. '().' → logprob: -10.876541137695312
    4. ' ()' → logprob: -12.126541137695312
    5. '('' → logprob: -12.876541137695312
    6. '())' → logprob: -13.376541137695312
    7. '`()' → logprob: -13.376541137695312
    8. '()`' → logprob: -13.501541137695312
    9. ')' → logprob: -13.876541137695312
    10. '```' → logprob: -13.876541137695312

Token 54: 'total' (ID: 9577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013418675400316715
    2. 'found' → logprob: -4.513418674468994
    3. 'result' → logprob: -7.138418674468994
    4. ' for' → logprob: -7.263418674468994
    5. '
' → logprob: -7.388418674468994
    6. 'results' → logprob: -9.263419151306152
    7. '#' → logprob: -10.388419151306152
    8. '\n' → logprob: -10.763419151306152
    9. ' found' → logprob: -10.888419151306152
    10. 'count' → logprob: -11.138419151306152

Token 55: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41942235827445984
    2. ' =' → logprob: -1.9194223880767822
    3. '_count' → logprob: -2.0444223880767822
    4. '=' → logprob: -3.2944223880767822
    5. 's' → logprob: -4.544422149658203
    6. '_sum' → logprob: -4.794422149658203
    7. '_counts' → logprob: -5.919422149658203
    8. '_amount' → logprob: -6.044422149658203
    9. '_s' → logprob: -6.669422149658203
    10. ' _' → logprob: -7.169422149658203

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012513063848018646
    2. ' ' → logprob: -4.387513160705566
    3. 'sum' → logprob: -13.387513160705566
    4. ' sum' → logprob: -14.012513160705566
    5. '[]' → logprob: -15.012513160705566
    6. 'len' → logprob: -15.887513160705566
    7. '   ' → logprob: -16.26251220703125
    8. ' ' → logprob: -16.51251220703125
    9. '"' → logprob: -16.76251220703125
    10. '1' → logprob: -16.76251220703125

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3199920178740285e-05
    2. 'sum' → logprob: -10.875022888183594
    3. ' ' → logprob: -12.750022888183594
    4. '[]' → logprob: -14.625022888183594
    5. 'len' → logprob: -14.750022888183594
    6. '[' → logprob: -15.125022888183594
    7. '1' → logprob: -16.875022888183594
    8. 'int' → logprob: -16.875022888183594
    9. ' sum' → logprob: -17.625022888183594
    10. '"' → logprob: -17.750022888183594

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5800848603248596
    2. 'for' → logprob: -0.8300848603248596
    3. ' for' → logprob: -5.580084800720215
    4. '<|end|>' → logprob: -8.580084800720215
    5. '
' → logprob: -9.330084800720215
    6. ' 
' → logprob: -10.330084800720215
    7. '\n' → logprob: -10.830084800720215
    8. '  
' → logprob: -11.705084800720215
    9. '<|end|>' → logprob: -11.955084800720215
    10. '' → logprob: -11.955084800720215

Token 59: 'found' (ID: 26334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12732072174549103
    2. '
' → logprob: -2.1273207664489746
    3. ' for' → logprob: -7.877320766448975
    4. '
' → logprob: -11.877320289611816
    5. '<|end|>' → logprob: -12.752320289611816
    6. '\n' → logprob: -14.002320289611816
    7. ' 
' → logprob: -14.252320289611816
    8. '' → logprob: -14.502320289611816
    9. '  
' → logprob: -14.877320289611816
    10. '```' → logprob: -15.002320289611816

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26810282468795776
    2. '=' → logprob: -1.6431028842926025
    3. '_' → logprob: -3.2681028842926025
    4. '_count' → logprob: -5.893102645874023
    5. '_in' → logprob: -7.893102645874023
    6. ' ' → logprob: -8.268102645874023
    7. 's' → logprob: -10.018102645874023
    8. '_=' → logprob: -10.268102645874023
    9. 'in' → logprob: -10.393102645874023
    10. 'ed' → logprob: -11.018102645874023

Token 61: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07244696468114853
    2. ' False' → logprob: -2.8224470615386963
    3. '0' → logprob: -4.572446823120117
    4. '[]' → logprob: -9.947446823120117
    5. ' ' → logprob: -10.197446823120117
    6. '(False' → logprob: -12.822446823120117
    7. 'True' → logprob: -13.072446823120117
    8. ' []' → logprob: -13.822446823120117
    9. ' True' → logprob: -14.697446823120117
    10. '=False' → logprob: -16.197446823120117

Token 62: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25655072927474976
    2. 'for' → logprob: -1.5065507888793945
    3. ' for' → logprob: -5.5065507888793945
    4. '<|end|>' → logprob: -8.006550788879395
    5. '
' → logprob: -9.756550788879395
    6. ' 
' → logprob: -10.006550788879395
    7. '\n' → logprob: -10.006550788879395
    8. '  
' → logprob: -10.756550788879395
    9. '' → logprob: -10.881550788879395
    10. '```' → logprob: -11.631550788879395

Token 63: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.080963092041202e-06
    2. ' for' → logprob: -12.500004768371582
    3. '
' → logprob: -13.625004768371582
    4. '```' → logprob: -16.7500057220459
    5. '<|end|>' → logprob: -17.8750057220459
    6. '	for' → logprob: -20.5000057220459
    7. '  
' → logprob: -20.7500057220459
    8. 'if' → logprob: -20.7500057220459
    9. ' 
' → logprob: -21.1250057220459
    10. '<|end|>' → logprob: -21.3750057220459

Token 64: ' word' (ID: 2195)
  Prédit: ' stuff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stuff' → logprob: -0.8678660988807678
    2. ' item' → logprob: -1.242866039276123
    3. ' thing' → logprob: -1.867866039276123
    4. ' things' → logprob: -3.117866039276123
    5. ' items' → logprob: -3.367866039276123
    6. ' ' → logprob: -3.492866039276123
    7. ' line' → logprob: -4.117866039276123
    8. ' i' → logprob: -5.867866039276123
    9. ' s' → logprob: -6.492866039276123
    10. ' t' → logprob: -6.617866039276123

Token 65: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005392653401941061
    2. 'in' → logprob: -5.255392551422119
    3. 's' → logprob: -9.005393028259277
    4. ' ' → logprob: -10.505393028259277
    5. ',' → logprob: -13.005393028259277
    6. '_in' → logprob: -13.505393028259277
    7. '	in' → logprob: -13.505393028259277
    8. '_' → logprob: -13.880393028259277
    9. '   ' → logprob: -14.255393028259277
    10. '  ' → logprob: -14.380393028259277

Token 66: ' number' (ID: 2086)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.04654812067747116
    2. ' count' → logprob: -3.5465481281280518
    3. 'qty' → logprob: -5.546547889709473
    4. '_' → logprob: -6.421547889709473
    5. 'freq' → logprob: -6.671547889709473
    6. '*' → logprob: -6.796547889709473
    7. 'occ' → logprob: -6.796547889709473
    8. 'cnt' → logprob: -6.921547889709473
    9. 'amount' → logprob: -7.046547889709473
    10. 'value' → logprob: -7.546547889709473

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07072833925485611
    2. 'in' → logprob: -2.695728302001953
    3. 's' → logprob: -7.445728302001953
    4. ' ' → logprob: -9.820728302001953
    5. ',' → logprob: -10.070728302001953
    6. '_in' → logprob: -10.445728302001953
    7. '	in' → logprob: -11.195728302001953
    8. '<|end|>' → logprob: -11.195728302001953
    9. '   ' → logprob: -11.445728302001953
    10. '  ' → logprob: -12.195728302001953

Token 68: ' stuff' (ID: 9350)
  Prédit: 'stuff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stuff' → logprob: -0.03809347376227379
    2. ' stuff' → logprob: -3.2880935668945312
    3. '   ' → logprob: -11.163093566894531
    4. 'st' → logprob: -11.663093566894531
    5. '(st' → logprob: -12.038093566894531
    6. '	st' → logprob: -12.163093566894531
    7. ' ' → logprob: -12.288093566894531
    8. '  ' → logprob: -12.663093566894531
    9. '    ' → logprob: -13.038093566894531
    10. 'Stuff' → logprob: -13.663093566894531

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.024604277219623e-05
    2. ' :' → logprob: -11.125040054321289
    3. ':**' → logprob: -11.750040054321289
    4. ':
' → logprob: -11.875040054321289
    5. '[' → logprob: -13.000040054321289
    6. ',' → logprob: -13.000040054321289
    7. '):' → logprob: -13.000040054321289
    8. '[:]' → logprob: -13.625040054321289
    9. '[:' → logprob: -14.250040054321289
    10. '<|end|>' → logprob: -14.875040054321289

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08326353877782822
    2. '<|end|>' → logprob: -2.833263635635376
    3. ' ' → logprob: -4.833263397216797
    4. '    
' → logprob: -5.208263397216797
    5. ' if' → logprob: -5.583263397216797
    6. ' 
' → logprob: -6.833263397216797
    7. '  ' → logprob: -7.583263397216797
    8. '
' → logprob: -7.583263397216797
    9. '<|end|>' → logprob: -7.708263397216797
    10. '    ' → logprob: -7.708263397216797

Token 71: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9673218131065369
    2. ' if' → logprob: -1.2173218727111816
    3. '<|end|>' → logprob: -1.4673218727111816
    4. ' 
' → logprob: -3.4673218727111816
    5. ' ' → logprob: -3.5923218727111816
    6. '    ' → logprob: -3.9673218727111816
    7. '    
' → logprob: -4.842321872711182
    8. 'if' (adapté à ' if') → logprob: -5.467321872711182
    9. '<|end|>' → logprob: -6.217321872711182
    10. '
' → logprob: -7.592321872711182

Token 72: ' found' (ID: 2491)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.0006790731567889452
    2. 'word' → logprob: -7.375679016113281
    3. ' search' → logprob: -10.000679016113281
    4. 'search' → logprob: -12.750679016113281
    5. '	word' → logprob: -12.875679016113281
    6. '(word' → logprob: -14.875679016113281
    7. ' ' → logprob: -15.250679016113281
    8. ' ' → logprob: -15.250679016113281
    9. '[word' → logprob: -15.375679016113281
    10. ' words' → logprob: -16.25067901611328

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3823719024658203
    2. ' ==' → logprob: -1.6323719024658203
    3. ' :' → logprob: -1.6323719024658203
    4. ' or' → logprob: -1.7573719024658203
    5. ' and' → logprob: -1.8823719024658203
    6. '==' → logprob: -3.6323719024658203
    7. 'and' → logprob: -5.88237190246582
    8. ' =' → logprob: -6.00737190246582
    9. '=' → logprob: -7.13237190246582
    10. ' ' → logprob: -7.88237190246582

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004122923128306866
    2. '   ' → logprob: -6.379122734069824
    3. ' break' → logprob: -7.004122734069824
    4. ' total' → logprob: -7.629122734069824
    5. '    ' → logprob: -8.629122734069824
    6. 'total' → logprob: -8.754122734069824
    7. 'break' → logprob: -8.879122734069824
    8. ' if' → logprob: -9.254122734069824
    9. ' +' → logprob: -10.004122734069824
    10. '+' → logprob: -10.129122734069824

Token 75: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9545906782150269
    2. ' total' → logprob: -1.3295906782150269
    3. ' break' → logprob: -1.7045906782150269
    4. 'break' → logprob: -1.9545906782150269
    5. ' if' → logprob: -4.329590797424316
    6. '   ' → logprob: -4.954590797424316
    7. 'if' → logprob: -5.079590797424316
    8. '       ' → logprob: -8.704590797424316
    9. 'number' → logprob: -9.704590797424316
    10. ' ' → logprob: -9.704590797424316

Token 76: ' On' (ID: 2160)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.5841472148895264
    2. 'total' → logprob: -1.3341472148895264
    3. ' break' → logprob: -2.3341472148895264
    4. 'break' → logprob: -3.4591472148895264
    5. ' if' → logprob: -3.7091472148895264
    6. '   ' → logprob: -3.9591472148895264
    7. 'if' → logprob: -5.0841474533081055
    8. ' ' → logprob: -7.8341474533081055
    9. ' number' → logprob: -8.709147453308105
    10. 'number' → logprob: -9.584147453308105

Token 77: ' doit' (ID: 21822)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6467249989509583
    2. ' break' → logprob: -2.0217249393463135
    3. ' total' → logprob: -2.2717249393463135
    4. 'break' → logprob: -2.3967249393463135
    5. 'total' → logprob: -2.7717249393463135
    6. ' if' → logprob: -3.0217249393463135
    7. 'if' → logprob: -4.271725177764893
    8. '    ' → logprob: -4.521725177764893
    9. '       ' → logprob: -4.646725177764893
    10. ' ' → logprob: -6.646725177764893

Token 78: ' addition' (ID: 5856)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.790036141872406
    2. 'total' → logprob: -1.1650362014770508
    3. '   ' → logprob: -2.790036201477051
    4. 'contin' → logprob: -3.165036201477051
    5. 'break' → logprob: -3.540036201477051
    6. '    ' → logprob: -3.790036201477051
    7. ' break' → logprob: -4.165036201477051
    8. '  ' → logprob: -4.790036201477051
    9. ' continuer' → logprob: -4.790036201477051
    10. ' ' → logprob: -5.165036201477051

Token 79: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.001347138429991901
    2. 'er' → logprob: -6.626347064971924
    3. 'nner' → logprob: -11.126347541809082
    4. ' ner' → logprob: -12.376347541809082
    5. '   ' → logprob: -14.126347541809082
    6. 'ne' → logprob: -15.251347541809082
    7. 'n' → logprob: -15.751347541809082
    8. '+' → logprob: -15.876347541809082
    9. '       ' → logprob: -16.126346588134766
    10. ' ' → logprob: -16.126346588134766

Token 80: ' si' (ID: 1784)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2524794340133667
    2. ' total' → logprob: -2.2524795532226562
    3. 'int' → logprob: -2.2524795532226562
    4. ' +=' → logprob: -5.127479553222656
    5. ' int' → logprob: -6.377479553222656
    6. ' =' → logprob: -6.752479553222656
    7. '   ' → logprob: -6.877479553222656
    8. '       ' → logprob: -7.002479553222656
    9. '+=' → logprob: -7.627479553222656
    10. '+' → logprob: -8.127479553222656

Token 81: ' c' (ID: 274)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.1269000619649887
    2. ' number' → logprob: -2.5018999576568604
    3. 'word' → logprob: -4.6269001960754395
    4. ' int' → logprob: -4.7519001960754395
    5. ' not' → logprob: -5.2519001960754395
    6. ' search' → logprob: -5.5019001960754395
    7. ' ' → logprob: -6.0019001960754395
    8. 'number' → logprob: -6.0019001960754395
    9. ' found' → logprob: -6.2519001960754395
    10. 'int' → logprob: -7.1269001960754395

Token 82: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.5260316133499146
    2. ''' → logprob: -1.5260316133499146
    3. 'ont' → logprob: -2.776031494140625
    4. 'est' → logprob: -4.026031494140625
    5. 'on' → logprob: -4.026031494140625
    6. 'e' → logprob: -4.526031494140625
    7. ''on' → logprob: -4.651031494140625
    8. 'ounter' → logprob: -5.026031494140625
    9. ''ont' → logprob: -5.026031494140625
    10. 'n't' → logprob: -5.526031494140625

Token 83: ' après' (ID: 16460)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.7223394513130188
    2. ' not' → logprob: -1.472339391708374
    3. 'number' → logprob: -2.472339391708374
    4. 'not' → logprob: -2.722339391708374
    5. ' word' → logprob: -3.472339391708374
    6. ' un' → logprob: -3.597339391708374
    7. ' le' → logprob: -4.347339630126953
    8. 'int' → logprob: -4.472339630126953
    9. ' found' → logprob: -4.722339630126953
    10. ' int' → logprob: -4.722339630126953

Token 84: ' le' (ID: 505)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' word' → logprob: -1.0963318347930908
    2. ' search' → logprob: -1.4713318347930908
    3. 'word' → logprob: -1.8463318347930908
    4. 'search' → logprob: -2.471331834793091
    5. 'found' → logprob: -2.721331834793091
    6. ' found' → logprob: -3.096331834793091
    7. 'int' → logprob: -3.221331834793091
    8. ' int' → logprob: -4.221331596374512
    9. '   ' → logprob: -4.971331596374512
    10. ' True' → logprob: -5.096331596374512

Token 85: ' mot' (ID: 3598)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.05264286696910858
    2. 'mot' → logprob: -3.302642822265625
    3. ' search' → logprob: -4.552642822265625
    4. 'word' → logprob: -7.052642822265625
    5. ' mot' → logprob: -7.177642822265625
    6. 'prem' → logprob: -7.427642822265625
    7. '   ' → logprob: -7.927642822265625
    8. '```' → logprob: -8.427642822265625
    9. 'searched' → logprob: -8.552642822265625
    10. 's' → logprob: -9.427642822265625

Token 86: ' trouvé' (ID: 60081)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9826241731643677
    2. '       ' → logprob: -1.6076241731643677
    3. ' =' → logprob: -2.107624053955078
    4. ' +=' → logprob: -2.607624053955078
    5. '    ' → logprob: -3.482624053955078
    6. '=' → logprob: -3.482624053955078
    7. '           ' → logprob: -3.732624053955078
    8. ' ' → logprob: -4.107624053955078
    9. 'total' → logprob: -4.107624053955078
    10. 'int' → logprob: -4.232624053955078

Token 87: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1139354705810547
    2. '   ' → logprob: -1.6139354705810547
    3. '+' → logprob: -1.9889354705810547
    4. ' ' → logprob: -2.1139354705810547
    5. ' +' → logprob: -2.7389354705810547
    6. 'total' → logprob: -3.2389354705810547
    7. ' total' → logprob: -3.3639354705810547
    8. '    ' → logprob: -4.363935470581055
    9. '           ' → logprob: -4.488935470581055
    10. ' +=' → logprob: -5.113935470581055

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33653756976127625
    2. '   ' → logprob: -2.0865375995635986
    3. 'total' → logprob: -2.5865375995635986
    4. ' total' → logprob: -3.2115375995635986
    5. '           ' → logprob: -4.2115373611450195
    6. ' +' → logprob: -4.2115373611450195
    7. '+' → logprob: -4.9615373611450195
    8. ' ' → logprob: -6.0865373611450195
    9. ' if' → logprob: -6.7115373611450195
    10. ',' → logprob: -6.9615373611450195

Token 89: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.40903440117836
    2. ' total' → logprob: -1.1590343713760376
    3. '   ' → logprob: -4.034034252166748
    4. '       ' → logprob: -5.784034252166748
    5. '	total' → logprob: -7.784034252166748
    6. ' ' → logprob: -8.284034729003906
    7. '           ' → logprob: -9.159034729003906
    8. '  ' → logprob: -9.534034729003906
    9. ' +' → logprob: -9.784034729003906
    10. '    ' → logprob: -10.034034729003906

Token 90: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2821750044822693
    2. '+=' → logprob: -1.407175064086914
    3. '+' → logprob: -7.032175064086914
    4. '   ' → logprob: -9.532175064086914
    5. '    ' → logprob: -10.532175064086914
    6. '=' → logprob: -11.407175064086914
    7. ' +' → logprob: -11.907175064086914
    8. ' ' → logprob: -12.282175064086914
    9. ']+=' → logprob: -12.407175064086914
    10. ' ' → logprob: -12.782175064086914

Token 91: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.20021089911460876
    2. 'total' → logprob: -1.8252109289169312
    3. 'int' → logprob: -4.450211048126221
    4. ' int' → logprob: -4.825211048126221
    5. '+' → logprob: -7.700211048126221
    6. '0' → logprob: -10.825210571289062
    7. '(total' → logprob: -10.950210571289062
    8. ' ' → logprob: -11.325210571289062
    9. ' +' → logprob: -11.325210571289062
    10. ' float' → logprob: -11.575210571289062

Token 92: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25193658471107483
    2. ' +' → logprob: -1.5019365549087524
    3. 'int' → logprob: -13.251936912536621
    4. '+=' → logprob: -13.626936912536621
    5. ' plus' → logprob: -13.876936912536621
    6. ' ' → logprob: -14.501936912536621
    7. ' +=' → logprob: -14.501936912536621
    8. '*' → logprob: -15.001936912536621
    9. ' ' → logprob: -15.376936912536621
    10. '+
' → logprob: -15.751936912536621

Token 93: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0022061665076762438
    2. ' int' → logprob: -6.127206325531006
    3. 'float' → logprob: -10.877205848693848
    4. '(int' → logprob: -14.377205848693848
    5. '   ' → logprob: -15.127205848693848
    6. 'number' → logprob: -15.127205848693848
    7. '1' → logprob: -15.377205848693848
    8. '<int' → logprob: -15.377205848693848
    9. '[int' → logprob: -15.752205848693848
    10. ' float' → logprob: -15.877205848693848

Token 94: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.048619501292705536
    2. '(' → logprob: -3.048619508743286
    3. '(numero' → logprob: -11.298619270324707
    4. '(n' → logprob: -11.673619270324707
    5. '(num' → logprob: -12.298619270324707
    6. '(Number' → logprob: -13.173619270324707
    7. '(numbers' → logprob: -13.298619270324707
    8. '(
' → logprob: -14.173619270324707
    9. '(amount' → logprob: -14.548619270324707
    10. '('' → logprob: -15.173619270324707

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005330175044946373
    2. ')
' → logprob: -7.750533103942871
    3. '   ' → logprob: -9.375533103942871
    4. ' )' → logprob: -11.375533103942871
    5. ')

' → logprob: -13.875533103942871
    6. '))' → logprob: -13.875533103942871
    7. ')
' → logprob: -14.000533103942871
    8. '       ' → logprob: -14.250533103942871
    9. ' ' → logprob: -14.625533103942871
    10. ')return' → logprob: -15.000533103942871

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5522984266281128
    2. ' elif' → logprob: -2.0522985458374023
    3. ' else' → logprob: -2.1772985458374023
    4. ' ' → logprob: -2.8022985458374023
    5. 'elif' → logprob: -2.9272985458374023
    6. ' if' → logprob: -3.9272985458374023
    7. 'else' → logprob: -4.052298545837402
    8. '    
' → logprob: -4.177298545837402
    9. ' 
' → logprob: -5.052298545837402
    10. '  ' → logprob: -6.552298545837402

Token 97: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.11809365451335907
    2. '   ' → logprob: -2.618093729019165
    3. 'if' (adapté à ' if') → logprob: -3.493093729019165
    4. 'else' → logprob: -5.243093490600586
    5. ' elif' → logprob: -5.993093490600586
    6. ' if' → logprob: -8.368093490600586
    7. ' else' → logprob: -11.493093490600586
    8. '    
' → logprob: -11.743093490600586
    9. ' ' → logprob: -12.868093490600586
    10. '```' → logprob: -12.868093490600586

Token 98: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.005975484848022461
    2. 'word' → logprob: -5.130975723266602
    3. '	word' → logprob: -10.630975723266602
    4. ' not' → logprob: -11.255975723266602
    5. ' search' → logprob: -12.255975723266602
    6. 'not' → logprob: -13.130975723266602
    7. 'search' → logprob: -13.380975723266602
    8. ' ' → logprob: -14.630975723266602
    9. ' ' → logprob: -15.130975723266602
    10. '(word' → logprob: -15.380975723266602

Token 99: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2519334554672241
    2. '==' → logprob: -1.5019334554672241
    3. '=' → logprob: -13.001933097839355
    4. ' ' → logprob: -14.376933097839355
    5. '==
' → logprob: -14.751933097839355
    6. ' =' → logprob: -15.626933097839355
    7. '===' → logprob: -15.626933097839355
    8. ' ' → logprob: -15.876933097839355
    9. ')' → logprob: -15.876933097839355
    10. '()==' → logprob: -16.251934051513672

Token 100: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.47507065534591675
    2. 'search' → logprob: -0.9750706553459167
    3. ''' → logprob: -7.225070476531982
    4. ' f' → logprob: -8.85007095336914
    5. '"' → logprob: -9.97507095336914
    6. ' ' → logprob: -10.22507095336914
    7. ' '' → logprob: -10.60007095336914
    8. '	search' → logprob: -12.10007095336914
    9. 'f' → logprob: -12.60007095336914
    10. '(search' → logprob: -13.35007095336914

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004973778035491705
    2. ':
' → logprob: -5.379973888397217
    3. '   ' → logprob: -8.254973411560059
    4. ' :' → logprob: -9.504973411560059
    5. '       ' → logprob: -12.254973411560059
    6. ':
' → logprob: -12.254973411560059
    7. ' :
' → logprob: -13.254973411560059
    8. '=' → logprob: -13.379973411560059
    9. '==' → logprob: -14.254973411560059
    10. ':

' → logprob: -14.504973411560059

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6142027378082275
    2. ' found' → logprob: -1.1142027378082275
    3. 'found' → logprob: -2.6142027378082275
    4. '   ' → logprob: -2.8642027378082275
    5. '	found' → logprob: -8.114202499389648
    6. '        
' → logprob: -9.739202499389648
    7. '```' → logprob: -10.364202499389648
    8. '    
' → logprob: -10.489202499389648
    9. 'Found' → logprob: -11.114202499389648
    10. '(found' → logprob: -11.114202499389648

Token 103: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.31337735056877136
    2. ' found' → logprob: -1.3133773803710938
    3. '   ' → logprob: -9.563377380371094
    4. '	found' → logprob: -10.688377380371094
    5. 'Found' → logprob: -11.313377380371094
    6. '
' → logprob: -12.563377380371094
    7. '```' → logprob: -13.188377380371094
    8. '    
' → logprob: -13.688377380371094
    9. '_found' → logprob: -13.688377380371094
    10. '(found' → logprob: -14.063377380371094

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25199052691459656
    2. '=' → logprob: -1.501990556716919
    3. '=True' → logprob: -9.75199031829834
    4. ' ' → logprob: -13.12699031829834
    5. 's' → logprob: -14.87699031829834
    6. '=False' → logprob: -15.87699031829834
    7. ' ' → logprob: -16.001991271972656
    8. '	' → logprob: -16.376991271972656
    9. '   ' → logprob: -16.751991271972656
    10. '=true' → logprob: -16.751991271972656

Token 105: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3132616877555847
    2. ' True' → logprob: -1.3132617473602295
    3. '=True' → logprob: -17.688261032104492
    4. '(True' → logprob: -17.938261032104492
    5. ' Tru' → logprob: -20.938261032104492
    6. '1' → logprob: -21.063261032104492
    7. ' ' → logprob: -21.063261032104492
    8. '.True' → logprob: -22.063261032104492
    9. 'Tr' → logprob: -22.688261032104492
    10. '_true' → logprob: -22.688261032104492

Token 106: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002933942887466401
    2. 'if' → logprob: -8.250293731689453
    3. '
' → logprob: -10.625293731689453
    4. '```' → logprob: -12.750293731689453
    5. ' print' → logprob: -13.250293731689453
    6. '<|end|>' → logprob: -13.875293731689453
    7. 'else' → logprob: -14.375293731689453
    8. '#' → logprob: -14.375293731689453
    9. '#print' → logprob: -15.250293731689453
    10. ' if' → logprob: -15.375293731689453

Token 107: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3321819603443146
    2. '<|end|>' → logprob: -1.9571819305419922
    3. '
' → logprob: -2.082181930541992
    4. '#' → logprob: -4.957181930541992
    5. 'if' → logprob: -5.082181930541992
    6. '```' → logprob: -7.082181930541992
    7. 'else' → logprob: -7.332181930541992
    8. ')' → logprob: -7.957181930541992
    9. '<|end|>' → logprob: -8.207181930541992
    10. ' print' → logprob: -8.207181930541992

Token 108: ' trouvé' (ID: 60081)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' !' (ID: 1073)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006782424170523882
    2. 'if' → logprob: -7.500678062438965
    3. '<|end|>' → logprob: -9.375678062438965
    4. 'else' → logprob: -11.625678062438965
    5. '#' → logprob: -11.875678062438965
    6. '```' → logprob: -12.000678062438965
    7. ' print' → logprob: -12.125678062438965
    8. ')' → logprob: -12.750678062438965
    9. 'total' → logprob: -12.875678062438965
    10. '#print' → logprob: -13.250678062438965

Token 111: ' commence' (ID: 44755)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2041960507631302
    2. ' continue' → logprob: -1.7041960954666138
    3. 'contin' → logprob: -6.079195976257324
    4. 'ne' → logprob: -9.704195976257324
    5. 'continu' → logprob: -9.704195976257324
    6. 's' → logprob: -9.829195976257324
    7. '_continue' → logprob: -9.954195976257324
    8. 'comm' → logprob: -10.329195976257324
    9. ' continuer' → logprob: -10.454195976257324
    10. ' ne' → logprob: -10.829195976257324

Token 112: ' le' (ID: 505)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.090328149497509
    2. ' à' → logprob: -2.7153282165527344
    3. 'l' → logprob: -4.465328216552734
    4. '   ' → logprob: -6.215328216552734
    5. 'la' → logprob: -6.590328216552734
    6. ' ' → logprob: -6.840328216552734
    7. 'a' → logprob: -6.965328216552734
    8. '<|end|>' → logprob: -7.215328216552734
    9. 'from' → logprob: -7.465328216552734
    10. ' l' → logprob: -8.715328216552734

Token 113: ' compt' (ID: 39238)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5650563836097717
    2. 'comp' → logprob: -1.315056324005127
    3. 'calcul' → logprob: -2.565056324005127
    4. 'for' → logprob: -3.815056324005127
    5. 'next' → logprob: -4.065056324005127
    6. 'count' → logprob: -4.315056324005127
    7. 'addition' → logprob: -4.565056324005127
    8. 'com' → logprob: -5.190056324005127
    9. '#' → logprob: -6.065056324005127
    10. ' total' → logprob: -6.315056324005127

Token 114: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.001980022294446826
    2. 'er' → logprob: -6.626979827880859
    3. 'e' → logprob: -7.751979827880859
    4. 'tage' → logprob: -9.62697982788086
    5. 'ages' → logprob: -10.37697982788086
    6. 'ing' → logprob: -11.00197982788086
    7. 'rage' → logprob: -11.00197982788086
    8. 'âge' → logprob: -11.25197982788086
    9. ' age' → logprob: -11.37697982788086
    10. 'pt' → logprob: -11.87697982788086

Token 115: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.52788148727268e-05
    2. 'if' → logprob: -10.500064849853516
    3. '<|end|>' → logprob: -11.000064849853516
    4. '
' → logprob: -11.625064849853516
    5. ' print' → logprob: -12.250064849853516
    6. ')' → logprob: -12.750064849853516
    7. '```' → logprob: -13.500064849853516
    8. 'else' → logprob: -13.750064849853516
    9. '#' → logprob: -14.375064849853516
    10. '#print' → logprob: -14.625064849853516

Token 116: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.0948158382670954e-05
    2. 'if' → logprob: -10.625030517578125
    3. '```' → logprob: -13.250030517578125
    4. ' print' → logprob: -13.375030517578125
    5. 'else' → logprob: -13.500030517578125
    6. '
' → logprob: -13.875030517578125
    7. ')' → logprob: -14.875030517578125
    8. '#' → logprob: -15.375030517578125
    9. '#print' → logprob: -16.125030517578125
    10. '<|end|>' → logprob: -16.250030517578125

Token 117: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.006358404643833637
    2. 'continue' → logprob: -5.131358623504639
    3. ' total' → logprob: -8.38135814666748
    4. '#' (adapté à ' #') → logprob: -9.13135814666748
    5. '   ' → logprob: -10.38135814666748
    6. '<|end|>' → logprob: -11.38135814666748
    7. '```' → logprob: -11.75635814666748
    8. 'if' → logprob: -11.88135814666748
    9. ' continue' → logprob: -12.13135814666748
    10. 'pass' → logprob: -12.13135814666748

Token 118: ' (' (ID: 350)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.08617386221885681
    2. 'continue' → logprob: -2.5861737728118896
    3. ' total' → logprob: -5.711174011230469
    4. '#' → logprob: -5.836174011230469
    5. 'pass' → logprob: -7.586174011230469
    6. ' continue' → logprob: -8.336174011230469
    7. 'found' → logprob: -9.836174011230469
    8. 'if' → logprob: -9.836174011230469
    9. 'contin' → logprob: -10.461174011230469
    10. '```' → logprob: -10.586174011230469

Token 119: 'pas' (ID: 21122)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5594680905342102
    2. 'total' → logprob: -1.8094680309295654
    3. ')' → logprob: -2.3094680309295654
    4. '#' → logprob: -3.0594680309295654
    5. 'contin' → logprob: -3.1844680309295654
    6. 'pass' → logprob: -4.0594682693481445
    7. ' continue' → logprob: -4.0594682693481445
    8. 'pas' → logprob: -4.4344682693481445
    9. ' total' → logprob: -4.6844682693481445
    10. ' )' → logprob: -5.0594682693481445

Token 120: ' de' (ID: 334)
  Prédit: 'enc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enc' → logprob: -0.27915114164352417
    2. 'd' → logprob: -1.529151201248169
    3. 'à' → logprob: -4.15415096282959
    4. 'de' → logprob: -5.65415096282959
    5. 'le' → logprob: -6.52915096282959
    6. 'pour' → logprob: -6.90415096282959
    7. ' encore' → logprob: -7.02915096282959
    8. 'total' → logprob: -7.40415096282959
    9. '#' → logprob: -7.90415096282959
    10. 'com' → logprob: -7.90415096282959

Token 121: ' break' (ID: 2338)
  Prédit: 'addition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'addition' → logprob: -0.576224148273468
    2. 'aj' → logprob: -1.4512240886688232
    3. 'total' → logprob: -2.3262240886688232
    4. 'increment' → logprob: -3.8262240886688232
    5. 'in' → logprob: -4.201224327087402
    6. 'break' → logprob: -4.576224327087402
    7. 'continu' → logprob: -4.826224327087402
    8. 'continue' → logprob: -5.076224327087402
    9. ' addition' → logprob: -5.201224327087402
    10. 's' → logprob: -5.326224327087402

Token 122: ' ici' (ID: 27994)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47628653049468994
    2. '<|end|>' → logprob: -0.9762865304946899
    3. '<|end|>' → logprob: -6.4762864112854
    4. '
' → logprob: -7.8512864112854
    5. ' )' → logprob: -8.601286888122559
    6. ')
' → logprob: -10.601286888122559
    7. '```' → logprob: -11.351286888122559
    8. ')return' → logprob: -11.476286888122559
    9. '#' → logprob: -11.726286888122559
    10. '   ' → logprob: -12.101286888122559

Token 123: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10530241578817368
    2. '<|end|>' → logprob: -2.355302333831787
    3. '
' → logprob: -5.980302333831787
    4. '<|end|>' → logprob: -6.605302333831787
    5. ' )' → logprob: -7.355302333831787
    6. ')
' → logprob: -8.230302810668945
    7. '   ' → logprob: -9.105302810668945
    8. ')return' → logprob: -10.730302810668945
    9. '\n' → logprob: -10.730302810668945
    10. '```' → logprob: -10.980302810668945

Token 124: ' c' (ID: 274)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.38770654797554016
    2. 'car' → logprob: -1.2627065181732178
    3. ' parce' → logprob: -4.262706756591797
    4. ' on' → logprob: -4.762706756591797
    5. '#' → logprob: -4.887706756591797
    6. 'on' → logprob: -5.887706756591797
    7. 'continue' → logprob: -6.512706756591797
    8. 'contin' → logprob: -7.262706756591797
    9. 'pour' → logprob: -7.262706756591797
    10. 'par' → logprob: -7.887706756591797

Token 125: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.6710108518600464
    2. '#' → logprob: -1.1710108518600464
    3. 'ar' → logprob: -2.671010971069336
    4. 'est' → logprob: -2.796010971069336
    5. 'ont' → logprob: -4.171010971069336
    6. ''' → logprob: -5.171010971069336
    7. '```' → logprob: -5.171010971069336
    8. 'e' → logprob: -5.421010971069336
    9. '’est' → logprob: -5.921010971069336
    10. 'a' → logprob: -6.546010971069336

Token 126: ' voulu' (ID: 103020)
  Prédit: 'vol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vol' → logprob: -0.8765453696250916
    2. 'important' → logprob: -1.5015454292297363
    3. 'int' → logprob: -2.2515454292297363
    4. 'normal' → logprob: -3.1265454292297363
    5. 'bien' → logprob: -3.2515454292297363
    6. 'pour' → logprob: -3.6265454292297363
    7. ' volontaire' → logprob: -3.7515454292297363
    8. 'vou' → logprob: -4.126545429229736
    9. 'v' → logprob: -4.376545429229736
    10. 'exact' → logprob: -4.626545429229736

Token 127: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001422770437784493
    2. ' )' → logprob: -9.500142097473145
    3. ')
' → logprob: -10.000142097473145
    4. '<|end|>' → logprob: -11.375142097473145
    5. 'continue' → logprob: -13.250142097473145
    6. '   ' → logprob: -13.250142097473145
    7. ')return' → logprob: -13.375142097473145
    8. '<|end|>' → logprob: -13.750142097473145
    9. ')

' → logprob: -13.875142097473145
    10. '```' → logprob: -14.250142097473145

Token 128: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.282920129597187e-05
    2. 'if' → logprob: -11.875012397766113
    3. ' print' → logprob: -12.125012397766113
    4. '```' → logprob: -15.750012397766113
    5. '#print' → logprob: -15.875012397766113
    6. '
' → logprob: -17.12501335144043
    7. '#' → logprob: -17.25001335144043
    8. '(print' → logprob: -19.50001335144043
    9. '

' → logprob: -19.62501335144043
    10. ' if' → logprob: -19.87501335144043

Token 130: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003660938236862421
    2. ' print' → logprob: -8.6253662109375
    3. 'if' → logprob: -9.1253662109375
    4. '#print' → logprob: -10.2503662109375
    5. '#' → logprob: -10.6253662109375
    6. 'aff' → logprob: -12.1253662109375
    7. 'pr' → logprob: -12.7503662109375
    8. '.print' → logprob: -13.6253662109375
    9. 'prints' → logprob: -13.7503662109375
    10. 'continue' → logprob: -13.8753662109375

Token 131: ' le' (ID: 505)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.11871451139450073
    2. 'total' → logprob: -2.3687145709991455
    3. 'print' → logprob: -4.118714332580566
    4. '(' → logprob: -6.493714332580566
    5. '(f' → logprob: -8.868714332580566
    6. '()
' → logprob: -8.993714332580566
    7. '(
' → logprob: -9.243714332580566
    8. '(print' → logprob: -9.493714332580566
    9. ' total' → logprob: -9.743714332580566
    10. '
' → logprob: -10.493714332580566

Token 132: ' résultat' (ID: 62556)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.002525957068428397
    2. ' total' → logprob: -6.752525806427002
    3. 'result' → logprob: -7.252525806427002
    4. 'print' → logprob: -7.377525806427002
    5. '(total' → logprob: -12.00252628326416
    6. 'r' → logprob: -12.37752628326416
    7. 'rés' → logprob: -12.37752628326416
    8. ' résultat' → logprob: -12.75252628326416
    9. 'final' → logprob: -13.62752628326416
    10. 's' → logprob: -13.87752628326416

Token 133: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0087516784551553e-05
    2. '
' → logprob: -12.37501049041748
    3. ' print' → logprob: -12.50001049041748
    4. '```' → logprob: -13.75001049041748
    5. 'if' → logprob: -14.00001049041748
    6. '(print' → logprob: -16.750009536743164
    7. '#print' → logprob: -17.750009536743164
    8. '``' → logprob: -17.875009536743164
    9. '
' → logprob: -18.250009536743164
    10. ')
' → logprob: -18.625009536743164

Token 134: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.125
    3. ' print' → logprob: -18.0
    4. 'if' → logprob: -19.875
    5. '#print' → logprob: -22.125
    6. '
' → logprob: -22.375
    7. '``' → logprob: -23.625
    8. 'prin' → logprob: -24.0
    9. '(print' → logprob: -24.5
    10. 'pr' → logprob: -24.75

Token 135: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0009137284359894693
    2. '(' → logprob: -7.000913619995117
    3. 'total' → logprob: -13.500913619995117
    4. '(t' → logprob: -15.250913619995117
    5. ' (' → logprob: -15.375913619995117
    6. '(max' → logprob: -16.000913619995117
    7. '('' → logprob: -16.000913619995117
    8. '((' → logprob: -16.625913619995117
    9. '(sum' → logprob: -16.875913619995117
    10. '()' → logprob: -17.000913619995117

Token 136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.375000953674316
    3. '))' → logprob: -15.500000953674316
    4. ')`' → logprob: -16.75
    5. '()' → logprob: -18.875
    6. '+' → logprob: -19.25
    7. '())' → logprob: -19.375
    8. ')#' → logprob: -19.375
    9. '')' → logprob: -19.5
    10. '#' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 134
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 72
Précision stricte (1ère position): 26.87%
Précision adaptée (1ère position): 29.10%
Précision (top 10): 53.73%
================================================================================
