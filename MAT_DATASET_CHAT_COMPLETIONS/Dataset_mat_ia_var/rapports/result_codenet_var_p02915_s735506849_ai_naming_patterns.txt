================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def read_line_input():
    return sys.stdin.readline().strip()

def read_int_list():
    return list(map(int, read_line_input().split()))

def read_ints():
    return map(int, read_line_input().split())

def read_single_int():
    return int(read_line_input())

input_value = read_single_int()
output_value = pow(input_value, 3)
print(output_value)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27202650904655457
    2. ' process' → logprob: -2.647026538848877
    3. ' read' → logprob: -3.022026538848877
    4. ' space' → logprob: -3.397026538848877
    5. ' main' → logprob: -3.772026538848877
    6. ' calculate' → logprob: -4.772026538848877
    7. ' my' → logprob: -5.022026538848877
    8. ' sys' → logprob: -5.272026538848877
    9. ' ' → logprob: -5.522026538848877
    10. ' def' → logprob: -5.772026538848877

Token 5: '_line' (ID: 14418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6350120306015015
    2. '_' → logprob: -0.7600120306015015
    3. '_line' → logprob: -7.135012149810791
    4. ' (' → logprob: -7.760012149810791
    5. '():' → logprob: -8.885011672973633
    6. '_data' → logprob: -8.885011672973633
    7. '```' → logprob: -9.135011672973633
    8. '_input' → logprob: -9.260011672973633
    9. '_:' → logprob: -9.385011672973633
    10. '_file' → logprob: -9.385011672973633

Token 6: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5249185562133789
    2. '():' → logprob: -0.8999185562133789
    3. '()' → logprob: -7.524918556213379
    4. '_' → logprob: -8.024918556213379
    5. ':' → logprob: -8.399918556213379
    6. 's' → logprob: -8.649918556213379
    7. ' ():' → logprob: -9.024918556213379
    8. '(:' → logprob: -9.024918556213379
    9. ' (' → logprob: -10.149918556213379
    10. '(line' → logprob: -10.274918556213379

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0035573046188801527
    2. '():' → logprob: -6.003557205200195
    3. '_' → logprob: -8.128557205200195
    4. 's' → logprob: -8.503557205200195
    5. '(:' → logprob: -8.753557205200195
    6. ':' → logprob: -9.503557205200195
    7. '(_:' → logprob: -9.878557205200195
    8. ' (' → logprob: -10.253557205200195
    9. '("("' → logprob: -10.253557205200195
    10. '```' → logprob: -10.253557205200195

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011217580176889896
    2. ' return' → logprob: -5.6362175941467285
    3. 'return' → logprob: -5.8862175941467285
    4. '(' → logprob: -6.1362175941467285
    5. ':' → logprob: -7.6362175941467285
    6. '():' → logprob: -7.6362175941467285
    7. '(return' → logprob: -7.7612175941467285
    8. '\' → logprob: -8.76121711730957
    9. ' ' → logprob: -8.76121711730957
    10. ':return' → logprob: -8.88621711730957

Token 9: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7484521269798279
    2. ' return' → logprob: -1.1234521865844727
    3. 'return' (adapté à ' return') → logprob: -1.7484521865844727
    4. '    ' → logprob: -4.248452186584473
    5. ' line' → logprob: -5.248452186584473
    6. ' ' → logprob: -5.498452186584473
    7. ' readline' → logprob: -7.248452186584473
    8. 'input' → logprob: -7.373452186584473
    9. ' input' → logprob: -7.873452186584473
    10. '  ' → logprob: -7.998452186584473

Token 10: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.023572714999318123
    2. ' input' → logprob: -4.14857292175293
    3. 'sys' → logprob: -5.14857292175293
    4. 'input' → logprob: -6.52357292175293
    5. ' ' → logprob: -8.39857292175293
    6. ' ' → logprob: -12.27357292175293
    7. '(sys' → logprob: -13.52357292175293
    8. ' None' → logprob: -14.52357292175293
    9. '	sys' → logprob: -14.52357292175293
    10. '=sys' → logprob: -14.64857292175293

Token 11: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.5806472301483154
    2. '.' → logprob: -0.8306472301483154
    3. '.stdout' → logprob: -6.0806474685668945
    4. '.argv' → logprob: -6.4556474685668945
    5. '.readline' → logprob: -7.4556474685668945
    6. '.std' → logprob: -9.205647468566895
    7. ' .' → logprob: -9.330647468566895
    8. '.input' → logprob: -10.580647468566895
    9. '.stderr' → logprob: -11.205647468566895
    10. '.exit' → logprob: -11.705647468566895

Token 12: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.068382129073143
    2. '.' → logprob: -2.9433820247650146
    3. '.read' → logprob: -4.318382263183594
    4. '.readlines' → logprob: -10.068382263183594
    5. '.Read' → logprob: -10.818382263183594
    6. ' .' → logprob: -11.193382263183594
    7. ' readline' → logprob: -12.943382263183594
    8. '.write' → logprob: -12.943382263183594
    9. 'read' → logprob: -13.068382263183594
    10. '.READ' → logprob: -13.318382263183594

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004582734312862158
    2. '().' → logprob: -5.50458288192749
    3. ' ()' → logprob: -8.379582405090332
    4. '(' → logprob: -9.004582405090332
    5. '()(' → logprob: -9.254582405090332
    6. '`()' → logprob: -11.004582405090332
    7. '()
' → logprob: -11.629582405090332
    8. '()`' → logprob: -12.254582405090332
    9. '```' → logprob: -12.629582405090332
    10. '()\' → logprob: -12.754582405090332

Token 14: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.014165983535349369
    2. 'rstrip' → logprob: -4.264165878295898
    3. ' strip' → logprob: -13.514165878295898
    4. '```' → logprob: -14.389165878295898
    5. 'decode' → logprob: -15.014165878295898
    6. 'replace' → logprob: -16.0141658782959
    7. '_strip' → logprob: -16.3891658782959
    8. 'str' → logprob: -17.1391658782959
    9. '(strip' → logprob: -17.5141658782959
    10. 'rst' → logprob: -17.6391658782959

Token 15: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3486342132091522
    2. '(' → logprob: -1.2236342430114746
    3. '(
' → logprob: -9.723633766174316
    4. '(

' → logprob: -10.723633766174316
    5. '()(' → logprob: -10.848633766174316
    6. '(\' → logprob: -11.348633766174316
    7. '`()' → logprob: -11.348633766174316
    8. '```' → logprob: -12.098633766174316
    9. '(`' → logprob: -12.098633766174316
    10. ' ()' → logprob: -12.223633766174316

Token 16: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9694775342941284
    2. '#' → logprob: -1.2194775342941284
    3. '
' → logprob: -2.344477653503418
    4. '(' → logprob: -2.469477653503418
    5. '\' → logprob: -3.094477653503418
    6. '```' → logprob: -3.469477653503418
    7. '<|end|>' → logprob: -4.219477653503418
    8. '' → logprob: -4.219477653503418
    9. 'def' → logprob: -4.344477653503418
    10. '()' → logprob: -5.469477653503418

Token 17: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.783659815788269
    2. ' read' → logprob: -1.658659815788269
    3. ' write' → logprob: -1.658659815788269
    4. ' calculate' → logprob: -2.4086599349975586
    5. ' process' → logprob: -3.4086599349975586
    6. ' add' → logprob: -4.908659934997559
    7. ' parse' → logprob: -5.033659934997559
    8. ' ' → logprob: -5.783659934997559
    9. ' space' → logprob: -5.783659934997559
    10. ' print' → logprob: -5.908659934997559

Token 18: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.556278645992279
    2. '_line' → logprob: -1.1812787055969238
    3. '_' → logprob: -2.431278705596924
    4. '_integer' → logprob: -4.056278705596924
    5. '_input' → logprob: -5.431278705596924
    6. '_word' → logprob: -6.306278705596924
    7. '_token' → logprob: -6.681278705596924
    8. '_string' → logprob: -6.806278705596924
    9. 'int' → logprob: -6.931278705596924
    10. '_number' → logprob: -7.056278705596924

Token 19: '_list' (ID: 4162)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.028263511136174202
    2. '(' → logprob: -3.903263568878174
    3. 's' → logprob: -6.153263568878174
    4. '_' → logprob: -6.528263568878174
    5. '():' → logprob: -6.778263568878174
    6. ' ()' → logprob: -7.403263568878174
    7. ']()' → logprob: -8.528263092041016
    8. '```' → logprob: -8.528263092041016
    9. '（）' → logprob: -8.903263092041016
    10. '[]' → logprob: -8.903263092041016

Token 20: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0820002481341362
    2. '():' → logprob: -2.832000255584717
    3. '(' → logprob: -3.957000255584717
    4. ' ()' → logprob: -8.831999778747559
    5. '()">' → logprob: -9.331999778747559
    6. '()>' → logprob: -9.581999778747559
    7. '():
' → logprob: -10.081999778747559
    8. '():

' → logprob: -10.206999778747559
    9. '（）' → logprob: -10.706999778747559
    10. '()<<' → logprob: -10.831999778747559

Token 21: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1169213354587555
    2. '   ' → logprob: -2.7419214248657227
    3. '(' → logprob: -4.116921424865723
    4. ' ()' → logprob: -4.116921424865723
    5. '():' → logprob: -4.741921424865723
    6. '[]' → logprob: -6.241921424865723
    7. '    ' → logprob: -6.991921424865723
    8. ' return' → logprob: -7.991921424865723
    9. '[:]' → logprob: -8.366921424865723
    10. ' (' → logprob: -8.616921424865723

Token 22: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.265500009059906
    2. ' list' → logprob: -2.015500068664551
    3. ' map' → logprob: -2.640500068664551
    4. '   ' → logprob: -4.265500068664551
    5. 'return' (adapté à ' return') → logprob: -4.390500068664551
    6. 'list' → logprob: -6.765500068664551
    7. 'map' → logprob: -7.515500068664551
    8. ' ' → logprob: -8.64050006866455
    9. '    ' → logprob: -10.01550006866455
    10. ' int' → logprob: -10.14050006866455

Token 23: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.0143885537981987
    2. 'list' → logprob: -4.264388561248779
    3. '[list' → logprob: -8.889388084411621
    4. ' [' → logprob: -10.139388084411621
    5. '[' → logprob: -10.139388084411621
    6. ' ' → logprob: -12.014388084411621
    7. ' map' → logprob: -14.639388084411621
    8. ' ' → logprob: -14.764388084411621
    9. '(list' → logprob: -14.764388084411621
    10. '  ' → logprob: -15.139388084411621

Token 24: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10106471925973892
    2. '(map' → logprob: -2.351064682006836
    3. '(int' → logprob: -7.226064682006836
    4. '(sys' → logprob: -9.351064682006836
    5. '(

' → logprob: -11.476064682006836
    6. '(eval' → logprob: -11.476064682006836
    7. '(
' → logprob: -12.226064682006836
    8. '(s' → logprob: -12.976064682006836
    9. '(range' → logprob: -13.101064682006836
    10. '("("' → logprob: -13.101064682006836

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008641989901661873
    2. '(' → logprob: -4.758642196655273
    3. 'int' → logprob: -11.133642196655273
    4. '(
' → logprob: -11.883642196655273
    5. '<int' → logprob: -12.508642196655273
    6. ' int' → logprob: -14.383642196655273
    7. '=int' → logprob: -14.633642196655273
    8. '```' → logprob: -14.883642196655273
    9. ',int' → logprob: -15.633642196655273
    10. '[int' → logprob: -15.883642196655273

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2971634864807129
    2. '(sys' → logprob: -1.422163486480713
    3. '(' → logprob: -4.422163486480713
    4. ' ,' → logprob: -6.172163486480713
    5. ',input' → logprob: -7.422163486480713
    6. '(read' → logprob: -8.172163009643555
    7. '=sys' → logprob: -8.547163009643555
    8. ' (' → logprob: -8.797163009643555
    9. 'sys' → logprob: -8.922163009643555
    10. '(input' → logprob: -9.172163009643555

Token 27: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.4083685278892517
    2. 'read' → logprob: -1.2833685874938965
    3. ' sys' → logprob: -3.4083685874938965
    4. ' input' → logprob: -4.5333685874938965
    5. 'sys' → logprob: -4.5333685874938965
    6. 'input' → logprob: -6.0333685874938965
    7. ' readline' → logprob: -7.1583685874938965
    8. ')' → logprob: -8.908368110656738
    9. '	read' → logprob: -9.533368110656738
    10. '(read' → logprob: -9.908368110656738

Token 28: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.375000953674316
    3. '_LINE' → logprob: -15.375000953674316
    4. '_word' → logprob: -16.625
    5. '_lin' → logprob: -17.0
    6. '_l' → logprob: -17.125
    7. '_Line' → logprob: -17.625
    8. ')_' → logprob: -18.375
    9. 'line' → logprob: -18.375
    10. '_int' → logprob: -18.625

Token 29: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.1279553291387856e-05
    2. 'put' → logprob: -11.875011444091797
    3. 'input' → logprob: -13.250011444091797
    4. '_put' → logprob: -14.125011444091797
    5. '_in' → logprob: -14.750011444091797
    6. '_inputs' → logprob: -14.875011444091797
    7. '_' → logprob: -15.375011444091797
    8. '()' → logprob: -15.750011444091797
    9. '_output' → logprob: -15.875011444091797
    10. '```' → logprob: -16.125011444091797

Token 30: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.058973461389541626
    2. '()' → logprob: -3.433973550796509
    3. '())' → logprob: -4.43397331237793
    4. '))' → logprob: -4.55897331237793
    5. '())))' → logprob: -6.68397331237793
    6. ')' → logprob: -7.68397331237793
    7. '().' → logprob: -7.80897331237793
    8. '()));' → logprob: -8.18397331237793
    9. ')))' → logprob: -8.80897331237793
    10. '()))
' → logprob: -10.30897331237793

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.73446003627032e-05
    2. 'strip' → logprob: -9.250097274780273
    3. 'rstrip' → logprob: -14.250097274780273
    4. ' split' → logprob: -14.750097274780273
    5. '(split' → logprob: -16.125097274780273
    6. ')' → logprob: -16.250097274780273
    7. 's' → logprob: -17.500097274780273
    8. 'spl' → logprob: -18.250097274780273
    9. '```' → logprob: -19.375097274780273
    10. ' ' → logprob: -19.375097274780273

Token 32: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7052724957466125
    2. '()))' → logprob: -0.7052724957466125
    3. '()' → logprob: -4.955272674560547
    4. '())' → logprob: -5.955272674560547
    5. ')' → logprob: -6.580272674560547
    6. ')))' → logprob: -7.580272674560547
    7. '(' → logprob: -7.705272674560547
    8. '())))' → logprob: -10.080272674560547
    9. '()))
' → logprob: -11.205272674560547
    10. ' ))' → logprob: -13.080272674560547

Token 33: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4923012852668762
    2. 'd' → logprob: -1.4923012256622314
    3. 'n' → logprob: -2.4923012256622314
    4. '#' → logprob: -2.6173012256622314
    5. 'a' → logprob: -6.3673014640808105
    6. '\' → logprob: -6.4923014640808105
    7. '
' → logprob: -6.8673014640808105
    8. '```' → logprob: -6.8673014640808105
    9. '\n' → logprob: -7.4923014640808105
    10. 'de' → logprob: -7.9923014640808105

Token 34: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.1705390065908432
    2. ' main' → logprob: -2.045538902282715
    3. 'read' → logprob: -4.670538902282715
    4. ' solve' → logprob: -5.045538902282715
    5. ' write' → logprob: -5.295538902282715
    6. ' factorial' → logprob: -6.170538902282715
    7. ' count' → logprob: -6.670538902282715
    8. ' process' → logprob: -7.670538902282715
    9. ' calculate' → logprob: -7.795538902282715
    10. ' find' → logprob: -7.920538902282715

Token 35: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.015988850966095924
    2. '_line' → logprob: -4.765988826751709
    3. '_' → logprob: -5.015988826751709
    4. '_string' → logprob: -8.265989303588867
    5. '_str' → logprob: -8.890989303588867
    6. '_float' → logprob: -9.140989303588867
    7. '_uint' → logprob: -10.390989303588867
    8. '_single' → logprob: -10.515989303588867
    9. '_integer' → logprob: -10.765989303588867
    10. '_char' → logprob: -11.015989303588867

Token 36: 's' (ID: 82)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002342469524592161
    2. '<|end|>' → logprob: -6.377342700958252
    3. ' ()' → logprob: -9.127342224121094
    4. '()">' → logprob: -9.627342224121094
    5. '()>' → logprob: -9.752342224121094
    6. '_' → logprob: -10.002342224121094
    7. '()<' → logprob: -10.002342224121094
    8. '(' → logprob: -10.127342224121094
    9. '())' → logprob: -10.252342224121094
    10. '():' → logprob: -10.252342224121094

Token 37: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0015260485233739018
    2. '()' → logprob: -6.62652587890625
    3. '(' → logprob: -9.12652587890625
    4. '():
' → logprob: -9.87652587890625
    5. ' ():' → logprob: -10.87652587890625
    6. '()*' → logprob: -12.25152587890625
    7. ' ()' → logprob: -12.50152587890625
    8. '()(' → logprob: -12.75152587890625
    9. '()>' → logprob: -12.87652587890625
    10. '()">' → logprob: -13.12652587890625

Token 38: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00018935515254270285
    2. ' ():' → logprob: -9.375189781188965
    3. '()' → logprob: -10.000189781188965
    4. '(' → logprob: -10.250189781188965
    5. '():
' → logprob: -11.500189781188965
    6. ':' → logprob: -11.875189781188965
    7. ' :' → logprob: -13.625189781188965
    8. '):' → logprob: -13.625189781188965
    9. '()*' → logprob: -13.625189781188965
    10. '   ' → logprob: -14.375189781188965

Token 39: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21584726870059967
    2. 'return' (adapté à ' return') → logprob: -1.7158472537994385
    3. ' ' → logprob: -5.090847492218018
    4. '   ' → logprob: -5.340847492218018
    5. '():' → logprob: -6.590847492218018
    6. '    ' → logprob: -7.215847492218018
    7. ' :' → logprob: -8.21584701538086
    8. '  ' → logprob: -8.34084701538086
    9. ' ()' → logprob: -8.84084701538086
    10. '(' → logprob: -9.09084701538086

Token 40: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4087841212749481
    2. ' list' → logprob: -1.1587841510772705
    3. 'map' → logprob: -4.533783912658691
    4. 'list' → logprob: -4.783783912658691
    5. ' tuple' → logprob: -6.158783912658691
    6. ' read' → logprob: -8.408783912658691
    7. ' int' → logprob: -9.783783912658691
    8. ' ' → logprob: -9.908783912658691
    9. '(map' → logprob: -10.283783912658691
    10. 'tuple' → logprob: -10.908783912658691

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002478985348716378
    2. '(' → logprob: -6.002479076385498
    3. '<int' → logprob: -13.25247859954834
    4. '(
' → logprob: -14.62747859954834
    5. '(lambda' → logprob: -15.12747859954834
    6. 'int' → logprob: -15.50247859954834
    7. ' (' → logprob: -15.50247859954834
    8. '(str' → logprob: -16.377479553222656
    9. '=int' → logprob: -16.502479553222656
    10. '[int' → logprob: -16.752479553222656

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12899361550807953
    2. '(read' → logprob: -2.128993511199951
    3. 'read' → logprob: -6.503993511199951
    4. ')' → logprob: -8.25399398803711
    5. '(' → logprob: -8.62899398803711
    6. ' ,' → logprob: -9.75399398803711
    7. '(sys' → logprob: -10.25399398803711
    8. ' read' → logprob: -11.37899398803711
    9. ',(' → logprob: -12.25399398803711
    10. ' (' → logprob: -12.50399398803711

Token 43: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.20146577060222626
    2. 'read' → logprob: -1.7014657258987427
    3. ' sys' → logprob: -11.326465606689453
    4. '(read' → logprob: -11.451465606689453
    5. '	read' → logprob: -11.701465606689453
    6. ')' → logprob: -11.826465606689453
    7. ' readline' → logprob: -12.076465606689453
    8. ' ' → logprob: -12.451465606689453
    9. ' )' → logprob: -13.326465606689453
    10. '  ' → logprob: -13.451465606689453

Token 44: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0001085497424355708
    2. 's' → logprob: -9.87510871887207
    3. '_' → logprob: -10.12510871887207
    4. '_int' → logprob: -11.50010871887207
    5. '_s' → logprob: -12.62510871887207
    6. 'line' → logprob: -13.75010871887207
    7. '_lines' → logprob: -14.00010871887207
    8. '_input' → logprob: -15.12510871887207
    9. '_LINE' → logprob: -15.25010871887207
    10. '_l' → logprob: -15.87510871887207

Token 45: '_input' (ID: 12507)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15737378597259521
    2. '_input' → logprob: -2.5323739051818848
    3. '_s' → logprob: -2.9073739051818848
    4. '_' → logprob: -4.532373905181885
    5. '_inputs' → logprob: -8.157373428344727
    6. '_line' → logprob: -9.282373428344727
    7. '_chars' → logprob: -9.282373428344727
    8. ')' → logprob: -9.782373428344727
    9. '_)' → logprob: -10.032373428344727
    10. '_int' → logprob: -10.157373428344727

Token 46: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06376920640468597
    2. '()' → logprob: -2.8137691020965576
    3. '()))' → logprob: -6.688769340515137
    4. ')' → logprob: -7.813769340515137
    5. '().' → logprob: -9.938769340515137
    6. '()]' → logprob: -10.563769340515137
    7. '())
' → logprob: -10.938769340515137
    8. ' ())' → logprob: -11.563769340515137
    9. '()
' → logprob: -11.688769340515137
    10. '`()' → logprob: -12.063769340515137

Token 47: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005023968406021595
    2. 'strip' → logprob: -7.750502586364746
    3. ')' → logprob: -9.625502586364746
    4. 'rstrip' → logprob: -12.750502586364746
    5. '))' → logprob: -13.250502586364746
    6. ' split' → logprob: -14.750502586364746
    7. 'spl' → logprob: -15.625502586364746
    8. 's' → logprob: -16.37550163269043
    9. ')))' → logprob: -16.50050163269043
    10. '_split' → logprob: -17.00050163269043

Token 48: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.18551239371299744
    2. ')' → logprob: -1.9355124235153198
    3. '()' → logprob: -4.435512542724609
    4. '()))' → logprob: -4.810512542724609
    5. '))' → logprob: -5.310512542724609
    6. '(' → logprob: -11.06051254272461
    7. '())
' → logprob: -11.56051254272461
    8. ' ())' → logprob: -12.31051254272461
    9. '()),' → logprob: -13.68551254272461
    10. ')))' → logprob: -13.68551254272461

Token 49: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14399603009223938
    2. 'd' → logprob: -3.018996000289917
    3. '
' → logprob: -3.393996000289917
    4. '#' → logprob: -4.018996238708496
    5. 'n' → logprob: -4.518996238708496
    6. '\n' → logprob: -4.518996238708496
    7. '\' → logprob: -4.768996238708496
    8. 'class' → logprob: -7.393996238708496
    9. '```' → logprob: -7.643996238708496
    10. '

' → logprob: -7.768996238708496

Token 50: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.6192754507064819
    2. ' main' → logprob: -0.8692754507064819
    3. ' write' → logprob: -4.1192755699157715
    4. ' solve' → logprob: -4.6192755699157715
    5. '_' → logprob: -5.2442755699157715
    6. ' factorial' → logprob: -6.2442755699157715
    7. ' calculate' → logprob: -6.8692755699157715
    8. '_main' → logprob: -6.9942755699157715
    9. 'read' → logprob: -7.2442755699157715
    10. '_write' → logprob: -7.3692755699157715

Token 51: '_single' (ID: 46053)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.232564315199852
    2. '_line' → logprob: -1.6075643301010132
    3. '_int' → logprob: -5.107564449310303
    4. '_string' → logprob: -7.857564449310303
    5. '_str' → logprob: -9.357563972473145
    6. '(' → logprob: -9.482563972473145
    7. ' _' → logprob: -9.607563972473145
    8. '_char' → logprob: -9.732563972473145
    9. '_input' → logprob: -10.232563972473145
    10. '_byte' → logprob: -10.232563972473145

Token 52: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.7731552720069885
    2. '_line' → logprob: -0.8981552720069885
    3. '_' → logprob: -2.8981552124023438
    4. '_word' → logprob: -3.0231552124023438
    5. '_input' → logprob: -4.148155212402344
    6. '_char' → logprob: -5.273155212402344
    7. '_token' → logprob: -5.773155212402344
    8. '_integer' → logprob: -6.523155212402344
    9. 'ton' → logprob: -8.023155212402344
    10. '_value' → logprob: -8.148155212402344

Token 53: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00015407454338856041
    2. '()' → logprob: -8.875154495239258
    3. '():
' → logprob: -12.000154495239258
    4. ' ():' → logprob: -12.500154495239258
    5. '_' → logprob: -14.000154495239258
    6. '():
' → logprob: -14.500154495239258
    7. '()>' → logprob: -14.625154495239258
    8. '()*' → logprob: -15.125154495239258
    9. '()(' → logprob: -15.375154495239258
    10. '()]' → logprob: -15.375154495239258

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04225119203329086
    2. '    ' → logprob: -4.167251110076904
    3. ' return' → logprob: -4.292251110076904
    4. ' ' → logprob: -5.667251110076904
    5. '  ' → logprob: -6.042251110076904
    6. ' :' → logprob: -6.292251110076904
    7. '():' → logprob: -6.542251110076904
    8. '(' → logprob: -6.667251110076904
    9. 'return' → logprob: -7.667251110076904
    10. '()' → logprob: -8.292251586914062

Token 55: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.007923518307507038
    2. 'return' (adapté à ' return') → logprob: -4.882923603057861
    3. ' ' → logprob: -8.257923126220703
    4. ' read' → logprob: -10.632923126220703
    5. ' int' → logprob: -11.132923126220703
    6. '    ' → logprob: -12.257923126220703
    7. ' 
' → logprob: -12.632923126220703
    8. ' ' → logprob: -12.757923126220703
    9. '   ' → logprob: -12.882923126220703
    10. 'int' → logprob: -13.132923126220703

Token 56: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0010800872696563601
    2. 'int' → logprob: -6.87608003616333
    3. ' ' → logprob: -10.126080513000488
    4. ' read' → logprob: -12.376080513000488
    5. ' in' → logprob: -13.251080513000488
    6. '(int' → logprob: -15.376080513000488
    7. ' space' → logprob: -15.501080513000488
    8. ' ' → logprob: -15.626080513000488
    9. ' map' → logprob: -15.751080513000488
    10. '  ' → logprob: -16.126079559326172

Token 57: '(read' (ID: 45738)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02643185295164585
    2. '(read' → logprob: -3.6514317989349365
    3. '('' → logprob: -10.401432037353516
    4. ' (' → logprob: -10.776432037353516
    5. '(
' → logprob: -11.026432037353516
    6. '(sys' → logprob: -11.276432037353516
    7. '(space' → logprob: -11.651432037353516
    8. 'read' → logprob: -11.776432037353516
    9. '()' → logprob: -12.151432037353516
    10. '(s' → logprob: -12.776432037353516

Token 58: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.6943212747573853
    2. '_single' → logprob: -0.6943212747573853
    3. '_' → logprob: -6.819321155548096
    4. 'single' → logprob: -10.444321632385254
    5. 'line' → logprob: -10.694321632385254
    6. '```' → logprob: -11.569321632385254
    7. '_s' → logprob: -12.569321632385254
    8. 'Single' → logprob: -12.944321632385254
    9. '_SINGLE' → logprob: -13.194321632385254
    10. '_LINE' → logprob: -13.819321632385254

Token 59: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.05578339099884033
    2. '_line' → logprob: -2.930783271789551
    3. '_single' → logprob: -7.055783271789551
    4. '_' → logprob: -11.93078327178955
    5. 'input' → logprob: -12.18078327178955
    6. '_in' → logprob: -12.43078327178955
    7. '```' → logprob: -12.43078327178955
    8. 'line' → logprob: -12.68078327178955
    9. '(_' → logprob: -12.80578327178955
    10. '_put' → logprob: -13.05578327178955

Token 60: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001183204003609717
    2. '()' → logprob: -6.751183032989502
    3. ')' → logprob: -11.87618350982666
    4. '()))' → logprob: -12.50118350982666
    5. '())
' → logprob: -13.87618350982666
    6. ' ())' → logprob: -14.00118350982666
    7. '();)' → logprob: -15.37618350982666
    8. '()]' → logprob: -16.376182556152344
    9. '().' → logprob: -16.626182556152344
    10. '())

' → logprob: -16.751182556152344

Token 61: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19125619530677795
    2. '#' → logprob: -2.316256284713745
    3. '
' → logprob: -3.066256284713745
    4. 'd' → logprob: -3.941256284713745
    5. '' → logprob: -6.316256046295166
    6. '\' → logprob: -6.441256046295166
    7. '

' → logprob: -6.691256046295166
    8. '```' → logprob: -6.816256046295166
    9. '<|end|>' → logprob: -7.191256046295166
    10. '\n' → logprob: -7.566256046295166

Token 62: '_value' (ID: 6734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35124659538269043
    2. '()' → logprob: -1.2262465953826904
    3. '_' → logprob: -6.2262468338012695
    4. '('' → logprob: -8.10124683380127
    5. '("")' → logprob: -8.22624683380127
    6. '_parent' → logprob: -9.72624683380127
    7. '("("' → logprob: -10.10124683380127
    8. '("' → logprob: -10.97624683380127
    9. '(
' → logprob: -11.22624683380127
    10. '_data' → logprob: -11.60124683380127

Token 63: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2703073024749756
    2. '_' → logprob: -2.2703073024749756
    3. 's' → logprob: -2.7703073024749756
    4. '(' → logprob: -2.8953073024749756
    5. ' =' → logprob: -4.645307540893555
    6. '=' → logprob: -5.645307540893555
    7. '_s' → logprob: -6.520307540893555
    8. '_parent' → logprob: -8.520307540893555
    9. ' ()' → logprob: -8.770307540893555
    10. ')' → logprob: -8.895307540893555

Token 64: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.3485546410083771
    2. 'read' → logprob: -1.2235546112060547
    3. ' input' → logprob: -9.723554611206055
    4. 'input' → logprob: -10.223554611206055
    5. ' ' → logprob: -11.973554611206055
    6. '	read' → logprob: -13.348554611206055
    7. '(read' → logprob: -13.473554611206055
    8. ' sys' → logprob: -13.848554611206055
    9. ' readline' → logprob: -14.348554611206055
    10. '.read' → logprob: -14.723554611206055

Token 65: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.15680590271949768
    2. '_' → logprob: -2.156805992126465
    3. '_line' → logprob: -3.531805992126465
    4. '_int' → logprob: -9.781805992126465
    5. '_s' → logprob: -9.906805992126465
    6. '__' → logprob: -10.406805992126465
    7. ' _' → logprob: -11.406805992126465
    8. '_input' → logprob: -12.156805992126465
    9. '___' → logprob: -12.156805992126465
    10. '_SINGLE' → logprob: -12.656805992126465

Token 66: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.28509506583213806
    2. '_' → logprob: -1.4100950956344604
    3. '_line' → logprob: -7.41009521484375
    4. ' _' → logprob: -7.41009521484375
    5. '_val' → logprob: -7.41009521484375
    6. '_input' → logprob: -7.91009521484375
    7. '_token' → logprob: -8.03509521484375
    8. '_value' → logprob: -8.16009521484375
    9. 'int' → logprob: -8.16009521484375
    10. '_t' → logprob: -8.28509521484375

Token 67: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.8219583075260743e-05
    2. '(' → logprob: -10.250038146972656
    3. '()
' → logprob: -13.625038146972656
    4. ' ()' → logprob: -14.375038146972656
    5. '()

' → logprob: -15.000038146972656
    6. '()`' → logprob: -15.875038146972656
    7. '()]' → logprob: -16.250038146972656
    8. '();' → logprob: -16.250038146972656
    9. '()<' → logprob: -16.250038146972656
    10. '()\' → logprob: -16.625038146972656

Token 68: 'output' (ID: 6130)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13477900624275208
    2. '(' → logprob: -2.1347789764404297
    3. '_value' → logprob: -5.25977897644043
    4. '_val' → logprob: -7.38477897644043
    5. '(_)' → logprob: -7.75977897644043
    6. ' =' → logprob: -8.50977897644043
    7. '"' → logprob: -8.75977897644043
    8. '()' → logprob: -9.25977897644043
    9. '("_' → logprob: -9.25977897644043
    10. '```' → logprob: -9.38477897644043

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14570659399032593
    2. '=' → logprob: -2.1457066535949707
    3. ' ' → logprob: -4.145706653594971
    4. '(' → logprob: -6.270706653594971
    5. '_' → logprob: -8.020706176757812
    6. '<|end|>' → logprob: -8.645706176757812
    7. ' +=' → logprob: -9.270706176757812
    8. ')' → logprob: -9.645706176757812
    9. '+' → logprob: -9.895706176757812
    10. '()' → logprob: -10.395706176757812

Token 71: ' pow' (ID: 9779)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06999845802783966
    2. 'input' → logprob: -2.6949985027313232
    3. ' ' → logprob: -10.694998741149902
    4. ' factorial' → logprob: -11.694998741149902
    5. ' output' → logprob: -12.069998741149902
    6. ' str' → logprob: -12.069998741149902
    7. '(input' → logprob: -12.444998741149902
    8. 'output' → logprob: -12.819998741149902
    9. ' f' → logprob: -13.319998741149902
    10. 'factor' → logprob: -13.694998741149902

Token 72: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08947426825761795
    2. '(input' → logprob: -2.4644742012023926
    3. '(output' → logprob: -7.714474201202393
    4. '(
' → logprob: -10.21447467803955
    5. ' (' → logprob: -10.33947467803955
    6. '(x' → logprob: -12.58947467803955
    7. '(s' → logprob: -12.83947467803955
    8. 's' → logprob: -12.96447467803955
    9. 'input' → logprob: -13.21447467803955
    10. '(base' → logprob: -13.33947467803955

Token 73: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00019710339256562293
    2. '_' → logprob: -8.625197410583496
    3. '_val' → logprob: -11.125197410583496
    4. ' _' → logprob: -14.125197410583496
    5. ')' → logprob: -14.500197410583496
    6. ')_' → logprob: -14.625197410583496
    7. '_,' → logprob: -15.375197410583496
    8. '_v' → logprob: -15.750197410583496
    9. 'value' → logprob: -15.750197410583496
    10. '```' → logprob: -16.00019645690918

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005473994184285402
    2. ' ,' → logprob: -5.255474090576172
    3. '2' → logprob: -9.255474090576172
    4. '(' → logprob: -9.505474090576172
    5. ' ' → logprob: -10.505474090576172
    6. ')' → logprob: -10.630474090576172
    7. '3' → logprob: -12.255474090576172
    8. '1' → logprob: -13.005474090576172
    9. ',
' → logprob: -13.005474090576172
    10. ' (' → logprob: -14.130474090576172

Token 75: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.39842283725738525
    2. '3' → logprob: -1.1484228372573853
    3. ' ' → logprob: -4.648422718048096
    4. '5' → logprob: -7.273422718048096
    5. '4' → logprob: -8.023423194885254
    6. '7' → logprob: -8.398423194885254
    7. '0' → logprob: -8.648423194885254
    8. '1' → logprob: -9.273423194885254
    9. '6' → logprob: -9.273423194885254
    10. '9' → logprob: -9.398423194885254

Token 76: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3523455858230591
    2. '2' → logprob: -1.227345585823059
    3. '5' → logprob: -6.3523454666137695
    4. '4' → logprob: -7.4773454666137695
    5. '7' → logprob: -7.4773454666137695
    6. '6' → logprob: -7.6023454666137695
    7. '9' → logprob: -9.22734546661377
    8. '0' → logprob: -9.47734546661377
    9. ' ' → logprob: -9.47734546661377
    10. 'input' → logprob: -9.72734546661377

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. ',' → logprob: -12.500008583068848
    3. ')
' → logprob: -13.250008583068848
    4. ' )' → logprob: -13.625008583068848
    5. '}' → logprob: -14.125008583068848
    6. '))' → logprob: -15.125008583068848
    7. '),' → logprob: -16.250009536743164
    8. ')}' → logprob: -16.250009536743164
    9. ')**' → logprob: -16.500009536743164
    10. ')#' → logprob: -16.750009536743164

Token 78: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004376597702503204
    2. '<|end|>' → logprob: -5.629376411437988
    3. '\n' → logprob: -7.879376411437988
    4. '
' → logprob: -8.754376411437988
    5. ' print' → logprob: -9.504376411437988
    6. ')' → logprob: -9.754376411437988
    7. '#' → logprob: -10.129376411437988
    8. '```' → logprob: -10.754376411437988
    9. '#print' → logprob: -11.254376411437988
    10. 'prin' → logprob: -12.254376411437988

Token 79: '(output' (ID: 22485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038061462342739105
    2. '(output' → logprob: -3.2880613803863525
    3. ' (' → logprob: -12.288061141967773
    4. '(input' → logprob: -12.538061141967773
    5. '((' → logprob: -12.913061141967773
    6. '("("' → logprob: -12.913061141967773
    7. '(

' → logprob: -13.538061141967773
    8. '(
' → logprob: -14.038061141967773
    9. '('' → logprob: -14.163061141967773
    10. '(open' → logprob: -14.288061141967773

Token 80: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0022427968215197325
    2. '_val' → logprob: -6.252242565155029
    3. '_' → logprob: -8.377243041992188
    4. ')_' → logprob: -10.002243041992188
    5. '_)' → logprob: -11.002243041992188
    6. '_v' → logprob: -11.752243041992188
    7. ')' → logprob: -11.752243041992188
    8. '_va' → logprob: -12.502243041992188
    9. '_Value' → logprob: -13.877243041992188
    10. 'value' → logprob: -14.502243041992188

Token 81: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '))' → logprob: -14.625000953674316
    3. ' )' → logprob: -16.0
    4. ')`' → logprob: -17.25
    5. ')
' → logprob: -17.875
    6. '`)' → logprob: -18.75
    7. '()' → logprob: -19.25
    8. ')}' → logprob: -20.0
    9. ')**' → logprob: -20.125
    10. '),' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 79
Tokens correctement prédits (1ère position, stricte): 42
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 53.16%
Précision adaptée (1ère position): 53.16%
Précision (top 10): 83.54%
================================================================================
